
tar:     file format elf64-x86-64


Disassembly of section .init:

0000000000009000 <.init>:
    9000:	endbr64 
    9004:	sub    rsp,0x8
    9008:	mov    rax,QWORD PTR [rip+0x72fa9]        # 7bfb8 <__gmon_start__@Base>
    900f:	test   rax,rax
    9012:	je     9016 <free@plt-0xcca>
    9014:	call   rax
    9016:	add    rsp,0x8
    901a:	ret    

Disassembly of section .plt:

0000000000009020 <.plt>:
    9020:	push   QWORD PTR [rip+0x728fa]        # 7b920 <_obstack_memory_used@@Base+0x2eca0>
    9026:	bnd jmp QWORD PTR [rip+0x728fb]        # 7b928 <_obstack_memory_used@@Base+0x2eca8>
    902d:	nop    DWORD PTR [rax]
    9030:	endbr64 
    9034:	push   0x0
    9039:	bnd jmp 9020 <free@plt-0xcc0>
    903f:	nop
    9040:	endbr64 
    9044:	push   0x1
    9049:	bnd jmp 9020 <free@plt-0xcc0>
    904f:	nop
    9050:	endbr64 
    9054:	push   0x2
    9059:	bnd jmp 9020 <free@plt-0xcc0>
    905f:	nop
    9060:	endbr64 
    9064:	push   0x3
    9069:	bnd jmp 9020 <free@plt-0xcc0>
    906f:	nop
    9070:	endbr64 
    9074:	push   0x4
    9079:	bnd jmp 9020 <free@plt-0xcc0>
    907f:	nop
    9080:	endbr64 
    9084:	push   0x5
    9089:	bnd jmp 9020 <free@plt-0xcc0>
    908f:	nop
    9090:	endbr64 
    9094:	push   0x6
    9099:	bnd jmp 9020 <free@plt-0xcc0>
    909f:	nop
    90a0:	endbr64 
    90a4:	push   0x7
    90a9:	bnd jmp 9020 <free@plt-0xcc0>
    90af:	nop
    90b0:	endbr64 
    90b4:	push   0x8
    90b9:	bnd jmp 9020 <free@plt-0xcc0>
    90bf:	nop
    90c0:	endbr64 
    90c4:	push   0x9
    90c9:	bnd jmp 9020 <free@plt-0xcc0>
    90cf:	nop
    90d0:	endbr64 
    90d4:	push   0xa
    90d9:	bnd jmp 9020 <free@plt-0xcc0>
    90df:	nop
    90e0:	endbr64 
    90e4:	push   0xb
    90e9:	bnd jmp 9020 <free@plt-0xcc0>
    90ef:	nop
    90f0:	endbr64 
    90f4:	push   0xc
    90f9:	bnd jmp 9020 <free@plt-0xcc0>
    90ff:	nop
    9100:	endbr64 
    9104:	push   0xd
    9109:	bnd jmp 9020 <free@plt-0xcc0>
    910f:	nop
    9110:	endbr64 
    9114:	push   0xe
    9119:	bnd jmp 9020 <free@plt-0xcc0>
    911f:	nop
    9120:	endbr64 
    9124:	push   0xf
    9129:	bnd jmp 9020 <free@plt-0xcc0>
    912f:	nop
    9130:	endbr64 
    9134:	push   0x10
    9139:	bnd jmp 9020 <free@plt-0xcc0>
    913f:	nop
    9140:	endbr64 
    9144:	push   0x11
    9149:	bnd jmp 9020 <free@plt-0xcc0>
    914f:	nop
    9150:	endbr64 
    9154:	push   0x12
    9159:	bnd jmp 9020 <free@plt-0xcc0>
    915f:	nop
    9160:	endbr64 
    9164:	push   0x13
    9169:	bnd jmp 9020 <free@plt-0xcc0>
    916f:	nop
    9170:	endbr64 
    9174:	push   0x14
    9179:	bnd jmp 9020 <free@plt-0xcc0>
    917f:	nop
    9180:	endbr64 
    9184:	push   0x15
    9189:	bnd jmp 9020 <free@plt-0xcc0>
    918f:	nop
    9190:	endbr64 
    9194:	push   0x16
    9199:	bnd jmp 9020 <free@plt-0xcc0>
    919f:	nop
    91a0:	endbr64 
    91a4:	push   0x17
    91a9:	bnd jmp 9020 <free@plt-0xcc0>
    91af:	nop
    91b0:	endbr64 
    91b4:	push   0x18
    91b9:	bnd jmp 9020 <free@plt-0xcc0>
    91bf:	nop
    91c0:	endbr64 
    91c4:	push   0x19
    91c9:	bnd jmp 9020 <free@plt-0xcc0>
    91cf:	nop
    91d0:	endbr64 
    91d4:	push   0x1a
    91d9:	bnd jmp 9020 <free@plt-0xcc0>
    91df:	nop
    91e0:	endbr64 
    91e4:	push   0x1b
    91e9:	bnd jmp 9020 <free@plt-0xcc0>
    91ef:	nop
    91f0:	endbr64 
    91f4:	push   0x1c
    91f9:	bnd jmp 9020 <free@plt-0xcc0>
    91ff:	nop
    9200:	endbr64 
    9204:	push   0x1d
    9209:	bnd jmp 9020 <free@plt-0xcc0>
    920f:	nop
    9210:	endbr64 
    9214:	push   0x1e
    9219:	bnd jmp 9020 <free@plt-0xcc0>
    921f:	nop
    9220:	endbr64 
    9224:	push   0x1f
    9229:	bnd jmp 9020 <free@plt-0xcc0>
    922f:	nop
    9230:	endbr64 
    9234:	push   0x20
    9239:	bnd jmp 9020 <free@plt-0xcc0>
    923f:	nop
    9240:	endbr64 
    9244:	push   0x21
    9249:	bnd jmp 9020 <free@plt-0xcc0>
    924f:	nop
    9250:	endbr64 
    9254:	push   0x22
    9259:	bnd jmp 9020 <free@plt-0xcc0>
    925f:	nop
    9260:	endbr64 
    9264:	push   0x23
    9269:	bnd jmp 9020 <free@plt-0xcc0>
    926f:	nop
    9270:	endbr64 
    9274:	push   0x24
    9279:	bnd jmp 9020 <free@plt-0xcc0>
    927f:	nop
    9280:	endbr64 
    9284:	push   0x25
    9289:	bnd jmp 9020 <free@plt-0xcc0>
    928f:	nop
    9290:	endbr64 
    9294:	push   0x26
    9299:	bnd jmp 9020 <free@plt-0xcc0>
    929f:	nop
    92a0:	endbr64 
    92a4:	push   0x27
    92a9:	bnd jmp 9020 <free@plt-0xcc0>
    92af:	nop
    92b0:	endbr64 
    92b4:	push   0x28
    92b9:	bnd jmp 9020 <free@plt-0xcc0>
    92bf:	nop
    92c0:	endbr64 
    92c4:	push   0x29
    92c9:	bnd jmp 9020 <free@plt-0xcc0>
    92cf:	nop
    92d0:	endbr64 
    92d4:	push   0x2a
    92d9:	bnd jmp 9020 <free@plt-0xcc0>
    92df:	nop
    92e0:	endbr64 
    92e4:	push   0x2b
    92e9:	bnd jmp 9020 <free@plt-0xcc0>
    92ef:	nop
    92f0:	endbr64 
    92f4:	push   0x2c
    92f9:	bnd jmp 9020 <free@plt-0xcc0>
    92ff:	nop
    9300:	endbr64 
    9304:	push   0x2d
    9309:	bnd jmp 9020 <free@plt-0xcc0>
    930f:	nop
    9310:	endbr64 
    9314:	push   0x2e
    9319:	bnd jmp 9020 <free@plt-0xcc0>
    931f:	nop
    9320:	endbr64 
    9324:	push   0x2f
    9329:	bnd jmp 9020 <free@plt-0xcc0>
    932f:	nop
    9330:	endbr64 
    9334:	push   0x30
    9339:	bnd jmp 9020 <free@plt-0xcc0>
    933f:	nop
    9340:	endbr64 
    9344:	push   0x31
    9349:	bnd jmp 9020 <free@plt-0xcc0>
    934f:	nop
    9350:	endbr64 
    9354:	push   0x32
    9359:	bnd jmp 9020 <free@plt-0xcc0>
    935f:	nop
    9360:	endbr64 
    9364:	push   0x33
    9369:	bnd jmp 9020 <free@plt-0xcc0>
    936f:	nop
    9370:	endbr64 
    9374:	push   0x34
    9379:	bnd jmp 9020 <free@plt-0xcc0>
    937f:	nop
    9380:	endbr64 
    9384:	push   0x35
    9389:	bnd jmp 9020 <free@plt-0xcc0>
    938f:	nop
    9390:	endbr64 
    9394:	push   0x36
    9399:	bnd jmp 9020 <free@plt-0xcc0>
    939f:	nop
    93a0:	endbr64 
    93a4:	push   0x37
    93a9:	bnd jmp 9020 <free@plt-0xcc0>
    93af:	nop
    93b0:	endbr64 
    93b4:	push   0x38
    93b9:	bnd jmp 9020 <free@plt-0xcc0>
    93bf:	nop
    93c0:	endbr64 
    93c4:	push   0x39
    93c9:	bnd jmp 9020 <free@plt-0xcc0>
    93cf:	nop
    93d0:	endbr64 
    93d4:	push   0x3a
    93d9:	bnd jmp 9020 <free@plt-0xcc0>
    93df:	nop
    93e0:	endbr64 
    93e4:	push   0x3b
    93e9:	bnd jmp 9020 <free@plt-0xcc0>
    93ef:	nop
    93f0:	endbr64 
    93f4:	push   0x3c
    93f9:	bnd jmp 9020 <free@plt-0xcc0>
    93ff:	nop
    9400:	endbr64 
    9404:	push   0x3d
    9409:	bnd jmp 9020 <free@plt-0xcc0>
    940f:	nop
    9410:	endbr64 
    9414:	push   0x3e
    9419:	bnd jmp 9020 <free@plt-0xcc0>
    941f:	nop
    9420:	endbr64 
    9424:	push   0x3f
    9429:	bnd jmp 9020 <free@plt-0xcc0>
    942f:	nop
    9430:	endbr64 
    9434:	push   0x40
    9439:	bnd jmp 9020 <free@plt-0xcc0>
    943f:	nop
    9440:	endbr64 
    9444:	push   0x41
    9449:	bnd jmp 9020 <free@plt-0xcc0>
    944f:	nop
    9450:	endbr64 
    9454:	push   0x42
    9459:	bnd jmp 9020 <free@plt-0xcc0>
    945f:	nop
    9460:	endbr64 
    9464:	push   0x43
    9469:	bnd jmp 9020 <free@plt-0xcc0>
    946f:	nop
    9470:	endbr64 
    9474:	push   0x44
    9479:	bnd jmp 9020 <free@plt-0xcc0>
    947f:	nop
    9480:	endbr64 
    9484:	push   0x45
    9489:	bnd jmp 9020 <free@plt-0xcc0>
    948f:	nop
    9490:	endbr64 
    9494:	push   0x46
    9499:	bnd jmp 9020 <free@plt-0xcc0>
    949f:	nop
    94a0:	endbr64 
    94a4:	push   0x47
    94a9:	bnd jmp 9020 <free@plt-0xcc0>
    94af:	nop
    94b0:	endbr64 
    94b4:	push   0x48
    94b9:	bnd jmp 9020 <free@plt-0xcc0>
    94bf:	nop
    94c0:	endbr64 
    94c4:	push   0x49
    94c9:	bnd jmp 9020 <free@plt-0xcc0>
    94cf:	nop
    94d0:	endbr64 
    94d4:	push   0x4a
    94d9:	bnd jmp 9020 <free@plt-0xcc0>
    94df:	nop
    94e0:	endbr64 
    94e4:	push   0x4b
    94e9:	bnd jmp 9020 <free@plt-0xcc0>
    94ef:	nop
    94f0:	endbr64 
    94f4:	push   0x4c
    94f9:	bnd jmp 9020 <free@plt-0xcc0>
    94ff:	nop
    9500:	endbr64 
    9504:	push   0x4d
    9509:	bnd jmp 9020 <free@plt-0xcc0>
    950f:	nop
    9510:	endbr64 
    9514:	push   0x4e
    9519:	bnd jmp 9020 <free@plt-0xcc0>
    951f:	nop
    9520:	endbr64 
    9524:	push   0x4f
    9529:	bnd jmp 9020 <free@plt-0xcc0>
    952f:	nop
    9530:	endbr64 
    9534:	push   0x50
    9539:	bnd jmp 9020 <free@plt-0xcc0>
    953f:	nop
    9540:	endbr64 
    9544:	push   0x51
    9549:	bnd jmp 9020 <free@plt-0xcc0>
    954f:	nop
    9550:	endbr64 
    9554:	push   0x52
    9559:	bnd jmp 9020 <free@plt-0xcc0>
    955f:	nop
    9560:	endbr64 
    9564:	push   0x53
    9569:	bnd jmp 9020 <free@plt-0xcc0>
    956f:	nop
    9570:	endbr64 
    9574:	push   0x54
    9579:	bnd jmp 9020 <free@plt-0xcc0>
    957f:	nop
    9580:	endbr64 
    9584:	push   0x55
    9589:	bnd jmp 9020 <free@plt-0xcc0>
    958f:	nop
    9590:	endbr64 
    9594:	push   0x56
    9599:	bnd jmp 9020 <free@plt-0xcc0>
    959f:	nop
    95a0:	endbr64 
    95a4:	push   0x57
    95a9:	bnd jmp 9020 <free@plt-0xcc0>
    95af:	nop
    95b0:	endbr64 
    95b4:	push   0x58
    95b9:	bnd jmp 9020 <free@plt-0xcc0>
    95bf:	nop
    95c0:	endbr64 
    95c4:	push   0x59
    95c9:	bnd jmp 9020 <free@plt-0xcc0>
    95cf:	nop
    95d0:	endbr64 
    95d4:	push   0x5a
    95d9:	bnd jmp 9020 <free@plt-0xcc0>
    95df:	nop
    95e0:	endbr64 
    95e4:	push   0x5b
    95e9:	bnd jmp 9020 <free@plt-0xcc0>
    95ef:	nop
    95f0:	endbr64 
    95f4:	push   0x5c
    95f9:	bnd jmp 9020 <free@plt-0xcc0>
    95ff:	nop
    9600:	endbr64 
    9604:	push   0x5d
    9609:	bnd jmp 9020 <free@plt-0xcc0>
    960f:	nop
    9610:	endbr64 
    9614:	push   0x5e
    9619:	bnd jmp 9020 <free@plt-0xcc0>
    961f:	nop
    9620:	endbr64 
    9624:	push   0x5f
    9629:	bnd jmp 9020 <free@plt-0xcc0>
    962f:	nop
    9630:	endbr64 
    9634:	push   0x60
    9639:	bnd jmp 9020 <free@plt-0xcc0>
    963f:	nop
    9640:	endbr64 
    9644:	push   0x61
    9649:	bnd jmp 9020 <free@plt-0xcc0>
    964f:	nop
    9650:	endbr64 
    9654:	push   0x62
    9659:	bnd jmp 9020 <free@plt-0xcc0>
    965f:	nop
    9660:	endbr64 
    9664:	push   0x63
    9669:	bnd jmp 9020 <free@plt-0xcc0>
    966f:	nop
    9670:	endbr64 
    9674:	push   0x64
    9679:	bnd jmp 9020 <free@plt-0xcc0>
    967f:	nop
    9680:	endbr64 
    9684:	push   0x65
    9689:	bnd jmp 9020 <free@plt-0xcc0>
    968f:	nop
    9690:	endbr64 
    9694:	push   0x66
    9699:	bnd jmp 9020 <free@plt-0xcc0>
    969f:	nop
    96a0:	endbr64 
    96a4:	push   0x67
    96a9:	bnd jmp 9020 <free@plt-0xcc0>
    96af:	nop
    96b0:	endbr64 
    96b4:	push   0x68
    96b9:	bnd jmp 9020 <free@plt-0xcc0>
    96bf:	nop
    96c0:	endbr64 
    96c4:	push   0x69
    96c9:	bnd jmp 9020 <free@plt-0xcc0>
    96cf:	nop
    96d0:	endbr64 
    96d4:	push   0x6a
    96d9:	bnd jmp 9020 <free@plt-0xcc0>
    96df:	nop
    96e0:	endbr64 
    96e4:	push   0x6b
    96e9:	bnd jmp 9020 <free@plt-0xcc0>
    96ef:	nop
    96f0:	endbr64 
    96f4:	push   0x6c
    96f9:	bnd jmp 9020 <free@plt-0xcc0>
    96ff:	nop
    9700:	endbr64 
    9704:	push   0x6d
    9709:	bnd jmp 9020 <free@plt-0xcc0>
    970f:	nop
    9710:	endbr64 
    9714:	push   0x6e
    9719:	bnd jmp 9020 <free@plt-0xcc0>
    971f:	nop
    9720:	endbr64 
    9724:	push   0x6f
    9729:	bnd jmp 9020 <free@plt-0xcc0>
    972f:	nop
    9730:	endbr64 
    9734:	push   0x70
    9739:	bnd jmp 9020 <free@plt-0xcc0>
    973f:	nop
    9740:	endbr64 
    9744:	push   0x71
    9749:	bnd jmp 9020 <free@plt-0xcc0>
    974f:	nop
    9750:	endbr64 
    9754:	push   0x72
    9759:	bnd jmp 9020 <free@plt-0xcc0>
    975f:	nop
    9760:	endbr64 
    9764:	push   0x73
    9769:	bnd jmp 9020 <free@plt-0xcc0>
    976f:	nop
    9770:	endbr64 
    9774:	push   0x74
    9779:	bnd jmp 9020 <free@plt-0xcc0>
    977f:	nop
    9780:	endbr64 
    9784:	push   0x75
    9789:	bnd jmp 9020 <free@plt-0xcc0>
    978f:	nop
    9790:	endbr64 
    9794:	push   0x76
    9799:	bnd jmp 9020 <free@plt-0xcc0>
    979f:	nop
    97a0:	endbr64 
    97a4:	push   0x77
    97a9:	bnd jmp 9020 <free@plt-0xcc0>
    97af:	nop
    97b0:	endbr64 
    97b4:	push   0x78
    97b9:	bnd jmp 9020 <free@plt-0xcc0>
    97bf:	nop
    97c0:	endbr64 
    97c4:	push   0x79
    97c9:	bnd jmp 9020 <free@plt-0xcc0>
    97cf:	nop
    97d0:	endbr64 
    97d4:	push   0x7a
    97d9:	bnd jmp 9020 <free@plt-0xcc0>
    97df:	nop
    97e0:	endbr64 
    97e4:	push   0x7b
    97e9:	bnd jmp 9020 <free@plt-0xcc0>
    97ef:	nop
    97f0:	endbr64 
    97f4:	push   0x7c
    97f9:	bnd jmp 9020 <free@plt-0xcc0>
    97ff:	nop
    9800:	endbr64 
    9804:	push   0x7d
    9809:	bnd jmp 9020 <free@plt-0xcc0>
    980f:	nop
    9810:	endbr64 
    9814:	push   0x7e
    9819:	bnd jmp 9020 <free@plt-0xcc0>
    981f:	nop
    9820:	endbr64 
    9824:	push   0x7f
    9829:	bnd jmp 9020 <free@plt-0xcc0>
    982f:	nop
    9830:	endbr64 
    9834:	push   0x80
    9839:	bnd jmp 9020 <free@plt-0xcc0>
    983f:	nop
    9840:	endbr64 
    9844:	push   0x81
    9849:	bnd jmp 9020 <free@plt-0xcc0>
    984f:	nop
    9850:	endbr64 
    9854:	push   0x82
    9859:	bnd jmp 9020 <free@plt-0xcc0>
    985f:	nop
    9860:	endbr64 
    9864:	push   0x83
    9869:	bnd jmp 9020 <free@plt-0xcc0>
    986f:	nop
    9870:	endbr64 
    9874:	push   0x84
    9879:	bnd jmp 9020 <free@plt-0xcc0>
    987f:	nop
    9880:	endbr64 
    9884:	push   0x85
    9889:	bnd jmp 9020 <free@plt-0xcc0>
    988f:	nop
    9890:	endbr64 
    9894:	push   0x86
    9899:	bnd jmp 9020 <free@plt-0xcc0>
    989f:	nop
    98a0:	endbr64 
    98a4:	push   0x87
    98a9:	bnd jmp 9020 <free@plt-0xcc0>
    98af:	nop
    98b0:	endbr64 
    98b4:	push   0x88
    98b9:	bnd jmp 9020 <free@plt-0xcc0>
    98bf:	nop
    98c0:	endbr64 
    98c4:	push   0x89
    98c9:	bnd jmp 9020 <free@plt-0xcc0>
    98cf:	nop
    98d0:	endbr64 
    98d4:	push   0x8a
    98d9:	bnd jmp 9020 <free@plt-0xcc0>
    98df:	nop
    98e0:	endbr64 
    98e4:	push   0x8b
    98e9:	bnd jmp 9020 <free@plt-0xcc0>
    98ef:	nop
    98f0:	endbr64 
    98f4:	push   0x8c
    98f9:	bnd jmp 9020 <free@plt-0xcc0>
    98ff:	nop
    9900:	endbr64 
    9904:	push   0x8d
    9909:	bnd jmp 9020 <free@plt-0xcc0>
    990f:	nop
    9910:	endbr64 
    9914:	push   0x8e
    9919:	bnd jmp 9020 <free@plt-0xcc0>
    991f:	nop
    9920:	endbr64 
    9924:	push   0x8f
    9929:	bnd jmp 9020 <free@plt-0xcc0>
    992f:	nop
    9930:	endbr64 
    9934:	push   0x90
    9939:	bnd jmp 9020 <free@plt-0xcc0>
    993f:	nop
    9940:	endbr64 
    9944:	push   0x91
    9949:	bnd jmp 9020 <free@plt-0xcc0>
    994f:	nop
    9950:	endbr64 
    9954:	push   0x92
    9959:	bnd jmp 9020 <free@plt-0xcc0>
    995f:	nop
    9960:	endbr64 
    9964:	push   0x93
    9969:	bnd jmp 9020 <free@plt-0xcc0>
    996f:	nop
    9970:	endbr64 
    9974:	push   0x94
    9979:	bnd jmp 9020 <free@plt-0xcc0>
    997f:	nop
    9980:	endbr64 
    9984:	push   0x95
    9989:	bnd jmp 9020 <free@plt-0xcc0>
    998f:	nop
    9990:	endbr64 
    9994:	push   0x96
    9999:	bnd jmp 9020 <free@plt-0xcc0>
    999f:	nop
    99a0:	endbr64 
    99a4:	push   0x97
    99a9:	bnd jmp 9020 <free@plt-0xcc0>
    99af:	nop
    99b0:	endbr64 
    99b4:	push   0x98
    99b9:	bnd jmp 9020 <free@plt-0xcc0>
    99bf:	nop
    99c0:	endbr64 
    99c4:	push   0x99
    99c9:	bnd jmp 9020 <free@plt-0xcc0>
    99cf:	nop
    99d0:	endbr64 
    99d4:	push   0x9a
    99d9:	bnd jmp 9020 <free@plt-0xcc0>
    99df:	nop
    99e0:	endbr64 
    99e4:	push   0x9b
    99e9:	bnd jmp 9020 <free@plt-0xcc0>
    99ef:	nop
    99f0:	endbr64 
    99f4:	push   0x9c
    99f9:	bnd jmp 9020 <free@plt-0xcc0>
    99ff:	nop
    9a00:	endbr64 
    9a04:	push   0x9d
    9a09:	bnd jmp 9020 <free@plt-0xcc0>
    9a0f:	nop
    9a10:	endbr64 
    9a14:	push   0x9e
    9a19:	bnd jmp 9020 <free@plt-0xcc0>
    9a1f:	nop
    9a20:	endbr64 
    9a24:	push   0x9f
    9a29:	bnd jmp 9020 <free@plt-0xcc0>
    9a2f:	nop
    9a30:	endbr64 
    9a34:	push   0xa0
    9a39:	bnd jmp 9020 <free@plt-0xcc0>
    9a3f:	nop
    9a40:	endbr64 
    9a44:	push   0xa1
    9a49:	bnd jmp 9020 <free@plt-0xcc0>
    9a4f:	nop
    9a50:	endbr64 
    9a54:	push   0xa2
    9a59:	bnd jmp 9020 <free@plt-0xcc0>
    9a5f:	nop
    9a60:	endbr64 
    9a64:	push   0xa3
    9a69:	bnd jmp 9020 <free@plt-0xcc0>
    9a6f:	nop
    9a70:	endbr64 
    9a74:	push   0xa4
    9a79:	bnd jmp 9020 <free@plt-0xcc0>
    9a7f:	nop
    9a80:	endbr64 
    9a84:	push   0xa5
    9a89:	bnd jmp 9020 <free@plt-0xcc0>
    9a8f:	nop
    9a90:	endbr64 
    9a94:	push   0xa6
    9a99:	bnd jmp 9020 <free@plt-0xcc0>
    9a9f:	nop
    9aa0:	endbr64 
    9aa4:	push   0xa7
    9aa9:	bnd jmp 9020 <free@plt-0xcc0>
    9aaf:	nop
    9ab0:	endbr64 
    9ab4:	push   0xa8
    9ab9:	bnd jmp 9020 <free@plt-0xcc0>
    9abf:	nop
    9ac0:	endbr64 
    9ac4:	push   0xa9
    9ac9:	bnd jmp 9020 <free@plt-0xcc0>
    9acf:	nop
    9ad0:	endbr64 
    9ad4:	push   0xaa
    9ad9:	bnd jmp 9020 <free@plt-0xcc0>
    9adf:	nop
    9ae0:	endbr64 
    9ae4:	push   0xab
    9ae9:	bnd jmp 9020 <free@plt-0xcc0>
    9aef:	nop
    9af0:	endbr64 
    9af4:	push   0xac
    9af9:	bnd jmp 9020 <free@plt-0xcc0>
    9aff:	nop
    9b00:	endbr64 
    9b04:	push   0xad
    9b09:	bnd jmp 9020 <free@plt-0xcc0>
    9b0f:	nop
    9b10:	endbr64 
    9b14:	push   0xae
    9b19:	bnd jmp 9020 <free@plt-0xcc0>
    9b1f:	nop
    9b20:	endbr64 
    9b24:	push   0xaf
    9b29:	bnd jmp 9020 <free@plt-0xcc0>
    9b2f:	nop
    9b30:	endbr64 
    9b34:	push   0xb0
    9b39:	bnd jmp 9020 <free@plt-0xcc0>
    9b3f:	nop
    9b40:	endbr64 
    9b44:	push   0xb1
    9b49:	bnd jmp 9020 <free@plt-0xcc0>
    9b4f:	nop
    9b50:	endbr64 
    9b54:	push   0xb2
    9b59:	bnd jmp 9020 <free@plt-0xcc0>
    9b5f:	nop
    9b60:	endbr64 
    9b64:	push   0xb3
    9b69:	bnd jmp 9020 <free@plt-0xcc0>
    9b6f:	nop
    9b70:	endbr64 
    9b74:	push   0xb4
    9b79:	bnd jmp 9020 <free@plt-0xcc0>
    9b7f:	nop
    9b80:	endbr64 
    9b84:	push   0xb5
    9b89:	bnd jmp 9020 <free@plt-0xcc0>
    9b8f:	nop
    9b90:	endbr64 
    9b94:	push   0xb6
    9b99:	bnd jmp 9020 <free@plt-0xcc0>
    9b9f:	nop
    9ba0:	endbr64 
    9ba4:	push   0xb7
    9ba9:	bnd jmp 9020 <free@plt-0xcc0>
    9baf:	nop
    9bb0:	endbr64 
    9bb4:	push   0xb8
    9bb9:	bnd jmp 9020 <free@plt-0xcc0>
    9bbf:	nop
    9bc0:	endbr64 
    9bc4:	push   0xb9
    9bc9:	bnd jmp 9020 <free@plt-0xcc0>
    9bcf:	nop
    9bd0:	endbr64 
    9bd4:	push   0xba
    9bd9:	bnd jmp 9020 <free@plt-0xcc0>
    9bdf:	nop
    9be0:	endbr64 
    9be4:	push   0xbb
    9be9:	bnd jmp 9020 <free@plt-0xcc0>
    9bef:	nop
    9bf0:	endbr64 
    9bf4:	push   0xbc
    9bf9:	bnd jmp 9020 <free@plt-0xcc0>
    9bff:	nop
    9c00:	endbr64 
    9c04:	push   0xbd
    9c09:	bnd jmp 9020 <free@plt-0xcc0>
    9c0f:	nop
    9c10:	endbr64 
    9c14:	push   0xbe
    9c19:	bnd jmp 9020 <free@plt-0xcc0>
    9c1f:	nop
    9c20:	endbr64 
    9c24:	push   0xbf
    9c29:	bnd jmp 9020 <free@plt-0xcc0>
    9c2f:	nop
    9c30:	endbr64 
    9c34:	push   0xc0
    9c39:	bnd jmp 9020 <free@plt-0xcc0>
    9c3f:	nop
    9c40:	endbr64 
    9c44:	push   0xc1
    9c49:	bnd jmp 9020 <free@plt-0xcc0>
    9c4f:	nop
    9c50:	endbr64 
    9c54:	push   0xc2
    9c59:	bnd jmp 9020 <free@plt-0xcc0>
    9c5f:	nop
    9c60:	endbr64 
    9c64:	push   0xc3
    9c69:	bnd jmp 9020 <free@plt-0xcc0>
    9c6f:	nop
    9c70:	endbr64 
    9c74:	push   0xc4
    9c79:	bnd jmp 9020 <free@plt-0xcc0>
    9c7f:	nop
    9c80:	endbr64 
    9c84:	push   0xc5
    9c89:	bnd jmp 9020 <free@plt-0xcc0>
    9c8f:	nop
    9c90:	endbr64 
    9c94:	push   0xc6
    9c99:	bnd jmp 9020 <free@plt-0xcc0>
    9c9f:	nop
    9ca0:	endbr64 
    9ca4:	push   0xc7
    9ca9:	bnd jmp 9020 <free@plt-0xcc0>
    9caf:	nop
    9cb0:	endbr64 
    9cb4:	push   0xc8
    9cb9:	bnd jmp 9020 <free@plt-0xcc0>
    9cbf:	nop
    9cc0:	endbr64 
    9cc4:	push   0xc9
    9cc9:	bnd jmp 9020 <free@plt-0xcc0>
    9ccf:	nop
    9cd0:	endbr64 
    9cd4:	push   0xca
    9cd9:	bnd jmp 9020 <free@plt-0xcc0>
    9cdf:	nop

Disassembly of section .plt.got:

0000000000009ce0 <free@plt>:
    9ce0:	endbr64 
    9ce4:	bnd jmp QWORD PTR [rip+0x7229d]        # 7bf88 <free@GLIBC_2.2.5>
    9ceb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009cf0 <fnmatch@plt>:
    9cf0:	endbr64 
    9cf4:	bnd jmp QWORD PTR [rip+0x722b5]        # 7bfb0 <fnmatch@GLIBC_2.2.5>
    9cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d00 <__cxa_finalize@plt>:
    9d00:	endbr64 
    9d04:	bnd jmp QWORD PTR [rip+0x722d5]        # 7bfe0 <__cxa_finalize@GLIBC_2.2.5>
    9d0b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000009d10 <__ctype_toupper_loc@plt>:
    9d10:	endbr64 
    9d14:	bnd jmp QWORD PTR [rip+0x71c15]        # 7b930 <__ctype_toupper_loc@GLIBC_2.3>
    9d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d20 <__strcat_chk@plt>:
    9d20:	endbr64 
    9d24:	bnd jmp QWORD PTR [rip+0x71c0d]        # 7b938 <__strcat_chk@GLIBC_2.3.4>
    9d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d30 <__uflow@plt>:
    9d30:	endbr64 
    9d34:	bnd jmp QWORD PTR [rip+0x71c05]        # 7b940 <__uflow@GLIBC_2.2.5>
    9d3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d40 <getenv@plt>:
    9d40:	endbr64 
    9d44:	bnd jmp QWORD PTR [rip+0x71bfd]        # 7b948 <getenv@GLIBC_2.2.5>
    9d4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d50 <fgetfilecon@plt>:
    9d50:	endbr64 
    9d54:	bnd jmp QWORD PTR [rip+0x71bf5]        # 7b950 <fgetfilecon@LIBSELINUX_1.0>
    9d5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d60 <globfree@plt>:
    9d60:	endbr64 
    9d64:	bnd jmp QWORD PTR [rip+0x71bed]        # 7b958 <globfree@GLIBC_2.2.5>
    9d6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d70 <setfilecon@plt>:
    9d70:	endbr64 
    9d74:	bnd jmp QWORD PTR [rip+0x71be5]        # 7b960 <setfilecon@LIBSELINUX_1.0>
    9d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d80 <sigprocmask@plt>:
    9d80:	endbr64 
    9d84:	bnd jmp QWORD PTR [rip+0x71bdd]        # 7b968 <sigprocmask@GLIBC_2.2.5>
    9d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009d90 <__snprintf_chk@plt>:
    9d90:	endbr64 
    9d94:	bnd jmp QWORD PTR [rip+0x71bd5]        # 7b970 <__snprintf_chk@GLIBC_2.3.4>
    9d9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009da0 <raise@plt>:
    9da0:	endbr64 
    9da4:	bnd jmp QWORD PTR [rip+0x71bcd]        # 7b978 <raise@GLIBC_2.2.5>
    9dab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009db0 <mkfifoat@plt>:
    9db0:	endbr64 
    9db4:	bnd jmp QWORD PTR [rip+0x71bc5]        # 7b980 <mkfifoat@GLIBC_2.4>
    9dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009dc0 <strtoimax@plt>:
    9dc0:	endbr64 
    9dc4:	bnd jmp QWORD PTR [rip+0x71bbd]        # 7b988 <strtoimax@GLIBC_2.2.5>
    9dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009dd0 <utimensat@plt>:
    9dd0:	endbr64 
    9dd4:	bnd jmp QWORD PTR [rip+0x71bb5]        # 7b990 <utimensat@GLIBC_2.6>
    9ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009de0 <putchar@plt>:
    9de0:	endbr64 
    9de4:	bnd jmp QWORD PTR [rip+0x71bad]        # 7b998 <putchar@GLIBC_2.2.5>
    9deb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009df0 <funlockfile@plt>:
    9df0:	endbr64 
    9df4:	bnd jmp QWORD PTR [rip+0x71ba5]        # 7b9a0 <funlockfile@GLIBC_2.2.5>
    9dfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e00 <strcasecmp@plt>:
    9e00:	endbr64 
    9e04:	bnd jmp QWORD PTR [rip+0x71b9d]        # 7b9a8 <strcasecmp@GLIBC_2.2.5>
    9e0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e10 <localtime@plt>:
    9e10:	endbr64 
    9e14:	bnd jmp QWORD PTR [rip+0x71b95]        # 7b9b0 <localtime@GLIBC_2.2.5>
    9e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e20 <__vfprintf_chk@plt>:
    9e20:	endbr64 
    9e24:	bnd jmp QWORD PTR [rip+0x71b8d]        # 7b9b8 <__vfprintf_chk@GLIBC_2.3.4>
    9e2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e30 <abort@plt>:
    9e30:	endbr64 
    9e34:	bnd jmp QWORD PTR [rip+0x71b85]        # 7b9c0 <abort@GLIBC_2.2.5>
    9e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e40 <__errno_location@plt>:
    9e40:	endbr64 
    9e44:	bnd jmp QWORD PTR [rip+0x71b7d]        # 7b9c8 <__errno_location@GLIBC_2.2.5>
    9e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e50 <strncmp@plt>:
    9e50:	endbr64 
    9e54:	bnd jmp QWORD PTR [rip+0x71b75]        # 7b9d0 <strncmp@GLIBC_2.2.5>
    9e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e60 <localtime_r@plt>:
    9e60:	endbr64 
    9e64:	bnd jmp QWORD PTR [rip+0x71b6d]        # 7b9d8 <localtime_r@GLIBC_2.2.5>
    9e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e70 <_exit@plt>:
    9e70:	endbr64 
    9e74:	bnd jmp QWORD PTR [rip+0x71b65]        # 7b9e0 <_exit@GLIBC_2.2.5>
    9e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e80 <strcpy@plt>:
    9e80:	endbr64 
    9e84:	bnd jmp QWORD PTR [rip+0x71b5d]        # 7b9e8 <strcpy@GLIBC_2.2.5>
    9e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009e90 <ftello@plt>:
    9e90:	endbr64 
    9e94:	bnd jmp QWORD PTR [rip+0x71b55]        # 7b9f0 <ftello@GLIBC_2.2.5>
    9e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009ea0 <__isoc99_fscanf@plt>:
    9ea0:	endbr64 
    9ea4:	bnd jmp QWORD PTR [rip+0x71b4d]        # 7b9f8 <__isoc99_fscanf@GLIBC_2.7>
    9eab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009eb0 <__fpending@plt>:
    9eb0:	endbr64 
    9eb4:	bnd jmp QWORD PTR [rip+0x71b45]        # 7ba00 <__fpending@GLIBC_2.2.5>
    9ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009ec0 <flistxattr@plt>:
    9ec0:	endbr64 
    9ec4:	bnd jmp QWORD PTR [rip+0x71b3d]        # 7ba08 <flistxattr@GLIBC_2.3>
    9ecb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009ed0 <iconv@plt>:
    9ed0:	endbr64 
    9ed4:	bnd jmp QWORD PTR [rip+0x71b35]        # 7ba10 <iconv@GLIBC_2.2.5>
    9edb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009ee0 <unlinkat@plt>:
    9ee0:	endbr64 
    9ee4:	bnd jmp QWORD PTR [rip+0x71b2d]        # 7ba18 <unlinkat@GLIBC_2.4>
    9eeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009ef0 <puts@plt>:
    9ef0:	endbr64 
    9ef4:	bnd jmp QWORD PTR [rip+0x71b25]        # 7ba20 <puts@GLIBC_2.2.5>
    9efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f00 <qsort@plt>:
    9f00:	endbr64 
    9f04:	bnd jmp QWORD PTR [rip+0x71b1d]        # 7ba28 <qsort@GLIBC_2.2.5>
    9f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f10 <isatty@plt>:
    9f10:	endbr64 
    9f14:	bnd jmp QWORD PTR [rip+0x71b15]        # 7ba30 <isatty@GLIBC_2.2.5>
    9f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f20 <strchrnul@plt>:
    9f20:	endbr64 
    9f24:	bnd jmp QWORD PTR [rip+0x71b0d]        # 7ba38 <strchrnul@GLIBC_2.2.5>
    9f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f30 <localeconv@plt>:
    9f30:	endbr64 
    9f34:	bnd jmp QWORD PTR [rip+0x71b05]        # 7ba40 <localeconv@GLIBC_2.2.5>
    9f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f40 <llistxattr@plt>:
    9f40:	endbr64 
    9f44:	bnd jmp QWORD PTR [rip+0x71afd]        # 7ba48 <llistxattr@GLIBC_2.3>
    9f4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f50 <faccessat@plt>:
    9f50:	endbr64 
    9f54:	bnd jmp QWORD PTR [rip+0x71af5]        # 7ba50 <faccessat@GLIBC_2.4>
    9f5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f60 <fcntl@plt>:
    9f60:	endbr64 
    9f64:	bnd jmp QWORD PTR [rip+0x71aed]        # 7ba58 <fcntl@GLIBC_2.2.5>
    9f6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f70 <clock_gettime@plt>:
    9f70:	endbr64 
    9f74:	bnd jmp QWORD PTR [rip+0x71ae5]        # 7ba60 <clock_gettime@GLIBC_2.17>
    9f7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f80 <setenv@plt>:
    9f80:	endbr64 
    9f84:	bnd jmp QWORD PTR [rip+0x71add]        # 7ba68 <setenv@GLIBC_2.2.5>
    9f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f90 <write@plt>:
    9f90:	endbr64 
    9f94:	bnd jmp QWORD PTR [rip+0x71ad5]        # 7ba70 <write@GLIBC_2.2.5>
    9f9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009fa0 <getpid@plt>:
    9fa0:	endbr64 
    9fa4:	bnd jmp QWORD PTR [rip+0x71acd]        # 7ba78 <getpid@GLIBC_2.2.5>
    9fab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009fb0 <textdomain@plt>:
    9fb0:	endbr64 
    9fb4:	bnd jmp QWORD PTR [rip+0x71ac5]        # 7ba80 <textdomain@GLIBC_2.2.5>
    9fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009fc0 <pathconf@plt>:
    9fc0:	endbr64 
    9fc4:	bnd jmp QWORD PTR [rip+0x71abd]        # 7ba88 <pathconf@GLIBC_2.2.5>
    9fcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009fd0 <iswctype@plt>:
    9fd0:	endbr64 
    9fd4:	bnd jmp QWORD PTR [rip+0x71ab5]        # 7ba90 <iswctype@GLIBC_2.2.5>
    9fdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009fe0 <__open_2@plt>:
    9fe0:	endbr64 
    9fe4:	bnd jmp QWORD PTR [rip+0x71aad]        # 7ba98 <__open_2@GLIBC_2.7>
    9feb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009ff0 <fclose@plt>:
    9ff0:	endbr64 
    9ff4:	bnd jmp QWORD PTR [rip+0x71aa5]        # 7baa0 <fclose@GLIBC_2.2.5>
    9ffb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a000 <lgetxattr@plt>:
    a000:	endbr64 
    a004:	bnd jmp QWORD PTR [rip+0x71a9d]        # 7baa8 <lgetxattr@GLIBC_2.3>
    a00b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a010 <getpwuid@plt>:
    a010:	endbr64 
    a014:	bnd jmp QWORD PTR [rip+0x71a95]        # 7bab0 <getpwuid@GLIBC_2.2.5>
    a01b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a020 <bindtextdomain@plt>:
    a020:	endbr64 
    a024:	bnd jmp QWORD PTR [rip+0x71a8d]        # 7bab8 <bindtextdomain@GLIBC_2.2.5>
    a02b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a030 <stpcpy@plt>:
    a030:	endbr64 
    a034:	bnd jmp QWORD PTR [rip+0x71a85]        # 7bac0 <stpcpy@GLIBC_2.2.5>
    a03b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a040 <dcgettext@plt>:
    a040:	endbr64 
    a044:	bnd jmp QWORD PTR [rip+0x71a7d]        # 7bac8 <dcgettext@GLIBC_2.2.5>
    a04b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a050 <__ctype_get_mb_cur_max@plt>:
    a050:	endbr64 
    a054:	bnd jmp QWORD PTR [rip+0x71a75]        # 7bad0 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    a05b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a060 <strlen@plt>:
    a060:	endbr64 
    a064:	bnd jmp QWORD PTR [rip+0x71a6d]        # 7bad8 <strlen@GLIBC_2.2.5>
    a06b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a070 <acl_delete_def_file@plt>:
    a070:	endbr64 
    a074:	bnd jmp QWORD PTR [rip+0x71a65]        # 7bae0 <acl_delete_def_file@ACL_1.0>
    a07b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a080 <openat@plt>:
    a080:	endbr64 
    a084:	bnd jmp QWORD PTR [rip+0x71a5d]        # 7bae8 <openat@GLIBC_2.4>
    a08b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a090 <chdir@plt>:
    a090:	endbr64 
    a094:	bnd jmp QWORD PTR [rip+0x71a55]        # 7baf0 <chdir@GLIBC_2.2.5>
    a09b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a0a0 <__stack_chk_fail@plt>:
    a0a0:	endbr64 
    a0a4:	bnd jmp QWORD PTR [rip+0x71a4d]        # 7baf8 <__stack_chk_fail@GLIBC_2.4>
    a0ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a0b0 <getuid@plt>:
    a0b0:	endbr64 
    a0b4:	bnd jmp QWORD PTR [rip+0x71a45]        # 7bb00 <getuid@GLIBC_2.2.5>
    a0bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a0c0 <mbrtowc@plt>:
    a0c0:	endbr64 
    a0c4:	bnd jmp QWORD PTR [rip+0x71a3d]        # 7bb08 <mbrtowc@GLIBC_2.2.5>
    a0cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a0d0 <dup2@plt>:
    a0d0:	endbr64 
    a0d4:	bnd jmp QWORD PTR [rip+0x71a35]        # 7bb10 <dup2@GLIBC_2.2.5>
    a0db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a0e0 <freecon@plt>:
    a0e0:	endbr64 
    a0e4:	bnd jmp QWORD PTR [rip+0x71a2d]        # 7bb18 <freecon@LIBSELINUX_1.0>
    a0eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a0f0 <strchr@plt>:
    a0f0:	endbr64 
    a0f4:	bnd jmp QWORD PTR [rip+0x71a25]        # 7bb20 <strchr@GLIBC_2.2.5>
    a0fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a100 <getgrgid@plt>:
    a100:	endbr64 
    a104:	bnd jmp QWORD PTR [rip+0x71a1d]        # 7bb28 <getgrgid@GLIBC_2.2.5>
    a10b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a110 <snprintf@plt>:
    a110:	endbr64 
    a114:	bnd jmp QWORD PTR [rip+0x71a15]        # 7bb30 <snprintf@GLIBC_2.2.5>
    a11b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a120 <__overflow@plt>:
    a120:	endbr64 
    a124:	bnd jmp QWORD PTR [rip+0x71a0d]        # 7bb38 <__overflow@GLIBC_2.2.5>
    a12b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a130 <strrchr@plt>:
    a130:	endbr64 
    a134:	bnd jmp QWORD PTR [rip+0x71a05]        # 7bb40 <strrchr@GLIBC_2.2.5>
    a13b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a140 <ftruncate@plt>:
    a140:	endbr64 
    a144:	bnd jmp QWORD PTR [rip+0x719fd]        # 7bb48 <ftruncate@GLIBC_2.2.5>
    a14b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a150 <gmtime_r@plt>:
    a150:	endbr64 
    a154:	bnd jmp QWORD PTR [rip+0x719f5]        # 7bb50 <gmtime_r@GLIBC_2.2.5>
    a15b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a160 <dup@plt>:
    a160:	endbr64 
    a164:	bnd jmp QWORD PTR [rip+0x719ed]        # 7bb58 <dup@GLIBC_2.2.5>
    a16b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a170 <lseek@plt>:
    a170:	endbr64 
    a174:	bnd jmp QWORD PTR [rip+0x719e5]        # 7bb60 <lseek@GLIBC_2.2.5>
    a17b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a180 <gettimeofday@plt>:
    a180:	endbr64 
    a184:	bnd jmp QWORD PTR [rip+0x719dd]        # 7bb68 <gettimeofday@GLIBC_2.2.5>
    a18b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a190 <__assert_fail@plt>:
    a190:	endbr64 
    a194:	bnd jmp QWORD PTR [rip+0x719d5]        # 7bb70 <__assert_fail@GLIBC_2.2.5>
    a19b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a1a0 <fputs@plt>:
    a1a0:	endbr64 
    a1a4:	bnd jmp QWORD PTR [rip+0x719cd]        # 7bb78 <fputs@GLIBC_2.2.5>
    a1ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a1b0 <memset@plt>:
    a1b0:	endbr64 
    a1b4:	bnd jmp QWORD PTR [rip+0x719c5]        # 7bb80 <memset@GLIBC_2.2.5>
    a1bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a1c0 <geteuid@plt>:
    a1c0:	endbr64 
    a1c4:	bnd jmp QWORD PTR [rip+0x719bd]        # 7bb88 <geteuid@GLIBC_2.2.5>
    a1cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a1d0 <ioctl@plt>:
    a1d0:	endbr64 
    a1d4:	bnd jmp QWORD PTR [rip+0x719b5]        # 7bb90 <ioctl@GLIBC_2.2.5>
    a1db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a1e0 <strnlen@plt>:
    a1e0:	endbr64 
    a1e4:	bnd jmp QWORD PTR [rip+0x719ad]        # 7bb98 <strnlen@GLIBC_2.2.5>
    a1eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a1f0 <getcwd@plt>:
    a1f0:	endbr64 
    a1f4:	bnd jmp QWORD PTR [rip+0x719a5]        # 7bba0 <getcwd@GLIBC_2.2.5>
    a1fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a200 <close@plt>:
    a200:	endbr64 
    a204:	bnd jmp QWORD PTR [rip+0x7199d]        # 7bba8 <close@GLIBC_2.2.5>
    a20b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a210 <pipe@plt>:
    a210:	endbr64 
    a214:	bnd jmp QWORD PTR [rip+0x71995]        # 7bbb0 <pipe@GLIBC_2.2.5>
    a21b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a220 <flockfile@plt>:
    a220:	endbr64 
    a224:	bnd jmp QWORD PTR [rip+0x7198d]        # 7bbb8 <flockfile@GLIBC_2.2.5>
    a22b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a230 <__openat_2@plt>:
    a230:	endbr64 
    a234:	bnd jmp QWORD PTR [rip+0x71985]        # 7bbc0 <__openat_2@GLIBC_2.7>
    a23b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a240 <strspn@plt>:
    a240:	endbr64 
    a244:	bnd jmp QWORD PTR [rip+0x7197d]        # 7bbc8 <strspn@GLIBC_2.2.5>
    a24b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a250 <closedir@plt>:
    a250:	endbr64 
    a254:	bnd jmp QWORD PTR [rip+0x71975]        # 7bbd0 <closedir@GLIBC_2.2.5>
    a25b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a260 <fputc@plt>:
    a260:	endbr64 
    a264:	bnd jmp QWORD PTR [rip+0x7196d]        # 7bbd8 <fputc@GLIBC_2.2.5>
    a26b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a270 <strcspn@plt>:
    a270:	endbr64 
    a274:	bnd jmp QWORD PTR [rip+0x71965]        # 7bbe0 <strcspn@GLIBC_2.2.5>
    a27b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a280 <memchr@plt>:
    a280:	endbr64 
    a284:	bnd jmp QWORD PTR [rip+0x7195d]        # 7bbe8 <memchr@GLIBC_2.2.5>
    a28b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a290 <lsetfilecon@plt>:
    a290:	endbr64 
    a294:	bnd jmp QWORD PTR [rip+0x71955]        # 7bbf0 <lsetfilecon@LIBSELINUX_1.0>
    a29b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a2a0 <read@plt>:
    a2a0:	endbr64 
    a2a4:	bnd jmp QWORD PTR [rip+0x7194d]        # 7bbf8 <read@GLIBC_2.2.5>
    a2ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a2b0 <strndup@plt>:
    a2b0:	endbr64 
    a2b4:	bnd jmp QWORD PTR [rip+0x71945]        # 7bc00 <strndup@GLIBC_2.2.5>
    a2bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a2c0 <memcmp@plt>:
    a2c0:	endbr64 
    a2c4:	bnd jmp QWORD PTR [rip+0x7193d]        # 7bc08 <memcmp@GLIBC_2.2.5>
    a2cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a2d0 <wctype@plt>:
    a2d0:	endbr64 
    a2d4:	bnd jmp QWORD PTR [rip+0x71935]        # 7bc10 <wctype@GLIBC_2.2.5>
    a2db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a2e0 <fputs_unlocked@plt>:
    a2e0:	endbr64 
    a2e4:	bnd jmp QWORD PTR [rip+0x7192d]        # 7bc18 <fputs_unlocked@GLIBC_2.2.5>
    a2eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a2f0 <calloc@plt>:
    a2f0:	endbr64 
    a2f4:	bnd jmp QWORD PTR [rip+0x71925]        # 7bc20 <calloc@GLIBC_2.2.5>
    a2fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a300 <acl_set_file@plt>:
    a300:	endbr64 
    a304:	bnd jmp QWORD PTR [rip+0x7191d]        # 7bc28 <acl_set_file@ACL_1.0>
    a30b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a310 <__getdelim@plt>:
    a310:	endbr64 
    a314:	bnd jmp QWORD PTR [rip+0x71915]        # 7bc30 <__getdelim@GLIBC_2.2.5>
    a31b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a320 <strcmp@plt>:
    a320:	endbr64 
    a324:	bnd jmp QWORD PTR [rip+0x7190d]        # 7bc38 <strcmp@GLIBC_2.2.5>
    a32b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a330 <signal@plt>:
    a330:	endbr64 
    a334:	bnd jmp QWORD PTR [rip+0x71905]        # 7bc40 <signal@GLIBC_2.2.5>
    a33b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a340 <readlinkat@plt>:
    a340:	endbr64 
    a344:	bnd jmp QWORD PTR [rip+0x718fd]        # 7bc48 <readlinkat@GLIBC_2.4>
    a34b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a350 <fputc_unlocked@plt>:
    a350:	endbr64 
    a354:	bnd jmp QWORD PTR [rip+0x718f5]        # 7bc50 <fputc_unlocked@GLIBC_2.2.5>
    a35b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a360 <getpwnam@plt>:
    a360:	endbr64 
    a364:	bnd jmp QWORD PTR [rip+0x718ed]        # 7bc58 <getpwnam@GLIBC_2.2.5>
    a36b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a370 <gethostbyname@plt>:
    a370:	endbr64 
    a374:	bnd jmp QWORD PTR [rip+0x718e5]        # 7bc60 <gethostbyname@GLIBC_2.2.5>
    a37b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a380 <fpathconf@plt>:
    a380:	endbr64 
    a384:	bnd jmp QWORD PTR [rip+0x718dd]        # 7bc68 <fpathconf@GLIBC_2.2.5>
    a38b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a390 <__memcpy_chk@plt>:
    a390:	endbr64 
    a394:	bnd jmp QWORD PTR [rip+0x718d5]        # 7bc70 <__memcpy_chk@GLIBC_2.3.4>
    a39b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a3a0 <mknodat@plt>:
    a3a0:	endbr64 
    a3a4:	bnd jmp QWORD PTR [rip+0x718cd]        # 7bc78 <mknodat@GLIBC_2.33>
    a3ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a3b0 <rpmatch@plt>:
    a3b0:	endbr64 
    a3b4:	bnd jmp QWORD PTR [rip+0x718c5]        # 7bc80 <rpmatch@GLIBC_2.2.5>
    a3bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a3c0 <sigemptyset@plt>:
    a3c0:	endbr64 
    a3c4:	bnd jmp QWORD PTR [rip+0x718bd]        # 7bc88 <sigemptyset@GLIBC_2.2.5>
    a3cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a3d0 <mkdirat@plt>:
    a3d0:	endbr64 
    a3d4:	bnd jmp QWORD PTR [rip+0x718b5]        # 7bc90 <mkdirat@GLIBC_2.4>
    a3db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a3e0 <acl_to_text@plt>:
    a3e0:	endbr64 
    a3e4:	bnd jmp QWORD PTR [rip+0x718ad]        # 7bc98 <acl_to_text@ACL_1.0>
    a3eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a3f0 <umask@plt>:
    a3f0:	endbr64 
    a3f4:	bnd jmp QWORD PTR [rip+0x718a5]        # 7bca0 <umask@GLIBC_2.2.5>
    a3fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a400 <stat@plt>:
    a400:	endbr64 
    a404:	bnd jmp QWORD PTR [rip+0x7189d]        # 7bca8 <stat@GLIBC_2.33>
    a40b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a410 <strtol@plt>:
    a410:	endbr64 
    a414:	bnd jmp QWORD PTR [rip+0x71895]        # 7bcb0 <strtol@GLIBC_2.2.5>
    a41b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a420 <memcpy@plt>:
    a420:	endbr64 
    a424:	bnd jmp QWORD PTR [rip+0x7188d]        # 7bcb8 <memcpy@GLIBC_2.14>
    a42b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a430 <getgrnam@plt>:
    a430:	endbr64 
    a434:	bnd jmp QWORD PTR [rip+0x71885]        # 7bcc0 <getgrnam@GLIBC_2.2.5>
    a43b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a440 <tzset@plt>:
    a440:	endbr64 
    a444:	bnd jmp QWORD PTR [rip+0x7187d]        # 7bcc8 <tzset@GLIBC_2.2.5>
    a44b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a450 <fileno@plt>:
    a450:	endbr64 
    a454:	bnd jmp QWORD PTR [rip+0x71875]        # 7bcd0 <fileno@GLIBC_2.2.5>
    a45b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a460 <getgid@plt>:
    a460:	endbr64 
    a464:	bnd jmp QWORD PTR [rip+0x7186d]        # 7bcd8 <getgid@GLIBC_2.2.5>
    a46b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a470 <readdir@plt>:
    a470:	endbr64 
    a474:	bnd jmp QWORD PTR [rip+0x71865]        # 7bce0 <readdir@GLIBC_2.2.5>
    a47b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a480 <strerror_r@plt>:
    a480:	endbr64 
    a484:	bnd jmp QWORD PTR [rip+0x7185d]        # 7bce8 <strerror_r@GLIBC_2.2.5>
    a48b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a490 <iswalnum@plt>:
    a490:	endbr64 
    a494:	bnd jmp QWORD PTR [rip+0x71855]        # 7bcf0 <iswalnum@GLIBC_2.2.5>
    a49b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a4a0 <malloc@plt>:
    a4a0:	endbr64 
    a4a4:	bnd jmp QWORD PTR [rip+0x7184d]        # 7bcf8 <malloc@GLIBC_2.2.5>
    a4ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a4b0 <wcrtomb@plt>:
    a4b0:	endbr64 
    a4b4:	bnd jmp QWORD PTR [rip+0x71845]        # 7bd00 <wcrtomb@GLIBC_2.2.5>
    a4bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a4c0 <acl_get_file@plt>:
    a4c0:	endbr64 
    a4c4:	bnd jmp QWORD PTR [rip+0x7183d]        # 7bd08 <acl_get_file@ACL_1.0>
    a4cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a4d0 <fchmodat@plt>:
    a4d0:	endbr64 
    a4d4:	bnd jmp QWORD PTR [rip+0x71835]        # 7bd10 <fchmodat@GLIBC_2.4>
    a4db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a4e0 <nl_langinfo@plt>:
    a4e0:	endbr64 
    a4e4:	bnd jmp QWORD PTR [rip+0x7182d]        # 7bd18 <nl_langinfo@GLIBC_2.2.5>
    a4eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a4f0 <__vasprintf_chk@plt>:
    a4f0:	endbr64 
    a4f4:	bnd jmp QWORD PTR [rip+0x71825]        # 7bd20 <__vasprintf_chk@GLIBC_2.8>
    a4fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a500 <lsetxattr@plt>:
    a500:	endbr64 
    a504:	bnd jmp QWORD PTR [rip+0x7181d]        # 7bd28 <lsetxattr@GLIBC_2.3>
    a50b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a510 <getegid@plt>:
    a510:	endbr64 
    a514:	bnd jmp QWORD PTR [rip+0x71815]        # 7bd30 <getegid@GLIBC_2.2.5>
    a51b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a520 <mktime@plt>:
    a520:	endbr64 
    a524:	bnd jmp QWORD PTR [rip+0x7180d]        # 7bd38 <mktime@GLIBC_2.2.5>
    a52b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a530 <fgetxattr@plt>:
    a530:	endbr64 
    a534:	bnd jmp QWORD PTR [rip+0x71805]        # 7bd40 <fgetxattr@GLIBC_2.3>
    a53b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a540 <fchdir@plt>:
    a540:	endbr64 
    a544:	bnd jmp QWORD PTR [rip+0x717fd]        # 7bd48 <fchdir@GLIBC_2.2.5>
    a54b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a550 <fwrite_unlocked@plt>:
    a550:	endbr64 
    a554:	bnd jmp QWORD PTR [rip+0x717f5]        # 7bd50 <fwrite_unlocked@GLIBC_2.2.5>
    a55b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a560 <__vsnprintf_chk@plt>:
    a560:	endbr64 
    a564:	bnd jmp QWORD PTR [rip+0x717ed]        # 7bd58 <__vsnprintf_chk@GLIBC_2.3.4>
    a56b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a570 <realloc@plt>:
    a570:	endbr64 
    a574:	bnd jmp QWORD PTR [rip+0x717e5]        # 7bd60 <realloc@GLIBC_2.2.5>
    a57b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a580 <__strcpy_chk@plt>:
    a580:	endbr64 
    a584:	bnd jmp QWORD PTR [rip+0x717dd]        # 7bd68 <__strcpy_chk@GLIBC_2.3.4>
    a58b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a590 <fdopen@plt>:
    a590:	endbr64 
    a594:	bnd jmp QWORD PTR [rip+0x717d5]        # 7bd70 <fdopen@GLIBC_2.2.5>
    a59b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a5a0 <linkat@plt>:
    a5a0:	endbr64 
    a5a4:	bnd jmp QWORD PTR [rip+0x717cd]        # 7bd78 <linkat@GLIBC_2.4>
    a5ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a5b0 <mkdtemp@plt>:
    a5b0:	endbr64 
    a5b4:	bnd jmp QWORD PTR [rip+0x717c5]        # 7bd80 <mkdtemp@GLIBC_2.2.5>
    a5bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a5c0 <setlocale@plt>:
    a5c0:	endbr64 
    a5c4:	bnd jmp QWORD PTR [rip+0x717bd]        # 7bd88 <setlocale@GLIBC_2.2.5>
    a5cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a5d0 <__printf_chk@plt>:
    a5d0:	endbr64 
    a5d4:	bnd jmp QWORD PTR [rip+0x717b5]        # 7bd90 <__printf_chk@GLIBC_2.3.4>
    a5db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a5e0 <timegm@plt>:
    a5e0:	endbr64 
    a5e4:	bnd jmp QWORD PTR [rip+0x717ad]        # 7bd98 <timegm@GLIBC_2.2.5>
    a5eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a5f0 <fchmod@plt>:
    a5f0:	endbr64 
    a5f4:	bnd jmp QWORD PTR [rip+0x717a5]        # 7bda0 <fchmod@GLIBC_2.2.5>
    a5fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a600 <strftime@plt>:
    a600:	endbr64 
    a604:	bnd jmp QWORD PTR [rip+0x7179d]        # 7bda8 <strftime@GLIBC_2.2.5>
    a60b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a610 <btowc@plt>:
    a610:	endbr64 
    a614:	bnd jmp QWORD PTR [rip+0x71795]        # 7bdb0 <btowc@GLIBC_2.2.5>
    a61b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a620 <mempcpy@plt>:
    a620:	endbr64 
    a624:	bnd jmp QWORD PTR [rip+0x7178d]        # 7bdb8 <mempcpy@GLIBC_2.2.5>
    a62b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a630 <memmove@plt>:
    a630:	endbr64 
    a634:	bnd jmp QWORD PTR [rip+0x71785]        # 7bdc0 <memmove@GLIBC_2.2.5>
    a63b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a640 <error@plt>:
    a640:	endbr64 
    a644:	bnd jmp QWORD PTR [rip+0x7177d]        # 7bdc8 <error@GLIBC_2.2.5>
    a64b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a650 <fsync@plt>:
    a650:	endbr64 
    a654:	bnd jmp QWORD PTR [rip+0x71775]        # 7bdd0 <fsync@GLIBC_2.2.5>
    a65b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a660 <setgid@plt>:
    a660:	endbr64 
    a664:	bnd jmp QWORD PTR [rip+0x7176d]        # 7bdd8 <setgid@GLIBC_2.2.5>
    a66b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a670 <memrchr@plt>:
    a670:	endbr64 
    a674:	bnd jmp QWORD PTR [rip+0x71765]        # 7bde0 <memrchr@GLIBC_2.2.5>
    a67b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a680 <waitpid@plt>:
    a680:	endbr64 
    a684:	bnd jmp QWORD PTR [rip+0x7175d]        # 7bde8 <waitpid@GLIBC_2.2.5>
    a68b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a690 <open@plt>:
    a690:	endbr64 
    a694:	bnd jmp QWORD PTR [rip+0x71755]        # 7bdf0 <open@GLIBC_2.2.5>
    a69b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a6a0 <access@plt>:
    a6a0:	endbr64 
    a6a4:	bnd jmp QWORD PTR [rip+0x7174d]        # 7bdf8 <access@GLIBC_2.2.5>
    a6ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a6b0 <fseeko@plt>:
    a6b0:	endbr64 
    a6b4:	bnd jmp QWORD PTR [rip+0x71745]        # 7be00 <fseeko@GLIBC_2.2.5>
    a6bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a6c0 <fchown@plt>:
    a6c0:	endbr64 
    a6c4:	bnd jmp QWORD PTR [rip+0x7173d]        # 7be08 <fchown@GLIBC_2.2.5>
    a6cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a6d0 <fopen@plt>:
    a6d0:	endbr64 
    a6d4:	bnd jmp QWORD PTR [rip+0x71735]        # 7be10 <fopen@GLIBC_2.2.5>
    a6db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a6e0 <dcngettext@plt>:
    a6e0:	endbr64 
    a6e4:	bnd jmp QWORD PTR [rip+0x7172d]        # 7be18 <dcngettext@GLIBC_2.2.5>
    a6eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a6f0 <strtok@plt>:
    a6f0:	endbr64 
    a6f4:	bnd jmp QWORD PTR [rip+0x71725]        # 7be20 <strtok@GLIBC_2.2.5>
    a6fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a700 <towlower@plt>:
    a700:	endbr64 
    a704:	bnd jmp QWORD PTR [rip+0x7171d]        # 7be28 <towlower@GLIBC_2.2.5>
    a70b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a710 <strtoumax@plt>:
    a710:	endbr64 
    a714:	bnd jmp QWORD PTR [rip+0x71715]        # 7be30 <strtoumax@GLIBC_2.2.5>
    a71b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a720 <gmtime@plt>:
    a720:	endbr64 
    a724:	bnd jmp QWORD PTR [rip+0x7170d]        # 7be38 <gmtime@GLIBC_2.2.5>
    a72b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a730 <fdopendir@plt>:
    a730:	endbr64 
    a734:	bnd jmp QWORD PTR [rip+0x71705]        # 7be40 <fdopendir@GLIBC_2.4>
    a73b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a740 <unsetenv@plt>:
    a740:	endbr64 
    a744:	bnd jmp QWORD PTR [rip+0x716fd]        # 7be48 <unsetenv@GLIBC_2.2.5>
    a74b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a750 <futimens@plt>:
    a750:	endbr64 
    a754:	bnd jmp QWORD PTR [rip+0x716f5]        # 7be50 <futimens@GLIBC_2.6>
    a75b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a760 <towupper@plt>:
    a760:	endbr64 
    a764:	bnd jmp QWORD PTR [rip+0x716ed]        # 7be58 <towupper@GLIBC_2.2.5>
    a76b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a770 <strtoul@plt>:
    a770:	endbr64 
    a774:	bnd jmp QWORD PTR [rip+0x716e5]        # 7be60 <strtoul@GLIBC_2.2.5>
    a77b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a780 <execvp@plt>:
    a780:	endbr64 
    a784:	bnd jmp QWORD PTR [rip+0x716dd]        # 7be68 <execvp@GLIBC_2.2.5>
    a78b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a790 <sigwait@plt>:
    a790:	endbr64 
    a794:	bnd jmp QWORD PTR [rip+0x716d5]        # 7be70 <sigwait@GLIBC_2.2.5>
    a79b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7a0 <strcat@plt>:
    a7a0:	endbr64 
    a7a4:	bnd jmp QWORD PTR [rip+0x716cd]        # 7be78 <strcat@GLIBC_2.2.5>
    a7ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7b0 <fchownat@plt>:
    a7b0:	endbr64 
    a7b4:	bnd jmp QWORD PTR [rip+0x716c5]        # 7be80 <fchownat@GLIBC_2.4>
    a7bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7c0 <getxattr@plt>:
    a7c0:	endbr64 
    a7c4:	bnd jmp QWORD PTR [rip+0x716bd]        # 7be88 <getxattr@GLIBC_2.3>
    a7cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7d0 <renameat@plt>:
    a7d0:	endbr64 
    a7d4:	bnd jmp QWORD PTR [rip+0x716b5]        # 7be90 <renameat@GLIBC_2.4>
    a7db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7e0 <creat@plt>:
    a7e0:	endbr64 
    a7e4:	bnd jmp QWORD PTR [rip+0x716ad]        # 7be98 <creat@GLIBC_2.2.5>
    a7eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7f0 <getpagesize@plt>:
    a7f0:	endbr64 
    a7f4:	bnd jmp QWORD PTR [rip+0x716a5]        # 7bea0 <getpagesize@GLIBC_2.2.5>
    a7fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a800 <acl_from_text@plt>:
    a800:	endbr64 
    a804:	bnd jmp QWORD PTR [rip+0x7169d]        # 7bea8 <acl_from_text@ACL_1.0>
    a80b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a810 <glob@plt>:
    a810:	endbr64 
    a814:	bnd jmp QWORD PTR [rip+0x71695]        # 7beb0 <glob@GLIBC_2.27>
    a81b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a820 <exit@plt>:
    a820:	endbr64 
    a824:	bnd jmp QWORD PTR [rip+0x7168d]        # 7beb8 <exit@GLIBC_2.2.5>
    a82b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a830 <fwrite@plt>:
    a830:	endbr64 
    a834:	bnd jmp QWORD PTR [rip+0x71685]        # 7bec0 <fwrite@GLIBC_2.2.5>
    a83b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a840 <__fprintf_chk@plt>:
    a840:	endbr64 
    a844:	bnd jmp QWORD PTR [rip+0x7167d]        # 7bec8 <__fprintf_chk@GLIBC_2.3.4>
    a84b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a850 <setxattr@plt>:
    a850:	endbr64 
    a854:	bnd jmp QWORD PTR [rip+0x71675]        # 7bed0 <setxattr@GLIBC_2.3>
    a85b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a860 <setuid@plt>:
    a860:	endbr64 
    a864:	bnd jmp QWORD PTR [rip+0x7166d]        # 7bed8 <setuid@GLIBC_2.2.5>
    a86b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a870 <fflush_unlocked@plt>:
    a870:	endbr64 
    a874:	bnd jmp QWORD PTR [rip+0x71665]        # 7bee0 <fflush_unlocked@GLIBC_2.2.5>
    a87b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a880 <strdup@plt>:
    a880:	endbr64 
    a884:	bnd jmp QWORD PTR [rip+0x7165d]        # 7bee8 <strdup@GLIBC_2.2.5>
    a88b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a890 <mbsinit@plt>:
    a890:	endbr64 
    a894:	bnd jmp QWORD PTR [rip+0x71655]        # 7bef0 <mbsinit@GLIBC_2.2.5>
    a89b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a8a0 <lgetfilecon@plt>:
    a8a0:	endbr64 
    a8a4:	bnd jmp QWORD PTR [rip+0x7164d]        # 7bef8 <lgetfilecon@LIBSELINUX_1.0>
    a8ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a8b0 <symlinkat@plt>:
    a8b0:	endbr64 
    a8b4:	bnd jmp QWORD PTR [rip+0x71645]        # 7bf00 <symlinkat@GLIBC_2.4>
    a8bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a8c0 <execlp@plt>:
    a8c0:	endbr64 
    a8c4:	bnd jmp QWORD PTR [rip+0x7163d]        # 7bf08 <execlp@GLIBC_2.2.5>
    a8cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a8d0 <strerror@plt>:
    a8d0:	endbr64 
    a8d4:	bnd jmp QWORD PTR [rip+0x71635]        # 7bf10 <strerror@GLIBC_2.2.5>
    a8db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a8e0 <execl@plt>:
    a8e0:	endbr64 
    a8e4:	bnd jmp QWORD PTR [rip+0x7162d]        # 7bf18 <execl@GLIBC_2.2.5>
    a8eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a8f0 <iswprint@plt>:
    a8f0:	endbr64 
    a8f4:	bnd jmp QWORD PTR [rip+0x71625]        # 7bf20 <iswprint@GLIBC_2.2.5>
    a8fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a900 <initgroups@plt>:
    a900:	endbr64 
    a904:	bnd jmp QWORD PTR [rip+0x7161d]        # 7bf28 <initgroups@GLIBC_2.2.5>
    a90b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a910 <sleep@plt>:
    a910:	endbr64 
    a914:	bnd jmp QWORD PTR [rip+0x71615]        # 7bf30 <sleep@GLIBC_2.2.5>
    a91b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a920 <fstat@plt>:
    a920:	endbr64 
    a924:	bnd jmp QWORD PTR [rip+0x7160d]        # 7bf38 <fstat@GLIBC_2.33>
    a92b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a930 <sigaddset@plt>:
    a930:	endbr64 
    a934:	bnd jmp QWORD PTR [rip+0x71605]        # 7bf40 <sigaddset@GLIBC_2.2.5>
    a93b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a940 <execv@plt>:
    a940:	endbr64 
    a944:	bnd jmp QWORD PTR [rip+0x715fd]        # 7bf48 <execv@GLIBC_2.2.5>
    a94b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a950 <fork@plt>:
    a950:	endbr64 
    a954:	bnd jmp QWORD PTR [rip+0x715f5]        # 7bf50 <fork@GLIBC_2.2.5>
    a95b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a960 <fstatat@plt>:
    a960:	endbr64 
    a964:	bnd jmp QWORD PTR [rip+0x715ed]        # 7bf58 <fstatat@GLIBC_2.33>
    a96b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a970 <__ctype_tolower_loc@plt>:
    a970:	endbr64 
    a974:	bnd jmp QWORD PTR [rip+0x715e5]        # 7bf60 <__ctype_tolower_loc@GLIBC_2.3>
    a97b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a980 <__ctype_b_loc@plt>:
    a980:	endbr64 
    a984:	bnd jmp QWORD PTR [rip+0x715dd]        # 7bf68 <__ctype_b_loc@GLIBC_2.3>
    a98b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a990 <acl_free@plt>:
    a990:	endbr64 
    a994:	bnd jmp QWORD PTR [rip+0x715d5]        # 7bf70 <acl_free@ACL_1.0>
    a99b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a9a0 <iconv_open@plt>:
    a9a0:	endbr64 
    a9a4:	bnd jmp QWORD PTR [rip+0x715cd]        # 7bf78 <iconv_open@GLIBC_2.2.5>
    a9ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a9b0 <__sprintf_chk@plt>:
    a9b0:	endbr64 
    a9b4:	bnd jmp QWORD PTR [rip+0x715c5]        # 7bf80 <__sprintf_chk@GLIBC_2.3.4>
    a9bb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

000000000000a9c0 <argp_failure@@Base-0x35a20>:
    a9c0:	call   9e30 <abort@plt>
    a9c5:	call   9e30 <abort@plt>
    a9ca:	call   9e30 <abort@plt>
    a9cf:	push   rax
    a9d0:	call   9e30 <abort@plt>
    a9d5:	call   9e30 <abort@plt>
    a9da:	call   9e30 <abort@plt>
    a9df:	call   9e30 <abort@plt>
    a9e4:	call   9e30 <abort@plt>
    a9e9:	call   9e30 <abort@plt>
    a9ee:	call   9e30 <abort@plt>
    a9f3:	call   9e30 <abort@plt>
    a9f8:	call   9e30 <abort@plt>
    a9fd:	call   9e30 <abort@plt>
    aa02:	call   9e30 <abort@plt>
    aa07:	call   9e30 <abort@plt>
    aa0c:	call   9e30 <abort@plt>
    aa11:	call   9e30 <abort@plt>
    aa16:	mov    BYTE PTR [rip+0x74b17],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
    aa1d:	mov    QWORD PTR [rsp+0x18],0x0
    aa26:	movzx  eax,BYTE PTR ds:0x9c
    aa2e:	ud2    
    aa30:	call   9e30 <abort@plt>
    aa35:	call   9e30 <abort@plt>
    aa3a:	call   9e30 <abort@plt>
    aa3f:	call   9e30 <abort@plt>
    aa44:	call   9e30 <abort@plt>
    aa49:	call   9e30 <abort@plt>
    aa4e:	call   9e30 <abort@plt>
    aa53:	call   9e30 <abort@plt>
    aa58:	mov    BYTE PTR [rip+0x74ad5],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
    aa5f:	xor    eax,eax
    aa61:	mov    rsi,rbx
    aa64:	mov    ecx,0x40
    aa69:	mov    rdi,rax
    aa6c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    aa6f:	ud2    
    aa71:	call   9e30 <abort@plt>
    aa76:	call   9e30 <abort@plt>
    aa7b:	call   9e30 <abort@plt>
    aa80:	call   9e30 <abort@plt>
    aa85:	call   9e30 <abort@plt>
    aa8a:	call   9e30 <abort@plt>
    aa8f:	call   9e30 <abort@plt>
    aa94:	call   9e30 <abort@plt>
    aa99:	call   9e30 <abort@plt>
    aa9e:	call   9e30 <abort@plt>
    aaa3:	call   9e30 <abort@plt>
    aaa8:	push   rax
    aaa9:	call   9e30 <abort@plt>
    aaae:	call   9e30 <abort@plt>
    aab3:	call   9e30 <abort@plt>
    aab8:	call   9e30 <abort@plt>
    aabd:	call   9e30 <abort@plt>
    aac2:	call   9e30 <abort@plt>
    aac7:	call   9e30 <abort@plt>
    aacc:	call   9e30 <abort@plt>
    aad1:	call   9e30 <abort@plt>
    aad6:	call   9e30 <abort@plt>
    aadb:	call   9e30 <abort@plt>
    aae0:	call   9e30 <abort@plt>
    aae5:	call   9e30 <abort@plt>
    aaea:	call   9e30 <abort@plt>
    aaef:	call   9e30 <abort@plt>
    aaf4:	call   9e30 <abort@plt>
    aaf9:	nop    DWORD PTR [rax+0x0]
    ab00:	endbr64 
    ab04:	push   r15
    ab06:	push   r14
    ab08:	mov    r14,rsi
    ab0b:	lea    rsi,[rip+0x7455e]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
    ab12:	push   r13
    ab14:	movsxd r13,edi
    ab17:	xor    edi,edi
    ab19:	push   r12
    ab1b:	push   rbp
    ab1c:	lea    rbp,[rip+0x598d2]        # 643f5 <_obstack_memory_used@@Base+0x17775>
    ab23:	push   rbx
    ab24:	sub    rsp,0x198
    ab2b:	mov    rax,QWORD PTR fs:0x28
    ab34:	mov    QWORD PTR [rsp+0x188],rax
    ab3c:	xor    eax,eax
    ab3e:	call   9f70 <clock_gettime@plt>
    ab43:	movdqa xmm0,XMMWORD PTR [rip+0x74525]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
    ab4b:	mov    rdi,QWORD PTR [r14]
    ab4e:	movaps XMMWORD PTR [rip+0x7455b],xmm0        # 7f0b0 <obstack_alloc_failed_handler@@Base+0x278>
    ab55:	movaps XMMWORD PTR [rip+0x74a34],xmm0        # 7f590 <obstack_alloc_failed_handler@@Base+0x758>
    ab5c:	call   4a140 <argp_usage@@Base+0x6dc0>
    ab61:	lea    rsi,[rip+0x60fe8]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
    ab68:	mov    edi,0x6
    ab6d:	call   a5c0 <setlocale@plt>
    ab72:	lea    rsi,[rip+0x5c19d]        # 66d16 <_obstack_memory_used@@Base+0x1a096>
    ab79:	mov    rdi,rbp
    ab7c:	call   a020 <bindtextdomain@plt>
    ab81:	mov    rdi,rbp
    ab84:	call   9fb0 <textdomain@plt>
    ab89:	lea    rax,[rip+0x27b0]        # d340 <__sprintf_chk@plt+0x2990>
    ab90:	lea    rdi,[rip+0x5c191]        # 66d28 <_obstack_memory_used@@Base+0x1a0a8>
    ab97:	mov    DWORD PTR [rip+0x71dff],0x2        # 7c9a0 <_obstack_memory_used@@Base+0x2fd20>
    aba1:	mov    DWORD PTR [rip+0x74519],0x0        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    abab:	mov    QWORD PTR [rip+0x74956],rax        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    abb2:	mov    DWORD PTR [rip+0x743c4],0x7        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
    abbc:	call   9d40 <getenv@plt>
    abc1:	xor    edx,edx
    abc3:	test   rax,rax
    abc6:	je     abdc <__sprintf_chk@plt+0x22c>
    abc8:	movzx  edx,BYTE PTR [rax]
    abcb:	sub    edx,0x31
    abce:	je     b651 <__sprintf_chk@plt+0xca1>
    abd4:	test   edx,edx
    abd6:	sete   dl
    abd9:	movzx  edx,dl
    abdc:	lea    rdi,[rip+0x5c156]        # 66d39 <_obstack_memory_used@@Base+0x1a0b9>
    abe3:	mov    DWORD PTR [rip+0x742b7],edx        # 7eea0 <obstack_alloc_failed_handler@@Base+0x68>
    abe9:	call   9d40 <getenv@plt>
    abee:	xor    edx,edx
    abf0:	test   rax,rax
    abf3:	je     ac09 <__sprintf_chk@plt+0x259>
    abf5:	movzx  edx,BYTE PTR [rax]
    abf8:	sub    edx,0x31
    abfb:	je     b648 <__sprintf_chk@plt+0xc98>
    ac01:	test   edx,edx
    ac03:	sete   dl
    ac06:	movzx  edx,dl
    ac09:	lea    rdi,[rip+0x5c142]        # 66d52 <_obstack_memory_used@@Base+0x1a0d2>
    ac10:	mov    DWORD PTR [rip+0x742fe],edx        # 7ef14 <obstack_alloc_failed_handler@@Base+0xdc>
    ac16:	call   9d40 <getenv@plt>
    ac1b:	xor    edx,edx
    ac1d:	test   rax,rax
    ac20:	je     ac36 <__sprintf_chk@plt+0x286>
    ac22:	movzx  edx,BYTE PTR [rax]
    ac25:	sub    edx,0x31
    ac28:	je     b63f <__sprintf_chk@plt+0xc8f>
    ac2e:	test   edx,edx
    ac30:	sete   dl
    ac33:	movzx  edx,dl
    ac36:	mov    DWORD PTR [rip+0x742dc],edx        # 7ef18 <obstack_alloc_failed_handler@@Base+0xe0>
    ac3c:	xor    edi,edi
    ac3e:	mov    edx,0x5
    ac43:	xor    r15d,r15d
    ac46:	lea    rsi,[rip+0x5c3db]        # 67028 <_obstack_memory_used@@Base+0x1a3a8>
    ac4d:	mov    ebx,0x1
    ac52:	lea    r12,[rip+0x5c240]        # 66e99 <_obstack_memory_used@@Base+0x1a219>
    ac59:	call   a040 <dcgettext@plt>
    ac5e:	mov    QWORD PTR [rip+0x74f5b],rax        # 7fbc0 <obstack_alloc_failed_handler@@Base+0xd88>
    ac65:	xor    eax,eax
    ac67:	mov    esi,0x1
    ac6c:	mov    edi,r15d
    ac6f:	call   4c5c0 <argp_usage@@Base+0x9240>
    ac74:	test   eax,eax
    ac76:	js     ac90 <__sprintf_chk@plt+0x2e0>
    ac78:	cmp    ebx,0x3
    ac7b:	je     acc0 <__sprintf_chk@plt+0x310>
    ac7d:	add    r15d,0x1
    ac81:	add    ebx,0x1
    ac84:	jmp    ac65 <__sprintf_chk@plt+0x2b5>
    ac86:	cs nop WORD PTR [rax+rax*1+0x0]
    ac90:	xor    r8d,r8d
    ac93:	test   r15d,r15d
    ac96:	sete   r8b
    ac9a:	je     bbfc <__sprintf_chk@plt+0x124c>
    aca0:	mov    esi,r8d
    aca3:	mov    rdi,r12
    aca6:	call   9fe0 <__open_2@plt>
    acab:	test   eax,eax
    acad:	js     c842 <__sprintf_chk@plt+0x1e92>
    acb3:	cmp    eax,0x2
    acb6:	jle    ac78 <__sprintf_chk@plt+0x2c8>
    acb8:	mov    edi,eax
    acba:	call   a200 <close@plt>
    acbf:	nop
    acc0:	mov    edi,0x50
    acc5:	lea    rbx,[rip+0x30044]        # 3ad10 <__sprintf_chk@plt+0x30360>
    accc:	mov    QWORD PTR [rip+0x74f59],0xa        # 7fc30 <argp_program_version_hook@@Base+0x58>
    acd7:	call   456a0 <argp_usage@@Base+0x2320>
    acdc:	xor    esi,esi
    acde:	mov    edi,0x11
    ace3:	mov    QWORD PTR [rip+0x745da],0x0        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    acee:	mov    QWORD PTR [rip+0x745db],rax        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    acf5:	call   a330 <signal@plt>
    acfa:	lea    rax,[rsp+0x30]
    acff:	xor    r8d,r8d
    ad02:	lea    rdi,[rip+0x5a17c]        # 64e85 <_obstack_memory_used@@Base+0x18205>
    ad09:	mov    QWORD PTR [rsp+0x70],rax
    ad0e:	lea    rax,[rip+0x74ec3]        # 7fbd8 <argp_program_version_hook@@Base>
    ad15:	mov    WORD PTR [rsp+0x80],r8w
    ad1e:	mov    QWORD PTR [rax],rbx
    ad21:	lea    rax,[rip+0x73d98]        # 7eac0 <_obstack_memory_used@@Base+0x31e40>
    ad28:	mov    DWORD PTR [rsp+0x30],0x1
    ad30:	mov    QWORD PTR [rsp+0x38],0x0
    ad39:	mov    QWORD PTR [rsp+0x40],0x0
    ad42:	mov    QWORD PTR [rsp+0x48],0x0
    ad4b:	mov    QWORD PTR [rsp+0x78],0x0
    ad54:	mov    BYTE PTR [rsp+0x82],0x0
    ad5c:	mov    QWORD PTR [rsp+0x88],0x0
    ad68:	mov    QWORD PTR [rsp+0x90],0x0
    ad74:	mov    QWORD PTR [rip+0x74e55],rbp        # 7fbd0 <obstack_alloc_failed_handler@@Base+0xd98>
    ad7b:	mov    QWORD PTR [rip+0x74e46],rax        # 7fbc8 <obstack_alloc_failed_handler@@Base+0xd90>
    ad82:	call   9d40 <getenv@plt>
    ad87:	lea    rdi,[rip+0x5bfe2]        # 66d70 <_obstack_memory_used@@Base+0x1a0f0>
    ad8e:	mov    QWORD PTR [rsp+0x88],rax
    ad96:	call   9d40 <getenv@plt>
    ad9b:	mov    esi,0x1
    ada0:	mov    edi,0x10
    ada5:	mov    DWORD PTR [rip+0x747c9],0x0        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    adaf:	mov    DWORD PTR [rip+0x744eb],0x0        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    adb9:	test   rax,rax
    adbc:	setne  BYTE PTR [rip+0x749a5]        # 7f768 <obstack_alloc_failed_handler@@Base+0x930>
    adc3:	mov    DWORD PTR [rip+0x74763],0x14        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    adcd:	mov    QWORD PTR [rip+0x74778],0x2800        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    add8:	call   a2f0 <calloc@plt>
    addd:	test   rax,rax
    ade0:	je     ca5d <__sprintf_chk@plt+0x20ad>
    ade6:	mov    QWORD PTR [rip+0x749fb],rax        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
    aded:	movabs rax,0x8000000000000000
    adf7:	mov    DWORD PTR [rip+0x74977],0x0        # 7f778 <obstack_alloc_failed_handler@@Base+0x940>
    ae01:	mov    QWORD PTR [rip+0x74988],rax        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
    ae08:	mov    QWORD PTR [rip+0x74985],0xffffffffffffffff        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
    ae13:	mov    QWORD PTR [rip+0x740d6],rax        # 7eef0 <obstack_alloc_failed_handler@@Base+0xb8>
    ae1a:	mov    QWORD PTR [rip+0x740d3],0xffffffffffffffff        # 7eef8 <obstack_alloc_failed_handler@@Base+0xc0>
    ae25:	mov    DWORD PTR [rip+0x74945],0x8        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
    ae2f:	mov    BYTE PTR [rip+0x74ab2],0x1        # 7f8e8 <obstack_alloc_failed_handler@@Base+0xab0>
    ae36:	mov    DWORD PTR [rip+0x74e64],0x1        # 7fca4 <argp_program_version_hook@@Base+0xcc>
    ae40:	mov    DWORD PTR [rip+0x74e56],0x0        # 7fca0 <argp_program_version_hook@@Base+0xc8>
    ae4a:	mov    DWORD PTR [rip+0x74918],0x0        # 7f76c <obstack_alloc_failed_handler@@Base+0x934>
    ae54:	mov    DWORD PTR [rip+0x74052],0xffffffff        # 7eeb0 <obstack_alloc_failed_handler@@Base+0x78>
    ae5e:	mov    QWORD PTR [rip+0x7403f],0x0        # 7eea8 <obstack_alloc_failed_handler@@Base+0x70>
    ae69:	mov    DWORD PTR [rip+0x74055],0xffffffff        # 7eec8 <obstack_alloc_failed_handler@@Base+0x90>
    ae73:	mov    QWORD PTR [rip+0x74042],0x0        # 7eec0 <obstack_alloc_failed_handler@@Base+0x88>
    ae7e:	mov    BYTE PTR [rip+0x74acf],0x1        # 7f954 <obstack_alloc_failed_handler@@Base+0xb1c>
    ae85:	mov    DWORD PTR [rip+0x74ac1],0xffffffff        # 7f950 <obstack_alloc_failed_handler@@Base+0xb18>
    ae8f:	mov    DWORD PTR [rip+0x746d7],0xffffffff        # 7f570 <obstack_alloc_failed_handler@@Base+0x738>
    ae99:	cmp    r13d,0x1
    ae9d:	jle    aeac <__sprintf_chk@plt+0x4fc>
    ae9f:	mov    rbx,QWORD PTR [r14+0x8]
    aea3:	cmp    BYTE PTR [rbx],0x2d
    aea6:	jne    b4f6 <__sprintf_chk@plt+0xb46>
    aeac:	lea    rbx,[rip+0x5becd]        # 66d80 <_obstack_memory_used@@Base+0x1a100>
    aeb3:	lea    r12,[rip+0x73bc6]        # 7ea80 <_obstack_memory_used@@Base+0x31e00>
    aeba:	mov    rdi,rbx
    aebd:	lea    r15,[rsp+0x70]
    aec2:	call   9d40 <getenv@plt>
    aec7:	mov    QWORD PTR [rsp+0x58],rbx
    aecc:	lea    rbx,[rsp+0x2c]
    aed1:	mov    DWORD PTR [rsp+0x50],0x0
    aed9:	mov    rdi,rax
    aedc:	mov    QWORD PTR [rsp+0x60],0x0
    aee5:	mov    QWORD PTR [rsp+0x68],0x0
    aeee:	test   rax,rax
    aef1:	je     afc4 <__sprintf_chk@plt+0x614>
    aef7:	lea    rbp,[rsp+0xa0]
    aeff:	mov    edx,0x2000e46
    af04:	mov    QWORD PTR [rsp+0xb0],0x1
    af10:	mov    rsi,rbp
    af13:	call   3f220 <__sprintf_chk@plt+0x34870>
    af18:	test   eax,eax
    af1a:	jne    cab3 <__sprintf_chk@plt+0x2103>
    af20:	mov    rsi,QWORD PTR [rsp+0xa0]
    af28:	test   rsi,rsi
    af2b:	je     afab <__sprintf_chk@plt+0x5fb>
    af2d:	mov    r10,QWORD PTR [rsp+0x70]
    af32:	lea    r15,[rsp+0x70]
    af37:	lea    rbx,[rsp+0x2c]
    af3c:	mov    rax,QWORD PTR [rip+0x7407d]        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
    af43:	mov    rdx,QWORD PTR [rsp+0xa8]
    af4b:	lea    r12,[rip+0x73b2e]        # 7ea80 <_obstack_memory_used@@Base+0x31e00>
    af52:	mov    r9,r15
    af55:	mov    r8,rbx
    af58:	add    esi,DWORD PTR [rsp+0xb0]
    af5f:	mov    ecx,0x28
    af64:	mov    rdi,r12
    af67:	mov    QWORD PTR [rsp+0x8],r10
    af6c:	mov    QWORD PTR [rdx],rax
    af6f:	lea    rax,[rsp+0x50]
    af74:	mov    QWORD PTR [rsp+0x70],rax
    af79:	call   42240 <argp_parse@@Base>
    af7e:	mov    r10,QWORD PTR [rsp+0x8]
    af83:	test   eax,eax
    af85:	jne    ce07 <__sprintf_chk@plt+0x2457>
    af8b:	cmp    DWORD PTR [rip+0x7486e],0x0        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    af92:	mov    QWORD PTR [rsp+0x70],r10
    af97:	jne    cba6 <__sprintf_chk@plt+0x21f6>
    af9d:	mov    QWORD PTR [rsp+0xa0],0x0
    afa9:	jmp    afbc <__sprintf_chk@plt+0x60c>
    afab:	lea    r12,[rip+0x73ace]        # 7ea80 <_obstack_memory_used@@Base+0x31e00>
    afb2:	lea    r15,[rsp+0x70]
    afb7:	lea    rbx,[rsp+0x2c]
    afbc:	mov    rdi,rbp
    afbf:	call   3cee0 <__sprintf_chk@plt+0x32530>
    afc4:	mov    r8,rbx
    afc7:	mov    r9,r15
    afca:	mov    ecx,0x8
    afcf:	mov    rdx,r14
    afd2:	mov    esi,r13d
    afd5:	mov    rdi,r12
    afd8:	call   42240 <argp_parse@@Base>
    afdd:	mov    ebx,eax
    afdf:	test   eax,eax
    afe1:	jne    caa9 <__sprintf_chk@plt+0x20f9>
    afe7:	cmp    BYTE PTR [rsp+0x80],0x0
    afef:	jne    b4bb <__sprintf_chk@plt+0xb0b>
    aff5:	mov    eax,DWORD PTR [rsp+0x2c]
    aff9:	cmp    r13d,eax
    affc:	jg     b01f <__sprintf_chk@plt+0x66f>
    affe:	jmp    b059 <__sprintf_chk@plt+0x6a9>
    b000:	cmp    eax,0x1
    b003:	jne    b00f <__sprintf_chk@plt+0x65f>
    b005:	mov    DWORD PTR [rip+0x747f1],0x2        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    b00f:	mov    eax,DWORD PTR [rsp+0x2c]
    b013:	add    eax,0x1
    b016:	mov    DWORD PTR [rsp+0x2c],eax
    b01a:	cmp    r13d,eax
    b01d:	jle    b059 <__sprintf_chk@plt+0x6a9>
    b01f:	cdqe   
    b021:	mov    rbp,QWORD PTR [r14+rax*8]
    b025:	call   290c0 <__sprintf_chk@plt+0x1e710>
    b02a:	mov    DWORD PTR [rax+0x10],0x0
    b031:	mov    QWORD PTR [rax+0x18],rbp
    b035:	mov    eax,DWORD PTR [rip+0x747c5]        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    b03b:	test   eax,eax
    b03d:	jne    b000 <__sprintf_chk@plt+0x650>
    b03f:	mov    DWORD PTR [rip+0x747b7],0x1        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    b049:	mov    eax,DWORD PTR [rsp+0x2c]
    b04d:	add    eax,0x1
    b050:	mov    DWORD PTR [rsp+0x2c],eax
    b054:	cmp    r13d,eax
    b057:	jg     b01f <__sprintf_chk@plt+0x66f>
    b059:	mov    edi,DWORD PTR [rip+0x74245]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b05f:	test   edi,edi
    b061:	jne    b07b <__sprintf_chk@plt+0x6cb>
    b063:	cmp    BYTE PTR [rsp+0x81],0x0
    b06b:	je     bf31 <__sprintf_chk@plt+0x1581>
    b071:	mov    DWORD PTR [rip+0x74229],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b07b:	cmp    QWORD PTR [rip+0x74215],0x0        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    b083:	je     b08e <__sprintf_chk@plt+0x6de>
    b085:	cmp    DWORD PTR [rip+0x744ec],0x3        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b08c:	je     b09b <__sprintf_chk@plt+0x6eb>
    b08e:	cmp    BYTE PTR [rip+0x73e4f],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
    b095:	je     b4d7 <__sprintf_chk@plt+0xb27>
    b09b:	mov    ecx,DWORD PTR [rip+0x74203]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b0a1:	mov    eax,0x1
    b0a6:	shl    eax,cl
    b0a8:	test   al,0x54
    b0aa:	je     cdc9 <__sprintf_chk@plt+0x2419>
    b0b0:	cmp    QWORD PTR [rip+0x74870],0x0        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
    b0b8:	je     b0fd <__sprintf_chk@plt+0x74d>
    b0ba:	cmp    DWORD PTR [rip+0x7473f],0x0        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    b0c1:	je     cb4c <__sprintf_chk@plt+0x219c>
    b0c7:	mov    edx,DWORD PTR [rip+0x744ab]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b0cd:	lea    rax,[rip+0x5fb8c]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b0d4:	mov    rdi,rdx
    b0d7:	test   BYTE PTR [rax+rdx*4],0x10
    b0db:	jne    b0fd <__sprintf_chk@plt+0x74d>
    b0dd:	mov    rax,QWORD PTR [rip+0x74b64]        # 7fc48 <argp_program_version_hook@@Base+0x70>
    b0e4:	test   rax,rax
    b0e7:	je     b0f2 <__sprintf_chk@plt+0x742>
    b0e9:	cmp    DWORD PTR [rax],0x1
    b0ec:	je     cb6b <__sprintf_chk@plt+0x21bb>
    b0f2:	mov    QWORD PTR [rip+0x7482b],0x0        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
    b0fd:	cmp    QWORD PTR [rip+0x741c3],0x0        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    b105:	je     be2d <__sprintf_chk@plt+0x147d>
    b10b:	cmp    QWORD PTR [rip+0x741b5],0x1        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    b113:	jbe    b122 <__sprintf_chk@plt+0x772>
    b115:	cmp    BYTE PTR [rip+0x74494],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    b11c:	je     cd67 <__sprintf_chk@plt+0x23b7>
    b122:	cmp    QWORD PTR [rip+0x73e8e],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
    b12a:	je     b169 <__sprintf_chk@plt+0x7b9>
    b12c:	cmp    QWORD PTR [rip+0x74664],0x0        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
    b134:	js     b176 <__sprintf_chk@plt+0x7c6>
    b136:	mov    rbp,QWORD PTR [rip+0x74b13]        # 7fc50 <argp_program_version_hook@@Base+0x78>
    b13d:	mov    rsi,QWORD PTR [rip+0x74b14]        # 7fc58 <argp_program_version_hook@@Base+0x80>
    b144:	mov    rdi,rbp
    b147:	call   2d0f0 <__sprintf_chk@plt+0x22740>
    b14c:	test   eax,eax
    b14e:	jne    cb7f <__sprintf_chk@plt+0x21cf>
    b154:	cmp    DWORD PTR [rbp+0x0],0x1
    b158:	jne    bf4f <__sprintf_chk@plt+0x159f>
    b15e:	mov    QWORD PTR [rip+0x73e4f],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
    b169:	cmp    DWORD PTR [rip+0x747e0],0xffffffff        # 7f950 <obstack_alloc_failed_handler@@Base+0xb18>
    b170:	jne    bf87 <__sprintf_chk@plt+0x15d7>
    b176:	mov    rbp,QWORD PTR [rip+0x7411b]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    b17d:	test   rbp,rbp
    b180:	je     b1b3 <__sprintf_chk@plt+0x803>
    b182:	mov    eax,DWORD PTR [rip+0x7411c]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b188:	and    eax,0xfffffffb
    b18b:	cmp    eax,0x2
    b18e:	jne    b1b3 <__sprintf_chk@plt+0x803>
    b190:	cmp    BYTE PTR [rip+0x74419],0x1        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    b197:	mov    rdi,rbp
    b19a:	sbb    r12,r12
    b19d:	and    r12d,0x12
    b1a1:	add    r12,0x51
    b1a5:	call   a060 <strlen@plt>
    b1aa:	cmp    rax,r12
    b1ad:	ja     cd10 <__sprintf_chk@plt+0x2360>
    b1b3:	cmp    BYTE PTR [rip+0x7431e],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
    b1ba:	je     b210 <__sprintf_chk@plt+0x860>
    b1bc:	cmp    BYTE PTR [rip+0x743ed],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    b1c3:	jne    ccd2 <__sprintf_chk@plt+0x2322>
    b1c9:	cmp    QWORD PTR [rip+0x74397],0x0        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
    b1d1:	jne    ccf1 <__sprintf_chk@plt+0x2341>
    b1d7:	mov    edx,DWORD PTR [rip+0x7439b]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b1dd:	lea    rax,[rip+0x5fa7c]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b1e4:	mov    rdi,rdx
    b1e7:	test   BYTE PTR [rax+rdx*4],0x2
    b1eb:	jne    b247 <__sprintf_chk@plt+0x897>
    b1ed:	mov    rax,QWORD PTR [rip+0x74a6c]        # 7fc60 <argp_program_version_hook@@Base+0x88>
    b1f4:	test   rax,rax
    b1f7:	je     b202 <__sprintf_chk@plt+0x852>
    b1f9:	cmp    DWORD PTR [rax],0x1
    b1fc:	je     cb38 <__sprintf_chk@plt+0x2188>
    b202:	mov    BYTE PTR [rip+0x742cf],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
    b209:	jmp    b247 <__sprintf_chk@plt+0x897>
    b20b:	nop    DWORD PTR [rax+rax*1+0x0]
    b210:	cmp    QWORD PTR [rip+0x74350],0x0        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
    b218:	je     b247 <__sprintf_chk@plt+0x897>
    b21a:	cmp    BYTE PTR [rip+0x7438f],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    b221:	jne    cbf6 <__sprintf_chk@plt+0x2246>
    b227:	mov    ecx,DWORD PTR [rip+0x7434b]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b22d:	lea    rax,[rip+0x5fa2c]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b234:	test   BYTE PTR [rax+rcx*4],0x4
    b238:	jne    cd86 <__sprintf_chk@plt+0x23d6>
    b23e:	cmp    ecx,0x2
    b241:	je     cde8 <__sprintf_chk@plt+0x2438>
    b247:	cmp    DWORD PTR [rip+0x73cb2],0x2        # 7ef00 <obstack_alloc_failed_handler@@Base+0xc8>
    b24e:	je     bc41 <__sprintf_chk@plt+0x1291>
    b254:	cmp    BYTE PTR [rsp+0x81],0x0
    b25c:	je     b43f <__sprintf_chk@plt+0xa8f>
    b262:	cmp    DWORD PTR [rip+0x7403b],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b269:	je     b43f <__sprintf_chk@plt+0xa8f>
    b26f:	mov    edx,DWORD PTR [rip+0x74303]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b275:	lea    rax,[rip+0x5f9e4]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b27c:	test   BYTE PTR [rax+rdx*4],0x1
    b280:	je     cc88 <__sprintf_chk@plt+0x22d8>
    b286:	cmp    DWORD PTR [rip+0x73c53],0x0        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
    b28d:	jle    b6a6 <__sprintf_chk@plt+0xcf6>
    b293:	cmp    DWORD PTR [rip+0x73c42],0x0        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
    b29a:	jle    b6af <__sprintf_chk@plt+0xcff>
    b2a0:	cmp    BYTE PTR [rip+0x74619],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
    b2a7:	jne    b2e4 <__sprintf_chk@plt+0x934>
    b2a9:	cmp    BYTE PTR [rip+0x74611],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
    b2b0:	je     b2e4 <__sprintf_chk@plt+0x934>
    b2b2:	mov    edx,DWORD PTR [rip+0x742c0]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b2b8:	lea    rax,[rip+0x5f9a1]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b2bf:	mov    rdi,rdx
    b2c2:	test   BYTE PTR [rax+rdx*4],0x1
    b2c6:	jne    b2e4 <__sprintf_chk@plt+0x934>
    b2c8:	mov    rax,QWORD PTR [rip+0x749a1]        # 7fc70 <argp_program_version_hook@@Base+0x98>
    b2cf:	test   rax,rax
    b2d2:	je     b2dd <__sprintf_chk@plt+0x92d>
    b2d4:	cmp    DWORD PTR [rax],0x1
    b2d7:	je     cb92 <__sprintf_chk@plt+0x21e2>
    b2dd:	mov    BYTE PTR [rip+0x745dd],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
    b2e4:	cmp    BYTE PTR [rip+0x7492d],0x0        # 7fc18 <argp_program_version_hook@@Base+0x40>
    b2eb:	je     b330 <__sprintf_chk@plt+0x980>
    b2ed:	cmp    BYTE PTR [rip+0x744bc],0x0        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
    b2f4:	je     be88 <__sprintf_chk@plt+0x14d8>
    b2fa:	mov    rbp,QWORD PTR [rip+0x74977]        # 7fc78 <argp_program_version_hook@@Base+0xa0>
    b301:	mov    rsi,QWORD PTR [rip+0x74978]        # 7fc80 <argp_program_version_hook@@Base+0xa8>
    b308:	mov    rdi,rbp
    b30b:	call   2d0f0 <__sprintf_chk@plt+0x22740>
    b310:	test   eax,eax
    b312:	jne    cb25 <__sprintf_chk@plt+0x2175>
    b318:	cmp    DWORD PTR [rbp+0x0],0x1
    b31c:	je     be81 <__sprintf_chk@plt+0x14d1>
    b322:	mov    BYTE PTR [rip+0x748ef],0x0        # 7fc18 <argp_program_version_hook@@Base+0x40>
    b329:	nop    DWORD PTR [rax+0x0]
    b330:	cmp    BYTE PTR [rip+0x743e9],0x0        # 7f720 <obstack_alloc_failed_handler@@Base+0x8e8>
    b337:	je     b343 <__sprintf_chk@plt+0x993>
    b339:	mov    DWORD PTR [rip+0x743f1],0x3        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
    b343:	movzx  eax,BYTE PTR [rip+0x744b2]        # 7f7fc <obstack_alloc_failed_handler@@Base+0x9c4>
    b34a:	mov    edx,DWORD PTR [rip+0x73c1c]        # 7ef6c <obstack_alloc_failed_handler@@Base+0x134>
    b350:	test   al,al
    b352:	je     bbc6 <__sprintf_chk@plt+0x1216>
    b358:	cmp    edx,0x2
    b35b:	je     c569 <__sprintf_chk@plt+0x1bb9>
    b361:	mov    edx,0x80900
    b366:	xor    eax,0x1
    b369:	mov    ecx,edx
    b36b:	movzx  eax,al
    b36e:	or     ecx,0x10000
    b374:	shl    eax,0x8
    b377:	mov    ebp,DWORD PTR [rip+0x741fb]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b37d:	mov    DWORD PTR [rip+0x73bed],edx        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
    b383:	mov    DWORD PTR [rip+0x7446f],ecx        # 7f7f8 <obstack_alloc_failed_handler@@Base+0x9c0>
    b389:	mov    DWORD PTR [rip+0x73be5],eax        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
    b38f:	cmp    ebp,0x9
    b392:	je     bc28 <__sprintf_chk@plt+0x1278>
    b398:	cmp    BYTE PTR [rip+0x74573],0x0        # 7f912 <obstack_alloc_failed_handler@@Base+0xada>
    b39f:	je     b3ab <__sprintf_chk@plt+0x9fb>
    b3a1:	mov    DWORD PTR [rip+0x73d15],0x2        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
    b3ab:	movsd  xmm0,QWORD PTR [rip+0x74175]        # 7f528 <obstack_alloc_failed_handler@@Base+0x6f0>
    b3b3:	ucomisd xmm0,QWORD PTR [rip+0x58d65]        # 64120 <_obstack_memory_used@@Base+0x174a0>
    b3bb:	jp     b3bf <__sprintf_chk@plt+0xa0f>
    b3bd:	je     b3e2 <__sprintf_chk@plt+0xa32>
    b3bf:	mov    rax,QWORD PTR [rip+0x7418a]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    b3c6:	test   rax,rax
    b3c9:	js     bf5f <__sprintf_chk@plt+0x15af>
    b3cf:	pxor   xmm1,xmm1
    b3d3:	cvtsi2sd xmm1,rax
    b3d8:	comisd xmm1,xmm0
    b3dc:	ja     cda5 <__sprintf_chk@plt+0x23f5>
    b3e2:	cmp    BYTE PTR [rip+0x744d8],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
    b3e9:	je     b425 <__sprintf_chk@plt+0xa75>
    b3eb:	cmp    QWORD PTR [rip+0x73bc5],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
    b3f3:	je     b425 <__sprintf_chk@plt+0xa75>
    b3f5:	mov    r12,QWORD PTR [rip+0x74874]        # 7fc70 <argp_program_version_hook@@Base+0x98>
    b3fc:	mov    rsi,QWORD PTR [rip+0x7484d]        # 7fc50 <argp_program_version_hook@@Base+0x78>
    b403:	mov    rdi,r12
    b406:	call   2d0f0 <__sprintf_chk@plt+0x22740>
    b40b:	test   eax,eax
    b40d:	jne    ccbf <__sprintf_chk@plt+0x230f>
    b413:	cmp    DWORD PTR [r12],0x1
    b418:	je     c57a <__sprintf_chk@plt+0x1bca>
    b41e:	mov    BYTE PTR [rip+0x7449c],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
    b425:	cmp    ebp,0x9
    b428:	ja     b79b <__sprintf_chk@plt+0xdeb>
    b42e:	lea    rdx,[rip+0x5f4fb]        # 6a930 <_obstack_memory_used@@Base+0x1dcb0>
    b435:	movsxd rax,DWORD PTR [rdx+rbp*4]
    b439:	add    rax,rdx
    b43c:	notrack jmp rax
    b43f:	cmp    DWORD PTR [rip+0x73a9a],0x0        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
    b446:	jle    b65a <__sprintf_chk@plt+0xcaa>
    b44c:	cmp    DWORD PTR [rip+0x73e51],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b453:	jne    bfbb <__sprintf_chk@plt+0x160b>
    b459:	cmp    DWORD PTR [rip+0x73a7c],0x0        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
    b460:	jle    b6af <__sprintf_chk@plt+0xcff>
    b466:	cmp    BYTE PTR [rip+0x74453],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
    b46d:	je     b2a9 <__sprintf_chk@plt+0x8f9>
    b473:	mov    edx,DWORD PTR [rip+0x740ff]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b479:	lea    rax,[rip+0x5f7e0]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b480:	mov    rdi,rdx
    b483:	test   BYTE PTR [rax+rdx*4],0x1
    b487:	jne    b2e4 <__sprintf_chk@plt+0x934>
    b48d:	mov    rax,QWORD PTR [rip+0x747d4]        # 7fc68 <argp_program_version_hook@@Base+0x90>
    b494:	test   rax,rax
    b497:	je     b4a2 <__sprintf_chk@plt+0xaf2>
    b499:	cmp    DWORD PTR [rax],0x1
    b49c:	je     cbe2 <__sprintf_chk@plt+0x2232>
    b4a2:	cmp    BYTE PTR [rip+0x74418],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
    b4a9:	mov    BYTE PTR [rip+0x74410],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
    b4b0:	jne    b2c8 <__sprintf_chk@plt+0x918>
    b4b6:	jmp    b2e4 <__sprintf_chk@plt+0x934>
    b4bb:	cmp    DWORD PTR [rip+0x740b6],0x3        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b4c2:	je     c594 <__sprintf_chk@plt+0x1be4>
    b4c8:	mov    DWORD PTR [rip+0x7427e],0xffffffff        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
    b4d2:	jmp    aff5 <__sprintf_chk@plt+0x645>
    b4d7:	cmp    BYTE PTR [rip+0x740d2],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    b4de:	jne    b09b <__sprintf_chk@plt+0x6eb>
    b4e4:	cmp    BYTE PTR [rip+0x74292],0x0        # 7f77d <obstack_alloc_failed_handler@@Base+0x945>
    b4eb:	je     b0b0 <__sprintf_chk@plt+0x700>
    b4f1:	jmp    b09b <__sprintf_chk@plt+0x6eb>
    b4f6:	mov    rdi,rbx
    b4f9:	mov    BYTE PTR [rsp+0xa0],0x2d
    b501:	lea    r15,[r14+0x10]
    b505:	mov    BYTE PTR [rsp+0xa2],0x0
    b50d:	call   a060 <strlen@plt>
    b512:	add    eax,r13d
    b515:	lea    esi,[rax-0x1]
    b518:	cdqe   
    b51a:	lea    rdi,[rax*8+0x0]
    b522:	mov    DWORD PTR [rsp+0x14],esi
    b526:	call   456a0 <argp_usage@@Base+0x2320>
    b52b:	mov    rsi,rax
    b52e:	mov    QWORD PTR [rsp+0x18],rax
    b533:	lea    r12,[rax+0x8]
    b537:	mov    rax,QWORD PTR [r14]
    b53a:	mov    QWORD PTR [rsi],rax
    b53d:	movzx  eax,BYTE PTR [rbx]
    b540:	lea    rsi,[r14+r13*8]
    b544:	mov    QWORD PTR [rsp+0x8],rsi
    b549:	test   al,al
    b54b:	je     b5f7 <__sprintf_chk@plt+0xc47>
    b551:	lea    rbp,[rsp+0xa0]
    b559:	nop    DWORD PTR [rax+0x0]
    b560:	mov    rdi,rbp
    b563:	mov    BYTE PTR [rsp+0xa1],al
    b56a:	lea    r13,[r12+0x8]
    b56f:	call   a060 <strlen@plt>
    b574:	lea    r14,[rax+0x1]
    b578:	mov    rdi,r14
    b57b:	call   a4a0 <malloc@plt>
    b580:	test   rax,rax
    b583:	je     ca5d <__sprintf_chk@plt+0x20ad>
    b589:	mov    edi,r14d
    b58c:	test   r14d,r14d
    b58f:	je     b5a5 <__sprintf_chk@plt+0xbf5>
    b591:	xor    edx,edx
    b593:	mov    ecx,edx
    b595:	add    edx,0x1
    b598:	movzx  esi,BYTE PTR [rbp+rcx*1+0x0]
    b59d:	mov    BYTE PTR [rax+rcx*1],sil
    b5a1:	cmp    edx,edi
    b5a3:	jb     b593 <__sprintf_chk@plt+0xbe3>
    b5a5:	mov    QWORD PTR [r12],rax
    b5a9:	mov    rdi,QWORD PTR [rip+0x734d0]        # 7ea80 <_obstack_memory_used@@Base+0x31e00>
    b5b0:	movsx  esi,BYTE PTR [rbx]
    b5b3:	call   2d090 <__sprintf_chk@plt+0x226e0>
    b5b8:	test   rax,rax
    b5bb:	je     b700 <__sprintf_chk@plt+0xd50>
    b5c1:	cmp    QWORD PTR [rax+0x10],0x0
    b5c6:	je     b736 <__sprintf_chk@plt+0xd86>
    b5cc:	cmp    r15,QWORD PTR [rsp+0x8]
    b5d1:	jae    caea <__sprintf_chk@plt+0x213a>
    b5d7:	mov    rax,QWORD PTR [r15]
    b5da:	add    r12,0x10
    b5de:	add    r15,0x8
    b5e2:	mov    QWORD PTR [r12-0x8],rax
    b5e7:	movzx  eax,BYTE PTR [rbx+0x1]
    b5eb:	add    rbx,0x1
    b5ef:	test   al,al
    b5f1:	jne    b560 <__sprintf_chk@plt+0xbb0>
    b5f7:	mov    rax,QWORD PTR [rsp+0x8]
    b5fc:	cmp    r15,rax
    b5ff:	jae    b628 <__sprintf_chk@plt+0xc78>
    b601:	mov    r14,rax
    b604:	mov    rdi,r12
    b607:	mov    rsi,r15
    b60a:	sub    r14,0x1
    b60e:	sub    r14,r15
    b611:	shr    r14,0x3
    b615:	lea    rbx,[r14*8+0x8]
    b61d:	mov    rdx,rbx
    b620:	add    r12,rbx
    b623:	call   a420 <memcpy@plt>
    b628:	mov    QWORD PTR [r12],0x0
    b630:	mov    r14,QWORD PTR [rsp+0x18]
    b635:	mov    r13d,DWORD PTR [rsp+0x14]
    b63a:	jmp    aeac <__sprintf_chk@plt+0x4fc>
    b63f:	movzx  edx,BYTE PTR [rax+0x1]
    b643:	jmp    ac2e <__sprintf_chk@plt+0x27e>
    b648:	movzx  edx,BYTE PTR [rax+0x1]
    b64c:	jmp    ac01 <__sprintf_chk@plt+0x251>
    b651:	movzx  edx,BYTE PTR [rax+0x1]
    b655:	jmp    abd4 <__sprintf_chk@plt+0x224>
    b65a:	cmp    DWORD PTR [rip+0x7387b],0x0        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
    b661:	jle    b6af <__sprintf_chk@plt+0xcff>
    b663:	cmp    DWORD PTR [rip+0x73c3a],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b66a:	je     b466 <__sprintf_chk@plt+0xab6>
    b670:	mov    edx,DWORD PTR [rip+0x73f02]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b676:	lea    rax,[rip+0x5f5e3]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b67d:	test   BYTE PTR [rax+rdx*4],0x1
    b681:	jne    b2a0 <__sprintf_chk@plt+0x8f0>
    b687:	mov    rax,QWORD PTR [rip+0x73e7a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    b68e:	test   rax,rax
    b691:	je     b695 <__sprintf_chk@plt+0xce5>
    b693:	call   rax
    b695:	mov    edx,0x5
    b69a:	lea    rsi,[rip+0x5d1b7]        # 68858 <_obstack_memory_used@@Base+0x1bbd8>
    b6a1:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    b6a6:	cmp    DWORD PTR [rip+0x7382f],0x0        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
    b6ad:	jg     b67d <__sprintf_chk@plt+0xccd>
    b6af:	cmp    DWORD PTR [rip+0x73822],0x0        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
    b6b6:	jle    b466 <__sprintf_chk@plt+0xab6>
    b6bc:	cmp    DWORD PTR [rip+0x73be1],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    b6c3:	je     b466 <__sprintf_chk@plt+0xab6>
    b6c9:	mov    edx,DWORD PTR [rip+0x73ea9]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    b6cf:	lea    rax,[rip+0x5f58a]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    b6d6:	test   BYTE PTR [rax+rdx*4],0x1
    b6da:	jne    b2a0 <__sprintf_chk@plt+0x8f0>
    b6e0:	mov    rax,QWORD PTR [rip+0x73e21]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    b6e7:	test   rax,rax
    b6ea:	je     b6ee <__sprintf_chk@plt+0xd3e>
    b6ec:	call   rax
    b6ee:	mov    edx,0x5
    b6f3:	lea    rsi,[rip+0x5d18e]        # 68888 <_obstack_memory_used@@Base+0x1bc08>
    b6fa:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    b6ff:	nop
    b700:	mov    r8,QWORD PTR [rip+0x73399]        # 7eaa0 <_obstack_memory_used@@Base+0x31e20>
    b707:	test   r8,r8
    b70a:	je     b736 <__sprintf_chk@plt+0xd86>
    b70c:	mov    rax,QWORD PTR [r8]
    b70f:	test   rax,rax
    b712:	je     b736 <__sprintf_chk@plt+0xd86>
    b714:	nop    DWORD PTR [rax+0x0]
    b718:	mov    rdi,QWORD PTR [rax]
    b71b:	call   2d090 <__sprintf_chk@plt+0x226e0>
    b720:	test   rax,rax
    b723:	jne    b5c1 <__sprintf_chk@plt+0xc11>
    b729:	mov    rax,QWORD PTR [r8+0x20]
    b72d:	add    r8,0x20
    b731:	test   rax,rax
    b734:	jne    b718 <__sprintf_chk@plt+0xd68>
    b736:	mov    r12,r13
    b739:	jmp    b5e7 <__sprintf_chk@plt+0xc37>
    b73e:	mov    rax,QWORD PTR [rip+0x73b8b]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    b745:	mov    rdx,QWORD PTR [rip+0x73b7c]        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    b74c:	lea    rcx,[rax+rdx*8]
    b750:	mov    QWORD PTR [rip+0x73db9],rax        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    b757:	cmp    rcx,rax
    b75a:	jbe    b79b <__sprintf_chk@plt+0xdeb>
    b75c:	lea    rsi,[rip+0x5b6ed]        # 66e50 <_obstack_memory_used@@Base+0x1a1d0>
    b763:	nop    DWORD PTR [rax+rax*1+0x0]
    b768:	mov    rdx,QWORD PTR [rax]
    b76b:	cmp    BYTE PTR [rdx],0x2d
    b76e:	jne    b78b <__sprintf_chk@plt+0xddb>
    b770:	cmp    BYTE PTR [rdx+0x1],0x0
    b774:	jne    b78b <__sprintf_chk@plt+0xddb>
    b776:	cmp    QWORD PTR [rip+0x7414a],0x0        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
    b77e:	jne    ccb3 <__sprintf_chk@plt+0x2303>
    b784:	mov    QWORD PTR [rip+0x7413d],rsi        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
    b78b:	add    rax,0x8
    b78f:	mov    QWORD PTR [rip+0x73d7a],rax        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    b796:	cmp    rcx,rax
    b799:	ja     b768 <__sprintf_chk@plt+0xdb8>
    b79b:	mov    rdi,QWORD PTR [rip+0x738fe]        # 7f0a0 <obstack_alloc_failed_handler@@Base+0x268>
    b7a2:	test   rdi,rdi
    b7a5:	je     bbd9 <__sprintf_chk@plt+0x1229>
    b7ab:	lea    rsi,[rip+0x5b2d6]        # 66a88 <_obstack_memory_used@@Base+0x19e08>
    b7b2:	call   a6d0 <fopen@plt>
    b7b7:	mov    QWORD PTR [rip+0x738da],rax        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    b7be:	test   rax,rax
    b7c1:	je     cca7 <__sprintf_chk@plt+0x22f7>
    b7c7:	mov    rax,QWORD PTR [rip+0x73b02]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    b7ce:	mov    rdi,QWORD PTR [rsp+0x88]
    b7d6:	mov    QWORD PTR [rip+0x73d33],rax        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    b7dd:	test   rdi,rdi
    b7e0:	je     b7ee <__sprintf_chk@plt+0xe3e>
    b7e2:	call   48620 <argp_usage@@Base+0x52a0>
    b7e7:	mov    QWORD PTR [rip+0x7410a],rax        # 7f8f8 <obstack_alloc_failed_handler@@Base+0xac0>
    b7ee:	cmp    BYTE PTR [rip+0x73ab7],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
    b7f5:	jne    bc6e <__sprintf_chk@plt+0x12be>
    b7fb:	mov    esi,DWORD PTR [rip+0x7385f]        # 7f060 <obstack_alloc_failed_handler@@Base+0x228>
    b801:	test   esi,esi
    b803:	jne    bb87 <__sprintf_chk@plt+0x11d7>
    b809:	cmp    DWORD PTR [rip+0x73d0c],0x0        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
    b810:	je     b820 <__sprintf_chk@plt+0xe70>
    b812:	cmp    QWORD PTR [rip+0x737b6],0x0        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    b81a:	je     bb7b <__sprintf_chk@plt+0x11cb>
    b820:	mov    rbp,QWORD PTR [rsp+0x78]
    b825:	test   rbp,rbp
    b828:	jne    b84e <__sprintf_chk@plt+0xe9e>
    b82a:	jmp    b988 <__sprintf_chk@plt+0xfd8>
    b82f:	nop
    b830:	mov    r13,QWORD PTR [r12+0x20]
    b835:	mov    rdi,r13
    b838:	call   9ce0 <free@plt>
    b83d:	mov    rdi,r12
    b840:	call   9ce0 <free@plt>
    b845:	test   rbp,rbp
    b848:	je     b988 <__sprintf_chk@plt+0xfd8>
    b84e:	mov    ecx,DWORD PTR [rip+0x7386c]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
    b854:	mov    r12,rbp
    b857:	mov    rbp,QWORD PTR [rbp+0x0]
    b85b:	test   ecx,ecx
    b85d:	je     b830 <__sprintf_chk@plt+0xe80>
    b85f:	mov    rdi,QWORD PTR [r12+0x8]
    b864:	mov    rsi,QWORD PTR [r12+0x10]
    b869:	mov    edx,0x1
    b86e:	call   240f0 <__sprintf_chk@plt+0x19740>
    b873:	mov    r15,QWORD PTR [r12+0x20]
    b878:	mov    rsi,rax
    b87b:	mov    r14,rax
    b87e:	mov    rdi,r15
    b881:	mov    r13,r15
    b884:	call   a320 <strcmp@plt>
    b889:	test   eax,eax
    b88b:	je     b835 <__sprintf_chk@plt+0xe85>
    b88d:	mov    rax,QWORD PTR [rip+0x73c74]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    b894:	test   rax,rax
    b897:	je     b8a0 <__sprintf_chk@plt+0xef0>
    b899:	call   rax
    b89b:	mov    r15,QWORD PTR [r12+0x20]
    b8a0:	mov    r13,QWORD PTR [r12+0x18]
    b8a5:	xor    edi,edi
    b8a7:	mov    edx,0x5
    b8ac:	lea    rsi,[rip+0x5d0f5]        # 689a8 <_obstack_memory_used@@Base+0x1bd28>
    b8b3:	call   a040 <dcgettext@plt>
    b8b8:	mov    r9,r14
    b8bb:	mov    r8,r15
    b8be:	xor    esi,esi
    b8c0:	mov    rdx,rax
    b8c3:	mov    rcx,r13
    b8c6:	xor    edi,edi
    b8c8:	xor    eax,eax
    b8ca:	call   a640 <error@plt>
    b8cf:	jmp    b830 <__sprintf_chk@plt+0xe80>
    b8d4:	mov    rax,QWORD PTR [rip+0x739f5]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    b8db:	mov    rdx,QWORD PTR [rip+0x739e6]        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    b8e2:	lea    rcx,[rax+rdx*8]
    b8e6:	mov    QWORD PTR [rip+0x73c23],rax        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    b8ed:	cmp    rax,rcx
    b8f0:	jae    b79b <__sprintf_chk@plt+0xdeb>
    b8f6:	cs nop WORD PTR [rax+rax*1+0x0]
    b900:	mov    rdx,QWORD PTR [rax]
    b903:	cmp    BYTE PTR [rdx],0x2d
    b906:	jne    b912 <__sprintf_chk@plt+0xf62>
    b908:	cmp    BYTE PTR [rdx+0x1],0x0
    b90c:	je     ca3e <__sprintf_chk@plt+0x208e>
    b912:	add    rax,0x8
    b916:	mov    QWORD PTR [rip+0x73bf3],rax        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    b91d:	cmp    rax,rcx
    b920:	jb     b900 <__sprintf_chk@plt+0xf50>
    b922:	jmp    b79b <__sprintf_chk@plt+0xdeb>
    b927:	cmp    DWORD PTR [rip+0x73ed2],0x0        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    b92e:	je     cc69 <__sprintf_chk@plt+0x22b9>
    b934:	cmp    BYTE PTR [rsp+0x82],0x0
    b93c:	je     b79b <__sprintf_chk@plt+0xdeb>
    b942:	cmp    QWORD PTR [rip+0x7397e],0x0        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    b94a:	je     b79b <__sprintf_chk@plt+0xdeb>
    b950:	mov    rax,QWORD PTR [rip+0x73979]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    b957:	lea    rsi,[rip+0x5ade0]        # 6673e <_obstack_memory_used@@Base+0x19abe>
    b95e:	mov    rbp,QWORD PTR [rax]
    b961:	mov    rdi,rbp
    b964:	call   a320 <strcmp@plt>
    b969:	test   eax,eax
    b96b:	je     b79b <__sprintf_chk@plt+0xdeb>
    b971:	mov    rsi,QWORD PTR [rip+0x73bf0]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
    b978:	mov    rdi,rbp
    b97b:	call   33690 <__sprintf_chk@plt+0x28ce0>
    b980:	jmp    b79b <__sprintf_chk@plt+0xdeb>
    b985:	nop    DWORD PTR [rax]
    b988:	mov    edi,0x66
    b98d:	call   456a0 <argp_usage@@Base+0x2320>
    b992:	mov    QWORD PTR [rip+0x73f33],0x64        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
    b99d:	mov    QWORD PTR [rip+0x73f3c],rax        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
    b9a4:	mov    rax,QWORD PTR [rip+0x73f45]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
    b9ab:	test   rax,rax
    b9ae:	je     b9d3 <__sprintf_chk@plt+0x1023>
    b9b0:	mov    rax,QWORD PTR [rax+0x8]
    b9b4:	test   rax,rax
    b9b7:	je     b9d3 <__sprintf_chk@plt+0x1023>
    b9b9:	nop    DWORD PTR [rax+0x0]
    b9c0:	mov    rdx,rax
    b9c3:	mov    rax,QWORD PTR [rax+0x8]
    b9c7:	test   rax,rax
    b9ca:	jne    b9c0 <__sprintf_chk@plt+0x1010>
    b9cc:	mov    QWORD PTR [rip+0x73f1d],rdx        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
    b9d3:	mov    rdi,QWORD PTR [rip+0x73926]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    b9da:	test   rdi,rdi
    b9dd:	je     ba3f <__sprintf_chk@plt+0x108f>
    b9df:	lea    rsi,[rip+0x5b0ac]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
    b9e6:	call   a6d0 <fopen@plt>
    b9eb:	mov    rbp,rax
    b9ee:	test   rax,rax
    b9f1:	je     cc15 <__sprintf_chk@plt+0x2265>
    b9f7:	mov    rdi,rax
    b9fa:	lea    rdx,[rip+0x70677]        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
    ba01:	xor    eax,eax
    ba03:	lea    rsi,[rip+0x5b07a]        # 66a84 <_obstack_memory_used@@Base+0x19e04>
    ba0a:	call   9ea0 <__isoc99_fscanf@plt>
    ba0f:	sub    eax,0x1
    ba12:	jne    cc3b <__sprintf_chk@plt+0x228b>
    ba18:	cmp    DWORD PTR [rip+0x70659],0x0        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
    ba1f:	js     cc3b <__sprintf_chk@plt+0x228b>
    ba25:	test   BYTE PTR [rbp+0x0],0x20
    ba29:	jne    c529 <__sprintf_chk@plt+0x1b79>
    ba2f:	mov    rdi,rbp
    ba32:	call   9ff0 <fclose@plt>
    ba37:	test   eax,eax
    ba39:	jne    c511 <__sprintf_chk@plt+0x1b61>
    ba3f:	cmp    DWORD PTR [rip+0x73b32],0x9        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    ba46:	ja     ba96 <__sprintf_chk@plt+0x10e6>
    ba48:	mov    eax,DWORD PTR [rip+0x73b2a]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    ba4e:	lea    rdx,[rip+0x5ef03]        # 6a958 <_obstack_memory_used@@Base+0x1dcd8>
    ba55:	movsxd rax,DWORD PTR [rdx+rax*4]
    ba59:	add    rax,rdx
    ba5c:	notrack jmp rax
    ba5f:	mov    rax,QWORD PTR [rip+0x73af2]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    ba66:	mov    rdi,QWORD PTR [rip+0x73ae3]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ba6d:	sub    rax,0x1
    ba71:	mov    QWORD PTR [rip+0x73ad0],rax        # 7f548 <obstack_alloc_failed_handler@@Base+0x710>
    ba78:	call   456a0 <argp_usage@@Base+0x2320>
    ba7d:	mov    QWORD PTR [rip+0x73cdc],rax        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    ba84:	mov    rdi,rax
    ba87:	call   9ce0 <free@plt>
    ba8c:	call   14a80 <__sprintf_chk@plt+0xa0d0>
    ba91:	call   2c7b0 <__sprintf_chk@plt+0x21e00>
    ba96:	mov    edx,DWORD PTR [rip+0x73a80]        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
    ba9c:	test   edx,edx
    ba9e:	jne    bccc <__sprintf_chk@plt+0x131c>
    baa4:	cmp    BYTE PTR [rip+0x73a6d],0x0        # 7f518 <obstack_alloc_failed_handler@@Base+0x6e0>
    baab:	jne    be01 <__sprintf_chk@plt+0x1451>
    bab1:	mov    eax,DWORD PTR [rip+0x74171]        # 7fc28 <argp_program_version_hook@@Base+0x50>
    bab7:	test   eax,eax
    bab9:	jne    bceb <__sprintf_chk@plt+0x133b>
    babf:	cmp    QWORD PTR [rip+0x73839],0x0        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    bac7:	je     bace <__sprintf_chk@plt+0x111e>
    bac9:	call   f700 <__sprintf_chk@plt+0x4d50>
    bace:	mov    rdi,QWORD PTR [rip+0x737fb]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    bad5:	call   9ce0 <free@plt>
    bada:	cmp    QWORD PTR [rip+0x74106],0x0        # 7fbe8 <argp_program_version_hook@@Base+0x10>
    bae2:	jne    be1c <__sprintf_chk@plt+0x146c>
    bae8:	cmp    QWORD PTR [rip+0x74110],0x0        # 7fc00 <argp_program_version_hook@@Base+0x28>
    baf0:	jne    be0b <__sprintf_chk@plt+0x145b>
    baf6:	mov    rdi,QWORD PTR [rip+0x73de3]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
    bafd:	call   9ce0 <free@plt>
    bb02:	cmp    DWORD PTR [rip+0x735bb],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    bb09:	je     c4eb <__sprintf_chk@plt+0x1b3b>
    bb0f:	mov    rax,QWORD PTR [rip+0x7048a]        # 7bfa0 <_obstack_memory_used@@Base+0x2f320>
    bb16:	mov    rax,QWORD PTR [rax]
    bb19:	cmp    QWORD PTR [rip+0x73578],rax        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    bb20:	je     c541 <__sprintf_chk@plt+0x1b91>
    bb26:	mov    rax,QWORD PTR [rip+0x704bb]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
    bb2d:	mov    rdi,QWORD PTR [rax]
    bb30:	test   BYTE PTR [rdi],0x20
    bb33:	je     be6f <__sprintf_chk@plt+0x14bf>
    bb39:	cmp    DWORD PTR [rip+0x73584],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    bb40:	jg     bb4c <__sprintf_chk@plt+0x119c>
    bb42:	mov    DWORD PTR [rip+0x73578],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    bb4c:	mov    eax,DWORD PTR [rip+0x73572]        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    bb52:	mov    rdx,QWORD PTR [rsp+0x188]
    bb5a:	sub    rdx,QWORD PTR fs:0x28
    bb63:	jne    cdc4 <__sprintf_chk@plt+0x2414>
    bb69:	add    rsp,0x198
    bb70:	pop    rbx
    bb71:	pop    rbp
    bb72:	pop    r12
    bb74:	pop    r13
    bb76:	pop    r14
    bb78:	pop    r15
    bb7a:	ret    
    bb7b:	lea    rdi,[rip+0x5766e]        # 631f0 <_obstack_memory_used@@Base+0x16570>
    bb82:	call   fb00 <__sprintf_chk@plt+0x5150>
    bb87:	cmp    DWORD PTR [rip+0x734d2],0x1        # 7f060 <obstack_alloc_failed_handler@@Base+0x228>
    bb8e:	jne    b820 <__sprintf_chk@plt+0xe70>
    bb94:	xor    edx,edx
    bb96:	xor    edi,edi
    bb98:	lea    rsi,[rip+0x73441]        # 7efe0 <obstack_alloc_failed_handler@@Base+0x1a8>
    bb9f:	call   9d80 <sigprocmask@plt>
    bba4:	cmp    DWORD PTR [rip+0x73971],0x0        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
    bbab:	jne    bbb7 <__sprintf_chk@plt+0x1207>
    bbad:	mov    DWORD PTR [rip+0x73965],0xa        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
    bbb7:	mov    DWORD PTR [rip+0x7349f],0x2        # 7f060 <obstack_alloc_failed_handler@@Base+0x228>
    bbc1:	jmp    b820 <__sprintf_chk@plt+0xe70>
    bbc6:	cmp    edx,0x2
    bbc9:	je     c555 <__sprintf_chk@plt+0x1ba5>
    bbcf:	mov    edx,0xa0900
    bbd4:	jmp    b366 <__sprintf_chk@plt+0x9b6>
    bbd9:	cmp    BYTE PTR [rip+0x73b50],0x0        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
    bbe0:	je     bf40 <__sprintf_chk@plt+0x1590>
    bbe6:	mov    rax,QWORD PTR [rip+0x703fb]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
    bbed:	mov    rax,QWORD PTR [rax]
    bbf0:	mov    QWORD PTR [rip+0x734a1],rax        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    bbf7:	jmp    b7c7 <__sprintf_chk@plt+0xe17>
    bbfc:	mov    esi,0x1
    bc01:	lea    rdi,[rip+0x5b15e]        # 66d66 <_obstack_memory_used@@Base+0x1a0e6>
    bc08:	mov    DWORD PTR [rsp+0x8],r8d
    bc0d:	call   9fe0 <__open_2@plt>
    bc12:	test   eax,eax
    bc14:	js     c54b <__sprintf_chk@plt+0x1b9b>
    bc1a:	cmp    eax,0x2
    bc1d:	jle    ac7d <__sprintf_chk@plt+0x2cd>
    bc23:	jmp    acb8 <__sprintf_chk@plt+0x308>
    bc28:	cmp    DWORD PTR [rip+0x73bd1],0x0        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
    bc2f:	jne    b3ab <__sprintf_chk@plt+0x9fb>
    bc35:	add    DWORD PTR [rip+0x73484],0x1        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
    bc3c:	jmp    b3ab <__sprintf_chk@plt+0x9fb>
    bc41:	cmp    QWORD PTR [rip+0x732af],0x0        # 7eef8 <obstack_alloc_failed_handler@@Base+0xc0>
    bc49:	jns    b254 <__sprintf_chk@plt+0x8a4>
    bc4f:	mov    rax,QWORD PTR [rip+0x738b2]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    bc56:	test   rax,rax
    bc59:	je     bc5d <__sprintf_chk@plt+0x12ad>
    bc5b:	call   rax
    bc5d:	mov    edx,0x5
    bc62:	lea    rsi,[rip+0x5cb57]        # 687c0 <_obstack_memory_used@@Base+0x1bb40>
    bc69:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    bc6e:	mov    rsi,QWORD PTR [rsp+0x90]
    bc76:	test   rsi,rsi
    bc79:	je     bc84 <__sprintf_chk@plt+0x12d4>
    bc7b:	cmp    BYTE PTR [rsi],0x0
    bc7e:	jne    c316 <__sprintf_chk@plt+0x1966>
    bc84:	lea    rdi,[rip+0x5b1d2]        # 66e5d <_obstack_memory_used@@Base+0x1a1dd>
    bc8b:	call   9d40 <getenv@plt>
    bc90:	lea    rdi,[rip+0x5b1c5]        # 66e5c <_obstack_memory_used@@Base+0x1a1dc>
    bc97:	mov    rsi,rax
    bc9a:	call   48280 <argp_usage@@Base+0x4f00>
    bc9f:	mov    DWORD PTR [rip+0x73c5b],eax        # 7f900 <obstack_alloc_failed_handler@@Base+0xac8>
    bca5:	test   eax,eax
    bca7:	je     bcc0 <__sprintf_chk@plt+0x1310>
    bca9:	cmp    BYTE PTR [rip+0x73a80],0x0        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
    bcb0:	jne    bcc0 <__sprintf_chk@plt+0x1310>
    bcb2:	cmp    QWORD PTR [rip+0x73a6e],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
    bcba:	je     b7fb <__sprintf_chk@plt+0xe4b>
    bcc0:	mov    BYTE PTR [rip+0x735e5],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
    bcc7:	jmp    b7fb <__sprintf_chk@plt+0xe4b>
    bccc:	call   d340 <__sprintf_chk@plt+0x2990>
    bcd1:	mov    rdi,QWORD PTR [rip+0x732f0]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    bcd8:	test   rdi,rdi
    bcdb:	je     baa4 <__sprintf_chk@plt+0x10f4>
    bce1:	call   9ff0 <fclose@plt>
    bce6:	jmp    baa4 <__sprintf_chk@plt+0x10f4>
    bceb:	mov    rdx,QWORD PTR [rip+0x73ab6]        # 7f7a8 <obstack_alloc_failed_handler@@Base+0x970>
    bcf2:	test   rdx,rdx
    bcf5:	je     babf <__sprintf_chk@plt+0x110f>
    bcfb:	cmp    QWORD PTR [rdx+0x20],0x0
    bd00:	je     babf <__sprintf_chk@plt+0x110f>
    bd06:	mov    rax,QWORD PTR [rdx]
    bd09:	mov    rdx,QWORD PTR [rdx+0x8]
    bd0d:	cmp    rax,rdx
    bd10:	jb     bd2d <__sprintf_chk@plt+0x137d>
    bd12:	jmp    ce07 <__sprintf_chk@plt+0x2457>
    bd17:	nop    WORD PTR [rax+rax*1+0x0]
    bd20:	add    rax,0x10
    bd24:	cmp    rax,rdx
    bd27:	jae    ce07 <__sprintf_chk@plt+0x2457>
    bd2d:	mov    rbp,QWORD PTR [rax]
    bd30:	test   rbp,rbp
    bd33:	je     bd20 <__sprintf_chk@plt+0x1370>
    bd35:	lea    rbx,[rip+0x5b148]        # 66e84 <_obstack_memory_used@@Base+0x1a204>
    bd3c:	nop    DWORD PTR [rax+0x0]
    bd40:	cmp    QWORD PTR [rbp+0x10],0x0
    bd45:	je     bd81 <__sprintf_chk@plt+0x13d1>
    bd47:	mov    rax,QWORD PTR [rip+0x737ba]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    bd4e:	test   rax,rax
    bd51:	je     bd55 <__sprintf_chk@plt+0x13a5>
    bd53:	call   rax
    bd55:	lea    rdi,[rbp+0x18]
    bd59:	call   4b7a0 <argp_usage@@Base+0x8420>
    bd5e:	mov    edx,0x5
    bd63:	mov    rsi,rbx
    bd66:	xor    edi,edi
    bd68:	mov    r12,rax
    bd6b:	call   a040 <dcgettext@plt>
    bd70:	mov    rcx,r12
    bd73:	xor    esi,esi
    bd75:	xor    edi,edi
    bd77:	mov    rdx,rax
    bd7a:	xor    eax,eax
    bd7c:	call   a640 <error@plt>
    bd81:	mov    r12,QWORD PTR [rip+0x73a20]        # 7f7a8 <obstack_alloc_failed_handler@@Base+0x970>
    bd88:	mov    rdi,rbp
    bd8b:	mov    rsi,QWORD PTR [r12+0x10]
    bd90:	call   QWORD PTR [r12+0x30]
    bd95:	cmp    rax,QWORD PTR [r12+0x10]
    bd9a:	jae    ce07 <__sprintf_chk@plt+0x2457>
    bda0:	shl    rax,0x4
    bda4:	add    rax,QWORD PTR [r12]
    bda8:	mov    rdx,rax
    bdab:	jmp    bdb5 <__sprintf_chk@plt+0x1405>
    bdad:	nop    DWORD PTR [rax]
    bdb0:	test   rdx,rdx
    bdb3:	je     bdc6 <__sprintf_chk@plt+0x1416>
    bdb5:	mov    rcx,QWORD PTR [rdx]
    bdb8:	mov    rdx,QWORD PTR [rdx+0x8]
    bdbc:	cmp    rcx,rbp
    bdbf:	jne    bdb0 <__sprintf_chk@plt+0x1400>
    bdc1:	test   rdx,rdx
    bdc4:	jne    bdf0 <__sprintf_chk@plt+0x1440>
    bdc6:	mov    rdx,QWORD PTR [r12+0x8]
    bdcb:	jmp    bddc <__sprintf_chk@plt+0x142c>
    bdcd:	nop    DWORD PTR [rax]
    bdd0:	mov    rbp,QWORD PTR [rax]
    bdd3:	test   rbp,rbp
    bdd6:	jne    bd40 <__sprintf_chk@plt+0x1390>
    bddc:	add    rax,0x10
    bde0:	cmp    rax,rdx
    bde3:	jb     bdd0 <__sprintf_chk@plt+0x1420>
    bde5:	jmp    babf <__sprintf_chk@plt+0x110f>
    bdea:	nop    WORD PTR [rax+rax*1+0x0]
    bdf0:	mov    rbp,QWORD PTR [rdx]
    bdf3:	test   rbp,rbp
    bdf6:	jne    bd40 <__sprintf_chk@plt+0x1390>
    bdfc:	jmp    babf <__sprintf_chk@plt+0x110f>
    be01:	call   eba0 <__sprintf_chk@plt+0x41f0>
    be06:	jmp    bab1 <__sprintf_chk@plt+0x1101>
    be0b:	mov    rdi,QWORD PTR [rip+0x73de6]        # 7fbf8 <argp_program_version_hook@@Base+0x20>
    be12:	call   9ce0 <free@plt>
    be17:	jmp    baf6 <__sprintf_chk@plt+0x1146>
    be1c:	mov    rdi,QWORD PTR [rip+0x73dbd]        # 7fbe0 <argp_program_version_hook@@Base+0x8>
    be23:	call   9ce0 <free@plt>
    be28:	jmp    bae8 <__sprintf_chk@plt+0x1138>
    be2d:	mov    rbp,QWORD PTR [rip+0x7349c]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    be34:	lea    rdi,[rip+0x5af96]        # 66dd1 <_obstack_memory_used@@Base+0x1a151>
    be3b:	mov    QWORD PTR [rip+0x73482],0x1        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
    be46:	call   9d40 <getenv@plt>
    be4b:	mov    QWORD PTR [rbp+0x0],rax
    be4f:	mov    rax,QWORD PTR [rip+0x7347a]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    be56:	cmp    QWORD PTR [rax],0x0
    be5a:	jne    b10b <__sprintf_chk@plt+0x75b>
    be60:	lea    rsi,[rip+0x5a8d7]        # 6673e <_obstack_memory_used@@Base+0x19abe>
    be67:	mov    QWORD PTR [rax],rsi
    be6a:	jmp    b10b <__sprintf_chk@plt+0x75b>
    be6f:	call   9ff0 <fclose@plt>
    be74:	test   eax,eax
    be76:	jne    bb39 <__sprintf_chk@plt+0x1189>
    be7c:	jmp    bb4c <__sprintf_chk@plt+0x119c>
    be81:	mov    BYTE PTR [rip+0x73928],0x0        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
    be88:	cmp    QWORD PTR [rip+0x73d80],0x0        # 7fc10 <argp_program_version_hook@@Base+0x38>
    be90:	jne    b330 <__sprintf_chk@plt+0x980>
    be96:	mov    rax,QWORD PTR [rip+0x73433]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    be9d:	mov    rdi,QWORD PTR [rax]
    bea0:	call   482c0 <argp_usage@@Base+0x4f40>
    bea5:	lea    rsi,[rsp+0x50]
    beaa:	mov    rdi,rax
    bead:	mov    rbp,rax
    beb0:	call   2d5f0 <__sprintf_chk@plt+0x22c40>
    beb5:	mov    r13,rax
    beb8:	test   rax,rax
    bebb:	je     c974 <__sprintf_chk@plt+0x1fc4>
    bec1:	mov    r12,QWORD PTR [rsp+0x50]
    bec6:	cmp    r12,0x4
    beca:	jbe    c96b <__sprintf_chk@plt+0x1fbb>
    bed0:	lea    r14,[r12-0x4]
    bed5:	mov    edx,0x4
    beda:	lea    rsi,[rip+0x5af59]        # 66e3a <_obstack_memory_used@@Base+0x1a1ba>
    bee1:	lea    rdi,[rbp+r14*1+0x0]
    bee6:	call   9e50 <strncmp@plt>
    beeb:	test   eax,eax
    beed:	jne    bf00 <__sprintf_chk@plt+0x1550>
    beef:	mov    rax,QWORD PTR [r13+0x0]
    bef3:	cmp    BYTE PTR [rax],0x74
    bef6:	je     bf00 <__sprintf_chk@plt+0x1550>
    bef8:	mov    QWORD PTR [rsp+0x50],r14
    befd:	mov    r12,r14
    bf00:	lea    rdi,[r12+0x1]
    bf05:	call   456a0 <argp_usage@@Base+0x2320>
    bf0a:	mov    rdx,r12
    bf0d:	mov    rsi,rbp
    bf10:	mov    rdi,rax
    bf13:	call   a420 <memcpy@plt>
    bf18:	mov    rdi,rbp
    bf1b:	mov    BYTE PTR [rax+r12*1],0x0
    bf20:	mov    QWORD PTR [rip+0x73ce9],rax        # 7fc10 <argp_program_version_hook@@Base+0x38>
    bf27:	call   9ce0 <free@plt>
    bf2c:	jmp    b330 <__sprintf_chk@plt+0x980>
    bf31:	mov    DWORD PTR [rip+0x73369],0x6        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    bf3b:	jmp    b07b <__sprintf_chk@plt+0x6cb>
    bf40:	mov    rax,QWORD PTR [rip+0x70059]        # 7bfa0 <_obstack_memory_used@@Base+0x2f320>
    bf47:	mov    rax,QWORD PTR [rax]
    bf4a:	jmp    bbf0 <__sprintf_chk@plt+0x1240>
    bf4f:	pxor   xmm0,xmm0
    bf53:	movaps XMMWORD PTR [rip+0x73836],xmm0        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
    bf5a:	jmp    b176 <__sprintf_chk@plt+0x7c6>
    bf5f:	mov    rdx,rax
    bf62:	and    eax,0x1
    bf65:	pxor   xmm1,xmm1
    bf69:	shr    rdx,1
    bf6c:	or     rdx,rax
    bf6f:	cvtsi2sd xmm1,rdx
    bf74:	addsd  xmm1,xmm1
    bf78:	jmp    b3d8 <__sprintf_chk@plt+0xa28>
    bf7d:	call   44ce0 <argp_usage@@Base+0x1960>
    bf82:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    bf87:	mov    rax,QWORD PTR [rip+0x7357a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    bf8e:	test   rax,rax
    bf91:	je     bf95 <__sprintf_chk@plt+0x15e5>
    bf93:	call   rax
    bf95:	xor    edi,edi
    bf97:	mov    edx,0x5
    bf9c:	lea    rsi,[rip+0x5c6cd]        # 68670 <_obstack_memory_used@@Base+0x1b9f0>
    bfa3:	call   a040 <dcgettext@plt>
    bfa8:	xor    esi,esi
    bfaa:	xor    edi,edi
    bfac:	mov    rdx,rax
    bfaf:	xor    eax,eax
    bfb1:	call   a640 <error@plt>
    bfb6:	jmp    b176 <__sprintf_chk@plt+0x7c6>
    bfbb:	mov    edx,DWORD PTR [rip+0x735b7]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    bfc1:	lea    rax,[rip+0x5ec98]        # 6ac60 <_obstack_memory_used@@Base+0x1dfe0>
    bfc8:	test   BYTE PTR [rax+rdx*4],0x1
    bfcc:	jne    b293 <__sprintf_chk@plt+0x8e3>
    bfd2:	mov    rax,QWORD PTR [rip+0x7352f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    bfd9:	test   rax,rax
    bfdc:	je     bfe0 <__sprintf_chk@plt+0x1630>
    bfde:	call   rax
    bfe0:	mov    edx,0x5
    bfe5:	lea    rsi,[rip+0x5c83c]        # 68828 <_obstack_memory_used@@Base+0x1bba8>
    bfec:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    bff1:	lea    rdi,[rip+0x1ce78]        # 28e70 <__sprintf_chk@plt+0x1e4c0>
    bff8:	call   2c930 <__sprintf_chk@plt+0x21f80>
    bffd:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    c002:	call   a1c0 <geteuid@plt>
    c007:	test   eax,eax
    c009:	sete   al
    c00c:	xor    edi,edi
    c00e:	mov    BYTE PTR [rip+0x73725],al        # 7f739 <obstack_alloc_failed_handler@@Base+0x901>
    c014:	movzx  eax,al
    c017:	add    DWORD PTR [rip+0x7372f],eax        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
    c01d:	add    DWORD PTR [rip+0x7372d],eax        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
    c023:	call   a3f0 <umask@plt>
    c028:	mov    DWORD PTR [rip+0x7370e],eax        # 7f73c <obstack_alloc_failed_handler@@Base+0x904>
    c02e:	mov    edi,eax
    c030:	xor    eax,eax
    c032:	cmp    DWORD PTR [rip+0x73713],0x0        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
    c039:	jle    c8bf <__sprintf_chk@plt+0x1f0f>
    c03f:	lea    rdi,[rip+0xbbca]        # 17c10 <__sprintf_chk@plt+0xd260>
    c046:	mov    DWORD PTR [rip+0x736fc],eax        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
    c04c:	call   2c930 <__sprintf_chk@plt+0x21f80>
    c051:	call   185b0 <__sprintf_chk@plt+0xdc00>
    c056:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    c05b:	call   fff0 <__sprintf_chk@plt+0x5640>
    c060:	lea    rdi,[rip+0x7e59]        # 13ec0 <__sprintf_chk@plt+0x9510>
    c067:	call   2c930 <__sprintf_chk@plt+0x21f80>
    c06c:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    c071:	call   2c400 <__sprintf_chk@plt+0x21a50>
    c076:	mov    edi,0x2
    c07b:	lea    r12,[rip+0x7329e]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    c082:	lea    r13,[rip+0x7303f]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c089:	call   10ec0 <__sprintf_chk@plt+0x6510>
    c08e:	mov    rax,QWORD PTR [rip+0x7323b]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    c095:	lea    rsi,[rip+0x5a6a2]        # 6673e <_obstack_memory_used@@Base+0x19abe>
    c09c:	lea    r14,[rip+0x5e8dd]        # 6a980 <_obstack_memory_used@@Base+0x1dd00>
    c0a3:	mov    rdi,QWORD PTR [rax]
    c0a6:	call   a320 <strcmp@plt>
    c0ab:	test   eax,eax
    c0ad:	sete   BYTE PTR [rip+0x736a8]        # 7f75c <obstack_alloc_failed_handler@@Base+0x924>
    c0b4:	xor    r15d,r15d
    c0b7:	mov    edx,0x1
    c0bc:	mov    rsi,r12
    c0bf:	mov    rdi,r13
    c0c2:	call   2ab30 <__sprintf_chk@plt+0x20180>
    c0c7:	mov    ebp,eax
    c0c9:	cmp    eax,0x5
    c0cc:	ja     c1df <__sprintf_chk@plt+0x182f>
    c0d2:	mov    eax,eax
    c0d4:	movsxd rax,DWORD PTR [r14+rax*4]
    c0d8:	add    rax,r14
    c0db:	notrack jmp rax
    c0de:	mov    rax,QWORD PTR [rip+0x73473]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    c0e5:	mov    rdi,QWORD PTR [rip+0x73464]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    c0ec:	sub    rax,0x1
    c0f0:	mov    QWORD PTR [rip+0x73451],rax        # 7f548 <obstack_alloc_failed_handler@@Base+0x710>
    c0f7:	call   456a0 <argp_usage@@Base+0x2320>
    c0fc:	mov    rsi,QWORD PTR [rip+0x73485]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    c103:	mov    rdx,QWORD PTR [rip+0x73436]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c10a:	mov    BYTE PTR [rip+0x72fc7],0x0        # 7f0d8 <obstack_alloc_failed_handler@@Base+0x2a0>
    c111:	mov    QWORD PTR [rip+0x73648],rax        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    c118:	sub    rdx,rsi
    c11b:	mov    rcx,rdx
    c11e:	sar    rcx,0x9
    c122:	mov    DWORD PTR [rip+0x73630],ecx        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c128:	test   ecx,ecx
    c12a:	jne    c8cf <__sprintf_chk@plt+0x1f1f>
    c130:	sub    ebp,0x1
    c133:	je     ca05 <__sprintf_chk@plt+0x2055>
    c139:	mov    rax,QWORD PTR [rip+0x73440]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    c140:	cmp    QWORD PTR [rip+0x733f9],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c147:	je     c58a <__sprintf_chk@plt+0x1bda>
    c14d:	xor    edx,edx
    c14f:	mov    rsi,r12
    c152:	mov    rdi,r13
    c155:	call   2ab30 <__sprintf_chk@plt+0x20180>
    c15a:	cmp    eax,0x4
    c15d:	je     c463 <__sprintf_chk@plt+0x1ab3>
    c163:	ja     c3fe <__sprintf_chk@plt+0x1a4e>
    c169:	cmp    eax,0x1
    c16c:	jne    c451 <__sprintf_chk@plt+0x1aa1>
    c172:	mov    rdi,r12
    c175:	call   1cce0 <__sprintf_chk@plt+0x12330>
    c17a:	mov    rdi,QWORD PTR [rip+0x731a7]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    c181:	call   32190 <__sprintf_chk@plt+0x277e0>
    c186:	test   rax,rax
    c189:	je     c330 <__sprintf_chk@plt+0x1980>
    c18f:	mov    rsi,QWORD PTR [rax+0x30]
    c193:	lea    rdx,[rsi+0x1]
    c197:	mov    QWORD PTR [rax+0x30],rdx
    c19b:	mov    rax,QWORD PTR [rip+0x73786]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
    c1a2:	test   rax,rax
    c1a5:	jne    c327 <__sprintf_chk@plt+0x1977>
    c1ab:	test   rdx,rdx
    c1ae:	je     c330 <__sprintf_chk@plt+0x1980>
    c1b4:	call   19020 <__sprintf_chk@plt+0xe670>
    c1b9:	mov    rdi,r12
    c1bc:	call   44a50 <argp_usage@@Base+0x16d0>
    c1c1:	jmp    c139 <__sprintf_chk@plt+0x1789>
    c1c6:	cmp    BYTE PTR [rip+0x72d9b],0x0        # 7ef68 <obstack_alloc_failed_handler@@Base+0x130>
    c1cd:	je     ba5f <__sprintf_chk@plt+0x10af>
    c1d3:	mov    rdi,QWORD PTR [rip+0x72eee]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c1da:	call   ece0 <__sprintf_chk@plt+0x4330>
    c1df:	mov    r15d,ebp
    c1e2:	jmp    c0b7 <__sprintf_chk@plt+0x1707>
    c1e7:	mov    rdi,QWORD PTR [rip+0x7313a]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    c1ee:	call   32190 <__sprintf_chk@plt+0x277e0>
    c1f3:	test   rax,rax
    c1f6:	je     c222 <__sprintf_chk@plt+0x1872>
    c1f8:	mov    rsi,QWORD PTR [rax+0x30]
    c1fc:	lea    rdx,[rsi+0x1]
    c200:	mov    QWORD PTR [rax+0x30],rdx
    c204:	mov    rax,QWORD PTR [rip+0x7371d]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
    c20b:	test   rax,rax
    c20e:	je     c661 <__sprintf_chk@plt+0x1cb1>
    c214:	cmp    rdx,rax
    c217:	setne  al
    c21a:	test   al,al
    c21c:	je     c0de <__sprintf_chk@plt+0x172e>
    c222:	cmp    BYTE PTR [rip+0x73280],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
    c229:	jne    c1df <__sprintf_chk@plt+0x182f>
    c22b:	call   25260 <__sprintf_chk@plt+0x1a8b0>
    c230:	jmp    c1df <__sprintf_chk@plt+0x182f>
    c232:	mov    rdi,QWORD PTR [rip+0x72e8f]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c239:	call   ece0 <__sprintf_chk@plt+0x4330>
    c23e:	test   r15d,r15d
    c241:	je     c88b <__sprintf_chk@plt+0x1edb>
    c247:	sub    r15d,0x1
    c24b:	cmp    r15d,0x2
    c24f:	ja     c1df <__sprintf_chk@plt+0x182f>
    c251:	mov    rax,QWORD PTR [rip+0x732b0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    c258:	test   rax,rax
    c25b:	je     c25f <__sprintf_chk@plt+0x18af>
    c25d:	call   rax
    c25f:	mov    edx,0x5
    c264:	lea    rsi,[rip+0x58e43]        # 650ae <_obstack_memory_used@@Base+0x1842e>
    c26b:	xor    edi,edi
    c26d:	call   a040 <dcgettext@plt>
    c272:	xor    esi,esi
    c274:	xor    edi,edi
    c276:	mov    rdx,rax
    c279:	xor    eax,eax
    c27b:	call   a640 <error@plt>
    c280:	mov    DWORD PTR [rip+0x72e3a],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    c28a:	jmp    c1df <__sprintf_chk@plt+0x182f>
    c28f:	call   21a10 <__sprintf_chk@plt+0x17060>
    c294:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    c299:	call   23590 <__sprintf_chk@plt+0x18be0>
    c29e:	lea    rbp,[rip+0x7307b]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    c2a5:	call   2c400 <__sprintf_chk@plt+0x21a50>
    c2aa:	xor    edi,edi
    c2ac:	call   10ec0 <__sprintf_chk@plt+0x6510>
    c2b1:	xor    edx,edx
    c2b3:	mov    rsi,rbp
    c2b6:	lea    rdi,[rip+0x72e0b]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c2bd:	call   2ab30 <__sprintf_chk@plt+0x20180>
    c2c2:	sub    eax,0x1
    c2c5:	je     c8df <__sprintf_chk@plt+0x1f2f>
    c2cb:	call   14a80 <__sprintf_chk@plt+0xa0d0>
    c2d0:	mov    rbx,QWORD PTR [rip+0x73501]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
    c2d7:	mov    rcx,QWORD PTR [rip+0x7364a]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
    c2de:	mov    rdx,rbx
    c2e1:	test   rbx,rbx
    c2e4:	jne    c305 <__sprintf_chk@plt+0x1955>
    c2e6:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    c2eb:	test   rax,rax
    c2ee:	setne  al
    c2f1:	test   al,al
    c2f3:	jne    ba96 <__sprintf_chk@plt+0x10e6>
    c2f9:	mov    rdx,QWORD PTR [rdx]
    c2fc:	test   rdx,rdx
    c2ff:	je     c5a5 <__sprintf_chk@plt+0x1bf5>
    c305:	mov    rax,QWORD PTR [rdx+0x30]
    c309:	test   rcx,rcx
    c30c:	je     c2eb <__sprintf_chk@plt+0x193b>
    c30e:	cmp    rcx,rax
    c311:	setbe  al
    c314:	jmp    c2f1 <__sprintf_chk@plt+0x1941>
    c316:	lea    rdi,[rip+0x5ab36]        # 66e53 <_obstack_memory_used@@Base+0x1a1d3>
    c31d:	call   48280 <argp_usage@@Base+0x4f00>
    c322:	jmp    bc9f <__sprintf_chk@plt+0x12ef>
    c327:	cmp    rdx,rax
    c32a:	je     c1b4 <__sprintf_chk@plt+0x1804>
    c330:	mov    r14,QWORD PTR [rip+0x73159]        # 7f490 <obstack_alloc_failed_handler@@Base+0x658>
    c337:	test   r14,r14
    c33a:	je     c66c <__sprintf_chk@plt+0x1cbc>
    c340:	mov    rbp,QWORD PTR [rip+0x73151]        # 7f498 <obstack_alloc_failed_handler@@Base+0x660>
    c347:	mov    rsi,r14
    c34a:	mov    r15,r14
    c34d:	shr    rsi,0x9
    c351:	and    r15d,0x1ff
    c358:	mov    rdi,rbp
    c35b:	call   18f70 <__sprintf_chk@plt+0xe5c0>
    c360:	movsxd rax,DWORD PTR [rip+0x733f1]        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c367:	mov    rdx,r14
    c36a:	and    rdx,0xfffffffffffffe00
    c371:	mov    r8,rax
    c374:	add    rdx,rbp
    c377:	shl    rax,0x9
    c37b:	add    rax,QWORD PTR [rip+0x733de]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    c382:	cmp    r15d,0x8
    c386:	jae    c9d3 <__sprintf_chk@plt+0x2023>
    c38c:	test   r15b,0x4
    c390:	jne    ca62 <__sprintf_chk@plt+0x20b2>
    c396:	test   r15d,r15d
    c399:	je     c3aa <__sprintf_chk@plt+0x19fa>
    c39b:	movzx  ecx,BYTE PTR [rdx]
    c39e:	mov    BYTE PTR [rax],cl
    c3a0:	test   r15b,0x2
    c3a4:	jne    ca8a <__sprintf_chk@plt+0x20da>
    c3aa:	mov    edx,0x200
    c3af:	add    rax,r15
    c3b2:	sub    rdx,r15
    c3b5:	cmp    edx,0x8
    c3b8:	jae    c9a6 <__sprintf_chk@plt+0x1ff6>
    c3be:	test   dl,0x4
    c3c1:	jne    ca75 <__sprintf_chk@plt+0x20c5>
    c3c7:	test   edx,edx
    c3c9:	je     c3d7 <__sprintf_chk@plt+0x1a27>
    c3cb:	mov    BYTE PTR [rax],0x0
    c3ce:	test   dl,0x2
    c3d1:	jne    ca9b <__sprintf_chk@plt+0x20eb>
    c3d7:	add    r8d,0x1
    c3db:	cmp    r8d,DWORD PTR [rip+0x7314e]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    c3e2:	mov    DWORD PTR [rip+0x7336f],r8d        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c3e9:	jne    c692 <__sprintf_chk@plt+0x1ce2>
    c3ef:	mov    edi,0x1
    c3f4:	call   18ea0 <__sprintf_chk@plt+0xe4f0>
    c3f9:	jmp    c692 <__sprintf_chk@plt+0x1ce2>
    c3fe:	cmp    eax,0x5
    c401:	jne    ce07 <__sprintf_chk@plt+0x2457>
    c407:	mov    rax,QWORD PTR [rip+0x730fa]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    c40e:	test   rax,rax
    c411:	je     c415 <__sprintf_chk@plt+0x1a65>
    c413:	call   rax
    c415:	mov    edx,0x5
    c41a:	lea    rsi,[rip+0x5c627]        # 68a48 <_obstack_memory_used@@Base+0x1bdc8>
    c421:	xor    edi,edi
    c423:	call   a040 <dcgettext@plt>
    c428:	xor    esi,esi
    c42a:	xor    edi,edi
    c42c:	mov    rdx,rax
    c42f:	xor    eax,eax
    c431:	call   a640 <error@plt>
    c436:	mov    DWORD PTR [rip+0x72c84],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    c440:	mov    rdi,QWORD PTR [rip+0x72c81]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c447:	call   ece0 <__sprintf_chk@plt+0x4330>
    c44c:	jmp    c1b9 <__sprintf_chk@plt+0x1809>
    c451:	cmp    eax,0x3
    c454:	jne    ce07 <__sprintf_chk@plt+0x2457>
    c45a:	cmp    BYTE PTR [rip+0x72b07],0x0        # 7ef68 <obstack_alloc_failed_handler@@Base+0x130>
    c461:	jne    c440 <__sprintf_chk@plt+0x1a90>
    c463:	mov    rdi,r12
    c466:	call   44a50 <argp_usage@@Base+0x16d0>
    c46b:	movsxd rdi,DWORD PTR [rip+0x732e6]        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c472:	mov    ebp,DWORD PTR [rip+0x730b8]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    c478:	xor    esi,esi
    c47a:	sub    ebp,edi
    c47c:	shl    rdi,0x9
    c480:	add    rdi,QWORD PTR [rip+0x732d9]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    c487:	mov    edx,ebp
    c489:	add    ebx,ebp
    c48b:	shl    edx,0x9
    c48e:	movsxd rdx,edx
    c491:	call   a1b0 <memset@plt>
    c496:	xor    edi,edi
    c498:	cmp    ebx,0x1
    c49b:	setle  dil
    c49f:	call   18ea0 <__sprintf_chk@plt+0xe4f0>
    c4a4:	cmp    ebx,0x1
    c4a7:	jle    c46b <__sprintf_chk@plt+0x1abb>
    c4a9:	cmp    BYTE PTR [rip+0x732ac],0x0        # 7f75c <obstack_alloc_failed_handler@@Base+0x924>
    c4b0:	jne    c4df <__sprintf_chk@plt+0x1b2f>
    c4b2:	mov    edi,DWORD PTR [rip+0x730a8]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    c4b8:	cmp    edi,0x3fffffff
    c4be:	jg     c4df <__sprintf_chk@plt+0x1b2f>
    c4c0:	call   33660 <__sprintf_chk@plt+0x28cb0>
    c4c5:	test   eax,eax
    c4c7:	je     c4df <__sprintf_chk@plt+0x1b2f>
    c4c9:	mov    rax,QWORD PTR [rip+0x72e00]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
    c4d0:	lea    rdi,[rip+0x57f11]        # 643e8 <_obstack_memory_used@@Base+0x17768>
    c4d7:	mov    rsi,QWORD PTR [rax]
    c4da:	call   3c100 <__sprintf_chk@plt+0x31750>
    c4df:	mov    rax,QWORD PTR [rip+0x7327a]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    c4e6:	jmp    ba84 <__sprintf_chk@plt+0x10d4>
    c4eb:	xor    edi,edi
    c4ed:	mov    edx,0x5
    c4f2:	lea    rsi,[rip+0x5c577]        # 68a70 <_obstack_memory_used@@Base+0x1bdf0>
    c4f9:	call   a040 <dcgettext@plt>
    c4fe:	xor    esi,esi
    c500:	xor    edi,edi
    c502:	mov    rdx,rax
    c505:	xor    eax,eax
    c507:	call   a640 <error@plt>
    c50c:	jmp    bb0f <__sprintf_chk@plt+0x115f>
    c511:	mov    rsi,QWORD PTR [rip+0x72de8]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    c518:	lea    rdi,[rip+0x5a53d]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
    c51f:	call   3bad0 <__sprintf_chk@plt+0x31120>
    c524:	jmp    ba3f <__sprintf_chk@plt+0x108f>
    c529:	mov    rsi,QWORD PTR [rip+0x72dd0]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    c530:	lea    rdi,[rip+0x57052]        # 63589 <_obstack_memory_used@@Base+0x16909>
    c537:	call   3bad0 <__sprintf_chk@plt+0x31120>
    c53c:	jmp    ba2f <__sprintf_chk@plt+0x107f>
    c541:	call   4b700 <argp_usage@@Base+0x8380>
    c546:	jmp    bb4c <__sprintf_chk@plt+0x119c>
    c54b:	mov    r8d,DWORD PTR [rsp+0x8]
    c550:	jmp    aca0 <__sprintf_chk@plt+0x2f0>
    c555:	mov    edx,0xe0900
    c55a:	mov    ecx,0xf0900
    c55f:	mov    eax,0x100
    c564:	jmp    b377 <__sprintf_chk@plt+0x9c7>
    c569:	xor    eax,eax
    c56b:	mov    edx,0xc0900
    c570:	mov    ecx,0xd0900
    c575:	jmp    b377 <__sprintf_chk@plt+0x9c7>
    c57a:	mov    QWORD PTR [rip+0x72a33],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
    c585:	jmp    b425 <__sprintf_chk@plt+0xa75>
    c58a:	call   f170 <__sprintf_chk@plt+0x47c0>
    c58f:	jmp    c14d <__sprintf_chk@plt+0x179d>
    c594:	lea    rdi,[rip+0x5acf6]        # 67291 <_obstack_memory_used@@Base+0x1a611>
    c59b:	call   2d930 <__sprintf_chk@plt+0x22f80>
    c5a0:	jmp    aff5 <__sprintf_chk@plt+0x645>
    c5a5:	cmp    DWORD PTR [rip+0x72b14],0x0        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
    c5ac:	jne    c7e8 <__sprintf_chk@plt+0x1e38>
    c5b2:	cmp    DWORD PTR [rip+0x72b0b],0x0        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    c5b9:	jg     c5d7 <__sprintf_chk@plt+0x1c27>
    c5bb:	mov    DWORD PTR [rip+0x72aff],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    c5c5:	jmp    c5d7 <__sprintf_chk@plt+0x1c27>
    c5c7:	mov    rdi,QWORD PTR [rbx+0x10]
    c5cb:	call   29470 <__sprintf_chk@plt+0x1eac0>
    c5d0:	test   eax,eax
    c5d2:	jne    c5dc <__sprintf_chk@plt+0x1c2c>
    c5d4:	mov    rbx,QWORD PTR [rbx]
    c5d7:	test   rbx,rbx
    c5da:	jne    c5c7 <__sprintf_chk@plt+0x1c17>
    c5dc:	cmp    BYTE PTR [rip+0x732de],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
    c5e3:	mov    QWORD PTR [rip+0x731ea],0x0        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
    c5ee:	mov    QWORD PTR [rip+0x731d7],0x0        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
    c5f9:	je     ba96 <__sprintf_chk@plt+0x10e6>
    c5ff:	mov    edi,0x1
    c604:	call   2b560 <__sprintf_chk@plt+0x20bb0>
    c609:	test   rax,rax
    c60c:	je     ba96 <__sprintf_chk@plt+0x10e6>
    c612:	mov    rdi,QWORD PTR [rax+0x18]
    c616:	test   rdi,rdi
    c619:	je     ba96 <__sprintf_chk@plt+0x10e6>
    c61f:	call   29470 <__sprintf_chk@plt+0x1eac0>
    c624:	test   eax,eax
    c626:	je     c5ff <__sprintf_chk@plt+0x1c4f>
    c628:	jmp    ba96 <__sprintf_chk@plt+0x10e6>
    c62d:	mov    rax,QWORD PTR [rip+0x72ed4]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    c634:	test   rax,rax
    c637:	je     c63b <__sprintf_chk@plt+0x1c8b>
    c639:	call   rax
    c63b:	mov    edx,0x5
    c640:	lea    rsi,[rip+0x5c3b1]        # 689f8 <_obstack_memory_used@@Base+0x1bd78>
    c647:	xor    edi,edi
    c649:	call   a040 <dcgettext@plt>
    c64e:	xor    esi,esi
    c650:	xor    edi,edi
    c652:	mov    rdx,rax
    c655:	xor    eax,eax
    c657:	call   a640 <error@plt>
    c65c:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
    c661:	test   rdx,rdx
    c664:	sete   al
    c667:	jmp    c21a <__sprintf_chk@plt+0x186a>
    c66c:	mov    rsi,QWORD PTR [rip+0x732c5]        # 7f938 <obstack_alloc_failed_handler@@Base+0xb00>
    c673:	mov    rdi,QWORD PTR [rip+0x732a6]        # 7f920 <obstack_alloc_failed_handler@@Base+0xae8>
    c67a:	call   18f70 <__sprintf_chk@plt+0xe5c0>
    c67f:	mov    rsi,QWORD PTR [rip+0x732aa]        # 7f930 <obstack_alloc_failed_handler@@Base+0xaf8>
    c686:	mov    rdi,QWORD PTR [rip+0x7328b]        # 7f918 <obstack_alloc_failed_handler@@Base+0xae0>
    c68d:	call   18f70 <__sprintf_chk@plt+0xe5c0>
    c692:	mov    r8,QWORD PTR [rip+0x72a2f]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c699:	movsxd rax,DWORD PTR [rip+0x730b8]        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c6a0:	mov    r9d,0x200
    c6a6:	mov    rcx,QWORD PTR [r8]
    c6a9:	mov    rdx,rax
    c6ac:	shl    rax,0x9
    c6b0:	mov    rsi,r8
    c6b3:	add    rax,QWORD PTR [rip+0x730a6]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    c6ba:	lea    r14d,[rdx+0x1]
    c6be:	mov    QWORD PTR [rax],rcx
    c6c1:	lea    rdi,[rax+0x8]
    c6c5:	mov    rcx,QWORD PTR [r8+0x1f8]
    c6cc:	and    rdi,0xfffffffffffffff8
    c6d0:	mov    QWORD PTR [rax+0x1f8],rcx
    c6d7:	sub    rax,rdi
    c6da:	sub    rsi,rax
    c6dd:	add    eax,0x200
    c6e2:	shr    eax,0x3
    c6e5:	mov    ecx,eax
    c6e7:	mov    rax,QWORD PTR [rip+0x72cba]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
    c6ee:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    c6f1:	mov    rdi,r8
    c6f4:	mov    DWORD PTR [rip+0x7305d],r14d        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c6fb:	add    rax,0x1ff
    c701:	cqo    
    c703:	idiv   r9
    c706:	mov    rbp,rax
    c709:	mov    r15,rax
    c70c:	call   ece0 <__sprintf_chk@plt+0x4330>
    c711:	cmp    r14d,DWORD PTR [rip+0x72e18]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    c718:	je     ca0f <__sprintf_chk@plt+0x205f>
    c71e:	mov    r8,QWORD PTR [rip+0x72e5b]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    c725:	sub    r8,QWORD PTR [rip+0x72e14]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c72c:	sar    r8,0x9
    c730:	movsxd rax,r8d
    c733:	mov    r14d,r8d
    c736:	cmp    rbp,rax
    c739:	cmovl  r14d,ebp
    c73d:	test   rbp,rbp
    c740:	jne    c750 <__sprintf_chk@plt+0x1da0>
    c742:	jmp    c1b9 <__sprintf_chk@plt+0x1809>
    c747:	test   r15,r15
    c74a:	je     c1b9 <__sprintf_chk@plt+0x1809>
    c750:	mov    rax,QWORD PTR [rip+0x72e29]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    c757:	cmp    QWORD PTR [rip+0x72de2],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c75e:	mov    ebp,DWORD PTR [rip+0x72dcc]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    c764:	je     c815 <__sprintf_chk@plt+0x1e65>
    c76a:	mov    ecx,DWORD PTR [rip+0x72fe8]        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c770:	sub    ebp,ecx
    c772:	cmp    ebp,r14d
    c775:	cmovg  ebp,r14d
    c779:	test   ebp,ebp
    c77b:	je     ce07 <__sprintf_chk@plt+0x2457>
    c781:	mov    edx,ebp
    c783:	movsxd rdi,ecx
    c786:	mov    rsi,QWORD PTR [rip+0x72db3]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c78d:	mov    DWORD PTR [rsp+0x14],ecx
    c791:	shl    edx,0x9
    c794:	shl    rdi,0x9
    c798:	add    rdi,QWORD PTR [rip+0x72fc1]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
    c79f:	sub    r14d,ebp
    c7a2:	movsxd rdx,edx
    c7a5:	mov    QWORD PTR [rsp+0x8],rdx
    c7aa:	call   a420 <memcpy@plt>
    c7af:	mov    ecx,DWORD PTR [rsp+0x14]
    c7b3:	movsxd rax,ebp
    c7b6:	mov    rdx,QWORD PTR [rsp+0x8]
    c7bb:	sub    r15,rax
    c7be:	add    QWORD PTR [rip+0x72d7b],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c7c5:	add    ecx,ebp
    c7c7:	cmp    ecx,DWORD PTR [rip+0x72d63]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    c7cd:	mov    DWORD PTR [rip+0x72f85],ecx        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
    c7d3:	jne    c747 <__sprintf_chk@plt+0x1d97>
    c7d9:	mov    edi,0x1
    c7de:	call   18ea0 <__sprintf_chk@plt+0xe4f0>
    c7e3:	jmp    c747 <__sprintf_chk@plt+0x1d97>
    c7e8:	mov    edx,0x5
    c7ed:	lea    rsi,[rip+0x5a679]        # 66e6d <_obstack_memory_used@@Base+0x1a1ed>
    c7f4:	xor    edi,edi
    c7f6:	call   a040 <dcgettext@plt>
    c7fb:	xor    esi,esi
    c7fd:	xor    edi,edi
    c7ff:	mov    rdx,rax
    c802:	xor    eax,eax
    c804:	call   a640 <error@plt>
    c809:	mov    rbx,QWORD PTR [rip+0x72fc8]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
    c810:	jmp    c5b2 <__sprintf_chk@plt+0x1c02>
    c815:	call   QWORD PTR [rip+0x72cd5]        # 7f4f0 <obstack_alloc_failed_handler@@Base+0x6b8>
    c81b:	mov    rax,QWORD PTR [rip+0x72d66]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    c822:	mov    r14d,r15d
    c825:	mov    QWORD PTR [rip+0x72d14],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    c82c:	movsxd rax,DWORD PTR [rip+0x72cfd]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    c833:	cmp    rax,r15
    c836:	mov    rbp,rax
    c839:	cmovle r14d,eax
    c83d:	jmp    c76a <__sprintf_chk@plt+0x1dba>
    c842:	call   9e40 <__errno_location@plt>
    c847:	cmp    DWORD PTR [rax],0x0
    c84a:	je     acc0 <__sprintf_chk@plt+0x310>
    c850:	mov    rax,QWORD PTR [rip+0x72cb1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    c857:	test   rax,rax
    c85a:	je     c85e <__sprintf_chk@plt+0x1eae>
    c85c:	call   rax
    c85e:	mov    edx,0x5
    c863:	lea    rsi,[rip+0x5bd06]        # 68570 <_obstack_memory_used@@Base+0x1b8f0>
    c86a:	xor    edi,edi
    c86c:	call   a040 <dcgettext@plt>
    c871:	lea    rdx,[rip+0x5f4df]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
    c878:	mov    rcx,rax
    c87b:	xor    esi,esi
    c87d:	xor    edi,edi
    c87f:	xor    eax,eax
    c881:	call   a640 <error@plt>
    c886:	call   190e0 <__sprintf_chk@plt+0xe730>
    c88b:	mov    rax,QWORD PTR [rip+0x72c76]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    c892:	test   rax,rax
    c895:	je     c899 <__sprintf_chk@plt+0x1ee9>
    c897:	call   rax
    c899:	xor    edi,edi
    c89b:	mov    edx,0x5
    c8a0:	lea    rsi,[rip+0x57041]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
    c8a7:	call   a040 <dcgettext@plt>
    c8ac:	xor    esi,esi
    c8ae:	xor    edi,edi
    c8b0:	mov    rdx,rax
    c8b3:	xor    eax,eax
    c8b5:	call   a640 <error@plt>
    c8ba:	jmp    c251 <__sprintf_chk@plt+0x18a1>
    c8bf:	call   a3f0 <umask@plt>
    c8c4:	mov    eax,DWORD PTR [rip+0x72e72]        # 7f73c <obstack_alloc_failed_handler@@Base+0x904>
    c8ca:	jmp    c03f <__sprintf_chk@plt+0x168f>
    c8cf:	movsxd rdx,edx
    c8d2:	mov    rdi,rax
    c8d5:	call   a420 <memcpy@plt>
    c8da:	jmp    c130 <__sprintf_chk@plt+0x1780>
    c8df:	mov    rdi,QWORD PTR [rip+0x727e2]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c8e6:	xor    ecx,ecx
    c8e8:	mov    rsi,rbp
    c8eb:	lea    rdx,[rip+0x729b6]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
    c8f2:	call   28710 <__sprintf_chk@plt+0x1dd60>
    c8f7:	mov    rsi,QWORD PTR [rip+0x727ca]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
    c8fe:	cmp    BYTE PTR [rsi+0x9c],0x56
    c905:	je     ca28 <__sprintf_chk@plt+0x2078>
    c90b:	cmp    QWORD PTR [rip+0x729dd],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    c913:	je     c2cb <__sprintf_chk@plt+0x191b>
    c919:	cmp    DWORD PTR [rip+0x727a0],0x0        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
    c920:	jne    ca1e <__sprintf_chk@plt+0x206e>
    c926:	mov    rdi,QWORD PTR [rip+0x729c3]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    c92d:	call   2c640 <__sprintf_chk@plt+0x21c90>
    c932:	test   al,al
    c934:	jne    c2cb <__sprintf_chk@plt+0x191b>
    c93a:	cmp    BYTE PTR [rip+0x72c6f],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    c941:	je     c2cb <__sprintf_chk@plt+0x191b>
    c947:	mov    rdi,QWORD PTR [rip+0x729a2]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    c94e:	call   f7a0 <__sprintf_chk@plt+0x4df0>
    c953:	mov    rbp,rax
    c956:	mov    rdi,rax
    c959:	call   2c640 <__sprintf_chk@plt+0x21c90>
    c95e:	mov    rdi,rbp
    c961:	call   9ce0 <free@plt>
    c966:	jmp    c2cb <__sprintf_chk@plt+0x191b>
    c96b:	test   r12,r12
    c96e:	jne    bf00 <__sprintf_chk@plt+0x1550>
    c974:	mov    QWORD PTR [rip+0x73291],0x0        # 7fc10 <argp_program_version_hook@@Base+0x38>
    c97f:	mov    rdi,rbp
    c982:	call   9ce0 <free@plt>
    c987:	mov    rax,QWORD PTR [rip+0x72b7a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    c98e:	test   rax,rax
    c991:	je     c995 <__sprintf_chk@plt+0x1fe5>
    c993:	call   rax
    c995:	mov    edx,0x5
    c99a:	lea    rsi,[rip+0x5bf17]        # 688b8 <_obstack_memory_used@@Base+0x1bc38>
    c9a1:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    c9a6:	lea    rdi,[rax+0x8]
    c9aa:	mov    ecx,edx
    c9ac:	mov    QWORD PTR [rax],0x0
    c9b3:	mov    QWORD PTR [rax+rcx*1-0x8],0x0
    c9bc:	and    rdi,0xfffffffffffffff8
    c9c0:	sub    rax,rdi
    c9c3:	lea    ecx,[rdx+rax*1]
    c9c6:	xor    eax,eax
    c9c8:	shr    ecx,0x3
    c9cb:	rep stos QWORD PTR es:[rdi],rax
    c9ce:	jmp    c3d7 <__sprintf_chk@plt+0x1a27>
    c9d3:	mov    rcx,QWORD PTR [rdx]
    c9d6:	lea    rdi,[rax+0x8]
    c9da:	mov    rsi,rdx
    c9dd:	and    rdi,0xfffffffffffffff8
    c9e1:	mov    QWORD PTR [rax],rcx
    c9e4:	mov    rcx,QWORD PTR [r15+rdx*1-0x8]
    c9e9:	mov    QWORD PTR [rax+r15*1-0x8],rcx
    c9ee:	mov    rcx,rax
    c9f1:	sub    rcx,rdi
    c9f4:	sub    rsi,rcx
    c9f7:	add    ecx,r15d
    c9fa:	shr    ecx,0x3
    c9fd:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    ca00:	jmp    c3aa <__sprintf_chk@plt+0x19fa>
    ca05:	call   19020 <__sprintf_chk@plt+0xe670>
    ca0a:	jmp    c139 <__sprintf_chk@plt+0x1789>
    ca0f:	mov    edi,0x1
    ca14:	call   18ea0 <__sprintf_chk@plt+0xe4f0>
    ca19:	jmp    c71e <__sprintf_chk@plt+0x1d6e>
    ca1e:	call   28d30 <__sprintf_chk@plt+0x1e380>
    ca23:	jmp    c926 <__sprintf_chk@plt+0x1f76>
    ca28:	mov    edx,0x64
    ca2d:	lea    rdi,[rip+0x728bc]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    ca34:	call   25400 <__sprintf_chk@plt+0x1aa50>
    ca39:	jmp    c90b <__sprintf_chk@plt+0x1f5b>
    ca3e:	mov    rax,QWORD PTR [rip+0x72ac3]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    ca45:	test   rax,rax
    ca48:	je     ca4c <__sprintf_chk@plt+0x209c>
    ca4a:	call   rax
    ca4c:	mov    edx,0x5
    ca51:	lea    rsi,[rip+0x5bf20]        # 68978 <_obstack_memory_used@@Base+0x1bcf8>
    ca58:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    ca5d:	call   19130 <__sprintf_chk@plt+0xe780>
    ca62:	mov    ecx,DWORD PTR [rdx]
    ca64:	mov    DWORD PTR [rax],ecx
    ca66:	mov    edx,DWORD PTR [r15+rdx*1-0x4]
    ca6b:	mov    DWORD PTR [rax+r15*1-0x4],edx
    ca70:	jmp    c3aa <__sprintf_chk@plt+0x19fa>
    ca75:	mov    edx,edx
    ca77:	mov    DWORD PTR [rax],0x0
    ca7d:	mov    DWORD PTR [rax+rdx*1-0x4],0x0
    ca85:	jmp    c3d7 <__sprintf_chk@plt+0x1a27>
    ca8a:	movzx  edx,WORD PTR [r15+rdx*1-0x2]
    ca90:	mov    WORD PTR [rax+r15*1-0x2],dx
    ca96:	jmp    c3aa <__sprintf_chk@plt+0x19fa>
    ca9b:	mov    edx,edx
    ca9d:	mov    WORD PTR [rax+rdx*1-0x2],0x0
    caa4:	jmp    c3d7 <__sprintf_chk@plt+0x1a27>
    caa9:	mov    edi,0x2
    caae:	call   a820 <exit@plt>
    cab3:	mov    rax,QWORD PTR [rip+0x72a4e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    caba:	test   rax,rax
    cabd:	je     cac1 <__sprintf_chk@plt+0x2111>
    cabf:	call   rax
    cac1:	mov    rdi,rbp
    cac4:	call   403a0 <__sprintf_chk@plt+0x359f0>
    cac9:	mov    edx,0x5
    cace:	lea    rsi,[rip+0x5a2b7]        # 66d8c <_obstack_memory_used@@Base+0x1a10c>
    cad5:	mov    r12,rax
    cad8:	xor    edi,edi
    cada:	call   a040 <dcgettext@plt>
    cadf:	mov    rcx,r12
    cae2:	mov    rdx,rax
    cae5:	jmp    c87b <__sprintf_chk@plt+0x1ecb>
    caea:	mov    rax,QWORD PTR [rip+0x72a17]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    caf1:	test   rax,rax
    caf4:	je     caf8 <__sprintf_chk@plt+0x2148>
    caf6:	call   rax
    caf8:	movsx  r12d,BYTE PTR [rbx]
    cafc:	mov    edx,0x5
    cb01:	lea    rsi,[rip+0x5baa8]        # 685b0 <_obstack_memory_used@@Base+0x1b930>
    cb08:	xor    edi,edi
    cb0a:	call   a040 <dcgettext@plt>
    cb0f:	xor    esi,esi
    cb11:	xor    edi,edi
    cb13:	mov    rdx,rax
    cb16:	mov    ecx,r12d
    cb19:	xor    eax,eax
    cb1b:	call   a640 <error@plt>
    cb20:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
    cb25:	lea    rsi,[rip+0x5a2ed]        # 66e19 <_obstack_memory_used@@Base+0x1a199>
    cb2c:	lea    rdi,[rip+0x5a2f7]        # 66e2a <_obstack_memory_used@@Base+0x1a1aa>
    cb33:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    cb38:	call   340e0 <__sprintf_chk@plt+0x29730>
    cb3d:	lea    rdi,[rip+0x5a2af]        # 66df3 <_obstack_memory_used@@Base+0x1a173>
    cb44:	mov    rsi,rax
    cb47:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    cb4c:	mov    rax,QWORD PTR [rip+0x729b5]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cb53:	test   rax,rax
    cb56:	je     cb5a <__sprintf_chk@plt+0x21aa>
    cb58:	call   rax
    cb5a:	mov    edx,0x5
    cb5f:	lea    rsi,[rip+0x5baaa]        # 68610 <_obstack_memory_used@@Base+0x1b990>
    cb66:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cb6b:	call   340e0 <__sprintf_chk@plt+0x29730>
    cb70:	lea    rdi,[rip+0x5a24d]        # 66dc4 <_obstack_memory_used@@Base+0x1a144>
    cb77:	mov    rsi,rax
    cb7a:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    cb7f:	lea    rsi,[rip+0x5a250]        # 66dd6 <_obstack_memory_used@@Base+0x1a156>
    cb86:	lea    rdi,[rip+0x5a251]        # 66dde <_obstack_memory_used@@Base+0x1a15e>
    cb8d:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    cb92:	call   340e0 <__sprintf_chk@plt+0x29730>
    cb97:	lea    rdi,[rip+0x5a26e]        # 66e0c <_obstack_memory_used@@Base+0x1a18c>
    cb9e:	mov    rsi,rax
    cba1:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    cba6:	mov    rax,QWORD PTR [rip+0x7295b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cbad:	test   rax,rax
    cbb0:	je     cbb4 <__sprintf_chk@plt+0x2204>
    cbb2:	call   rax
    cbb4:	mov    r12,QWORD PTR [rsp+0x58]
    cbb9:	mov    edx,0x5
    cbbe:	lea    rsi,[rip+0x5a1e4]        # 66da9 <_obstack_memory_used@@Base+0x1a129>
    cbc5:	xor    edi,edi
    cbc7:	call   a040 <dcgettext@plt>
    cbcc:	xor    esi,esi
    cbce:	xor    edi,edi
    cbd0:	mov    rdx,rax
    cbd3:	mov    rcx,r12
    cbd6:	xor    eax,eax
    cbd8:	call   a640 <error@plt>
    cbdd:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
    cbe2:	call   340e0 <__sprintf_chk@plt+0x29730>
    cbe7:	lea    rdi,[rip+0x5a20e]        # 66dfc <_obstack_memory_used@@Base+0x1a17c>
    cbee:	mov    rsi,rax
    cbf1:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    cbf6:	mov    rax,QWORD PTR [rip+0x7290b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cbfd:	test   rax,rax
    cc00:	je     cc04 <__sprintf_chk@plt+0x2254>
    cc02:	call   rax
    cc04:	mov    edx,0x5
    cc09:	lea    rsi,[rip+0x5bb58]        # 68768 <_obstack_memory_used@@Base+0x1bae8>
    cc10:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cc15:	call   9e40 <__errno_location@plt>
    cc1a:	cmp    DWORD PTR [rax],0x2
    cc1d:	je     ba3f <__sprintf_chk@plt+0x108f>
    cc23:	mov    rsi,QWORD PTR [rip+0x726d6]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    cc2a:	lea    rdi,[rip+0x5658f]        # 631c0 <_obstack_memory_used@@Base+0x16540>
    cc31:	call   3bad0 <__sprintf_chk@plt+0x31120>
    cc36:	jmp    ba3f <__sprintf_chk@plt+0x108f>
    cc3b:	mov    rax,QWORD PTR [rip+0x728c6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cc42:	test   rax,rax
    cc45:	je     cc49 <__sprintf_chk@plt+0x2299>
    cc47:	call   rax
    cc49:	mov    rdi,QWORD PTR [rip+0x726b0]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    cc50:	call   4b670 <argp_usage@@Base+0x82f0>
    cc55:	mov    edx,0x5
    cc5a:	lea    rsi,[rip+0x5bd6f]        # 689d0 <_obstack_memory_used@@Base+0x1bd50>
    cc61:	mov    r12,rax
    cc64:	jmp    cad8 <__sprintf_chk@plt+0x2128>
    cc69:	mov    rax,QWORD PTR [rip+0x72898]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cc70:	test   rax,rax
    cc73:	je     cc77 <__sprintf_chk@plt+0x22c7>
    cc75:	call   rax
    cc77:	mov    edx,0x5
    cc7c:	lea    rsi,[rip+0x5bcc5]        # 68948 <_obstack_memory_used@@Base+0x1bcc8>
    cc83:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cc88:	mov    rax,QWORD PTR [rip+0x72879]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cc8f:	test   rax,rax
    cc92:	je     cc96 <__sprintf_chk@plt+0x22e6>
    cc94:	call   rax
    cc96:	mov    edx,0x5
    cc9b:	lea    rsi,[rip+0x5bb56]        # 687f8 <_obstack_memory_used@@Base+0x1bb78>
    cca2:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cca7:	mov    rdi,QWORD PTR [rip+0x723f2]        # 7f0a0 <obstack_alloc_failed_handler@@Base+0x268>
    ccae:	call   3c420 <__sprintf_chk@plt+0x31a70>
    ccb3:	lea    rdi,[rip+0x5a196]        # 66e50 <_obstack_memory_used@@Base+0x1a1d0>
    ccba:	call   3b1d0 <__sprintf_chk@plt+0x30820>
    ccbf:	lea    rsi,[rip+0x5a118]        # 66dde <_obstack_memory_used@@Base+0x1a15e>
    ccc6:	lea    rdi,[rip+0x5a172]        # 66e3f <_obstack_memory_used@@Base+0x1a1bf>
    cccd:	call   2d9c0 <__sprintf_chk@plt+0x23010>
    ccd2:	mov    rax,QWORD PTR [rip+0x7282f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    ccd9:	test   rax,rax
    ccdc:	je     cce0 <__sprintf_chk@plt+0x2330>
    ccde:	call   rax
    cce0:	mov    edx,0x5
    cce5:	lea    rsi,[rip+0x5ba2c]        # 68718 <_obstack_memory_used@@Base+0x1ba98>
    ccec:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    ccf1:	mov    rax,QWORD PTR [rip+0x72810]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    ccf8:	test   rax,rax
    ccfb:	je     ccff <__sprintf_chk@plt+0x234f>
    ccfd:	call   rax
    ccff:	mov    edx,0x5
    cd04:	lea    rsi,[rip+0x5ba35]        # 68740 <_obstack_memory_used@@Base+0x1bac0>
    cd0b:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cd10:	mov    rax,QWORD PTR [rip+0x727f1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cd17:	test   rax,rax
    cd1a:	je     cd25 <__sprintf_chk@plt+0x2375>
    cd1c:	call   rax
    cd1e:	mov    rbp,QWORD PTR [rip+0x72573]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    cd25:	mov    rdi,rbp
    cd28:	call   4b670 <argp_usage@@Base+0x82f0>
    cd2d:	mov    r8d,0x5
    cd33:	mov    rcx,r12
    cd36:	xor    edi,edi
    cd38:	lea    rdx,[rip+0x5b969]        # 686a8 <_obstack_memory_used@@Base+0x1ba28>
    cd3f:	lea    rsi,[rip+0x5b99a]        # 686e0 <_obstack_memory_used@@Base+0x1ba60>
    cd46:	mov    r13,rax
    cd49:	call   a6e0 <dcngettext@plt>
    cd4e:	mov    r8,r12
    cd51:	mov    rcx,r13
    cd54:	xor    esi,esi
    cd56:	mov    rdx,rax
    cd59:	xor    edi,edi
    cd5b:	xor    eax,eax
    cd5d:	call   a640 <error@plt>
    cd62:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
    cd67:	mov    rax,QWORD PTR [rip+0x7279a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cd6e:	test   rax,rax
    cd71:	je     cd75 <__sprintf_chk@plt+0x23c5>
    cd73:	call   rax
    cd75:	mov    edx,0x5
    cd7a:	lea    rsi,[rip+0x5b8bf]        # 68640 <_obstack_memory_used@@Base+0x1b9c0>
    cd81:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cd86:	mov    rax,QWORD PTR [rip+0x7277b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cd8d:	test   rax,rax
    cd90:	je     cd94 <__sprintf_chk@plt+0x23e4>
    cd92:	call   rax
    cd94:	mov    edx,0x5
    cd99:	lea    rsi,[rip+0x56b70]        # 63910 <_obstack_memory_used@@Base+0x16c90>
    cda0:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cda5:	mov    rax,QWORD PTR [rip+0x7275c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cdac:	test   rax,rax
    cdaf:	je     cdb3 <__sprintf_chk@plt+0x2403>
    cdb1:	call   rax
    cdb3:	mov    edx,0x5
    cdb8:	lea    rsi,[rip+0x5bb59]        # 68918 <_obstack_memory_used@@Base+0x1bc98>
    cdbf:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cdc4:	call   a0a0 <__stack_chk_fail@plt>
    cdc9:	mov    rax,QWORD PTR [rip+0x72738]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cdd0:	test   rax,rax
    cdd3:	je     cdd7 <__sprintf_chk@plt+0x2427>
    cdd5:	call   rax
    cdd7:	mov    edx,0x5
    cddc:	lea    rsi,[rip+0x5b7f5]        # 685d8 <_obstack_memory_used@@Base+0x1b958>
    cde3:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    cde8:	mov    rax,QWORD PTR [rip+0x72719]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    cdef:	test   rax,rax
    cdf2:	je     cdf6 <__sprintf_chk@plt+0x2446>
    cdf4:	call   rax
    cdf6:	mov    edx,0x5
    cdfb:	lea    rsi,[rip+0x5b996]        # 68798 <_obstack_memory_used@@Base+0x1bb18>
    ce02:	jmp    c647 <__sprintf_chk@plt+0x1c97>
    ce07:	call   9e30 <abort@plt>
    ce0c:	nop    DWORD PTR [rax+0x0]
    ce10:	endbr64 
    ce14:	xor    ebp,ebp
    ce16:	mov    r9,rdx
    ce19:	pop    rsi
    ce1a:	mov    rdx,rsp
    ce1d:	and    rsp,0xfffffffffffffff0
    ce21:	push   rax
    ce22:	push   rsp
    ce23:	xor    r8d,r8d
    ce26:	xor    ecx,ecx
    ce28:	lea    rdi,[rip+0xffffffffffffdcd1]        # ab00 <__sprintf_chk@plt+0x150>
    ce2f:	call   QWORD PTR [rip+0x6f15b]        # 7bf90 <_obstack_memory_used@@Base+0x2f310>
    ce35:	hlt    
    ce36:	cs nop WORD PTR [rax+rax*1+0x0]
    ce40:	lea    rdi,[rip+0x72021]        # 7ee68 <obstack_alloc_failed_handler@@Base+0x30>
    ce47:	lea    rax,[rip+0x7201a]        # 7ee68 <obstack_alloc_failed_handler@@Base+0x30>
    ce4e:	cmp    rax,rdi
    ce51:	je     ce68 <__sprintf_chk@plt+0x24b8>
    ce53:	mov    rax,QWORD PTR [rip+0x6f13e]        # 7bf98 <_obstack_memory_used@@Base+0x2f318>
    ce5a:	test   rax,rax
    ce5d:	je     ce68 <__sprintf_chk@plt+0x24b8>
    ce5f:	jmp    rax
    ce61:	nop    DWORD PTR [rax+0x0]
    ce68:	ret    
    ce69:	nop    DWORD PTR [rax+0x0]
    ce70:	lea    rdi,[rip+0x71ff1]        # 7ee68 <obstack_alloc_failed_handler@@Base+0x30>
    ce77:	lea    rsi,[rip+0x71fea]        # 7ee68 <obstack_alloc_failed_handler@@Base+0x30>
    ce7e:	sub    rsi,rdi
    ce81:	mov    rax,rsi
    ce84:	shr    rsi,0x3f
    ce88:	sar    rax,0x3
    ce8c:	add    rsi,rax
    ce8f:	sar    rsi,1
    ce92:	je     cea8 <__sprintf_chk@plt+0x24f8>
    ce94:	mov    rax,QWORD PTR [rip+0x6f135]        # 7bfd0 <_obstack_memory_used@@Base+0x2f350>
    ce9b:	test   rax,rax
    ce9e:	je     cea8 <__sprintf_chk@plt+0x24f8>
    cea0:	jmp    rax
    cea2:	nop    WORD PTR [rax+rax*1+0x0]
    cea8:	ret    
    cea9:	nop    DWORD PTR [rax+0x0]
    ceb0:	endbr64 
    ceb4:	cmp    BYTE PTR [rip+0x71fc5],0x0        # 7ee80 <obstack_alloc_failed_handler@@Base+0x48>
    cebb:	jne    cee8 <__sprintf_chk@plt+0x2538>
    cebd:	push   rbp
    cebe:	cmp    QWORD PTR [rip+0x6f11a],0x0        # 7bfe0 <_obstack_memory_used@@Base+0x2f360>
    cec6:	mov    rbp,rsp
    cec9:	je     ced7 <__sprintf_chk@plt+0x2527>
    cecb:	mov    rdi,QWORD PTR [rip+0x6f136]        # 7c008 <_obstack_memory_used@@Base+0x2f388>
    ced2:	call   9d00 <__cxa_finalize@plt>
    ced7:	call   ce40 <__sprintf_chk@plt+0x2490>
    cedc:	mov    BYTE PTR [rip+0x71f9d],0x1        # 7ee80 <obstack_alloc_failed_handler@@Base+0x48>
    cee3:	pop    rbp
    cee4:	ret    
    cee5:	nop    DWORD PTR [rax]
    cee8:	ret    
    cee9:	nop    DWORD PTR [rax+0x0]
    cef0:	endbr64 
    cef4:	jmp    ce70 <__sprintf_chk@plt+0x24c0>
    cef9:	nop    DWORD PTR [rax+0x0]
    cf00:	endbr64 
    cf04:	mov    eax,0x1
    cf09:	ret    
    cf0a:	nop    WORD PTR [rax+rax*1+0x0]
    cf10:	sub    rsp,0xa8
    cf17:	mov    rax,QWORD PTR fs:0x28
    cf20:	mov    QWORD PTR [rsp+0x98],rax
    cf28:	xor    eax,eax
    cf2a:	cmp    DWORD PTR [rip+0x72647],0x4        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    cf31:	jne    cf3a <__sprintf_chk@plt+0x258a>
    cf33:	mov    BYTE PTR [rip+0x7263a],0x0        # 7f574 <obstack_alloc_failed_handler@@Base+0x73c>
    cf3a:	mov    eax,DWORD PTR [rip+0x72630]        # 7f570 <obstack_alloc_failed_handler@@Base+0x738>
    cf40:	cmp    eax,0xffffffff
    cf43:	je     cf70 <__sprintf_chk@plt+0x25c0>
    cf45:	test   eax,eax
    cf47:	setne  BYTE PTR [rip+0x72626]        # 7f574 <obstack_alloc_failed_handler@@Base+0x73c>
    cf4e:	mov    rax,QWORD PTR [rsp+0x98]
    cf56:	sub    rax,QWORD PTR fs:0x28
    cf5f:	jne    cfb7 <__sprintf_chk@plt+0x2607>
    cf61:	add    rsp,0xa8
    cf68:	ret    
    cf69:	nop    DWORD PTR [rax+0x0]
    cf70:	cmp    BYTE PTR [rip+0x72639],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    cf77:	je     cf88 <__sprintf_chk@plt+0x25d8>
    cf79:	xor    eax,eax
    cf7b:	mov    BYTE PTR [rip+0x725f3],al        # 7f574 <obstack_alloc_failed_handler@@Base+0x73c>
    cf81:	jmp    cf4e <__sprintf_chk@plt+0x259e>
    cf83:	nop    DWORD PTR [rax+rax*1+0x0]
    cf88:	cmp    QWORD PTR [rip+0x725d8],0x0        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
    cf90:	jne    cf79 <__sprintf_chk@plt+0x25c9>
    cf92:	mov    edi,DWORD PTR [rip+0x725c8]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    cf98:	mov    rsi,rsp
    cf9b:	call   a920 <fstat@plt>
    cfa0:	test   eax,eax
    cfa2:	jne    cf79 <__sprintf_chk@plt+0x25c9>
    cfa4:	mov    eax,DWORD PTR [rsp+0x18]
    cfa8:	and    eax,0xf000
    cfad:	cmp    eax,0x8000
    cfb2:	sete   al
    cfb5:	jmp    cf7b <__sprintf_chk@plt+0x25cb>
    cfb7:	call   a0a0 <__stack_chk_fail@plt>
    cfbc:	nop    DWORD PTR [rax+0x0]
    cfc0:	push   r12
    cfc2:	push   rbp
    cfc3:	mov    rbp,rdi
    cfc6:	push   rbx
    cfc7:	xor    ebx,ebx
    cfc9:	sub    rsp,0x540
    cfd0:	mov    rax,QWORD PTR fs:0x28
    cfd9:	mov    QWORD PTR [rsp+0x538],rax
    cfe1:	xor    eax,eax
    cfe3:	test   rsi,rsi
    cfe6:	je     cff1 <__sprintf_chk@plt+0x2641>
    cfe8:	cmp    BYTE PTR [rsi],0x0
    cfeb:	jne    d0b0 <__sprintf_chk@plt+0x2700>
    cff1:	movsd  xmm1,QWORD PTR [rip+0x72707]        # 7f700 <obstack_alloc_failed_handler@@Base+0x8c8>
    cff9:	comisd xmm1,QWORD PTR [rip+0x5711f]        # 64120 <_obstack_memory_used@@Base+0x174a0>
    d001:	jbe    d01d <__sprintf_chk@plt+0x266d>
    d003:	movapd xmm2,xmm0
    d007:	divsd  xmm2,xmm1
    d00b:	movsd  xmm1,QWORD PTR [rip+0x57115]        # 64128 <_obstack_memory_used@@Base+0x174a8>
    d013:	comisd xmm1,xmm2
    d017:	ja     d0f0 <__sprintf_chk@plt+0x2740>
    d01d:	movsd  xmm1,QWORD PTR [rip+0x5710b]        # 64130 <_obstack_memory_used@@Base+0x174b0>
    d025:	lea    r12,[rip+0x5edf5]        # 6be21 <_obstack_memory_used@@Base+0x1f1a1>
    d02c:	comisd xmm0,xmm1
    d030:	lea    rsi,[rsp+0x2a0]
    d038:	jae    d098 <__sprintf_chk@plt+0x26e8>
    d03a:	cvttsd2si rdi,xmm0
    d03f:	movsd  QWORD PTR [rsp],xmm0
    d044:	call   5d6a0 <_obstack_memory_used@@Base+0x10a20>
    d049:	movsd  xmm0,QWORD PTR [rsp]
    d04e:	mov    r8,r12
    d051:	mov    rdi,rbp
    d054:	mov    rcx,rax
    d057:	lea    rdx,[rip+0x55fa6]        # 63004 <_obstack_memory_used@@Base+0x16384>
    d05e:	mov    esi,0x1
    d063:	mov    eax,0x1
    d068:	call   a840 <__fprintf_chk@plt>
    d06d:	add    eax,ebx
    d06f:	mov    rdx,QWORD PTR [rsp+0x538]
    d077:	sub    rdx,QWORD PTR fs:0x28
    d080:	jne    d140 <__sprintf_chk@plt+0x2790>
    d086:	add    rsp,0x540
    d08d:	pop    rbx
    d08e:	pop    rbp
    d08f:	pop    r12
    d091:	ret    
    d092:	nop    WORD PTR [rax+rax*1+0x0]
    d098:	movapd xmm2,xmm0
    d09c:	subsd  xmm2,xmm1
    d0a0:	cvttsd2si rdi,xmm2
    d0a5:	btc    rdi,0x3f
    d0aa:	jmp    d03f <__sprintf_chk@plt+0x268f>
    d0ac:	nop    DWORD PTR [rax+0x0]
    d0b0:	mov    edx,0x5
    d0b5:	xor    edi,edi
    d0b7:	movsd  QWORD PTR [rsp],xmm0
    d0bc:	call   a040 <dcgettext@plt>
    d0c1:	lea    rdx,[rip+0x570f4]        # 641bc <_obstack_memory_used@@Base+0x1753c>
    d0c8:	mov    esi,0x1
    d0cd:	mov    rdi,rbp
    d0d0:	mov    rcx,rax
    d0d3:	xor    eax,eax
    d0d5:	call   a840 <__fprintf_chk@plt>
    d0da:	movsd  xmm0,QWORD PTR [rsp]
    d0df:	mov    ebx,eax
    d0e1:	jmp    cff1 <__sprintf_chk@plt+0x2641>
    d0e6:	cs nop WORD PTR [rax+rax*1+0x0]
    d0f0:	movsd  xmm1,QWORD PTR [rip+0x57038]        # 64130 <_obstack_memory_used@@Base+0x174b0>
    d0f8:	lea    rsi,[rsp+0x10]
    d0fd:	comisd xmm2,xmm1
    d101:	jae    d130 <__sprintf_chk@plt+0x2780>
    d103:	cvttsd2si rdi,xmm2
    d108:	movsd  QWORD PTR [rsp+0x8],xmm1
    d10e:	movsd  QWORD PTR [rsp],xmm0
    d113:	call   5d6a0 <_obstack_memory_used@@Base+0x10a20>
    d118:	movsd  xmm0,QWORD PTR [rsp]
    d11d:	movsd  xmm1,QWORD PTR [rsp+0x8]
    d123:	mov    r12,rax
    d126:	jmp    d02c <__sprintf_chk@plt+0x267c>
    d12b:	nop    DWORD PTR [rax+rax*1+0x0]
    d130:	subsd  xmm2,xmm1
    d134:	cvttsd2si rdi,xmm2
    d139:	btc    rdi,0x3f
    d13e:	jmp    d108 <__sprintf_chk@plt+0x2758>
    d140:	call   a0a0 <__stack_chk_fail@plt>
    d145:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d150:	push   r13
    d152:	push   r12
    d154:	push   rbp
    d155:	lea    rbp,[rip+0x72574]        # 7f6d0 <obstack_alloc_failed_handler@@Base+0x898>
    d15c:	push   rbx
    d15d:	sub    rsp,0x8
    d161:	movsxd rbx,DWORD PTR [rip+0x72578]        # 7f6e0 <obstack_alloc_failed_handler@@Base+0x8a8>
    d168:	mov    rax,QWORD PTR [rbp+rbx*8+0x0]
    d16d:	test   rax,rax
    d170:	je     d1a0 <__sprintf_chk@plt+0x27f0>
    d172:	movsxd rdx,DWORD PTR [rip+0x723b7]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    d179:	mov    QWORD PTR [rip+0x72408],rax        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    d180:	mov    QWORD PTR [rip+0x723b9],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    d187:	shl    rdx,0x9
    d18b:	add    rax,rdx
    d18e:	mov    QWORD PTR [rip+0x723eb],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    d195:	add    rsp,0x8
    d199:	pop    rbx
    d19a:	pop    rbp
    d19b:	pop    r12
    d19d:	pop    r13
    d19f:	ret    
    d1a0:	call   a7f0 <getpagesize@plt>
    d1a5:	mov    r13,QWORD PTR [rip+0x723a4]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    d1ac:	movsxd r12,eax
    d1af:	mov    rdi,r13
    d1b2:	add    rdi,r12
    d1b5:	jb     d1e6 <__sprintf_chk@plt+0x2836>
    d1b7:	call   a4a0 <malloc@plt>
    d1bc:	test   rax,rax
    d1bf:	je     d1e6 <__sprintf_chk@plt+0x2836>
    d1c1:	lea    rdx,[rip+0x724f8]        # 7f6c0 <obstack_alloc_failed_handler@@Base+0x888>
    d1c8:	lea    rcx,[rax+r12*1-0x1]
    d1cd:	mov    QWORD PTR [rdx+rbx*8],rax
    d1d1:	mov    rax,rcx
    d1d4:	xor    edx,edx
    d1d6:	div    r12
    d1d9:	mov    rax,rcx
    d1dc:	sub    rax,rdx
    d1df:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
    d1e4:	jmp    d172 <__sprintf_chk@plt+0x27c2>
    d1e6:	call   19130 <__sprintf_chk@plt+0xe780>
    d1eb:	nop    DWORD PTR [rax+rax*1+0x0]
    d1f0:	push   rax
    d1f1:	pop    rax
    d1f2:	sub    rsp,0x8
    d1f6:	mov    rax,QWORD PTR [rip+0x7230b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    d1fd:	test   rax,rax
    d200:	je     d204 <__sprintf_chk@plt+0x2854>
    d202:	call   rax
    d204:	mov    edx,0x5
    d209:	lea    rsi,[rip+0x55e04]        # 63014 <_obstack_memory_used@@Base+0x16394>
    d210:	xor    edi,edi
    d212:	call   a040 <dcgettext@plt>
    d217:	xor    esi,esi
    d219:	xor    edi,edi
    d21b:	mov    rdx,rax
    d21e:	xor    eax,eax
    d220:	call   a640 <error@plt>
    d225:	call   190e0 <__sprintf_chk@plt+0xe730>
    d22a:	nop    WORD PTR [rax+rax*1+0x0]
    d230:	push   r13
    d232:	push   r12
    d234:	mov    r12,rdi
    d237:	push   rbx
    d238:	call   a060 <strlen@plt>
    d23d:	lea    r13,[rax+0x1]
    d241:	mov    rbx,rax
    d244:	mov    rdi,r13
    d247:	call   a4a0 <malloc@plt>
    d24c:	test   rax,rax
    d24f:	je     d2a0 <__sprintf_chk@plt+0x28f0>
    d251:	mov    rsi,r12
    d254:	mov    rdi,rax
    d257:	mov    rdx,r13
    d25a:	call   a420 <memcpy@plt>
    d25f:	mov    r12,rax
    d262:	movzx  eax,BYTE PTR [rax]
    d265:	cmp    al,0x22
    d267:	je     d280 <__sprintf_chk@plt+0x28d0>
    d269:	cmp    al,0x27
    d26b:	je     d280 <__sprintf_chk@plt+0x28d0>
    d26d:	mov    rdi,r12
    d270:	call   618c0 <_obstack_memory_used@@Base+0x14c40>
    d275:	mov    rax,r12
    d278:	pop    rbx
    d279:	pop    r12
    d27b:	pop    r13
    d27d:	ret    
    d27e:	xchg   ax,ax
    d280:	cmp    BYTE PTR [rbx+r12*1-0x1],al
    d285:	jne    d26d <__sprintf_chk@plt+0x28bd>
    d287:	lea    rdx,[rbx-0x2]
    d28b:	lea    rsi,[r12+0x1]
    d290:	mov    rdi,r12
    d293:	call   a630 <memmove@plt>
    d298:	mov    BYTE PTR [rbx+r12*1-0x2],0x0
    d29e:	jmp    d26d <__sprintf_chk@plt+0x28bd>
    d2a0:	call   19130 <__sprintf_chk@plt+0xe780>
    d2a5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d2b0:	sub    rsp,0x18
    d2b4:	mov    rax,QWORD PTR fs:0x28
    d2bd:	mov    QWORD PTR [rsp+0x8],rax
    d2c2:	xor    eax,eax
    d2c4:	call   a450 <fileno@plt>
    d2c9:	mov    rdx,rsp
    d2cc:	mov    esi,0x5413
    d2d1:	mov    edi,eax
    d2d3:	xor    eax,eax
    d2d5:	call   a1d0 <ioctl@plt>
    d2da:	test   eax,eax
    d2dc:	jne    d2e8 <__sprintf_chk@plt+0x2938>
    d2de:	movzx  eax,WORD PTR [rsp+0x2]
    d2e3:	test   ax,ax
    d2e6:	jne    d30d <__sprintf_chk@plt+0x295d>
    d2e8:	lea    rdi,[rip+0x55d3c]        # 6302b <_obstack_memory_used@@Base+0x163ab>
    d2ef:	call   9d40 <getenv@plt>
    d2f4:	mov    rdi,rax
    d2f7:	test   rax,rax
    d2fa:	je     d328 <__sprintf_chk@plt+0x2978>
    d2fc:	xor    esi,esi
    d2fe:	mov    edx,0xa
    d303:	call   a410 <strtol@plt>
    d308:	test   rax,rax
    d30b:	jle    d328 <__sprintf_chk@plt+0x2978>
    d30d:	mov    rdx,QWORD PTR [rsp+0x8]
    d312:	sub    rdx,QWORD PTR fs:0x28
    d31b:	jne    d32f <__sprintf_chk@plt+0x297f>
    d31d:	add    rsp,0x18
    d321:	ret    
    d322:	nop    WORD PTR [rax+rax*1+0x0]
    d328:	mov    eax,0x50
    d32d:	jmp    d30d <__sprintf_chk@plt+0x295d>
    d32f:	call   a0a0 <__stack_chk_fail@plt>
    d334:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d33f:	nop
    d340:	endbr64 
    d344:	push   r12
    d346:	push   rbp
    d347:	push   rbx
    d348:	mov    rbx,QWORD PTR [rip+0x71c81]        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    d34f:	test   rbx,rbx
    d352:	jne    d368 <__sprintf_chk@plt+0x29b8>
    d354:	jmp    d3e3 <__sprintf_chk@plt+0x2a33>
    d359:	nop    DWORD PTR [rax+0x0]
    d360:	mov    rbx,QWORD PTR [rbx]
    d363:	test   rbx,rbx
    d366:	je     d3e3 <__sprintf_chk@plt+0x2a33>
    d368:	cmp    DWORD PTR [rbx+0x8],0x3
    d36c:	jne    d360 <__sprintf_chk@plt+0x29b0>
    d36e:	mov    rbp,QWORD PTR [rip+0x71c53]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    d375:	test   rbp,rbp
    d378:	je     d360 <__sprintf_chk@plt+0x29b0>
    d37a:	mov    eax,DWORD PTR [rip+0x72260]        # 7f5e0 <obstack_alloc_failed_handler@@Base+0x7a8>
    d380:	test   eax,eax
    d382:	je     d360 <__sprintf_chk@plt+0x29b0>
    d384:	mov    rdi,rbp
    d387:	call   d2b0 <__sprintf_chk@plt+0x2900>
    d38c:	mov    r12,rax
    d38f:	test   rax,rax
    d392:	je     d3ba <__sprintf_chk@plt+0x2a0a>
    d394:	nop    DWORD PTR [rax+0x0]
    d398:	mov    rdx,QWORD PTR [rbp+0x28]
    d39c:	cmp    rdx,QWORD PTR [rbp+0x30]
    d3a0:	jae    d3f0 <__sprintf_chk@plt+0x2a40>
    d3a2:	lea    rax,[rdx+0x1]
    d3a6:	mov    QWORD PTR [rbp+0x28],rax
    d3aa:	mov    BYTE PTR [rdx],0x20
    d3ad:	mov    rbp,QWORD PTR [rip+0x71c14]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    d3b4:	sub    r12,0x1
    d3b8:	jne    d398 <__sprintf_chk@plt+0x29e8>
    d3ba:	mov    rax,QWORD PTR [rbp+0x28]
    d3be:	cmp    rax,QWORD PTR [rbp+0x30]
    d3c2:	jae    d3ff <__sprintf_chk@plt+0x2a4f>
    d3c4:	lea    rdx,[rax+0x1]
    d3c8:	mov    QWORD PTR [rbp+0x28],rdx
    d3cc:	mov    BYTE PTR [rax],0xd
    d3cf:	mov    rdi,QWORD PTR [rip+0x71bf2]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    d3d6:	call   a870 <fflush_unlocked@plt>
    d3db:	mov    rbx,QWORD PTR [rbx]
    d3de:	test   rbx,rbx
    d3e1:	jne    d368 <__sprintf_chk@plt+0x29b8>
    d3e3:	pop    rbx
    d3e4:	pop    rbp
    d3e5:	pop    r12
    d3e7:	ret    
    d3e8:	nop    DWORD PTR [rax+rax*1+0x0]
    d3f0:	mov    esi,0x20
    d3f5:	mov    rdi,rbp
    d3f8:	call   a120 <__overflow@plt>
    d3fd:	jmp    d3ad <__sprintf_chk@plt+0x29fd>
    d3ff:	mov    esi,0xd
    d404:	mov    rdi,rbp
    d407:	call   a120 <__overflow@plt>
    d40c:	jmp    d3cf <__sprintf_chk@plt+0x2a1f>
    d40e:	xchg   ax,ax
    d410:	push   r13
    d412:	push   r12
    d414:	mov    r12,rsi
    d417:	sub    rsp,0xf8
    d41e:	mov    QWORD PTR [rsp+0x50],rdx
    d423:	mov    QWORD PTR [rsp+0x58],rcx
    d428:	mov    QWORD PTR [rsp+0x60],r8
    d42d:	mov    QWORD PTR [rsp+0x68],r9
    d432:	test   al,al
    d434:	je     d473 <__sprintf_chk@plt+0x2ac3>
    d436:	movaps XMMWORD PTR [rsp+0x70],xmm0
    d43b:	movaps XMMWORD PTR [rsp+0x80],xmm1
    d443:	movaps XMMWORD PTR [rsp+0x90],xmm2
    d44b:	movaps XMMWORD PTR [rsp+0xa0],xmm3
    d453:	movaps XMMWORD PTR [rsp+0xb0],xmm4
    d45b:	movaps XMMWORD PTR [rsp+0xc0],xmm5
    d463:	movaps XMMWORD PTR [rsp+0xd0],xmm6
    d46b:	movaps XMMWORD PTR [rsp+0xe0],xmm7
    d473:	mov    rax,QWORD PTR fs:0x28
    d47c:	mov    QWORD PTR [rsp+0x38],rax
    d481:	xor    eax,eax
    d483:	test   r12,r12
    d486:	je     d561 <__sprintf_chk@plt+0x2bb1>
    d48c:	mov    eax,DWORD PTR [rip+0x71aee]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
    d492:	mov    rsi,QWORD PTR [rdi+0x8]
    d496:	cmp    eax,0xa
    d499:	je     a9c0 <__sprintf_chk@plt+0x10>
    d49f:	mov    r13,rsp
    d4a2:	mov    DWORD PTR [rsp],eax
    d4a5:	mov    edi,0x1
    d4aa:	movabs rax,0x400000000000000
    d4b4:	mov    rdx,r13
    d4b7:	mov    QWORD PTR [rsp+0x8],rax
    d4bc:	mov    DWORD PTR [rsp+0x4],0x0
    d4c4:	mov    QWORD PTR [rsp+0x10],0x0
    d4cd:	mov    QWORD PTR [rsp+0x18],0x0
    d4d6:	mov    QWORD PTR [rsp+0x20],0x0
    d4df:	mov    QWORD PTR [rsp+0x28],0x0
    d4e8:	mov    QWORD PTR [rsp+0x30],0x0
    d4f1:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
    d4f6:	mov    rdi,QWORD PTR [rip+0x71b9b]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    d4fd:	mov    esi,0x1
    d502:	lea    rdx,[rip+0x56cb3]        # 641bc <_obstack_memory_used@@Base+0x1753c>
    d509:	mov    rcx,rax
    d50c:	xor    eax,eax
    d50e:	call   a840 <__fprintf_chk@plt>
    d513:	mov    esi,0x1
    d518:	mov    rcx,r13
    d51b:	mov    rdx,r12
    d51e:	mov    rdi,QWORD PTR [rip+0x71b73]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    d525:	lea    rax,[rsp+0x110]
    d52d:	mov    DWORD PTR [rsp],0x10
    d534:	mov    QWORD PTR [rsp+0x8],rax
    d539:	lea    rax,[rsp+0x40]
    d53e:	mov    DWORD PTR [rsp+0x4],0x30
    d546:	mov    QWORD PTR [rsp+0x10],rax
    d54b:	call   9e20 <__vfprintf_chk@plt>
    d550:	mov    rsi,QWORD PTR [rip+0x71b41]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    d557:	mov    edi,0xa
    d55c:	call   a260 <fputc@plt>
    d561:	mov    eax,DWORD PTR [rip+0x71b5d]        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    d567:	test   eax,eax
    d569:	jg     d575 <__sprintf_chk@plt+0x2bc5>
    d56b:	mov    DWORD PTR [rip+0x71b4f],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    d575:	mov    rax,QWORD PTR [rsp+0x38]
    d57a:	sub    rax,QWORD PTR fs:0x28
    d583:	jne    d591 <__sprintf_chk@plt+0x2be1>
    d585:	add    rsp,0xf8
    d58c:	pop    r12
    d58e:	pop    r13
    d590:	ret    
    d591:	call   a0a0 <__stack_chk_fail@plt>
    d596:	cs nop WORD PTR [rax+rax*1+0x0]
    d5a0:	endbr64 
    d5a4:	push   r13
    d5a6:	mov    rdx,rdi
    d5a9:	push   r12
    d5ab:	mov    r12,rdi
    d5ae:	mov    edi,DWORD PTR [rip+0x72020]        # 7f5d4 <obstack_alloc_failed_handler@@Base+0x79c>
    d5b4:	push   rbp
    d5b5:	mov    rbp,rsi
    d5b8:	mov    rsi,QWORD PTR [rip+0x72019]        # 7f5d8 <obstack_alloc_failed_handler@@Base+0x7a0>
    d5bf:	call   26630 <__sprintf_chk@plt+0x1bc80>
    d5c4:	cmp    r12,rax
    d5c7:	je     d618 <__sprintf_chk@plt+0x2c68>
    d5c9:	mov    r13,rax
    d5cc:	cmp    rax,0xffffffffffffffff
    d5d0:	je     d668 <__sprintf_chk@plt+0x2cb8>
    d5d6:	mov    r8d,0x5
    d5dc:	mov    rcx,r12
    d5df:	lea    rdx,[rip+0x55ff2]        # 635d8 <_obstack_memory_used@@Base+0x16958>
    d5e6:	xor    edi,edi
    d5e8:	lea    rsi,[rip+0x56011]        # 63600 <_obstack_memory_used@@Base+0x16980>
    d5ef:	call   a6e0 <dcngettext@plt>
    d5f4:	mov    rcx,r12
    d5f7:	mov    rdx,r13
    d5fa:	lea    rdi,[rip+0x71d1f]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d601:	mov    rsi,rax
    d604:	xor    eax,eax
    d606:	call   d410 <__sprintf_chk@plt+0x2a60>
    d60b:	xor    eax,eax
    d60d:	pop    rbp
    d60e:	pop    r12
    d610:	pop    r13
    d612:	ret    
    d613:	nop    DWORD PTR [rax+rax*1+0x0]
    d618:	mov    rsi,QWORD PTR [rip+0x71fb9]        # 7f5d8 <obstack_alloc_failed_handler@@Base+0x7a0>
    d61f:	mov    rdx,r12
    d622:	mov    rdi,rbp
    d625:	call   a2c0 <memcmp@plt>
    d62a:	mov    r8d,eax
    d62d:	mov    eax,0x1
    d632:	test   r8d,r8d
    d635:	je     d60d <__sprintf_chk@plt+0x2c5d>
    d637:	mov    edx,0x5
    d63c:	lea    rsi,[rip+0x559f0]        # 63033 <_obstack_memory_used@@Base+0x163b3>
    d643:	xor    edi,edi
    d645:	call   a040 <dcgettext@plt>
    d64a:	lea    rdi,[rip+0x71ccf]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d651:	mov    rsi,rax
    d654:	xor    eax,eax
    d656:	call   d410 <__sprintf_chk@plt+0x2a60>
    d65b:	pop    rbp
    d65c:	xor    eax,eax
    d65e:	pop    r12
    d660:	pop    r13
    d662:	ret    
    d663:	nop    DWORD PTR [rax+rax*1+0x0]
    d668:	mov    rsi,QWORD PTR [rip+0x71cb9]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    d66f:	lea    rdi,[rip+0x55f13]        # 63589 <_obstack_memory_used@@Base+0x16909>
    d676:	call   3bad0 <__sprintf_chk@plt+0x31120>
    d67b:	xor    eax,eax
    d67d:	xor    esi,esi
    d67f:	lea    rdi,[rip+0x71c9a]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d686:	call   d410 <__sprintf_chk@plt+0x2a60>
    d68b:	pop    rbp
    d68c:	xor    eax,eax
    d68e:	pop    r12
    d690:	pop    r13
    d692:	ret    
    d693:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d69e:	xchg   ax,ax
    d6a0:	push   rbp
    d6a1:	mov    rdx,rsi
    d6a4:	mov    ecx,DWORD PTR [rip+0x718ca]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
    d6aa:	mov    rsi,rdi
    d6ad:	mov    rbp,rdi
    d6b0:	mov    edi,DWORD PTR [rip+0x6e96a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
    d6b6:	call   a960 <fstatat@plt>
    d6bb:	mov    r8d,eax
    d6be:	mov    eax,0x1
    d6c3:	test   r8d,r8d
    d6c6:	jne    d6d0 <__sprintf_chk@plt+0x2d20>
    d6c8:	pop    rbp
    d6c9:	ret    
    d6ca:	nop    WORD PTR [rax+rax*1+0x0]
    d6d0:	call   9e40 <__errno_location@plt>
    d6d5:	mov    rsi,rbp
    d6d8:	lea    rdi,[rip+0x55964]        # 63043 <_obstack_memory_used@@Base+0x163c3>
    d6df:	cmp    DWORD PTR [rax],0x2
    d6e2:	je     d700 <__sprintf_chk@plt+0x2d50>
    d6e4:	call   3bad0 <__sprintf_chk@plt+0x31120>
    d6e9:	xor    eax,eax
    d6eb:	xor    esi,esi
    d6ed:	lea    rdi,[rip+0x71c2c]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d6f4:	call   d410 <__sprintf_chk@plt+0x2a60>
    d6f9:	xor    eax,eax
    d6fb:	pop    rbp
    d6fc:	ret    
    d6fd:	nop    DWORD PTR [rax]
    d700:	call   3c100 <__sprintf_chk@plt+0x31750>
    d705:	jmp    d6e9 <__sprintf_chk@plt+0x2d39>
    d707:	nop    WORD PTR [rax+rax*1+0x0]
    d710:	push   rbp
    d711:	sub    rsp,0xa0
    d718:	mov    rdi,QWORD PTR [rip+0x71c09]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    d71f:	mov    rax,QWORD PTR fs:0x28
    d728:	mov    QWORD PTR [rsp+0x98],rax
    d730:	xor    eax,eax
    d732:	mov    rsi,rsp
    d735:	call   d6a0 <__sprintf_chk@plt+0x2cf0>
    d73a:	test   eax,eax
    d73c:	je     d766 <__sprintf_chk@plt+0x2db6>
    d73e:	mov    eax,DWORD PTR [rsp+0x18]
    d742:	lea    rbp,[rip+0x71bd7]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d749:	mov    edx,eax
    d74b:	and    edx,0xf000
    d751:	cmp    edx,0x4000
    d757:	jne    d788 <__sprintf_chk@plt+0x2dd8>
    d759:	xor    eax,DWORD PTR [rip+0x71c31]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
    d75f:	test   eax,0xfff
    d764:	jne    d7b0 <__sprintf_chk@plt+0x2e00>
    d766:	mov    rax,QWORD PTR [rsp+0x98]
    d76e:	sub    rax,QWORD PTR fs:0x28
    d777:	jne    d7be <__sprintf_chk@plt+0x2e0e>
    d779:	add    rsp,0xa0
    d780:	pop    rbp
    d781:	ret    
    d782:	nop    WORD PTR [rax+rax*1+0x0]
    d788:	mov    edx,0x5
    d78d:	lea    rsi,[rip+0x558b4]        # 63048 <_obstack_memory_used@@Base+0x163c8>
    d794:	xor    edi,edi
    d796:	call   a040 <dcgettext@plt>
    d79b:	mov    rdi,rbp
    d79e:	mov    rsi,rax
    d7a1:	xor    eax,eax
    d7a3:	call   d410 <__sprintf_chk@plt+0x2a60>
    d7a8:	jmp    d766 <__sprintf_chk@plt+0x2db6>
    d7aa:	nop    WORD PTR [rax+rax*1+0x0]
    d7b0:	mov    edx,0x5
    d7b5:	lea    rsi,[rip+0x5589e]        # 6305a <_obstack_memory_used@@Base+0x163da>
    d7bc:	jmp    d794 <__sprintf_chk@plt+0x2de4>
    d7be:	call   a0a0 <__stack_chk_fail@plt>
    d7c3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d7ce:	xchg   ax,ax
    d7d0:	push   r12
    d7d2:	sub    rsp,0x170
    d7d9:	mov    rdi,QWORD PTR [rip+0x71b48]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    d7e0:	mov    rax,QWORD PTR fs:0x28
    d7e9:	mov    QWORD PTR [rsp+0x168],rax
    d7f1:	xor    eax,eax
    d7f3:	lea    rsi,[rsp+0xd0]
    d7fb:	call   d6a0 <__sprintf_chk@plt+0x2cf0>
    d800:	test   eax,eax
    d802:	jne    d828 <__sprintf_chk@plt+0x2e78>
    d804:	mov    rax,QWORD PTR [rsp+0x168]
    d80c:	sub    rax,QWORD PTR fs:0x28
    d815:	jne    d908 <__sprintf_chk@plt+0x2f58>
    d81b:	add    rsp,0x170
    d822:	pop    r12
    d824:	ret    
    d825:	nop    DWORD PTR [rax]
    d828:	mov    rdi,QWORD PTR [rip+0x71b09]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
    d82f:	lea    rsi,[rsp+0x40]
    d834:	call   d6a0 <__sprintf_chk@plt+0x2cf0>
    d839:	test   eax,eax
    d83b:	je     d804 <__sprintf_chk@plt+0x2e54>
    d83d:	mov    rax,QWORD PTR [rsp+0xd0]
    d845:	cmp    QWORD PTR [rsp+0x40],rax
    d84a:	je     d8f0 <__sprintf_chk@plt+0x2f40>
    d850:	mov    eax,DWORD PTR [rip+0x7172a]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
    d856:	mov    rsi,QWORD PTR [rip+0x71adb]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
    d85d:	cmp    eax,0xa
    d860:	je     d90d <__sprintf_chk@plt+0x2f5d>
    d866:	mov    DWORD PTR [rsp],eax
    d869:	mov    rdx,rsp
    d86c:	xor    edi,edi
    d86e:	movabs rax,0x400000000000000
    d878:	mov    DWORD PTR [rsp+0x4],0x0
    d880:	mov    QWORD PTR [rsp+0x8],rax
    d885:	mov    QWORD PTR [rsp+0x10],0x0
    d88e:	mov    QWORD PTR [rsp+0x18],0x0
    d897:	mov    QWORD PTR [rsp+0x20],0x0
    d8a0:	mov    QWORD PTR [rsp+0x28],0x0
    d8a9:	mov    QWORD PTR [rsp+0x30],0x0
    d8b2:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
    d8b7:	xor    edi,edi
    d8b9:	mov    edx,0x5
    d8be:	lea    rsi,[rip+0x557a2]        # 63067 <_obstack_memory_used@@Base+0x163e7>
    d8c5:	mov    r12,rax
    d8c8:	call   a040 <dcgettext@plt>
    d8cd:	mov    rdx,r12
    d8d0:	lea    rdi,[rip+0x71a49]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d8d7:	mov    rsi,rax
    d8da:	xor    eax,eax
    d8dc:	call   d410 <__sprintf_chk@plt+0x2a60>
    d8e1:	jmp    d804 <__sprintf_chk@plt+0x2e54>
    d8e6:	cs nop WORD PTR [rax+rax*1+0x0]
    d8f0:	mov    rax,QWORD PTR [rsp+0xd8]
    d8f8:	cmp    QWORD PTR [rsp+0x48],rax
    d8fd:	jne    d850 <__sprintf_chk@plt+0x2ea0>
    d903:	jmp    d804 <__sprintf_chk@plt+0x2e54>
    d908:	call   a0a0 <__stack_chk_fail@plt>
    d90d:	jmp    a9c5 <__sprintf_chk@plt+0x15>
    d912:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d91d:	nop    DWORD PTR [rax]
    d920:	push   r13
    d922:	push   r12
    d924:	push   rbp
    d925:	push   rbx
    d926:	sub    rsp,0x418
    d92d:	mov    rdi,QWORD PTR [rip+0x71a04]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
    d934:	mov    rax,QWORD PTR fs:0x28
    d93d:	mov    QWORD PTR [rsp+0x408],rax
    d945:	xor    eax,eax
    d947:	mov    rbx,rsp
    d94a:	call   a060 <strlen@plt>
    d94f:	mov    rbp,rbx
    d952:	mov    r12,rax
    d955:	lea    r13,[rax+0x1]
    d959:	cmp    rax,0x3ff
    d95f:	ja     da20 <__sprintf_chk@plt+0x3070>
    d965:	mov    rsi,QWORD PTR [rip+0x719bc]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    d96c:	mov    edi,DWORD PTR [rip+0x6e6ae]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
    d972:	mov    rcx,r13
    d975:	mov    rdx,rbp
    d978:	call   a340 <readlinkat@plt>
    d97d:	test   rax,rax
    d980:	js     d9f0 <__sprintf_chk@plt+0x3040>
    d982:	cmp    r12,rax
    d985:	jne    d99d <__sprintf_chk@plt+0x2fed>
    d987:	mov    rdi,QWORD PTR [rip+0x719aa]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
    d98e:	mov    rdx,r12
    d991:	mov    rsi,rbp
    d994:	call   a2c0 <memcmp@plt>
    d999:	test   eax,eax
    d99b:	je     d9c1 <__sprintf_chk@plt+0x3011>
    d99d:	lea    rsi,[rip+0x556dd]        # 63081 <_obstack_memory_used@@Base+0x16401>
    d9a4:	xor    edi,edi
    d9a6:	mov    edx,0x5
    d9ab:	call   a040 <dcgettext@plt>
    d9b0:	lea    rdi,[rip+0x71969]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    d9b7:	mov    rsi,rax
    d9ba:	xor    eax,eax
    d9bc:	call   d410 <__sprintf_chk@plt+0x2a60>
    d9c1:	cmp    rbp,rbx
    d9c4:	je     d9ce <__sprintf_chk@plt+0x301e>
    d9c6:	mov    rdi,rbp
    d9c9:	call   9ce0 <free@plt>
    d9ce:	mov    rax,QWORD PTR [rsp+0x408]
    d9d6:	sub    rax,QWORD PTR fs:0x28
    d9df:	jne    da47 <__sprintf_chk@plt+0x3097>
    d9e1:	add    rsp,0x418
    d9e8:	pop    rbx
    d9e9:	pop    rbp
    d9ea:	pop    r12
    d9ec:	pop    r13
    d9ee:	ret    
    d9ef:	nop
    d9f0:	call   9e40 <__errno_location@plt>
    d9f5:	mov    rsi,QWORD PTR [rip+0x7192c]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
    d9fc:	lea    rdi,[rip+0x55675]        # 63078 <_obstack_memory_used@@Base+0x163f8>
    da03:	cmp    DWORD PTR [rax],0x2
    da06:	je     da40 <__sprintf_chk@plt+0x3090>
    da08:	call   3bad0 <__sprintf_chk@plt+0x31120>
    da0d:	xor    esi,esi
    da0f:	lea    rdi,[rip+0x7190a]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
    da16:	xor    eax,eax
    da18:	call   d410 <__sprintf_chk@plt+0x2a60>
    da1d:	jmp    d9c1 <__sprintf_chk@plt+0x3011>
    da1f:	nop
    da20:	mov    rdi,r13
    da23:	call   a4a0 <malloc@plt>
    da28:	mov    rbp,rax
    da2b:	test   rax,rax
    da2e:	jne    d965 <__sprintf_chk@plt+0x2fb5>
    da34:	call   19130 <__sprintf_chk@plt+0xe780>
    da39:	nop    DWORD PTR [rax+0x0]
    da40:	call   3c100 <__sprintf_chk@plt+0x31750>
    da45:	jmp    da0d <__sprintf_chk@plt+0x305d>
    da47:	call   a0a0 <__stack_chk_fail@plt>
    da4c:	nop    DWORD PTR [rax+0x0]
    da50:	endbr64 
    da54:	push   rbp
    da55:	mov    edx,0x2b
    da5a:	sub    rsp,0x40
    da5e:	mov    rax,QWORD PTR fs:0x28
    da67:	mov    QWORD PTR [rsp+0x38],rax
    da6c:	xor    eax,eax
    da6e:	mov    rbp,rsp
    da71:	mov    rsi,rbp
    da74:	call   a2a0 <read@plt>
    da79:	mov    r8,rax
    da7c:	xor    eax,eax
    da7e:	cmp    r8,0x2b
    da82:	jne    da9d <__sprintf_chk@plt+0x30ed>
    da84:	mov    edx,0x2b
    da89:	lea    rsi,[rip+0x55b90]        # 63620 <_obstack_memory_used@@Base+0x169a0>
    da90:	mov    rdi,rbp
    da93:	call   a2c0 <memcmp@plt>
    da98:	test   eax,eax
    da9a:	sete   al
    da9d:	mov    rdx,QWORD PTR [rsp+0x38]
    daa2:	sub    rdx,QWORD PTR fs:0x28
    daab:	jne    dab3 <__sprintf_chk@plt+0x3103>
    daad:	add    rsp,0x40
    dab1:	pop    rbp
    dab2:	ret    
    dab3:	call   a0a0 <__stack_chk_fail@plt>
    dab8:	nop    DWORD PTR [rax+rax*1+0x0]
    dac0:	endbr64 
    dac4:	mov    eax,DWORD PTR [rip+0x71b02]        # 7f5cc <obstack_alloc_failed_handler@@Base+0x794>
    daca:	push   rbx
    dacb:	mov    rbx,rdi
    dace:	test   eax,eax
    dad0:	je     dae0 <__sprintf_chk@plt+0x3130>
    dad2:	mov    DWORD PTR [rbx],0x0
    dad8:	pop    rbx
    dad9:	ret    
    dada:	nop    WORD PTR [rax+rax*1+0x0]
    dae0:	lea    rsi,[rip+0x71ae5]        # 7f5cc <obstack_alloc_failed_handler@@Base+0x794>
    dae7:	lea    rdi,[rip+0x555a3]        # 63091 <_obstack_memory_used@@Base+0x16411>
    daee:	call   28590 <__sprintf_chk@plt+0x1dbe0>
    daf3:	test   eax,eax
    daf5:	jne    db10 <__sprintf_chk@plt+0x3160>
    daf7:	mov    DWORD PTR [rip+0x71acb],0xfffffffe        # 7f5cc <obstack_alloc_failed_handler@@Base+0x794>
    db01:	mov    eax,0xfffffffe
    db06:	mov    DWORD PTR [rbx],0x0
    db0c:	pop    rbx
    db0d:	ret    
    db0e:	xchg   ax,ax
    db10:	mov    eax,DWORD PTR [rip+0x71ab6]        # 7f5cc <obstack_alloc_failed_handler@@Base+0x794>
    db16:	mov    DWORD PTR [rbx],0x0
    db1c:	pop    rbx
    db1d:	ret    
    db1e:	xchg   ax,ax
    db20:	endbr64 
    db24:	mov    eax,DWORD PTR [rip+0x71a9e]        # 7f5c8 <obstack_alloc_failed_handler@@Base+0x790>
    db2a:	push   rbx
    db2b:	mov    rbx,rdi
    db2e:	test   eax,eax
    db30:	je     db40 <__sprintf_chk@plt+0x3190>
    db32:	mov    DWORD PTR [rbx],0x0
    db38:	pop    rbx
    db39:	ret    
    db3a:	nop    WORD PTR [rax+rax*1+0x0]
    db40:	lea    rsi,[rip+0x71a81]        # 7f5c8 <obstack_alloc_failed_handler@@Base+0x790>
    db47:	lea    rdi,[rip+0x55543]        # 63091 <_obstack_memory_used@@Base+0x16411>
    db4e:	call   28460 <__sprintf_chk@plt+0x1dab0>
    db53:	test   eax,eax
    db55:	jne    db70 <__sprintf_chk@plt+0x31c0>
    db57:	mov    DWORD PTR [rip+0x71a67],0xfffffffe        # 7f5c8 <obstack_alloc_failed_handler@@Base+0x790>
    db61:	mov    eax,0xfffffffe
    db66:	mov    DWORD PTR [rbx],0x0
    db6c:	pop    rbx
    db6d:	ret    
    db6e:	xchg   ax,ax
    db70:	mov    eax,DWORD PTR [rip+0x71a52]        # 7f5c8 <obstack_alloc_failed_handler@@Base+0x790>
    db76:	mov    DWORD PTR [rbx],0x0
    db7c:	pop    rbx
    db7d:	ret    
    db7e:	xchg   ax,ax
    db80:	endbr64 
    db84:	cmp    BYTE PTR [rip+0x71a25],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    db8b:	jne    db90 <__sprintf_chk@plt+0x31e0>
    db8d:	ret    
    db8e:	xchg   ax,ax
    db90:	push   rbp
    db91:	push   rbx
    db92:	sub    rsp,0x8
    db96:	mov    rbx,QWORD PTR [rip+0x71a0b]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
    db9d:	test   rbx,rbx
    dba0:	je     dbc4 <__sprintf_chk@plt+0x3214>
    dba2:	nop    WORD PTR [rax+rax*1+0x0]
    dba8:	mov    rbp,rbx
    dbab:	mov    rbx,QWORD PTR [rbx]
    dbae:	mov    rdi,QWORD PTR [rbp+0x10]
    dbb2:	call   9ce0 <free@plt>
    dbb7:	mov    rdi,rbp
    dbba:	call   9ce0 <free@plt>
    dbbf:	test   rbx,rbx
    dbc2:	jne    dba8 <__sprintf_chk@plt+0x31f8>
    dbc4:	mov    QWORD PTR [rip+0x719d9],0x0        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
    dbcf:	mov    QWORD PTR [rip+0x719c6],0x0        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
    dbda:	add    rsp,0x8
    dbde:	pop    rbx
    dbdf:	pop    rbp
    dbe0:	ret    
    dbe1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    dbec:	nop    DWORD PTR [rax+0x0]
    dbf0:	endbr64 
    dbf4:	sub    rsp,0x38
    dbf8:	xor    edi,edi
    dbfa:	mov    rax,QWORD PTR fs:0x28
    dc03:	mov    QWORD PTR [rsp+0x28],rax
    dc08:	xor    eax,eax
    dc0a:	lea    rsi,[rsp+0x10]
    dc0f:	call   9f70 <clock_gettime@plt>
    dc14:	mov    rax,QWORD PTR [rsp+0x18]
    dc19:	pxor   xmm0,xmm0
    dc1d:	xor    edi,edi
    dc1f:	sub    rax,QWORD PTR [rip+0x71972]        # 7f598 <obstack_alloc_failed_handler@@Base+0x760>
    dc26:	pxor   xmm1,xmm1
    dc2a:	lea    rsi,[rip+0x7195f]        # 7f590 <obstack_alloc_failed_handler@@Base+0x758>
    dc31:	cvtsi2sd xmm0,rax
    dc36:	mov    rax,QWORD PTR [rsp+0x10]
    dc3b:	sub    rax,QWORD PTR [rip+0x7194e]        # 7f590 <obstack_alloc_failed_handler@@Base+0x758>
    dc42:	divsd  xmm0,QWORD PTR [rip+0x564ee]        # 64138 <_obstack_memory_used@@Base+0x174b8>
    dc4a:	cvtsi2sd xmm1,rax
    dc4f:	addsd  xmm0,xmm1
    dc53:	addsd  xmm0,QWORD PTR [rip+0x71aa5]        # 7f700 <obstack_alloc_failed_handler@@Base+0x8c8>
    dc5b:	movsd  QWORD PTR [rip+0x71a9d],xmm0        # 7f700 <obstack_alloc_failed_handler@@Base+0x8c8>
    dc63:	movsd  QWORD PTR [rsp+0x8],xmm0
    dc69:	call   9f70 <clock_gettime@plt>
    dc6e:	movsd  xmm0,QWORD PTR [rsp+0x8]
    dc74:	mov    rax,QWORD PTR [rsp+0x28]
    dc79:	sub    rax,QWORD PTR fs:0x28
    dc82:	jne    dc89 <__sprintf_chk@plt+0x32d9>
    dc84:	add    rsp,0x38
    dc88:	ret    
    dc89:	call   a0a0 <__stack_chk_fail@plt>
    dc8e:	xchg   ax,ax
    dc90:	endbr64 
    dc94:	push   r14
    dc96:	push   r13
    dc98:	mov    r13,rsi
    dc9b:	push   r12
    dc9d:	mov    r12,rdi
    dca0:	push   rbp
    dca1:	mov    ebp,ecx
    dca3:	push   rbx
    dca4:	sub    rsp,0x30
    dca8:	mov    rax,QWORD PTR fs:0x28
    dcb1:	mov    QWORD PTR [rsp+0x28],rax
    dcb6:	mov    eax,DWORD PTR [rip+0x718bc]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    dcbc:	cmp    eax,0x4
    dcbf:	je     ddb0 <__sprintf_chk@plt+0x3400>
    dcc5:	jbe    dd70 <__sprintf_chk@plt+0x33c0>
    dccb:	cmp    eax,0x7
    dcce:	ja     dda0 <__sprintf_chk@plt+0x33f0>
    dcd4:	mov    rax,QWORD PTR [rip+0x7187d]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    dcdb:	imul   rax,QWORD PTR [rip+0x7186d]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    dce3:	test   rax,rax
    dce6:	js     df10 <__sprintf_chk@plt+0x3560>
    dcec:	pxor   xmm0,xmm0
    dcf0:	cvtsi2sd xmm0,rax
    dcf5:	mov    rsi,QWORD PTR [r13+0x0]
    dcf9:	mov    edx,0x5
    dcfe:	xor    edi,edi
    dd00:	movsd  QWORD PTR [rsp+0x8],xmm0
    dd06:	call   a040 <dcgettext@plt>
    dd0b:	movsd  xmm0,QWORD PTR [rsp+0x8]
    dd11:	mov    rdi,r12
    dd14:	mov    rsi,rax
    dd17:	call   cfc0 <__sprintf_chk@plt+0x2610>
    dd1c:	mov    r13d,eax
    dd1f:	test   ebp,ebp
    dd21:	je     dd43 <__sprintf_chk@plt+0x3393>
    dd23:	mov    rax,QWORD PTR [r12+0x28]
    dd28:	cmp    rax,QWORD PTR [r12+0x30]
    dd2d:	jae    df50 <__sprintf_chk@plt+0x35a0>
    dd33:	lea    rdx,[rax+0x1]
    dd37:	mov    QWORD PTR [r12+0x28],rdx
    dd3c:	mov    BYTE PTR [rax],bpl
    dd3f:	add    r13d,0x1
    dd43:	mov    rax,QWORD PTR [rsp+0x28]
    dd48:	sub    rax,QWORD PTR fs:0x28
    dd51:	jne    dff0 <__sprintf_chk@plt+0x3640>
    dd57:	add    rsp,0x30
    dd5b:	mov    eax,r13d
    dd5e:	pop    rbx
    dd5f:	pop    rbp
    dd60:	pop    r12
    dd62:	pop    r13
    dd64:	pop    r14
    dd66:	ret    
    dd67:	nop    WORD PTR [rax+rax*1+0x0]
    dd70:	sub    eax,0x1
    dd73:	cmp    eax,0x2
    dd76:	ja     dff5 <__sprintf_chk@plt+0x3645>
    dd7c:	movsd  xmm0,QWORD PTR [rip+0x7196c]        # 7f6f0 <obstack_alloc_failed_handler@@Base+0x8b8>
    dd84:	mov    rsi,QWORD PTR [r13+0x8]
    dd88:	mov    rdi,r12
    dd8b:	addsd  xmm0,QWORD PTR [rip+0x71955]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
    dd93:	call   cfc0 <__sprintf_chk@plt+0x2610>
    dd98:	mov    r13d,eax
    dd9b:	jmp    dd1f <__sprintf_chk@plt+0x336f>
    dd9d:	nop    DWORD PTR [rax]
    dda0:	cmp    eax,0x8
    dda3:	je     dd7c <__sprintf_chk@plt+0x33cc>
    dda5:	jmp    a9ca <__sprintf_chk@plt+0x1a>
    ddaa:	nop    WORD PTR [rax+rax*1+0x0]
    ddb0:	mov    rax,QWORD PTR [rip+0x717a1]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    ddb7:	imul   rax,QWORD PTR [rip+0x71791]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ddbf:	mov    r14d,edx
    ddc2:	test   rax,rax
    ddc5:	js     df30 <__sprintf_chk@plt+0x3580>
    ddcb:	pxor   xmm0,xmm0
    ddcf:	cvtsi2sd xmm0,rax
    ddd4:	mov    rsi,QWORD PTR [r13+0x0]
    ddd8:	mov    rdi,r12
    dddb:	call   cfc0 <__sprintf_chk@plt+0x2610>
    dde0:	mov    ebx,eax
    dde2:	mov    rax,QWORD PTR [r12+0x28]
    dde7:	cmp    rax,QWORD PTR [r12+0x30]
    ddec:	jae    dfd0 <__sprintf_chk@plt+0x3620>
    ddf2:	lea    rdx,[rax+0x1]
    ddf6:	mov    QWORD PTR [r12+0x28],rdx
    ddfb:	mov    BYTE PTR [rax],r14b
    ddfe:	movsd  xmm0,QWORD PTR [rip+0x718ea]        # 7f6f0 <obstack_alloc_failed_handler@@Base+0x8b8>
    de06:	mov    rsi,QWORD PTR [r13+0x8]
    de0a:	mov    rdi,r12
    de0d:	add    ebx,0x1
    de10:	addsd  xmm0,QWORD PTR [rip+0x718d0]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
    de18:	call   cfc0 <__sprintf_chk@plt+0x2610>
    de1d:	add    ebx,eax
    de1f:	mov    rax,QWORD PTR [r12+0x28]
    de24:	cmp    rax,QWORD PTR [r12+0x30]
    de29:	jae    dfe0 <__sprintf_chk@plt+0x3630>
    de2f:	lea    rdx,[rax+0x1]
    de33:	mov    QWORD PTR [r12+0x28],rdx
    de38:	mov    BYTE PTR [rax],r14b
    de3b:	mov    rsi,QWORD PTR [r13+0x10]
    de3f:	add    ebx,0x1
    de42:	test   rsi,rsi
    de45:	je     de50 <__sprintf_chk@plt+0x34a0>
    de47:	cmp    BYTE PTR [rsi],0x0
    de4a:	jne    dfa0 <__sprintf_chk@plt+0x35f0>
    de50:	mov    rax,QWORD PTR [rip+0x71701]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    de57:	sub    rax,QWORD PTR [rip+0x716ea]        # 7f548 <obstack_alloc_failed_handler@@Base+0x710>
    de5e:	imul   rax,QWORD PTR [rip+0x716ea]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    de66:	test   rax,rax
    de69:	js     df78 <__sprintf_chk@plt+0x35c8>
    de6f:	pxor   xmm0,xmm0
    de73:	cvtsi2sd xmm0,rax
    de78:	movsd  xmm1,QWORD PTR [rip+0x71870]        # 7f6f0 <obstack_alloc_failed_handler@@Base+0x8b8>
    de80:	addsd  xmm1,QWORD PTR [rip+0x71860]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
    de88:	subsd  xmm0,xmm1
    de8c:	movsd  xmm1,QWORD PTR [rip+0x5629c]        # 64130 <_obstack_memory_used@@Base+0x174b0>
    de94:	comisd xmm0,xmm1
    de98:	jae    df60 <__sprintf_chk@plt+0x35b0>
    de9e:	cvttsd2si rcx,xmm0
    dea3:	mov    BYTE PTR [rsp+0x24],0x0
    dea8:	lea    r8,[rsp+0x24]
    dead:	movabs rdi,0xcccccccccccccccd
    deb7:	nop    WORD PTR [rax+rax*1+0x0]
    dec0:	mov    rax,rcx
    dec3:	sub    r8,0x1
    dec7:	mul    rdi
    deca:	mov    rax,rcx
    decd:	shr    rdx,0x3
    ded1:	lea    rsi,[rdx+rdx*4]
    ded5:	add    rsi,rsi
    ded8:	sub    rax,rsi
    dedb:	add    eax,0x30
    dede:	mov    BYTE PTR [r8],al
    dee1:	mov    rax,rcx
    dee4:	mov    rcx,rdx
    dee7:	cmp    rax,0x9
    deeb:	ja     dec0 <__sprintf_chk@plt+0x3510>
    deed:	mov    rcx,r8
    def0:	lea    rdx,[rip+0x5de60]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
    def7:	mov    rdi,r12
    defa:	xor    eax,eax
    defc:	mov    esi,0x1
    df01:	call   a840 <__fprintf_chk@plt>
    df06:	lea    r13d,[rbx+rax*1]
    df0a:	jmp    dd1f <__sprintf_chk@plt+0x336f>
    df0f:	nop
    df10:	mov    rdx,rax
    df13:	and    eax,0x1
    df16:	pxor   xmm0,xmm0
    df1a:	shr    rdx,1
    df1d:	or     rdx,rax
    df20:	cvtsi2sd xmm0,rdx
    df25:	addsd  xmm0,xmm0
    df29:	jmp    dcf5 <__sprintf_chk@plt+0x3345>
    df2e:	xchg   ax,ax
    df30:	mov    rdx,rax
    df33:	and    eax,0x1
    df36:	pxor   xmm0,xmm0
    df3a:	shr    rdx,1
    df3d:	or     rdx,rax
    df40:	cvtsi2sd xmm0,rdx
    df45:	addsd  xmm0,xmm0
    df49:	jmp    ddd4 <__sprintf_chk@plt+0x3424>
    df4e:	xchg   ax,ax
    df50:	mov    esi,ebp
    df52:	mov    rdi,r12
    df55:	call   a120 <__overflow@plt>
    df5a:	jmp    dd3f <__sprintf_chk@plt+0x338f>
    df5f:	nop
    df60:	subsd  xmm0,xmm1
    df64:	cvttsd2si rcx,xmm0
    df69:	btc    rcx,0x3f
    df6e:	jmp    dea3 <__sprintf_chk@plt+0x34f3>
    df73:	nop    DWORD PTR [rax+rax*1+0x0]
    df78:	mov    rdx,rax
    df7b:	and    eax,0x1
    df7e:	pxor   xmm0,xmm0
    df82:	shr    rdx,1
    df85:	or     rdx,rax
    df88:	cvtsi2sd xmm0,rdx
    df8d:	addsd  xmm0,xmm0
    df91:	jmp    de78 <__sprintf_chk@plt+0x34c8>
    df96:	cs nop WORD PTR [rax+rax*1+0x0]
    dfa0:	mov    edx,0x5
    dfa5:	xor    edi,edi
    dfa7:	call   a040 <dcgettext@plt>
    dfac:	lea    rdx,[rip+0x56209]        # 641bc <_obstack_memory_used@@Base+0x1753c>
    dfb3:	mov    esi,0x1
    dfb8:	mov    rdi,r12
    dfbb:	mov    rcx,rax
    dfbe:	xor    eax,eax
    dfc0:	call   a840 <__fprintf_chk@plt>
    dfc5:	add    ebx,eax
    dfc7:	jmp    de50 <__sprintf_chk@plt+0x34a0>
    dfcc:	nop    DWORD PTR [rax+0x0]
    dfd0:	mov    esi,r14d
    dfd3:	mov    rdi,r12
    dfd6:	call   a120 <__overflow@plt>
    dfdb:	jmp    ddfe <__sprintf_chk@plt+0x344e>
    dfe0:	mov    esi,r14d
    dfe3:	mov    rdi,r12
    dfe6:	call   a120 <__overflow@plt>
    dfeb:	jmp    de3b <__sprintf_chk@plt+0x348b>
    dff0:	call   a0a0 <__stack_chk_fail@plt>
    dff5:	jmp    a9ca <__sprintf_chk@plt+0x1a>
    dffa:	nop    WORD PTR [rax+rax*1+0x0]
    e000:	push   r15
    e002:	mov    r15,rdx
    e005:	mov    edx,0x5
    e00a:	push   r14
    e00c:	mov    r14d,ecx
    e00f:	push   r13
    e011:	push   r12
    e013:	mov    r12,rdi
    e016:	push   rbp
    e017:	mov    rbp,rsi
    e01a:	push   rbx
    e01b:	sub    rsp,0x178
    e022:	mov    DWORD PTR [rsp+0x10],r8d
    e027:	mov    BYTE PTR [rsp+0x17],cl
    e02b:	mov    rax,QWORD PTR fs:0x28
    e034:	mov    QWORD PTR [rsp+0x168],rax
    e03c:	xor    eax,eax
    e03e:	test   cl,cl
    e040:	je     e168 <__sprintf_chk@plt+0x37b8>
    e046:	lea    rsi,[rip+0x596e9]        # 67736 <_obstack_memory_used@@Base+0x1aab6>
    e04d:	xor    edi,edi
    e04f:	call   a040 <dcgettext@plt>
    e054:	mov    QWORD PTR [rsp+0x8],rax
    e059:	mov    BYTE PTR [rsp+0x54],0x0
    e05e:	mov    ecx,DWORD PTR [rsp+0x10]
    e062:	lea    rbx,[rsp+0x54]
    e067:	movabs rsi,0xcccccccccccccccd
    e071:	nop    DWORD PTR [rax+0x0]
    e078:	mov    rax,rcx
    e07b:	sub    rbx,0x1
    e07f:	mul    rsi
    e082:	mov    rax,rcx
    e085:	shr    rdx,0x3
    e089:	lea    rdi,[rdx+rdx*4]
    e08d:	add    rdi,rdi
    e090:	sub    rax,rdi
    e093:	add    eax,0x30
    e096:	mov    BYTE PTR [rbx],al
    e098:	mov    rax,rcx
    e09b:	mov    rcx,rdx
    e09e:	cmp    rax,0x9
    e0a2:	ja     e078 <__sprintf_chk@plt+0x36c8>
    e0a4:	test   r15,r15
    e0a7:	je     e180 <__sprintf_chk@plt+0x37d0>
    e0ad:	movzx  eax,BYTE PTR [r15]
    e0b1:	lea    r14,[rip+0x55da8]        # 63e60 <_obstack_memory_used@@Base+0x171e0>
    e0b8:	test   al,al
    e0ba:	je     e101 <__sprintf_chk@plt+0x3751>
    e0bc:	cmp    al,0x25
    e0be:	je     e138 <__sprintf_chk@plt+0x3788>
    e0c0:	mov    rdx,QWORD PTR [r12+0x28]
    e0c5:	cmp    rdx,QWORD PTR [r12+0x30]
    e0ca:	jae    e1a0 <__sprintf_chk@plt+0x37f0>
    e0d0:	lea    rcx,[rdx+0x1]
    e0d4:	mov    QWORD PTR [r12+0x28],rcx
    e0d9:	mov    BYTE PTR [rdx],al
    e0db:	add    rbp,0x1
    e0df:	cmp    BYTE PTR [r15],0xd
    e0e3:	mov    r13,r15
    e0e6:	jne    e0f4 <__sprintf_chk@plt+0x3744>
    e0e8:	mov    DWORD PTR [rip+0x714ee],0x1        # 7f5e0 <obstack_alloc_failed_handler@@Base+0x7a8>
    e0f2:	xor    ebp,ebp
    e0f4:	movzx  eax,BYTE PTR [r13+0x1]
    e0f9:	lea    r15,[r13+0x1]
    e0fd:	test   al,al
    e0ff:	jne    e0bc <__sprintf_chk@plt+0x370c>
    e101:	mov    rdi,r12
    e104:	call   a870 <fflush_unlocked@plt>
    e109:	mov    eax,ebp
    e10b:	mov    rdx,QWORD PTR [rsp+0x168]
    e113:	sub    rdx,QWORD PTR fs:0x28
    e11c:	jne    e5f3 <__sprintf_chk@plt+0x3c43>
    e122:	add    rsp,0x178
    e129:	pop    rbx
    e12a:	pop    rbp
    e12b:	pop    r12
    e12d:	pop    r13
    e12f:	pop    r14
    e131:	pop    r15
    e133:	ret    
    e134:	nop    DWORD PTR [rax+0x0]
    e138:	movzx  eax,BYTE PTR [r15+0x1]
    e13d:	lea    r13,[r15+0x1]
    e141:	cmp    al,0x7b
    e143:	je     e2c0 <__sprintf_chk@plt+0x3910>
    e149:	cmp    al,0x2a
    e14b:	je     e4f8 <__sprintf_chk@plt+0x3b48>
    e151:	sub    eax,0x54
    e154:	cmp    al,0x21
    e156:	ja     e1b0 <__sprintf_chk@plt+0x3800>
    e158:	movzx  eax,al
    e15b:	movsxd rax,DWORD PTR [r14+rax*4]
    e15f:	add    rax,r14
    e162:	notrack jmp rax
    e165:	nop    DWORD PTR [rax]
    e168:	lea    rsi,[rip+0x5541a]        # 63589 <_obstack_memory_used@@Base+0x16909>
    e16f:	xor    edi,edi
    e171:	call   a040 <dcgettext@plt>
    e176:	mov    QWORD PTR [rsp+0x8],rax
    e17b:	jmp    e059 <__sprintf_chk@plt+0x36a9>
    e180:	mov    edx,0x5
    e185:	test   r14b,r14b
    e188:	je     e1f8 <__sprintf_chk@plt+0x3848>
    e18a:	lea    rsi,[rip+0x54f15]        # 630a6 <_obstack_memory_used@@Base+0x16426>
    e191:	xor    edi,edi
    e193:	call   a040 <dcgettext@plt>
    e198:	mov    r15,rax
    e19b:	jmp    e0ad <__sprintf_chk@plt+0x36fd>
    e1a0:	movzx  esi,al
    e1a3:	mov    rdi,r12
    e1a6:	call   a120 <__overflow@plt>
    e1ab:	jmp    e0db <__sprintf_chk@plt+0x372b>
    e1b0:	mov    rax,QWORD PTR [r12+0x28]
    e1b5:	cmp    rax,QWORD PTR [r12+0x30]
    e1ba:	jae    e5e1 <__sprintf_chk@plt+0x3c31>
    e1c0:	lea    rdx,[rax+0x1]
    e1c4:	mov    QWORD PTR [r12+0x28],rdx
    e1c9:	mov    BYTE PTR [rax],0x25
    e1cc:	movzx  edx,BYTE PTR [r13+0x0]
    e1d1:	mov    rax,QWORD PTR [r12+0x28]
    e1d6:	cmp    rax,QWORD PTR [r12+0x30]
    e1db:	jae    e5d1 <__sprintf_chk@plt+0x3c21>
    e1e1:	lea    rcx,[rax+0x1]
    e1e5:	mov    QWORD PTR [r12+0x28],rcx
    e1ea:	mov    BYTE PTR [rax],dl
    e1ec:	add    rbp,0x2
    e1f0:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e1f5:	nop    DWORD PTR [rax]
    e1f8:	lea    rsi,[rip+0x54ebb]        # 630ba <_obstack_memory_used@@Base+0x1643a>
    e1ff:	xor    edi,edi
    e201:	call   a040 <dcgettext@plt>
    e206:	mov    r15,rax
    e209:	jmp    e0ad <__sprintf_chk@plt+0x36fd>
    e20e:	movzx  ecx,BYTE PTR [rsp+0x17]
    e213:	mov    r8d,DWORD PTR [rsp+0x10]
    e218:	mov    rsi,rbp
    e21b:	mov    rdi,r12
    e21e:	lea    rdx,[rip+0x5542b]        # 63650 <_obstack_memory_used@@Base+0x169d0>
    e225:	call   e000 <__sprintf_chk@plt+0x3650>
    e22a:	cdqe   
    e22c:	add    rbp,rax
    e22f:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e234:	call   dbf0 <__sprintf_chk@plt+0x3240>
    e239:	lea    rdx,[rip+0x54e8d]        # 630cd <_obstack_memory_used@@Base+0x1644d>
    e240:	mov    esi,0x1
    e245:	mov    rdi,r12
    e248:	mov    eax,0x1
    e24d:	call   a840 <__fprintf_chk@plt>
    e252:	cdqe   
    e254:	add    rbp,rax
    e257:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e25c:	mov    r15,QWORD PTR [rsp+0x8]
    e261:	mov    rsi,r12
    e264:	mov    rdi,r15
    e267:	call   a2e0 <fputs_unlocked@plt>
    e26c:	mov    rdi,r15
    e26f:	call   a060 <strlen@plt>
    e274:	add    rbp,rax
    e277:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e27c:	mov    rsi,r12
    e27f:	mov    rdi,rbx
    e282:	call   a2e0 <fputs_unlocked@plt>
    e287:	mov    rdi,rbx
    e28a:	call   a060 <strlen@plt>
    e28f:	add    rbp,rax
    e292:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e297:	call   dbf0 <__sprintf_chk@plt+0x3240>
    e29c:	xor    ecx,ecx
    e29e:	mov    edx,0x2c
    e2a3:	mov    rdi,r12
    e2a6:	lea    rsi,[rip+0x6ddd3]        # 7c080 <_obstack_memory_used@@Base+0x2f400>
    e2ad:	call   dc90 <__sprintf_chk@plt+0x32e0>
    e2b2:	cdqe   
    e2b4:	add    rbp,rax
    e2b7:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e2bc:	nop    DWORD PTR [rax+0x0]
    e2c0:	add    r15,0x2
    e2c4:	mov    esi,0x7d
    e2c9:	mov    rdi,r15
    e2cc:	call   a0f0 <strchr@plt>
    e2d1:	mov    rcx,rax
    e2d4:	test   rax,rax
    e2d7:	je     e1b0 <__sprintf_chk@plt+0x3800>
    e2dd:	mov    r8,rax
    e2e0:	mov    rdi,QWORD PTR [rip+0x71309]        # 7f5f0 <obstack_alloc_failed_handler@@Base+0x7b8>
    e2e7:	sub    r8,r13
    e2ea:	cmp    r8,QWORD PTR [rip+0x712f7]        # 7f5e8 <obstack_alloc_failed_handler@@Base+0x7b0>
    e2f1:	ja     e505 <__sprintf_chk@plt+0x3b55>
    e2f7:	lea    rdx,[r8-0x1]
    e2fb:	mov    rsi,r15
    e2fe:	mov    QWORD PTR [rsp+0x20],rcx
    e303:	mov    QWORD PTR [rsp+0x18],r8
    e308:	call   a420 <memcpy@plt>
    e30d:	mov    r8,QWORD PTR [rsp+0x18]
    e312:	mov    rcx,QWORD PTR [rsp+0x20]
    e317:	mov    rax,QWORD PTR [rip+0x712d2]        # 7f5f0 <obstack_alloc_failed_handler@@Base+0x7b8>
    e31e:	lea    r13,[rcx+0x1]
    e322:	mov    BYTE PTR [rax+r8*1-0x1],0x0
    e328:	mov    r10,QWORD PTR [rip+0x712c1]        # 7f5f0 <obstack_alloc_failed_handler@@Base+0x7b8>
    e32f:	test   r10,r10
    e332:	je     e1b0 <__sprintf_chk@plt+0x3800>
    e338:	movzx  eax,BYTE PTR [rcx+0x1]
    e33c:	cmp    al,0x2a
    e33e:	je     e4a3 <__sprintf_chk@plt+0x3af3>
    e344:	sub    eax,0x54
    e347:	cmp    al,0x21
    e349:	ja     e1b0 <__sprintf_chk@plt+0x3800>
    e34f:	lea    rdx,[rip+0x55b92]        # 63ee8 <_obstack_memory_used@@Base+0x17268>
    e356:	movzx  eax,al
    e359:	movsxd rax,DWORD PTR [rdx+rax*4]
    e35d:	add    rax,rdx
    e360:	notrack jmp rax
    e363:	lea    r10,[rip+0x58881]        # 66beb <_obstack_memory_used@@Base+0x19f6b>
    e36a:	lea    r15,[rsp+0x30]
    e36f:	xor    esi,esi
    e371:	mov    QWORD PTR [rsp+0x18],r10
    e376:	mov    rdi,r15
    e379:	call   a180 <gettimeofday@plt>
    e37e:	mov    rdi,r15
    e381:	call   9e10 <localtime@plt>
    e386:	sub    rsp,0x8
    e38a:	xor    r8d,r8d
    e38d:	xor    ecx,ecx
    e38f:	mov    rdx,rax
    e392:	imul   eax,DWORD PTR [rsp+0x40],0x3e8
    e39a:	mov    r9d,0xffffffff
    e3a0:	mov    rdi,r12
    e3a3:	push   rax
    e3a4:	mov    rsi,QWORD PTR [rsp+0x28]
    e3a9:	call   5da00 <_obstack_memory_used@@Base+0x10d80>
    e3ae:	add    rbp,rax
    e3b1:	pop    rax
    e3b2:	pop    rdx
    e3b3:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e3b8:	mov    QWORD PTR [rsp+0x18],r10
    e3bd:	lea    r15,[rsp+0x80]
    e3c5:	call   dbf0 <__sprintf_chk@plt+0x3240>
    e3ca:	mov    rdi,QWORD PTR [rsp+0x18]
    e3cf:	mov    edx,0x4644
    e3d4:	mov    rsi,r15
    e3d7:	lea    rax,[rip+0x5eb03]        # 6cee1 <_obstack_memory_used@@Base+0x20261>
    e3de:	mov    QWORD PTR [rsp+0xb8],rax
    e3e6:	call   3f220 <__sprintf_chk@plt+0x34870>
    e3eb:	mov    r10,QWORD PTR [rsp+0x18]
    e3f0:	test   eax,eax
    e3f2:	je     e54a <__sprintf_chk@plt+0x3b9a>
    e3f8:	mov    rax,QWORD PTR [rip+0x71109]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    e3ff:	test   rax,rax
    e402:	je     e410 <__sprintf_chk@plt+0x3a60>
    e404:	mov    QWORD PTR [rsp+0x18],r10
    e409:	call   rax
    e40b:	mov    r10,QWORD PTR [rsp+0x18]
    e410:	movsxd rax,DWORD PTR [rsp+0x140]
    e418:	mov    r8,QWORD PTR [rsp+0x148]
    e420:	cmp    eax,0x9
    e423:	je     e43c <__sprintf_chk@plt+0x3a8c>
    e425:	lea    r8,[rip+0x54c6c]        # 63098 <_obstack_memory_used@@Base+0x16418>
    e42c:	cmp    eax,0x8
    e42f:	jg     e43c <__sprintf_chk@plt+0x3a8c>
    e431:	lea    rdx,[rip+0x6bc68]        # 7a0a0 <_obstack_memory_used@@Base+0x2d420>
    e438:	mov    r8,QWORD PTR [rdx+rax*8]
    e43c:	mov    edx,0x5
    e441:	lea    rsi,[rip+0x54c8a]        # 630d2 <_obstack_memory_used@@Base+0x16452>
    e448:	xor    edi,edi
    e44a:	mov    QWORD PTR [rsp+0x20],r8
    e44f:	mov    QWORD PTR [rsp+0x18],r10
    e454:	call   a040 <dcgettext@plt>
    e459:	mov    r8,QWORD PTR [rsp+0x20]
    e45e:	xor    esi,esi
    e460:	xor    edi,edi
    e462:	mov    rcx,QWORD PTR [rsp+0x18]
    e467:	mov    rdx,rax
    e46a:	xor    eax,eax
    e46c:	call   a640 <error@plt>
    e471:	lea    rsi,[rip+0x6dc08]        # 7c080 <_obstack_memory_used@@Base+0x2f400>
    e478:	mov    DWORD PTR [rip+0x70c42],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
    e482:	mov    rdi,r12
    e485:	xor    ecx,ecx
    e487:	mov    edx,0x2c
    e48c:	call   dc90 <__sprintf_chk@plt+0x32e0>
    e491:	mov    rdi,r15
    e494:	cdqe   
    e496:	add    rbp,rax
    e499:	call   3cee0 <__sprintf_chk@plt+0x32530>
    e49e:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e4a3:	mov    edx,0xa
    e4a8:	xor    esi,esi
    e4aa:	mov    rdi,r10
    e4ad:	call   a410 <strtol@plt>
    e4b2:	mov    r15,rax
    e4b5:	cmp    rbp,r15
    e4b8:	jb     e4d9 <__sprintf_chk@plt+0x3b29>
    e4ba:	jmp    e0f4 <__sprintf_chk@plt+0x3744>
    e4bf:	nop
    e4c0:	lea    rdx,[rax+0x1]
    e4c4:	mov    QWORD PTR [r12+0x28],rdx
    e4c9:	mov    BYTE PTR [rax],0x20
    e4cc:	add    rbp,0x1
    e4d0:	cmp    rbp,r15
    e4d3:	je     e0f4 <__sprintf_chk@plt+0x3744>
    e4d9:	mov    rax,QWORD PTR [r12+0x28]
    e4de:	cmp    rax,QWORD PTR [r12+0x30]
    e4e3:	jb     e4c0 <__sprintf_chk@plt+0x3b10>
    e4e5:	mov    esi,0x20
    e4ea:	mov    rdi,r12
    e4ed:	call   a120 <__overflow@plt>
    e4f2:	jmp    e4cc <__sprintf_chk@plt+0x3b1c>
    e4f4:	nop    DWORD PTR [rax+0x0]
    e4f8:	mov    rdi,r12
    e4fb:	call   d2b0 <__sprintf_chk@plt+0x2900>
    e500:	mov    r15,rax
    e503:	jmp    e4b5 <__sprintf_chk@plt+0x3b05>
    e505:	mov    rsi,r8
    e508:	mov    QWORD PTR [rip+0x710d9],r8        # 7f5e8 <obstack_alloc_failed_handler@@Base+0x7b0>
    e50f:	mov    QWORD PTR [rsp+0x20],r8
    e514:	mov    QWORD PTR [rsp+0x18],rdi
    e519:	mov    QWORD PTR [rsp+0x28],rax
    e51e:	call   a570 <realloc@plt>
    e523:	mov    rdi,QWORD PTR [rsp+0x18]
    e528:	mov    r8,QWORD PTR [rsp+0x20]
    e52d:	test   rax,rax
    e530:	mov    rcx,QWORD PTR [rsp+0x28]
    e535:	je     e5f8 <__sprintf_chk@plt+0x3c48>
    e53b:	mov    QWORD PTR [rip+0x710ae],rax        # 7f5f0 <obstack_alloc_failed_handler@@Base+0x7b8>
    e542:	mov    rdi,rax
    e545:	jmp    e2f7 <__sprintf_chk@plt+0x3947>
    e54a:	mov    rcx,QWORD PTR [rsp+0x80]
    e552:	lea    rsi,[rsp+0x60]
    e557:	test   rcx,rcx
    e55a:	je     e585 <__sprintf_chk@plt+0x3bd5>
    e55c:	mov    rdi,QWORD PTR [rsp+0x88]
    e564:	xor    eax,eax
    e566:	lea    rsi,[rsp+0x60]
    e56b:	mov    rdx,QWORD PTR [rdi+rax*8]
    e56f:	mov    QWORD PTR [rsi+rax*8],rdx
    e573:	add    rax,0x1
    e577:	cmp    rax,rcx
    e57a:	jne    e56b <__sprintf_chk@plt+0x3bbb>
    e57c:	cmp    eax,0x3
    e57f:	je     e482 <__sprintf_chk@plt+0x3ad2>
    e585:	mov    edx,0x3
    e58a:	xor    edi,edi
    e58c:	sub    edx,eax
    e58e:	cdqe   
    e590:	shl    rdx,0x3
    e594:	lea    rax,[rsi+rax*8]
    e598:	mov    ecx,edx
    e59a:	sub    edx,0x8
    e59d:	mov    QWORD PTR [rax],0x0
    e5a4:	lea    r8,[rax+0x8]
    e5a8:	mov    QWORD PTR [rax+rcx*1-0x8],0x0
    e5b1:	cmp    edx,0x8
    e5b4:	jb     e482 <__sprintf_chk@plt+0x3ad2>
    e5ba:	and    edx,0xfffffff8
    e5bd:	xor    eax,eax
    e5bf:	mov    ecx,eax
    e5c1:	add    eax,0x8
    e5c4:	mov    QWORD PTR [r8+rcx*1],rdi
    e5c8:	cmp    eax,edx
    e5ca:	jb     e5bf <__sprintf_chk@plt+0x3c0f>
    e5cc:	jmp    e482 <__sprintf_chk@plt+0x3ad2>
    e5d1:	movzx  esi,dl
    e5d4:	mov    rdi,r12
    e5d7:	call   a120 <__overflow@plt>
    e5dc:	jmp    e1ec <__sprintf_chk@plt+0x383c>
    e5e1:	mov    esi,0x25
    e5e6:	mov    rdi,r12
    e5e9:	call   a120 <__overflow@plt>
    e5ee:	jmp    e1cc <__sprintf_chk@plt+0x381c>
    e5f3:	call   a0a0 <__stack_chk_fail@plt>
    e5f8:	test   r8,r8
    e5fb:	jne    e606 <__sprintf_chk@plt+0x3c56>
    e5fd:	test   rdi,rdi
    e600:	jne    e53b <__sprintf_chk@plt+0x3b8b>
    e606:	call   19130 <__sprintf_chk@plt+0xe780>
    e60b:	nop    DWORD PTR [rax+rax*1+0x0]
    e610:	push   r15
    e612:	push   r14
    e614:	push   r13
    e616:	push   r12
    e618:	push   rbp
    e619:	push   rbx
    e61a:	sub    rsp,0x48
    e61e:	mov    rbx,QWORD PTR [rip+0x709ab]        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    e625:	mov    BYTE PTR [rsp+0xb],dil
    e62a:	mov    rax,QWORD PTR fs:0x28
    e633:	mov    QWORD PTR [rsp+0x38],rax
    e638:	xor    eax,eax
    e63a:	test   rbx,rbx
    e63d:	je     e6a0 <__sprintf_chk@plt+0x3cf0>
    e63f:	lea    rbp,[rip+0x5592a]        # 63f70 <_obstack_memory_used@@Base+0x172f0>
    e646:	lea    r15,[rip+0x70993]        # 7efe0 <obstack_alloc_failed_handler@@Base+0x1a8>
    e64d:	lea    r14,[rip+0x6bb1c]        # 7a170 <_obstack_memory_used@@Base+0x2d4f0>
    e654:	nop    DWORD PTR [rax+0x0]
    e658:	cmp    DWORD PTR [rbx+0x8],0x7
    e65c:	ja     e698 <__sprintf_chk@plt+0x3ce8>
    e65e:	mov    eax,DWORD PTR [rbx+0x8]
    e661:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
    e666:	add    rax,rbp
    e669:	notrack jmp rax
    e66c:	nop    DWORD PTR [rax+0x0]
    e670:	call   dbf0 <__sprintf_chk@plt+0x3240>
    e675:	mov    rax,QWORD PTR [rip+0x6d96c]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
    e67c:	mov    ecx,0xa
    e681:	mov    rsi,r14
    e684:	mov    edx,0xa
    e689:	mov    rdi,QWORD PTR [rax]
    e68c:	call   dc90 <__sprintf_chk@plt+0x32e0>
    e691:	nop    DWORD PTR [rax+0x0]
    e698:	mov    rbx,QWORD PTR [rbx]
    e69b:	test   rbx,rbx
    e69e:	jne    e658 <__sprintf_chk@plt+0x3ca8>
    e6a0:	mov    rax,QWORD PTR [rsp+0x38]
    e6a5:	sub    rax,QWORD PTR fs:0x28
    e6ae:	jne    e902 <__sprintf_chk@plt+0x3f52>
    e6b4:	add    rsp,0x48
    e6b8:	pop    rbx
    e6b9:	pop    rbp
    e6ba:	pop    r12
    e6bc:	pop    r13
    e6be:	pop    r14
    e6c0:	pop    r15
    e6c2:	ret    
    e6c3:	nop    DWORD PTR [rax+rax*1+0x0]
    e6c8:	mov    eax,DWORD PTR [rip+0x70fde]        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    e6ce:	mov    DWORD PTR [rsp+0xc],eax
    e6d2:	mov    rax,QWORD PTR [rip+0x70e37]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    e6d9:	mov    r13,QWORD PTR [rax]
    e6dc:	mov    rax,QWORD PTR [rbx+0x10]
    e6e0:	mov    QWORD PTR [rsp],rax
    e6e4:	call   a950 <fork@plt>
    e6e9:	mov    r12d,eax
    e6ec:	cmp    eax,0xffffffff
    e6ef:	je     e8fd <__sprintf_chk@plt+0x3f4d>
    e6f5:	test   eax,eax
    e6f7:	je     e907 <__sprintf_chk@plt+0x3f57>
    e6fd:	lea    r13,[rsp+0x1c]
    e702:	nop    WORD PTR [rax+rax*1+0x0]
    e708:	xor    edx,edx
    e70a:	mov    rsi,r13
    e70d:	mov    edi,r12d
    e710:	call   a680 <waitpid@plt>
    e715:	cmp    eax,0xffffffff
    e718:	jne    e698 <__sprintf_chk@plt+0x3ce8>
    e71e:	call   9e40 <__errno_location@plt>
    e723:	cmp    DWORD PTR [rax],0x4
    e726:	je     e708 <__sprintf_chk@plt+0x3d58>
    e728:	mov    rsi,QWORD PTR [rsp]
    e72c:	lea    rdi,[rip+0x549ce]        # 63101 <_obstack_memory_used@@Base+0x16481>
    e733:	call   3bad0 <__sprintf_chk@plt+0x31120>
    e738:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e73d:	nop    DWORD PTR [rax]
    e740:	mov    edi,DWORD PTR [rbx+0x10]
    e743:	call   a910 <sleep@plt>
    e748:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e74d:	nop    DWORD PTR [rax]
    e750:	mov    rdi,QWORD PTR [rip+0x70871]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    e757:	test   rdi,rdi
    e75a:	je     e870 <__sprintf_chk@plt+0x3ec0>
    e760:	movzx  ecx,BYTE PTR [rsp+0xb]
    e765:	mov    rdx,QWORD PTR [rbx+0x10]
    e769:	xor    esi,esi
    e76b:	mov    r8d,DWORD PTR [rip+0x70f3a]        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    e772:	call   e000 <__sprintf_chk@plt+0x3650>
    e777:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e77c:	nop    DWORD PTR [rax+0x0]
    e780:	mov    rdi,QWORD PTR [rip+0x70911]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    e787:	mov    rax,QWORD PTR [rdi+0x28]
    e78b:	cmp    rax,QWORD PTR [rdi+0x30]
    e78f:	jae    e8d0 <__sprintf_chk@plt+0x3f20>
    e795:	lea    rdx,[rax+0x1]
    e799:	mov    QWORD PTR [rdi+0x28],rdx
    e79d:	mov    BYTE PTR [rax],0x2e
    e7a0:	mov    rdi,QWORD PTR [rip+0x708f1]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
    e7a7:	call   a870 <fflush_unlocked@plt>
    e7ac:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e7b1:	nop    DWORD PTR [rax+0x0]
    e7b8:	lea    r13,[rsp+0x1c]
    e7bd:	mov    rdi,r15
    e7c0:	mov    rsi,r13
    e7c3:	call   a790 <sigwait@plt>
    e7c8:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e7cd:	nop    DWORD PTR [rax]
    e7d0:	mov    r12,QWORD PTR [rip+0x6d811]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
    e7d7:	mov    rcx,QWORD PTR [rip+0x707e2]        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
    e7de:	lea    rdx,[rip+0x559d7]        # 641bc <_obstack_memory_used@@Base+0x1753c>
    e7e5:	xor    eax,eax
    e7e7:	mov    esi,0x1
    e7ec:	mov    rdi,QWORD PTR [r12]
    e7f0:	call   a840 <__fprintf_chk@plt>
    e7f5:	mov    rdi,QWORD PTR [r12]
    e7f9:	mov    rdx,QWORD PTR [rbx+0x10]
    e7fd:	movzx  ecx,BYTE PTR [rsp+0xb]
    e802:	mov    r8d,DWORD PTR [rip+0x70ea3]        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    e809:	movsxd rsi,eax
    e80c:	call   e000 <__sprintf_chk@plt+0x3650>
    e811:	mov    rdi,QWORD PTR [r12]
    e815:	mov    rax,QWORD PTR [rdi+0x28]
    e819:	cmp    rax,QWORD PTR [rdi+0x30]
    e81d:	jae    e8df <__sprintf_chk@plt+0x3f2f>
    e823:	lea    rdx,[rax+0x1]
    e827:	mov    QWORD PTR [rdi+0x28],rdx
    e82b:	mov    BYTE PTR [rax],0xa
    e82e:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e833:	nop    DWORD PTR [rax+rax*1+0x0]
    e838:	mov    rdi,QWORD PTR [rip+0x70789]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    e83f:	test   rdi,rdi
    e842:	je     e8a0 <__sprintf_chk@plt+0x3ef0>
    e844:	mov    rax,QWORD PTR [rdi+0x28]
    e848:	cmp    rax,QWORD PTR [rdi+0x30]
    e84c:	jae    e8ee <__sprintf_chk@plt+0x3f3e>
    e852:	lea    rdx,[rax+0x1]
    e856:	mov    QWORD PTR [rdi+0x28],rdx
    e85a:	mov    BYTE PTR [rax],0x7
    e85d:	mov    rdi,QWORD PTR [rip+0x70764]        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    e864:	call   a870 <fflush_unlocked@plt>
    e869:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e86e:	xchg   ax,ax
    e870:	lea    rdi,[rip+0x54881]        # 630f8 <_obstack_memory_used@@Base+0x16478>
    e877:	lea    rsi,[rip+0x5820a]        # 66a88 <_obstack_memory_used@@Base+0x19e08>
    e87e:	call   a6d0 <fopen@plt>
    e883:	mov    QWORD PTR [rip+0x7073e],rax        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    e88a:	mov    rdi,rax
    e88d:	test   rax,rax
    e890:	je     e698 <__sprintf_chk@plt+0x3ce8>
    e896:	jmp    e760 <__sprintf_chk@plt+0x3db0>
    e89b:	nop    DWORD PTR [rax+rax*1+0x0]
    e8a0:	lea    rdi,[rip+0x54851]        # 630f8 <_obstack_memory_used@@Base+0x16478>
    e8a7:	lea    rsi,[rip+0x581da]        # 66a88 <_obstack_memory_used@@Base+0x19e08>
    e8ae:	call   a6d0 <fopen@plt>
    e8b3:	mov    QWORD PTR [rip+0x7070e],rax        # 7efc8 <obstack_alloc_failed_handler@@Base+0x190>
    e8ba:	mov    rdi,rax
    e8bd:	test   rax,rax
    e8c0:	je     e698 <__sprintf_chk@plt+0x3ce8>
    e8c6:	jmp    e844 <__sprintf_chk@plt+0x3e94>
    e8cb:	nop    DWORD PTR [rax+rax*1+0x0]
    e8d0:	mov    esi,0x2e
    e8d5:	call   a120 <__overflow@plt>
    e8da:	jmp    e7a0 <__sprintf_chk@plt+0x3df0>
    e8df:	mov    esi,0xa
    e8e4:	call   a120 <__overflow@plt>
    e8e9:	jmp    e698 <__sprintf_chk@plt+0x3ce8>
    e8ee:	mov    esi,0x7
    e8f3:	call   a120 <__overflow@plt>
    e8f8:	jmp    e85d <__sprintf_chk@plt+0x3ead>
    e8fd:	call   281c0 <__sprintf_chk@plt+0x1d810>
    e902:	call   a0a0 <__stack_chk_fail@plt>
    e907:	mov    edx,0x1
    e90c:	lea    rsi,[rip+0x547f6]        # 63109 <_obstack_memory_used@@Base+0x16489>
    e913:	lea    rbp,[rsp+0x20]
    e918:	lea    rdi,[rip+0x547ef]        # 6310e <_obstack_memory_used@@Base+0x1648e>
    e91f:	call   9f80 <setenv@plt>
    e924:	mov    edx,0x1
    e929:	mov    rsi,r13
    e92c:	lea    rdi,[rip+0x547e7]        # 6311a <_obstack_memory_used@@Base+0x1649a>
    e933:	call   9f80 <setenv@plt>
    e938:	movsxd rdi,DWORD PTR [rsp+0xc]
    e93d:	mov    rsi,rbp
    e940:	call   49530 <argp_usage@@Base+0x61b0>
    e945:	mov    edx,0x1
    e94a:	lea    rdi,[rip+0x547d5]        # 63126 <_obstack_memory_used@@Base+0x164a6>
    e951:	mov    rsi,rax
    e954:	call   9f80 <setenv@plt>
    e959:	movsxd rdi,DWORD PTR [rip+0x70bd0]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    e960:	mov    rsi,rbp
    e963:	call   49530 <argp_usage@@Base+0x61b0>
    e968:	mov    edx,0x1
    e96d:	lea    rdi,[rip+0x547c1]        # 63135 <_obstack_memory_used@@Base+0x164b5>
    e974:	mov    rsi,rax
    e977:	call   9f80 <setenv@plt>
    e97c:	mov    edi,DWORD PTR [rip+0x70bf6]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
    e982:	call   340e0 <__sprintf_chk@plt+0x29730>
    e987:	mov    edx,0x1
    e98c:	lea    rdi,[rip+0x547b6]        # 63149 <_obstack_memory_used@@Base+0x164c9>
    e993:	mov    rsi,rax
    e996:	call   9f80 <setenv@plt>
    e99b:	mov    edx,DWORD PTR [rip+0x70907]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
    e9a1:	test   edx,edx
    e9a3:	jne    e9ab <__sprintf_chk@plt+0x3ffb>
    e9a5:	mov    edx,DWORD PTR [rip+0x708f9]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    e9ab:	lea    rsi,[rip+0x588df]        # 67291 <_obstack_memory_used@@Base+0x1a611>
    e9b2:	lea    rax,[rip+0x6b747]        # 7a100 <_obstack_memory_used@@Base+0x2d480>
    e9b9:	jmp    e9c8 <__sprintf_chk@plt+0x4018>
    e9bb:	mov    rsi,QWORD PTR [rax+0x10]
    e9bf:	add    rax,0x10
    e9c3:	test   rsi,rsi
    e9c6:	je     e9e7 <__sprintf_chk@plt+0x4037>
    e9c8:	cmp    edx,DWORD PTR [rax+0x8]
    e9cb:	jne    e9bb <__sprintf_chk@plt+0x400b>
    e9cd:	lea    rdi,[rip+0x54784]        # 63158 <_obstack_memory_used@@Base+0x164d8>
    e9d4:	mov    edx,0x1
    e9d9:	call   9f80 <setenv@plt>
    e9de:	mov    rdi,QWORD PTR [rsp]
    e9e2:	call   336c0 <__sprintf_chk@plt+0x28d10>
    e9e7:	lea    rsi,[rip+0x54701]        # 630ef <_obstack_memory_used@@Base+0x1646f>
    e9ee:	jmp    e9cd <__sprintf_chk@plt+0x401d>
    e9f0:	mov    ecx,DWORD PTR [rip+0x70b26]        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
    e9f6:	push   r14
    e9f8:	push   r13
    e9fa:	push   r12
    e9fc:	push   rbp
    e9fd:	push   rbx
    e9fe:	test   ecx,ecx
    ea00:	je     ea1d <__sprintf_chk@plt+0x406d>
    ea02:	mov    eax,DWORD PTR [rip+0x70ca4]        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    ea08:	xor    edx,edx
    ea0a:	add    eax,0x1
    ea0d:	mov    DWORD PTR [rip+0x70c99],eax        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    ea13:	div    ecx
    ea15:	test   edx,edx
    ea17:	je     ead0 <__sprintf_chk@plt+0x4120>
    ea1d:	movsd  xmm0,QWORD PTR [rip+0x70b03]        # 7f528 <obstack_alloc_failed_handler@@Base+0x6f0>
    ea25:	ucomisd xmm0,QWORD PTR [rip+0x556f3]        # 64120 <_obstack_memory_used@@Base+0x174a0>
    ea2d:	jp     ea98 <__sprintf_chk@plt+0x40e8>
    ea2f:	jne    ea98 <__sprintf_chk@plt+0x40e8>
    ea31:	cmp    BYTE PTR [rip+0x70ae8],0x0        # 7f520 <obstack_alloc_failed_handler@@Base+0x6e8>
    ea38:	mov    r12,QWORD PTR [rip+0x70b11]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ea3f:	je     eac0 <__sprintf_chk@plt+0x4110>
    ea41:	test   r12,r12
    ea44:	je     ea85 <__sprintf_chk@plt+0x40d5>
    ea46:	cmp    BYTE PTR [rip+0x70b63],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    ea4d:	je     ea85 <__sprintf_chk@plt+0x40d5>
    ea4f:	mov    r14,QWORD PTR [rip+0x70b52]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
    ea56:	mov    eax,DWORD PTR [rip+0x70c54]        # 7f6b0 <obstack_alloc_failed_handler@@Base+0x878>
    ea5c:	mov    rdx,r14
    ea5f:	test   eax,eax
    ea61:	jne    ea85 <__sprintf_chk@plt+0x40d5>
    ea63:	jmp    ea80 <__sprintf_chk@plt+0x40d0>
    ea65:	nop    DWORD PTR [rax]
    ea68:	mov    rbx,QWORD PTR [rdx]
    ea6b:	test   rbx,rbx
    ea6e:	je     eae0 <__sprintf_chk@plt+0x4130>
    ea70:	mov    rax,QWORD PTR [rbx+0x8]
    ea74:	shl    rax,0x9
    ea78:	cmp    r12,rax
    ea7b:	jb     eae0 <__sprintf_chk@plt+0x4130>
    ea7d:	mov    rdx,rbx
    ea80:	test   rdx,rdx
    ea83:	jne    ea68 <__sprintf_chk@plt+0x40b8>
    ea85:	pop    rbx
    ea86:	mov    rax,r12
    ea89:	pop    rbp
    ea8a:	pop    r12
    ea8c:	pop    r13
    ea8e:	pop    r14
    ea90:	ret    
    ea91:	nop    DWORD PTR [rax+0x0]
    ea98:	movsd  xmm1,QWORD PTR [rip+0x70c48]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
    eaa0:	comisd xmm1,xmm0
    eaa4:	jb     ea31 <__sprintf_chk@plt+0x4081>
    eaa6:	call   9e40 <__errno_location@plt>
    eaab:	xor    r12d,r12d
    eaae:	mov    DWORD PTR [rax],0x1c
    eab4:	mov    rax,r12
    eab7:	pop    rbx
    eab8:	pop    rbp
    eab9:	pop    r12
    eabb:	pop    r13
    eabd:	pop    r14
    eabf:	ret    
    eac0:	call   33790 <__sprintf_chk@plt+0x28de0>
    eac5:	mov    r12,rax
    eac8:	jmp    ea41 <__sprintf_chk@plt+0x4091>
    eacd:	nop    DWORD PTR [rax]
    ead0:	mov    edi,0x1
    ead5:	call   e610 <__sprintf_chk@plt+0x3c60>
    eada:	jmp    ea1d <__sprintf_chk@plt+0x406d>
    eadf:	nop
    eae0:	mov    rsi,QWORD PTR [rdx+0x8]
    eae4:	mov    rcx,r12
    eae7:	mov    rax,rsi
    eaea:	shl    rax,0x9
    eaee:	sub    rcx,rax
    eaf1:	mov    rax,QWORD PTR [rdx+0x20]
    eaf5:	mov    r13,rcx
    eaf8:	shr    r13,0x9
    eafc:	add    r13,QWORD PTR [rdx+0x28]
    eb00:	cmp    rax,rcx
    eb03:	cmovbe rcx,rax
    eb07:	mov    QWORD PTR [rdx+0x28],r13
    eb0b:	add    r13,rsi
    eb0e:	sub    rax,rcx
    eb11:	test   rax,rax
    eb14:	mov    QWORD PTR [rdx+0x20],rax
    eb18:	cmovne rbx,rdx
    eb1c:	cmovne r13,rsi
    eb20:	cmp    rbx,r14
    eb23:	je     eb51 <__sprintf_chk@plt+0x41a1>
    eb25:	test   r14,r14
    eb28:	je     eb51 <__sprintf_chk@plt+0x41a1>
    eb2a:	nop    WORD PTR [rax+rax*1+0x0]
    eb30:	mov    rbp,r14
    eb33:	mov    r14,QWORD PTR [r14]
    eb36:	mov    rdi,QWORD PTR [rbp+0x10]
    eb3a:	call   9ce0 <free@plt>
    eb3f:	mov    rdi,rbp
    eb42:	call   9ce0 <free@plt>
    eb47:	test   r14,r14
    eb4a:	je     eb51 <__sprintf_chk@plt+0x41a1>
    eb4c:	cmp    rbx,r14
    eb4f:	jne    eb30 <__sprintf_chk@plt+0x4180>
    eb51:	mov    QWORD PTR [rip+0x70a50],r14        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
    eb58:	test   r14,r14
    eb5b:	je     eb90 <__sprintf_chk@plt+0x41e0>
    eb5d:	test   rbx,rbx
    eb60:	je     ea85 <__sprintf_chk@plt+0x40d5>
    eb66:	cs nop WORD PTR [rax+rax*1+0x0]
    eb70:	sub    QWORD PTR [rbx+0x8],r13
    eb74:	mov    QWORD PTR [rbx+0x28],0x0
    eb7c:	mov    rbx,QWORD PTR [rbx]
    eb7f:	test   rbx,rbx
    eb82:	jne    eb70 <__sprintf_chk@plt+0x41c0>
    eb84:	jmp    ea85 <__sprintf_chk@plt+0x40d5>
    eb89:	nop    DWORD PTR [rax+0x0]
    eb90:	mov    QWORD PTR [rip+0x70a05],0x0        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
    eb9b:	jmp    eb5d <__sprintf_chk@plt+0x41ad>
    eb9d:	nop    DWORD PTR [rax]
    eba0:	endbr64 
    eba4:	mov    rax,QWORD PTR [rip+0x6d43d]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
    ebab:	mov    ecx,0xa
    ebb0:	mov    edx,0xa
    ebb5:	lea    rsi,[rip+0x6b5b4]        # 7a170 <_obstack_memory_used@@Base+0x2d4f0>
    ebbc:	mov    rdi,QWORD PTR [rax]
    ebbf:	jmp    dc90 <__sprintf_chk@plt+0x32e0>
    ebc4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ebcf:	nop
    ebd0:	cmp    BYTE PTR [rip+0x70941],0x0        # 7f518 <obstack_alloc_failed_handler@@Base+0x6e0>
    ebd7:	push   r12
    ebd9:	push   rbp
    ebda:	mov    rbp,rdi
    ebdd:	push   rbx
    ebde:	jne    ec4d <__sprintf_chk@plt+0x429d>
    ebe0:	mov    rax,QWORD PTR [rip+0x70929]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    ebe7:	mov    rdx,QWORD PTR [rip+0x70962]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ebee:	mov    rsi,rbp
    ebf1:	mov    rdi,QWORD PTR [rax]
    ebf4:	call   3c5c0 <__sprintf_chk@plt+0x31c10>
    ebf9:	mov    edi,DWORD PTR [rip+0x70961]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    ebff:	cmp    edi,0x3fffffff
    ec05:	jle    ec2c <__sprintf_chk@plt+0x427c>
    ec07:	sub    edi,0x40000000
    ec0d:	call   3caf0 <__sprintf_chk@plt+0x32140>
    ec12:	test   eax,eax
    ec14:	jne    ec35 <__sprintf_chk@plt+0x4285>
    ec16:	mov    edi,DWORD PTR [rip+0x70a8c]        # 7f6a8 <obstack_alloc_failed_handler@@Base+0x870>
    ec1c:	test   edi,edi
    ec1e:	je     ec27 <__sprintf_chk@plt+0x4277>
    ec20:	xor    esi,esi
    ec22:	call   33de0 <__sprintf_chk@plt+0x29430>
    ec27:	call   190e0 <__sprintf_chk@plt+0xe730>
    ec2c:	call   a200 <close@plt>
    ec31:	test   eax,eax
    ec33:	je     ec16 <__sprintf_chk@plt+0x4266>
    ec35:	mov    rax,QWORD PTR [rip+0x708d4]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    ec3c:	lea    rdi,[rip+0x57e19]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
    ec43:	mov    rsi,QWORD PTR [rax]
    ec46:	call   3bad0 <__sprintf_chk@plt+0x31120>
    ec4b:	jmp    ec16 <__sprintf_chk@plt+0x4266>
    ec4d:	call   9e40 <__errno_location@plt>
    ec52:	mov    r12d,DWORD PTR [rax]
    ec55:	mov    rbx,rax
    ec58:	call   eba0 <__sprintf_chk@plt+0x41f0>
    ec5d:	mov    DWORD PTR [rbx],r12d
    ec60:	jmp    ebe0 <__sprintf_chk@plt+0x4230>
    ec65:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ec70:	endbr64 
    ec74:	sub    rsp,0x8
    ec78:	call   e9f0 <__sprintf_chk@plt+0x4040>
    ec7d:	cmp    QWORD PTR [rip+0x708cc],rax        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ec84:	jne    ecac <__sprintf_chk@plt+0x42fc>
    ec86:	pxor   xmm0,xmm0
    ec8a:	add    QWORD PTR [rip+0x7043e],0x1        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
    ec92:	cvtsi2sd xmm0,rax
    ec97:	addsd  xmm0,QWORD PTR [rip+0x70a49]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
    ec9f:	movsd  QWORD PTR [rip+0x70a41],xmm0        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
    eca7:	add    rsp,0x8
    ecab:	ret    
    ecac:	mov    rdi,rax
    ecaf:	call   ebd0 <__sprintf_chk@plt+0x4220>
    ecb4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ecbf:	nop
    ecc0:	endbr64 
    ecc4:	mov    rax,QWORD PTR [rip+0x70875]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    eccb:	sub    rax,QWORD PTR [rip+0x708b6]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    ecd2:	sar    rax,0x9
    ecd6:	add    rax,QWORD PTR [rip+0x7085b]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
    ecdd:	ret    
    ecde:	xchg   ax,ax
    ece0:	endbr64 
    ece4:	mov    rax,QWORD PTR [rip+0x70855]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    eceb:	cmp    rdi,rax
    ecee:	jb     ed09 <__sprintf_chk@plt+0x4359>
    ecf0:	sub    rdi,rax
    ecf3:	and    rdi,0xfffffffffffffe00
    ecfa:	lea    rax,[rax+rdi*1+0x200]
    ed02:	mov    QWORD PTR [rip+0x70837],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    ed09:	cmp    QWORD PTR [rip+0x70870],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    ed10:	jb     a9cf <__sprintf_chk@plt+0x1f>
    ed16:	ret    
    ed17:	nop    WORD PTR [rax+rax*1+0x0]
    ed20:	endbr64 
    ed24:	sub    rsp,0x8
    ed28:	call   a200 <close@plt>
    ed2d:	test   eax,eax
    ed2f:	jne    ed40 <__sprintf_chk@plt+0x4390>
    ed31:	add    rsp,0x8
    ed35:	ret    
    ed36:	cs nop WORD PTR [rax+rax*1+0x0]
    ed40:	lea    rsi,[rip+0x5441c]        # 63163 <_obstack_memory_used@@Base+0x164e3>
    ed47:	xor    edi,edi
    ed49:	mov    edx,0x5
    ed4e:	call   a040 <dcgettext@plt>
    ed53:	lea    rdi,[rip+0x57d02]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
    ed5a:	add    rsp,0x8
    ed5e:	mov    rsi,rax
    ed61:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
    ed66:	cs nop WORD PTR [rax+rax*1+0x0]
    ed70:	endbr64 
    ed74:	sub    rsp,0x8
    ed78:	mov    rax,QWORD PTR [rip+0x70791]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    ed7f:	lea    rdi,[rip+0x54803]        # 63589 <_obstack_memory_used@@Base+0x16909>
    ed86:	mov    rsi,QWORD PTR [rax]
    ed89:	call   3bad0 <__sprintf_chk@plt+0x31120>
    ed8e:	cmp    QWORD PTR [rip+0x707a2],0x0        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
    ed96:	je     edb1 <__sprintf_chk@plt+0x4401>
    ed98:	mov    eax,DWORD PTR [rip+0x70766]        # 7f504 <obstack_alloc_failed_handler@@Base+0x6cc>
    ed9e:	lea    edx,[rax+0x1]
    eda1:	mov    DWORD PTR [rip+0x7075d],edx        # 7f504 <obstack_alloc_failed_handler@@Base+0x6cc>
    eda7:	cmp    eax,0xa
    edaa:	jg     ede5 <__sprintf_chk@plt+0x4435>
    edac:	add    rsp,0x8
    edb0:	ret    
    edb1:	mov    rax,QWORD PTR [rip+0x70750]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    edb8:	test   rax,rax
    edbb:	je     edbf <__sprintf_chk@plt+0x440f>
    edbd:	call   rax
    edbf:	mov    edx,0x5
    edc4:	lea    rsi,[rip+0x548b5]        # 63680 <_obstack_memory_used@@Base+0x16a00>
    edcb:	xor    edi,edi
    edcd:	call   a040 <dcgettext@plt>
    edd2:	xor    esi,esi
    edd4:	xor    edi,edi
    edd6:	mov    rdx,rax
    edd9:	xor    eax,eax
    eddb:	call   a640 <error@plt>
    ede0:	call   190e0 <__sprintf_chk@plt+0xe730>
    ede5:	mov    rax,QWORD PTR [rip+0x7071c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    edec:	test   rax,rax
    edef:	je     edf3 <__sprintf_chk@plt+0x4443>
    edf1:	call   rax
    edf3:	mov    edx,0x5
    edf8:	lea    rsi,[rip+0x5436b]        # 6316a <_obstack_memory_used@@Base+0x164ea>
    edff:	jmp    edcb <__sprintf_chk@plt+0x441b>
    ee01:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ee0c:	nop    DWORD PTR [rax+0x0]
    ee10:	push   r13
    ee12:	push   r12
    ee14:	push   rbp
    ee15:	push   rbx
    ee16:	mov    rbx,rdi
    ee19:	sub    rsp,0xa8
    ee20:	mov    r12,QWORD PTR [rip+0x70761]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    ee27:	mov    rbp,QWORD PTR [rip+0x70722]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ee2e:	mov    rax,QWORD PTR fs:0x28
    ee37:	mov    QWORD PTR [rsp+0x98],rax
    ee3f:	xor    eax,eax
    ee41:	add    r12,rdi
    ee44:	sub    rbp,rdi
    ee47:	je     eec8 <__sprintf_chk@plt+0x4518>
    ee49:	test   ebp,0x1ff
    ee4f:	je     ef2d <__sprintf_chk@plt+0x457d>
    ee55:	nop    DWORD PTR [rax]
    ee58:	test   rbx,rbx
    ee5b:	jne    ef0f <__sprintf_chk@plt+0x455f>
    ee61:	mov    rax,QWORD PTR [rip+0x706e8]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    ee68:	add    QWORD PTR [rip+0x706e8],0x1        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    ee70:	sub    rax,rbp
    ee73:	and    rax,0xfffffffffffffe00
    ee79:	add    rax,QWORD PTR [rip+0x70708]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    ee80:	mov    QWORD PTR [rip+0x706f9],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    ee87:	mov    rax,QWORD PTR [rsp+0x98]
    ee8f:	sub    rax,QWORD PTR fs:0x28
    ee98:	jne    f040 <__sprintf_chk@plt+0x4690>
    ee9e:	add    rsp,0xa8
    eea5:	pop    rbx
    eea6:	pop    rbp
    eea7:	pop    r12
    eea9:	pop    r13
    eeab:	ret    
    eeac:	nop    DWORD PTR [rax+0x0]
    eeb0:	test   rbx,rbx
    eeb3:	je     ee61 <__sprintf_chk@plt+0x44b1>
    eeb5:	cmp    BYTE PTR [rip+0x7083c],0x0        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
    eebc:	je     efc3 <__sprintf_chk@plt+0x4613>
    eec2:	sub    rbp,rbx
    eec5:	add    r12,rbx
    eec8:	test   ebp,0x1ff
    eece:	jne    ee58 <__sprintf_chk@plt+0x44a8>
    eed0:	test   rbp,rbp
    eed3:	je     ee61 <__sprintf_chk@plt+0x44b1>
    eed5:	test   rbx,rbx
    eed8:	je     ee61 <__sprintf_chk@plt+0x44b1>
    eeda:	cmp    BYTE PTR [rip+0x70817],0x0        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
    eee1:	jne    ef0f <__sprintf_chk@plt+0x455f>
    eee3:	jmp    ee61 <__sprintf_chk@plt+0x44b1>
    eee8:	nop    DWORD PTR [rax+rax*1+0x0]
    eef0:	sub    edi,0x40000000
    eef6:	mov    rdx,rbp
    eef9:	mov    rsi,r12
    eefc:	call   3cc00 <__sprintf_chk@plt+0x32250>
    ef01:	mov    rbx,rax
    ef04:	cmp    rbx,0xffffffffffffffff
    ef08:	jne    eeb0 <__sprintf_chk@plt+0x4500>
    ef0a:	call   ed70 <__sprintf_chk@plt+0x43c0>
    ef0f:	mov    edi,DWORD PTR [rip+0x7064b]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    ef15:	cmp    edi,0x3fffffff
    ef1b:	jg     eef0 <__sprintf_chk@plt+0x4540>
    ef1d:	mov    rdx,rbp
    ef20:	mov    rsi,r12
    ef23:	call   4b7c0 <argp_usage@@Base+0x8440>
    ef28:	mov    rbx,rax
    ef2b:	jmp    ef04 <__sprintf_chk@plt+0x4554>
    ef2d:	mov    r13d,DWORD PTR [rip+0x6d148]        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
    ef34:	test   r13d,0x400000
    ef3b:	je     eec8 <__sprintf_chk@plt+0x4518>
    ef3d:	cmp    QWORD PTR [rip+0x705f3],0x0        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
    ef45:	jne    eec8 <__sprintf_chk@plt+0x4518>
    ef47:	test   rdi,rdi
    ef4a:	je     eec8 <__sprintf_chk@plt+0x4518>
    ef50:	mov    edi,DWORD PTR [rip+0x7060a]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    ef56:	mov    rsi,rsp
    ef59:	call   a920 <fstat@plt>
    ef5e:	test   eax,eax
    ef60:	jne    f00f <__sprintf_chk@plt+0x465f>
    ef66:	mov    eax,DWORD PTR [rsp+0x18]
    ef6a:	and    eax,0xb000
    ef6f:	cmp    eax,0x2000
    ef74:	jne    eec8 <__sprintf_chk@plt+0x4518>
    ef7a:	mov    rax,QWORD PTR [rip+0x70587]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    ef81:	mov    r13,rbx
    ef84:	shr    r13,0x9
    ef88:	test   rax,rax
    ef8b:	je     ef8f <__sprintf_chk@plt+0x45df>
    ef8d:	call   rax
    ef8f:	mov    rcx,r13
    ef92:	xor    edi,edi
    ef94:	mov    r8d,0x5
    ef9a:	lea    rdx,[rip+0x541e3]        # 63184 <_obstack_memory_used@@Base+0x16504>
    efa1:	lea    rsi,[rip+0x541f5]        # 6319d <_obstack_memory_used@@Base+0x1651d>
    efa8:	call   a6e0 <dcngettext@plt>
    efad:	mov    rcx,r13
    efb0:	xor    esi,esi
    efb2:	xor    edi,edi
    efb4:	mov    rdx,rax
    efb7:	xor    eax,eax
    efb9:	call   a640 <error@plt>
    efbe:	jmp    eec8 <__sprintf_chk@plt+0x4518>
    efc3:	mov    r12,QWORD PTR [rip+0x70586]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    efca:	mov    rax,QWORD PTR [rip+0x70537]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    efd1:	sub    r12,rbp
    efd4:	test   rax,rax
    efd7:	je     efdb <__sprintf_chk@plt+0x462b>
    efd9:	call   rax
    efdb:	mov    r8d,0x5
    efe1:	mov    rcx,r12
    efe4:	lea    rdx,[rip+0x546bd]        # 636a8 <_obstack_memory_used@@Base+0x16a28>
    efeb:	xor    edi,edi
    efed:	lea    rsi,[rip+0x546dc]        # 636d0 <_obstack_memory_used@@Base+0x16a50>
    eff4:	call   a6e0 <dcngettext@plt>
    eff9:	mov    rcx,r12
    effc:	xor    esi,esi
    effe:	xor    edi,edi
    f000:	mov    rdx,rax
    f003:	xor    eax,eax
    f005:	call   a640 <error@plt>
    f00a:	call   190e0 <__sprintf_chk@plt+0xe730>
    f00f:	mov    rax,QWORD PTR [rip+0x704fa]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
    f016:	cmp    BYTE PTR [rip+0x704e3],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
    f01d:	mov    rsi,QWORD PTR [rax]
    f020:	je     f045 <__sprintf_chk@plt+0x4695>
    f022:	and    r13d,0x800000
    f029:	je     eec8 <__sprintf_chk@plt+0x4518>
    f02f:	lea    rdi,[rip+0x5400d]        # 63043 <_obstack_memory_used@@Base+0x163c3>
    f036:	call   3c100 <__sprintf_chk@plt+0x31750>
    f03b:	jmp    eec8 <__sprintf_chk@plt+0x4518>
    f040:	call   a0a0 <__stack_chk_fail@plt>
    f045:	lea    rdi,[rip+0x53ff7]        # 63043 <_obstack_memory_used@@Base+0x163c3>
    f04c:	call   3bad0 <__sprintf_chk@plt+0x31120>
    f051:	jmp    eec8 <__sprintf_chk@plt+0x4518>
    f056:	cs nop WORD PTR [rax+rax*1+0x0]
    f060:	endbr64 
    f064:	sub    rsp,0x8
    f068:	mov    ecx,DWORD PTR [rip+0x704ae]        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
    f06e:	test   ecx,ecx
    f070:	je     f08d <__sprintf_chk@plt+0x46dd>
    f072:	mov    eax,DWORD PTR [rip+0x70634]        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    f078:	xor    edx,edx
    f07a:	add    eax,0x1
    f07d:	mov    DWORD PTR [rip+0x70629],eax        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
    f083:	div    ecx
    f085:	test   edx,edx
    f087:	je     f140 <__sprintf_chk@plt+0x4790>
    f08d:	cmp    BYTE PTR [rip+0x70044],0x0        # 7f0d8 <obstack_alloc_failed_handler@@Base+0x2a0>
    f094:	mov    DWORD PTR [rip+0x70466],0x0        # 7f504 <obstack_alloc_failed_handler@@Base+0x6cc>
    f09e:	je     f0aa <__sprintf_chk@plt+0x46fa>
    f0a0:	cmp    QWORD PTR [rip+0x70490],0x0        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
    f0a8:	jne    f110 <__sprintf_chk@plt+0x4760>
    f0aa:	mov    edi,DWORD PTR [rip+0x704b0]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f0b0:	mov    rdx,QWORD PTR [rip+0x70499]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    f0b7:	mov    rsi,QWORD PTR [rip+0x704ca]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f0be:	cmp    edi,0x3fffffff
    f0c4:	jle    f0f0 <__sprintf_chk@plt+0x4740>
    f0c6:	sub    edi,0x40000000
    f0cc:	call   3cc00 <__sprintf_chk@plt+0x32250>
    f0d1:	mov    rdi,rax
    f0d4:	cmp    QWORD PTR [rip+0x70475],rdi        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    f0db:	je     f150 <__sprintf_chk@plt+0x47a0>
    f0dd:	cmp    rdi,0xffffffffffffffff
    f0e1:	je     f100 <__sprintf_chk@plt+0x4750>
    f0e3:	add    rsp,0x8
    f0e7:	jmp    ee10 <__sprintf_chk@plt+0x4460>
    f0ec:	nop    DWORD PTR [rax+0x0]
    f0f0:	call   4b7c0 <argp_usage@@Base+0x8440>
    f0f5:	mov    rdi,rax
    f0f8:	jmp    f0d4 <__sprintf_chk@plt+0x4724>
    f0fa:	nop    WORD PTR [rax+rax*1+0x0]
    f100:	call   ed70 <__sprintf_chk@plt+0x43c0>
    f105:	jmp    f0aa <__sprintf_chk@plt+0x46fa>
    f107:	nop    WORD PTR [rax+rax*1+0x0]
    f110:	mov    DWORD PTR [rip+0x70446],0x1        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f11a:	call   33790 <__sprintf_chk@plt+0x28de0>
    f11f:	cmp    QWORD PTR [rip+0x7042a],rax        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
    f126:	mov    DWORD PTR [rip+0x70430],0x0        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f130:	mov    rdx,rax
    f133:	jne    f15d <__sprintf_chk@plt+0x47ad>
    f135:	xor    edi,edi
    f137:	jmp    f0b7 <__sprintf_chk@plt+0x4707>
    f13c:	nop    DWORD PTR [rax+0x0]
    f140:	xor    edi,edi
    f142:	call   e610 <__sprintf_chk@plt+0x3c60>
    f147:	jmp    f08d <__sprintf_chk@plt+0x46dd>
    f14c:	nop    DWORD PTR [rax+0x0]
    f150:	add    QWORD PTR [rip+0x70400],0x1        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
    f158:	add    rsp,0x8
    f15c:	ret    
    f15d:	mov    rdi,rax
    f160:	call   ebd0 <__sprintf_chk@plt+0x4220>
    f165:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f170:	endbr64 
    f174:	push   r12
    f176:	push   rbp
    f177:	push   rbx
    f178:	sub    rsp,0x10
    f17c:	mov    rax,QWORD PTR fs:0x28
    f185:	mov    QWORD PTR [rsp+0x8],rax
    f18a:	mov    eax,DWORD PTR [rip+0x7036c]        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
    f190:	test   eax,eax
    f192:	jne    f200 <__sprintf_chk@plt+0x4850>
    f194:	cmp    BYTE PTR [rip+0x7035d],0x0        # 7f4f8 <obstack_alloc_failed_handler@@Base+0x6c0>
    f19b:	jne    f2a0 <__sprintf_chk@plt+0x48f0>
    f1a1:	mov    rax,QWORD PTR [rip+0x703e0]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f1a8:	mov    rdx,QWORD PTR [rip+0x703d1]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f1af:	sub    rdx,rax
    f1b2:	mov    QWORD PTR [rip+0x70387],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f1b9:	sar    rdx,0x9
    f1bd:	add    QWORD PTR [rip+0x70374],rdx        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
    f1c4:	movsxd rdx,DWORD PTR [rip+0x70365]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    f1cb:	shl    rdx,0x9
    f1cf:	add    rax,rdx
    f1d2:	mov    QWORD PTR [rip+0x703a7],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f1d9:	mov    rax,QWORD PTR [rsp+0x8]
    f1de:	sub    rax,QWORD PTR fs:0x28
    f1e7:	jne    f4c4 <__sprintf_chk@plt+0x4b14>
    f1ed:	add    rsp,0x10
    f1f1:	pop    rbx
    f1f2:	pop    rbp
    f1f3:	pop    r12
    f1f5:	jmp    QWORD PTR [rip+0x702f5]        # 7f4f0 <obstack_alloc_failed_handler@@Base+0x6b8>
    f1fb:	nop    DWORD PTR [rax+rax*1+0x0]
    f200:	mov    r8,QWORD PTR [rip+0x70381]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f207:	mov    rcx,QWORD PTR [rip+0x70372]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f20e:	movsxd rdx,DWORD PTR [rip+0x7031b]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    f215:	sub    rcx,r8
    f218:	sar    rcx,0x9
    f21c:	shl    rdx,0x9
    f220:	mov    rdi,QWORD PTR [rip+0x70319]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f227:	add    QWORD PTR [rip+0x7030a],rcx        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
    f22e:	add    rdx,r8
    f231:	mov    QWORD PTR [rip+0x70308],r8        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f238:	mov    QWORD PTR [rip+0x70341],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f23f:	cmp    eax,0x1
    f242:	jne    f270 <__sprintf_chk@plt+0x48c0>
    f244:	mov    rax,QWORD PTR [rsp+0x8]
    f249:	sub    rax,QWORD PTR fs:0x28
    f252:	jne    f4c4 <__sprintf_chk@plt+0x4b14>
    f258:	add    rsp,0x10
    f25c:	sub    rdi,r8
    f25f:	pop    rbx
    f260:	pop    rbp
    f261:	pop    r12
    f263:	jmp    QWORD PTR [rip+0x7027f]        # 7f4e8 <obstack_alloc_failed_handler@@Base+0x6b0>
    f269:	nop    DWORD PTR [rax+0x0]
    f270:	cmp    eax,0x2
    f273:	je     a9d5 <__sprintf_chk@plt+0x25>
    f279:	test   eax,eax
    f27b:	je     f1d9 <__sprintf_chk@plt+0x4829>
    f281:	mov    rax,QWORD PTR [rsp+0x8]
    f286:	sub    rax,QWORD PTR fs:0x28
    f28f:	jne    f4c4 <__sprintf_chk@plt+0x4b14>
    f295:	add    rsp,0x10
    f299:	pop    rbx
    f29a:	pop    rbp
    f29b:	pop    r12
    f29d:	ret    
    f29e:	xchg   ax,ax
    f2a0:	mov    edi,DWORD PTR [rip+0x702ba]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f2a6:	mov    eax,0x4
    f2ab:	mov    r12,rsp
    f2ae:	mov    DWORD PTR [rip+0x70244],0x1        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
    f2b8:	mov    BYTE PTR [rip+0x70239],0x0        # 7f4f8 <obstack_alloc_failed_handler@@Base+0x6c0>
    f2bf:	mov    WORD PTR [rsp],ax
    f2c3:	mov    DWORD PTR [rsp+0x4],0x1
    f2cb:	cmp    edi,0x3fffffff
    f2d1:	jle    f3f0 <__sprintf_chk@plt+0x4a40>
    f2d7:	sub    edi,0x40000000
    f2dd:	mov    rsi,r12
    f2e0:	call   5d2c0 <_obstack_memory_used@@Base+0x10640>
    f2e5:	test   eax,eax
    f2e7:	jns    f3b2 <__sprintf_chk@plt+0x4a02>
    f2ed:	call   9e40 <__errno_location@plt>
    f2f2:	mov    ebp,DWORD PTR [rip+0x70268]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f2f8:	cmp    DWORD PTR [rax],0x5
    f2fb:	je     f468 <__sprintf_chk@plt+0x4ab8>
    f301:	cmp    ebp,0x3fffffff
    f307:	jle    f425 <__sprintf_chk@plt+0x4a75>
    f30d:	lea    edi,[rbp-0x40000000]
    f313:	mov    edx,0x1
    f318:	xor    esi,esi
    f31a:	call   3cd60 <__sprintf_chk@plt+0x323b0>
    f31f:	mov    rdx,QWORD PTR [rip+0x7025a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f326:	sub    rdx,QWORD PTR [rip+0x7025b]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f32d:	sub    rax,rdx
    f330:	mov    ebp,DWORD PTR [rip+0x7022a]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f336:	mov    rbx,rax
    f339:	mov    eax,0x0
    f33e:	cmovs  rbx,rax
    f342:	cmp    ebp,0x3fffffff
    f348:	jle    f450 <__sprintf_chk@plt+0x4aa0>
    f34e:	lea    edi,[rbp-0x40000000]
    f354:	xor    edx,edx
    f356:	mov    rsi,rbx
    f359:	call   3cd60 <__sprintf_chk@plt+0x323b0>
    f35e:	cmp    rax,rbx
    f361:	je     f3b2 <__sprintf_chk@plt+0x4a02>
    f363:	mov    rax,QWORD PTR [rip+0x7019e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    f36a:	test   rax,rax
    f36d:	je     f371 <__sprintf_chk@plt+0x49c1>
    f36f:	call   rax
    f371:	mov    edx,0x5
    f376:	lea    rsi,[rip+0x5437b]        # 636f8 <_obstack_memory_used@@Base+0x16a78>
    f37d:	xor    edi,edi
    f37f:	call   a040 <dcgettext@plt>
    f384:	xor    esi,esi
    f386:	xor    edi,edi
    f388:	mov    rdx,rax
    f38b:	xor    eax,eax
    f38d:	call   a640 <error@plt>
    f392:	mov    r8,QWORD PTR [rip+0x701ef]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f399:	mov    rdx,QWORD PTR [rip+0x70140]        # 7f4e0 <obstack_alloc_failed_handler@@Base+0x6a8>
    f3a0:	cmp    r8,rdx
    f3a3:	je     f3b9 <__sprintf_chk@plt+0x4a09>
    f3a5:	sub    rdx,r8
    f3a8:	xor    esi,esi
    f3aa:	mov    rdi,r8
    f3ad:	call   a1b0 <memset@plt>
    f3b2:	mov    r8,QWORD PTR [rip+0x701cf]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f3b9:	mov    rdi,QWORD PTR [rip+0x701c0]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f3c0:	movsxd rdx,DWORD PTR [rip+0x70169]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    f3c7:	mov    rax,rdi
    f3ca:	sub    rax,r8
    f3cd:	sar    rax,0x9
    f3d1:	mov    rcx,rax
    f3d4:	cmp    rax,rdx
    f3d7:	jl     f498 <__sprintf_chk@plt+0x4ae8>
    f3dd:	mov    eax,DWORD PTR [rip+0x70119]        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
    f3e3:	jmp    f21c <__sprintf_chk@plt+0x486c>
    f3e8:	nop    DWORD PTR [rax+rax*1+0x0]
    f3f0:	xor    eax,eax
    f3f2:	mov    rdx,r12
    f3f5:	mov    esi,0x40086d01
    f3fa:	call   a1d0 <ioctl@plt>
    f3ff:	test   eax,eax
    f401:	js     f2ed <__sprintf_chk@plt+0x493d>
    f407:	jmp    f3b2 <__sprintf_chk@plt+0x4a02>
    f409:	nop    DWORD PTR [rax+0x0]
    f410:	xor    eax,eax
    f412:	mov    rdx,r12
    f415:	mov    esi,0x40086d01
    f41a:	mov    edi,ebp
    f41c:	call   a1d0 <ioctl@plt>
    f421:	test   eax,eax
    f423:	jns    f3b2 <__sprintf_chk@plt+0x4a02>
    f425:	mov    edx,0x1
    f42a:	xor    esi,esi
    f42c:	mov    edi,ebp
    f42e:	call   a170 <lseek@plt>
    f433:	mov    rdx,QWORD PTR [rip+0x70146]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f43a:	sub    rdx,QWORD PTR [rip+0x70147]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f441:	sub    rax,rdx
    f444:	mov    rbx,rax
    f447:	mov    eax,0x0
    f44c:	cmovs  rbx,rax
    f450:	xor    edx,edx
    f452:	mov    rsi,rbx
    f455:	mov    edi,ebp
    f457:	call   a170 <lseek@plt>
    f45c:	jmp    f35e <__sprintf_chk@plt+0x49ae>
    f461:	nop    DWORD PTR [rax+0x0]
    f468:	cmp    ebp,0x3fffffff
    f46e:	jle    f410 <__sprintf_chk@plt+0x4a60>
    f470:	lea    edi,[rbp-0x40000000]
    f476:	mov    rsi,r12
    f479:	call   5d2c0 <_obstack_memory_used@@Base+0x10640>
    f47e:	mov    ebp,DWORD PTR [rip+0x700dc]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
    f484:	test   eax,eax
    f486:	js     f301 <__sprintf_chk@plt+0x4951>
    f48c:	jmp    f3b2 <__sprintf_chk@plt+0x4a02>
    f491:	nop    DWORD PTR [rax+0x0]
    f498:	sub    rdx,rax
    f49b:	xor    esi,esi
    f49d:	shl    rdx,0x9
    f4a1:	call   a1b0 <memset@plt>
    f4a6:	movsxd rax,DWORD PTR [rip+0x70083]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
    f4ad:	shl    rax,0x9
    f4b1:	add    rax,QWORD PTR [rip+0x700d0]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f4b8:	mov    QWORD PTR [rip+0x700c1],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f4bf:	jmp    f281 <__sprintf_chk@plt+0x48d1>
    f4c4:	call   a0a0 <__stack_chk_fail@plt>
    f4c9:	nop    DWORD PTR [rax+0x0]
    f4d0:	mov    rax,QWORD PTR [rip+0x70069]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f4d7:	cmp    rax,QWORD PTR [rip+0x700a2]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f4de:	je     f4e1 <__sprintf_chk@plt+0x4b31>
    f4e0:	ret    
    f4e1:	cmp    BYTE PTR [rip+0x7004c],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
    f4e8:	jne    f505 <__sprintf_chk@plt+0x4b55>
    f4ea:	push   rax
    f4eb:	call   f170 <__sprintf_chk@plt+0x47c0>
    f4f0:	mov    rax,QWORD PTR [rip+0x70049]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f4f7:	cmp    rax,QWORD PTR [rip+0x70082]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f4fe:	je     f508 <__sprintf_chk@plt+0x4b58>
    f500:	add    rsp,0x8
    f504:	ret    
    f505:	xor    eax,eax
    f507:	ret    
    f508:	mov    BYTE PTR [rip+0x70025],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
    f50f:	xor    eax,eax
    f511:	jmp    f500 <__sprintf_chk@plt+0x4b50>
    f513:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f51e:	xchg   ax,ax
    f520:	push   r12
    f522:	push   rbp
    f523:	push   rbx
    f524:	mov    rbx,rdi
    f527:	sub    rsp,0x10
    f52b:	movzx  ebp,BYTE PTR [rip+0x701c6]        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
    f532:	mov    rax,QWORD PTR fs:0x28
    f53b:	mov    QWORD PTR [rsp+0x8],rax
    f540:	xor    eax,eax
    f542:	test   rdi,rdi
    f545:	lea    rax,[rsp+0x7]
    f54a:	mov    BYTE PTR [rip+0x701a7],0x1        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
    f551:	cmove  rbx,rax
    f555:	mov    rax,QWORD PTR [rip+0x7002c]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f55c:	mov    QWORD PTR [rip+0x7001d],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f563:	call   f4d0 <__sprintf_chk@plt+0x4b20>
    f568:	mov    BYTE PTR [rip+0x70189],bpl        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
    f56f:	mov    rbp,QWORD PTR [rip+0x70012]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f576:	test   rax,rax
    f579:	sete   BYTE PTR [rbx]
    f57c:	cmp    rbp,QWORD PTR [rip+0x6fffd]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f583:	je     f5cb <__sprintf_chk@plt+0x4c1b>
    f585:	lea    r12,[rbp+0x101]
    f58c:	lea    rsi,[rip+0x57d58]        # 672eb <_obstack_memory_used@@Base+0x1a66b>
    f593:	mov    rdi,r12
    f596:	call   a320 <strcmp@plt>
    f59b:	test   eax,eax
    f59d:	je     f5b2 <__sprintf_chk@plt+0x4c02>
    f59f:	lea    rsi,[rip+0x53c12]        # 631b8 <_obstack_memory_used@@Base+0x16538>
    f5a6:	mov    rdi,r12
    f5a9:	call   a320 <strcmp@plt>
    f5ae:	test   eax,eax
    f5b0:	jne    f5cb <__sprintf_chk@plt+0x4c1b>
    f5b2:	mov    esi,0x1
    f5b7:	mov    rdi,rbp
    f5ba:	call   24000 <__sprintf_chk@plt+0x19650>
    f5bf:	cmp    eax,0x1
    f5c2:	je     f60f <__sprintf_chk@plt+0x4c5f>
    f5c4:	mov    rbp,QWORD PTR [rip+0x6ffbd]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    f5cb:	lea    rbx,[rip+0x6abfe]        # 7a1d0 <_obstack_memory_used@@Base+0x2d550>
    f5d2:	lea    rsi,[rip+0x53bdc]        # 631b5 <_obstack_memory_used@@Base+0x16535>
    f5d9:	mov    edx,0x2
    f5de:	lea    r12,[rbx+0xc0]
    f5e5:	jmp    f5f8 <__sprintf_chk@plt+0x4c48>
    f5e7:	nop    WORD PTR [rax+rax*1+0x0]
    f5f0:	mov    rdx,QWORD PTR [rbx+0x8]
    f5f4:	mov    rsi,QWORD PTR [rbx+0x10]
    f5f8:	mov    rdi,rbp
    f5fb:	call   a2c0 <memcmp@plt>
    f600:	test   eax,eax
    f602:	je     f628 <__sprintf_chk@plt+0x4c78>
    f604:	add    rbx,0x18
    f608:	cmp    rbx,r12
    f60b:	jne    f5f0 <__sprintf_chk@plt+0x4c40>
    f60d:	xor    eax,eax
    f60f:	mov    rdx,QWORD PTR [rsp+0x8]
    f614:	sub    rdx,QWORD PTR fs:0x28
    f61d:	jne    f62c <__sprintf_chk@plt+0x4c7c>
    f61f:	add    rsp,0x10
    f623:	pop    rbx
    f624:	pop    rbp
    f625:	pop    r12
    f627:	ret    
    f628:	mov    eax,DWORD PTR [rbx]
    f62a:	jmp    f60f <__sprintf_chk@plt+0x4c5f>
    f62c:	call   a0a0 <__stack_chk_fail@plt>
    f631:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f63c:	nop    DWORD PTR [rax+0x0]
    f640:	mov    r8,QWORD PTR [rip+0x6fef9]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f647:	cmp    r8,QWORD PTR [rip+0x6ff32]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f64e:	push   rbx
    f64f:	mov    rbx,rdi
    f652:	je     f6c0 <__sprintf_chk@plt+0x4d10>
    f654:	lea    rdi,[r8+0x8]
    f658:	mov    rcx,r8
    f65b:	xor    eax,eax
    f65d:	mov    QWORD PTR [r8],0x0
    f664:	mov    QWORD PTR [r8+0x1f8],0x0
    f66f:	and    rdi,0xfffffffffffffff8
    f673:	sub    rcx,rdi
    f676:	add    ecx,0x200
    f67c:	shr    ecx,0x3
    f67f:	rep stos QWORD PTR es:[rdi],rax
    f682:	mov    rcx,QWORD PTR [rbx+0x8]
    f686:	cs nop WORD PTR [rax+rax*1+0x0]
    f690:	movzx  edx,BYTE PTR [rcx+rax*1]
    f694:	mov    BYTE PTR [r8+rax*1],dl
    f698:	test   dl,dl
    f69a:	je     f6a6 <__sprintf_chk@plt+0x4cf6>
    f69c:	add    rax,0x1
    f6a0:	cmp    rax,0x64
    f6a4:	jne    f690 <__sprintf_chk@plt+0x4ce0>
    f6a6:	cmp    DWORD PTR [rip+0x6fbf7],0x2        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
    f6ad:	jne    f6b4 <__sprintf_chk@plt+0x4d04>
    f6af:	mov    BYTE PTR [r8+0x63],0x0
    f6b4:	mov    rax,r8
    f6b7:	pop    rbx
    f6b8:	ret    
    f6b9:	nop    DWORD PTR [rax+0x0]
    f6c0:	xor    r8d,r8d
    f6c3:	cmp    BYTE PTR [rip+0x6fe6a],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
    f6ca:	jne    f654 <__sprintf_chk@plt+0x4ca4>
    f6cc:	call   f170 <__sprintf_chk@plt+0x47c0>
    f6d1:	mov    r8,QWORD PTR [rip+0x6fe68]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    f6d8:	cmp    r8,QWORD PTR [rip+0x6fea1]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
    f6df:	jne    f654 <__sprintf_chk@plt+0x4ca4>
    f6e5:	mov    BYTE PTR [rip+0x6fe48],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
    f6ec:	xor    r8d,r8d
    f6ef:	jmp    f654 <__sprintf_chk@plt+0x4ca4>
    f6f4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f6ff:	nop
    f700:	endbr64 
    f704:	push   rbp
    f705:	mov    rdi,QWORD PTR [rip+0x6fbf4]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    f70c:	lea    rsi,[rip+0x57375]        # 66a88 <_obstack_memory_used@@Base+0x19e08>
    f713:	call   a6d0 <fopen@plt>
    f718:	test   rax,rax
    f71b:	je     f783 <__sprintf_chk@plt+0x4dd3>
    f71d:	mov    ecx,DWORD PTR [rip+0x6c955]        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
    f723:	mov    rbp,rax
    f726:	mov    rdi,rax
    f729:	lea    rdx,[rip+0x5c5ca]        # 6bcfa <_obstack_memory_used@@Base+0x1f07a>
    f730:	xor    eax,eax
    f732:	mov    esi,0x1
    f737:	call   a840 <__fprintf_chk@plt>
    f73c:	test   BYTE PTR [rbp+0x0],0x20
    f740:	jne    f750 <__sprintf_chk@plt+0x4da0>
    f742:	mov    rdi,rbp
    f745:	call   9ff0 <fclose@plt>
    f74a:	test   eax,eax
    f74c:	jne    f76f <__sprintf_chk@plt+0x4dbf>
    f74e:	pop    rbp
    f74f:	ret    
    f750:	mov    rsi,QWORD PTR [rip+0x6fba9]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    f757:	lea    rdi,[rip+0x57fd8]        # 67736 <_obstack_memory_used@@Base+0x1aab6>
    f75e:	call   3bad0 <__sprintf_chk@plt+0x31120>
    f763:	mov    rdi,rbp
    f766:	call   9ff0 <fclose@plt>
    f76b:	test   eax,eax
    f76d:	je     f74e <__sprintf_chk@plt+0x4d9e>
    f76f:	mov    rsi,QWORD PTR [rip+0x6fb8a]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    f776:	lea    rdi,[rip+0x572df]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
    f77d:	pop    rbp
    f77e:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
    f783:	mov    rsi,QWORD PTR [rip+0x6fb76]        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
    f78a:	lea    rdi,[rip+0x53a2f]        # 631c0 <_obstack_memory_used@@Base+0x16540>
    f791:	pop    rbp
    f792:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
    f797:	nop    WORD PTR [rax+rax*1+0x0]
    f7a0:	endbr64 
    f7a4:	push   rbp
    f7a5:	mov    rbp,rdi
    f7a8:	push   rbx
    f7a9:	sub    rsp,0x8
    f7ad:	call   a060 <strlen@plt>
    f7b2:	test   rax,rax
    f7b5:	je     f80e <__sprintf_chk@plt+0x4e5e>
    f7b7:	lea    rbx,[rbp+rax*1-0x1]
    f7bc:	cmp    rbp,rbx
    f7bf:	jae    f80e <__sprintf_chk@plt+0x4e5e>
    f7c1:	call   a980 <__ctype_b_loc@plt>
    f7c6:	mov    rdx,QWORD PTR [rax]
    f7c9:	jmp    f7d9 <__sprintf_chk@plt+0x4e29>
    f7cb:	nop    DWORD PTR [rax+rax*1+0x0]
    f7d0:	sub    rbx,0x1
    f7d4:	cmp    rbp,rbx
    f7d7:	je     f80e <__sprintf_chk@plt+0x4e5e>
    f7d9:	movzx  eax,BYTE PTR [rbx]
    f7dc:	test   BYTE PTR [rdx+rax*2+0x1],0x8
    f7e1:	jne    f7d0 <__sprintf_chk@plt+0x4e20>
    f7e3:	cmp    rbp,rbx
    f7e6:	jae    f80e <__sprintf_chk@plt+0x4e5e>
    f7e8:	lea    rax,[rbx-0x7]
    f7ec:	xor    r8d,r8d
    f7ef:	cmp    rax,rbp
    f7f2:	jbe    f804 <__sprintf_chk@plt+0x4e54>
    f7f4:	movabs rdx,0x20656d756c6f5620
    f7fe:	cmp    QWORD PTR [rbx-0x7],rdx
    f802:	je     f813 <__sprintf_chk@plt+0x4e63>
    f804:	add    rsp,0x8
    f808:	mov    rax,r8
    f80b:	pop    rbx
    f80c:	pop    rbp
    f80d:	ret    
    f80e:	xor    r8d,r8d
    f811:	jmp    f804 <__sprintf_chk@plt+0x4e54>
    f813:	sub    rax,rbp
    f816:	lea    rdi,[rax+0x1]
    f81a:	mov    rbx,rax
    f81d:	call   456a0 <argp_usage@@Base+0x2320>
    f822:	mov    rdx,rbx
    f825:	mov    rsi,rbp
    f828:	mov    rdi,rax
    f82b:	call   a420 <memcpy@plt>
    f830:	mov    BYTE PTR [rax+rbx*1],0x0
    f834:	mov    r8,rax
    f837:	jmp    f804 <__sprintf_chk@plt+0x4e54>
    f839:	nop    DWORD PTR [rax+0x0]
    f840:	push   r12
    f842:	push   rbp
    f843:	push   rbx
    f844:	sub    rsp,0x1c0
    f84b:	mov    rbp,QWORD PTR [rip+0x6fa9e]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    f852:	mov    rax,QWORD PTR fs:0x28
    f85b:	mov    QWORD PTR [rsp+0x1b8],rax
    f863:	xor    eax,eax
    f865:	test   rbp,rbp
    f868:	je     f952 <__sprintf_chk@plt+0x4fa2>
    f86e:	mov    rdi,QWORD PTR [rip+0x6fa23]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    f875:	xor    edx,edx
    f877:	mov    rsi,rbp
    f87a:	call   9cf0 <fnmatch@plt>
    f87f:	test   eax,eax
    f881:	je     f92f <__sprintf_chk@plt+0x4f7f>
    f887:	cmp    BYTE PTR [rip+0x6fd22],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
    f88e:	jne    f8fc <__sprintf_chk@plt+0x4f4c>
    f890:	mov    rax,QWORD PTR [rip+0x6fc71]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    f897:	test   rax,rax
    f89a:	je     f89e <__sprintf_chk@plt+0x4eee>
    f89c:	call   rax
    f89e:	lea    r12,[rip+0x6c79b]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
    f8a5:	mov    rsi,QWORD PTR [rip+0x6f9ec]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    f8ac:	mov    edi,0x1
    f8b1:	mov    rdx,r12
    f8b4:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
    f8b9:	mov    rsi,QWORD PTR [rip+0x6fa30]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    f8c0:	mov    rdx,r12
    f8c3:	xor    edi,edi
    f8c5:	mov    rbx,rax
    f8c8:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
    f8cd:	mov    edx,0x5
    f8d2:	lea    rsi,[rip+0x538f2]        # 631cb <_obstack_memory_used@@Base+0x1654b>
    f8d9:	xor    edi,edi
    f8db:	mov    r12,rax
    f8de:	call   a040 <dcgettext@plt>
    f8e3:	mov    r8,rbx
    f8e6:	mov    rcx,r12
    f8e9:	xor    esi,esi
    f8eb:	mov    rdx,rax
    f8ee:	xor    edi,edi
    f8f0:	xor    eax,eax
    f8f2:	call   a640 <error@plt>
    f8f7:	call   190e0 <__sprintf_chk@plt+0xe730>
    f8fc:	mov    rdi,rbp
    f8ff:	call   f7a0 <__sprintf_chk@plt+0x4df0>
    f904:	mov    rbp,rax
    f907:	test   rax,rax
    f90a:	je     f890 <__sprintf_chk@plt+0x4ee0>
    f90c:	mov    rsi,QWORD PTR [rip+0x6f985]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    f913:	xor    edx,edx
    f915:	mov    rdi,rax
    f918:	call   9cf0 <fnmatch@plt>
    f91d:	mov    rdi,rbp
    f920:	mov    ebx,eax
    f922:	call   9ce0 <free@plt>
    f927:	test   ebx,ebx
    f929:	jne    f890 <__sprintf_chk@plt+0x4ee0>
    f92f:	mov    rax,QWORD PTR [rsp+0x1b8]
    f937:	sub    rax,QWORD PTR fs:0x28
    f940:	jne    fa37 <__sprintf_chk@plt+0x5087>
    f946:	add    rsp,0x1c0
    f94d:	pop    rbx
    f94e:	pop    rbp
    f94f:	pop    r12
    f951:	ret    
    f952:	call   f4d0 <__sprintf_chk@plt+0x4b20>
    f957:	mov    rbp,rax
    f95a:	test   rax,rax
    f95d:	je     f97e <__sprintf_chk@plt+0x4fce>
    f95f:	movzx  eax,BYTE PTR [rax+0x9c]
    f966:	cmp    al,0x56
    f968:	je     f9c4 <__sprintf_chk@plt+0x5014>
    f96a:	cmp    al,0x67
    f96c:	je     f9da <__sprintf_chk@plt+0x502a>
    f96e:	mov    rbp,QWORD PTR [rip+0x6f97b]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    f975:	test   rbp,rbp
    f978:	jne    f86e <__sprintf_chk@plt+0x4ebe>
    f97e:	mov    rax,QWORD PTR [rip+0x6fb83]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    f985:	test   rax,rax
    f988:	je     f98c <__sprintf_chk@plt+0x4fdc>
    f98a:	call   rax
    f98c:	mov    rdi,QWORD PTR [rip+0x6f905]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
    f993:	call   4b7a0 <argp_usage@@Base+0x8420>
    f998:	mov    edx,0x5
    f99d:	lea    rsi,[rip+0x53d94]        # 63738 <_obstack_memory_used@@Base+0x16ab8>
    f9a4:	xor    edi,edi
    f9a6:	mov    r12,rax
    f9a9:	call   a040 <dcgettext@plt>
    f9ae:	mov    rcx,r12
    f9b1:	xor    esi,esi
    f9b3:	xor    edi,edi
    f9b5:	mov    rdx,rax
    f9b8:	xor    eax,eax
    f9ba:	call   a640 <error@plt>
    f9bf:	call   190e0 <__sprintf_chk@plt+0xe730>
    f9c4:	mov    edx,0x64
    f9c9:	mov    rsi,rbp
    f9cc:	lea    rdi,[rip+0x6f91d]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
    f9d3:	call   25400 <__sprintf_chk@plt+0x1aa50>
    f9d8:	jmp    f96e <__sprintf_chk@plt+0x4fbe>
    f9da:	mov    r12,rsp
    f9dd:	mov    rdi,r12
    f9e0:	call   3b1c0 <__sprintf_chk@plt+0x30810>
    f9e5:	xor    r9d,r9d
    f9e8:	xor    ecx,ecx
    f9ea:	lea    rdi,[rbp+0x7c]
    f9ee:	push   rax
    f9ef:	lea    rdx,[rip+0x537cf]        # 631c5 <_obstack_memory_used@@Base+0x16545>
    f9f6:	mov    esi,0xc
    f9fb:	movabs r8,0x7fffffffffffffff
    fa05:	push   0x0
    fa07:	call   23640 <__sprintf_chk@plt+0x18c90>
    fa0c:	lea    rdi,[rsp+0x178]
    fa14:	mov    rsi,rbp
    fa17:	mov    rdx,rax
    fa1a:	call   1cdc0 <__sprintf_chk@plt+0x12410>
    fa1f:	mov    rdi,r12
    fa22:	call   1cce0 <__sprintf_chk@plt+0x12330>
    fa27:	mov    rdi,r12
    fa2a:	call   44a50 <argp_usage@@Base+0x16d0>
    fa2f:	mov    rsp,r12
    fa32:	jmp    f96e <__sprintf_chk@plt+0x4fbe>
    fa37:	call   a0a0 <__stack_chk_fail@plt>
    fa3c:	nop    DWORD PTR [rax+0x0]
    fa40:	endbr64 
    fa44:	push   r14
    fa46:	push   r13
    fa48:	mov    r13,rdi
    fa4b:	mov    edi,0x30
    fa50:	push   r12
    fa52:	mov    r12,rsi
    fa55:	push   rbp
    fa56:	mov    rbp,rdx
    fa59:	push   rbx
    fa5a:	call   a4a0 <malloc@plt>
    fa5f:	test   rax,rax
    fa62:	je     faf1 <__sprintf_chk@plt+0x5141>
    fa68:	mov    rbx,rax
    fa6b:	mov    rax,QWORD PTR [rip+0x6fb2e]        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
    fa72:	test   rax,rax
    fa75:	je     fae8 <__sprintf_chk@plt+0x5138>
    fa77:	mov    QWORD PTR [rax],rbx
    fa7a:	mov    rax,QWORD PTR [rip+0x6fabf]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
    fa81:	sub    rax,QWORD PTR [rip+0x6fb00]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
    fa88:	mov    QWORD PTR [rbx],0x0
    fa8f:	mov    rdi,r13
    fa92:	sar    rax,0x9
    fa96:	mov    QWORD PTR [rip+0x6fb03],rbx        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
    fa9d:	mov    QWORD PTR [rbx+0x8],rax
    faa1:	call   a060 <strlen@plt>
    faa6:	lea    r14,[rax+0x1]
    faaa:	mov    rdi,r14
    faad:	call   a4a0 <malloc@plt>
    fab2:	mov    rdi,rax
    fab5:	test   rax,rax
    fab8:	je     faf1 <__sprintf_chk@plt+0x5141>
    faba:	mov    rdx,r14
    fabd:	mov    rsi,r13
    fac0:	call   a420 <memcpy@plt>
    fac5:	mov    QWORD PTR [rbx+0x18],r12
    fac9:	mov    QWORD PTR [rbx+0x10],rax
    facd:	mov    QWORD PTR [rbx+0x20],rbp
    fad1:	mov    QWORD PTR [rbx+0x28],0x0
    fad9:	pop    rbx
    fada:	pop    rbp
    fadb:	pop    r12
    fadd:	pop    r13
    fadf:	pop    r14
    fae1:	ret    
    fae2:	nop    WORD PTR [rax+rax*1+0x0]
    fae8:	mov    QWORD PTR [rip+0x6fab9],rbx        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
    faef:	jmp    fa7a <__sprintf_chk@plt+0x50ca>
    faf1:	call   19130 <__sprintf_chk@plt+0xe780>
    faf6:	cs nop WORD PTR [rax+rax*1+0x0]
    fb00:	endbr64 
    fb04:	push   r12
    fb06:	mov    r12,rdi
    fb09:	push   rbx
    fb0a:	sub    rsp,0x18
    fb0e:	mov    rax,QWORD PTR fs:0x28
    fb17:	mov    QWORD PTR [rsp+0x8],rax
    fb1c:	xor    eax,eax
    fb1e:	mov    eax,DWORD PTR [rip+0x6f53c]        # 7f060 <obstack_alloc_failed_handler@@Base+0x228>
    fb24:	test   eax,eax
    fb26:	je     fcf0 <__sprintf_chk@plt+0x5340>
    fb2c:	cmp    BYTE PTR [r12],0x2e
    fb31:	jne    fb90 <__sprintf_chk@plt+0x51e0>
    fb33:	cmp    BYTE PTR [r12+0x1],0x0
    fb39:	jne    fb90 <__sprintf_chk@plt+0x51e0>
    fb3b:	mov    esi,0x1
    fb40:	mov    edi,0x18
    fb45:	call   a2f0 <calloc@plt>
    fb4a:	test   rax,rax
    fb4d:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fb53:	mov    rdx,QWORD PTR [rip+0x6fa9e]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fb5a:	test   rdx,rdx
    fb5d:	je     fd10 <__sprintf_chk@plt+0x5360>
    fb63:	mov    QWORD PTR [rdx],rax
    fb66:	mov    QWORD PTR [rip+0x6fa8b],rax        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fb6d:	mov    DWORD PTR [rax+0x8],0x0
    fb74:	mov    rax,QWORD PTR [rsp+0x8]
    fb79:	sub    rax,QWORD PTR fs:0x28
    fb82:	jne    ff98 <__sprintf_chk@plt+0x55e8>
    fb88:	add    rsp,0x18
    fb8c:	pop    rbx
    fb8d:	pop    r12
    fb8f:	ret    
    fb90:	lea    rsi,[rip+0x53650]        # 631e7 <_obstack_memory_used@@Base+0x16567>
    fb97:	mov    rdi,r12
    fb9a:	call   a320 <strcmp@plt>
    fb9f:	test   eax,eax
    fba1:	je     fb3b <__sprintf_chk@plt+0x518b>
    fba3:	lea    rsi,[rip+0x53641]        # 631eb <_obstack_memory_used@@Base+0x1656b>
    fbaa:	mov    rdi,r12
    fbad:	call   a320 <strcmp@plt>
    fbb2:	test   eax,eax
    fbb4:	je     fd60 <__sprintf_chk@plt+0x53b0>
    fbba:	lea    rsi,[rip+0x5362f]        # 631f0 <_obstack_memory_used@@Base+0x16570>
    fbc1:	mov    rdi,r12
    fbc4:	call   a320 <strcmp@plt>
    fbc9:	test   eax,eax
    fbcb:	je     fd20 <__sprintf_chk@plt+0x5370>
    fbd1:	mov    edx,0x5
    fbd6:	lea    rsi,[rip+0x53618]        # 631f5 <_obstack_memory_used@@Base+0x16575>
    fbdd:	mov    rdi,r12
    fbe0:	call   9e50 <strncmp@plt>
    fbe5:	test   eax,eax
    fbe7:	je     fdf0 <__sprintf_chk@plt+0x5440>
    fbed:	mov    edx,0x5
    fbf2:	lea    rsi,[rip+0x53602]        # 631fb <_obstack_memory_used@@Base+0x1657b>
    fbf9:	mov    rdi,r12
    fbfc:	call   9e50 <strncmp@plt>
    fc01:	test   eax,eax
    fc03:	je     fe40 <__sprintf_chk@plt+0x5490>
    fc09:	mov    edx,0x7
    fc0e:	lea    rsi,[rip+0x535ec]        # 63201 <_obstack_memory_used@@Base+0x16581>
    fc15:	mov    rdi,r12
    fc18:	call   9e50 <strncmp@plt>
    fc1d:	test   eax,eax
    fc1f:	je     fda0 <__sprintf_chk@plt+0x53f0>
    fc25:	mov    edx,0x6
    fc2a:	lea    rsi,[rip+0x535d8]        # 63209 <_obstack_memory_used@@Base+0x16589>
    fc31:	mov    rdi,r12
    fc34:	call   9e50 <strncmp@plt>
    fc39:	test   eax,eax
    fc3b:	je     feb0 <__sprintf_chk@plt+0x5500>
    fc41:	lea    rsi,[rip+0x535e0]        # 63228 <_obstack_memory_used@@Base+0x165a8>
    fc48:	mov    rdi,r12
    fc4b:	call   a320 <strcmp@plt>
    fc50:	test   eax,eax
    fc52:	je     ff30 <__sprintf_chk@plt+0x5580>
    fc58:	mov    edx,0x5
    fc5d:	lea    rsi,[rip+0x535cb]        # 6322f <_obstack_memory_used@@Base+0x165af>
    fc64:	mov    rdi,r12
    fc67:	call   9e50 <strncmp@plt>
    fc6c:	test   eax,eax
    fc6e:	jne    ffd4 <__sprintf_chk@plt+0x5624>
    fc74:	mov    esi,0x1
    fc79:	mov    edi,0x18
    fc7e:	call   a2f0 <calloc@plt>
    fc83:	mov    rbx,rax
    fc86:	test   rax,rax
    fc89:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fc8f:	mov    rax,QWORD PTR [rip+0x6f962]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fc96:	test   rax,rax
    fc99:	je     ff72 <__sprintf_chk@plt+0x55c2>
    fc9f:	mov    QWORD PTR [rax],rbx
    fca2:	mov    DWORD PTR [rbx+0x8],0x7
    fca9:	lea    rdi,[r12+0x5]
    fcae:	mov    QWORD PTR [rip+0x6f943],rbx        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fcb5:	call   341a0 <__sprintf_chk@plt+0x297f0>
    fcba:	mov    DWORD PTR [rbx+0x10],eax
    fcbd:	mov    esi,eax
    fcbf:	mov    rax,QWORD PTR [rsp+0x8]
    fcc4:	sub    rax,QWORD PTR fs:0x28
    fccd:	jne    ff98 <__sprintf_chk@plt+0x55e8>
    fcd3:	add    rsp,0x18
    fcd7:	lea    rdi,[rip+0x6f302]        # 7efe0 <obstack_alloc_failed_handler@@Base+0x1a8>
    fcde:	pop    rbx
    fcdf:	pop    r12
    fce1:	jmp    a930 <sigaddset@plt>
    fce6:	cs nop WORD PTR [rax+rax*1+0x0]
    fcf0:	lea    rdi,[rip+0x6f2e9]        # 7efe0 <obstack_alloc_failed_handler@@Base+0x1a8>
    fcf7:	call   a3c0 <sigemptyset@plt>
    fcfc:	mov    DWORD PTR [rip+0x6f35a],0x1        # 7f060 <obstack_alloc_failed_handler@@Base+0x228>
    fd06:	jmp    fb2c <__sprintf_chk@plt+0x517c>
    fd0b:	nop    DWORD PTR [rax+rax*1+0x0]
    fd10:	mov    QWORD PTR [rip+0x6f2b9],rax        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    fd17:	jmp    fb66 <__sprintf_chk@plt+0x51b6>
    fd1c:	nop    DWORD PTR [rax+0x0]
    fd20:	mov    esi,0x1
    fd25:	mov    edi,0x18
    fd2a:	call   a2f0 <calloc@plt>
    fd2f:	test   rax,rax
    fd32:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fd38:	mov    rdx,QWORD PTR [rip+0x6f8b9]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fd3f:	test   rdx,rdx
    fd42:	je     fea0 <__sprintf_chk@plt+0x54f0>
    fd48:	mov    QWORD PTR [rdx],rax
    fd4b:	mov    QWORD PTR [rip+0x6f8a6],rax        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fd52:	mov    DWORD PTR [rax+0x8],0x2
    fd59:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    fd5e:	xchg   ax,ax
    fd60:	mov    esi,0x1
    fd65:	mov    edi,0x18
    fd6a:	call   a2f0 <calloc@plt>
    fd6f:	test   rax,rax
    fd72:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fd78:	mov    rdx,QWORD PTR [rip+0x6f879]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fd7f:	test   rdx,rdx
    fd82:	je     fe90 <__sprintf_chk@plt+0x54e0>
    fd88:	mov    QWORD PTR [rdx],rax
    fd8b:	mov    QWORD PTR [rip+0x6f866],rax        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fd92:	mov    DWORD PTR [rax+0x8],0x1
    fd99:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    fd9e:	xchg   ax,ax
    fda0:	mov    esi,0x1
    fda5:	mov    edi,0x18
    fdaa:	call   a2f0 <calloc@plt>
    fdaf:	mov    rbx,rax
    fdb2:	test   rax,rax
    fdb5:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fdbb:	mov    rax,QWORD PTR [rip+0x6f836]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fdc2:	test   rax,rax
    fdc5:	je     ff66 <__sprintf_chk@plt+0x55b6>
    fdcb:	mov    QWORD PTR [rax],rbx
    fdce:	mov    DWORD PTR [rbx+0x8],0x3
    fdd5:	lea    rdi,[r12+0x7]
    fdda:	mov    QWORD PTR [rip+0x6f817],rbx        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fde1:	call   d230 <__sprintf_chk@plt+0x2880>
    fde6:	mov    QWORD PTR [rbx+0x10],rax
    fdea:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    fdef:	nop
    fdf0:	mov    esi,0x1
    fdf5:	mov    edi,0x18
    fdfa:	call   a2f0 <calloc@plt>
    fdff:	mov    rbx,rax
    fe02:	test   rax,rax
    fe05:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fe0b:	mov    rax,QWORD PTR [rip+0x6f7e6]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fe12:	test   rax,rax
    fe15:	je     ff18 <__sprintf_chk@plt+0x5568>
    fe1b:	mov    QWORD PTR [rax],rbx
    fe1e:	mov    DWORD PTR [rbx+0x8],0x2
    fe25:	lea    rdi,[r12+0x5]
    fe2a:	mov    QWORD PTR [rip+0x6f7c7],rbx        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fe31:	call   d230 <__sprintf_chk@plt+0x2880>
    fe36:	mov    QWORD PTR [rbx+0x10],rax
    fe3a:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    fe3f:	nop
    fe40:	mov    esi,0x1
    fe45:	mov    edi,0x18
    fe4a:	call   a2f0 <calloc@plt>
    fe4f:	mov    rbx,rax
    fe52:	test   rax,rax
    fe55:	je     ff93 <__sprintf_chk@plt+0x55e3>
    fe5b:	mov    rax,QWORD PTR [rip+0x6f796]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fe62:	test   rax,rax
    fe65:	je     ff24 <__sprintf_chk@plt+0x5574>
    fe6b:	mov    QWORD PTR [rax],rbx
    fe6e:	mov    DWORD PTR [rbx+0x8],0x5
    fe75:	lea    rdi,[r12+0x5]
    fe7a:	mov    QWORD PTR [rip+0x6f777],rbx        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fe81:	call   d230 <__sprintf_chk@plt+0x2880>
    fe86:	mov    QWORD PTR [rbx+0x10],rax
    fe8a:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    fe8f:	nop
    fe90:	mov    QWORD PTR [rip+0x6f139],rax        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    fe97:	jmp    fd8b <__sprintf_chk@plt+0x53db>
    fe9c:	nop    DWORD PTR [rax+0x0]
    fea0:	mov    QWORD PTR [rip+0x6f129],rax        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    fea7:	jmp    fd4b <__sprintf_chk@plt+0x539b>
    feac:	nop    DWORD PTR [rax+0x0]
    feb0:	mov    rsi,rsp
    feb3:	lea    rdi,[r12+0x6]
    feb8:	mov    edx,0xa
    febd:	call   a770 <strtoul@plt>
    fec2:	mov    rbx,rax
    fec5:	mov    rax,QWORD PTR [rsp]
    fec9:	cmp    BYTE PTR [rax],0x0
    fecc:	jne    ff9d <__sprintf_chk@plt+0x55ed>
    fed2:	mov    esi,0x1
    fed7:	mov    edi,0x18
    fedc:	call   a2f0 <calloc@plt>
    fee1:	test   rax,rax
    fee4:	je     ff93 <__sprintf_chk@plt+0x55e3>
    feea:	mov    rdx,QWORD PTR [rip+0x6f707]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    fef1:	test   rdx,rdx
    fef4:	je     ff7e <__sprintf_chk@plt+0x55ce>
    fefa:	mov    QWORD PTR [rdx],rax
    fefd:	mov    QWORD PTR [rip+0x6f6f4],rax        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    ff04:	mov    DWORD PTR [rax+0x8],0x4
    ff0b:	mov    QWORD PTR [rax+0x10],rbx
    ff0f:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    ff14:	nop    DWORD PTR [rax+0x0]
    ff18:	mov    QWORD PTR [rip+0x6f0b1],rbx        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    ff1f:	jmp    fe1e <__sprintf_chk@plt+0x546e>
    ff24:	mov    QWORD PTR [rip+0x6f0a5],rbx        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    ff2b:	jmp    fe6e <__sprintf_chk@plt+0x54be>
    ff30:	mov    esi,0x1
    ff35:	mov    edi,0x18
    ff3a:	call   a2f0 <calloc@plt>
    ff3f:	test   rax,rax
    ff42:	je     ff93 <__sprintf_chk@plt+0x55e3>
    ff44:	mov    rdx,QWORD PTR [rip+0x6f6ad]        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    ff4b:	test   rdx,rdx
    ff4e:	je     ff8a <__sprintf_chk@plt+0x55da>
    ff50:	mov    QWORD PTR [rdx],rax
    ff53:	mov    QWORD PTR [rip+0x6f69e],rax        # 7f5f8 <obstack_alloc_failed_handler@@Base+0x7c0>
    ff5a:	mov    DWORD PTR [rax+0x8],0x6
    ff61:	jmp    fb74 <__sprintf_chk@plt+0x51c4>
    ff66:	mov    QWORD PTR [rip+0x6f063],rbx        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    ff6d:	jmp    fdce <__sprintf_chk@plt+0x541e>
    ff72:	mov    QWORD PTR [rip+0x6f057],rbx        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    ff79:	jmp    fca2 <__sprintf_chk@plt+0x52f2>
    ff7e:	mov    QWORD PTR [rip+0x6f04b],rax        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    ff85:	jmp    fefd <__sprintf_chk@plt+0x554d>
    ff8a:	mov    QWORD PTR [rip+0x6f03f],rax        # 7efd0 <obstack_alloc_failed_handler@@Base+0x198>
    ff91:	jmp    ff53 <__sprintf_chk@plt+0x55a3>
    ff93:	call   19130 <__sprintf_chk@plt+0xe780>
    ff98:	call   a0a0 <__stack_chk_fail@plt>
    ff9d:	mov    rax,QWORD PTR [rip+0x6f564]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    ffa4:	test   rax,rax
    ffa7:	je     ffab <__sprintf_chk@plt+0x55fb>
    ffa9:	call   rax
    ffab:	mov    edx,0x5
    ffb0:	lea    rsi,[rip+0x53259]        # 63210 <_obstack_memory_used@@Base+0x16590>
    ffb7:	xor    edi,edi
    ffb9:	call   a040 <dcgettext@plt>
    ffbe:	mov    rcx,r12
    ffc1:	xor    esi,esi
    ffc3:	xor    edi,edi
    ffc5:	mov    rdx,rax
    ffc8:	xor    eax,eax
    ffca:	call   a640 <error@plt>
    ffcf:	call   190e0 <__sprintf_chk@plt+0xe730>
    ffd4:	mov    rax,QWORD PTR [rip+0x6f52d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
    ffdb:	test   rax,rax
    ffde:	je     ffe2 <__sprintf_chk@plt+0x5632>
    ffe0:	call   rax
    ffe2:	mov    edx,0x5
    ffe7:	lea    rsi,[rip+0x53247]        # 63235 <_obstack_memory_used@@Base+0x165b5>
    ffee:	jmp    ffb7 <__sprintf_chk@plt+0x5607>
    fff0:	endbr64 
    fff4:	push   rbp
    fff5:	push   rbx
    fff6:	sub    rsp,0x8
    fffa:	mov    rbp,QWORD PTR [rip+0x6f54f]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   10001:	call   a7f0 <getpagesize@plt>
   10006:	movsxd rbx,eax
   10009:	mov    rdi,rbp
   1000c:	add    rdi,rbx
   1000f:	jb     10057 <__sprintf_chk@plt+0x56a7>
   10011:	call   a4a0 <malloc@plt>
   10016:	test   rax,rax
   10019:	je     10057 <__sprintf_chk@plt+0x56a7>
   1001b:	lea    rcx,[rax+rbx*1-0x1]
   10020:	xor    edx,edx
   10022:	mov    rax,rcx
   10025:	div    rbx
   10028:	sub    rcx,rdx
   1002b:	cmp    QWORD PTR [rip+0x6ef85],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   10033:	mov    QWORD PTR [rip+0x6f59e],rcx        # 7f5d8 <obstack_alloc_failed_handler@@Base+0x7a0>
   1003a:	je     10050 <__sprintf_chk@plt+0x56a0>
   1003c:	add    rsp,0x8
   10040:	pop    rbx
   10041:	pop    rbp
   10042:	jmp    2a0f0 <__sprintf_chk@plt+0x1f740>
   10047:	nop    WORD PTR [rax+rax*1+0x0]
   10050:	add    rsp,0x8
   10054:	pop    rbx
   10055:	pop    rbp
   10056:	ret    
   10057:	call   19130 <__sprintf_chk@plt+0xe780>
   1005c:	nop    DWORD PTR [rax+0x0]
   10060:	endbr64 
   10064:	mov    eax,DWORD PTR [rip+0x6f056]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   1006a:	test   eax,eax
   1006c:	je     10100 <__sprintf_chk@plt+0x5750>
   10072:	test   BYTE PTR [rip+0x6c003],0x4        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   10079:	je     10100 <__sprintf_chk@plt+0x5750>
   1007f:	push   r13
   10081:	push   r12
   10083:	push   rbp
   10084:	mov    rbp,rdi
   10087:	push   rbx
   10088:	mov    rbx,rdx
   1008b:	sub    rsp,0x18
   1008f:	mov    rax,QWORD PTR [rip+0x6f472]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   10096:	test   rax,rax
   10099:	je     100a7 <__sprintf_chk@plt+0x56f7>
   1009b:	mov    QWORD PTR [rsp+0x8],rsi
   100a0:	call   rax
   100a2:	mov    rsi,QWORD PTR [rsp+0x8]
   100a7:	lea    rdx,[rip+0x6eed2]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   100ae:	mov    edi,0x1
   100b3:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   100b8:	mov    rdi,rbp
   100bb:	mov    r13,rax
   100be:	call   4b670 <argp_usage@@Base+0x82f0>
   100c3:	mov    edx,0x5
   100c8:	lea    rsi,[rip+0x53689]        # 63758 <_obstack_memory_used@@Base+0x16ad8>
   100cf:	xor    edi,edi
   100d1:	mov    r12,rax
   100d4:	call   a040 <dcgettext@plt>
   100d9:	add    rsp,0x18
   100dd:	mov    r9,rbx
   100e0:	mov    r8,r13
   100e3:	pop    rbx
   100e4:	mov    rdx,rax
   100e7:	pop    rbp
   100e8:	mov    rcx,r12
   100eb:	xor    esi,esi
   100ed:	pop    r12
   100ef:	xor    edi,edi
   100f1:	xor    eax,eax
   100f3:	pop    r13
   100f5:	jmp    a640 <error@plt>
   100fa:	nop    WORD PTR [rax+rax*1+0x0]
   10100:	ret    
   10101:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1010c:	nop    DWORD PTR [rax+0x0]
   10110:	endbr64 
   10114:	push   r13
   10116:	push   r12
   10118:	push   rbp
   10119:	push   rbx
   1011a:	sub    rsp,0x8
   1011e:	mov    rbx,QWORD PTR [rip+0x6edfb]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   10125:	test   rbx,rbx
   10128:	je     10190 <__sprintf_chk@plt+0x57e0>
   1012a:	mov    r12,rdi
   1012d:	mov    r13,rsi
   10130:	jmp    10148 <__sprintf_chk@plt+0x5798>
   10132:	nop    WORD PTR [rax+rax*1+0x0]
   10138:	mov    edi,ebp
   1013a:	call   a200 <close@plt>
   1013f:	mov    rbx,QWORD PTR [rbx+0x20]
   10143:	test   rbx,rbx
   10146:	je     10190 <__sprintf_chk@plt+0x57e0>
   10148:	mov    edx,DWORD PTR [rip+0x6ee22]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   1014e:	mov    rsi,QWORD PTR [rbx]
   10151:	mov    rdi,r12
   10154:	call   18ce0 <__sprintf_chk@plt+0xe330>
   10159:	mov    ebp,eax
   1015b:	test   eax,eax
   1015d:	js     1013f <__sprintf_chk@plt+0x578f>
   1015f:	mov    rax,QWORD PTR [rbx+0x18]
   10163:	test   rax,rax
   10166:	je     10170 <__sprintf_chk@plt+0x57c0>
   10168:	mov    edi,ebp
   1016a:	call   rax
   1016c:	test   al,al
   1016e:	je     10138 <__sprintf_chk@plt+0x5788>
   10170:	mov    edi,ebp
   10172:	call   a200 <close@plt>
   10177:	mov    rax,QWORD PTR [rbx]
   1017a:	mov    QWORD PTR [r13+0x0],rax
   1017e:	mov    eax,DWORD PTR [rbx+0x10]
   10181:	add    rsp,0x8
   10185:	pop    rbx
   10186:	pop    rbp
   10187:	pop    r12
   10189:	pop    r13
   1018b:	ret    
   1018c:	nop    DWORD PTR [rax+0x0]
   10190:	add    rsp,0x8
   10194:	xor    eax,eax
   10196:	pop    rbx
   10197:	pop    rbp
   10198:	pop    r12
   1019a:	pop    r13
   1019c:	ret    
   1019d:	nop    DWORD PTR [rax]
   101a0:	endbr64 
   101a4:	push   r15
   101a6:	push   r14
   101a8:	mov    r14,rdx
   101ab:	mov    rdx,rcx
   101ae:	push   r12
   101b0:	mov    r12,rsi
   101b3:	push   rbx
   101b4:	sub    rsp,0x18
   101b8:	mov    eax,DWORD PTR [rip+0x6f0e6]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   101be:	and    eax,0xfffffffb
   101c1:	test   edi,edi
   101c3:	jne    10240 <__sprintf_chk@plt+0x5890>
   101c5:	lea    rcx,[r9+r9*2-0x3]
   101ca:	cmp    rcx,0x3f
   101ce:	ja     10390 <__sprintf_chk@plt+0x59e0>
   101d4:	mov    esi,0x1
   101d9:	lea    ecx,[r9+r9*2-0x3]
   101de:	mov    rbx,rsi
   101e1:	shl    rbx,cl
   101e4:	mov    rcx,rbx
   101e7:	sub    rcx,0x1
   101eb:	cmp    rcx,r12
   101ee:	jae    10390 <__sprintf_chk@plt+0x59e0>
   101f4:	cmp    eax,0x2
   101f7:	jne    10358 <__sprintf_chk@plt+0x59a8>
   101fd:	lea    rbx,[r9-0x1]
   10201:	lea    rcx,[rbx*8+0x0]
   10209:	cmp    rcx,0x3f
   1020d:	ja     10230 <__sprintf_chk@plt+0x5880>
   1020f:	lea    ecx,[rbx*8+0x0]
   10216:	shl    rsi,cl
   10219:	sub    rsi,0x1
   1021d:	cmp    r12,rsi
   10220:	ja     1035a <__sprintf_chk@plt+0x59aa>
   10226:	cs nop WORD PTR [rax+rax*1+0x0]
   10230:	mov    eax,0xffffff80
   10235:	jmp    103cd <__sprintf_chk@plt+0x5a1d>
   1023a:	nop    WORD PTR [rax+rax*1+0x0]
   10240:	cmp    eax,0x2
   10243:	jne    10358 <__sprintf_chk@plt+0x59a8>
   10249:	lea    rbx,[r9-0x1]
   1024d:	lea    rcx,[rbx*8+0x0]
   10255:	cmp    rcx,0x3f
   10259:	ja     103c8 <__sprintf_chk@plt+0x5a18>
   1025f:	lea    ecx,[rbx*8+0x0]
   10266:	mov    esi,0x1
   1026b:	shl    rsi,cl
   1026e:	mov    rcx,r12
   10271:	sub    rsi,0x1
   10275:	not    rcx
   10278:	cmp    rcx,rsi
   1027b:	jbe    103c8 <__sprintf_chk@plt+0x5a18>
   10281:	lea    r15,[r14*8+0x0]
   10289:	lea    rcx,[r9+r9*2-0x3]
   1028e:	cmp    r15,rcx
   10291:	ja     1035a <__sprintf_chk@plt+0x59aa>
   10297:	mov    esi,DWORD PTR [rip+0x6f333]        # 7f5d0 <obstack_alloc_failed_handler@@Base+0x798>
   1029d:	test   esi,esi
   1029f:	jne    102fe <__sprintf_chk@plt+0x594e>
   102a1:	mov    rax,QWORD PTR [rip+0x6f260]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   102a8:	mov    DWORD PTR [rip+0x6f31e],0x1        # 7f5d0 <obstack_alloc_failed_handler@@Base+0x798>
   102b2:	test   rax,rax
   102b5:	je     102cb <__sprintf_chk@plt+0x591b>
   102b7:	mov    QWORD PTR [rsp+0x8],r9
   102bc:	mov    QWORD PTR [rsp],r8
   102c0:	call   rax
   102c2:	mov    r9,QWORD PTR [rsp+0x8]
   102c7:	mov    r8,QWORD PTR [rsp]
   102cb:	mov    edx,0x5
   102d0:	lea    rsi,[rip+0x534b1]        # 63788 <_obstack_memory_used@@Base+0x16b08>
   102d7:	xor    edi,edi
   102d9:	mov    QWORD PTR [rsp+0x8],r9
   102de:	mov    QWORD PTR [rsp],r8
   102e2:	call   a040 <dcgettext@plt>
   102e7:	xor    esi,esi
   102e9:	xor    edi,edi
   102eb:	mov    rdx,rax
   102ee:	xor    eax,eax
   102f0:	call   a640 <error@plt>
   102f5:	mov    r9,QWORD PTR [rsp+0x8]
   102fa:	mov    r8,QWORD PTR [rsp]
   102fe:	mov    BYTE PTR [r8+r9*1-0x1],0x0
   10304:	cmp    r15,0x3f
   10308:	ja     10328 <__sprintf_chk@plt+0x5978>
   1030a:	lea    ecx,[r14*8+0x0]
   10312:	mov    rax,0xffffffffffffffff
   10319:	shl    rax,cl
   1031c:	not    rax
   1031f:	and    r12,rax
   10322:	nop    WORD PTR [rax+rax*1+0x0]
   10328:	mov    eax,r12d
   1032b:	sub    rbx,0x1
   1032f:	shr    r12,0x3
   10333:	and    eax,0x7
   10336:	add    eax,0x30
   10339:	mov    BYTE PTR [r8+rbx*1],al
   1033d:	test   rbx,rbx
   10340:	jne    10328 <__sprintf_chk@plt+0x5978>
   10342:	mov    eax,0x1
   10347:	add    rsp,0x18
   1034b:	pop    rbx
   1034c:	pop    r12
   1034e:	pop    r14
   10350:	pop    r15
   10352:	ret    
   10353:	nop    DWORD PTR [rax+rax*1+0x0]
   10358:	xor    edx,edx
   1035a:	push   QWORD PTR [rsp+0x40]
   1035e:	xor    esi,esi
   10360:	cmp    eax,0x2
   10363:	mov    rcx,r14
   10366:	push   r9
   10368:	sete   sil
   1036c:	mov    r9,r8
   1036f:	mov    r8,rdx
   10372:	mov    rdx,r12
   10375:	call   10400 <__sprintf_chk@plt+0x5a50>
   1037a:	pop    rdx
   1037b:	pop    rcx
   1037c:	add    rsp,0x18
   10380:	pop    rbx
   10381:	pop    r12
   10383:	pop    r14
   10385:	pop    r15
   10387:	ret    
   10388:	nop    DWORD PTR [rax+rax*1+0x0]
   10390:	mov    BYTE PTR [r8+r9*1-0x1],0x0
   10396:	lea    rax,[r9-0x1]
   1039a:	nop    WORD PTR [rax+rax*1+0x0]
   103a0:	mov    edx,r12d
   103a3:	sub    rax,0x1
   103a7:	shr    r12,0x3
   103ab:	and    edx,0x7
   103ae:	add    edx,0x30
   103b1:	mov    BYTE PTR [r8+rax*1],dl
   103b5:	test   rax,rax
   103b8:	jne    103a0 <__sprintf_chk@plt+0x59f0>
   103ba:	mov    eax,0x1
   103bf:	jmp    10347 <__sprintf_chk@plt+0x5997>
   103c1:	nop    DWORD PTR [rax+0x0]
   103c8:	mov    eax,0xffffffff
   103cd:	mov    BYTE PTR [r8],al
   103d0:	neg    edi
   103d2:	shl    rdi,0x38
   103d6:	cs nop WORD PTR [rax+rax*1+0x0]
   103e0:	sub    rbx,0x1
   103e4:	mov    BYTE PTR [r8+rbx*1+0x1],r12b
   103e9:	shr    r12,0x8
   103ed:	or     r12,rdi
   103f0:	test   rbx,rbx
   103f3:	jne    103e0 <__sprintf_chk@plt+0x5a30>
   103f5:	mov    eax,0x1
   103fa:	jmp    10347 <__sprintf_chk@plt+0x5997>
   103ff:	nop
   10400:	push   r15
   10402:	mov    r10d,esi
   10405:	mov    rsi,rdx
   10408:	push   r14
   1040a:	push   r13
   1040c:	push   r12
   1040e:	mov    r12,rcx
   10411:	push   rbp
   10412:	mov    rbp,r9
   10415:	push   rbx
   10416:	sub    rsp,0xa8
   1041d:	mov    rax,QWORD PTR fs:0x28
   10426:	mov    QWORD PTR [rsp+0x98],rax
   1042e:	mov    rax,QWORD PTR [rsp+0xe0]
   10436:	mov    r13,QWORD PTR [rsp+0xe8]
   1043e:	test   r10d,r10d
   10441:	je     10768 <__sprintf_chk@plt+0x5db8>
   10447:	lea    rcx,[rax-0x1]
   1044b:	mov    r9,0xffffffffffffffff
   10452:	lea    rax,[rcx*8+0x0]
   1045a:	cmp    rax,0x3f
   1045e:	jbe    107a0 <__sprintf_chk@plt+0x5df0>
   10464:	mov    BYTE PTR [rsp+0x34],0x0
   10469:	mov    rcx,r9
   1046c:	lea    r14,[rsp+0x34]
   10471:	movabs r11,0xcccccccccccccccd
   1047b:	nop    DWORD PTR [rax+rax*1+0x0]
   10480:	mov    rax,rcx
   10483:	sub    r14,0x1
   10487:	mul    r11
   1048a:	mov    rax,rcx
   1048d:	shr    rdx,0x3
   10491:	lea    rbx,[rdx+rdx*4]
   10495:	add    rbx,rbx
   10498:	sub    rax,rbx
   1049b:	add    eax,0x30
   1049e:	mov    BYTE PTR [r14],al
   104a1:	mov    rax,rcx
   104a4:	mov    rcx,rdx
   104a7:	cmp    rax,0x9
   104ab:	ja     10480 <__sprintf_chk@plt+0x5ad0>
   104ad:	lea    rbx,[rip+0x5bdd9]        # 6c28d <_obstack_memory_used@@Base+0x1f60d>
   104b4:	test   r10d,r10d
   104b7:	je     10521 <__sprintf_chk@plt+0x5b71>
   104b9:	lea    rcx,[r9+0x1]
   104bd:	cmp    r9,0xffffffffffffffff
   104c1:	mov    BYTE PTR [rsp+0x55],0x0
   104c6:	movabs rax,0x8000000000000000
   104d0:	cmove  rcx,rax
   104d4:	lea    r10,[rsp+0x55]
   104d9:	movabs r11,0xcccccccccccccccd
   104e3:	nop    DWORD PTR [rax+rax*1+0x0]
   104e8:	mov    rax,rcx
   104eb:	mov    rbx,r10
   104ee:	sub    r10,0x1
   104f2:	mul    r11
   104f5:	mov    rax,rcx
   104f8:	shr    rdx,0x3
   104fc:	lea    r15,[rdx+rdx*4]
   10500:	add    r15,r15
   10503:	sub    rax,r15
   10506:	add    eax,0x30
   10509:	mov    BYTE PTR [r10],al
   1050c:	mov    rax,rcx
   1050f:	mov    rcx,rdx
   10512:	cmp    rax,0x9
   10516:	ja     104e8 <__sprintf_chk@plt+0x5b38>
   10518:	mov    BYTE PTR [r10-0x1],0x2d
   1051d:	sub    rbx,0x2
   10521:	test   edi,edi
   10523:	je     106c0 <__sprintf_chk@plt+0x5d10>
   10529:	mov    BYTE PTR [rsp+0x75],0x0
   1052e:	neg    rsi
   10531:	lea    rcx,[rsp+0x75]
   10536:	movabs rdi,0xcccccccccccccccd
   10540:	mov    rax,rsi
   10543:	mov    r15,rcx
   10546:	sub    rcx,0x1
   1054a:	mul    rdi
   1054d:	mov    rax,rsi
   10550:	shr    rdx,0x3
   10554:	lea    r10,[rdx+rdx*4]
   10558:	add    r10,r10
   1055b:	sub    rax,r10
   1055e:	add    eax,0x30
   10561:	mov    BYTE PTR [rcx],al
   10563:	mov    rax,rsi
   10566:	mov    rsi,rdx
   10569:	cmp    rax,0x9
   1056d:	ja     10540 <__sprintf_chk@plt+0x5b90>
   1056f:	mov    BYTE PTR [rcx-0x1],0x2d
   10573:	sub    r15,0x2
   10577:	mov    QWORD PTR [rsp],r9
   1057b:	test   r8,r8
   1057e:	je     10712 <__sprintf_chk@plt+0x5d62>
   10584:	lea    rdi,[rsp+0x1c]
   10589:	call   r8
   1058c:	mov    r9,QWORD PTR [rsp]
   10590:	mov    BYTE PTR [rsp+0x95],0x0
   10598:	lea    rcx,[rsp+0x95]
   105a0:	movabs rdi,0xcccccccccccccccd
   105aa:	and    rax,r9
   105ad:	xor    r9d,r9d
   105b0:	cmp    DWORD PTR [rip+0x6eced],0x6        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   105b7:	sete   r9b
   105bb:	and    r9d,DWORD PTR [rsp+0x1c]
   105c0:	mov    r10,rax
   105c3:	neg    rax
   105c6:	test   r9d,r9d
   105c9:	mov    DWORD PTR [rsp+0x1c],r9d
   105ce:	cmovne r10,rax
   105d2:	mov    rsi,r10
   105d5:	nop    DWORD PTR [rax]
   105d8:	mov    rax,rsi
   105db:	mov    r8,rcx
   105de:	sub    rcx,0x1
   105e2:	mul    rdi
   105e5:	mov    rax,rsi
   105e8:	shr    rdx,0x3
   105ec:	lea    r11,[rdx+rdx*4]
   105f0:	add    r11,r11
   105f3:	sub    rax,r11
   105f6:	add    eax,0x30
   105f9:	mov    BYTE PTR [rcx],al
   105fb:	mov    rax,rsi
   105fe:	mov    rsi,rdx
   10601:	cmp    rax,0x9
   10605:	ja     105d8 <__sprintf_chk@plt+0x5c28>
   10607:	test   r9d,r9d
   1060a:	je     10614 <__sprintf_chk@plt+0x5c64>
   1060c:	mov    BYTE PTR [rcx-0x1],0x2d
   10610:	lea    rcx,[r8-0x2]
   10614:	mov    rax,QWORD PTR [rip+0x6eeed]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1061b:	test   rax,rax
   1061e:	je     10634 <__sprintf_chk@plt+0x5c84>
   10620:	mov    QWORD PTR [rsp+0x8],rcx
   10625:	mov    QWORD PTR [rsp],r10
   10629:	call   rax
   1062b:	mov    rcx,QWORD PTR [rsp+0x8]
   10630:	mov    r10,QWORD PTR [rsp]
   10634:	mov    edx,0x5
   10639:	lea    rsi,[rip+0x53170]        # 637b0 <_obstack_memory_used@@Base+0x16b30>
   10640:	xor    edi,edi
   10642:	mov    QWORD PTR [rsp],r10
   10646:	mov    QWORD PTR [rsp+0x8],rcx
   1064b:	call   a040 <dcgettext@plt>
   10650:	mov    rcx,QWORD PTR [rsp+0x8]
   10655:	mov    r9,rbx
   10658:	mov    r8,r13
   1065b:	mov    rdx,rax
   1065e:	xor    esi,esi
   10660:	xor    edi,edi
   10662:	xor    eax,eax
   10664:	push   rcx
   10665:	mov    rcx,r15
   10668:	push   r14
   1066a:	call   a640 <error@plt>
   1066f:	mov    rsi,QWORD PTR [rsp+0x10]
   10674:	mov    edi,DWORD PTR [rsp+0x2c]
   10678:	xor    ecx,ecx
   1067a:	mov    r9,QWORD PTR [rsp+0xf0]
   10682:	mov    r8,rbp
   10685:	mov    rdx,r12
   10688:	mov    QWORD PTR [rsp],r13
   1068c:	call   101a0 <__sprintf_chk@plt+0x57f0>
   10691:	pop    rcx
   10692:	pop    rsi
   10693:	mov    rdx,QWORD PTR [rsp+0x98]
   1069b:	sub    rdx,QWORD PTR fs:0x28
   106a4:	jne    107b5 <__sprintf_chk@plt+0x5e05>
   106aa:	add    rsp,0xa8
   106b1:	pop    rbx
   106b2:	pop    rbp
   106b3:	pop    r12
   106b5:	pop    r13
   106b7:	pop    r14
   106b9:	pop    r15
   106bb:	ret    
   106bc:	nop    DWORD PTR [rax+0x0]
   106c0:	mov    BYTE PTR [rsp+0x74],0x0
   106c5:	lea    r15,[rsp+0x74]
   106ca:	movabs rcx,0xcccccccccccccccd
   106d4:	nop    DWORD PTR [rax+0x0]
   106d8:	mov    rax,rsi
   106db:	sub    r15,0x1
   106df:	mul    rcx
   106e2:	mov    rax,rsi
   106e5:	shr    rdx,0x3
   106e9:	lea    rdi,[rdx+rdx*4]
   106ed:	add    rdi,rdi
   106f0:	sub    rax,rdi
   106f3:	add    eax,0x30
   106f6:	mov    BYTE PTR [r15],al
   106f9:	mov    rax,rsi
   106fc:	mov    rsi,rdx
   106ff:	cmp    rax,0x9
   10703:	ja     106d8 <__sprintf_chk@plt+0x5d28>
   10705:	mov    QWORD PTR [rsp],r9
   10709:	test   r8,r8
   1070c:	jne    10584 <__sprintf_chk@plt+0x5bd4>
   10712:	mov    rax,QWORD PTR [rip+0x6edef]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   10719:	test   rax,rax
   1071c:	je     10720 <__sprintf_chk@plt+0x5d70>
   1071e:	call   rax
   10720:	mov    edx,0x5
   10725:	lea    rsi,[rip+0x530bc]        # 637e8 <_obstack_memory_used@@Base+0x16b68>
   1072c:	xor    edi,edi
   1072e:	call   a040 <dcgettext@plt>
   10733:	sub    rsp,0x8
   10737:	mov    r9,rbx
   1073a:	mov    r8,r13
   1073d:	push   r14
   1073f:	mov    rdx,rax
   10742:	mov    rcx,r15
   10745:	xor    eax,eax
   10747:	xor    esi,esi
   10749:	xor    edi,edi
   1074b:	call   a640 <error@plt>
   10750:	pop    rax
   10751:	xor    eax,eax
   10753:	pop    rdx
   10754:	mov    DWORD PTR [rip+0x6e966],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1075e:	jmp    10693 <__sprintf_chk@plt+0x5ce3>
   10763:	nop    DWORD PTR [rax+rax*1+0x0]
   10768:	lea    rax,[rax+rax*2-0x3]
   1076d:	mov    r9,0xffffffffffffffff
   10774:	cmp    rax,0x3f
   10778:	ja     10464 <__sprintf_chk@plt+0x5ab4>
   1077e:	mov    rax,QWORD PTR [rsp+0xe0]
   10786:	mov    r9d,0x1
   1078c:	lea    ecx,[rax+rax*2-0x3]
   10790:	shl    r9,cl
   10793:	sub    r9,0x1
   10797:	jmp    10464 <__sprintf_chk@plt+0x5ab4>
   1079c:	nop    DWORD PTR [rax+0x0]
   107a0:	shl    ecx,0x3
   107a3:	mov    r9d,0x1
   107a9:	shl    r9,cl
   107ac:	sub    r9,0x1
   107b0:	jmp    10464 <__sprintf_chk@plt+0x5ab4>
   107b5:	call   a0a0 <__stack_chk_fail@plt>
   107ba:	nop    WORD PTR [rax+rax*1+0x0]
   107c0:	endbr64 
   107c4:	sub    rsp,0x8
   107c8:	call   f4d0 <__sprintf_chk@plt+0x4b20>
   107cd:	lea    rdi,[rax+0x8]
   107d1:	mov    rcx,rax
   107d4:	mov    r8,rax
   107d7:	mov    QWORD PTR [rax],0x0
   107de:	mov    QWORD PTR [rax+0x1f8],0x0
   107e9:	and    rdi,0xfffffffffffffff8
   107ed:	xor    eax,eax
   107ef:	sub    rcx,rdi
   107f2:	add    ecx,0x200
   107f8:	shr    ecx,0x3
   107fb:	rep stos QWORD PTR es:[rdi],rax
   107fe:	mov    rdi,r8
   10801:	call   ece0 <__sprintf_chk@plt+0x4330>
   10806:	call   f4d0 <__sprintf_chk@plt+0x4b20>
   1080b:	mov    rdx,QWORD PTR [rip+0x6ed6e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10812:	xor    esi,esi
   10814:	mov    rdi,rax
   10817:	sub    rdx,rax
   1081a:	call   a1b0 <memset@plt>
   1081f:	add    rsp,0x8
   10823:	mov    rdi,rax
   10826:	jmp    ece0 <__sprintf_chk@plt+0x4330>
   1082b:	nop    DWORD PTR [rax+rax*1+0x0]
   10830:	endbr64 
   10834:	push   r13
   10836:	mov    r13,rsi
   10839:	push   r12
   1083b:	push   rbp
   1083c:	mov    rbp,rdx
   1083f:	push   rbx
   10840:	mov    rbx,rdi
   10843:	sub    rsp,0x8
   10847:	mov    r12,QWORD PTR [rip+0x6ecf2]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1084e:	cmp    r12,QWORD PTR [rip+0x6ed2b]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10855:	je     109f8 <__sprintf_chk@plt+0x6048>
   1085b:	lea    rdi,[r12+0x8]
   10860:	mov    rcx,r12
   10863:	xor    eax,eax
   10865:	mov    QWORD PTR [r12],0x0
   1086d:	mov    QWORD PTR [r12+0x1f8],0x0
   10879:	and    rdi,0xfffffffffffffff8
   1087d:	sub    rcx,rdi
   10880:	add    ecx,0x200
   10886:	shr    ecx,0x3
   10889:	rep stos QWORD PTR es:[rdi],rax
   1088c:	nop    DWORD PTR [rax+0x0]
   10890:	movzx  edx,BYTE PTR [rbx+rax*1]
   10894:	mov    BYTE PTR [r12+rax*1],dl
   10898:	test   dl,dl
   1089a:	je     108a6 <__sprintf_chk@plt+0x5ef6>
   1089c:	add    rax,0x1
   108a0:	cmp    rax,0x64
   108a4:	jne    10890 <__sprintf_chk@plt+0x5ee0>
   108a6:	cmp    DWORD PTR [rip+0x6e9f7],0x2        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   108ad:	jne    108b5 <__sprintf_chk@plt+0x5f05>
   108af:	mov    BYTE PTR [r12+0x63],0x0
   108b5:	sub    rsp,0x8
   108b9:	lea    rax,[rip+0x52905]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   108c0:	mov    rsi,r13
   108c3:	xor    ecx,ecx
   108c5:	push   rax
   108c6:	shr    r13,0x3f
   108ca:	mov    r9d,0xc
   108d0:	lea    r8,[r12+0x7c]
   108d5:	mov    edx,0x8
   108da:	mov    rdi,r13
   108dd:	call   101a0 <__sprintf_chk@plt+0x57f0>
   108e2:	mov    edx,0x8
   108e7:	movabs rsi,0x1ffffffff
   108f1:	lea    r8,[r12+0x88]
   108f9:	cmp    rbp,rsi
   108fc:	mov    r9d,0xc
   10902:	cmovbe rsi,rbp
   10906:	xor    eax,eax
   10908:	test   rbp,rbp
   1090b:	cmovs  rsi,rax
   1090f:	lea    rax,[rip+0x5293d]        # 63253 <_obstack_memory_used@@Base+0x165d3>
   10916:	xor    edi,edi
   10918:	xor    ecx,ecx
   1091a:	mov    QWORD PTR [rsp],rax
   1091e:	call   101a0 <__sprintf_chk@plt+0x57f0>
   10923:	mov    eax,DWORD PTR [rip+0x6e97b]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   10929:	pop    rdi
   1092a:	pop    r8
   1092c:	lea    edx,[rax-0x2]
   1092f:	cmp    edx,0x2
   10932:	jbe    109e8 <__sprintf_chk@plt+0x6038>
   10938:	mov    ecx,0x81a4
   1093d:	cmp    eax,0x6
   10940:	je     109e8 <__sprintf_chk@plt+0x6038>
   10946:	mov    BYTE PTR [r12+0x6b],0x0
   1094c:	lea    rax,[r12+0x6a]
   10951:	lea    rsi,[r12+0x63]
   10956:	mov    edx,ecx
   10958:	sub    rax,0x1
   1095c:	shr    rcx,0x3
   10960:	and    edx,0x7
   10963:	add    edx,0x30
   10966:	mov    BYTE PTR [rax+0x1],dl
   10969:	cmp    rsi,rax
   1096c:	jne    10956 <__sprintf_chk@plt+0x5fa6>
   1096e:	mov    eax,0x3030
   10973:	mov    edx,0x3030
   10978:	mov    ecx,0x72
   1097d:	mov    esi,0x3030
   10982:	mov    WORD PTR [r12+0x70],ax
   10988:	mov    rax,r12
   1098b:	mov    BYTE PTR [r12+0x73],0x0
   10991:	mov    DWORD PTR [r12+0x6c],0x30303030
   1099a:	mov    BYTE PTR [r12+0x72],0x30
   109a0:	mov    BYTE PTR [r12+0x7b],0x0
   109a6:	mov    DWORD PTR [r12+0x74],0x30303030
   109af:	mov    WORD PTR [r12+0x78],dx
   109b5:	mov    BYTE PTR [r12+0x7a],0x30
   109bb:	mov    DWORD PTR [r12+0x101],0x61747375
   109c7:	mov    WORD PTR [r12+0x105],cx
   109d0:	mov    WORD PTR [r12+0x107],si
   109d9:	add    rsp,0x8
   109dd:	pop    rbx
   109de:	pop    rbp
   109df:	pop    r12
   109e1:	pop    r13
   109e3:	ret    
   109e4:	nop    DWORD PTR [rax+0x0]
   109e8:	mov    ecx,0x1a4
   109ed:	jmp    10946 <__sprintf_chk@plt+0x5f96>
   109f2:	nop    WORD PTR [rax+rax*1+0x0]
   109f8:	xor    r12d,r12d
   109fb:	cmp    BYTE PTR [rip+0x6eb32],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   10a02:	jne    1085b <__sprintf_chk@plt+0x5eab>
   10a08:	call   f170 <__sprintf_chk@plt+0x47c0>
   10a0d:	mov    r12,QWORD PTR [rip+0x6eb2c]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10a14:	cmp    r12,QWORD PTR [rip+0x6eb65]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10a1b:	jne    1085b <__sprintf_chk@plt+0x5eab>
   10a21:	mov    BYTE PTR [rip+0x6eb0c],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   10a28:	xor    r12d,r12d
   10a2b:	jmp    1085b <__sprintf_chk@plt+0x5eab>
   10a30:	endbr64 
   10a34:	movabs rax,0x2020202020202020
   10a3e:	push   rbx
   10a3f:	xor    edx,edx
   10a41:	mov    rbx,rdi
   10a44:	mov    QWORD PTR [rdi+0x94],rax
   10a4b:	lea    r9,[rdi+0x94]
   10a52:	mov    rax,rdi
   10a55:	lea    rsi,[rdi+0x200]
   10a5c:	nop    DWORD PTR [rax+0x0]
   10a60:	movzx  ecx,BYTE PTR [rax]
   10a63:	add    rax,0x1
   10a67:	add    edx,ecx
   10a69:	cmp    rax,rsi
   10a6c:	jne    10a60 <__sprintf_chk@plt+0x60b0>
   10a6e:	mov    eax,DWORD PTR [rip+0x6e830]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   10a74:	movsxd r10,edx
   10a77:	cmp    edx,0x3ffff
   10a7d:	jle    10b08 <__sprintf_chk@plt+0x6158>
   10a83:	and    eax,0xfffffffb
   10a86:	cmp    eax,0x2
   10a89:	jne    10ab2 <__sprintf_chk@plt+0x6102>
   10a8b:	mov    BYTE PTR [rbx+0x94],0x80
   10a92:	lea    rax,[rbx+0x9a]
   10a99:	nop    DWORD PTR [rax+0x0]
   10aa0:	mov    BYTE PTR [rax],r10b
   10aa3:	sub    rax,0x1
   10aa7:	shr    r10,0x8
   10aab:	cmp    rax,r9
   10aae:	jne    10aa0 <__sprintf_chk@plt+0x60f0>
   10ab0:	jmp    10ad2 <__sprintf_chk@plt+0x6122>
   10ab2:	lea    rax,[rip+0x527a1]        # 6325a <_obstack_memory_used@@Base+0x165da>
   10ab9:	mov    rdx,r10
   10abc:	xor    r8d,r8d
   10abf:	xor    esi,esi
   10ac1:	push   rax
   10ac2:	mov    ecx,0x8
   10ac7:	xor    edi,edi
   10ac9:	push   0x7
   10acb:	call   10400 <__sprintf_chk@plt+0x5a50>
   10ad0:	pop    rax
   10ad1:	pop    rdx
   10ad2:	mov    rdx,QWORD PTR [rip+0x6ea67]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10ad9:	cmp    rdx,rbx
   10adc:	ja     10af9 <__sprintf_chk@plt+0x6149>
   10ade:	mov    rax,rbx
   10ae1:	sub    rax,rdx
   10ae4:	and    rax,0xfffffffffffffe00
   10aea:	lea    rdx,[rdx+rax*1+0x200]
   10af2:	mov    QWORD PTR [rip+0x6ea47],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10af9:	cmp    QWORD PTR [rip+0x6ea80],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10b00:	jb     a9da <__sprintf_chk@plt+0x2a>
   10b06:	pop    rbx
   10b07:	ret    
   10b08:	mov    BYTE PTR [rbx+0x9a],0x0
   10b0f:	lea    rax,[rbx+0x99]
   10b16:	lea    rcx,[rbx+0x93]
   10b1d:	nop    DWORD PTR [rax]
   10b20:	mov    edx,r10d
   10b23:	sub    rax,0x1
   10b27:	shr    r10,0x3
   10b2b:	and    edx,0x7
   10b2e:	add    edx,0x30
   10b31:	mov    BYTE PTR [rax+0x1],dl
   10b34:	cmp    rax,rcx
   10b37:	jne    10b20 <__sprintf_chk@plt+0x6170>
   10b39:	jmp    10ad2 <__sprintf_chk@plt+0x6122>
   10b3b:	nop    DWORD PTR [rax+rax*1+0x0]
   10b40:	endbr64 
   10b44:	push   r12
   10b46:	mov    r12,rdi
   10b49:	push   rbp
   10b4a:	mov    rbp,rsi
   10b4d:	sub    rsp,0x18
   10b51:	mov    eax,DWORD PTR [rip+0x6e569]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   10b57:	test   eax,eax
   10b59:	je     10ba0 <__sprintf_chk@plt+0x61f0>
   10b5b:	movzx  eax,BYTE PTR [rsi+0x9c]
   10b62:	cmp    al,0x4b
   10b64:	je     10ba0 <__sprintf_chk@plt+0x61f0>
   10b66:	sub    eax,0x4c
   10b69:	cmp    al,0x2c
   10b6b:	ja     10b7d <__sprintf_chk@plt+0x61cd>
   10b6d:	movabs rcx,0x100008000001
   10b77:	bt     rcx,rax
   10b7b:	jb     10ba0 <__sprintf_chk@plt+0x61f0>
   10b7d:	mov    eax,DWORD PTR [rip+0x6e721]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   10b83:	mov    DWORD PTR [rip+0x6e71f],eax        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   10b89:	cmp    eax,0x4
   10b8c:	je     10bf0 <__sprintf_chk@plt+0x6240>
   10b8e:	mov    rsi,rbp
   10b91:	mov    rdi,r12
   10b94:	call   244c0 <__sprintf_chk@plt+0x19b10>
   10b99:	nop    DWORD PTR [rax+0x0]
   10ba0:	cmp    QWORD PTR [r12+0x178],0x0
   10ba9:	je     10bc0 <__sprintf_chk@plt+0x6210>
   10bab:	add    rsp,0x18
   10baf:	mov    rdi,rbp
   10bb2:	pop    rbp
   10bb3:	pop    r12
   10bb5:	jmp    10a30 <__sprintf_chk@plt+0x6080>
   10bba:	nop    WORD PTR [rax+rax*1+0x0]
   10bc0:	cmp    QWORD PTR [r12+0x168],0x0
   10bc9:	je     10bab <__sprintf_chk@plt+0x61fb>
   10bcb:	mov    rdx,rbp
   10bce:	mov    rsi,r12
   10bd1:	xor    edi,edi
   10bd3:	call   22c00 <__sprintf_chk@plt+0x18250>
   10bd8:	add    rsp,0x18
   10bdc:	mov    rbp,rax
   10bdf:	mov    rdi,rbp
   10be2:	pop    rbp
   10be3:	pop    r12
   10be5:	jmp    10a30 <__sprintf_chk@plt+0x6080>
   10bea:	nop    WORD PTR [rax+rax*1+0x0]
   10bf0:	cmp    BYTE PTR [rip+0x6e372],0x0        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   10bf7:	jne    10b8e <__sprintf_chk@plt+0x61de>
   10bf9:	cmp    QWORD PTR [rip+0x6e6ef],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   10c01:	je     10b8e <__sprintf_chk@plt+0x61de>
   10c03:	mov    QWORD PTR [rsp+0x8],rdx
   10c08:	call   28d30 <__sprintf_chk@plt+0x1e380>
   10c0d:	mov    BYTE PTR [rip+0x6e355],0x1        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   10c14:	mov    rdx,QWORD PTR [rsp+0x8]
   10c19:	jmp    10b8e <__sprintf_chk@plt+0x61de>
   10c1e:	xchg   ax,ax
   10c20:	push   r12
   10c22:	push   rbp
   10c23:	mov    rbp,rdi
   10c26:	push   rbx
   10c27:	mov    rbx,QWORD PTR [rip+0x6e912]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10c2e:	cmp    rbx,QWORD PTR [rip+0x6e94b]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10c35:	je     10d50 <__sprintf_chk@plt+0x63a0>
   10c3b:	lea    rdi,[rbx+0x8]
   10c3f:	mov    rcx,rbx
   10c42:	xor    eax,eax
   10c44:	mov    QWORD PTR [rbx],0x0
   10c4b:	and    rdi,0xfffffffffffffff8
   10c4f:	mov    edx,0x64
   10c54:	mov    rsi,rbp
   10c57:	mov    QWORD PTR [rbx+0x1f8],0x0
   10c62:	sub    rcx,rdi
   10c65:	add    ecx,0x200
   10c6b:	shr    ecx,0x3
   10c6e:	rep stos QWORD PTR es:[rdi],rax
   10c71:	mov    rdi,rbx
   10c74:	call   a580 <__strcpy_chk@plt>
   10c79:	mov    rdi,QWORD PTR [rip+0x6e6a8]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   10c80:	call   9ce0 <free@plt>
   10c85:	mov    rdi,rbx
   10c88:	call   a060 <strlen@plt>
   10c8d:	lea    r12,[rax+0x1]
   10c91:	mov    rdi,r12
   10c94:	call   a4a0 <malloc@plt>
   10c99:	mov    rdi,rax
   10c9c:	test   rax,rax
   10c9f:	je     10d86 <__sprintf_chk@plt+0x63d6>
   10ca5:	mov    rdx,r12
   10ca8:	mov    rsi,rbx
   10cab:	call   a420 <memcpy@plt>
   10cb0:	mov    rdi,rax
   10cb3:	mov    QWORD PTR [rip+0x6e66e],rax        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   10cba:	call   484b0 <argp_usage@@Base+0x5130>
   10cbf:	sub    rsp,0x8
   10cc3:	xor    ecx,ecx
   10cc5:	mov    edx,0x8
   10cca:	mov    BYTE PTR [rip+0x6e660],al        # 7f330 <obstack_alloc_failed_handler@@Base+0x4f8>
   10cd0:	lea    rax,[rip+0x5257c]        # 63253 <_obstack_memory_used@@Base+0x165d3>
   10cd7:	mov    rdi,QWORD PTR [rip+0x6e392]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
   10cde:	mov    r9d,0xc
   10ce4:	mov    BYTE PTR [rbx+0x9c],0x56
   10ceb:	lea    r8,[rbx+0x88]
   10cf2:	push   rax
   10cf3:	mov    rsi,rdi
   10cf6:	shr    rdi,0x3f
   10cfa:	call   101a0 <__sprintf_chk@plt+0x57f0>
   10cff:	mov    rdx,0xffffffffffffffff
   10d06:	mov    rsi,rbx
   10d09:	lea    rdi,[rip+0x6e610]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   10d10:	call   10b40 <__sprintf_chk@plt+0x6190>
   10d15:	mov    rax,QWORD PTR [rip+0x6e824]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10d1c:	pop    rdx
   10d1d:	pop    rcx
   10d1e:	cmp    rax,rbx
   10d21:	ja     10d3c <__sprintf_chk@plt+0x638c>
   10d23:	sub    rbx,rax
   10d26:	and    rbx,0xfffffffffffffe00
   10d2d:	lea    rax,[rax+rbx*1+0x200]
   10d35:	mov    QWORD PTR [rip+0x6e804],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10d3c:	cmp    QWORD PTR [rip+0x6e83d],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10d43:	jb     a9df <__sprintf_chk@plt+0x2f>
   10d49:	pop    rbx
   10d4a:	pop    rbp
   10d4b:	pop    r12
   10d4d:	ret    
   10d4e:	xchg   ax,ax
   10d50:	xor    ebx,ebx
   10d52:	cmp    BYTE PTR [rip+0x6e7db],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   10d59:	jne    10c3b <__sprintf_chk@plt+0x628b>
   10d5f:	call   f170 <__sprintf_chk@plt+0x47c0>
   10d64:	mov    rbx,QWORD PTR [rip+0x6e7d5]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   10d6b:	cmp    rbx,QWORD PTR [rip+0x6e80e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10d72:	jne    10c3b <__sprintf_chk@plt+0x628b>
   10d78:	mov    BYTE PTR [rip+0x6e7b5],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   10d7f:	xor    ebx,ebx
   10d81:	jmp    10c3b <__sprintf_chk@plt+0x628b>
   10d86:	call   19130 <__sprintf_chk@plt+0xe780>
   10d8b:	nop    DWORD PTR [rax+rax*1+0x0]
   10d90:	movabs rdi,0xcccccccccccccccd
   10d9a:	push   r12
   10d9c:	push   rbp
   10d9d:	push   rbx
   10d9e:	sub    rsp,0x20
   10da2:	movsxd rcx,DWORD PTR [rip+0x6b27b]        # 7c024 <_obstack_memory_used@@Base+0x2f3a4>
   10da9:	mov    rax,QWORD PTR fs:0x28
   10db2:	mov    QWORD PTR [rsp+0x18],rax
   10db7:	xor    eax,eax
   10db9:	mov    BYTE PTR [rsp+0x14],0x0
   10dbe:	lea    rbx,[rsp+0x14]
   10dc3:	nop    DWORD PTR [rax+rax*1+0x0]
   10dc8:	mov    rax,rcx
   10dcb:	sub    rbx,0x1
   10dcf:	mul    rdi
   10dd2:	mov    rax,rcx
   10dd5:	shr    rdx,0x3
   10dd9:	lea    rsi,[rdx+rdx*4]
   10ddd:	add    rsi,rsi
   10de0:	sub    rax,rsi
   10de3:	add    eax,0x30
   10de6:	mov    BYTE PTR [rbx],al
   10de8:	mov    rax,rcx
   10deb:	mov    rcx,rdx
   10dee:	cmp    rax,0x9
   10df2:	ja     10dc8 <__sprintf_chk@plt+0x6418>
   10df4:	mov    r12,QWORD PTR [rip+0x6e49d]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
   10dfb:	mov    rdi,r12
   10dfe:	call   a060 <strlen@plt>
   10e03:	mov    rdi,rbx
   10e06:	mov    rbp,rax
   10e09:	call   a060 <strlen@plt>
   10e0e:	lea    rdi,[rbp+rax*1+0x9]
   10e13:	call   a4a0 <malloc@plt>
   10e18:	mov    rbp,rax
   10e1b:	test   rax,rax
   10e1e:	je     10eaf <__sprintf_chk@plt+0x64ff>
   10e24:	sub    rsp,0x8
   10e28:	mov    rdi,rax
   10e2b:	mov    rdx,0xffffffffffffffff
   10e32:	xor    eax,eax
   10e34:	push   rbx
   10e35:	lea    r9,[rip+0x52428]        # 63264 <_obstack_memory_used@@Base+0x165e4>
   10e3c:	mov    r8,r12
   10e3f:	mov    esi,0x1
   10e44:	lea    rcx,[rip+0x52420]        # 6326b <_obstack_memory_used@@Base+0x165eb>
   10e4b:	call   a9b0 <__sprintf_chk@plt>
   10e50:	cmp    DWORD PTR [rip+0x6e44d],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   10e57:	pop    rax
   10e58:	pop    rdx
   10e59:	je     10e88 <__sprintf_chk@plt+0x64d8>
   10e5b:	mov    rdi,rbp
   10e5e:	call   10c20 <__sprintf_chk@plt+0x6270>
   10e63:	mov    rax,QWORD PTR [rsp+0x18]
   10e68:	sub    rax,QWORD PTR fs:0x28
   10e71:	jne    10eaa <__sprintf_chk@plt+0x64fa>
   10e73:	add    rsp,0x20
   10e77:	mov    rdi,rbp
   10e7a:	pop    rbx
   10e7b:	pop    rbp
   10e7c:	pop    r12
   10e7e:	jmp    9ce0 <free@plt>
   10e83:	nop    DWORD PTR [rax+rax*1+0x0]
   10e88:	cmp    QWORD PTR [rip+0x6e3c8],0x0        # 7f258 <obstack_alloc_failed_handler@@Base+0x420>
   10e90:	jne    10e63 <__sprintf_chk@plt+0x64b3>
   10e92:	mov    rdx,rbp
   10e95:	lea    rsi,[rip+0x6e244]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   10e9c:	lea    rdi,[rip+0x523d1]        # 63274 <_obstack_memory_used@@Base+0x165f4>
   10ea3:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   10ea8:	jmp    10e63 <__sprintf_chk@plt+0x64b3>
   10eaa:	call   a0a0 <__stack_chk_fail@plt>
   10eaf:	call   19130 <__sprintf_chk@plt+0xe780>
   10eb4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   10ebf:	nop
   10ec0:	endbr64 
   10ec4:	push   r14
   10ec6:	push   r13
   10ec8:	push   r12
   10eca:	push   rbp
   10ecb:	push   rbx
   10ecc:	sub    rsp,0xb0
   10ed3:	mov    rax,QWORD PTR fs:0x28
   10edc:	mov    QWORD PTR [rsp+0xa8],rax
   10ee4:	lea    rax,[rip+0x4855]        # 15740 <__sprintf_chk@plt+0xad90>
   10eeb:	cmp    QWORD PTR [rip+0x6e65d],0x0        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   10ef3:	mov    QWORD PTR [rip+0x6e5f6],rax        # 7f4f0 <obstack_alloc_failed_handler@@Base+0x6b8>
   10efa:	lea    rax,[rip+0x514f]        # 16050 <__sprintf_chk@plt+0xb6a0>
   10f01:	mov    QWORD PTR [rip+0x6e5e0],rax        # 7f4e8 <obstack_alloc_failed_handler@@Base+0x6b0>
   10f08:	je     119f3 <__sprintf_chk@plt+0x7043>
   10f0e:	cmp    QWORD PTR [rip+0x6e3b2],0x0        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
   10f16:	je     119d4 <__sprintf_chk@plt+0x7024>
   10f1c:	mov    ebx,edi
   10f1e:	lea    rdi,[rip+0x6e3fb]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   10f25:	xor    ebp,ebp
   10f27:	call   44a50 <argp_usage@@Base+0x16d0>
   10f2c:	mov    DWORD PTR [rip+0x6e7aa],0x0        # 7f6e0 <obstack_alloc_failed_handler@@Base+0x8a8>
   10f36:	call   d150 <__sprintf_chk@plt+0x27a0>
   10f3b:	mov    r12,QWORD PTR [rip+0x6e38e]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   10f42:	cmp    ebx,0x2
   10f45:	cmovne ebp,ebx
   10f48:	mov    rax,QWORD PTR [r12]
   10f4c:	mov    DWORD PTR [rip+0x6e5aa],ebp        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
   10f52:	cmp    BYTE PTR [rax],0x2d
   10f55:	je     1105f <__sprintf_chk@plt+0x66af>
   10f5b:	movzx  eax,BYTE PTR [rip+0x6e146]        # 7f0a8 <obstack_alloc_failed_handler@@Base+0x270>
   10f62:	mov    r14,QWORD PTR [rip+0x6e5ff]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   10f69:	mov    QWORD PTR [rip+0x6e5e4],0x0        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
   10f74:	mov    BYTE PTR [rip+0x6e77e],al        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
   10f7a:	test   r14,r14
   10f7d:	je     112da <__sprintf_chk@plt+0x692a>
   10f83:	cmp    ebx,0x1
   10f86:	je     11125 <__sprintf_chk@plt+0x6775>
   10f8c:	cmp    ebx,0x2
   10f8f:	je     a9e4 <__sprintf_chk@plt+0x34>
   10f95:	call   33ab0 <__sprintf_chk@plt+0x29100>
   10f9a:	mov    BYTE PTR [rip+0x6e757],0x1        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
   10fa1:	mov    DWORD PTR [rip+0x6e701],eax        # 7f6a8 <obstack_alloc_failed_handler@@Base+0x870>
   10fa7:	mov    rax,QWORD PTR [rip+0x6e5da]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   10fae:	mov    QWORD PTR [rip+0x6e5cb],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   10fb5:	mov    edi,DWORD PTR [rip+0x6e5a5]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   10fbb:	test   edi,edi
   10fbd:	js     11742 <__sprintf_chk@plt+0x6d92>
   10fc3:	xor    ebp,ebp
   10fc5:	cmp    edi,0x3fffffff
   10fcb:	jle    110a9 <__sprintf_chk@plt+0x66f9>
   10fd1:	mov    rax,QWORD PTR [rip+0x6e2f8]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   10fd8:	lea    rsi,[rip+0x53131]        # 64110 <_obstack_memory_used@@Base+0x17490>
   10fdf:	mov    rdi,QWORD PTR [rax]
   10fe2:	call   a320 <strcmp@plt>
   10fe7:	test   eax,eax
   10fe9:	sete   BYTE PTR [rip+0x6e530]        # 7f520 <obstack_alloc_failed_handler@@Base+0x6e8>
   10ff0:	mov    QWORD PTR [rip+0x6e095],0x0        # 7f090 <obstack_alloc_failed_handler@@Base+0x258>
   10ffb:	lea    eax,[rbx-0x1]
   10ffe:	cmp    eax,0x1
   11001:	jbe    1129f <__sprintf_chk@plt+0x68ef>
   11007:	call   f4d0 <__sprintf_chk@plt+0x4b20>
   1100c:	cmp    QWORD PTR [rip+0x6e284],0x0        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
   11014:	je     1101b <__sprintf_chk@plt+0x666b>
   11016:	call   f840 <__sprintf_chk@plt+0x4e90>
   1101b:	lea    rsi,[rip+0x6e08e]        # 7f0b0 <obstack_alloc_failed_handler@@Base+0x278>
   11022:	xor    edi,edi
   11024:	call   9f70 <clock_gettime@plt>
   11029:	movdqa xmm0,XMMWORD PTR [rip+0x6e07f]        # 7f0b0 <obstack_alloc_failed_handler@@Base+0x278>
   11031:	movaps XMMWORD PTR [rip+0x6e558],xmm0        # 7f590 <obstack_alloc_failed_handler@@Base+0x758>
   11038:	mov    rax,QWORD PTR [rsp+0xa8]
   11040:	sub    rax,QWORD PTR fs:0x28
   11049:	jne    11a9c <__sprintf_chk@plt+0x70ec>
   1104f:	add    rsp,0xb0
   11056:	pop    rbx
   11057:	pop    rbp
   11058:	pop    r12
   1105a:	pop    r13
   1105c:	pop    r14
   1105e:	ret    
   1105f:	cmp    BYTE PTR [rax+0x1],0x0
   11063:	jne    10f5b <__sprintf_chk@plt+0x65ab>
   11069:	mov    edi,ebp
   1106b:	call   9f10 <isatty@plt>
   11070:	test   eax,eax
   11072:	je     10f5b <__sprintf_chk@plt+0x65ab>
   11078:	mov    rax,QWORD PTR [rip+0x6e489]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1107f:	test   rax,rax
   11082:	je     11086 <__sprintf_chk@plt+0x66d6>
   11084:	call   rax
   11086:	mov    edx,0x5
   1108b:	test   ebp,ebp
   1108d:	jne    11b78 <__sprintf_chk@plt+0x71c8>
   11093:	lea    rsi,[rip+0x5276e]        # 63808 <_obstack_memory_used@@Base+0x16b88>
   1109a:	xor    edi,edi
   1109c:	call   a040 <dcgettext@plt>
   110a1:	mov    rdx,rax
   110a4:	jmp    11415 <__sprintf_chk@plt+0x6a65>
   110a9:	lea    rsi,[rip+0x6e550]        # 7f600 <obstack_alloc_failed_handler@@Base+0x7c8>
   110b0:	call   a920 <fstat@plt>
   110b5:	mov    r12d,eax
   110b8:	test   eax,eax
   110ba:	jne    1183c <__sprintf_chk@plt+0x6e8c>
   110c0:	mov    rax,QWORD PTR [rip+0x6e209]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   110c7:	lea    rbp,[rip+0x53042]        # 64110 <_obstack_memory_used@@Base+0x17490>
   110ce:	mov    rsi,rbp
   110d1:	mov    rdi,QWORD PTR [rax]
   110d4:	call   a320 <strcmp@plt>
   110d9:	test   eax,eax
   110db:	jne    11356 <__sprintf_chk@plt+0x69a6>
   110e1:	mov    eax,DWORD PTR [rip+0x6e531]        # 7f618 <obstack_alloc_failed_handler@@Base+0x7e0>
   110e7:	mov    r12d,0x1
   110ed:	and    eax,0xf000
   110f2:	mov    BYTE PTR [rip+0x6e427],r12b        # 7f520 <obstack_alloc_failed_handler@@Base+0x6e8>
   110f9:	cmp    eax,0x8000
   110fe:	jne    10ff0 <__sprintf_chk@plt+0x6640>
   11104:	mov    rax,QWORD PTR [rip+0x6e4f5]        # 7f600 <obstack_alloc_failed_handler@@Base+0x7c8>
   1110b:	mov    QWORD PTR [rip+0x6df7e],rax        # 7f090 <obstack_alloc_failed_handler@@Base+0x258>
   11112:	mov    rax,QWORD PTR [rip+0x6e4ef]        # 7f608 <obstack_alloc_failed_handler@@Base+0x7d0>
   11119:	mov    QWORD PTR [rip+0x6df68],rax        # 7f088 <obstack_alloc_failed_handler@@Base+0x250>
   11120:	jmp    10ffb <__sprintf_chk@plt+0x664b>
   11125:	mov    esi,0x1
   1112a:	mov    edi,0xd
   1112f:	call   a330 <signal@plt>
   11134:	lea    rdi,[rsp+0x8]
   11139:	call   28240 <__sprintf_chk@plt+0x1d890>
   1113e:	call   281f0 <__sprintf_chk@plt+0x1d840>
   11143:	mov    ebp,eax
   11145:	test   eax,eax
   11147:	jg     11244 <__sprintf_chk@plt+0x6894>
   1114d:	mov    edx,0x5
   11152:	lea    rsi,[rip+0x52160]        # 632b9 <_obstack_memory_used@@Base+0x16639>
   11159:	xor    edi,edi
   1115b:	call   a040 <dcgettext@plt>
   11160:	mov    rdi,rax
   11163:	call   4a140 <argp_usage@@Base+0x6dc0>
   11168:	mov    edi,0xd
   1116d:	xor    esi,esi
   1116f:	call   a330 <signal@plt>
   11174:	mov    edi,DWORD PTR [rsp+0x8]
   11178:	test   edi,edi
   1117a:	je     11183 <__sprintf_chk@plt+0x67d3>
   1117c:	xor    esi,esi
   1117e:	call   339c0 <__sprintf_chk@plt+0x29010>
   11183:	mov    edi,DWORD PTR [rsp+0xc]
   11187:	call   ed20 <__sprintf_chk@plt+0x4370>
   1118c:	cmp    BYTE PTR [rip+0x6e12d],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   11193:	mov    rbx,QWORD PTR [rip+0x6e136]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   1119a:	jne    111d2 <__sprintf_chk@plt+0x6822>
   1119c:	mov    rbp,QWORD PTR [rbx]
   1119f:	mov    esi,0x3a
   111a4:	mov    rdi,rbp
   111a7:	call   a0f0 <strchr@plt>
   111ac:	test   rax,rax
   111af:	je     111d2 <__sprintf_chk@plt+0x6822>
   111b1:	cmp    rbp,rax
   111b4:	jae    111d2 <__sprintf_chk@plt+0x6822>
   111b6:	sub    rax,rbp
   111b9:	mov    esi,0x2f
   111be:	mov    rdi,rbp
   111c1:	mov    rdx,rax
   111c4:	call   a280 <memchr@plt>
   111c9:	test   rax,rax
   111cc:	je     1143c <__sprintf_chk@plt+0x6a8c>
   111d2:	mov    rdi,QWORD PTR [rbx]
   111d5:	call   33720 <__sprintf_chk@plt+0x28d70>
   111da:	test   eax,eax
   111dc:	je     1143c <__sprintf_chk@plt+0x6a8c>
   111e2:	cmp    BYTE PTR [rip+0x6e0c3],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   111e9:	jne    11607 <__sprintf_chk@plt+0x6c57>
   111ef:	mov    rax,QWORD PTR [rip+0x6e0da]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   111f6:	lea    rsi,[rip+0x55541]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   111fd:	mov    rbp,QWORD PTR [rax]
   11200:	mov    rdi,rbp
   11203:	call   a320 <strcmp@plt>
   11208:	test   eax,eax
   1120a:	je     11238 <__sprintf_chk@plt+0x6888>
   1120c:	mov    rdi,rbp
   1120f:	mov    esi,0x1b6
   11214:	call   a7e0 <creat@plt>
   11219:	mov    DWORD PTR [rip+0x6e341],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   1121f:	mov    edi,eax
   11221:	test   eax,eax
   11223:	js     115df <__sprintf_chk@plt+0x6c2f>
   11229:	cmp    eax,0x1
   1122c:	je     11238 <__sprintf_chk@plt+0x6888>
   1122e:	mov    esi,0x1
   11233:	call   339c0 <__sprintf_chk@plt+0x29010>
   11238:	mov    rdi,QWORD PTR [rip+0x6e329]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   1123f:	call   336c0 <__sprintf_chk@plt+0x28d10>
   11244:	mov    eax,DWORD PTR [rsp+0xc]
   11248:	mov    edi,DWORD PTR [rsp+0x8]
   1124c:	mov    DWORD PTR [rip+0x6e30e],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   11252:	call   ed20 <__sprintf_chk@plt+0x4370>
   11257:	cmp    QWORD PTR [rip+0x6de41],0x0        # 7f0a0 <obstack_alloc_failed_handler@@Base+0x268>
   1125f:	mov    DWORD PTR [rip+0x6e443],ebp        # 7f6a8 <obstack_alloc_failed_handler@@Base+0x870>
   11265:	jne    10fb5 <__sprintf_chk@plt+0x6605>
   1126b:	mov    rax,QWORD PTR [rip+0x6e05e]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   11272:	lea    rsi,[rip+0x554c5]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   11279:	mov    rdi,QWORD PTR [rax]
   1127c:	call   a320 <strcmp@plt>
   11281:	test   eax,eax
   11283:	jne    10fb5 <__sprintf_chk@plt+0x6605>
   11289:	mov    rax,QWORD PTR [rip+0x6ad58]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   11290:	mov    rax,QWORD PTR [rax]
   11293:	mov    QWORD PTR [rip+0x6ddfe],rax        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   1129a:	jmp    10fb5 <__sprintf_chk@plt+0x6605>
   1129f:	sub    ebx,0x1
   112a2:	mov    rdi,QWORD PTR [rip+0x6dfef]        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
   112a9:	mov    QWORD PTR [rip+0x6de1c],0x0        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   112b4:	jne    1100c <__sprintf_chk@plt+0x665c>
   112ba:	test   rdi,rdi
   112bd:	je     1101b <__sprintf_chk@plt+0x666b>
   112c3:	cmp    BYTE PTR [rip+0x6e2e6],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   112ca:	je     11425 <__sprintf_chk@plt+0x6a75>
   112d0:	call   10d90 <__sprintf_chk@plt+0x63e0>
   112d5:	jmp    1101b <__sprintf_chk@plt+0x666b>
   112da:	mov    r13,QWORD PTR [r12]
   112de:	lea    rsi,[rip+0x55459]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   112e5:	mov    rdi,r13
   112e8:	call   a320 <strcmp@plt>
   112ed:	mov    r12d,eax
   112f0:	test   eax,eax
   112f2:	jne    11379 <__sprintf_chk@plt+0x69c9>
   112f8:	cmp    BYTE PTR [rip+0x6e1d9],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   112ff:	mov    BYTE PTR [rip+0x6e3f2],0x1        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
   11306:	jne    11a12 <__sprintf_chk@plt+0x7062>
   1130c:	cmp    ebx,0x1
   1130f:	je     11619 <__sprintf_chk@plt+0x6c69>
   11315:	mov    DWORD PTR [rip+0x6e241],0x0        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   1131f:	cmp    ebx,0x2
   11322:	jne    11755 <__sprintf_chk@plt+0x6da5>
   11328:	mov    rax,QWORD PTR [rip+0x6e259]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1132f:	cmp    QWORD PTR [rip+0x6dd69],0x0        # 7f0a0 <obstack_alloc_failed_handler@@Base+0x268>
   11337:	mov    BYTE PTR [rip+0x6dd9a],0x1        # 7f0d8 <obstack_alloc_failed_handler@@Base+0x2a0>
   1133e:	mov    QWORD PTR [rip+0x6e23b],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   11345:	je     11631 <__sprintf_chk@plt+0x6c81>
   1134b:	mov    edi,DWORD PTR [rip+0x6e20f]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   11351:	jmp    10fc3 <__sprintf_chk@plt+0x6613>
   11356:	mov    eax,DWORD PTR [rip+0x6e2bc]        # 7f618 <obstack_alloc_failed_handler@@Base+0x7e0>
   1135c:	mov    edx,eax
   1135e:	and    edx,0xf000
   11364:	cmp    edx,0x2000
   1136a:	je     11528 <__sprintf_chk@plt+0x6b78>
   11370:	and    r12d,0x1
   11374:	jmp    110ed <__sprintf_chk@plt+0x673d>
   11379:	cmp    ebx,0x1
   1137c:	je     117b4 <__sprintf_chk@plt+0x6e04>
   11382:	cmp    ebx,0x2
   11385:	jne    11674 <__sprintf_chk@plt+0x6cc4>
   1138b:	cmp    BYTE PTR [rip+0x6df2e],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   11392:	jne    113c7 <__sprintf_chk@plt+0x6a17>
   11394:	mov    esi,0x3a
   11399:	mov    rdi,r13
   1139c:	call   a0f0 <strchr@plt>
   113a1:	cmp    r13,rax
   113a4:	jae    113c7 <__sprintf_chk@plt+0x6a17>
   113a6:	test   rax,rax
   113a9:	je     113c7 <__sprintf_chk@plt+0x6a17>
   113ab:	sub    rax,r13
   113ae:	mov    esi,0x2f
   113b3:	mov    rdi,r13
   113b6:	mov    rdx,rax
   113b9:	call   a280 <memchr@plt>
   113be:	test   rax,rax
   113c1:	je     11991 <__sprintf_chk@plt+0x6fe1>
   113c7:	mov    edx,0x1b6
   113cc:	mov    esi,0x42
   113d1:	mov    rdi,r13
   113d4:	xor    eax,eax
   113d6:	call   a690 <open@plt>
   113db:	xor    edi,edi
   113dd:	mov    DWORD PTR [rip+0x6e17d],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   113e3:	call   f520 <__sprintf_chk@plt+0x4b70>
   113e8:	cmp    eax,0x1
   113eb:	jbe    10fb5 <__sprintf_chk@plt+0x6605>
   113f1:	mov    rax,QWORD PTR [rip+0x6e110]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   113f8:	test   rax,rax
   113fb:	je     113ff <__sprintf_chk@plt+0x6a4f>
   113fd:	call   rax
   113ff:	mov    edx,0x5
   11404:	lea    rsi,[rip+0x52505]        # 63910 <_obstack_memory_used@@Base+0x16c90>
   1140b:	xor    edi,edi
   1140d:	call   a040 <dcgettext@plt>
   11412:	mov    rdx,rax
   11415:	xor    esi,esi
   11417:	xor    edi,edi
   11419:	xor    eax,eax
   1141b:	call   a640 <error@plt>
   11420:	call   190e0 <__sprintf_chk@plt+0xe730>
   11425:	cmp    DWORD PTR [rip+0x6de78],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1142c:	je     11859 <__sprintf_chk@plt+0x6ea9>
   11432:	call   10c20 <__sprintf_chk@plt+0x6270>
   11437:	jmp    1101b <__sprintf_chk@plt+0x666b>
   1143c:	lea    rdi,[rsp+0x10]
   11441:	call   28240 <__sprintf_chk@plt+0x1d890>
   11446:	call   281f0 <__sprintf_chk@plt+0x1d840>
   1144b:	mov    ebp,eax
   1144d:	test   eax,eax
   1144f:	je     11a60 <__sprintf_chk@plt+0x70b0>
   11455:	mov    edi,DWORD PTR [rsp+0x10]
   11459:	test   edi,edi
   1145b:	jne    1156d <__sprintf_chk@plt+0x6bbd>
   11461:	mov    edi,DWORD PTR [rsp+0x14]
   11465:	call   ed20 <__sprintf_chk@plt+0x4370>
   1146a:	mov    rax,QWORD PTR [rip+0x6de5f]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   11471:	lea    rsi,[rip+0x552c6]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   11478:	mov    r12,QWORD PTR [rax]
   1147b:	mov    rdi,r12
   1147e:	call   a320 <strcmp@plt>
   11483:	test   eax,eax
   11485:	jne    11579 <__sprintf_chk@plt+0x6bc9>
   1148b:	mov    DWORD PTR [rip+0x6e0cb],0x1        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   11495:	mov    rdx,QWORD PTR [rip+0x6e0b4]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   1149c:	nop    DWORD PTR [rax+0x0]
   114a0:	mov    r12,QWORD PTR [rip+0x6e0e1]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   114a7:	test   rdx,rdx
   114aa:	je     1166d <__sprintf_chk@plt+0x6cbd>
   114b0:	xor    ebx,ebx
   114b2:	jmp    114ce <__sprintf_chk@plt+0x6b1e>
   114b4:	nop    DWORD PTR [rax+0x0]
   114b8:	mov    rdx,QWORD PTR [rip+0x6e091]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   114bf:	add    rbx,rax
   114c2:	add    r12,rax
   114c5:	cmp    rdx,rbx
   114c8:	jbe    11650 <__sprintf_chk@plt+0x6ca0>
   114ce:	sub    rdx,rbx
   114d1:	xor    edi,edi
   114d3:	mov    rsi,r12
   114d6:	call   4b7c0 <argp_usage@@Base+0x8440>
   114db:	cmp    rax,0xffffffffffffffff
   114df:	je     118ee <__sprintf_chk@plt+0x6f3e>
   114e5:	test   rax,rax
   114e8:	jne    114b8 <__sprintf_chk@plt+0x6b08>
   114ea:	test   rbx,rbx
   114ed:	je     1166d <__sprintf_chk@plt+0x6cbd>
   114f3:	mov    rdx,QWORD PTR [rip+0x6e056]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   114fa:	mov    rdi,QWORD PTR [rip+0x6e087]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   11501:	xor    esi,esi
   11503:	add    rdi,rbx
   11506:	sub    rdx,rbx
   11509:	call   a1b0 <memset@plt>
   1150e:	call   33790 <__sprintf_chk@plt+0x28de0>
   11513:	cmp    rax,QWORD PTR [rip+0x6e036]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   1151a:	mov    rdi,rax
   1151d:	je     1166d <__sprintf_chk@plt+0x6cbd>
   11523:	call   ebd0 <__sprintf_chk@plt+0x4220>
   11528:	lea    rsi,[rsp+0x10]
   1152d:	mov    rdi,rbp
   11530:	call   a400 <stat@plt>
   11535:	test   eax,eax
   11537:	mov    eax,DWORD PTR [rip+0x6e0db]        # 7f618 <obstack_alloc_failed_handler@@Base+0x7e0>
   1153d:	jne    11370 <__sprintf_chk@plt+0x69c0>
   11543:	mov    rcx,QWORD PTR [rsp+0x10]
   11548:	cmp    QWORD PTR [rip+0x6e0b1],rcx        # 7f600 <obstack_alloc_failed_handler@@Base+0x7c8>
   1154f:	jne    11370 <__sprintf_chk@plt+0x69c0>
   11555:	xor    r12d,r12d
   11558:	mov    rcx,QWORD PTR [rsp+0x18]
   1155d:	cmp    QWORD PTR [rip+0x6e0a4],rcx        # 7f608 <obstack_alloc_failed_handler@@Base+0x7d0>
   11564:	sete   r12b
   11568:	jmp    11370 <__sprintf_chk@plt+0x69c0>
   1156d:	xor    esi,esi
   1156f:	call   339c0 <__sprintf_chk@plt+0x29010>
   11574:	jmp    11461 <__sprintf_chk@plt+0x6ab1>
   11579:	cmp    BYTE PTR [rip+0x6dd40],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   11580:	jne    115b5 <__sprintf_chk@plt+0x6c05>
   11582:	mov    esi,0x3a
   11587:	mov    rdi,r12
   1158a:	call   a0f0 <strchr@plt>
   1158f:	cmp    r12,rax
   11592:	jae    115b5 <__sprintf_chk@plt+0x6c05>
   11594:	test   rax,rax
   11597:	je     115b5 <__sprintf_chk@plt+0x6c05>
   11599:	sub    rax,r12
   1159c:	mov    esi,0x2f
   115a1:	mov    rdi,r12
   115a4:	mov    rdx,rax
   115a7:	call   a280 <memchr@plt>
   115ac:	test   rax,rax
   115af:	je     119aa <__sprintf_chk@plt+0x6ffa>
   115b5:	mov    esi,0x1b6
   115ba:	mov    rdi,r12
   115bd:	call   a7e0 <creat@plt>
   115c2:	mov    DWORD PTR [rip+0x6df98],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   115c8:	test   eax,eax
   115ca:	jns    11495 <__sprintf_chk@plt+0x6ae5>
   115d0:	mov    rax,QWORD PTR [rip+0x6dcf9]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   115d7:	mov    rdi,QWORD PTR [rax]
   115da:	call   3c420 <__sprintf_chk@plt+0x31a70>
   115df:	call   9e40 <__errno_location@plt>
   115e4:	cmp    BYTE PTR [rip+0x6dcc1],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   115eb:	mov    ebp,DWORD PTR [rax]
   115ed:	mov    rbx,rax
   115f0:	jne    11901 <__sprintf_chk@plt+0x6f51>
   115f6:	mov    rax,QWORD PTR [rip+0x6dcd3]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   115fd:	mov    DWORD PTR [rbx],ebp
   115ff:	mov    rdi,QWORD PTR [rax]
   11602:	call   3c420 <__sprintf_chk@plt+0x31a70>
   11607:	mov    rdi,QWORD PTR [rbx]
   1160a:	mov    esi,0x1
   1160f:	call   25c20 <__sprintf_chk@plt+0x1b270>
   11614:	jmp    111ef <__sprintf_chk@plt+0x683f>
   11619:	cmp    QWORD PTR [rip+0x6da7f],0x0        # 7f0a0 <obstack_alloc_failed_handler@@Base+0x268>
   11621:	mov    DWORD PTR [rip+0x6df35],0x1        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   1162b:	jne    1134b <__sprintf_chk@plt+0x699b>
   11631:	mov    rax,QWORD PTR [rip+0x6a9b0]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   11638:	mov    rax,QWORD PTR [rax]
   1163b:	mov    QWORD PTR [rip+0x6da56],rax        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   11642:	jmp    1134b <__sprintf_chk@plt+0x699b>
   11647:	nop    WORD PTR [rax+rax*1+0x0]
   11650:	call   33790 <__sprintf_chk@plt+0x28de0>
   11655:	mov    rdx,QWORD PTR [rip+0x6def4]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   1165c:	cmp    rax,rdx
   1165f:	je     114a0 <__sprintf_chk@plt+0x6af0>
   11665:	mov    rdi,rax
   11668:	jmp    11523 <__sprintf_chk@plt+0x6b73>
   1166d:	mov    edi,ebp
   1166f:	call   33940 <__sprintf_chk@plt+0x28f90>
   11674:	cmp    BYTE PTR [rip+0x6dc45],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   1167b:	jne    116b0 <__sprintf_chk@plt+0x6d00>
   1167d:	mov    esi,0x3a
   11682:	mov    rdi,r13
   11685:	call   a0f0 <strchr@plt>
   1168a:	test   rax,rax
   1168d:	je     116b0 <__sprintf_chk@plt+0x6d00>
   1168f:	cmp    r13,rax
   11692:	jae    116b0 <__sprintf_chk@plt+0x6d00>
   11694:	sub    rax,r13
   11697:	mov    esi,0x2f
   1169c:	mov    rdi,r13
   1169f:	mov    rdx,rax
   116a2:	call   a280 <memchr@plt>
   116a7:	test   rax,rax
   116aa:	je     11979 <__sprintf_chk@plt+0x6fc9>
   116b0:	mov    rdi,r13
   116b3:	mov    edx,0x1b6
   116b8:	xor    esi,esi
   116ba:	xor    eax,eax
   116bc:	call   a690 <open@plt>
   116c1:	mov    edi,eax
   116c3:	mov    DWORD PTR [rip+0x6de97],edi        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   116c9:	cmp    edi,0xffffffff
   116cc:	je     11742 <__sprintf_chk@plt+0x6d92>
   116ce:	cmp    BYTE PTR [rip+0x6dedb],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   116d5:	jne    11715 <__sprintf_chk@plt+0x6d65>
   116d7:	cmp    QWORD PTR [rip+0x6de89],0x0        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   116df:	je     11915 <__sprintf_chk@plt+0x6f65>
   116e5:	cmp    edi,0x3fffffff
   116eb:	jle    1190b <__sprintf_chk@plt+0x6f5b>
   116f1:	sub    edi,0x40000000
   116f7:	call   3caf0 <__sprintf_chk@plt+0x32140>
   116fc:	mov    BYTE PTR [rip+0x6de31],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   11703:	call   33ab0 <__sprintf_chk@plt+0x29100>
   11708:	mov    BYTE PTR [rip+0x6dfe9],0x1        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
   1170f:	mov    DWORD PTR [rip+0x6df93],eax        # 7f6a8 <obstack_alloc_failed_handler@@Base+0x870>
   11715:	mov    rax,QWORD PTR [rip+0x6de6c]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1171c:	mov    QWORD PTR [rip+0x6de31],0x0        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
   11727:	mov    QWORD PTR [rip+0x6de52],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1172e:	mov    eax,DWORD PTR [rip+0x6de2c]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   11734:	mov    DWORD PTR [rip+0x6de26],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   1173a:	test   eax,eax
   1173c:	jns    118cd <__sprintf_chk@plt+0x6f1d>
   11742:	call   9e40 <__errno_location@plt>
   11747:	mov    r12d,DWORD PTR [rax]
   1174a:	mov    rbx,rax
   1174d:	mov    DWORD PTR [rbx],r12d
   11750:	jmp    115d0 <__sprintf_chk@plt+0x6c20>
   11755:	lea    rdi,[rsp+0x7]
   1175a:	call   f520 <__sprintf_chk@plt+0x4b70>
   1175f:	mov    r13d,eax
   11762:	cmp    eax,0x1
   11765:	ja     11a31 <__sprintf_chk@plt+0x7081>
   1176b:	cmp    BYTE PTR [rsp+0x7],0x0
   11770:	je     10fb5 <__sprintf_chk@plt+0x6605>
   11776:	mov    rax,QWORD PTR [rip+0x6dd8b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1177d:	test   rax,rax
   11780:	je     11784 <__sprintf_chk@plt+0x6dd4>
   11782:	call   rax
   11784:	mov    edx,0x5
   11789:	lea    rsi,[rip+0x52158]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   11790:	xor    edi,edi
   11792:	call   a040 <dcgettext@plt>
   11797:	xor    esi,esi
   11799:	xor    edi,edi
   1179b:	mov    rdx,rax
   1179e:	xor    eax,eax
   117a0:	call   a640 <error@plt>
   117a5:	mov    DWORD PTR [rip+0x6d915],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   117af:	jmp    10fb5 <__sprintf_chk@plt+0x6605>
   117b4:	xor    ebp,ebp
   117b6:	cmp    BYTE PTR [rip+0x6daef],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   117bd:	jne    118d7 <__sprintf_chk@plt+0x6f27>
   117c3:	mov    rdx,QWORD PTR [rip+0x6db06]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   117ca:	cmp    BYTE PTR [rip+0x6dd07],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   117d1:	movzx  eax,BYTE PTR [rip+0x6dae8]        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   117d8:	mov    r12,QWORD PTR [rdx]
   117db:	je     11882 <__sprintf_chk@plt+0x6ed2>
   117e1:	test   al,al
   117e3:	jne    11818 <__sprintf_chk@plt+0x6e68>
   117e5:	mov    esi,0x3a
   117ea:	mov    rdi,r12
   117ed:	call   a0f0 <strchr@plt>
   117f2:	test   rax,rax
   117f5:	je     11818 <__sprintf_chk@plt+0x6e68>
   117f7:	cmp    r12,rax
   117fa:	jae    11818 <__sprintf_chk@plt+0x6e68>
   117fc:	sub    rax,r12
   117ff:	mov    esi,0x2f
   11804:	mov    rdi,r12
   11807:	mov    rdx,rax
   1180a:	call   a280 <memchr@plt>
   1180f:	test   rax,rax
   11812:	je     11b42 <__sprintf_chk@plt+0x7192>
   11818:	mov    rdi,r12
   1181b:	mov    edx,0x1b6
   11820:	mov    esi,0x42
   11825:	xor    eax,eax
   11827:	call   a690 <open@plt>
   1182c:	mov    edi,eax
   1182e:	mov    DWORD PTR [rip+0x6dd2c],edi        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   11834:	test   edi,edi
   11836:	jns    10fc5 <__sprintf_chk@plt+0x6615>
   1183c:	call   9e40 <__errno_location@plt>
   11841:	mov    r12d,DWORD PTR [rax]
   11844:	mov    rbx,rax
   11847:	test   ebp,ebp
   11849:	je     1174d <__sprintf_chk@plt+0x6d9d>
   1184f:	call   264e0 <__sprintf_chk@plt+0x1bb30>
   11854:	jmp    1174d <__sprintf_chk@plt+0x6d9d>
   11859:	cmp    QWORD PTR [rip+0x6d9f7],0x0        # 7f258 <obstack_alloc_failed_handler@@Base+0x420>
   11861:	jne    1101b <__sprintf_chk@plt+0x666b>
   11867:	mov    rdx,rdi
   1186a:	lea    rsi,[rip+0x6d86f]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   11871:	lea    rdi,[rip+0x519fc]        # 63274 <_obstack_memory_used@@Base+0x165f4>
   11878:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   1187d:	jmp    1101b <__sprintf_chk@plt+0x666b>
   11882:	test   al,al
   11884:	jne    118b9 <__sprintf_chk@plt+0x6f09>
   11886:	mov    esi,0x3a
   1188b:	mov    rdi,r12
   1188e:	call   a0f0 <strchr@plt>
   11893:	cmp    r12,rax
   11896:	jae    118b9 <__sprintf_chk@plt+0x6f09>
   11898:	test   rax,rax
   1189b:	je     118b9 <__sprintf_chk@plt+0x6f09>
   1189d:	sub    rax,r12
   118a0:	mov    esi,0x2f
   118a5:	mov    rdi,r12
   118a8:	mov    rdx,rax
   118ab:	call   a280 <memchr@plt>
   118b0:	test   rax,rax
   118b3:	je     11b5d <__sprintf_chk@plt+0x71ad>
   118b9:	mov    rdi,r12
   118bc:	mov    esi,0x1b6
   118c1:	call   a7e0 <creat@plt>
   118c6:	mov    edi,eax
   118c8:	jmp    1182e <__sprintf_chk@plt+0x6e7e>
   118cd:	call   cf10 <__sprintf_chk@plt+0x2560>
   118d2:	jmp    1134b <__sprintf_chk@plt+0x699b>
   118d7:	mov    esi,0x1
   118dc:	mov    rdi,r13
   118df:	mov    ebp,0x1
   118e4:	call   25c20 <__sprintf_chk@plt+0x1b270>
   118e9:	jmp    117c3 <__sprintf_chk@plt+0x6e13>
   118ee:	mov    rsi,QWORD PTR [rip+0x6dc73]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   118f5:	lea    rdi,[rip+0x51c8d]        # 63589 <_obstack_memory_used@@Base+0x16909>
   118fc:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   11901:	call   264e0 <__sprintf_chk@plt+0x1bb30>
   11906:	jmp    115f6 <__sprintf_chk@plt+0x6c46>
   1190b:	call   a200 <close@plt>
   11910:	jmp    116fc <__sprintf_chk@plt+0x6d4c>
   11915:	lea    rdi,[rsp+0x7]
   1191a:	call   f520 <__sprintf_chk@plt+0x4b70>
   1191f:	test   eax,eax
   11921:	je     11ad6 <__sprintf_chk@plt+0x7126>
   11927:	cmp    eax,0x1
   1192a:	jne    119c3 <__sprintf_chk@plt+0x7013>
   11930:	cmp    BYTE PTR [rsp+0x7],0x0
   11935:	je     1172e <__sprintf_chk@plt+0x6d7e>
   1193b:	mov    rax,QWORD PTR [rip+0x6dbc6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   11942:	test   rax,rax
   11945:	je     11949 <__sprintf_chk@plt+0x6f99>
   11947:	call   rax
   11949:	mov    edx,0x5
   1194e:	lea    rsi,[rip+0x51f93]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   11955:	xor    edi,edi
   11957:	call   a040 <dcgettext@plt>
   1195c:	xor    esi,esi
   1195e:	xor    edi,edi
   11960:	mov    rdx,rax
   11963:	xor    eax,eax
   11965:	call   a640 <error@plt>
   1196a:	mov    DWORD PTR [rip+0x6d750],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   11974:	jmp    1172e <__sprintf_chk@plt+0x6d7e>
   11979:	mov    rdx,QWORD PTR [rip+0x6d930]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   11980:	mov    rdi,r13
   11983:	xor    esi,esi
   11985:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   1198a:	mov    edi,eax
   1198c:	jmp    116c3 <__sprintf_chk@plt+0x6d13>
   11991:	mov    rdx,QWORD PTR [rip+0x6d918]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   11998:	mov    esi,0x42
   1199d:	mov    rdi,r13
   119a0:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   119a5:	jmp    113db <__sprintf_chk@plt+0x6a2b>
   119aa:	mov    rdx,QWORD PTR [rip+0x6d8ff]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   119b1:	mov    esi,0x41
   119b6:	mov    rdi,r12
   119b9:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   119be:	jmp    115c2 <__sprintf_chk@plt+0x6c12>
   119c3:	mov    DWORD PTR [rip+0x6d6b7],eax        # 7f080 <obstack_alloc_failed_handler@@Base+0x248>
   119c9:	mov    edi,DWORD PTR [rip+0x6db91]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   119cf:	jmp    116e5 <__sprintf_chk@plt+0x6d35>
   119d4:	mov    rax,QWORD PTR [rip+0x6db2d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   119db:	test   rax,rax
   119de:	je     119e2 <__sprintf_chk@plt+0x7032>
   119e0:	call   rax
   119e2:	mov    edx,0x5
   119e7:	lea    rsi,[rip+0x518b5]        # 632a3 <_obstack_memory_used@@Base+0x16623>
   119ee:	jmp    1140b <__sprintf_chk@plt+0x6a5b>
   119f3:	mov    rax,QWORD PTR [rip+0x6db0e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   119fa:	test   rax,rax
   119fd:	je     11a01 <__sprintf_chk@plt+0x7051>
   119ff:	call   rax
   11a01:	mov    edx,0x5
   11a06:	lea    rsi,[rip+0x51878]        # 63285 <_obstack_memory_used@@Base+0x16605>
   11a0d:	jmp    1140b <__sprintf_chk@plt+0x6a5b>
   11a12:	mov    rax,QWORD PTR [rip+0x6daef]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   11a19:	test   rax,rax
   11a1c:	je     11a20 <__sprintf_chk@plt+0x7070>
   11a1e:	call   rax
   11a20:	mov    edx,0x5
   11a25:	lea    rsi,[rip+0x51e6c]        # 63898 <_obstack_memory_used@@Base+0x16c18>
   11a2c:	jmp    1140b <__sprintf_chk@plt+0x6a5b>
   11a31:	mov    rax,QWORD PTR [rip+0x6dad0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   11a38:	test   rax,rax
   11a3b:	je     11a3f <__sprintf_chk@plt+0x708f>
   11a3d:	call   rax
   11a3f:	lea    rdx,[rip+0x6a65a]        # 7c0a0 <_obstack_memory_used@@Base+0x2f420>
   11a46:	mov    rax,rdx
   11a49:	jmp    11a58 <__sprintf_chk@plt+0x70a8>
   11a4b:	add    rax,0x18
   11a4f:	cmp    r13d,ecx
   11a52:	je     11aa1 <__sprintf_chk@plt+0x70f1>
   11a54:	add    r12d,0x1
   11a58:	mov    ecx,DWORD PTR [rax]
   11a5a:	test   ecx,ecx
   11a5c:	jne    11a4b <__sprintf_chk@plt+0x709b>
   11a5e:	jmp    11aad <__sprintf_chk@plt+0x70fd>
   11a60:	mov    edx,0x5
   11a65:	lea    rsi,[rip+0x51859]        # 632c5 <_obstack_memory_used@@Base+0x16645>
   11a6c:	xor    edi,edi
   11a6e:	call   a040 <dcgettext@plt>
   11a73:	mov    rdi,rax
   11a76:	call   4a140 <argp_usage@@Base+0x6dc0>
   11a7b:	mov    edi,DWORD PTR [rsp+0x14]
   11a7f:	cmp    edi,0x1
   11a82:	je     11a8e <__sprintf_chk@plt+0x70de>
   11a84:	mov    esi,0x1
   11a89:	call   339c0 <__sprintf_chk@plt+0x29010>
   11a8e:	mov    edi,DWORD PTR [rsp+0x10]
   11a92:	call   ed20 <__sprintf_chk@plt+0x4370>
   11a97:	jmp    11238 <__sprintf_chk@plt+0x6888>
   11a9c:	call   a0a0 <__stack_chk_fail@plt>
   11aa1:	movsxd rax,r12d
   11aa4:	imul   rax,rax,0x18
   11aa8:	mov    r14,QWORD PTR [rdx+rax*1+0x10]
   11aad:	mov    edx,0x5
   11ab2:	lea    rsi,[rip+0x51e07]        # 638c0 <_obstack_memory_used@@Base+0x16c40>
   11ab9:	xor    edi,edi
   11abb:	call   a040 <dcgettext@plt>
   11ac0:	mov    rcx,r14
   11ac3:	xor    esi,esi
   11ac5:	xor    edi,edi
   11ac7:	mov    rdx,rax
   11aca:	xor    eax,eax
   11acc:	call   a640 <error@plt>
   11ad1:	call   190e0 <__sprintf_chk@plt+0xe730>
   11ad6:	cmp    BYTE PTR [rsp+0x7],0x0
   11adb:	je     11b16 <__sprintf_chk@plt+0x7166>
   11add:	mov    rax,QWORD PTR [rip+0x6da24]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   11ae4:	test   rax,rax
   11ae7:	je     11aeb <__sprintf_chk@plt+0x713b>
   11ae9:	call   rax
   11aeb:	mov    edx,0x5
   11af0:	lea    rsi,[rip+0x51df1]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   11af7:	xor    edi,edi
   11af9:	call   a040 <dcgettext@plt>
   11afe:	xor    esi,esi
   11b00:	xor    edi,edi
   11b02:	mov    rdx,rax
   11b05:	xor    eax,eax
   11b07:	call   a640 <error@plt>
   11b0c:	mov    DWORD PTR [rip+0x6d5ae],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   11b16:	mov    rax,QWORD PTR [rip+0x6d7b3]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   11b1d:	xor    esi,esi
   11b1f:	mov    rdi,QWORD PTR [rax]
   11b22:	call   33690 <__sprintf_chk@plt+0x28ce0>
   11b27:	mov    edi,DWORD PTR [rip+0x6da33]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   11b2d:	cmp    QWORD PTR [rip+0x6da33],0x0        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   11b35:	mov    eax,edi
   11b37:	jne    116e5 <__sprintf_chk@plt+0x6d35>
   11b3d:	jmp    11734 <__sprintf_chk@plt+0x6d84>
   11b42:	mov    rdx,QWORD PTR [rip+0x6d767]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   11b49:	mov    rdi,r12
   11b4c:	mov    esi,0x42
   11b51:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   11b56:	mov    edi,eax
   11b58:	jmp    1182e <__sprintf_chk@plt+0x6e7e>
   11b5d:	mov    rdx,QWORD PTR [rip+0x6d74c]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   11b64:	mov    rdi,r12
   11b67:	mov    esi,0x41
   11b6c:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   11b71:	mov    edi,eax
   11b73:	jmp    1182e <__sprintf_chk@plt+0x6e7e>
   11b78:	lea    rsi,[rip+0x51cd1]        # 63850 <_obstack_memory_used@@Base+0x16bd0>
   11b7f:	jmp    1140b <__sprintf_chk@plt+0x6a5b>
   11b84:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   11b8f:	nop
   11b90:	push   r15
   11b92:	mov    r15,rdi
   11b95:	mov    rdi,rsi
   11b98:	push   r14
   11b9a:	push   r13
   11b9c:	push   r12
   11b9e:	mov    r12,rsi
   11ba1:	push   rbp
   11ba2:	push   rbx
   11ba3:	mov    ebx,edx
   11ba5:	sub    rsp,0x8
   11ba9:	call   a060 <strlen@plt>
   11bae:	xor    edx,edx
   11bb0:	lea    rdi,[rip+0x5171f]        # 632d6 <_obstack_memory_used@@Base+0x16656>
   11bb7:	lea    rbp,[rax+0x1]
   11bbb:	mov    r13,rax
   11bbe:	mov    rsi,rbp
   11bc1:	call   10830 <__sprintf_chk@plt+0x5e80>
   11bc6:	mov    esi,DWORD PTR [rip+0x6d34c]        # 7ef18 <obstack_alloc_failed_handler@@Base+0xe0>
   11bcc:	mov    r14,rax
   11bcf:	test   esi,esi
   11bd1:	jne    11d4e <__sprintf_chk@plt+0x739e>
   11bd7:	cmp    BYTE PTR [rip+0x6d332],0x0        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   11bde:	je     11da6 <__sprintf_chk@plt+0x73f6>
   11be4:	movabs rax,0x20207261747375
   11bee:	mov    rsi,r14
   11bf1:	mov    rdi,r15
   11bf4:	mov    BYTE PTR [r14+0x9c],bl
   11bfb:	mov    QWORD PTR [r14+0x101],rax
   11c02:	mov    rdx,0xffffffffffffffff
   11c09:	call   10b40 <__sprintf_chk@plt+0x6190>
   11c0e:	mov    r14,QWORD PTR [rip+0x6d92b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11c15:	mov    rbx,QWORD PTR [rip+0x6d964]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   11c1c:	cmp    r14,rbx
   11c1f:	je     11e17 <__sprintf_chk@plt+0x7467>
   11c25:	sub    rbx,r14
   11c28:	cmp    rbp,rbx
   11c2b:	ja     11c44 <__sprintf_chk@plt+0x7294>
   11c2d:	jmp    11ce4 <__sprintf_chk@plt+0x7334>
   11c32:	nop    WORD PTR [rax+rax*1+0x0]
   11c38:	sub    rbx,r14
   11c3b:	cmp    rbp,rbx
   11c3e:	jbe    11ce0 <__sprintf_chk@plt+0x7330>
   11c44:	mov    rdx,rbx
   11c47:	mov    rsi,r12
   11c4a:	mov    rdi,r14
   11c4d:	add    r12,rbx
   11c50:	call   a420 <memcpy@plt>
   11c55:	lea    rax,[rbx-0x1]
   11c59:	mov    rdx,QWORD PTR [rip+0x6d8e0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11c60:	sub    rbp,rbx
   11c63:	and    rax,0xfffffffffffffe00
   11c69:	add    rax,r14
   11c6c:	cmp    rax,rdx
   11c6f:	jb     11c89 <__sprintf_chk@plt+0x72d9>
   11c71:	sub    rax,rdx
   11c74:	and    rax,0xfffffffffffffe00
   11c7a:	lea    rdx,[rdx+rax*1+0x200]
   11c82:	mov    QWORD PTR [rip+0x6d8b7],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11c89:	mov    rbx,QWORD PTR [rip+0x6d8f0]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   11c90:	cmp    rbx,rdx
   11c93:	jb     a9e9 <__sprintf_chk@plt+0x39>
   11c99:	mov    r14,QWORD PTR [rip+0x6d8a0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11ca0:	jne    11c38 <__sprintf_chk@plt+0x7288>
   11ca2:	xor    r14d,r14d
   11ca5:	cmp    BYTE PTR [rip+0x6d888],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   11cac:	jne    11c38 <__sprintf_chk@plt+0x7288>
   11cae:	call   f170 <__sprintf_chk@plt+0x47c0>
   11cb3:	mov    r14,QWORD PTR [rip+0x6d886]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11cba:	mov    rbx,QWORD PTR [rip+0x6d8bf]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   11cc1:	cmp    r14,rbx
   11cc4:	jne    11c38 <__sprintf_chk@plt+0x7288>
   11cca:	xor    r14d,r14d
   11ccd:	mov    BYTE PTR [rip+0x6d860],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   11cd4:	sub    rbx,r14
   11cd7:	cmp    rbp,rbx
   11cda:	ja     11c44 <__sprintf_chk@plt+0x7294>
   11ce0:	lea    r13,[rbp-0x1]
   11ce4:	mov    rdi,r14
   11ce7:	mov    rdx,rbp
   11cea:	mov    rsi,r12
   11ced:	sub    rbx,rbp
   11cf0:	call   a420 <memcpy@plt>
   11cf5:	lea    rdi,[r14+rbp*1]
   11cf9:	mov    rdx,rbx
   11cfc:	xor    esi,esi
   11cfe:	call   a1b0 <memset@plt>
   11d03:	and    r13,0xfffffffffffffe00
   11d0a:	mov    rax,QWORD PTR [rip+0x6d82f]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11d11:	add    r14,r13
   11d14:	cmp    r14,rax
   11d17:	jb     11d32 <__sprintf_chk@plt+0x7382>
   11d19:	sub    r14,rax
   11d1c:	and    r14,0xfffffffffffffe00
   11d23:	lea    rax,[rax+r14*1+0x200]
   11d2b:	mov    QWORD PTR [rip+0x6d80e],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11d32:	cmp    rax,QWORD PTR [rip+0x6d847]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   11d39:	ja     a9e9 <__sprintf_chk@plt+0x39>
   11d3f:	add    rsp,0x8
   11d43:	pop    rbx
   11d44:	pop    rbp
   11d45:	pop    r12
   11d47:	pop    r13
   11d49:	pop    r14
   11d4b:	pop    r15
   11d4d:	ret    
   11d4e:	movabs rcx,0x3030303030303030
   11d58:	mov    edx,0x3030
   11d5d:	mov    QWORD PTR [rax+0x88],rcx
   11d64:	mov    ecx,DWORD PTR [rip+0x6d1aa]        # 7ef14 <obstack_alloc_failed_handler@@Base+0xdc>
   11d6a:	mov    eax,0x3030
   11d6f:	mov    WORD PTR [r14+0x90],ax
   11d77:	mov    BYTE PTR [r14+0x92],0x30
   11d7f:	mov    BYTE PTR [r14+0x93],0x0
   11d87:	mov    DWORD PTR [r14+0x64],0x30303030
   11d8f:	mov    WORD PTR [r14+0x68],dx
   11d94:	mov    BYTE PTR [r14+0x6a],0x30
   11d99:	mov    BYTE PTR [r14+0x6b],0x0
   11d9e:	test   ecx,ecx
   11da0:	je     11bd7 <__sprintf_chk@plt+0x7227>
   11da6:	mov    rcx,QWORD PTR [rip+0x6d813]        # 7f5c0 <obstack_alloc_failed_handler@@Base+0x788>
   11dad:	test   rcx,rcx
   11db0:	je     11e52 <__sprintf_chk@plt+0x74a2>
   11db6:	xor    eax,eax
   11db8:	nop    DWORD PTR [rax+rax*1+0x0]
   11dc0:	movzx  edx,BYTE PTR [rcx+rax*1]
   11dc4:	mov    BYTE PTR [r14+rax*1+0x109],dl
   11dcc:	test   dl,dl
   11dce:	je     11dda <__sprintf_chk@plt+0x742a>
   11dd0:	add    rax,0x1
   11dd4:	cmp    rax,0x20
   11dd8:	jne    11dc0 <__sprintf_chk@plt+0x7410>
   11dda:	mov    BYTE PTR [r14+0x128],0x0
   11de2:	mov    rcx,QWORD PTR [rip+0x6d7cf]        # 7f5b8 <obstack_alloc_failed_handler@@Base+0x780>
   11de9:	xor    eax,eax
   11deb:	nop    DWORD PTR [rax+rax*1+0x0]
   11df0:	movzx  edx,BYTE PTR [rcx+rax*1]
   11df4:	mov    BYTE PTR [r14+rax*1+0x129],dl
   11dfc:	test   dl,dl
   11dfe:	je     11e0a <__sprintf_chk@plt+0x745a>
   11e00:	add    rax,0x1
   11e04:	cmp    rax,0x20
   11e08:	jne    11df0 <__sprintf_chk@plt+0x7440>
   11e0a:	mov    BYTE PTR [r14+0x148],0x0
   11e12:	jmp    11be4 <__sprintf_chk@plt+0x7234>
   11e17:	xor    r14d,r14d
   11e1a:	cmp    BYTE PTR [rip+0x6d713],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   11e21:	jne    11c25 <__sprintf_chk@plt+0x7275>
   11e27:	call   f170 <__sprintf_chk@plt+0x47c0>
   11e2c:	mov    r14,QWORD PTR [rip+0x6d70d]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   11e33:	mov    rbx,QWORD PTR [rip+0x6d746]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   11e3a:	cmp    r14,rbx
   11e3d:	jne    11c25 <__sprintf_chk@plt+0x7275>
   11e43:	mov    BYTE PTR [rip+0x6d6ea],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   11e4a:	xor    r14d,r14d
   11e4d:	jmp    11c25 <__sprintf_chk@plt+0x7275>
   11e52:	lea    rsi,[rip+0x6d767]        # 7f5c0 <obstack_alloc_failed_handler@@Base+0x788>
   11e59:	xor    edi,edi
   11e5b:	call   28260 <__sprintf_chk@plt+0x1d8b0>
   11e60:	lea    rsi,[rip+0x6d751]        # 7f5b8 <obstack_alloc_failed_handler@@Base+0x780>
   11e67:	xor    edi,edi
   11e69:	call   28360 <__sprintf_chk@plt+0x1d9b0>
   11e6e:	mov    rcx,QWORD PTR [rip+0x6d74b]        # 7f5c0 <obstack_alloc_failed_handler@@Base+0x788>
   11e75:	jmp    11db6 <__sprintf_chk@plt+0x7406>
   11e7a:	nop    WORD PTR [rax+rax*1+0x0]
   11e80:	endbr64 
   11e84:	push   r12
   11e86:	sub    rsp,0x10
   11e8a:	mov    ecx,DWORD PTR [rip+0x6d414]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   11e90:	cmp    ecx,0x6
   11e93:	ja     a9ee <__sprintf_chk@plt+0x3e>
   11e99:	mov    eax,0x1
   11e9e:	shl    rax,cl
   11ea1:	test   al,0x2a
   11ea3:	je     11f00 <__sprintf_chk@plt+0x7550>
   11ea5:	mov    rax,QWORD PTR [rip+0x6d65c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   11eac:	test   rax,rax
   11eaf:	je     11ebd <__sprintf_chk@plt+0x750d>
   11eb1:	mov    QWORD PTR [rsp+0x8],rdi
   11eb6:	call   rax
   11eb8:	mov    rdi,QWORD PTR [rsp+0x8]
   11ebd:	mov    rdi,QWORD PTR [rdi+0x18]
   11ec1:	call   4b670 <argp_usage@@Base+0x82f0>
   11ec6:	mov    edx,0x5
   11ecb:	lea    rsi,[rip+0x51a66]        # 63938 <_obstack_memory_used@@Base+0x16cb8>
   11ed2:	xor    edi,edi
   11ed4:	mov    r12,rax
   11ed7:	call   a040 <dcgettext@plt>
   11edc:	mov    rcx,r12
   11edf:	xor    esi,esi
   11ee1:	xor    edi,edi
   11ee3:	mov    rdx,rax
   11ee6:	xor    eax,eax
   11ee8:	call   a640 <error@plt>
   11eed:	mov    DWORD PTR [rip+0x6d1cd],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   11ef7:	add    rsp,0x10
   11efb:	pop    r12
   11efd:	ret    
   11efe:	xchg   ax,ax
   11f00:	test   al,0x44
   11f02:	je     11f20 <__sprintf_chk@plt+0x7570>
   11f04:	mov    rsi,QWORD PTR [rdi+0x18]
   11f08:	add    rsp,0x10
   11f0c:	mov    edx,0x4b
   11f11:	pop    r12
   11f13:	jmp    11b90 <__sprintf_chk@plt+0x71e0>
   11f18:	nop    DWORD PTR [rax+rax*1+0x0]
   11f20:	cmp    ecx,0x4
   11f23:	jne    a9ee <__sprintf_chk@plt+0x3e>
   11f29:	cmp    QWORD PTR [rdi+0x178],0x0
   11f31:	jne    11ef7 <__sprintf_chk@plt+0x7547>
   11f33:	add    rsp,0x10
   11f37:	mov    rsi,rdi
   11f3a:	lea    rdi,[rip+0x513a3]        # 632e4 <_obstack_memory_used@@Base+0x16664>
   11f41:	xor    edx,edx
   11f43:	pop    r12
   11f45:	jmp    1d4d0 <__sprintf_chk@plt+0x12b20>
   11f4a:	nop    WORD PTR [rax+rax*1+0x0]
   11f50:	endbr64 
   11f54:	push   r15
   11f56:	push   r14
   11f58:	push   r13
   11f5a:	push   r12
   11f5c:	push   rbp
   11f5d:	push   rbx
   11f5e:	mov    rbx,rdi
   11f61:	sub    rsp,0x38
   11f65:	mov    ebp,DWORD PTR [rip+0x6d339]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   11f6b:	mov    r14,QWORD PTR [rdi+0x8]
   11f6f:	mov    rax,QWORD PTR fs:0x28
   11f78:	mov    QWORD PTR [rsp+0x28],rax
   11f7d:	xor    eax,eax
   11f7f:	cmp    ebp,0x4
   11f82:	je     12840 <__sprintf_chk@plt+0x7e90>
   11f88:	mov    rdi,r14
   11f8b:	call   a060 <strlen@plt>
   11f90:	movsxd rdx,DWORD PTR [rip+0x6cf09]        # 7eea0 <obstack_alloc_failed_handler@@Base+0x68>
   11f97:	add    rdx,rax
   11f9a:	cmp    ebp,0x2
   11f9d:	je     11fc0 <__sprintf_chk@plt+0x7610>
   11f9f:	cmp    rdx,0x64
   11fa3:	jbe    11fca <__sprintf_chk@plt+0x761a>
   11fa5:	cmp    ebp,0x6
   11fa8:	ja     a9f3 <__sprintf_chk@plt+0x43>
   11fae:	lea    rcx,[rip+0x51fdb]        # 63f90 <_obstack_memory_used@@Base+0x17310>
   11fb5:	movsxd rdx,DWORD PTR [rcx+rbp*4]
   11fb9:	add    rdx,rcx
   11fbc:	notrack jmp rdx
   11fbf:	nop
   11fc0:	cmp    rdx,0x63
   11fc4:	ja     12970 <__sprintf_chk@plt+0x7fc0>
   11fca:	mov    rdi,rbx
   11fcd:	call   f640 <__sprintf_chk@plt+0x4c90>
   11fd2:	mov    r13,rax
   11fd5:	test   r13,r13
   11fd8:	je     12658 <__sprintf_chk@plt+0x7ca8>
   11fde:	mov    rdi,QWORD PTR [rip+0x6ced3]        # 7eeb8 <obstack_alloc_failed_handler@@Base+0x80>
   11fe5:	mov    eax,DWORD PTR [rbx+0x74]
   11fe8:	test   rdi,rdi
   11feb:	je     125d8 <__sprintf_chk@plt+0x7c28>
   11ff1:	lea    rsi,[rsp+0x10]
   11ff6:	mov    QWORD PTR [rsp+0x10],rax
   11ffb:	call   48bc0 <argp_usage@@Base+0x5840>
   12000:	test   rax,rax
   12003:	je     125d8 <__sprintf_chk@plt+0x7c28>
   12009:	mov    rdx,QWORD PTR [rax+0x8]
   1200d:	mov    rdi,QWORD PTR [rip+0x6cebc]        # 7eed0 <obstack_alloc_failed_handler@@Base+0x98>
   12014:	mov    r12,QWORD PTR [rax+0x10]
   12018:	mov    eax,DWORD PTR [rbx+0x78]
   1201b:	mov    DWORD PTR [rbx+0x74],edx
   1201e:	test   rdi,rdi
   12021:	je     12600 <__sprintf_chk@plt+0x7c50>
   12027:	lea    rsi,[rsp+0x10]
   1202c:	mov    QWORD PTR [rsp+0x10],rax
   12031:	call   48bc0 <argp_usage@@Base+0x5840>
   12036:	test   rax,rax
   12039:	je     12600 <__sprintf_chk@plt+0x7c50>
   1203f:	mov    rdx,QWORD PTR [rax+0x8]
   12043:	mov    rbp,QWORD PTR [rax+0x10]
   12047:	mov    rax,QWORD PTR [rip+0x6ceba]        # 7ef08 <obstack_alloc_failed_handler@@Base+0xd0>
   1204e:	mov    DWORD PTR [rbx+0x78],edx
   12051:	mov    edx,DWORD PTR [rbx+0x70]
   12054:	test   rax,rax
   12057:	je     12187 <__sprintf_chk@plt+0x77d7>
   1205d:	mov    esi,edx
   1205f:	mov    r11d,edx
   12062:	movzx  ecx,BYTE PTR [rax+0x1]
   12066:	mov    edi,edx
   12068:	and    esi,0xf000
   1206e:	and    r11d,0xfffff000
   12075:	mov    r10d,DWORD PTR [rip+0x6ce88]        # 7ef04 <obstack_alloc_failed_handler@@Base+0xcc>
   1207c:	cmp    esi,0x4000
   12082:	sete   r9b
   12086:	and    edi,0xfff
   1208c:	test   cl,cl
   1208e:	je     12184 <__sprintf_chk@plt+0x77d4>
   12094:	cmp    esi,0x4000
   1209a:	mov    r8d,0xc00
   120a0:	mov    edx,0x0
   120a5:	movzx  r9d,r9b
   120a9:	cmovne r8d,edx
   120ad:	jmp    120e8 <__sprintf_chk@plt+0x7738>
   120af:	nop
   120b0:	mov    ecx,r10d
   120b3:	or     ecx,edx
   120b5:	not    ecx
   120b7:	and    ecx,r15d
   120ba:	cmp    r14b,0x2d
   120be:	je     126f0 <__sprintf_chk@plt+0x7d40>
   120c4:	cmp    r14b,0x3d
   120c8:	je     12169 <__sprintf_chk@plt+0x77b9>
   120ce:	cmp    r14b,0x2b
   120d2:	je     126e0 <__sprintf_chk@plt+0x7d30>
   120d8:	movzx  ecx,BYTE PTR [rax+0x11]
   120dc:	add    rax,0x10
   120e0:	test   cl,cl
   120e2:	je     1217f <__sprintf_chk@plt+0x77cf>
   120e8:	mov    edx,DWORD PTR [rax+0xc]
   120eb:	mov    esi,DWORD PTR [rax+0x4]
   120ee:	mov    r15d,DWORD PTR [rax+0x8]
   120f2:	not    edx
   120f4:	and    edx,r8d
   120f7:	cmp    cl,0x2
   120fa:	je     126c0 <__sprintf_chk@plt+0x7d10>
   12100:	cmp    cl,0x3
   12103:	jne    1213c <__sprintf_chk@plt+0x778c>
   12105:	and    r15d,edi
   12108:	mov    ecx,r15d
   1210b:	and    ecx,0x124
   12111:	neg    ecx
   12113:	sbb    ecx,ecx
   12115:	and    ecx,0x124
   1211b:	mov    r14d,ecx
   1211e:	or     r14b,0x92
   12122:	test   r15b,0x92
   12126:	cmovne ecx,r14d
   1212a:	mov    r14d,ecx
   1212d:	or     r14d,0x49
   12131:	test   r15b,0x49
   12135:	cmovne ecx,r14d
   12139:	or     r15d,ecx
   1213c:	movzx  r14d,BYTE PTR [rax]
   12140:	test   esi,esi
   12142:	je     120b0 <__sprintf_chk@plt+0x7700>
   12148:	mov    ecx,edx
   1214a:	not    ecx
   1214c:	and    ecx,esi
   1214e:	and    ecx,r15d
   12151:	cmp    r14b,0x2d
   12155:	je     126f0 <__sprintf_chk@plt+0x7d40>
   1215b:	cmp    r14b,0x3d
   1215f:	jne    120ce <__sprintf_chk@plt+0x771e>
   12165:	not    esi
   12167:	or     edx,esi
   12169:	and    edx,edi
   1216b:	add    rax,0x10
   1216f:	mov    edi,edx
   12171:	or     edi,ecx
   12173:	movzx  ecx,BYTE PTR [rax+0x1]
   12177:	test   cl,cl
   12179:	jne    120e8 <__sprintf_chk@plt+0x7738>
   1217f:	mov    edx,r11d
   12182:	or     edx,edi
   12184:	mov    DWORD PTR [rbx+0x70],edx
   12187:	mov    eax,DWORD PTR [rip+0x6d117]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1218d:	lea    r9,[r13+0x64]
   12191:	mov    ecx,eax
   12193:	and    ecx,0xfffffffd
   12196:	cmp    ecx,0x1
   12199:	je     12688 <__sprintf_chk@plt+0x7cd8>
   1219f:	lea    ecx,[rax-0x2]
   121a2:	cmp    ecx,0x2
   121a5:	jbe    12800 <__sprintf_chk@plt+0x7e50>
   121ab:	cmp    eax,0x6
   121ae:	je     12800 <__sprintf_chk@plt+0x7e50>
   121b4:	mov    r10d,edx
   121b7:	cmp    edx,0x1fffff
   121bd:	jbe    1280a <__sprintf_chk@plt+0x7e5a>
   121c3:	lea    rax,[rip+0x51123]        # 632ed <_obstack_memory_used@@Base+0x1666d>
   121ca:	xor    r8d,r8d
   121cd:	xor    edi,edi
   121cf:	mov    rdx,r10
   121d2:	push   rax
   121d3:	mov    ecx,0x4
   121d8:	xor    esi,esi
   121da:	push   0x8
   121dc:	call   10400 <__sprintf_chk@plt+0x5a50>
   121e1:	pop    rdi
   121e2:	pop    r8
   121e4:	mov    eax,DWORD PTR [rip+0x6d0ba]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   121ea:	mov    edx,DWORD PTR [rbx+0x74]
   121ed:	lea    r9,[r13+0x6c]
   121f1:	cmp    eax,0x4
   121f4:	jne    12202 <__sprintf_chk@plt+0x7852>
   121f6:	cmp    edx,0x1fffff
   121fc:	ja     12778 <__sprintf_chk@plt+0x7dc8>
   12202:	mov    r10d,edx
   12205:	cmp    edx,0x1fffff
   1220b:	jbe    12789 <__sprintf_chk@plt+0x7dd9>
   12211:	and    eax,0xfffffffb
   12214:	cmp    eax,0x2
   12217:	jne    12630 <__sprintf_chk@plt+0x7c80>
   1221d:	mov    BYTE PTR [r13+0x6c],0x80
   12222:	lea    rax,[r13+0x73]
   12226:	mov    BYTE PTR [rax],r10b
   12229:	sub    rax,0x1
   1222d:	shr    r10,0x8
   12231:	cmp    r9,rax
   12234:	jne    12226 <__sprintf_chk@plt+0x7876>
   12236:	cs nop WORD PTR [rax+rax*1+0x0]
   12240:	mov    eax,DWORD PTR [rbx+0x78]
   12243:	mov    edx,DWORD PTR [rip+0x6d05b]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12249:	lea    r9,[r13+0x74]
   1224d:	cmp    eax,0x1fffff
   12252:	jbe    1225d <__sprintf_chk@plt+0x78ad>
   12254:	cmp    edx,0x4
   12257:	je     127c0 <__sprintf_chk@plt+0x7e10>
   1225d:	mov    r10d,eax
   12260:	cmp    eax,0x1fffff
   12265:	jbe    127d1 <__sprintf_chk@plt+0x7e21>
   1226b:	and    edx,0xfffffffb
   1226e:	cmp    edx,0x2
   12271:	jne    12700 <__sprintf_chk@plt+0x7d50>
   12277:	mov    BYTE PTR [r13+0x74],0x80
   1227c:	lea    rax,[r13+0x7b]
   12280:	mov    BYTE PTR [rax],r10b
   12283:	sub    rax,0x1
   12287:	shr    r10,0x8
   1228b:	cmp    r9,rax
   1228e:	jne    12280 <__sprintf_chk@plt+0x78d0>
   12290:	cmp    DWORD PTR [rip+0x6d00d],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12297:	mov    r14,QWORD PTR [rbx+0x88]
   1229e:	je     1273d <__sprintf_chk@plt+0x7d8d>
   122a4:	mov    rax,r14
   122a7:	shr    rax,0x3f
   122ab:	mov    r15,rax
   122ae:	sub    rsp,0x8
   122b2:	lea    rax,[rip+0x50f0c]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   122b9:	mov    rsi,r14
   122bc:	xor    ecx,ecx
   122be:	push   rax
   122bf:	mov    r9d,0xc
   122c5:	lea    r8,[r13+0x7c]
   122c9:	mov    edx,0x8
   122ce:	mov    edi,r15d
   122d1:	call   101a0 <__sprintf_chk@plt+0x57f0>
   122d6:	pop    r11
   122d8:	pop    r14
   122da:	test   al,al
   122dc:	je     12658 <__sprintf_chk@plt+0x7ca8>
   122e2:	mov    eax,DWORD PTR [rip+0x6cc18]        # 7ef00 <obstack_alloc_failed_handler@@Base+0xc8>
   122e8:	cmp    eax,0x1
   122eb:	je     12bd0 <__sprintf_chk@plt+0x8220>
   122f1:	cmp    eax,0x2
   122f4:	je     12b78 <__sprintf_chk@plt+0x81c8>
   122fa:	test   eax,eax
   122fc:	je     12b60 <__sprintf_chk@plt+0x81b0>
   12302:	mov    rsi,QWORD PTR [rsp+0x10]
   12307:	cmp    DWORD PTR [rip+0x6cf96],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1230e:	mov    rax,rsi
   12311:	je     12b00 <__sprintf_chk@plt+0x8150>
   12317:	shr    rax,0x3f
   1231b:	mov    rdi,rax
   1231e:	sub    rsp,0x8
   12322:	lea    r15,[rip+0x50f2a]        # 63253 <_obstack_memory_used@@Base+0x165d3>
   12329:	xor    ecx,ecx
   1232b:	mov    edx,0x8
   12330:	push   r15
   12332:	mov    r9d,0xc
   12338:	lea    r8,[r13+0x88]
   1233f:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12344:	pop    r9
   12346:	pop    r10
   12348:	test   al,al
   1234a:	je     12658 <__sprintf_chk@plt+0x7ca8>
   12350:	mov    edx,DWORD PTR [rbx+0x70]
   12353:	mov    eax,DWORD PTR [rip+0x6cf4b]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12359:	and    edx,0xb000
   1235f:	cmp    edx,0x2000
   12365:	je     12890 <__sprintf_chk@plt+0x7ee0>
   1236b:	mov    edx,eax
   1236d:	and    edx,0xfffffffb
   12370:	cmp    edx,0x2
   12373:	jne    12c40 <__sprintf_chk@plt+0x8290>
   12379:	cmp    eax,0x4
   1237c:	je     12be8 <__sprintf_chk@plt+0x8238>
   12382:	cmp    BYTE PTR [rip+0x6cb5b],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   12389:	je     12399 <__sprintf_chk@plt+0x79e9>
   1238b:	mov    edx,eax
   1238d:	and    edx,0xfffffffb
   12390:	cmp    edx,0x2
   12393:	je     12d72 <__sprintf_chk@plt+0x83c2>
   12399:	cmp    eax,0x1
   1239c:	je     12c30 <__sprintf_chk@plt+0x8280>
   123a2:	mov    BYTE PTR [r13+0x9c],0x30
   123aa:	cmp    eax,0x4
   123ad:	ja     12ae8 <__sprintf_chk@plt+0x8138>
   123b3:	cmp    eax,0x2
   123b6:	ja     12bfe <__sprintf_chk@plt+0x824e>
   123bc:	jne    12fdb <__sprintf_chk@plt+0x862b>
   123c2:	movabs rsi,0x20207261747375
   123cc:	mov    QWORD PTR [r13+0x101],rsi
   123d3:	cmp    BYTE PTR [rip+0x6cb36],0x0        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   123da:	jne    124d9 <__sprintf_chk@plt+0x7b29>
   123e0:	test   r12,r12
   123e3:	je     12ead <__sprintf_chk@plt+0x84fd>
   123e9:	mov    rdi,r12
   123ec:	call   a060 <strlen@plt>
   123f1:	lea    r14,[rax+0x1]
   123f5:	mov    rdi,r14
   123f8:	call   a4a0 <malloc@plt>
   123fd:	mov    rdi,rax
   12400:	test   rax,rax
   12403:	je     12fd6 <__sprintf_chk@plt+0x8626>
   12409:	mov    rdx,r14
   1240c:	mov    rsi,r12
   1240f:	call   a420 <memcpy@plt>
   12414:	mov    QWORD PTR [rbx+0x20],rax
   12418:	test   rbp,rbp
   1241b:	je     12e9c <__sprintf_chk@plt+0x84ec>
   12421:	mov    rdi,rbp
   12424:	call   a060 <strlen@plt>
   12429:	lea    r12,[rax+0x1]
   1242d:	mov    rdi,r12
   12430:	call   a4a0 <malloc@plt>
   12435:	mov    rdi,rax
   12438:	test   rax,rax
   1243b:	je     12fd6 <__sprintf_chk@plt+0x8626>
   12441:	mov    rdx,r12
   12444:	mov    rsi,rbp
   12447:	call   a420 <memcpy@plt>
   1244c:	mov    QWORD PTR [rbx+0x28],rax
   12450:	cmp    DWORD PTR [rip+0x6ce4d],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12457:	mov    rbp,QWORD PTR [rbx+0x20]
   1245b:	je     12dd9 <__sprintf_chk@plt+0x8429>
   12461:	movzx  edx,BYTE PTR [rbp+0x0]
   12465:	xor    eax,eax
   12467:	jmp    12475 <__sprintf_chk@plt+0x7ac5>
   12469:	nop    DWORD PTR [rax+0x0]
   12470:	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
   12475:	mov    BYTE PTR [r13+rax*1+0x109],dl
   1247d:	test   dl,dl
   1247f:	je     1248b <__sprintf_chk@plt+0x7adb>
   12481:	add    rax,0x1
   12485:	cmp    rax,0x20
   12489:	jne    12470 <__sprintf_chk@plt+0x7ac0>
   1248b:	cmp    DWORD PTR [rip+0x6ce12],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12492:	mov    BYTE PTR [r13+0x128],0x0
   1249a:	mov    rbp,QWORD PTR [rbx+0x28]
   1249e:	je     12e3c <__sprintf_chk@plt+0x848c>
   124a4:	movzx  edx,BYTE PTR [rbp+0x0]
   124a8:	xor    eax,eax
   124aa:	jmp    124b5 <__sprintf_chk@plt+0x7b05>
   124ac:	nop    DWORD PTR [rax+0x0]
   124b0:	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
   124b5:	mov    BYTE PTR [r13+rax*1+0x129],dl
   124bd:	test   dl,dl
   124bf:	je     124cb <__sprintf_chk@plt+0x7b1b>
   124c1:	add    rax,0x1
   124c5:	cmp    rax,0x20
   124c9:	jne    124b0 <__sprintf_chk@plt+0x7b00>
   124cb:	mov    BYTE PTR [r13+0x148],0x0
   124d3:	mov    eax,DWORD PTR [rip+0x6cdcb]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   124d9:	cmp    eax,0x4
   124dc:	jne    1265b <__sprintf_chk@plt+0x7cab>
   124e2:	mov    ecx,DWORD PTR [rip+0x6c9f8]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   124e8:	test   ecx,ecx
   124ea:	jle    12530 <__sprintf_chk@plt+0x7b80>
   124ec:	cmp    QWORD PTR [rbx+0x38],0x0
   124f1:	je     1250e <__sprintf_chk@plt+0x7b5e>
   124f3:	cmp    QWORD PTR [rbx+0x178],0x0
   124fb:	jne    12530 <__sprintf_chk@plt+0x7b80>
   124fd:	xor    edx,edx
   124ff:	mov    rsi,rbx
   12502:	lea    rdi,[rip+0x50e31]        # 6333a <_obstack_memory_used@@Base+0x166ba>
   12509:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   1250e:	cmp    QWORD PTR [rbx+0x48],0x0
   12513:	je     12530 <__sprintf_chk@plt+0x7b80>
   12515:	cmp    QWORD PTR [rbx+0x178],0x0
   1251d:	jne    12530 <__sprintf_chk@plt+0x7b80>
   1251f:	xor    edx,edx
   12521:	mov    rsi,rbx
   12524:	lea    rdi,[rip+0x50e21]        # 6334c <_obstack_memory_used@@Base+0x166cc>
   1252b:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12530:	mov    edx,DWORD PTR [rip+0x6c9a6]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   12536:	test   edx,edx
   12538:	jle    12560 <__sprintf_chk@plt+0x7bb0>
   1253a:	cmp    QWORD PTR [rbx+0x30],0x0
   1253f:	je     12560 <__sprintf_chk@plt+0x7bb0>
   12541:	cmp    QWORD PTR [rbx+0x178],0x0
   12549:	jne    12560 <__sprintf_chk@plt+0x7bb0>
   1254b:	xor    edx,edx
   1254d:	mov    rsi,rbx
   12550:	lea    rdi,[rip+0x50e08]        # 6335f <_obstack_memory_used@@Base+0x166df>
   12557:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   1255c:	nop    DWORD PTR [rax+0x0]
   12560:	mov    eax,DWORD PTR [rip+0x6c972]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   12566:	test   eax,eax
   12568:	jle    1265b <__sprintf_chk@plt+0x7cab>
   1256e:	xor    eax,eax
   12570:	cmp    QWORD PTR [rbx+0x158],0x0
   12578:	lea    rbp,[rsp+0x10]
   1257d:	mov    QWORD PTR [rsp+0x10],0x0
   12586:	mov    r12,QWORD PTR [rbx+0x160]
   1258d:	jne    125b3 <__sprintf_chk@plt+0x7c03>
   1258f:	jmp    1265b <__sprintf_chk@plt+0x7cab>
   12594:	nop    DWORD PTR [rax+0x0]
   12598:	mov    rax,QWORD PTR [rsp+0x10]
   1259d:	add    rax,0x1
   125a1:	mov    QWORD PTR [rsp+0x10],rax
   125a6:	cmp    rax,QWORD PTR [rbx+0x158]
   125ad:	jae    1265b <__sprintf_chk@plt+0x7cab>
   125b3:	cmp    QWORD PTR [rbx+0x178],0x0
   125bb:	jne    12598 <__sprintf_chk@plt+0x7be8>
   125bd:	lea    rax,[rax+rax*2]
   125c1:	mov    rdx,rbp
   125c4:	mov    rsi,rbx
   125c7:	mov    rdi,QWORD PTR [r12+rax*8]
   125cb:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   125d0:	jmp    12598 <__sprintf_chk@plt+0x7be8>
   125d2:	nop    WORD PTR [rax+rax*1+0x0]
   125d8:	mov    eax,DWORD PTR [rip+0x6c8d2]        # 7eeb0 <obstack_alloc_failed_handler@@Base+0x78>
   125de:	cmp    eax,0xffffffff
   125e1:	je     125e6 <__sprintf_chk@plt+0x7c36>
   125e3:	mov    DWORD PTR [rbx+0x74],eax
   125e6:	mov    rdi,QWORD PTR [rip+0x6c8e3]        # 7eed0 <obstack_alloc_failed_handler@@Base+0x98>
   125ed:	mov    r12,QWORD PTR [rip+0x6c8b4]        # 7eea8 <obstack_alloc_failed_handler@@Base+0x70>
   125f4:	mov    eax,DWORD PTR [rbx+0x78]
   125f7:	test   rdi,rdi
   125fa:	jne    12027 <__sprintf_chk@plt+0x7677>
   12600:	mov    eax,DWORD PTR [rip+0x6c8c2]        # 7eec8 <obstack_alloc_failed_handler@@Base+0x90>
   12606:	cmp    eax,0xffffffff
   12609:	je     1260e <__sprintf_chk@plt+0x7c5e>
   1260b:	mov    DWORD PTR [rbx+0x78],eax
   1260e:	mov    rax,QWORD PTR [rip+0x6c8f3]        # 7ef08 <obstack_alloc_failed_handler@@Base+0xd0>
   12615:	mov    rbp,QWORD PTR [rip+0x6c8a4]        # 7eec0 <obstack_alloc_failed_handler@@Base+0x88>
   1261c:	mov    edx,DWORD PTR [rbx+0x70]
   1261f:	test   rax,rax
   12622:	jne    1205d <__sprintf_chk@plt+0x76ad>
   12628:	jmp    12187 <__sprintf_chk@plt+0x77d7>
   1262d:	nop    DWORD PTR [rax]
   12630:	lea    rax,[rip+0x50cbd]        # 632f4 <_obstack_memory_used@@Base+0x16674>
   12637:	mov    ecx,0x4
   1263c:	xor    esi,esi
   1263e:	xor    edi,edi
   12640:	push   rax
   12641:	xor    r8d,r8d
   12644:	mov    rdx,r10
   12647:	push   0x8
   12649:	call   10400 <__sprintf_chk@plt+0x5a50>
   1264e:	pop    rcx
   1264f:	pop    rsi
   12650:	test   al,al
   12652:	jne    12240 <__sprintf_chk@plt+0x7890>
   12658:	xor    r13d,r13d
   1265b:	mov    rax,QWORD PTR [rsp+0x28]
   12660:	sub    rax,QWORD PTR fs:0x28
   12669:	jne    12fca <__sprintf_chk@plt+0x861a>
   1266f:	add    rsp,0x38
   12673:	mov    rax,r13
   12676:	pop    rbx
   12677:	pop    rbp
   12678:	pop    r12
   1267a:	pop    r13
   1267c:	pop    r14
   1267e:	pop    r15
   12680:	ret    
   12681:	nop    DWORD PTR [rax+0x0]
   12688:	mov    BYTE PTR [r13+0x6b],0x0
   1268d:	mov    ecx,edx
   1268f:	lea    rax,[r13+0x6a]
   12693:	lea    rsi,[r13+0x63]
   12697:	and    ecx,0xfff
   1269d:	mov    edx,ecx
   1269f:	sub    rax,0x1
   126a3:	shr    rcx,0x3
   126a7:	and    edx,0x7
   126aa:	add    edx,0x30
   126ad:	mov    BYTE PTR [rax+0x1],dl
   126b0:	cmp    rsi,rax
   126b3:	jne    1269d <__sprintf_chk@plt+0x7ced>
   126b5:	jmp    121e4 <__sprintf_chk@plt+0x7834>
   126ba:	nop    WORD PTR [rax+rax*1+0x0]
   126c0:	mov    ecx,edi
   126c2:	mov    r14d,r15d
   126c5:	and    ecx,0x49
   126c8:	or     r14d,0x49
   126cc:	or     ecx,r9d
   126cf:	cmovne r15d,r14d
   126d3:	jmp    1213c <__sprintf_chk@plt+0x778c>
   126d8:	nop    DWORD PTR [rax+rax*1+0x0]
   126e0:	or     edi,ecx
   126e2:	jmp    120d8 <__sprintf_chk@plt+0x7728>
   126e7:	nop    WORD PTR [rax+rax*1+0x0]
   126f0:	not    ecx
   126f2:	and    edi,ecx
   126f4:	jmp    120d8 <__sprintf_chk@plt+0x7728>
   126f9:	nop    DWORD PTR [rax+0x0]
   12700:	lea    rax,[rip+0x50bf3]        # 632fa <_obstack_memory_used@@Base+0x1667a>
   12707:	mov    rdx,r10
   1270a:	xor    r8d,r8d
   1270d:	xor    esi,esi
   1270f:	push   rax
   12710:	mov    ecx,0x4
   12715:	xor    edi,edi
   12717:	push   0x8
   12719:	call   10400 <__sprintf_chk@plt+0x5a50>
   1271e:	pop    r15
   12720:	pop    rdx
   12721:	test   al,al
   12723:	je     12658 <__sprintf_chk@plt+0x7ca8>
   12729:	cmp    DWORD PTR [rip+0x6cb74],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12730:	mov    r14,QWORD PTR [rbx+0x88]
   12737:	jne    122a4 <__sprintf_chk@plt+0x78f4>
   1273d:	mov    rax,r14
   12740:	xor    r15d,r15d
   12743:	shr    rax,0x21
   12747:	je     122ae <__sprintf_chk@plt+0x78fe>
   1274d:	xor    r14d,r14d
   12750:	cmp    QWORD PTR [rbx+0x178],0x0
   12758:	jne    122ae <__sprintf_chk@plt+0x78fe>
   1275e:	xor    edx,edx
   12760:	mov    rsi,rbx
   12763:	lea    rdi,[rip+0x5450d]        # 66c77 <_obstack_memory_used@@Base+0x19ff7>
   1276a:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   1276f:	jmp    122ae <__sprintf_chk@plt+0x78fe>
   12774:	nop    DWORD PTR [rax+0x0]
   12778:	cmp    QWORD PTR [rbx+0x178],0x0
   12780:	je     12ebe <__sprintf_chk@plt+0x850e>
   12786:	xor    r10d,r10d
   12789:	mov    BYTE PTR [r13+0x73],0x0
   1278e:	lea    rax,[r13+0x72]
   12792:	lea    rcx,[r13+0x6b]
   12796:	cs nop WORD PTR [rax+rax*1+0x0]
   127a0:	mov    edx,r10d
   127a3:	sub    rax,0x1
   127a7:	shr    r10,0x3
   127ab:	and    edx,0x7
   127ae:	add    edx,0x30
   127b1:	mov    BYTE PTR [rax+0x1],dl
   127b4:	cmp    rcx,rax
   127b7:	jne    127a0 <__sprintf_chk@plt+0x7df0>
   127b9:	jmp    12240 <__sprintf_chk@plt+0x7890>
   127be:	xchg   ax,ax
   127c0:	cmp    QWORD PTR [rbx+0x178],0x0
   127c8:	je     12ed4 <__sprintf_chk@plt+0x8524>
   127ce:	xor    r10d,r10d
   127d1:	mov    BYTE PTR [r13+0x7b],0x0
   127d6:	lea    rax,[r13+0x7a]
   127da:	lea    rcx,[r13+0x73]
   127de:	xchg   ax,ax
   127e0:	mov    edx,r10d
   127e3:	sub    rax,0x1
   127e7:	shr    r10,0x3
   127eb:	and    edx,0x7
   127ee:	add    edx,0x30
   127f1:	mov    BYTE PTR [rax+0x1],dl
   127f4:	cmp    rax,rcx
   127f7:	jne    127e0 <__sprintf_chk@plt+0x7e30>
   127f9:	jmp    12290 <__sprintf_chk@plt+0x78e0>
   127fe:	xchg   ax,ax
   12800:	mov    r10d,edx
   12803:	and    r10d,0xfff
   1280a:	mov    BYTE PTR [r13+0x6b],0x0
   1280f:	lea    rax,[r13+0x6a]
   12813:	lea    rcx,[r13+0x63]
   12817:	nop    WORD PTR [rax+rax*1+0x0]
   12820:	mov    edx,r10d
   12823:	sub    rax,0x1
   12827:	shr    r10,0x3
   1282b:	and    edx,0x7
   1282e:	add    edx,0x30
   12831:	mov    BYTE PTR [rax+0x1],dl
   12834:	cmp    rcx,rax
   12837:	jne    12820 <__sprintf_chk@plt+0x7e70>
   12839:	jmp    121e4 <__sprintf_chk@plt+0x7834>
   1283e:	xchg   ax,ax
   12840:	movzx  eax,BYTE PTR [r14]
   12844:	test   al,al
   12846:	je     12ac0 <__sprintf_chk@plt+0x8110>
   1284c:	mov    rdx,r14
   1284f:	jmp    12868 <__sprintf_chk@plt+0x7eb8>
   12851:	nop    DWORD PTR [rax+0x0]
   12858:	movzx  eax,BYTE PTR [rdx+0x1]
   1285c:	add    rdx,0x1
   12860:	test   al,al
   12862:	je     12ac0 <__sprintf_chk@plt+0x8110>
   12868:	test   al,al
   1286a:	jns    12858 <__sprintf_chk@plt+0x7ea8>
   1286c:	cmp    QWORD PTR [rbx+0x178],0x0
   12874:	jne    11fca <__sprintf_chk@plt+0x761a>
   1287a:	xor    edx,edx
   1287c:	mov    rsi,rbx
   1287f:	lea    rdi,[rip+0x50a62]        # 632e8 <_obstack_memory_used@@Base+0x16668>
   12886:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   1288b:	jmp    11fca <__sprintf_chk@plt+0x761a>
   12890:	mov    r14,QWORD PTR [rbx+0x80]
   12897:	mov    rcx,r14
   1289a:	mov    rdx,r14
   1289d:	shr    rcx,0x8
   128a1:	shr    rdx,0x20
   128a5:	and    ecx,0xfff
   128ab:	and    edx,0xfffff000
   128b1:	or     edx,ecx
   128b3:	movzx  ecx,r14b
   128b7:	shr    r14,0xc
   128bb:	xor    r14b,r14b
   128be:	or     r14d,ecx
   128c1:	cmp    edx,0x1fffff
   128c7:	jbe    128d2 <__sprintf_chk@plt+0x7f22>
   128c9:	cmp    eax,0x4
   128cc:	je     12eea <__sprintf_chk@plt+0x853a>
   128d2:	movsxd r11,edx
   128d5:	shr    edx,0x1f
   128d8:	mov    r10d,edx
   128db:	sub    rsp,0x8
   128df:	lea    rax,[rip+0x50a23]        # 63309 <_obstack_memory_used@@Base+0x16689>
   128e6:	mov    edi,r10d
   128e9:	xor    ecx,ecx
   128eb:	push   rax
   128ec:	lea    r8,[r13+0x149]
   128f3:	mov    edx,0x4
   128f8:	mov    rsi,r11
   128fb:	mov    r9d,0x8
   12901:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12906:	pop    rdi
   12907:	pop    r8
   12909:	test   al,al
   1290b:	je     12658 <__sprintf_chk@plt+0x7ca8>
   12911:	cmp    DWORD PTR [rip+0x6c98c],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12918:	jne    12927 <__sprintf_chk@plt+0x7f77>
   1291a:	cmp    r14d,0x1fffff
   12921:	ja     12f60 <__sprintf_chk@plt+0x85b0>
   12927:	movsxd r10,r14d
   1292a:	shr    r14d,0x1f
   1292e:	sub    rsp,0x8
   12932:	lea    rax,[rip+0x509e1]        # 6331a <_obstack_memory_used@@Base+0x1669a>
   12939:	xor    ecx,ecx
   1293b:	mov    rsi,r10
   1293e:	push   rax
   1293f:	mov    r9d,0x8
   12945:	mov    edx,0x4
   1294a:	mov    edi,r14d
   1294d:	lea    r8,[r13+0x151]
   12954:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12959:	pop    rcx
   1295a:	pop    rsi
   1295b:	test   al,al
   1295d:	je     12658 <__sprintf_chk@plt+0x7ca8>
   12963:	mov    eax,DWORD PTR [rip+0x6c93b]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12969:	jmp    12379 <__sprintf_chk@plt+0x79c9>
   1296e:	xchg   ax,ax
   12970:	mov    edx,0x4c
   12975:	mov    rsi,r14
   12978:	mov    rdi,rbx
   1297b:	call   11b90 <__sprintf_chk@plt+0x71e0>
   12980:	jmp    11fca <__sprintf_chk@plt+0x761a>
   12985:	nop    DWORD PTR [rax]
   12988:	cmp    rax,0x100
   1298e:	ja     12f26 <__sprintf_chk@plt+0x8576>
   12994:	cmp    rax,0x9c
   1299a:	ja     12cc8 <__sprintf_chk@plt+0x8318>
   129a0:	cmp    BYTE PTR [r14+rax*1-0x1],0x2f
   129a6:	lea    rbp,[rax-0x1]
   129aa:	jne    129b0 <__sprintf_chk@plt+0x8000>
   129ac:	lea    rbp,[rax-0x2]
   129b0:	test   rbp,rbp
   129b3:	jne    129ca <__sprintf_chk@plt+0x801a>
   129b5:	jmp    12d10 <__sprintf_chk@plt+0x8360>
   129ba:	nop    WORD PTR [rax+rax*1+0x0]
   129c0:	sub    rbp,0x1
   129c4:	je     12d10 <__sprintf_chk@plt+0x8360>
   129ca:	cmp    BYTE PTR [r14+rbp*1],0x2f
   129cf:	jne    129c0 <__sprintf_chk@plt+0x8010>
   129d1:	lea    r12,[rax-0x1]
   129d5:	sub    r12,rbp
   129d8:	lea    rax,[r12-0x1]
   129dd:	cmp    rax,0x63
   129e1:	ja     12d10 <__sprintf_chk@plt+0x8360>
   129e7:	mov    r13,QWORD PTR [rip+0x6cb52]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   129ee:	cmp    r13,QWORD PTR [rip+0x6cb8b]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   129f5:	je     12f92 <__sprintf_chk@plt+0x85e2>
   129fb:	lea    rdi,[r13+0x8]
   129ff:	mov    rcx,r13
   12a02:	xor    eax,eax
   12a04:	mov    rdx,rbp
   12a07:	and    rdi,0xfffffffffffffff8
   12a0b:	mov    QWORD PTR [r13+0x0],0x0
   12a13:	mov    rsi,r14
   12a16:	mov    QWORD PTR [r13+0x1f8],0x0
   12a21:	sub    rcx,rdi
   12a24:	add    ecx,0x200
   12a2a:	shr    ecx,0x3
   12a2d:	rep stos QWORD PTR es:[rdi],rax
   12a30:	lea    rdi,[r13+0x159]
   12a37:	call   a420 <memcpy@plt>
   12a3c:	lea    rsi,[r14+rbp*1+0x1]
   12a41:	mov    rdx,r12
   12a44:	mov    rdi,r13
   12a47:	call   a420 <memcpy@plt>
   12a4c:	jmp    11fd5 <__sprintf_chk@plt+0x7625>
   12a51:	nop    DWORD PTR [rax+0x0]
   12a58:	cmp    rax,0x63
   12a5c:	jbe    11fca <__sprintf_chk@plt+0x761a>
   12a62:	mov    rax,QWORD PTR [rip+0x6ca9f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   12a69:	test   rax,rax
   12a6c:	je     12a74 <__sprintf_chk@plt+0x80c4>
   12a6e:	call   rax
   12a70:	mov    r14,QWORD PTR [rbx+0x8]
   12a74:	mov    rdi,r14
   12a77:	call   4b670 <argp_usage@@Base+0x82f0>
   12a7c:	mov    edx,0x5
   12a81:	lea    rsi,[rip+0x50ed8]        # 63960 <_obstack_memory_used@@Base+0x16ce0>
   12a88:	xor    edi,edi
   12a8a:	mov    r12,rax
   12a8d:	call   a040 <dcgettext@plt>
   12a92:	mov    r8d,0x63
   12a98:	mov    rdx,rax
   12a9b:	mov    rcx,r12
   12a9e:	xor    esi,esi
   12aa0:	xor    edi,edi
   12aa2:	xor    eax,eax
   12aa4:	call   a640 <error@plt>
   12aa9:	mov    DWORD PTR [rip+0x6c611],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   12ab3:	jmp    12658 <__sprintf_chk@plt+0x7ca8>
   12ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   12ac0:	mov    rdi,r14
   12ac3:	call   a060 <strlen@plt>
   12ac8:	mov    r8,rax
   12acb:	movsxd rax,DWORD PTR [rip+0x6c3ce]        # 7eea0 <obstack_alloc_failed_handler@@Base+0x68>
   12ad2:	add    rax,r8
   12ad5:	cmp    rax,0x64
   12ad9:	ja     1286c <__sprintf_chk@plt+0x7ebc>
   12adf:	jmp    11fca <__sprintf_chk@plt+0x761a>
   12ae4:	nop    DWORD PTR [rax+0x0]
   12ae8:	cmp    eax,0x6
   12aeb:	je     123c2 <__sprintf_chk@plt+0x7a12>
   12af1:	jmp    a9f3 <__sprintf_chk@plt+0x43>
   12af6:	cs nop WORD PTR [rax+rax*1+0x0]
   12b00:	shr    rax,0x21
   12b04:	jne    12cb0 <__sprintf_chk@plt+0x8300>
   12b0a:	xor    edi,edi
   12b0c:	cmp    QWORD PTR [rsp+0x18],0x0
   12b12:	je     1231e <__sprintf_chk@plt+0x796e>
   12b18:	cmp    QWORD PTR [rbx+0x178],0x0
   12b20:	jne    1231e <__sprintf_chk@plt+0x796e>
   12b26:	mov    rsi,rbx
   12b29:	lea    rdx,[rsp+0x10]
   12b2e:	lea    rdi,[rip+0x54046]        # 66b7b <_obstack_memory_used@@Base+0x19efb>
   12b35:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12b3a:	mov    rsi,QWORD PTR [rsp+0x10]
   12b3f:	mov    rax,rsi
   12b42:	shr    rax,0x21
   12b46:	je     12fcf <__sprintf_chk@plt+0x861f>
   12b4c:	mov    QWORD PTR [rsp+0x10],0x0
   12b55:	xor    edi,edi
   12b57:	xor    esi,esi
   12b59:	jmp    1231e <__sprintf_chk@plt+0x796e>
   12b5e:	xchg   ax,ax
   12b60:	movdqu xmm0,XMMWORD PTR [rbx+0xf8]
   12b68:	movaps XMMWORD PTR [rsp+0x10],xmm0
   12b6d:	jmp    12302 <__sprintf_chk@plt+0x7952>
   12b72:	nop    WORD PTR [rax+rax*1+0x0]
   12b78:	mov    rax,QWORD PTR [rip+0x6c371]        # 7eef0 <obstack_alloc_failed_handler@@Base+0xb8>
   12b7f:	xor    edx,edx
   12b81:	cmp    QWORD PTR [rbx+0xf8],rax
   12b88:	setl   al
   12b8b:	setg   dl
   12b8e:	movzx  eax,al
   12b91:	sub    edx,eax
   12b93:	mov    rax,QWORD PTR [rip+0x6c35e]        # 7eef8 <obstack_alloc_failed_handler@@Base+0xc0>
   12b9a:	cmp    QWORD PTR [rbx+0x100],rax
   12ba1:	setg   al
   12ba4:	setl   cl
   12ba7:	movzx  eax,al
   12baa:	movzx  ecx,cl
   12bad:	sub    eax,ecx
   12baf:	lea    eax,[rax+rdx*2]
   12bb2:	test   eax,eax
   12bb4:	jle    12d60 <__sprintf_chk@plt+0x83b0>
   12bba:	movdqa xmm2,XMMWORD PTR [rip+0x6c32e]        # 7eef0 <obstack_alloc_failed_handler@@Base+0xb8>
   12bc2:	movaps XMMWORD PTR [rsp+0x10],xmm2
   12bc7:	jmp    12302 <__sprintf_chk@plt+0x7952>
   12bcc:	nop    DWORD PTR [rax+0x0]
   12bd0:	movdqa xmm1,XMMWORD PTR [rip+0x6c318]        # 7eef0 <obstack_alloc_failed_handler@@Base+0xb8>
   12bd8:	movaps XMMWORD PTR [rsp+0x10],xmm1
   12bdd:	jmp    12302 <__sprintf_chk@plt+0x7952>
   12be2:	nop    WORD PTR [rax+rax*1+0x0]
   12be8:	cmp    QWORD PTR [rbx+0x178],0x0
   12bf0:	je     12cd2 <__sprintf_chk@plt+0x8322>
   12bf6:	mov    BYTE PTR [r13+0x9c],0x30
   12bfe:	mov    esi,0x72
   12c03:	mov    edi,0x3030
   12c08:	mov    DWORD PTR [r13+0x101],0x61747375
   12c13:	mov    WORD PTR [r13+0x105],si
   12c1b:	mov    WORD PTR [r13+0x107],di
   12c23:	jmp    123d3 <__sprintf_chk@plt+0x7a23>
   12c28:	nop    DWORD PTR [rax+rax*1+0x0]
   12c30:	mov    BYTE PTR [r13+0x9c],0x0
   12c38:	jmp    1265b <__sprintf_chk@plt+0x7cab>
   12c3d:	nop    DWORD PTR [rax]
   12c40:	sub    rsp,0x8
   12c44:	lea    rax,[rip+0x506be]        # 63309 <_obstack_memory_used@@Base+0x16689>
   12c4b:	xor    ecx,ecx
   12c4d:	xor    esi,esi
   12c4f:	push   rax
   12c50:	mov    edx,0x4
   12c55:	mov    r9d,0x8
   12c5b:	xor    edi,edi
   12c5d:	lea    r8,[r13+0x149]
   12c64:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12c69:	pop    r14
   12c6b:	pop    rdx
   12c6c:	test   al,al
   12c6e:	je     12658 <__sprintf_chk@plt+0x7ca8>
   12c74:	sub    rsp,0x8
   12c78:	lea    rax,[rip+0x5069b]        # 6331a <_obstack_memory_used@@Base+0x1669a>
   12c7f:	xor    ecx,ecx
   12c81:	xor    esi,esi
   12c83:	push   rax
   12c84:	mov    r9d,0x8
   12c8a:	lea    r8,[r13+0x151]
   12c91:	xor    edi,edi
   12c93:	mov    edx,0x4
   12c98:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12c9d:	pop    r10
   12c9f:	pop    r11
   12ca1:	test   al,al
   12ca3:	jne    12963 <__sprintf_chk@plt+0x7fb3>
   12ca9:	jmp    12658 <__sprintf_chk@plt+0x7ca8>
   12cae:	xchg   ax,ax
   12cb0:	cmp    QWORD PTR [rbx+0x178],0x0
   12cb8:	jne    12b4c <__sprintf_chk@plt+0x819c>
   12cbe:	jmp    12b26 <__sprintf_chk@plt+0x8176>
   12cc3:	nop    DWORD PTR [rax+rax*1+0x0]
   12cc8:	mov    ebp,0x9b
   12ccd:	jmp    129ca <__sprintf_chk@plt+0x801a>
   12cd2:	xor    edx,edx
   12cd4:	mov    rsi,rbx
   12cd7:	lea    rdi,[rip+0x50644]        # 63322 <_obstack_memory_used@@Base+0x166a2>
   12cde:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12ce3:	cmp    QWORD PTR [rbx+0x178],0x0
   12ceb:	jne    12cfe <__sprintf_chk@plt+0x834e>
   12ced:	xor    edx,edx
   12cef:	mov    rsi,rbx
   12cf2:	lea    rdi,[rip+0x5062f]        # 63328 <_obstack_memory_used@@Base+0x166a8>
   12cf9:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12cfe:	mov    eax,DWORD PTR [rip+0x6c5a0]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12d04:	jmp    12399 <__sprintf_chk@plt+0x79e9>
   12d09:	nop    DWORD PTR [rax+0x0]
   12d10:	mov    rax,QWORD PTR [rip+0x6c7f1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   12d17:	test   rax,rax
   12d1a:	je     12d1e <__sprintf_chk@plt+0x836e>
   12d1c:	call   rax
   12d1e:	mov    rdi,r14
   12d21:	xor    r13d,r13d
   12d24:	call   4b670 <argp_usage@@Base+0x82f0>
   12d29:	mov    edx,0x5
   12d2e:	lea    rsi,[rip+0x50c5b]        # 63990 <_obstack_memory_used@@Base+0x16d10>
   12d35:	xor    edi,edi
   12d37:	mov    r12,rax
   12d3a:	call   a040 <dcgettext@plt>
   12d3f:	mov    rcx,r12
   12d42:	xor    esi,esi
   12d44:	xor    edi,edi
   12d46:	mov    rdx,rax
   12d49:	xor    eax,eax
   12d4b:	call   a640 <error@plt>
   12d50:	mov    DWORD PTR [rip+0x6c36a],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   12d5a:	jmp    1265b <__sprintf_chk@plt+0x7cab>
   12d5f:	nop
   12d60:	movdqu xmm3,XMMWORD PTR [rbx+0xf8]
   12d68:	movaps XMMWORD PTR [rsp+0x10],xmm3
   12d6d:	jmp    12302 <__sprintf_chk@plt+0x7952>
   12d72:	sub    rsp,0x8
   12d76:	mov    rdi,QWORD PTR [rbx+0xe8]
   12d7d:	xor    ecx,ecx
   12d7f:	mov    edx,0x8
   12d84:	push   r15
   12d86:	mov    r9d,0xc
   12d8c:	lea    r8,[r13+0x159]
   12d93:	mov    rsi,rdi
   12d96:	shr    rdi,0x3f
   12d9a:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12d9f:	xor    ecx,ecx
   12da1:	mov    edx,0x8
   12da6:	mov    QWORD PTR [rsp],r15
   12daa:	mov    rdi,QWORD PTR [rbx+0x108]
   12db1:	mov    r9d,0xc
   12db7:	lea    r8,[r13+0x165]
   12dbe:	mov    rsi,rdi
   12dc1:	shr    rdi,0x3f
   12dc5:	call   101a0 <__sprintf_chk@plt+0x57f0>
   12dca:	pop    r8
   12dcc:	mov    eax,DWORD PTR [rip+0x6c4d2]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   12dd2:	pop    r9
   12dd4:	jmp    12399 <__sprintf_chk@plt+0x79e9>
   12dd9:	mov    rdi,rbp
   12ddc:	call   a060 <strlen@plt>
   12de1:	cmp    rax,0x20
   12de5:	ja     12e14 <__sprintf_chk@plt+0x8464>
   12de7:	movzx  edx,BYTE PTR [rbp+0x0]
   12deb:	test   dl,dl
   12ded:	je     12465 <__sprintf_chk@plt+0x7ab5>
   12df3:	mov    rcx,rbp
   12df6:	mov    eax,edx
   12df8:	jmp    12e10 <__sprintf_chk@plt+0x8460>
   12dfa:	nop    WORD PTR [rax+rax*1+0x0]
   12e00:	movzx  eax,BYTE PTR [rcx+0x1]
   12e04:	add    rcx,0x1
   12e08:	test   al,al
   12e0a:	je     12465 <__sprintf_chk@plt+0x7ab5>
   12e10:	test   al,al
   12e12:	jns    12e00 <__sprintf_chk@plt+0x8450>
   12e14:	cmp    QWORD PTR [rbx+0x178],0x0
   12e1c:	jne    12461 <__sprintf_chk@plt+0x7ab1>
   12e22:	xor    edx,edx
   12e24:	mov    rsi,rbx
   12e27:	lea    rdi,[rip+0x50500]        # 6332e <_obstack_memory_used@@Base+0x166ae>
   12e2e:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12e33:	mov    rbp,QWORD PTR [rbx+0x20]
   12e37:	jmp    12461 <__sprintf_chk@plt+0x7ab1>
   12e3c:	mov    rdi,rbp
   12e3f:	call   a060 <strlen@plt>
   12e44:	cmp    rax,0x20
   12e48:	ja     12e74 <__sprintf_chk@plt+0x84c4>
   12e4a:	movzx  edx,BYTE PTR [rbp+0x0]
   12e4e:	test   dl,dl
   12e50:	je     124a8 <__sprintf_chk@plt+0x7af8>
   12e56:	mov    rcx,rbp
   12e59:	mov    eax,edx
   12e5b:	jmp    12e70 <__sprintf_chk@plt+0x84c0>
   12e5d:	nop    DWORD PTR [rax]
   12e60:	movzx  eax,BYTE PTR [rcx+0x1]
   12e64:	add    rcx,0x1
   12e68:	test   al,al
   12e6a:	je     124a8 <__sprintf_chk@plt+0x7af8>
   12e70:	test   al,al
   12e72:	jns    12e60 <__sprintf_chk@plt+0x84b0>
   12e74:	cmp    QWORD PTR [rbx+0x178],0x0
   12e7c:	jne    124a4 <__sprintf_chk@plt+0x7af4>
   12e82:	xor    edx,edx
   12e84:	mov    rsi,rbx
   12e87:	lea    rdi,[rip+0x504a6]        # 63334 <_obstack_memory_used@@Base+0x166b4>
   12e8e:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12e93:	mov    rbp,QWORD PTR [rbx+0x28]
   12e97:	jmp    124a4 <__sprintf_chk@plt+0x7af4>
   12e9c:	mov    edi,DWORD PTR [rbx+0x78]
   12e9f:	lea    rsi,[rbx+0x28]
   12ea3:	call   28360 <__sprintf_chk@plt+0x1d9b0>
   12ea8:	jmp    12450 <__sprintf_chk@plt+0x7aa0>
   12ead:	mov    edi,DWORD PTR [rbx+0x74]
   12eb0:	lea    rsi,[rbx+0x20]
   12eb4:	call   28260 <__sprintf_chk@plt+0x1d8b0>
   12eb9:	jmp    12418 <__sprintf_chk@plt+0x7a68>
   12ebe:	xor    edx,edx
   12ec0:	mov    rsi,rbx
   12ec3:	lea    rdi,[rip+0x5a06d]        # 6cf37 <_obstack_memory_used@@Base+0x202b7>
   12eca:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12ecf:	jmp    12786 <__sprintf_chk@plt+0x7dd6>
   12ed4:	xor    edx,edx
   12ed6:	mov    rsi,rbx
   12ed9:	lea    rdi,[rip+0x5a050]        # 6cf30 <_obstack_memory_used@@Base+0x202b0>
   12ee0:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12ee5:	jmp    127ce <__sprintf_chk@plt+0x7e1e>
   12eea:	xor    r10d,r10d
   12eed:	xor    r11d,r11d
   12ef0:	cmp    QWORD PTR [rbx+0x178],0x0
   12ef8:	jne    128db <__sprintf_chk@plt+0x7f2b>
   12efe:	xor    edx,edx
   12f00:	mov    rsi,rbx
   12f03:	lea    rdi,[rip+0x503f6]        # 63300 <_obstack_memory_used@@Base+0x16680>
   12f0a:	mov    DWORD PTR [rsp],r10d
   12f0e:	mov    QWORD PTR [rsp+0x8],r11
   12f13:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12f18:	mov    r11,QWORD PTR [rsp+0x8]
   12f1d:	mov    r10d,DWORD PTR [rsp]
   12f21:	jmp    128db <__sprintf_chk@plt+0x7f2b>
   12f26:	mov    rax,QWORD PTR [rip+0x6c5db]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   12f2d:	test   rax,rax
   12f30:	je     12f34 <__sprintf_chk@plt+0x8584>
   12f32:	call   rax
   12f34:	mov    rdi,r14
   12f37:	call   4b670 <argp_usage@@Base+0x82f0>
   12f3c:	mov    edx,0x5
   12f41:	lea    rsi,[rip+0x50a18]        # 63960 <_obstack_memory_used@@Base+0x16ce0>
   12f48:	xor    edi,edi
   12f4a:	mov    r12,rax
   12f4d:	call   a040 <dcgettext@plt>
   12f52:	mov    r8d,0x100
   12f58:	mov    rdx,rax
   12f5b:	jmp    12a9b <__sprintf_chk@plt+0x80eb>
   12f60:	xor    r14d,r14d
   12f63:	xor    r10d,r10d
   12f66:	cmp    QWORD PTR [rbx+0x178],0x0
   12f6e:	jne    1292e <__sprintf_chk@plt+0x7f7e>
   12f74:	xor    edx,edx
   12f76:	mov    rsi,rbx
   12f79:	lea    rdi,[rip+0x50391]        # 63311 <_obstack_memory_used@@Base+0x16691>
   12f80:	mov    QWORD PTR [rsp],r10
   12f84:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   12f89:	mov    r10,QWORD PTR [rsp]
   12f8d:	jmp    1292e <__sprintf_chk@plt+0x7f7e>
   12f92:	xor    r13d,r13d
   12f95:	cmp    BYTE PTR [rip+0x6c598],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   12f9c:	jne    129fb <__sprintf_chk@plt+0x804b>
   12fa2:	call   f170 <__sprintf_chk@plt+0x47c0>
   12fa7:	mov    r13,QWORD PTR [rip+0x6c592]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   12fae:	cmp    r13,QWORD PTR [rip+0x6c5cb]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   12fb5:	jne    129fb <__sprintf_chk@plt+0x804b>
   12fbb:	mov    BYTE PTR [rip+0x6c572],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   12fc2:	xor    r13d,r13d
   12fc5:	jmp    129fb <__sprintf_chk@plt+0x804b>
   12fca:	call   a0a0 <__stack_chk_fail@plt>
   12fcf:	xor    edi,edi
   12fd1:	jmp    1231e <__sprintf_chk@plt+0x796e>
   12fd6:	call   19130 <__sprintf_chk@plt+0xe780>
   12fdb:	jmp    a9f3 <__sprintf_chk@plt+0x43>
   12fe0:	push   rbp
   12fe1:	push   rbx
   12fe2:	sub    rsp,0x1c8
   12fe9:	mov    rax,QWORD PTR fs:0x28
   12ff2:	mov    QWORD PTR [rsp+0x1b8],rax
   12ffa:	xor    eax,eax
   12ffc:	cmp    DWORD PTR [rip+0x6c2a1],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   13003:	je     13030 <__sprintf_chk@plt+0x8680>
   13005:	mov    rax,QWORD PTR [rsp+0x1b8]
   1300d:	sub    rax,QWORD PTR fs:0x28
   13016:	jne    130ed <__sprintf_chk@plt+0x873d>
   1301c:	add    rsp,0x1c8
   13023:	pop    rbx
   13024:	pop    rbp
   13025:	ret    
   13026:	cs nop WORD PTR [rax+rax*1+0x0]
   13030:	mov    rbp,rsp
   13033:	mov    rbx,rdi
   13036:	mov    ecx,0x37
   1303b:	mov    rdi,rbp
   1303e:	rep stos QWORD PTR es:[rdi],rax
   13041:	mov    rax,QWORD PTR [rbx+0x10]
   13045:	mov    DWORD PTR [rsp+0x70],0x81a4
   1304d:	mov    QWORD PTR [rsp+0x8],rax
   13052:	mov    QWORD PTR [rsp],rax
   13056:	call   a0b0 <getuid@plt>
   1305b:	mov    DWORD PTR [rsp+0x74],eax
   1305f:	call   a460 <getgid@plt>
   13064:	movsxd rdx,DWORD PTR [rip+0x68fb9]        # 7c024 <_obstack_memory_used@@Base+0x2f3a4>
   1306b:	lea    rsi,[rip+0x50302]        # 63374 <_obstack_memory_used@@Base+0x166f4>
   13072:	mov    rdi,rbp
   13075:	mov    DWORD PTR [rsp+0x78],eax
   13079:	call   1c570 <__sprintf_chk@plt+0x11bc0>
   1307e:	mov    rdi,rbp
   13081:	mov    QWORD PTR [rsp],rax
   13085:	mov    QWORD PTR [rsp+0x8],rax
   1308a:	mov    rax,QWORD PTR [rbx+0x20]
   1308e:	mov    QWORD PTR [rsp+0x88],rax
   13096:	mov    QWORD PTR [rsp+0x118],rax
   1309e:	call   11f50 <__sprintf_chk@plt+0x75a0>
   130a3:	mov    rdi,rax
   130a6:	test   rax,rax
   130a9:	je     a9f8 <__sprintf_chk@plt+0x48>
   130af:	cmp    QWORD PTR [rsp+0x178],0x0
   130b8:	je     130d0 <__sprintf_chk@plt+0x8720>
   130ba:	call   10a30 <__sprintf_chk@plt+0x6080>
   130bf:	mov    rdi,QWORD PTR [rsp]
   130c3:	call   9ce0 <free@plt>
   130c8:	jmp    13005 <__sprintf_chk@plt+0x8655>
   130cd:	nop    DWORD PTR [rax]
   130d0:	cmp    QWORD PTR [rsp+0x168],0x0
   130d9:	je     130ba <__sprintf_chk@plt+0x870a>
   130db:	xor    edi,edi
   130dd:	mov    rdx,rax
   130e0:	mov    rsi,rbp
   130e3:	call   22c00 <__sprintf_chk@plt+0x18250>
   130e8:	mov    rdi,rax
   130eb:	jmp    130ba <__sprintf_chk@plt+0x870a>
   130ed:	call   a0a0 <__stack_chk_fail@plt>
   130f2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   130fd:	nop    DWORD PTR [rax]
   13100:	endbr64 
   13104:	push   r15
   13106:	mov    r15d,edi
   13109:	mov    rdi,rsi
   1310c:	push   r14
   1310e:	push   r13
   13110:	push   r12
   13112:	push   rbp
   13113:	mov    rbp,rsi
   13116:	push   rbx
   13117:	sub    rsp,0x38
   1311b:	mov    rdx,QWORD PTR [rip+0x6c41e]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13122:	sub    rdx,QWORD PTR [rip+0x6c45f]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   13129:	mov    rax,QWORD PTR fs:0x28
   13132:	mov    QWORD PTR [rsp+0x28],rax
   13137:	xor    eax,eax
   13139:	sar    rdx,0x9
   1313d:	add    rdx,QWORD PTR [rip+0x6c3f4]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   13144:	mov    rbx,QWORD PTR [rsi+0x88]
   1314b:	mov    r12,rdx
   1314e:	call   11f50 <__sprintf_chk@plt+0x75a0>
   13153:	test   rax,rax
   13156:	je     13603 <__sprintf_chk@plt+0x8c53>
   1315c:	mov    rsi,rax
   1315f:	mov    rdx,r12
   13162:	mov    rdi,rbp
   13165:	call   10b40 <__sprintf_chk@plt+0x6190>
   1316a:	cmp    BYTE PTR [rip+0x6c43f],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   13171:	je     131ec <__sprintf_chk@plt+0x883c>
   13173:	jmp    1342a <__sprintf_chk@plt+0x8a7a>
   13178:	nop    DWORD PTR [rax+rax*1+0x0]
   13180:	mov    rdx,rbx
   13183:	and    edx,0x1ff
   13189:	jne    132b0 <__sprintf_chk@plt+0x8900>
   1318f:	test   r15d,r15d
   13192:	jg     13230 <__sprintf_chk@plt+0x8880>
   13198:	mov    rdx,QWORD PTR [rip+0x6c3e1]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1319f:	mov    rdi,rbx
   131a2:	mov    r13,rbx
   131a5:	xor    ecx,ecx
   131a7:	mov    r8,QWORD PTR [rip+0x6c392]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   131ae:	xor    ebx,ebx
   131b0:	lea    rax,[r13-0x1]
   131b4:	and    rax,0xfffffffffffffe00
   131ba:	add    rax,r12
   131bd:	cmp    r8,rax
   131c0:	ja     131da <__sprintf_chk@plt+0x882a>
   131c2:	sub    rax,r8
   131c5:	and    rax,0xfffffffffffffe00
   131cb:	lea    r8,[r8+rax*1+0x200]
   131d3:	mov    QWORD PTR [rip+0x6c366],r8        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   131da:	cmp    r8,rdx
   131dd:	ja     a9fd <__sprintf_chk@plt+0x4d>
   131e3:	cmp    r13,rdi
   131e6:	jne    13442 <__sprintf_chk@plt+0x8a92>
   131ec:	test   rbx,rbx
   131ef:	jle    1331e <__sprintf_chk@plt+0x896e>
   131f5:	mov    r8,QWORD PTR [rip+0x6c344]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   131fc:	mov    rdx,QWORD PTR [rip+0x6c37d]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13203:	mov    r12,r8
   13206:	cmp    r8,rdx
   13209:	je     13270 <__sprintf_chk@plt+0x88c0>
   1320b:	mov    r13,rdx
   1320e:	mov    r14,rbx
   13211:	sub    r13,r12
   13214:	cmp    rbx,r13
   13217:	jb     13180 <__sprintf_chk@plt+0x87d0>
   1321d:	test   r15d,r15d
   13220:	jg     13233 <__sprintf_chk@plt+0x8883>
   13222:	sub    rbx,r13
   13225:	mov    rdi,r13
   13228:	mov    rcx,rbx
   1322b:	jmp    131b0 <__sprintf_chk@plt+0x8800>
   1322d:	nop    DWORD PTR [rax]
   13230:	mov    r13,rbx
   13233:	mov    edi,r15d
   13236:	mov    rdx,r13
   13239:	mov    rsi,r12
   1323c:	call   26630 <__sprintf_chk@plt+0x1bc80>
   13241:	mov    rdi,rax
   13244:	cmp    rax,0xffffffffffffffff
   13248:	je     13343 <__sprintf_chk@plt+0x8993>
   1324e:	sub    rbx,rax
   13251:	mov    rdx,QWORD PTR [rip+0x6c328]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13258:	mov    r8,QWORD PTR [rip+0x6c2e1]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1325f:	mov    rcx,rbx
   13262:	jmp    131b0 <__sprintf_chk@plt+0x8800>
   13267:	nop    WORD PTR [rax+rax*1+0x0]
   13270:	xor    r12d,r12d
   13273:	cmp    BYTE PTR [rip+0x6c2ba],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1327a:	jne    1320b <__sprintf_chk@plt+0x885b>
   1327c:	call   f170 <__sprintf_chk@plt+0x47c0>
   13281:	mov    r8,QWORD PTR [rip+0x6c2b8]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13288:	mov    rdx,QWORD PTR [rip+0x6c2f1]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1328f:	mov    r12,r8
   13292:	cmp    r8,rdx
   13295:	jne    1320b <__sprintf_chk@plt+0x885b>
   1329b:	mov    BYTE PTR [rip+0x6c292],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   132a2:	xor    r12d,r12d
   132a5:	jmp    1320b <__sprintf_chk@plt+0x885b>
   132aa:	nop    WORD PTR [rax+rax*1+0x0]
   132b0:	mov    eax,0x200
   132b5:	sub    rax,rdx
   132b8:	lea    rdx,[r12+rbx*1]
   132bc:	cmp    eax,0x8
   132bf:	jae    132f0 <__sprintf_chk@plt+0x8940>
   132c1:	test   al,0x4
   132c3:	jne    1360d <__sprintf_chk@plt+0x8c5d>
   132c9:	test   eax,eax
   132cb:	je     1318f <__sprintf_chk@plt+0x87df>
   132d1:	mov    BYTE PTR [rdx],0x0
   132d4:	test   al,0x2
   132d6:	je     1318f <__sprintf_chk@plt+0x87df>
   132dc:	mov    eax,eax
   132de:	xor    ecx,ecx
   132e0:	mov    WORD PTR [rdx+rax*1-0x2],cx
   132e5:	jmp    1318f <__sprintf_chk@plt+0x87df>
   132ea:	nop    WORD PTR [rax+rax*1+0x0]
   132f0:	lea    rdi,[rdx+0x8]
   132f4:	mov    ecx,eax
   132f6:	mov    QWORD PTR [rdx],0x0
   132fd:	mov    QWORD PTR [rdx+rcx*1-0x8],0x0
   13306:	and    rdi,0xfffffffffffffff8
   1330a:	sub    rdx,rdi
   1330d:	add    eax,edx
   1330f:	shr    eax,0x3
   13312:	mov    ecx,eax
   13314:	xor    eax,eax
   13316:	rep stos QWORD PTR es:[rdi],rax
   13319:	jmp    1318f <__sprintf_chk@plt+0x87df>
   1331e:	xor    eax,eax
   13320:	mov    rdx,QWORD PTR [rsp+0x28]
   13325:	sub    rdx,QWORD PTR fs:0x28
   1332e:	jne    13622 <__sprintf_chk@plt+0x8c72>
   13334:	add    rsp,0x38
   13338:	pop    rbx
   13339:	pop    rbp
   1333a:	pop    r12
   1333c:	pop    r13
   1333e:	pop    r14
   13340:	pop    r15
   13342:	ret    
   13343:	mov    rsi,QWORD PTR [rbp+0x88]
   1334a:	mov    rdi,QWORD PTR [rbp+0x0]
   1334e:	mov    rdx,r13
   13351:	xor    ebp,ebp
   13353:	sub    rsi,rbx
   13356:	call   26750 <__sprintf_chk@plt+0x1bda0>
   1335b:	mov    rsi,QWORD PTR [rip+0x6c21e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13362:	jmp    133d8 <__sprintf_chk@plt+0x8a28>
   13364:	nop    DWORD PTR [rax+0x0]
   13368:	lea    rdi,[rdx+0x8]
   1336c:	mov    rcx,rdx
   1336f:	mov    rax,rbp
   13372:	mov    QWORD PTR [rdx],0x0
   13379:	mov    QWORD PTR [rdx+0x1f8],0x0
   13384:	and    rdi,0xfffffffffffffff8
   13388:	sub    rcx,rdi
   1338b:	add    ecx,0x200
   13391:	shr    ecx,0x3
   13394:	rep stos QWORD PTR es:[rdi],rax
   13397:	mov    rcx,QWORD PTR [rip+0x6c1a2]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1339e:	cmp    rdx,rcx
   133a1:	jb     133bc <__sprintf_chk@plt+0x8a0c>
   133a3:	sub    rdx,rcx
   133a6:	and    rdx,0xfffffffffffffe00
   133ad:	lea    rcx,[rcx+rdx*1+0x200]
   133b5:	mov    QWORD PTR [rip+0x6c184],rcx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   133bc:	mov    rsi,QWORD PTR [rip+0x6c1bd]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   133c3:	cmp    rsi,rcx
   133c6:	jb     a9fd <__sprintf_chk@plt+0x4d>
   133cc:	sub    rbx,0x200
   133d3:	test   rbx,rbx
   133d6:	jle    13420 <__sprintf_chk@plt+0x8a70>
   133d8:	mov    rdx,QWORD PTR [rip+0x6c161]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   133df:	cmp    rdx,rsi
   133e2:	jne    13368 <__sprintf_chk@plt+0x89b8>
   133e4:	xor    edx,edx
   133e6:	cmp    BYTE PTR [rip+0x6c147],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   133ed:	jne    13368 <__sprintf_chk@plt+0x89b8>
   133f3:	call   f170 <__sprintf_chk@plt+0x47c0>
   133f8:	mov    rdx,QWORD PTR [rip+0x6c141]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   133ff:	cmp    rdx,QWORD PTR [rip+0x6c17a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13406:	jne    13368 <__sprintf_chk@plt+0x89b8>
   1340c:	mov    BYTE PTR [rip+0x6c121],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   13413:	xor    edx,edx
   13415:	jmp    13368 <__sprintf_chk@plt+0x89b8>
   1341a:	nop    WORD PTR [rax+rax*1+0x0]
   13420:	mov    eax,0x1
   13425:	jmp    13320 <__sprintf_chk@plt+0x8970>
   1342a:	mov    rsi,QWORD PTR [rbp+0x88]
   13431:	mov    rdi,QWORD PTR [rbp+0x8]
   13435:	mov    rdx,rsi
   13438:	call   fa40 <__sprintf_chk@plt+0x5090>
   1343d:	jmp    131ec <__sprintf_chk@plt+0x883c>
   13442:	mov    rdx,r13
   13445:	xor    esi,esi
   13447:	mov    QWORD PTR [rsp+0x8],rcx
   1344c:	sub    rdx,rdi
   1344f:	add    rdi,r12
   13452:	call   a1b0 <memset@plt>
   13457:	test   BYTE PTR [rip+0x68c1e],0x80        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   1345e:	je     13509 <__sprintf_chk@plt+0x8b59>
   13464:	mov    rax,QWORD PTR [rip+0x6c09d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1346b:	mov    rcx,QWORD PTR [rsp+0x8]
   13470:	test   rax,rax
   13473:	je     1347c <__sprintf_chk@plt+0x8acc>
   13475:	call   rax
   13477:	mov    rcx,QWORD PTR [rsp+0x8]
   1347c:	mov    BYTE PTR [rsp+0x24],0x0
   13481:	mov    rsi,rcx
   13484:	lea    rbx,[rsp+0x24]
   13489:	movabs r8,0xcccccccccccccccd
   13493:	nop    DWORD PTR [rax+rax*1+0x0]
   13498:	mov    rax,rsi
   1349b:	sub    rbx,0x1
   1349f:	mul    r8
   134a2:	mov    rax,rsi
   134a5:	shr    rdx,0x3
   134a9:	lea    rdi,[rdx+rdx*4]
   134ad:	add    rdi,rdi
   134b0:	sub    rax,rdi
   134b3:	add    eax,0x30
   134b6:	mov    BYTE PTR [rbx],al
   134b8:	mov    rax,rsi
   134bb:	mov    rsi,rdx
   134be:	cmp    rax,0x9
   134c2:	ja     13498 <__sprintf_chk@plt+0x8ae8>
   134c4:	mov    rdi,QWORD PTR [rbp+0x0]
   134c8:	mov    QWORD PTR [rsp+0x8],rcx
   134cd:	call   4b670 <argp_usage@@Base+0x82f0>
   134d2:	mov    rcx,QWORD PTR [rsp+0x8]
   134d7:	xor    edi,edi
   134d9:	mov    r8d,0x5
   134df:	lea    rdx,[rip+0x504e2]        # 639c8 <_obstack_memory_used@@Base+0x16d48>
   134e6:	lea    rsi,[rip+0x5050b]        # 639f8 <_obstack_memory_used@@Base+0x16d78>
   134ed:	mov    r12,rax
   134f0:	call   a6e0 <dcngettext@plt>
   134f5:	mov    r8,rbx
   134f8:	mov    rcx,r12
   134fb:	xor    esi,esi
   134fd:	mov    rdx,rax
   13500:	xor    edi,edi
   13502:	xor    eax,eax
   13504:	call   a640 <error@plt>
   13509:	cmp    BYTE PTR [rip+0x6bff0],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   13510:	je     135e6 <__sprintf_chk@plt+0x8c36>
   13516:	sub    r14,r13
   13519:	mov    rsi,QWORD PTR [rip+0x6c060]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13520:	xor    ebx,ebx
   13522:	test   r14,r14
   13525:	jg     135a4 <__sprintf_chk@plt+0x8bf4>
   13527:	jmp    13420 <__sprintf_chk@plt+0x8a70>
   1352c:	nop    DWORD PTR [rax+0x0]
   13530:	lea    rdi,[rdx+0x8]
   13534:	mov    rcx,rdx
   13537:	mov    rax,rbx
   1353a:	mov    QWORD PTR [rdx],0x0
   13541:	mov    QWORD PTR [rdx+0x1f8],0x0
   1354c:	and    rdi,0xfffffffffffffff8
   13550:	sub    rcx,rdi
   13553:	add    ecx,0x200
   13559:	shr    ecx,0x3
   1355c:	rep stos QWORD PTR es:[rdi],rax
   1355f:	mov    rcx,QWORD PTR [rip+0x6bfda]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13566:	cmp    rcx,rdx
   13569:	ja     13584 <__sprintf_chk@plt+0x8bd4>
   1356b:	sub    rdx,rcx
   1356e:	and    rdx,0xfffffffffffffe00
   13575:	lea    rcx,[rcx+rdx*1+0x200]
   1357d:	mov    QWORD PTR [rip+0x6bfbc],rcx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13584:	mov    rsi,QWORD PTR [rip+0x6bff5]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1358b:	cmp    rcx,rsi
   1358e:	ja     a9fd <__sprintf_chk@plt+0x4d>
   13594:	sub    r14,0x200
   1359b:	test   r14,r14
   1359e:	jle    13420 <__sprintf_chk@plt+0x8a70>
   135a4:	mov    rdx,QWORD PTR [rip+0x6bf95]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   135ab:	cmp    rdx,rsi
   135ae:	jne    13530 <__sprintf_chk@plt+0x8b80>
   135b0:	xor    edx,edx
   135b2:	cmp    BYTE PTR [rip+0x6bf7b],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   135b9:	jne    13530 <__sprintf_chk@plt+0x8b80>
   135bf:	call   f170 <__sprintf_chk@plt+0x47c0>
   135c4:	mov    rdx,QWORD PTR [rip+0x6bf75]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   135cb:	cmp    rdx,QWORD PTR [rip+0x6bfae]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   135d2:	jne    13530 <__sprintf_chk@plt+0x8b80>
   135d8:	mov    BYTE PTR [rip+0x6bf55],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   135df:	xor    edx,edx
   135e1:	jmp    13530 <__sprintf_chk@plt+0x8b80>
   135e6:	mov    eax,DWORD PTR [rip+0x6bad8]        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   135ec:	test   eax,eax
   135ee:	jg     13516 <__sprintf_chk@plt+0x8b66>
   135f4:	mov    DWORD PTR [rip+0x6bac6],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   135fe:	jmp    13516 <__sprintf_chk@plt+0x8b66>
   13603:	mov    eax,0x2
   13608:	jmp    13320 <__sprintf_chk@plt+0x8970>
   1360d:	mov    eax,eax
   1360f:	mov    DWORD PTR [rdx],0x0
   13615:	mov    DWORD PTR [rdx+rax*1-0x4],0x0
   1361d:	jmp    1318f <__sprintf_chk@plt+0x87df>
   13622:	call   a0a0 <__stack_chk_fail@plt>
   13627:	nop    WORD PTR [rax+rax*1+0x0]
   13630:	endbr64 
   13634:	push   r12
   13636:	mov    r12,rdi
   13639:	push   rbp
   1363a:	push   rbx
   1363b:	mov    rbp,QWORD PTR [rdi]
   1363e:	mov    rdi,rbp
   13641:	call   a060 <strlen@plt>
   13646:	mov    rbx,rax
   13649:	jmp    1365e <__sprintf_chk@plt+0x8cae>
   1364b:	nop    DWORD PTR [rax+rax*1+0x0]
   13650:	cmp    BYTE PTR [rbp+rbx*1-0x1],0x2f
   13655:	lea    rax,[rbx-0x1]
   13659:	jne    136a0 <__sprintf_chk@plt+0x8cf0>
   1365b:	mov    rbx,rax
   1365e:	test   rbx,rbx
   13661:	jne    13650 <__sprintf_chk@plt+0x8ca0>
   13663:	mov    rax,rbp
   13666:	cmp    BYTE PTR [rax],0x2f
   13669:	jne    13680 <__sprintf_chk@plt+0x8cd0>
   1366b:	mov    BYTE PTR [rax],0x2f
   1366e:	mov    rax,QWORD PTR [r12]
   13672:	mov    BYTE PTR [rax+rbx*1+0x1],0x0
   13677:	pop    rbx
   13678:	pop    rbp
   13679:	pop    r12
   1367b:	ret    
   1367c:	nop    DWORD PTR [rax+0x0]
   13680:	lea    rsi,[rbx+0x2]
   13684:	mov    rdi,rbp
   13687:	call   a570 <realloc@plt>
   1368c:	test   rax,rax
   1368f:	je     136a7 <__sprintf_chk@plt+0x8cf7>
   13691:	mov    QWORD PTR [r12],rax
   13695:	add    rax,rbx
   13698:	jmp    1366b <__sprintf_chk@plt+0x8cbb>
   1369a:	nop    WORD PTR [rax+rax*1+0x0]
   136a0:	lea    rax,[rbp+rbx*1+0x0]
   136a5:	jmp    13666 <__sprintf_chk@plt+0x8cb6>
   136a7:	call   19130 <__sprintf_chk@plt+0xe780>
   136ac:	nop    DWORD PTR [rax+0x0]
   136b0:	endbr64 
   136b4:	push   r12
   136b6:	push   rbx
   136b7:	mov    rbx,rdi
   136ba:	sub    rsp,0x8
   136be:	call   9e40 <__errno_location@plt>
   136c3:	cmp    DWORD PTR [rax],0x18
   136c6:	sete   al
   136c9:	test   rbx,rbx
   136cc:	setne  dl
   136cf:	and    al,dl
   136d1:	mov    r12d,eax
   136d4:	jne    136e8 <__sprintf_chk@plt+0x8d38>
   136d6:	add    rsp,0x8
   136da:	mov    eax,r12d
   136dd:	pop    rbx
   136de:	pop    r12
   136e0:	ret    
   136e1:	nop    DWORD PTR [rax+0x0]
   136e8:	mov    rax,QWORD PTR [rbx+0x198]
   136ef:	test   rax,rax
   136f2:	je     13730 <__sprintf_chk@plt+0x8d80>
   136f4:	mov    rax,QWORD PTR [rax+0x198]
   136fb:	nop    DWORD PTR [rax+rax*1+0x0]
   13700:	test   rax,rax
   13703:	je     13730 <__sprintf_chk@plt+0x8d80>
   13705:	mov    edx,DWORD PTR [rax+0x1a8]
   1370b:	mov    rdi,rax
   1370e:	mov    rax,QWORD PTR [rax+0x198]
   13715:	test   edx,edx
   13717:	jle    13700 <__sprintf_chk@plt+0x8d50>
   13719:	test   rax,rax
   1371c:	je     13728 <__sprintf_chk@plt+0x8d78>
   1371e:	mov    edx,DWORD PTR [rax+0x1a8]
   13724:	test   edx,edx
   13726:	jg     13705 <__sprintf_chk@plt+0x8d55>
   13728:	call   3c160 <__sprintf_chk@plt+0x317b0>
   1372d:	jmp    136d6 <__sprintf_chk@plt+0x8d26>
   1372f:	nop
   13730:	xor    r12d,r12d
   13733:	add    rsp,0x8
   13737:	mov    eax,r12d
   1373a:	pop    rbx
   1373b:	pop    r12
   1373d:	ret    
   1373e:	xchg   ax,ax
   13740:	push   r15
   13742:	push   r14
   13744:	push   r13
   13746:	push   r12
   13748:	push   rbp
   13749:	push   rbx
   1374a:	sub    rsp,0x318
   13751:	mov    rbp,QWORD PTR [rip+0x6bbd0]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   13758:	mov    rax,QWORD PTR fs:0x28
   13761:	mov    QWORD PTR [rsp+0x308],rax
   13769:	xor    eax,eax
   1376b:	lea    rsi,[rsp+0x70]
   13770:	mov    rdi,rbp
   13773:	call   d6a0 <__sprintf_chk@plt+0x2cf0>
   13778:	test   eax,eax
   1377a:	je     139f8 <__sprintf_chk@plt+0x9048>
   13780:	mov    eax,DWORD PTR [rsp+0x88]
   13787:	lea    r12,[rip+0x6bb92]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1378e:	mov    edx,eax
   13790:	and    edx,0xf000
   13796:	cmp    edx,0x8000
   1379c:	jne    139a0 <__sprintf_chk@plt+0x8ff0>
   137a2:	xor    eax,DWORD PTR [rip+0x6bbe8]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   137a8:	test   eax,0xfff
   137ad:	jne    13aef <__sprintf_chk@plt+0x913f>
   137b3:	mov    eax,DWORD PTR [rip+0x6bbdb]        # 7f394 <obstack_alloc_failed_handler@@Base+0x55c>
   137b9:	cmp    DWORD PTR [rsp+0x8c],eax
   137c0:	jne    13aca <__sprintf_chk@plt+0x911a>
   137c6:	mov    eax,DWORD PTR [rip+0x6bbcc]        # 7f398 <obstack_alloc_failed_handler@@Base+0x560>
   137cc:	cmp    DWORD PTR [rsp+0x90],eax
   137d3:	jne    13aa5 <__sprintf_chk@plt+0x90f5>
   137d9:	xor    edx,edx
   137db:	cmp    DWORD PTR [rip+0x6bac6],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   137e2:	mov    rcx,QWORD PTR [rsp+0xc8]
   137ea:	mov    rdi,QWORD PTR [rsp+0xd0]
   137f2:	mov    rax,QWORD PTR [rip+0x6bc1f]        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   137f9:	mov    rsi,QWORD PTR [rip+0x6bc20]        # 7f420 <obstack_alloc_failed_handler@@Base+0x5e8>
   13800:	jne    13814 <__sprintf_chk@plt+0x8e64>
   13802:	xor    edx,edx
   13804:	cmp    rdi,rsi
   13807:	setl   sil
   1380b:	setg   dl
   1380e:	movzx  esi,sil
   13812:	sub    edx,esi
   13814:	cmp    rcx,rax
   13817:	setg   al
   1381a:	setl   cl
   1381d:	movzx  eax,al
   13820:	movzx  ecx,cl
   13823:	sub    eax,ecx
   13825:	lea    eax,[rdx+rax*2]
   13828:	test   eax,eax
   1382a:	jne    13a80 <__sprintf_chk@plt+0x90d0>
   13830:	mov    rax,QWORD PTR [rip+0x6b891]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   13837:	cmp    BYTE PTR [rax+0x9c],0x53
   1383e:	je     13855 <__sprintf_chk@plt+0x8ea5>
   13840:	mov    rax,QWORD PTR [rip+0x6bb61]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   13847:	cmp    QWORD PTR [rsp+0xa0],rax
   1384f:	jne    13a08 <__sprintf_chk@plt+0x9058>
   13855:	mov    edx,DWORD PTR [rip+0x6b715]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   1385b:	mov    edi,DWORD PTR [rip+0x687bf]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   13861:	mov    rsi,rbp
   13864:	call   a230 <__openat_2@plt>
   13869:	mov    DWORD PTR [rip+0x6bd65],eax        # 7f5d4 <obstack_alloc_failed_handler@@Base+0x79c>
   1386f:	mov    ebx,eax
   13871:	test   eax,eax
   13873:	js     13a16 <__sprintf_chk@plt+0x9066>
   13879:	cmp    BYTE PTR [rip+0x6bbc0],0x0        # 7f440 <obstack_alloc_failed_handler@@Base+0x608>
   13880:	je     13a40 <__sprintf_chk@plt+0x9090>
   13886:	lea    r15,[rsp+0x20]
   1388b:	mov    rdi,r15
   1388e:	mov    QWORD PTR [rsp+0x10],r15
   13893:	call   32390 <__sprintf_chk@plt+0x279e0>
   13898:	test   al,al
   1389a:	je     13a4c <__sprintf_chk@plt+0x909c>
   138a0:	mov    rax,QWORD PTR [rsp+0x40]
   138a5:	mov    QWORD PTR [rsp+0x38],r12
   138aa:	mov    DWORD PTR [rsp+0x20],ebx
   138ae:	mov    rax,QWORD PTR [rax+0x28]
   138b2:	mov    BYTE PTR [rsp+0x24],0x1
   138b7:	test   rax,rax
   138ba:	je     13b94 <__sprintf_chk@plt+0x91e4>
   138c0:	mov    rdi,r15
   138c3:	call   rax
   138c5:	cmp    BYTE PTR [rip+0x6bce4],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   138cc:	mov    ebx,eax
   138ce:	jne    13e9d <__sprintf_chk@plt+0x94ed>
   138d4:	mov    r14,QWORD PTR [rsp+0x38]
   138d9:	test   bl,bl
   138db:	je     13bf8 <__sprintf_chk@plt+0x9248>
   138e1:	mov    QWORD PTR [rsp+0x8],0x0
   138ea:	xor    r13d,r13d
   138ed:	lea    r15,[rsp+0x100]
   138f5:	mov    rax,QWORD PTR [rsp+0x8]
   138fa:	cmp    QWORD PTR [r14+0x130],rax
   13901:	jbe    13c0e <__sprintf_chk@plt+0x925e>
   13907:	mov    rdi,QWORD PTR [rsp+0x8]
   1390c:	mov    rax,QWORD PTR [r14+0x140]
   13913:	mov    rsi,r13
   13916:	shl    rdi,0x4
   1391a:	mov    QWORD PTR [rsp+0x18],rdi
   1391f:	mov    rbx,QWORD PTR [rax+rdi*1]
   13923:	mov    rdi,QWORD PTR [rsp+0x10]
   13928:	call   32410 <__sprintf_chk@plt+0x27a60>
   1392d:	test   al,al
   1392f:	je     13bf8 <__sprintf_chk@plt+0x9248>
   13935:	nop    DWORD PTR [rax]
   13938:	cmp    rbx,r13
   1393b:	jle    13bd2 <__sprintf_chk@plt+0x9222>
   13941:	mov    r14,rbx
   13944:	mov    eax,0x200
   13949:	mov    edi,DWORD PTR [rsp+0x20]
   1394d:	mov    rsi,r15
   13950:	sub    r14,r13
   13953:	cmp    r14,rax
   13956:	cmovg  r14,rax
   1395a:	mov    rdx,r14
   1395d:	call   4b7c0 <argp_usage@@Base+0x8440>
   13962:	cmp    rax,0xffffffffffffffff
   13966:	je     13c31 <__sprintf_chk@plt+0x9281>
   1396c:	test   rax,rax
   1396f:	je     13c46 <__sprintf_chk@plt+0x9296>
   13975:	lea    rcx,[r15+rax*1]
   13979:	mov    rdx,r15
   1397c:	nop    DWORD PTR [rax+0x0]
   13980:	add    rdx,0x1
   13984:	cmp    BYTE PTR [rdx-0x1],0x0
   13988:	jne    13de0 <__sprintf_chk@plt+0x9430>
   1398e:	cmp    rcx,rdx
   13991:	jne    13980 <__sprintf_chk@plt+0x8fd0>
   13993:	add    r13,rax
   13996:	jmp    13938 <__sprintf_chk@plt+0x8f88>
   13998:	nop    DWORD PTR [rax+rax*1+0x0]
   139a0:	mov    edx,0x5
   139a5:	lea    rsi,[rip+0x4f69c]        # 63048 <_obstack_memory_used@@Base+0x163c8>
   139ac:	xor    edi,edi
   139ae:	call   a040 <dcgettext@plt>
   139b3:	mov    rdi,r12
   139b6:	mov    rsi,rax
   139b9:	xor    eax,eax
   139bb:	call   d410 <__sprintf_chk@plt+0x2a60>
   139c0:	cmp    BYTE PTR [rip+0x6bae2],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   139c7:	je     13a01 <__sprintf_chk@plt+0x9051>
   139c9:	mov    rax,QWORD PTR [rsp+0x308]
   139d1:	sub    rax,QWORD PTR fs:0x28
   139da:	jne    13eb8 <__sprintf_chk@plt+0x9508>
   139e0:	add    rsp,0x318
   139e7:	pop    rbx
   139e8:	pop    rbp
   139e9:	pop    r12
   139eb:	pop    r13
   139ed:	pop    r14
   139ef:	pop    r15
   139f1:	ret    
   139f2:	nop    WORD PTR [rax+rax*1+0x0]
   139f8:	cmp    BYTE PTR [rip+0x6baaa],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   139ff:	jne    139c9 <__sprintf_chk@plt+0x9019>
   13a01:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   13a06:	jmp    139c9 <__sprintf_chk@plt+0x9019>
   13a08:	mov    edx,0x5
   13a0d:	lea    rsi,[rip+0x4f99f]        # 633b3 <_obstack_memory_used@@Base+0x16733>
   13a14:	jmp    139ac <__sprintf_chk@plt+0x8ffc>
   13a16:	mov    rsi,rbp
   13a19:	lea    rdi,[rip+0x4f7a0]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   13a20:	call   3bad0 <__sprintf_chk@plt+0x31120>
   13a25:	cmp    BYTE PTR [rip+0x6ba7d],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   13a2c:	je     13bc8 <__sprintf_chk@plt+0x9218>
   13a32:	xor    esi,esi
   13a34:	mov    rdi,r12
   13a37:	xor    eax,eax
   13a39:	call   d410 <__sprintf_chk@plt+0x2a60>
   13a3e:	jmp    139c9 <__sprintf_chk@plt+0x9019>
   13a40:	lea    rdi,[rip+0xffffffffffff9b59]        # d5a0 <__sprintf_chk@plt+0x2bf0>
   13a47:	call   59d10 <_obstack_memory_used@@Base+0xd090>
   13a4c:	cmp    DWORD PTR [rip+0x6b519],0x1        # 7ef6c <obstack_alloc_failed_handler@@Base+0x134>
   13a53:	mov    edi,DWORD PTR [rip+0x6bb7b]        # 7f5d4 <obstack_alloc_failed_handler@@Base+0x79c>
   13a59:	je     13b14 <__sprintf_chk@plt+0x9164>
   13a5f:	call   a200 <close@plt>
   13a64:	test   eax,eax
   13a66:	je     139c9 <__sprintf_chk@plt+0x9019>
   13a6c:	mov    rsi,rbp
   13a6f:	lea    rdi,[rip+0x52fe6]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   13a76:	call   3bad0 <__sprintf_chk@plt+0x31120>
   13a7b:	jmp    139c9 <__sprintf_chk@plt+0x9019>
   13a80:	xor    edi,edi
   13a82:	mov    edx,0x5
   13a87:	lea    rsi,[rip+0x4f914]        # 633a2 <_obstack_memory_used@@Base+0x16722>
   13a8e:	call   a040 <dcgettext@plt>
   13a93:	mov    rdi,r12
   13a96:	mov    rsi,rax
   13a99:	xor    eax,eax
   13a9b:	call   d410 <__sprintf_chk@plt+0x2a60>
   13aa0:	jmp    13830 <__sprintf_chk@plt+0x8e80>
   13aa5:	xor    edi,edi
   13aa7:	mov    edx,0x5
   13aac:	lea    rsi,[rip+0x4f8e3]        # 63396 <_obstack_memory_used@@Base+0x16716>
   13ab3:	call   a040 <dcgettext@plt>
   13ab8:	mov    rdi,r12
   13abb:	mov    rsi,rax
   13abe:	xor    eax,eax
   13ac0:	call   d410 <__sprintf_chk@plt+0x2a60>
   13ac5:	jmp    137d9 <__sprintf_chk@plt+0x8e29>
   13aca:	xor    edi,edi
   13acc:	mov    edx,0x5
   13ad1:	lea    rsi,[rip+0x4f8b2]        # 6338a <_obstack_memory_used@@Base+0x1670a>
   13ad8:	call   a040 <dcgettext@plt>
   13add:	mov    rdi,r12
   13ae0:	mov    rsi,rax
   13ae3:	xor    eax,eax
   13ae5:	call   d410 <__sprintf_chk@plt+0x2a60>
   13aea:	jmp    137c6 <__sprintf_chk@plt+0x8e16>
   13aef:	xor    edi,edi
   13af1:	mov    edx,0x5
   13af6:	lea    rsi,[rip+0x4f55d]        # 6305a <_obstack_memory_used@@Base+0x163da>
   13afd:	call   a040 <dcgettext@plt>
   13b02:	mov    rdi,r12
   13b05:	mov    rsi,rax
   13b08:	xor    eax,eax
   13b0a:	call   d410 <__sprintf_chk@plt+0x2a60>
   13b0f:	jmp    137b3 <__sprintf_chk@plt+0x8e03>
   13b14:	cmp    QWORD PTR [rsp+0xa0],0x0
   13b1d:	je     13a5f <__sprintf_chk@plt+0x90af>
   13b23:	mov    rax,QWORD PTR [rsp+0xb8]
   13b2b:	mov    rdx,rbp
   13b2e:	mov    DWORD PTR [rsp],edi
   13b31:	lea    rcx,[rsp+0x100]
   13b39:	mov    r8d,DWORD PTR [rip+0x6b434]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   13b40:	mov    esi,DWORD PTR [rip+0x684da]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   13b46:	mov    QWORD PTR [rsp+0x118],0x3ffffffe
   13b52:	mov    QWORD PTR [rsp+0x100],rax
   13b5a:	mov    rax,QWORD PTR [rsp+0xc0]
   13b62:	mov    QWORD PTR [rsp+0x108],rax
   13b6a:	call   48980 <argp_usage@@Base+0x5600>
   13b6f:	mov    edi,DWORD PTR [rsp]
   13b72:	test   eax,eax
   13b74:	je     13a5f <__sprintf_chk@plt+0x90af>
   13b7a:	lea    rdi,[rip+0x4f859]        # 633da <_obstack_memory_used@@Base+0x1675a>
   13b81:	mov    rsi,rbp
   13b84:	call   3bad0 <__sprintf_chk@plt+0x31120>
   13b89:	mov    edi,DWORD PTR [rip+0x6ba45]        # 7f5d4 <obstack_alloc_failed_handler@@Base+0x79c>
   13b8f:	jmp    13a5f <__sprintf_chk@plt+0x90af>
   13b94:	cmp    BYTE PTR [rip+0x6ba15],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   13b9b:	mov    rsi,QWORD PTR [rip+0x6b806]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   13ba2:	lea    r14,[rip+0x6b777]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   13ba9:	mov    rdi,QWORD PTR [rip+0x6b770]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   13bb0:	je     138e1 <__sprintf_chk@plt+0x8f31>
   13bb6:	mov    rdx,rsi
   13bb9:	call   fa40 <__sprintf_chk@plt+0x5090>
   13bbe:	mov    r14,QWORD PTR [rsp+0x38]
   13bc3:	jmp    138e1 <__sprintf_chk@plt+0x8f31>
   13bc8:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   13bcd:	jmp    13a32 <__sprintf_chk@plt+0x9082>
   13bd2:	mov    rax,QWORD PTR [rsp+0x38]
   13bd7:	mov    rbx,QWORD PTR [rsp+0x18]
   13bdc:	mov    rdi,QWORD PTR [rsp+0x10]
   13be1:	mov    rax,QWORD PTR [rax+0x140]
   13be8:	mov    rsi,QWORD PTR [rax+rbx*1]
   13bec:	call   32410 <__sprintf_chk@plt+0x27a60>
   13bf1:	test   al,al
   13bf3:	jne    13c6a <__sprintf_chk@plt+0x92ba>
   13bf5:	nop    DWORD PTR [rax]
   13bf8:	mov    rax,QWORD PTR [rsp+0x38]
   13bfd:	mov    rdi,QWORD PTR [rax+0x118]
   13c04:	sub    rdi,QWORD PTR [rsp+0x30]
   13c09:	call   25030 <__sprintf_chk@plt+0x1a680>
   13c0e:	call   db80 <__sprintf_chk@plt+0x31d0>
   13c13:	mov    rax,QWORD PTR [rsp+0x40]
   13c18:	mov    rax,QWORD PTR [rax+0x8]
   13c1c:	test   rax,rax
   13c1f:	je     13a4c <__sprintf_chk@plt+0x909c>
   13c25:	mov    rdi,QWORD PTR [rsp+0x10]
   13c2a:	call   rax
   13c2c:	jmp    13a4c <__sprintf_chk@plt+0x909c>
   13c31:	mov    rax,QWORD PTR [rsp+0x38]
   13c36:	mov    rdx,r14
   13c39:	mov    rsi,r13
   13c3c:	mov    rdi,QWORD PTR [rax]
   13c3f:	call   26750 <__sprintf_chk@plt+0x1bda0>
   13c44:	jmp    13bf8 <__sprintf_chk@plt+0x9248>
   13c46:	mov    edx,0x5
   13c4b:	lea    rsi,[rip+0x4f761]        # 633b3 <_obstack_memory_used@@Base+0x16733>
   13c52:	xor    edi,edi
   13c54:	call   a040 <dcgettext@plt>
   13c59:	mov    rdi,QWORD PTR [rsp+0x38]
   13c5e:	mov    rsi,rax
   13c61:	xor    eax,eax
   13c63:	call   d410 <__sprintf_chk@plt+0x2a60>
   13c68:	jmp    13bf8 <__sprintf_chk@plt+0x9248>
   13c6a:	mov    r14,QWORD PTR [rsp+0x38]
   13c6f:	mov    rdx,QWORD PTR [rip+0x6b932]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   13c76:	mov    rax,QWORD PTR [r14+0x140]
   13c7d:	add    rax,rbx
   13c80:	mov    rbx,QWORD PTR [rax+0x8]
   13c84:	test   rdx,rdx
   13c87:	je     13c99 <__sprintf_chk@plt+0x92e9>
   13c89:	mov    rsi,QWORD PTR [r14+0x118]
   13c90:	sub    rsi,QWORD PTR [rsp+0x30]
   13c95:	mov    QWORD PTR [rdx+0x20],rsi
   13c99:	test   rbx,rbx
   13c9c:	jg     13d4d <__sprintf_chk@plt+0x939d>
   13ca2:	jmp    13e4f <__sprintf_chk@plt+0x949f>
   13ca7:	nop    WORD PTR [rax+rax*1+0x0]
   13cb0:	test   r8,r8
   13cb3:	je     13d99 <__sprintf_chk@plt+0x93e9>
   13cb9:	lea    rax,[r8+0x200]
   13cc0:	cmp    QWORD PTR [rip+0x6b8b9],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13cc7:	mov    QWORD PTR [rip+0x6b872],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13cce:	jb     aa02 <__sprintf_chk@plt+0x52>
   13cd4:	mov    edi,DWORD PTR [rsp+0x20]
   13cd8:	mov    rdx,r14
   13cdb:	mov    rsi,r15
   13cde:	mov    QWORD PTR [rsp],r8
   13ce2:	add    QWORD PTR [rsp+0x30],0x200
   13ceb:	call   4b7c0 <argp_usage@@Base+0x8440>
   13cf0:	mov    r8,QWORD PTR [rsp]
   13cf4:	cmp    rax,0xffffffffffffffff
   13cf8:	mov    rdx,rax
   13cfb:	je     13e60 <__sprintf_chk@plt+0x94b0>
   13d01:	test   rax,rax
   13d04:	je     13e1a <__sprintf_chk@plt+0x946a>
   13d0a:	mov    rsi,QWORD PTR [rip+0x6b897]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   13d11:	sub    rbx,rax
   13d14:	mov    r14,QWORD PTR [rsp+0x38]
   13d19:	mov    r13,rbx
   13d1c:	test   rsi,rsi
   13d1f:	je     13d31 <__sprintf_chk@plt+0x9381>
   13d21:	mov    rax,QWORD PTR [r14+0x118]
   13d28:	sub    rax,QWORD PTR [rsp+0x30]
   13d2d:	mov    QWORD PTR [rsi+0x20],rax
   13d31:	mov    rsi,r15
   13d34:	mov    rdi,r8
   13d37:	call   a2c0 <memcmp@plt>
   13d3c:	test   eax,eax
   13d3e:	jne    13e8c <__sprintf_chk@plt+0x94dc>
   13d44:	test   r13,r13
   13d47:	jle    13e3f <__sprintf_chk@plt+0x948f>
   13d4d:	mov    eax,0x200
   13d52:	mov    r8,QWORD PTR [rip+0x6b7e7]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13d59:	cmp    rbx,rax
   13d5c:	cmovle rax,rbx
   13d60:	cmp    r8,QWORD PTR [rip+0x6b819]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13d67:	mov    r14,rax
   13d6a:	jne    13cb0 <__sprintf_chk@plt+0x9300>
   13d70:	cmp    BYTE PTR [rip+0x6b7bd],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   13d77:	jne    13d99 <__sprintf_chk@plt+0x93e9>
   13d79:	call   f170 <__sprintf_chk@plt+0x47c0>
   13d7e:	mov    r8,QWORD PTR [rip+0x6b7bb]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13d85:	cmp    r8,QWORD PTR [rip+0x6b7f4]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13d8c:	jne    13cb0 <__sprintf_chk@plt+0x9300>
   13d92:	mov    BYTE PTR [rip+0x6b79b],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   13d99:	mov    rax,QWORD PTR [rip+0x6b768]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   13da0:	test   rax,rax
   13da3:	je     13da7 <__sprintf_chk@plt+0x93f7>
   13da5:	call   rax
   13da7:	mov    edx,0x5
   13dac:	lea    rsi,[rip+0x4f60d]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   13db3:	xor    edi,edi
   13db5:	call   a040 <dcgettext@plt>
   13dba:	xor    esi,esi
   13dbc:	xor    edi,edi
   13dbe:	mov    rdx,rax
   13dc1:	xor    eax,eax
   13dc3:	call   a640 <error@plt>
   13dc8:	mov    DWORD PTR [rip+0x6b2f2],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   13dd2:	jmp    13bf8 <__sprintf_chk@plt+0x9248>
   13dd7:	nop    WORD PTR [rax+rax*1+0x0]
   13de0:	lea    rsi,[rsp+0x50]
   13de5:	mov    rdi,r13
   13de8:	call   49490 <argp_usage@@Base+0x6110>
   13ded:	xor    edi,edi
   13def:	mov    edx,0x5
   13df4:	lea    rsi,[rip+0x4fc2d]        # 63a28 <_obstack_memory_used@@Base+0x16da8>
   13dfb:	mov    r12,rax
   13dfe:	call   a040 <dcgettext@plt>
   13e03:	mov    rdi,QWORD PTR [rsp+0x38]
   13e08:	mov    rdx,r12
   13e0b:	mov    rsi,rax
   13e0e:	xor    eax,eax
   13e10:	call   d410 <__sprintf_chk@plt+0x2a60>
   13e15:	jmp    13bf8 <__sprintf_chk@plt+0x9248>
   13e1a:	xor    edi,edi
   13e1c:	mov    edx,0x5
   13e21:	lea    rsi,[rip+0x4f58b]        # 633b3 <_obstack_memory_used@@Base+0x16733>
   13e28:	call   a040 <dcgettext@plt>
   13e2d:	mov    rdi,r12
   13e30:	mov    rsi,rax
   13e33:	xor    eax,eax
   13e35:	call   d410 <__sprintf_chk@plt+0x2a60>
   13e3a:	jmp    13bf8 <__sprintf_chk@plt+0x9248>
   13e3f:	mov    rax,QWORD PTR [rsp+0x18]
   13e44:	add    rax,QWORD PTR [r14+0x140]
   13e4b:	mov    rbx,QWORD PTR [rax+0x8]
   13e4f:	add    rbx,QWORD PTR [rax]
   13e52:	add    QWORD PTR [rsp+0x8],0x1
   13e58:	mov    r13,rbx
   13e5b:	jmp    138f5 <__sprintf_chk@plt+0x8f45>
   13e60:	mov    rax,QWORD PTR [rsp+0x38]
   13e65:	mov    r13,QWORD PTR [rsp+0x18]
   13e6a:	mov    rdx,r14
   13e6d:	add    r13,QWORD PTR [rax+0x140]
   13e74:	mov    rdi,QWORD PTR [rax]
   13e77:	mov    rsi,QWORD PTR [r13+0x8]
   13e7b:	add    rsi,QWORD PTR [r13+0x0]
   13e7f:	sub    rsi,rbx
   13e82:	call   26750 <__sprintf_chk@plt+0x1bda0>
   13e87:	jmp    13bf8 <__sprintf_chk@plt+0x9248>
   13e8c:	mov    edx,0x5
   13e91:	lea    rsi,[rip+0x4f19b]        # 63033 <_obstack_memory_used@@Base+0x163b3>
   13e98:	jmp    13c52 <__sprintf_chk@plt+0x92a2>
   13e9d:	mov    rsi,QWORD PTR [rip+0x6b504]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   13ea4:	mov    rdi,QWORD PTR [rip+0x6b475]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   13eab:	mov    rdx,rsi
   13eae:	call   fa40 <__sprintf_chk@plt+0x5090>
   13eb3:	jmp    138d4 <__sprintf_chk@plt+0x8f24>
   13eb8:	call   a0a0 <__stack_chk_fail@plt>
   13ebd:	nop    DWORD PTR [rax]
   13ec0:	endbr64 
   13ec4:	push   r14
   13ec6:	push   r13
   13ec8:	push   r12
   13eca:	push   rbp
   13ecb:	push   rbx
   13ecc:	sub    rsp,0xb0
   13ed3:	mov    rsi,QWORD PTR [rip+0x6b1ee]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   13eda:	mov    rax,QWORD PTR fs:0x28
   13ee3:	mov    QWORD PTR [rsp+0xa8],rax
   13eeb:	xor    eax,eax
   13eed:	mov    rax,QWORD PTR [rip+0x6b64c]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13ef4:	cmp    rsi,rax
   13ef7:	jb     13f15 <__sprintf_chk@plt+0x9565>
   13ef9:	mov    rdx,rsi
   13efc:	sub    rdx,rax
   13eff:	and    rdx,0xfffffffffffffe00
   13f06:	lea    rax,[rax+rdx*1+0x200]
   13f0e:	mov    QWORD PTR [rip+0x6b62b],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   13f15:	cmp    QWORD PTR [rip+0x6b664],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   13f1c:	jb     aa07 <__sprintf_chk@plt+0x57>
   13f22:	mov    edi,DWORD PTR [rip+0x6b198]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   13f28:	test   edi,edi
   13f2a:	je     13f63 <__sprintf_chk@plt+0x95b3>
   13f2c:	cmp    BYTE PTR [rip+0x6b769],0x0        # 7f69c <obstack_alloc_failed_handler@@Base+0x864>
   13f33:	jne    14110 <__sprintf_chk@plt+0x9760>
   13f39:	cmp    DWORD PTR [rip+0x6b368],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   13f40:	je     140d0 <__sprintf_chk@plt+0x9720>
   13f46:	lea    rbp,[rip+0x6b3d3]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   13f4d:	mov    rdx,0xffffffffffffffff
   13f54:	mov    rdi,rbp
   13f57:	call   244c0 <__sprintf_chk@plt+0x19b10>
   13f5c:	mov    rsi,QWORD PTR [rip+0x6b165]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   13f63:	movzx  ebx,BYTE PTR [rsi+0x9c]
   13f6a:	cmp    bl,0x56
   13f6d:	ja     13f88 <__sprintf_chk@plt+0x95d8>
   13f6f:	lea    rdx,[rip+0x50036]        # 63fac <_obstack_memory_used@@Base+0x1732c>
   13f76:	movzx  eax,bl
   13f79:	movsxd rax,DWORD PTR [rdx+rax*4]
   13f7d:	add    rax,rdx
   13f80:	notrack jmp rax
   13f83:	nop    DWORD PTR [rax+rax*1+0x0]
   13f88:	mov    rax,QWORD PTR [rip+0x6b579]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   13f8f:	test   rax,rax
   13f92:	je     13fa4 <__sprintf_chk@plt+0x95f4>
   13f94:	call   rax
   13f96:	mov    rax,QWORD PTR [rip+0x6b12b]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   13f9d:	movzx  ebx,BYTE PTR [rax+0x9c]
   13fa4:	mov    rdi,QWORD PTR [rip+0x6b37d]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   13fab:	call   4b670 <argp_usage@@Base+0x82f0>
   13fb0:	mov    edx,0x5
   13fb5:	lea    rsi,[rip+0x4fa94]        # 63a50 <_obstack_memory_used@@Base+0x16dd0>
   13fbc:	xor    edi,edi
   13fbe:	mov    r12,rax
   13fc1:	call   a040 <dcgettext@plt>
   13fc6:	movsx  r8d,bl
   13fca:	mov    rcx,r12
   13fcd:	xor    esi,esi
   13fcf:	mov    rdx,rax
   13fd2:	xor    edi,edi
   13fd4:	xor    eax,eax
   13fd6:	call   a640 <error@plt>
   13fdb:	mov    DWORD PTR [rip+0x6b0df],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   13fe5:	cmp    BYTE PTR [rip+0x6b344],0x0        # 7f330 <obstack_alloc_failed_handler@@Base+0x4f8>
   13fec:	je     14150 <__sprintf_chk@plt+0x97a0>
   13ff2:	mov    rax,QWORD PTR [rsp+0xa8]
   13ffa:	sub    rax,QWORD PTR fs:0x28
   14003:	jne    14565 <__sprintf_chk@plt+0x9bb5>
   14009:	add    rsp,0xb0
   14010:	pop    rbx
   14011:	pop    rbp
   14012:	pop    r12
   14014:	pop    r13
   14016:	pop    r14
   14018:	jmp    d710 <__sprintf_chk@plt+0x2d60>
   1401d:	mov    rdi,QWORD PTR [rip+0x6b304]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   14024:	lea    rsi,[rsp+0x10]
   14029:	call   d6a0 <__sprintf_chk@plt+0x2cf0>
   1402e:	test   eax,eax
   14030:	je     140a0 <__sprintf_chk@plt+0x96f0>
   14032:	mov    rax,QWORD PTR [rip+0x6b08f]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   14039:	movzx  edx,BYTE PTR [rax+0x9c]
   14040:	mov    eax,DWORD PTR [rsp+0x28]
   14044:	mov    ecx,eax
   14046:	and    ecx,0xf000
   1404c:	cmp    dl,0x33
   1404f:	je     14450 <__sprintf_chk@plt+0x9aa0>
   14055:	cmp    dl,0x34
   14058:	je     1441f <__sprintf_chk@plt+0x9a6f>
   1405e:	lea    rbp,[rip+0x6b2bb]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   14065:	cmp    ecx,0x1000
   1406b:	jne    14427 <__sprintf_chk@plt+0x9a77>
   14071:	xor    eax,DWORD PTR [rip+0x6b319]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   14077:	test   eax,0xfff
   1407c:	je     140a0 <__sprintf_chk@plt+0x96f0>
   1407e:	mov    edx,0x5
   14083:	lea    rsi,[rip+0x4efd0]        # 6305a <_obstack_memory_used@@Base+0x163da>
   1408a:	xor    edi,edi
   1408c:	call   a040 <dcgettext@plt>
   14091:	mov    rdi,rbp
   14094:	mov    rsi,rax
   14097:	xor    eax,eax
   14099:	call   d410 <__sprintf_chk@plt+0x2a60>
   1409e:	xchg   ax,ax
   140a0:	mov    rax,QWORD PTR [rsp+0xa8]
   140a8:	sub    rax,QWORD PTR fs:0x28
   140b1:	jne    14565 <__sprintf_chk@plt+0x9bb5>
   140b7:	add    rsp,0xb0
   140be:	pop    rbx
   140bf:	pop    rbp
   140c0:	pop    r12
   140c2:	pop    r13
   140c4:	pop    r14
   140c6:	ret    
   140c7:	nop    WORD PTR [rax+rax*1+0x0]
   140d0:	cmp    BYTE PTR [rip+0x6ae92],0x0        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   140d7:	jne    13f46 <__sprintf_chk@plt+0x9596>
   140dd:	cmp    QWORD PTR [rip+0x6b20b],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   140e5:	je     13f46 <__sprintf_chk@plt+0x9596>
   140eb:	mov    QWORD PTR [rsp+0x8],rsi
   140f0:	call   28d30 <__sprintf_chk@plt+0x1e380>
   140f5:	mov    BYTE PTR [rip+0x6ae6d],0x1        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   140fc:	mov    rsi,QWORD PTR [rsp+0x8]
   14101:	jmp    13f46 <__sprintf_chk@plt+0x9596>
   14106:	cs nop WORD PTR [rax+rax*1+0x0]
   14110:	xor    edi,edi
   14112:	mov    edx,0x5
   14117:	lea    rsi,[rip+0x4f2c2]        # 633e0 <_obstack_memory_used@@Base+0x16760>
   1411e:	call   a040 <dcgettext@plt>
   14123:	mov    rdi,QWORD PTR [rip+0x6af6e]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   1412a:	mov    esi,0x1
   1412f:	mov    rdx,rax
   14132:	xor    eax,eax
   14134:	call   a840 <__fprintf_chk@plt>
   14139:	cmp    DWORD PTR [rip+0x6b168],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   14140:	mov    rsi,QWORD PTR [rip+0x6af81]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   14147:	jne    13f46 <__sprintf_chk@plt+0x9596>
   1414d:	jmp    140d0 <__sprintf_chk@plt+0x9720>
   1414f:	nop
   14150:	mov    rax,QWORD PTR [rsp+0xa8]
   14158:	sub    rax,QWORD PTR fs:0x28
   14161:	jne    14565 <__sprintf_chk@plt+0x9bb5>
   14167:	add    rsp,0xb0
   1416e:	pop    rbx
   1416f:	pop    rbp
   14170:	pop    r12
   14172:	pop    r13
   14174:	pop    r14
   14176:	jmp    13740 <__sprintf_chk@plt+0x8d90>
   1417b:	call   59b10 <_obstack_memory_used@@Base+0xce90>
   14180:	test   al,al
   14182:	je     13ff2 <__sprintf_chk@plt+0x9642>
   14188:	mov    ecx,DWORD PTR [rip+0x6b33a]        # 7f4c8 <obstack_alloc_failed_handler@@Base+0x690>
   1418e:	test   ecx,ecx
   14190:	jne    141d1 <__sprintf_chk@plt+0x9821>
   14192:	mov    edx,DWORD PTR [rip+0x6add8]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   14198:	mov    rsi,QWORD PTR [rip+0x6b181]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1419f:	mov    rdi,QWORD PTR [rip+0x6b312]        # 7f4b8 <obstack_alloc_failed_handler@@Base+0x680>
   141a6:	call   18ce0 <__sprintf_chk@plt+0xe330>
   141ab:	mov    ebp,eax
   141ad:	test   eax,eax
   141af:	js     14501 <__sprintf_chk@plt+0x9b51>
   141b5:	lea    rsi,[rip+0x6b1bc]        # 7f378 <obstack_alloc_failed_handler@@Base+0x540>
   141bc:	mov    edi,eax
   141be:	call   a920 <fstat@plt>
   141c3:	test   eax,eax
   141c5:	jne    1451b <__sprintf_chk@plt+0x9b6b>
   141cb:	mov    DWORD PTR [rip+0x6b2f7],ebp        # 7f4c8 <obstack_alloc_failed_handler@@Base+0x690>
   141d1:	lea    rbp,[rip+0x6b148]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   141d8:	mov    rdi,rbp
   141db:	call   27a90 <__sprintf_chk@plt+0x1d0e0>
   141e0:	test   rax,rax
   141e3:	je     144f0 <__sprintf_chk@plt+0x9b40>
   141e9:	mov    rax,QWORD PTR [rax+0x28]
   141ed:	test   rax,rax
   141f0:	je     144f0 <__sprintf_chk@plt+0x9b40>
   141f6:	mov    r14,QWORD PTR [rax]
   141f9:	test   r14,r14
   141fc:	je     144f0 <__sprintf_chk@plt+0x9b40>
   14202:	mov    rbx,QWORD PTR [rip+0x6b2a7]        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   14209:	mov    r12d,0x1
   1420f:	lea    r13,[rip+0x4f1e8]        # 633fe <_obstack_memory_used@@Base+0x1677e>
   14216:	movzx  edx,BYTE PTR [rbx]
   14219:	mov    rax,r12
   1421c:	lea    ecx,[rdx-0x44]
   1421f:	shl    rax,cl
   14222:	mov    rsi,rax
   14225:	mov    rdi,rax
   14228:	and    eax,0x1
   1422b:	and    esi,0x114000
   14231:	and    edi,0x200400
   14237:	test   dl,dl
   14239:	je     14482 <__sprintf_chk@plt+0x9ad2>
   1423f:	cmp    cl,0x15
   14242:	ja     14237 <__sprintf_chk@plt+0x9887>
   14244:	test   rsi,rsi
   14247:	jne    14482 <__sprintf_chk@plt+0x9ad2>
   1424d:	test   rdi,rdi
   14250:	jne    144c4 <__sprintf_chk@plt+0x9b14>
   14256:	test   al,al
   14258:	je     14237 <__sprintf_chk@plt+0x9887>
   1425a:	mov    rsi,r14
   1425d:	mov    rdi,rbx
   14260:	call   a320 <strcmp@plt>
   14265:	test   eax,eax
   14267:	jne    1448e <__sprintf_chk@plt+0x9ade>
   1426d:	mov    rdi,rbx
   14270:	call   a060 <strlen@plt>
   14275:	add    rax,0x1
   14279:	add    rbx,rax
   1427c:	add    r14,rax
   1427f:	jmp    14216 <__sprintf_chk@plt+0x9866>
   14281:	mov    rax,QWORD PTR [rsp+0xa8]
   14289:	sub    rax,QWORD PTR fs:0x28
   14292:	jne    14565 <__sprintf_chk@plt+0x9bb5>
   14298:	add    rsp,0xb0
   1429f:	pop    rbx
   142a0:	pop    rbp
   142a1:	pop    r12
   142a3:	pop    r13
   142a5:	pop    r14
   142a7:	jmp    d920 <__sprintf_chk@plt+0x2f70>
   142ac:	mov    rax,QWORD PTR [rsp+0xa8]
   142b4:	sub    rax,QWORD PTR fs:0x28
   142bd:	jne    14565 <__sprintf_chk@plt+0x9bb5>
   142c3:	add    rsp,0xb0
   142ca:	pop    rbx
   142cb:	pop    rbp
   142cc:	pop    r12
   142ce:	pop    r13
   142d0:	pop    r14
   142d2:	jmp    d7d0 <__sprintf_chk@plt+0x2e20>
   142d7:	cmp    BYTE PTR [rip+0x6b052],0x0        # 7f330 <obstack_alloc_failed_handler@@Base+0x4f8>
   142de:	lea    rbp,[rip+0x6b03b]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   142e5:	jne    13ff2 <__sprintf_chk@plt+0x9642>
   142eb:	mov    rdi,QWORD PTR [rip+0x6b036]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   142f2:	lea    rsi,[rsp+0x10]
   142f7:	call   d6a0 <__sprintf_chk@plt+0x2cf0>
   142fc:	test   eax,eax
   142fe:	je     140a0 <__sprintf_chk@plt+0x96f0>
   14304:	mov    eax,DWORD PTR [rsp+0x28]
   14308:	and    eax,0xf000
   1430d:	cmp    eax,0x8000
   14312:	jne    143e8 <__sprintf_chk@plt+0x9a38>
   14318:	sub    rsp,0x8
   1431c:	mov    rax,QWORD PTR [rip+0x6ada5]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   14323:	xor    r9d,r9d
   14326:	xor    ecx,ecx
   14328:	push   0x0
   1432a:	lea    rdx,[rip+0x4ee94]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   14331:	mov    esi,0xc
   14336:	movabs r8,0x7fffffffffffffff
   14340:	lea    rdi,[rax+0x171]
   14347:	call   23640 <__sprintf_chk@plt+0x18c90>
   1434c:	mov    r12,rax
   1434f:	pop    rax
   14350:	pop    rdx
   14351:	test   r12,r12
   14354:	js     144b3 <__sprintf_chk@plt+0x9b03>
   1435a:	mov    rax,r12
   1435d:	add    rax,QWORD PTR [rip+0x6b044]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   14364:	jo     144b3 <__sprintf_chk@plt+0x9b03>
   1436a:	cmp    QWORD PTR [rsp+0x40],rax
   1436f:	jne    144b3 <__sprintf_chk@plt+0x9b03>
   14375:	mov    edx,DWORD PTR [rip+0x6abf5]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   1437b:	mov    rsi,QWORD PTR [rip+0x6afa6]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   14382:	mov    edi,DWORD PTR [rip+0x67c98]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   14388:	call   a230 <__openat_2@plt>
   1438d:	mov    r13d,eax
   14390:	test   eax,eax
   14392:	js     1454b <__sprintf_chk@plt+0x9b9b>
   14398:	xor    edx,edx
   1439a:	mov    rsi,r12
   1439d:	mov    edi,eax
   1439f:	call   a170 <lseek@plt>
   143a4:	test   rax,rax
   143a7:	js     1452b <__sprintf_chk@plt+0x9b7b>
   143ad:	lea    rdi,[rip+0xffffffffffff91ec]        # d5a0 <__sprintf_chk@plt+0x2bf0>
   143b4:	call   59d10 <_obstack_memory_used@@Base+0xd090>
   143b9:	mov    edi,r13d
   143bc:	call   a200 <close@plt>
   143c1:	test   eax,eax
   143c3:	je     140a0 <__sprintf_chk@plt+0x96f0>
   143c9:	mov    rsi,QWORD PTR [rip+0x6af58]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   143d0:	lea    rdi,[rip+0x52685]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   143d7:	call   3bad0 <__sprintf_chk@plt+0x31120>
   143dc:	jmp    140a0 <__sprintf_chk@plt+0x96f0>
   143e1:	nop    DWORD PTR [rax+0x0]
   143e8:	mov    edx,0x5
   143ed:	lea    rsi,[rip+0x4ec54]        # 63048 <_obstack_memory_used@@Base+0x163c8>
   143f4:	xor    edi,edi
   143f6:	call   a040 <dcgettext@plt>
   143fb:	mov    rsi,rax
   143fe:	xor    eax,eax
   14400:	mov    rdi,rbp
   14403:	call   d410 <__sprintf_chk@plt+0x2a60>
   14408:	cmp    BYTE PTR [rip+0x6b09a],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   1440f:	jne    140a0 <__sprintf_chk@plt+0x96f0>
   14415:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   1441a:	jmp    140a0 <__sprintf_chk@plt+0x96f0>
   1441f:	cmp    ecx,0x6000
   14425:	je     14458 <__sprintf_chk@plt+0x9aa8>
   14427:	xor    edi,edi
   14429:	mov    edx,0x5
   1442e:	lea    rsi,[rip+0x4ec13]        # 63048 <_obstack_memory_used@@Base+0x163c8>
   14435:	call   a040 <dcgettext@plt>
   1443a:	lea    rdi,[rip+0x6aedf]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   14441:	mov    rsi,rax
   14444:	xor    eax,eax
   14446:	call   d410 <__sprintf_chk@plt+0x2a60>
   1444b:	jmp    140a0 <__sprintf_chk@plt+0x96f0>
   14450:	cmp    ecx,0x2000
   14456:	jne    14427 <__sprintf_chk@plt+0x9a77>
   14458:	mov    rcx,QWORD PTR [rsp+0x38]
   1445d:	cmp    QWORD PTR [rip+0x6af3c],rcx        # 7f3a0 <obstack_alloc_failed_handler@@Base+0x568>
   14464:	lea    rbp,[rip+0x6aeb5]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1446b:	mov    edx,0x5
   14470:	lea    rsi,[rip+0x4ef71]        # 633e8 <_obstack_memory_used@@Base+0x16768>
   14477:	je     14071 <__sprintf_chk@plt+0x96c1>
   1447d:	jmp    1408a <__sprintf_chk@plt+0x96da>
   14482:	movsx  eax,BYTE PTR [r14]
   14486:	test   eax,eax
   14488:	je     13ff2 <__sprintf_chk@plt+0x9642>
   1448e:	xor    edi,edi
   14490:	mov    edx,0x5
   14495:	lea    rsi,[rip+0x4eb97]        # 63033 <_obstack_memory_used@@Base+0x163b3>
   1449c:	call   a040 <dcgettext@plt>
   144a1:	mov    rdi,rbp
   144a4:	mov    rsi,rax
   144a7:	xor    eax,eax
   144a9:	call   d410 <__sprintf_chk@plt+0x2a60>
   144ae:	jmp    13ff2 <__sprintf_chk@plt+0x9642>
   144b3:	mov    edx,0x5
   144b8:	lea    rsi,[rip+0x4eef4]        # 633b3 <_obstack_memory_used@@Base+0x16733>
   144bf:	jmp    143f4 <__sprintf_chk@plt+0x9a44>
   144c4:	movsx  esi,BYTE PTR [r14]
   144c8:	mov    rdi,r13
   144cb:	call   a0f0 <strchr@plt>
   144d0:	test   rax,rax
   144d3:	je     1448e <__sprintf_chk@plt+0x9ade>
   144d5:	lea    rsi,[r14+0x1]
   144d9:	lea    rdi,[rbx+0x1]
   144dd:	call   a320 <strcmp@plt>
   144e2:	test   eax,eax
   144e4:	je     1426d <__sprintf_chk@plt+0x98bd>
   144ea:	jmp    1448e <__sprintf_chk@plt+0x9ade>
   144ec:	nop    DWORD PTR [rax+0x0]
   144f0:	lea    rdi,[rip+0xffffffffffff8a09]        # cf00 <__sprintf_chk@plt+0x2550>
   144f7:	call   59d10 <_obstack_memory_used@@Base+0xd090>
   144fc:	jmp    13ff2 <__sprintf_chk@plt+0x9642>
   14501:	lea    rdx,[rip+0xef08]        # 23410 <__sprintf_chk@plt+0x18a60>
   14508:	mov    rdi,QWORD PTR [rip+0x6ae11]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1450f:	xor    esi,esi
   14511:	call   26910 <__sprintf_chk@plt+0x1bf60>
   14516:	jmp    13ff2 <__sprintf_chk@plt+0x9642>
   1451b:	mov    edi,ebp
   1451d:	call   a200 <close@plt>
   14522:	lea    rdx,[rip+0xef67]        # 23490 <__sprintf_chk@plt+0x18ae0>
   14529:	jmp    14508 <__sprintf_chk@plt+0x9b58>
   1452b:	mov    rdi,QWORD PTR [rip+0x6adf6]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   14532:	mov    rsi,r12
   14535:	call   3c440 <__sprintf_chk@plt+0x31a90>
   1453a:	xor    esi,esi
   1453c:	mov    rdi,rbp
   1453f:	xor    eax,eax
   14541:	call   d410 <__sprintf_chk@plt+0x2a60>
   14546:	jmp    143b9 <__sprintf_chk@plt+0x9a09>
   1454b:	mov    rsi,QWORD PTR [rip+0x6add6]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   14552:	lea    rdi,[rip+0x4ec67]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   14559:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1455e:	xor    esi,esi
   14560:	jmp    143fe <__sprintf_chk@plt+0x9a4e>
   14565:	call   a0a0 <__stack_chk_fail@plt>
   1456a:	nop    WORD PTR [rax+rax*1+0x0]
   14570:	push   r15
   14572:	push   r14
   14574:	push   r13
   14576:	push   r12
   14578:	push   rbp
   14579:	push   rbx
   1457a:	sub    rsp,0x48
   1457e:	mov    rax,QWORD PTR fs:0x28
   14587:	mov    QWORD PTR [rsp+0x38],rax
   1458c:	mov    rax,QWORD PTR [rip+0x6a99d]        # 7ef30 <obstack_alloc_failed_handler@@Base+0xf8>
   14593:	test   rax,rax
   14596:	je     147cf <__sprintf_chk@plt+0x9e1f>
   1459c:	cmp    QWORD PTR [rax+0x20],0x0
   145a1:	je     147cf <__sprintf_chk@plt+0x9e1f>
   145a7:	mov    rax,QWORD PTR [rip+0x6af5a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   145ae:	test   rax,rax
   145b1:	je     145b5 <__sprintf_chk@plt+0x9c05>
   145b3:	call   rax
   145b5:	xor    edi,edi
   145b7:	mov    edx,0x5
   145bc:	lea    rsi,[rip+0x4f4c5]        # 63a88 <_obstack_memory_used@@Base+0x16e08>
   145c3:	call   a040 <dcgettext@plt>
   145c8:	xor    esi,esi
   145ca:	xor    edi,edi
   145cc:	mov    rdx,rax
   145cf:	xor    eax,eax
   145d1:	call   a640 <error@plt>
   145d6:	cmp    QWORD PTR [rip+0x6a962],0x0        # 7ef40 <obstack_alloc_failed_handler@@Base+0x108>
   145de:	je     1460f <__sprintf_chk@plt+0x9c5f>
   145e0:	mov    rax,QWORD PTR [rip+0x6af21]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   145e7:	test   rax,rax
   145ea:	je     145ee <__sprintf_chk@plt+0x9c3e>
   145ec:	call   rax
   145ee:	mov    edx,0x5
   145f3:	lea    rsi,[rip+0x4f4ce]        # 63ac8 <_obstack_memory_used@@Base+0x16e48>
   145fa:	xor    edi,edi
   145fc:	call   a040 <dcgettext@plt>
   14601:	xor    esi,esi
   14603:	xor    edi,edi
   14605:	mov    rdx,rax
   14608:	xor    eax,eax
   1460a:	call   a640 <error@plt>
   1460f:	mov    rax,QWORD PTR [rip+0x6aef2]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   14616:	test   rax,rax
   14619:	je     1461d <__sprintf_chk@plt+0x9c6d>
   1461b:	call   rax
   1461d:	mov    edx,0x5
   14622:	lea    rsi,[rip+0x4f4cf]        # 63af8 <_obstack_memory_used@@Base+0x16e78>
   14629:	xor    edi,edi
   1462b:	call   a040 <dcgettext@plt>
   14630:	xor    esi,esi
   14632:	xor    edi,edi
   14634:	mov    rdx,rax
   14637:	xor    eax,eax
   14639:	call   a640 <error@plt>
   1463e:	mov    rdi,QWORD PTR [rip+0x6a91b]        # 7ef60 <obstack_alloc_failed_handler@@Base+0x128>
   14645:	test   rdi,rdi
   14648:	je     1464f <__sprintf_chk@plt+0x9c9f>
   1464a:	call   48d80 <argp_usage@@Base+0x5a00>
   1464f:	mov    rdi,QWORD PTR [rip+0x6a902]        # 7ef58 <obstack_alloc_failed_handler@@Base+0x120>
   14656:	test   rdi,rdi
   14659:	je     14660 <__sprintf_chk@plt+0x9cb0>
   1465b:	call   48d80 <argp_usage@@Base+0x5a00>
   14660:	mov    rbx,QWORD PTR [rip+0x6a8e9]        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   14667:	test   rbx,rbx
   1466a:	je     14695 <__sprintf_chk@plt+0x9ce5>
   1466c:	nop    DWORD PTR [rax+0x0]
   14670:	mov    rbp,rbx
   14673:	mov    rbx,QWORD PTR [rbx]
   14676:	mov    rdi,QWORD PTR [rbp+0x50]
   1467a:	call   9ce0 <free@plt>
   1467f:	mov    rdi,QWORD PTR [rbp+0x58]
   14683:	call   9ce0 <free@plt>
   14688:	mov    rdi,rbp
   1468b:	call   9ce0 <free@plt>
   14690:	test   rbx,rbx
   14693:	jne    14670 <__sprintf_chk@plt+0x9cc0>
   14695:	cmp    QWORD PTR [rip+0x6af3b],0x0        # 7f5d8 <obstack_alloc_failed_handler@@Base+0x7a0>
   1469d:	mov    QWORD PTR [rip+0x6a8a0],0x0        # 7ef48 <obstack_alloc_failed_handler@@Base+0x110>
   146a8:	mov    QWORD PTR [rip+0x6a89d],0x0        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   146b3:	je     14a6f <__sprintf_chk@plt+0xa0bf>
   146b9:	mov    edi,DWORD PTR [rip+0x6aea1]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   146bf:	lea    r12,[rsp+0x18]
   146c4:	call   a650 <fsync@plt>
   146c9:	mov    ebp,DWORD PTR [rip+0x6ae91]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   146cf:	mov    esi,0x24b
   146d4:	xor    eax,eax
   146d6:	mov    edi,ebp
   146d8:	call   a1d0 <ioctl@plt>
   146dd:	mov    eax,0x2
   146e2:	mov    DWORD PTR [rsp+0x1c],0x1
   146ea:	mov    WORD PTR [rsp+0x18],ax
   146ef:	cmp    ebp,0x3fffffff
   146f5:	jle    149e4 <__sprintf_chk@plt+0xa034>
   146fb:	lea    edi,[rbp-0x40000000]
   14701:	mov    rsi,r12
   14704:	call   5d2c0 <_obstack_memory_used@@Base+0x10640>
   14709:	test   eax,eax
   1470b:	jns    14745 <__sprintf_chk@plt+0x9d95>
   1470d:	call   9e40 <__errno_location@plt>
   14712:	mov    edi,DWORD PTR [rip+0x6ae48]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14718:	cmp    DWORD PTR [rax],0x5
   1471b:	je     149fa <__sprintf_chk@plt+0xa04a>
   14721:	cmp    edi,0x3fffffff
   14727:	jle    14a42 <__sprintf_chk@plt+0xa092>
   1472d:	sub    edi,0x40000000
   14733:	xor    edx,edx
   14735:	xor    esi,esi
   14737:	call   3cd60 <__sprintf_chk@plt+0x323b0>
   1473c:	test   rax,rax
   1473f:	jne    14a54 <__sprintf_chk@plt+0xa0a4>
   14745:	mov    BYTE PTR [rip+0x6af50],0x1        # 7f69c <obstack_alloc_failed_handler@@Base+0x864>
   1474c:	lea    rbx,[rip+0x6abcd]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   14753:	lea    rbp,[rip+0x6a96e]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   1475a:	movabs r14,0xcccccccccccccccd
   14764:	mov    DWORD PTR [rip+0x6ad8e],0x0        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
   1476e:	lea    r13,[rip+0x6ab33]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   14775:	call   QWORD PTR [rip+0x6ad75]        # 7f4f0 <obstack_alloc_failed_handler@@Base+0x6b8>
   1477b:	nop    DWORD PTR [rax+rax*1+0x0]
   14780:	xor    edx,edx
   14782:	mov    rsi,rbx
   14785:	mov    rdi,rbp
   14788:	call   2ab30 <__sprintf_chk@plt+0x20180>
   1478d:	mov    r15d,eax
   14790:	cmp    eax,0x5
   14793:	je     14900 <__sprintf_chk@plt+0x9f50>
   14799:	cmp    r15d,0x4
   1479d:	je     149b0 <__sprintf_chk@plt+0xa000>
   147a3:	mov    rdi,QWORD PTR [rip+0x6a91e]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   147aa:	cmp    r15d,0x3
   147ae:	je     14810 <__sprintf_chk@plt+0x9e60>
   147b0:	mov    ecx,0x1
   147b5:	mov    rdx,r13
   147b8:	mov    rsi,rbx
   147bb:	call   28710 <__sprintf_chk@plt+0x1dd60>
   147c0:	call   13ec0 <__sprintf_chk@plt+0x9510>
   147c5:	mov    rdi,rbx
   147c8:	call   44a50 <argp_usage@@Base+0x16d0>
   147cd:	jmp    14780 <__sprintf_chk@plt+0x9dd0>
   147cf:	mov    rax,QWORD PTR [rip+0x6a762]        # 7ef38 <obstack_alloc_failed_handler@@Base+0x100>
   147d6:	test   rax,rax
   147d9:	je     147e6 <__sprintf_chk@plt+0x9e36>
   147db:	cmp    QWORD PTR [rax+0x20],0x0
   147e0:	jne    145a7 <__sprintf_chk@plt+0x9bf7>
   147e6:	cmp    QWORD PTR [rip+0x6a752],0x0        # 7ef40 <obstack_alloc_failed_handler@@Base+0x108>
   147ee:	je     1463e <__sprintf_chk@plt+0x9c8e>
   147f4:	mov    rax,QWORD PTR [rip+0x6ad0d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   147fb:	test   rax,rax
   147fe:	jne    145ec <__sprintf_chk@plt+0x9c3c>
   14804:	jmp    145ee <__sprintf_chk@plt+0x9c3e>
   14809:	nop    DWORD PTR [rax+0x0]
   14810:	mov    rax,QWORD PTR [rip+0x6ad29]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   14817:	cmp    rax,rdi
   1481a:	ja     14835 <__sprintf_chk@plt+0x9e85>
   1481c:	sub    rdi,rax
   1481f:	and    rdi,0xfffffffffffffe00
   14826:	lea    rax,[rax+rdi*1+0x200]
   1482e:	mov    QWORD PTR [rip+0x6ad0b],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   14835:	cmp    rax,QWORD PTR [rip+0x6ad44]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1483c:	ja     aa0c <__sprintf_chk@plt+0x5c>
   14842:	cmp    BYTE PTR [rip+0x6a71f],0x0        # 7ef68 <obstack_alloc_failed_handler@@Base+0x130>
   14849:	jne    14780 <__sprintf_chk@plt+0x9dd0>
   1484f:	xor    edx,edx
   14851:	mov    rsi,rbx
   14854:	mov    rdi,rbp
   14857:	call   2ab30 <__sprintf_chk@plt+0x20180>
   1485c:	cmp    eax,0x3
   1485f:	je     149b0 <__sprintf_chk@plt+0xa000>
   14865:	test   BYTE PTR [rip+0x67810],0x1        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   1486c:	je     14780 <__sprintf_chk@plt+0x9dd0>
   14872:	mov    rax,QWORD PTR [rip+0x6ac8f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   14879:	test   rax,rax
   1487c:	je     14880 <__sprintf_chk@plt+0x9ed0>
   1487e:	call   rax
   14880:	mov    BYTE PTR [rsp+0x34],0x0
   14885:	mov    rcx,QWORD PTR [rip+0x6acb4]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1488c:	lea    r12,[rsp+0x34]
   14891:	sub    rcx,QWORD PTR [rip+0x6acf0]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   14898:	sar    rcx,0x9
   1489c:	add    rcx,QWORD PTR [rip+0x6ac95]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   148a3:	nop    DWORD PTR [rax+rax*1+0x0]
   148a8:	mov    rax,rcx
   148ab:	sub    r12,0x1
   148af:	mul    r14
   148b2:	mov    rax,rcx
   148b5:	shr    rdx,0x3
   148b9:	lea    rsi,[rdx+rdx*4]
   148bd:	add    rsi,rsi
   148c0:	sub    rax,rsi
   148c3:	add    eax,0x30
   148c6:	mov    BYTE PTR [r12],al
   148ca:	mov    rax,rcx
   148cd:	mov    rcx,rdx
   148d0:	cmp    rax,0x9
   148d4:	ja     148a8 <__sprintf_chk@plt+0x9ef8>
   148d6:	xor    edi,edi
   148d8:	mov    edx,0x5
   148dd:	lea    rsi,[rip+0x4eb1d]        # 63401 <_obstack_memory_used@@Base+0x16781>
   148e4:	call   a040 <dcgettext@plt>
   148e9:	mov    rcx,r12
   148ec:	xor    esi,esi
   148ee:	xor    edi,edi
   148f0:	mov    rdx,rax
   148f3:	xor    eax,eax
   148f5:	call   a640 <error@plt>
   148fa:	jmp    14780 <__sprintf_chk@plt+0x9dd0>
   148ff:	nop
   14900:	xor    r12d,r12d
   14903:	nop    DWORD PTR [rax+rax*1+0x0]
   14908:	mov    rax,QWORD PTR [rip+0x6a7b9]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   1490f:	mov    rdx,QWORD PTR [rip+0x6ac2a]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   14916:	add    r12d,0x1
   1491a:	cmp    rax,rdx
   1491d:	jb     14937 <__sprintf_chk@plt+0x9f87>
   1491f:	sub    rax,rdx
   14922:	and    rax,0xfffffffffffffe00
   14928:	lea    rdx,[rdx+rax*1+0x200]
   14930:	mov    QWORD PTR [rip+0x6ac09],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   14937:	cmp    QWORD PTR [rip+0x6ac42],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1493e:	jb     aa0c <__sprintf_chk@plt+0x5c>
   14944:	xor    edx,edx
   14946:	mov    rsi,rbx
   14949:	mov    rdi,rbp
   1494c:	call   2ab30 <__sprintf_chk@plt+0x20180>
   14951:	mov    r15d,eax
   14954:	cmp    eax,0x5
   14957:	je     14908 <__sprintf_chk@plt+0x9f58>
   14959:	mov    rax,QWORD PTR [rip+0x6aba8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   14960:	test   rax,rax
   14963:	je     14967 <__sprintf_chk@plt+0x9fb7>
   14965:	call   rax
   14967:	movsxd rcx,r12d
   1496a:	mov    r8d,0x5
   14970:	lea    rdx,[rip+0x4f1b1]        # 63b28 <_obstack_memory_used@@Base+0x16ea8>
   14977:	xor    edi,edi
   14979:	lea    rsi,[rip+0x4f1d8]        # 63b58 <_obstack_memory_used@@Base+0x16ed8>
   14980:	call   a6e0 <dcngettext@plt>
   14985:	mov    ecx,r12d
   14988:	xor    esi,esi
   1498a:	xor    edi,edi
   1498c:	mov    rdx,rax
   1498f:	xor    eax,eax
   14991:	call   a640 <error@plt>
   14996:	mov    DWORD PTR [rip+0x6a724],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   149a0:	cmp    r15d,0x4
   149a4:	jne    147a3 <__sprintf_chk@plt+0x9df3>
   149aa:	nop    WORD PTR [rax+rax*1+0x0]
   149b0:	mov    DWORD PTR [rip+0x6ab42],0x1        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
   149ba:	mov    BYTE PTR [rip+0x6acdb],0x0        # 7f69c <obstack_alloc_failed_handler@@Base+0x864>
   149c1:	mov    rax,QWORD PTR [rsp+0x38]
   149c6:	sub    rax,QWORD PTR fs:0x28
   149cf:	jne    14a79 <__sprintf_chk@plt+0xa0c9>
   149d5:	add    rsp,0x48
   149d9:	pop    rbx
   149da:	pop    rbp
   149db:	pop    r12
   149dd:	pop    r13
   149df:	pop    r14
   149e1:	pop    r15
   149e3:	ret    
   149e4:	mov    rdx,r12
   149e7:	mov    esi,0x40086d01
   149ec:	mov    edi,ebp
   149ee:	xor    eax,eax
   149f0:	call   a1d0 <ioctl@plt>
   149f5:	jmp    14709 <__sprintf_chk@plt+0x9d59>
   149fa:	cmp    edi,0x3fffffff
   14a00:	jle    14a23 <__sprintf_chk@plt+0xa073>
   14a02:	sub    edi,0x40000000
   14a08:	mov    rsi,r12
   14a0b:	call   5d2c0 <_obstack_memory_used@@Base+0x10640>
   14a10:	mov    edi,DWORD PTR [rip+0x6ab4a]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14a16:	test   eax,eax
   14a18:	js     14721 <__sprintf_chk@plt+0x9d71>
   14a1e:	jmp    14745 <__sprintf_chk@plt+0x9d95>
   14a23:	xor    eax,eax
   14a25:	mov    rdx,r12
   14a28:	mov    esi,0x40086d01
   14a2d:	mov    DWORD PTR [rsp+0xc],edi
   14a31:	call   a1d0 <ioctl@plt>
   14a36:	mov    edi,DWORD PTR [rsp+0xc]
   14a3a:	test   eax,eax
   14a3c:	jns    14745 <__sprintf_chk@plt+0x9d95>
   14a42:	xor    edx,edx
   14a44:	xor    esi,esi
   14a46:	call   a170 <lseek@plt>
   14a4b:	test   rax,rax
   14a4e:	je     14745 <__sprintf_chk@plt+0x9d95>
   14a54:	mov    rax,QWORD PTR [rip+0x6a875]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   14a5b:	lea    rdi,[rip+0x52538]        # 66f9a <_obstack_memory_used@@Base+0x1a31a>
   14a62:	mov    rsi,QWORD PTR [rax]
   14a65:	call   3c100 <__sprintf_chk@plt+0x31750>
   14a6a:	jmp    149c1 <__sprintf_chk@plt+0xa011>
   14a6f:	call   fff0 <__sprintf_chk@plt+0x5640>
   14a74:	jmp    146b9 <__sprintf_chk@plt+0x9d09>
   14a79:	call   a0a0 <__stack_chk_fail@plt>
   14a7e:	xchg   ax,ax
   14a80:	endbr64 
   14a84:	push   rbp
   14a85:	push   rbx
   14a86:	sub    rsp,0x8
   14a8a:	cmp    BYTE PTR [rip+0x6aa67],0x0        # 7f4f8 <obstack_alloc_failed_handler@@Base+0x6c0>
   14a91:	jne    14b68 <__sprintf_chk@plt+0xa1b8>
   14a97:	cmp    DWORD PTR [rip+0x6aa5e],0x1        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
   14a9e:	je     14b68 <__sprintf_chk@plt+0xa1b8>
   14aa4:	call   dbf0 <__sprintf_chk@plt+0x3240>
   14aa9:	cmp    BYTE PTR [rip+0x6aa28],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   14ab0:	jne    14baa <__sprintf_chk@plt+0xa1fa>
   14ab6:	mov    edi,DWORD PTR [rip+0x6aaa4]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14abc:	cmp    edi,0x3fffffff
   14ac2:	jle    14b82 <__sprintf_chk@plt+0xa1d2>
   14ac8:	sub    edi,0x40000000
   14ace:	call   3caf0 <__sprintf_chk@plt+0x32140>
   14ad3:	test   eax,eax
   14ad5:	jne    14b8f <__sprintf_chk@plt+0xa1df>
   14adb:	mov    edi,DWORD PTR [rip+0x6abc7]        # 7f6a8 <obstack_alloc_failed_handler@@Base+0x870>
   14ae1:	test   edi,edi
   14ae3:	je     14af1 <__sprintf_chk@plt+0xa141>
   14ae5:	movzx  esi,BYTE PTR [rip+0x6aa48]        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   14aec:	call   33de0 <__sprintf_chk@plt+0x29430>
   14af1:	lea    rdi,[rip+0x6a828]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   14af8:	call   44a50 <argp_usage@@Base+0x16d0>
   14afd:	mov    rdi,QWORD PTR [rip+0x6abbc]        # 7f6c0 <obstack_alloc_failed_handler@@Base+0x888>
   14b04:	call   9ce0 <free@plt>
   14b09:	mov    rdi,QWORD PTR [rip+0x6abb8]        # 7f6c8 <obstack_alloc_failed_handler@@Base+0x890>
   14b10:	call   9ce0 <free@plt>
   14b15:	mov    rbx,QWORD PTR [rip+0x6aa8c]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   14b1c:	test   rbx,rbx
   14b1f:	je     14b44 <__sprintf_chk@plt+0xa194>
   14b21:	nop    DWORD PTR [rax+0x0]
   14b28:	mov    rbp,rbx
   14b2b:	mov    rbx,QWORD PTR [rbx]
   14b2e:	mov    rdi,QWORD PTR [rbp+0x10]
   14b32:	call   9ce0 <free@plt>
   14b37:	mov    rdi,rbp
   14b3a:	call   9ce0 <free@plt>
   14b3f:	test   rbx,rbx
   14b42:	jne    14b28 <__sprintf_chk@plt+0xa178>
   14b44:	mov    QWORD PTR [rip+0x6aa59],0x0        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   14b4f:	mov    QWORD PTR [rip+0x6aa46],0x0        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
   14b5a:	add    rsp,0x8
   14b5e:	pop    rbx
   14b5f:	pop    rbp
   14b60:	ret    
   14b61:	nop    DWORD PTR [rax+0x0]
   14b68:	call   f170 <__sprintf_chk@plt+0x47c0>
   14b6d:	mov    rax,QWORD PTR [rip+0x6aa14]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   14b74:	cmp    QWORD PTR [rip+0x6a9c5],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   14b7b:	ja     14b68 <__sprintf_chk@plt+0xa1b8>
   14b7d:	jmp    14aa4 <__sprintf_chk@plt+0xa0f4>
   14b82:	call   a200 <close@plt>
   14b87:	test   eax,eax
   14b89:	je     14adb <__sprintf_chk@plt+0xa12b>
   14b8f:	mov    rax,QWORD PTR [rip+0x6a97a]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14b96:	lea    rdi,[rip+0x51ebf]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   14b9d:	mov    rsi,QWORD PTR [rax]
   14ba0:	call   3bad0 <__sprintf_chk@plt+0x31120>
   14ba5:	jmp    14adb <__sprintf_chk@plt+0xa12b>
   14baa:	call   14570 <__sprintf_chk@plt+0x9bc0>
   14baf:	jmp    14ab6 <__sprintf_chk@plt+0xa106>
   14bb4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   14bbf:	nop
   14bc0:	push   r15
   14bc2:	push   r14
   14bc4:	push   r13
   14bc6:	push   r12
   14bc8:	push   rbp
   14bc9:	push   rbx
   14bca:	sub    rsp,0x58
   14bce:	mov    DWORD PTR [rsp+0x4],edi
   14bd2:	mov    rax,QWORD PTR fs:0x28
   14bdb:	mov    QWORD PTR [rsp+0x48],rax
   14be0:	xor    eax,eax
   14be2:	cmp    QWORD PTR [rip+0x6aab6],0x0        # 7f6a0 <obstack_alloc_failed_handler@@Base+0x868>
   14bea:	je     14f40 <__sprintf_chk@plt+0xa590>
   14bf0:	cmp    BYTE PTR [rip+0x6aaa5],0x0        # 7f69c <obstack_alloc_failed_handler@@Base+0x864>
   14bf7:	jne    14ec0 <__sprintf_chk@plt+0xa510>
   14bfd:	cmp    BYTE PTR [rip+0x6a8d4],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   14c04:	jne    14d40 <__sprintf_chk@plt+0xa390>
   14c0a:	mov    rdi,QWORD PTR [rip+0x6a6df]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   14c11:	call   9ce0 <free@plt>
   14c16:	mov    rdi,QWORD PTR [rip+0x6a6cb]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   14c1d:	mov    QWORD PTR [rip+0x6a6c8],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   14c28:	call   9ce0 <free@plt>
   14c2d:	mov    rax,QWORD PTR [rip+0x6a954]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   14c34:	mov    edi,DWORD PTR [rip+0x6a926]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14c3a:	mov    QWORD PTR [rip+0x6a6a3],0x0        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   14c45:	mov    QWORD PTR [rip+0x6a690],0x0        # 7f2e0 <obstack_alloc_failed_handler@@Base+0x4a8>
   14c50:	mov    QWORD PTR [rip+0x6a67d],0x0        # 7f2d8 <obstack_alloc_failed_handler@@Base+0x4a0>
   14c5b:	mov    QWORD PTR [rip+0x6a8de],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   14c62:	cmp    edi,0x3fffffff
   14c68:	jg     14d10 <__sprintf_chk@plt+0xa360>
   14c6e:	call   a200 <close@plt>
   14c73:	test   eax,eax
   14c75:	jne    14d23 <__sprintf_chk@plt+0xa373>
   14c7b:	mov    rax,QWORD PTR [rip+0x6a88e]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14c82:	mov    rdx,QWORD PTR [rip+0x6a647]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   14c89:	mov    rcx,QWORD PTR [rip+0x6a638]        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
   14c90:	add    rax,0x8
   14c94:	lea    rcx,[rdx+rcx*8]
   14c98:	mov    QWORD PTR [rip+0x6a871],rax        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14c9f:	cmp    rax,rcx
   14ca2:	je     14d50 <__sprintf_chk@plt+0xa3a0>
   14ca8:	mov    edx,DWORD PTR [rip+0x6a9ea]        # 7f698 <obstack_alloc_failed_handler@@Base+0x860>
   14cae:	test   edx,edx
   14cb0:	jne    14d61 <__sprintf_chk@plt+0xa3b1>
   14cb6:	mov    rbp,QWORD PTR [rax]
   14cb9:	cmp    BYTE PTR [rbp+0x0],0x2d
   14cbd:	jne    14ed0 <__sprintf_chk@plt+0xa520>
   14cc3:	cmp    BYTE PTR [rbp+0x1],0x0
   14cc7:	jne    14ed0 <__sprintf_chk@plt+0xa520>
   14ccd:	mov    BYTE PTR [rip+0x6aa24],0x1        # 7f6f8 <obstack_alloc_failed_handler@@Base+0x8c0>
   14cd4:	mov    eax,0x1
   14cd9:	mov    DWORD PTR [rip+0x6a87d],0x0        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14ce3:	mov    rdx,QWORD PTR [rsp+0x48]
   14ce8:	sub    rdx,QWORD PTR fs:0x28
   14cf1:	jne    155e2 <__sprintf_chk@plt+0xac32>
   14cf7:	add    rsp,0x58
   14cfb:	pop    rbx
   14cfc:	pop    rbp
   14cfd:	pop    r12
   14cff:	pop    r13
   14d01:	pop    r14
   14d03:	pop    r15
   14d05:	ret    
   14d06:	cs nop WORD PTR [rax+rax*1+0x0]
   14d10:	sub    edi,0x40000000
   14d16:	call   3caf0 <__sprintf_chk@plt+0x32140>
   14d1b:	test   eax,eax
   14d1d:	je     14c7b <__sprintf_chk@plt+0xa2cb>
   14d23:	mov    rax,QWORD PTR [rip+0x6a7e6]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14d2a:	lea    rdi,[rip+0x51d2b]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   14d31:	mov    rsi,QWORD PTR [rax]
   14d34:	call   3bad0 <__sprintf_chk@plt+0x31120>
   14d39:	jmp    14c7b <__sprintf_chk@plt+0xa2cb>
   14d3e:	xchg   ax,ax
   14d40:	call   14570 <__sprintf_chk@plt+0x9bc0>
   14d45:	jmp    14c0a <__sprintf_chk@plt+0xa25a>
   14d4a:	nop    WORD PTR [rax+rax*1+0x0]
   14d50:	mov    QWORD PTR [rip+0x6a7b9],rdx        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14d57:	mov    DWORD PTR [rip+0x6a937],0x1        # 7f698 <obstack_alloc_failed_handler@@Base+0x860>
   14d61:	cmp    QWORD PTR [rip+0x6a58f],0x0        # 7f2f8 <obstack_alloc_failed_handler@@Base+0x4c0>
   14d69:	je     150f0 <__sprintf_chk@plt+0xa740>
   14d6f:	cmp    QWORD PTR [rip+0x6a589],0x0        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
   14d77:	je     14d7e <__sprintf_chk@plt+0xa3ce>
   14d79:	call   f700 <__sprintf_chk@plt+0x4d50>
   14d7e:	lea    rbp,[rsp+0x28]
   14d83:	mov    r12d,DWORD PTR [rip+0x672ee]        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
   14d8a:	mov    r13,QWORD PTR [rip+0x6a77f]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14d91:	mov    rdi,rbp
   14d94:	call   a210 <pipe@plt>
   14d99:	test   eax,eax
   14d9b:	js     156e6 <__sprintf_chk@plt+0xad36>
   14da1:	mov    esi,0x1
   14da6:	mov    edi,0xd
   14dab:	call   a330 <signal@plt>
   14db0:	mov    QWORD PTR [rip+0x6a8d9],rax        # 7f690 <obstack_alloc_failed_handler@@Base+0x858>
   14db7:	call   a950 <fork@plt>
   14dbc:	mov    ebx,eax
   14dbe:	cmp    eax,0xffffffff
   14dc1:	je     155dd <__sprintf_chk@plt+0xac2d>
   14dc7:	test   eax,eax
   14dc9:	je     1561a <__sprintf_chk@plt+0xac6a>
   14dcf:	mov    QWORD PTR [rsp+0x18],0x0
   14dd8:	mov    edi,DWORD PTR [rsp+0x2c]
   14ddc:	mov    QWORD PTR [rsp+0x20],0x0
   14de5:	call   a200 <close@plt>
   14dea:	test   eax,eax
   14dec:	jne    15030 <__sprintf_chk@plt+0xa680>
   14df2:	mov    edi,DWORD PTR [rsp+0x28]
   14df6:	lea    r12,[rsp+0x20]
   14dfb:	lea    rbp,[rsp+0x18]
   14e00:	lea    rsi,[rip+0x51c8b]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
   14e07:	call   a590 <fdopen@plt>
   14e0c:	mov    rdi,rbp
   14e0f:	mov    rsi,r12
   14e12:	mov    edx,0xa
   14e17:	mov    rcx,rax
   14e1a:	mov    r14,rax
   14e1d:	call   a310 <__getdelim@plt>
   14e22:	mov    rdi,r14
   14e25:	mov    rbp,rax
   14e28:	mov    r12d,eax
   14e2b:	call   9ff0 <fclose@plt>
   14e30:	test   ebp,ebp
   14e32:	jle    14e4d <__sprintf_chk@plt+0xa49d>
   14e34:	mov    rdx,QWORD PTR [rsp+0x18]
   14e39:	movsxd rax,ebp
   14e3c:	lea    rax,[rdx+rax*1-0x1]
   14e41:	cmp    BYTE PTR [rax],0xa
   14e44:	jne    14e4d <__sprintf_chk@plt+0xa49d>
   14e46:	mov    BYTE PTR [rax],0x0
   14e49:	lea    r12d,[rbp-0x1]
   14e4d:	lea    rbp,[rsp+0x14]
   14e52:	jmp    14e66 <__sprintf_chk@plt+0xa4b6>
   14e54:	nop    DWORD PTR [rax+0x0]
   14e58:	call   9e40 <__errno_location@plt>
   14e5d:	cmp    DWORD PTR [rax],0x4
   14e60:	jne    15060 <__sprintf_chk@plt+0xa6b0>
   14e66:	xor    edx,edx
   14e68:	mov    rsi,rbp
   14e6b:	mov    edi,ebx
   14e6d:	call   a680 <waitpid@plt>
   14e72:	cmp    eax,0xffffffff
   14e75:	je     14e58 <__sprintf_chk@plt+0xa4a8>
   14e77:	mov    rsi,QWORD PTR [rip+0x6a812]        # 7f690 <obstack_alloc_failed_handler@@Base+0x858>
   14e7e:	mov    edi,0xd
   14e83:	call   a330 <signal@plt>
   14e88:	mov    eax,DWORD PTR [rsp+0x14]
   14e8c:	mov    rdi,QWORD PTR [rsp+0x18]
   14e91:	test   al,0x7f
   14e93:	jne    155b4 <__sprintf_chk@plt+0xac04>
   14e99:	test   ah,0xff
   14e9c:	jne    150d0 <__sprintf_chk@plt+0xa720>
   14ea2:	test   r12d,r12d
   14ea5:	jle    150d0 <__sprintf_chk@plt+0xa720>
   14eab:	mov    QWORD PTR [r13+0x0],rdi
   14eaf:	mov    rax,QWORD PTR [rip+0x6a65a]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14eb6:	jmp    14cb6 <__sprintf_chk@plt+0xa306>
   14ebb:	nop    DWORD PTR [rax+rax*1+0x0]
   14ec0:	xor    eax,eax
   14ec2:	jmp    14ce3 <__sprintf_chk@plt+0xa333>
   14ec7:	nop    WORD PTR [rax+rax*1+0x0]
   14ed0:	cmp    BYTE PTR [rip+0x6a601],0x0        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   14ed7:	je     14f78 <__sprintf_chk@plt+0xa5c8>
   14edd:	cmp    BYTE PTR [rip+0x6a3dc],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   14ee4:	jne    14fb8 <__sprintf_chk@plt+0xa608>
   14eea:	mov    esi,0x3a
   14eef:	mov    rdi,rbp
   14ef2:	call   a0f0 <strchr@plt>
   14ef7:	cmp    rbp,rax
   14efa:	jae    14fb8 <__sprintf_chk@plt+0xa608>
   14f00:	test   rax,rax
   14f03:	je     14fb8 <__sprintf_chk@plt+0xa608>
   14f09:	sub    rax,rbp
   14f0c:	mov    esi,0x2f
   14f11:	mov    rdi,rbp
   14f14:	mov    rdx,rax
   14f17:	call   a280 <memchr@plt>
   14f1c:	test   rax,rax
   14f1f:	jne    14fb8 <__sprintf_chk@plt+0xa608>
   14f25:	mov    rdx,QWORD PTR [rip+0x6a384]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   14f2c:	mov    esi,0x42
   14f31:	mov    rdi,rbp
   14f34:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   14f39:	mov    ebx,eax
   14f3b:	jmp    14fce <__sprintf_chk@plt+0xa61e>
   14f40:	cmp    QWORD PTR [rip+0x6a3b0],0x0        # 7f2f8 <obstack_alloc_failed_handler@@Base+0x4c0>
   14f48:	jne    14bf0 <__sprintf_chk@plt+0xa240>
   14f4e:	mov    ecx,DWORD PTR [rip+0x6a60c]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14f54:	test   ecx,ecx
   14f56:	je     15550 <__sprintf_chk@plt+0xaba0>
   14f5c:	mov    rax,QWORD PTR [rip+0x67045]        # 7bfa8 <_obstack_memory_used@@Base+0x2f328>
   14f63:	mov    rax,QWORD PTR [rax]
   14f66:	mov    QWORD PTR [rip+0x6a733],rax        # 7f6a0 <obstack_alloc_failed_handler@@Base+0x868>
   14f6d:	jmp    14bf0 <__sprintf_chk@plt+0xa240>
   14f72:	nop    WORD PTR [rax+rax*1+0x0]
   14f78:	mov    eax,DWORD PTR [rsp+0x4]
   14f7c:	cmp    eax,0x1
   14f7f:	je     15488 <__sprintf_chk@plt+0xaad8>
   14f85:	cmp    eax,0x2
   14f88:	jne    154e8 <__sprintf_chk@plt+0xab38>
   14f8e:	cmp    BYTE PTR [rip+0x6a32b],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   14f95:	jne    14fb8 <__sprintf_chk@plt+0xa608>
   14f97:	mov    esi,0x3a
   14f9c:	mov    rdi,rbp
   14f9f:	call   a0f0 <strchr@plt>
   14fa4:	test   rax,rax
   14fa7:	je     14fb8 <__sprintf_chk@plt+0xa608>
   14fa9:	cmp    rbp,rax
   14fac:	jb     14f09 <__sprintf_chk@plt+0xa559>
   14fb2:	nop    WORD PTR [rax+rax*1+0x0]
   14fb8:	mov    edx,0x1b6
   14fbd:	mov    esi,0x42
   14fc2:	mov    rdi,rbp
   14fc5:	xor    eax,eax
   14fc7:	call   a690 <open@plt>
   14fcc:	mov    ebx,eax
   14fce:	mov    DWORD PTR [rip+0x6a58c],ebx        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   14fd4:	mov    eax,0x1
   14fd9:	test   ebx,ebx
   14fdb:	jns    14ce3 <__sprintf_chk@plt+0xa333>
   14fe1:	mov    rax,QWORD PTR [rip+0x6a528]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   14fe8:	lea    rdi,[rip+0x4e1d1]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   14fef:	mov    rsi,QWORD PTR [rax]
   14ff2:	call   3c100 <__sprintf_chk@plt+0x31750>
   14ff7:	cmp    BYTE PTR [rip+0x6a4da],0x1        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   14ffe:	je     14d61 <__sprintf_chk@plt+0xa3b1>
   15004:	cmp    DWORD PTR [rsp+0x4],0x1
   15009:	jne    14d61 <__sprintf_chk@plt+0xa3b1>
   1500f:	cmp    BYTE PTR [rip+0x6a296],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   15016:	je     14d61 <__sprintf_chk@plt+0xa3b1>
   1501c:	call   264e0 <__sprintf_chk@plt+0x1bb30>
   15021:	jmp    14d61 <__sprintf_chk@plt+0xa3b1>
   15026:	cs nop WORD PTR [rax+rax*1+0x0]
   15030:	xor    edi,edi
   15032:	mov    edx,0x5
   15037:	lea    rsi,[rip+0x4e125]        # 63163 <_obstack_memory_used@@Base+0x164e3>
   1503e:	call   a040 <dcgettext@plt>
   15043:	lea    rdi,[rip+0x51a12]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   1504a:	mov    rsi,rax
   1504d:	call   3bad0 <__sprintf_chk@plt+0x31120>
   15052:	jmp    14df2 <__sprintf_chk@plt+0xa442>
   15057:	nop    WORD PTR [rax+rax*1+0x0]
   15060:	mov    rsi,QWORD PTR [rip+0x6a629]        # 7f690 <obstack_alloc_failed_handler@@Base+0x858>
   15067:	mov    edi,0xd
   1506c:	call   a330 <signal@plt>
   15071:	mov    rsi,QWORD PTR [rip+0x6a280]        # 7f2f8 <obstack_alloc_failed_handler@@Base+0x4c0>
   15078:	lea    rdi,[rip+0x4e082]        # 63101 <_obstack_memory_used@@Base+0x16481>
   1507f:	call   3bad0 <__sprintf_chk@plt+0x31120>
   15084:	mov    rax,QWORD PTR [rip+0x6a47d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1508b:	test   rax,rax
   1508e:	je     15092 <__sprintf_chk@plt+0xa6e2>
   15090:	call   rax
   15092:	mov    rdi,QWORD PTR [rip+0x6a25f]        # 7f2f8 <obstack_alloc_failed_handler@@Base+0x4c0>
   15099:	call   4b7a0 <argp_usage@@Base+0x8420>
   1509e:	mov    edx,0x5
   150a3:	lea    rsi,[rip+0x4e389]        # 63433 <_obstack_memory_used@@Base+0x167b3>
   150aa:	xor    edi,edi
   150ac:	mov    r12,rax
   150af:	call   a040 <dcgettext@plt>
   150b4:	mov    rcx,r12
   150b7:	xor    esi,esi
   150b9:	xor    edi,edi
   150bb:	mov    rdx,rax
   150be:	xor    eax,eax
   150c0:	call   a640 <error@plt>
   150c5:	call   190e0 <__sprintf_chk@plt+0xe730>
   150ca:	nop    WORD PTR [rax+rax*1+0x0]
   150d0:	call   9ce0 <free@plt>
   150d5:	cmp    BYTE PTR [rsp+0x15],0x0
   150da:	jne    15084 <__sprintf_chk@plt+0xa6d4>
   150dc:	mov    rax,QWORD PTR [rip+0x6a42d]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   150e3:	jmp    14cb6 <__sprintf_chk@plt+0xa306>
   150e8:	nop    DWORD PTR [rax+rax*1+0x0]
   150f0:	mov    QWORD PTR [rsp+0x18],0x0
   150f9:	mov    r14,QWORD PTR [rip+0x6a5a0]        # 7f6a0 <obstack_alloc_failed_handler@@Base+0x868>
   15100:	lea    r12,[rsp+0x20]
   15105:	lea    rbp,[rsp+0x18]
   1510a:	mov    QWORD PTR [rsp+0x20],0x0
   15113:	mov    rbx,QWORD PTR [rip+0x66ece]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   1511a:	nop    WORD PTR [rax+rax*1+0x0]
   15120:	mov    rdi,QWORD PTR [rbx]
   15123:	mov    rax,QWORD PTR [rdi+0x28]
   15127:	cmp    rax,QWORD PTR [rdi+0x30]
   1512b:	jae    15226 <__sprintf_chk@plt+0xa876>
   15131:	lea    rdx,[rax+0x1]
   15135:	mov    QWORD PTR [rdi+0x28],rdx
   15139:	mov    BYTE PTR [rax],0x7
   1513c:	mov    rax,QWORD PTR [rip+0x6a3cd]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   15143:	xor    edi,edi
   15145:	lea    rdx,[rip+0x66ef4]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   1514c:	mov    rsi,QWORD PTR [rax]
   1514f:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   15154:	xor    edi,edi
   15156:	mov    edx,0x5
   1515b:	lea    rsi,[rip+0x4ea26]        # 63b88 <_obstack_memory_used@@Base+0x16f08>
   15162:	mov    r15,rax
   15165:	mov    eax,DWORD PTR [rip+0x66f0d]        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
   1516b:	lea    r13d,[rax+0x1]
   1516f:	call   a040 <dcgettext@plt>
   15174:	mov    rdi,QWORD PTR [rbx]
   15177:	mov    ecx,r13d
   1517a:	mov    esi,0x1
   1517f:	mov    rdx,rax
   15182:	mov    r8,r15
   15185:	xor    eax,eax
   15187:	call   a840 <__fprintf_chk@plt>
   1518c:	mov    rdi,QWORD PTR [rbx]
   1518f:	call   a870 <fflush_unlocked@plt>
   15194:	mov    rcx,r14
   15197:	mov    edx,0xa
   1519c:	mov    rsi,r12
   1519f:	mov    rdi,rbp
   151a2:	call   a310 <__getdelim@plt>
   151a7:	test   rax,rax
   151aa:	jle    155be <__sprintf_chk@plt+0xac0e>
   151b0:	mov    rdi,QWORD PTR [rsp+0x18]
   151b5:	movzx  eax,BYTE PTR [rdi]
   151b8:	mov    edx,eax
   151ba:	and    edx,0xffffffdf
   151bd:	cmp    dl,0x59
   151c0:	je     15478 <__sprintf_chk@plt+0xaac8>
   151c6:	cmp    al,0xa
   151c8:	je     15478 <__sprintf_chk@plt+0xaac8>
   151ce:	cmp    al,0x3f
   151d0:	je     15340 <__sprintf_chk@plt+0xa990>
   151d6:	jg     15238 <__sprintf_chk@plt+0xa888>
   151d8:	cmp    al,0x21
   151da:	jne    151f0 <__sprintf_chk@plt+0xa840>
   151dc:	cmp    BYTE PTR [rip+0x6a0bd],0x0        # 7f2a0 <obstack_alloc_failed_handler@@Base+0x468>
   151e3:	je     15388 <__sprintf_chk@plt+0xa9d8>
   151e9:	nop    DWORD PTR [rax+0x0]
   151f0:	mov    edx,0x5
   151f5:	lea    rsi,[rip+0x4eafc]        # 63cf8 <_obstack_memory_used@@Base+0x17078>
   151fc:	xor    edi,edi
   151fe:	call   a040 <dcgettext@plt>
   15203:	mov    rdi,QWORD PTR [rbx]
   15206:	mov    esi,0x1
   1520b:	mov    rdx,rax
   1520e:	xor    eax,eax
   15210:	call   a840 <__fprintf_chk@plt>
   15215:	mov    rdi,QWORD PTR [rbx]
   15218:	mov    rax,QWORD PTR [rdi+0x28]
   1521c:	cmp    rax,QWORD PTR [rdi+0x30]
   15220:	jb     15131 <__sprintf_chk@plt+0xa781>
   15226:	mov    esi,0x7
   1522b:	call   a120 <__overflow@plt>
   15230:	jmp    1513c <__sprintf_chk@plt+0xa78c>
   15235:	nop    DWORD PTR [rax]
   15238:	cmp    al,0x6e
   1523a:	jne    152c0 <__sprintf_chk@plt+0xa910>
   15240:	movzx  eax,BYTE PTR [rdi+0x1]
   15244:	lea    r13,[rdi+0x1]
   15248:	cmp    al,0x9
   1524a:	je     15250 <__sprintf_chk@plt+0xa8a0>
   1524c:	cmp    al,0x20
   1524e:	jne    15261 <__sprintf_chk@plt+0xa8b1>
   15250:	movzx  eax,BYTE PTR [r13+0x1]
   15255:	add    r13,0x1
   15259:	cmp    al,0x20
   1525b:	je     15250 <__sprintf_chk@plt+0xa8a0>
   1525d:	cmp    al,0x9
   1525f:	je     15250 <__sprintf_chk@plt+0xa8a0>
   15261:	cmp    al,0xa
   15263:	je     15548 <__sprintf_chk@plt+0xab98>
   15269:	test   al,al
   1526b:	je     15548 <__sprintf_chk@plt+0xab98>
   15271:	mov    rax,r13
   15274:	nop    DWORD PTR [rax+0x0]
   15278:	movzx  edx,BYTE PTR [rax+0x1]
   1527c:	add    rax,0x1
   15280:	test   dl,dl
   15282:	je     15289 <__sprintf_chk@plt+0xa8d9>
   15284:	cmp    dl,0xa
   15287:	jne    15278 <__sprintf_chk@plt+0xa8c8>
   15289:	mov    BYTE PTR [rax],0x0
   1528c:	cmp    BYTE PTR [r13+0x0],0x0
   15291:	jne    1543a <__sprintf_chk@plt+0xaa8a>
   15297:	xor    edi,edi
   15299:	mov    edx,0x5
   1529e:	lea    rsi,[rip+0x4ea2b]        # 63cd0 <_obstack_memory_used@@Base+0x17050>
   152a5:	call   a040 <dcgettext@plt>
   152aa:	mov    rsi,QWORD PTR [rbx]
   152ad:	mov    rdi,rax
   152b0:	call   a1a0 <fputs@plt>
   152b5:	jmp    15120 <__sprintf_chk@plt+0xa770>
   152ba:	nop    WORD PTR [rax+rax*1+0x0]
   152c0:	cmp    al,0x71
   152c2:	jne    151f0 <__sprintf_chk@plt+0xa840>
   152c8:	mov    rax,QWORD PTR [rip+0x6a239]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   152cf:	test   rax,rax
   152d2:	je     152d6 <__sprintf_chk@plt+0xa926>
   152d4:	call   rax
   152d6:	mov    edx,0x5
   152db:	lea    rsi,[rip+0x4e163]        # 63445 <_obstack_memory_used@@Base+0x167c5>
   152e2:	xor    edi,edi
   152e4:	call   a040 <dcgettext@plt>
   152e9:	xor    esi,esi
   152eb:	xor    edi,edi
   152ed:	mov    rdx,rax
   152f0:	xor    eax,eax
   152f2:	call   a640 <error@plt>
   152f7:	mov    eax,DWORD PTR [rip+0x6a27b]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   152fd:	sub    eax,0x5
   15300:	cmp    eax,0x2
   15303:	jbe    15334 <__sprintf_chk@plt+0xa984>
   15305:	mov    rax,QWORD PTR [rip+0x6a1fc]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1530c:	test   rax,rax
   1530f:	je     15313 <__sprintf_chk@plt+0xa963>
   15311:	call   rax
   15313:	mov    edx,0x5
   15318:	lea    rsi,[rip+0x4e8c1]        # 63be0 <_obstack_memory_used@@Base+0x16f60>
   1531f:	xor    edi,edi
   15321:	call   a040 <dcgettext@plt>
   15326:	xor    esi,esi
   15328:	xor    edi,edi
   1532a:	mov    rdx,rax
   1532d:	xor    eax,eax
   1532f:	call   a640 <error@plt>
   15334:	call   190e0 <__sprintf_chk@plt+0xe730>
   15339:	nop    DWORD PTR [rax+0x0]
   15340:	xor    edi,edi
   15342:	mov    edx,0x5
   15347:	lea    rsi,[rip+0x4e8b2]        # 63c00 <_obstack_memory_used@@Base+0x16f80>
   1534e:	call   a040 <dcgettext@plt>
   15353:	mov    rdi,QWORD PTR [rbx]
   15356:	mov    esi,0x1
   1535b:	mov    rdx,rax
   1535e:	xor    eax,eax
   15360:	call   a840 <__fprintf_chk@plt>
   15365:	cmp    BYTE PTR [rip+0x69f34],0x0        # 7f2a0 <obstack_alloc_failed_handler@@Base+0x468>
   1536c:	je     15410 <__sprintf_chk@plt+0xaa60>
   15372:	mov    edx,0x5
   15377:	lea    rsi,[rip+0x4e932]        # 63cb0 <_obstack_memory_used@@Base+0x17030>
   1537e:	jmp    151fc <__sprintf_chk@plt+0xa84c>
   15383:	nop    DWORD PTR [rax+rax*1+0x0]
   15388:	lea    rdi,[rip+0x4e0cf]        # 6345e <_obstack_memory_used@@Base+0x167de>
   1538f:	call   9d40 <getenv@plt>
   15394:	mov    rcx,rax
   15397:	test   rax,rax
   1539a:	lea    rax,[rip+0x4e078]        # 63419 <_obstack_memory_used@@Base+0x16799>
   153a1:	cmovne rax,rcx
   153a5:	mov    QWORD PTR [rsp+0x8],rax
   153aa:	call   a950 <fork@plt>
   153af:	mov    r13d,eax
   153b2:	cmp    eax,0xffffffff
   153b5:	je     155dd <__sprintf_chk@plt+0xac2d>
   153bb:	test   eax,eax
   153bd:	je     155ec <__sprintf_chk@plt+0xac3c>
   153c3:	lea    r15,[rsp+0x14]
   153c8:	nop    DWORD PTR [rax+rax*1+0x0]
   153d0:	xor    edx,edx
   153d2:	mov    rsi,r15
   153d5:	mov    edi,r13d
   153d8:	call   a680 <waitpid@plt>
   153dd:	cmp    eax,0xffffffff
   153e0:	jne    15120 <__sprintf_chk@plt+0xa770>
   153e6:	call   9e40 <__errno_location@plt>
   153eb:	cmp    DWORD PTR [rax],0x4
   153ee:	je     153d0 <__sprintf_chk@plt+0xaa20>
   153f0:	mov    rsi,QWORD PTR [rsp+0x8]
   153f5:	lea    rdi,[rip+0x4dd05]        # 63101 <_obstack_memory_used@@Base+0x16481>
   153fc:	call   3bad0 <__sprintf_chk@plt+0x31120>
   15401:	jmp    15120 <__sprintf_chk@plt+0xa770>
   15406:	cs nop WORD PTR [rax+rax*1+0x0]
   15410:	xor    edi,edi
   15412:	mov    edx,0x5
   15417:	lea    rsi,[rip+0x4e86a]        # 63c88 <_obstack_memory_used@@Base+0x17008>
   1541e:	call   a040 <dcgettext@plt>
   15423:	mov    rdi,QWORD PTR [rbx]
   15426:	mov    esi,0x1
   1542b:	mov    rdx,rax
   1542e:	xor    eax,eax
   15430:	call   a840 <__fprintf_chk@plt>
   15435:	jmp    15372 <__sprintf_chk@plt+0xa9c2>
   1543a:	mov    rdi,r13
   1543d:	mov    rbx,QWORD PTR [rip+0x6a0cc]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   15444:	call   a060 <strlen@plt>
   15449:	lea    r12,[rax+0x1]
   1544d:	mov    rdi,r12
   15450:	call   a4a0 <malloc@plt>
   15455:	mov    rdi,rax
   15458:	test   rax,rax
   1545b:	je     155e7 <__sprintf_chk@plt+0xac37>
   15461:	mov    rdx,r12
   15464:	mov    rsi,r13
   15467:	call   a420 <memcpy@plt>
   1546c:	mov    QWORD PTR [rbx],rax
   1546f:	mov    rdi,QWORD PTR [rsp+0x18]
   15474:	nop    DWORD PTR [rax+0x0]
   15478:	call   9ce0 <free@plt>
   1547d:	jmp    150dc <__sprintf_chk@plt+0xa72c>
   15482:	nop    WORD PTR [rax+rax*1+0x0]
   15488:	cmp    BYTE PTR [rip+0x69e1d],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   1548f:	jne    15568 <__sprintf_chk@plt+0xabb8>
   15495:	cmp    BYTE PTR [rip+0x69e24],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   1549c:	jne    154d1 <__sprintf_chk@plt+0xab21>
   1549e:	mov    esi,0x3a
   154a3:	mov    rdi,rbp
   154a6:	call   a0f0 <strchr@plt>
   154ab:	test   rax,rax
   154ae:	je     154d1 <__sprintf_chk@plt+0xab21>
   154b0:	cmp    rax,rbp
   154b3:	jbe    154d1 <__sprintf_chk@plt+0xab21>
   154b5:	sub    rax,rbp
   154b8:	mov    esi,0x2f
   154bd:	mov    rdi,rbp
   154c0:	mov    rdx,rax
   154c3:	call   a280 <memchr@plt>
   154c8:	test   rax,rax
   154cb:	je     15599 <__sprintf_chk@plt+0xabe9>
   154d1:	mov    esi,0x1b6
   154d6:	mov    rdi,rbp
   154d9:	call   a7e0 <creat@plt>
   154de:	mov    ebx,eax
   154e0:	jmp    14fce <__sprintf_chk@plt+0xa61e>
   154e5:	nop    DWORD PTR [rax]
   154e8:	cmp    BYTE PTR [rip+0x69dd1],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   154ef:	jne    15520 <__sprintf_chk@plt+0xab70>
   154f1:	mov    esi,0x3a
   154f6:	mov    rdi,rbp
   154f9:	call   a0f0 <strchr@plt>
   154fe:	cmp    rbp,rax
   15501:	jae    15520 <__sprintf_chk@plt+0xab70>
   15503:	test   rax,rax
   15506:	je     15520 <__sprintf_chk@plt+0xab70>
   15508:	sub    rax,rbp
   1550b:	mov    esi,0x2f
   15510:	mov    rdi,rbp
   15513:	mov    rdx,rax
   15516:	call   a280 <memchr@plt>
   1551b:	test   rax,rax
   1551e:	je     15584 <__sprintf_chk@plt+0xabd4>
   15520:	mov    edx,0x1b6
   15525:	xor    esi,esi
   15527:	mov    rdi,rbp
   1552a:	xor    eax,eax
   1552c:	call   a690 <open@plt>
   15531:	mov    ebx,eax
   15533:	mov    DWORD PTR [rip+0x6a027],ebx        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   15539:	call   cf10 <__sprintf_chk@plt+0x2560>
   1553e:	jmp    14fd4 <__sprintf_chk@plt+0xa624>
   15543:	nop    DWORD PTR [rax+rax*1+0x0]
   15548:	mov    rax,r13
   1554b:	jmp    15289 <__sprintf_chk@plt+0xa8d9>
   15550:	lea    rsi,[rip+0x5153b]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
   15557:	lea    rdi,[rip+0x4db9a]        # 630f8 <_obstack_memory_used@@Base+0x16478>
   1555e:	call   a6d0 <fopen@plt>
   15563:	jmp    14f66 <__sprintf_chk@plt+0xa5b6>
   15568:	mov    rdi,rbp
   1556b:	mov    esi,0x1
   15570:	call   25c20 <__sprintf_chk@plt+0x1b270>
   15575:	mov    rax,QWORD PTR [rip+0x69f94]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   1557c:	mov    rbp,QWORD PTR [rax]
   1557f:	jmp    15495 <__sprintf_chk@plt+0xaae5>
   15584:	mov    rdx,QWORD PTR [rip+0x69d25]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   1558b:	xor    esi,esi
   1558d:	mov    rdi,rbp
   15590:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   15595:	mov    ebx,eax
   15597:	jmp    15533 <__sprintf_chk@plt+0xab83>
   15599:	mov    rdx,QWORD PTR [rip+0x69d10]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   155a0:	mov    esi,0x41
   155a5:	mov    rdi,rbp
   155a8:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   155ad:	mov    ebx,eax
   155af:	jmp    14fce <__sprintf_chk@plt+0xa61e>
   155b4:	call   9ce0 <free@plt>
   155b9:	jmp    15084 <__sprintf_chk@plt+0xa6d4>
   155be:	mov    rax,QWORD PTR [rip+0x69f43]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   155c5:	test   rax,rax
   155c8:	je     155cc <__sprintf_chk@plt+0xac1c>
   155ca:	call   rax
   155cc:	mov    edx,0x5
   155d1:	lea    rsi,[rip+0x4e5e0]        # 63bb8 <_obstack_memory_used@@Base+0x16f38>
   155d8:	jmp    152e2 <__sprintf_chk@plt+0xa932>
   155dd:	call   281c0 <__sprintf_chk@plt+0x1d810>
   155e2:	call   a0a0 <__stack_chk_fail@plt>
   155e7:	call   19130 <__sprintf_chk@plt+0xe780>
   155ec:	mov    rbx,QWORD PTR [rsp+0x8]
   155f1:	lea    rsi,[rip+0x4de6f]        # 63467 <_obstack_memory_used@@Base+0x167e7>
   155f8:	xor    ecx,ecx
   155fa:	xor    eax,eax
   155fc:	lea    rdx,[rip+0x4de61]        # 63464 <_obstack_memory_used@@Base+0x167e4>
   15603:	mov    rdi,rbx
   15606:	call   a8c0 <execlp@plt>
   1560b:	mov    rsi,rbx
   1560e:	lea    rdi,[rip+0x4de56]        # 6346b <_obstack_memory_used@@Base+0x167eb>
   15615:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   1561a:	mov    edx,0x1
   1561f:	lea    rsi,[rip+0x4dae3]        # 63109 <_obstack_memory_used@@Base+0x16489>
   15626:	lea    rbp,[rsp+0x30]
   1562b:	lea    rdi,[rip+0x4dadc]        # 6310e <_obstack_memory_used@@Base+0x1648e>
   15632:	call   9f80 <setenv@plt>
   15637:	mov    rsi,QWORD PTR [r13+0x0]
   1563b:	mov    edx,0x1
   15640:	lea    rdi,[rip+0x4dad3]        # 6311a <_obstack_memory_used@@Base+0x1649a>
   15647:	call   9f80 <setenv@plt>
   1564c:	lea    edi,[r12+0x1]
   15651:	mov    rsi,rbp
   15654:	movsxd rdi,edi
   15657:	call   49530 <argp_usage@@Base+0x61b0>
   1565c:	mov    edx,0x1
   15661:	lea    rdi,[rip+0x4ddb9]        # 63421 <_obstack_memory_used@@Base+0x167a1>
   15668:	mov    rsi,rax
   1566b:	call   9f80 <setenv@plt>
   15670:	movsxd rdi,DWORD PTR [rip+0x69eb9]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   15677:	mov    rsi,rbp
   1567a:	call   49530 <argp_usage@@Base+0x61b0>
   1567f:	mov    edx,0x1
   15684:	lea    rdi,[rip+0x4daaa]        # 63135 <_obstack_memory_used@@Base+0x164b5>
   1568b:	mov    rsi,rax
   1568e:	call   9f80 <setenv@plt>
   15693:	mov    edi,DWORD PTR [rip+0x69edf]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   15699:	call   340e0 <__sprintf_chk@plt+0x29730>
   1569e:	mov    edx,0x1
   156a3:	lea    rdi,[rip+0x4da9f]        # 63149 <_obstack_memory_used@@Base+0x164c9>
   156aa:	mov    rsi,rax
   156ad:	call   9f80 <setenv@plt>
   156b2:	mov    edx,DWORD PTR [rip+0x69bf0]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   156b8:	test   edx,edx
   156ba:	jne    156c2 <__sprintf_chk@plt+0xad12>
   156bc:	mov    edx,DWORD PTR [rip+0x69be2]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   156c2:	lea    rsi,[rip+0x51bc8]        # 67291 <_obstack_memory_used@@Base+0x1a611>
   156c9:	lea    rax,[rip+0x64a30]        # 7a100 <_obstack_memory_used@@Base+0x2d480>
   156d0:	jmp    156df <__sprintf_chk@plt+0xad2f>
   156d2:	mov    rsi,QWORD PTR [rax+0x10]
   156d6:	add    rax,0x10
   156da:	test   rsi,rsi
   156dd:	je     156ee <__sprintf_chk@plt+0xad3e>
   156df:	cmp    edx,DWORD PTR [rax+0x8]
   156e2:	jne    156d2 <__sprintf_chk@plt+0xad22>
   156e4:	jmp    156f5 <__sprintf_chk@plt+0xad45>
   156e6:	mov    rdi,rbp
   156e9:	call   28210 <__sprintf_chk@plt+0x1d860>
   156ee:	lea    rsi,[rip+0x4d9fa]        # 630ef <_obstack_memory_used@@Base+0x1646f>
   156f5:	mov    edx,0x1
   156fa:	lea    rdi,[rip+0x4da57]        # 63158 <_obstack_memory_used@@Base+0x164d8>
   15701:	call   9f80 <setenv@plt>
   15706:	movsxd rdi,DWORD PTR [rsp+0x2c]
   1570b:	mov    rsi,rbp
   1570e:	call   49530 <argp_usage@@Base+0x61b0>
   15713:	mov    edx,0x1
   15718:	lea    rdi,[rip+0x4dd0d]        # 6342c <_obstack_memory_used@@Base+0x167ac>
   1571f:	mov    rsi,rax
   15722:	call   9f80 <setenv@plt>
   15727:	mov    edi,DWORD PTR [rsp+0x28]
   1572b:	call   ed20 <__sprintf_chk@plt+0x4370>
   15730:	mov    rdi,QWORD PTR [rip+0x69bc1]        # 7f2f8 <obstack_alloc_failed_handler@@Base+0x4c0>
   15737:	call   336c0 <__sprintf_chk@plt+0x28d10>
   1573c:	nop    DWORD PTR [rax+0x0]
   15740:	endbr64 
   15744:	push   r15
   15746:	push   r14
   15748:	push   r13
   1574a:	push   r12
   1574c:	push   rbp
   1574d:	push   rbx
   1574e:	sub    rsp,0x88
   15755:	mov    ecx,DWORD PTR [rip+0x69dc1]        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
   1575b:	mov    rax,QWORD PTR fs:0x28
   15764:	mov    QWORD PTR [rsp+0x78],rax
   15769:	lea    rax,[rip+0xffffffffffff98f0]        # f060 <__sprintf_chk@plt+0x46b0>
   15770:	mov    QWORD PTR [rip+0x69d79],rax        # 7f4f0 <obstack_alloc_failed_handler@@Base+0x6b8>
   15777:	test   ecx,ecx
   15779:	je     15796 <__sprintf_chk@plt+0xade6>
   1577b:	mov    eax,DWORD PTR [rip+0x69f2b]        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
   15781:	xor    edx,edx
   15783:	add    eax,0x1
   15786:	mov    DWORD PTR [rip+0x69f20],eax        # 7f6ac <obstack_alloc_failed_handler@@Base+0x874>
   1578c:	div    ecx
   1578e:	test   edx,edx
   15790:	je     15b90 <__sprintf_chk@plt+0xb1e0>
   15796:	cmp    BYTE PTR [rip+0x6993b],0x0        # 7f0d8 <obstack_alloc_failed_handler@@Base+0x2a0>
   1579d:	mov    DWORD PTR [rip+0x69d5d],0x0        # 7f504 <obstack_alloc_failed_handler@@Base+0x6cc>
   157a7:	je     157b7 <__sprintf_chk@plt+0xae07>
   157a9:	cmp    QWORD PTR [rip+0x69d87],0x0        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   157b1:	jne    15b60 <__sprintf_chk@plt+0xb1b0>
   157b7:	mov    edi,DWORD PTR [rip+0x69da3]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   157bd:	mov    rdx,QWORD PTR [rip+0x69d8c]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   157c4:	mov    rsi,QWORD PTR [rip+0x69dbd]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   157cb:	cmp    edi,0x3fffffff
   157d1:	jle    15840 <__sprintf_chk@plt+0xae90>
   157d3:	sub    edi,0x40000000
   157d9:	call   3cc00 <__sprintf_chk@plt+0x32250>
   157de:	mov    rdi,rax
   157e1:	cmp    QWORD PTR [rip+0x69d68],rdi        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   157e8:	je     15c80 <__sprintf_chk@plt+0xb2d0>
   157ee:	test   rdi,rdi
   157f1:	je     15850 <__sprintf_chk@plt+0xaea0>
   157f3:	cmp    rdi,0xffffffffffffffff
   157f7:	je     15b48 <__sprintf_chk@plt+0xb198>
   157fd:	call   ee10 <__sprintf_chk@plt+0x4460>
   15802:	lea    rax,[rip+0xffffffffffffff37]        # 15740 <__sprintf_chk@plt+0xad90>
   15809:	mov    QWORD PTR [rip+0x69ce0],rax        # 7f4f0 <obstack_alloc_failed_handler@@Base+0x6b8>
   15810:	mov    rax,QWORD PTR [rsp+0x78]
   15815:	sub    rax,QWORD PTR fs:0x28
   1581e:	jne    16033 <__sprintf_chk@plt+0xb683>
   15824:	add    rsp,0x88
   1582b:	pop    rbx
   1582c:	pop    rbp
   1582d:	pop    r12
   1582f:	pop    r13
   15831:	pop    r14
   15833:	pop    r15
   15835:	ret    
   15836:	cs nop WORD PTR [rax+rax*1+0x0]
   15840:	call   4b7c0 <argp_usage@@Base+0x8440>
   15845:	mov    rdi,rax
   15848:	jmp    157e1 <__sprintf_chk@plt+0xae31>
   1584a:	nop    WORD PTR [rax+rax*1+0x0]
   15850:	cmp    BYTE PTR [rip+0x69d59],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   15857:	je     157fd <__sprintf_chk@plt+0xae4d>
   15859:	lea    rbp,[rip+0x4e088]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   15860:	lea    r12,[rip+0x667d9]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   15867:	movabs rbx,0xcccccccccccccccd
   15871:	mov    eax,DWORD PTR [rip+0x69d01]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   15877:	cmp    eax,0x2
   1587a:	ja     15bb0 <__sprintf_chk@plt+0xb200>
   15880:	xor    edi,edi
   15882:	test   eax,eax
   15884:	setne  dil
   15888:	add    edi,edi
   1588a:	call   14bc0 <__sprintf_chk@plt+0xa210>
   1588f:	test   al,al
   15891:	jne    158b6 <__sprintf_chk@plt+0xaf06>
   15893:	jmp    15e48 <__sprintf_chk@plt+0xb498>
   15898:	nop    DWORD PTR [rax+rax*1+0x0]
   158a0:	sub    edi,0x40000000
   158a6:	call   3cc00 <__sprintf_chk@plt+0x32250>
   158ab:	cmp    rax,0xffffffffffffffff
   158af:	jne    158dd <__sprintf_chk@plt+0xaf2d>
   158b1:	call   ed70 <__sprintf_chk@plt+0x43c0>
   158b6:	mov    edi,DWORD PTR [rip+0x69ca4]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   158bc:	mov    rdx,QWORD PTR [rip+0x69c8d]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   158c3:	mov    rsi,QWORD PTR [rip+0x69cbe]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   158ca:	cmp    edi,0x3fffffff
   158d0:	jg     158a0 <__sprintf_chk@plt+0xaef0>
   158d2:	call   4b7c0 <argp_usage@@Base+0x8440>
   158d7:	cmp    rax,0xffffffffffffffff
   158db:	je     158b1 <__sprintf_chk@plt+0xaf01>
   158dd:	cmp    rax,QWORD PTR [rip+0x69c6c]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   158e4:	je     158ee <__sprintf_chk@plt+0xaf3e>
   158e6:	mov    rdi,rax
   158e9:	call   ee10 <__sprintf_chk@plt+0x4460>
   158ee:	mov    rax,QWORD PTR [rip+0x69c4b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   158f5:	cmp    rax,QWORD PTR [rip+0x69c84]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   158fc:	je     15c10 <__sprintf_chk@plt+0xb260>
   15902:	mov    QWORD PTR [rsp+0x18],rax
   15907:	test   rax,rax
   1590a:	je     15c49 <__sprintf_chk@plt+0xb299>
   15910:	movzx  eax,BYTE PTR [rax+0x9c]
   15917:	cmp    al,0x56
   15919:	je     15c90 <__sprintf_chk@plt+0xb2e0>
   1591f:	cmp    al,0x67
   15921:	je     15dc8 <__sprintf_chk@plt+0xb418>
   15927:	cmp    al,0x4d
   15929:	je     15d20 <__sprintf_chk@plt+0xb370>
   1592f:	mov    r15,QWORD PTR [rip+0x69c72]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   15936:	test   r15,r15
   15939:	je     15e30 <__sprintf_chk@plt+0xb480>
   1593f:	mov    r14,QWORD PTR [rip+0x699a2]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   15946:	test   r14,r14
   15949:	je     15bc0 <__sprintf_chk@plt+0xb210>
   1594f:	mov    r13,QWORD PTR [r15+0x10]
   15953:	mov    rdi,r14
   15956:	mov    rsi,r13
   15959:	call   a320 <strcmp@plt>
   1595e:	test   eax,eax
   15960:	je     159f7 <__sprintf_chk@plt+0xb047>
   15966:	mov    eax,DWORD PTR [rip+0x69938]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1596c:	mov    r15,QWORD PTR [rip+0x69b95]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   15973:	and    eax,0xfffffffb
   15976:	cmp    eax,0x2
   15979:	jne    15fa8 <__sprintf_chk@plt+0xb5f8>
   1597f:	mov    rdi,r13
   15982:	call   a060 <strlen@plt>
   15987:	cmp    rax,0x63
   1598b:	jbe    15fa8 <__sprintf_chk@plt+0xb5f8>
   15991:	mov    edx,0x64
   15996:	mov    rsi,r13
   15999:	mov    rdi,r14
   1599c:	call   9e50 <strncmp@plt>
   159a1:	test   eax,eax
   159a3:	jne    15fa8 <__sprintf_chk@plt+0xb5f8>
   159a9:	test   r15,r15
   159ac:	je     159bc <__sprintf_chk@plt+0xb00c>
   159ae:	call   r15
   159b1:	mov    rax,QWORD PTR [rip+0x69bf0]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   159b8:	mov    r13,QWORD PTR [rax+0x10]
   159bc:	mov    rdx,r12
   159bf:	mov    rsi,r13
   159c2:	xor    edi,edi
   159c4:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   159c9:	mov    edx,0x5
   159ce:	lea    rsi,[rip+0x4e373]        # 63d48 <_obstack_memory_used@@Base+0x170c8>
   159d5:	xor    edi,edi
   159d7:	mov    r14,rax
   159da:	call   a040 <dcgettext@plt>
   159df:	mov    rcx,r14
   159e2:	xor    esi,esi
   159e4:	xor    edi,edi
   159e6:	mov    rdx,rax
   159e9:	xor    eax,eax
   159eb:	call   a640 <error@plt>
   159f0:	mov    r15,QWORD PTR [rip+0x69bb1]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   159f7:	mov    rsi,QWORD PTR [rip+0x698da]        # 7f2d8 <obstack_alloc_failed_handler@@Base+0x4a0>
   159fe:	mov    rcx,QWORD PTR [rip+0x698db]        # 7f2e0 <obstack_alloc_failed_handler@@Base+0x4a8>
   15a05:	xor    edi,edi
   15a07:	mov    rax,QWORD PTR [r15+0x18]
   15a0b:	mov    rdx,rsi
   15a0e:	add    rdx,rcx
   15a11:	setb   dil
   15a15:	cmp    rdx,rax
   15a18:	jne    15e70 <__sprintf_chk@plt+0xb4c0>
   15a1e:	test   rdi,rdi
   15a21:	jne    15e70 <__sprintf_chk@plt+0xb4c0>
   15a27:	sub    rax,QWORD PTR [r15+0x20]
   15a2b:	cmp    rax,rcx
   15a2e:	je     15e30 <__sprintf_chk@plt+0xb480>
   15a34:	mov    rax,QWORD PTR [rip+0x69acd]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   15a3b:	test   rax,rax
   15a3e:	je     15a50 <__sprintf_chk@plt+0xb0a0>
   15a40:	call   rax
   15a42:	mov    rcx,QWORD PTR [rip+0x69897]        # 7f2e0 <obstack_alloc_failed_handler@@Base+0x4a8>
   15a49:	mov    r15,QWORD PTR [rip+0x69b58]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   15a50:	mov    BYTE PTR [rsp+0x74],0x0
   15a55:	lea    r9,[rsp+0x74]
   15a5a:	nop    WORD PTR [rax+rax*1+0x0]
   15a60:	mov    rax,rcx
   15a63:	sub    r9,0x1
   15a67:	mul    rbx
   15a6a:	mov    rax,rcx
   15a6d:	shr    rdx,0x3
   15a71:	lea    rsi,[rdx+rdx*4]
   15a75:	add    rsi,rsi
   15a78:	sub    rax,rsi
   15a7b:	add    eax,0x30
   15a7e:	mov    BYTE PTR [r9],al
   15a81:	mov    rax,rcx
   15a84:	mov    rcx,rdx
   15a87:	cmp    rax,0x9
   15a8b:	ja     15a60 <__sprintf_chk@plt+0xb0b0>
   15a8d:	mov    rcx,QWORD PTR [r15+0x20]
   15a91:	mov    BYTE PTR [rsp+0x54],0x0
   15a96:	lea    r14,[rsp+0x54]
   15a9b:	nop    DWORD PTR [rax+rax*1+0x0]
   15aa0:	mov    rax,rcx
   15aa3:	sub    r14,0x1
   15aa7:	mul    rbx
   15aaa:	mov    rax,rcx
   15aad:	shr    rdx,0x3
   15ab1:	lea    rsi,[rdx+rdx*4]
   15ab5:	add    rsi,rsi
   15ab8:	sub    rax,rsi
   15abb:	add    eax,0x30
   15abe:	mov    BYTE PTR [r14],al
   15ac1:	mov    rax,rcx
   15ac4:	mov    rcx,rdx
   15ac7:	cmp    rax,0x9
   15acb:	ja     15aa0 <__sprintf_chk@plt+0xb0f0>
   15acd:	mov    rcx,QWORD PTR [r15+0x18]
   15ad1:	mov    BYTE PTR [rsp+0x34],0x0
   15ad6:	lea    r15,[rsp+0x34]
   15adb:	nop    DWORD PTR [rax+rax*1+0x0]
   15ae0:	mov    rax,rcx
   15ae3:	sub    r15,0x1
   15ae7:	mul    rbx
   15aea:	mov    rax,rcx
   15aed:	shr    rdx,0x3
   15af1:	lea    rsi,[rdx+rdx*4]
   15af5:	add    rsi,rsi
   15af8:	sub    rax,rsi
   15afb:	add    eax,0x30
   15afe:	mov    BYTE PTR [r15],al
   15b01:	mov    rax,rcx
   15b04:	mov    rcx,rdx
   15b07:	cmp    rax,0x9
   15b0b:	ja     15ae0 <__sprintf_chk@plt+0xb130>
   15b0d:	xor    edi,edi
   15b0f:	mov    edx,0x5
   15b14:	lea    rsi,[rip+0x4e29d]        # 63db8 <_obstack_memory_used@@Base+0x17138>
   15b1b:	mov    QWORD PTR [rsp],r9
   15b1f:	call   a040 <dcgettext@plt>
   15b24:	mov    r9,QWORD PTR [rsp]
   15b28:	mov    r8,r14
   15b2b:	mov    rcx,r15
   15b2e:	mov    rdx,rax
   15b31:	xor    esi,esi
   15b33:	xor    edi,edi
   15b35:	xor    eax,eax
   15b37:	call   a640 <error@plt>
   15b3c:	jmp    15871 <__sprintf_chk@plt+0xaec1>
   15b41:	nop    DWORD PTR [rax+0x0]
   15b48:	call   9e40 <__errno_location@plt>
   15b4d:	cmp    DWORD PTR [rax],0x1c
   15b50:	je     15ba0 <__sprintf_chk@plt+0xb1f0>
   15b52:	call   ed70 <__sprintf_chk@plt+0x43c0>
   15b57:	jmp    157b7 <__sprintf_chk@plt+0xae07>
   15b5c:	nop    DWORD PTR [rax+0x0]
   15b60:	mov    DWORD PTR [rip+0x699f6],0x1        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   15b6a:	call   33790 <__sprintf_chk@plt+0x28de0>
   15b6f:	mov    rdx,QWORD PTR [rip+0x699da]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   15b76:	mov    DWORD PTR [rip+0x699e0],0x0        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   15b80:	cmp    rax,rdx
   15b83:	jne    16038 <__sprintf_chk@plt+0xb688>
   15b89:	xor    edi,edi
   15b8b:	jmp    157c4 <__sprintf_chk@plt+0xae14>
   15b90:	xor    edi,edi
   15b92:	call   e610 <__sprintf_chk@plt+0x3c60>
   15b97:	jmp    15796 <__sprintf_chk@plt+0xade6>
   15b9c:	nop    DWORD PTR [rax+0x0]
   15ba0:	cmp    BYTE PTR [rip+0x69a09],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   15ba7:	je     15b52 <__sprintf_chk@plt+0xb1a2>
   15ba9:	jmp    15859 <__sprintf_chk@plt+0xaea9>
   15bae:	xchg   ax,ax
   15bb0:	xor    edi,edi
   15bb2:	cmp    eax,0x8
   15bb5:	sete   dil
   15bb9:	add    edi,edi
   15bbb:	jmp    1588a <__sprintf_chk@plt+0xaeda>
   15bc0:	mov    rax,QWORD PTR [rip+0x69941]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   15bc7:	test   rax,rax
   15bca:	je     15bd5 <__sprintf_chk@plt+0xb225>
   15bcc:	call   rax
   15bce:	mov    r15,QWORD PTR [rip+0x699d3]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   15bd5:	mov    rsi,QWORD PTR [r15+0x10]
   15bd9:	mov    rdx,r12
   15bdc:	xor    edi,edi
   15bde:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   15be3:	xor    edi,edi
   15be5:	mov    edx,0x5
   15bea:	lea    rsi,[rip+0x4e12f]        # 63d20 <_obstack_memory_used@@Base+0x170a0>
   15bf1:	mov    r14,rax
   15bf4:	call   a040 <dcgettext@plt>
   15bf9:	mov    rcx,r14
   15bfc:	xor    esi,esi
   15bfe:	xor    edi,edi
   15c00:	mov    rdx,rax
   15c03:	xor    eax,eax
   15c05:	call   a640 <error@plt>
   15c0a:	jmp    15871 <__sprintf_chk@plt+0xaec1>
   15c0f:	nop
   15c10:	cmp    BYTE PTR [rip+0x6991d],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   15c17:	jne    15c40 <__sprintf_chk@plt+0xb290>
   15c19:	call   f170 <__sprintf_chk@plt+0x47c0>
   15c1e:	mov    rax,QWORD PTR [rip+0x6991b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   15c25:	cmp    rax,QWORD PTR [rip+0x69954]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   15c2c:	jne    15902 <__sprintf_chk@plt+0xaf52>
   15c32:	mov    BYTE PTR [rip+0x698fb],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   15c39:	nop    DWORD PTR [rax+0x0]
   15c40:	mov    QWORD PTR [rsp+0x18],0x0
   15c49:	mov    rax,QWORD PTR [rip+0x698b8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   15c50:	test   rax,rax
   15c53:	je     15c57 <__sprintf_chk@plt+0xb2a7>
   15c55:	call   rax
   15c57:	mov    rsi,rbp
   15c5a:	xor    edi,edi
   15c5c:	mov    edx,0x5
   15c61:	call   a040 <dcgettext@plt>
   15c66:	xor    esi,esi
   15c68:	xor    edi,edi
   15c6a:	mov    rdx,rax
   15c6d:	xor    eax,eax
   15c6f:	call   a640 <error@plt>
   15c74:	jmp    15871 <__sprintf_chk@plt+0xaec1>
   15c79:	nop    DWORD PTR [rax+0x0]
   15c80:	add    QWORD PTR [rip+0x698d0],0x1        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
   15c88:	jmp    15802 <__sprintf_chk@plt+0xae52>
   15c8d:	nop    DWORD PTR [rax]
   15c90:	call   5a7b0 <_obstack_memory_used@@Base+0xdb30>
   15c95:	test   al,al
   15c97:	je     15871 <__sprintf_chk@plt+0xaec1>
   15c9d:	lea    rdi,[rip+0x6943c]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   15ca4:	call   44a50 <argp_usage@@Base+0x16d0>
   15ca9:	mov    rsi,QWORD PTR [rip+0x69418]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   15cb0:	mov    edx,0x64
   15cb5:	lea    rdi,[rip+0x69634]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   15cbc:	call   25400 <__sprintf_chk@plt+0x1aa50>
   15cc1:	mov    rax,QWORD PTR [rsp+0x18]
   15cc6:	mov    rdx,QWORD PTR [rip+0x69873]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   15ccd:	cmp    rax,rdx
   15cd0:	jb     15cea <__sprintf_chk@plt+0xb33a>
   15cd2:	sub    rax,rdx
   15cd5:	and    rax,0xfffffffffffffe00
   15cdb:	lea    rdx,[rdx+rax*1+0x200]
   15ce3:	mov    QWORD PTR [rip+0x69856],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   15cea:	cmp    QWORD PTR [rip+0x6988f],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   15cf1:	jb     aa11 <__sprintf_chk@plt+0x61>
   15cf7:	mov    rax,QWORD PTR [rip+0x69842]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   15cfe:	je     15fc6 <__sprintf_chk@plt+0xb616>
   15d04:	cmp    BYTE PTR [rax+0x9c],0x4d
   15d0b:	mov    QWORD PTR [rsp+0x18],rax
   15d10:	jne    1592f <__sprintf_chk@plt+0xaf7f>
   15d16:	cs nop WORD PTR [rax+rax*1+0x0]
   15d20:	call   5a7b0 <_obstack_memory_used@@Base+0xdb30>
   15d25:	test   al,al
   15d27:	je     15871 <__sprintf_chk@plt+0xaec1>
   15d2d:	lea    rdi,[rip+0x693ac]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   15d34:	lea    r14,[rip+0x4d51f]        # 6325a <_obstack_memory_used@@Base+0x165da>
   15d3b:	call   44a50 <argp_usage@@Base+0x16d0>
   15d40:	mov    rsi,QWORD PTR [rip+0x69381]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   15d47:	mov    edx,0x64
   15d4c:	lea    rdi,[rip+0x69595]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   15d53:	call   25400 <__sprintf_chk@plt+0x1aa50>
   15d58:	sub    rsp,0x8
   15d5c:	xor    r9d,r9d
   15d5f:	xor    ecx,ecx
   15d61:	push   0x0
   15d63:	mov    rax,QWORD PTR [rip+0x6935e]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   15d6a:	mov    rdx,r14
   15d6d:	mov    esi,0xc
   15d72:	mov    r8,0xffffffffffffffff
   15d79:	lea    rdi,[rax+0x7c]
   15d7d:	call   23640 <__sprintf_chk@plt+0x18c90>
   15d82:	xor    ecx,ecx
   15d84:	mov    esi,0xc
   15d89:	xor    r9d,r9d
   15d8c:	mov    QWORD PTR [rip+0x69545],rax        # 7f2d8 <obstack_alloc_failed_handler@@Base+0x4a0>
   15d93:	mov    rax,QWORD PTR [rip+0x6932e]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   15d9a:	mov    rdx,r14
   15d9d:	mov    r8,0xffffffffffffffff
   15da4:	mov    DWORD PTR [rsp],0x0
   15dab:	lea    rdi,[rax+0x171]
   15db2:	call   23640 <__sprintf_chk@plt+0x18c90>
   15db7:	pop    rcx
   15db8:	pop    rsi
   15db9:	mov    QWORD PTR [rip+0x69520],rax        # 7f2e0 <obstack_alloc_failed_handler@@Base+0x4a8>
   15dc0:	jmp    1592f <__sprintf_chk@plt+0xaf7f>
   15dc5:	nop    DWORD PTR [rax]
   15dc8:	lea    r14,[rip+0x69311]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   15dcf:	xor    eax,eax
   15dd1:	mov    ecx,0x37
   15dd6:	mov    edx,0x2
   15ddb:	mov    rdi,r14
   15dde:	lea    r15,[rsp+0x18]
   15de3:	mov    rsi,r14
   15de6:	rep stos QWORD PTR es:[rdi],rax
   15de9:	mov    rdi,r15
   15dec:	call   2ab30 <__sprintf_chk@plt+0x20180>
   15df1:	cmp    eax,0x2
   15df4:	jne    15c49 <__sprintf_chk@plt+0xb299>
   15dfa:	mov    rdi,r14
   15dfd:	call   1cce0 <__sprintf_chk@plt+0x12330>
   15e02:	mov    rdi,r14
   15e05:	call   44a50 <argp_usage@@Base+0x16d0>
   15e0a:	xor    edx,edx
   15e0c:	mov    rsi,r14
   15e0f:	mov    rdi,r15
   15e12:	call   2ab30 <__sprintf_chk@plt+0x20180>
   15e17:	cmp    eax,0x1
   15e1a:	je     15ff8 <__sprintf_chk@plt+0xb648>
   15e20:	cmp    eax,0x5
   15e23:	je     1592f <__sprintf_chk@plt+0xaf7f>
   15e29:	jmp    15c49 <__sprintf_chk@plt+0xb299>
   15e2e:	xchg   ax,ax
   15e30:	add    DWORD PTR [rip+0x66241],0x1        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
   15e37:	js     16040 <__sprintf_chk@plt+0xb690>
   15e3d:	add    DWORD PTR [rip+0x661e0],0x1        # 7c024 <_obstack_memory_used@@Base+0x2f3a4>
   15e44:	nop    DWORD PTR [rax+0x0]
   15e48:	mov    rax,QWORD PTR [rip+0x69731]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   15e4f:	cmp    QWORD PTR [rip+0x696ea],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   15e56:	jne    15802 <__sprintf_chk@plt+0xae52>
   15e5c:	call   f170 <__sprintf_chk@plt+0x47c0>
   15e61:	jmp    15802 <__sprintf_chk@plt+0xae52>
   15e66:	cs nop WORD PTR [rax+rax*1+0x0]
   15e70:	mov    rax,QWORD PTR [rip+0x69691]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   15e77:	test   rax,rax
   15e7a:	je     15e93 <__sprintf_chk@plt+0xb4e3>
   15e7c:	call   rax
   15e7e:	mov    rcx,QWORD PTR [rip+0x6945b]        # 7f2e0 <obstack_alloc_failed_handler@@Base+0x4a8>
   15e85:	mov    rsi,QWORD PTR [rip+0x6944c]        # 7f2d8 <obstack_alloc_failed_handler@@Base+0x4a0>
   15e8c:	mov    r15,QWORD PTR [rip+0x69715]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   15e93:	mov    BYTE PTR [rsp+0x74],0x0
   15e98:	lea    r14,[rsp+0x74]
   15e9d:	nop    DWORD PTR [rax]
   15ea0:	mov    rax,rcx
   15ea3:	sub    r14,0x1
   15ea7:	mul    rbx
   15eaa:	mov    rax,rcx
   15ead:	shr    rdx,0x3
   15eb1:	lea    rdi,[rdx+rdx*4]
   15eb5:	add    rdi,rdi
   15eb8:	sub    rax,rdi
   15ebb:	add    eax,0x30
   15ebe:	mov    BYTE PTR [r14],al
   15ec1:	mov    rax,rcx
   15ec4:	mov    rcx,rdx
   15ec7:	cmp    rax,0x9
   15ecb:	ja     15ea0 <__sprintf_chk@plt+0xb4f0>
   15ecd:	mov    BYTE PTR [rsp+0x54],0x0
   15ed2:	lea    r9,[rsp+0x54]
   15ed7:	nop    WORD PTR [rax+rax*1+0x0]
   15ee0:	mov    rax,rsi
   15ee3:	sub    r9,0x1
   15ee7:	mul    rbx
   15eea:	mov    rax,rsi
   15eed:	shr    rdx,0x3
   15ef1:	lea    rcx,[rdx+rdx*4]
   15ef5:	add    rcx,rcx
   15ef8:	sub    rax,rcx
   15efb:	add    eax,0x30
   15efe:	mov    BYTE PTR [r9],al
   15f01:	mov    rax,rsi
   15f04:	mov    rsi,rdx
   15f07:	cmp    rax,0x9
   15f0b:	ja     15ee0 <__sprintf_chk@plt+0xb530>
   15f0d:	mov    rcx,QWORD PTR [r15+0x18]
   15f11:	mov    BYTE PTR [rsp+0x34],0x0
   15f16:	lea    r15,[rsp+0x34]
   15f1b:	nop    DWORD PTR [rax+rax*1+0x0]
   15f20:	mov    rax,rcx
   15f23:	sub    r15,0x1
   15f27:	mul    rbx
   15f2a:	mov    rax,rcx
   15f2d:	shr    rdx,0x3
   15f31:	lea    rsi,[rdx+rdx*4]
   15f35:	add    rsi,rsi
   15f38:	sub    rax,rsi
   15f3b:	add    eax,0x30
   15f3e:	mov    BYTE PTR [r15],al
   15f41:	mov    rax,rcx
   15f44:	mov    rcx,rdx
   15f47:	cmp    rax,0x9
   15f4b:	ja     15f20 <__sprintf_chk@plt+0xb570>
   15f4d:	mov    rsi,QWORD PTR [rip+0x69394]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   15f54:	mov    rdx,r12
   15f57:	xor    edi,edi
   15f59:	mov    QWORD PTR [rsp+0x8],r9
   15f5e:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   15f63:	mov    edx,0x5
   15f68:	lea    rsi,[rip+0x4de21]        # 63d90 <_obstack_memory_used@@Base+0x17110>
   15f6f:	xor    edi,edi
   15f71:	mov    QWORD PTR [rsp],rax
   15f75:	call   a040 <dcgettext@plt>
   15f7a:	sub    rsp,0x8
   15f7e:	mov    r8,r15
   15f81:	xor    esi,esi
   15f83:	push   r14
   15f85:	mov    r9,QWORD PTR [rsp+0x18]
   15f8a:	mov    rdx,rax
   15f8d:	xor    edi,edi
   15f8f:	mov    rcx,QWORD PTR [rsp+0x10]
   15f94:	xor    eax,eax
   15f96:	call   a640 <error@plt>
   15f9b:	pop    rax
   15f9c:	pop    rdx
   15f9d:	jmp    15871 <__sprintf_chk@plt+0xaec1>
   15fa2:	nop    WORD PTR [rax+rax*1+0x0]
   15fa8:	test   r15,r15
   15fab:	je     15fbb <__sprintf_chk@plt+0xb60b>
   15fad:	call   r15
   15fb0:	mov    rax,QWORD PTR [rip+0x695f1]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   15fb7:	mov    r13,QWORD PTR [rax+0x10]
   15fbb:	mov    rdx,r12
   15fbe:	mov    rsi,r13
   15fc1:	jmp    15bdc <__sprintf_chk@plt+0xb22c>
   15fc6:	cmp    BYTE PTR [rip+0x69567],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   15fcd:	jne    aa1d <__sprintf_chk@plt+0x6d>
   15fd3:	call   f170 <__sprintf_chk@plt+0x47c0>
   15fd8:	mov    rax,QWORD PTR [rip+0x69561]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   15fdf:	cmp    rax,QWORD PTR [rip+0x6959a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   15fe6:	jne    15d04 <__sprintf_chk@plt+0xb354>
   15fec:	jmp    aa16 <__sprintf_chk@plt+0x66>
   15ff1:	nop    DWORD PTR [rax+0x0]
   15ff8:	mov    rax,QWORD PTR [rsp+0x18]
   15ffd:	mov    rdx,QWORD PTR [rip+0x6953c]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   16004:	cmp    rax,rdx
   16007:	jb     16021 <__sprintf_chk@plt+0xb671>
   16009:	sub    rax,rdx
   1600c:	and    rax,0xfffffffffffffe00
   16012:	lea    rdx,[rdx+rax*1+0x200]
   1601a:	mov    QWORD PTR [rip+0x6951f],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   16021:	cmp    QWORD PTR [rip+0x69558],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16028:	jae    1592f <__sprintf_chk@plt+0xaf7f>
   1602e:	jmp    aa11 <__sprintf_chk@plt+0x61>
   16033:	call   a0a0 <__stack_chk_fail@plt>
   16038:	mov    rdi,rax
   1603b:	call   ebd0 <__sprintf_chk@plt+0x4220>
   16040:	call   d1f0 <__sprintf_chk@plt+0x2840>
   16045:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16050:	endbr64 
   16054:	push   r15
   16056:	push   r14
   16058:	push   r13
   1605a:	push   r12
   1605c:	push   rbp
   1605d:	mov    rbp,rdi
   16060:	push   rbx
   16061:	sub    rsp,0x28
   16065:	mov    rax,QWORD PTR fs:0x28
   1606e:	mov    QWORD PTR [rsp+0x18],rax
   16073:	lea    rax,[rip+0xffffffffffff8bf6]        # ec70 <__sprintf_chk@plt+0x42c0>
   1607a:	mov    QWORD PTR [rip+0x69467],rax        # 7f4e8 <obstack_alloc_failed_handler@@Base+0x6b0>
   16081:	call   e9f0 <__sprintf_chk@plt+0x4040>
   16086:	mov    r13,rax
   16089:	mov    rax,QWORD PTR [rip+0x694c0]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   16090:	cmp    r13,rax
   16093:	je     160a2 <__sprintf_chk@plt+0xb6f2>
   16095:	cmp    BYTE PTR [rip+0x69514],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   1609c:	je     167d7 <__sprintf_chk@plt+0xbe27>
   160a2:	test   r13,r13
   160a5:	jne    16160 <__sprintf_chk@plt+0xb7b0>
   160ab:	pxor   xmm0,xmm0
   160af:	mov    rbx,QWORD PTR [rip+0x694f2]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   160b6:	cvtsi2sd xmm0,r13
   160bb:	addsd  xmm0,QWORD PTR [rip+0x69625]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
   160c3:	movsd  QWORD PTR [rip+0x6961d],xmm0        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
   160cb:	cmp    r13,rax
   160ce:	jne    160f0 <__sprintf_chk@plt+0xb740>
   160d0:	jmp    1612d <__sprintf_chk@plt+0xb77d>
   160d2:	nop    WORD PTR [rax+rax*1+0x0]
   160d8:	mov    rax,QWORD PTR [rbx]
   160db:	test   rax,rax
   160de:	je     160f5 <__sprintf_chk@plt+0xb745>
   160e0:	mov    rdx,QWORD PTR [rax+0x8]
   160e4:	shl    rdx,0x9
   160e8:	cmp    r13,rdx
   160eb:	jb     160f5 <__sprintf_chk@plt+0xb745>
   160ed:	mov    rbx,rax
   160f0:	test   rbx,rbx
   160f3:	jne    160d8 <__sprintf_chk@plt+0xb728>
   160f5:	test   r13d,0x1ff
   160fc:	jne    1679e <__sprintf_chk@plt+0xbdee>
   16102:	test   r13,r13
   16105:	jns    1611f <__sprintf_chk@plt+0xb76f>
   16107:	call   9e40 <__errno_location@plt>
   1610c:	mov    eax,DWORD PTR [rax]
   1610e:	lea    edx,[rax-0x5]
   16111:	cmp    edx,0x1
   16114:	jbe    1611f <__sprintf_chk@plt+0xb76f>
   16116:	cmp    eax,0x1c
   16119:	jne    167d7 <__sprintf_chk@plt+0xbe27>
   1611f:	mov    edi,0x1
   16124:	call   14bc0 <__sprintf_chk@plt+0xa210>
   16129:	test   al,al
   1612b:	jne    16170 <__sprintf_chk@plt+0xb7c0>
   1612d:	lea    rax,[rip+0xffffffffffffff1c]        # 16050 <__sprintf_chk@plt+0xb6a0>
   16134:	mov    QWORD PTR [rip+0x693ad],rax        # 7f4e8 <obstack_alloc_failed_handler@@Base+0x6b0>
   1613b:	mov    rax,QWORD PTR [rsp+0x18]
   16140:	sub    rax,QWORD PTR fs:0x28
   16149:	jne    16794 <__sprintf_chk@plt+0xbde4>
   1614f:	add    rsp,0x28
   16153:	pop    rbx
   16154:	pop    rbp
   16155:	pop    r12
   16157:	pop    r13
   16159:	pop    r14
   1615b:	pop    r15
   1615d:	ret    
   1615e:	xchg   ax,ax
   16160:	add    QWORD PTR [rip+0x68f68],0x1        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   16168:	jmp    160ab <__sprintf_chk@plt+0xb6fb>
   1616d:	nop    DWORD PTR [rax]
   16170:	lea    r14,[rip+0x68f69]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   16177:	mov    rdi,r14
   1617a:	call   44a50 <argp_usage@@Base+0x16d0>
   1617f:	add    DWORD PTR [rip+0x65ef2],0x1        # 7c078 <_obstack_memory_used@@Base+0x2f3f8>
   16186:	js     16799 <__sprintf_chk@plt+0xbde9>
   1618c:	mov    esi,DWORD PTR [rip+0x6954e]        # 7f6e0 <obstack_alloc_failed_handler@@Base+0x8a8>
   16192:	mov    r12,QWORD PTR [rip+0x693ef]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   16199:	xor    eax,eax
   1619b:	sub    rbp,r13
   1619e:	movsd  xmm0,QWORD PTR [rip+0x6954a]        # 7f6f0 <obstack_alloc_failed_handler@@Base+0x8b8>
   161a6:	addsd  xmm0,QWORD PTR [rip+0x6953a]        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
   161ae:	mov    QWORD PTR [rip+0x6952f],0x0        # 7f6e8 <obstack_alloc_failed_handler@@Base+0x8b0>
   161b9:	add    DWORD PTR [rip+0x65e64],0x1        # 7c024 <_obstack_memory_used@@Base+0x2f3a4>
   161c0:	add    r12,r13
   161c3:	test   esi,esi
   161c5:	sete   al
   161c8:	mov    DWORD PTR [rip+0x69512],eax        # 7f6e0 <obstack_alloc_failed_handler@@Base+0x8a8>
   161ce:	movsd  QWORD PTR [rip+0x6951a],xmm0        # 7f6f0 <obstack_alloc_failed_handler@@Base+0x8b8>
   161d6:	call   d150 <__sprintf_chk@plt+0x27a0>
   161db:	cmp    QWORD PTR [rip+0x690b5],0x0        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
   161e3:	mov    DWORD PTR [rip+0x694c3],0x1        # 7f6b0 <obstack_alloc_failed_handler@@Base+0x878>
   161ed:	je     161f4 <__sprintf_chk@plt+0xb844>
   161ef:	call   10d90 <__sprintf_chk@plt+0x63e0>
   161f4:	test   rbx,rbx
   161f7:	je     163b7 <__sprintf_chk@plt+0xba07>
   161fd:	cmp    DWORD PTR [rip+0x690a0],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   16204:	je     16398 <__sprintf_chk@plt+0xb9e8>
   1620a:	mov    r13,QWORD PTR [rip+0x6932f]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   16211:	cmp    r13,QWORD PTR [rip+0x69368]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16218:	je     16748 <__sprintf_chk@plt+0xbd98>
   1621e:	mov    r15,QWORD PTR [rbx+0x10]
   16222:	mov    rdi,r15
   16225:	call   a060 <strlen@plt>
   1622a:	mov    rdx,rax
   1622d:	cmp    rax,0x64
   16231:	jbe    16279 <__sprintf_chk@plt+0xb8c9>
   16233:	mov    rax,QWORD PTR [rip+0x692ce]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1623a:	test   rax,rax
   1623d:	je     16245 <__sprintf_chk@plt+0xb895>
   1623f:	call   rax
   16241:	mov    r15,QWORD PTR [rbx+0x10]
   16245:	mov    rdi,r15
   16248:	call   4b670 <argp_usage@@Base+0x82f0>
   1624d:	mov    edx,0x5
   16252:	lea    rsi,[rip+0x4dbb7]        # 63e10 <_obstack_memory_used@@Base+0x17190>
   16259:	xor    edi,edi
   1625b:	mov    r15,rax
   1625e:	call   a040 <dcgettext@plt>
   16263:	mov    rcx,r15
   16266:	xor    esi,esi
   16268:	xor    edi,edi
   1626a:	mov    rdx,rax
   1626d:	xor    eax,eax
   1626f:	call   a640 <error@plt>
   16274:	mov    edx,0x64
   16279:	lea    r8,[r13+0x8]
   1627d:	mov    rcx,r13
   16280:	xor    eax,eax
   16282:	mov    QWORD PTR [r13+0x0],0x0
   1628a:	mov    QWORD PTR [r13+0x1f8],0x0
   16295:	mov    rdi,r8
   16298:	and    rdi,0xfffffffffffffff8
   1629c:	sub    rcx,rdi
   1629f:	add    ecx,0x200
   162a5:	shr    ecx,0x3
   162a8:	rep stos QWORD PTR es:[rdi],rax
   162ab:	mov    eax,edx
   162ad:	mov    rsi,QWORD PTR [rbx+0x10]
   162b1:	cmp    edx,0x8
   162b4:	jae    166a0 <__sprintf_chk@plt+0xbcf0>
   162ba:	and    edx,0x4
   162bd:	jne    16780 <__sprintf_chk@plt+0xbdd0>
   162c3:	test   eax,eax
   162c5:	jne    166d2 <__sprintf_chk@plt+0xbd22>
   162cb:	sub    rsp,0x8
   162cf:	mov    rdi,QWORD PTR [rbx+0x20]
   162d3:	mov    r9d,0xc
   162d9:	xor    ecx,ecx
   162db:	lea    r15,[rip+0x4cee3]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   162e2:	lea    r8,[r13+0x7c]
   162e6:	mov    edx,0x8
   162eb:	mov    BYTE PTR [r13+0x9c],0x4d
   162f3:	push   r15
   162f5:	mov    rsi,rdi
   162f8:	shr    rdi,0x3f
   162fc:	call   101a0 <__sprintf_chk@plt+0x57f0>
   16301:	mov    rdi,QWORD PTR [rbx+0x18]
   16305:	sub    rdi,QWORD PTR [rbx+0x20]
   16309:	xor    ecx,ecx
   1630b:	mov    rsi,rdi
   1630e:	mov    r9d,0xc
   16314:	lea    r8,[r13+0x171]
   1631b:	mov    edx,0x8
   16320:	shr    rdi,0x3f
   16324:	mov    QWORD PTR [rsp],r15
   16328:	call   101a0 <__sprintf_chk@plt+0x57f0>
   1632d:	mov    rdx,0xffffffffffffffff
   16334:	mov    rsi,r13
   16337:	lea    rdi,[rip+0x68fe2]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1633e:	mov    r15d,DWORD PTR [rip+0x68d7b]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   16345:	mov    DWORD PTR [rip+0x68d71],0x0        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   1634f:	call   10b40 <__sprintf_chk@plt+0x6190>
   16354:	mov    rax,QWORD PTR [rip+0x691e5]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1635b:	pop    rdx
   1635c:	mov    DWORD PTR [rip+0x68d5d],r15d        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   16363:	pop    rcx
   16364:	cmp    r13,rax
   16367:	jb     16382 <__sprintf_chk@plt+0xb9d2>
   16369:	sub    r13,rax
   1636c:	and    r13,0xfffffffffffffe00
   16373:	lea    rax,[rax+r13*1+0x200]
   1637b:	mov    QWORD PTR [rip+0x691be],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   16382:	mov    rcx,QWORD PTR [rip+0x691f7]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16389:	cmp    rcx,rax
   1638c:	jae    163be <__sprintf_chk@plt+0xba0e>
   1638e:	jmp    aa30 <__sprintf_chk@plt+0x80>
   16393:	nop    DWORD PTR [rax+rax*1+0x0]
   16398:	mov    rax,QWORD PTR [rbx+0x18]
   1639c:	sub    rax,QWORD PTR [rbx+0x20]
   163a0:	cmp    QWORD PTR [rip+0x68eb0],0x0        # 7f258 <obstack_alloc_failed_handler@@Base+0x420>
   163a8:	mov    rdx,QWORD PTR [rbx+0x10]
   163ac:	mov    QWORD PTR [rsp+0x10],rax
   163b1:	je     166f1 <__sprintf_chk@plt+0xbd41>
   163b7:	mov    rcx,QWORD PTR [rip+0x691c2]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   163be:	mov    rdx,QWORD PTR [rip+0x6917b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   163c5:	cmp    rdx,rcx
   163c8:	je     16610 <__sprintf_chk@plt+0xbc60>
   163ce:	cmp    QWORD PTR [rip+0x68e82],0x0        # 7f258 <obstack_alloc_failed_handler@@Base+0x420>
   163d6:	je     165f0 <__sprintf_chk@plt+0xbc40>
   163dc:	mov    rdi,r14
   163df:	call   44a50 <argp_usage@@Base+0x16d0>
   163e4:	test   rbx,rbx
   163e7:	je     163f1 <__sprintf_chk@plt+0xba41>
   163e9:	mov    rdi,rbx
   163ec:	call   12fe0 <__sprintf_chk@plt+0x8630>
   163f1:	mov    r13,QWORD PTR [rip+0x69148]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   163f8:	cmp    r13,QWORD PTR [rip+0x69181]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   163ff:	je     16660 <__sprintf_chk@plt+0xbcb0>
   16405:	mov    rax,QWORD PTR [rip+0x6917c]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1640c:	mov    r14,QWORD PTR [rip+0x69195]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   16413:	mov    QWORD PTR [rsp+0x8],rax
   16418:	cmp    rbx,r14
   1641b:	je     16449 <__sprintf_chk@plt+0xba99>
   1641d:	test   r14,r14
   16420:	je     16449 <__sprintf_chk@plt+0xba99>
   16422:	nop    WORD PTR [rax+rax*1+0x0]
   16428:	mov    r15,r14
   1642b:	mov    r14,QWORD PTR [r14]
   1642e:	mov    rdi,QWORD PTR [r15+0x10]
   16432:	call   9ce0 <free@plt>
   16437:	mov    rdi,r15
   1643a:	call   9ce0 <free@plt>
   1643f:	test   r14,r14
   16442:	je     16449 <__sprintf_chk@plt+0xba99>
   16444:	cmp    rbx,r14
   16447:	jne    16428 <__sprintf_chk@plt+0xba78>
   16449:	mov    QWORD PTR [rip+0x69158],r14        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   16450:	test   r14,r14
   16453:	je     16650 <__sprintf_chk@plt+0xbca0>
   16459:	mov    rax,r13
   1645c:	sub    rax,QWORD PTR [rsp+0x8]
   16461:	sar    rax,0x9
   16465:	test   rbx,rbx
   16468:	je     16484 <__sprintf_chk@plt+0xbad4>
   1646a:	nop    WORD PTR [rax+rax*1+0x0]
   16470:	add    QWORD PTR [rbx+0x8],rax
   16474:	mov    QWORD PTR [rbx+0x28],0x0
   1647c:	mov    rbx,QWORD PTR [rbx]
   1647f:	test   rbx,rbx
   16482:	jne    16470 <__sprintf_chk@plt+0xbac0>
   16484:	mov    rbx,QWORD PTR [rip+0x690f5]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1648b:	mov    DWORD PTR [rip+0x6921b],0x0        # 7f6b0 <obstack_alloc_failed_handler@@Base+0x878>
   16495:	sub    rbx,r13
   16498:	cmp    rbp,rbx
   1649b:	ja     164b4 <__sprintf_chk@plt+0xbb04>
   1649d:	jmp    16550 <__sprintf_chk@plt+0xbba0>
   164a2:	nop    WORD PTR [rax+rax*1+0x0]
   164a8:	sub    rbx,r13
   164ab:	cmp    rbp,rbx
   164ae:	jbe    16550 <__sprintf_chk@plt+0xbba0>
   164b4:	mov    rdx,rbx
   164b7:	mov    rsi,r12
   164ba:	mov    rdi,r13
   164bd:	add    r12,rbx
   164c0:	call   a420 <memcpy@plt>
   164c5:	lea    rax,[rbx-0x1]
   164c9:	mov    rdx,QWORD PTR [rip+0x69070]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   164d0:	sub    rbp,rbx
   164d3:	and    rax,0xfffffffffffffe00
   164d9:	add    rax,r13
   164dc:	cmp    rax,rdx
   164df:	jb     164f9 <__sprintf_chk@plt+0xbb49>
   164e1:	sub    rax,rdx
   164e4:	and    rax,0xfffffffffffffe00
   164ea:	lea    rdx,[rdx+rax*1+0x200]
   164f2:	mov    QWORD PTR [rip+0x69047],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   164f9:	mov    rbx,QWORD PTR [rip+0x69080]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16500:	cmp    rbx,rdx
   16503:	jb     aa30 <__sprintf_chk@plt+0x80>
   16509:	mov    r13,QWORD PTR [rip+0x69030]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   16510:	jne    164a8 <__sprintf_chk@plt+0xbaf8>
   16512:	xor    r13d,r13d
   16515:	cmp    BYTE PTR [rip+0x69018],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1651c:	jne    164a8 <__sprintf_chk@plt+0xbaf8>
   1651e:	call   f170 <__sprintf_chk@plt+0x47c0>
   16523:	mov    r13,QWORD PTR [rip+0x69016]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1652a:	mov    rbx,QWORD PTR [rip+0x6904f]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16531:	cmp    r13,rbx
   16534:	jne    164a8 <__sprintf_chk@plt+0xbaf8>
   1653a:	mov    BYTE PTR [rip+0x68ff3],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   16541:	xor    r13d,r13d
   16544:	jmp    164a8 <__sprintf_chk@plt+0xbaf8>
   16549:	nop    DWORD PTR [rax+0x0]
   16550:	mov    rdx,rbp
   16553:	mov    rdi,r13
   16556:	mov    rsi,r12
   16559:	sub    rbx,rbp
   1655c:	call   a420 <memcpy@plt>
   16561:	lea    rdi,[r13+rbp*1+0x0]
   16566:	mov    rdx,rbx
   16569:	xor    esi,esi
   1656b:	call   a1b0 <memset@plt>
   16570:	sub    rbp,0x1
   16574:	mov    rax,QWORD PTR [rip+0x68fc5]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1657b:	and    rbp,0xfffffffffffffe00
   16582:	add    r13,rbp
   16585:	cmp    r13,rax
   16588:	jb     165a3 <__sprintf_chk@plt+0xbbf3>
   1658a:	sub    r13,rax
   1658d:	and    r13,0xfffffffffffffe00
   16594:	lea    rax,[rax+r13*1+0x200]
   1659c:	mov    QWORD PTR [rip+0x68f9d],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   165a3:	cmp    QWORD PTR [rip+0x68fd6],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   165aa:	jb     aa30 <__sprintf_chk@plt+0x80>
   165b0:	jne    1612d <__sprintf_chk@plt+0xb77d>
   165b6:	cmp    BYTE PTR [rip+0x68f77],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   165bd:	jne    1612d <__sprintf_chk@plt+0xb77d>
   165c3:	call   f170 <__sprintf_chk@plt+0x47c0>
   165c8:	mov    rax,QWORD PTR [rip+0x68fb1]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   165cf:	cmp    QWORD PTR [rip+0x68f6a],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   165d6:	jne    1612d <__sprintf_chk@plt+0xb77d>
   165dc:	mov    BYTE PTR [rip+0x68f51],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   165e3:	jmp    1612d <__sprintf_chk@plt+0xb77d>
   165e8:	nop    DWORD PTR [rax+rax*1+0x0]
   165f0:	cmp    QWORD PTR [rip+0x68c50],0x0        # 7f248 <obstack_alloc_failed_handler@@Base+0x410>
   165f8:	je     163dc <__sprintf_chk@plt+0xba2c>
   165fe:	mov    rsi,r14
   16601:	mov    edi,0x1
   16606:	call   22c00 <__sprintf_chk@plt+0x18250>
   1660b:	jmp    163dc <__sprintf_chk@plt+0xba2c>
   16610:	xor    edx,edx
   16612:	cmp    BYTE PTR [rip+0x68f1b],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   16619:	jne    163ce <__sprintf_chk@plt+0xba1e>
   1661f:	call   f170 <__sprintf_chk@plt+0x47c0>
   16624:	mov    rdx,QWORD PTR [rip+0x68f15]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1662b:	cmp    rdx,QWORD PTR [rip+0x68f4e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16632:	jne    163ce <__sprintf_chk@plt+0xba1e>
   16638:	mov    BYTE PTR [rip+0x68ef5],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1663f:	xor    edx,edx
   16641:	jmp    163ce <__sprintf_chk@plt+0xba1e>
   16646:	cs nop WORD PTR [rax+rax*1+0x0]
   16650:	mov    QWORD PTR [rip+0x68f45],0x0        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
   1665b:	jmp    16459 <__sprintf_chk@plt+0xbaa9>
   16660:	xor    r13d,r13d
   16663:	cmp    BYTE PTR [rip+0x68eca],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1666a:	jne    16405 <__sprintf_chk@plt+0xba55>
   16670:	call   f170 <__sprintf_chk@plt+0x47c0>
   16675:	mov    r13,QWORD PTR [rip+0x68ec4]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1667c:	cmp    r13,QWORD PTR [rip+0x68efd]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   16683:	jne    16405 <__sprintf_chk@plt+0xba55>
   16689:	mov    BYTE PTR [rip+0x68ea4],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   16690:	xor    r13d,r13d
   16693:	jmp    16405 <__sprintf_chk@plt+0xba55>
   16698:	nop    DWORD PTR [rax+rax*1+0x0]
   166a0:	mov    rax,QWORD PTR [rsi]
   166a3:	mov    rdi,r8
   166a6:	and    rdi,0xfffffffffffffff8
   166aa:	mov    QWORD PTR [r13+0x0],rax
   166ae:	mov    eax,edx
   166b0:	mov    rcx,QWORD PTR [rsi+rax*1-0x8]
   166b5:	mov    QWORD PTR [r13+rax*1-0x8],rcx
   166ba:	mov    rax,r13
   166bd:	sub    rax,rdi
   166c0:	sub    rsi,rax
   166c3:	add    eax,edx
   166c5:	shr    eax,0x3
   166c8:	mov    ecx,eax
   166ca:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   166cd:	jmp    162cb <__sprintf_chk@plt+0xb91b>
   166d2:	movzx  edx,BYTE PTR [rsi]
   166d5:	mov    BYTE PTR [r13+0x0],dl
   166d9:	test   al,0x2
   166db:	je     162cb <__sprintf_chk@plt+0xb91b>
   166e1:	movzx  edx,WORD PTR [rsi+rax*1-0x2]
   166e6:	mov    WORD PTR [r13+rax*1-0x2],dx
   166ec:	jmp    162cb <__sprintf_chk@plt+0xb91b>
   166f1:	mov    rsi,r14
   166f4:	lea    rdi,[rip+0x4cd75]        # 63470 <_obstack_memory_used@@Base+0x167f0>
   166fb:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   16700:	cmp    QWORD PTR [rip+0x68b50],0x0        # 7f258 <obstack_alloc_failed_handler@@Base+0x420>
   16708:	lea    rdx,[rbx+0x20]
   1670c:	jne    163b7 <__sprintf_chk@plt+0xba07>
   16712:	mov    rsi,r14
   16715:	lea    rdi,[rip+0x4cd68]        # 63484 <_obstack_memory_used@@Base+0x16804>
   1671c:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   16721:	cmp    QWORD PTR [rip+0x68b2f],0x0        # 7f258 <obstack_alloc_failed_handler@@Base+0x420>
   16729:	jne    163b7 <__sprintf_chk@plt+0xba07>
   1672f:	lea    rdx,[rsp+0x10]
   16734:	mov    rsi,r14
   16737:	lea    rdi,[rip+0x4cd56]        # 63494 <_obstack_memory_used@@Base+0x16814>
   1673e:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   16743:	jmp    163b7 <__sprintf_chk@plt+0xba07>
   16748:	xor    r13d,r13d
   1674b:	cmp    BYTE PTR [rip+0x68de2],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   16752:	jne    1621e <__sprintf_chk@plt+0xb86e>
   16758:	call   f170 <__sprintf_chk@plt+0x47c0>
   1675d:	mov    r13,QWORD PTR [rip+0x68ddc]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   16764:	cmp    r13,QWORD PTR [rip+0x68e15]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1676b:	jne    1621e <__sprintf_chk@plt+0xb86e>
   16771:	mov    BYTE PTR [rip+0x68dbc],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   16778:	xor    r13d,r13d
   1677b:	jmp    1621e <__sprintf_chk@plt+0xb86e>
   16780:	mov    edx,DWORD PTR [rsi]
   16782:	mov    DWORD PTR [r13+0x0],edx
   16786:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
   1678a:	mov    DWORD PTR [r13+rax*1-0x4],edx
   1678f:	jmp    162cb <__sprintf_chk@plt+0xb91b>
   16794:	call   a0a0 <__stack_chk_fail@plt>
   16799:	call   d1f0 <__sprintf_chk@plt+0x2840>
   1679e:	mov    rax,QWORD PTR [rip+0x68d63]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   167a5:	test   rax,rax
   167a8:	je     167ac <__sprintf_chk@plt+0xbdfc>
   167aa:	call   rax
   167ac:	mov    edx,0x5
   167b1:	lea    rsi,[rip+0x4d630]        # 63de8 <_obstack_memory_used@@Base+0x17168>
   167b8:	xor    edi,edi
   167ba:	call   a040 <dcgettext@plt>
   167bf:	xor    esi,esi
   167c1:	xor    edi,edi
   167c3:	mov    rdx,rax
   167c6:	xor    eax,eax
   167c8:	call   a640 <error@plt>
   167cd:	mov    DWORD PTR [rip+0x688ed],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   167d7:	mov    rdi,r13
   167da:	call   ebd0 <__sprintf_chk@plt+0x4220>
   167df:	nop
   167e0:	endbr64 
   167e4:	mov    rax,QWORD PTR [rdi]
   167e7:	xor    edx,edx
   167e9:	xor    rax,QWORD PTR [rdi+0x8]
   167ed:	div    rsi
   167f0:	mov    rax,rdx
   167f3:	ret    
   167f4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   167ff:	nop
   16800:	endbr64 
   16804:	mov    rax,QWORD PTR [rdi]
   16807:	mov    rdx,QWORD PTR [rdi+0x8]
   1680b:	xor    rax,QWORD PTR [rsi]
   1680e:	xor    rdx,QWORD PTR [rsi+0x8]
   16812:	or     rax,rdx
   16815:	sete   al
   16818:	ret    
   16819:	nop    DWORD PTR [rax+0x0]
   16820:	endbr64 
   16824:	mov    rax,rdi
   16827:	test   rdi,rdi
   1682a:	lea    rdx,[rip+0x69047]        # 7f878 <obstack_alloc_failed_handler@@Base+0xa40>
   16831:	cmove  rax,rdx
   16835:	mov    DWORD PTR [rax],0x8000000
   1683b:	ret    
   1683c:	nop    DWORD PTR [rax+0x0]
   16840:	endbr64 
   16844:	ret    
   16845:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16850:	endbr64 
   16854:	ret    
   16855:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16860:	push   r12
   16862:	lea    r12,[rip+0x4c7da]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   16869:	push   rbp
   1686a:	push   rbx
   1686b:	mov    rbx,rdi
   1686e:	sub    rsp,0xa0
   16875:	mov    rax,QWORD PTR fs:0x28
   1687e:	mov    QWORD PTR [rsp+0x98],rax
   16886:	xor    eax,eax
   16888:	mov    rbp,rsp
   1688b:	jmp    168af <__sprintf_chk@plt+0xbeff>
   1688d:	nop    DWORD PTR [rax]
   16890:	mov    rax,QWORD PTR [rsp]
   16894:	mov    QWORD PTR [rbx+0x8],rax
   16898:	mov    rax,QWORD PTR [rsp+0x8]
   1689d:	mov    QWORD PTR [rbx+0x10],rax
   168a1:	mov    rbx,QWORD PTR [rbx]
   168a4:	test   rbx,rbx
   168a7:	je     168f0 <__sprintf_chk@plt+0xbf40>
   168a9:	cmp    BYTE PTR [rbx+0x58],0x0
   168ad:	jne    168f0 <__sprintf_chk@plt+0xbf40>
   168af:	mov    BYTE PTR [rbx+0x58],0x1
   168b3:	mov    rsi,QWORD PTR [rbx+0xa0]
   168ba:	mov    rdx,rbp
   168bd:	mov    ecx,DWORD PTR [rip+0x686b1]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   168c3:	mov    edi,DWORD PTR [rip+0x65757]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   168c9:	call   a960 <fstatat@plt>
   168ce:	test   eax,eax
   168d0:	je     16890 <__sprintf_chk@plt+0xbee0>
   168d2:	mov    rsi,QWORD PTR [rbx+0xa0]
   168d9:	mov    rdi,r12
   168dc:	call   3bad0 <__sprintf_chk@plt+0x31120>
   168e1:	mov    rbx,QWORD PTR [rbx]
   168e4:	test   rbx,rbx
   168e7:	jne    168a9 <__sprintf_chk@plt+0xbef9>
   168e9:	nop    DWORD PTR [rax+0x0]
   168f0:	mov    rax,QWORD PTR [rsp+0x98]
   168f8:	sub    rax,QWORD PTR fs:0x28
   16901:	jne    1690f <__sprintf_chk@plt+0xbf5f>
   16903:	add    rsp,0xa0
   1690a:	pop    rbx
   1690b:	pop    rbp
   1690c:	pop    r12
   1690e:	ret    
   1690f:	call   a0a0 <__stack_chk_fail@plt>
   16914:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1691f:	nop
   16920:	test   BYTE PTR [rip+0x65755],0x20        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   16927:	je     16988 <__sprintf_chk@plt+0xbfd8>
   16929:	push   r12
   1692b:	push   rbp
   1692c:	mov    rbp,rdi
   1692f:	sub    rsp,0x8
   16933:	mov    rax,QWORD PTR [rip+0x68bce]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1693a:	test   rax,rax
   1693d:	je     16941 <__sprintf_chk@plt+0xbf91>
   1693f:	call   rax
   16941:	mov    rdi,rbp
   16944:	call   4b670 <argp_usage@@Base+0x82f0>
   16949:	xor    edi,edi
   1694b:	mov    edx,0x5
   16950:	lea    rsi,[rip+0x4dbc9]        # 64520 <_obstack_memory_used@@Base+0x178a0>
   16957:	mov    r12,rax
   1695a:	call   a040 <dcgettext@plt>
   1695f:	xor    esi,esi
   16961:	xor    edi,edi
   16963:	mov    rcx,r12
   16966:	mov    rdx,rax
   16969:	xor    eax,eax
   1696b:	call   a640 <error@plt>
   16970:	cmp    BYTE PTR [rip+0x68b89],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   16977:	je     169b0 <__sprintf_chk@plt+0xc000>
   16979:	add    rsp,0x8
   1697d:	pop    rbp
   1697e:	pop    r12
   16980:	ret    
   16981:	nop    DWORD PTR [rax+0x0]
   16988:	cmp    BYTE PTR [rip+0x68b71],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   1698f:	je     16998 <__sprintf_chk@plt+0xbfe8>
   16991:	ret    
   16992:	nop    WORD PTR [rax+rax*1+0x0]
   16998:	cmp    DWORD PTR [rip+0x68725],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1699f:	jg     16991 <__sprintf_chk@plt+0xbfe1>
   169a1:	mov    DWORD PTR [rip+0x68719],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   169ab:	ret    
   169ac:	nop    DWORD PTR [rax+0x0]
   169b0:	cmp    DWORD PTR [rip+0x6870d],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   169b7:	jg     16979 <__sprintf_chk@plt+0xbfc9>
   169b9:	mov    DWORD PTR [rip+0x68701],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   169c3:	jmp    16979 <__sprintf_chk@plt+0xbfc9>
   169c5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   169d0:	push   r12
   169d2:	push   rbp
   169d3:	sub    rsp,0xa8
   169da:	mov    r12,QWORD PTR [rip+0x68e6f]        # 7f850 <obstack_alloc_failed_handler@@Base+0xa18>
   169e1:	mov    rax,QWORD PTR fs:0x28
   169ea:	mov    QWORD PTR [rsp+0x98],rax
   169f2:	xor    eax,eax
   169f4:	test   r12,r12
   169f7:	je     16a68 <__sprintf_chk@plt+0xc0b8>
   169f9:	mov    rbp,rdi
   169fc:	mov    rsi,rdi
   169ff:	mov    edi,DWORD PTR [rip+0x6561b]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   16a05:	mov    rdx,rsp
   16a08:	mov    ecx,0x100
   16a0d:	call   a960 <fstatat@plt>
   16a12:	test   eax,eax
   16a14:	jne    16a70 <__sprintf_chk@plt+0xc0c0>
   16a16:	mov    rax,QWORD PTR [rsp]
   16a1a:	mov    rdx,QWORD PTR [rsp+0x8]
   16a1f:	jmp    16a31 <__sprintf_chk@plt+0xc081>
   16a21:	nop    DWORD PTR [rax+0x0]
   16a28:	mov    r12,QWORD PTR [r12]
   16a2c:	test   r12,r12
   16a2f:	je     16a68 <__sprintf_chk@plt+0xc0b8>
   16a31:	cmp    QWORD PTR [r12+0x8],rax
   16a36:	jne    16a28 <__sprintf_chk@plt+0xc078>
   16a38:	cmp    QWORD PTR [r12+0x10],rdx
   16a3d:	jne    16a28 <__sprintf_chk@plt+0xc078>
   16a3f:	nop
   16a40:	mov    rax,QWORD PTR [rsp+0x98]
   16a48:	sub    rax,QWORD PTR fs:0x28
   16a51:	jne    16a8e <__sprintf_chk@plt+0xc0de>
   16a53:	add    rsp,0xa8
   16a5a:	mov    rax,r12
   16a5d:	pop    rbp
   16a5e:	pop    r12
   16a60:	ret    
   16a61:	nop    DWORD PTR [rax+0x0]
   16a68:	xor    r12d,r12d
   16a6b:	jmp    16a40 <__sprintf_chk@plt+0xc090>
   16a6d:	nop    DWORD PTR [rax]
   16a70:	call   9e40 <__errno_location@plt>
   16a75:	cmp    DWORD PTR [rax],0x2
   16a78:	je     16a68 <__sprintf_chk@plt+0xc0b8>
   16a7a:	mov    rsi,rbp
   16a7d:	lea    rdi,[rip+0x4c5bf]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   16a84:	xor    r12d,r12d
   16a87:	call   3bad0 <__sprintf_chk@plt+0x31120>
   16a8c:	jmp    16a40 <__sprintf_chk@plt+0xc090>
   16a8e:	call   a0a0 <__stack_chk_fail@plt>
   16a93:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16a9e:	xchg   ax,ax
   16aa0:	push   r12
   16aa2:	push   rbx
   16aa3:	mov    rbx,rdi
   16aa6:	sub    rsp,0x28
   16aaa:	mov    rax,QWORD PTR fs:0x28
   16ab3:	mov    QWORD PTR [rsp+0x18],rax
   16ab8:	mov    eax,edi
   16aba:	test   rdi,rdi
   16abd:	js     16bc8 <__sprintf_chk@plt+0xc218>
   16ac3:	movsxd rdx,edi
   16ac6:	mov    ecx,0x3
   16acb:	cmp    rdx,rdi
   16ace:	sete   dl
   16ad1:	mov    WORD PTR [rsp+0x10],cx
   16ad6:	mov    edi,DWORD PTR [rip+0x68a84]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   16adc:	mov    DWORD PTR [rsp+0x14],eax
   16ae0:	test   dl,dl
   16ae2:	je     16b1f <__sprintf_chk@plt+0xc16f>
   16ae4:	lea    r12,[rsp+0x10]
   16ae9:	cmp    edi,0x3fffffff
   16aef:	jle    16b90 <__sprintf_chk@plt+0xc1e0>
   16af5:	sub    edi,0x40000000
   16afb:	mov    rsi,r12
   16afe:	call   5d2c0 <_obstack_memory_used@@Base+0x10640>
   16b03:	test   eax,eax
   16b05:	jns    16ba7 <__sprintf_chk@plt+0xc1f7>
   16b0b:	call   9e40 <__errno_location@plt>
   16b10:	mov    edi,DWORD PTR [rip+0x68a4a]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   16b16:	cmp    DWORD PTR [rax],0x5
   16b19:	je     16c30 <__sprintf_chk@plt+0xc280>
   16b1f:	cmp    edi,0x3fffffff
   16b25:	jle    16bdd <__sprintf_chk@plt+0xc22d>
   16b2b:	sub    edi,0x40000000
   16b31:	mov    edx,0x1
   16b36:	xor    esi,esi
   16b38:	call   3cd60 <__sprintf_chk@plt+0x323b0>
   16b3d:	xor    edx,edx
   16b3f:	imul   rbx,QWORD PTR [rip+0x68a09]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   16b47:	seto   dl
   16b4a:	lea    rsi,[rbx+rax*1]
   16b4e:	test   rdx,rdx
   16b51:	jne    16b65 <__sprintf_chk@plt+0xc1b5>
   16b53:	cmp    rax,rsi
   16b56:	setg   al
   16b59:	shr    rbx,0x3f
   16b5d:	cmp    al,bl
   16b5f:	je     16bf0 <__sprintf_chk@plt+0xc240>
   16b65:	mov    rax,QWORD PTR [rsp+0x18]
   16b6a:	sub    rax,QWORD PTR fs:0x28
   16b73:	jne    16c90 <__sprintf_chk@plt+0xc2e0>
   16b79:	mov    rax,QWORD PTR [rip+0x68750]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   16b80:	mov    rdi,QWORD PTR [rax]
   16b83:	add    rsp,0x28
   16b87:	pop    rbx
   16b88:	pop    r12
   16b8a:	jmp    3c440 <__sprintf_chk@plt+0x31a90>
   16b8f:	nop
   16b90:	xor    eax,eax
   16b92:	mov    rdx,r12
   16b95:	mov    esi,0x40086d01
   16b9a:	call   a1d0 <ioctl@plt>
   16b9f:	test   eax,eax
   16ba1:	js     16b0b <__sprintf_chk@plt+0xc15b>
   16ba7:	mov    rax,QWORD PTR [rsp+0x18]
   16bac:	sub    rax,QWORD PTR fs:0x28
   16bb5:	jne    16c90 <__sprintf_chk@plt+0xc2e0>
   16bbb:	add    rsp,0x28
   16bbf:	pop    rbx
   16bc0:	pop    r12
   16bc2:	ret    
   16bc3:	nop    DWORD PTR [rax+rax*1+0x0]
   16bc8:	neg    eax
   16bca:	mov    ecx,0x4
   16bcf:	movsxd rdx,eax
   16bd2:	add    rdx,rdi
   16bd5:	sete   dl
   16bd8:	jmp    16ad1 <__sprintf_chk@plt+0xc121>
   16bdd:	mov    edx,0x1
   16be2:	xor    esi,esi
   16be4:	call   a170 <lseek@plt>
   16be9:	jmp    16b3d <__sprintf_chk@plt+0xc18d>
   16bee:	xchg   ax,ax
   16bf0:	mov    edi,DWORD PTR [rip+0x6896a]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   16bf6:	xor    eax,eax
   16bf8:	test   rsi,rsi
   16bfb:	cmovs  rsi,rax
   16bff:	cmp    edi,0x3fffffff
   16c05:	jle    16c60 <__sprintf_chk@plt+0xc2b0>
   16c07:	sub    edi,0x40000000
   16c0d:	mov    QWORD PTR [rsp+0x8],rsi
   16c12:	call   3cd60 <__sprintf_chk@plt+0x323b0>
   16c17:	mov    rsi,QWORD PTR [rsp+0x8]
   16c1c:	cmp    rsi,rax
   16c1f:	jne    16b65 <__sprintf_chk@plt+0xc1b5>
   16c25:	jmp    16ba7 <__sprintf_chk@plt+0xc1f7>
   16c27:	nop    WORD PTR [rax+rax*1+0x0]
   16c30:	cmp    edi,0x3fffffff
   16c36:	jle    16c78 <__sprintf_chk@plt+0xc2c8>
   16c38:	sub    edi,0x40000000
   16c3e:	mov    rsi,r12
   16c41:	call   5d2c0 <_obstack_memory_used@@Base+0x10640>
   16c46:	test   eax,eax
   16c48:	jns    16ba7 <__sprintf_chk@plt+0xc1f7>
   16c4e:	mov    edi,DWORD PTR [rip+0x6890c]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   16c54:	jmp    16b1f <__sprintf_chk@plt+0xc16f>
   16c59:	nop    DWORD PTR [rax+0x0]
   16c60:	xor    edx,edx
   16c62:	mov    QWORD PTR [rsp+0x8],rsi
   16c67:	call   a170 <lseek@plt>
   16c6c:	mov    rsi,QWORD PTR [rsp+0x8]
   16c71:	jmp    16c1c <__sprintf_chk@plt+0xc26c>
   16c73:	nop    DWORD PTR [rax+rax*1+0x0]
   16c78:	xor    eax,eax
   16c7a:	mov    rdx,r12
   16c7d:	mov    esi,0x40086d01
   16c82:	call   a1d0 <ioctl@plt>
   16c87:	test   eax,eax
   16c89:	js     16c4e <__sprintf_chk@plt+0xc29e>
   16c8b:	jmp    16ba7 <__sprintf_chk@plt+0xc1f7>
   16c90:	call   a0a0 <__stack_chk_fail@plt>
   16c95:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16ca0:	endbr64 
   16ca4:	push   r13
   16ca6:	push   r12
   16ca8:	mov    r12d,edx
   16cab:	mov    edx,0x844
   16cb0:	push   rbp
   16cb1:	mov    rbp,rdi
   16cb4:	mov    rdi,rsi
   16cb7:	push   rbx
   16cb8:	sub    rsp,0xf8
   16cbf:	mov    rax,QWORD PTR fs:0x28
   16cc8:	mov    QWORD PTR [rsp+0xe8],rax
   16cd0:	xor    eax,eax
   16cd2:	mov    r13,rsp
   16cd5:	mov    rsi,r13
   16cd8:	call   3f220 <__sprintf_chk@plt+0x34870>
   16cdd:	test   eax,eax
   16cdf:	jne    16d16 <__sprintf_chk@plt+0xc366>
   16ce1:	cmp    QWORD PTR [rsp],0x0
   16ce6:	je     16d0e <__sprintf_chk@plt+0xc35e>
   16ce8:	xor    ebx,ebx
   16cea:	nop    WORD PTR [rax+rax*1+0x0]
   16cf0:	mov    rax,QWORD PTR [rsp+0x8]
   16cf5:	mov    edx,r12d
   16cf8:	mov    rdi,rbp
   16cfb:	mov    rsi,QWORD PTR [rax+rbx*8]
   16cff:	add    rbx,0x1
   16d03:	call   519e0 <_obstack_memory_used@@Base+0x4d60>
   16d08:	cmp    QWORD PTR [rsp],rbx
   16d0c:	ja     16cf0 <__sprintf_chk@plt+0xc340>
   16d0e:	mov    rdi,r13
   16d11:	call   3cee0 <__sprintf_chk@plt+0x32530>
   16d16:	mov    rax,QWORD PTR [rsp+0xe8]
   16d1e:	sub    rax,QWORD PTR fs:0x28
   16d27:	jne    16d37 <__sprintf_chk@plt+0xc387>
   16d29:	add    rsp,0xf8
   16d30:	pop    rbx
   16d31:	pop    rbp
   16d32:	pop    r12
   16d34:	pop    r13
   16d36:	ret    
   16d37:	call   a0a0 <__stack_chk_fail@plt>
   16d3c:	nop    DWORD PTR [rax+0x0]
   16d40:	endbr64 
   16d44:	push   r13
   16d46:	mov    r13d,edx
   16d49:	push   r12
   16d4b:	mov    r12,rdi
   16d4e:	push   rbp
   16d4f:	mov    rbp,rsi
   16d52:	call   a980 <__ctype_b_loc@plt>
   16d57:	mov    rsi,QWORD PTR [rax]
   16d5a:	jmp    16d64 <__sprintf_chk@plt+0xc3b4>
   16d5c:	nop    DWORD PTR [rax+0x0]
   16d60:	add    rbp,0x1
   16d64:	movsx  rcx,BYTE PTR [rbp+0x0]
   16d69:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
   16d6e:	jne    16d60 <__sprintf_chk@plt+0xc3b0>
   16d70:	test   cl,cl
   16d72:	je     16db0 <__sprintf_chk@plt+0xc400>
   16d74:	cmp    cl,0x23
   16d77:	je     16db0 <__sprintf_chk@plt+0xc400>
   16d79:	cmp    cl,0x5c
   16d7c:	je     16d98 <__sprintf_chk@plt+0xc3e8>
   16d7e:	mov    edx,r13d
   16d81:	mov    rsi,rbp
   16d84:	mov    rdi,r12
   16d87:	pop    rbp
   16d88:	pop    r12
   16d8a:	pop    r13
   16d8c:	jmp    519e0 <_obstack_memory_used@@Base+0x4d60>
   16d91:	nop    DWORD PTR [rax+0x0]
   16d98:	xor    eax,eax
   16d9a:	cmp    BYTE PTR [rbp+0x1],0x23
   16d9e:	sete   al
   16da1:	add    rbp,rax
   16da4:	jmp    16d7e <__sprintf_chk@plt+0xc3ce>
   16da6:	cs nop WORD PTR [rax+rax*1+0x0]
   16db0:	pop    rbp
   16db1:	pop    r12
   16db3:	pop    r13
   16db5:	ret    
   16db6:	cs nop WORD PTR [rax+rax*1+0x0]
   16dc0:	endbr64 
   16dc4:	push   r13
   16dc6:	mov    r13,rdi
   16dc9:	push   r12
   16dcb:	mov    r12d,edx
   16dce:	push   rbp
   16dcf:	mov    rbp,rsi
   16dd2:	call   a980 <__ctype_b_loc@plt>
   16dd7:	mov    rsi,QWORD PTR [rax]
   16dda:	jmp    16de4 <__sprintf_chk@plt+0xc434>
   16ddc:	nop    DWORD PTR [rax+0x0]
   16de0:	add    rbp,0x1
   16de4:	movsx  rcx,BYTE PTR [rbp+0x0]
   16de9:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
   16dee:	jne    16de0 <__sprintf_chk@plt+0xc430>
   16df0:	test   cl,cl
   16df2:	je     16e60 <__sprintf_chk@plt+0xc4b0>
   16df4:	cmp    cl,0x23
   16df7:	je     16e60 <__sprintf_chk@plt+0xc4b0>
   16df9:	cmp    cl,0x21
   16dfc:	je     16e40 <__sprintf_chk@plt+0xc490>
   16dfe:	cmp    BYTE PTR [rbp+0x0],0x52
   16e02:	je     16e20 <__sprintf_chk@plt+0xc470>
   16e04:	mov    edx,r12d
   16e07:	mov    rsi,rbp
   16e0a:	mov    rdi,r13
   16e0d:	pop    rbp
   16e0e:	pop    r12
   16e10:	pop    r13
   16e12:	jmp    519e0 <_obstack_memory_used@@Base+0x4d60>
   16e17:	nop    WORD PTR [rax+rax*1+0x0]
   16e20:	cmp    BYTE PTR [rbp+0x1],0x45
   16e24:	jne    16e04 <__sprintf_chk@plt+0xc454>
   16e26:	cmp    BYTE PTR [rbp+0x2],0x3a
   16e2a:	jne    16e04 <__sprintf_chk@plt+0xc454>
   16e2c:	and    r12d,0xefffffff
   16e33:	add    rbp,0x3
   16e37:	or     r12d,0x8000000
   16e3e:	jmp    16e04 <__sprintf_chk@plt+0xc454>
   16e40:	cmp    BYTE PTR [rbp+0x1],0x21
   16e44:	je     16e66 <__sprintf_chk@plt+0xc4b6>
   16e46:	add    rbp,0x1
   16e4a:	or     r12d,0x20000000
   16e51:	cmp    BYTE PTR [rbp+0x0],0x52
   16e55:	jne    16e04 <__sprintf_chk@plt+0xc454>
   16e57:	jmp    16e20 <__sprintf_chk@plt+0xc470>
   16e59:	nop    DWORD PTR [rax+0x0]
   16e60:	pop    rbp
   16e61:	pop    r12
   16e63:	pop    r13
   16e65:	ret    
   16e66:	add    rbp,0x2
   16e6a:	jmp    16dfe <__sprintf_chk@plt+0xc44e>
   16e6c:	nop    DWORD PTR [rax+0x0]
   16e70:	push   r12
   16e72:	mov    r12,rdi
   16e75:	push   rbp
   16e76:	lea    rbp,[rip+0x4c4a5]        # 63322 <_obstack_memory_used@@Base+0x166a2>
   16e7d:	push   rbx
   16e7e:	lea    rbx,[rip+0x6341b]        # 7a2a0 <_obstack_memory_used@@Base+0x2d620>
   16e85:	jmp    16eac <__sprintf_chk@plt+0xc4fc>
   16e87:	nop    WORD PTR [rax+rax*1+0x0]
   16e90:	mov    rdi,rbp
   16e93:	call   a060 <strlen@plt>
   16e98:	cmp    BYTE PTR [r12+rax*1],0x2e
   16e9d:	je     16ed0 <__sprintf_chk@plt+0xc520>
   16e9f:	mov    rbp,QWORD PTR [rbx+0x20]
   16ea3:	add    rbx,0x20
   16ea7:	test   rbp,rbp
   16eaa:	je     16ec4 <__sprintf_chk@plt+0xc514>
   16eac:	cmp    BYTE PTR [rbx+0x1c],0x0
   16eb0:	jne    16e90 <__sprintf_chk@plt+0xc4e0>
   16eb2:	mov    rsi,r12
   16eb5:	mov    rdi,rbp
   16eb8:	call   a320 <strcmp@plt>
   16ebd:	test   eax,eax
   16ebf:	jne    16e9f <__sprintf_chk@plt+0xc4ef>
   16ec1:	mov    rbp,rbx
   16ec4:	mov    rax,rbp
   16ec7:	pop    rbx
   16ec8:	pop    rbp
   16ec9:	pop    r12
   16ecb:	ret    
   16ecc:	nop    DWORD PTR [rax+0x0]
   16ed0:	mov    rdx,rax
   16ed3:	mov    rsi,r12
   16ed6:	mov    rdi,rbp
   16ed9:	call   9e50 <strncmp@plt>
   16ede:	test   eax,eax
   16ee0:	jne    16e9f <__sprintf_chk@plt+0xc4ef>
   16ee2:	jmp    16ec1 <__sprintf_chk@plt+0xc511>
   16ee4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16eef:	nop
   16ef0:	test   rdi,rdi
   16ef3:	je     16f50 <__sprintf_chk@plt+0xc5a0>
   16ef5:	push   r13
   16ef7:	push   r12
   16ef9:	mov    r12,rsi
   16efc:	push   rbp
   16efd:	mov    rbp,rdi
   16f00:	push   rbx
   16f01:	sub    rsp,0x8
   16f05:	nop    DWORD PTR [rax]
   16f08:	mov    rdi,QWORD PTR [rbp+0x8]
   16f0c:	call   16e70 <__sprintf_chk@plt+0xc4c0>
   16f11:	mov    rbx,rax
   16f14:	test   rax,rax
   16f17:	je     16f34 <__sprintf_chk@plt+0xc584>
   16f19:	mov    r13,QWORD PTR [rbp+0x10]
   16f1d:	mov    rdi,r13
   16f20:	call   a060 <strlen@plt>
   16f25:	mov    rsi,QWORD PTR [rbx]
   16f28:	mov    rdx,r13
   16f2b:	mov    rdi,r12
   16f2e:	mov    rcx,rax
   16f31:	call   QWORD PTR [rbx+0x10]
   16f34:	mov    rbp,QWORD PTR [rbp+0x0]
   16f38:	test   rbp,rbp
   16f3b:	jne    16f08 <__sprintf_chk@plt+0xc558>
   16f3d:	add    rsp,0x8
   16f41:	pop    rbx
   16f42:	pop    rbp
   16f43:	pop    r12
   16f45:	pop    r13
   16f47:	ret    
   16f48:	nop    DWORD PTR [rax+rax*1+0x0]
   16f50:	ret    
   16f51:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16f5c:	nop    DWORD PTR [rax+0x0]
   16f60:	endbr64 
   16f64:	mov    rsi,QWORD PTR [rsi]
   16f67:	mov    rdi,QWORD PTR [rdi]
   16f6a:	jmp    a320 <strcmp@plt>
   16f6f:	nop
   16f70:	push   r14
   16f72:	push   r13
   16f74:	mov    r13d,ecx
   16f77:	push   r12
   16f79:	mov    r12d,edx
   16f7c:	push   rbp
   16f7d:	mov    rbp,rsi
   16f80:	sub    rsp,0x8
   16f84:	test   edi,edi
   16f86:	js     16fc0 <__sprintf_chk@plt+0xc610>
   16f88:	mov    esi,edx
   16f8a:	call   a5f0 <fchmod@plt>
   16f8f:	mov    r14d,eax
   16f92:	test   eax,eax
   16f94:	je     16fa7 <__sprintf_chk@plt+0xc5f7>
   16f96:	call   9e40 <__errno_location@plt>
   16f9b:	mov    eax,DWORD PTR [rax]
   16f9d:	cmp    eax,0x26
   16fa0:	je     16fc0 <__sprintf_chk@plt+0xc610>
   16fa2:	cmp    eax,0x5f
   16fa5:	je     16fc0 <__sprintf_chk@plt+0xc610>
   16fa7:	add    rsp,0x8
   16fab:	mov    eax,r14d
   16fae:	pop    rbp
   16faf:	pop    r12
   16fb1:	pop    r13
   16fb3:	pop    r14
   16fb5:	ret    
   16fb6:	cs nop WORD PTR [rax+rax*1+0x0]
   16fc0:	mov    edi,DWORD PTR [rip+0x6505a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   16fc6:	add    rsp,0x8
   16fca:	mov    ecx,r13d
   16fcd:	mov    edx,r12d
   16fd0:	mov    rsi,rbp
   16fd3:	pop    rbp
   16fd4:	pop    r12
   16fd6:	pop    r13
   16fd8:	pop    r14
   16fda:	jmp    a4d0 <fchmodat@plt>
   16fdf:	nop
   16fe0:	push   r15
   16fe2:	push   r14
   16fe4:	mov    r14d,r8d
   16fe7:	push   r13
   16fe9:	mov    r13d,edx
   16fec:	push   r12
   16fee:	mov    r12,rsi
   16ff1:	push   rbp
   16ff2:	mov    ebp,edi
   16ff4:	push   rbx
   16ff5:	mov    ebx,ecx
   16ff7:	sub    rsp,0x8
   16ffb:	call   16f70 <__sprintf_chk@plt+0xc5c0>
   17000:	test   eax,eax
   17002:	je     17048 <__sprintf_chk@plt+0xc698>
   17004:	call   9e40 <__errno_location@plt>
   17009:	mov    edx,DWORD PTR [rax]
   1700b:	mov    r15,rax
   1700e:	cmp    edx,0x1
   17011:	je     17078 <__sprintf_chk@plt+0xc6c8>
   17013:	test   ebx,ebx
   17015:	je     17060 <__sprintf_chk@plt+0xc6b0>
   17017:	cmp    r14d,0x32
   1701b:	je     17060 <__sprintf_chk@plt+0xc6b0>
   1701d:	cmp    edx,0x5f
   17020:	je     17027 <__sprintf_chk@plt+0xc677>
   17022:	cmp    edx,0x26
   17025:	jne    1703d <__sprintf_chk@plt+0xc68d>
   17027:	xor    ecx,ecx
   17029:	mov    edx,r13d
   1702c:	mov    rsi,r12
   1702f:	mov    edi,ebp
   17031:	call   16f70 <__sprintf_chk@plt+0xc5c0>
   17036:	test   eax,eax
   17038:	je     17048 <__sprintf_chk@plt+0xc698>
   1703a:	mov    edx,DWORD PTR [r15]
   1703d:	test   edx,edx
   1703f:	jne    17078 <__sprintf_chk@plt+0xc6c8>
   17041:	nop    DWORD PTR [rax+0x0]
   17048:	xor    eax,eax
   1704a:	add    rsp,0x8
   1704e:	pop    rbx
   1704f:	pop    rbp
   17050:	pop    r12
   17052:	pop    r13
   17054:	pop    r14
   17056:	pop    r15
   17058:	ret    
   17059:	nop    DWORD PTR [rax+0x0]
   17060:	test   edx,edx
   17062:	je     17048 <__sprintf_chk@plt+0xc698>
   17064:	cmp    r14d,0x32
   17068:	jne    17078 <__sprintf_chk@plt+0xc6c8>
   1706a:	cmp    edx,0x26
   1706d:	je     17048 <__sprintf_chk@plt+0xc698>
   1706f:	cmp    edx,0x5f
   17072:	je     17048 <__sprintf_chk@plt+0xc698>
   17074:	nop    DWORD PTR [rax+0x0]
   17078:	mov    DWORD PTR [r15],edx
   1707b:	mov    eax,0xffffffff
   17080:	jmp    1704a <__sprintf_chk@plt+0xc69a>
   17082:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1708d:	nop    DWORD PTR [rax]
   17090:	push   r15
   17092:	push   r14
   17094:	push   r13
   17096:	mov    r13,rdi
   17099:	push   r12
   1709b:	mov    r12,rdx
   1709e:	push   rbp
   1709f:	mov    rbp,rsi
   170a2:	sub    rsp,0x40
   170a6:	mov    rax,QWORD PTR fs:0x28
   170af:	mov    QWORD PTR [rsp+0x38],rax
   170b4:	xor    eax,eax
   170b6:	test   rsi,rsi
   170b9:	js     17110 <__sprintf_chk@plt+0xc760>
   170bb:	xor    edx,edx
   170bd:	cmp    rsi,QWORD PTR [rip+0x67fec]        # 7f0b0 <obstack_alloc_failed_handler@@Base+0x278>
   170c4:	setg   al
   170c7:	setl   dl
   170ca:	movzx  eax,al
   170cd:	sub    edx,eax
   170cf:	xor    eax,eax
   170d1:	cmp    r12,QWORD PTR [rip+0x67fe0]        # 7f0b8 <obstack_alloc_failed_handler@@Base+0x280>
   170d8:	setg   cl
   170db:	setl   al
   170de:	movzx  ecx,cl
   170e1:	sub    eax,ecx
   170e3:	lea    eax,[rax+rdx*2]
   170e6:	test   eax,eax
   170e8:	js     17188 <__sprintf_chk@plt+0xc7d8>
   170ee:	mov    rax,QWORD PTR [rsp+0x38]
   170f3:	sub    rax,QWORD PTR fs:0x28
   170fc:	jne    17260 <__sprintf_chk@plt+0xc8b0>
   17102:	add    rsp,0x40
   17106:	pop    rbp
   17107:	pop    r12
   17109:	pop    r13
   1710b:	pop    r14
   1710d:	pop    r15
   1710f:	ret    
   17110:	test   BYTE PTR [rip+0x64f66],0x80        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   17117:	je     170ee <__sprintf_chk@plt+0xc73e>
   17119:	mov    rax,QWORD PTR [rip+0x683e8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   17120:	test   rax,rax
   17123:	je     17127 <__sprintf_chk@plt+0xc777>
   17125:	call   rax
   17127:	mov    rdi,rbp
   1712a:	mov    edx,0x1
   1712f:	mov    rsi,r12
   17132:	call   240f0 <__sprintf_chk@plt+0x19740>
   17137:	mov    edx,0x5
   1713c:	lea    rsi,[rip+0x4d405]        # 64548 <_obstack_memory_used@@Base+0x178c8>
   17143:	xor    edi,edi
   17145:	mov    rbp,rax
   17148:	call   a040 <dcgettext@plt>
   1714d:	mov    rdx,rax
   17150:	mov    rax,QWORD PTR [rsp+0x38]
   17155:	sub    rax,QWORD PTR fs:0x28
   1715e:	jne    17260 <__sprintf_chk@plt+0xc8b0>
   17164:	add    rsp,0x40
   17168:	mov    r8,rbp
   1716b:	mov    rcx,r13
   1716e:	xor    esi,esi
   17170:	pop    rbp
   17171:	xor    edi,edi
   17173:	pop    r12
   17175:	xor    eax,eax
   17177:	pop    r13
   17179:	pop    r14
   1717b:	pop    r15
   1717d:	jmp    a640 <error@plt>
   17182:	nop    WORD PTR [rax+rax*1+0x0]
   17188:	xor    edi,edi
   1718a:	mov    rsi,rsp
   1718d:	call   9f70 <clock_gettime@plt>
   17192:	mov    rsi,QWORD PTR [rsp]
   17196:	xor    edx,edx
   17198:	mov    rcx,QWORD PTR [rsp+0x8]
   1719d:	cmp    rbp,rsi
   171a0:	setg   al
   171a3:	setl   dl
   171a6:	movzx  eax,al
   171a9:	sub    edx,eax
   171ab:	xor    eax,eax
   171ad:	cmp    r12,rcx
   171b0:	setg   dil
   171b4:	setl   al
   171b7:	movzx  edi,dil
   171bb:	sub    eax,edi
   171bd:	lea    eax,[rax+rdx*2]
   171c0:	test   eax,eax
   171c2:	jns    170ee <__sprintf_chk@plt+0xc73e>
   171c8:	mov    r15,rbp
   171cb:	mov    r14,r12
   171ce:	sub    r15,rsi
   171d1:	sub    r14,rcx
   171d4:	js     17250 <__sprintf_chk@plt+0xc8a0>
   171d6:	test   BYTE PTR [rip+0x64ea0],0x80        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   171dd:	je     170ee <__sprintf_chk@plt+0xc73e>
   171e3:	mov    rax,QWORD PTR [rip+0x6831e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   171ea:	test   rax,rax
   171ed:	je     171f1 <__sprintf_chk@plt+0xc841>
   171ef:	call   rax
   171f1:	lea    rdx,[rsp+0x10]
   171f6:	mov    rdi,r15
   171f9:	mov    rsi,r14
   171fc:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   17201:	mov    rdi,rbp
   17204:	mov    rsi,r12
   17207:	mov    edx,0x1
   1720c:	mov    r14,rax
   1720f:	call   240f0 <__sprintf_chk@plt+0x19740>
   17214:	xor    edi,edi
   17216:	mov    edx,0x5
   1721b:	lea    rsi,[rip+0x4d34e]        # 64570 <_obstack_memory_used@@Base+0x178f0>
   17222:	mov    rbp,rax
   17225:	call   a040 <dcgettext@plt>
   1722a:	mov    r9,r14
   1722d:	mov    r8,rbp
   17230:	mov    rcx,r13
   17233:	mov    rdx,rax
   17236:	xor    esi,esi
   17238:	xor    edi,edi
   1723a:	xor    eax,eax
   1723c:	call   a640 <error@plt>
   17241:	jmp    170ee <__sprintf_chk@plt+0xc73e>
   17246:	cs nop WORD PTR [rax+rax*1+0x0]
   17250:	add    r14,0x3b9aca00
   17257:	sub    r15,0x1
   1725b:	jmp    171d6 <__sprintf_chk@plt+0xc826>
   17260:	call   a0a0 <__stack_chk_fail@plt>
   17265:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   17270:	push   r15
   17272:	mov    r10d,r8d
   17275:	mov    r15d,ecx
   17278:	push   r14
   1727a:	push   r13
   1727c:	mov    r13d,edx
   1727f:	push   r12
   17281:	mov    r12,rdi
   17284:	push   rbp
   17285:	mov    ebp,r9d
   17288:	push   rbx
   17289:	mov    rbx,rsi
   1728c:	sub    rsp,0xc8
   17293:	mov    rax,QWORD PTR fs:0x28
   1729c:	mov    QWORD PTR [rsp+0xb8],rax
   172a4:	mov    eax,r8d
   172a7:	cmp    BYTE PTR [rip+0x684a6],0x0        # 7f754 <obstack_alloc_failed_handler@@Base+0x91c>
   172ae:	mov    r9d,DWORD PTR [rsp+0x100]
   172b6:	mov    r14d,DWORD PTR [rsp+0x108]
   172be:	not    eax
   172c0:	mov    DWORD PTR [rsp+0x4],eax
   172c4:	movsx  eax,bpl
   172c8:	mov    DWORD PTR [rsp+0x8],eax
   172cc:	jne    17458 <__sprintf_chk@plt+0xcaa8>
   172d2:	mov    r8d,0x1ff
   172d8:	test   r9b,r9b
   172db:	je     174d0 <__sprintf_chk@plt+0xcb20>
   172e1:	mov    r9d,DWORD PTR [rip+0x68460]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   172e8:	not    r9d
   172eb:	and    r9d,DWORD PTR [rbx+0x70]
   172ef:	mov    eax,r9d
   172f2:	xor    eax,r15d
   172f5:	or     eax,DWORD PTR [rsp+0x4]
   172f9:	test   eax,r8d
   172fc:	je     17327 <__sprintf_chk@plt+0xc977>
   172fe:	or     r10d,r8d
   17301:	not    r10d
   17304:	and    r10d,0xfff
   1730b:	jne    17688 <__sprintf_chk@plt+0xccd8>
   17311:	mov    r11d,r15d
   17314:	and    r11d,0xfff
   1731b:	xor    r9d,r11d
   1731e:	and    r9d,r8d
   17321:	jne    176d8 <__sprintf_chk@plt+0xcd28>
   17327:	mov    esi,DWORD PTR [rip+0x67bab]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   1732d:	test   esi,esi
   1732f:	jle    1734f <__sprintf_chk@plt+0xc99f>
   17331:	cmp    QWORD PTR [rbx+0x158],0x0
   17339:	je     1734f <__sprintf_chk@plt+0xc99f>
   1733b:	mov    ecx,0x1
   17340:	movsx  edx,bpl
   17344:	mov    rsi,r12
   17347:	mov    rdi,rbx
   1734a:	call   3b800 <__sprintf_chk@plt+0x30e50>
   1734f:	mov    ecx,DWORD PTR [rip+0x67b8b]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   17355:	test   ecx,ecx
   17357:	jle    17363 <__sprintf_chk@plt+0xc9b3>
   17359:	cmp    bpl,0x32
   1735d:	jne    17480 <__sprintf_chk@plt+0xcad0>
   17363:	mov    edx,DWORD PTR [rip+0x67b73]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   17369:	test   edx,edx
   1736b:	jle    17428 <__sprintf_chk@plt+0xca78>
   17371:	mov    rdx,QWORD PTR [rbx+0x30]
   17375:	test   rdx,rdx
   17378:	je     17428 <__sprintf_chk@plt+0xca78>
   1737e:	mov    edi,DWORD PTR [rip+0x64c9c]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   17384:	cmp    bpl,0x32
   17388:	je     177a0 <__sprintf_chk@plt+0xcdf0>
   1738e:	cmp    edi,0xffffff9c
   17391:	je     17728 <__sprintf_chk@plt+0xcd78>
   17397:	cmp    BYTE PTR [r12],0x2f
   1739c:	je     17728 <__sprintf_chk@plt+0xcd78>
   173a2:	mov    rsi,r12
   173a5:	lea    r13,[rip+0x4cd95]        # 64141 <_obstack_memory_used@@Base+0x174c1>
   173ac:	call   4c100 <argp_usage@@Base+0x8d80>
   173b1:	cmp    eax,0xffffffff
   173b4:	jne    17428 <__sprintf_chk@plt+0xca78>
   173b6:	test   BYTE PTR [rip+0x64cc1],0x20        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   173bd:	je     17428 <__sprintf_chk@plt+0xca78>
   173bf:	mov    rax,QWORD PTR [rip+0x68142]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   173c6:	test   rax,rax
   173c9:	je     173cd <__sprintf_chk@plt+0xca1d>
   173cb:	call   rax
   173cd:	mov    edx,0x5
   173d2:	xor    edi,edi
   173d4:	lea    rsi,[rip+0x4d1ed]        # 645c8 <_obstack_memory_used@@Base+0x17948>
   173db:	call   a040 <dcgettext@plt>
   173e0:	mov    r14,rax
   173e3:	call   9e40 <__errno_location@plt>
   173e8:	mov    rdx,QWORD PTR [rsp+0xb8]
   173f0:	sub    rdx,QWORD PTR fs:0x28
   173f9:	jne    178c9 <__sprintf_chk@plt+0xcf19>
   173ff:	mov    esi,DWORD PTR [rax]
   17401:	add    rsp,0xc8
   17408:	mov    r8,r12
   1740b:	mov    rcx,r13
   1740e:	pop    rbx
   1740f:	mov    rdx,r14
   17412:	pop    rbp
   17413:	xor    edi,edi
   17415:	pop    r12
   17417:	xor    eax,eax
   17419:	pop    r13
   1741b:	pop    r14
   1741d:	pop    r15
   1741f:	jmp    a640 <error@plt>
   17424:	nop    DWORD PTR [rax+0x0]
   17428:	mov    rax,QWORD PTR [rsp+0xb8]
   17430:	sub    rax,QWORD PTR fs:0x28
   17439:	jne    178c9 <__sprintf_chk@plt+0xcf19>
   1743f:	add    rsp,0xc8
   17446:	pop    rbx
   17447:	pop    rbp
   17448:	pop    r12
   1744a:	pop    r13
   1744c:	pop    r14
   1744e:	pop    r15
   17450:	ret    
   17451:	nop    DWORD PTR [rax+0x0]
   17458:	mov    r8d,DWORD PTR [rip+0x682f1]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   1745f:	test   r8d,r8d
   17462:	jle    17660 <__sprintf_chk@plt+0xccb0>
   17468:	mov    r8d,0x1ff
   1746e:	test   r9b,r9b
   17471:	jne    172e1 <__sprintf_chk@plt+0xc931>
   17477:	jmp    1756b <__sprintf_chk@plt+0xcbbb>
   1747c:	nop    DWORD PTR [rax+0x0]
   17480:	mov    rcx,QWORD PTR [rbx+0x38]
   17484:	xor    r8d,r8d
   17487:	mov    edx,0x8000
   1748c:	mov    rsi,r12
   1748f:	mov    rdi,rbx
   17492:	call   588b0 <_obstack_memory_used@@Base+0xbc30>
   17497:	cmp    bpl,0x35
   1749b:	je     174a7 <__sprintf_chk@plt+0xcaf7>
   1749d:	cmp    bpl,0x44
   174a1:	jne    17363 <__sprintf_chk@plt+0xc9b3>
   174a7:	mov    rcx,QWORD PTR [rbx+0x48]
   174ab:	mov    r8d,0x1
   174b1:	mov    rsi,r12
   174b4:	mov    rdi,rbx
   174b7:	mov    edx,0x4000
   174bc:	call   588b0 <_obstack_memory_used@@Base+0xbc30>
   174c1:	jmp    17363 <__sprintf_chk@plt+0xc9b3>
   174c6:	cs nop WORD PTR [rax+rax*1+0x0]
   174d0:	cmp    BYTE PTR [rip+0x67a0d],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   174d7:	jne    17710 <__sprintf_chk@plt+0xcd60>
   174dd:	mov    QWORD PTR [rsp+0x28],0x3ffffffe
   174e6:	mov    esi,DWORD PTR [rip+0x64b34]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   174ec:	mov    r8d,r14d
   174ef:	mov    rdx,r12
   174f2:	mov    edi,r13d
   174f5:	movdqu xmm0,XMMWORD PTR [rbx+0xf8]
   174fd:	lea    rcx,[rsp+0x20]
   17502:	mov    DWORD PTR [rsp+0xc],r9d
   17507:	mov    DWORD PTR [rsp+0x8],r10d
   1750c:	movaps XMMWORD PTR [rsp+0x30],xmm0
   17511:	call   48980 <argp_usage@@Base+0x5600>
   17516:	mov    r10d,DWORD PTR [rsp+0x8]
   1751b:	mov    r9d,DWORD PTR [rsp+0xc]
   17520:	test   eax,eax
   17522:	jne    177d0 <__sprintf_chk@plt+0xce20>
   17528:	cmp    BYTE PTR [rip+0x679b5],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   1752f:	jne    178a8 <__sprintf_chk@plt+0xcef8>
   17535:	mov    rsi,QWORD PTR [rsp+0x30]
   1753a:	mov    rdx,QWORD PTR [rsp+0x38]
   1753f:	mov    rdi,r12
   17542:	mov    DWORD PTR [rsp+0xc],r9d
   17547:	mov    DWORD PTR [rsp+0x8],r10d
   1754c:	call   17090 <__sprintf_chk@plt+0xc6e0>
   17551:	mov    r10d,DWORD PTR [rsp+0x8]
   17556:	mov    r9d,DWORD PTR [rsp+0xc]
   1755b:	mov    r11d,DWORD PTR [rip+0x681ee]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   17562:	test   r11d,r11d
   17565:	jle    17660 <__sprintf_chk@plt+0xccb0>
   1756b:	mov    eax,DWORD PTR [rbx+0x74]
   1756e:	mov    DWORD PTR [rsp+0x8],eax
   17572:	mov    eax,DWORD PTR [rbx+0x78]
   17575:	mov    DWORD PTR [rsp+0xc],eax
   17579:	test   r13d,r13d
   1757c:	js     17740 <__sprintf_chk@plt+0xcd90>
   17582:	mov    edx,DWORD PTR [rsp+0xc]
   17586:	mov    esi,DWORD PTR [rsp+0x8]
   1758a:	mov    edi,r13d
   1758d:	mov    DWORD PTR [rsp+0x10],r10d
   17592:	call   a6c0 <fchown@plt>
   17597:	mov    r10d,DWORD PTR [rsp+0x10]
   1759c:	test   eax,eax
   1759e:	je     17830 <__sprintf_chk@plt+0xce80>
   175a4:	call   9e40 <__errno_location@plt>
   175a9:	mov    r10d,DWORD PTR [rsp+0x10]
   175ae:	mov    r11d,DWORD PTR [rax]
   175b1:	cmp    r11d,0x26
   175b5:	je     17740 <__sprintf_chk@plt+0xcd90>
   175bb:	cmp    r11d,0x5f
   175bf:	je     17740 <__sprintf_chk@plt+0xcd90>
   175c5:	mov    rax,QWORD PTR [rip+0x67f3c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   175cc:	test   rax,rax
   175cf:	je     175e7 <__sprintf_chk@plt+0xcc37>
   175d1:	mov    DWORD PTR [rsp+0x18],r10d
   175d6:	mov    DWORD PTR [rsp+0x10],r11d
   175db:	call   rax
   175dd:	mov    r10d,DWORD PTR [rsp+0x18]
   175e2:	mov    r11d,DWORD PTR [rsp+0x10]
   175e7:	mov    rdi,r12
   175ea:	mov    DWORD PTR [rsp+0x1c],r10d
   175ef:	mov    DWORD PTR [rsp+0x18],r11d
   175f4:	call   4b670 <argp_usage@@Base+0x82f0>
   175f9:	mov    edx,0x5
   175fe:	lea    rsi,[rip+0x4cf93]        # 64598 <_obstack_memory_used@@Base+0x17918>
   17605:	xor    edi,edi
   17607:	mov    QWORD PTR [rsp+0x10],rax
   1760c:	call   a040 <dcgettext@plt>
   17611:	mov    r9d,DWORD PTR [rsp+0xc]
   17616:	mov    esi,DWORD PTR [rsp+0x18]
   1761a:	xor    edi,edi
   1761c:	mov    r8d,DWORD PTR [rsp+0x8]
   17621:	mov    rcx,QWORD PTR [rsp+0x10]
   17626:	mov    rdx,rax
   17629:	xor    eax,eax
   1762b:	call   a640 <error@plt>
   17630:	mov    r10d,DWORD PTR [rsp+0x1c]
   17635:	mov    DWORD PTR [rip+0x67a85],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1763f:	mov    eax,DWORD PTR [rip+0x68107]        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
   17645:	mov    r8d,0xfff
   1764b:	test   eax,eax
   1764d:	mov    eax,0x1ff
   17652:	cmovle r8d,eax
   17656:	jmp    172e1 <__sprintf_chk@plt+0xc931>
   1765b:	nop    DWORD PTR [rax+rax*1+0x0]
   17660:	mov    edi,DWORD PTR [rip+0x680e6]        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
   17666:	test   edi,edi
   17668:	jle    17679 <__sprintf_chk@plt+0xccc9>
   1766a:	mov    r8d,0xfff
   17670:	test   r9b,r9b
   17673:	je     172e1 <__sprintf_chk@plt+0xc931>
   17679:	mov    r8d,0x1ff
   1767f:	jmp    172e1 <__sprintf_chk@plt+0xc931>
   17684:	nop    DWORD PTR [rax+0x0]
   17688:	mov    DWORD PTR [rsp+0x8],r8d
   1768d:	mov    DWORD PTR [rsp+0x4],r9d
   17692:	test   r13d,r13d
   17695:	js     17880 <__sprintf_chk@plt+0xced0>
   1769b:	lea    rsi,[rsp+0x20]
   176a0:	mov    edi,r13d
   176a3:	call   a920 <fstat@plt>
   176a8:	mov    r9d,DWORD PTR [rsp+0x4]
   176ad:	mov    r8d,DWORD PTR [rsp+0x8]
   176b2:	mov    r15d,DWORD PTR [rsp+0x38]
   176b7:	test   eax,eax
   176b9:	je     17311 <__sprintf_chk@plt+0xc961>
   176bf:	mov    rsi,r12
   176c2:	lea    rdi,[rip+0x4b97a]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   176c9:	call   3bad0 <__sprintf_chk@plt+0x31120>
   176ce:	jmp    17327 <__sprintf_chk@plt+0xc977>
   176d3:	nop    DWORD PTR [rax+rax*1+0x0]
   176d8:	xor    r11d,r9d
   176db:	movsx  r8d,bpl
   176df:	mov    ecx,r14d
   176e2:	mov    rsi,r12
   176e5:	mov    edx,r11d
   176e8:	mov    edi,r13d
   176eb:	mov    r15d,r11d
   176ee:	call   16fe0 <__sprintf_chk@plt+0xc630>
   176f3:	test   eax,eax
   176f5:	je     17327 <__sprintf_chk@plt+0xc977>
   176fb:	mov    esi,r15d
   176fe:	mov    rdi,r12
   17701:	call   3c2e0 <__sprintf_chk@plt+0x31930>
   17706:	jmp    17327 <__sprintf_chk@plt+0xc977>
   1770b:	nop    DWORD PTR [rax+rax*1+0x0]
   17710:	movdqu xmm1,XMMWORD PTR [rsi+0xe8]
   17718:	movaps XMMWORD PTR [rsp+0x20],xmm1
   1771d:	jmp    174e6 <__sprintf_chk@plt+0xcb36>
   17722:	nop    WORD PTR [rax+rax*1+0x0]
   17728:	mov    rsi,rdx
   1772b:	mov    rdi,r12
   1772e:	lea    r13,[rip+0x4ca0c]        # 64141 <_obstack_memory_used@@Base+0x174c1>
   17735:	call   9d70 <setfilecon@plt>
   1773a:	jmp    173b1 <__sprintf_chk@plt+0xca01>
   1773f:	nop
   17740:	mov    ecx,DWORD PTR [rsp+0xc]
   17744:	mov    edx,DWORD PTR [rsp+0x8]
   17748:	mov    r8d,r14d
   1774b:	mov    rsi,r12
   1774e:	mov    edi,DWORD PTR [rip+0x648cc]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   17754:	mov    DWORD PTR [rsp+0x10],r10d
   17759:	call   a7b0 <fchownat@plt>
   1775e:	mov    r10d,DWORD PTR [rsp+0x10]
   17763:	test   eax,eax
   17765:	je     17830 <__sprintf_chk@plt+0xce80>
   1776b:	mov    DWORD PTR [rsp+0x10],r10d
   17770:	call   9e40 <__errno_location@plt>
   17775:	cmp    bpl,0x32
   17779:	mov    r10d,DWORD PTR [rsp+0x10]
   1777e:	mov    r11d,DWORD PTR [rax]
   17781:	jne    175c5 <__sprintf_chk@plt+0xcc15>
   17787:	cmp    r11d,0x26
   1778b:	je     1763f <__sprintf_chk@plt+0xcc8f>
   17791:	cmp    r11d,0x5f
   17795:	je     1763f <__sprintf_chk@plt+0xcc8f>
   1779b:	jmp    175c5 <__sprintf_chk@plt+0xcc15>
   177a0:	cmp    edi,0xffffff9c
   177a3:	je     17860 <__sprintf_chk@plt+0xceb0>
   177a9:	cmp    BYTE PTR [r12],0x2f
   177ae:	je     17860 <__sprintf_chk@plt+0xceb0>
   177b4:	mov    rsi,r12
   177b7:	lea    r13,[rip+0x4c982]        # 64140 <_obstack_memory_used@@Base+0x174c0>
   177be:	call   4c360 <argp_usage@@Base+0x8fe0>
   177c3:	jmp    173b1 <__sprintf_chk@plt+0xca01>
   177c8:	nop    DWORD PTR [rax+rax*1+0x0]
   177d0:	cmp    bpl,0x32
   177d4:	jne    17803 <__sprintf_chk@plt+0xce53>
   177d6:	mov    DWORD PTR [rsp+0xc],r9d
   177db:	mov    DWORD PTR [rsp+0x8],r10d
   177e0:	call   9e40 <__errno_location@plt>
   177e5:	mov    r10d,DWORD PTR [rsp+0x8]
   177ea:	mov    r9d,DWORD PTR [rsp+0xc]
   177ef:	mov    eax,DWORD PTR [rax]
   177f1:	cmp    eax,0x5f
   177f4:	je     1755b <__sprintf_chk@plt+0xcbab>
   177fa:	cmp    eax,0x26
   177fd:	je     1755b <__sprintf_chk@plt+0xcbab>
   17803:	mov    rsi,r12
   17806:	lea    rdi,[rip+0x4bbcd]        # 633da <_obstack_memory_used@@Base+0x1675a>
   1780d:	mov    DWORD PTR [rsp+0xc],r9d
   17812:	mov    DWORD PTR [rsp+0x8],r10d
   17817:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1781c:	mov    r9d,DWORD PTR [rsp+0xc]
   17821:	mov    r10d,DWORD PTR [rsp+0x8]
   17826:	jmp    1755b <__sprintf_chk@plt+0xcbab>
   1782b:	nop    DWORD PTR [rax+rax*1+0x0]
   17830:	mov    eax,DWORD PTR [rsp+0x4]
   17834:	or     eax,r15d
   17837:	test   al,0x49
   17839:	je     1763f <__sprintf_chk@plt+0xcc8f>
   1783f:	mov    eax,r15d
   17842:	and    eax,0xc00
   17847:	not    eax
   17849:	and    r10d,eax
   1784c:	mov    eax,r10d
   1784f:	not    eax
   17851:	mov    DWORD PTR [rsp+0x4],eax
   17855:	jmp    1763f <__sprintf_chk@plt+0xcc8f>
   1785a:	nop    WORD PTR [rax+rax*1+0x0]
   17860:	mov    rsi,rdx
   17863:	mov    rdi,r12
   17866:	lea    r13,[rip+0x4c8d3]        # 64140 <_obstack_memory_used@@Base+0x174c0>
   1786d:	call   a290 <lsetfilecon@plt>
   17872:	jmp    173b1 <__sprintf_chk@plt+0xca01>
   17877:	nop    WORD PTR [rax+rax*1+0x0]
   17880:	mov    edi,DWORD PTR [rip+0x6479a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   17886:	lea    rdx,[rsp+0x20]
   1788b:	mov    ecx,r14d
   1788e:	mov    rsi,r12
   17891:	call   a960 <fstatat@plt>
   17896:	mov    r8d,DWORD PTR [rsp+0x8]
   1789b:	mov    r9d,DWORD PTR [rsp+0x4]
   178a0:	jmp    176b2 <__sprintf_chk@plt+0xcd02>
   178a5:	nop    DWORD PTR [rax]
   178a8:	mov    rsi,QWORD PTR [rsp+0x20]
   178ad:	mov    rdx,QWORD PTR [rsp+0x28]
   178b2:	mov    rdi,r12
   178b5:	call   17090 <__sprintf_chk@plt+0xc6e0>
   178ba:	mov    r9d,DWORD PTR [rsp+0xc]
   178bf:	mov    r10d,DWORD PTR [rsp+0x8]
   178c4:	jmp    17535 <__sprintf_chk@plt+0xcb85>
   178c9:	call   a0a0 <__stack_chk_fail@plt>
   178ce:	xchg   ax,ax
   178d0:	push   r15
   178d2:	push   r14
   178d4:	push   r13
   178d6:	mov    r13,rdi
   178d9:	push   r12
   178db:	push   rbp
   178dc:	push   rbx
   178dd:	sub    rsp,0x278
   178e4:	mov    BYTE PTR [rsp+0x7],sil
   178e9:	mov    rax,QWORD PTR fs:0x28
   178f2:	mov    QWORD PTR [rsp+0x268],rax
   178fa:	xor    eax,eax
   178fc:	call   a060 <strlen@plt>
   17901:	mov    r15,QWORD PTR [rip+0x67e38]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   17908:	mov    QWORD PTR [rsp+0x8],rax
   1790d:	lea    rax,[rsp+0xb0]
   17915:	mov    QWORD PTR [rsp+0x10],rax
   1791a:	lea    rax,[rsp+0x20]
   1791f:	mov    QWORD PTR [rsp+0x18],rax
   17924:	test   r15,r15
   17927:	je     17af5 <__sprintf_chk@plt+0xd145>
   1792d:	xor    r12d,r12d
   17930:	movzx  eax,BYTE PTR [r15+0x58]
   17935:	mov    r14d,DWORD PTR [r15+0x48]
   17939:	mov    ebx,DWORD PTR [r15+0x4c]
   1793d:	or     r12d,eax
   17940:	cmp    al,BYTE PTR [rsp+0x7]
   17944:	ja     17af5 <__sprintf_chk@plt+0xd145>
   1794a:	mov    rdx,QWORD PTR [r15+0x98]
   17951:	cmp    rdx,QWORD PTR [rsp+0x8]
   17956:	jae    17980 <__sprintf_chk@plt+0xcfd0>
   17958:	movzx  eax,BYTE PTR [r13+rdx*1+0x0]
   1795e:	test   al,al
   17960:	je     17980 <__sprintf_chk@plt+0xcfd0>
   17962:	cmp    al,0x2f
   17964:	je     17ba0 <__sprintf_chk@plt+0xd1f0>
   1796a:	cmp    BYTE PTR [r13+rdx*1-0x1],0x2f
   17970:	je     17ba0 <__sprintf_chk@plt+0xd1f0>
   17976:	cs nop WORD PTR [rax+rax*1+0x0]
   17980:	mov    edi,DWORD PTR [r15+0x5c]
   17984:	cmp    edi,DWORD PTR [rip+0x67e3e]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   1798a:	je     17991 <__sprintf_chk@plt+0xcfe1>
   1798c:	call   26d40 <__sprintf_chk@plt+0x1c390>
   17991:	mov    ecx,DWORD PTR [r15+0x54]
   17995:	mov    rdi,QWORD PTR [r15+0xa0]
   1799c:	test   r12b,r12b
   1799f:	jne    17b20 <__sprintf_chk@plt+0xd170>
   179a5:	mov    eax,DWORD PTR [r15+0x18]
   179a9:	movdqu xmm0,XMMWORD PTR [r15+0x28]
   179af:	mov    edx,0xffffffff
   179b4:	mov    r9d,0x35
   179ba:	movdqu xmm1,XMMWORD PTR [r15+0x38]
   179c0:	mov    r8d,ebx
   179c3:	mov    DWORD PTR [rsp+0x120],eax
   179ca:	mov    eax,DWORD PTR [r15+0x1c]
   179ce:	mov    DWORD PTR [rsp+0x124],eax
   179d5:	mov    eax,DWORD PTR [r15+0x20]
   179d9:	movups XMMWORD PTR [rsp+0x198],xmm0
   179e1:	mov    DWORD PTR [rsp+0x128],eax
   179e8:	mov    rax,QWORD PTR [r15+0x60]
   179ec:	movups XMMWORD PTR [rsp+0x1a8],xmm1
   179f4:	mov    QWORD PTR [rsp+0xe0],rax
   179fc:	mov    rax,QWORD PTR [r15+0x68]
   17a00:	mov    QWORD PTR [rsp+0xe8],rax
   17a08:	mov    rax,QWORD PTR [r15+0x70]
   17a0c:	mov    QWORD PTR [rsp+0xf0],rax
   17a14:	mov    rax,QWORD PTR [r15+0x78]
   17a18:	mov    QWORD PTR [rsp+0xf8],rax
   17a20:	mov    rax,QWORD PTR [r15+0x80]
   17a27:	mov    QWORD PTR [rsp+0x100],rax
   17a2f:	mov    rax,QWORD PTR [r15+0x90]
   17a36:	mov    QWORD PTR [rsp+0x210],rax
   17a3e:	mov    rax,QWORD PTR [r15+0x88]
   17a45:	mov    QWORD PTR [rsp+0x208],rax
   17a4d:	movzx  eax,BYTE PTR [r15+0x50]
   17a52:	push   rcx
   17a53:	mov    ecx,r14d
   17a56:	push   rax
   17a57:	mov    rsi,QWORD PTR [rsp+0x20]
   17a5c:	call   17270 <__sprintf_chk@plt+0xc8c0>
   17a61:	pop    rax
   17a62:	pop    rdx
   17a63:	mov    rax,QWORD PTR [r15]
   17a66:	mov    rdi,QWORD PTR [r15+0xa0]
   17a6d:	mov    QWORD PTR [rip+0x67ccc],rax        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   17a74:	call   9ce0 <free@plt>
   17a79:	mov    rdx,QWORD PTR [r15+0x88]
   17a80:	mov    rbp,QWORD PTR [r15+0x90]
   17a87:	test   rdx,rdx
   17a8a:	je     17aba <__sprintf_chk@plt+0xd10a>
   17a8c:	lea    rdx,[rdx+rdx*2]
   17a90:	mov    r14,rbp
   17a93:	lea    rbx,[rbp+rdx*8+0x0]
   17a98:	nop    DWORD PTR [rax+rax*1+0x0]
   17aa0:	mov    rdi,QWORD PTR [r14]
   17aa3:	add    r14,0x18
   17aa7:	call   9ce0 <free@plt>
   17aac:	mov    rdi,QWORD PTR [r14-0x10]
   17ab0:	call   9ce0 <free@plt>
   17ab5:	cmp    rbx,r14
   17ab8:	jne    17aa0 <__sprintf_chk@plt+0xd0f0>
   17aba:	mov    rdi,rbp
   17abd:	call   9ce0 <free@plt>
   17ac2:	mov    rdi,QWORD PTR [r15+0x60]
   17ac6:	call   9ce0 <free@plt>
   17acb:	mov    rdi,QWORD PTR [r15+0x68]
   17acf:	call   9ce0 <free@plt>
   17ad4:	mov    rdi,QWORD PTR [r15+0x78]
   17ad8:	call   9ce0 <free@plt>
   17add:	mov    rdi,r15
   17ae0:	call   9ce0 <free@plt>
   17ae5:	mov    r15,QWORD PTR [rip+0x67c54]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   17aec:	test   r15,r15
   17aef:	jne    17930 <__sprintf_chk@plt+0xcf80>
   17af5:	mov    rax,QWORD PTR [rsp+0x268]
   17afd:	sub    rax,QWORD PTR fs:0x28
   17b06:	jne    17bfc <__sprintf_chk@plt+0xd24c>
   17b0c:	add    rsp,0x278
   17b13:	pop    rbx
   17b14:	pop    rbp
   17b15:	pop    r12
   17b17:	pop    r13
   17b19:	pop    r14
   17b1b:	pop    r15
   17b1d:	ret    
   17b1e:	xchg   ax,ax
   17b20:	mov    rsi,rdi
   17b23:	mov    rdx,QWORD PTR [rsp+0x18]
   17b28:	mov    edi,DWORD PTR [rip+0x644f2]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   17b2e:	call   a960 <fstatat@plt>
   17b33:	test   eax,eax
   17b35:	jne    17bc0 <__sprintf_chk@plt+0xd210>
   17b3b:	mov    r14d,DWORD PTR [rsp+0x38]
   17b40:	mov    rax,QWORD PTR [r15+0x8]
   17b44:	cmp    QWORD PTR [rsp+0x20],rax
   17b49:	je     17bd8 <__sprintf_chk@plt+0xd228>
   17b4f:	mov    rax,QWORD PTR [rip+0x679b2]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   17b56:	test   rax,rax
   17b59:	je     17b5d <__sprintf_chk@plt+0xd1ad>
   17b5b:	call   rax
   17b5d:	mov    rdi,QWORD PTR [r15+0xa0]
   17b64:	call   4b670 <argp_usage@@Base+0x82f0>
   17b69:	mov    edx,0x5
   17b6e:	lea    rsi,[rip+0x4ca83]        # 645f8 <_obstack_memory_used@@Base+0x17978>
   17b75:	xor    edi,edi
   17b77:	mov    r14,rax
   17b7a:	call   a040 <dcgettext@plt>
   17b7f:	mov    rcx,r14
   17b82:	xor    esi,esi
   17b84:	xor    edi,edi
   17b86:	mov    rdx,rax
   17b89:	xor    eax,eax
   17b8b:	call   a640 <error@plt>
   17b90:	mov    DWORD PTR [rip+0x6752a],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   17b9a:	jmp    17a63 <__sprintf_chk@plt+0xd0b3>
   17b9f:	nop
   17ba0:	mov    rsi,QWORD PTR [r15+0xa0]
   17ba7:	mov    rdi,r13
   17baa:	call   a2c0 <memcmp@plt>
   17baf:	test   eax,eax
   17bb1:	jne    17980 <__sprintf_chk@plt+0xcfd0>
   17bb7:	jmp    17af5 <__sprintf_chk@plt+0xd145>
   17bbc:	nop    DWORD PTR [rax+0x0]
   17bc0:	mov    rsi,QWORD PTR [r15+0xa0]
   17bc7:	lea    rdi,[rip+0x4b475]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   17bce:	call   3bad0 <__sprintf_chk@plt+0x31120>
   17bd3:	jmp    17a63 <__sprintf_chk@plt+0xd0b3>
   17bd8:	mov    rax,QWORD PTR [r15+0x10]
   17bdc:	cmp    QWORD PTR [rsp+0x28],rax
   17be1:	jne    17b4f <__sprintf_chk@plt+0xd19f>
   17be7:	mov    rdi,QWORD PTR [r15+0xa0]
   17bee:	mov    ecx,DWORD PTR [r15+0x54]
   17bf2:	mov    ebx,0xffffffff
   17bf7:	jmp    179a5 <__sprintf_chk@plt+0xcff5>
   17bfc:	call   a0a0 <__stack_chk_fail@plt>
   17c01:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   17c0c:	nop    DWORD PTR [rax+0x0]
   17c10:	endbr64 
   17c14:	push   r13
   17c16:	push   r12
   17c18:	push   rbp
   17c19:	push   rbx
   17c1a:	sub    rsp,0x58
   17c1e:	mov    rdx,QWORD PTR [rip+0x6791b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   17c25:	mov    rax,QWORD PTR fs:0x28
   17c2e:	mov    QWORD PTR [rsp+0x48],rax
   17c33:	lea    rax,[rip+0x976]        # 185b0 <__sprintf_chk@plt+0xdc00>
   17c3a:	mov    QWORD PTR [rip+0x67c4f],rax        # 7f890 <obstack_alloc_failed_handler@@Base+0xa58>
   17c41:	mov    rax,QWORD PTR [rip+0x67480]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   17c48:	cmp    rax,rdx
   17c4b:	jb     17c65 <__sprintf_chk@plt+0xd2b5>
   17c4d:	sub    rax,rdx
   17c50:	and    rax,0xfffffffffffffe00
   17c56:	lea    rdx,[rdx+rax*1+0x200]
   17c5e:	mov    QWORD PTR [rip+0x678db],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   17c65:	cmp    rdx,QWORD PTR [rip+0x67914]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   17c6c:	ja     aa35 <__sprintf_chk@plt+0x85>
   17c72:	cmp    BYTE PTR [rip+0x67b37],0x0        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   17c79:	je     17d80 <__sprintf_chk@plt+0xd3d0>
   17c7f:	mov    rsi,QWORD PTR [rip+0x676a2]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17c86:	cmp    BYTE PTR [rsi],0x0
   17c89:	je     17de5 <__sprintf_chk@plt+0xd435>
   17c8f:	cmp    BYTE PTR [rip+0x67b0a],0x0        # 7f7a0 <obstack_alloc_failed_handler@@Base+0x968>
   17c96:	jne    17e98 <__sprintf_chk@plt+0xd4e8>
   17c9c:	mov    eax,DWORD PTR [rip+0x6741e]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   17ca2:	test   eax,eax
   17ca4:	jne    17eba <__sprintf_chk@plt+0xd50a>
   17caa:	cmp    BYTE PTR [rip+0x67a70],0x0        # 7f721 <obstack_alloc_failed_handler@@Base+0x8e9>
   17cb1:	je     17eee <__sprintf_chk@plt+0xd53e>
   17cb7:	cmp    BYTE PTR [rip+0x675ee],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   17cbe:	je     17cd6 <__sprintf_chk@plt+0xd326>
   17cc0:	mov    rdi,QWORD PTR [rip+0x67661]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17cc7:	xor    esi,esi
   17cc9:	call   25c20 <__sprintf_chk@plt+0x1b270>
   17cce:	test   al,al
   17cd0:	je     17e11 <__sprintf_chk@plt+0xd461>
   17cd6:	lea    r12,[rsp+0x10]
   17cdb:	mov    rdi,r12
   17cde:	call   32390 <__sprintf_chk@plt+0x279e0>
   17ce3:	test   al,al
   17ce5:	je     17f20 <__sprintf_chk@plt+0xd570>
   17ceb:	lea    rax,[rip+0x6762e]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   17cf2:	mov    QWORD PTR [rsp+0x28],rax
   17cf7:	mov    rax,QWORD PTR [rsp+0x30]
   17cfc:	mov    rax,QWORD PTR [rax+0x10]
   17d00:	test   rax,rax
   17d03:	je     17f20 <__sprintf_chk@plt+0xd570>
   17d09:	mov    rdi,r12
   17d0c:	call   rax
   17d0e:	test   al,al
   17d10:	je     17f20 <__sprintf_chk@plt+0xd570>
   17d16:	mov    r12,QWORD PTR [rip+0x6760b]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17d1d:	mov    ebp,0x53
   17d22:	cmp    BYTE PTR [rip+0x67a07],0x0        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
   17d29:	jne    17f54 <__sprintf_chk@plt+0xd5a4>
   17d2f:	cmp    QWORD PTR [rip+0x679f1],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   17d37:	jne    17f54 <__sprintf_chk@plt+0xd5a4>
   17d3d:	lea    rbx,[rip+0x21bc]        # 19f00 <__sprintf_chk@plt+0xf550>
   17d44:	mov    eax,DWORD PTR [rip+0x679ea]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   17d4a:	cmp    eax,0x3
   17d4d:	je     181af <__sprintf_chk@plt+0xd7ff>
   17d53:	cmp    eax,0x6
   17d56:	jne    17d6a <__sprintf_chk@plt+0xd3ba>
   17d58:	xor    esi,esi
   17d5a:	mov    rdi,r12
   17d5d:	call   58c00 <_obstack_memory_used@@Base+0xbf80>
   17d62:	test   al,al
   17d64:	jne    181eb <__sprintf_chk@plt+0xd83b>
   17d6a:	mov    r12,QWORD PTR [rip+0x675b7]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17d71:	jmp    17f62 <__sprintf_chk@plt+0xd5b2>
   17d76:	cs nop WORD PTR [rax+rax*1+0x0]
   17d80:	mov    r12,QWORD PTR [rip+0x67599]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   17d87:	mov    rdi,r12
   17d8a:	call   32340 <__sprintf_chk@plt+0x27990>
   17d8f:	test   al,al
   17d91:	je     17c7f <__sprintf_chk@plt+0xd2cf>
   17d97:	mov    rax,QWORD PTR [rip+0x6776a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   17d9e:	test   rax,rax
   17da1:	je     17dac <__sprintf_chk@plt+0xd3fc>
   17da3:	call   rax
   17da5:	mov    r12,QWORD PTR [rip+0x67574]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   17dac:	mov    rdi,r12
   17daf:	call   4b670 <argp_usage@@Base+0x82f0>
   17db4:	mov    edx,0x5
   17db9:	lea    rsi,[rip+0x4c38e]        # 6414e <_obstack_memory_used@@Base+0x174ce>
   17dc0:	xor    edi,edi
   17dc2:	mov    r12,rax
   17dc5:	call   a040 <dcgettext@plt>
   17dca:	mov    rcx,r12
   17dcd:	xor    esi,esi
   17dcf:	xor    edi,edi
   17dd1:	mov    rdx,rax
   17dd4:	xor    eax,eax
   17dd6:	call   a640 <error@plt>
   17ddb:	mov    DWORD PTR [rip+0x672df],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   17de5:	cmp    BYTE PTR [rip+0x676bd],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   17dec:	je     17e70 <__sprintf_chk@plt+0xd4c0>
   17df2:	mov    rax,QWORD PTR [rsp+0x48]
   17df7:	sub    rax,QWORD PTR fs:0x28
   17e00:	jne    18243 <__sprintf_chk@plt+0xd893>
   17e06:	add    rsp,0x58
   17e0a:	pop    rbx
   17e0b:	pop    rbp
   17e0c:	pop    r12
   17e0e:	pop    r13
   17e10:	ret    
   17e11:	call   9e40 <__errno_location@plt>
   17e16:	mov    ebp,DWORD PTR [rax]
   17e18:	mov    rax,QWORD PTR [rip+0x676e9]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   17e1f:	test   rax,rax
   17e22:	je     17e26 <__sprintf_chk@plt+0xd476>
   17e24:	call   rax
   17e26:	mov    rdi,QWORD PTR [rip+0x674fb]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17e2d:	call   4b670 <argp_usage@@Base+0x82f0>
   17e32:	xor    edi,edi
   17e34:	mov    edx,0x5
   17e39:	lea    rsi,[rip+0x4c7f8]        # 64638 <_obstack_memory_used@@Base+0x179b8>
   17e40:	mov    r12,rax
   17e43:	call   a040 <dcgettext@plt>
   17e48:	xor    edi,edi
   17e4a:	mov    rcx,r12
   17e4d:	mov    esi,ebp
   17e4f:	mov    rdx,rax
   17e52:	xor    eax,eax
   17e54:	call   a640 <error@plt>
   17e59:	cmp    BYTE PTR [rip+0x67649],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   17e60:	mov    DWORD PTR [rip+0x6725a],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   17e6a:	jne    17df2 <__sprintf_chk@plt+0xd442>
   17e6c:	nop    DWORD PTR [rax+0x0]
   17e70:	mov    rax,QWORD PTR [rsp+0x48]
   17e75:	sub    rax,QWORD PTR fs:0x28
   17e7e:	jne    18243 <__sprintf_chk@plt+0xd893>
   17e84:	add    rsp,0x58
   17e88:	pop    rbx
   17e89:	pop    rbp
   17e8a:	pop    r12
   17e8c:	pop    r13
   17e8e:	jmp    25260 <__sprintf_chk@plt+0x1a8b0>
   17e93:	nop    DWORD PTR [rax+rax*1+0x0]
   17e98:	lea    rdi,[rip+0x4c2cd]        # 6416c <_obstack_memory_used@@Base+0x174ec>
   17e9f:	call   33f00 <__sprintf_chk@plt+0x29550>
   17ea4:	test   eax,eax
   17ea6:	je     17de5 <__sprintf_chk@plt+0xd435>
   17eac:	mov    eax,DWORD PTR [rip+0x6720e]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   17eb2:	test   eax,eax
   17eb4:	je     17caa <__sprintf_chk@plt+0xd2fa>
   17eba:	cmp    DWORD PTR [rip+0x673e7],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   17ec1:	mov    rsi,QWORD PTR [rip+0x67200]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   17ec8:	je     17ff3 <__sprintf_chk@plt+0xd643>
   17ece:	mov    rdx,0xffffffffffffffff
   17ed5:	lea    rdi,[rip+0x67444]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   17edc:	call   244c0 <__sprintf_chk@plt+0x19b10>
   17ee1:	cmp    BYTE PTR [rip+0x67839],0x0        # 7f721 <obstack_alloc_failed_handler@@Base+0x8e9>
   17ee8:	jne    17cb7 <__sprintf_chk@plt+0xd307>
   17eee:	mov    rdi,QWORD PTR [rip+0x67433]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17ef5:	xor    esi,esi
   17ef7:	mov    ebp,DWORD PTR [rip+0x678cb]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   17efd:	call   178d0 <__sprintf_chk@plt+0xcf20>
   17f02:	cmp    ebp,DWORD PTR [rip+0x678c0]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   17f08:	je     17cb7 <__sprintf_chk@plt+0xd307>
   17f0e:	mov    edi,ebp
   17f10:	call   26d40 <__sprintf_chk@plt+0x1c390>
   17f15:	jmp    17cb7 <__sprintf_chk@plt+0xd307>
   17f1a:	nop    WORD PTR [rax+rax*1+0x0]
   17f20:	mov    rax,QWORD PTR [rip+0x671a1]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   17f27:	mov    r12,QWORD PTR [rip+0x673fa]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17f2e:	movsx  ebp,BYTE PTR [rax+0x9c]
   17f35:	cmp    bpl,0x56
   17f39:	ja     18030 <__sprintf_chk@plt+0xd680>
   17f3f:	lea    rdx,[rip+0x4cd1a]        # 64c60 <_obstack_memory_used@@Base+0x17fe0>
   17f46:	movzx  eax,bpl
   17f4a:	movsxd rax,DWORD PTR [rdx+rax*4]
   17f4e:	add    rax,rdx
   17f51:	notrack jmp rax
   17f54:	mov    r12,QWORD PTR [rip+0x673cd]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   17f5b:	lea    rbx,[rip+0x1f9e]        # 19f00 <__sprintf_chk@plt+0xf550>
   17f62:	mov    esi,ebp
   17f64:	mov    rdi,r12
   17f67:	call   rbx
   17f69:	test   eax,eax
   17f6b:	je     17df2 <__sprintf_chk@plt+0xd442>
   17f71:	cmp    BYTE PTR [rip+0x67334],0x0        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   17f78:	je     17df2 <__sprintf_chk@plt+0xd442>
   17f7e:	mov    rax,QWORD PTR [rsp+0x48]
   17f83:	sub    rax,QWORD PTR fs:0x28
   17f8c:	jne    18243 <__sprintf_chk@plt+0xd893>
   17f92:	add    rsp,0x58
   17f96:	pop    rbx
   17f97:	pop    rbp
   17f98:	pop    r12
   17f9a:	pop    r13
   17f9c:	jmp    264e0 <__sprintf_chk@plt+0x1bb30>
   17fa1:	mov    rax,QWORD PTR [rip+0x67560]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   17fa8:	test   rax,rax
   17fab:	je     17faf <__sprintf_chk@plt+0xd5ff>
   17fad:	call   rax
   17faf:	mov    edx,0x5
   17fb4:	lea    rsi,[rip+0x4c1b9]        # 64174 <_obstack_memory_used@@Base+0x174f4>
   17fbb:	xor    edi,edi
   17fbd:	call   a040 <dcgettext@plt>
   17fc2:	xor    esi,esi
   17fc4:	xor    edi,edi
   17fc6:	mov    rdx,rax
   17fc9:	xor    eax,eax
   17fcb:	call   a640 <error@plt>
   17fd0:	mov    DWORD PTR [rip+0x670ea],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   17fda:	nop    WORD PTR [rax+rax*1+0x0]
   17fe0:	cmp    BYTE PTR [rip+0x674c2],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   17fe7:	jne    17f71 <__sprintf_chk@plt+0xd5c1>
   17fe9:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   17fee:	jmp    17f71 <__sprintf_chk@plt+0xd5c1>
   17ff3:	cmp    BYTE PTR [rip+0x66f6f],0x0        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   17ffa:	jne    17ece <__sprintf_chk@plt+0xd51e>
   18000:	cmp    QWORD PTR [rip+0x672e8],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   18008:	je     17ece <__sprintf_chk@plt+0xd51e>
   1800e:	mov    QWORD PTR [rsp+0x8],rsi
   18013:	call   28d30 <__sprintf_chk@plt+0x1e380>
   18018:	mov    BYTE PTR [rip+0x66f4a],0x1        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   1801f:	mov    rsi,QWORD PTR [rsp+0x8]
   18024:	jmp    17ece <__sprintf_chk@plt+0xd51e>
   18029:	nop    DWORD PTR [rax+0x0]
   18030:	test   BYTE PTR [rip+0x64047],0x1        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   18037:	je     17d22 <__sprintf_chk@plt+0xd372>
   1803d:	mov    rax,QWORD PTR [rip+0x674c4]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   18044:	test   rax,rax
   18047:	je     1804b <__sprintf_chk@plt+0xd69b>
   18049:	call   rax
   1804b:	mov    rdi,r12
   1804e:	call   4b670 <argp_usage@@Base+0x82f0>
   18053:	xor    edi,edi
   18055:	mov    edx,0x5
   1805a:	lea    rsi,[rip+0x4c63f]        # 646a0 <_obstack_memory_used@@Base+0x17a20>
   18061:	mov    r13,rax
   18064:	call   a040 <dcgettext@plt>
   18069:	mov    r8d,ebp
   1806c:	mov    rcx,r13
   1806f:	xor    esi,esi
   18071:	mov    rdx,rax
   18074:	xor    edi,edi
   18076:	xor    eax,eax
   18078:	call   a640 <error@plt>
   1807d:	jmp    17d22 <__sprintf_chk@plt+0xd372>
   18082:	cmp    BYTE PTR [rip+0x672a7],0x0        # 7f330 <obstack_alloc_failed_handler@@Base+0x4f8>
   18089:	je     17d22 <__sprintf_chk@plt+0xd372>
   1808f:	lea    rbx,[rip+0x793a]        # 1f9d0 <__sprintf_chk@plt+0x15020>
   18096:	cs nop WORD PTR [rax+rax*1+0x0]
   180a0:	cmp    BYTE PTR [rip+0x67689],0x0        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
   180a7:	jne    17fe0 <__sprintf_chk@plt+0xd630>
   180ad:	cmp    QWORD PTR [rip+0x67673],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   180b5:	je     17d44 <__sprintf_chk@plt+0xd394>
   180bb:	lea    rax,[rip+0x1e3e]        # 19f00 <__sprintf_chk@plt+0xf550>
   180c2:	cmp    rbx,rax
   180c5:	je     17f62 <__sprintf_chk@plt+0xd5b2>
   180cb:	jmp    17fe0 <__sprintf_chk@plt+0xd630>
   180d0:	cmp    BYTE PTR [rip+0x673d1],0x0        # 7f4a8 <obstack_alloc_failed_handler@@Base+0x670>
   180d7:	lea    rbx,[rip+0x78f2]        # 1f9d0 <__sprintf_chk@plt+0x15020>
   180de:	je     180a0 <__sprintf_chk@plt+0xd6f0>
   180e0:	mov    BYTE PTR [rip+0x6763a],0x1        # 7f721 <obstack_alloc_failed_handler@@Base+0x8e9>
   180e7:	jmp    180a0 <__sprintf_chk@plt+0xd6f0>
   180e9:	mov    rax,QWORD PTR [rip+0x67418]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   180f0:	test   rax,rax
   180f3:	je     180fe <__sprintf_chk@plt+0xd74e>
   180f5:	call   rax
   180f7:	mov    r12,QWORD PTR [rip+0x6722a]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   180fe:	mov    rdi,r12
   18101:	call   4b670 <argp_usage@@Base+0x82f0>
   18106:	mov    edx,0x5
   1810b:	lea    rsi,[rip+0x4c54e]        # 64660 <_obstack_memory_used@@Base+0x179e0>
   18112:	xor    edi,edi
   18114:	mov    r12,rax
   18117:	call   a040 <dcgettext@plt>
   1811c:	mov    rcx,r12
   1811f:	xor    esi,esi
   18121:	xor    edi,edi
   18123:	mov    rdx,rax
   18126:	xor    eax,eax
   18128:	call   a640 <error@plt>
   1812d:	mov    DWORD PTR [rip+0x66f8d],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   18137:	jmp    17fe0 <__sprintf_chk@plt+0xd630>
   1813c:	or     DWORD PTR [rip+0x6724a],0x6000        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   18146:	mov    ebp,0x34
   1814b:	lea    rbx,[rip+0x32ce]        # 1b420 <__sprintf_chk@plt+0x10a70>
   18152:	jmp    180a0 <__sprintf_chk@plt+0xd6f0>
   18157:	or     DWORD PTR [rip+0x6722f],0x2000        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   18161:	mov    ebp,0x33
   18166:	lea    rbx,[rip+0x32b3]        # 1b420 <__sprintf_chk@plt+0x10a70>
   1816d:	jmp    180a0 <__sprintf_chk@plt+0xd6f0>
   18172:	mov    ebp,0x32
   18177:	lea    rbx,[rip+0x3192]        # 1b310 <__sprintf_chk@plt+0x10960>
   1817e:	jmp    180a0 <__sprintf_chk@plt+0xd6f0>
   18183:	mov    ebp,0x31
   18188:	lea    rbx,[rip+0x2ec1]        # 1b050 <__sprintf_chk@plt+0x106a0>
   1818f:	jmp    180a0 <__sprintf_chk@plt+0xd6f0>
   18194:	mov    ebp,0x53
   18199:	jmp    17d22 <__sprintf_chk@plt+0xd372>
   1819e:	mov    ebp,0x36
   181a3:	lea    rbx,[rip+0x3366]        # 1b510 <__sprintf_chk@plt+0x10b60>
   181aa:	jmp    180a0 <__sprintf_chk@plt+0xd6f0>
   181af:	movzx  esi,BYTE PTR [rip+0x6756a]        # 7f720 <obstack_alloc_failed_handler@@Base+0x8e8>
   181b6:	mov    rdi,r12
   181b9:	call   26bf0 <__sprintf_chk@plt+0x1c240>
   181be:	test   eax,eax
   181c0:	jne    17d6a <__sprintf_chk@plt+0xd3ba>
   181c6:	call   9e40 <__errno_location@plt>
   181cb:	test   DWORD PTR [rax],0xfffffffd
   181d1:	je     17d6a <__sprintf_chk@plt+0xd3ba>
   181d7:	mov    rsi,r12
   181da:	lea    rdi,[rip+0x4ee10]        # 66ff1 <_obstack_memory_used@@Base+0x1a371>
   181e1:	call   3bad0 <__sprintf_chk@plt+0x31120>
   181e6:	jmp    17fe0 <__sprintf_chk@plt+0xd630>
   181eb:	test   BYTE PTR [rip+0x63e8b],0x8        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   181f2:	je     17fe0 <__sprintf_chk@plt+0xd630>
   181f8:	mov    rax,QWORD PTR [rip+0x67309]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   181ff:	test   rax,rax
   18202:	je     18206 <__sprintf_chk@plt+0xd856>
   18204:	call   rax
   18206:	mov    rsi,r12
   18209:	xor    edi,edi
   1820b:	lea    rdx,[rip+0x63e2e]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   18212:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   18217:	xor    edi,edi
   18219:	mov    edx,0x5
   1821e:	lea    rsi,[rip+0x4c4b3]        # 646d8 <_obstack_memory_used@@Base+0x17a58>
   18225:	mov    r12,rax
   18228:	call   a040 <dcgettext@plt>
   1822d:	mov    rcx,r12
   18230:	xor    esi,esi
   18232:	xor    edi,edi
   18234:	mov    rdx,rax
   18237:	xor    eax,eax
   18239:	call   a640 <error@plt>
   1823e:	jmp    17fe0 <__sprintf_chk@plt+0xd630>
   18243:	call   a0a0 <__stack_chk_fail@plt>
   18248:	nop    DWORD PTR [rax+rax*1+0x0]
   18250:	push   r15
   18252:	push   r14
   18254:	push   r13
   18256:	lea    r13,[rip+0x4ed94]        # 66ff1 <_obstack_memory_used@@Base+0x1a371>
   1825d:	push   r12
   1825f:	push   rbp
   18260:	push   rbx
   18261:	sub    rsp,0x268
   18268:	mov    r12,QWORD PTR [rip+0x675e1]        # 7f850 <obstack_alloc_failed_handler@@Base+0xa18>
   1826f:	mov    rax,QWORD PTR fs:0x28
   18278:	mov    QWORD PTR [rsp+0x258],rax
   18280:	xor    eax,eax
   18282:	test   r12,r12
   18285:	je     18458 <__sprintf_chk@plt+0xdaa8>
   1828b:	nop    DWORD PTR [rax+rax*1+0x0]
   18290:	mov    edi,DWORD PTR [r12+0x58]
   18295:	cmp    edi,DWORD PTR [rip+0x6752d]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   1829b:	je     182a2 <__sprintf_chk@plt+0xd8f2>
   1829d:	call   26d40 <__sprintf_chk@plt+0x1c390>
   182a2:	mov    rbx,QWORD PTR [r12+0x60]
   182a7:	xor    r15d,r15d
   182aa:	lea    r14,[rsp+0x10]
   182af:	test   rbx,rbx
   182b2:	jne    182cc <__sprintf_chk@plt+0xd91c>
   182b4:	jmp    183e8 <__sprintf_chk@plt+0xda38>
   182b9:	nop    DWORD PTR [rax+0x0]
   182c0:	mov    rbx,QWORD PTR [rbx]
   182c3:	test   rbx,rbx
   182c6:	je     183c8 <__sprintf_chk@plt+0xda18>
   182cc:	lea    rbp,[rbx+0x8]
   182d0:	mov    edi,DWORD PTR [rip+0x63d4a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   182d6:	mov    ecx,0x100
   182db:	mov    rdx,r14
   182de:	mov    rsi,rbp
   182e1:	call   a960 <fstatat@plt>
   182e6:	test   eax,eax
   182e8:	jne    182c0 <__sprintf_chk@plt+0xd910>
   182ea:	mov    rax,QWORD PTR [r12+0x8]
   182ef:	cmp    QWORD PTR [rsp+0x10],rax
   182f4:	jne    182c0 <__sprintf_chk@plt+0xd910>
   182f6:	mov    rax,QWORD PTR [r12+0x10]
   182fb:	cmp    QWORD PTR [rsp+0x18],rax
   18300:	jne    182c0 <__sprintf_chk@plt+0xd910>
   18302:	mov    rdx,QWORD PTR [r12+0x18]
   18307:	mov    rax,QWORD PTR [r12+0x20]
   1830c:	xor    ecx,ecx
   1830e:	cmp    rdx,0xffffffffffffffff
   18312:	not    rdx
   18315:	setl   cl
   18318:	shr    rdx,0x3f
   1831c:	sub    ecx,edx
   1831e:	xor    edx,edx
   18320:	cmp    rax,0xffffffffffffffff
   18324:	not    rax
   18327:	setl   dl
   1832a:	shr    rax,0x3f
   1832e:	sub    edx,eax
   18330:	lea    eax,[rdx+rcx*2]
   18333:	test   eax,eax
   18335:	jne    182c0 <__sprintf_chk@plt+0xd910>
   18337:	mov    edi,DWORD PTR [rip+0x63ce3]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1833d:	xor    edx,edx
   1833f:	mov    rsi,rbp
   18342:	call   9ee0 <unlinkat@plt>
   18347:	test   eax,eax
   18349:	jne    184b4 <__sprintf_chk@plt+0xdb04>
   1834f:	mov    edi,DWORD PTR [rip+0x63ccb]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   18355:	test   r15,r15
   18358:	je     18378 <__sprintf_chk@plt+0xd9c8>
   1835a:	mov    edx,edi
   1835c:	xor    r8d,r8d
   1835f:	mov    rcx,rbp
   18362:	mov    rsi,r15
   18365:	call   a5a0 <linkat@plt>
   1836a:	mov    edi,DWORD PTR [rip+0x63cb0]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   18370:	test   eax,eax
   18372:	je     182c0 <__sprintf_chk@plt+0xd910>
   18378:	cmp    BYTE PTR [r12+0x28],0x0
   1837e:	lea    r9,[r12+0xa0]
   18386:	jne    1848c <__sprintf_chk@plt+0xdadc>
   1838c:	xor    r8d,r8d
   1838f:	mov    rsi,r9
   18392:	mov    rcx,rbp
   18395:	mov    edx,edi
   18397:	mov    QWORD PTR [rsp+0x8],r9
   1839c:	call   a5a0 <linkat@plt>
   183a1:	mov    r9,QWORD PTR [rsp+0x8]
   183a6:	test   eax,eax
   183a8:	je     182c0 <__sprintf_chk@plt+0xd910>
   183ae:	mov    rsi,rbp
   183b1:	mov    rdi,r9
   183b4:	call   3c390 <__sprintf_chk@plt+0x319e0>
   183b9:	mov    rbx,QWORD PTR [rbx]
   183bc:	test   rbx,rbx
   183bf:	jne    182cc <__sprintf_chk@plt+0xd91c>
   183c5:	nop    DWORD PTR [rax]
   183c8:	mov    rbx,QWORD PTR [r12+0x60]
   183cd:	test   rbx,rbx
   183d0:	je     183e8 <__sprintf_chk@plt+0xda38>
   183d2:	nop    WORD PTR [rax+rax*1+0x0]
   183d8:	mov    rdi,rbx
   183db:	mov    rbx,QWORD PTR [rbx]
   183de:	call   9ce0 <free@plt>
   183e3:	test   rbx,rbx
   183e6:	jne    183d8 <__sprintf_chk@plt+0xda28>
   183e8:	mov    rax,QWORD PTR [r12+0x90]
   183f0:	mov    r14,QWORD PTR [r12+0x98]
   183f8:	test   rax,rax
   183fb:	je     1842a <__sprintf_chk@plt+0xda7a>
   183fd:	lea    rax,[rax+rax*2]
   18401:	mov    rbx,r14
   18404:	lea    rbp,[r14+rax*8]
   18408:	nop    DWORD PTR [rax+rax*1+0x0]
   18410:	mov    rdi,QWORD PTR [rbx]
   18413:	add    rbx,0x18
   18417:	call   9ce0 <free@plt>
   1841c:	mov    rdi,QWORD PTR [rbx-0x10]
   18420:	call   9ce0 <free@plt>
   18425:	cmp    rbp,rbx
   18428:	jne    18410 <__sprintf_chk@plt+0xda60>
   1842a:	mov    rdi,r14
   1842d:	call   9ce0 <free@plt>
   18432:	mov    rdi,QWORD PTR [r12+0x68]
   18437:	call   9ce0 <free@plt>
   1843c:	mov    rbx,QWORD PTR [r12]
   18440:	mov    rdi,r12
   18443:	call   9ce0 <free@plt>
   18448:	test   rbx,rbx
   1844b:	je     18458 <__sprintf_chk@plt+0xdaa8>
   1844d:	mov    r12,rbx
   18450:	jmp    18290 <__sprintf_chk@plt+0xd8e0>
   18455:	nop    DWORD PTR [rax]
   18458:	mov    QWORD PTR [rip+0x673ed],0x0        # 7f850 <obstack_alloc_failed_handler@@Base+0xa18>
   18463:	mov    rax,QWORD PTR [rsp+0x258]
   1846b:	sub    rax,QWORD PTR fs:0x28
   18474:	jne    1859e <__sprintf_chk@plt+0xdbee>
   1847a:	add    rsp,0x268
   18481:	pop    rbx
   18482:	pop    rbp
   18483:	pop    r12
   18485:	pop    r13
   18487:	pop    r14
   18489:	pop    r15
   1848b:	ret    
   1848c:	mov    esi,edi
   1848e:	mov    rdx,rbp
   18491:	mov    rdi,r9
   18494:	mov    QWORD PTR [rsp+0x8],r9
   18499:	call   a8b0 <symlinkat@plt>
   1849e:	test   eax,eax
   184a0:	je     184c4 <__sprintf_chk@plt+0xdb14>
   184a2:	mov    rdi,QWORD PTR [rsp+0x8]
   184a7:	mov    rsi,rbp
   184aa:	call   3c530 <__sprintf_chk@plt+0x31b80>
   184af:	jmp    182c0 <__sprintf_chk@plt+0xd910>
   184b4:	mov    rsi,rbp
   184b7:	mov    rdi,r13
   184ba:	call   3bad0 <__sprintf_chk@plt+0x31120>
   184bf:	jmp    182c0 <__sprintf_chk@plt+0xd910>
   184c4:	mov    eax,DWORD PTR [r12+0x2c]
   184c9:	mov    edx,0xffffffff
   184ce:	xor    r8d,r8d
   184d1:	xor    ecx,ecx
   184d3:	movdqu xmm0,XMMWORD PTR [r12+0x38]
   184da:	movdqu xmm1,XMMWORD PTR [r12+0x48]
   184e1:	mov    rdi,rbp
   184e4:	mov    r15,rbp
   184e7:	mov    DWORD PTR [rsp+0x110],eax
   184ee:	mov    eax,DWORD PTR [r12+0x30]
   184f3:	lea    rsi,[rsp+0xa0]
   184fb:	mov    r9d,0x32
   18501:	mov    DWORD PTR [rsp+0x114],eax
   18508:	mov    eax,DWORD PTR [r12+0x34]
   1850d:	movups XMMWORD PTR [rsp+0x188],xmm0
   18515:	mov    DWORD PTR [rsp+0x118],eax
   1851c:	mov    rax,QWORD PTR [r12+0x68]
   18521:	movups XMMWORD PTR [rsp+0x198],xmm1
   18529:	mov    QWORD PTR [rsp+0xd0],rax
   18531:	mov    rax,QWORD PTR [r12+0x70]
   18536:	mov    QWORD PTR [rsp+0xd8],rax
   1853e:	mov    rax,QWORD PTR [r12+0x78]
   18543:	mov    QWORD PTR [rsp+0xe0],rax
   1854b:	mov    rax,QWORD PTR [r12+0x80]
   18553:	mov    QWORD PTR [rsp+0xe8],rax
   1855b:	mov    rax,QWORD PTR [r12+0x88]
   18563:	mov    QWORD PTR [rsp+0xf0],rax
   1856b:	mov    rax,QWORD PTR [r12+0x98]
   18573:	mov    QWORD PTR [rsp+0x200],rax
   1857b:	mov    rax,QWORD PTR [r12+0x90]
   18583:	mov    QWORD PTR [rsp+0x1f8],rax
   1858b:	push   0x100
   18590:	push   0x0
   18592:	call   17270 <__sprintf_chk@plt+0xc8c0>
   18597:	pop    rax
   18598:	pop    rdx
   18599:	jmp    182c0 <__sprintf_chk@plt+0xd910>
   1859e:	call   a0a0 <__stack_chk_fail@plt>
   185a3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   185ae:	xchg   ax,ax
   185b0:	endbr64 
   185b4:	push   rbp
   185b5:	lea    rbp,[rip+0x53594]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   185bc:	xor    esi,esi
   185be:	mov    rdi,rbp
   185c1:	call   178d0 <__sprintf_chk@plt+0xcf20>
   185c6:	call   18250 <__sprintf_chk@plt+0xd8a0>
   185cb:	mov    rdi,rbp
   185ce:	mov    esi,0x1
   185d3:	pop    rbp
   185d4:	jmp    178d0 <__sprintf_chk@plt+0xcf20>
   185d9:	nop    DWORD PTR [rax+0x0]
   185e0:	endbr64 
   185e4:	push   r14
   185e6:	mov    r14,rsi
   185e9:	push   r13
   185eb:	mov    r13,rcx
   185ee:	push   r12
   185f0:	mov    r12,rdx
   185f3:	push   rbp
   185f4:	mov    rbp,rdi
   185f7:	push   rbx
   185f8:	mov    rbx,QWORD PTR [rip+0x67119]        # 7f718 <obstack_alloc_failed_handler@@Base+0x8e0>
   185ff:	test   rbx,rbx
   18602:	jne    18618 <__sprintf_chk@plt+0xdc68>
   18604:	jmp    18638 <__sprintf_chk@plt+0xdc88>
   18606:	cs nop WORD PTR [rax+rax*1+0x0]
   18610:	mov    rbx,QWORD PTR [rbx]
   18613:	test   rbx,rbx
   18616:	je     18638 <__sprintf_chk@plt+0xdc88>
   18618:	mov    rdi,QWORD PTR [rbx+0x8]
   1861c:	xor    edx,edx
   1861e:	mov    rsi,r14
   18621:	call   9cf0 <fnmatch@plt>
   18626:	test   eax,eax
   18628:	jne    18610 <__sprintf_chk@plt+0xdc60>
   1862a:	pop    rbx
   1862b:	pop    rbp
   1862c:	pop    r12
   1862e:	pop    r13
   18630:	pop    r14
   18632:	ret    
   18633:	nop    DWORD PTR [rax+rax*1+0x0]
   18638:	mov    rbx,QWORD PTR [rip+0x671e1]        # 7f820 <obstack_alloc_failed_handler@@Base+0x9e8>
   1863f:	test   rbx,rbx
   18642:	jne    18678 <__sprintf_chk@plt+0xdcc8>
   18644:	nop    DWORD PTR [rax+0x0]
   18648:	mov    rdi,r14
   1864b:	call   16e70 <__sprintf_chk@plt+0xc4c0>
   18650:	test   rax,rax
   18653:	je     18691 <__sprintf_chk@plt+0xdce1>
   18655:	pop    rbx
   18656:	mov    rcx,r13
   18659:	mov    rdx,r12
   1865c:	mov    rsi,r14
   1865f:	mov    rdi,rbp
   18662:	mov    rax,QWORD PTR [rax+0x10]
   18666:	pop    rbp
   18667:	pop    r12
   18669:	pop    r13
   1866b:	pop    r14
   1866d:	jmp    rax
   1866f:	nop
   18670:	mov    rbx,QWORD PTR [rbx]
   18673:	test   rbx,rbx
   18676:	je     18648 <__sprintf_chk@plt+0xdc98>
   18678:	mov    rdi,QWORD PTR [rbx+0x8]
   1867c:	mov    rsi,r14
   1867f:	call   a320 <strcmp@plt>
   18684:	test   eax,eax
   18686:	jne    18670 <__sprintf_chk@plt+0xdcc0>
   18688:	pop    rbx
   18689:	pop    rbp
   1868a:	pop    r12
   1868c:	pop    r13
   1868e:	pop    r14
   18690:	ret    
   18691:	test   BYTE PTR [rip+0x639e6],0x2        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   18698:	je     1862a <__sprintf_chk@plt+0xdc7a>
   1869a:	mov    rax,QWORD PTR [rip+0x66e67]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   186a1:	test   rax,rax
   186a4:	je     186a8 <__sprintf_chk@plt+0xdcf8>
   186a6:	call   rax
   186a8:	mov    edx,0x5
   186ad:	lea    rsi,[rip+0x4c044]        # 646f8 <_obstack_memory_used@@Base+0x17a78>
   186b4:	xor    edi,edi
   186b6:	call   a040 <dcgettext@plt>
   186bb:	pop    rbx
   186bc:	mov    rcx,r14
   186bf:	pop    rbp
   186c0:	mov    rdx,rax
   186c3:	pop    r12
   186c5:	xor    esi,esi
   186c7:	pop    r13
   186c9:	xor    edi,edi
   186cb:	xor    eax,eax
   186cd:	pop    r14
   186cf:	jmp    a640 <error@plt>
   186d4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   186df:	nop
   186e0:	endbr64 
   186e4:	push   rbx
   186e5:	mov    rcx,rsi
   186e8:	mov    rbx,rdi
   186eb:	mov    rsi,rdx
   186ee:	mov    edx,0xffffffff
   186f3:	sub    rsp,0x10
   186f7:	mov    rax,QWORD PTR fs:0x28
   18700:	mov    QWORD PTR [rsp+0x8],rax
   18705:	xor    eax,eax
   18707:	mov    rdi,rsp
   1870a:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   1870f:	test   al,al
   18711:	je     1871a <__sprintf_chk@plt+0xdd6a>
   18713:	mov    rax,QWORD PTR [rsp]
   18717:	mov    DWORD PTR [rbx+0x78],eax
   1871a:	mov    rax,QWORD PTR [rsp+0x8]
   1871f:	sub    rax,QWORD PTR fs:0x28
   18728:	jne    18730 <__sprintf_chk@plt+0xdd80>
   1872a:	add    rsp,0x10
   1872e:	pop    rbx
   1872f:	ret    
   18730:	call   a0a0 <__stack_chk_fail@plt>
   18735:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   18740:	endbr64 
   18744:	push   r12
   18746:	mov    rcx,rsi
   18749:	mov    r12,rsi
   1874c:	push   rbp
   1874d:	mov    rbp,rdx
   18750:	movabs rdx,0x7fffffffffffffff
   1875a:	push   rbx
   1875b:	mov    rsi,rbp
   1875e:	mov    rbx,rdi
   18761:	sub    rsp,0x10
   18765:	mov    rax,QWORD PTR fs:0x28
   1876e:	mov    QWORD PTR [rsp+0x8],rax
   18773:	xor    eax,eax
   18775:	mov    rdi,rsp
   18778:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   1877d:	test   al,al
   1877f:	je     187af <__sprintf_chk@plt+0xddff>
   18781:	mov    rdx,QWORD PTR [rsp]
   18785:	mov    rax,QWORD PTR [rbx+0x130]
   1878c:	cmp    rax,QWORD PTR [rbx+0x138]
   18793:	jae    187d0 <__sprintf_chk@plt+0xde20>
   18795:	lea    rcx,[rax+0x1]
   18799:	shl    rax,0x4
   1879d:	add    rax,QWORD PTR [rbx+0x140]
   187a4:	mov    QWORD PTR [rbx+0x130],rcx
   187ab:	mov    QWORD PTR [rax+0x8],rdx
   187af:	mov    rax,QWORD PTR [rsp+0x8]
   187b4:	sub    rax,QWORD PTR fs:0x28
   187bd:	jne    18811 <__sprintf_chk@plt+0xde61>
   187bf:	add    rsp,0x10
   187c3:	pop    rbx
   187c4:	pop    rbp
   187c5:	pop    r12
   187c7:	ret    
   187c8:	nop    DWORD PTR [rax+rax*1+0x0]
   187d0:	mov    rax,QWORD PTR [rip+0x66d31]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   187d7:	test   rax,rax
   187da:	je     187de <__sprintf_chk@plt+0xde2e>
   187dc:	call   rax
   187de:	mov    edx,0x5
   187e3:	lea    rsi,[rip+0x4bf3e]        # 64728 <_obstack_memory_used@@Base+0x17aa8>
   187ea:	xor    edi,edi
   187ec:	call   a040 <dcgettext@plt>
   187f1:	mov    r8,rbp
   187f4:	mov    rcx,r12
   187f7:	xor    esi,esi
   187f9:	mov    rdx,rax
   187fc:	xor    edi,edi
   187fe:	xor    eax,eax
   18800:	call   a640 <error@plt>
   18805:	mov    DWORD PTR [rip+0x668b5],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1880f:	jmp    187af <__sprintf_chk@plt+0xddff>
   18811:	call   a0a0 <__stack_chk_fail@plt>
   18816:	cs nop WORD PTR [rax+rax*1+0x0]
   18820:	endbr64 
   18824:	push   rbx
   18825:	mov    rcx,rsi
   18828:	mov    rbx,rdi
   1882b:	mov    rsi,rdx
   1882e:	movabs rdx,0x7fffffffffffffff
   18838:	sub    rsp,0x10
   1883c:	mov    rax,QWORD PTR fs:0x28
   18845:	mov    QWORD PTR [rsp+0x8],rax
   1884a:	xor    eax,eax
   1884c:	mov    rdi,rsp
   1884f:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18854:	test   al,al
   18856:	je     18863 <__sprintf_chk@plt+0xdeb3>
   18858:	mov    rax,QWORD PTR [rsp]
   1885c:	mov    QWORD PTR [rbx+0x88],rax
   18863:	mov    rax,QWORD PTR [rsp+0x8]
   18868:	sub    rax,QWORD PTR fs:0x28
   18871:	jne    18879 <__sprintf_chk@plt+0xdec9>
   18873:	add    rsp,0x10
   18877:	pop    rbx
   18878:	ret    
   18879:	call   a0a0 <__stack_chk_fail@plt>
   1887e:	xchg   ax,ax
   18880:	endbr64 
   18884:	push   rbx
   18885:	mov    rcx,rsi
   18888:	mov    rbx,rdi
   1888b:	mov    rsi,rdx
   1888e:	mov    edx,0xffffffff
   18893:	sub    rsp,0x10
   18897:	mov    rax,QWORD PTR fs:0x28
   188a0:	mov    QWORD PTR [rsp+0x8],rax
   188a5:	xor    eax,eax
   188a7:	mov    rdi,rsp
   188aa:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   188af:	test   al,al
   188b1:	je     188ba <__sprintf_chk@plt+0xdf0a>
   188b3:	mov    rax,QWORD PTR [rsp]
   188b7:	mov    DWORD PTR [rbx+0x74],eax
   188ba:	mov    rax,QWORD PTR [rsp+0x8]
   188bf:	sub    rax,QWORD PTR fs:0x28
   188c8:	jne    188d0 <__sprintf_chk@plt+0xdf20>
   188ca:	add    rsp,0x10
   188ce:	pop    rbx
   188cf:	ret    
   188d0:	call   a0a0 <__stack_chk_fail@plt>
   188d5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   188e0:	endbr64 
   188e4:	push   rbx
   188e5:	mov    rcx,rsi
   188e8:	mov    rbx,rdi
   188eb:	mov    rsi,rdx
   188ee:	movabs rdx,0x7fffffffffffffff
   188f8:	sub    rsp,0x10
   188fc:	mov    rax,QWORD PTR fs:0x28
   18905:	mov    QWORD PTR [rsp+0x8],rax
   1890a:	xor    eax,eax
   1890c:	mov    rdi,rsp
   1890f:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18914:	test   al,al
   18916:	je     1892a <__sprintf_chk@plt+0xdf7a>
   18918:	mov    rax,QWORD PTR [rsp]
   1891c:	mov    BYTE PTR [rbx+0x150],0x1
   18923:	mov    QWORD PTR [rbx+0x148],rax
   1892a:	mov    rax,QWORD PTR [rsp+0x8]
   1892f:	sub    rax,QWORD PTR fs:0x28
   18938:	jne    18940 <__sprintf_chk@plt+0xdf90>
   1893a:	add    rsp,0x10
   1893e:	pop    rbx
   1893f:	ret    
   18940:	call   a0a0 <__stack_chk_fail@plt>
   18945:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   18950:	endbr64 
   18954:	push   rbp
   18955:	mov    rbp,rdx
   18958:	mov    rcx,rsi
   1895b:	movabs rdx,0x7fffffffffffffff
   18965:	push   rbx
   18966:	mov    rsi,rbp
   18969:	mov    rbx,rdi
   1896c:	sub    rsp,0x18
   18970:	mov    rax,QWORD PTR fs:0x28
   18979:	mov    QWORD PTR [rsp+0x8],rax
   1897e:	xor    eax,eax
   18980:	mov    rdi,rsp
   18983:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18988:	test   al,al
   1898a:	je     189ae <__sprintf_chk@plt+0xdffe>
   1898c:	mov    rdx,QWORD PTR [rsp]
   18990:	mov    rax,QWORD PTR [rbx+0x130]
   18997:	cmp    rax,QWORD PTR [rbx+0x138]
   1899e:	jae    189c8 <__sprintf_chk@plt+0xe018>
   189a0:	shl    rax,0x4
   189a4:	add    rax,QWORD PTR [rbx+0x140]
   189ab:	mov    QWORD PTR [rax],rdx
   189ae:	mov    rax,QWORD PTR [rsp+0x8]
   189b3:	sub    rax,QWORD PTR fs:0x28
   189bc:	jne    18a0d <__sprintf_chk@plt+0xe05d>
   189be:	add    rsp,0x18
   189c2:	pop    rbx
   189c3:	pop    rbp
   189c4:	ret    
   189c5:	nop    DWORD PTR [rax]
   189c8:	mov    rax,QWORD PTR [rip+0x66b39]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   189cf:	test   rax,rax
   189d2:	je     189d6 <__sprintf_chk@plt+0xe026>
   189d4:	call   rax
   189d6:	mov    edx,0x5
   189db:	lea    rsi,[rip+0x4bd46]        # 64728 <_obstack_memory_used@@Base+0x17aa8>
   189e2:	xor    edi,edi
   189e4:	call   a040 <dcgettext@plt>
   189e9:	mov    r8,rbp
   189ec:	xor    esi,esi
   189ee:	xor    edi,edi
   189f0:	mov    rdx,rax
   189f3:	lea    rcx,[rip+0x4b796]        # 64190 <_obstack_memory_used@@Base+0x17510>
   189fa:	xor    eax,eax
   189fc:	call   a640 <error@plt>
   18a01:	mov    DWORD PTR [rip+0x666b9],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   18a0b:	jmp    189ae <__sprintf_chk@plt+0xdffe>
   18a0d:	call   a0a0 <__stack_chk_fail@plt>
   18a12:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   18a1d:	nop    DWORD PTR [rax]
   18a20:	endbr64 
   18a24:	sub    rsp,0x18
   18a28:	mov    rcx,rsi
   18a2b:	mov    rsi,rdx
   18a2e:	mov    rdx,0xffffffffffffffff
   18a35:	mov    rax,QWORD PTR fs:0x28
   18a3e:	mov    QWORD PTR [rsp+0x8],rax
   18a43:	xor    eax,eax
   18a45:	mov    rdi,rsp
   18a48:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18a4d:	test   al,al
   18a4f:	je     18a5c <__sprintf_chk@plt+0xe0ac>
   18a51:	mov    rax,QWORD PTR [rsp]
   18a55:	mov    QWORD PTR [rip+0x6687c],rax        # 7f2d8 <obstack_alloc_failed_handler@@Base+0x4a0>
   18a5c:	mov    rax,QWORD PTR [rsp+0x8]
   18a61:	sub    rax,QWORD PTR fs:0x28
   18a6a:	jne    18a71 <__sprintf_chk@plt+0xe0c1>
   18a6c:	add    rsp,0x18
   18a70:	ret    
   18a71:	call   a0a0 <__stack_chk_fail@plt>
   18a76:	cs nop WORD PTR [rax+rax*1+0x0]
   18a80:	endbr64 
   18a84:	sub    rsp,0x18
   18a88:	mov    rcx,rsi
   18a8b:	mov    rsi,rdx
   18a8e:	mov    rdx,0xffffffffffffffff
   18a95:	mov    rax,QWORD PTR fs:0x28
   18a9e:	mov    QWORD PTR [rsp+0x8],rax
   18aa3:	xor    eax,eax
   18aa5:	mov    rdi,rsp
   18aa8:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18aad:	test   al,al
   18aaf:	je     18abc <__sprintf_chk@plt+0xe10c>
   18ab1:	mov    rax,QWORD PTR [rsp]
   18ab5:	mov    QWORD PTR [rip+0x66824],rax        # 7f2e0 <obstack_alloc_failed_handler@@Base+0x4a8>
   18abc:	mov    rax,QWORD PTR [rsp+0x8]
   18ac1:	sub    rax,QWORD PTR fs:0x28
   18aca:	jne    18ad1 <__sprintf_chk@plt+0xe121>
   18acc:	add    rsp,0x18
   18ad0:	ret    
   18ad1:	call   a0a0 <__stack_chk_fail@plt>
   18ad6:	cs nop WORD PTR [rax+rax*1+0x0]
   18ae0:	endbr64 
   18ae4:	push   rbx
   18ae5:	mov    rcx,rsi
   18ae8:	mov    rbx,rdi
   18aeb:	mov    rsi,rdx
   18aee:	mov    edx,0xffffffff
   18af3:	sub    rsp,0x10
   18af7:	mov    rax,QWORD PTR fs:0x28
   18b00:	mov    QWORD PTR [rsp+0x8],rax
   18b05:	xor    eax,eax
   18b07:	mov    rdi,rsp
   18b0a:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18b0f:	test   al,al
   18b11:	je     18b1d <__sprintf_chk@plt+0xe16d>
   18b13:	mov    rax,QWORD PTR [rsp]
   18b17:	mov    DWORD PTR [rbx+0x124],eax
   18b1d:	mov    rax,QWORD PTR [rsp+0x8]
   18b22:	sub    rax,QWORD PTR fs:0x28
   18b2b:	jne    18b33 <__sprintf_chk@plt+0xe183>
   18b2d:	add    rsp,0x10
   18b31:	pop    rbx
   18b32:	ret    
   18b33:	call   a0a0 <__stack_chk_fail@plt>
   18b38:	nop    DWORD PTR [rax+rax*1+0x0]
   18b40:	endbr64 
   18b44:	push   rbx
   18b45:	mov    rcx,rsi
   18b48:	mov    rbx,rdi
   18b4b:	mov    rsi,rdx
   18b4e:	mov    edx,0xffffffff
   18b53:	sub    rsp,0x10
   18b57:	mov    rax,QWORD PTR fs:0x28
   18b60:	mov    QWORD PTR [rsp+0x8],rax
   18b65:	xor    eax,eax
   18b67:	mov    rdi,rsp
   18b6a:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   18b6f:	test   al,al
   18b71:	je     18b7d <__sprintf_chk@plt+0xe1cd>
   18b73:	mov    rax,QWORD PTR [rsp]
   18b77:	mov    DWORD PTR [rbx+0x128],eax
   18b7d:	mov    rax,QWORD PTR [rsp+0x8]
   18b82:	sub    rax,QWORD PTR fs:0x28
   18b8b:	jne    18b93 <__sprintf_chk@plt+0xe1e3>
   18b8d:	add    rsp,0x10
   18b91:	pop    rbx
   18b92:	ret    
   18b93:	call   a0a0 <__stack_chk_fail@plt>
   18b98:	nop    DWORD PTR [rax+rax*1+0x0]
   18ba0:	endbr64 
   18ba4:	push   r15
   18ba6:	push   r14
   18ba8:	mov    r14,rsi
   18bab:	mov    rsi,rdi
   18bae:	push   r13
   18bb0:	mov    r13,rdi
   18bb3:	push   r12
   18bb5:	push   rbp
   18bb6:	push   rbx
   18bb7:	sub    rsp,0x18
   18bbb:	mov    rax,QWORD PTR [rip+0x66c26]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   18bc2:	mov    rdi,QWORD PTR [rax]
   18bc5:	call   61510 <_obstack_memory_used@@Base+0x14890>
   18bca:	mov    BYTE PTR [rsp+0xf],al
   18bce:	test   al,al
   18bd0:	jne    18cb6 <__sprintf_chk@plt+0xe306>
   18bd6:	test   r14,r14
   18bd9:	je     18cb6 <__sprintf_chk@plt+0xe306>
   18bdf:	xor    ebp,ebp
   18be1:	xor    r15d,r15d
   18be4:	xor    r12d,r12d
   18be7:	nop    WORD PTR [rax+rax*1+0x0]
   18bf0:	mov    rbx,QWORD PTR [r14+0x1b0]
   18bf7:	test   rbx,rbx
   18bfa:	jne    18c27 <__sprintf_chk@plt+0xe277>
   18bfc:	jmp    18c98 <__sprintf_chk@plt+0xe2e8>
   18c01:	nop    DWORD PTR [rax+0x0]
   18c08:	mov    rax,QWORD PTR [rbx+0x18]
   18c0c:	mov    rsi,rbp
   18c0f:	mov    rdi,QWORD PTR [rax]
   18c12:	call   61510 <_obstack_memory_used@@Base+0x14890>
   18c17:	test   al,al
   18c19:	jne    18cd0 <__sprintf_chk@plt+0xe320>
   18c1f:	mov    rbx,QWORD PTR [rbx]
   18c22:	test   rbx,rbx
   18c25:	je     18c98 <__sprintf_chk@plt+0xe2e8>
   18c27:	mov    eax,r12d
   18c2a:	and    eax,DWORD PTR [rbx+0x10]
   18c2d:	jne    18c1f <__sprintf_chk@plt+0xe26f>
   18c2f:	mov    rax,QWORD PTR [rbx+0x18]
   18c33:	mov    rsi,r13
   18c36:	mov    rdi,QWORD PTR [rax]
   18c39:	call   61510 <_obstack_memory_used@@Base+0x14890>
   18c3e:	test   al,al
   18c40:	jne    18cd0 <__sprintf_chk@plt+0xe320>
   18c46:	test   r15,r15
   18c49:	je     18c70 <__sprintf_chk@plt+0xe2c0>
   18c4b:	mov    rax,QWORD PTR [rbx+0x18]
   18c4f:	mov    rsi,r15
   18c52:	mov    rdi,QWORD PTR [rax]
   18c55:	call   61510 <_obstack_memory_used@@Base+0x14890>
   18c5a:	test   al,al
   18c5c:	jne    18cd0 <__sprintf_chk@plt+0xe320>
   18c5e:	test   rbp,rbp
   18c61:	jne    18c08 <__sprintf_chk@plt+0xe258>
   18c63:	mov    rdi,r13
   18c66:	call   482c0 <argp_usage@@Base+0x4f40>
   18c6b:	mov    rbp,rax
   18c6e:	jmp    18c08 <__sprintf_chk@plt+0xe258>
   18c70:	cmp    BYTE PTR [r13+0x0],0x2e
   18c75:	mov    r15,r13
   18c78:	je     18c8a <__sprintf_chk@plt+0xe2da>
   18c7a:	jmp    18c4b <__sprintf_chk@plt+0xe29b>
   18c7c:	nop    DWORD PTR [rax+0x0]
   18c80:	add    r15,0x2
   18c84:	cmp    BYTE PTR [r15],0x2e
   18c88:	jne    18c4b <__sprintf_chk@plt+0xe29b>
   18c8a:	cmp    BYTE PTR [r15+0x1],0x2f
   18c8f:	je     18c80 <__sprintf_chk@plt+0xe2d0>
   18c91:	jmp    18c4b <__sprintf_chk@plt+0xe29b>
   18c93:	nop    DWORD PTR [rax+rax*1+0x0]
   18c98:	mov    r14,QWORD PTR [r14+0x198]
   18c9f:	mov    r12d,0x2
   18ca5:	test   r14,r14
   18ca8:	jne    18bf0 <__sprintf_chk@plt+0xe240>
   18cae:	mov    rdi,rbp
   18cb1:	call   9ce0 <free@plt>
   18cb6:	movzx  eax,BYTE PTR [rsp+0xf]
   18cbb:	add    rsp,0x18
   18cbf:	pop    rbx
   18cc0:	pop    rbp
   18cc1:	pop    r12
   18cc3:	pop    r13
   18cc5:	pop    r14
   18cc7:	pop    r15
   18cc9:	ret    
   18cca:	nop    WORD PTR [rax+rax*1+0x0]
   18cd0:	mov    rdi,rbp
   18cd3:	mov    BYTE PTR [rsp+0xf],0x1
   18cd8:	call   9ce0 <free@plt>
   18cdd:	jmp    18cb6 <__sprintf_chk@plt+0xe306>
   18cdf:	nop
   18ce0:	endbr64 
   18ce4:	push   r13
   18ce6:	mov    r13d,edx
   18ce9:	push   r12
   18ceb:	push   rbp
   18cec:	mov    rbp,rsi
   18cef:	push   rbx
   18cf0:	mov    rbx,rdi
   18cf3:	sub    rsp,0x8
   18cf7:	cmp    BYTE PTR [rip+0x66ba2],0x0        # 7f8a0 <obstack_alloc_failed_handler@@Base+0xa68>
   18cfe:	je     18d40 <__sprintf_chk@plt+0xe390>
   18d00:	mov    edi,DWORD PTR [rip+0x6331a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   18d06:	test   rbx,rbx
   18d09:	je     18d11 <__sprintf_chk@plt+0xe361>
   18d0b:	mov    edi,DWORD PTR [rbx+0x1a8]
   18d11:	mov    edx,r13d
   18d14:	mov    rsi,rbp
   18d17:	call   a230 <__openat_2@plt>
   18d1c:	mov    r12d,eax
   18d1f:	test   eax,eax
   18d21:	jns    18d2f <__sprintf_chk@plt+0xe37f>
   18d23:	mov    rdi,rbx
   18d26:	call   136b0 <__sprintf_chk@plt+0x8d00>
   18d2b:	test   al,al
   18d2d:	jne    18d00 <__sprintf_chk@plt+0xe350>
   18d2f:	add    rsp,0x8
   18d33:	mov    eax,r12d
   18d36:	pop    rbx
   18d37:	pop    rbp
   18d38:	pop    r12
   18d3a:	pop    r13
   18d3c:	ret    
   18d3d:	nop    DWORD PTR [rax]
   18d40:	mov    edi,0x2
   18d45:	mov    BYTE PTR [rip+0x66b54],0x1        # 7f8a0 <obstack_alloc_failed_handler@@Base+0xa68>
   18d4c:	call   a8d0 <strerror@plt>
   18d51:	mov    edx,0x5
   18d56:	lea    rsi,[rip+0x52df3]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   18d5d:	xor    edi,edi
   18d5f:	call   a040 <dcgettext@plt>
   18d64:	jmp    18d00 <__sprintf_chk@plt+0xe350>
   18d66:	cs nop WORD PTR [rax+rax*1+0x0]
   18d70:	endbr64 
   18d74:	push   r12
   18d76:	push   rbp
   18d77:	push   rbx
   18d78:	sub    rsp,0xa0
   18d7f:	mov    rbx,QWORD PTR [rdi+0x198]
   18d86:	mov    rax,QWORD PTR fs:0x28
   18d8f:	mov    QWORD PTR [rsp+0x98],rax
   18d97:	xor    eax,eax
   18d99:	test   rbx,rbx
   18d9c:	je     18ddb <__sprintf_chk@plt+0xe42b>
   18d9e:	mov    eax,DWORD PTR [rbx+0x1a8]
   18da4:	test   eax,eax
   18da6:	jne    18ddb <__sprintf_chk@plt+0xe42b>
   18da8:	mov    edi,DWORD PTR [rdi+0x1a8]
   18dae:	mov    edx,DWORD PTR [rip+0x66a44]        # 7f7f8 <obstack_alloc_failed_handler@@Base+0x9c0>
   18db4:	lea    rsi,[rip+0x4e838]        # 675f3 <_obstack_memory_used@@Base+0x1a973>
   18dbb:	call   a230 <__openat_2@plt>
   18dc0:	mov    ebp,eax
   18dc2:	test   eax,eax
   18dc4:	jns    18e40 <__sprintf_chk@plt+0xe490>
   18dc6:	call   9e40 <__errno_location@plt>
   18dcb:	mov    eax,DWORD PTR [rax]
   18dcd:	mov    ebp,eax
   18dcf:	neg    ebp
   18dd1:	test   eax,eax
   18dd3:	jg     18e00 <__sprintf_chk@plt+0xe450>
   18dd5:	mov    DWORD PTR [rbx+0x1a8],ebp
   18ddb:	mov    rax,QWORD PTR [rsp+0x98]
   18de3:	sub    rax,QWORD PTR fs:0x28
   18dec:	jne    18e91 <__sprintf_chk@plt+0xe4e1>
   18df2:	add    rsp,0xa0
   18df9:	pop    rbx
   18dfa:	pop    rbp
   18dfb:	pop    r12
   18dfd:	ret    
   18dfe:	xchg   ax,ax
   18e00:	mov    edx,DWORD PTR [rip+0x669f2]        # 7f7f8 <obstack_alloc_failed_handler@@Base+0x9c0>
   18e06:	mov    rsi,QWORD PTR [rbx]
   18e09:	mov    edi,DWORD PTR [rip+0x63211]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   18e0f:	call   a230 <__openat_2@plt>
   18e14:	mov    r12d,eax
   18e17:	test   eax,eax
   18e19:	js     18dd5 <__sprintf_chk@plt+0xe425>
   18e1b:	mov    rsi,rsp
   18e1e:	mov    edi,ebp
   18e20:	call   a920 <fstat@plt>
   18e25:	test   eax,eax
   18e27:	jne    18e34 <__sprintf_chk@plt+0xe484>
   18e29:	mov    rax,QWORD PTR [rsp+0x8]
   18e2e:	cmp    QWORD PTR [rbx+0x60],rax
   18e32:	je     18e7f <__sprintf_chk@plt+0xe4cf>
   18e34:	mov    edi,r12d
   18e37:	call   a200 <close@plt>
   18e3c:	jmp    18dd5 <__sprintf_chk@plt+0xe425>
   18e3e:	xchg   ax,ax
   18e40:	mov    rsi,rsp
   18e43:	mov    edi,eax
   18e45:	call   a920 <fstat@plt>
   18e4a:	test   eax,eax
   18e4c:	jne    18e59 <__sprintf_chk@plt+0xe4a9>
   18e4e:	mov    rax,QWORD PTR [rsp+0x8]
   18e53:	cmp    QWORD PTR [rbx+0x60],rax
   18e57:	je     18e70 <__sprintf_chk@plt+0xe4c0>
   18e59:	mov    edi,ebp
   18e5b:	mov    ebp,0x2
   18e60:	call   a200 <close@plt>
   18e65:	mov    DWORD PTR [rbx+0x1a8],ebp
   18e6b:	jmp    18ddb <__sprintf_chk@plt+0xe42b>
   18e70:	mov    rax,QWORD PTR [rsp]
   18e74:	cmp    QWORD PTR [rbx+0x58],rax
   18e78:	jne    18e59 <__sprintf_chk@plt+0xe4a9>
   18e7a:	jmp    18dd5 <__sprintf_chk@plt+0xe425>
   18e7f:	mov    rax,QWORD PTR [rsp]
   18e83:	cmp    QWORD PTR [rbx+0x58],rax
   18e87:	jne    18e34 <__sprintf_chk@plt+0xe484>
   18e89:	mov    ebp,r12d
   18e8c:	jmp    18dd5 <__sprintf_chk@plt+0xe425>
   18e91:	call   a0a0 <__stack_chk_fail@plt>
   18e96:	cs nop WORD PTR [rax+rax*1+0x0]
   18ea0:	endbr64 
   18ea4:	push   rbp
   18ea5:	push   rbx
   18ea6:	mov    ebx,edi
   18ea8:	sub    rsp,0x8
   18eac:	mov    rax,QWORD PTR [rip+0x668ad]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
   18eb3:	cmp    BYTE PTR [rip+0x668a2],0x0        # 7f75c <obstack_alloc_failed_handler@@Base+0x924>
   18eba:	mov    rbp,QWORD PTR [rip+0x666c7]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   18ec1:	mov    QWORD PTR [rip+0x666c0],rax        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   18ec8:	jne    18f40 <__sprintf_chk@plt+0xe590>
   18eca:	mov    rdi,QWORD PTR [rip+0x66677]        # 7f548 <obstack_alloc_failed_handler@@Base+0x710>
   18ed1:	add    rdi,QWORD PTR [rip+0x661f8]        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   18ed8:	sub    rdi,QWORD PTR [rip+0x66679]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
   18edf:	je     18ee6 <__sprintf_chk@plt+0xe536>
   18ee1:	call   16aa0 <__sprintf_chk@plt+0xc0f0>
   18ee6:	mov    rdi,QWORD PTR [rip+0x66663]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   18eed:	call   QWORD PTR [rip+0x665f5]        # 7f4e8 <obstack_alloc_failed_handler@@Base+0x6b0>
   18ef3:	mov    QWORD PTR [rip+0x6668e],rbp        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   18efa:	test   ebx,ebx
   18efc:	je     18f26 <__sprintf_chk@plt+0xe576>
   18efe:	cmp    BYTE PTR [rip+0x66857],0x0        # 7f75c <obstack_alloc_failed_handler@@Base+0x924>
   18f05:	jne    18f26 <__sprintf_chk@plt+0xe576>
   18f07:	mov    rdi,QWORD PTR [rip+0x6664a]        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
   18f0e:	mov    rax,QWORD PTR [rip+0x66633]        # 7f548 <obstack_alloc_failed_handler@@Base+0x710>
   18f15:	add    rax,QWORD PTR [rip+0x661b4]        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   18f1c:	sub    rdi,rax
   18f1f:	je     18f26 <__sprintf_chk@plt+0xe576>
   18f21:	call   16aa0 <__sprintf_chk@plt+0xc0f0>
   18f26:	mov    DWORD PTR [rip+0x66828],0x0        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
   18f30:	add    rsp,0x8
   18f34:	pop    rbx
   18f35:	pop    rbp
   18f36:	ret    
   18f37:	nop    WORD PTR [rax+rax*1+0x0]
   18f40:	mov    DWORD PTR [rip+0x66616],0x1        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   18f4a:	mov    rdi,QWORD PTR [rip+0x665ff]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   18f51:	call   QWORD PTR [rip+0x66591]        # 7f4e8 <obstack_alloc_failed_handler@@Base+0x6b0>
   18f57:	mov    DWORD PTR [rip+0x665ff],0x0        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   18f61:	jmp    18ef3 <__sprintf_chk@plt+0xe543>
   18f63:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   18f6e:	xchg   ax,ax
   18f70:	endbr64 
   18f74:	test   rsi,rsi
   18f77:	je     19010 <__sprintf_chk@plt+0xe660>
   18f7d:	push   r12
   18f7f:	mov    r12,rdi
   18f82:	push   rbp
   18f83:	mov    rbp,rsi
   18f86:	push   rbx
   18f87:	xor    ebx,ebx
   18f89:	jmp    18f99 <__sprintf_chk@plt+0xe5e9>
   18f8b:	nop    DWORD PTR [rax+rax*1+0x0]
   18f90:	add    rbx,0x1
   18f94:	cmp    rbp,rbx
   18f97:	je     19007 <__sprintf_chk@plt+0xe657>
   18f99:	mov    rsi,rbx
   18f9c:	movsxd rcx,DWORD PTR [rip+0x667b5]        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
   18fa3:	shl    rsi,0x9
   18fa7:	add    rsi,r12
   18faa:	lea    eax,[rcx+0x1]
   18fad:	shl    rcx,0x9
   18fb1:	add    rcx,QWORD PTR [rip+0x667a8]        # 7f760 <obstack_alloc_failed_handler@@Base+0x928>
   18fb8:	mov    rdx,QWORD PTR [rsi]
   18fbb:	mov    DWORD PTR [rip+0x66797],eax        # 7f758 <obstack_alloc_failed_handler@@Base+0x920>
   18fc1:	lea    rdi,[rcx+0x8]
   18fc5:	and    rdi,0xfffffffffffffff8
   18fc9:	mov    QWORD PTR [rcx],rdx
   18fcc:	mov    rdx,QWORD PTR [rsi+0x1f8]
   18fd3:	mov    QWORD PTR [rcx+0x1f8],rdx
   18fda:	sub    rcx,rdi
   18fdd:	sub    rsi,rcx
   18fe0:	add    ecx,0x200
   18fe6:	shr    ecx,0x3
   18fe9:	cmp    eax,DWORD PTR [rip+0x66541]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   18fef:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   18ff2:	jne    18f90 <__sprintf_chk@plt+0xe5e0>
   18ff4:	mov    edi,0x1
   18ff9:	add    rbx,0x1
   18ffd:	call   18ea0 <__sprintf_chk@plt+0xe4f0>
   19002:	cmp    rbp,rbx
   19005:	jne    18f99 <__sprintf_chk@plt+0xe5e9>
   19007:	pop    rbx
   19008:	pop    rbp
   19009:	pop    r12
   1900b:	ret    
   1900c:	nop    DWORD PTR [rax+0x0]
   19010:	ret    
   19011:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1901c:	nop    DWORD PTR [rax+0x0]
   19020:	endbr64 
   19024:	mov    rax,QWORD PTR [rip+0x6609d]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   1902b:	mov    rdx,QWORD PTR [rip+0x6650e]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   19032:	push   rbx
   19033:	cmp    rax,rdx
   19036:	jb     19050 <__sprintf_chk@plt+0xe6a0>
   19038:	sub    rax,rdx
   1903b:	and    rax,0xfffffffffffffe00
   19041:	lea    rdx,[rdx+rax*1+0x200]
   19049:	mov    QWORD PTR [rip+0x664f0],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   19050:	mov    rax,QWORD PTR [rip+0x66529]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   19057:	cmp    rax,rdx
   1905a:	jb     aa3a <__sprintf_chk@plt+0x8a>
   19060:	mov    rdx,QWORD PTR [rip+0x66341]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   19067:	lea    rbx,[rdx+0x3fe]
   1906e:	add    rdx,0x1ff
   19075:	cmovns rbx,rdx
   19079:	mov    rdx,QWORD PTR [rip+0x664c0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   19080:	sub    rax,rdx
   19083:	sar    rbx,0x9
   19087:	mov    rcx,rax
   1908a:	sar    rcx,0x9
   1908e:	cmp    rbx,rcx
   19091:	jl     190c1 <__sprintf_chk@plt+0xe711>
   19093:	nop    DWORD PTR [rax+rax*1+0x0]
   19098:	sar    rax,0x9
   1909c:	sub    rbx,rax
   1909f:	call   f170 <__sprintf_chk@plt+0x47c0>
   190a4:	mov    rdx,QWORD PTR [rip+0x66495]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   190ab:	mov    rax,QWORD PTR [rip+0x664ce]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   190b2:	sub    rax,rdx
   190b5:	mov    rcx,rax
   190b8:	sar    rcx,0x9
   190bc:	cmp    rcx,rbx
   190bf:	jle    19098 <__sprintf_chk@plt+0xe6e8>
   190c1:	shl    rbx,0x9
   190c5:	add    rdx,rbx
   190c8:	pop    rbx
   190c9:	mov    QWORD PTR [rip+0x66470],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   190d0:	ret    
   190d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   190dc:	nop    DWORD PTR [rax+0x0]
   190e0:	endbr64 
   190e4:	push   rax
   190e5:	pop    rax
   190e6:	sub    rsp,0x8
   190ea:	mov    rax,QWORD PTR [rip+0x6679f]        # 7f890 <obstack_alloc_failed_handler@@Base+0xa58>
   190f1:	test   rax,rax
   190f4:	je     190f8 <__sprintf_chk@plt+0xe748>
   190f6:	call   rax
   190f8:	mov    edx,0x5
   190fd:	lea    rsi,[rip+0x4b64c]        # 64750 <_obstack_memory_used@@Base+0x17ad0>
   19104:	xor    edi,edi
   19106:	call   a040 <dcgettext@plt>
   1910b:	xor    esi,esi
   1910d:	mov    edi,0x2
   19112:	mov    rdx,rax
   19115:	xor    eax,eax
   19117:	call   a640 <error@plt>
   1911c:	call   9e30 <abort@plt>
   19121:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1912c:	nop    DWORD PTR [rax+0x0]
   19130:	endbr64 
   19134:	push   rax
   19135:	pop    rax
   19136:	mov    edx,0x5
   1913b:	lea    rsi,[rip+0x4a383]        # 634c5 <_obstack_memory_used@@Base+0x16845>
   19142:	xor    edi,edi
   19144:	sub    rsp,0x8
   19148:	call   a040 <dcgettext@plt>
   1914d:	lea    rdx,[rip+0x52c03]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   19154:	xor    esi,esi
   19156:	xor    edi,edi
   19158:	mov    rcx,rax
   1915b:	xor    eax,eax
   1915d:	call   a640 <error@plt>
   19162:	call   190e0 <__sprintf_chk@plt+0xe730>
   19167:	nop    WORD PTR [rax+rax*1+0x0]
   19170:	push   r12
   19172:	push   rbp
   19173:	push   rbx
   19174:	sub    rsp,0x20
   19178:	mov    rax,QWORD PTR fs:0x28
   19181:	mov    QWORD PTR [rsp+0x18],rax
   19186:	xor    eax,eax
   19188:	cmp    BYTE PTR [rip+0x66622],0x0        # 7f7b1 <obstack_alloc_failed_handler@@Base+0x979>
   1918f:	jne    191a1 <__sprintf_chk@plt+0xe7f1>
   19191:	mov    rax,QWORD PTR [rip+0x66710]        # 7f8a8 <obstack_alloc_failed_handler@@Base+0xa70>
   19198:	mov    rbx,rdi
   1919b:	cmp    QWORD PTR [rdi+0x68],rax
   1919f:	ja     191c0 <__sprintf_chk@plt+0xe810>
   191a1:	mov    rax,QWORD PTR [rsp+0x18]
   191a6:	sub    rax,QWORD PTR fs:0x28
   191af:	jne    192f4 <__sprintf_chk@plt+0xe944>
   191b5:	add    rsp,0x20
   191b9:	pop    rbx
   191ba:	pop    rbp
   191bb:	pop    r12
   191bd:	ret    
   191be:	xchg   ax,ax
   191c0:	mov    rdi,QWORD PTR [rdi]
   191c3:	movzx  edx,BYTE PTR [rip+0x665e6]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   191ca:	mov    esi,0x1
   191cf:	mov    QWORD PTR [rsp+0x8],0x0
   191d8:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   191dd:	mov    rdi,QWORD PTR [rsp+0x8]
   191e2:	mov    rbp,rax
   191e5:	call   9ce0 <free@plt>
   191ea:	test   rbp,rbp
   191ed:	je     1921d <__sprintf_chk@plt+0xe86d>
   191ef:	mov    rdi,rbp
   191f2:	call   a060 <strlen@plt>
   191f7:	lea    r12,[rax+0x1]
   191fb:	mov    rdi,r12
   191fe:	call   a4a0 <malloc@plt>
   19203:	mov    rdi,rax
   19206:	test   rax,rax
   19209:	je     192ef <__sprintf_chk@plt+0xe93f>
   1920f:	mov    rsi,rbp
   19212:	mov    rdx,r12
   19215:	call   a420 <memcpy@plt>
   1921a:	mov    rbp,rax
   1921d:	xor    ecx,ecx
   1921f:	xor    edx,edx
   19221:	mov    esi,0x2
   19226:	mov    QWORD PTR [rsp+0x8],rbp
   1922b:	lea    rdi,[rsp+0x8]
   19230:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   19235:	mov    r12,QWORD PTR [rsp+0x8]
   1923a:	mov    rdi,r12
   1923d:	call   a060 <strlen@plt>
   19242:	lea    rdi,[rax+0x19]
   19246:	call   a4a0 <malloc@plt>
   1924b:	mov    rbp,rax
   1924e:	test   rax,rax
   19251:	je     192ef <__sprintf_chk@plt+0xe93f>
   19257:	mov    rax,QWORD PTR [rbx+0x60]
   1925b:	lea    rdi,[rbp+0x18]
   1925f:	mov    rsi,r12
   19262:	mov    QWORD PTR [rbp+0x8],rax
   19266:	mov    rax,QWORD PTR [rbx+0x58]
   1926a:	mov    QWORD PTR [rbp+0x0],rax
   1926e:	mov    rax,QWORD PTR [rbx+0x68]
   19272:	mov    QWORD PTR [rbp+0x10],rax
   19276:	call   9e80 <strcpy@plt>
   1927b:	mov    rdi,r12
   1927e:	call   9ce0 <free@plt>
   19283:	mov    rdi,QWORD PTR [rip+0x6651e]        # 7f7a8 <obstack_alloc_failed_handler@@Base+0x970>
   1928a:	test   rdi,rdi
   1928d:	je     192c8 <__sprintf_chk@plt+0xe918>
   1928f:	lea    rdx,[rsp+0x10]
   19294:	mov    rsi,rbp
   19297:	call   49270 <argp_usage@@Base+0x5ef0>
   1929c:	cmp    eax,0xffffffff
   1929f:	je     192ef <__sprintf_chk@plt+0xe93f>
   192a1:	test   eax,eax
   192a3:	jne    192b8 <__sprintf_chk@plt+0xe908>
   192a5:	mov    rax,QWORD PTR [rsp+0x10]
   192aa:	test   rax,rax
   192ad:	je     192ef <__sprintf_chk@plt+0xe93f>
   192af:	cmp    rbp,rax
   192b2:	jne    aa3f <__sprintf_chk@plt+0x8f>
   192b8:	sub    QWORD PTR [rbp+0x10],0x1
   192bd:	jmp    191a1 <__sprintf_chk@plt+0xe7f1>
   192c2:	nop    WORD PTR [rax+rax*1+0x0]
   192c8:	xor    r8d,r8d
   192cb:	lea    rcx,[rip+0xffffffffffffd52e]        # 16800 <__sprintf_chk@plt+0xbe50>
   192d2:	lea    rdx,[rip+0xffffffffffffd507]        # 167e0 <__sprintf_chk@plt+0xbe30>
   192d9:	xor    esi,esi
   192db:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   192e0:	mov    QWORD PTR [rip+0x664c1],rax        # 7f7a8 <obstack_alloc_failed_handler@@Base+0x970>
   192e7:	mov    rdi,rax
   192ea:	test   rax,rax
   192ed:	jne    1928f <__sprintf_chk@plt+0xe8df>
   192ef:	call   19130 <__sprintf_chk@plt+0xe780>
   192f4:	call   a0a0 <__stack_chk_fail@plt>
   192f9:	nop    DWORD PTR [rax+0x0]
   19300:	endbr64 
   19304:	push   r15
   19306:	push   r14
   19308:	push   r13
   1930a:	mov    r13,rcx
   1930d:	push   r12
   1930f:	mov    r12,rdi
   19312:	push   rbp
   19313:	mov    rbp,rsi
   19316:	push   rbx
   19317:	mov    ebx,edx
   19319:	sub    rsp,0x18
   1931d:	call   a980 <__ctype_b_loc@plt>
   19322:	mov    r14,QWORD PTR [rax]
   19325:	jmp    19334 <__sprintf_chk@plt+0xe984>
   19327:	nop    WORD PTR [rax+rax*1+0x0]
   19330:	add    rbp,0x1
   19334:	movsx  rdx,BYTE PTR [rbp+0x0]
   19339:	test   BYTE PTR [r14+rdx*2+0x1],0x20
   1933f:	jne    19330 <__sprintf_chk@plt+0xe980>
   19341:	test   dl,dl
   19343:	je     19405 <__sprintf_chk@plt+0xea55>
   19349:	cmp    dl,0x23
   1934c:	je     19405 <__sprintf_chk@plt+0xea55>
   19352:	mov    edx,0x7
   19357:	lea    rsi,[rip+0x4ae44]        # 641a2 <_obstack_memory_used@@Base+0x17522>
   1935e:	mov    rdi,rbp
   19361:	call   9e50 <strncmp@plt>
   19366:	test   eax,eax
   19368:	je     193c0 <__sprintf_chk@plt+0xea10>
   1936a:	mov    rdi,rbp
   1936d:	call   a060 <strlen@plt>
   19372:	cmp    BYTE PTR [rbp+rax*1-0x1],0x2f
   19377:	mov    r14,rax
   1937a:	lea    rdx,[rax-0x1]
   1937e:	je     19435 <__sprintf_chk@plt+0xea85>
   19384:	mov    edx,DWORD PTR [r13+0x0]
   19388:	mov    eax,ebx
   1938a:	and    ebx,0xf7ffffff
   19390:	mov    rsi,rbp
   19393:	and    eax,0xefffffff
   19398:	mov    rdi,r12
   1939b:	cmp    edx,0x8000000
   193a1:	cmove  ebx,eax
   193a4:	add    rsp,0x18
   193a8:	or     edx,ebx
   193aa:	pop    rbx
   193ab:	pop    rbp
   193ac:	pop    r12
   193ae:	pop    r13
   193b0:	pop    r14
   193b2:	pop    r15
   193b4:	jmp    519e0 <_obstack_memory_used@@Base+0x4d60>
   193b9:	nop    DWORD PTR [rax+0x0]
   193c0:	movsx  rax,BYTE PTR [rbp+0x7]
   193c5:	lea    r12,[rbp+0x7]
   193c9:	test   BYTE PTR [r14+rax*2+0x1],0x20
   193cf:	je     193ea <__sprintf_chk@plt+0xea3a>
   193d1:	nop    DWORD PTR [rax+0x0]
   193d8:	movsx  rax,BYTE PTR [r12+0x1]
   193de:	add    r12,0x1
   193e2:	test   BYTE PTR [r14+rax*2+0x1],0x20
   193e8:	jne    193d8 <__sprintf_chk@plt+0xea28>
   193ea:	lea    rsi,[rip+0x4adb9]        # 641aa <_obstack_memory_used@@Base+0x1752a>
   193f1:	mov    rdi,r12
   193f4:	call   a320 <strcmp@plt>
   193f9:	test   eax,eax
   193fb:	jne    19418 <__sprintf_chk@plt+0xea68>
   193fd:	mov    DWORD PTR [r13+0x0],0x8000000
   19405:	add    rsp,0x18
   19409:	pop    rbx
   1940a:	pop    rbp
   1940b:	pop    r12
   1940d:	pop    r13
   1940f:	pop    r14
   19411:	pop    r15
   19413:	ret    
   19414:	nop    DWORD PTR [rax+0x0]
   19418:	lea    rsi,[rip+0x4ad92]        # 641b1 <_obstack_memory_used@@Base+0x17531>
   1941f:	mov    rdi,r12
   19422:	call   a320 <strcmp@plt>
   19427:	test   eax,eax
   19429:	jne    19405 <__sprintf_chk@plt+0xea55>
   1942b:	mov    DWORD PTR [r13+0x0],0x10000000
   19433:	jmp    19405 <__sprintf_chk@plt+0xea55>
   19435:	mov    rdi,rax
   19438:	mov    QWORD PTR [rsp+0x8],rdx
   1943d:	call   a4a0 <malloc@plt>
   19442:	mov    rdx,QWORD PTR [rsp+0x8]
   19447:	test   rax,rax
   1944a:	mov    r15,rax
   1944d:	je     1948e <__sprintf_chk@plt+0xeade>
   1944f:	mov    rdi,rax
   19452:	mov    rsi,rbp
   19455:	call   a420 <memcpy@plt>
   1945a:	mov    edi,0x10
   1945f:	mov    BYTE PTR [r15+r14*1-0x1],0x0
   19465:	call   a4a0 <malloc@plt>
   1946a:	test   rax,rax
   1946d:	je     1948e <__sprintf_chk@plt+0xeade>
   1946f:	mov    rdx,QWORD PTR [r12+0x8]
   19474:	mov    QWORD PTR [rax+0x8],r15
   19478:	or     ebx,0x4000008
   1947e:	mov    rbp,r15
   19481:	mov    QWORD PTR [r12+0x8],rax
   19486:	mov    QWORD PTR [rax],rdx
   19489:	jmp    19384 <__sprintf_chk@plt+0xe9d4>
   1948e:	call   19130 <__sprintf_chk@plt+0xe780>
   19493:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1949e:	xchg   ax,ax
   194a0:	push   r12
   194a2:	mov    r12,rsi
   194a5:	push   rbp
   194a6:	mov    rbp,rdx
   194a9:	xor    edx,edx
   194ab:	push   rbx
   194ac:	mov    rbx,rdi
   194af:	mov    rdi,rbp
   194b2:	sub    rsp,0x10
   194b6:	mov    rax,QWORD PTR fs:0x28
   194bf:	mov    QWORD PTR [rsp+0x8],rax
   194c4:	xor    eax,eax
   194c6:	mov    rsi,rsp
   194c9:	call   25850 <__sprintf_chk@plt+0x1aea0>
   194ce:	test   rdx,rdx
   194d1:	js     194dc <__sprintf_chk@plt+0xeb2c>
   194d3:	mov    rdx,QWORD PTR [rsp]
   194d7:	cmp    BYTE PTR [rdx],0x0
   194da:	je     19530 <__sprintf_chk@plt+0xeb80>
   194dc:	mov    rax,QWORD PTR [rip+0x66025]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   194e3:	test   rax,rax
   194e6:	je     194ea <__sprintf_chk@plt+0xeb3a>
   194e8:	call   rax
   194ea:	mov    edx,0x5
   194ef:	lea    rsi,[rip+0x4b282]        # 64778 <_obstack_memory_used@@Base+0x17af8>
   194f6:	xor    edi,edi
   194f8:	call   a040 <dcgettext@plt>
   194fd:	xor    esi,esi
   194ff:	xor    edi,edi
   19501:	mov    rdx,rax
   19504:	xor    eax,eax
   19506:	call   a640 <error@plt>
   1950b:	mov    DWORD PTR [rip+0x65baf],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   19515:	mov    rax,QWORD PTR [rsp+0x8]
   1951a:	sub    rax,QWORD PTR fs:0x28
   19523:	jne    19568 <__sprintf_chk@plt+0xebb8>
   19525:	add    rsp,0x10
   19529:	pop    rbx
   1952a:	pop    rbp
   1952b:	pop    r12
   1952d:	ret    
   1952e:	xchg   ax,ax
   19530:	mov    QWORD PTR [r12],rax
   19534:	mov    rdi,QWORD PTR [rbx]
   19537:	call   9ce0 <free@plt>
   1953c:	mov    rdi,rbp
   1953f:	call   a060 <strlen@plt>
   19544:	lea    r12,[rax+0x1]
   19548:	mov    rdi,r12
   1954b:	call   a4a0 <malloc@plt>
   19550:	mov    rdi,rax
   19553:	test   rax,rax
   19556:	je     1956d <__sprintf_chk@plt+0xebbd>
   19558:	mov    rdx,r12
   1955b:	mov    rsi,rbp
   1955e:	call   a420 <memcpy@plt>
   19563:	mov    QWORD PTR [rbx],rax
   19566:	jmp    19515 <__sprintf_chk@plt+0xeb65>
   19568:	call   a0a0 <__stack_chk_fail@plt>
   1956d:	call   19130 <__sprintf_chk@plt+0xe780>
   19572:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1957d:	nop    DWORD PTR [rax]
   19580:	push   r15
   19582:	push   r14
   19584:	mov    r14,rdx
   19587:	push   r13
   19589:	mov    r13,rdi
   1958c:	push   r12
   1958e:	mov    r12,rcx
   19591:	push   rbp
   19592:	mov    rbp,r8
   19595:	push   rbx
   19596:	sub    rsp,0x8
   1959a:	mov    rax,QWORD PTR [rsi]
   1959d:	mov    r15,QWORD PTR [rdi]
   195a0:	add    rax,0x1
   195a4:	mov    rdi,r15
   195a7:	mov    QWORD PTR [rsi],rax
   195aa:	lea    rbx,[rax+rax*2]
   195ae:	shl    rbx,0x3
   195b2:	mov    rsi,rbx
   195b5:	call   a570 <realloc@plt>
   195ba:	test   rax,rax
   195bd:	je     19628 <__sprintf_chk@plt+0xec78>
   195bf:	mov    QWORD PTR [r13+0x0],rax
   195c3:	mov    rdi,r14
   195c6:	lea    rbx,[rax+rbx*1-0x18]
   195cb:	call   a060 <strlen@plt>
   195d0:	lea    r13,[rax+0x1]
   195d4:	mov    rdi,r13
   195d7:	call   a4a0 <malloc@plt>
   195dc:	mov    rdi,rax
   195df:	test   rax,rax
   195e2:	je     19632 <__sprintf_chk@plt+0xec82>
   195e4:	mov    rdx,r13
   195e7:	mov    rsi,r14
   195ea:	lea    r13,[rbp+0x1]
   195ee:	call   a420 <memcpy@plt>
   195f3:	mov    rdi,r13
   195f6:	mov    QWORD PTR [rbx],rax
   195f9:	call   a4a0 <malloc@plt>
   195fe:	mov    rdi,rax
   19601:	test   rax,rax
   19604:	je     19632 <__sprintf_chk@plt+0xec82>
   19606:	mov    rdx,r13
   19609:	mov    rsi,r12
   1960c:	call   a420 <memcpy@plt>
   19611:	mov    QWORD PTR [rbx+0x10],rbp
   19615:	mov    QWORD PTR [rbx+0x8],rax
   19619:	add    rsp,0x8
   1961d:	pop    rbx
   1961e:	pop    rbp
   1961f:	pop    r12
   19621:	pop    r13
   19623:	pop    r14
   19625:	pop    r15
   19627:	ret    
   19628:	test   rbx,rbx
   1962b:	jne    19632 <__sprintf_chk@plt+0xec82>
   1962d:	test   r15,r15
   19630:	jne    195bf <__sprintf_chk@plt+0xec0f>
   19632:	call   19130 <__sprintf_chk@plt+0xe780>
   19637:	nop    WORD PTR [rax+rax*1+0x0]
   19640:	push   r15
   19642:	push   r14
   19644:	mov    r14d,edx
   19647:	push   r13
   19649:	push   r12
   1964b:	push   rbp
   1964c:	mov    rbp,rdi
   1964f:	push   rbx
   19650:	mov    rbx,rsi
   19653:	sub    rsp,0xc8
   1965a:	mov    DWORD PTR [rsp+0xc],ecx
   1965e:	mov    DWORD PTR [rsp+0x14],r8d
   19663:	mov    DWORD PTR [rsp+0x10],r9d
   19668:	mov    rax,QWORD PTR fs:0x28
   19671:	mov    QWORD PTR [rsp+0xb8],rax
   19679:	xor    eax,eax
   1967b:	call   a060 <strlen@plt>
   19680:	mov    r12,QWORD PTR [rip+0x660b9]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   19687:	mov    QWORD PTR [rsp+0x18],rax
   1968c:	test   r12,r12
   1968f:	je     199b8 <__sprintf_chk@plt+0xf008>
   19695:	mov    r15,r12
   19698:	jmp    196ac <__sprintf_chk@plt+0xecfc>
   1969a:	nop    WORD PTR [rax+rax*1+0x0]
   196a0:	mov    r15,QWORD PTR [r15]
   196a3:	test   r15,r15
   196a6:	je     199b8 <__sprintf_chk@plt+0xf008>
   196ac:	mov    r13,QWORD PTR [r15+0xa0]
   196b3:	mov    rsi,rbp
   196b6:	mov    rdi,r13
   196b9:	call   a320 <strcmp@plt>
   196be:	test   eax,eax
   196c0:	jne    196a0 <__sprintf_chk@plt+0xecf0>
   196c2:	cmp    BYTE PTR [r15+0x50],0x0
   196c7:	jne    19968 <__sprintf_chk@plt+0xefb8>
   196cd:	mov    eax,DWORD PTR [rsp+0x14]
   196d1:	mov    DWORD PTR [r15+0x18],eax
   196d5:	test   rbx,rbx
   196d8:	je     198c0 <__sprintf_chk@plt+0xef10>
   196de:	mov    eax,DWORD PTR [rbx+0x74]
   196e1:	movdqu xmm0,XMMWORD PTR [rbx+0xe8]
   196e9:	movdqu xmm1,XMMWORD PTR [rbx+0xf8]
   196f1:	mov    r12,QWORD PTR [rbx+0x30]
   196f5:	mov    DWORD PTR [r15+0x1c],eax
   196f9:	mov    eax,DWORD PTR [rbx+0x78]
   196fc:	mov    DWORD PTR [r15+0x48],r14d
   19700:	mov    DWORD PTR [r15+0x20],eax
   19704:	mov    eax,DWORD PTR [rsp+0xc]
   19708:	mov    BYTE PTR [r15+0x50],0x0
   1970d:	mov    DWORD PTR [r15+0x4c],eax
   19711:	mov    eax,DWORD PTR [rsp+0x10]
   19715:	mov    QWORD PTR [r15+0x60],0x0
   1971d:	mov    DWORD PTR [r15+0x54],eax
   19721:	mov    eax,DWORD PTR [rip+0x660a1]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   19727:	movups XMMWORD PTR [r15+0x28],xmm0
   1972c:	mov    DWORD PTR [r15+0x5c],eax
   19730:	movups XMMWORD PTR [r15+0x38],xmm1
   19735:	test   r12,r12
   19738:	je     19768 <__sprintf_chk@plt+0xedb8>
   1973a:	mov    rdi,r12
   1973d:	call   a060 <strlen@plt>
   19742:	lea    r13,[rax+0x1]
   19746:	mov    rdi,r13
   19749:	call   a4a0 <malloc@plt>
   1974e:	mov    rdi,rax
   19751:	test   rax,rax
   19754:	je     19a39 <__sprintf_chk@plt+0xf089>
   1975a:	mov    rsi,r12
   1975d:	mov    rdx,r13
   19760:	call   a420 <memcpy@plt>
   19765:	mov    r12,rax
   19768:	mov    QWORD PTR [r15+0x60],r12
   1976c:	mov    r13,QWORD PTR [rbx+0x38]
   19770:	test   r13,r13
   19773:	je     19890 <__sprintf_chk@plt+0xeee0>
   19779:	mov    r12,QWORD PTR [rbx+0x40]
   1977d:	lea    r14,[r12+0x1]
   19782:	mov    rdi,r14
   19785:	call   a4a0 <malloc@plt>
   1978a:	mov    rdi,rax
   1978d:	test   rax,rax
   19790:	je     19a39 <__sprintf_chk@plt+0xf089>
   19796:	mov    rdx,r14
   19799:	mov    rsi,r13
   1979c:	call   a420 <memcpy@plt>
   197a1:	mov    QWORD PTR [r15+0x70],r12
   197a5:	mov    r12,QWORD PTR [rbx+0x48]
   197a9:	mov    QWORD PTR [r15+0x68],rax
   197ad:	test   r12,r12
   197b0:	je     198ad <__sprintf_chk@plt+0xeefd>
   197b6:	mov    r13,QWORD PTR [rbx+0x50]
   197ba:	lea    r14,[r13+0x1]
   197be:	mov    rdi,r14
   197c1:	call   a4a0 <malloc@plt>
   197c6:	mov    rdi,rax
   197c9:	test   rax,rax
   197cc:	je     19a39 <__sprintf_chk@plt+0xf089>
   197d2:	mov    rsi,r12
   197d5:	mov    rdx,r14
   197d8:	call   a420 <memcpy@plt>
   197dd:	mov    r12,rax
   197e0:	mov    QWORD PTR [r15+0x80],r13
   197e7:	lea    r14,[r15+0x90]
   197ee:	lea    r13,[r15+0x88]
   197f5:	mov    QWORD PTR [r15+0x88],0x0
   19800:	cmp    QWORD PTR [rbx+0x158],0x0
   19808:	mov    QWORD PTR [r15+0x78],r12
   1980c:	mov    QWORD PTR [r15+0x90],0x0
   19817:	je     19852 <__sprintf_chk@plt+0xeea2>
   19819:	xor    r12d,r12d
   1981c:	nop    DWORD PTR [rax+0x0]
   19820:	mov    rax,QWORD PTR [rbx+0x160]
   19827:	lea    rdx,[r12+r12*2]
   1982b:	mov    rsi,r13
   1982e:	mov    rdi,r14
   19831:	add    r12,0x1
   19835:	lea    rax,[rax+rdx*8]
   19839:	mov    rcx,QWORD PTR [rax+0x8]
   1983d:	mov    r8,QWORD PTR [rax+0x10]
   19841:	mov    rdx,QWORD PTR [rax]
   19844:	call   19580 <__sprintf_chk@plt+0xebd0>
   19849:	cmp    r12,QWORD PTR [rbx+0x158]
   19850:	jb     19820 <__sprintf_chk@plt+0xee70>
   19852:	mov    rdi,rbp
   19855:	call   25a40 <__sprintf_chk@plt+0x1b090>
   1985a:	test   al,al
   1985c:	jne    19934 <__sprintf_chk@plt+0xef84>
   19862:	mov    rax,QWORD PTR [rsp+0xb8]
   1986a:	sub    rax,QWORD PTR fs:0x28
   19873:	jne    19a3e <__sprintf_chk@plt+0xf08e>
   19879:	add    rsp,0xc8
   19880:	pop    rbx
   19881:	pop    rbp
   19882:	pop    r12
   19884:	pop    r13
   19886:	pop    r14
   19888:	pop    r15
   1988a:	ret    
   1988b:	nop    DWORD PTR [rax+rax*1+0x0]
   19890:	mov    r12,QWORD PTR [rbx+0x48]
   19894:	mov    QWORD PTR [r15+0x68],0x0
   1989c:	mov    QWORD PTR [r15+0x70],0x0
   198a4:	test   r12,r12
   198a7:	jne    197b6 <__sprintf_chk@plt+0xee06>
   198ad:	xor    r13d,r13d
   198b0:	jmp    197e0 <__sprintf_chk@plt+0xee30>
   198b5:	mov    eax,DWORD PTR [rsp+0x14]
   198b9:	mov    DWORD PTR [r15+0x18],eax
   198bd:	nop    DWORD PTR [rax]
   198c0:	mov    eax,DWORD PTR [rsp+0xc]
   198c4:	mov    DWORD PTR [r15+0x48],r14d
   198c8:	mov    rdi,rbp
   198cb:	mov    BYTE PTR [r15+0x50],0x1
   198d0:	mov    DWORD PTR [r15+0x4c],eax
   198d4:	mov    eax,DWORD PTR [rsp+0x10]
   198d8:	mov    QWORD PTR [r15+0x60],0x0
   198e0:	mov    DWORD PTR [r15+0x54],eax
   198e4:	mov    eax,DWORD PTR [rip+0x65ede]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   198ea:	mov    QWORD PTR [r15+0x68],0x0
   198f2:	mov    DWORD PTR [r15+0x5c],eax
   198f6:	mov    QWORD PTR [r15+0x70],0x0
   198fe:	mov    QWORD PTR [r15+0x78],0x0
   19906:	mov    QWORD PTR [r15+0x80],0x0
   19911:	mov    QWORD PTR [r15+0x90],0x0
   1991c:	mov    QWORD PTR [r15+0x88],0x0
   19927:	call   25a40 <__sprintf_chk@plt+0x1b090>
   1992c:	test   al,al
   1992e:	je     19862 <__sprintf_chk@plt+0xeeb2>
   19934:	mov    rax,QWORD PTR [rsp+0xb8]
   1993c:	sub    rax,QWORD PTR fs:0x28
   19945:	jne    19a3e <__sprintf_chk@plt+0xf08e>
   1994b:	add    rsp,0xc8
   19952:	mov    rdi,r15
   19955:	pop    rbx
   19956:	pop    rbp
   19957:	pop    r12
   19959:	pop    r13
   1995b:	pop    r14
   1995d:	pop    r15
   1995f:	jmp    16860 <__sprintf_chk@plt+0xbeb0>
   19964:	nop    DWORD PTR [rax+0x0]
   19968:	mov    ecx,DWORD PTR [r15+0x54]
   1996c:	mov    edi,DWORD PTR [rip+0x626ae]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   19972:	lea    rdx,[rsp+0x20]
   19977:	mov    rsi,r13
   1997a:	call   a960 <fstatat@plt>
   1997f:	test   eax,eax
   19981:	jne    1999a <__sprintf_chk@plt+0xefea>
   19983:	mov    rax,QWORD PTR [rsp+0x20]
   19988:	mov    QWORD PTR [r15+0x8],rax
   1998c:	mov    rax,QWORD PTR [rsp+0x28]
   19991:	mov    QWORD PTR [r15+0x10],rax
   19995:	jmp    196cd <__sprintf_chk@plt+0xed1d>
   1999a:	mov    rsi,QWORD PTR [r15+0xa0]
   199a1:	lea    rdi,[rip+0x4969b]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   199a8:	call   3bad0 <__sprintf_chk@plt+0x31120>
   199ad:	jmp    196cd <__sprintf_chk@plt+0xed1d>
   199b2:	nop    WORD PTR [rax+rax*1+0x0]
   199b8:	mov    edi,0xa8
   199bd:	call   a4a0 <malloc@plt>
   199c2:	mov    r15,rax
   199c5:	test   rax,rax
   199c8:	je     19a39 <__sprintf_chk@plt+0xf089>
   199ca:	mov    rax,QWORD PTR [rsp+0x18]
   199cf:	mov    QWORD PTR [r15],r12
   199d2:	mov    rdi,rbp
   199d5:	mov    QWORD PTR [rip+0x65d64],r15        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   199dc:	mov    QWORD PTR [r15+0x98],rax
   199e3:	call   a060 <strlen@plt>
   199e8:	lea    r12,[rax+0x1]
   199ec:	mov    rdi,r12
   199ef:	call   a4a0 <malloc@plt>
   199f4:	mov    rdi,rax
   199f7:	test   rax,rax
   199fa:	je     19a39 <__sprintf_chk@plt+0xf089>
   199fc:	mov    rdx,r12
   199ff:	mov    rsi,rbp
   19a02:	call   a420 <memcpy@plt>
   19a07:	mov    BYTE PTR [r15+0x58],0x0
   19a0c:	mov    QWORD PTR [r15+0xa0],rax
   19a13:	test   rbx,rbx
   19a16:	je     198b5 <__sprintf_chk@plt+0xef05>
   19a1c:	mov    rax,QWORD PTR [rbx+0x58]
   19a20:	mov    QWORD PTR [r15+0x8],rax
   19a24:	mov    rax,QWORD PTR [rbx+0x60]
   19a28:	mov    QWORD PTR [r15+0x10],rax
   19a2c:	mov    eax,DWORD PTR [rsp+0x14]
   19a30:	mov    DWORD PTR [r15+0x18],eax
   19a34:	jmp    196de <__sprintf_chk@plt+0xed2e>
   19a39:	call   19130 <__sprintf_chk@plt+0xe780>
   19a3e:	call   a0a0 <__stack_chk_fail@plt>
   19a43:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   19a4e:	xchg   ax,ax
   19a50:	push   r15
   19a52:	push   r14
   19a54:	push   r13
   19a56:	mov    r13,rdi
   19a59:	push   r12
   19a5b:	movabs r12,0xcccccccccccccccd
   19a65:	push   rbp
   19a66:	mov    rbp,rsi
   19a69:	push   rbx
   19a6a:	mov    rbx,rdi
   19a6d:	sub    rsp,0xc8
   19a74:	mov    rax,QWORD PTR fs:0x28
   19a7d:	mov    QWORD PTR [rsp+0xb8],rax
   19a85:	xor    eax,eax
   19a87:	cmp    BYTE PTR [rdi],0x0
   19a8a:	je     19b40 <__sprintf_chk@plt+0xf190>
   19a90:	movzx  eax,BYTE PTR [rbx+0x1]
   19a94:	add    rbx,0x1
   19a98:	test   al,al
   19a9a:	je     19b40 <__sprintf_chk@plt+0xf190>
   19aa0:	cmp    al,0x2f
   19aa2:	jne    19a90 <__sprintf_chk@plt+0xf0e0>
   19aa4:	cmp    r13,rbx
   19aa7:	je     19a90 <__sprintf_chk@plt+0xf0e0>
   19aa9:	movzx  eax,BYTE PTR [rbx-0x1]
   19aad:	cmp    al,0x2f
   19aaf:	je     19a90 <__sprintf_chk@plt+0xf0e0>
   19ab1:	cmp    al,0x2e
   19ab3:	je     19b70 <__sprintf_chk@plt+0xf1c0>
   19ab9:	mov    BYTE PTR [rbx],0x0
   19abc:	mov    r8d,DWORD PTR [rip+0x65c79]        # 7f73c <obstack_alloc_failed_handler@@Base+0x904>
   19ac3:	not    r8d
   19ac6:	and    r8d,0x1ff
   19acd:	cmp    BYTE PTR [rip+0x65c65],0x0        # 7f739 <obstack_alloc_failed_handler@@Base+0x901>
   19ad4:	mov    r14d,r8d
   19ad7:	mov    r15d,r8d
   19ada:	jne    19ae0 <__sprintf_chk@plt+0xf130>
   19adc:	or     r15b,0xc0
   19ae0:	mov    edi,DWORD PTR [rip+0x6253a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   19ae6:	mov    edx,r15d
   19ae9:	mov    rsi,r13
   19aec:	call   a3d0 <mkdirat@plt>
   19af1:	test   eax,eax
   19af3:	je     19bb0 <__sprintf_chk@plt+0xf200>
   19af9:	call   9e40 <__errno_location@plt>
   19afe:	mov    r15d,DWORD PTR [rax]
   19b01:	mov    r14,rax
   19b04:	cmp    r15d,0x11
   19b08:	je     19b27 <__sprintf_chk@plt+0xf177>
   19b0a:	mov    edi,DWORD PTR [rip+0x62510]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   19b10:	xor    ecx,ecx
   19b12:	lea    rdx,[rsp+0x20]
   19b17:	mov    rsi,r13
   19b1a:	call   a960 <fstatat@plt>
   19b1f:	test   eax,eax
   19b21:	jne    19c80 <__sprintf_chk@plt+0xf2d0>
   19b27:	mov    BYTE PTR [rbx],0x2f
   19b2a:	movzx  eax,BYTE PTR [rbx+0x1]
   19b2e:	add    rbx,0x1
   19b32:	test   al,al
   19b34:	jne    19aa0 <__sprintf_chk@plt+0xf0f0>
   19b3a:	nop    WORD PTR [rax+rax*1+0x0]
   19b40:	xor    eax,eax
   19b42:	mov    rdx,QWORD PTR [rsp+0xb8]
   19b4a:	sub    rdx,QWORD PTR fs:0x28
   19b53:	jne    19d2e <__sprintf_chk@plt+0xf37e>
   19b59:	add    rsp,0xc8
   19b60:	pop    rbx
   19b61:	pop    rbp
   19b62:	pop    r12
   19b64:	pop    r13
   19b66:	pop    r14
   19b68:	pop    r15
   19b6a:	ret    
   19b6b:	nop    DWORD PTR [rax+rax*1+0x0]
   19b70:	lea    rax,[r13+0x1]
   19b74:	cmp    rbx,rax
   19b77:	je     19a90 <__sprintf_chk@plt+0xf0e0>
   19b7d:	movzx  eax,BYTE PTR [rbx-0x2]
   19b81:	cmp    al,0x2f
   19b83:	je     19a90 <__sprintf_chk@plt+0xf0e0>
   19b89:	cmp    al,0x2e
   19b8b:	jne    19ab9 <__sprintf_chk@plt+0xf109>
   19b91:	lea    rax,[r13+0x2]
   19b95:	cmp    rbx,rax
   19b98:	je     19a90 <__sprintf_chk@plt+0xf0e0>
   19b9e:	cmp    BYTE PTR [rbx-0x3],0x2f
   19ba2:	jne    19ab9 <__sprintf_chk@plt+0xf109>
   19ba8:	jmp    19a90 <__sprintf_chk@plt+0xf0e0>
   19bad:	nop    DWORD PTR [rax]
   19bb0:	mov    edx,DWORD PTR [rip+0x65b92]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   19bb6:	xor    esi,esi
   19bb8:	mov    r8d,r14d
   19bbb:	mov    ecx,0x1ff
   19bc0:	mov    r9d,0x100
   19bc6:	mov    rdi,r13
   19bc9:	not    edx
   19bcb:	and    edx,r15d
   19bce:	call   19640 <__sprintf_chk@plt+0xec90>
   19bd3:	cmp    DWORD PTR [rip+0x654e6],0x1        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   19bda:	jg     19bf0 <__sprintf_chk@plt+0xf240>
   19bdc:	mov    BYTE PTR [rbp+0x0],0x1
   19be0:	mov    BYTE PTR [rbx],0x2f
   19be3:	jmp    19a90 <__sprintf_chk@plt+0xf0e0>
   19be8:	nop    DWORD PTR [rax+rax*1+0x0]
   19bf0:	lea    rsi,[rsp+0x16]
   19bf5:	mov    edi,r14d
   19bf8:	mov    BYTE PTR [rsp+0x15],0x64
   19bfd:	call   3b9c0 <__sprintf_chk@plt+0x31010>
   19c02:	cmp    BYTE PTR [rip+0x65b2f],0x0        # 7f738 <obstack_alloc_failed_handler@@Base+0x900>
   19c09:	jne    19ca8 <__sprintf_chk@plt+0xf2f8>
   19c0f:	lea    rdx,[rip+0x6536a]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   19c16:	mov    rsi,r13
   19c19:	xor    edi,edi
   19c1b:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   19c20:	mov    edx,0x5
   19c25:	lea    rsi,[rip+0x4a595]        # 641c1 <_obstack_memory_used@@Base+0x17541>
   19c2c:	xor    edi,edi
   19c2e:	mov    r14,rax
   19c31:	call   a040 <dcgettext@plt>
   19c36:	lea    rcx,[rsp+0x15]
   19c3b:	sub    rsp,0x8
   19c3f:	mov    edx,DWORD PTR [rip+0x6257f]        # 7c1c4 <_obstack_memory_used@@Base+0x2f544>
   19c45:	push   r14
   19c47:	mov    r9,rax
   19c4a:	mov    eax,DWORD PTR [rip+0x62570]        # 7c1c0 <_obstack_memory_used@@Base+0x2f540>
   19c50:	mov    esi,0x1
   19c55:	mov    rdi,QWORD PTR [rip+0x6543c]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   19c5c:	lea    r8d,[rdx+rax*1+0x1]
   19c61:	lea    rdx,[rip+0x4a56d]        # 641d5 <_obstack_memory_used@@Base+0x17555>
   19c68:	xor    eax,eax
   19c6a:	call   a840 <__fprintf_chk@plt>
   19c6f:	pop    rax
   19c70:	pop    rdx
   19c71:	jmp    19bdc <__sprintf_chk@plt+0xf22c>
   19c76:	cs nop WORD PTR [rax+rax*1+0x0]
   19c80:	mov    DWORD PTR [r14],r15d
   19c83:	mov    rsi,r13
   19c86:	lea    rdi,[rip+0x4a553]        # 641e0 <_obstack_memory_used@@Base+0x17560>
   19c8d:	mov    DWORD PTR [rsp+0xc],eax
   19c91:	call   3bad0 <__sprintf_chk@plt+0x31120>
   19c96:	mov    BYTE PTR [rbx],0x2f
   19c99:	mov    eax,DWORD PTR [rsp+0xc]
   19c9d:	jmp    19b42 <__sprintf_chk@plt+0xf192>
   19ca2:	nop    WORD PTR [rax+rax*1+0x0]
   19ca8:	mov    BYTE PTR [rsp+0x34],0x0
   19cad:	mov    rcx,QWORD PTR [rip+0x6588c]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   19cb4:	lea    r14,[rsp+0x34]
   19cb9:	sub    rcx,QWORD PTR [rip+0x658c8]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   19cc0:	sar    rcx,0x9
   19cc4:	add    rcx,QWORD PTR [rip+0x6586d]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   19ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   19cd0:	mov    rax,rcx
   19cd3:	sub    r14,0x1
   19cd7:	mul    r12
   19cda:	mov    rax,rcx
   19cdd:	shr    rdx,0x3
   19ce1:	lea    rsi,[rdx+rdx*4]
   19ce5:	add    rsi,rsi
   19ce8:	sub    rax,rsi
   19ceb:	add    eax,0x30
   19cee:	mov    BYTE PTR [r14],al
   19cf1:	mov    rax,rcx
   19cf4:	mov    rcx,rdx
   19cf7:	cmp    rax,0x9
   19cfb:	ja     19cd0 <__sprintf_chk@plt+0xf320>
   19cfd:	xor    edi,edi
   19cff:	mov    edx,0x5
   19d04:	lea    rsi,[rip+0x4a4ab]        # 641b6 <_obstack_memory_used@@Base+0x17536>
   19d0b:	call   a040 <dcgettext@plt>
   19d10:	mov    rdi,QWORD PTR [rip+0x65381]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   19d17:	mov    rcx,r14
   19d1a:	mov    esi,0x1
   19d1f:	mov    rdx,rax
   19d22:	xor    eax,eax
   19d24:	call   a840 <__fprintf_chk@plt>
   19d29:	jmp    19c0f <__sprintf_chk@plt+0xf25f>
   19d2e:	call   a0a0 <__stack_chk_fail@plt>
   19d33:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   19d3e:	xchg   ax,ax
   19d40:	push   r15
   19d42:	push   r14
   19d44:	push   r13
   19d46:	xor    r13d,r13d
   19d49:	push   r12
   19d4b:	push   rbp
   19d4c:	push   rbx
   19d4d:	sub    rsp,0xa8
   19d54:	mov    rax,QWORD PTR fs:0x28
   19d5d:	mov    QWORD PTR [rsp+0x98],rax
   19d65:	xor    eax,eax
   19d67:	cmp    BYTE PTR [rdx],0x0
   19d6a:	jne    19db7 <__sprintf_chk@plt+0xf407>
   19d6c:	mov    r15,rdi
   19d6f:	mov    r14d,esi
   19d72:	mov    rbx,rdx
   19d75:	call   9e40 <__errno_location@plt>
   19d7a:	mov    ebp,DWORD PTR [rax]
   19d7c:	mov    r12,rax
   19d7f:	cmp    ebp,0x11
   19d82:	je     19e10 <__sprintf_chk@plt+0xf460>
   19d88:	jle    19de8 <__sprintf_chk@plt+0xf438>
   19d8a:	cmp    ebp,0x28
   19d8d:	je     19d99 <__sprintf_chk@plt+0xf3e9>
   19d8f:	mov    eax,ebp
   19d91:	and    eax,0xffffffbf
   19d94:	cmp    eax,0x1f
   19d97:	jne    19db0 <__sprintf_chk@plt+0xf400>
   19d99:	test   r14b,r14b
   19d9c:	je     19db0 <__sprintf_chk@plt+0xf400>
   19d9e:	cmp    DWORD PTR [rip+0x6598f],0x2        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   19da5:	je     19e60 <__sprintf_chk@plt+0xf4b0>
   19dab:	nop    DWORD PTR [rax+rax*1+0x0]
   19db0:	mov    DWORD PTR [r12],ebp
   19db4:	xor    r13d,r13d
   19db7:	mov    rax,QWORD PTR [rsp+0x98]
   19dbf:	sub    rax,QWORD PTR fs:0x28
   19dc8:	jne    19ef0 <__sprintf_chk@plt+0xf540>
   19dce:	add    rsp,0xa8
   19dd5:	mov    eax,r13d
   19dd8:	pop    rbx
   19dd9:	pop    rbp
   19dda:	pop    r12
   19ddc:	pop    r13
   19dde:	pop    r14
   19de0:	pop    r15
   19de2:	ret    
   19de3:	nop    DWORD PTR [rax+rax*1+0x0]
   19de8:	cmp    ebp,0x2
   19deb:	jne    19db0 <__sprintf_chk@plt+0xf400>
   19ded:	mov    rsi,rbx
   19df0:	mov    rdi,r15
   19df3:	call   19a50 <__sprintf_chk@plt+0xf0a0>
   19df8:	test   eax,eax
   19dfa:	jne    19db0 <__sprintf_chk@plt+0xf400>
   19dfc:	cmp    BYTE PTR [rbx],0x0
   19dff:	je     19db0 <__sprintf_chk@plt+0xf400>
   19e01:	mov    r13d,0x1
   19e07:	jmp    19db7 <__sprintf_chk@plt+0xf407>
   19e09:	nop    DWORD PTR [rax+0x0]
   19e10:	mov    eax,DWORD PTR [rip+0x6591e]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   19e16:	cmp    eax,0x5
   19e19:	je     19ea0 <__sprintf_chk@plt+0xf4f0>
   19e1f:	ja     19e30 <__sprintf_chk@plt+0xf480>
   19e21:	cmp    eax,0x2
   19e24:	jbe    19e48 <__sprintf_chk@plt+0xf498>
   19e26:	cmp    eax,0x4
   19e29:	je     19db7 <__sprintf_chk@plt+0xf407>
   19e2b:	jmp    19ded <__sprintf_chk@plt+0xf43d>
   19e2d:	nop    DWORD PTR [rax]
   19e30:	cmp    eax,0x6
   19e33:	jne    19ded <__sprintf_chk@plt+0xf43d>
   19e35:	xor    esi,esi
   19e37:	mov    rdi,r15
   19e3a:	call   58c00 <_obstack_memory_used@@Base+0xbf80>
   19e3f:	test   al,al
   19e41:	jne    19ded <__sprintf_chk@plt+0xf43d>
   19e43:	nop    DWORD PTR [rax+rax*1+0x0]
   19e48:	xor    esi,esi
   19e4a:	mov    rdi,r15
   19e4d:	call   26bf0 <__sprintf_chk@plt+0x1c240>
   19e52:	test   eax,eax
   19e54:	jle    19ded <__sprintf_chk@plt+0xf43d>
   19e56:	jmp    19e01 <__sprintf_chk@plt+0xf451>
   19e58:	nop    DWORD PTR [rax+rax*1+0x0]
   19e60:	cmp    BYTE PTR [rip+0x65995],0x0        # 7f7fc <obstack_alloc_failed_handler@@Base+0x9c4>
   19e67:	jne    19db0 <__sprintf_chk@plt+0xf400>
   19e6d:	mov    esi,0x2f
   19e72:	mov    rdi,r15
   19e75:	call   a0f0 <strchr@plt>
   19e7a:	test   rax,rax
   19e7d:	je     19e48 <__sprintf_chk@plt+0xf498>
   19e7f:	mov    ecx,DWORD PTR [rip+0x650ef]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   19e85:	mov    edi,DWORD PTR [rip+0x62195]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   19e8b:	mov    rdx,rsp
   19e8e:	mov    rsi,r15
   19e91:	call   a960 <fstatat@plt>
   19e96:	test   eax,eax
   19e98:	jne    19db0 <__sprintf_chk@plt+0xf400>
   19e9e:	jmp    19e48 <__sprintf_chk@plt+0xf498>
   19ea0:	mov    r13d,0x2
   19ea6:	test   BYTE PTR [rip+0x621d1],0x10        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   19ead:	je     19db7 <__sprintf_chk@plt+0xf407>
   19eb3:	mov    rax,QWORD PTR [rip+0x6564e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   19eba:	test   rax,rax
   19ebd:	je     19ec1 <__sprintf_chk@plt+0xf511>
   19ebf:	call   rax
   19ec1:	mov    edx,0x5
   19ec6:	lea    rsi,[rip+0x4a319]        # 641e6 <_obstack_memory_used@@Base+0x17566>
   19ecd:	xor    edi,edi
   19ecf:	mov    r13d,0x2
   19ed5:	call   a040 <dcgettext@plt>
   19eda:	mov    rcx,r15
   19edd:	xor    esi,esi
   19edf:	xor    edi,edi
   19ee1:	mov    rdx,rax
   19ee4:	xor    eax,eax
   19ee6:	call   a640 <error@plt>
   19eeb:	jmp    19db7 <__sprintf_chk@plt+0xf407>
   19ef0:	call   a0a0 <__stack_chk_fail@plt>
   19ef5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   19f00:	endbr64 
   19f04:	push   r15
   19f06:	push   r14
   19f08:	push   r13
   19f0a:	push   r12
   19f0c:	mov    r12,rdi
   19f0f:	push   rbp
   19f10:	push   rbx
   19f11:	mov    ebx,esi
   19f13:	sub    rsp,0x208
   19f1a:	mov    r9d,DWORD PTR [rip+0x6582f]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   19f21:	mov    rax,QWORD PTR fs:0x28
   19f2a:	mov    QWORD PTR [rsp+0x1f8],rax
   19f32:	xor    eax,eax
   19f34:	mov    eax,DWORD PTR [rip+0x65456]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   19f3a:	mov    BYTE PTR [rsp+0x1f],0x0
   19f3f:	mov    r14d,eax
   19f42:	and    r14d,0x1c0
   19f49:	test   r9d,r9d
   19f4c:	jg     19f58 <__sprintf_chk@plt+0xf5a8>
   19f4e:	mov    r14d,eax
   19f51:	and    r14d,0x1ff
   19f58:	cmp    BYTE PTR [rip+0x657d1],0x0        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
   19f5f:	jne    1a462 <__sprintf_chk@plt+0xfab2>
   19f65:	cmp    QWORD PTR [rip+0x657bb],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   19f6d:	je     1a230 <__sprintf_chk@plt+0xf880>
   19f73:	lea    rbp,[rsp+0x58]
   19f78:	mov    rdi,rbp
   19f7b:	call   a210 <pipe@plt>
   19f80:	test   eax,eax
   19f82:	js     1a751 <__sprintf_chk@plt+0xfda1>
   19f88:	mov    esi,0x1
   19f8d:	mov    edi,0xd
   19f92:	call   a330 <signal@plt>
   19f97:	mov    QWORD PTR [rip+0x658c2],rax        # 7f860 <obstack_alloc_failed_handler@@Base+0xa28>
   19f9e:	call   a950 <fork@plt>
   19fa3:	cmp    eax,0xffffffff
   19fa6:	je     1a759 <__sprintf_chk@plt+0xfda9>
   19fac:	mov    DWORD PTR [rip+0x658b6],eax        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   19fb2:	mov    edi,DWORD PTR [rsp+0x58]
   19fb6:	test   eax,eax
   19fb8:	je     1a75e <__sprintf_chk@plt+0xfdae>
   19fbe:	call   a200 <close@plt>
   19fc3:	test   eax,eax
   19fc5:	jne    1a5ad <__sprintf_chk@plt+0xfbfd>
   19fcb:	mov    ebp,DWORD PTR [rsp+0x5c]
   19fcf:	test   ebp,ebp
   19fd1:	js     1a426 <__sprintf_chk@plt+0xfa76>
   19fd7:	mov    DWORD PTR [rsp+0x8],0x0
   19fdf:	mov    DWORD PTR [rsp+0xc],0x0
   19fe7:	cmp    BYTE PTR [rip+0x655c2],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   19fee:	jne    1a334 <__sprintf_chk@plt+0xf984>
   19ff4:	cmp    BYTE PTR [rip+0x65445],0x0        # 7f440 <obstack_alloc_failed_handler@@Base+0x608>
   19ffb:	mov    r15,QWORD PTR [rip+0x653a6]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   1a002:	je     1a085 <__sprintf_chk@plt+0xf6d5>
   1a008:	jmp    1a35e <__sprintf_chk@plt+0xf9ae>
   1a00d:	nop    DWORD PTR [rax]
   1a010:	test   r13,r13
   1a013:	je     1a0e0 <__sprintf_chk@plt+0xf730>
   1a019:	mov    r14,QWORD PTR [rip+0x65560]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1a020:	sub    r14,r13
   1a023:	cmp    r14,r15
   1a026:	cmova  r14,r15
   1a02a:	call   9e40 <__errno_location@plt>
   1a02f:	mov    rsi,r13
   1a032:	mov    edi,ebp
   1a034:	mov    DWORD PTR [rax],0x0
   1a03a:	mov    rdx,r14
   1a03d:	sub    r15,r14
   1a040:	call   266c0 <__sprintf_chk@plt+0x1bd10>
   1a045:	mov    rcx,QWORD PTR [rip+0x654f4]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1a04c:	lea    rdx,[r13+r14*1-0x1]
   1a051:	cmp    rdx,rcx
   1a054:	jb     1a06f <__sprintf_chk@plt+0xf6bf>
   1a056:	sub    rdx,rcx
   1a059:	and    rdx,0xfffffffffffffe00
   1a060:	lea    rcx,[rcx+rdx*1+0x200]
   1a068:	mov    QWORD PTR [rip+0x654d1],rcx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1a06f:	cmp    QWORD PTR [rip+0x6550a],rcx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1a076:	jb     aa44 <__sprintf_chk@plt+0x94>
   1a07c:	cmp    r14,rax
   1a07f:	jne    1a534 <__sprintf_chk@plt+0xfb84>
   1a085:	test   r15,r15
   1a088:	jle    1a119 <__sprintf_chk@plt+0xf769>
   1a08e:	mov    rax,QWORD PTR [rip+0x65513]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   1a095:	test   rax,rax
   1a098:	je     1a09e <__sprintf_chk@plt+0xf6ee>
   1a09a:	mov    QWORD PTR [rax+0x20],r15
   1a09e:	mov    r13,QWORD PTR [rip+0x6549b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1a0a5:	cmp    r13,QWORD PTR [rip+0x654d4]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1a0ac:	jne    1a010 <__sprintf_chk@plt+0xf660>
   1a0b2:	cmp    BYTE PTR [rip+0x6547b],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1a0b9:	jne    1a0e0 <__sprintf_chk@plt+0xf730>
   1a0bb:	call   f170 <__sprintf_chk@plt+0x47c0>
   1a0c0:	mov    r13,QWORD PTR [rip+0x65479]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1a0c7:	cmp    r13,QWORD PTR [rip+0x654b2]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1a0ce:	jne    1a010 <__sprintf_chk@plt+0xf660>
   1a0d4:	mov    BYTE PTR [rip+0x65459],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1a0db:	nop    DWORD PTR [rax+rax*1+0x0]
   1a0e0:	mov    rax,QWORD PTR [rip+0x65421]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1a0e7:	test   rax,rax
   1a0ea:	je     1a0ee <__sprintf_chk@plt+0xf73e>
   1a0ec:	call   rax
   1a0ee:	mov    edx,0x5
   1a0f3:	lea    rsi,[rip+0x492c6]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   1a0fa:	xor    edi,edi
   1a0fc:	call   a040 <dcgettext@plt>
   1a101:	xor    esi,esi
   1a103:	xor    edi,edi
   1a105:	mov    rdx,rax
   1a108:	xor    eax,eax
   1a10a:	call   a640 <error@plt>
   1a10f:	mov    DWORD PTR [rip+0x64fab],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1a119:	mov    rdi,r15
   1a11c:	call   25030 <__sprintf_chk@plt+0x1a680>
   1a121:	call   db80 <__sprintf_chk@plt+0x31d0>
   1a126:	cmp    BYTE PTR [rip+0x65603],0x0        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
   1a12d:	jne    1a433 <__sprintf_chk@plt+0xfa83>
   1a133:	cmp    QWORD PTR [rip+0x655ed],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   1a13b:	je     1a555 <__sprintf_chk@plt+0xfba5>
   1a141:	mov    edi,ebp
   1a143:	call   a200 <close@plt>
   1a148:	mov    r13d,eax
   1a14b:	test   eax,eax
   1a14d:	js     1a599 <__sprintf_chk@plt+0xfbe9>
   1a153:	cmp    QWORD PTR [rip+0x655cd],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   1a15b:	je     1a436 <__sprintf_chk@plt+0xfa86>
   1a161:	mov    ebp,DWORD PTR [rip+0x65701]        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a167:	test   ebp,ebp
   1a169:	js     1a436 <__sprintf_chk@plt+0xfa86>
   1a16f:	mov    rsi,QWORD PTR [rip+0x656ea]        # 7f860 <obstack_alloc_failed_handler@@Base+0xa28>
   1a176:	mov    edi,0xd
   1a17b:	lea    r14,[rsp+0x20]
   1a180:	call   a330 <signal@plt>
   1a185:	jmp    1a1a4 <__sprintf_chk@plt+0xf7f4>
   1a187:	nop    WORD PTR [rax+rax*1+0x0]
   1a190:	call   9e40 <__errno_location@plt>
   1a195:	cmp    DWORD PTR [rax],0x4
   1a198:	jne    1a613 <__sprintf_chk@plt+0xfc63>
   1a19e:	mov    ebp,DWORD PTR [rip+0x656c4]        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a1a4:	xor    edx,edx
   1a1a6:	mov    rsi,r14
   1a1a9:	mov    edi,ebp
   1a1ab:	call   a680 <waitpid@plt>
   1a1b0:	cmp    eax,0xffffffff
   1a1b3:	je     1a190 <__sprintf_chk@plt+0xf7e0>
   1a1b5:	mov    eax,DWORD PTR [rsp+0x20]
   1a1b9:	mov    ebx,eax
   1a1bb:	and    ebx,0x7f
   1a1be:	jne    1a635 <__sprintf_chk@plt+0xfc85>
   1a1c4:	cmp    BYTE PTR [rip+0x65557],0x0        # 7f722 <obstack_alloc_failed_handler@@Base+0x8ea>
   1a1cb:	jne    1a680 <__sprintf_chk@plt+0xfcd0>
   1a1d1:	movzx  ebx,ah
   1a1d4:	test   ah,0xff
   1a1d7:	je     1a680 <__sprintf_chk@plt+0xfcd0>
   1a1dd:	mov    rax,QWORD PTR [rip+0x65324]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1a1e4:	test   rax,rax
   1a1e7:	je     1a1f0 <__sprintf_chk@plt+0xf840>
   1a1e9:	call   rax
   1a1eb:	movzx  ebx,BYTE PTR [rsp+0x21]
   1a1f0:	movsxd r12,DWORD PTR [rip+0x65671]        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a1f7:	mov    edx,0x5
   1a1fc:	lea    rsi,[rip+0x4a09f]        # 642a2 <_obstack_memory_used@@Base+0x17622>
   1a203:	xor    edi,edi
   1a205:	call   a040 <dcgettext@plt>
   1a20a:	mov    r8d,ebx
   1a20d:	xor    esi,esi
   1a20f:	xor    edi,edi
   1a211:	mov    rdx,rax
   1a214:	mov    rcx,r12
   1a217:	xor    eax,eax
   1a219:	call   a640 <error@plt>
   1a21e:	mov    DWORD PTR [rip+0x64e9c],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1a228:	jmp    1a680 <__sprintf_chk@plt+0xfcd0>
   1a22d:	nop    DWORD PTR [rax]
   1a230:	mov    r8d,DWORD PTR [rip+0x64ca1]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   1a237:	mov    BYTE PTR [rsp+0x20],0x0
   1a23c:	test   r8d,r8d
   1a23f:	jle    1a294 <__sprintf_chk@plt+0xf8e4>
   1a241:	cmp    QWORD PTR [rip+0x6522f],0x0        # 7f478 <obstack_alloc_failed_handler@@Base+0x640>
   1a249:	je     1a294 <__sprintf_chk@plt+0xf8e4>
   1a24b:	mov    ebp,DWORD PTR [rip+0x654f7]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   1a251:	lea    r13,[rsp+0x20]
   1a256:	not    ebp
   1a258:	and    ebp,eax
   1a25a:	and    ebp,0x1ff
   1a260:	mov    edi,DWORD PTR [rip+0x61dba]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1a266:	xor    ecx,ecx
   1a268:	mov    edx,ebp
   1a26a:	mov    rsi,r12
   1a26d:	call   a3a0 <mknodat@plt>
   1a272:	test   eax,eax
   1a274:	je     1a70f <__sprintf_chk@plt+0xfd5f>
   1a27a:	xor    esi,esi
   1a27c:	mov    rdx,r13
   1a27f:	mov    rdi,r12
   1a282:	call   19d40 <__sprintf_chk@plt+0xf390>
   1a287:	test   eax,eax
   1a289:	je     1a6ab <__sprintf_chk@plt+0xfcfb>
   1a28f:	cmp    eax,0x2
   1a292:	jne    1a260 <__sprintf_chk@plt+0xf8b0>
   1a294:	mov    DWORD PTR [rsp+0xc],0x0
   1a29c:	nop    DWORD PTR [rax+0x0]
   1a2a0:	mov    r15d,DWORD PTR [rip+0x6548d]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   1a2a7:	mov    r13d,0x809c1
   1a2ad:	cmp    r15d,0x2
   1a2b1:	jne    1a2cb <__sprintf_chk@plt+0xf91b>
   1a2b3:	cmp    BYTE PTR [rip+0x65542],0x1        # 7f7fc <obstack_alloc_failed_handler@@Base+0x9c4>
   1a2ba:	sbb    r13d,r13d
   1a2bd:	and    r13d,0x20000
   1a2c4:	add    r13d,0x80b41
   1a2cb:	mov    esi,DWORD PTR [rsp+0xc]
   1a2cf:	mov    eax,r13d
   1a2d2:	and    al,0x7f
   1a2d4:	test   esi,esi
   1a2d6:	cmovne r13d,eax
   1a2da:	cmp    ebx,0x37
   1a2dd:	je     1a4db <__sprintf_chk@plt+0xfb2b>
   1a2e3:	mov    edi,DWORD PTR [rip+0x61d37]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1a2e9:	mov    ecx,r14d
   1a2ec:	mov    edx,r13d
   1a2ef:	mov    rsi,r12
   1a2f2:	xor    eax,eax
   1a2f4:	call   a080 <openat@plt>
   1a2f9:	mov    ebp,eax
   1a2fb:	test   eax,eax
   1a2fd:	js     1a490 <__sprintf_chk@plt+0xfae0>
   1a303:	cmp    r15d,0x2
   1a307:	je     1a5d4 <__sprintf_chk@plt+0xfc24>
   1a30d:	mov    r13d,DWORD PTR [rip+0x65434]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   1a314:	mov    DWORD PTR [rsp+0xc],0x1ff
   1a31c:	not    r13d
   1a31f:	and    r13d,r14d
   1a322:	cmp    BYTE PTR [rip+0x65287],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   1a329:	mov    DWORD PTR [rsp+0x8],r13d
   1a32e:	je     19ff4 <__sprintf_chk@plt+0xf644>
   1a334:	mov    rsi,QWORD PTR [rip+0x6506d]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   1a33b:	mov    rdi,QWORD PTR [rip+0x64fde]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1a342:	mov    rdx,rsi
   1a345:	call   fa40 <__sprintf_chk@plt+0x5090>
   1a34a:	cmp    BYTE PTR [rip+0x650ef],0x0        # 7f440 <obstack_alloc_failed_handler@@Base+0x608>
   1a351:	mov    r15,QWORD PTR [rip+0x65050]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   1a358:	je     1a085 <__sprintf_chk@plt+0xf6d5>
   1a35e:	lea    r14,[rsp+0x20]
   1a363:	mov    rdi,r14
   1a366:	call   32390 <__sprintf_chk@plt+0x279e0>
   1a36b:	test   al,al
   1a36d:	je     1a119 <__sprintf_chk@plt+0xf769>
   1a373:	xor    esi,esi
   1a375:	lea    rax,[rip+0x64fa4]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1a37c:	xor    edx,edx
   1a37e:	mov    edi,ebp
   1a380:	mov    QWORD PTR [rsp+0x38],rax
   1a385:	mov    DWORD PTR [rsp+0x20],ebp
   1a389:	call   a170 <lseek@plt>
   1a38e:	mov    rsi,QWORD PTR [rsp+0x40]
   1a393:	mov    QWORD PTR [rsp+0x28],0x0
   1a39c:	test   rax,rax
   1a39f:	mov    rax,QWORD PTR [rsi+0x28]
   1a3a3:	sete   BYTE PTR [rsp+0x24]
   1a3a8:	test   rax,rax
   1a3ab:	je     1a3bf <__sprintf_chk@plt+0xfa0f>
   1a3ad:	mov    rdi,r14
   1a3b0:	call   rax
   1a3b2:	test   al,al
   1a3b4:	je     1a700 <__sprintf_chk@plt+0xfd50>
   1a3ba:	mov    rsi,QWORD PTR [rsp+0x40]
   1a3bf:	mov    rcx,QWORD PTR [rsp+0x38]
   1a3c4:	xor    r15d,r15d
   1a3c7:	cmp    QWORD PTR [rcx+0x130],r15
   1a3ce:	jbe    1a400 <__sprintf_chk@plt+0xfa50>
   1a3d0:	mov    rax,QWORD PTR [rsi+0x40]
   1a3d4:	test   rax,rax
   1a3d7:	je     1a400 <__sprintf_chk@plt+0xfa50>
   1a3d9:	mov    rsi,r15
   1a3dc:	mov    rdi,r14
   1a3df:	add    r15,0x1
   1a3e3:	call   rax
   1a3e5:	test   al,al
   1a3e7:	je     1a700 <__sprintf_chk@plt+0xfd50>
   1a3ed:	mov    rcx,QWORD PTR [rsp+0x38]
   1a3f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1a3f7:	cmp    QWORD PTR [rcx+0x130],r15
   1a3fe:	ja     1a3d0 <__sprintf_chk@plt+0xfa20>
   1a400:	mov    rax,QWORD PTR [rsi+0x8]
   1a404:	mov    r8,QWORD PTR [rcx+0x118]
   1a40b:	sub    r8,QWORD PTR [rsp+0x30]
   1a410:	mov    r15,r8
   1a413:	test   rax,rax
   1a416:	je     1a119 <__sprintf_chk@plt+0xf769>
   1a41c:	mov    rdi,r14
   1a41f:	call   rax
   1a421:	jmp    1a119 <__sprintf_chk@plt+0xf769>
   1a426:	cmp    BYTE PTR [rip+0x6507c],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   1a42d:	je     1a6a1 <__sprintf_chk@plt+0xfcf1>
   1a433:	xor    r13d,r13d
   1a436:	mov    rax,QWORD PTR [rsp+0x1f8]
   1a43e:	sub    rax,QWORD PTR fs:0x28
   1a447:	jne    1a74c <__sprintf_chk@plt+0xfd9c>
   1a44d:	add    rsp,0x208
   1a454:	mov    eax,r13d
   1a457:	pop    rbx
   1a458:	pop    rbp
   1a459:	pop    r12
   1a45b:	pop    r13
   1a45d:	pop    r14
   1a45f:	pop    r15
   1a461:	ret    
   1a462:	mov    DWORD PTR [rsp+0x8],0x0
   1a46a:	mov    ebp,0x1
   1a46f:	mov    DWORD PTR [rsp+0xc],0x0
   1a477:	jmp    19fe7 <__sprintf_chk@plt+0xf637>
   1a47c:	mov    edi,ebp
   1a47e:	call   a200 <close@plt>
   1a483:	call   9e40 <__errno_location@plt>
   1a488:	mov    DWORD PTR [rax],0x11
   1a48e:	xchg   ax,ax
   1a490:	lea    rdx,[rsp+0x1f]
   1a495:	mov    esi,0x1
   1a49a:	mov    rdi,r12
   1a49d:	call   19d40 <__sprintf_chk@plt+0xf390>
   1a4a2:	cmp    eax,0x1
   1a4a5:	je     1a2a0 <__sprintf_chk@plt+0xf8f0>
   1a4ab:	cmp    BYTE PTR [rip+0x64ff7],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   1a4b2:	je     1a68f <__sprintf_chk@plt+0xfcdf>
   1a4b8:	cmp    eax,0x2
   1a4bb:	je     1a433 <__sprintf_chk@plt+0xfa83>
   1a4c1:	mov    rsi,r12
   1a4c4:	lea    rdi,[rip+0x48cf5]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   1a4cb:	mov    r13d,0x1
   1a4d1:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1a4d6:	jmp    1a436 <__sprintf_chk@plt+0xfa86>
   1a4db:	mov    ecx,DWORD PTR [rip+0x65377]        # 7f858 <obstack_alloc_failed_handler@@Base+0xa20>
   1a4e1:	test   ecx,ecx
   1a4e3:	jne    1a2e3 <__sprintf_chk@plt+0xf933>
   1a4e9:	mov    DWORD PTR [rip+0x65365],0x1        # 7f858 <obstack_alloc_failed_handler@@Base+0xa20>
   1a4f3:	test   BYTE PTR [rip+0x61b82],0x8        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   1a4fa:	je     1a2e3 <__sprintf_chk@plt+0xf933>
   1a500:	mov    rax,QWORD PTR [rip+0x65001]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1a507:	test   rax,rax
   1a50a:	je     1a50e <__sprintf_chk@plt+0xfb5e>
   1a50c:	call   rax
   1a50e:	xor    edi,edi
   1a510:	mov    edx,0x5
   1a515:	lea    rsi,[rip+0x4a284]        # 647a0 <_obstack_memory_used@@Base+0x17b20>
   1a51c:	call   a040 <dcgettext@plt>
   1a521:	xor    esi,esi
   1a523:	xor    edi,edi
   1a525:	mov    rdx,rax
   1a528:	xor    eax,eax
   1a52a:	call   a640 <error@plt>
   1a52f:	jmp    1a2e3 <__sprintf_chk@plt+0xf933>
   1a534:	cmp    QWORD PTR [rip+0x651ec],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   1a53c:	jne    1a119 <__sprintf_chk@plt+0xf769>
   1a542:	mov    rdx,r14
   1a545:	mov    rsi,rax
   1a548:	mov    rdi,r12
   1a54b:	call   3c5c0 <__sprintf_chk@plt+0x31c10>
   1a550:	jmp    1a119 <__sprintf_chk@plt+0xf769>
   1a555:	xor    eax,eax
   1a557:	cmp    DWORD PTR [rip+0x651d6],0x2        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   1a55e:	movsx  r9d,bl
   1a562:	mov    edx,ebp
   1a564:	setne  al
   1a567:	lea    rsi,[rip+0x64db2]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1a56e:	mov    rdi,r12
   1a571:	shl    eax,0x8
   1a574:	push   rax
   1a575:	push   0x0
   1a577:	mov    r8d,DWORD PTR [rsp+0x1c]
   1a57c:	mov    ecx,DWORD PTR [rsp+0x18]
   1a580:	call   17270 <__sprintf_chk@plt+0xc8c0>
   1a585:	pop    rax
   1a586:	mov    edi,ebp
   1a588:	pop    rdx
   1a589:	call   a200 <close@plt>
   1a58e:	mov    r13d,eax
   1a591:	test   eax,eax
   1a593:	jns    1a153 <__sprintf_chk@plt+0xf7a3>
   1a599:	mov    rsi,r12
   1a59c:	lea    rdi,[rip+0x4c4b9]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   1a5a3:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1a5a8:	jmp    1a153 <__sprintf_chk@plt+0xf7a3>
   1a5ad:	xor    edi,edi
   1a5af:	mov    edx,0x5
   1a5b4:	lea    rsi,[rip+0x48ba8]        # 63163 <_obstack_memory_used@@Base+0x164e3>
   1a5bb:	call   a040 <dcgettext@plt>
   1a5c0:	lea    rdi,[rip+0x4c495]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   1a5c7:	mov    rsi,rax
   1a5ca:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1a5cf:	jmp    19fcb <__sprintf_chk@plt+0xf61b>
   1a5d4:	lea    rsi,[rsp+0x160]
   1a5dc:	mov    edi,ebp
   1a5de:	call   a920 <fstat@plt>
   1a5e3:	test   eax,eax
   1a5e5:	jne    1ac00 <__sprintf_chk@plt+0x10250>
   1a5eb:	mov    eax,DWORD PTR [rsp+0x178]
   1a5f2:	mov    DWORD PTR [rsp+0x8],eax
   1a5f6:	and    eax,0xf000
   1a5fb:	cmp    eax,0x8000
   1a600:	jne    1a47c <__sprintf_chk@plt+0xfacc>
   1a606:	mov    DWORD PTR [rsp+0xc],0xffffffff
   1a60e:	jmp    19fe7 <__sprintf_chk@plt+0xf637>
   1a613:	mov    rsi,QWORD PTR [rip+0x6510e]        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   1a61a:	lea    rdi,[rip+0x48ae0]        # 63101 <_obstack_memory_used@@Base+0x16481>
   1a621:	mov    DWORD PTR [rip+0x6523d],0xffffffff        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a62b:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1a630:	jmp    1a436 <__sprintf_chk@plt+0xfa86>
   1a635:	lea    edx,[rbx+0x1]
   1a638:	mov    rax,QWORD PTR [rip+0x64ec9]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1a63f:	cmp    dl,0x1
   1a642:	jle    1a6c2 <__sprintf_chk@plt+0xfd12>
   1a644:	test   rax,rax
   1a647:	je     1a652 <__sprintf_chk@plt+0xfca2>
   1a649:	call   rax
   1a64b:	mov    ebx,DWORD PTR [rsp+0x20]
   1a64f:	and    ebx,0x7f
   1a652:	movsxd r12,DWORD PTR [rip+0x6520f]        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a659:	mov    edx,0x5
   1a65e:	lea    rsi,[rip+0x4a16b]        # 647d0 <_obstack_memory_used@@Base+0x17b50>
   1a665:	xor    edi,edi
   1a667:	call   a040 <dcgettext@plt>
   1a66c:	mov    r8d,ebx
   1a66f:	xor    esi,esi
   1a671:	xor    edi,edi
   1a673:	mov    rdx,rax
   1a676:	mov    rcx,r12
   1a679:	xor    eax,eax
   1a67b:	call   a640 <error@plt>
   1a680:	mov    DWORD PTR [rip+0x651de],0xffffffff        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a68a:	jmp    1a436 <__sprintf_chk@plt+0xfa86>
   1a68f:	mov    DWORD PTR [rsp+0x8],eax
   1a693:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   1a698:	mov    eax,DWORD PTR [rsp+0x8]
   1a69c:	jmp    1a4b8 <__sprintf_chk@plt+0xfb08>
   1a6a1:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   1a6a6:	jmp    1a433 <__sprintf_chk@plt+0xfa83>
   1a6ab:	cmp    BYTE PTR [rip+0x64df7],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   1a6b2:	jne    1a4c1 <__sprintf_chk@plt+0xfb11>
   1a6b8:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   1a6bd:	jmp    1a4c1 <__sprintf_chk@plt+0xfb11>
   1a6c2:	test   rax,rax
   1a6c5:	je     1a6c9 <__sprintf_chk@plt+0xfd19>
   1a6c7:	call   rax
   1a6c9:	movsxd r12,DWORD PTR [rip+0x65198]        # 7f868 <obstack_alloc_failed_handler@@Base+0xa30>
   1a6d0:	mov    edx,0x5
   1a6d5:	lea    rsi,[rip+0x4a11c]        # 647f8 <_obstack_memory_used@@Base+0x17b78>
   1a6dc:	xor    edi,edi
   1a6de:	call   a040 <dcgettext@plt>
   1a6e3:	xor    esi,esi
   1a6e5:	xor    edi,edi
   1a6e7:	mov    rdx,rax
   1a6ea:	mov    rcx,r12
   1a6ed:	xor    eax,eax
   1a6ef:	call   a640 <error@plt>
   1a6f4:	mov    DWORD PTR [rip+0x649c6],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1a6fe:	jmp    1a680 <__sprintf_chk@plt+0xfcd0>
   1a700:	mov    rcx,QWORD PTR [rsp+0x38]
   1a705:	mov    rsi,QWORD PTR [rsp+0x40]
   1a70a:	jmp    1a400 <__sprintf_chk@plt+0xfa50>
   1a70f:	mov    edi,DWORD PTR [rip+0x647c3]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   1a715:	mov    DWORD PTR [rsp+0xc],0x1
   1a71d:	test   edi,edi
   1a71f:	jle    1a2a0 <__sprintf_chk@plt+0xf8f0>
   1a725:	cmp    QWORD PTR [rip+0x64d4b],0x0        # 7f478 <obstack_alloc_failed_handler@@Base+0x640>
   1a72d:	je     1a2a0 <__sprintf_chk@plt+0xf8f0>
   1a733:	movsx  edx,bl
   1a736:	xor    ecx,ecx
   1a738:	lea    rdi,[rip+0x64be1]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1a73f:	mov    rsi,r12
   1a742:	call   3b800 <__sprintf_chk@plt+0x30e50>
   1a747:	jmp    1a2a0 <__sprintf_chk@plt+0xf8f0>
   1a74c:	call   a0a0 <__stack_chk_fail@plt>
   1a751:	mov    rdi,rbp
   1a754:	call   28210 <__sprintf_chk@plt+0x1d860>
   1a759:	call   281c0 <__sprintf_chk@plt+0x1d810>
   1a75e:	test   edi,edi
   1a760:	je     1a769 <__sprintf_chk@plt+0xfdb9>
   1a762:	xor    esi,esi
   1a764:	call   339c0 <__sprintf_chk@plt+0x29010>
   1a769:	mov    edi,DWORD PTR [rsp+0x5c]
   1a76d:	call   ed20 <__sprintf_chk@plt+0x4370>
   1a772:	mov    edx,0x1
   1a777:	lea    rsi,[rip+0x4898b]        # 63109 <_obstack_memory_used@@Base+0x16489>
   1a77e:	lea    rdi,[rip+0x48989]        # 6310e <_obstack_memory_used@@Base+0x1648e>
   1a785:	call   9f80 <setenv@plt>
   1a78a:	test   eax,eax
   1a78c:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a792:	mov    rax,QWORD PTR [rip+0x64d77]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   1a799:	mov    rsi,QWORD PTR [rax]
   1a79c:	test   rsi,rsi
   1a79f:	je     1ac1b <__sprintf_chk@plt+0x1026b>
   1a7a5:	mov    edx,0x1
   1a7aa:	lea    rdi,[rip+0x48969]        # 6311a <_obstack_memory_used@@Base+0x1649a>
   1a7b1:	call   9f80 <setenv@plt>
   1a7b6:	test   eax,eax
   1a7b8:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a7be:	mov    rcx,QWORD PTR [rip+0x64d4b]        # 7f510 <obstack_alloc_failed_handler@@Base+0x6d8>
   1a7c5:	mov    BYTE PTR [rsp+0x94],0x0
   1a7cd:	lea    rsi,[rsp+0x94]
   1a7d5:	movabs r8,0xcccccccccccccccd
   1a7df:	sub    rcx,QWORD PTR [rip+0x64aea]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   1a7e6:	sar    rcx,0x3
   1a7ea:	add    rcx,0x1
   1a7ee:	mov    rax,rcx
   1a7f1:	sub    rsi,0x1
   1a7f5:	mul    r8
   1a7f8:	mov    rax,rdx
   1a7fb:	mov    rdx,rcx
   1a7fe:	shr    rax,0x3
   1a802:	lea    rdi,[rax+rax*4]
   1a806:	add    rdi,rdi
   1a809:	sub    rdx,rdi
   1a80c:	add    edx,0x30
   1a80f:	mov    BYTE PTR [rsi],dl
   1a811:	mov    rdx,rcx
   1a814:	mov    rcx,rax
   1a817:	cmp    rdx,0x9
   1a81b:	ja     1a7ee <__sprintf_chk@plt+0xfe3e>
   1a81d:	mov    edx,0x1
   1a822:	lea    rdi,[rip+0x48bf8]        # 63421 <_obstack_memory_used@@Base+0x167a1>
   1a829:	call   9f80 <setenv@plt>
   1a82e:	test   eax,eax
   1a830:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a836:	mov    BYTE PTR [rsp+0x74],0x0
   1a83b:	lea    rsi,[rsp+0x74]
   1a840:	movsxd rcx,DWORD PTR [rip+0x64ce9]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   1a847:	movabs r8,0xcccccccccccccccd
   1a851:	mov    rax,rcx
   1a854:	sub    rsi,0x1
   1a858:	mul    r8
   1a85b:	mov    rax,rdx
   1a85e:	mov    rdx,rcx
   1a861:	shr    rax,0x3
   1a865:	lea    rdi,[rax+rax*4]
   1a869:	add    rdi,rdi
   1a86c:	sub    rdx,rdi
   1a86f:	add    edx,0x30
   1a872:	mov    BYTE PTR [rsi],dl
   1a874:	mov    rdx,rcx
   1a877:	mov    rcx,rax
   1a87a:	cmp    rdx,0x9
   1a87e:	ja     1a851 <__sprintf_chk@plt+0xfea1>
   1a880:	mov    edx,0x1
   1a885:	lea    rdi,[rip+0x488a9]        # 63135 <_obstack_memory_used@@Base+0x164b5>
   1a88c:	call   9f80 <setenv@plt>
   1a891:	test   eax,eax
   1a893:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a899:	mov    edx,DWORD PTR [rip+0x64a09]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   1a89f:	test   edx,edx
   1a8a1:	jne    1a8a9 <__sprintf_chk@plt+0xfef9>
   1a8a3:	mov    edx,DWORD PTR [rip+0x649fb]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1a8a9:	lea    rsi,[rip+0x4c9e1]        # 67291 <_obstack_memory_used@@Base+0x1a611>
   1a8b0:	lea    rax,[rip+0x5f849]        # 7a100 <_obstack_memory_used@@Base+0x2d480>
   1a8b7:	jmp    1a8ca <__sprintf_chk@plt+0xff1a>
   1a8b9:	mov    rsi,QWORD PTR [rax+0x10]
   1a8bd:	add    rax,0x10
   1a8c1:	test   rsi,rsi
   1a8c4:	je     1ac31 <__sprintf_chk@plt+0x10281>
   1a8ca:	cmp    edx,DWORD PTR [rax+0x8]
   1a8cd:	jne    1a8b9 <__sprintf_chk@plt+0xff09>
   1a8cf:	mov    edx,0x1
   1a8d4:	lea    rdi,[rip+0x4887d]        # 63158 <_obstack_memory_used@@Base+0x164d8>
   1a8db:	call   9f80 <setenv@plt>
   1a8e0:	test   eax,eax
   1a8e2:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a8e8:	lea    rsi,[rsp+0x56]
   1a8ed:	mov    edx,0x1
   1a8f2:	lea    rdi,[rip+0x49908]        # 64201 <_obstack_memory_used@@Base+0x17581>
   1a8f9:	mov    WORD PTR [rsp+0x56],0x66
   1a900:	call   9f80 <setenv@plt>
   1a905:	test   eax,eax
   1a907:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a90d:	mov    edx,0x1
   1a912:	mov    esi,0x18
   1a917:	lea    rbp,[rsp+0x100]
   1a91f:	mov    r9d,DWORD PTR [rip+0x64a6a]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   1a926:	mov    rdi,rbp
   1a929:	lea    r8,[rip+0x498de]        # 6420e <_obstack_memory_used@@Base+0x1758e>
   1a930:	mov    ecx,0x18
   1a935:	call   9d90 <__snprintf_chk@plt>
   1a93a:	mov    edx,0x1
   1a93f:	mov    rsi,rbp
   1a942:	lea    rdi,[rip+0x498ca]        # 64213 <_obstack_memory_used@@Base+0x17593>
   1a949:	call   9f80 <setenv@plt>
   1a94e:	test   eax,eax
   1a950:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a956:	test   r12,r12
   1a959:	je     1ac5f <__sprintf_chk@plt+0x102af>
   1a95f:	mov    edx,0x1
   1a964:	mov    rsi,r12
   1a967:	lea    rdi,[rip+0x498ae]        # 6421c <_obstack_memory_used@@Base+0x1759c>
   1a96e:	call   9f80 <setenv@plt>
   1a973:	test   eax,eax
   1a975:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a97b:	mov    rsi,QWORD PTR [rip+0x649a6]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   1a982:	test   rsi,rsi
   1a985:	je     1ac4e <__sprintf_chk@plt+0x1029e>
   1a98b:	mov    edx,0x1
   1a990:	lea    rdi,[rip+0x49892]        # 64229 <_obstack_memory_used@@Base+0x175a9>
   1a997:	call   9f80 <setenv@plt>
   1a99c:	test   eax,eax
   1a99e:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a9a4:	mov    rsi,QWORD PTR [rip+0x64995]        # 7f340 <obstack_alloc_failed_handler@@Base+0x508>
   1a9ab:	test   rsi,rsi
   1a9ae:	je     1ac70 <__sprintf_chk@plt+0x102c0>
   1a9b4:	mov    edx,0x1
   1a9b9:	lea    rdi,[rip+0x49876]        # 64236 <_obstack_memory_used@@Base+0x175b6>
   1a9c0:	call   9f80 <setenv@plt>
   1a9c5:	test   eax,eax
   1a9c7:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a9cd:	mov    rsi,QWORD PTR [rip+0x64974]        # 7f348 <obstack_alloc_failed_handler@@Base+0x510>
   1a9d4:	test   rsi,rsi
   1a9d7:	je     1ac3d <__sprintf_chk@plt+0x1028d>
   1a9dd:	mov    edx,0x1
   1a9e2:	lea    rdi,[rip+0x49857]        # 64240 <_obstack_memory_used@@Base+0x175c0>
   1a9e9:	call   9f80 <setenv@plt>
   1a9ee:	test   eax,eax
   1a9f0:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1a9f6:	mov    rdi,QWORD PTR [rip+0x64a0b]        # 7f408 <obstack_alloc_failed_handler@@Base+0x5d0>
   1a9fd:	mov    rsi,QWORD PTR [rip+0x64a0c]        # 7f410 <obstack_alloc_failed_handler@@Base+0x5d8>
   1aa04:	lea    rdx,[rsp+0x160]
   1aa0c:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   1aa11:	mov    edx,0x1
   1aa16:	lea    rdi,[rip+0x4982d]        # 6424a <_obstack_memory_used@@Base+0x175ca>
   1aa1d:	mov    rsi,rax
   1aa20:	call   9f80 <setenv@plt>
   1aa25:	test   eax,eax
   1aa27:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1aa2d:	mov    rdi,QWORD PTR [rip+0x649e4]        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   1aa34:	mov    rsi,QWORD PTR [rip+0x649e5]        # 7f420 <obstack_alloc_failed_handler@@Base+0x5e8>
   1aa3b:	lea    rdx,[rsp+0x140]
   1aa43:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   1aa48:	mov    edx,0x1
   1aa4d:	lea    rdi,[rip+0x49800]        # 64254 <_obstack_memory_used@@Base+0x175d4>
   1aa54:	mov    rsi,rax
   1aa57:	call   9f80 <setenv@plt>
   1aa5c:	test   eax,eax
   1aa5e:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1aa64:	mov    rdi,QWORD PTR [rip+0x649bd]        # 7f428 <obstack_alloc_failed_handler@@Base+0x5f0>
   1aa6b:	mov    rsi,QWORD PTR [rip+0x649be]        # 7f430 <obstack_alloc_failed_handler@@Base+0x5f8>
   1aa72:	lea    rdx,[rsp+0x120]
   1aa7a:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   1aa7f:	mov    edx,0x1
   1aa84:	lea    rdi,[rip+0x497d3]        # 6425e <_obstack_memory_used@@Base+0x175de>
   1aa8b:	mov    rsi,rax
   1aa8e:	call   9f80 <setenv@plt>
   1aa93:	test   eax,eax
   1aa95:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1aa9b:	mov    BYTE PTR [rsp+0xf4],0x0
   1aaa3:	mov    rcx,QWORD PTR [rip+0x648fe]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   1aaaa:	lea    rsi,[rsp+0xf4]
   1aab2:	movabs r8,0xcccccccccccccccd
   1aabc:	mov    rax,rcx
   1aabf:	sub    rsi,0x1
   1aac3:	mul    r8
   1aac6:	mov    rax,rdx
   1aac9:	mov    rdx,rcx
   1aacc:	shr    rax,0x3
   1aad0:	lea    rdi,[rax+rax*4]
   1aad4:	add    rdi,rdi
   1aad7:	sub    rdx,rdi
   1aada:	add    edx,0x30
   1aadd:	mov    BYTE PTR [rsi],dl
   1aadf:	mov    rdx,rcx
   1aae2:	mov    rcx,rax
   1aae5:	cmp    rdx,0x9
   1aae9:	ja     1aabc <__sprintf_chk@plt+0x1010c>
   1aaeb:	mov    edx,0x1
   1aaf0:	lea    rdi,[rip+0x49771]        # 64268 <_obstack_memory_used@@Base+0x175e8>
   1aaf7:	call   9f80 <setenv@plt>
   1aafc:	test   eax,eax
   1aafe:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1ab04:	mov    BYTE PTR [rsp+0xd4],0x0
   1ab0c:	mov    ecx,DWORD PTR [rip+0x64882]        # 7f394 <obstack_alloc_failed_handler@@Base+0x55c>
   1ab12:	lea    rsi,[rsp+0xd4]
   1ab1a:	movabs r8,0xcccccccccccccccd
   1ab24:	mov    rax,rcx
   1ab27:	sub    rsi,0x1
   1ab2b:	mul    r8
   1ab2e:	mov    rax,rdx
   1ab31:	mov    rdx,rcx
   1ab34:	shr    rax,0x3
   1ab38:	lea    rdi,[rax+rax*4]
   1ab3c:	add    rdi,rdi
   1ab3f:	sub    rdx,rdi
   1ab42:	add    edx,0x30
   1ab45:	mov    BYTE PTR [rsi],dl
   1ab47:	mov    rdx,rcx
   1ab4a:	mov    rcx,rax
   1ab4d:	cmp    rdx,0x9
   1ab51:	ja     1ab24 <__sprintf_chk@plt+0x10174>
   1ab53:	mov    edx,0x1
   1ab58:	lea    rdi,[rip+0x49712]        # 64271 <_obstack_memory_used@@Base+0x175f1>
   1ab5f:	call   9f80 <setenv@plt>
   1ab64:	test   eax,eax
   1ab66:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1ab6c:	mov    BYTE PTR [rsp+0xb4],0x0
   1ab74:	mov    ecx,DWORD PTR [rip+0x6481e]        # 7f398 <obstack_alloc_failed_handler@@Base+0x560>
   1ab7a:	lea    rsi,[rsp+0xb4]
   1ab82:	movabs r8,0xcccccccccccccccd
   1ab8c:	mov    rax,rcx
   1ab8f:	sub    rsi,0x1
   1ab93:	mul    r8
   1ab96:	mov    rax,rdx
   1ab99:	mov    rdx,rcx
   1ab9c:	shr    rax,0x3
   1aba0:	lea    rdi,[rax+rax*4]
   1aba4:	add    rdi,rdi
   1aba7:	sub    rdx,rdi
   1abaa:	add    edx,0x30
   1abad:	mov    BYTE PTR [rsi],dl
   1abaf:	mov    rdx,rcx
   1abb2:	mov    rcx,rax
   1abb5:	cmp    rdx,0x9
   1abb9:	ja     1ab8c <__sprintf_chk@plt+0x101dc>
   1abbb:	mov    edx,0x1
   1abc0:	lea    rdi,[rip+0x496b2]        # 64279 <_obstack_memory_used@@Base+0x175f9>
   1abc7:	call   9f80 <setenv@plt>
   1abcc:	test   eax,eax
   1abce:	jne    1ac2c <__sprintf_chk@plt+0x1027c>
   1abd0:	lea    rdi,[rip+0x496aa]        # 64281 <_obstack_memory_used@@Base+0x17601>
   1abd7:	call   a740 <unsetenv@plt>
   1abdc:	lea    rdi,[rip+0x496a8]        # 6428b <_obstack_memory_used@@Base+0x1760b>
   1abe3:	call   a740 <unsetenv@plt>
   1abe8:	lea    rdi,[rip+0x496a6]        # 64295 <_obstack_memory_used@@Base+0x17615>
   1abef:	call   a740 <unsetenv@plt>
   1abf4:	mov    rdi,QWORD PTR [rip+0x64b2d]        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   1abfb:	call   336c0 <__sprintf_chk@plt+0x28d10>
   1ac00:	call   9e40 <__errno_location@plt>
   1ac05:	mov    edi,ebp
   1ac07:	mov    r15d,DWORD PTR [rax]
   1ac0a:	mov    r13,rax
   1ac0d:	call   a200 <close@plt>
   1ac12:	mov    DWORD PTR [r13+0x0],r15d
   1ac16:	jmp    1a490 <__sprintf_chk@plt+0xfae0>
   1ac1b:	lea    rdi,[rip+0x484f8]        # 6311a <_obstack_memory_used@@Base+0x1649a>
   1ac22:	call   a740 <unsetenv@plt>
   1ac27:	jmp    1a7be <__sprintf_chk@plt+0xfe0e>
   1ac2c:	call   19130 <__sprintf_chk@plt+0xe780>
   1ac31:	lea    rsi,[rip+0x484b7]        # 630ef <_obstack_memory_used@@Base+0x1646f>
   1ac38:	jmp    1a8cf <__sprintf_chk@plt+0xff1f>
   1ac3d:	lea    rdi,[rip+0x495fc]        # 64240 <_obstack_memory_used@@Base+0x175c0>
   1ac44:	call   a740 <unsetenv@plt>
   1ac49:	jmp    1a9f6 <__sprintf_chk@plt+0x10046>
   1ac4e:	lea    rdi,[rip+0x495d4]        # 64229 <_obstack_memory_used@@Base+0x175a9>
   1ac55:	call   a740 <unsetenv@plt>
   1ac5a:	jmp    1a9a4 <__sprintf_chk@plt+0xfff4>
   1ac5f:	lea    rdi,[rip+0x495b6]        # 6421c <_obstack_memory_used@@Base+0x1759c>
   1ac66:	call   a740 <unsetenv@plt>
   1ac6b:	jmp    1a97b <__sprintf_chk@plt+0xffcb>
   1ac70:	lea    rdi,[rip+0x495bf]        # 64236 <_obstack_memory_used@@Base+0x175b6>
   1ac77:	call   a740 <unsetenv@plt>
   1ac7c:	jmp    1a9cd <__sprintf_chk@plt+0x1001d>
   1ac81:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1ac8c:	nop    DWORD PTR [rax+0x0]
   1ac90:	push   r14
   1ac92:	push   r13
   1ac94:	mov    r13d,esi
   1ac97:	push   r12
   1ac99:	mov    r12,rcx
   1ac9c:	push   rbp
   1ac9d:	mov    rbp,rdi
   1aca0:	push   rbx
   1aca1:	mov    rbx,rdx
   1aca4:	sub    rsp,0xb0
   1acab:	mov    rax,QWORD PTR fs:0x28
   1acb4:	mov    QWORD PTR [rsp+0xa8],rax
   1acbc:	xor    eax,eax
   1acbe:	mov    edi,DWORD PTR [rip+0x6135c]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1acc4:	xor    ecx,ecx
   1acc6:	mov    edx,0xc1
   1accb:	mov    rsi,rbp
   1acce:	xor    eax,eax
   1acd0:	call   a080 <openat@plt>
   1acd5:	mov    r14d,eax
   1acd8:	test   eax,eax
   1acda:	jns    1ad60 <__sprintf_chk@plt+0x103b0>
   1ace0:	call   9e40 <__errno_location@plt>
   1ace5:	cmp    DWORD PTR [rax],0x11
   1ace8:	je     1ad30 <__sprintf_chk@plt+0x10380>
   1acea:	xor    esi,esi
   1acec:	mov    rdx,rbx
   1acef:	mov    rdi,rbp
   1acf2:	call   19d40 <__sprintf_chk@plt+0xf390>
   1acf7:	test   eax,eax
   1acf9:	je     1ad40 <__sprintf_chk@plt+0x10390>
   1acfb:	cmp    eax,0x2
   1acfe:	jne    1acbe <__sprintf_chk@plt+0x1030e>
   1ad00:	xor    eax,eax
   1ad02:	mov    rdx,QWORD PTR [rsp+0xa8]
   1ad0a:	sub    rdx,QWORD PTR fs:0x28
   1ad13:	jne    1b03b <__sprintf_chk@plt+0x1068b>
   1ad19:	add    rsp,0xb0
   1ad20:	pop    rbx
   1ad21:	pop    rbp
   1ad22:	pop    r12
   1ad24:	pop    r13
   1ad26:	pop    r14
   1ad28:	ret    
   1ad29:	nop    DWORD PTR [rax+0x0]
   1ad30:	mov    rdi,rbp
   1ad33:	call   169d0 <__sprintf_chk@plt+0xc020>
   1ad38:	test   rax,rax
   1ad3b:	je     1acea <__sprintf_chk@plt+0x1033a>
   1ad3d:	jmp    1ad00 <__sprintf_chk@plt+0x10350>
   1ad3f:	nop
   1ad40:	mov    rsi,rbp
   1ad43:	lea    rdi,[rip+0x48476]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   1ad4a:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1ad4f:	mov    eax,0xffffffff
   1ad54:	jmp    1ad02 <__sprintf_chk@plt+0x10352>
   1ad56:	cs nop WORD PTR [rax+rax*1+0x0]
   1ad60:	lea    rsi,[rsp+0x10]
   1ad65:	mov    edi,eax
   1ad67:	call   a920 <fstat@plt>
   1ad6c:	test   eax,eax
   1ad6e:	jne    1b01a <__sprintf_chk@plt+0x1066a>
   1ad74:	mov    edi,r14d
   1ad77:	call   a200 <close@plt>
   1ad7c:	test   eax,eax
   1ad7e:	jne    1b001 <__sprintf_chk@plt+0x10651>
   1ad84:	mov    rdi,QWORD PTR [rip+0x645ad]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   1ad8b:	call   a060 <strlen@plt>
   1ad90:	lea    rdi,[rax+0xa1]
   1ad97:	call   a4a0 <malloc@plt>
   1ad9c:	mov    r14,rax
   1ad9f:	test   rax,rax
   1ada2:	je     1b040 <__sprintf_chk@plt+0x10690>
   1ada8:	test   r12,r12
   1adab:	je     1afeb <__sprintf_chk@plt+0x1063b>
   1adb1:	mov    rax,QWORD PTR [r12]
   1adb5:	mov    QWORD PTR [r12],r14
   1adb9:	mov    QWORD PTR [r14],rax
   1adbc:	mov    rax,QWORD PTR [rsp+0x10]
   1adc1:	mov    QWORD PTR [r14+0x18],0xffffffffffffffff
   1adc9:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
   1add1:	mov    QWORD PTR [r14+0x8],rax
   1add5:	mov    rax,QWORD PTR [rsp+0x18]
   1adda:	mov    BYTE PTR [r14+0x28],r13b
   1adde:	mov    QWORD PTR [r14+0x10],rax
   1ade2:	test   r13b,r13b
   1ade5:	je     1ae16 <__sprintf_chk@plt+0x10466>
   1ade7:	mov    eax,DWORD PTR [rip+0x645a3]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   1aded:	movdqu xmm0,XMMWORD PTR [rip+0x64613]        # 7f408 <obstack_alloc_failed_handler@@Base+0x5d0>
   1adf5:	movdqu xmm1,XMMWORD PTR [rip+0x6461b]        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   1adfd:	mov    DWORD PTR [r14+0x2c],eax
   1ae01:	mov    rax,QWORD PTR [rip+0x6458c]        # 7f394 <obstack_alloc_failed_handler@@Base+0x55c>
   1ae08:	movups XMMWORD PTR [r14+0x38],xmm0
   1ae0d:	mov    QWORD PTR [r14+0x30],rax
   1ae11:	movups XMMWORD PTR [r14+0x48],xmm1
   1ae16:	mov    eax,DWORD PTR [rip+0x649ac]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   1ae1c:	mov    rdi,rbp
   1ae1f:	mov    DWORD PTR [r14+0x58],eax
   1ae23:	call   a060 <strlen@plt>
   1ae28:	lea    rdi,[rax+0x9]
   1ae2c:	mov    rbx,rax
   1ae2f:	call   a4a0 <malloc@plt>
   1ae34:	test   rax,rax
   1ae37:	je     1b040 <__sprintf_chk@plt+0x10690>
   1ae3d:	mov    QWORD PTR [r14+0x60],rax
   1ae41:	lea    rdx,[rbx+0x1]
   1ae45:	lea    rdi,[rax+0x8]
   1ae49:	mov    rsi,rbp
   1ae4c:	mov    QWORD PTR [rax],0x0
   1ae53:	xor    ebx,ebx
   1ae55:	lea    r13,[r14+0x90]
   1ae5c:	lea    r12,[r14+0x98]
   1ae63:	call   a420 <memcpy@plt>
   1ae68:	mov    rsi,QWORD PTR [rip+0x644e1]        # 7f350 <obstack_alloc_failed_handler@@Base+0x518>
   1ae6f:	lea    rdi,[r14+0x68]
   1ae73:	mov    QWORD PTR [r14+0x68],0x0
   1ae7b:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1ae80:	cmp    QWORD PTR [rip+0x645f0],0x0        # 7f478 <obstack_alloc_failed_handler@@Base+0x640>
   1ae88:	mov    QWORD PTR [r14+0x70],0x0
   1ae90:	mov    QWORD PTR [r14+0x78],0x0
   1ae98:	mov    QWORD PTR [r14+0x80],0x0
   1aea3:	mov    QWORD PTR [r14+0x88],0x0
   1aeae:	mov    QWORD PTR [r14+0x98],0x0
   1aeb9:	mov    QWORD PTR [r14+0x90],0x0
   1aec4:	je     1af02 <__sprintf_chk@plt+0x10552>
   1aec6:	cs nop WORD PTR [rax+rax*1+0x0]
   1aed0:	mov    rax,QWORD PTR [rip+0x645a9]        # 7f480 <obstack_alloc_failed_handler@@Base+0x648>
   1aed7:	lea    rdx,[rbx+rbx*2]
   1aedb:	mov    rsi,r13
   1aede:	mov    rdi,r12
   1aee1:	add    rbx,0x1
   1aee5:	lea    rax,[rax+rdx*8]
   1aee9:	mov    rcx,QWORD PTR [rax+0x8]
   1aeed:	mov    r8,QWORD PTR [rax+0x10]
   1aef1:	mov    rdx,QWORD PTR [rax]
   1aef4:	call   19580 <__sprintf_chk@plt+0xebd0>
   1aef9:	cmp    rbx,QWORD PTR [rip+0x64578]        # 7f478 <obstack_alloc_failed_handler@@Base+0x640>
   1af00:	jb     1aed0 <__sprintf_chk@plt+0x10520>
   1af02:	mov    rsi,QWORD PTR [rip+0x6442f]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   1af09:	lea    rdi,[r14+0xa0]
   1af10:	call   9e80 <strcpy@plt>
   1af15:	mov    r12,QWORD PTR [rip+0x64824]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   1af1c:	test   r12,r12
   1af1f:	jne    1af3d <__sprintf_chk@plt+0x1058d>
   1af21:	jmp    1ad00 <__sprintf_chk@plt+0x10350>
   1af26:	cs nop WORD PTR [rax+rax*1+0x0]
   1af30:	mov    r12,QWORD PTR [r12]
   1af34:	test   r12,r12
   1af37:	je     1ad00 <__sprintf_chk@plt+0x10350>
   1af3d:	cmp    BYTE PTR [r12+0x58],0x0
   1af43:	jne    1af30 <__sprintf_chk@plt+0x10580>
   1af45:	mov    rbx,QWORD PTR [r12+0x98]
   1af4d:	mov    rsi,QWORD PTR [r12+0xa0]
   1af55:	mov    rdi,rbp
   1af58:	mov    rdx,rbx
   1af5b:	call   9e50 <strncmp@plt>
   1af60:	test   eax,eax
   1af62:	jne    1af30 <__sprintf_chk@plt+0x10580>
   1af64:	cmp    BYTE PTR [rbp+rbx*1+0x0],0x2f
   1af69:	jne    1af30 <__sprintf_chk@plt+0x10580>
   1af6b:	movzx  edx,BYTE PTR [rbp+0x0]
   1af6f:	mov    rcx,rbp
   1af72:	cmp    dl,0x2f
   1af75:	jne    1af8d <__sprintf_chk@plt+0x105dd>
   1af77:	nop    WORD PTR [rax+rax*1+0x0]
   1af80:	movzx  edx,BYTE PTR [rcx+0x1]
   1af84:	add    rcx,0x1
   1af88:	cmp    dl,0x2f
   1af8b:	je     1af80 <__sprintf_chk@plt+0x105d0>
   1af8d:	test   dl,dl
   1af8f:	je     1afc8 <__sprintf_chk@plt+0x10618>
   1af91:	mov    rsi,rcx
   1af94:	xor    edi,edi
   1af96:	jmp    1afb6 <__sprintf_chk@plt+0x10606>
   1af98:	nop    DWORD PTR [rax+rax*1+0x0]
   1afa0:	test   dil,dil
   1afa3:	je     1afaa <__sprintf_chk@plt+0x105fa>
   1afa5:	xor    edi,edi
   1afa7:	mov    rcx,rsi
   1afaa:	movzx  edx,BYTE PTR [rsi+0x1]
   1afae:	add    rsi,0x1
   1afb2:	test   dl,dl
   1afb4:	je     1afc8 <__sprintf_chk@plt+0x10618>
   1afb6:	cmp    dl,0x2f
   1afb9:	jne    1afa0 <__sprintf_chk@plt+0x105f0>
   1afbb:	mov    edi,0x1
   1afc0:	jmp    1afaa <__sprintf_chk@plt+0x105fa>
   1afc2:	nop    WORD PTR [rax+rax*1+0x0]
   1afc8:	lea    rdx,[rbp+rbx*1+0x1]
   1afcd:	cmp    rcx,rdx
   1afd0:	jne    1af30 <__sprintf_chk@plt+0x10580>
   1afd6:	mov    rdi,r12
   1afd9:	mov    DWORD PTR [rsp+0xc],eax
   1afdd:	call   16860 <__sprintf_chk@plt+0xbeb0>
   1afe2:	mov    eax,DWORD PTR [rsp+0xc]
   1afe6:	jmp    1ad02 <__sprintf_chk@plt+0x10352>
   1afeb:	mov    rax,QWORD PTR [rip+0x6485e]        # 7f850 <obstack_alloc_failed_handler@@Base+0xa18>
   1aff2:	mov    QWORD PTR [rip+0x64857],r14        # 7f850 <obstack_alloc_failed_handler@@Base+0xa18>
   1aff9:	mov    QWORD PTR [r14],rax
   1affc:	jmp    1adbc <__sprintf_chk@plt+0x1040c>
   1b001:	mov    rsi,rbp
   1b004:	lea    rdi,[rip+0x4ba51]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   1b00b:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1b010:	mov    eax,0xffffffff
   1b015:	jmp    1ad02 <__sprintf_chk@plt+0x10352>
   1b01a:	mov    rsi,rbp
   1b01d:	lea    rdi,[rip+0x4801f]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   1b024:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1b029:	mov    edi,r14d
   1b02c:	call   a200 <close@plt>
   1b031:	mov    eax,0xffffffff
   1b036:	jmp    1ad02 <__sprintf_chk@plt+0x10352>
   1b03b:	call   a0a0 <__stack_chk_fail@plt>
   1b040:	call   19130 <__sprintf_chk@plt+0xe780>
   1b045:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b050:	endbr64 
   1b054:	push   r14
   1b056:	push   r13
   1b058:	push   r12
   1b05a:	push   rbp
   1b05b:	mov    rbp,rdi
   1b05e:	push   rbx
   1b05f:	sub    rsp,0x140
   1b066:	mov    r12,QWORD PTR [rip+0x642cb]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   1b06d:	mov    rax,QWORD PTR fs:0x28
   1b076:	mov    QWORD PTR [rsp+0x138],rax
   1b07e:	xor    eax,eax
   1b080:	cmp    BYTE PTR [rip+0x64729],0x0        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1b087:	mov    BYTE PTR [rsp+0xf],0x0
   1b08c:	jne    1b09e <__sprintf_chk@plt+0x106ee>
   1b08e:	mov    rdi,r12
   1b091:	call   32340 <__sprintf_chk@plt+0x27990>
   1b096:	test   al,al
   1b098:	jne    1b2e8 <__sprintf_chk@plt+0x10938>
   1b09e:	mov    rdi,r12
   1b0a1:	call   169d0 <__sprintf_chk@plt+0xc020>
   1b0a6:	test   rax,rax
   1b0a9:	jne    1b1b0 <__sprintf_chk@plt+0x10800>
   1b0af:	call   9e40 <__errno_location@plt>
   1b0b4:	lea    r13,[rsp+0xa0]
   1b0bc:	mov    rbx,rax
   1b0bf:	jmp    1b0e3 <__sprintf_chk@plt+0x10733>
   1b0c1:	nop    DWORD PTR [rax+0x0]
   1b0c8:	mov    DWORD PTR [rbx],r14d
   1b0cb:	xor    esi,esi
   1b0cd:	lea    rdx,[rsp+0xf]
   1b0d2:	mov    rdi,rbp
   1b0d5:	call   19d40 <__sprintf_chk@plt+0xf390>
   1b0da:	cmp    eax,0x1
   1b0dd:	jne    1b2b0 <__sprintf_chk@plt+0x10900>
   1b0e3:	mov    edi,DWORD PTR [rip+0x60f37]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b0e9:	xor    r8d,r8d
   1b0ec:	mov    rcx,rbp
   1b0ef:	mov    rsi,r12
   1b0f2:	mov    edx,edi
   1b0f4:	call   a5a0 <linkat@plt>
   1b0f9:	mov    r14d,DWORD PTR [rbx]
   1b0fc:	test   eax,eax
   1b0fe:	je     1b1d0 <__sprintf_chk@plt+0x10820>
   1b104:	cmp    r14d,0x11
   1b108:	jne    1b119 <__sprintf_chk@plt+0x10769>
   1b10a:	mov    rsi,rbp
   1b10d:	mov    rdi,r12
   1b110:	call   a320 <strcmp@plt>
   1b115:	test   eax,eax
   1b117:	je     1b180 <__sprintf_chk@plt+0x107d0>
   1b119:	mov    edi,DWORD PTR [rip+0x60f01]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b11f:	mov    ecx,0x100
   1b124:	mov    rdx,r13
   1b127:	mov    rsi,r12
   1b12a:	call   a960 <fstatat@plt>
   1b12f:	test   eax,eax
   1b131:	jne    1b0c8 <__sprintf_chk@plt+0x10718>
   1b133:	mov    edi,DWORD PTR [rip+0x60ee7]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b139:	lea    rdx,[rsp+0x10]
   1b13e:	mov    ecx,0x100
   1b143:	mov    rsi,rbp
   1b146:	call   a960 <fstatat@plt>
   1b14b:	test   eax,eax
   1b14d:	jne    1b0c8 <__sprintf_chk@plt+0x10718>
   1b153:	mov    rax,QWORD PTR [rsp+0x10]
   1b158:	cmp    QWORD PTR [rsp+0xa0],rax
   1b160:	jne    1b0c8 <__sprintf_chk@plt+0x10718>
   1b166:	mov    rax,QWORD PTR [rsp+0x18]
   1b16b:	cmp    QWORD PTR [rsp+0xa8],rax
   1b173:	jne    1b0c8 <__sprintf_chk@plt+0x10718>
   1b179:	nop    DWORD PTR [rax+0x0]
   1b180:	xor    r8d,r8d
   1b183:	mov    rax,QWORD PTR [rsp+0x138]
   1b18b:	sub    rax,QWORD PTR fs:0x28
   1b194:	jne    1b301 <__sprintf_chk@plt+0x10951>
   1b19a:	add    rsp,0x140
   1b1a1:	mov    eax,r8d
   1b1a4:	pop    rbx
   1b1a5:	pop    rbp
   1b1a6:	pop    r12
   1b1a8:	pop    r13
   1b1aa:	pop    r14
   1b1ac:	ret    
   1b1ad:	nop    DWORD PTR [rax]
   1b1b0:	lea    rdx,[rsp+0xf]
   1b1b5:	mov    rcx,rax
   1b1b8:	xor    esi,esi
   1b1ba:	mov    rdi,rbp
   1b1bd:	call   1ac90 <__sprintf_chk@plt+0x102e0>
   1b1c2:	mov    r8d,eax
   1b1c5:	jmp    1b183 <__sprintf_chk@plt+0x107d3>
   1b1c7:	nop    WORD PTR [rax+rax*1+0x0]
   1b1d0:	mov    rbx,QWORD PTR [rip+0x64679]        # 7f850 <obstack_alloc_failed_handler@@Base+0xa18>
   1b1d7:	test   rbx,rbx
   1b1da:	je     1b180 <__sprintf_chk@plt+0x107d0>
   1b1dc:	mov    edi,DWORD PTR [rip+0x60e3e]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b1e2:	lea    rdx,[rsp+0xa0]
   1b1ea:	mov    ecx,0x100
   1b1ef:	mov    rsi,r12
   1b1f2:	call   a960 <fstatat@plt>
   1b1f7:	test   eax,eax
   1b1f9:	jne    1b180 <__sprintf_chk@plt+0x107d0>
   1b1fb:	mov    eax,DWORD PTR [rip+0x645c7]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   1b201:	mov    rdx,QWORD PTR [rsp+0xa0]
   1b209:	mov    rdi,QWORD PTR [rsp+0xa8]
   1b211:	jmp    1b224 <__sprintf_chk@plt+0x10874>
   1b213:	nop    DWORD PTR [rax+rax*1+0x0]
   1b218:	mov    rbx,QWORD PTR [rbx]
   1b21b:	test   rbx,rbx
   1b21e:	je     1b180 <__sprintf_chk@plt+0x107d0>
   1b224:	cmp    DWORD PTR [rbx+0x58],eax
   1b227:	jne    1b218 <__sprintf_chk@plt+0x10868>
   1b229:	cmp    QWORD PTR [rbx+0x8],rdx
   1b22d:	jne    1b218 <__sprintf_chk@plt+0x10868>
   1b22f:	cmp    QWORD PTR [rbx+0x10],rdi
   1b233:	jne    1b218 <__sprintf_chk@plt+0x10868>
   1b235:	mov    rcx,QWORD PTR [rbx+0x18]
   1b239:	mov    r8,QWORD PTR [rbx+0x20]
   1b23d:	mov    rsi,rcx
   1b240:	not    rsi
   1b243:	shr    rsi,0x3f
   1b247:	cmp    rcx,0xffffffffffffffff
   1b24b:	setl   cl
   1b24e:	movzx  ecx,cl
   1b251:	sub    esi,ecx
   1b253:	mov    rcx,r8
   1b256:	not    rcx
   1b259:	shr    rcx,0x3f
   1b25d:	cmp    r8,0xffffffffffffffff
   1b261:	setl   r8b
   1b265:	movzx  r8d,r8b
   1b269:	sub    ecx,r8d
   1b26c:	lea    ecx,[rcx+rsi*2]
   1b26f:	test   ecx,ecx
   1b271:	jne    1b218 <__sprintf_chk@plt+0x10868>
   1b273:	mov    rdi,rbp
   1b276:	call   a060 <strlen@plt>
   1b27b:	lea    rdi,[rax+0x9]
   1b27f:	mov    r13,rax
   1b282:	call   a4a0 <malloc@plt>
   1b287:	mov    r12,rax
   1b28a:	test   rax,rax
   1b28d:	je     1b306 <__sprintf_chk@plt+0x10956>
   1b28f:	lea    rdi,[rax+0x8]
   1b293:	lea    rdx,[r13+0x1]
   1b297:	mov    rsi,rbp
   1b29a:	call   a420 <memcpy@plt>
   1b29f:	mov    rax,QWORD PTR [rbx+0x60]
   1b2a3:	mov    QWORD PTR [r12],rax
   1b2a7:	mov    QWORD PTR [rbx+0x60],r12
   1b2ab:	jmp    1b180 <__sprintf_chk@plt+0x107d0>
   1b2b0:	xor    r8d,r8d
   1b2b3:	cmp    eax,0x2
   1b2b6:	je     1b183 <__sprintf_chk@plt+0x107d3>
   1b2bc:	cmp    BYTE PTR [rip+0x63c21],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   1b2c3:	je     1b2ce <__sprintf_chk@plt+0x1091e>
   1b2c5:	cmp    DWORD PTR [rbx],0x11
   1b2c8:	je     1b183 <__sprintf_chk@plt+0x107d3>
   1b2ce:	mov    rsi,rbp
   1b2d1:	mov    rdi,r12
   1b2d4:	call   3c390 <__sprintf_chk@plt+0x319e0>
   1b2d9:	mov    r8d,0x1
   1b2df:	jmp    1b183 <__sprintf_chk@plt+0x107d3>
   1b2e4:	nop    DWORD PTR [rax+0x0]
   1b2e8:	lea    rdx,[rsp+0xf]
   1b2ed:	xor    ecx,ecx
   1b2ef:	xor    esi,esi
   1b2f1:	mov    rdi,rbp
   1b2f4:	call   1ac90 <__sprintf_chk@plt+0x102e0>
   1b2f9:	mov    r8d,eax
   1b2fc:	jmp    1b183 <__sprintf_chk@plt+0x107d3>
   1b301:	call   a0a0 <__stack_chk_fail@plt>
   1b306:	call   19130 <__sprintf_chk@plt+0xe780>
   1b30b:	nop    DWORD PTR [rax+rax*1+0x0]
   1b310:	endbr64 
   1b314:	push   r12
   1b316:	push   rbp
   1b317:	mov    rbp,rdi
   1b31a:	push   rbx
   1b31b:	sub    rsp,0x20
   1b31f:	mov    r12,QWORD PTR [rip+0x64012]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   1b326:	mov    rax,QWORD PTR fs:0x28
   1b32f:	mov    QWORD PTR [rsp+0x18],rax
   1b334:	xor    eax,eax
   1b336:	cmp    BYTE PTR [rip+0x64473],0x0        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1b33d:	mov    BYTE PTR [rsp+0x17],0x0
   1b342:	jne    1b357 <__sprintf_chk@plt+0x109a7>
   1b344:	cmp    BYTE PTR [r12],0x2f
   1b349:	je     1b390 <__sprintf_chk@plt+0x109e0>
   1b34b:	mov    rdi,r12
   1b34e:	call   32340 <__sprintf_chk@plt+0x27990>
   1b353:	test   al,al
   1b355:	jne    1b390 <__sprintf_chk@plt+0x109e0>
   1b357:	lea    rbx,[rsp+0x17]
   1b35c:	mov    esi,DWORD PTR [rip+0x60cbe]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b362:	mov    rdx,rbp
   1b365:	mov    rdi,r12
   1b368:	call   a8b0 <symlinkat@plt>
   1b36d:	test   eax,eax
   1b36f:	je     1b3e0 <__sprintf_chk@plt+0x10a30>
   1b371:	xor    esi,esi
   1b373:	mov    rdx,rbx
   1b376:	mov    rdi,rbp
   1b379:	call   19d40 <__sprintf_chk@plt+0xf390>
   1b37e:	test   eax,eax
   1b380:	je     1b3c8 <__sprintf_chk@plt+0x10a18>
   1b382:	cmp    eax,0x2
   1b385:	je     1b3c0 <__sprintf_chk@plt+0x10a10>
   1b387:	mov    r12,QWORD PTR [rip+0x63faa]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   1b38e:	jmp    1b35c <__sprintf_chk@plt+0x109ac>
   1b390:	lea    rdx,[rsp+0x17]
   1b395:	xor    ecx,ecx
   1b397:	mov    esi,0x1
   1b39c:	mov    rdi,rbp
   1b39f:	call   1ac90 <__sprintf_chk@plt+0x102e0>
   1b3a4:	mov    rdx,QWORD PTR [rsp+0x18]
   1b3a9:	sub    rdx,QWORD PTR fs:0x28
   1b3b2:	jne    1b412 <__sprintf_chk@plt+0x10a62>
   1b3b4:	add    rsp,0x20
   1b3b8:	pop    rbx
   1b3b9:	pop    rbp
   1b3ba:	pop    r12
   1b3bc:	ret    
   1b3bd:	nop    DWORD PTR [rax]
   1b3c0:	xor    eax,eax
   1b3c2:	jmp    1b3a4 <__sprintf_chk@plt+0x109f4>
   1b3c4:	nop    DWORD PTR [rax+0x0]
   1b3c8:	mov    rdi,QWORD PTR [rip+0x63f69]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   1b3cf:	mov    rsi,rbp
   1b3d2:	call   3c530 <__sprintf_chk@plt+0x31b80>
   1b3d7:	mov    eax,0xffffffff
   1b3dc:	jmp    1b3a4 <__sprintf_chk@plt+0x109f4>
   1b3de:	xchg   ax,ax
   1b3e0:	mov    DWORD PTR [rsp+0xc],eax
   1b3e4:	mov    edx,0xffffffff
   1b3e9:	xor    r8d,r8d
   1b3ec:	xor    ecx,ecx
   1b3ee:	push   0x100
   1b3f3:	mov    r9d,0x32
   1b3f9:	lea    rsi,[rip+0x63f20]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1b400:	mov    rdi,rbp
   1b403:	push   0x0
   1b405:	call   17270 <__sprintf_chk@plt+0xc8c0>
   1b40a:	pop    rax
   1b40b:	pop    rdx
   1b40c:	mov    eax,DWORD PTR [rsp+0xc]
   1b410:	jmp    1b3a4 <__sprintf_chk@plt+0x109f4>
   1b412:	call   a0a0 <__stack_chk_fail@plt>
   1b417:	nop    WORD PTR [rax+rax*1+0x0]
   1b420:	endbr64 
   1b424:	push   r13
   1b426:	mov    r13,rdi
   1b429:	push   r12
   1b42b:	push   rbp
   1b42c:	mov    ebp,esi
   1b42e:	push   rbx
   1b42f:	sub    rsp,0x28
   1b433:	mov    ecx,DWORD PTR [rip+0x64317]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   1b439:	mov    ebx,DWORD PTR [rip+0x63f51]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   1b43f:	mov    rax,QWORD PTR fs:0x28
   1b448:	mov    QWORD PTR [rsp+0x18],rax
   1b44d:	xor    eax,eax
   1b44f:	mov    BYTE PTR [rsp+0x17],0x0
   1b454:	test   ecx,ecx
   1b456:	jle    1b45b <__sprintf_chk@plt+0x10aab>
   1b458:	and    ebx,0xffffffc0
   1b45b:	and    ebx,0x61ff
   1b461:	lea    r12,[rsp+0x17]
   1b466:	mov    rcx,QWORD PTR [rip+0x63f33]        # 7f3a0 <obstack_alloc_failed_handler@@Base+0x568>
   1b46d:	mov    edi,DWORD PTR [rip+0x60bad]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b473:	mov    edx,ebx
   1b475:	mov    rsi,r13
   1b478:	call   a3a0 <mknodat@plt>
   1b47d:	test   eax,eax
   1b47f:	je     1b4d0 <__sprintf_chk@plt+0x10b20>
   1b481:	xor    esi,esi
   1b483:	mov    rdx,r12
   1b486:	mov    rdi,r13
   1b489:	call   19d40 <__sprintf_chk@plt+0xf390>
   1b48e:	test   eax,eax
   1b490:	je     1b4b8 <__sprintf_chk@plt+0x10b08>
   1b492:	cmp    eax,0x2
   1b495:	jne    1b466 <__sprintf_chk@plt+0x10ab6>
   1b497:	xor    eax,eax
   1b499:	mov    rdx,QWORD PTR [rsp+0x18]
   1b49e:	sub    rdx,QWORD PTR fs:0x28
   1b4a7:	jne    1b50b <__sprintf_chk@plt+0x10b5b>
   1b4a9:	add    rsp,0x28
   1b4ad:	pop    rbx
   1b4ae:	pop    rbp
   1b4af:	pop    r12
   1b4b1:	pop    r13
   1b4b3:	ret    
   1b4b4:	nop    DWORD PTR [rax+0x0]
   1b4b8:	mov    rsi,r13
   1b4bb:	lea    rdi,[rip+0x48dfe]        # 642c0 <_obstack_memory_used@@Base+0x17640>
   1b4c2:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1b4c7:	mov    eax,0xffffffff
   1b4cc:	jmp    1b499 <__sprintf_chk@plt+0x10ae9>
   1b4ce:	xchg   ax,ax
   1b4d0:	mov    DWORD PTR [rsp+0xc],eax
   1b4d4:	mov    edx,0xffffffff
   1b4d9:	movsx  r9d,bpl
   1b4dd:	mov    rdi,r13
   1b4e0:	mov    ecx,DWORD PTR [rip+0x64262]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   1b4e6:	push   0x100
   1b4eb:	mov    r8d,0x1ff
   1b4f1:	lea    rsi,[rip+0x63e28]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1b4f8:	push   0x0
   1b4fa:	not    ecx
   1b4fc:	and    ecx,ebx
   1b4fe:	call   17270 <__sprintf_chk@plt+0xc8c0>
   1b503:	pop    rax
   1b504:	pop    rdx
   1b505:	mov    eax,DWORD PTR [rsp+0xc]
   1b509:	jmp    1b499 <__sprintf_chk@plt+0x10ae9>
   1b50b:	call   a0a0 <__stack_chk_fail@plt>
   1b510:	endbr64 
   1b514:	push   r13
   1b516:	mov    r13,rdi
   1b519:	push   r12
   1b51b:	push   rbp
   1b51c:	mov    ebp,esi
   1b51e:	push   rbx
   1b51f:	sub    rsp,0x28
   1b523:	mov    ecx,DWORD PTR [rip+0x64227]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   1b529:	mov    ebx,DWORD PTR [rip+0x63e61]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   1b52f:	mov    rax,QWORD PTR fs:0x28
   1b538:	mov    QWORD PTR [rsp+0x18],rax
   1b53d:	xor    eax,eax
   1b53f:	mov    BYTE PTR [rsp+0x17],0x0
   1b544:	test   ecx,ecx
   1b546:	jle    1b54b <__sprintf_chk@plt+0x10b9b>
   1b548:	and    ebx,0xffffffc0
   1b54b:	and    ebx,0x1ff
   1b551:	lea    r12,[rsp+0x17]
   1b556:	mov    edi,DWORD PTR [rip+0x60ac4]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1b55c:	mov    edx,ebx
   1b55e:	mov    rsi,r13
   1b561:	call   9db0 <mkfifoat@plt>
   1b566:	test   eax,eax
   1b568:	je     1b5c0 <__sprintf_chk@plt+0x10c10>
   1b56a:	xor    esi,esi
   1b56c:	mov    rdx,r12
   1b56f:	mov    rdi,r13
   1b572:	call   19d40 <__sprintf_chk@plt+0xf390>
   1b577:	test   eax,eax
   1b579:	je     1b5a0 <__sprintf_chk@plt+0x10bf0>
   1b57b:	cmp    eax,0x2
   1b57e:	jne    1b556 <__sprintf_chk@plt+0x10ba6>
   1b580:	xor    eax,eax
   1b582:	mov    rdx,QWORD PTR [rsp+0x18]
   1b587:	sub    rdx,QWORD PTR fs:0x28
   1b590:	jne    1b5fb <__sprintf_chk@plt+0x10c4b>
   1b592:	add    rsp,0x28
   1b596:	pop    rbx
   1b597:	pop    rbp
   1b598:	pop    r12
   1b59a:	pop    r13
   1b59c:	ret    
   1b59d:	nop    DWORD PTR [rax]
   1b5a0:	mov    rsi,r13
   1b5a3:	lea    rdi,[rip+0x48d1c]        # 642c6 <_obstack_memory_used@@Base+0x17646>
   1b5aa:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1b5af:	mov    eax,0xffffffff
   1b5b4:	jmp    1b582 <__sprintf_chk@plt+0x10bd2>
   1b5b6:	cs nop WORD PTR [rax+rax*1+0x0]
   1b5c0:	mov    DWORD PTR [rsp+0xc],eax
   1b5c4:	mov    edx,0xffffffff
   1b5c9:	movsx  r9d,bpl
   1b5cd:	mov    rdi,r13
   1b5d0:	mov    ecx,DWORD PTR [rip+0x64172]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   1b5d6:	push   0x100
   1b5db:	mov    r8d,0x1ff
   1b5e1:	lea    rsi,[rip+0x63d38]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1b5e8:	push   0x0
   1b5ea:	not    ecx
   1b5ec:	and    ecx,ebx
   1b5ee:	call   17270 <__sprintf_chk@plt+0xc8c0>
   1b5f3:	pop    rax
   1b5f4:	pop    rdx
   1b5f5:	mov    eax,DWORD PTR [rsp+0xc]
   1b5f9:	jmp    1b582 <__sprintf_chk@plt+0x10bd2>
   1b5fb:	call   a0a0 <__stack_chk_fail@plt>
   1b600:	endbr64 
   1b604:	push   r14
   1b606:	mov    r14,rcx
   1b609:	push   r13
   1b60b:	mov    r13,rdi
   1b60e:	mov    rdi,rsi
   1b611:	push   r12
   1b613:	mov    r12,rdx
   1b616:	push   rbp
   1b617:	mov    rbp,rsi
   1b61a:	push   rbx
   1b61b:	call   16e70 <__sprintf_chk@plt+0xc4c0>
   1b620:	test   rax,rax
   1b623:	je     1b62f <__sprintf_chk@plt+0x10c7f>
   1b625:	test   BYTE PTR [rax+0x18],0x2
   1b629:	jne    1b6c0 <__sprintf_chk@plt+0x10d10>
   1b62f:	mov    edi,0x18
   1b634:	call   a4a0 <malloc@plt>
   1b639:	mov    rbx,rax
   1b63c:	test   rax,rax
   1b63f:	je     1b6da <__sprintf_chk@plt+0x10d2a>
   1b645:	mov    rdi,rbp
   1b648:	call   a060 <strlen@plt>
   1b64d:	lea    r14,[rax+0x1]
   1b651:	mov    rdi,r14
   1b654:	call   a4a0 <malloc@plt>
   1b659:	mov    rdi,rax
   1b65c:	test   rax,rax
   1b65f:	je     1b6da <__sprintf_chk@plt+0x10d2a>
   1b661:	mov    rdx,r14
   1b664:	mov    rsi,rbp
   1b667:	call   a420 <memcpy@plt>
   1b66c:	mov    QWORD PTR [rbx+0x8],rax
   1b670:	test   r12,r12
   1b673:	je     1b69f <__sprintf_chk@plt+0x10cef>
   1b675:	mov    rdi,r12
   1b678:	call   a060 <strlen@plt>
   1b67d:	lea    r14,[rax+0x1]
   1b681:	mov    rdi,r14
   1b684:	call   a4a0 <malloc@plt>
   1b689:	mov    rdi,rax
   1b68c:	test   rax,rax
   1b68f:	je     1b6da <__sprintf_chk@plt+0x10d2a>
   1b691:	mov    rsi,r12
   1b694:	mov    rdx,r14
   1b697:	call   a420 <memcpy@plt>
   1b69c:	mov    r12,rax
   1b69f:	mov    rax,QWORD PTR [r13+0x0]
   1b6a3:	mov    QWORD PTR [rbx+0x10],r12
   1b6a7:	mov    QWORD PTR [r13+0x0],rbx
   1b6ab:	mov    QWORD PTR [rbx],rax
   1b6ae:	pop    rbx
   1b6af:	pop    rbp
   1b6b0:	pop    r12
   1b6b2:	pop    r13
   1b6b4:	pop    r14
   1b6b6:	ret    
   1b6b7:	nop    WORD PTR [rax+rax*1+0x0]
   1b6c0:	pop    rbx
   1b6c1:	mov    rcx,r14
   1b6c4:	mov    rdx,r12
   1b6c7:	mov    rsi,rbp
   1b6ca:	mov    rdi,r13
   1b6cd:	pop    rbp
   1b6ce:	mov    rax,QWORD PTR [rax+0x10]
   1b6d2:	pop    r12
   1b6d4:	pop    r13
   1b6d6:	pop    r14
   1b6d8:	jmp    rax
   1b6da:	call   19130 <__sprintf_chk@plt+0xe780>
   1b6df:	nop
   1b6e0:	endbr64 
   1b6e4:	push   r12
   1b6e6:	lea    r12,[rdi+0x28]
   1b6ea:	push   rbp
   1b6eb:	mov    rbp,rdx
   1b6ee:	push   rbx
   1b6ef:	mov    rbx,rdi
   1b6f2:	mov    rdi,QWORD PTR [rdi+0x28]
   1b6f6:	test   rdi,rdi
   1b6f9:	je     1b708 <__sprintf_chk@plt+0x10d58>
   1b6fb:	call   9ce0 <free@plt>
   1b700:	mov    QWORD PTR [rbx+0x28],0x0
   1b708:	xor    edi,edi
   1b70a:	mov    rdx,r12
   1b70d:	mov    rsi,rbp
   1b710:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1b715:	test   al,al
   1b717:	je     1b720 <__sprintf_chk@plt+0x10d70>
   1b719:	pop    rbx
   1b71a:	pop    rbp
   1b71b:	pop    r12
   1b71d:	ret    
   1b71e:	xchg   ax,ax
   1b720:	mov    rdi,QWORD PTR [rbx+0x28]
   1b724:	call   9ce0 <free@plt>
   1b729:	test   rbp,rbp
   1b72c:	je     1b758 <__sprintf_chk@plt+0x10da8>
   1b72e:	mov    rdi,rbp
   1b731:	call   a060 <strlen@plt>
   1b736:	lea    r12,[rax+0x1]
   1b73a:	mov    rdi,r12
   1b73d:	call   a4a0 <malloc@plt>
   1b742:	mov    rdi,rax
   1b745:	test   rax,rax
   1b748:	je     1b761 <__sprintf_chk@plt+0x10db1>
   1b74a:	mov    rsi,rbp
   1b74d:	mov    rdx,r12
   1b750:	call   a420 <memcpy@plt>
   1b755:	mov    rbp,rax
   1b758:	mov    QWORD PTR [rbx+0x28],rbp
   1b75c:	pop    rbx
   1b75d:	pop    rbp
   1b75e:	pop    r12
   1b760:	ret    
   1b761:	call   19130 <__sprintf_chk@plt+0xe780>
   1b766:	cs nop WORD PTR [rax+rax*1+0x0]
   1b770:	endbr64 
   1b774:	push   r12
   1b776:	lea    r12,[rdi+0x18]
   1b77a:	push   rbp
   1b77b:	mov    rbp,rdx
   1b77e:	push   rbx
   1b77f:	mov    rbx,rdi
   1b782:	mov    rdi,QWORD PTR [rdi+0x18]
   1b786:	test   rdi,rdi
   1b789:	je     1b798 <__sprintf_chk@plt+0x10de8>
   1b78b:	call   9ce0 <free@plt>
   1b790:	mov    QWORD PTR [rbx+0x18],0x0
   1b798:	xor    edi,edi
   1b79a:	mov    rdx,r12
   1b79d:	mov    rsi,rbp
   1b7a0:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1b7a5:	test   al,al
   1b7a7:	je     1b7b0 <__sprintf_chk@plt+0x10e00>
   1b7a9:	pop    rbx
   1b7aa:	pop    rbp
   1b7ab:	pop    r12
   1b7ad:	ret    
   1b7ae:	xchg   ax,ax
   1b7b0:	mov    rdi,QWORD PTR [rbx+0x18]
   1b7b4:	call   9ce0 <free@plt>
   1b7b9:	test   rbp,rbp
   1b7bc:	je     1b7e8 <__sprintf_chk@plt+0x10e38>
   1b7be:	mov    rdi,rbp
   1b7c1:	call   a060 <strlen@plt>
   1b7c6:	lea    r12,[rax+0x1]
   1b7ca:	mov    rdi,r12
   1b7cd:	call   a4a0 <malloc@plt>
   1b7d2:	mov    rdi,rax
   1b7d5:	test   rax,rax
   1b7d8:	je     1b7f1 <__sprintf_chk@plt+0x10e41>
   1b7da:	mov    rsi,rbp
   1b7dd:	mov    rdx,r12
   1b7e0:	call   a420 <memcpy@plt>
   1b7e5:	mov    rbp,rax
   1b7e8:	mov    QWORD PTR [rbx+0x18],rbp
   1b7ec:	pop    rbx
   1b7ed:	pop    rbp
   1b7ee:	pop    r12
   1b7f0:	ret    
   1b7f1:	call   19130 <__sprintf_chk@plt+0xe780>
   1b7f6:	cs nop WORD PTR [rax+rax*1+0x0]
   1b800:	endbr64 
   1b804:	cmp    BYTE PTR [rdi+0x151],0x0
   1b80b:	je     1b810 <__sprintf_chk@plt+0x10e60>
   1b80d:	ret    
   1b80e:	xchg   ax,ax
   1b810:	push   r12
   1b812:	push   rbp
   1b813:	mov    rbp,rdx
   1b816:	push   rbx
   1b817:	mov    rbx,rdi
   1b81a:	mov    rdi,QWORD PTR [rdi]
   1b81d:	test   rdi,rdi
   1b820:	je     1b82e <__sprintf_chk@plt+0x10e7e>
   1b822:	call   9ce0 <free@plt>
   1b827:	mov    QWORD PTR [rbx],0x0
   1b82e:	xor    edi,edi
   1b830:	mov    rdx,rbx
   1b833:	mov    rsi,rbp
   1b836:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1b83b:	test   al,al
   1b83d:	je     1b880 <__sprintf_chk@plt+0x10ed0>
   1b83f:	mov    rdi,QWORD PTR [rbx+0x8]
   1b843:	lea    r12,[rbx+0x8]
   1b847:	test   rdi,rdi
   1b84a:	je     1b859 <__sprintf_chk@plt+0x10ea9>
   1b84c:	call   9ce0 <free@plt>
   1b851:	mov    QWORD PTR [rbx+0x8],0x0
   1b859:	xor    edi,edi
   1b85b:	mov    rdx,r12
   1b85e:	mov    rsi,rbp
   1b861:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1b866:	test   al,al
   1b868:	je     1b890 <__sprintf_chk@plt+0x10ee0>
   1b86a:	mov    rbp,QWORD PTR [rbx+0x8]
   1b86e:	mov    rdi,rbp
   1b871:	call   484b0 <argp_usage@@Base+0x5130>
   1b876:	mov    BYTE PTR [rbx+0x10],al
   1b879:	pop    rbx
   1b87a:	pop    rbp
   1b87b:	pop    r12
   1b87d:	ret    
   1b87e:	xchg   ax,ax
   1b880:	mov    rsi,rbp
   1b883:	mov    rdi,rbx
   1b886:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1b88b:	jmp    1b83f <__sprintf_chk@plt+0x10e8f>
   1b88d:	nop    DWORD PTR [rax]
   1b890:	mov    rdi,QWORD PTR [rbx+0x8]
   1b894:	call   9ce0 <free@plt>
   1b899:	test   rbp,rbp
   1b89c:	je     1b8c8 <__sprintf_chk@plt+0x10f18>
   1b89e:	mov    rdi,rbp
   1b8a1:	call   a060 <strlen@plt>
   1b8a6:	lea    r12,[rax+0x1]
   1b8aa:	mov    rdi,r12
   1b8ad:	call   a4a0 <malloc@plt>
   1b8b2:	mov    rdi,rax
   1b8b5:	test   rax,rax
   1b8b8:	je     1b8dc <__sprintf_chk@plt+0x10f2c>
   1b8ba:	mov    rsi,rbp
   1b8bd:	mov    rdx,r12
   1b8c0:	call   a420 <memcpy@plt>
   1b8c5:	mov    rbp,rax
   1b8c8:	mov    QWORD PTR [rbx+0x8],rbp
   1b8cc:	mov    rdi,rbp
   1b8cf:	call   484b0 <argp_usage@@Base+0x5130>
   1b8d4:	mov    BYTE PTR [rbx+0x10],al
   1b8d7:	pop    rbx
   1b8d8:	pop    rbp
   1b8d9:	pop    r12
   1b8db:	ret    
   1b8dc:	call   19130 <__sprintf_chk@plt+0xe780>
   1b8e1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b8ec:	nop    DWORD PTR [rax+0x0]
   1b8f0:	endbr64 
   1b8f4:	push   r13
   1b8f6:	push   r12
   1b8f8:	mov    r12,rdx
   1b8fb:	push   rbp
   1b8fc:	mov    rbp,rdi
   1b8ff:	push   rbx
   1b900:	sub    rsp,0x8
   1b904:	mov    BYTE PTR [rdi+0x151],0x1
   1b90b:	mov    rdi,QWORD PTR [rdi]
   1b90e:	test   rdi,rdi
   1b911:	je     1b920 <__sprintf_chk@plt+0x10f70>
   1b913:	call   9ce0 <free@plt>
   1b918:	mov    QWORD PTR [rbp+0x0],0x0
   1b920:	xor    edi,edi
   1b922:	mov    rdx,rbp
   1b925:	mov    rsi,r12
   1b928:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1b92d:	test   al,al
   1b92f:	je     1ba00 <__sprintf_chk@plt+0x11050>
   1b935:	mov    rdi,QWORD PTR [rbp+0x8]
   1b939:	lea    r13,[rbp+0x8]
   1b93d:	test   rdi,rdi
   1b940:	je     1b94f <__sprintf_chk@plt+0x10f9f>
   1b942:	call   9ce0 <free@plt>
   1b947:	mov    QWORD PTR [rbp+0x8],0x0
   1b94f:	xor    edi,edi
   1b951:	mov    rdx,r13
   1b954:	mov    rsi,r12
   1b957:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1b95c:	test   al,al
   1b95e:	je     1ba50 <__sprintf_chk@plt+0x110a0>
   1b964:	mov    r12,QWORD PTR [rbp+0x8]
   1b968:	movzx  eax,BYTE PTR [r12]
   1b96d:	mov    rbx,r12
   1b970:	cmp    al,0x2f
   1b972:	jne    1b984 <__sprintf_chk@plt+0x10fd4>
   1b974:	nop    DWORD PTR [rax+0x0]
   1b978:	movzx  eax,BYTE PTR [rbx+0x1]
   1b97c:	add    rbx,0x1
   1b980:	cmp    al,0x2f
   1b982:	je     1b978 <__sprintf_chk@plt+0x10fc8>
   1b984:	test   al,al
   1b986:	je     1baa8 <__sprintf_chk@plt+0x110f8>
   1b98c:	mov    rdx,rbx
   1b98f:	xor    ecx,ecx
   1b991:	jmp    1b9ad <__sprintf_chk@plt+0x10ffd>
   1b993:	nop    DWORD PTR [rax+rax*1+0x0]
   1b998:	test   cl,cl
   1b99a:	je     1b9a1 <__sprintf_chk@plt+0x10ff1>
   1b99c:	mov    rbx,rdx
   1b99f:	xor    ecx,ecx
   1b9a1:	movzx  eax,BYTE PTR [rdx+0x1]
   1b9a5:	add    rdx,0x1
   1b9a9:	test   al,al
   1b9ab:	je     1b9c2 <__sprintf_chk@plt+0x11012>
   1b9ad:	cmp    al,0x2f
   1b9af:	jne    1b998 <__sprintf_chk@plt+0x10fe8>
   1b9b1:	movzx  eax,BYTE PTR [rdx+0x1]
   1b9b5:	add    rdx,0x1
   1b9b9:	mov    ecx,0x1
   1b9be:	test   al,al
   1b9c0:	jne    1b9ad <__sprintf_chk@plt+0x10ffd>
   1b9c2:	cmp    BYTE PTR [rbx],0x0
   1b9c5:	cmove  rbx,r12
   1b9c9:	mov    rdi,rbx
   1b9cc:	call   a060 <strlen@plt>
   1b9d1:	cmp    rax,0x1
   1b9d5:	jbe    1b9e6 <__sprintf_chk@plt+0x11036>
   1b9d7:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
   1b9dc:	lea    rdx,[rax-0x1]
   1b9e0:	je     1ba98 <__sprintf_chk@plt+0x110e8>
   1b9e6:	add    rbx,rax
   1b9e9:	cmp    BYTE PTR [rbx],0x0
   1b9ec:	mov    BYTE PTR [rbx],0x0
   1b9ef:	setne  BYTE PTR [rbp+0x10]
   1b9f3:	add    rsp,0x8
   1b9f7:	pop    rbx
   1b9f8:	pop    rbp
   1b9f9:	pop    r12
   1b9fb:	pop    r13
   1b9fd:	ret    
   1b9fe:	xchg   ax,ax
   1ba00:	mov    rdi,QWORD PTR [rbp+0x0]
   1ba04:	call   9ce0 <free@plt>
   1ba09:	test   r12,r12
   1ba0c:	je     1baa0 <__sprintf_chk@plt+0x110f0>
   1ba12:	mov    rdi,r12
   1ba15:	call   a060 <strlen@plt>
   1ba1a:	lea    r13,[rax+0x1]
   1ba1e:	mov    rdi,r13
   1ba21:	call   a4a0 <malloc@plt>
   1ba26:	mov    rdi,rax
   1ba29:	test   rax,rax
   1ba2c:	je     1bab0 <__sprintf_chk@plt+0x11100>
   1ba32:	mov    rdx,r13
   1ba35:	mov    rsi,r12
   1ba38:	call   a420 <memcpy@plt>
   1ba3d:	mov    QWORD PTR [rbp+0x0],rax
   1ba41:	jmp    1b935 <__sprintf_chk@plt+0x10f85>
   1ba46:	cs nop WORD PTR [rax+rax*1+0x0]
   1ba50:	mov    rdi,QWORD PTR [rbp+0x8]
   1ba54:	call   9ce0 <free@plt>
   1ba59:	test   r12,r12
   1ba5c:	je     1ba88 <__sprintf_chk@plt+0x110d8>
   1ba5e:	mov    rdi,r12
   1ba61:	call   a060 <strlen@plt>
   1ba66:	lea    r13,[rax+0x1]
   1ba6a:	mov    rdi,r13
   1ba6d:	call   a4a0 <malloc@plt>
   1ba72:	mov    rdi,rax
   1ba75:	test   rax,rax
   1ba78:	je     1bab0 <__sprintf_chk@plt+0x11100>
   1ba7a:	mov    rsi,r12
   1ba7d:	mov    rdx,r13
   1ba80:	call   a420 <memcpy@plt>
   1ba85:	mov    r12,rax
   1ba88:	mov    QWORD PTR [rbp+0x8],r12
   1ba8c:	jmp    1b968 <__sprintf_chk@plt+0x10fb8>
   1ba91:	nop    DWORD PTR [rax+0x0]
   1ba98:	mov    rax,rdx
   1ba9b:	jmp    1b9d1 <__sprintf_chk@plt+0x11021>
   1baa0:	xor    eax,eax
   1baa2:	jmp    1ba3d <__sprintf_chk@plt+0x1108d>
   1baa4:	nop    DWORD PTR [rax+0x0]
   1baa8:	mov    rbx,r12
   1baab:	jmp    1b9c9 <__sprintf_chk@plt+0x11019>
   1bab0:	call   19130 <__sprintf_chk@plt+0xe780>
   1bab5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1bac0:	endbr64 
   1bac4:	push   r12
   1bac6:	lea    r12,[rdi+0x20]
   1baca:	push   rbp
   1bacb:	mov    rbp,rdx
   1bace:	push   rbx
   1bacf:	mov    rbx,rdi
   1bad2:	mov    rdi,QWORD PTR [rdi+0x20]
   1bad6:	test   rdi,rdi
   1bad9:	je     1bae8 <__sprintf_chk@plt+0x11138>
   1badb:	call   9ce0 <free@plt>
   1bae0:	mov    QWORD PTR [rbx+0x20],0x0
   1bae8:	xor    edi,edi
   1baea:	mov    rdx,r12
   1baed:	mov    rsi,rbp
   1baf0:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1baf5:	test   al,al
   1baf7:	je     1bb00 <__sprintf_chk@plt+0x11150>
   1baf9:	pop    rbx
   1bafa:	pop    rbp
   1bafb:	pop    r12
   1bafd:	ret    
   1bafe:	xchg   ax,ax
   1bb00:	mov    rdi,QWORD PTR [rbx+0x20]
   1bb04:	call   9ce0 <free@plt>
   1bb09:	test   rbp,rbp
   1bb0c:	je     1bb38 <__sprintf_chk@plt+0x11188>
   1bb0e:	mov    rdi,rbp
   1bb11:	call   a060 <strlen@plt>
   1bb16:	lea    r12,[rax+0x1]
   1bb1a:	mov    rdi,r12
   1bb1d:	call   a4a0 <malloc@plt>
   1bb22:	mov    rdi,rax
   1bb25:	test   rax,rax
   1bb28:	je     1bb41 <__sprintf_chk@plt+0x11191>
   1bb2a:	mov    rsi,rbp
   1bb2d:	mov    rdx,r12
   1bb30:	call   a420 <memcpy@plt>
   1bb35:	mov    rbp,rax
   1bb38:	mov    QWORD PTR [rbx+0x20],rbp
   1bb3c:	pop    rbx
   1bb3d:	pop    rbp
   1bb3e:	pop    r12
   1bb40:	ret    
   1bb41:	call   19130 <__sprintf_chk@plt+0xe780>
   1bb46:	cs nop WORD PTR [rax+rax*1+0x0]
   1bb50:	endbr64 
   1bb54:	push   rbx
   1bb55:	mov    rcx,rsi
   1bb58:	mov    rbx,rdi
   1bb5b:	mov    rsi,rdx
   1bb5e:	mov    rdx,0xffffffffffffffff
   1bb65:	sub    rsp,0x10
   1bb69:	mov    rax,QWORD PTR fs:0x28
   1bb72:	mov    QWORD PTR [rsp+0x8],rax
   1bb77:	xor    eax,eax
   1bb79:	mov    rdi,rsp
   1bb7c:	call   587c0 <_obstack_memory_used@@Base+0xbb40>
   1bb81:	test   al,al
   1bb83:	je     1bbca <__sprintf_chk@plt+0x1121a>
   1bb85:	mov    rdi,QWORD PTR [rsp]
   1bb89:	mov    rax,rdi
   1bb8c:	mov    QWORD PTR [rbx+0x138],rdi
   1bb93:	shr    rax,0x3c
   1bb97:	setne  al
   1bb9a:	bt     rdi,0x3b
   1bb9f:	movzx  eax,al
   1bba2:	jb     1bbe0 <__sprintf_chk@plt+0x11230>
   1bba4:	test   rax,rax
   1bba7:	jne    1bbe0 <__sprintf_chk@plt+0x11230>
   1bba9:	mov    esi,0x10
   1bbae:	call   a2f0 <calloc@plt>
   1bbb3:	test   rax,rax
   1bbb6:	je     1bbe0 <__sprintf_chk@plt+0x11230>
   1bbb8:	mov    QWORD PTR [rbx+0x140],rax
   1bbbf:	mov    QWORD PTR [rbx+0x130],0x0
   1bbca:	mov    rax,QWORD PTR [rsp+0x8]
   1bbcf:	sub    rax,QWORD PTR fs:0x28
   1bbd8:	jne    1bbe5 <__sprintf_chk@plt+0x11235>
   1bbda:	add    rsp,0x10
   1bbde:	pop    rbx
   1bbdf:	ret    
   1bbe0:	call   19130 <__sprintf_chk@plt+0xe780>
   1bbe5:	call   a0a0 <__stack_chk_fail@plt>
   1bbea:	nop    WORD PTR [rax+rax*1+0x0]
   1bbf0:	endbr64 
   1bbf4:	push   r12
   1bbf6:	mov    r12,rcx
   1bbf9:	push   rbp
   1bbfa:	mov    rbp,rdx
   1bbfd:	push   rbx
   1bbfe:	mov    rbx,rdi
   1bc01:	mov    rdi,rcx
   1bc04:	call   a4a0 <malloc@plt>
   1bc09:	test   rax,rax
   1bc0c:	je     1bc27 <__sprintf_chk@plt+0x11277>
   1bc0e:	mov    QWORD PTR [rbx+0x190],rax
   1bc15:	mov    rdx,r12
   1bc18:	pop    rbx
   1bc19:	mov    rsi,rbp
   1bc1c:	mov    rdi,rax
   1bc1f:	pop    rbp
   1bc20:	pop    r12
   1bc22:	jmp    a420 <memcpy@plt>
   1bc27:	call   19130 <__sprintf_chk@plt+0xe780>
   1bc2c:	nop    DWORD PTR [rax+0x0]
   1bc30:	endbr64 
   1bc34:	push   r12
   1bc36:	push   rbp
   1bc37:	mov    rbp,rdx
   1bc3a:	sub    rsp,0x8
   1bc3e:	mov    rdi,QWORD PTR [rip+0x636ab]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   1bc45:	test   rdi,rdi
   1bc48:	je     1bc5a <__sprintf_chk@plt+0x112aa>
   1bc4a:	call   9ce0 <free@plt>
   1bc4f:	mov    QWORD PTR [rip+0x63696],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   1bc5a:	xor    edi,edi
   1bc5c:	lea    rdx,[rip+0x6368d]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   1bc63:	mov    rsi,rbp
   1bc66:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1bc6b:	test   al,al
   1bc6d:	je     1bc80 <__sprintf_chk@plt+0x112d0>
   1bc6f:	add    rsp,0x8
   1bc73:	pop    rbp
   1bc74:	pop    r12
   1bc76:	ret    
   1bc77:	nop    WORD PTR [rax+rax*1+0x0]
   1bc80:	mov    rdi,QWORD PTR [rip+0x63669]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   1bc87:	call   9ce0 <free@plt>
   1bc8c:	test   rbp,rbp
   1bc8f:	je     1bcbb <__sprintf_chk@plt+0x1130b>
   1bc91:	mov    rdi,rbp
   1bc94:	call   a060 <strlen@plt>
   1bc99:	lea    r12,[rax+0x1]
   1bc9d:	mov    rdi,r12
   1bca0:	call   a4a0 <malloc@plt>
   1bca5:	mov    rdi,rax
   1bca8:	test   rax,rax
   1bcab:	je     1bcca <__sprintf_chk@plt+0x1131a>
   1bcad:	mov    rsi,rbp
   1bcb0:	mov    rdx,r12
   1bcb3:	call   a420 <memcpy@plt>
   1bcb8:	mov    rbp,rax
   1bcbb:	mov    QWORD PTR [rip+0x6362e],rbp        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   1bcc2:	add    rsp,0x8
   1bcc6:	pop    rbp
   1bcc7:	pop    r12
   1bcc9:	ret    
   1bcca:	call   19130 <__sprintf_chk@plt+0xe780>
   1bccf:	nop
   1bcd0:	endbr64 
   1bcd4:	push   r12
   1bcd6:	push   rbp
   1bcd7:	mov    rbp,rdx
   1bcda:	sub    rsp,0x8
   1bcde:	mov    rdi,QWORD PTR [rip+0x63603]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   1bce5:	test   rdi,rdi
   1bce8:	je     1bcfa <__sprintf_chk@plt+0x1134a>
   1bcea:	call   9ce0 <free@plt>
   1bcef:	mov    QWORD PTR [rip+0x635ee],0x0        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   1bcfa:	xor    edi,edi
   1bcfc:	lea    rdx,[rip+0x635e5]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   1bd03:	mov    rsi,rbp
   1bd06:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1bd0b:	test   al,al
   1bd0d:	je     1bd20 <__sprintf_chk@plt+0x11370>
   1bd0f:	add    rsp,0x8
   1bd13:	pop    rbp
   1bd14:	pop    r12
   1bd16:	ret    
   1bd17:	nop    WORD PTR [rax+rax*1+0x0]
   1bd20:	mov    rdi,QWORD PTR [rip+0x635c1]        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   1bd27:	call   9ce0 <free@plt>
   1bd2c:	test   rbp,rbp
   1bd2f:	je     1bd5b <__sprintf_chk@plt+0x113ab>
   1bd31:	mov    rdi,rbp
   1bd34:	call   a060 <strlen@plt>
   1bd39:	lea    r12,[rax+0x1]
   1bd3d:	mov    rdi,r12
   1bd40:	call   a4a0 <malloc@plt>
   1bd45:	mov    rdi,rax
   1bd48:	test   rax,rax
   1bd4b:	je     1bd6a <__sprintf_chk@plt+0x113ba>
   1bd4d:	mov    rsi,rbp
   1bd50:	mov    rdx,r12
   1bd53:	call   a420 <memcpy@plt>
   1bd58:	mov    rbp,rax
   1bd5b:	mov    QWORD PTR [rip+0x63586],rbp        # 7f2e8 <obstack_alloc_failed_handler@@Base+0x4b0>
   1bd62:	add    rsp,0x8
   1bd66:	pop    rbp
   1bd67:	pop    r12
   1bd69:	ret    
   1bd6a:	call   19130 <__sprintf_chk@plt+0xe780>
   1bd6f:	nop
   1bd70:	endbr64 
   1bd74:	push   r12
   1bd76:	lea    r12,[rdi+0x30]
   1bd7a:	push   rbp
   1bd7b:	mov    rbp,rdx
   1bd7e:	push   rbx
   1bd7f:	mov    rbx,rdi
   1bd82:	mov    rdi,QWORD PTR [rdi+0x30]
   1bd86:	test   rdi,rdi
   1bd89:	je     1bd98 <__sprintf_chk@plt+0x113e8>
   1bd8b:	call   9ce0 <free@plt>
   1bd90:	mov    QWORD PTR [rbx+0x30],0x0
   1bd98:	xor    edi,edi
   1bd9a:	mov    rdx,r12
   1bd9d:	mov    rsi,rbp
   1bda0:	call   3b540 <__sprintf_chk@plt+0x30b90>
   1bda5:	test   al,al
   1bda7:	je     1bdb0 <__sprintf_chk@plt+0x11400>
   1bda9:	pop    rbx
   1bdaa:	pop    rbp
   1bdab:	pop    r12
   1bdad:	ret    
   1bdae:	xchg   ax,ax
   1bdb0:	mov    rdi,QWORD PTR [rbx+0x30]
   1bdb4:	call   9ce0 <free@plt>
   1bdb9:	test   rbp,rbp
   1bdbc:	je     1bde8 <__sprintf_chk@plt+0x11438>
   1bdbe:	mov    rdi,rbp
   1bdc1:	call   a060 <strlen@plt>
   1bdc6:	lea    r12,[rax+0x1]
   1bdca:	mov    rdi,r12
   1bdcd:	call   a4a0 <malloc@plt>
   1bdd2:	mov    rdi,rax
   1bdd5:	test   rax,rax
   1bdd8:	je     1bdf1 <__sprintf_chk@plt+0x11441>
   1bdda:	mov    rsi,rbp
   1bddd:	mov    rdx,r12
   1bde0:	call   a420 <memcpy@plt>
   1bde5:	mov    rbp,rax
   1bde8:	mov    QWORD PTR [rbx+0x30],rbp
   1bdec:	pop    rbx
   1bded:	pop    rbp
   1bdee:	pop    r12
   1bdf0:	ret    
   1bdf1:	call   19130 <__sprintf_chk@plt+0xe780>
   1bdf6:	cs nop WORD PTR [rax+rax*1+0x0]
   1be00:	endbr64 
   1be04:	push   r13
   1be06:	lea    r13,[rcx+0x1]
   1be0a:	push   r12
   1be0c:	mov    r12,rdx
   1be0f:	push   rbp
   1be10:	mov    rbp,rdi
   1be13:	mov    rdi,r13
   1be16:	push   rbx
   1be17:	mov    rbx,rcx
   1be1a:	sub    rsp,0x8
   1be1e:	call   a4a0 <malloc@plt>
   1be23:	test   rax,rax
   1be26:	je     1be49 <__sprintf_chk@plt+0x11499>
   1be28:	mov    rdx,r13
   1be2b:	mov    rsi,r12
   1be2e:	mov    rdi,rax
   1be31:	call   a420 <memcpy@plt>
   1be36:	mov    QWORD PTR [rbp+0x40],rbx
   1be3a:	mov    QWORD PTR [rbp+0x38],rax
   1be3e:	add    rsp,0x8
   1be42:	pop    rbx
   1be43:	pop    rbp
   1be44:	pop    r12
   1be46:	pop    r13
   1be48:	ret    
   1be49:	call   19130 <__sprintf_chk@plt+0xe780>
   1be4e:	xchg   ax,ax
   1be50:	endbr64 
   1be54:	push   r13
   1be56:	lea    r13,[rcx+0x1]
   1be5a:	push   r12
   1be5c:	mov    r12,rdx
   1be5f:	push   rbp
   1be60:	mov    rbp,rdi
   1be63:	mov    rdi,r13
   1be66:	push   rbx
   1be67:	mov    rbx,rcx
   1be6a:	sub    rsp,0x8
   1be6e:	call   a4a0 <malloc@plt>
   1be73:	test   rax,rax
   1be76:	je     1be99 <__sprintf_chk@plt+0x114e9>
   1be78:	mov    rdx,r13
   1be7b:	mov    rsi,r12
   1be7e:	mov    rdi,rax
   1be81:	call   a420 <memcpy@plt>
   1be86:	mov    QWORD PTR [rbp+0x50],rbx
   1be8a:	mov    QWORD PTR [rbp+0x48],rax
   1be8e:	add    rsp,0x8
   1be92:	pop    rbx
   1be93:	pop    rbp
   1be94:	pop    r12
   1be96:	pop    r13
   1be98:	ret    
   1be99:	call   19130 <__sprintf_chk@plt+0xe780>
   1be9e:	xchg   ax,ax
   1bea0:	endbr64 
   1bea4:	push   r13
   1bea6:	mov    r13d,esi
   1bea9:	push   r12
   1beab:	mov    r12,rdi
   1beae:	push   rbp
   1beaf:	push   rbx
   1beb0:	sub    rsp,0x8
   1beb4:	call   a060 <strlen@plt>
   1beb9:	lea    rdi,[rax+0x10]
   1bebd:	mov    rbp,rax
   1bec0:	call   a4a0 <malloc@plt>
   1bec5:	test   rax,rax
   1bec8:	je     1bf19 <__sprintf_chk@plt+0x11569>
   1beca:	mov    DWORD PTR [rax+0x8],r13d
   1bece:	lea    rdi,[rax+0xc]
   1bed2:	lea    rdx,[rbp+0x1]
   1bed6:	mov    rsi,r12
   1bed9:	mov    QWORD PTR [rax],0x0
   1bee0:	mov    rbx,rax
   1bee3:	call   a420 <memcpy@plt>
   1bee8:	mov    rax,QWORD PTR [rip+0x63999]        # 7f888 <obstack_alloc_failed_handler@@Base+0xa50>
   1beef:	test   rax,rax
   1bef2:	je     1bf10 <__sprintf_chk@plt+0x11560>
   1bef4:	mov    QWORD PTR [rax],rbx
   1bef7:	mov    QWORD PTR [rip+0x6398a],rbx        # 7f888 <obstack_alloc_failed_handler@@Base+0xa50>
   1befe:	add    rsp,0x8
   1bf02:	pop    rbx
   1bf03:	pop    rbp
   1bf04:	pop    r12
   1bf06:	pop    r13
   1bf08:	ret    
   1bf09:	nop    DWORD PTR [rax+0x0]
   1bf10:	mov    QWORD PTR [rip+0x63969],rbx        # 7f880 <obstack_alloc_failed_handler@@Base+0xa48>
   1bf17:	jmp    1bef7 <__sprintf_chk@plt+0x11547>
   1bf19:	call   19130 <__sprintf_chk@plt+0xe780>
   1bf1e:	xchg   ax,ax
   1bf20:	endbr64 
   1bf24:	push   r15
   1bf26:	push   r14
   1bf28:	mov    r14,rdi
   1bf2b:	push   r13
   1bf2d:	push   r12
   1bf2f:	push   rbp
   1bf30:	push   rbx
   1bf31:	sub    rsp,0x18
   1bf35:	mov    rbx,QWORD PTR [rip+0x63944]        # 7f880 <obstack_alloc_failed_handler@@Base+0xa48>
   1bf3c:	mov    QWORD PTR [rsp+0x8],0x0
   1bf45:	test   rbx,rbx
   1bf48:	je     1c094 <__sprintf_chk@plt+0x116e4>
   1bf4e:	mov    QWORD PTR [rsp],0x0
   1bf56:	jmp    1bf6c <__sprintf_chk@plt+0x115bc>
   1bf58:	nop    DWORD PTR [rax+rax*1+0x0]
   1bf60:	mov    rbx,QWORD PTR [rbx]
   1bf63:	test   rbx,rbx
   1bf66:	je     1c094 <__sprintf_chk@plt+0x116e4>
   1bf6c:	lea    rbp,[rbx+0xc]
   1bf70:	mov    edi,DWORD PTR [r14+0x1a8]
   1bf77:	xor    ecx,ecx
   1bf79:	xor    edx,edx
   1bf7b:	mov    rsi,rbp
   1bf7e:	call   9f50 <faccessat@plt>
   1bf83:	test   eax,eax
   1bf85:	jne    1bf60 <__sprintf_chk@plt+0x115b0>
   1bf87:	xor    edx,edx
   1bf89:	mov    rsi,rbp
   1bf8c:	mov    rdi,r14
   1bf8f:	call   18ce0 <__sprintf_chk@plt+0xe330>
   1bf94:	mov    r12d,eax
   1bf97:	cmp    eax,0xffffffff
   1bf9a:	je     1c0c0 <__sprintf_chk@plt+0x11710>
   1bfa0:	lea    rsi,[rip+0x4aaeb]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
   1bfa7:	mov    edi,eax
   1bfa9:	call   a590 <fdopen@plt>
   1bfae:	mov    r13,rax
   1bfb1:	test   rax,rax
   1bfb4:	je     1c0d9 <__sprintf_chk@plt+0x11729>
   1bfba:	mov    esi,0x1
   1bfbf:	mov    edi,0x10
   1bfc4:	call   a2f0 <calloc@plt>
   1bfc9:	mov    r12,rax
   1bfcc:	test   rax,rax
   1bfcf:	je     1c0d4 <__sprintf_chk@plt+0x11724>
   1bfd5:	mov    rdi,QWORD PTR [rip+0x60204]        # 7c1e0 <_obstack_memory_used@@Base+0x2f560>
   1bfdc:	lea    r15,[rip+0x601fd]        # 7c1e0 <_obstack_memory_used@@Base+0x2f560>
   1bfe3:	test   rdi,rdi
   1bfe6:	jne    1bffd <__sprintf_chk@plt+0x1164d>
   1bfe8:	jmp    1c009 <__sprintf_chk@plt+0x11659>
   1bfea:	nop    WORD PTR [rax+rax*1+0x0]
   1bff0:	mov    rdi,QWORD PTR [r15+0x28]
   1bff4:	add    r15,0x28
   1bff8:	test   rdi,rdi
   1bffb:	je     1c009 <__sprintf_chk@plt+0x11659>
   1bffd:	mov    rsi,rbp
   1c000:	call   a320 <strcmp@plt>
   1c005:	test   eax,eax
   1c007:	jne    1bff0 <__sprintf_chk@plt+0x11640>
   1c009:	mov    rax,QWORD PTR [r15+0x18]
   1c00d:	mov    r9,QWORD PTR [r15+0x20]
   1c011:	test   rax,rax
   1c014:	je     1c022 <__sprintf_chk@plt+0x11672>
   1c016:	mov    rdi,r9
   1c019:	call   rax
   1c01b:	mov    QWORD PTR [r15+0x20],rax
   1c01f:	mov    r9,rax
   1c022:	mov    rdi,QWORD PTR [r15+0x10]
   1c026:	mov    r8d,0xa
   1c02c:	mov    rdx,r13
   1c02f:	mov    rsi,r12
   1c032:	mov    ecx,0x50000001
   1c037:	call   48720 <argp_usage@@Base+0x53a0>
   1c03c:	test   eax,eax
   1c03e:	jne    1c12a <__sprintf_chk@plt+0x1177a>
   1c044:	mov    rdi,r13
   1c047:	call   9ff0 <fclose@plt>
   1c04c:	mov    edi,0x20
   1c051:	call   a4a0 <malloc@plt>
   1c056:	test   rax,rax
   1c059:	je     1c0d4 <__sprintf_chk@plt+0x11724>
   1c05b:	mov    edx,DWORD PTR [rbx+0x8]
   1c05e:	mov    QWORD PTR [rax+0x18],r12
   1c062:	test   edx,edx
   1c064:	je     1c06a <__sprintf_chk@plt+0x116ba>
   1c066:	mov    edx,DWORD PTR [r15+0x8]
   1c06a:	mov    rcx,QWORD PTR [rsp]
   1c06e:	mov    DWORD PTR [rax+0x10],edx
   1c071:	mov    QWORD PTR [rax],0x0
   1c078:	mov    QWORD PTR [rax+0x8],rcx
   1c07c:	test   rcx,rcx
   1c07f:	je     1c0b0 <__sprintf_chk@plt+0x11700>
   1c081:	mov    rbx,QWORD PTR [rbx]
   1c084:	mov    QWORD PTR [rcx],rax
   1c087:	mov    QWORD PTR [rsp],rax
   1c08b:	test   rbx,rbx
   1c08e:	jne    1bf6c <__sprintf_chk@plt+0x115bc>
   1c094:	mov    rax,QWORD PTR [rsp+0x8]
   1c099:	mov    QWORD PTR [r14+0x1b0],rax
   1c0a0:	add    rsp,0x18
   1c0a4:	pop    rbx
   1c0a5:	pop    rbp
   1c0a6:	pop    r12
   1c0a8:	pop    r13
   1c0aa:	pop    r14
   1c0ac:	pop    r15
   1c0ae:	ret    
   1c0af:	nop
   1c0b0:	mov    QWORD PTR [rsp],rax
   1c0b4:	mov    QWORD PTR [rsp+0x8],rax
   1c0b9:	jmp    1bf60 <__sprintf_chk@plt+0x115b0>
   1c0be:	xchg   ax,ax
   1c0c0:	mov    rsi,rbp
   1c0c3:	lea    rdi,[rip+0x470f6]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   1c0ca:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1c0cf:	jmp    1bf60 <__sprintf_chk@plt+0x115b0>
   1c0d4:	call   19130 <__sprintf_chk@plt+0xe780>
   1c0d9:	mov    rax,QWORD PTR [rip+0x63428]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1c0e0:	test   rax,rax
   1c0e3:	je     1c0e7 <__sprintf_chk@plt+0x11737>
   1c0e5:	call   rax
   1c0e7:	xor    edi,edi
   1c0e9:	mov    edx,0x5
   1c0ee:	lea    rsi,[rip+0x481d8]        # 642cd <_obstack_memory_used@@Base+0x1764d>
   1c0f5:	call   a040 <dcgettext@plt>
   1c0fa:	mov    r13,rax
   1c0fd:	call   9e40 <__errno_location@plt>
   1c102:	xor    edi,edi
   1c104:	mov    rcx,rbp
   1c107:	mov    rdx,r13
   1c10a:	mov    esi,DWORD PTR [rax]
   1c10c:	xor    eax,eax
   1c10e:	call   a640 <error@plt>
   1c113:	mov    edi,r12d
   1c116:	mov    DWORD PTR [rip+0x62fa4],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1c120:	call   a200 <close@plt>
   1c125:	jmp    1bf60 <__sprintf_chk@plt+0x115b0>
   1c12a:	call   9e40 <__errno_location@plt>
   1c12f:	mov    r12d,DWORD PTR [rax]
   1c132:	mov    rax,QWORD PTR [rip+0x633cf]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1c139:	test   rax,rax
   1c13c:	je     1c140 <__sprintf_chk@plt+0x11790>
   1c13e:	call   rax
   1c140:	mov    rdi,rbp
   1c143:	call   4b670 <argp_usage@@Base+0x82f0>
   1c148:	lea    rdx,[rip+0x4fc08]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   1c14f:	mov    esi,r12d
   1c152:	xor    edi,edi
   1c154:	mov    rcx,rax
   1c157:	xor    eax,eax
   1c159:	call   a640 <error@plt>
   1c15e:	call   190e0 <__sprintf_chk@plt+0xe730>
   1c163:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1c16e:	xchg   ax,ax
   1c170:	endbr64 
   1c174:	push   r14
   1c176:	push   r13
   1c178:	mov    r13,rdi
   1c17b:	push   r12
   1c17d:	push   rbp
   1c17e:	push   rbx
   1c17f:	cmp    rsi,rdi
   1c182:	je     1c531 <__sprintf_chk@plt+0x11b81>
   1c188:	cmp    BYTE PTR [rsi-0x1],0x3a
   1c18c:	mov    r14,rsi
   1c18f:	mov    rbx,rsi
   1c192:	mov    r12d,0x1
   1c198:	jne    1c1a1 <__sprintf_chk@plt+0x117f1>
   1c19a:	lea    rbx,[rsi-0x1]
   1c19e:	xor    r12d,r12d
   1c1a1:	cmp    r13,rbx
   1c1a4:	jae    1c1c3 <__sprintf_chk@plt+0x11813>
   1c1a6:	call   a980 <__ctype_b_loc@plt>
   1c1ab:	mov    rdx,QWORD PTR [rax]
   1c1ae:	jmp    1c1b9 <__sprintf_chk@plt+0x11809>
   1c1b0:	sub    rbx,0x1
   1c1b4:	cmp    r13,rbx
   1c1b7:	je     1c1c3 <__sprintf_chk@plt+0x11813>
   1c1b9:	movzx  eax,BYTE PTR [rbx]
   1c1bc:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   1c1c1:	jne    1c1b0 <__sprintf_chk@plt+0x11800>
   1c1c3:	mov    BYTE PTR [rbx],0x0
   1c1c6:	movzx  ebx,BYTE PTR [r14+0x1]
   1c1cb:	lea    rbp,[r14+0x1]
   1c1cf:	test   bl,bl
   1c1d1:	je     1c1f3 <__sprintf_chk@plt+0x11843>
   1c1d3:	call   a980 <__ctype_b_loc@plt>
   1c1d8:	mov    rax,QWORD PTR [rax]
   1c1db:	jmp    1c1ec <__sprintf_chk@plt+0x1183c>
   1c1dd:	nop    DWORD PTR [rax]
   1c1e0:	movzx  ebx,BYTE PTR [rbp+0x1]
   1c1e4:	add    rbp,0x1
   1c1e8:	test   bl,bl
   1c1ea:	je     1c1f3 <__sprintf_chk@plt+0x11843>
   1c1ec:	test   BYTE PTR [rax+rbx*2+0x1],0x20
   1c1f1:	jne    1c1e0 <__sprintf_chk@plt+0x11830>
   1c1f3:	lea    rsi,[rip+0x480fe]        # 642f8 <_obstack_memory_used@@Base+0x17678>
   1c1fa:	mov    rdi,r13
   1c1fd:	call   a320 <strcmp@plt>
   1c202:	test   eax,eax
   1c204:	je     1c370 <__sprintf_chk@plt+0x119c0>
   1c20a:	lea    rsi,[rip+0x4810c]        # 6431d <_obstack_memory_used@@Base+0x1769d>
   1c211:	mov    rdi,r13
   1c214:	call   a320 <strcmp@plt>
   1c219:	mov    rsi,rbp
   1c21c:	lea    rdi,[rip+0x63675]        # 7f898 <obstack_alloc_failed_handler@@Base+0xa60>
   1c223:	test   eax,eax
   1c225:	je     1c35a <__sprintf_chk@plt+0x119aa>
   1c22b:	lea    rsi,[rip+0x480e7]        # 64319 <_obstack_memory_used@@Base+0x17699>
   1c232:	mov    rdi,r13
   1c235:	call   a320 <strcmp@plt>
   1c23a:	test   eax,eax
   1c23c:	je     1c350 <__sprintf_chk@plt+0x119a0>
   1c242:	lea    rsi,[rip+0x480e4]        # 6432d <_obstack_memory_used@@Base+0x176ad>
   1c249:	mov    rdi,r13
   1c24c:	call   a320 <strcmp@plt>
   1c251:	mov    rdx,rbp
   1c254:	lea    rsi,[rip+0x635dd]        # 7f838 <obstack_alloc_failed_handler@@Base+0xa00>
   1c25b:	lea    rdi,[rip+0x635de]        # 7f840 <obstack_alloc_failed_handler@@Base+0xa08>
   1c262:	test   eax,eax
   1c264:	je     1c471 <__sprintf_chk@plt+0x11ac1>
   1c26a:	lea    rsi,[rip+0x480b8]        # 64329 <_obstack_memory_used@@Base+0x176a9>
   1c271:	mov    rdi,r13
   1c274:	call   a320 <strcmp@plt>
   1c279:	test   eax,eax
   1c27b:	je     1c460 <__sprintf_chk@plt+0x11ab0>
   1c281:	lea    rdi,[rip+0x4709a]        # 63322 <_obstack_memory_used@@Base+0x166a2>
   1c288:	lea    rbx,[rip+0x5e011]        # 7a2a0 <_obstack_memory_used@@Base+0x2d620>
   1c28f:	nop
   1c290:	cmp    BYTE PTR [rbx+0x1c],0x0
   1c294:	jne    1c2ac <__sprintf_chk@plt+0x118fc>
   1c296:	test   BYTE PTR [rbx+0x18],0x1
   1c29a:	je     1c2ac <__sprintf_chk@plt+0x118fc>
   1c29c:	mov    rsi,r13
   1c29f:	call   a320 <strcmp@plt>
   1c2a4:	test   eax,eax
   1c2a6:	je     1c500 <__sprintf_chk@plt+0x11b50>
   1c2ac:	mov    rdi,QWORD PTR [rbx+0x20]
   1c2b0:	add    rbx,0x20
   1c2b4:	test   rdi,rdi
   1c2b7:	jne    1c290 <__sprintf_chk@plt+0x118e0>
   1c2b9:	test   r12b,r12b
   1c2bc:	je     1c47e <__sprintf_chk@plt+0x11ace>
   1c2c2:	mov    edi,0x18
   1c2c7:	call   a4a0 <malloc@plt>
   1c2cc:	mov    rbx,rax
   1c2cf:	test   rax,rax
   1c2d2:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c2d8:	mov    rdi,r13
   1c2db:	call   a060 <strlen@plt>
   1c2e0:	lea    r12,[rax+0x1]
   1c2e4:	mov    rdi,r12
   1c2e7:	call   a4a0 <malloc@plt>
   1c2ec:	mov    rdi,rax
   1c2ef:	test   rax,rax
   1c2f2:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c2f8:	mov    rdx,r12
   1c2fb:	mov    rsi,r13
   1c2fe:	call   a420 <memcpy@plt>
   1c303:	mov    rdi,rbp
   1c306:	mov    QWORD PTR [rbx+0x8],rax
   1c30a:	call   a060 <strlen@plt>
   1c30f:	lea    r12,[rax+0x1]
   1c313:	mov    rdi,r12
   1c316:	call   a4a0 <malloc@plt>
   1c31b:	mov    rdi,rax
   1c31e:	test   rax,rax
   1c321:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c327:	mov    rdx,r12
   1c32a:	mov    rsi,rbp
   1c32d:	call   a420 <memcpy@plt>
   1c332:	mov    QWORD PTR [rbx+0x10],rax
   1c336:	mov    rax,QWORD PTR [rip+0x6347b]        # 7f7b8 <obstack_alloc_failed_handler@@Base+0x980>
   1c33d:	mov    QWORD PTR [rip+0x63474],rbx        # 7f7b8 <obstack_alloc_failed_handler@@Base+0x980>
   1c344:	mov    QWORD PTR [rbx],rax
   1c347:	jmp    1c44e <__sprintf_chk@plt+0x11a9e>
   1c34c:	nop    DWORD PTR [rax+0x0]
   1c350:	mov    rsi,rbp
   1c353:	lea    rdi,[rip+0x634ee]        # 7f848 <obstack_alloc_failed_handler@@Base+0xa10>
   1c35a:	pop    rbx
   1c35b:	pop    rbp
   1c35c:	pop    r12
   1c35e:	pop    r13
   1c360:	pop    r14
   1c362:	jmp    24fd0 <__sprintf_chk@plt+0x1a620>
   1c367:	nop    WORD PTR [rax+rax*1+0x0]
   1c370:	lea    rsi,[rip+0x46fab]        # 63322 <_obstack_memory_used@@Base+0x166a2>
   1c377:	lea    rbx,[rip+0x5df22]        # 7a2a0 <_obstack_memory_used@@Base+0x2d620>
   1c37e:	jmp    1c38d <__sprintf_chk@plt+0x119dd>
   1c380:	mov    rsi,QWORD PTR [rbx+0x20]
   1c384:	add    rbx,0x20
   1c388:	test   rsi,rsi
   1c38b:	je     1c3f0 <__sprintf_chk@plt+0x11a40>
   1c38d:	cmp    BYTE PTR [rbx+0x1c],0x0
   1c391:	jne    1c380 <__sprintf_chk@plt+0x119d0>
   1c393:	test   BYTE PTR [rbx+0x18],0x1
   1c397:	je     1c380 <__sprintf_chk@plt+0x119d0>
   1c399:	xor    edx,edx
   1c39b:	mov    rdi,rbp
   1c39e:	call   9cf0 <fnmatch@plt>
   1c3a3:	test   eax,eax
   1c3a5:	jne    1c380 <__sprintf_chk@plt+0x119d0>
   1c3a7:	mov    rax,QWORD PTR [rip+0x6315a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1c3ae:	test   rax,rax
   1c3b1:	je     1c3b5 <__sprintf_chk@plt+0x11a05>
   1c3b3:	call   rax
   1c3b5:	mov    rdi,rbp
   1c3b8:	call   4b7a0 <argp_usage@@Base+0x8420>
   1c3bd:	mov    edx,0x5
   1c3c2:	lea    rsi,[rip+0x47f36]        # 642ff <_obstack_memory_used@@Base+0x1767f>
   1c3c9:	xor    edi,edi
   1c3cb:	mov    r12,rax
   1c3ce:	call   a040 <dcgettext@plt>
   1c3d3:	mov    rcx,r12
   1c3d6:	mov    rdx,rax
   1c3d9:	xor    esi,esi
   1c3db:	xor    edi,edi
   1c3dd:	xor    eax,eax
   1c3df:	call   a640 <error@plt>
   1c3e4:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   1c3e9:	nop    DWORD PTR [rax+0x0]
   1c3f0:	mov    edi,0x18
   1c3f5:	call   a4a0 <malloc@plt>
   1c3fa:	mov    rbx,rax
   1c3fd:	test   rax,rax
   1c400:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c406:	mov    rdi,rbp
   1c409:	call   a060 <strlen@plt>
   1c40e:	lea    r12,[rax+0x1]
   1c412:	mov    rdi,r12
   1c415:	call   a4a0 <malloc@plt>
   1c41a:	mov    rdi,rax
   1c41d:	test   rax,rax
   1c420:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c426:	mov    rdx,r12
   1c429:	mov    rsi,rbp
   1c42c:	call   a420 <memcpy@plt>
   1c431:	mov    QWORD PTR [rbx+0x10],0x0
   1c439:	mov    QWORD PTR [rbx+0x8],rax
   1c43d:	mov    rax,QWORD PTR [rip+0x632d4]        # 7f718 <obstack_alloc_failed_handler@@Base+0x8e0>
   1c444:	mov    QWORD PTR [rip+0x632cd],rbx        # 7f718 <obstack_alloc_failed_handler@@Base+0x8e0>
   1c44b:	mov    QWORD PTR [rbx],rax
   1c44e:	pop    rbx
   1c44f:	pop    rbp
   1c450:	pop    r12
   1c452:	pop    r13
   1c454:	pop    r14
   1c456:	ret    
   1c457:	nop    WORD PTR [rax+rax*1+0x0]
   1c460:	mov    rdx,rbp
   1c463:	lea    rsi,[rip+0x633be]        # 7f828 <obstack_alloc_failed_handler@@Base+0x9f0>
   1c46a:	lea    rdi,[rip+0x633bf]        # 7f830 <obstack_alloc_failed_handler@@Base+0x9f8>
   1c471:	pop    rbx
   1c472:	pop    rbp
   1c473:	pop    r12
   1c475:	pop    r13
   1c477:	pop    r14
   1c479:	jmp    194a0 <__sprintf_chk@plt+0xeaf0>
   1c47e:	mov    edi,0x18
   1c483:	call   a4a0 <malloc@plt>
   1c488:	mov    rbx,rax
   1c48b:	test   rax,rax
   1c48e:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c494:	mov    rdi,r13
   1c497:	call   a060 <strlen@plt>
   1c49c:	lea    r12,[rax+0x1]
   1c4a0:	mov    rdi,r12
   1c4a3:	call   a4a0 <malloc@plt>
   1c4a8:	mov    rdi,rax
   1c4ab:	test   rax,rax
   1c4ae:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c4b0:	mov    rdx,r12
   1c4b3:	mov    rsi,r13
   1c4b6:	call   a420 <memcpy@plt>
   1c4bb:	mov    rdi,rbp
   1c4be:	mov    QWORD PTR [rbx+0x8],rax
   1c4c2:	call   a060 <strlen@plt>
   1c4c7:	lea    r12,[rax+0x1]
   1c4cb:	mov    rdi,r12
   1c4ce:	call   a4a0 <malloc@plt>
   1c4d3:	mov    rdi,rax
   1c4d6:	test   rax,rax
   1c4d9:	je     1c52c <__sprintf_chk@plt+0x11b7c>
   1c4db:	mov    rdx,r12
   1c4de:	mov    rsi,rbp
   1c4e1:	call   a420 <memcpy@plt>
   1c4e6:	mov    QWORD PTR [rbx+0x10],rax
   1c4ea:	mov    rax,QWORD PTR [rip+0x6332f]        # 7f820 <obstack_alloc_failed_handler@@Base+0x9e8>
   1c4f1:	mov    QWORD PTR [rip+0x63328],rbx        # 7f820 <obstack_alloc_failed_handler@@Base+0x9e8>
   1c4f8:	mov    QWORD PTR [rbx],rax
   1c4fb:	jmp    1c44e <__sprintf_chk@plt+0x11a9e>
   1c500:	mov    rax,QWORD PTR [rip+0x63001]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1c507:	test   rax,rax
   1c50a:	je     1c50e <__sprintf_chk@plt+0x11b5e>
   1c50c:	call   rax
   1c50e:	mov    edx,0x5
   1c513:	lea    rsi,[rip+0x48306]        # 64820 <_obstack_memory_used@@Base+0x17ba0>
   1c51a:	xor    edi,edi
   1c51c:	call   a040 <dcgettext@plt>
   1c521:	mov    rcx,r13
   1c524:	mov    rdx,rax
   1c527:	jmp    1c3d9 <__sprintf_chk@plt+0x11a29>
   1c52c:	call   19130 <__sprintf_chk@plt+0xe780>
   1c531:	mov    rax,QWORD PTR [rip+0x62fd0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1c538:	test   rax,rax
   1c53b:	je     1c53f <__sprintf_chk@plt+0x11b8f>
   1c53d:	call   rax
   1c53f:	mov    rdi,r13
   1c542:	call   4b7a0 <argp_usage@@Base+0x8420>
   1c547:	mov    edx,0x5
   1c54c:	lea    rsi,[rip+0x47d8c]        # 642df <_obstack_memory_used@@Base+0x1765f>
   1c553:	xor    edi,edi
   1c555:	mov    r12,rax
   1c558:	call   a040 <dcgettext@plt>
   1c55d:	mov    rcx,r12
   1c560:	mov    rdx,rax
   1c563:	jmp    1c3d9 <__sprintf_chk@plt+0x11a29>
   1c568:	nop    DWORD PTR [rax+rax*1+0x0]
   1c570:	endbr64 
   1c574:	push   r15
   1c576:	push   r14
   1c578:	push   r13
   1c57a:	push   r12
   1c57c:	push   rbp
   1c57d:	push   rbx
   1c57e:	mov    rbx,rsi
   1c581:	sub    rsp,0x78
   1c585:	mov    QWORD PTR [rsp+0x10],rdx
   1c58a:	mov    rax,QWORD PTR fs:0x28
   1c593:	mov    QWORD PTR [rsp+0x68],rax
   1c598:	xor    eax,eax
   1c59a:	movzx  eax,BYTE PTR [rsi]
   1c59d:	test   al,al
   1c59f:	je     1ca00 <__sprintf_chk@plt+0x12050>
   1c5a5:	mov    rbp,rsi
   1c5a8:	xor    r14d,r14d
   1c5ab:	xor    r15d,r15d
   1c5ae:	xor    r9d,r9d
   1c5b1:	xor    r12d,r12d
   1c5b4:	xor    ecx,ecx
   1c5b6:	mov    rbx,rdi
   1c5b9:	mov    r8,rsi
   1c5bc:	mov    QWORD PTR [rsp+0x18],0x0
   1c5c5:	movabs r10,0xcccccccccccccccd
   1c5cf:	mov    QWORD PTR [rsp+0x8],0x0
   1c5d8:	jmp    1c5f1 <__sprintf_chk@plt+0x11c41>
   1c5da:	nop    WORD PTR [rax+rax*1+0x0]
   1c5e0:	add    r12,0x1
   1c5e4:	mov    eax,edx
   1c5e6:	mov    rbp,r13
   1c5e9:	test   al,al
   1c5eb:	je     1c690 <__sprintf_chk@plt+0x11ce0>
   1c5f1:	movzx  edx,BYTE PTR [rbp+0x1]
   1c5f5:	lea    r13,[rbp+0x1]
   1c5f9:	cmp    al,0x25
   1c5fb:	jne    1c5e0 <__sprintf_chk@plt+0x11c30>
   1c5fd:	test   dl,dl
   1c5ff:	je     1c5e0 <__sprintf_chk@plt+0x11c30>
   1c601:	cmp    dl,0x66
   1c604:	je     1c8d8 <__sprintf_chk@plt+0x11f28>
   1c60a:	jg     1c780 <__sprintf_chk@plt+0x11dd0>
   1c610:	cmp    dl,0x25
   1c613:	je     1c978 <__sprintf_chk@plt+0x11fc8>
   1c619:	cmp    dl,0x64
   1c61c:	jne    1c8a4 <__sprintf_chk@plt+0x11ef4>
   1c622:	test   rbx,rbx
   1c625:	je     1c9f0 <__sprintf_chk@plt+0x12040>
   1c62b:	cmp    QWORD PTR [rsp+0x8],0x0
   1c631:	je     1ca3a <__sprintf_chk@plt+0x1208a>
   1c637:	mov    rdi,QWORD PTR [rsp+0x8]
   1c63c:	xor    esi,esi
   1c63e:	mov    QWORD PTR [rsp+0x28],r8
   1c643:	add    r13,0x1
   1c647:	movzx  edx,BYTE PTR [rip+0x63162]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1c64e:	mov    QWORD PTR [rsp+0x20],r9
   1c653:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   1c658:	mov    rdi,rax
   1c65b:	mov    QWORD PTR [rsp+0x18],rax
   1c660:	call   a060 <strlen@plt>
   1c665:	mov    r9,QWORD PTR [rsp+0x20]
   1c66a:	mov    r8,QWORD PTR [rsp+0x28]
   1c66f:	xor    ecx,ecx
   1c671:	movabs r10,0xcccccccccccccccd
   1c67b:	add    r12,rax
   1c67e:	movzx  eax,BYTE PTR [rbp+0x2]
   1c682:	mov    rbp,r13
   1c685:	test   al,al
   1c687:	jne    1c5f1 <__sprintf_chk@plt+0x11c41>
   1c68d:	nop    DWORD PTR [rax]
   1c690:	mov    rbx,r8
   1c693:	lea    rdi,[r12+0x1]
   1c698:	mov    QWORD PTR [rsp+0x10],r9
   1c69d:	call   a4a0 <malloc@plt>
   1c6a2:	mov    r12,rax
   1c6a5:	test   rax,rax
   1c6a8:	je     1ca64 <__sprintf_chk@plt+0x120b4>
   1c6ae:	movzx  eax,BYTE PTR [rbx]
   1c6b1:	test   al,al
   1c6b3:	je     1ca28 <__sprintf_chk@plt+0x12078>
   1c6b9:	mov    r13,QWORD PTR [rsp+0x10]
   1c6be:	mov    rdi,r12
   1c6c1:	jmp    1c6d8 <__sprintf_chk@plt+0x11d28>
   1c6c3:	nop    DWORD PTR [rax+rax*1+0x0]
   1c6c8:	mov    BYTE PTR [rdi],al
   1c6ca:	add    rbx,0x1
   1c6ce:	mov    eax,edx
   1c6d0:	add    rdi,0x1
   1c6d4:	test   al,al
   1c6d6:	je     1c728 <__sprintf_chk@plt+0x11d78>
   1c6d8:	movzx  edx,BYTE PTR [rbx+0x1]
   1c6dc:	cmp    al,0x25
   1c6de:	jne    1c6c8 <__sprintf_chk@plt+0x11d18>
   1c6e0:	cmp    dl,0x66
   1c6e3:	je     1c850 <__sprintf_chk@plt+0x11ea0>
   1c6e9:	jg     1c810 <__sprintf_chk@plt+0x11e60>
   1c6ef:	cmp    dl,0x25
   1c6f2:	je     1c890 <__sprintf_chk@plt+0x11ee0>
   1c6f8:	cmp    dl,0x64
   1c6fb:	jne    1c835 <__sprintf_chk@plt+0x11e85>
   1c701:	mov    rax,QWORD PTR [rsp+0x18]
   1c706:	test   rax,rax
   1c709:	je     1c716 <__sprintf_chk@plt+0x11d66>
   1c70b:	mov    rsi,rax
   1c70e:	call   a030 <stpcpy@plt>
   1c713:	mov    rdi,rax
   1c716:	movzx  eax,BYTE PTR [rbx+0x2]
   1c71a:	add    rbx,0x2
   1c71e:	test   al,al
   1c720:	jne    1c6d8 <__sprintf_chk@plt+0x11d28>
   1c722:	nop    WORD PTR [rax+rax*1+0x0]
   1c728:	mov    rbp,rdi
   1c72b:	mov    rdi,QWORD PTR [rsp+0x8]
   1c730:	call   9ce0 <free@plt>
   1c735:	cmp    r12,rbp
   1c738:	jb     1c749 <__sprintf_chk@plt+0x11d99>
   1c73a:	jmp    1c74f <__sprintf_chk@plt+0x11d9f>
   1c73c:	nop    DWORD PTR [rax+0x0]
   1c740:	sub    rbp,0x1
   1c744:	cmp    rbp,r12
   1c747:	je     1c74f <__sprintf_chk@plt+0x11d9f>
   1c749:	cmp    BYTE PTR [rbp-0x1],0x2f
   1c74d:	je     1c740 <__sprintf_chk@plt+0x11d90>
   1c74f:	mov    BYTE PTR [rbp+0x0],0x0
   1c753:	mov    rax,QWORD PTR [rsp+0x68]
   1c758:	sub    rax,QWORD PTR fs:0x28
   1c761:	jne    1ca69 <__sprintf_chk@plt+0x120b9>
   1c767:	add    rsp,0x78
   1c76b:	mov    rax,r12
   1c76e:	pop    rbx
   1c76f:	pop    rbp
   1c770:	pop    r12
   1c772:	pop    r13
   1c774:	pop    r14
   1c776:	pop    r15
   1c778:	ret    
   1c779:	nop    DWORD PTR [rax+0x0]
   1c780:	cmp    dl,0x6e
   1c783:	je     1c990 <__sprintf_chk@plt+0x11fe0>
   1c789:	cmp    dl,0x70
   1c78c:	jne    1c8a4 <__sprintf_chk@plt+0x11ef4>
   1c792:	mov    QWORD PTR [rsp+0x28],r8
   1c797:	mov    QWORD PTR [rsp+0x20],r9
   1c79c:	call   9fa0 <getpid@plt>
   1c7a1:	xor    ecx,ecx
   1c7a3:	lea    rdi,[rsp+0x64]
   1c7a8:	mov    r9,QWORD PTR [rsp+0x20]
   1c7ad:	mov    BYTE PTR [rsp+0x64],cl
   1c7b1:	mov    r8,QWORD PTR [rsp+0x28]
   1c7b6:	movsxd rsi,eax
   1c7b9:	mov    r15,rdi
   1c7bc:	movabs r10,0xcccccccccccccccd
   1c7c6:	cs nop WORD PTR [rax+rax*1+0x0]
   1c7d0:	mov    rax,rsi
   1c7d3:	sub    r15,0x1
   1c7d7:	mul    r10
   1c7da:	mov    rax,rsi
   1c7dd:	shr    rdx,0x3
   1c7e1:	lea    r11,[rdx+rdx*4]
   1c7e5:	add    r11,r11
   1c7e8:	sub    rax,r11
   1c7eb:	add    eax,0x30
   1c7ee:	mov    BYTE PTR [r15],al
   1c7f1:	mov    rax,rsi
   1c7f4:	mov    rsi,rdx
   1c7f7:	cmp    rax,0x9
   1c7fb:	ja     1c7d0 <__sprintf_chk@plt+0x11e20>
   1c7fd:	sub    rdi,r15
   1c800:	movzx  eax,BYTE PTR [rbp+0x2]
   1c804:	add    r13,0x1
   1c808:	add    r12,rdi
   1c80b:	jmp    1c5e6 <__sprintf_chk@plt+0x11c36>
   1c810:	cmp    dl,0x6e
   1c813:	je     1c870 <__sprintf_chk@plt+0x11ec0>
   1c815:	cmp    dl,0x70
   1c818:	jne    1c8b5 <__sprintf_chk@plt+0x11f05>
   1c81e:	mov    rsi,r15
   1c821:	add    rbx,0x2
   1c825:	call   a030 <stpcpy@plt>
   1c82a:	mov    rdi,rax
   1c82d:	movzx  eax,BYTE PTR [rbx]
   1c830:	jmp    1c6d4 <__sprintf_chk@plt+0x11d24>
   1c835:	mov    BYTE PTR [rdi],0x25
   1c838:	test   dl,dl
   1c83a:	jne    1c8c0 <__sprintf_chk@plt+0x11f10>
   1c840:	mov    rbp,rdi
   1c843:	add    rbp,0x1
   1c847:	jmp    1c72b <__sprintf_chk@plt+0x11d7b>
   1c84c:	nop    DWORD PTR [rax+0x0]
   1c850:	test   r13,r13
   1c853:	je     1c716 <__sprintf_chk@plt+0x11d66>
   1c859:	mov    rsi,r13
   1c85c:	add    rbx,0x2
   1c860:	call   a030 <stpcpy@plt>
   1c865:	mov    rdi,rax
   1c868:	movzx  eax,BYTE PTR [rbx]
   1c86b:	jmp    1c71e <__sprintf_chk@plt+0x11d6e>
   1c870:	mov    rsi,r14
   1c873:	add    rbx,0x2
   1c877:	call   a030 <stpcpy@plt>
   1c87c:	mov    rdi,rax
   1c87f:	movzx  eax,BYTE PTR [rbx]
   1c882:	jmp    1c6d4 <__sprintf_chk@plt+0x11d24>
   1c887:	nop    WORD PTR [rax+rax*1+0x0]
   1c890:	mov    BYTE PTR [rdi],0x25
   1c893:	movzx  eax,BYTE PTR [rbx+0x2]
   1c897:	add    rdi,0x1
   1c89b:	add    rbx,0x2
   1c89f:	jmp    1c6d4 <__sprintf_chk@plt+0x11d24>
   1c8a4:	movzx  eax,BYTE PTR [rbp+0x2]
   1c8a8:	add    r12,0x2
   1c8ac:	add    r13,0x1
   1c8b0:	jmp    1c5e6 <__sprintf_chk@plt+0x11c36>
   1c8b5:	mov    BYTE PTR [rdi],0x25
   1c8b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c8c0:	mov    BYTE PTR [rdi+0x1],dl
   1c8c3:	movzx  eax,BYTE PTR [rbx+0x2]
   1c8c7:	add    rdi,0x2
   1c8cb:	add    rbx,0x2
   1c8cf:	jmp    1c6d4 <__sprintf_chk@plt+0x11d24>
   1c8d4:	nop    DWORD PTR [rax+0x0]
   1c8d8:	test   rbx,rbx
   1c8db:	je     1c9f0 <__sprintf_chk@plt+0x12040>
   1c8e1:	mov    r9,QWORD PTR [rbx]
   1c8e4:	movzx  eax,BYTE PTR [r9]
   1c8e8:	cmp    al,0x2f
   1c8ea:	jne    1c8fd <__sprintf_chk@plt+0x11f4d>
   1c8ec:	nop    DWORD PTR [rax+0x0]
   1c8f0:	movzx  eax,BYTE PTR [r9+0x1]
   1c8f5:	add    r9,0x1
   1c8f9:	cmp    al,0x2f
   1c8fb:	je     1c8f0 <__sprintf_chk@plt+0x11f40>
   1c8fd:	test   al,al
   1c8ff:	je     1c93b <__sprintf_chk@plt+0x11f8b>
   1c901:	mov    rdx,r9
   1c904:	xor    esi,esi
   1c906:	jmp    1c926 <__sprintf_chk@plt+0x11f76>
   1c908:	nop    DWORD PTR [rax+rax*1+0x0]
   1c910:	test   sil,sil
   1c913:	je     1c91a <__sprintf_chk@plt+0x11f6a>
   1c915:	mov    r9,rdx
   1c918:	xor    esi,esi
   1c91a:	movzx  eax,BYTE PTR [rdx+0x1]
   1c91e:	add    rdx,0x1
   1c922:	test   al,al
   1c924:	je     1c93b <__sprintf_chk@plt+0x11f8b>
   1c926:	cmp    al,0x2f
   1c928:	jne    1c910 <__sprintf_chk@plt+0x11f60>
   1c92a:	movzx  eax,BYTE PTR [rdx+0x1]
   1c92e:	add    rdx,0x1
   1c932:	mov    esi,0x1
   1c937:	test   al,al
   1c939:	jne    1c926 <__sprintf_chk@plt+0x11f76>
   1c93b:	mov    rdi,r9
   1c93e:	mov    QWORD PTR [rsp+0x28],r8
   1c943:	add    r13,0x1
   1c947:	mov    QWORD PTR [rsp+0x20],r9
   1c94c:	call   a060 <strlen@plt>
   1c951:	mov    r9,QWORD PTR [rsp+0x20]
   1c956:	mov    r8,QWORD PTR [rsp+0x28]
   1c95b:	xor    ecx,ecx
   1c95d:	movabs r10,0xcccccccccccccccd
   1c967:	add    r12,rax
   1c96a:	movzx  eax,BYTE PTR [rbp+0x2]
   1c96e:	jmp    1c5e6 <__sprintf_chk@plt+0x11c36>
   1c973:	nop    DWORD PTR [rax+rax*1+0x0]
   1c978:	movzx  eax,BYTE PTR [rbp+0x2]
   1c97c:	add    r12,0x1
   1c980:	lea    r13,[rbp+0x2]
   1c984:	jmp    1c5e6 <__sprintf_chk@plt+0x11c36>
   1c989:	nop    DWORD PTR [rax+0x0]
   1c990:	mov    BYTE PTR [rsp+0x44],cl
   1c994:	lea    rdi,[rsp+0x44]
   1c999:	mov    rsi,QWORD PTR [rsp+0x10]
   1c99e:	mov    r14,rdi
   1c9a1:	nop    DWORD PTR [rax+0x0]
   1c9a8:	mov    rax,rsi
   1c9ab:	sub    r14,0x1
   1c9af:	mul    r10
   1c9b2:	mov    rax,rsi
   1c9b5:	shr    rdx,0x3
   1c9b9:	lea    r11,[rdx+rdx*4]
   1c9bd:	add    r11,r11
   1c9c0:	sub    rax,r11
   1c9c3:	add    eax,0x30
   1c9c6:	mov    BYTE PTR [r14],al
   1c9c9:	mov    rax,rsi
   1c9cc:	mov    rsi,rdx
   1c9cf:	cmp    rax,0x9
   1c9d3:	ja     1c9a8 <__sprintf_chk@plt+0x11ff8>
   1c9d5:	sub    rdi,r14
   1c9d8:	movzx  eax,BYTE PTR [rbp+0x2]
   1c9dc:	add    r13,0x1
   1c9e0:	add    r12,rdi
   1c9e3:	jmp    1c5e6 <__sprintf_chk@plt+0x11c36>
   1c9e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c9f0:	movzx  eax,BYTE PTR [rbp+0x2]
   1c9f4:	lea    r13,[rbp+0x2]
   1c9f8:	jmp    1c5e6 <__sprintf_chk@plt+0x11c36>
   1c9fd:	nop    DWORD PTR [rax]
   1ca00:	mov    edi,0x1
   1ca05:	xor    r14d,r14d
   1ca08:	xor    r15d,r15d
   1ca0b:	xor    r9d,r9d
   1ca0e:	mov    QWORD PTR [rsp+0x18],0x0
   1ca17:	mov    QWORD PTR [rsp+0x8],0x0
   1ca20:	jmp    1c698 <__sprintf_chk@plt+0x11ce8>
   1ca25:	nop    DWORD PTR [rax]
   1ca28:	mov    rdi,QWORD PTR [rsp+0x8]
   1ca2d:	mov    rbp,r12
   1ca30:	call   9ce0 <free@plt>
   1ca35:	jmp    1c74f <__sprintf_chk@plt+0x11d9f>
   1ca3a:	mov    rdi,QWORD PTR [rbx]
   1ca3d:	mov    QWORD PTR [rsp+0x20],r8
   1ca42:	mov    QWORD PTR [rsp+0x18],r9
   1ca47:	call   483a0 <argp_usage@@Base+0x5020>
   1ca4c:	mov    r9,QWORD PTR [rsp+0x18]
   1ca51:	mov    r8,QWORD PTR [rsp+0x20]
   1ca56:	test   rax,rax
   1ca59:	mov    QWORD PTR [rsp+0x8],rax
   1ca5e:	jne    1c637 <__sprintf_chk@plt+0x11c87>
   1ca64:	call   19130 <__sprintf_chk@plt+0xe780>
   1ca69:	call   a0a0 <__stack_chk_fail@plt>
   1ca6e:	xchg   ax,ax
   1ca70:	mov    r8,QWORD PTR [rip+0x62dd1]        # 7f848 <obstack_alloc_failed_handler@@Base+0xa10>
   1ca77:	push   r12
   1ca79:	push   rbp
   1ca7a:	push   rbx
   1ca7b:	test   r8,r8
   1ca7e:	je     1caa0 <__sprintf_chk@plt+0x120f0>
   1ca80:	mov    rax,QWORD PTR [rip+0x62d91]        # 7f818 <obstack_alloc_failed_handler@@Base+0x9e0>
   1ca87:	pop    rbx
   1ca88:	mov    rsi,r8
   1ca8b:	xor    edi,edi
   1ca8d:	pop    rbp
   1ca8e:	pop    r12
   1ca90:	lea    rdx,[rax+0x1]
   1ca94:	jmp    1c570 <__sprintf_chk@plt+0x11bc0>
   1ca99:	nop    DWORD PTR [rax+0x0]
   1caa0:	movzx  edx,BYTE PTR [rip+0x62cc1]        # 7f768 <obstack_alloc_failed_handler@@Base+0x930>
   1caa7:	lea    rax,[rip+0x5dbd2]        # 7a680 <_obstack_memory_used@@Base+0x2da00>
   1caae:	lea    rdi,[rip+0x4788a]        # 6433f <_obstack_memory_used@@Base+0x176bf>
   1cab5:	mov    r12,QWORD PTR [rax+rdx*8+0x10]
   1caba:	call   9d40 <getenv@plt>
   1cabf:	mov    rbp,rax
   1cac2:	test   rax,rax
   1cac5:	je     1cb10 <__sprintf_chk@plt+0x12160>
   1cac7:	mov    rdi,rax
   1caca:	call   a060 <strlen@plt>
   1cacf:	mov    rbx,rax
   1cad2:	mov    rdi,r12
   1cad5:	call   a060 <strlen@plt>
   1cada:	lea    rdi,[rbx+rax*1+0x1]
   1cadf:	call   a4a0 <malloc@plt>
   1cae4:	test   rax,rax
   1cae7:	je     1cb1e <__sprintf_chk@plt+0x1216e>
   1cae9:	mov    rsi,rbp
   1caec:	mov    rdi,rax
   1caef:	mov    QWORD PTR [rip+0x62d52],rax        # 7f848 <obstack_alloc_failed_handler@@Base+0xa10>
   1caf6:	call   9e80 <strcpy@plt>
   1cafb:	mov    rsi,r12
   1cafe:	mov    rdi,rax
   1cb01:	call   a7a0 <strcat@plt>
   1cb06:	mov    r8,rax
   1cb09:	jmp    1ca80 <__sprintf_chk@plt+0x120d0>
   1cb0e:	xchg   ax,ax
   1cb10:	mov    ebx,0x4
   1cb15:	lea    rbp,[rip+0x4781e]        # 6433a <_obstack_memory_used@@Base+0x176ba>
   1cb1c:	jmp    1cad2 <__sprintf_chk@plt+0x12122>
   1cb1e:	call   19130 <__sprintf_chk@plt+0xe780>
   1cb23:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1cb2e:	xchg   ax,ax
   1cb30:	endbr64 
   1cb34:	push   r15
   1cb36:	mov    r15,rsi
   1cb39:	push   r14
   1cb3b:	mov    r14,rcx
   1cb3e:	push   r13
   1cb40:	mov    r13,rdx
   1cb43:	push   r12
   1cb45:	mov    r12,rdi
   1cb48:	mov    rdi,rsi
   1cb4b:	push   rbp
   1cb4c:	push   rbx
   1cb4d:	sub    rsp,0x8
   1cb51:	call   a060 <strlen@plt>
   1cb56:	lea    rdi,[rax+0xe]
   1cb5a:	mov    rbx,rax
   1cb5d:	call   a4a0 <malloc@plt>
   1cb62:	test   rax,rax
   1cb65:	je     1cbc7 <__sprintf_chk@plt+0x12217>
   1cb67:	mov    rbp,rax
   1cb6a:	lea    rdx,[rbx+0x1]
   1cb6e:	mov    rsi,r15
   1cb71:	movabs rax,0x782e594c49484353
   1cb7b:	mov    QWORD PTR [rbp+0x0],rax
   1cb7f:	lea    rdi,[rbp+0xd]
   1cb83:	mov    DWORD PTR [rbp+0x8],0x72747461
   1cb8a:	mov    BYTE PTR [rbp+0xc],0x2e
   1cb8e:	call   a420 <memcpy@plt>
   1cb93:	mov    r8,r14
   1cb96:	mov    rcx,r13
   1cb99:	mov    rdx,rbp
   1cb9c:	lea    rdi,[r12+0x160]
   1cba4:	lea    rsi,[r12+0x158]
   1cbac:	call   19580 <__sprintf_chk@plt+0xebd0>
   1cbb1:	add    rsp,0x8
   1cbb5:	mov    rdi,rbp
   1cbb8:	pop    rbx
   1cbb9:	pop    rbp
   1cbba:	pop    r12
   1cbbc:	pop    r13
   1cbbe:	pop    r14
   1cbc0:	pop    r15
   1cbc2:	jmp    9ce0 <free@plt>
   1cbc7:	call   19130 <__sprintf_chk@plt+0xe780>
   1cbcc:	nop    DWORD PTR [rax+0x0]
   1cbd0:	endbr64 
   1cbd4:	push   r15
   1cbd6:	mov    r15,rdx
   1cbd9:	push   r14
   1cbdb:	push   r13
   1cbdd:	mov    r13,rdi
   1cbe0:	mov    rdi,rsi
   1cbe3:	push   r12
   1cbe5:	mov    r12,rcx
   1cbe8:	push   rbp
   1cbe9:	mov    rbp,rsi
   1cbec:	push   rbx
   1cbed:	sub    rsp,0x8
   1cbf1:	call   a060 <strlen@plt>
   1cbf6:	lea    r14,[rax+0x1]
   1cbfa:	mov    rdi,r14
   1cbfd:	call   a4a0 <malloc@plt>
   1cc02:	test   rax,rax
   1cc05:	je     1ccda <__sprintf_chk@plt+0x1232a>
   1cc0b:	mov    rdx,r14
   1cc0e:	mov    rsi,rbp
   1cc11:	lea    rbx,[r12+0x1]
   1cc16:	mov    rdi,rax
   1cc19:	call   a420 <memcpy@plt>
   1cc1e:	mov    rdi,rbx
   1cc21:	mov    rbp,rax
   1cc24:	call   a4a0 <malloc@plt>
   1cc29:	mov    r14,rax
   1cc2c:	test   rax,rax
   1cc2f:	je     1ccda <__sprintf_chk@plt+0x1232a>
   1cc35:	mov    rdx,rbx
   1cc38:	mov    rsi,r15
   1cc3b:	mov    rdi,rax
   1cc3e:	call   a420 <memcpy@plt>
   1cc43:	lea    rcx,[rbp+0x1]
   1cc47:	mov    rax,rbp
   1cc4a:	jmp    1cc5f <__sprintf_chk@plt+0x122af>
   1cc4c:	nop    DWORD PTR [rax+0x0]
   1cc50:	mov    BYTE PTR [rcx-0x1],dl
   1cc53:	test   dl,dl
   1cc55:	je     1cca0 <__sprintf_chk@plt+0x122f0>
   1cc57:	add    rax,0x1
   1cc5b:	add    rcx,0x1
   1cc5f:	movzx  edx,BYTE PTR [rax]
   1cc62:	cmp    dl,0x25
   1cc65:	jne    1cc50 <__sprintf_chk@plt+0x122a0>
   1cc67:	movzx  edx,BYTE PTR [rax+0x1]
   1cc6b:	cmp    dl,0x33
   1cc6e:	je     1cc88 <__sprintf_chk@plt+0x122d8>
   1cc70:	cmp    dl,0x32
   1cc73:	jne    1cc7b <__sprintf_chk@plt+0x122cb>
   1cc75:	cmp    BYTE PTR [rax+0x2],0x35
   1cc79:	je     1ccd0 <__sprintf_chk@plt+0x12320>
   1cc7b:	mov    BYTE PTR [rcx-0x1],0x25
   1cc7f:	jmp    1cc57 <__sprintf_chk@plt+0x122a7>
   1cc81:	nop    DWORD PTR [rax+0x0]
   1cc88:	cmp    BYTE PTR [rax+0x2],0x44
   1cc8c:	jne    1cc7b <__sprintf_chk@plt+0x122cb>
   1cc8e:	mov    BYTE PTR [rcx-0x1],0x3d
   1cc92:	add    rax,0x3
   1cc96:	jmp    1cc5b <__sprintf_chk@plt+0x122ab>
   1cc98:	nop    DWORD PTR [rax+rax*1+0x0]
   1cca0:	lea    rsi,[rbp+0xd]
   1cca4:	mov    rcx,r12
   1cca7:	mov    rdx,r14
   1ccaa:	mov    rdi,r13
   1ccad:	call   1cb30 <__sprintf_chk@plt+0x12180>
   1ccb2:	mov    rdi,rbp
   1ccb5:	call   9ce0 <free@plt>
   1ccba:	add    rsp,0x8
   1ccbe:	mov    rdi,r14
   1ccc1:	pop    rbx
   1ccc2:	pop    rbp
   1ccc3:	pop    r12
   1ccc5:	pop    r13
   1ccc7:	pop    r14
   1ccc9:	pop    r15
   1cccb:	jmp    9ce0 <free@plt>
   1ccd0:	mov    BYTE PTR [rcx-0x1],0x25
   1ccd4:	add    rax,0x3
   1ccd8:	jmp    1cc5b <__sprintf_chk@plt+0x122ab>
   1ccda:	call   19130 <__sprintf_chk@plt+0xe780>
   1ccdf:	nop
   1cce0:	endbr64 
   1cce4:	push   r12
   1cce6:	mov    rsi,rdi
   1cce9:	push   rbp
   1ccea:	push   rbx
   1cceb:	mov    rbx,rdi
   1ccee:	sub    rsp,0x10
   1ccf2:	mov    rdi,QWORD PTR [rip+0x62abf]        # 7f7b8 <obstack_alloc_failed_handler@@Base+0x980>
   1ccf9:	mov    rax,QWORD PTR fs:0x28
   1cd02:	mov    QWORD PTR [rsp+0x8],rax
   1cd07:	xor    eax,eax
   1cd09:	call   16ef0 <__sprintf_chk@plt+0xc540>
   1cd0e:	mov    rdi,QWORD PTR [rip+0x629fb]        # 7f710 <obstack_alloc_failed_handler@@Base+0x8d8>
   1cd15:	mov    rsi,rbx
   1cd18:	call   16ef0 <__sprintf_chk@plt+0xc540>
   1cd1d:	mov    rdi,QWORD PTR [rbx+0x170]
   1cd24:	test   rdi,rdi
   1cd27:	je     1cd57 <__sprintf_chk@plt+0x123a7>
   1cd29:	mov    rsi,QWORD PTR [rbx+0x178]
   1cd30:	mov    r12,rsp
   1cd33:	lea    rbp,[rip+0xffffffffffffb8a6]        # 185e0 <__sprintf_chk@plt+0xdc30>
   1cd3a:	lea    rax,[rsi+0x200]
   1cd41:	mov    QWORD PTR [rsp],rax
   1cd45:	mov    r8,rbx
   1cd48:	mov    rcx,rbp
   1cd4b:	mov    rdx,r12
   1cd4e:	call   61a80 <_obstack_memory_used@@Base+0x14e00>
   1cd53:	test   al,al
   1cd55:	jne    1cda8 <__sprintf_chk@plt+0x123f8>
   1cd57:	mov    rdi,QWORD PTR [rip+0x62ac2]        # 7f820 <obstack_alloc_failed_handler@@Base+0x9e8>
   1cd5e:	mov    rsi,rbx
   1cd61:	call   16ef0 <__sprintf_chk@plt+0xc540>
   1cd66:	mov    rax,QWORD PTR [rbx+0x88]
   1cd6d:	cmp    BYTE PTR [rbx+0x150],0x0
   1cd74:	mov    QWORD PTR [rbx+0x118],rax
   1cd7b:	je     1cd8b <__sprintf_chk@plt+0x123db>
   1cd7d:	mov    rax,QWORD PTR [rbx+0x148]
   1cd84:	mov    QWORD PTR [rbx+0x88],rax
   1cd8b:	mov    rax,QWORD PTR [rsp+0x8]
   1cd90:	sub    rax,QWORD PTR fs:0x28
   1cd99:	jne    1cdb8 <__sprintf_chk@plt+0x12408>
   1cd9b:	add    rsp,0x10
   1cd9f:	pop    rbx
   1cda0:	pop    rbp
   1cda1:	pop    r12
   1cda3:	ret    
   1cda4:	nop    DWORD PTR [rax+0x0]
   1cda8:	mov    rdi,QWORD PTR [rbx+0x170]
   1cdaf:	mov    rsi,QWORD PTR [rbx+0x178]
   1cdb6:	jmp    1cd45 <__sprintf_chk@plt+0x12395>
   1cdb8:	call   a0a0 <__stack_chk_fail@plt>
   1cdbd:	nop    DWORD PTR [rax]
   1cdc0:	endbr64 
   1cdc4:	xor    eax,eax
   1cdc6:	test   rdx,rdx
   1cdc9:	push   r14
   1cdcb:	cmovns rax,rdx
   1cdcf:	push   r13
   1cdd1:	push   r12
   1cdd3:	mov    r12,rdi
   1cdd6:	lea    r13,[rax+0x200]
   1cddd:	push   rbp
   1cdde:	mov    rbp,rax
   1cde1:	push   rbx
   1cde2:	mov    rbx,rsi
   1cde5:	mov    QWORD PTR [rdi+0x8],r13
   1cde9:	lea    rdi,[rax+0x201]
   1cdf0:	call   a4a0 <malloc@plt>
   1cdf5:	test   rax,rax
   1cdf8:	je     1cf75 <__sprintf_chk@plt+0x125c5>
   1cdfe:	mov    QWORD PTR [r12+0x10],rax
   1ce03:	xor    r14d,r14d
   1ce06:	mov    BYTE PTR [rax+rbp*1+0x200],0x0
   1ce0e:	jmp    1ce7a <__sprintf_chk@plt+0x124ca>
   1ce10:	test   bpl,0x4
   1ce14:	jne    1cf1d <__sprintf_chk@plt+0x1256d>
   1ce1a:	test   ebp,ebp
   1ce1c:	je     1ce2d <__sprintf_chk@plt+0x1247d>
   1ce1e:	movzx  edx,BYTE PTR [rbx]
   1ce21:	mov    BYTE PTR [rax],dl
   1ce23:	test   bpl,0x2
   1ce27:	jne    1cf30 <__sprintf_chk@plt+0x12580>
   1ce2d:	mov    rax,QWORD PTR [rip+0x6270c]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ce34:	cmp    rbx,rax
   1ce37:	jb     1ce55 <__sprintf_chk@plt+0x124a5>
   1ce39:	sub    rbx,rax
   1ce3c:	mov    rdx,rbx
   1ce3f:	and    rdx,0xfffffffffffffe00
   1ce46:	lea    rax,[rax+rdx*1+0x200]
   1ce4e:	mov    QWORD PTR [rip+0x626eb],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ce55:	cmp    rax,QWORD PTR [rip+0x62724]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1ce5c:	ja     aa49 <__sprintf_chk@plt+0x99>
   1ce62:	mov    rbx,QWORD PTR [rip+0x626d7]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ce69:	je     1ced8 <__sprintf_chk@plt+0x12528>
   1ce6b:	sub    r13,rbp
   1ce6e:	add    r14,rbp
   1ce71:	test   r13,r13
   1ce74:	jle    1cf14 <__sprintf_chk@plt+0x12564>
   1ce7a:	mov    ebp,0x200
   1ce7f:	cmp    r13,rbp
   1ce82:	cmovbe rbp,r13
   1ce86:	test   rbx,rbx
   1ce89:	je     1cf41 <__sprintf_chk@plt+0x12591>
   1ce8f:	mov    rax,QWORD PTR [r12+0x10]
   1ce94:	add    rax,r14
   1ce97:	cmp    ebp,0x8
   1ce9a:	jb     1ce10 <__sprintf_chk@plt+0x12460>
   1cea0:	mov    rdx,QWORD PTR [rbx]
   1cea3:	lea    rdi,[rax+0x8]
   1cea7:	mov    rsi,rbx
   1ceaa:	and    rdi,0xfffffffffffffff8
   1ceae:	mov    QWORD PTR [rax],rdx
   1ceb1:	mov    edx,ebp
   1ceb3:	mov    rcx,QWORD PTR [rbx+rdx*1-0x8]
   1ceb8:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
   1cebd:	sub    rax,rdi
   1cec0:	sub    rsi,rax
   1cec3:	add    eax,ebp
   1cec5:	shr    eax,0x3
   1cec8:	mov    ecx,eax
   1ceca:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1cecd:	jmp    1ce2d <__sprintf_chk@plt+0x1247d>
   1ced2:	nop    WORD PTR [rax+rax*1+0x0]
   1ced8:	xor    ebx,ebx
   1ceda:	cmp    BYTE PTR [rip+0x62653],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1cee1:	jne    1ce6b <__sprintf_chk@plt+0x124bb>
   1cee3:	call   f170 <__sprintf_chk@plt+0x47c0>
   1cee8:	mov    rbx,QWORD PTR [rip+0x62651]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ceef:	cmp    rbx,QWORD PTR [rip+0x6268a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1cef6:	jne    1ce6b <__sprintf_chk@plt+0x124bb>
   1cefc:	sub    r13,rbp
   1ceff:	mov    BYTE PTR [rip+0x6262e],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1cf06:	xor    ebx,ebx
   1cf08:	add    r14,rbp
   1cf0b:	test   r13,r13
   1cf0e:	jg     1ce7a <__sprintf_chk@plt+0x124ca>
   1cf14:	pop    rbx
   1cf15:	pop    rbp
   1cf16:	pop    r12
   1cf18:	pop    r13
   1cf1a:	pop    r14
   1cf1c:	ret    
   1cf1d:	mov    edx,DWORD PTR [rbx]
   1cf1f:	mov    DWORD PTR [rax],edx
   1cf21:	mov    edx,ebp
   1cf23:	mov    ecx,DWORD PTR [rbx+rdx*1-0x4]
   1cf27:	mov    DWORD PTR [rax+rdx*1-0x4],ecx
   1cf2b:	jmp    1ce2d <__sprintf_chk@plt+0x1247d>
   1cf30:	mov    edx,ebp
   1cf32:	movzx  ecx,WORD PTR [rbx+rdx*1-0x2]
   1cf37:	mov    WORD PTR [rax+rdx*1-0x2],cx
   1cf3c:	jmp    1ce2d <__sprintf_chk@plt+0x1247d>
   1cf41:	mov    rax,QWORD PTR [rip+0x625c0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1cf48:	test   rax,rax
   1cf4b:	je     1cf4f <__sprintf_chk@plt+0x1259f>
   1cf4d:	call   rax
   1cf4f:	mov    edx,0x5
   1cf54:	lea    rsi,[rip+0x46465]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   1cf5b:	xor    edi,edi
   1cf5d:	call   a040 <dcgettext@plt>
   1cf62:	xor    esi,esi
   1cf64:	xor    edi,edi
   1cf66:	mov    rdx,rax
   1cf69:	xor    eax,eax
   1cf6b:	call   a640 <error@plt>
   1cf70:	call   190e0 <__sprintf_chk@plt+0xe730>
   1cf75:	call   19130 <__sprintf_chk@plt+0xe780>
   1cf7a:	nop    WORD PTR [rax+rax*1+0x0]
   1cf80:	endbr64 
   1cf84:	push   r14
   1cf86:	push   r13
   1cf88:	push   r12
   1cf8a:	mov    r12,rdi
   1cf8d:	mov    rdi,rdx
   1cf90:	push   rbp
   1cf91:	mov    rbp,rsi
   1cf94:	push   rbx
   1cf95:	mov    rbx,rcx
   1cf98:	sub    rsp,0x40
   1cf9c:	mov    rax,QWORD PTR fs:0x28
   1cfa5:	mov    QWORD PTR [rsp+0x38],rax
   1cfaa:	xor    eax,eax
   1cfac:	lea    rsi,[rsp+0x20]
   1cfb1:	lea    r14,[rsp+0x14]
   1cfb6:	call   49490 <argp_usage@@Base+0x6110>
   1cfbb:	mov    BYTE PTR [rsp+0x14],0x0
   1cfc0:	movabs rsi,0xcccccccccccccccd
   1cfca:	mov    r13,rax
   1cfcd:	nop    DWORD PTR [rax]
   1cfd0:	mov    rax,rbx
   1cfd3:	sub    r14,0x1
   1cfd7:	mul    rsi
   1cfda:	mov    rax,rbx
   1cfdd:	shr    rdx,0x3
   1cfe1:	lea    rcx,[rdx+rdx*4]
   1cfe5:	add    rcx,rcx
   1cfe8:	sub    rax,rcx
   1cfeb:	add    eax,0x30
   1cfee:	mov    BYTE PTR [r14],al
   1cff1:	mov    rax,rbx
   1cff4:	mov    rbx,rdx
   1cff7:	cmp    rax,0x9
   1cffb:	ja     1cfd0 <__sprintf_chk@plt+0x12620>
   1cffd:	mov    rax,QWORD PTR [rip+0x62504]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d004:	test   rax,rax
   1d007:	je     1d00b <__sprintf_chk@plt+0x1265b>
   1d009:	call   rax
   1d00b:	mov    edx,0x5
   1d010:	lea    rsi,[rip+0x47829]        # 64840 <_obstack_memory_used@@Base+0x17bc0>
   1d017:	xor    edi,edi
   1d019:	call   a040 <dcgettext@plt>
   1d01e:	sub    rsp,0x8
   1d022:	mov    r9,r13
   1d025:	mov    r8,rbp
   1d028:	push   r14
   1d02a:	mov    rdx,rax
   1d02d:	mov    rcx,r12
   1d030:	xor    eax,eax
   1d032:	xor    esi,esi
   1d034:	xor    edi,edi
   1d036:	call   a640 <error@plt>
   1d03b:	pop    rax
   1d03c:	pop    rdx
   1d03d:	mov    DWORD PTR [rip+0x6207d],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1d047:	mov    rax,QWORD PTR [rsp+0x38]
   1d04c:	sub    rax,QWORD PTR fs:0x28
   1d055:	jne    1d064 <__sprintf_chk@plt+0x126b4>
   1d057:	add    rsp,0x40
   1d05b:	pop    rbx
   1d05c:	pop    rbp
   1d05d:	pop    r12
   1d05f:	pop    r13
   1d061:	pop    r14
   1d063:	ret    
   1d064:	call   a0a0 <__stack_chk_fail@plt>
   1d069:	nop    DWORD PTR [rax+0x0]
   1d070:	push   r12
   1d072:	mov    r12,rdx
   1d075:	mov    edx,0x1
   1d07a:	push   rbp
   1d07b:	mov    rbp,rsi
   1d07e:	push   rbx
   1d07f:	mov    rbx,rdi
   1d082:	mov    rdi,rbp
   1d085:	sub    rsp,0x10
   1d089:	mov    rax,QWORD PTR fs:0x28
   1d092:	mov    QWORD PTR [rsp+0x8],rax
   1d097:	xor    eax,eax
   1d099:	mov    rsi,rsp
   1d09c:	call   25850 <__sprintf_chk@plt+0x1aea0>
   1d0a1:	test   rdx,rdx
   1d0a4:	js     1d0d0 <__sprintf_chk@plt+0x12720>
   1d0a6:	mov    QWORD PTR [rbx+0x8],rdx
   1d0aa:	mov    QWORD PTR [rbx],rax
   1d0ad:	mov    eax,0x1
   1d0b2:	mov    rdx,QWORD PTR [rsp+0x8]
   1d0b7:	sub    rdx,QWORD PTR fs:0x28
   1d0c0:	jne    1d14e <__sprintf_chk@plt+0x1279e>
   1d0c6:	add    rsp,0x10
   1d0ca:	pop    rbx
   1d0cb:	pop    rbp
   1d0cc:	pop    r12
   1d0ce:	ret    
   1d0cf:	nop
   1d0d0:	mov    rax,QWORD PTR [rsp]
   1d0d4:	cmp    rax,rbp
   1d0d7:	jbe    1d0de <__sprintf_chk@plt+0x1272e>
   1d0d9:	cmp    BYTE PTR [rax],0x0
   1d0dc:	je     1d128 <__sprintf_chk@plt+0x12778>
   1d0de:	mov    rax,QWORD PTR [rip+0x62423]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d0e5:	test   rax,rax
   1d0e8:	je     1d0ec <__sprintf_chk@plt+0x1273c>
   1d0ea:	call   rax
   1d0ec:	mov    edx,0x5
   1d0f1:	lea    rsi,[rip+0x47778]        # 64870 <_obstack_memory_used@@Base+0x17bf0>
   1d0f8:	xor    edi,edi
   1d0fa:	call   a040 <dcgettext@plt>
   1d0ff:	mov    r8,rbp
   1d102:	mov    rcx,r12
   1d105:	xor    esi,esi
   1d107:	mov    rdx,rax
   1d10a:	xor    edi,edi
   1d10c:	xor    eax,eax
   1d10e:	call   a640 <error@plt>
   1d113:	xor    eax,eax
   1d115:	mov    DWORD PTR [rip+0x61fa5],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1d11f:	jmp    1d0b2 <__sprintf_chk@plt+0x12702>
   1d121:	nop    DWORD PTR [rax+0x0]
   1d128:	movabs rcx,0x7fffffffffffffff
   1d132:	mov    rsi,rbp
   1d135:	mov    rdi,r12
   1d138:	movabs rdx,0x8000000000000000
   1d142:	call   1cf80 <__sprintf_chk@plt+0x125d0>
   1d147:	xor    eax,eax
   1d149:	jmp    1d0b2 <__sprintf_chk@plt+0x12702>
   1d14e:	call   a0a0 <__stack_chk_fail@plt>
   1d153:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1d15e:	xchg   ax,ax
   1d160:	endbr64 
   1d164:	push   rbx
   1d165:	mov    r8,rsi
   1d168:	mov    rbx,rdi
   1d16b:	mov    rsi,rdx
   1d16e:	mov    rdx,r8
   1d171:	sub    rsp,0x20
   1d175:	mov    rax,QWORD PTR fs:0x28
   1d17e:	mov    QWORD PTR [rsp+0x18],rax
   1d183:	xor    eax,eax
   1d185:	mov    rdi,rsp
   1d188:	call   1d070 <__sprintf_chk@plt+0x126c0>
   1d18d:	test   al,al
   1d18f:	je     1d19d <__sprintf_chk@plt+0x127ed>
   1d191:	movdqa xmm0,XMMWORD PTR [rsp]
   1d196:	movups XMMWORD PTR [rbx+0xe8],xmm0
   1d19d:	mov    rax,QWORD PTR [rsp+0x18]
   1d1a2:	sub    rax,QWORD PTR fs:0x28
   1d1ab:	jne    1d1b3 <__sprintf_chk@plt+0x12803>
   1d1ad:	add    rsp,0x20
   1d1b1:	pop    rbx
   1d1b2:	ret    
   1d1b3:	call   a0a0 <__stack_chk_fail@plt>
   1d1b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1d1c0:	endbr64 
   1d1c4:	push   rbx
   1d1c5:	mov    r8,rsi
   1d1c8:	mov    rbx,rdi
   1d1cb:	mov    rsi,rdx
   1d1ce:	mov    rdx,r8
   1d1d1:	sub    rsp,0x20
   1d1d5:	mov    rax,QWORD PTR fs:0x28
   1d1de:	mov    QWORD PTR [rsp+0x18],rax
   1d1e3:	xor    eax,eax
   1d1e5:	mov    rdi,rsp
   1d1e8:	call   1d070 <__sprintf_chk@plt+0x126c0>
   1d1ed:	test   al,al
   1d1ef:	je     1d1fd <__sprintf_chk@plt+0x1284d>
   1d1f1:	movdqa xmm0,XMMWORD PTR [rsp]
   1d1f6:	movups XMMWORD PTR [rbx+0x108],xmm0
   1d1fd:	mov    rax,QWORD PTR [rsp+0x18]
   1d202:	sub    rax,QWORD PTR fs:0x28
   1d20b:	jne    1d213 <__sprintf_chk@plt+0x12863>
   1d20d:	add    rsp,0x20
   1d211:	pop    rbx
   1d212:	ret    
   1d213:	call   a0a0 <__stack_chk_fail@plt>
   1d218:	nop    DWORD PTR [rax+rax*1+0x0]
   1d220:	endbr64 
   1d224:	push   rbx
   1d225:	mov    r8,rsi
   1d228:	mov    rbx,rdi
   1d22b:	mov    rsi,rdx
   1d22e:	mov    rdx,r8
   1d231:	sub    rsp,0x20
   1d235:	mov    rax,QWORD PTR fs:0x28
   1d23e:	mov    QWORD PTR [rsp+0x18],rax
   1d243:	xor    eax,eax
   1d245:	mov    rdi,rsp
   1d248:	call   1d070 <__sprintf_chk@plt+0x126c0>
   1d24d:	test   al,al
   1d24f:	je     1d25d <__sprintf_chk@plt+0x128ad>
   1d251:	movdqa xmm0,XMMWORD PTR [rsp]
   1d256:	movups XMMWORD PTR [rbx+0xf8],xmm0
   1d25d:	mov    rax,QWORD PTR [rsp+0x18]
   1d262:	sub    rax,QWORD PTR fs:0x28
   1d26b:	jne    1d273 <__sprintf_chk@plt+0x128c3>
   1d26d:	add    rsp,0x20
   1d271:	pop    rbx
   1d272:	ret    
   1d273:	call   a0a0 <__stack_chk_fail@plt>
   1d278:	nop    DWORD PTR [rax+rax*1+0x0]
   1d280:	endbr64 
   1d284:	push   r15
   1d286:	push   r14
   1d288:	push   r13
   1d28a:	mov    r13,rdx
   1d28d:	push   r12
   1d28f:	push   rbp
   1d290:	push   rbx
   1d291:	sub    rsp,0x28
   1d295:	mov    QWORD PTR [rsp],rsi
   1d299:	mov    rax,QWORD PTR fs:0x28
   1d2a2:	mov    QWORD PTR [rsp+0x18],rax
   1d2a7:	xor    eax,eax
   1d2a9:	mov    QWORD PTR [rdi+0x130],0x0
   1d2b4:	movsx  eax,BYTE PTR [rdx]
   1d2b7:	sub    eax,0x30
   1d2ba:	cmp    eax,0x9
   1d2bd:	ja     1d380 <__sprintf_chk@plt+0x129d0>
   1d2c3:	mov    rbx,rdi
   1d2c6:	mov    r14d,0x1
   1d2cc:	lea    rbp,[rsp+0x10]
   1d2d1:	call   9e40 <__errno_location@plt>
   1d2d6:	mov    r15,rax
   1d2d9:	jmp    1d322 <__sprintf_chk@plt+0x12972>
   1d2db:	nop    DWORD PTR [rax+rax*1+0x0]
   1d2e0:	cmp    DWORD PTR [r15],0x22
   1d2e4:	je     1d3e8 <__sprintf_chk@plt+0x12a38>
   1d2ea:	mov    r12,rax
   1d2ed:	mov    rax,QWORD PTR [rsp+0x10]
   1d2f2:	mov    edx,r14d
   1d2f5:	xor    edx,0x1
   1d2f8:	movzx  r8d,BYTE PTR [rax]
   1d2fc:	test   r8b,r8b
   1d2ff:	je     1d408 <__sprintf_chk@plt+0x12a58>
   1d305:	cmp    r8b,0x2c
   1d309:	jne    1d450 <__sprintf_chk@plt+0x12aa0>
   1d30f:	lea    r13,[rax+0x1]
   1d313:	movsx  eax,BYTE PTR [rax+0x1]
   1d317:	sub    eax,0x30
   1d31a:	cmp    eax,0x9
   1d31d:	ja     1d380 <__sprintf_chk@plt+0x129d0>
   1d31f:	mov    r14d,edx
   1d322:	mov    DWORD PTR [r15],0x0
   1d329:	mov    edx,0xa
   1d32e:	mov    rsi,rbp
   1d331:	mov    rdi,r13
   1d334:	call   9dc0 <strtoimax@plt>
   1d339:	test   r14d,r14d
   1d33c:	jne    1d2e0 <__sprintf_chk@plt+0x12930>
   1d33e:	cmp    DWORD PTR [r15],0x22
   1d342:	je     1d3e8 <__sprintf_chk@plt+0x12a38>
   1d348:	mov    rdx,QWORD PTR [rbx+0x130]
   1d34f:	cmp    rdx,QWORD PTR [rbx+0x138]
   1d356:	jae    1d4a6 <__sprintf_chk@plt+0x12af6>
   1d35c:	lea    rcx,[rdx+0x1]
   1d360:	shl    rdx,0x4
   1d364:	add    rdx,QWORD PTR [rbx+0x140]
   1d36b:	mov    QWORD PTR [rbx+0x130],rcx
   1d372:	mov    QWORD PTR [rdx],r12
   1d375:	mov    QWORD PTR [rdx+0x8],rax
   1d379:	jmp    1d2ed <__sprintf_chk@plt+0x1293d>
   1d37e:	xchg   ax,ax
   1d380:	mov    rax,QWORD PTR [rip+0x62181]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d387:	test   rax,rax
   1d38a:	je     1d38e <__sprintf_chk@plt+0x129de>
   1d38c:	call   rax
   1d38e:	mov    edx,0x5
   1d393:	lea    rsi,[rip+0x474d6]        # 64870 <_obstack_memory_used@@Base+0x17bf0>
   1d39a:	xor    edi,edi
   1d39c:	call   a040 <dcgettext@plt>
   1d3a1:	mov    rcx,QWORD PTR [rsp]
   1d3a5:	mov    r8,r13
   1d3a8:	xor    esi,esi
   1d3aa:	mov    rdx,rax
   1d3ad:	xor    edi,edi
   1d3af:	xor    eax,eax
   1d3b1:	call   a640 <error@plt>
   1d3b6:	mov    DWORD PTR [rip+0x61d04],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1d3c0:	mov    rax,QWORD PTR [rsp+0x18]
   1d3c5:	sub    rax,QWORD PTR fs:0x28
   1d3ce:	jne    1d4c5 <__sprintf_chk@plt+0x12b15>
   1d3d4:	add    rsp,0x28
   1d3d8:	pop    rbx
   1d3d9:	pop    rbp
   1d3da:	pop    r12
   1d3dc:	pop    r13
   1d3de:	pop    r14
   1d3e0:	pop    r15
   1d3e2:	ret    
   1d3e3:	nop    DWORD PTR [rax+rax*1+0x0]
   1d3e8:	mov    rdi,QWORD PTR [rsp]
   1d3ec:	xor    edx,edx
   1d3ee:	mov    rsi,r13
   1d3f1:	movabs rcx,0x7fffffffffffffff
   1d3fb:	call   1cf80 <__sprintf_chk@plt+0x125d0>
   1d400:	jmp    1d3c0 <__sprintf_chk@plt+0x12a10>
   1d402:	nop    WORD PTR [rax+rax*1+0x0]
   1d408:	test   r14d,r14d
   1d40b:	je     1d3c0 <__sprintf_chk@plt+0x12a10>
   1d40d:	mov    rax,QWORD PTR [rip+0x620f4]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d414:	test   rax,rax
   1d417:	je     1d41b <__sprintf_chk@plt+0x12a6b>
   1d419:	call   rax
   1d41b:	mov    edx,0x5
   1d420:	lea    rsi,[rip+0x474b9]        # 648e0 <_obstack_memory_used@@Base+0x17c60>
   1d427:	xor    edi,edi
   1d429:	call   a040 <dcgettext@plt>
   1d42e:	mov    rcx,QWORD PTR [rsp]
   1d432:	xor    esi,esi
   1d434:	xor    edi,edi
   1d436:	mov    rdx,rax
   1d439:	xor    eax,eax
   1d43b:	call   a640 <error@plt>
   1d440:	mov    DWORD PTR [rip+0x61c7a],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1d44a:	jmp    1d3c0 <__sprintf_chk@plt+0x12a10>
   1d44f:	nop
   1d450:	mov    rax,QWORD PTR [rip+0x620b1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d457:	test   rax,rax
   1d45a:	je     1d467 <__sprintf_chk@plt+0x12ab7>
   1d45c:	call   rax
   1d45e:	mov    rax,QWORD PTR [rsp+0x10]
   1d463:	movzx  r8d,BYTE PTR [rax]
   1d467:	mov    edx,0x5
   1d46c:	lea    rsi,[rip+0x4742d]        # 648a0 <_obstack_memory_used@@Base+0x17c20>
   1d473:	xor    edi,edi
   1d475:	mov    BYTE PTR [rsp+0xf],r8b
   1d47a:	call   a040 <dcgettext@plt>
   1d47f:	movsx  r8d,BYTE PTR [rsp+0xf]
   1d485:	xor    esi,esi
   1d487:	xor    edi,edi
   1d489:	mov    rcx,QWORD PTR [rsp]
   1d48d:	mov    rdx,rax
   1d490:	xor    eax,eax
   1d492:	call   a640 <error@plt>
   1d497:	mov    DWORD PTR [rip+0x61c23],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1d4a1:	jmp    1d3c0 <__sprintf_chk@plt+0x12a10>
   1d4a6:	mov    rax,QWORD PTR [rip+0x6205b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d4ad:	test   rax,rax
   1d4b0:	je     1d4b4 <__sprintf_chk@plt+0x12b04>
   1d4b2:	call   rax
   1d4b4:	mov    edx,0x5
   1d4b9:	lea    rsi,[rip+0x47268]        # 64728 <_obstack_memory_used@@Base+0x17aa8>
   1d4c0:	jmp    1d39a <__sprintf_chk@plt+0x129ea>
   1d4c5:	call   a0a0 <__stack_chk_fail@plt>
   1d4ca:	nop    WORD PTR [rax+rax*1+0x0]
   1d4d0:	endbr64 
   1d4d4:	push   r14
   1d4d6:	mov    r14,rdx
   1d4d9:	push   r13
   1d4db:	mov    r13,rsi
   1d4de:	push   r12
   1d4e0:	push   rbp
   1d4e1:	mov    rbp,rdi
   1d4e4:	push   rbx
   1d4e5:	call   16e70 <__sprintf_chk@plt+0xc4c0>
   1d4ea:	test   rax,rax
   1d4ed:	je     1d52a <__sprintf_chk@plt+0x12b7a>
   1d4ef:	cmp    QWORD PTR [rax+0x8],0x0
   1d4f4:	mov    r12,rax
   1d4f7:	je     1d52a <__sprintf_chk@plt+0x12b7a>
   1d4f9:	mov    rbx,QWORD PTR [rip+0x62218]        # 7f718 <obstack_alloc_failed_handler@@Base+0x8e0>
   1d500:	test   rbx,rbx
   1d503:	jne    1d518 <__sprintf_chk@plt+0x12b68>
   1d505:	jmp    1d538 <__sprintf_chk@plt+0x12b88>
   1d507:	nop    WORD PTR [rax+rax*1+0x0]
   1d510:	mov    rbx,QWORD PTR [rbx]
   1d513:	test   rbx,rbx
   1d516:	je     1d538 <__sprintf_chk@plt+0x12b88>
   1d518:	mov    rdi,QWORD PTR [rbx+0x8]
   1d51c:	xor    edx,edx
   1d51e:	mov    rsi,rbp
   1d521:	call   9cf0 <fnmatch@plt>
   1d526:	test   eax,eax
   1d528:	jne    1d510 <__sprintf_chk@plt+0x12b60>
   1d52a:	pop    rbx
   1d52b:	pop    rbp
   1d52c:	pop    r12
   1d52e:	pop    r13
   1d530:	pop    r14
   1d532:	ret    
   1d533:	nop    DWORD PTR [rax+rax*1+0x0]
   1d538:	cmp    QWORD PTR [r13+0x168],0x0
   1d540:	je     1d590 <__sprintf_chk@plt+0x12be0>
   1d542:	mov    rbx,QWORD PTR [rip+0x622d7]        # 7f820 <obstack_alloc_failed_handler@@Base+0x9e8>
   1d549:	test   rbx,rbx
   1d54c:	jne    1d558 <__sprintf_chk@plt+0x12ba8>
   1d54e:	jmp    1d570 <__sprintf_chk@plt+0x12bc0>
   1d550:	mov    rbx,QWORD PTR [rbx]
   1d553:	test   rbx,rbx
   1d556:	je     1d570 <__sprintf_chk@plt+0x12bc0>
   1d558:	mov    rdi,QWORD PTR [rbx+0x8]
   1d55c:	mov    rsi,rbp
   1d55f:	call   a320 <strcmp@plt>
   1d564:	test   eax,eax
   1d566:	jne    1d550 <__sprintf_chk@plt+0x12ba0>
   1d568:	jmp    1d52a <__sprintf_chk@plt+0x12b7a>
   1d56a:	nop    WORD PTR [rax+rax*1+0x0]
   1d570:	pop    rbx
   1d571:	mov    rax,QWORD PTR [r12+0x8]
   1d576:	lea    rdx,[r13+0x168]
   1d57d:	mov    rcx,r14
   1d580:	mov    rsi,rbp
   1d583:	mov    rdi,r13
   1d586:	pop    rbp
   1d587:	pop    r12
   1d589:	pop    r13
   1d58b:	pop    r14
   1d58d:	jmp    rax
   1d58f:	nop
   1d590:	mov    edi,0x58
   1d595:	call   a4a0 <malloc@plt>
   1d59a:	mov    rdi,rax
   1d59d:	test   rax,rax
   1d5a0:	je     1d5d1 <__sprintf_chk@plt+0x12c21>
   1d5a2:	mov    QWORD PTR [r13+0x168],rax
   1d5a9:	lea    rax,[rip+0x280f0]        # 456a0 <argp_usage@@Base+0x2320>
   1d5b0:	xor    edx,edx
   1d5b2:	xor    esi,esi
   1d5b4:	mov    QWORD PTR [rdi+0x38],rax
   1d5b8:	mov    rax,QWORD PTR [rip+0x5e9c9]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   1d5bf:	and    BYTE PTR [rdi+0x50],0xfe
   1d5c3:	mov    QWORD PTR [rdi+0x40],rax
   1d5c7:	call   4c9a0 <argp_usage@@Base+0x9620>
   1d5cc:	jmp    1d542 <__sprintf_chk@plt+0x12b92>
   1d5d1:	call   19130 <__sprintf_chk@plt+0xe780>
   1d5d6:	cs nop WORD PTR [rax+rax*1+0x0]
   1d5e0:	endbr64 
   1d5e4:	push   r15
   1d5e6:	mov    r15,rdi
   1d5e9:	push   r14
   1d5eb:	mov    r14,rsi
   1d5ee:	push   r13
   1d5f0:	push   r12
   1d5f2:	push   rbp
   1d5f3:	mov    rbp,rdx
   1d5f6:	push   rbx
   1d5f7:	sub    rsp,0x308
   1d5fe:	mov    rbx,QWORD PTR [rdi+0x198]
   1d605:	mov    rax,QWORD PTR fs:0x28
   1d60e:	mov    QWORD PTR [rsp+0x2f8],rax
   1d616:	xor    eax,eax
   1d618:	movzx  eax,BYTE PTR [rip+0x62181]        # 7f7a0 <obstack_alloc_failed_handler@@Base+0x968>
   1d61f:	test   rbx,rbx
   1d622:	mov    BYTE PTR [rsp],al
   1d625:	sete   BYTE PTR [rsp+0xf]
   1d62a:	je     1d978 <__sprintf_chk@plt+0x12fc8>
   1d630:	cmp    BYTE PTR [rsp],0x0
   1d634:	mov    r12d,DWORD PTR [rbx+0x1a8]
   1d63b:	je     1d654 <__sprintf_chk@plt+0x12ca4>
   1d63d:	mov    rsi,rdx
   1d640:	lea    rdi,[rip+0x46cff]        # 64346 <_obstack_memory_used@@Base+0x176c6>
   1d647:	call   33f00 <__sprintf_chk@plt+0x29550>
   1d64c:	test   eax,eax
   1d64e:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1d654:	mov    rsi,rbp
   1d657:	mov    rdi,r15
   1d65a:	lea    r13,[r15+0x8]
   1d65e:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1d663:	movzx  edx,BYTE PTR [rip+0x62146]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1d66a:	xor    esi,esi
   1d66c:	mov    rdi,rbp
   1d66f:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   1d674:	mov    rdi,r13
   1d677:	mov    rsi,rax
   1d67a:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1d67f:	xor    ecx,ecx
   1d681:	xor    edx,edx
   1d683:	mov    esi,0x1
   1d688:	mov    rdi,r13
   1d68b:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   1d690:	test   r12d,r12d
   1d693:	jns    1d9e0 <__sprintf_chk@plt+0x13030>
   1d699:	call   9e40 <__errno_location@plt>
   1d69e:	neg    r12d
   1d6a1:	lea    rdx,[rip+0x5d68]        # 23410 <__sprintf_chk@plt+0x18a60>
   1d6a8:	mov    DWORD PTR [rax],r12d
   1d6ab:	mov    rax,QWORD PTR [rsp+0x2f8]
   1d6b3:	sub    rax,QWORD PTR fs:0x28
   1d6bc:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1d6c2:	movzx  esi,BYTE PTR [rsp+0xf]
   1d6c7:	add    rsp,0x308
   1d6ce:	mov    rdi,rbp
   1d6d1:	pop    rbx
   1d6d2:	pop    rbp
   1d6d3:	pop    r12
   1d6d5:	pop    r13
   1d6d7:	pop    r14
   1d6d9:	pop    r15
   1d6db:	jmp    26910 <__sprintf_chk@plt+0x1bf60>
   1d6e0:	mov    rax,QWORD PTR [rip+0x619a9]        # 7f090 <obstack_alloc_failed_handler@@Base+0x258>
   1d6e7:	test   rax,rax
   1d6ea:	je     1d6f6 <__sprintf_chk@plt+0x12d46>
   1d6ec:	cmp    rax,QWORD PTR [r15+0x58]
   1d6f0:	je     1e008 <__sprintf_chk@plt+0x13658>
   1d6f6:	mov    eax,DWORD PTR [r15+0x70]
   1d6fa:	mov    edi,eax
   1d6fc:	and    edi,0xf000
   1d702:	cmp    edi,0x4000
   1d708:	mov    DWORD PTR [rsp+0x3c],edi
   1d70c:	sete   BYTE PTR [rsp+0x38]
   1d711:	jne    1dc7d <__sprintf_chk@plt+0x132cd>
   1d717:	mov    eax,DWORD PTR [rip+0x617c3]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   1d71d:	test   eax,eax
   1d71f:	jg     1e41d <__sprintf_chk@plt+0x13a6d>
   1d725:	mov    ecx,DWORD PTR [rsp+0x18]
   1d729:	mov    rdx,r15
   1d72c:	mov    rsi,r14
   1d72f:	mov    edi,r12d
   1d732:	call   3c230 <__sprintf_chk@plt+0x31880>
   1d737:	mov    ecx,DWORD PTR [rsp+0x18]
   1d73b:	mov    rdx,r15
   1d73e:	mov    rsi,r14
   1d741:	mov    edi,r12d
   1d744:	call   44690 <argp_usage@@Base+0x1310>
   1d749:	mov    DWORD PTR [rsp+0x3c],0x4000
   1d751:	mov    rdi,r15
   1d754:	call   13630 <__sprintf_chk@plt+0x8c80>
   1d759:	mov    rdi,r13
   1d75c:	call   13630 <__sprintf_chk@plt+0x8c80>
   1d761:	lea    rsi,[rsp+0x70]
   1d766:	mov    rdi,r15
   1d769:	call   10110 <__sprintf_chk@plt+0x5760>
   1d76e:	cmp    eax,0x3
   1d771:	jne    1d790 <__sprintf_chk@plt+0x12de0>
   1d773:	jmp    1e4c3 <__sprintf_chk@plt+0x13b13>
   1d778:	nop    DWORD PTR [rax+rax*1+0x0]
   1d780:	mov    rdi,r15
   1d783:	call   136b0 <__sprintf_chk@plt+0x8d00>
   1d788:	test   al,al
   1d78a:	je     1e4eb <__sprintf_chk@plt+0x13b3b>
   1d790:	mov    edi,DWORD PTR [r15+0x1a8]
   1d797:	call   a730 <fdopendir@plt>
   1d79c:	mov    QWORD PTR [r15+0x1a0],rax
   1d7a3:	test   rax,rax
   1d7a6:	je     1d780 <__sprintf_chk@plt+0x12dd0>
   1d7a8:	mov    esi,DWORD PTR [rip+0x61fbe]        # 7f76c <obstack_alloc_failed_handler@@Base+0x934>
   1d7ae:	mov    rdi,rax
   1d7b1:	call   4b830 <argp_usage@@Base+0x84b0>
   1d7b6:	mov    QWORD PTR [rsp+0x10],rax
   1d7bb:	test   rax,rax
   1d7be:	je     1e4eb <__sprintf_chk@plt+0x13b3b>
   1d7c4:	mov    rax,QWORD PTR [r15+0x198]
   1d7cb:	mov    rdi,r15
   1d7ce:	mov    QWORD PTR [r15+0x88],0x0
   1d7d9:	mov    r13,QWORD PTR [rip+0x61d60]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1d7e0:	mov    r12,QWORD PTR [rip+0x61da1]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1d7e7:	mov    QWORD PTR [rsp+0x48],rax
   1d7ec:	mov    rax,QWORD PTR [rip+0x61d45]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   1d7f3:	mov    QWORD PTR [rsp+0x40],rax
   1d7f8:	call   11f50 <__sprintf_chk@plt+0x75a0>
   1d7fd:	mov    QWORD PTR [rsp+0x18],rax
   1d802:	test   rax,rax
   1d805:	je     1d8d7 <__sprintf_chk@plt+0x12f27>
   1d80b:	cmp    QWORD PTR [r15+0x1b0],0x0
   1d813:	jne    1d81d <__sprintf_chk@plt+0x12e6d>
   1d815:	mov    rdi,r15
   1d818:	call   1bf20 <__sprintf_chk@plt+0x11570>
   1d81d:	sub    r13,r12
   1d820:	sar    r13,0x9
   1d824:	add    r13,QWORD PTR [rsp+0x40]
   1d829:	cmp    BYTE PTR [rip+0x616b4],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   1d830:	jne    1ea1e <__sprintf_chk@plt+0x1406e>
   1d836:	mov    rax,QWORD PTR [rsp+0x18]
   1d83b:	mov    rdx,r13
   1d83e:	mov    rdi,r15
   1d841:	mov    BYTE PTR [rax+0x9c],0x35
   1d848:	mov    rsi,rax
   1d84b:	call   10b40 <__sprintf_chk@plt+0x6190>
   1d850:	mov    eax,DWORD PTR [rip+0x61f1e]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   1d856:	test   eax,eax
   1d858:	je     1d8d7 <__sprintf_chk@plt+0x12f27>
   1d85a:	cmp    BYTE PTR [rip+0x61f0f],0x0        # 7f770 <obstack_alloc_failed_handler@@Base+0x938>
   1d861:	je     1ed34 <__sprintf_chk@plt+0x14384>
   1d867:	cmp    QWORD PTR [rsp+0x48],0x0
   1d86d:	je     1ed34 <__sprintf_chk@plt+0x14384>
   1d873:	mov    rax,QWORD PTR [r15+0x198]
   1d87a:	mov    rcx,QWORD PTR [r15+0x58]
   1d87e:	cmp    QWORD PTR [rax+0x58],rcx
   1d882:	je     1ed34 <__sprintf_chk@plt+0x14384>
   1d888:	cmp    DWORD PTR [rip+0x61831],0x0        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   1d88f:	je     1d8d7 <__sprintf_chk@plt+0x12f27>
   1d891:	test   BYTE PTR [rip+0x5e7e6],0x4        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   1d898:	je     1d8d7 <__sprintf_chk@plt+0x12f27>
   1d89a:	mov    rax,QWORD PTR [rip+0x61c67]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1d8a1:	test   rax,rax
   1d8a4:	je     1d8a8 <__sprintf_chk@plt+0x12ef8>
   1d8a6:	call   rax
   1d8a8:	mov    rdi,QWORD PTR [r15]
   1d8ab:	call   4b670 <argp_usage@@Base+0x82f0>
   1d8b0:	mov    edx,0x5
   1d8b5:	lea    rsi,[rip+0x470b4]        # 64970 <_obstack_memory_used@@Base+0x17cf0>
   1d8bc:	xor    edi,edi
   1d8be:	mov    r12,rax
   1d8c1:	call   a040 <dcgettext@plt>
   1d8c6:	mov    rcx,r12
   1d8c9:	xor    esi,esi
   1d8cb:	xor    edi,edi
   1d8cd:	mov    rdx,rax
   1d8d0:	xor    eax,eax
   1d8d2:	call   a640 <error@plt>
   1d8d7:	mov    rdi,r15
   1d8da:	mov    r13d,0x1
   1d8e0:	call   18d70 <__sprintf_chk@plt+0xe3c0>
   1d8e5:	mov    rdi,QWORD PTR [rsp+0x10]
   1d8ea:	call   9ce0 <free@plt>
   1d8ef:	mov    eax,DWORD PTR [r15+0x1a8]
   1d8f6:	mov    r12d,DWORD PTR [rip+0x5e723]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1d8fd:	mov    DWORD PTR [rsp+0x18],eax
   1d901:	test   rbx,rbx
   1d904:	je     1d90d <__sprintf_chk@plt+0x12f5d>
   1d906:	mov    r12d,DWORD PTR [rbx+0x1a8]
   1d90d:	test   r13b,r13b
   1d910:	je     1d93b <__sprintf_chk@plt+0x12f8b>
   1d912:	mov    ebx,DWORD PTR [rsp+0x18]
   1d916:	test   ebx,ebx
   1d918:	jns    1e0fb <__sprintf_chk@plt+0x1374b>
   1d91e:	call   9e40 <__errno_location@plt>
   1d923:	neg    ebx
   1d925:	mov    DWORD PTR [rax],ebx
   1d927:	movzx  esi,BYTE PTR [rsp+0xf]
   1d92c:	lea    rdx,[rip+0x5b5d]        # 23490 <__sprintf_chk@plt+0x18ae0>
   1d933:	mov    rdi,rbp
   1d936:	call   26910 <__sprintf_chk@plt+0x1bf60>
   1d93b:	mov    rdi,r15
   1d93e:	call   3c160 <__sprintf_chk@plt+0x317b0>
   1d943:	nop    DWORD PTR [rax+rax*1+0x0]
   1d948:	mov    rax,QWORD PTR [rsp+0x2f8]
   1d950:	sub    rax,QWORD PTR fs:0x28
   1d959:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1d95f:	add    rsp,0x308
   1d966:	pop    rbx
   1d967:	pop    rbp
   1d968:	pop    r12
   1d96a:	pop    r13
   1d96c:	pop    r14
   1d96e:	pop    r15
   1d970:	ret    
   1d971:	nop    DWORD PTR [rax+0x0]
   1d978:	mov    r12d,DWORD PTR [rip+0x5e6a1]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1d97f:	test   al,al
   1d981:	je     1dbb8 <__sprintf_chk@plt+0x13208>
   1d987:	mov    rsi,rdx
   1d98a:	lea    rdi,[rip+0x469b5]        # 64346 <_obstack_memory_used@@Base+0x176c6>
   1d991:	call   33f00 <__sprintf_chk@plt+0x29550>
   1d996:	test   eax,eax
   1d998:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1d99a:	mov    rsi,rbp
   1d99d:	mov    rdi,r15
   1d9a0:	lea    r13,[r15+0x8]
   1d9a4:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1d9a9:	movzx  edx,BYTE PTR [rip+0x61e00]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1d9b0:	xor    esi,esi
   1d9b2:	mov    rdi,rbp
   1d9b5:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   1d9ba:	mov    rdi,r13
   1d9bd:	mov    rsi,rax
   1d9c0:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1d9c5:	xor    ecx,ecx
   1d9c7:	xor    edx,edx
   1d9c9:	mov    esi,0x1
   1d9ce:	mov    rdi,r13
   1d9d1:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   1d9d6:	mov    BYTE PTR [rsp],0x0
   1d9da:	jmp    1d9e4 <__sprintf_chk@plt+0x13034>
   1d9dc:	nop    DWORD PTR [rax+0x0]
   1d9e0:	mov    BYTE PTR [rsp],0x1
   1d9e4:	lea    rax,[r15+0x58]
   1d9e8:	mov    ecx,DWORD PTR [rip+0x61586]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   1d9ee:	mov    rsi,r14
   1d9f1:	mov    edi,r12d
   1d9f4:	mov    rdx,rax
   1d9f7:	mov    QWORD PTR [rsp+0x10],rax
   1d9fc:	call   a960 <fstatat@plt>
   1da01:	mov    ecx,eax
   1da03:	test   eax,eax
   1da05:	jne    1dc00 <__sprintf_chk@plt+0x13250>
   1da0b:	mov    edx,DWORD PTR [r15+0x70]
   1da0f:	mov    eax,edx
   1da11:	and    eax,0xf000
   1da16:	cmp    eax,0x4000
   1da1b:	je     1da43 <__sprintf_chk@plt+0x13093>
   1da1d:	cmp    eax,0x8000
   1da22:	jne    1dc68 <__sprintf_chk@plt+0x132b8>
   1da28:	cmp    BYTE PTR [rip+0x61af1],0x0        # 7f520 <obstack_alloc_failed_handler@@Base+0x6e8>
   1da2f:	jne    1dc10 <__sprintf_chk@plt+0x13260>
   1da35:	cmp    QWORD PTR [r15+0x88],0x0
   1da3d:	je     1de60 <__sprintf_chk@plt+0x134b0>
   1da43:	mov    edx,DWORD PTR [rip+0x61527]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   1da49:	mov    rsi,r14
   1da4c:	mov    rdi,rbx
   1da4f:	mov    DWORD PTR [rsp+0x38],ecx
   1da53:	call   18ce0 <__sprintf_chk@plt+0xe330>
   1da58:	mov    DWORD PTR [rsp+0x18],eax
   1da5c:	test   eax,eax
   1da5e:	js     1dff8 <__sprintf_chk@plt+0x13648>
   1da64:	mov    DWORD PTR [r15+0x1a8],eax
   1da6b:	mov    rsi,QWORD PTR [rsp+0x10]
   1da70:	mov    edi,eax
   1da72:	call   a920 <fstat@plt>
   1da77:	mov    ecx,DWORD PTR [rsp+0x38]
   1da7b:	test   eax,eax
   1da7d:	jne    1dc00 <__sprintf_chk@plt+0x13250>
   1da83:	nop    DWORD PTR [rax+rax*1+0x0]
   1da88:	mov    rax,QWORD PTR [r15+0x88]
   1da8f:	movzx  esi,BYTE PTR [rip+0x6144e]        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   1da96:	mov    rdx,QWORD PTR [r15+0xa0]
   1da9d:	mov    r10,QWORD PTR [r15+0xc0]
   1daa4:	mov    QWORD PTR [rsp+0x30],rax
   1daa9:	mov    r9d,esi
   1daac:	mov    rdi,QWORD PTR [r15+0xb0]
   1dab3:	mov    QWORD PTR [r15+0x118],rax
   1daba:	mov    rax,QWORD PTR [r15+0xa8]
   1dac1:	xor    r9d,0x1
   1dac5:	mov    QWORD PTR [r15+0xe8],rdx
   1dacc:	mov    rdx,QWORD PTR [r15+0xb8]
   1dad3:	mov    r11d,r9d
   1dad6:	mov    QWORD PTR [r15+0xf0],rax
   1dadd:	mov    rax,QWORD PTR [r15+0xc8]
   1dae4:	or     r11b,BYTE PTR [rsp+0xf]
   1dae9:	mov    QWORD PTR [r15+0xf8],rdi
   1daf0:	mov    QWORD PTR [r15+0x100],rdx
   1daf7:	mov    QWORD PTR [rsp+0x28],r10
   1dafc:	mov    QWORD PTR [r15+0x108],r10
   1db03:	mov    QWORD PTR [rsp+0x20],rax
   1db08:	mov    QWORD PTR [r15+0x110],rax
   1db0f:	mov    BYTE PTR [rsp+0x38],r11b
   1db14:	je     1d6e0 <__sprintf_chk@plt+0x12d30>
   1db1a:	mov    eax,DWORD PTR [r15+0x70]
   1db1e:	mov    r8d,eax
   1db21:	and    r8d,0xf000
   1db28:	mov    DWORD PTR [rsp+0x3c],r8d
   1db2d:	cmp    r8d,0x4000
   1db34:	je     1df40 <__sprintf_chk@plt+0x13590>
   1db3a:	mov    r9,QWORD PTR [rip+0x61c4f]        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   1db41:	mov    r8,QWORD PTR [rip+0x61c50]        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   1db48:	cmp    r9,rdi
   1db4b:	setl   dil
   1db4f:	setg   r11b
   1db53:	movzx  r11d,r11b
   1db57:	movzx  edi,dil
   1db5b:	sub    edi,r11d
   1db5e:	cmp    rdx,r8
   1db61:	setg   dl
   1db64:	setl   r11b
   1db68:	movzx  edx,dl
   1db6b:	movzx  r11d,r11b
   1db6f:	sub    edx,r11d
   1db72:	lea    edx,[rdx+rdi*2]
   1db75:	test   edx,edx
   1db77:	js     1df68 <__sprintf_chk@plt+0x135b8>
   1db7d:	mov    rdx,QWORD PTR [rip+0x6150c]        # 7f090 <obstack_alloc_failed_handler@@Base+0x258>
   1db84:	test   rdx,rdx
   1db87:	je     1dc78 <__sprintf_chk@plt+0x132c8>
   1db8d:	cmp    QWORD PTR [r15+0x58],rdx
   1db91:	je     1e008 <__sprintf_chk@plt+0x13658>
   1db97:	mov    ecx,eax
   1db99:	and    ecx,0xf000
   1db9f:	cmp    ecx,0x4000
   1dba5:	mov    DWORD PTR [rsp+0x3c],ecx
   1dba9:	sete   BYTE PTR [rsp+0x38]
   1dbae:	jmp    1dc7d <__sprintf_chk@plt+0x132cd>
   1dbb3:	nop    DWORD PTR [rax+rax*1+0x0]
   1dbb8:	mov    rsi,rdx
   1dbbb:	lea    r13,[r15+0x8]
   1dbbf:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1dbc4:	movzx  edx,BYTE PTR [rip+0x61be5]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1dbcb:	xor    esi,esi
   1dbcd:	mov    rdi,rbp
   1dbd0:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   1dbd5:	mov    rdi,r13
   1dbd8:	mov    rsi,rax
   1dbdb:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   1dbe0:	xor    ecx,ecx
   1dbe2:	xor    edx,edx
   1dbe4:	mov    esi,0x1
   1dbe9:	mov    rdi,r13
   1dbec:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   1dbf1:	jmp    1d9e4 <__sprintf_chk@plt+0x13034>
   1dbf6:	cs nop WORD PTR [rax+rax*1+0x0]
   1dc00:	lea    rdx,[rip+0x5889]        # 23490 <__sprintf_chk@plt+0x18ae0>
   1dc07:	jmp    1d6ab <__sprintf_chk@plt+0x12cfb>
   1dc0c:	nop    DWORD PTR [rax+0x0]
   1dc10:	cmp    BYTE PTR [rip+0x61901],0x0        # 7f518 <obstack_alloc_failed_handler@@Base+0x6e0>
   1dc17:	je     1dc68 <__sprintf_chk@plt+0x132b8>
   1dc19:	cmp    BYTE PTR [rip+0x61b5d],0x0        # 7f77d <obstack_alloc_failed_handler@@Base+0x945>
   1dc20:	je     1dc68 <__sprintf_chk@plt+0x132b8>
   1dc22:	mov    rdx,QWORD PTR [r15+0x88]
   1dc29:	mov    rdi,QWORD PTR [r15+0x98]
   1dc30:	test   rdx,rdx
   1dc33:	lea    rsi,[rdx+0x1ff]
   1dc3a:	mov    rax,rdx
   1dc3d:	cmovs  rax,rsi
   1dc41:	sar    rax,0x9
   1dc45:	test   edx,0x1ff
   1dc4b:	je     1dc5c <__sprintf_chk@plt+0x132ac>
   1dc4d:	lea    rdx,[rax+0x1]
   1dc51:	cmp    rsi,0x3fe
   1dc58:	cmova  rax,rdx
   1dc5c:	cmp    rdi,rax
   1dc5f:	jl     1da43 <__sprintf_chk@plt+0x13093>
   1dc65:	nop    DWORD PTR [rax]
   1dc68:	mov    DWORD PTR [rsp+0x18],0x0
   1dc70:	jmp    1da88 <__sprintf_chk@plt+0x130d8>
   1dc75:	nop    DWORD PTR [rax]
   1dc78:	mov    BYTE PTR [rsp+0x38],0x0
   1dc7d:	mov    rdi,QWORD PTR [rip+0x61b24]        # 7f7a8 <obstack_alloc_failed_handler@@Base+0x970>
   1dc84:	test   rdi,rdi
   1dc87:	je     1de84 <__sprintf_chk@plt+0x134d4>
   1dc8d:	mov    rcx,QWORD PTR [rip+0x61c14]        # 7f8a8 <obstack_alloc_failed_handler@@Base+0xa70>
   1dc94:	cmp    QWORD PTR [r15+0x68],rcx
   1dc98:	ja     1dca7 <__sprintf_chk@plt+0x132f7>
   1dc9a:	cmp    BYTE PTR [rip+0x61adb],0x0        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   1dca1:	je     1de84 <__sprintf_chk@plt+0x134d4>
   1dca7:	mov    rax,QWORD PTR [r15+0x60]
   1dcab:	lea    rsi,[rsp+0xd0]
   1dcb3:	mov    QWORD PTR [rsp+0xd8],rax
   1dcbb:	mov    rax,QWORD PTR [r15+0x58]
   1dcbf:	mov    QWORD PTR [rsp+0xd0],rax
   1dcc7:	call   48bc0 <argp_usage@@Base+0x5840>
   1dccc:	test   rax,rax
   1dccf:	je     1de80 <__sprintf_chk@plt+0x134d0>
   1dcd5:	movzx  edx,BYTE PTR [rip+0x61ad4]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   1dcdc:	lea    rdi,[rax+0x18]
   1dce0:	mov    esi,0x1
   1dce5:	mov    QWORD PTR [rsp+0x40],rax
   1dcea:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   1dcef:	mov    r8,QWORD PTR [rsp+0x40]
   1dcf4:	mov    rcx,rax
   1dcf7:	mov    rax,QWORD PTR [r8+0x10]
   1dcfb:	test   rax,rax
   1dcfe:	je     1dd08 <__sprintf_chk@plt+0x13358>
   1dd00:	sub    rax,0x1
   1dd04:	mov    QWORD PTR [r8+0x10],rax
   1dd08:	mov    rax,QWORD PTR [rip+0x61831]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1dd0f:	mov    rdi,QWORD PTR [r15+0x18]
   1dd13:	mov    QWORD PTR [rsp+0x40],rcx
   1dd18:	mov    QWORD PTR [rsp+0x50],rax
   1dd1d:	mov    rax,QWORD PTR [rip+0x61864]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1dd24:	mov    QWORD PTR [rsp+0x58],rax
   1dd29:	mov    rax,QWORD PTR [rip+0x61808]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   1dd30:	mov    QWORD PTR [rsp+0x60],rax
   1dd35:	call   9ce0 <free@plt>
   1dd3a:	mov    rcx,QWORD PTR [rsp+0x40]
   1dd3f:	test   rcx,rcx
   1dd42:	je     1e44a <__sprintf_chk@plt+0x13a9a>
   1dd48:	mov    rdi,rcx
   1dd4b:	mov    QWORD PTR [rsp+0x48],rcx
   1dd50:	call   a060 <strlen@plt>
   1dd55:	lea    rdx,[rax+0x1]
   1dd59:	mov    rdi,rdx
   1dd5c:	mov    QWORD PTR [rsp+0x40],rdx
   1dd61:	call   a4a0 <malloc@plt>
   1dd66:	mov    rdx,QWORD PTR [rsp+0x40]
   1dd6b:	mov    rcx,QWORD PTR [rsp+0x48]
   1dd70:	test   rax,rax
   1dd73:	mov    rdi,rax
   1dd76:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1dd7c:	mov    rsi,rcx
   1dd7f:	mov    QWORD PTR [rsp+0x40],rcx
   1dd84:	call   a420 <memcpy@plt>
   1dd89:	mov    rcx,QWORD PTR [rsp+0x40]
   1dd8e:	xor    edx,edx
   1dd90:	mov    QWORD PTR [r15+0x18],rax
   1dd94:	mov    rdi,rcx
   1dd97:	cmp    DWORD PTR [rip+0x61506],0x2        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1dd9e:	setne  dl
   1dda1:	mov    QWORD PTR [rsp+0x40],rcx
   1dda6:	add    rdx,0x63
   1ddaa:	mov    QWORD PTR [rsp+0x48],rdx
   1ddaf:	call   a060 <strlen@plt>
   1ddb4:	mov    rdx,QWORD PTR [rsp+0x48]
   1ddb9:	mov    rcx,QWORD PTR [rsp+0x40]
   1ddbe:	mov    r8,rax
   1ddc1:	movsxd rax,DWORD PTR [rip+0x610d8]        # 7eea0 <obstack_alloc_failed_handler@@Base+0x68>
   1ddc8:	add    rax,r8
   1ddcb:	cmp    rax,rdx
   1ddce:	ja     1e520 <__sprintf_chk@plt+0x13b70>
   1ddd4:	mov    QWORD PTR [r15+0x88],0x0
   1dddf:	mov    rdi,r15
   1dde2:	mov    QWORD PTR [rsp+0x40],rcx
   1dde7:	call   11f50 <__sprintf_chk@plt+0x75a0>
   1ddec:	mov    rcx,QWORD PTR [rsp+0x40]
   1ddf1:	mov    rsi,rax
   1ddf4:	xor    eax,eax
   1ddf6:	test   rsi,rsi
   1ddf9:	je     1de80 <__sprintf_chk@plt+0x134d0>
   1ddff:	nop
   1de00:	movzx  edx,BYTE PTR [rcx+rax*1]
   1de04:	mov    BYTE PTR [rsi+rax*1+0x9d],dl
   1de0b:	test   dl,dl
   1de0d:	je     1de19 <__sprintf_chk@plt+0x13469>
   1de0f:	add    rax,0x1
   1de13:	cmp    rax,0x64
   1de17:	jne    1de00 <__sprintf_chk@plt+0x13450>
   1de19:	mov    BYTE PTR [rsi+0x9c],0x31
   1de20:	mov    rdx,QWORD PTR [rsp+0x50]
   1de25:	mov    rdi,r15
   1de28:	sub    rdx,QWORD PTR [rsp+0x58]
   1de2d:	sar    rdx,0x9
   1de31:	add    rdx,QWORD PTR [rsp+0x60]
   1de36:	call   10b40 <__sprintf_chk@plt+0x6190>
   1de3b:	cmp    BYTE PTR [rip+0x6193a],0x0        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   1de42:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1de48:	mov    rdi,QWORD PTR [r15]
   1de4b:	xor    esi,esi
   1de4d:	call   3be60 <__sprintf_chk@plt+0x314b0>
   1de52:	jmp    1d948 <__sprintf_chk@plt+0x12f98>
   1de57:	nop    WORD PTR [rax+rax*1+0x0]
   1de60:	and    edx,0x124
   1de66:	mov    DWORD PTR [rsp+0x18],0x0
   1de6e:	cmp    edx,0x124
   1de74:	je     1da88 <__sprintf_chk@plt+0x130d8>
   1de7a:	jmp    1da43 <__sprintf_chk@plt+0x13093>
   1de7f:	nop
   1de80:	mov    eax,DWORD PTR [r15+0x70]
   1de84:	and    eax,0xf000
   1de89:	cmp    eax,0x8000
   1de8e:	je     1e050 <__sprintf_chk@plt+0x136a0>
   1de94:	cmp    eax,0xa000
   1de99:	je     1e1d8 <__sprintf_chk@plt+0x13828>
   1de9f:	cmp    eax,0x2000
   1dea4:	je     1e2b2 <__sprintf_chk@plt+0x13902>
   1deaa:	cmp    eax,0x6000
   1deaf:	je     1e451 <__sprintf_chk@plt+0x13aa1>
   1deb5:	cmp    eax,0x1000
   1deba:	je     1e48b <__sprintf_chk@plt+0x13adb>
   1dec0:	cmp    eax,0xc000
   1dec5:	jne    1e140 <__sprintf_chk@plt+0x13790>
   1decb:	test   BYTE PTR [rip+0x5e1aa],0x20        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   1ded2:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1ded8:	mov    rax,QWORD PTR [rip+0x61629]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1dedf:	test   rax,rax
   1dee2:	je     1dee6 <__sprintf_chk@plt+0x13536>
   1dee4:	call   rax
   1dee6:	mov    rdi,rbp
   1dee9:	call   4b670 <argp_usage@@Base+0x82f0>
   1deee:	mov    edx,0x5
   1def3:	lea    rsi,[rip+0x4649d]        # 64397 <_obstack_memory_used@@Base+0x17717>
   1defa:	mov    r12,rax
   1defd:	nop    DWORD PTR [rax]
   1df00:	xor    edi,edi
   1df02:	call   a040 <dcgettext@plt>
   1df07:	mov    rdx,rax
   1df0a:	mov    rax,QWORD PTR [rsp+0x2f8]
   1df12:	sub    rax,QWORD PTR fs:0x28
   1df1b:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1df21:	add    rsp,0x308
   1df28:	mov    rcx,r12
   1df2b:	xor    esi,esi
   1df2d:	xor    edi,edi
   1df2f:	pop    rbx
   1df30:	xor    eax,eax
   1df32:	pop    rbp
   1df33:	pop    r12
   1df35:	pop    r13
   1df37:	pop    r14
   1df39:	pop    r15
   1df3b:	jmp    a640 <error@plt>
   1df40:	mov    rax,QWORD PTR [rip+0x61149]        # 7f090 <obstack_alloc_failed_handler@@Base+0x258>
   1df47:	test   rax,rax
   1df4a:	je     1d717 <__sprintf_chk@plt+0x12d67>
   1df50:	cmp    rax,QWORD PTR [r15+0x58]
   1df54:	je     1e008 <__sprintf_chk@plt+0x13658>
   1df5a:	mov    BYTE PTR [rsp+0x38],0x1
   1df5f:	jmp    1d717 <__sprintf_chk@plt+0x12d67>
   1df64:	nop    DWORD PTR [rax+0x0]
   1df68:	mov    edi,DWORD PTR [rip+0x61812]        # 7f780 <obstack_alloc_failed_handler@@Base+0x948>
   1df6e:	test   edi,edi
   1df70:	je     1dfa3 <__sprintf_chk@plt+0x135f3>
   1df72:	xor    edi,edi
   1df74:	cmp    r9,r10
   1df77:	setg   dl
   1df7a:	setl   dil
   1df7e:	movzx  edx,dl
   1df81:	sub    edi,edx
   1df83:	xor    edx,edx
   1df85:	cmp    r8,QWORD PTR [rsp+0x20]
   1df8a:	setg   r8b
   1df8e:	setl   dl
   1df91:	movzx  r8d,r8b
   1df95:	sub    edx,r8d
   1df98:	lea    edx,[rdx+rdi*2]
   1df9b:	test   edx,edx
   1df9d:	jns    1db7d <__sprintf_chk@plt+0x131cd>
   1dfa3:	test   sil,sil
   1dfa6:	jne    1d948 <__sprintf_chk@plt+0x12f98>
   1dfac:	mov    ecx,DWORD PTR [rip+0x6110e]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   1dfb2:	test   ecx,ecx
   1dfb4:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1dfba:	test   BYTE PTR [rip+0x5e0bc],0x1        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   1dfc1:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1dfc7:	mov    rax,QWORD PTR [rip+0x6153a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1dfce:	test   rax,rax
   1dfd1:	je     1dfd5 <__sprintf_chk@plt+0x13625>
   1dfd3:	call   rax
   1dfd5:	mov    rdi,rbp
   1dfd8:	call   4b670 <argp_usage@@Base+0x82f0>
   1dfdd:	mov    edx,0x5
   1dfe2:	lea    rsi,[rip+0x46937]        # 64920 <_obstack_memory_used@@Base+0x17ca0>
   1dfe9:	mov    r12,rax
   1dfec:	jmp    1df00 <__sprintf_chk@plt+0x13550>
   1dff1:	nop    DWORD PTR [rax+0x0]
   1dff8:	lea    rdx,[rip+0x5411]        # 23410 <__sprintf_chk@plt+0x18a60>
   1dfff:	jmp    1d6ab <__sprintf_chk@plt+0x12cfb>
   1e004:	nop    DWORD PTR [rax+0x0]
   1e008:	mov    rax,QWORD PTR [rip+0x61079]        # 7f088 <obstack_alloc_failed_handler@@Base+0x250>
   1e00f:	cmp    QWORD PTR [r15+0x60],rax
   1e013:	jne    1d6f6 <__sprintf_chk@plt+0x12d46>
   1e019:	test   BYTE PTR [rip+0x5e05d],0x4        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   1e020:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1e026:	mov    rax,QWORD PTR [rip+0x614db]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1e02d:	test   rax,rax
   1e030:	je     1e034 <__sprintf_chk@plt+0x13684>
   1e032:	call   rax
   1e034:	mov    rdi,rbp
   1e037:	call   4b670 <argp_usage@@Base+0x82f0>
   1e03c:	mov    edx,0x5
   1e041:	lea    rsi,[rip+0x46900]        # 64948 <_obstack_memory_used@@Base+0x17cc8>
   1e048:	mov    r12,rax
   1e04b:	jmp    1df00 <__sprintf_chk@plt+0x13550>
   1e050:	mov    edx,DWORD PTR [rip+0x60e8a]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   1e056:	test   edx,edx
   1e058:	jg     1e170 <__sprintf_chk@plt+0x137c0>
   1e05e:	mov    ebx,DWORD PTR [rsp+0x18]
   1e062:	mov    rdx,r15
   1e065:	mov    rsi,r14
   1e068:	mov    edi,r12d
   1e06b:	mov    ecx,ebx
   1e06d:	call   3c230 <__sprintf_chk@plt+0x31880>
   1e072:	mov    ecx,ebx
   1e074:	mov    rdx,r15
   1e077:	mov    rsi,r14
   1e07a:	mov    edi,r12d
   1e07d:	call   44690 <argp_usage@@Base+0x1310>
   1e082:	mov    r13d,DWORD PTR [rsp+0x18]
   1e087:	test   r13d,r13d
   1e08a:	je     1e0d8 <__sprintf_chk@plt+0x13728>
   1e08c:	cmp    BYTE PTR [rip+0x616ea],0x0        # 7f77d <obstack_alloc_failed_handler@@Base+0x945>
   1e093:	je     1e0d8 <__sprintf_chk@plt+0x13728>
   1e095:	mov    rdx,QWORD PTR [r15+0x88]
   1e09c:	mov    rsi,QWORD PTR [r15+0x98]
   1e0a3:	test   rdx,rdx
   1e0a6:	lea    rcx,[rdx+0x1ff]
   1e0ad:	mov    rax,rdx
   1e0b0:	cmovs  rax,rcx
   1e0b4:	sar    rax,0x9
   1e0b8:	test   edx,0x1ff
   1e0be:	je     1e0cf <__sprintf_chk@plt+0x1371f>
   1e0c0:	lea    rdx,[rax+0x1]
   1e0c4:	cmp    rcx,0x3fe
   1e0cb:	cmova  rax,rdx
   1e0cf:	cmp    rsi,rax
   1e0d2:	jl     1e8c9 <__sprintf_chk@plt+0x13f19>
   1e0d8:	mov    edi,DWORD PTR [rsp+0x18]
   1e0dc:	mov    rsi,r15
   1e0df:	call   13100 <__sprintf_chk@plt+0x8750>
   1e0e4:	mov    ebx,eax
   1e0e6:	cmp    eax,0x1
   1e0e9:	ja     1e12a <__sprintf_chk@plt+0x1377a>
   1e0eb:	mov    rdi,r15
   1e0ee:	call   19170 <__sprintf_chk@plt+0xe7c0>
   1e0f3:	test   ebx,ebx
   1e0f5:	jne    1d93b <__sprintf_chk@plt+0x12f8b>
   1e0fb:	mov    ebx,DWORD PTR [rsp+0x18]
   1e0ff:	test   ebx,ebx
   1e101:	jne    1e6e7 <__sprintf_chk@plt+0x13d37>
   1e107:	test   r12d,r12d
   1e10a:	jns    1ec49 <__sprintf_chk@plt+0x14299>
   1e110:	cmp    BYTE PTR [rsp],0x0
   1e114:	je     1ec49 <__sprintf_chk@plt+0x14299>
   1e11a:	call   9e40 <__errno_location@plt>
   1e11f:	neg    r12d
   1e122:	mov    DWORD PTR [rax],r12d
   1e125:	jmp    1d927 <__sprintf_chk@plt+0x12f77>
   1e12a:	cmp    eax,0x3
   1e12d:	jne    1d93b <__sprintf_chk@plt+0x12f8b>
   1e133:	jmp    aa4e <__sprintf_chk@plt+0x9e>
   1e138:	nop    DWORD PTR [rax+rax*1+0x0]
   1e140:	mov    rax,QWORD PTR [rsp+0x2f8]
   1e148:	sub    rax,QWORD PTR fs:0x28
   1e151:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1e157:	add    rsp,0x308
   1e15e:	mov    rdi,rbp
   1e161:	pop    rbx
   1e162:	pop    rbp
   1e163:	pop    r12
   1e165:	pop    r13
   1e167:	pop    r14
   1e169:	pop    r15
   1e16b:	jmp    16920 <__sprintf_chk@plt+0xbf70>
   1e170:	mov    rdx,QWORD PTR [rsp+0x10]
   1e175:	mov    rsi,r14
   1e178:	mov    edi,r12d
   1e17b:	call   43a50 <argp_usage@@Base+0x6d0>
   1e180:	test   eax,eax
   1e182:	je     1e1a0 <__sprintf_chk@plt+0x137f0>
   1e184:	mov    ecx,0x1
   1e189:	cmp    eax,0xffffffff
   1e18c:	je     1ec6f <__sprintf_chk@plt+0x142bf>
   1e192:	mov    rdx,r15
   1e195:	mov    rsi,r14
   1e198:	mov    edi,r12d
   1e19b:	call   43f70 <argp_usage@@Base+0xbf0>
   1e1a0:	mov    ecx,DWORD PTR [rsp+0x18]
   1e1a4:	mov    rdx,r15
   1e1a7:	mov    rsi,r14
   1e1aa:	mov    edi,r12d
   1e1ad:	call   3c230 <__sprintf_chk@plt+0x31880>
   1e1b2:	mov    ecx,DWORD PTR [rsp+0x18]
   1e1b6:	mov    rdx,r15
   1e1b9:	mov    rsi,r14
   1e1bc:	mov    edi,r12d
   1e1bf:	call   44690 <argp_usage@@Base+0x1310>
   1e1c4:	cmp    BYTE PTR [rsp+0x38],0x0
   1e1c9:	je     1e082 <__sprintf_chk@plt+0x136d2>
   1e1cf:	jmp    1d751 <__sprintf_chk@plt+0x12da1>
   1e1d4:	nop    DWORD PTR [rax+0x0]
   1e1d8:	mov    rax,QWORD PTR [r15+0x88]
   1e1df:	mov    ebx,0x80
   1e1e4:	test   rax,rax
   1e1e7:	setne  BYTE PTR [rsp]
   1e1eb:	je     1e203 <__sprintf_chk@plt+0x13853>
   1e1ed:	lea    rcx,[rax+0x1]
   1e1f1:	cmp    rax,0x401
   1e1f7:	mov    eax,0x401
   1e1fc:	cmovb  rax,rcx
   1e200:	mov    rbx,rax
   1e203:	lea    rax,[rsp+0xf0]
   1e20b:	mov    QWORD PTR [rsp+0x18],rbp
   1e210:	mov    QWORD PTR [rsp+0x10],rax
   1e215:	nop    DWORD PTR [rax]
   1e218:	cmp    rbx,0x80
   1e21f:	jne    1e274 <__sprintf_chk@plt+0x138c4>
   1e221:	xor    ebp,ebp
   1e223:	cmp    BYTE PTR [rsp],0x0
   1e227:	mov    r13,QWORD PTR [rsp+0x10]
   1e22c:	jne    1e274 <__sprintf_chk@plt+0x138c4>
   1e22e:	mov    rcx,rbx
   1e231:	mov    rdx,r13
   1e234:	mov    rsi,r14
   1e237:	mov    edi,r12d
   1e23a:	call   a340 <readlinkat@plt>
   1e23f:	test   rax,rax
   1e242:	js     1e532 <__sprintf_chk@plt+0x13b82>
   1e248:	cmp    rbx,rax
   1e24b:	ja     1e582 <__sprintf_chk@plt+0x13bd2>
   1e251:	mov    rdi,rbp
   1e254:	call   9ce0 <free@plt>
   1e259:	movabs rax,0x3fffffffffffffff
   1e263:	cmp    rbx,rax
   1e266:	ja     1e290 <__sprintf_chk@plt+0x138e0>
   1e268:	add    rbx,rbx
   1e26b:	cmp    rbx,0x80
   1e272:	je     1e221 <__sprintf_chk@plt+0x13871>
   1e274:	mov    rdi,rbx
   1e277:	call   a4a0 <malloc@plt>
   1e27c:	mov    r13,rax
   1e27f:	test   rax,rax
   1e282:	je     1f678 <__sprintf_chk@plt+0x14cc8>
   1e288:	mov    rbp,rax
   1e28b:	jmp    1e22e <__sprintf_chk@plt+0x1387e>
   1e28d:	nop    DWORD PTR [rax]
   1e290:	movabs rax,0x7fffffffffffffff
   1e29a:	cmp    rbx,rax
   1e29d:	je     1ecbc <__sprintf_chk@plt+0x1430c>
   1e2a3:	movabs rbx,0x7fffffffffffffff
   1e2ad:	jmp    1e218 <__sprintf_chk@plt+0x13868>
   1e2b2:	mov    r9d,DWORD PTR [rip+0x60c27]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   1e2b9:	test   r9d,r9d
   1e2bc:	jg     1e890 <__sprintf_chk@plt+0x13ee0>
   1e2c2:	xor    ecx,ecx
   1e2c4:	mov    rdx,r15
   1e2c7:	mov    rsi,r14
   1e2ca:	mov    edi,r12d
   1e2cd:	call   3c230 <__sprintf_chk@plt+0x31880>
   1e2d2:	xor    ecx,ecx
   1e2d4:	mov    rdx,r15
   1e2d7:	mov    rsi,r14
   1e2da:	mov    edi,r12d
   1e2dd:	mov    ebx,0x33
   1e2e2:	call   44690 <argp_usage@@Base+0x1310>
   1e2e7:	cmp    DWORD PTR [rip+0x60fb6],0x1        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1e2ee:	je     1e140 <__sprintf_chk@plt+0x13790>
   1e2f4:	mov    QWORD PTR [r15+0x88],0x0
   1e2ff:	mov    rax,QWORD PTR [rip+0x6123a]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1e306:	mov    rdi,r15
   1e309:	sub    rax,QWORD PTR [rip+0x61278]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1e310:	sar    rax,0x9
   1e314:	add    rax,QWORD PTR [rip+0x6121d]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   1e31b:	mov    r13,rax
   1e31e:	call   11f50 <__sprintf_chk@plt+0x75a0>
   1e323:	mov    r12,rax
   1e326:	test   rax,rax
   1e329:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1e32f:	mov    BYTE PTR [rax+0x9c],bl
   1e335:	cmp    bl,0x36
   1e338:	je     1e3d0 <__sprintf_chk@plt+0x13a20>
   1e33e:	mov    rax,QWORD PTR [r15+0x80]
   1e345:	sub    rsp,0x8
   1e349:	mov    r9d,0x8
   1e34f:	xor    ecx,ecx
   1e351:	lea    r8,[r12+0x149]
   1e359:	mov    rdx,rax
   1e35c:	shr    rax,0x20
   1e360:	mov    rdi,rax
   1e363:	shr    rdx,0x8
   1e367:	lea    rax,[rip+0x44f9b]        # 63309 <_obstack_memory_used@@Base+0x16689>
   1e36e:	push   rax
   1e36f:	and    edx,0xfff
   1e375:	and    edi,0xfffff000
   1e37b:	or     edi,edx
   1e37d:	mov    edx,0x4
   1e382:	movsxd rsi,edi
   1e385:	shr    edi,0x1f
   1e388:	call   101a0 <__sprintf_chk@plt+0x57f0>
   1e38d:	mov    rax,QWORD PTR [r15+0x80]
   1e394:	xor    ecx,ecx
   1e396:	mov    r9d,0x8
   1e39c:	lea    r8,[r12+0x151]
   1e3a4:	movzx  edx,al
   1e3a7:	shr    rax,0xc
   1e3ab:	mov    rdi,rax
   1e3ae:	lea    rax,[rip+0x44f65]        # 6331a <_obstack_memory_used@@Base+0x1669a>
   1e3b5:	xor    dil,dil
   1e3b8:	mov    QWORD PTR [rsp],rax
   1e3bc:	or     edi,edx
   1e3be:	mov    edx,0x4
   1e3c3:	movsxd rsi,edi
   1e3c6:	shr    edi,0x1f
   1e3c9:	call   101a0 <__sprintf_chk@plt+0x57f0>
   1e3ce:	pop    rcx
   1e3cf:	pop    rsi
   1e3d0:	mov    rdx,r13
   1e3d3:	mov    rsi,r12
   1e3d6:	mov    rdi,r15
   1e3d9:	call   10b40 <__sprintf_chk@plt+0x6190>
   1e3de:	cmp    BYTE PTR [rip+0x61397],0x0        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   1e3e5:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1e3eb:	mov    rax,QWORD PTR [rsp+0x2f8]
   1e3f3:	sub    rax,QWORD PTR fs:0x28
   1e3fc:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1e402:	add    rsp,0x308
   1e409:	mov    rdi,rbp
   1e40c:	xor    esi,esi
   1e40e:	pop    rbx
   1e40f:	pop    rbp
   1e410:	pop    r12
   1e412:	pop    r13
   1e414:	pop    r14
   1e416:	pop    r15
   1e418:	jmp    3be60 <__sprintf_chk@plt+0x314b0>
   1e41d:	mov    rdx,QWORD PTR [rsp+0x10]
   1e422:	mov    rsi,r14
   1e425:	mov    edi,r12d
   1e428:	mov    DWORD PTR [rsp+0x40],ecx
   1e42c:	call   43a50 <argp_usage@@Base+0x6d0>
   1e431:	test   eax,eax
   1e433:	je     1d725 <__sprintf_chk@plt+0x12d75>
   1e439:	mov    DWORD PTR [rsp+0x3c],0x4000
   1e441:	mov    ecx,DWORD PTR [rsp+0x40]
   1e445:	jmp    1e189 <__sprintf_chk@plt+0x137d9>
   1e44a:	xor    eax,eax
   1e44c:	jmp    1dd8e <__sprintf_chk@plt+0x133de>
   1e451:	mov    r8d,DWORD PTR [rip+0x60a88]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   1e458:	test   r8d,r8d
   1e45b:	jg     1ec10 <__sprintf_chk@plt+0x14260>
   1e461:	xor    ecx,ecx
   1e463:	mov    rdx,r15
   1e466:	mov    rsi,r14
   1e469:	mov    edi,r12d
   1e46c:	call   3c230 <__sprintf_chk@plt+0x31880>
   1e471:	xor    ecx,ecx
   1e473:	mov    rdx,r15
   1e476:	mov    rsi,r14
   1e479:	mov    edi,r12d
   1e47c:	mov    ebx,0x34
   1e481:	call   44690 <argp_usage@@Base+0x1310>
   1e486:	jmp    1e2e7 <__sprintf_chk@plt+0x13937>
   1e48b:	mov    edi,DWORD PTR [rip+0x60a4f]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   1e491:	test   edi,edi
   1e493:	jg     1ec83 <__sprintf_chk@plt+0x142d3>
   1e499:	xor    ecx,ecx
   1e49b:	mov    rdx,r15
   1e49e:	mov    rsi,r14
   1e4a1:	mov    edi,r12d
   1e4a4:	call   3c230 <__sprintf_chk@plt+0x31880>
   1e4a9:	xor    ecx,ecx
   1e4ab:	mov    rdx,r15
   1e4ae:	mov    rsi,r14
   1e4b1:	mov    edi,r12d
   1e4b4:	mov    ebx,0x36
   1e4b9:	call   44690 <argp_usage@@Base+0x1310>
   1e4be:	jmp    1e2e7 <__sprintf_chk@plt+0x13937>
   1e4c3:	xor    edi,edi
   1e4c5:	mov    edx,0x5
   1e4ca:	lea    rsi,[rip+0x45e89]        # 6435a <_obstack_memory_used@@Base+0x176da>
   1e4d1:	call   a040 <dcgettext@plt>
   1e4d6:	mov    rsi,QWORD PTR [rsp+0x70]
   1e4db:	mov    rdi,QWORD PTR [r15]
   1e4de:	mov    rdx,rax
   1e4e1:	call   10060 <__sprintf_chk@plt+0x56b0>
   1e4e6:	jmp    1d948 <__sprintf_chk@plt+0x12f98>
   1e4eb:	movzx  r13d,BYTE PTR [rip+0x6100d]        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   1e4f3:	mov    rsi,QWORD PTR [r15]
   1e4f6:	test   r13b,r13b
   1e4f9:	je     1f15a <__sprintf_chk@plt+0x147aa>
   1e4ff:	xor    r13d,r13d
   1e502:	test   BYTE PTR [rip+0x5db75],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   1e509:	je     1d8ef <__sprintf_chk@plt+0x12f3f>
   1e50f:	lea    rdi,[rip+0x45e59]        # 6436f <_obstack_memory_used@@Base+0x176ef>
   1e516:	call   3c100 <__sprintf_chk@plt+0x31750>
   1e51b:	jmp    1d8ef <__sprintf_chk@plt+0x12f3f>
   1e520:	mov    rdi,r15
   1e523:	call   11e80 <__sprintf_chk@plt+0x74d0>
   1e528:	mov    rcx,QWORD PTR [rsp+0x40]
   1e52d:	jmp    1ddd4 <__sprintf_chk@plt+0x13424>
   1e532:	mov    r13,rbp
   1e535:	mov    rbp,QWORD PTR [rsp+0x18]
   1e53a:	mov    rdi,r13
   1e53d:	call   9ce0 <free@plt>
   1e542:	mov    QWORD PTR [r15+0x18],0x0
   1e54a:	call   9e40 <__errno_location@plt>
   1e54f:	mov    eax,DWORD PTR [rax]
   1e551:	cmp    eax,0xc
   1e554:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1e55a:	mov    rax,QWORD PTR [rsp+0x2f8]
   1e562:	sub    rax,QWORD PTR fs:0x28
   1e56b:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1e571:	movzx  esi,BYTE PTR [rsp+0xf]
   1e576:	lea    rdx,[rip+0x4ed3]        # 23450 <__sprintf_chk@plt+0x18aa0>
   1e57d:	jmp    1d6c7 <__sprintf_chk@plt+0x12d17>
   1e582:	mov    r8,r13
   1e585:	mov    r13,rbp
   1e588:	lea    rdx,[rax+0x1]
   1e58c:	mov    rbp,QWORD PTR [rsp+0x18]
   1e591:	mov    BYTE PTR [r8+rax*1],0x0
   1e596:	test   r13,r13
   1e599:	je     1ee39 <__sprintf_chk@plt+0x14489>
   1e59f:	cmp    rbx,rdx
   1e5a2:	ja     1ee7f <__sprintf_chk@plt+0x144cf>
   1e5a8:	mov    QWORD PTR [r15+0x18],r13
   1e5ac:	lea    rdi,[r15+0x18]
   1e5b0:	xor    ecx,ecx
   1e5b2:	xor    edx,edx
   1e5b4:	mov    esi,0x4
   1e5b9:	xor    ebx,ebx
   1e5bb:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   1e5c0:	cmp    DWORD PTR [rip+0x60cdd],0x2        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1e5c7:	mov    rdi,QWORD PTR [r15+0x18]
   1e5cb:	setne  bl
   1e5ce:	add    rbx,0x63
   1e5d2:	call   a060 <strlen@plt>
   1e5d7:	cmp    rax,rbx
   1e5da:	ja     1ed27 <__sprintf_chk@plt+0x14377>
   1e5e0:	mov    edi,r12d
   1e5e3:	xor    ecx,ecx
   1e5e5:	mov    rdx,r15
   1e5e8:	mov    rsi,r14
   1e5eb:	call   3c230 <__sprintf_chk@plt+0x31880>
   1e5f0:	mov    rsi,r14
   1e5f3:	mov    edi,r12d
   1e5f6:	xor    ecx,ecx
   1e5f8:	mov    rdx,r15
   1e5fb:	call   44690 <argp_usage@@Base+0x1310>
   1e600:	mov    rdi,r15
   1e603:	mov    QWORD PTR [r15+0x88],0x0
   1e60e:	mov    rbx,QWORD PTR [rip+0x60f2b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1e615:	mov    r13,QWORD PTR [rip+0x60f6c]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1e61c:	mov    r12,QWORD PTR [rip+0x60f15]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   1e623:	call   11f50 <__sprintf_chk@plt+0x75a0>
   1e628:	mov    rsi,rax
   1e62b:	test   rax,rax
   1e62e:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1e634:	mov    rax,QWORD PTR [r15+0x18]
   1e638:	xor    edx,edx
   1e63a:	nop    WORD PTR [rax+rax*1+0x0]
   1e640:	movzx  ecx,BYTE PTR [rax+rdx*1]
   1e644:	mov    BYTE PTR [rsi+rdx*1+0x9d],cl
   1e64b:	test   cl,cl
   1e64d:	je     1e659 <__sprintf_chk@plt+0x13ca9>
   1e64f:	add    rdx,0x1
   1e653:	cmp    rdx,0x64
   1e657:	jne    1e640 <__sprintf_chk@plt+0x13c90>
   1e659:	sub    rbx,r13
   1e65c:	mov    BYTE PTR [rsi+0x9c],0x32
   1e663:	mov    rdi,r15
   1e666:	sar    rbx,0x9
   1e66a:	lea    rdx,[rbx+r12*1]
   1e66e:	call   10b40 <__sprintf_chk@plt+0x6190>
   1e673:	cmp    BYTE PTR [rip+0x61102],0x0        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   1e67a:	jne    1ee2a <__sprintf_chk@plt+0x1447a>
   1e680:	mov    rax,QWORD PTR [rsp+0x2f8]
   1e688:	sub    rax,QWORD PTR fs:0x28
   1e691:	jne    1f420 <__sprintf_chk@plt+0x14a70>
   1e697:	add    rsp,0x308
   1e69e:	mov    rdi,r15
   1e6a1:	pop    rbx
   1e6a2:	pop    rbp
   1e6a3:	pop    r12
   1e6a5:	pop    r13
   1e6a7:	pop    r14
   1e6a9:	pop    r15
   1e6ab:	jmp    19170 <__sprintf_chk@plt+0xe7c0>
   1e6b0:	mov    rax,QWORD PTR [rsp+0xc0]
   1e6b8:	mov    rax,QWORD PTR [rax+0x8]
   1e6bc:	test   rax,rax
   1e6bf:	je     1ee10 <__sprintf_chk@plt+0x14460>
   1e6c5:	mov    rdi,r13
   1e6c8:	call   rax
   1e6ca:	test   al,al
   1e6cc:	jne    1ee10 <__sprintf_chk@plt+0x14460>
   1e6d2:	mov    ebx,0x1
   1e6d7:	mov    rdi,r15
   1e6da:	call   19170 <__sprintf_chk@plt+0xe7c0>
   1e6df:	test   ebx,ebx
   1e6e1:	jne    1d93b <__sprintf_chk@plt+0x12f8b>
   1e6e7:	mov    edi,DWORD PTR [rsp+0x18]
   1e6eb:	lea    rsi,[rsp+0xf0]
   1e6f3:	call   a920 <fstat@plt>
   1e6f8:	test   eax,eax
   1e6fa:	jne    1d927 <__sprintf_chk@plt+0x12f77>
   1e700:	mov    rax,QWORD PTR [rsp+0x28]
   1e705:	xor    edx,edx
   1e707:	cmp    rax,QWORD PTR [rsp+0x158]
   1e70f:	setg   al
   1e712:	setl   dl
   1e715:	movzx  eax,al
   1e718:	sub    edx,eax
   1e71a:	mov    rax,QWORD PTR [rsp+0x20]
   1e71f:	cmp    rax,QWORD PTR [rsp+0x160]
   1e727:	setl   al
   1e72a:	setg   cl
   1e72d:	movzx  eax,al
   1e730:	movzx  ecx,cl
   1e733:	sub    eax,ecx
   1e735:	lea    eax,[rax+rdx*2]
   1e738:	test   eax,eax
   1e73a:	je     1e7e8 <__sprintf_chk@plt+0x13e38>
   1e740:	cmp    BYTE PTR [rip+0x61035],0x1        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   1e747:	jne    1e757 <__sprintf_chk@plt+0x13da7>
   1e749:	cmp    DWORD PTR [rsp+0x3c],0x4000
   1e751:	je     1e7e8 <__sprintf_chk@plt+0x13e38>
   1e757:	test   BYTE PTR [rip+0x5d91e],0x10        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   1e75e:	je     1e79d <__sprintf_chk@plt+0x13ded>
   1e760:	mov    rax,QWORD PTR [rip+0x60da1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1e767:	test   rax,rax
   1e76a:	je     1e76e <__sprintf_chk@plt+0x13dbe>
   1e76c:	call   rax
   1e76e:	mov    rdi,rbp
   1e771:	call   4b670 <argp_usage@@Base+0x82f0>
   1e776:	mov    edx,0x5
   1e77b:	lea    rsi,[rip+0x46226]        # 649a8 <_obstack_memory_used@@Base+0x17d28>
   1e782:	xor    edi,edi
   1e784:	mov    r12,rax
   1e787:	call   a040 <dcgettext@plt>
   1e78c:	mov    rcx,r12
   1e78f:	xor    esi,esi
   1e791:	xor    edi,edi
   1e793:	mov    rdx,rax
   1e796:	xor    eax,eax
   1e798:	call   a640 <error@plt>
   1e79d:	mov    r11d,DWORD PTR [rip+0x60920]        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1e7a4:	test   r11d,r11d
   1e7a7:	jg     1e7b3 <__sprintf_chk@plt+0x13e03>
   1e7a9:	mov    DWORD PTR [rip+0x60911],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1e7b3:	mov    rdi,r15
   1e7b6:	call   3c160 <__sprintf_chk@plt+0x317b0>
   1e7bb:	test   al,al
   1e7bd:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1e7c3:	cmp    BYTE PTR [rip+0x60fb2],0x0        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   1e7ca:	je     1d948 <__sprintf_chk@plt+0x12f98>
   1e7d0:	movzx  esi,BYTE PTR [rsp+0x38]
   1e7d5:	mov    rdi,rbp
   1e7d8:	call   3be60 <__sprintf_chk@plt+0x314b0>
   1e7dd:	jmp    1d948 <__sprintf_chk@plt+0x12f98>
   1e7e2:	nop    WORD PTR [rax+rax*1+0x0]
   1e7e8:	mov    rax,QWORD PTR [rsp+0x30]
   1e7ed:	cmp    QWORD PTR [rsp+0x120],rax
   1e7f5:	jg     1e757 <__sprintf_chk@plt+0x13da7>
   1e7fb:	cmp    DWORD PTR [rip+0x6076a],0x1        # 7ef6c <obstack_alloc_failed_handler@@Base+0x134>
   1e802:	jne    1e7b3 <__sprintf_chk@plt+0x13e03>
   1e804:	mov    r10d,DWORD PTR [rsp+0x18]
   1e809:	test   r10d,r10d
   1e80c:	je     1e7b3 <__sprintf_chk@plt+0x13e03>
   1e80e:	cmp    QWORD PTR [rsp+0x30],0x0
   1e814:	jne    1e81d <__sprintf_chk@plt+0x13e6d>
   1e816:	cmp    BYTE PTR [rsp+0x38],0x0
   1e81b:	je     1e7b3 <__sprintf_chk@plt+0x13e03>
   1e81d:	mov    rax,QWORD PTR [r15+0xf0]
   1e824:	lea    rbx,[rsp+0xd0]
   1e82c:	mov    edi,DWORD PTR [rsp+0x18]
   1e830:	mov    QWORD PTR [rsp+0xe8],0x3ffffffe
   1e83c:	mov    rdx,QWORD PTR [r15+0xe8]
   1e843:	mov    rsi,rbx
   1e846:	mov    r13d,DWORD PTR [rip+0x60727]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   1e84d:	mov    QWORD PTR [rsp+0xd8],rax
   1e855:	mov    QWORD PTR [rsp+0xd0],rdx
   1e85d:	call   a750 <futimens@plt>
   1e862:	cmp    eax,0xffffffff
   1e865:	je     1f5c4 <__sprintf_chk@plt+0x14c14>
   1e86b:	cmp    eax,0x1
   1e86e:	je     1f65a <__sprintf_chk@plt+0x14caa>
   1e874:	test   eax,eax
   1e876:	je     1e7b3 <__sprintf_chk@plt+0x13e03>
   1e87c:	mov    rsi,rbp
   1e87f:	lea    rdi,[rip+0x44b54]        # 633da <_obstack_memory_used@@Base+0x1675a>
   1e886:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1e88b:	jmp    1e7b3 <__sprintf_chk@plt+0x13e03>
   1e890:	mov    rdx,QWORD PTR [rsp+0x10]
   1e895:	mov    rsi,r14
   1e898:	mov    edi,r12d
   1e89b:	call   43a50 <argp_usage@@Base+0x6d0>
   1e8a0:	test   eax,eax
   1e8a2:	je     1e2c2 <__sprintf_chk@plt+0x13912>
   1e8a8:	cmp    eax,0xffffffff
   1e8ab:	je     1f221 <__sprintf_chk@plt+0x14871>
   1e8b1:	mov    ecx,0x1
   1e8b6:	mov    rdx,r15
   1e8b9:	mov    rsi,r14
   1e8bc:	mov    edi,r12d
   1e8bf:	call   43f70 <argp_usage@@Base+0xbf0>
   1e8c4:	jmp    1e2c2 <__sprintf_chk@plt+0x13912>
   1e8c9:	lea    r13,[rsp+0xa0]
   1e8d1:	mov    rdi,r13
   1e8d4:	call   32390 <__sprintf_chk@plt+0x279e0>
   1e8d9:	mov    BYTE PTR [rsp+0x10],al
   1e8dd:	test   al,al
   1e8df:	je     1e0d8 <__sprintf_chk@plt+0x13728>
   1e8e5:	mov    eax,DWORD PTR [rsp+0x18]
   1e8e9:	cmp    QWORD PTR [r15+0x98],0x0
   1e8f1:	mov    QWORD PTR [rsp+0xb8],r15
   1e8f9:	mov    BYTE PTR [rsp+0xa4],0x1
   1e901:	mov    DWORD PTR [rsp+0xa0],eax
   1e908:	mov    QWORD PTR [rsp+0x98],0x0
   1e914:	je     1f090 <__sprintf_chk@plt+0x146e0>
   1e91a:	mov    eax,DWORD PTR [rip+0x60e58]        # 7f778 <obstack_alloc_failed_handler@@Base+0x940>
   1e920:	cmp    eax,0x1
   1e923:	je     1eee0 <__sprintf_chk@plt+0x14530>
   1e929:	and    eax,0xfffffffd
   1e92c:	je     1f235 <__sprintf_chk@plt+0x14885>
   1e932:	mov    BYTE PTR [rsp+0x10],0x0
   1e937:	mov    rax,r15
   1e93a:	mov    rbx,QWORD PTR [rax+0x118]
   1e941:	mov    rcx,QWORD PTR [rip+0x60c38]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1e948:	xor    esi,esi
   1e94a:	sub    rbx,QWORD PTR [rsp+0xb0]
   1e952:	test   rbx,rbx
   1e955:	jg     1e9d6 <__sprintf_chk@plt+0x14026>
   1e957:	jmp    1e6b0 <__sprintf_chk@plt+0x13d00>
   1e95c:	nop    DWORD PTR [rax+0x0]
   1e960:	lea    rdi,[rdx+0x8]
   1e964:	mov    rcx,rdx
   1e967:	mov    rax,rsi
   1e96a:	mov    QWORD PTR [rdx],0x0
   1e971:	mov    QWORD PTR [rdx+0x1f8],0x0
   1e97c:	and    rdi,0xfffffffffffffff8
   1e980:	sub    rcx,rdi
   1e983:	add    ecx,0x200
   1e989:	shr    ecx,0x3
   1e98c:	rep stos QWORD PTR es:[rdi],rax
   1e98f:	mov    rdi,QWORD PTR [rip+0x60baa]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1e996:	cmp    rdx,rdi
   1e999:	jb     1e9b6 <__sprintf_chk@plt+0x14006>
   1e99b:	mov    rax,rdx
   1e99e:	sub    rax,rdi
   1e9a1:	and    rax,0xfffffffffffffe00
   1e9a7:	lea    rdi,[rdi+rax*1+0x200]
   1e9af:	mov    QWORD PTR [rip+0x60b8a],rdi        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1e9b6:	mov    rcx,QWORD PTR [rip+0x60bc3]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1e9bd:	cmp    rcx,rdi
   1e9c0:	jb     aa4e <__sprintf_chk@plt+0x9e>
   1e9c6:	sub    rbx,0x200
   1e9cd:	test   rbx,rbx
   1e9d0:	jle    1e6b0 <__sprintf_chk@plt+0x13d00>
   1e9d6:	mov    rdx,QWORD PTR [rip+0x60b63]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1e9dd:	cmp    rdx,rcx
   1e9e0:	jne    1e960 <__sprintf_chk@plt+0x13fb0>
   1e9e6:	xor    edx,edx
   1e9e8:	cmp    BYTE PTR [rip+0x60b45],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1e9ef:	jne    1e960 <__sprintf_chk@plt+0x13fb0>
   1e9f5:	call   f170 <__sprintf_chk@plt+0x47c0>
   1e9fa:	mov    rdx,QWORD PTR [rip+0x60b3f]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ea01:	xor    esi,esi
   1ea03:	cmp    rdx,QWORD PTR [rip+0x60b76]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1ea0a:	jne    1e960 <__sprintf_chk@plt+0x13fb0>
   1ea10:	mov    BYTE PTR [rip+0x60b1d],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1ea17:	xor    edx,edx
   1ea19:	jmp    1e960 <__sprintf_chk@plt+0x13fb0>
   1ea1e:	mov    rax,QWORD PTR [rip+0x60dbb]        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   1ea25:	cmp    DWORD PTR [rip+0x60878],0x4        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   1ea2c:	mov    rcx,QWORD PTR [rsp+0x18]
   1ea31:	mov    rax,QWORD PTR [rax+0x38]
   1ea35:	je     1ecd8 <__sprintf_chk@plt+0x14328>
   1ea3b:	mov    BYTE PTR [rcx+0x9c],0x44
   1ea42:	test   rax,rax
   1ea45:	je     1d850 <__sprintf_chk@plt+0x12ea0>
   1ea4b:	mov    rdx,QWORD PTR [rip+0x60aee]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ea52:	mov    rax,QWORD PTR [rax+0x28]
   1ea56:	sub    rdx,QWORD PTR [rip+0x60b2b]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   1ea5d:	sar    rdx,0x9
   1ea61:	add    rdx,QWORD PTR [rip+0x60ad0]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   1ea68:	mov    QWORD PTR [rsp+0x40],rdx
   1ea6d:	test   rax,rax
   1ea70:	je     1f1fe <__sprintf_chk@plt+0x1484e>
   1ea76:	mov    r12,QWORD PTR [rax]
   1ea79:	test   r12,r12
   1ea7c:	je     1f1fe <__sprintf_chk@plt+0x1484e>
   1ea82:	cmp    BYTE PTR [r12],0x0
   1ea87:	je     1f5a7 <__sprintf_chk@plt+0x14bf7>
   1ea8d:	mov    QWORD PTR [rsp+0x48],rbx
   1ea92:	xor    r13d,r13d
   1ea95:	mov    rbx,r12
   1ea98:	nop    DWORD PTR [rax+rax*1+0x0]
   1eaa0:	mov    rdi,rbx
   1eaa3:	call   a060 <strlen@plt>
   1eaa8:	add    rax,0x1
   1eaac:	add    rbx,rax
   1eaaf:	add    r13,rax
   1eab2:	cmp    BYTE PTR [rbx],0x0
   1eab5:	jne    1eaa0 <__sprintf_chk@plt+0x140f0>
   1eab7:	mov    rbx,QWORD PTR [rsp+0x48]
   1eabc:	sub    rsp,0x8
   1eac0:	add    r13,0x1
   1eac4:	xor    ecx,ecx
   1eac6:	mov    r9d,0xc
   1eacc:	lea    rax,[rip+0x446f2]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   1ead3:	mov    rdi,r13
   1ead6:	mov    edx,0x8
   1eadb:	mov    rsi,r13
   1eade:	push   rax
   1eadf:	mov    rax,QWORD PTR [rsp+0x28]
   1eae4:	shr    rdi,0x3f
   1eae8:	lea    r8,[rax+0x7c]
   1eaec:	call   101a0 <__sprintf_chk@plt+0x57f0>
   1eaf1:	mov    rdx,QWORD PTR [rsp+0x50]
   1eaf6:	mov    rsi,QWORD PTR [rsp+0x28]
   1eafb:	mov    rdi,r15
   1eafe:	call   10b40 <__sprintf_chk@plt+0x6190>
   1eb03:	cmp    BYTE PTR [rip+0x60aa6],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   1eb0a:	pop    rax
   1eb0b:	pop    rdx
   1eb0c:	jne    1f20d <__sprintf_chk@plt+0x1485d>
   1eb12:	mov    QWORD PTR [rsp+0x18],rbx
   1eb17:	jmp    1eb70 <__sprintf_chk@plt+0x141c0>
   1eb19:	sub    r13,rax
   1eb1c:	mov    rbx,rax
   1eb1f:	mov    rdx,rbx
   1eb22:	mov    rsi,r12
   1eb25:	mov    rdi,r8
   1eb28:	add    r12,rbx
   1eb2b:	call   a420 <memcpy@plt>
   1eb30:	lea    rdx,[rbx-0x1]
   1eb34:	and    rdx,0xfffffffffffffe00
   1eb3b:	lea    rax,[rax+rdx*1]
   1eb3f:	mov    rdx,QWORD PTR [rip+0x609fa]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1eb46:	cmp    rax,rdx
   1eb49:	jb     1eb63 <__sprintf_chk@plt+0x141b3>
   1eb4b:	sub    rax,rdx
   1eb4e:	and    rax,0xfffffffffffffe00
   1eb54:	lea    rdx,[rdx+rax*1+0x200]
   1eb5c:	mov    QWORD PTR [rip+0x609dd],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1eb63:	cmp    QWORD PTR [rip+0x60a16],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1eb6a:	jb     aa4e <__sprintf_chk@plt+0x9e>
   1eb70:	test   r13,r13
   1eb73:	jle    1ee20 <__sprintf_chk@plt+0x14470>
   1eb79:	mov    r8,QWORD PTR [rip+0x609c0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1eb80:	mov    rax,QWORD PTR [rip+0x609f9]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1eb87:	cmp    r8,rax
   1eb8a:	je     1ebd8 <__sprintf_chk@plt+0x14228>
   1eb8c:	sub    rax,r8
   1eb8f:	mov    rbx,r13
   1eb92:	cmp    r13,rax
   1eb95:	jae    1eb19 <__sprintf_chk@plt+0x14169>
   1eb97:	and    r13d,0x1ff
   1eb9e:	je     1eb1f <__sprintf_chk@plt+0x1416f>
   1eba4:	mov    eax,0x200
   1eba9:	lea    rcx,[r8+rbx*1]
   1ebad:	sub    rax,r13
   1ebb0:	cmp    eax,0x8
   1ebb3:	jae    1ee96 <__sprintf_chk@plt+0x144e6>
   1ebb9:	test   al,0x4
   1ebbb:	jne    1f5af <__sprintf_chk@plt+0x14bff>
   1ebc1:	test   eax,eax
   1ebc3:	je     1ebd0 <__sprintf_chk@plt+0x14220>
   1ebc5:	mov    BYTE PTR [rcx],0x0
   1ebc8:	test   al,0x2
   1ebca:	jne    1f66a <__sprintf_chk@plt+0x14cba>
   1ebd0:	xor    r13d,r13d
   1ebd3:	jmp    1eb1f <__sprintf_chk@plt+0x1416f>
   1ebd8:	xor    r8d,r8d
   1ebdb:	cmp    BYTE PTR [rip+0x60952],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1ebe2:	jne    1eb8c <__sprintf_chk@plt+0x141dc>
   1ebe4:	call   f170 <__sprintf_chk@plt+0x47c0>
   1ebe9:	mov    r8,QWORD PTR [rip+0x60950]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   1ebf0:	mov    rax,QWORD PTR [rip+0x60989]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   1ebf7:	cmp    r8,rax
   1ebfa:	jne    1eb8c <__sprintf_chk@plt+0x141dc>
   1ebfc:	mov    BYTE PTR [rip+0x60931],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   1ec03:	xor    r8d,r8d
   1ec06:	jmp    1eb8c <__sprintf_chk@plt+0x141dc>
   1ec08:	nop    DWORD PTR [rax+rax*1+0x0]
   1ec10:	mov    rdx,QWORD PTR [rsp+0x10]
   1ec15:	mov    rsi,r14
   1ec18:	mov    edi,r12d
   1ec1b:	call   43a50 <argp_usage@@Base+0x6d0>
   1ec20:	test   eax,eax
   1ec22:	je     1e461 <__sprintf_chk@plt+0x13ab1>
   1ec28:	cmp    eax,0xffffffff
   1ec2b:	je     1f391 <__sprintf_chk@plt+0x149e1>
   1ec31:	mov    ecx,0x1
   1ec36:	mov    rdx,r15
   1ec39:	mov    rsi,r14
   1ec3c:	mov    edi,r12d
   1ec3f:	call   43f70 <argp_usage@@Base+0xbf0>
   1ec44:	jmp    1e461 <__sprintf_chk@plt+0x13ab1>
   1ec49:	mov    ecx,DWORD PTR [rip+0x60325]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   1ec4f:	lea    rdx,[rsp+0xf0]
   1ec57:	mov    rsi,r14
   1ec5a:	mov    edi,r12d
   1ec5d:	call   a960 <fstatat@plt>
   1ec62:	test   eax,eax
   1ec64:	je     1e700 <__sprintf_chk@plt+0x13d50>
   1ec6a:	jmp    1d927 <__sprintf_chk@plt+0x12f77>
   1ec6f:	mov    rsi,r14
   1ec72:	lea    rdi,[rip+0x456d1]        # 6434a <_obstack_memory_used@@Base+0x176ca>
   1ec79:	call   3c100 <__sprintf_chk@plt+0x31750>
   1ec7e:	jmp    1e1a0 <__sprintf_chk@plt+0x137f0>
   1ec83:	mov    rdx,QWORD PTR [rsp+0x10]
   1ec88:	mov    rsi,r14
   1ec8b:	mov    edi,r12d
   1ec8e:	call   43a50 <argp_usage@@Base+0x6d0>
   1ec93:	test   eax,eax
   1ec95:	je     1e499 <__sprintf_chk@plt+0x13ae9>
   1ec9b:	cmp    eax,0xffffffff
   1ec9e:	je     1f569 <__sprintf_chk@plt+0x14bb9>
   1eca4:	mov    ecx,0x1
   1eca9:	mov    rdx,r15
   1ecac:	mov    rsi,r14
   1ecaf:	mov    edi,r12d
   1ecb2:	call   43f70 <argp_usage@@Base+0xbf0>
   1ecb7:	jmp    1e499 <__sprintf_chk@plt+0x13ae9>
   1ecbc:	call   9e40 <__errno_location@plt>
   1ecc1:	mov    DWORD PTR [rax],0xc
   1ecc7:	mov    QWORD PTR [r15+0x18],0x0
   1eccf:	call   19130 <__sprintf_chk@plt+0xe780>
   1ecd4:	nop    DWORD PTR [rax+0x0]
   1ecd8:	mov    BYTE PTR [rcx+0x9c],0x35
   1ecdf:	test   rax,rax
   1ece2:	je     1d850 <__sprintf_chk@plt+0x12ea0>
   1ece8:	mov    rax,QWORD PTR [rax+0x28]
   1ecec:	lea    rdx,[rip+0x460c9]        # 64dbc <_obstack_memory_used@@Base+0x1813c>
   1ecf3:	test   rax,rax
   1ecf6:	je     1ed04 <__sprintf_chk@plt+0x14354>
   1ecf8:	mov    rdx,QWORD PTR [rax]
   1ecfb:	test   rdx,rdx
   1ecfe:	je     1f591 <__sprintf_chk@plt+0x14be1>
   1ed04:	cmp    QWORD PTR [r15+0x178],0x0
   1ed0c:	je     1f57d <__sprintf_chk@plt+0x14bcd>
   1ed12:	mov    rsi,QWORD PTR [rsp+0x18]
   1ed17:	mov    rdx,r13
   1ed1a:	mov    rdi,r15
   1ed1d:	call   10b40 <__sprintf_chk@plt+0x6190>
   1ed22:	jmp    1d8d7 <__sprintf_chk@plt+0x12f27>
   1ed27:	mov    rdi,r15
   1ed2a:	call   11e80 <__sprintf_chk@plt+0x74d0>
   1ed2f:	jmp    1e5e0 <__sprintf_chk@plt+0x13c30>
   1ed34:	lea    rsi,[rsp+0x78]
   1ed39:	mov    rdi,r15
   1ed3c:	call   10110 <__sprintf_chk@plt+0x5760>
   1ed41:	cmp    eax,0x1
   1ed44:	je     1f425 <__sprintf_chk@plt+0x14a75>
   1ed4a:	cmp    eax,0x2
   1ed4d:	je     1f369 <__sprintf_chk@plt+0x149b9>
   1ed53:	test   eax,eax
   1ed55:	jne    1d8d7 <__sprintf_chk@plt+0x12f27>
   1ed5b:	mov    r12,QWORD PTR [r15]
   1ed5e:	mov    rdi,r12
   1ed61:	call   a060 <strlen@plt>
   1ed66:	lea    r13,[rax+0x1]
   1ed6a:	mov    QWORD PTR [rsp+0x18],rax
   1ed6f:	mov    rdi,r13
   1ed72:	call   a4a0 <malloc@plt>
   1ed77:	mov    rdi,rax
   1ed7a:	test   rax,rax
   1ed7d:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1ed83:	mov    rdx,r13
   1ed86:	mov    rsi,r12
   1ed89:	call   a420 <memcpy@plt>
   1ed8e:	mov    r13,QWORD PTR [rsp+0x10]
   1ed93:	mov    QWORD PTR [rsp+0x40],rbx
   1ed98:	mov    r12,rax
   1ed9b:	mov    rax,QWORD PTR [rsp+0x18]
   1eda0:	mov    QWORD PTR [rsp+0x48],rbp
   1eda5:	mov    rbp,r13
   1eda8:	mov    rbx,rax
   1edab:	jmp    1edd1 <__sprintf_chk@plt+0x14421>
   1edad:	lea    rdi,[r12+rbx*1]
   1edb1:	mov    rsi,rbp
   1edb4:	call   9e80 <strcpy@plt>
   1edb9:	mov    rsi,r15
   1edbc:	mov    rdi,r12
   1edbf:	call   18ba0 <__sprintf_chk@plt+0xe1f0>
   1edc4:	test   al,al
   1edc6:	je     1ee6c <__sprintf_chk@plt+0x144bc>
   1edcc:	lea    rbp,[rbp+r13*1+0x1]
   1edd1:	mov    rdi,rbp
   1edd4:	call   a060 <strlen@plt>
   1edd9:	mov    r13,rax
   1eddc:	test   rax,rax
   1eddf:	je     1f409 <__sprintf_chk@plt+0x14a59>
   1ede5:	lea    rdx,[r13+rbx*1+0x0]
   1edea:	cmp    rdx,QWORD PTR [rsp+0x18]
   1edef:	jbe    1edad <__sprintf_chk@plt+0x143fd>
   1edf1:	mov    rdi,r12
   1edf4:	lea    rsi,[rdx+0x1]
   1edf8:	mov    QWORD PTR [rsp+0x18],rdx
   1edfd:	call   a570 <realloc@plt>
   1ee02:	mov    r12,rax
   1ee05:	test   rax,rax
   1ee08:	jne    1edad <__sprintf_chk@plt+0x143fd>
   1ee0a:	jmp    1eccf <__sprintf_chk@plt+0x1431f>
   1ee0f:	nop
   1ee10:	movzx  ebx,BYTE PTR [rsp+0x10]
   1ee15:	xor    ebx,0x1
   1ee18:	movzx  ebx,bl
   1ee1b:	jmp    1e6d7 <__sprintf_chk@plt+0x13d27>
   1ee20:	mov    rbx,QWORD PTR [rsp+0x18]
   1ee25:	jmp    1d8d7 <__sprintf_chk@plt+0x12f27>
   1ee2a:	xor    esi,esi
   1ee2c:	mov    rdi,rbp
   1ee2f:	call   3be60 <__sprintf_chk@plt+0x314b0>
   1ee34:	jmp    1e680 <__sprintf_chk@plt+0x13cd0>
   1ee39:	mov    rdi,rdx
   1ee3c:	mov    QWORD PTR [rsp+0x10],r8
   1ee41:	mov    QWORD PTR [rsp],rdx
   1ee45:	call   a4a0 <malloc@plt>
   1ee4a:	mov    rdi,rax
   1ee4d:	test   rax,rax
   1ee50:	je     1f646 <__sprintf_chk@plt+0x14c96>
   1ee56:	mov    rdx,QWORD PTR [rsp]
   1ee5a:	mov    rsi,QWORD PTR [rsp+0x10]
   1ee5f:	call   a420 <memcpy@plt>
   1ee64:	mov    r13,rax
   1ee67:	jmp    1e5a8 <__sprintf_chk@plt+0x13bf8>
   1ee6c:	mov    rdx,r12
   1ee6f:	mov    rsi,rbp
   1ee72:	mov    rdi,r15
   1ee75:	call   1f6a0 <__sprintf_chk@plt+0x14cf0>
   1ee7a:	jmp    1edcc <__sprintf_chk@plt+0x1441c>
   1ee7f:	mov    rdi,r13
   1ee82:	mov    rsi,rdx
   1ee85:	call   a570 <realloc@plt>
   1ee8a:	test   rax,rax
   1ee8d:	cmovne r13,rax
   1ee91:	jmp    1e5a8 <__sprintf_chk@plt+0x13bf8>
   1ee96:	lea    rdi,[rcx+0x8]
   1ee9a:	mov    esi,eax
   1ee9c:	mov    QWORD PTR [rcx],0x0
   1eea3:	mov    QWORD PTR [rcx+rsi*1-0x8],0x0
   1eeac:	and    rdi,0xfffffffffffffff8
   1eeb0:	sub    rcx,rdi
   1eeb3:	add    ecx,eax
   1eeb5:	xor    eax,eax
   1eeb7:	shr    ecx,0x3
   1eeba:	rep stos QWORD PTR es:[rdi],rax
   1eebd:	jmp    1ebd0 <__sprintf_chk@plt+0x14220>
   1eec2:	mov    edi,DWORD PTR [rsp+0x18]
   1eec6:	xor    edx,edx
   1eec8:	xor    esi,esi
   1eeca:	mov    r12d,DWORD PTR [rsp]
   1eece:	mov    r14,QWORD PTR [rsp+0x40]
   1eed3:	mov    rbp,QWORD PTR [rsp+0x48]
   1eed8:	xchg   r15,r13
   1eedb:	call   a170 <lseek@plt>
   1eee0:	mov    rax,QWORD PTR [rsp+0xb8]
   1eee8:	mov    ecx,DWORD PTR [rsp+0xa0]
   1eeef:	mov    QWORD PTR [rsp+0x90],0x0
   1eefb:	mov    QWORD PTR [rsp+0x98],0x0
   1ef07:	mov    QWORD PTR [rsp+0x58],rax
   1ef0c:	mov    QWORD PTR [rax+0x118],0x0
   1ef17:	mov    rax,QWORD PTR [rsp+0xc0]
   1ef1f:	mov    DWORD PTR [rsp+0x60],ecx
   1ef23:	mov    rax,QWORD PTR [rax+0x30]
   1ef27:	test   rax,rax
   1ef2a:	je     1ef3d <__sprintf_chk@plt+0x1458d>
   1ef2c:	xor    edx,edx
   1ef2e:	xor    esi,esi
   1ef30:	mov    rdi,r13
   1ef33:	call   rax
   1ef35:	test   al,al
   1ef37:	je     1f01b <__sprintf_chk@plt+0x1466b>
   1ef3d:	lea    rbx,[rsp+0xf0]
   1ef45:	mov    QWORD PTR [rsp+0x48],r14
   1ef4a:	xor    eax,eax
   1ef4c:	mov    QWORD PTR [rsp+0x40],r15
   1ef51:	mov    r15,QWORD PTR [rsp+0x58]
   1ef56:	mov    QWORD PTR [rsp+0x50],rbp
   1ef5b:	mov    rbp,rbx
   1ef5e:	mov    ebx,DWORD PTR [rsp+0x60]
   1ef62:	mov    DWORD PTR [rsp],r12d
   1ef66:	mov    r12,rax
   1ef69:	nop    DWORD PTR [rax+0x0]
   1ef70:	mov    edx,0x200
   1ef75:	mov    rsi,rbp
   1ef78:	mov    edi,ebx
   1ef7a:	call   26630 <__sprintf_chk@plt+0x1bc80>
   1ef7f:	mov    r14,rax
   1ef82:	test   rax,rax
   1ef85:	je     1f178 <__sprintf_chk@plt+0x147c8>
   1ef8b:	cmp    rax,0xffffffffffffffff
   1ef8f:	je     1f178 <__sprintf_chk@plt+0x147c8>
   1ef95:	lea    rdx,[rbp+rax*1+0x0]
   1ef9a:	mov    rax,rbp
   1ef9d:	nop    DWORD PTR [rax]
   1efa0:	add    rax,0x1
   1efa4:	cmp    BYTE PTR [rax-0x1],0x0
   1efa8:	jne    1efbf <__sprintf_chk@plt+0x1460f>
   1efaa:	cmp    rax,rdx
   1efad:	jne    1efa0 <__sprintf_chk@plt+0x145f0>
   1efaf:	cmp    QWORD PTR [rsp+0x98],0x0
   1efb8:	jne    1f02d <__sprintf_chk@plt+0x1467d>
   1efba:	add    r12,r14
   1efbd:	jmp    1ef70 <__sprintf_chk@plt+0x145c0>
   1efbf:	mov    rax,QWORD PTR [rsp+0x98]
   1efc7:	test   rax,rax
   1efca:	jne    1efd4 <__sprintf_chk@plt+0x14624>
   1efcc:	mov    QWORD PTR [rsp+0x90],r12
   1efd4:	add    rax,r14
   1efd7:	mov    QWORD PTR [rsp+0x98],rax
   1efdf:	mov    rax,QWORD PTR [rsp+0xc0]
   1efe7:	add    QWORD PTR [r15+0x118],r14
   1efee:	mov    rax,QWORD PTR [rax+0x30]
   1eff2:	test   rax,rax
   1eff5:	je     1efba <__sprintf_chk@plt+0x1460a>
   1eff7:	mov    rdx,rbp
   1effa:	mov    esi,0x1
   1efff:	mov    rdi,r13
   1f002:	call   rax
   1f004:	test   al,al
   1f006:	jne    1efba <__sprintf_chk@plt+0x1460a>
   1f008:	mov    r12d,DWORD PTR [rsp]
   1f00c:	mov    r15,QWORD PTR [rsp+0x40]
   1f011:	mov    r14,QWORD PTR [rsp+0x48]
   1f016:	mov    rbp,QWORD PTR [rsp+0x50]
   1f01b:	mov    BYTE PTR [rsp+0x10],0x0
   1f020:	mov    rax,QWORD PTR [rsp+0xb8]
   1f028:	jmp    1e93a <__sprintf_chk@plt+0x13f8a>
   1f02d:	mov    r9,QWORD PTR [r15+0x130]
   1f034:	mov    rsi,QWORD PTR [r15+0x138]
   1f03b:	mov    rdi,QWORD PTR [r15+0x140]
   1f042:	lea    rdx,[r9+0x1]
   1f046:	cmp    r9,rsi
   1f049:	je     1f3a5 <__sprintf_chk@plt+0x149f5>
   1f04f:	mov    rax,QWORD PTR [rsp+0xc0]
   1f057:	shl    r9,0x4
   1f05b:	movdqa xmm1,XMMWORD PTR [rsp+0x90]
   1f064:	mov    rax,QWORD PTR [rax+0x30]
   1f068:	movups XMMWORD PTR [rdi+r9*1],xmm1
   1f06d:	mov    QWORD PTR [r15+0x130],rdx
   1f074:	xor    edx,edx
   1f076:	mov    QWORD PTR [rsp+0x98],0x0
   1f082:	test   rax,rax
   1f085:	jne    1effa <__sprintf_chk@plt+0x1464a>
   1f08b:	jmp    1efba <__sprintf_chk@plt+0x1460a>
   1f090:	mov    QWORD PTR [r15+0x118],0x0
   1f09b:	mov    rax,QWORD PTR [r15+0x88]
   1f0a2:	lea    rsi,[rsp+0x90]
   1f0aa:	mov    rdi,r15
   1f0ad:	mov    QWORD PTR [rsp+0x90],rax
   1f0b5:	call   32a40 <__sprintf_chk@plt+0x28090>
   1f0ba:	mov    rax,QWORD PTR [rsp+0xc0]
   1f0c2:	cmp    QWORD PTR [rax+0x38],0x0
   1f0c7:	je     1f16b <__sprintf_chk@plt+0x147bb>
   1f0cd:	mov    rax,QWORD PTR [rax+0x18]
   1f0d1:	test   rax,rax
   1f0d4:	je     1f0db <__sprintf_chk@plt+0x1472b>
   1f0d6:	mov    rdi,r13
   1f0d9:	call   rax
   1f0db:	cmp    BYTE PTR [rip+0x604ce],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   1f0e2:	jne    1f121 <__sprintf_chk@plt+0x14771>
   1f0e4:	xor    ebx,ebx
   1f0e6:	mov    rax,QWORD PTR [rsp+0xb8]
   1f0ee:	cmp    QWORD PTR [rax+0x130],rbx
   1f0f5:	jbe    1e93a <__sprintf_chk@plt+0x13f8a>
   1f0fb:	mov    rdx,QWORD PTR [rsp+0xc0]
   1f103:	mov    rdx,QWORD PTR [rdx+0x38]
   1f107:	test   rdx,rdx
   1f10a:	je     1f150 <__sprintf_chk@plt+0x147a0>
   1f10c:	mov    rsi,rbx
   1f10f:	mov    rdi,r13
   1f112:	add    rbx,0x1
   1f116:	call   rdx
   1f118:	test   al,al
   1f11a:	jne    1f0e6 <__sprintf_chk@plt+0x14736>
   1f11c:	jmp    1f01b <__sprintf_chk@plt+0x1466b>
   1f121:	mov    rax,QWORD PTR [rsp+0xb8]
   1f129:	mov    rsi,QWORD PTR [rax+0x88]
   1f130:	mov    rdi,QWORD PTR [rax+0x8]
   1f134:	mov    rdx,QWORD PTR [rax+0x118]
   1f13b:	sub    rdx,QWORD PTR [rsp+0xb0]
   1f143:	call   fa40 <__sprintf_chk@plt+0x5090>
   1f148:	jmp    1f0e4 <__sprintf_chk@plt+0x14734>
   1f14a:	nop    WORD PTR [rax+rax*1+0x0]
   1f150:	mov    BYTE PTR [rsp+0x10],0x0
   1f155:	jmp    1e93a <__sprintf_chk@plt+0x13f8a>
   1f15a:	lea    rdi,[rip+0x4520e]        # 6436f <_obstack_memory_used@@Base+0x176ef>
   1f161:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1f166:	jmp    1d8ef <__sprintf_chk@plt+0x12f3f>
   1f16b:	mov    rax,QWORD PTR [rsp+0xb8]
   1f173:	jmp    1e93a <__sprintf_chk@plt+0x13f8a>
   1f178:	mov    rax,r12
   1f17b:	mov    rcx,r14
   1f17e:	mov    r12d,DWORD PTR [rsp]
   1f182:	mov    r15,QWORD PTR [rsp+0x40]
   1f187:	cmp    QWORD PTR [rsp+0x98],0x0
   1f190:	mov    r14,QWORD PTR [rsp+0x48]
   1f195:	mov    rbp,QWORD PTR [rsp+0x50]
   1f19a:	jne    1f1a4 <__sprintf_chk@plt+0x147f4>
   1f19c:	mov    QWORD PTR [rsp+0x90],rax
   1f1a4:	mov    rbx,QWORD PTR [rsp+0x58]
   1f1a9:	lea    rsi,[rsp+0x90]
   1f1b1:	mov    QWORD PTR [rsp],rcx
   1f1b5:	mov    rdi,rbx
   1f1b8:	call   32a40 <__sprintf_chk@plt+0x28090>
   1f1bd:	mov    rax,QWORD PTR [rsp+0xc0]
   1f1c5:	mov    rcx,QWORD PTR [rsp]
   1f1c9:	add    QWORD PTR [rbx+0x118],rcx
   1f1d0:	mov    rcx,QWORD PTR [rax+0x30]
   1f1d4:	test   rcx,rcx
   1f1d7:	je     1f0c2 <__sprintf_chk@plt+0x14712>
   1f1dd:	xor    edx,edx
   1f1df:	mov    esi,0x2
   1f1e4:	mov    rdi,r13
   1f1e7:	call   rcx
   1f1e9:	test   al,al
   1f1eb:	je     1f01b <__sprintf_chk@plt+0x1466b>
   1f1f1:	mov    rax,QWORD PTR [rsp+0xc0]
   1f1f9:	jmp    1f0c2 <__sprintf_chk@plt+0x14712>
   1f1fe:	lea    r12,[rip+0x45bb7]        # 64dbc <_obstack_memory_used@@Base+0x1813c>
   1f205:	xor    r13d,r13d
   1f208:	jmp    1eabc <__sprintf_chk@plt+0x1410c>
   1f20d:	mov    rdi,QWORD PTR [r15+0x8]
   1f211:	mov    rdx,r13
   1f214:	mov    rsi,r13
   1f217:	call   fa40 <__sprintf_chk@plt+0x5090>
   1f21c:	jmp    1eb12 <__sprintf_chk@plt+0x14162>
   1f221:	mov    rsi,r14
   1f224:	lea    rdi,[rip+0x4511f]        # 6434a <_obstack_memory_used@@Base+0x176ca>
   1f22b:	call   3c100 <__sprintf_chk@plt+0x31750>
   1f230:	jmp    1e2c2 <__sprintf_chk@plt+0x13912>
   1f235:	xor    ebx,ebx
   1f237:	mov    DWORD PTR [rsp],r12d
   1f23b:	xor    eax,eax
   1f23d:	xchg   r13,r15
   1f240:	mov    QWORD PTR [rsp+0x48],rbp
   1f245:	mov    r12,rbx
   1f248:	mov    ebp,DWORD PTR [rsp+0x18]
   1f24c:	mov    QWORD PTR [rsp+0x80],0x0
   1f258:	mov    QWORD PTR [rsp+0x88],0x0
   1f264:	mov    QWORD PTR [rsp+0x40],r14
   1f269:	jmp    1f29a <__sprintf_chk@plt+0x148ea>
   1f26b:	nop    DWORD PTR [rax+rax*1+0x0]
   1f270:	movdqa xmm0,XMMWORD PTR [rsp+0x80]
   1f279:	shl    rbx,0x4
   1f27d:	movups XMMWORD PTR [rdi+rbx*1],xmm0
   1f281:	mov    rax,QWORD PTR [rsp+0x88]
   1f289:	add    rax,QWORD PTR [r13+0x118]
   1f290:	mov    QWORD PTR [r13+0x130],r12
   1f297:	mov    r12,r14
   1f29a:	mov    QWORD PTR [r13+0x118],rax
   1f2a1:	mov    edx,0x3
   1f2a6:	mov    rsi,r12
   1f2a9:	mov    edi,ebp
   1f2ab:	call   a170 <lseek@plt>
   1f2b0:	mov    rbx,rax
   1f2b3:	cmp    rax,0xffffffffffffffff
   1f2b7:	je     1f512 <__sprintf_chk@plt+0x14b62>
   1f2bd:	mov    edx,0x4
   1f2c2:	mov    rsi,rax
   1f2c5:	mov    edi,ebp
   1f2c7:	call   a170 <lseek@plt>
   1f2cc:	or     r12,rbx
   1f2cf:	mov    r14,rax
   1f2d2:	jne    1f2e1 <__sprintf_chk@plt+0x14931>
   1f2d4:	cmp    rax,QWORD PTR [r13+0x88]
   1f2db:	je     1eec2 <__sprintf_chk@plt+0x14512>
   1f2e1:	mov    rax,r14
   1f2e4:	mov    QWORD PTR [rsp+0x80],rbx
   1f2ec:	mov    rsi,QWORD PTR [r13+0x138]
   1f2f3:	sub    rax,rbx
   1f2f6:	mov    rbx,QWORD PTR [r13+0x130]
   1f2fd:	mov    rdi,QWORD PTR [r13+0x140]
   1f304:	mov    QWORD PTR [rsp+0x88],rax
   1f30c:	lea    r12,[rbx+0x1]
   1f310:	cmp    rbx,rsi
   1f313:	jne    1f270 <__sprintf_chk@plt+0x148c0>
   1f319:	test   rdi,rdi
   1f31c:	je     1f4c1 <__sprintf_chk@plt+0x14b11>
   1f322:	movabs rax,0x555555555555554
   1f32c:	cmp    rbx,rax
   1f32f:	ja     1eccf <__sprintf_chk@plt+0x1431f>
   1f335:	mov    rax,rbx
   1f338:	shr    rax,1
   1f33b:	add    rax,r12
   1f33e:	mov    QWORD PTR [r13+0x138],rax
   1f345:	shl    rax,0x4
   1f349:	mov    rsi,rax
   1f34c:	call   a570 <realloc@plt>
   1f351:	mov    rdi,rax
   1f354:	test   rax,rax
   1f357:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1f35d:	mov    QWORD PTR [r13+0x140],rdi
   1f364:	jmp    1f270 <__sprintf_chk@plt+0x148c0>
   1f369:	xor    edi,edi
   1f36b:	mov    edx,0x5
   1f370:	lea    rsi,[rip+0x4500c]        # 64383 <_obstack_memory_used@@Base+0x17703>
   1f377:	call   a040 <dcgettext@plt>
   1f37c:	mov    rsi,QWORD PTR [rsp+0x78]
   1f381:	mov    rdi,QWORD PTR [r15]
   1f384:	mov    rdx,rax
   1f387:	call   10060 <__sprintf_chk@plt+0x56b0>
   1f38c:	jmp    1d8d7 <__sprintf_chk@plt+0x12f27>
   1f391:	mov    rsi,r14
   1f394:	lea    rdi,[rip+0x44faf]        # 6434a <_obstack_memory_used@@Base+0x176ca>
   1f39b:	call   3c100 <__sprintf_chk@plt+0x31750>
   1f3a0:	jmp    1e461 <__sprintf_chk@plt+0x13ab1>
   1f3a5:	test   rdi,rdi
   1f3a8:	je     1f5e8 <__sprintf_chk@plt+0x14c38>
   1f3ae:	movabs rax,0x555555555555554
   1f3b8:	cmp    r9,rax
   1f3bb:	ja     1eccf <__sprintf_chk@plt+0x1431f>
   1f3c1:	mov    rax,r9
   1f3c4:	mov    QWORD PTR [rsp+0x68],r9
   1f3c9:	shr    rax,1
   1f3cc:	mov    QWORD PTR [rsp+0x60],rdx
   1f3d1:	add    rax,rdx
   1f3d4:	mov    QWORD PTR [r15+0x138],rax
   1f3db:	shl    rax,0x4
   1f3df:	mov    rsi,rax
   1f3e2:	call   a570 <realloc@plt>
   1f3e7:	mov    rdx,QWORD PTR [rsp+0x60]
   1f3ec:	mov    r9,QWORD PTR [rsp+0x68]
   1f3f1:	test   rax,rax
   1f3f4:	mov    rdi,rax
   1f3f7:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1f3fd:	mov    QWORD PTR [r15+0x140],rdi
   1f404:	jmp    1f04f <__sprintf_chk@plt+0x1469f>
   1f409:	mov    rdi,r12
   1f40c:	mov    rbx,QWORD PTR [rsp+0x40]
   1f411:	mov    rbp,QWORD PTR [rsp+0x48]
   1f416:	call   9ce0 <free@plt>
   1f41b:	jmp    1d8d7 <__sprintf_chk@plt+0x12f27>
   1f420:	call   a0a0 <__stack_chk_fail@plt>
   1f425:	mov    edx,0x5
   1f42a:	lea    rsi,[rip+0x44f52]        # 64383 <_obstack_memory_used@@Base+0x17703>
   1f431:	xor    edi,edi
   1f433:	call   a040 <dcgettext@plt>
   1f438:	mov    r12,QWORD PTR [rsp+0x78]
   1f43d:	mov    rdi,QWORD PTR [r15]
   1f440:	mov    rdx,rax
   1f443:	mov    rsi,r12
   1f446:	call   10060 <__sprintf_chk@plt+0x56b0>
   1f44b:	mov    rsi,QWORD PTR [r15]
   1f44e:	mov    rdi,rsi
   1f451:	mov    QWORD PTR [rsp+0x40],rsi
   1f456:	call   a060 <strlen@plt>
   1f45b:	mov    rdi,r12
   1f45e:	mov    r13,rax
   1f461:	call   a060 <strlen@plt>
   1f466:	mov    QWORD PTR [rsp+0x18],r13
   1f46b:	lea    rdi,[r13+rax*1+0x1]
   1f470:	call   a4a0 <malloc@plt>
   1f475:	mov    r13,rax
   1f478:	test   rax,rax
   1f47b:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1f481:	mov    rdx,QWORD PTR [rsp+0x18]
   1f486:	mov    rsi,QWORD PTR [rsp+0x40]
   1f48b:	mov    rdi,rax
   1f48e:	call   a420 <memcpy@plt>
   1f493:	mov    rcx,QWORD PTR [rsp+0x18]
   1f498:	mov    rsi,r12
   1f49b:	add    rcx,r13
   1f49e:	mov    rdi,rcx
   1f4a1:	call   9e80 <strcpy@plt>
   1f4a6:	mov    rdi,r15
   1f4a9:	mov    rdx,r13
   1f4ac:	mov    rsi,r12
   1f4af:	call   1f6a0 <__sprintf_chk@plt+0x14cf0>
   1f4b4:	mov    rdi,r13
   1f4b7:	call   9ce0 <free@plt>
   1f4bc:	jmp    1d8d7 <__sprintf_chk@plt+0x12f27>
   1f4c1:	test   rbx,rbx
   1f4c4:	je     1f59d <__sprintf_chk@plt+0x14bed>
   1f4ca:	mov    eax,0x10
   1f4cf:	mul    rbx
   1f4d2:	seto   dl
   1f4d5:	movzx  edx,dl
   1f4d8:	test   rax,rax
   1f4db:	js     1eccf <__sprintf_chk@plt+0x1431f>
   1f4e1:	test   rdx,rdx
   1f4e4:	jne    1eccf <__sprintf_chk@plt+0x1431f>
   1f4ea:	mov    QWORD PTR [r13+0x138],rsi
   1f4f1:	shl    rsi,0x4
   1f4f5:	mov    rdi,rsi
   1f4f8:	call   a4a0 <malloc@plt>
   1f4fd:	mov    rdi,rax
   1f500:	test   rax,rax
   1f503:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1f509:	lea    r12,[rbx+0x1]
   1f50d:	jmp    1f35d <__sprintf_chk@plt+0x149ad>
   1f512:	call   9e40 <__errno_location@plt>
   1f517:	mov    r12d,DWORD PTR [rsp]
   1f51b:	mov    r14,QWORD PTR [rsp+0x40]
   1f520:	xchg   r15,r13
   1f523:	cmp    DWORD PTR [rax],0x6
   1f526:	mov    rbp,QWORD PTR [rsp+0x48]
   1f52b:	jne    1eee0 <__sprintf_chk@plt+0x14530>
   1f531:	mov    rax,QWORD PTR [r15+0x88]
   1f538:	mov    rdi,r15
   1f53b:	lea    rsi,[rsp+0x80]
   1f543:	mov    QWORD PTR [rsp+0x88],0x0
   1f54f:	mov    QWORD PTR [rsp+0x80],rax
   1f557:	call   32a40 <__sprintf_chk@plt+0x28090>
   1f55c:	mov    rax,QWORD PTR [rsp+0xc0]
   1f564:	jmp    1f0c2 <__sprintf_chk@plt+0x14712>
   1f569:	mov    rsi,r14
   1f56c:	lea    rdi,[rip+0x44dd7]        # 6434a <_obstack_memory_used@@Base+0x176ca>
   1f573:	call   3c100 <__sprintf_chk@plt+0x31750>
   1f578:	jmp    1e499 <__sprintf_chk@plt+0x13ae9>
   1f57d:	mov    rsi,r15
   1f580:	lea    rdi,[rip+0x44df0]        # 64377 <_obstack_memory_used@@Base+0x176f7>
   1f587:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   1f58c:	jmp    1ed12 <__sprintf_chk@plt+0x14362>
   1f591:	lea    rdx,[rip+0x45824]        # 64dbc <_obstack_memory_used@@Base+0x1813c>
   1f598:	jmp    1ed04 <__sprintf_chk@plt+0x14354>
   1f59d:	mov    esi,0x8
   1f5a2:	jmp    1f4ea <__sprintf_chk@plt+0x14b3a>
   1f5a7:	xor    r13d,r13d
   1f5aa:	jmp    1eabc <__sprintf_chk@plt+0x1410c>
   1f5af:	mov    eax,eax
   1f5b1:	mov    DWORD PTR [rcx],0x0
   1f5b7:	mov    DWORD PTR [rcx+rax*1-0x4],0x0
   1f5bf:	jmp    1ebd0 <__sprintf_chk@plt+0x14220>
   1f5c4:	call   9e40 <__errno_location@plt>
   1f5c9:	cmp    DWORD PTR [rax],0x26
   1f5cc:	jne    1e87c <__sprintf_chk@plt+0x13ecc>
   1f5d2:	mov    ecx,r13d
   1f5d5:	mov    rdx,rbx
   1f5d8:	mov    rsi,r14
   1f5db:	mov    edi,r12d
   1f5de:	call   9dd0 <utimensat@plt>
   1f5e3:	jmp    1e86b <__sprintf_chk@plt+0x13ebb>
   1f5e8:	test   r9,r9
   1f5eb:	je     1f63f <__sprintf_chk@plt+0x14c8f>
   1f5ed:	mov    eax,0x10
   1f5f2:	mul    r9
   1f5f5:	seto   dl
   1f5f8:	movzx  edx,dl
   1f5fb:	test   rax,rax
   1f5fe:	js     1eccf <__sprintf_chk@plt+0x1431f>
   1f604:	test   rdx,rdx
   1f607:	jne    1eccf <__sprintf_chk@plt+0x1431f>
   1f60d:	mov    QWORD PTR [r15+0x138],rsi
   1f614:	shl    rsi,0x4
   1f618:	mov    rdi,rsi
   1f61b:	mov    QWORD PTR [rsp+0x60],r9
   1f620:	call   a4a0 <malloc@plt>
   1f625:	mov    rdi,rax
   1f628:	test   rax,rax
   1f62b:	je     1eccf <__sprintf_chk@plt+0x1431f>
   1f631:	mov    r9,QWORD PTR [rsp+0x60]
   1f636:	lea    rdx,[r9+0x1]
   1f63a:	jmp    1f3fd <__sprintf_chk@plt+0x14a4d>
   1f63f:	mov    esi,0x8
   1f644:	jmp    1f60d <__sprintf_chk@plt+0x14c5d>
   1f646:	mov    QWORD PTR [r15+0x18],0x0
   1f64e:	call   9e40 <__errno_location@plt>
   1f653:	mov    eax,DWORD PTR [rax]
   1f655:	jmp    1e551 <__sprintf_chk@plt+0x13ba1>
   1f65a:	call   9e40 <__errno_location@plt>
   1f65f:	mov    DWORD PTR [rax],0x9
   1f665:	jmp    1e87c <__sprintf_chk@plt+0x13ecc>
   1f66a:	mov    eax,eax
   1f66c:	mov    WORD PTR [rcx+rax*1-0x2],0x0
   1f673:	jmp    1ebd0 <__sprintf_chk@plt+0x14220>
   1f678:	mov    QWORD PTR [r15+0x18],0x0
   1f680:	mov    rbp,QWORD PTR [rsp+0x18]
   1f685:	call   9e40 <__errno_location@plt>
   1f68a:	mov    eax,DWORD PTR [rax]
   1f68c:	jmp    1e551 <__sprintf_chk@plt+0x13ba1>
   1f691:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1f69c:	nop    DWORD PTR [rax+0x0]
   1f6a0:	push   r12
   1f6a2:	mov    ecx,0x37
   1f6a7:	push   rbp
   1f6a8:	push   rbx
   1f6a9:	mov    rbx,rdi
   1f6ac:	sub    rsp,0x250
   1f6b3:	mov    rax,QWORD PTR fs:0x28
   1f6bc:	mov    QWORD PTR [rsp+0x248],rax
   1f6c4:	xor    eax,eax
   1f6c6:	lea    rbp,[rsp+0x90]
   1f6ce:	mov    rdi,rbp
   1f6d1:	rep stos QWORD PTR es:[rdi],rax
   1f6d4:	mov    rdi,rbp
   1f6d7:	mov    QWORD PTR [rsp+0x228],rbx
   1f6df:	call   1d5e0 <__sprintf_chk@plt+0x12c30>
   1f6e4:	test   rbx,rbx
   1f6e7:	je     1f730 <__sprintf_chk@plt+0x14d80>
   1f6e9:	cmp    QWORD PTR [rip+0x5f8c7],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   1f6f1:	je     1f730 <__sprintf_chk@plt+0x14d80>
   1f6f3:	mov    rdi,QWORD PTR [rbx]
   1f6f6:	call   27390 <__sprintf_chk@plt+0x1c9e0>
   1f6fb:	mov    r12,rax
   1f6fe:	test   rax,rax
   1f701:	je     1f730 <__sprintf_chk@plt+0x14d80>
   1f703:	mov    edi,DWORD PTR [rbx+0x1a8]
   1f709:	mov    rsi,rsp
   1f70c:	call   a920 <fstat@plt>
   1f711:	test   eax,eax
   1f713:	jne    1f760 <__sprintf_chk@plt+0x14db0>
   1f715:	mov    rax,QWORD PTR [rsp+0x60]
   1f71a:	mov    rdx,QWORD PTR [rsp+0x58]
   1f71f:	mov    QWORD PTR [r12+0x10],rax
   1f724:	mov    QWORD PTR [r12+0x8],rdx
   1f729:	nop    DWORD PTR [rax+0x0]
   1f730:	mov    rdi,rbp
   1f733:	call   44a50 <argp_usage@@Base+0x16d0>
   1f738:	mov    rax,QWORD PTR [rsp+0x248]
   1f740:	sub    rax,QWORD PTR fs:0x28
   1f749:	jne    1f796 <__sprintf_chk@plt+0x14de6>
   1f74b:	add    rsp,0x250
   1f752:	pop    rbx
   1f753:	pop    rbp
   1f754:	pop    r12
   1f756:	ret    
   1f757:	nop    WORD PTR [rax+rax*1+0x0]
   1f760:	cmp    BYTE PTR [rip+0x5fd99],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   1f767:	mov    rsi,QWORD PTR [r12+0x58]
   1f76c:	je     1f788 <__sprintf_chk@plt+0x14dd8>
   1f76e:	test   BYTE PTR [rip+0x5c909],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   1f775:	je     1f730 <__sprintf_chk@plt+0x14d80>
   1f777:	lea    rdi,[rip+0x438c5]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   1f77e:	call   3c100 <__sprintf_chk@plt+0x31750>
   1f783:	jmp    1f730 <__sprintf_chk@plt+0x14d80>
   1f785:	nop    DWORD PTR [rax]
   1f788:	lea    rdi,[rip+0x438b4]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   1f78f:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1f794:	jmp    1f730 <__sprintf_chk@plt+0x14d80>
   1f796:	call   a0a0 <__stack_chk_fail@plt>
   1f79b:	nop    DWORD PTR [rax+rax*1+0x0]
   1f7a0:	endbr64 
   1f7a4:	push   r15
   1f7a6:	push   r14
   1f7a8:	push   r13
   1f7aa:	push   r12
   1f7ac:	push   rbp
   1f7ad:	push   rbx
   1f7ae:	mov    rbx,rsi
   1f7b1:	sub    rsp,0x18
   1f7b5:	movzx  ebp,BYTE PTR [rdi]
   1f7b8:	mov    QWORD PTR [rsp+0x8],rdi
   1f7bd:	test   bpl,bpl
   1f7c0:	je     1f8f8 <__sprintf_chk@plt+0x14f48>
   1f7c6:	mov    QWORD PTR [rsp],0x0
   1f7ce:	mov    r15,rdi
   1f7d1:	mov    r12d,0x1
   1f7d7:	xor    r13d,r13d
   1f7da:	nop    WORD PTR [rax+rax*1+0x0]
   1f7e0:	mov    rdi,r15
   1f7e3:	call   a060 <strlen@plt>
   1f7e8:	lea    r14,[rax+0x1]
   1f7ec:	add    r12,r14
   1f7ef:	test   rbx,rbx
   1f7f2:	je     1f805 <__sprintf_chk@plt+0x14e55>
   1f7f4:	movsx  esi,bpl
   1f7f8:	mov    rdi,rbx
   1f7fb:	call   a0f0 <strchr@plt>
   1f800:	test   rax,rax
   1f803:	je     1f80a <__sprintf_chk@plt+0x14e5a>
   1f805:	add    QWORD PTR [rsp],0x1
   1f80a:	add    r15,r14
   1f80d:	add    r13,0x1
   1f811:	movzx  ebp,BYTE PTR [r15]
   1f815:	test   bpl,bpl
   1f818:	jne    1f7e0 <__sprintf_chk@plt+0x14e30>
   1f81a:	lea    rdi,[r12+0x20]
   1f81f:	call   a4a0 <malloc@plt>
   1f824:	mov    r14,rax
   1f827:	test   rax,rax
   1f82a:	je     1f930 <__sprintf_chk@plt+0x14f80>
   1f830:	lea    r15,[rax+0x20]
   1f834:	mov    rsi,QWORD PTR [rsp+0x8]
   1f839:	mov    rdx,r12
   1f83c:	mov    QWORD PTR [rax],r15
   1f83f:	mov    rdi,r15
   1f842:	call   a420 <memcpy@plt>
   1f847:	mov    rax,QWORD PTR [rsp]
   1f84b:	mov    QWORD PTR [r14+0x8],r13
   1f84f:	lea    rdi,[rax+0x1]
   1f853:	mov    QWORD PTR [r14+0x10],rax
   1f857:	mov    rax,rdi
   1f85a:	shr    rax,0x3d
   1f85e:	setne  al
   1f861:	bt     rdi,0x3c
   1f866:	movzx  eax,al
   1f869:	jb     1f930 <__sprintf_chk@plt+0x14f80>
   1f86f:	test   rax,rax
   1f872:	jne    1f930 <__sprintf_chk@plt+0x14f80>
   1f878:	mov    esi,0x8
   1f87d:	call   a2f0 <calloc@plt>
   1f882:	mov    r12,rax
   1f885:	test   rax,rax
   1f888:	je     1f930 <__sprintf_chk@plt+0x14f80>
   1f88e:	mov    QWORD PTR [r14+0x18],rax
   1f892:	movsx  esi,BYTE PTR [r15]
   1f896:	test   sil,sil
   1f899:	je     1f8d8 <__sprintf_chk@plt+0x14f28>
   1f89b:	xor    ebp,ebp
   1f89d:	nop    DWORD PTR [rax]
   1f8a0:	test   rbx,rbx
   1f8a3:	je     1f8b2 <__sprintf_chk@plt+0x14f02>
   1f8a5:	mov    rdi,rbx
   1f8a8:	call   a0f0 <strchr@plt>
   1f8ad:	test   rax,rax
   1f8b0:	je     1f8be <__sprintf_chk@plt+0x14f0e>
   1f8b2:	lea    rax,[r15+0x1]
   1f8b6:	mov    QWORD PTR [r12+rbp*8],rax
   1f8ba:	add    rbp,0x1
   1f8be:	mov    rdi,r15
   1f8c1:	call   a060 <strlen@plt>
   1f8c6:	lea    r15,[r15+rax*1+0x1]
   1f8cb:	movsx  esi,BYTE PTR [r15]
   1f8cf:	test   sil,sil
   1f8d2:	jne    1f8a0 <__sprintf_chk@plt+0x14ef0>
   1f8d4:	lea    r12,[r12+rbp*8]
   1f8d8:	mov    QWORD PTR [r12],0x0
   1f8e0:	add    rsp,0x18
   1f8e4:	mov    rax,r14
   1f8e7:	pop    rbx
   1f8e8:	pop    rbp
   1f8e9:	pop    r12
   1f8eb:	pop    r13
   1f8ed:	pop    r14
   1f8ef:	pop    r15
   1f8f1:	ret    
   1f8f2:	nop    WORD PTR [rax+rax*1+0x0]
   1f8f8:	mov    edi,0x21
   1f8fd:	call   a4a0 <malloc@plt>
   1f902:	mov    r14,rax
   1f905:	test   rax,rax
   1f908:	je     1f930 <__sprintf_chk@plt+0x14f80>
   1f90a:	lea    r15,[r14+0x20]
   1f90e:	mov    BYTE PTR [r14+0x20],0x0
   1f913:	mov    edi,0x1
   1f918:	mov    QWORD PTR [r14],r15
   1f91b:	mov    QWORD PTR [r14+0x8],0x0
   1f923:	mov    QWORD PTR [r14+0x10],0x0
   1f92b:	jmp    1f878 <__sprintf_chk@plt+0x14ec8>
   1f930:	call   19130 <__sprintf_chk@plt+0xe780>
   1f935:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1f940:	endbr64 
   1f944:	test   rdi,rdi
   1f947:	je     1f9c3 <__sprintf_chk@plt+0x15013>
   1f949:	push   r15
   1f94b:	push   r14
   1f94d:	push   r13
   1f94f:	mov    r13,rsi
   1f952:	push   r12
   1f954:	push   rbp
   1f955:	xor    ebp,ebp
   1f957:	push   rbx
   1f958:	sub    rsp,0x8
   1f95c:	mov    r12,QWORD PTR [rdi+0x10]
   1f960:	mov    r14,QWORD PTR [rdi+0x18]
   1f964:	nop    DWORD PTR [rax+0x0]
   1f968:	cmp    r12,rbp
   1f96b:	jbe    1f992 <__sprintf_chk@plt+0x14fe2>
   1f96d:	lea    rbx,[r12+rbp*1]
   1f971:	mov    rdi,r13
   1f974:	shr    rbx,1
   1f977:	mov    r15,QWORD PTR [r14+rbx*8]
   1f97b:	mov    rsi,r15
   1f97e:	call   a320 <strcmp@plt>
   1f983:	test   eax,eax
   1f985:	js     1f9a8 <__sprintf_chk@plt+0x14ff8>
   1f987:	je     1f9b0 <__sprintf_chk@plt+0x15000>
   1f989:	lea    rbp,[rbx+0x1]
   1f98d:	cmp    r12,rbp
   1f990:	ja     1f96d <__sprintf_chk@plt+0x14fbd>
   1f992:	add    rsp,0x8
   1f996:	xor    eax,eax
   1f998:	pop    rbx
   1f999:	pop    rbp
   1f99a:	pop    r12
   1f99c:	pop    r13
   1f99e:	pop    r14
   1f9a0:	pop    r15
   1f9a2:	ret    
   1f9a3:	nop    DWORD PTR [rax+rax*1+0x0]
   1f9a8:	mov    r12,rbx
   1f9ab:	jmp    1f968 <__sprintf_chk@plt+0x14fb8>
   1f9ad:	nop    DWORD PTR [rax]
   1f9b0:	add    rsp,0x8
   1f9b4:	lea    rax,[r15-0x1]
   1f9b8:	pop    rbx
   1f9b9:	pop    rbp
   1f9ba:	pop    r12
   1f9bc:	pop    r13
   1f9be:	pop    r14
   1f9c0:	pop    r15
   1f9c2:	ret    
   1f9c3:	xor    eax,eax
   1f9c5:	ret    
   1f9c6:	cs nop WORD PTR [rax+rax*1+0x0]
   1f9d0:	endbr64 
   1f9d4:	push   r15
   1f9d6:	push   r14
   1f9d8:	push   r13
   1f9da:	push   r12
   1f9dc:	push   rbp
   1f9dd:	mov    rbp,rdi
   1f9e0:	push   rbx
   1f9e1:	mov    ebx,esi
   1f9e3:	sub    rsp,0x168
   1f9ea:	mov    rax,QWORD PTR fs:0x28
   1f9f3:	mov    QWORD PTR [rsp+0x158],rax
   1f9fb:	xor    eax,eax
   1f9fd:	cmp    BYTE PTR [rip+0x5fd6c],0x0        # 7f770 <obstack_alloc_failed_handler@@Base+0x938>
   1fa04:	mov    BYTE PTR [rsp+0x2e],0x0
   1fa09:	je     1fa19 <__sprintf_chk@plt+0x15069>
   1fa0b:	cmp    QWORD PTR [rip+0x5fe5d],0x0        # 7f870 <obstack_alloc_failed_handler@@Base+0xa38>
   1fa13:	je     1fc48 <__sprintf_chk@plt+0x15298>
   1fa19:	cmp    BYTE PTR [rip+0x5f4c4],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   1fa20:	jne    1fc08 <__sprintf_chk@plt+0x15258>
   1fa26:	cmp    ebx,0x44
   1fa29:	je     1fc11 <__sprintf_chk@plt+0x15261>
   1fa2f:	mov    esi,DWORD PTR [rip+0x5fd1b]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   1fa35:	mov    r13d,DWORD PTR [rip+0x5f954]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   1fa3c:	mov    eax,0x1c0
   1fa41:	test   esi,esi
   1fa43:	jg     1fa55 <__sprintf_chk@plt+0x150a5>
   1fa45:	mov    ecx,DWORD PTR [rip+0x5fd01]        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
   1fa4b:	mov    edx,0x1ff
   1fa50:	test   ecx,ecx
   1fa52:	cmovle eax,edx
   1fa55:	and    r13d,eax
   1fa58:	cmp    BYTE PTR [rip+0x5fcda],0x0        # 7f739 <obstack_alloc_failed_handler@@Base+0x901>
   1fa5f:	je     1fb78 <__sprintf_chk@plt+0x151c8>
   1fa65:	lea    rax,[rsp+0x30]
   1fa6a:	xor    r15d,r15d
   1fa6d:	xor    r14d,r14d
   1fa70:	mov    QWORD PTR [rsp+0x8],rax
   1fa75:	mov    edi,DWORD PTR [rip+0x5c5a5]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1fa7b:	mov    edx,r13d
   1fa7e:	mov    rsi,rbp
   1fa81:	call   a3d0 <mkdirat@plt>
   1fa86:	mov    r12d,eax
   1fa89:	test   eax,eax
   1fa8b:	je     20480 <__sprintf_chk@plt+0x15ad0>
   1fa91:	call   9e40 <__errno_location@plt>
   1fa96:	cmp    DWORD PTR [rax],0x11
   1fa99:	mov    rbx,rax
   1fa9c:	jne    1faff <__sprintf_chk@plt+0x1514f>
   1fa9e:	movzx  ecx,BYTE PTR [rsp+0x2e]
   1faa3:	movzx  eax,BYTE PTR [rip+0x5fc87]        # 7f731 <obstack_alloc_failed_handler@@Base+0x8f9>
   1faaa:	mov    BYTE PTR [rsp+0x10],cl
   1faae:	test   cl,cl
   1fab0:	je     1fb88 <__sprintf_chk@plt+0x151d8>
   1fab6:	test   al,al
   1fab8:	jne    1fb90 <__sprintf_chk@plt+0x151e0>
   1fabe:	mov    ecx,DWORD PTR [rip+0x5f4b0]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   1fac4:	mov    rdx,QWORD PTR [rsp+0x8]
   1fac9:	mov    rsi,rbp
   1facc:	mov    edi,DWORD PTR [rip+0x5c54e]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1fad2:	call   a960 <fstatat@plt>
   1fad7:	test   eax,eax
   1fad9:	jne    1faf9 <__sprintf_chk@plt+0x15149>
   1fadb:	mov    r14d,DWORD PTR [rsp+0x48]
   1fae0:	mov    eax,r14d
   1fae3:	and    eax,0xf000
   1fae8:	cmp    eax,0x4000
   1faed:	je     20621 <__sprintf_chk@plt+0x15c71>
   1faf3:	mov    r15d,0xffffffff
   1faf9:	mov    DWORD PTR [rbx],0x11
   1faff:	xor    esi,esi
   1fb01:	lea    rdx,[rsp+0x2e]
   1fb06:	mov    rdi,rbp
   1fb09:	call   19d40 <__sprintf_chk@plt+0xf390>
   1fb0e:	test   eax,eax
   1fb10:	je     1fbe0 <__sprintf_chk@plt+0x15230>
   1fb16:	cmp    eax,0x1
   1fb19:	je     1fa75 <__sprintf_chk@plt+0x150c5>
   1fb1f:	mov    eax,DWORD PTR [rip+0x5fc0f]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   1fb25:	and    eax,0xfffffffd
   1fb28:	jne    1fb49 <__sprintf_chk@plt+0x15199>
   1fb2a:	xor    r9d,r9d
   1fb2d:	mov    r8d,DWORD PTR [rip+0x5f85c]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   1fb34:	mov    ecx,r15d
   1fb37:	mov    edx,r14d
   1fb3a:	mov    rdi,rbp
   1fb3d:	lea    rsi,[rip+0x5f7dc]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   1fb44:	call   19640 <__sprintf_chk@plt+0xec90>
   1fb49:	mov    rax,QWORD PTR [rsp+0x158]
   1fb51:	sub    rax,QWORD PTR fs:0x28
   1fb5a:	jne    207c7 <__sprintf_chk@plt+0x15e17>
   1fb60:	add    rsp,0x168
   1fb67:	mov    eax,r12d
   1fb6a:	pop    rbx
   1fb6b:	pop    rbp
   1fb6c:	pop    r12
   1fb6e:	pop    r13
   1fb70:	pop    r14
   1fb72:	pop    r15
   1fb74:	ret    
   1fb75:	nop    DWORD PTR [rax]
   1fb78:	or     r13b,0xc0
   1fb7c:	jmp    1fa65 <__sprintf_chk@plt+0x150b5>
   1fb81:	nop    DWORD PTR [rax+0x0]
   1fb88:	test   al,al
   1fb8a:	je     1fc30 <__sprintf_chk@plt+0x15280>
   1fb90:	mov    edi,DWORD PTR [rip+0x5c48a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1fb96:	lea    rdx,[rsp+0xc0]
   1fb9e:	mov    ecx,0x100
   1fba3:	mov    rsi,rbp
   1fba6:	mov    QWORD PTR [rsp+0x18],rdx
   1fbab:	call   a960 <fstatat@plt>
   1fbb0:	test   eax,eax
   1fbb2:	jne    1fbd0 <__sprintf_chk@plt+0x15220>
   1fbb4:	mov    eax,DWORD PTR [rsp+0xd8]
   1fbbb:	mov    rdx,QWORD PTR [rsp+0x18]
   1fbc0:	and    eax,0xf000
   1fbc5:	cmp    eax,0xa000
   1fbca:	je     1fdb0 <__sprintf_chk@plt+0x15400>
   1fbd0:	mov    DWORD PTR [rbx],0x11
   1fbd6:	jmp    1fabe <__sprintf_chk@plt+0x1510e>
   1fbdb:	nop    DWORD PTR [rax+rax*1+0x0]
   1fbe0:	cmp    DWORD PTR [rbx],0x11
   1fbe3:	je     1fb1f <__sprintf_chk@plt+0x1516f>
   1fbe9:	mov    rsi,rbp
   1fbec:	lea    rdi,[rip+0x445ed]        # 641e0 <_obstack_memory_used@@Base+0x17560>
   1fbf3:	mov    r12d,0x1
   1fbf9:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1fbfe:	jmp    1fb49 <__sprintf_chk@plt+0x15199>
   1fc03:	nop    DWORD PTR [rax+rax*1+0x0]
   1fc08:	call   59b10 <_obstack_memory_used@@Base+0xce90>
   1fc0d:	test   al,al
   1fc0f:	jne    1fc90 <__sprintf_chk@plt+0x152e0>
   1fc11:	cmp    BYTE PTR [rip+0x5f891],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   1fc18:	jne    1fa2f <__sprintf_chk@plt+0x1507f>
   1fc1e:	xchg   ax,ax
   1fc20:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   1fc25:	jmp    1fa2f <__sprintf_chk@plt+0x1507f>
   1fc2a:	nop    WORD PTR [rax+rax*1+0x0]
   1fc30:	cmp    DWORD PTR [rip+0x5fafd],0x2        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   1fc37:	jbe    1fabe <__sprintf_chk@plt+0x1510e>
   1fc3d:	jmp    1faff <__sprintf_chk@plt+0x1514f>
   1fc42:	nop    WORD PTR [rax+rax*1+0x0]
   1fc48:	lea    r13,[rsp+0xc0]
   1fc50:	lea    r12,[rip+0x4799d]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   1fc57:	mov    edi,DWORD PTR [rip+0x5c3c3]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1fc5d:	xor    ecx,ecx
   1fc5f:	mov    rdx,r13
   1fc62:	mov    rsi,r12
   1fc65:	call   a960 <fstatat@plt>
   1fc6a:	test   eax,eax
   1fc6c:	jne    1fd80 <__sprintf_chk@plt+0x153d0>
   1fc72:	mov    rax,QWORD PTR [rsp+0xc0]
   1fc7a:	mov    QWORD PTR [rip+0x5fbef],rax        # 7f870 <obstack_alloc_failed_handler@@Base+0xa38>
   1fc81:	jmp    1fa19 <__sprintf_chk@plt+0x15069>
   1fc86:	cs nop WORD PTR [rax+rax*1+0x0]
   1fc90:	xor    esi,esi
   1fc92:	mov    rdi,rbp
   1fc95:	call   26ae0 <__sprintf_chk@plt+0x1c130>
   1fc9a:	mov    QWORD PTR [rsp+0x10],rax
   1fc9f:	test   rax,rax
   1fca2:	je     1fc11 <__sprintf_chk@plt+0x15261>
   1fca8:	mov    r12,QWORD PTR [rip+0x5f801]        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   1fcaf:	movzx  ebx,BYTE PTR [r12]
   1fcb4:	test   bl,bl
   1fcb6:	je     2067d <__sprintf_chk@plt+0x15ccd>
   1fcbc:	mov    r15,r12
   1fcbf:	xor    r14d,r14d
   1fcc2:	xor    ecx,ecx
   1fcc4:	mov    BYTE PTR [rsp+0x8],bl
   1fcc8:	mov    r13d,ebx
   1fccb:	mov    r12d,r14d
   1fcce:	mov    ebx,ecx
   1fcd0:	mov    r14,r15
   1fcd3:	jmp    1fd2a <__sprintf_chk@plt+0x1537a>
   1fcd5:	nop    DWORD PTR [rax]
   1fcd8:	movsx  eax,r13b
   1fcdc:	cmp    r12d,eax
   1fcdf:	jne    204d4 <__sprintf_chk@plt+0x15b24>
   1fce5:	cmp    r13b,0x54
   1fce9:	jne    1fd39 <__sprintf_chk@plt+0x15389>
   1fceb:	cmp    r12d,0x54
   1fcef:	jne    205c7 <__sprintf_chk@plt+0x15c17>
   1fcf5:	cmp    BYTE PTR [r15+0x1],0x0
   1fcfa:	jne    1fd04 <__sprintf_chk@plt+0x15354>
   1fcfc:	test   ebx,ebx
   1fcfe:	je     20642 <__sprintf_chk@plt+0x15c92>
   1fd04:	xor    r12d,r12d
   1fd07:	nop    WORD PTR [rax+rax*1+0x0]
   1fd10:	mov    rdi,r15
   1fd13:	call   a060 <strlen@plt>
   1fd18:	lea    r15,[r15+rax*1+0x1]
   1fd1d:	movzx  r13d,BYTE PTR [r15]
   1fd21:	test   r13b,r13b
   1fd24:	je     1fe08 <__sprintf_chk@plt+0x15458>
   1fd2a:	test   r12d,r12d
   1fd2d:	jne    1fcd8 <__sprintf_chk@plt+0x15328>
   1fd2f:	cmp    r13b,0x54
   1fd33:	je     205c7 <__sprintf_chk@plt+0x15c17>
   1fd39:	cmp    r13b,0x58
   1fd3d:	je     1fd60 <__sprintf_chk@plt+0x153b0>
   1fd3f:	cmp    r13b,0x52
   1fd43:	jne    1fd10 <__sprintf_chk@plt+0x15360>
   1fd45:	cmp    BYTE PTR [r15+0x1],0x0
   1fd4a:	jne    1fd70 <__sprintf_chk@plt+0x153c0>
   1fd4c:	test   ebx,ebx
   1fd4e:	je     2065e <__sprintf_chk@plt+0x15cae>
   1fd54:	mov    r12d,0x54
   1fd5a:	xor    ebx,ebx
   1fd5c:	jmp    1fd10 <__sprintf_chk@plt+0x15360>
   1fd5e:	xchg   ax,ax
   1fd60:	test   ebx,ebx
   1fd62:	jne    20605 <__sprintf_chk@plt+0x15c55>
   1fd68:	mov    ebx,0x1
   1fd6d:	jmp    1fd10 <__sprintf_chk@plt+0x15360>
   1fd6f:	nop
   1fd70:	mov    r12d,0x54
   1fd76:	jmp    1fd10 <__sprintf_chk@plt+0x15360>
   1fd78:	nop    DWORD PTR [rax+rax*1+0x0]
   1fd80:	cmp    BYTE PTR [rip+0x5f779],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   1fd87:	je     1fded <__sprintf_chk@plt+0x1543d>
   1fd89:	test   BYTE PTR [rip+0x5c2ee],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   1fd90:	je     1fa19 <__sprintf_chk@plt+0x15069>
   1fd96:	mov    rsi,r12
   1fd99:	lea    rdi,[rip+0x432a3]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   1fda0:	call   3c100 <__sprintf_chk@plt+0x31750>
   1fda5:	jmp    1fa19 <__sprintf_chk@plt+0x15069>
   1fdaa:	nop    WORD PTR [rax+rax*1+0x0]
   1fdb0:	mov    edi,DWORD PTR [rip+0x5c26a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1fdb6:	xor    ecx,ecx
   1fdb8:	mov    rsi,rbp
   1fdbb:	call   a960 <fstatat@plt>
   1fdc0:	test   eax,eax
   1fdc2:	jne    1fbd0 <__sprintf_chk@plt+0x15220>
   1fdc8:	mov    eax,DWORD PTR [rsp+0xd8]
   1fdcf:	and    eax,0xf000
   1fdd4:	cmp    eax,0x4000
   1fdd9:	jne    1fbd0 <__sprintf_chk@plt+0x15220>
   1fddf:	mov    DWORD PTR [rbx],0x11
   1fde5:	xor    r12d,r12d
   1fde8:	jmp    1fb49 <__sprintf_chk@plt+0x15199>
   1fded:	mov    rsi,r12
   1fdf0:	lea    rdi,[rip+0x4324c]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   1fdf7:	call   3bad0 <__sprintf_chk@plt+0x31120>
   1fdfc:	jmp    1fa19 <__sprintf_chk@plt+0x15069>
   1fe01:	nop    DWORD PTR [rax+0x0]
   1fe08:	mov    rax,r14
   1fe0b:	mov    r14d,r12d
   1fe0e:	mov    ecx,ebx
   1fe10:	movzx  ebx,BYTE PTR [rsp+0x8]
   1fe15:	mov    r12,rax
   1fe18:	test   r14d,r14d
   1fe1b:	jne    20586 <__sprintf_chk@plt+0x15bd6>
   1fe21:	test   ecx,ecx
   1fe23:	je     1fe71 <__sprintf_chk@plt+0x154c1>
   1fe25:	test   BYTE PTR [rip+0x5c250],0x2        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   1fe2c:	je     1fe71 <__sprintf_chk@plt+0x154c1>
   1fe2e:	mov    rax,QWORD PTR [rip+0x5f6d3]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1fe35:	test   rax,rax
   1fe38:	je     1fe3c <__sprintf_chk@plt+0x1548c>
   1fe3a:	call   rax
   1fe3c:	mov    edx,0x5
   1fe41:	lea    rsi,[rip+0x44c90]        # 64ad8 <_obstack_memory_used@@Base+0x17e58>
   1fe48:	xor    edi,edi
   1fe4a:	call   a040 <dcgettext@plt>
   1fe4f:	xor    esi,esi
   1fe51:	xor    edi,edi
   1fe53:	mov    rdx,rax
   1fe56:	xor    eax,eax
   1fe58:	call   a640 <error@plt>
   1fe5d:	mov    r12,QWORD PTR [rip+0x5f64c]        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   1fe64:	movzx  ebx,BYTE PTR [r12]
   1fe69:	test   bl,bl
   1fe6b:	je     2067d <__sprintf_chk@plt+0x15ccd>
   1fe71:	mov    QWORD PTR [rsp+0x18],rbp
   1fe76:	xor    r13d,r13d
   1fe79:	jmp    1fe9a <__sprintf_chk@plt+0x154ea>
   1fe7b:	nop    DWORD PTR [rax+rax*1+0x0]
   1fe80:	mov    rdi,r12
   1fe83:	call   a060 <strlen@plt>
   1fe88:	lea    r12,[r12+rax*1+0x1]
   1fe8d:	movzx  ebx,BYTE PTR [r12]
   1fe92:	test   bl,bl
   1fe94:	je     201c0 <__sprintf_chk@plt+0x15810>
   1fe9a:	cmp    bl,0x58
   1fe9d:	je     1ffb0 <__sprintf_chk@plt+0x15600>
   1fea3:	mov    rdi,r12
   1fea6:	call   a060 <strlen@plt>
   1feab:	cmp    bl,0x52
   1feae:	jne    1fe80 <__sprintf_chk@plt+0x154d0>
   1feb0:	lea    r14,[r12+rax*1+0x1]
   1feb5:	cmp    BYTE PTR [r12+0x1],0x0
   1febb:	lea    rbp,[r12+0x1]
   1fec0:	lea    r15,[r14+0x1]
   1fec4:	jne    20150 <__sprintf_chk@plt+0x157a0>
   1feca:	cmp    BYTE PTR [r14+0x1],0x0
   1fecf:	jne    20130 <__sprintf_chk@plt+0x15780>
   1fed5:	cmp    BYTE PTR [rbp+0x0],0x0
   1fed9:	je     20080 <__sprintf_chk@plt+0x156d0>
   1fedf:	cmp    BYTE PTR [r15],0x0
   1fee3:	cmove  r15,r13
   1fee7:	mov    edi,DWORD PTR [rip+0x5c133]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   1feed:	mov    rcx,r15
   1fef0:	mov    rsi,rbp
   1fef3:	mov    edx,edi
   1fef5:	call   a7d0 <renameat@plt>
   1fefa:	test   eax,eax
   1fefc:	je     20090 <__sprintf_chk@plt+0x156e0>
   1ff02:	call   9e40 <__errno_location@plt>
   1ff07:	mov    r12d,DWORD PTR [rax]
   1ff0a:	mov    rbx,rax
   1ff0d:	cmp    r12d,0x2
   1ff11:	je     20180 <__sprintf_chk@plt+0x157d0>
   1ff17:	mov    r14,rbp
   1ff1a:	mov    rbp,QWORD PTR [rsp+0x18]
   1ff1f:	mov    rax,QWORD PTR [rip+0x5f5e2]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   1ff26:	test   rax,rax
   1ff29:	je     1ff2d <__sprintf_chk@plt+0x1557d>
   1ff2b:	call   rax
   1ff2d:	lea    rbx,[rip+0x5c10c]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   1ff34:	mov    rsi,r15
   1ff37:	mov    edi,0x1
   1ff3c:	mov    rdx,rbx
   1ff3f:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   1ff44:	mov    rsi,r14
   1ff47:	mov    rdx,rbx
   1ff4a:	xor    edi,edi
   1ff4c:	mov    r15,rax
   1ff4f:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   1ff54:	mov    edx,0x5
   1ff59:	lea    rsi,[rip+0x4444a]        # 643aa <_obstack_memory_used@@Base+0x1772a>
   1ff60:	xor    edi,edi
   1ff62:	mov    r14,rax
   1ff65:	call   a040 <dcgettext@plt>
   1ff6a:	mov    r8,r15
   1ff6d:	mov    rcx,r14
   1ff70:	mov    esi,r12d
   1ff73:	mov    rdx,rax
   1ff76:	xor    edi,edi
   1ff78:	xor    eax,eax
   1ff7a:	call   a640 <error@plt>
   1ff7f:	mov    DWORD PTR [rip+0x5f13b],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   1ff89:	mov    rdi,r13
   1ff8c:	call   9ce0 <free@plt>
   1ff91:	mov    rdi,QWORD PTR [rsp+0x10]
   1ff96:	call   9ce0 <free@plt>
   1ff9b:	cmp    BYTE PTR [rip+0x5f507],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   1ffa2:	jne    1fa2f <__sprintf_chk@plt+0x1507f>
   1ffa8:	jmp    1fc20 <__sprintf_chk@plt+0x15270>
   1ffad:	nop    DWORD PTR [rax]
   1ffb0:	lea    r14,[r12+0x1]
   1ffb5:	mov    rdi,r14
   1ffb8:	call   a060 <strlen@plt>
   1ffbd:	mov    rdi,r13
   1ffc0:	lea    rsi,[rax+0xc]
   1ffc4:	mov    rbx,rax
   1ffc7:	call   a570 <realloc@plt>
   1ffcc:	mov    r13,rax
   1ffcf:	test   rax,rax
   1ffd2:	je     207cc <__sprintf_chk@plt+0x15e1c>
   1ffd8:	mov    rdi,rax
   1ffdb:	mov    rdx,rbx
   1ffde:	mov    rsi,r14
   1ffe1:	call   a420 <memcpy@plt>
   1ffe6:	lea    rax,[r13+rbx*1+0x1]
   1ffeb:	mov    r8d,0x5858
   1fff1:	mov    rdi,r13
   1fff4:	movabs rcx,0x585858582e726174
   1fffe:	mov    BYTE PTR [r13+rbx*1+0x0],0x2f
   20004:	mov    QWORD PTR [rax],rcx
   20007:	mov    WORD PTR [rax+0x8],r8w
   2000c:	mov    BYTE PTR [rax+0xa],0x0
   20010:	call   a5b0 <mkdtemp@plt>
   20015:	test   rax,rax
   20018:	jne    1fe80 <__sprintf_chk@plt+0x154d0>
   2001e:	mov    rax,QWORD PTR [rip+0x5f4e3]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   20025:	mov    rbp,QWORD PTR [rsp+0x18]
   2002a:	test   rax,rax
   2002d:	je     20031 <__sprintf_chk@plt+0x15681>
   2002f:	call   rax
   20031:	mov    rsi,r13
   20034:	xor    edi,edi
   20036:	lea    rdx,[rip+0x5c003]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   2003d:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   20042:	xor    edi,edi
   20044:	mov    edx,0x5
   20049:	lea    rsi,[rip+0x44ab0]        # 64b00 <_obstack_memory_used@@Base+0x17e80>
   20050:	mov    r14,rax
   20053:	call   a040 <dcgettext@plt>
   20058:	mov    r12,rax
   2005b:	call   9e40 <__errno_location@plt>
   20060:	mov    rcx,r14
   20063:	mov    rdx,r12
   20066:	xor    edi,edi
   20068:	mov    esi,DWORD PTR [rax]
   2006a:	xor    eax,eax
   2006c:	call   a640 <error@plt>
   20071:	jmp    1ff7f <__sprintf_chk@plt+0x155cf>
   20076:	cs nop WORD PTR [rax+rax*1+0x0]
   20080:	mov    rbp,r13
   20083:	jmp    1fee7 <__sprintf_chk@plt+0x15537>
   20088:	nop    DWORD PTR [rax+rax*1+0x0]
   20090:	mov    rbx,QWORD PTR [rip+0x5f6a9]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   20097:	test   rbx,rbx
   2009a:	je     20170 <__sprintf_chk@plt+0x157c0>
   200a0:	mov    r12d,DWORD PTR [rip+0x5f721]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   200a7:	jmp    200bc <__sprintf_chk@plt+0x1570c>
   200a9:	nop    DWORD PTR [rax+0x0]
   200b0:	mov    rbx,QWORD PTR [rbx]
   200b3:	test   rbx,rbx
   200b6:	je     20170 <__sprintf_chk@plt+0x157c0>
   200bc:	cmp    DWORD PTR [rbx+0x5c],r12d
   200c0:	jne    200b0 <__sprintf_chk@plt+0x15700>
   200c2:	mov    rdi,QWORD PTR [rbx+0xa0]
   200c9:	mov    rsi,rbp
   200cc:	mov    QWORD PTR [rsp+0x8],rdi
   200d1:	call   a320 <strcmp@plt>
   200d6:	mov    rdi,QWORD PTR [rsp+0x8]
   200db:	test   eax,eax
   200dd:	jne    200b0 <__sprintf_chk@plt+0x15700>
   200df:	call   9ce0 <free@plt>
   200e4:	mov    rdi,r15
   200e7:	call   a060 <strlen@plt>
   200ec:	lea    r12,[rax+0x1]
   200f0:	mov    rdi,r12
   200f3:	call   a4a0 <malloc@plt>
   200f8:	mov    rdi,rax
   200fb:	test   rax,rax
   200fe:	je     207cc <__sprintf_chk@plt+0x15e1c>
   20104:	mov    rdx,r12
   20107:	mov    rsi,r15
   2010a:	mov    r12,r14
   2010d:	call   a420 <memcpy@plt>
   20112:	mov    rdi,r15
   20115:	mov    QWORD PTR [rbx+0xa0],rax
   2011c:	call   a060 <strlen@plt>
   20121:	mov    QWORD PTR [rbx+0x98],rax
   20128:	jmp    1fe80 <__sprintf_chk@plt+0x154d0>
   2012d:	nop    DWORD PTR [rax]
   20130:	movzx  edx,BYTE PTR [rip+0x5f679]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   20137:	mov    rdi,r15
   2013a:	xor    esi,esi
   2013c:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   20141:	mov    r15,rax
   20144:	jmp    1fed5 <__sprintf_chk@plt+0x15525>
   20149:	nop    DWORD PTR [rax+0x0]
   20150:	movzx  edx,BYTE PTR [rip+0x5f659]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   20157:	mov    rdi,rbp
   2015a:	xor    esi,esi
   2015c:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   20161:	mov    rbp,rax
   20164:	jmp    1feca <__sprintf_chk@plt+0x1551a>
   20169:	nop    DWORD PTR [rax+0x0]
   20170:	mov    r12,r14
   20173:	jmp    1fe80 <__sprintf_chk@plt+0x154d0>
   20178:	nop    DWORD PTR [rax+rax*1+0x0]
   20180:	lea    rsi,[rsp+0x2f]
   20185:	mov    rdi,r15
   20188:	call   19a50 <__sprintf_chk@plt+0xf0a0>
   2018d:	test   eax,eax
   2018f:	jne    1ff17 <__sprintf_chk@plt+0x15567>
   20195:	mov    edi,DWORD PTR [rip+0x5be85]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   2019b:	mov    rcx,r15
   2019e:	mov    rsi,rbp
   201a1:	mov    edx,edi
   201a3:	call   a7d0 <renameat@plt>
   201a8:	test   eax,eax
   201aa:	je     20170 <__sprintf_chk@plt+0x157c0>
   201ac:	mov    r14,rbp
   201af:	mov    r12d,DWORD PTR [rbx]
   201b2:	mov    rbp,QWORD PTR [rsp+0x18]
   201b7:	jmp    1ff1f <__sprintf_chk@plt+0x1556f>
   201bc:	nop    DWORD PTR [rax+0x0]
   201c0:	mov    rbp,QWORD PTR [rsp+0x18]
   201c5:	mov    r12,QWORD PTR [rip+0x5f2e4]        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   201cc:	mov    rdi,r13
   201cf:	call   9ce0 <free@plt>
   201d4:	mov    rdi,r12
   201d7:	lea    rsi,[rip+0x441e3]        # 643c1 <_obstack_memory_used@@Base+0x17741>
   201de:	xor    r12d,r12d
   201e1:	call   1f7a0 <__sprintf_chk@plt+0x14df0>
   201e6:	mov    rbx,QWORD PTR [rsp+0x10]
   201eb:	mov    r14,rax
   201ee:	cmp    BYTE PTR [rbx],0x0
   201f1:	je     203c8 <__sprintf_chk@plt+0x15a18>
   201f7:	lea    r13,[rsp+0xc0]
   201ff:	jmp    2027f <__sprintf_chk@plt+0x158cf>
   20201:	nop    DWORD PTR [rax+0x0]
   20208:	call   9e40 <__errno_location@plt>
   2020d:	cmp    DWORD PTR [rax],0x2
   20210:	je     20269 <__sprintf_chk@plt+0x158b9>
   20212:	cmp    BYTE PTR [rip+0x5f2e7],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   20219:	je     204a0 <__sprintf_chk@plt+0x15af0>
   2021f:	test   BYTE PTR [rip+0x5be58],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   20226:	jne    20572 <__sprintf_chk@plt+0x15bc2>
   2022c:	mov    rax,QWORD PTR [rip+0x5f2d5]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   20233:	test   rax,rax
   20236:	je     2023a <__sprintf_chk@plt+0x1588a>
   20238:	call   rax
   2023a:	mov    rdi,r12
   2023d:	call   4b670 <argp_usage@@Base+0x82f0>
   20242:	mov    edx,0x5
   20247:	lea    rsi,[rip+0x448ea]        # 64b38 <_obstack_memory_used@@Base+0x17eb8>
   2024e:	mov    r15,rax
   20251:	xor    edi,edi
   20253:	call   a040 <dcgettext@plt>
   20258:	mov    rcx,r15
   2025b:	xor    esi,esi
   2025d:	xor    edi,edi
   2025f:	mov    rdx,rax
   20262:	xor    eax,eax
   20264:	call   a640 <error@plt>
   20269:	mov    rdi,rbx
   2026c:	call   a060 <strlen@plt>
   20271:	lea    rbx,[rbx+rax*1+0x1]
   20276:	cmp    BYTE PTR [rbx],0x0
   20279:	je     203c8 <__sprintf_chk@plt+0x15a18>
   2027f:	mov    rdi,r12
   20282:	call   9ce0 <free@plt>
   20287:	mov    rsi,rbx
   2028a:	mov    rdi,rbp
   2028d:	call   322b0 <__sprintf_chk@plt+0x27900>
   20292:	mov    ecx,DWORD PTR [rip+0x5ecdc]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   20298:	mov    edi,DWORD PTR [rip+0x5bd82]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   2029e:	mov    rdx,r13
   202a1:	mov    rsi,rax
   202a4:	mov    r12,rax
   202a7:	call   a960 <fstatat@plt>
   202ac:	test   eax,eax
   202ae:	jne    20208 <__sprintf_chk@plt+0x15858>
   202b4:	mov    rsi,rbx
   202b7:	mov    rdi,r14
   202ba:	call   1f940 <__sprintf_chk@plt+0x14f90>
   202bf:	test   rax,rax
   202c2:	je     202f0 <__sprintf_chk@plt+0x15940>
   202c4:	movzx  eax,BYTE PTR [rax]
   202c7:	cmp    al,0x44
   202c9:	je     203f0 <__sprintf_chk@plt+0x15a40>
   202cf:	cmp    al,0x59
   202d1:	jne    20269 <__sprintf_chk@plt+0x158b9>
   202d3:	mov    eax,DWORD PTR [rsp+0xd8]
   202da:	and    eax,0xf000
   202df:	cmp    eax,0x4000
   202e4:	jne    20269 <__sprintf_chk@plt+0x158b9>
   202e6:	cs nop WORD PTR [rax+rax*1+0x0]
   202f0:	cmp    BYTE PTR [rip+0x5f479],0x0        # 7f770 <obstack_alloc_failed_handler@@Base+0x938>
   202f7:	je     20338 <__sprintf_chk@plt+0x15988>
   202f9:	mov    rax,QWORD PTR [rip+0x5f570]        # 7f870 <obstack_alloc_failed_handler@@Base+0xa38>
   20300:	cmp    QWORD PTR [rsp+0xc0],rax
   20308:	je     20338 <__sprintf_chk@plt+0x15988>
   2030a:	mov    rax,QWORD PTR [rip+0x5f1f7]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   20311:	test   rax,rax
   20314:	je     20318 <__sprintf_chk@plt+0x15968>
   20316:	call   rax
   20318:	mov    rdi,r12
   2031b:	call   4b670 <argp_usage@@Base+0x82f0>
   20320:	mov    edx,0x5
   20325:	lea    rsi,[rip+0x4483c]        # 64b68 <_obstack_memory_used@@Base+0x17ee8>
   2032c:	mov    r15,rax
   2032f:	jmp    20251 <__sprintf_chk@plt+0x158a1>
   20334:	nop    DWORD PTR [rax+0x0]
   20338:	cmp    BYTE PTR [rip+0x5f461],0x0        # 7f7a0 <obstack_alloc_failed_handler@@Base+0x968>
   2033f:	jne    204b8 <__sprintf_chk@plt+0x15b08>
   20345:	mov    edi,DWORD PTR [rip+0x5ed75]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   2034b:	test   edi,edi
   2034d:	jne    2051c <__sprintf_chk@plt+0x15b6c>
   20353:	mov    esi,0x1
   20358:	mov    rdi,r12
   2035b:	call   26bf0 <__sprintf_chk@plt+0x1c240>
   20360:	test   eax,eax
   20362:	jne    20269 <__sprintf_chk@plt+0x158b9>
   20368:	call   9e40 <__errno_location@plt>
   2036d:	mov    r15d,DWORD PTR [rax]
   20370:	mov    rax,QWORD PTR [rip+0x5f191]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   20377:	test   rax,rax
   2037a:	je     2037e <__sprintf_chk@plt+0x159ce>
   2037c:	call   rax
   2037e:	mov    rdi,r12
   20381:	call   4b670 <argp_usage@@Base+0x82f0>
   20386:	mov    edx,0x5
   2038b:	lea    rsi,[rip+0x44044]        # 643d6 <_obstack_memory_used@@Base+0x17756>
   20392:	xor    edi,edi
   20394:	mov    QWORD PTR [rsp+0x8],rax
   20399:	call   a040 <dcgettext@plt>
   2039e:	mov    rcx,QWORD PTR [rsp+0x8]
   203a3:	mov    esi,r15d
   203a6:	xor    edi,edi
   203a8:	mov    rdx,rax
   203ab:	xor    eax,eax
   203ad:	call   a640 <error@plt>
   203b2:	mov    DWORD PTR [rip+0x5ed08],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   203bc:	jmp    20269 <__sprintf_chk@plt+0x158b9>
   203c1:	nop    DWORD PTR [rax+0x0]
   203c8:	mov    rdi,r12
   203cb:	call   9ce0 <free@plt>
   203d0:	mov    rdi,QWORD PTR [r14+0x18]
   203d4:	call   9ce0 <free@plt>
   203d9:	mov    rdi,r14
   203dc:	call   9ce0 <free@plt>
   203e1:	mov    rdi,QWORD PTR [rsp+0x10]
   203e6:	call   9ce0 <free@plt>
   203eb:	jmp    1fa2f <__sprintf_chk@plt+0x1507f>
   203f0:	mov    eax,DWORD PTR [rsp+0xd8]
   203f7:	and    eax,0xf000
   203fc:	cmp    eax,0x4000
   20401:	jne    202f0 <__sprintf_chk@plt+0x15940>
   20407:	jmp    20269 <__sprintf_chk@plt+0x158b9>
   2040c:	mov    edx,DWORD PTR [rip+0x5f33e]        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   20412:	mov    eax,0x1c0
   20417:	test   edx,edx
   20419:	jg     2042a <__sprintf_chk@plt+0x15a7a>
   2041b:	cmp    DWORD PTR [rip+0x5f32a],0x0        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
   20422:	mov    edx,0x1ff
   20427:	cmovle eax,edx
   2042a:	and    eax,r14d
   2042d:	cmp    BYTE PTR [rip+0x5f305],0x1        # 7f739 <obstack_alloc_failed_handler@@Base+0x901>
   20434:	mov    r8d,0x35
   2043a:	sbb    edx,edx
   2043c:	mov    ecx,0x100
   20441:	mov    rsi,rbp
   20444:	mov    edi,0xffffffff
   20449:	and    edx,0xc0
   2044f:	or     eax,edx
   20451:	mov    edx,eax
   20453:	mov    r13d,eax
   20456:	call   16fe0 <__sprintf_chk@plt+0xc630>
   2045b:	mov    r12d,eax
   2045e:	test   eax,eax
   20460:	jne    207b1 <__sprintf_chk@plt+0x15e01>
   20466:	lea    rax,[rip+0x5ef0b]        # 7f378 <obstack_alloc_failed_handler@@Base+0x540>
   2046d:	mov    rsi,QWORD PTR [rsp+0x8]
   20472:	mov    ecx,0x24
   20477:	mov    rdi,rax
   2047a:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   2047c:	nop    DWORD PTR [rax+0x0]
   20480:	mov    r14d,DWORD PTR [rip+0x5f2c1]        # 7f748 <obstack_alloc_failed_handler@@Base+0x910>
   20487:	mov    r9d,0x100
   2048d:	mov    r15d,0x1ff
   20493:	not    r14d
   20496:	and    r14d,r13d
   20499:	jmp    1fb2d <__sprintf_chk@plt+0x1517d>
   2049e:	xchg   ax,ax
   204a0:	mov    rsi,r12
   204a3:	lea    rdi,[rip+0x42b99]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   204aa:	call   3bad0 <__sprintf_chk@plt+0x31120>
   204af:	jmp    2022c <__sprintf_chk@plt+0x1587c>
   204b4:	nop    DWORD PTR [rax+0x0]
   204b8:	mov    rsi,r12
   204bb:	lea    rdi,[rip+0x43e36]        # 642f8 <_obstack_memory_used@@Base+0x17678>
   204c2:	call   33f00 <__sprintf_chk@plt+0x29550>
   204c7:	test   eax,eax
   204c9:	jne    20345 <__sprintf_chk@plt+0x15995>
   204cf:	jmp    20269 <__sprintf_chk@plt+0x158b9>
   204d4:	mov    rax,QWORD PTR [rip+0x5f02d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   204db:	mov    r14d,r12d
   204de:	test   rax,rax
   204e1:	je     204e5 <__sprintf_chk@plt+0x15b35>
   204e3:	call   rax
   204e5:	mov    edx,0x5
   204ea:	lea    rsi,[rip+0x444d7]        # 649c8 <_obstack_memory_used@@Base+0x17d48>
   204f1:	xor    edi,edi
   204f3:	call   a040 <dcgettext@plt>
   204f8:	movzx  r8d,r13b
   204fc:	mov    ecx,r14d
   204ff:	xor    esi,esi
   20501:	mov    rdx,rax
   20504:	xor    edi,edi
   20506:	xor    eax,eax
   20508:	call   a640 <error@plt>
   2050d:	mov    DWORD PTR [rip+0x5ebad],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   20517:	jmp    1fc11 <__sprintf_chk@plt+0x15261>
   2051c:	mov    rsi,r12
   2051f:	xor    edi,edi
   20521:	lea    rdx,[rip+0x5bb18]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   20528:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2052d:	mov    rcx,QWORD PTR [rip+0x5ea8c]        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
   20534:	xor    edi,edi
   20536:	mov    edx,0x5
   2053b:	lea    rsi,[rip+0x43e83]        # 643c5 <_obstack_memory_used@@Base+0x17745>
   20542:	mov    r15,rax
   20545:	mov    QWORD PTR [rsp+0x8],rcx
   2054a:	call   a040 <dcgettext@plt>
   2054f:	mov    rcx,QWORD PTR [rsp+0x8]
   20554:	mov    r8,r15
   20557:	mov    rdi,QWORD PTR [rip+0x5eb3a]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2055e:	mov    rdx,rax
   20561:	mov    esi,0x1
   20566:	xor    eax,eax
   20568:	call   a840 <__fprintf_chk@plt>
   2056d:	jmp    20353 <__sprintf_chk@plt+0x159a3>
   20572:	mov    rsi,r12
   20575:	lea    rdi,[rip+0x42ac7]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   2057c:	call   3c100 <__sprintf_chk@plt+0x31750>
   20581:	jmp    2022c <__sprintf_chk@plt+0x1587c>
   20586:	mov    rax,QWORD PTR [rip+0x5ef7b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2058d:	test   rax,rax
   20590:	je     20594 <__sprintf_chk@plt+0x15be4>
   20592:	call   rax
   20594:	mov    edx,0x5
   20599:	lea    rsi,[rip+0x44500]        # 64aa0 <_obstack_memory_used@@Base+0x17e20>
   205a0:	xor    edi,edi
   205a2:	call   a040 <dcgettext@plt>
   205a7:	mov    ecx,r14d
   205aa:	xor    esi,esi
   205ac:	xor    edi,edi
   205ae:	mov    rdx,rax
   205b1:	xor    eax,eax
   205b3:	call   a640 <error@plt>
   205b8:	mov    DWORD PTR [rip+0x5eb02],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   205c2:	jmp    1fc11 <__sprintf_chk@plt+0x15261>
   205c7:	mov    rax,QWORD PTR [rip+0x5ef3a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   205ce:	test   rax,rax
   205d1:	je     205d5 <__sprintf_chk@plt+0x15c25>
   205d3:	call   rax
   205d5:	mov    edx,0x5
   205da:	lea    rsi,[rip+0x44467]        # 64a48 <_obstack_memory_used@@Base+0x17dc8>
   205e1:	xor    edi,edi
   205e3:	call   a040 <dcgettext@plt>
   205e8:	xor    esi,esi
   205ea:	xor    edi,edi
   205ec:	mov    rdx,rax
   205ef:	xor    eax,eax
   205f1:	call   a640 <error@plt>
   205f6:	mov    DWORD PTR [rip+0x5eac4],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   20600:	jmp    1fc11 <__sprintf_chk@plt+0x15261>
   20605:	mov    rax,QWORD PTR [rip+0x5eefc]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2060c:	test   rax,rax
   2060f:	je     20613 <__sprintf_chk@plt+0x15c63>
   20611:	call   rax
   20613:	mov    edx,0x5
   20618:	lea    rsi,[rip+0x443d9]        # 649f8 <_obstack_memory_used@@Base+0x17d78>
   2061f:	jmp    205e1 <__sprintf_chk@plt+0x15c31>
   20621:	cmp    BYTE PTR [rsp+0x10],0x0
   20626:	jne    20685 <__sprintf_chk@plt+0x15cd5>
   20628:	mov    eax,DWORD PTR [rip+0x5f106]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   2062e:	cmp    eax,0x1
   20631:	je     2040c <__sprintf_chk@plt+0x15a5c>
   20637:	mov    r15d,0xffffffff
   2063d:	jmp    1fb25 <__sprintf_chk@plt+0x15175>
   20642:	mov    rax,QWORD PTR [rip+0x5eebf]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   20649:	test   rax,rax
   2064c:	je     20650 <__sprintf_chk@plt+0x15ca0>
   2064e:	call   rax
   20650:	mov    edx,0x5
   20655:	lea    rsi,[rip+0x4441c]        # 64a78 <_obstack_memory_used@@Base+0x17df8>
   2065c:	jmp    205e1 <__sprintf_chk@plt+0x15c31>
   2065e:	mov    rax,QWORD PTR [rip+0x5eea3]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   20665:	test   rax,rax
   20668:	je     2066c <__sprintf_chk@plt+0x15cbc>
   2066a:	call   rax
   2066c:	mov    edx,0x5
   20671:	lea    rsi,[rip+0x443a8]        # 64a20 <_obstack_memory_used@@Base+0x17da0>
   20678:	jmp    205e1 <__sprintf_chk@plt+0x15c31>
   2067d:	xor    r13d,r13d
   20680:	jmp    201cc <__sprintf_chk@plt+0x1581c>
   20685:	mov    rbx,QWORD PTR [rip+0x5f0b4]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   2068c:	test   rbx,rbx
   2068f:	je     20765 <__sprintf_chk@plt+0x15db5>
   20695:	lea    r13,[rsp+0xc0]
   2069d:	jmp    206ac <__sprintf_chk@plt+0x15cfc>
   2069f:	nop
   206a0:	mov    rbx,QWORD PTR [rbx]
   206a3:	test   rbx,rbx
   206a6:	je     20765 <__sprintf_chk@plt+0x15db5>
   206ac:	mov    ecx,DWORD PTR [rbx+0x54]
   206af:	mov    rsi,QWORD PTR [rbx+0xa0]
   206b6:	mov    rdx,r13
   206b9:	mov    edi,DWORD PTR [rip+0x5b961]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   206bf:	call   a960 <fstatat@plt>
   206c4:	test   eax,eax
   206c6:	jne    2074d <__sprintf_chk@plt+0x15d9d>
   206cc:	mov    rax,QWORD PTR [rsp+0x30]
   206d1:	cmp    QWORD PTR [rsp+0xc0],rax
   206d9:	jne    206a0 <__sprintf_chk@plt+0x15cf0>
   206db:	mov    rax,QWORD PTR [rsp+0x38]
   206e0:	cmp    QWORD PTR [rsp+0xc8],rax
   206e8:	jne    206a0 <__sprintf_chk@plt+0x15cf0>
   206ea:	mov    rax,QWORD PTR [rip+0x5ec87]        # 7f378 <obstack_alloc_failed_handler@@Base+0x540>
   206f1:	movdqu xmm0,XMMWORD PTR [rip+0x5ed0f]        # 7f408 <obstack_alloc_failed_handler@@Base+0x5d0>
   206f9:	movdqu xmm1,XMMWORD PTR [rip+0x5ed17]        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   20701:	mov    QWORD PTR [rbx+0x8],rax
   20705:	mov    rax,QWORD PTR [rip+0x5ec74]        # 7f380 <obstack_alloc_failed_handler@@Base+0x548>
   2070c:	mov    QWORD PTR [rbx+0x10],rax
   20710:	mov    eax,DWORD PTR [rip+0x5ec7a]        # 7f390 <obstack_alloc_failed_handler@@Base+0x558>
   20716:	mov    DWORD PTR [rbx+0x18],eax
   20719:	mov    eax,DWORD PTR [rip+0x5ec75]        # 7f394 <obstack_alloc_failed_handler@@Base+0x55c>
   2071f:	mov    DWORD PTR [rbx+0x1c],eax
   20722:	mov    eax,DWORD PTR [rip+0x5ec70]        # 7f398 <obstack_alloc_failed_handler@@Base+0x560>
   20728:	movups XMMWORD PTR [rbx+0x28],xmm0
   2072c:	mov    DWORD PTR [rbx+0x20],eax
   2072f:	mov    eax,DWORD PTR [rsp+0xd8]
   20736:	movups XMMWORD PTR [rbx+0x38],xmm1
   2073a:	mov    DWORD PTR [rbx+0x48],eax
   2073d:	mov    DWORD PTR [rbx+0x4c],0xffffffff
   20744:	mov    BYTE PTR [rbx+0x50],0x0
   20748:	jmp    1fde5 <__sprintf_chk@plt+0x15435>
   2074d:	mov    rsi,QWORD PTR [rbx+0xa0]
   20754:	lea    rdi,[rip+0x428e8]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   2075b:	call   3bad0 <__sprintf_chk@plt+0x31120>
   20760:	jmp    1fde5 <__sprintf_chk@plt+0x15435>
   20765:	mov    rax,QWORD PTR [rip+0x5ed9c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2076c:	test   rax,rax
   2076f:	je     20773 <__sprintf_chk@plt+0x15dc3>
   20771:	call   rax
   20773:	mov    rdi,rbp
   20776:	call   4b670 <argp_usage@@Base+0x82f0>
   2077b:	mov    edx,0x5
   20780:	lea    rsi,[rip+0x44419]        # 64ba0 <_obstack_memory_used@@Base+0x17f20>
   20787:	xor    edi,edi
   20789:	mov    r12,rax
   2078c:	call   a040 <dcgettext@plt>
   20791:	mov    rcx,r12
   20794:	xor    esi,esi
   20796:	xor    edi,edi
   20798:	mov    rdx,rax
   2079b:	xor    eax,eax
   2079d:	call   a640 <error@plt>
   207a2:	mov    DWORD PTR [rip+0x5e918],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   207ac:	jmp    1fde5 <__sprintf_chk@plt+0x15435>
   207b1:	mov    esi,r13d
   207b4:	mov    rdi,rbp
   207b7:	call   3c2e0 <__sprintf_chk@plt+0x31930>
   207bc:	mov    eax,DWORD PTR [rip+0x5ef72]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   207c2:	jmp    20637 <__sprintf_chk@plt+0x15c87>
   207c7:	call   a0a0 <__stack_chk_fail@plt>
   207cc:	call   19130 <__sprintf_chk@plt+0xe780>
   207d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   207dc:	nop    DWORD PTR [rax+0x0]
   207e0:	endbr64 
   207e4:	push   r12
   207e6:	push   rbp
   207e7:	push   rbx
   207e8:	mov    edx,DWORD PTR [rdi+0x8]
   207eb:	mov    rbx,rdi
   207ee:	mov    rbp,QWORD PTR [rdi+0x10]
   207f2:	mov    rax,QWORD PTR [rdi]
   207f5:	test   edx,edx
   207f7:	je     20820 <__sprintf_chk@plt+0x15e70>
   207f9:	mov    r12,QWORD PTR [rax]
   207fc:	add    r12,rbp
   207ff:	cmp    BYTE PTR [r12],0x0
   20804:	je     20848 <__sprintf_chk@plt+0x15e98>
   20806:	mov    rdi,r12
   20809:	call   a060 <strlen@plt>
   2080e:	lea    rax,[rbp+rax*1+0x1]
   20813:	mov    QWORD PTR [rbx+0x10],rax
   20817:	mov    rax,r12
   2081a:	pop    rbx
   2081b:	pop    rbp
   2081c:	pop    r12
   2081e:	ret    
   2081f:	nop
   20820:	xor    r12d,r12d
   20823:	cmp    QWORD PTR [rax+0x10],rbp
   20827:	jbe    20817 <__sprintf_chk@plt+0x15e67>
   20829:	mov    rax,QWORD PTR [rax+0x18]
   2082d:	mov    r12,QWORD PTR [rax+rbp*8]
   20831:	add    rbp,0x1
   20835:	mov    QWORD PTR [rdi+0x10],rbp
   20839:	pop    rbx
   2083a:	sub    r12,0x1
   2083e:	pop    rbp
   2083f:	mov    rax,r12
   20842:	pop    r12
   20844:	ret    
   20845:	nop    DWORD PTR [rax]
   20848:	xor    r12d,r12d
   2084b:	jmp    20817 <__sprintf_chk@plt+0x15e67>
   2084d:	nop    DWORD PTR [rax]
   20850:	push   r13
   20852:	mov    r13,rsi
   20855:	push   r12
   20857:	push   rbp
   20858:	mov    rbp,rdi
   2085b:	push   rbx
   2085c:	mov    rbx,rdx
   2085f:	sub    rsp,0x8
   20863:	mov    r12,QWORD PTR [rdi]
   20866:	mov    rdi,QWORD PTR [r12+0x18]
   2086b:	mov    rax,QWORD PTR [r12+0x20]
   20870:	sub    rax,rdi
   20873:	cmp    rdx,rax
   20876:	ja     208a0 <__sprintf_chk@plt+0x15ef0>
   20878:	mov    rdx,rbx
   2087b:	mov    rsi,r13
   2087e:	call   a420 <memcpy@plt>
   20883:	add    QWORD PTR [r12+0x18],rbx
   20888:	add    QWORD PTR [rbp+0x8],rbx
   2088c:	add    rsp,0x8
   20890:	pop    rbx
   20891:	pop    rbp
   20892:	pop    r12
   20894:	pop    r13
   20896:	ret    
   20897:	nop    WORD PTR [rax+rax*1+0x0]
   208a0:	mov    rdi,r12
   208a3:	mov    rsi,rdx
   208a6:	call   4ca80 <_obstack_newchunk@@Base>
   208ab:	mov    rdi,QWORD PTR [r12+0x18]
   208b0:	jmp    20878 <__sprintf_chk@plt+0x15ec8>
   208b2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   208bd:	nop    DWORD PTR [rax]
   208c0:	endbr64 
   208c4:	cmp    QWORD PTR [rdi+0x10],0x0
   208c9:	je     208d0 <__sprintf_chk@plt+0x15f20>
   208cb:	ret    
   208cc:	nop    DWORD PTR [rax+0x0]
   208d0:	push   r12
   208d2:	mov    r12,rsi
   208d5:	push   rbp
   208d6:	mov    rbp,rdi
   208d9:	sub    rsp,0x8
   208dd:	cmp    QWORD PTR [rdi],0x0
   208e1:	je     20910 <__sprintf_chk@plt+0x15f60>
   208e3:	mov    rdi,r12
   208e6:	call   a060 <strlen@plt>
   208eb:	add    QWORD PTR [rbp+0x18],rax
   208ef:	mov    rdi,r12
   208f2:	call   a060 <strlen@plt>
   208f7:	add    rsp,0x8
   208fb:	mov    rsi,r12
   208fe:	mov    rdi,rbp
   20901:	mov    rdx,rax
   20904:	pop    rbp
   20905:	pop    r12
   20907:	jmp    20850 <__sprintf_chk@plt+0x15ea0>
   2090c:	nop    DWORD PTR [rax+0x0]
   20910:	mov    edi,0x58
   20915:	call   a4a0 <malloc@plt>
   2091a:	mov    rdi,rax
   2091d:	test   rax,rax
   20920:	je     2094b <__sprintf_chk@plt+0x15f9b>
   20922:	mov    QWORD PTR [rbp+0x0],rax
   20926:	lea    rax,[rip+0x24d73]        # 456a0 <argp_usage@@Base+0x2320>
   2092d:	xor    edx,edx
   2092f:	xor    esi,esi
   20931:	mov    QWORD PTR [rdi+0x38],rax
   20935:	mov    rax,QWORD PTR [rip+0x5b64c]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   2093c:	and    BYTE PTR [rdi+0x50],0xfe
   20940:	mov    QWORD PTR [rdi+0x40],rax
   20944:	call   4c9a0 <argp_usage@@Base+0x9620>
   20949:	jmp    208e3 <__sprintf_chk@plt+0x15f33>
   2094b:	call   19130 <__sprintf_chk@plt+0xe780>
   20950:	push   r15
   20952:	push   r14
   20954:	push   r13
   20956:	push   r12
   20958:	push   rbp
   20959:	mov    rbp,rsi
   2095c:	push   rbx
   2095d:	mov    rbx,rdi
   20960:	sub    rsp,0x38
   20964:	mov    r13,QWORD PTR [rip+0x5eea5]        # 7f810 <obstack_alloc_failed_handler@@Base+0x9d8>
   2096b:	mov    QWORD PTR [rsp+0x8],rdx
   20970:	mov    QWORD PTR [rsp],rcx
   20974:	mov    rax,QWORD PTR fs:0x28
   2097d:	mov    QWORD PTR [rsp+0x28],rax
   20982:	xor    eax,eax
   20984:	test   r13,r13
   20987:	je     20b80 <__sprintf_chk@plt+0x161d0>
   2098d:	mov    BYTE PTR [r13+0x0],0x0
   20992:	movzx  r15d,BYTE PTR [rbp+0x0]
   20997:	test   r15b,r15b
   2099a:	je     20bb2 <__sprintf_chk@plt+0x16202>
   209a0:	xor    r14d,r14d
   209a3:	jmp    209d6 <__sprintf_chk@plt+0x16026>
   209a5:	nop    DWORD PTR [rax]
   209a8:	lea    rax,[r13+r14*1+0x0]
   209ad:	cmp    r15b,0x25
   209b1:	je     20a31 <__sprintf_chk@plt+0x16081>
   209b3:	cmp    r15b,0x3d
   209b7:	je     20a40 <__sprintf_chk@plt+0x16090>
   209bd:	mov    BYTE PTR [rax],r15b
   209c0:	movzx  r15d,BYTE PTR [rbp+0x1]
   209c5:	add    rbp,0x1
   209c9:	add    r14,0x1
   209cd:	test   r15b,r15b
   209d0:	je     20a50 <__sprintf_chk@plt+0x160a0>
   209d6:	mov    rax,QWORD PTR [rip+0x5ee2b]        # 7f808 <obstack_alloc_failed_handler@@Base+0x9d0>
   209dd:	lea    r12,[r14+0x2]
   209e1:	cmp    r12,rax
   209e4:	jb     209a8 <__sprintf_chk@plt+0x15ff8>
   209e6:	movabs rdi,0x5555555555555553
   209f0:	cmp    rax,rdi
   209f3:	ja     20bfc <__sprintf_chk@plt+0x1624c>
   209f9:	mov    rsi,rax
   209fc:	mov    rdi,r13
   209ff:	shr    rsi,1
   20a02:	lea    rsi,[rax+rsi*1+0x1]
   20a07:	mov    QWORD PTR [rip+0x5edfa],rsi        # 7f808 <obstack_alloc_failed_handler@@Base+0x9d0>
   20a0e:	call   a570 <realloc@plt>
   20a13:	mov    r13,rax
   20a16:	test   rax,rax
   20a19:	je     20bfc <__sprintf_chk@plt+0x1624c>
   20a1f:	mov    QWORD PTR [rip+0x5edea],rax        # 7f810 <obstack_alloc_failed_handler@@Base+0x9d8>
   20a26:	lea    rax,[r13+r14*1+0x0]
   20a2b:	cmp    r15b,0x25
   20a2f:	jne    209b3 <__sprintf_chk@plt+0x16003>
   20a31:	mov    DWORD PTR [rax],0x353225
   20a37:	mov    r14,r12
   20a3a:	jmp    209c0 <__sprintf_chk@plt+0x16010>
   20a3c:	nop    DWORD PTR [rax+0x0]
   20a40:	mov    DWORD PTR [rax],0x443325
   20a46:	mov    r14,r12
   20a49:	jmp    209c0 <__sprintf_chk@plt+0x16010>
   20a4e:	xchg   ax,ax
   20a50:	add    r14,r13
   20a53:	mov    BYTE PTR [r14],0x0
   20a57:	mov    rdi,r13
   20a5a:	call   a060 <strlen@plt>
   20a5f:	xor    r8d,r8d
   20a62:	lea    r9,[rsp+0x24]
   20a67:	movabs rdi,0xcccccccccccccccd
   20a71:	mov    r14,rax
   20a74:	mov    rax,QWORD PTR [rsp]
   20a78:	lea    r10,[rax+r14*1+0x3]
   20a7d:	nop    DWORD PTR [rax]
   20a80:	mov    BYTE PTR [rsp+0x24],0x0
   20a85:	lea    rcx,[r8+r10*1]
   20a89:	mov    rsi,r9
   20a8c:	nop    DWORD PTR [rax+0x0]
   20a90:	mov    rax,rcx
   20a93:	sub    rsi,0x1
   20a97:	mul    rdi
   20a9a:	mov    rax,rcx
   20a9d:	shr    rdx,0x3
   20aa1:	lea    r11,[rdx+rdx*4]
   20aa5:	add    r11,r11
   20aa8:	sub    rax,r11
   20aab:	add    eax,0x30
   20aae:	mov    BYTE PTR [rsi],al
   20ab0:	mov    rax,rcx
   20ab3:	mov    rcx,rdx
   20ab6:	cmp    rax,0x9
   20aba:	ja     20a90 <__sprintf_chk@plt+0x160e0>
   20abc:	mov    rax,r9
   20abf:	sub    rax,rsi
   20ac2:	cmp    r8,rax
   20ac5:	je     20ad0 <__sprintf_chk@plt+0x16120>
   20ac7:	mov    r8,rax
   20aca:	jmp    20a80 <__sprintf_chk@plt+0x160d0>
   20acc:	nop    DWORD PTR [rax+0x0]
   20ad0:	mov    rdx,r8
   20ad3:	mov    rdi,rbx
   20ad6:	call   20850 <__sprintf_chk@plt+0x15ea0>
   20adb:	mov    r15,QWORD PTR [rbx]
   20ade:	mov    rax,QWORD PTR [r15+0x18]
   20ae2:	cmp    QWORD PTR [r15+0x20],rax
   20ae6:	je     20bba <__sprintf_chk@plt+0x1620a>
   20aec:	lea    rdx,[rax+0x1]
   20af0:	mov    rsi,r13
   20af3:	mov    rdi,rbx
   20af6:	mov    QWORD PTR [r15+0x18],rdx
   20afa:	mov    rdx,r14
   20afd:	mov    BYTE PTR [rax],0x20
   20b00:	add    QWORD PTR [rbx+0x8],0x1
   20b05:	call   20850 <__sprintf_chk@plt+0x15ea0>
   20b0a:	mov    r13,QWORD PTR [rbx]
   20b0d:	mov    rax,QWORD PTR [r13+0x18]
   20b11:	cmp    QWORD PTR [r13+0x20],rax
   20b15:	je     20bd0 <__sprintf_chk@plt+0x16220>
   20b1b:	lea    rdx,[rax+0x1]
   20b1f:	mov    rsi,QWORD PTR [rsp+0x8]
   20b24:	mov    rdi,rbx
   20b27:	mov    QWORD PTR [r13+0x18],rdx
   20b2b:	mov    rdx,QWORD PTR [rsp]
   20b2f:	mov    BYTE PTR [rax],0x3d
   20b32:	add    QWORD PTR [rbx+0x8],0x1
   20b37:	call   20850 <__sprintf_chk@plt+0x15ea0>
   20b3c:	mov    rbp,QWORD PTR [rbx]
   20b3f:	mov    rax,QWORD PTR [rbp+0x18]
   20b43:	cmp    QWORD PTR [rbp+0x20],rax
   20b47:	je     20be6 <__sprintf_chk@plt+0x16236>
   20b4d:	lea    rdx,[rax+0x1]
   20b51:	mov    QWORD PTR [rbp+0x18],rdx
   20b55:	mov    BYTE PTR [rax],0xa
   20b58:	add    QWORD PTR [rbx+0x8],0x1
   20b5d:	mov    rax,QWORD PTR [rsp+0x28]
   20b62:	sub    rax,QWORD PTR fs:0x28
   20b6b:	jne    20c01 <__sprintf_chk@plt+0x16251>
   20b71:	add    rsp,0x38
   20b75:	pop    rbx
   20b76:	pop    rbp
   20b77:	pop    r12
   20b79:	pop    r13
   20b7b:	pop    r14
   20b7d:	pop    r15
   20b7f:	ret    
   20b80:	mov    QWORD PTR [rip+0x5ec7d],0x100        # 7f808 <obstack_alloc_failed_handler@@Base+0x9d0>
   20b8b:	mov    edi,0x100
   20b90:	call   a4a0 <malloc@plt>
   20b95:	mov    r13,rax
   20b98:	test   rax,rax
   20b9b:	je     20bfc <__sprintf_chk@plt+0x1624c>
   20b9d:	movzx  r15d,BYTE PTR [rbp+0x0]
   20ba2:	mov    QWORD PTR [rip+0x5ec67],rax        # 7f810 <obstack_alloc_failed_handler@@Base+0x9d8>
   20ba9:	test   r15b,r15b
   20bac:	jne    209a0 <__sprintf_chk@plt+0x15ff0>
   20bb2:	mov    r14,r13
   20bb5:	jmp    20a53 <__sprintf_chk@plt+0x160a3>
   20bba:	mov    esi,0x1
   20bbf:	mov    rdi,r15
   20bc2:	call   4ca80 <_obstack_newchunk@@Base>
   20bc7:	mov    rax,QWORD PTR [r15+0x18]
   20bcb:	jmp    20aec <__sprintf_chk@plt+0x1613c>
   20bd0:	mov    esi,0x1
   20bd5:	mov    rdi,r13
   20bd8:	call   4ca80 <_obstack_newchunk@@Base>
   20bdd:	mov    rax,QWORD PTR [r13+0x18]
   20be1:	jmp    20b1b <__sprintf_chk@plt+0x1616b>
   20be6:	mov    esi,0x1
   20beb:	mov    rdi,rbp
   20bee:	call   4ca80 <_obstack_newchunk@@Base>
   20bf3:	mov    rax,QWORD PTR [rbp+0x18]
   20bf7:	jmp    20b4d <__sprintf_chk@plt+0x1619d>
   20bfc:	call   19130 <__sprintf_chk@plt+0xe780>
   20c01:	call   a0a0 <__stack_chk_fail@plt>
   20c06:	cs nop WORD PTR [rax+rax*1+0x0]
   20c10:	push   r14
   20c12:	push   r13
   20c14:	mov    r13,rsi
   20c17:	mov    rsi,rdi
   20c1a:	push   r12
   20c1c:	mov    r12,rdx
   20c1f:	push   rbp
   20c20:	mov    rbp,rdi
   20c23:	mov    edi,0x1
   20c28:	sub    rsp,0x18
   20c2c:	mov    rax,QWORD PTR fs:0x28
   20c35:	mov    QWORD PTR [rsp+0x8],rax
   20c3a:	xor    eax,eax
   20c3c:	mov    rdx,rsp
   20c3f:	call   3b540 <__sprintf_chk@plt+0x30b90>
   20c44:	mov    r14,QWORD PTR [rsp]
   20c48:	test   al,al
   20c4a:	je     20c90 <__sprintf_chk@plt+0x162e0>
   20c4c:	mov    rdi,r14
   20c4f:	call   a060 <strlen@plt>
   20c54:	mov    rdi,r12
   20c57:	mov    rdx,r14
   20c5a:	mov    rsi,r13
   20c5d:	mov    rcx,rax
   20c60:	call   20950 <__sprintf_chk@plt+0x15fa0>
   20c65:	mov    rdi,QWORD PTR [rsp]
   20c69:	call   9ce0 <free@plt>
   20c6e:	mov    rax,QWORD PTR [rsp+0x8]
   20c73:	sub    rax,QWORD PTR fs:0x28
   20c7c:	jne    20cc0 <__sprintf_chk@plt+0x16310>
   20c7e:	add    rsp,0x18
   20c82:	pop    rbp
   20c83:	pop    r12
   20c85:	pop    r13
   20c87:	pop    r14
   20c89:	ret    
   20c8a:	nop    WORD PTR [rax+rax*1+0x0]
   20c90:	mov    rdi,rbp
   20c93:	call   a060 <strlen@plt>
   20c98:	lea    r14,[rax+0x1]
   20c9c:	mov    rdi,r14
   20c9f:	call   a4a0 <malloc@plt>
   20ca4:	mov    rdi,rax
   20ca7:	test   rax,rax
   20caa:	je     20cc5 <__sprintf_chk@plt+0x16315>
   20cac:	mov    rdx,r14
   20caf:	mov    rsi,rbp
   20cb2:	call   a420 <memcpy@plt>
   20cb7:	mov    QWORD PTR [rsp],rax
   20cbb:	mov    r14,rax
   20cbe:	jmp    20c4c <__sprintf_chk@plt+0x1629c>
   20cc0:	call   a0a0 <__stack_chk_fail@plt>
   20cc5:	call   19130 <__sprintf_chk@plt+0xe780>
   20cca:	nop    WORD PTR [rax+rax*1+0x0]
   20cd0:	push   rbp
   20cd1:	mov    rbp,rdi
   20cd4:	push   rbx
   20cd5:	sub    rsp,0x8
   20cd9:	mov    rbx,QWORD PTR [rip+0x5eb40]        # 7f820 <obstack_alloc_failed_handler@@Base+0x9e8>
   20ce0:	test   rbx,rbx
   20ce3:	je     20d00 <__sprintf_chk@plt+0x16350>
   20ce5:	nop    DWORD PTR [rax]
   20ce8:	mov    rsi,QWORD PTR [rbx+0x8]
   20cec:	mov    rdi,QWORD PTR [rbx+0x10]
   20cf0:	mov    rdx,rbp
   20cf3:	call   20c10 <__sprintf_chk@plt+0x16260>
   20cf8:	mov    rbx,QWORD PTR [rbx]
   20cfb:	test   rbx,rbx
   20cfe:	jne    20ce8 <__sprintf_chk@plt+0x16338>
   20d00:	mov    rax,QWORD PTR [rbp+0x0]
   20d04:	mov    rsi,QWORD PTR [rax+0x10]
   20d08:	mov    rdx,QWORD PTR [rax+0x18]
   20d0c:	cmp    rdx,rsi
   20d0f:	je     20d50 <__sprintf_chk@plt+0x163a0>
   20d11:	mov    rcx,QWORD PTR [rax+0x30]
   20d15:	add    rdx,rcx
   20d18:	not    rcx
   20d1b:	and    rdx,rcx
   20d1e:	mov    rcx,QWORD PTR [rax+0x20]
   20d22:	mov    r8,rdx
   20d25:	sub    r8,QWORD PTR [rax+0x8]
   20d29:	mov    rdi,rcx
   20d2c:	sub    rdi,QWORD PTR [rax+0x8]
   20d30:	cmp    r8,rdi
   20d33:	cmovbe rcx,rdx
   20d37:	mov    QWORD PTR [rax+0x18],rcx
   20d3b:	mov    QWORD PTR [rax+0x10],rcx
   20d3f:	mov    QWORD PTR [rbp+0x10],rsi
   20d43:	add    rsp,0x8
   20d47:	pop    rbx
   20d48:	pop    rbp
   20d49:	ret    
   20d4a:	nop    WORD PTR [rax+rax*1+0x0]
   20d50:	or     BYTE PTR [rax+0x50],0x2
   20d54:	jmp    20d11 <__sprintf_chk@plt+0x16361>
   20d56:	cs nop WORD PTR [rax+rax*1+0x0]
   20d60:	endbr64 
   20d64:	mov    rdi,QWORD PTR [rdi+0x28]
   20d68:	jmp    20c10 <__sprintf_chk@plt+0x16260>
   20d6d:	nop    DWORD PTR [rax]
   20d70:	endbr64 
   20d74:	mov    rdi,QWORD PTR [rdi+0x18]
   20d78:	jmp    20c10 <__sprintf_chk@plt+0x16260>
   20d7d:	nop    DWORD PTR [rax]
   20d80:	endbr64 
   20d84:	mov    rdi,QWORD PTR [rdi+0x8]
   20d88:	jmp    20c10 <__sprintf_chk@plt+0x16260>
   20d8d:	nop    DWORD PTR [rax]
   20d90:	endbr64 
   20d94:	mov    rdi,QWORD PTR [rdi+0x20]
   20d98:	jmp    20c10 <__sprintf_chk@plt+0x16260>
   20d9d:	nop    DWORD PTR [rax]
   20da0:	endbr64 
   20da4:	mov    rdi,rcx
   20da7:	jmp    20c10 <__sprintf_chk@plt+0x16260>
   20dac:	nop    DWORD PTR [rax+0x0]
   20db0:	endbr64 
   20db4:	mov    rdi,QWORD PTR [rdi+0x30]
   20db8:	jmp    20c10 <__sprintf_chk@plt+0x16260>
   20dbd:	nop    DWORD PTR [rax]
   20dc0:	endbr64 
   20dc4:	push   r13
   20dc6:	mov    r8,rdi
   20dc9:	mov    r13,rsi
   20dcc:	push   r12
   20dce:	push   rbp
   20dcf:	mov    rbp,rdx
   20dd2:	sub    rsp,0x30
   20dd6:	mov    rsi,QWORD PTR [r8+0xf0]
   20ddd:	mov    rdi,QWORD PTR [rdi+0xe8]
   20de4:	mov    rax,QWORD PTR fs:0x28
   20ded:	mov    QWORD PTR [rsp+0x28],rax
   20df2:	xor    eax,eax
   20df4:	mov    rdx,rsp
   20df7:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   20dfc:	mov    rdi,rax
   20dff:	mov    r12,rax
   20e02:	call   a060 <strlen@plt>
   20e07:	mov    rdx,r12
   20e0a:	mov    rsi,r13
   20e0d:	mov    rdi,rbp
   20e10:	mov    rcx,rax
   20e13:	call   20950 <__sprintf_chk@plt+0x15fa0>
   20e18:	mov    rax,QWORD PTR [rsp+0x28]
   20e1d:	sub    rax,QWORD PTR fs:0x28
   20e26:	jne    20e32 <__sprintf_chk@plt+0x16482>
   20e28:	add    rsp,0x30
   20e2c:	pop    rbp
   20e2d:	pop    r12
   20e2f:	pop    r13
   20e31:	ret    
   20e32:	call   a0a0 <__stack_chk_fail@plt>
   20e37:	nop    WORD PTR [rax+rax*1+0x0]
   20e40:	endbr64 
   20e44:	push   r13
   20e46:	mov    r13,rsi
   20e49:	push   r12
   20e4b:	push   rbp
   20e4c:	mov    rbp,rdx
   20e4f:	sub    rsp,0x20
   20e53:	mov    rax,QWORD PTR fs:0x28
   20e5c:	mov    QWORD PTR [rsp+0x18],rax
   20e61:	mov    rax,QWORD PTR [rcx]
   20e64:	lea    r12,[rsp+0x14]
   20e69:	shl    rax,0x4
   20e6d:	add    rax,QWORD PTR [rdi+0x140]
   20e74:	movabs rdi,0xcccccccccccccccd
   20e7e:	mov    rcx,QWORD PTR [rax+0x8]
   20e82:	mov    BYTE PTR [rsp+0x14],0x0
   20e87:	nop    WORD PTR [rax+rax*1+0x0]
   20e90:	mov    rax,rcx
   20e93:	sub    r12,0x1
   20e97:	mul    rdi
   20e9a:	mov    rax,rcx
   20e9d:	shr    rdx,0x3
   20ea1:	lea    rsi,[rdx+rdx*4]
   20ea5:	add    rsi,rsi
   20ea8:	sub    rax,rsi
   20eab:	add    eax,0x30
   20eae:	mov    BYTE PTR [r12],al
   20eb2:	mov    rax,rcx
   20eb5:	mov    rcx,rdx
   20eb8:	cmp    rax,0x9
   20ebc:	ja     20e90 <__sprintf_chk@plt+0x164e0>
   20ebe:	mov    rdi,r12
   20ec1:	call   a060 <strlen@plt>
   20ec6:	mov    rdx,r12
   20ec9:	mov    rsi,r13
   20ecc:	mov    rdi,rbp
   20ecf:	mov    rcx,rax
   20ed2:	call   20950 <__sprintf_chk@plt+0x15fa0>
   20ed7:	mov    rax,QWORD PTR [rsp+0x18]
   20edc:	sub    rax,QWORD PTR fs:0x28
   20ee5:	jne    20ef1 <__sprintf_chk@plt+0x16541>
   20ee7:	add    rsp,0x20
   20eeb:	pop    rbp
   20eec:	pop    r12
   20eee:	pop    r13
   20ef0:	ret    
   20ef1:	call   a0a0 <__stack_chk_fail@plt>
   20ef6:	cs nop WORD PTR [rax+rax*1+0x0]
   20f00:	endbr64 
   20f04:	push   r13
   20f06:	mov    r13,rsi
   20f09:	push   r12
   20f0b:	push   rbp
   20f0c:	mov    rbp,rdx
   20f0f:	sub    rsp,0x20
   20f13:	mov    ecx,DWORD PTR [rdi+0x78]
   20f16:	movabs rdi,0xcccccccccccccccd
   20f20:	mov    rax,QWORD PTR fs:0x28
   20f29:	mov    QWORD PTR [rsp+0x18],rax
   20f2e:	xor    eax,eax
   20f30:	mov    BYTE PTR [rsp+0x14],0x0
   20f35:	lea    r12,[rsp+0x14]
   20f3a:	nop    WORD PTR [rax+rax*1+0x0]
   20f40:	mov    rax,rcx
   20f43:	sub    r12,0x1
   20f47:	mul    rdi
   20f4a:	mov    rax,rcx
   20f4d:	shr    rdx,0x3
   20f51:	lea    rsi,[rdx+rdx*4]
   20f55:	add    rsi,rsi
   20f58:	sub    rax,rsi
   20f5b:	add    eax,0x30
   20f5e:	mov    BYTE PTR [r12],al
   20f62:	mov    rax,rcx
   20f65:	mov    rcx,rdx
   20f68:	cmp    rax,0x9
   20f6c:	ja     20f40 <__sprintf_chk@plt+0x16590>
   20f6e:	mov    rdi,r12
   20f71:	call   a060 <strlen@plt>
   20f76:	mov    rdx,r12
   20f79:	mov    rsi,r13
   20f7c:	mov    rdi,rbp
   20f7f:	mov    rcx,rax
   20f82:	call   20950 <__sprintf_chk@plt+0x15fa0>
   20f87:	mov    rax,QWORD PTR [rsp+0x18]
   20f8c:	sub    rax,QWORD PTR fs:0x28
   20f95:	jne    20fa1 <__sprintf_chk@plt+0x165f1>
   20f97:	add    rsp,0x20
   20f9b:	pop    rbp
   20f9c:	pop    r12
   20f9e:	pop    r13
   20fa0:	ret    
   20fa1:	call   a0a0 <__stack_chk_fail@plt>
   20fa6:	cs nop WORD PTR [rax+rax*1+0x0]
   20fb0:	endbr64 
   20fb4:	push   r13
   20fb6:	mov    r8,rdi
   20fb9:	mov    r13,rsi
   20fbc:	push   r12
   20fbe:	push   rbp
   20fbf:	mov    rbp,rdx
   20fc2:	sub    rsp,0x30
   20fc6:	mov    rsi,QWORD PTR [r8+0x110]
   20fcd:	mov    rdi,QWORD PTR [rdi+0x108]
   20fd4:	mov    rax,QWORD PTR fs:0x28
   20fdd:	mov    QWORD PTR [rsp+0x28],rax
   20fe2:	xor    eax,eax
   20fe4:	mov    rdx,rsp
   20fe7:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   20fec:	mov    rdi,rax
   20fef:	mov    r12,rax
   20ff2:	call   a060 <strlen@plt>
   20ff7:	mov    rdx,r12
   20ffa:	mov    rsi,r13
   20ffd:	mov    rdi,rbp
   21000:	mov    rcx,rax
   21003:	call   20950 <__sprintf_chk@plt+0x15fa0>
   21008:	mov    rax,QWORD PTR [rsp+0x28]
   2100d:	sub    rax,QWORD PTR fs:0x28
   21016:	jne    21022 <__sprintf_chk@plt+0x16672>
   21018:	add    rsp,0x30
   2101c:	pop    rbp
   2101d:	pop    r12
   2101f:	pop    r13
   21021:	ret    
   21022:	call   a0a0 <__stack_chk_fail@plt>
   21027:	nop    WORD PTR [rax+rax*1+0x0]
   21030:	endbr64 
   21034:	push   r13
   21036:	mov    r13,rsi
   21039:	push   r12
   2103b:	push   rbp
   2103c:	mov    rbp,rdx
   2103f:	sub    rsp,0x30
   21043:	mov    rax,QWORD PTR fs:0x28
   2104c:	mov    QWORD PTR [rsp+0x28],rax
   21051:	xor    eax,eax
   21053:	test   rcx,rcx
   21056:	je     210a0 <__sprintf_chk@plt+0x166f0>
   21058:	mov    r8,QWORD PTR [rcx]
   2105b:	mov    rsi,QWORD PTR [rcx+0x8]
   2105f:	mov    rdx,rsp
   21062:	mov    rdi,r8
   21065:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   2106a:	mov    rdi,rax
   2106d:	mov    r12,rax
   21070:	call   a060 <strlen@plt>
   21075:	mov    rdx,r12
   21078:	mov    rsi,r13
   2107b:	mov    rdi,rbp
   2107e:	mov    rcx,rax
   21081:	call   20950 <__sprintf_chk@plt+0x15fa0>
   21086:	mov    rax,QWORD PTR [rsp+0x28]
   2108b:	sub    rax,QWORD PTR fs:0x28
   21094:	jne    210b0 <__sprintf_chk@plt+0x16700>
   21096:	add    rsp,0x30
   2109a:	pop    rbp
   2109b:	pop    r12
   2109d:	pop    r13
   2109f:	ret    
   210a0:	mov    r8,QWORD PTR [rdi+0xf8]
   210a7:	mov    rsi,QWORD PTR [rdi+0x100]
   210ae:	jmp    2105f <__sprintf_chk@plt+0x166af>
   210b0:	call   a0a0 <__stack_chk_fail@plt>
   210b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   210c0:	endbr64 
   210c4:	push   r13
   210c6:	mov    r13,rsi
   210c9:	push   r12
   210cb:	push   rbp
   210cc:	mov    rbp,rdx
   210cf:	sub    rsp,0x20
   210d3:	mov    rcx,QWORD PTR [rdi+0x88]
   210da:	movabs rdi,0xcccccccccccccccd
   210e4:	mov    rax,QWORD PTR fs:0x28
   210ed:	mov    QWORD PTR [rsp+0x18],rax
   210f2:	xor    eax,eax
   210f4:	mov    BYTE PTR [rsp+0x14],0x0
   210f9:	lea    r12,[rsp+0x14]
   210fe:	xchg   ax,ax
   21100:	mov    rax,rcx
   21103:	sub    r12,0x1
   21107:	mul    rdi
   2110a:	mov    rax,rcx
   2110d:	shr    rdx,0x3
   21111:	lea    rsi,[rdx+rdx*4]
   21115:	add    rsi,rsi
   21118:	sub    rax,rsi
   2111b:	add    eax,0x30
   2111e:	mov    BYTE PTR [r12],al
   21122:	mov    rax,rcx
   21125:	mov    rcx,rdx
   21128:	cmp    rax,0x9
   2112c:	ja     21100 <__sprintf_chk@plt+0x16750>
   2112e:	mov    rdi,r12
   21131:	call   a060 <strlen@plt>
   21136:	mov    rdx,r12
   21139:	mov    rsi,r13
   2113c:	mov    rdi,rbp
   2113f:	mov    rcx,rax
   21142:	call   20950 <__sprintf_chk@plt+0x15fa0>
   21147:	mov    rax,QWORD PTR [rsp+0x18]
   2114c:	sub    rax,QWORD PTR fs:0x28
   21155:	jne    21161 <__sprintf_chk@plt+0x167b1>
   21157:	add    rsp,0x20
   2115b:	pop    rbp
   2115c:	pop    r12
   2115e:	pop    r13
   21160:	ret    
   21161:	call   a0a0 <__stack_chk_fail@plt>
   21166:	cs nop WORD PTR [rax+rax*1+0x0]
   21170:	endbr64 
   21174:	push   r13
   21176:	mov    r13,rsi
   21179:	push   r12
   2117b:	push   rbp
   2117c:	mov    rbp,rdx
   2117f:	sub    rsp,0x20
   21183:	mov    ecx,DWORD PTR [rdi+0x74]
   21186:	movabs rdi,0xcccccccccccccccd
   21190:	mov    rax,QWORD PTR fs:0x28
   21199:	mov    QWORD PTR [rsp+0x18],rax
   2119e:	xor    eax,eax
   211a0:	mov    BYTE PTR [rsp+0x14],0x0
   211a5:	lea    r12,[rsp+0x14]
   211aa:	nop    WORD PTR [rax+rax*1+0x0]
   211b0:	mov    rax,rcx
   211b3:	sub    r12,0x1
   211b7:	mul    rdi
   211ba:	mov    rax,rcx
   211bd:	shr    rdx,0x3
   211c1:	lea    rsi,[rdx+rdx*4]
   211c5:	add    rsi,rsi
   211c8:	sub    rax,rsi
   211cb:	add    eax,0x30
   211ce:	mov    BYTE PTR [r12],al
   211d2:	mov    rax,rcx
   211d5:	mov    rcx,rdx
   211d8:	cmp    rax,0x9
   211dc:	ja     211b0 <__sprintf_chk@plt+0x16800>
   211de:	mov    rdi,r12
   211e1:	call   a060 <strlen@plt>
   211e6:	mov    rdx,r12
   211e9:	mov    rsi,r13
   211ec:	mov    rdi,rbp
   211ef:	mov    rcx,rax
   211f2:	call   20950 <__sprintf_chk@plt+0x15fa0>
   211f7:	mov    rax,QWORD PTR [rsp+0x18]
   211fc:	sub    rax,QWORD PTR fs:0x28
   21205:	jne    21211 <__sprintf_chk@plt+0x16861>
   21207:	add    rsp,0x20
   2120b:	pop    rbp
   2120c:	pop    r12
   2120e:	pop    r13
   21210:	ret    
   21211:	call   a0a0 <__stack_chk_fail@plt>
   21216:	cs nop WORD PTR [rax+rax*1+0x0]
   21220:	endbr64 
   21224:	push   r13
   21226:	mov    r13,rsi
   21229:	push   r12
   2122b:	push   rbp
   2122c:	mov    rbp,rdx
   2122f:	sub    rsp,0x20
   21233:	mov    rcx,QWORD PTR [rdi+0x88]
   2123a:	movabs rdi,0xcccccccccccccccd
   21244:	mov    rax,QWORD PTR fs:0x28
   2124d:	mov    QWORD PTR [rsp+0x18],rax
   21252:	xor    eax,eax
   21254:	mov    BYTE PTR [rsp+0x14],0x0
   21259:	lea    r12,[rsp+0x14]
   2125e:	xchg   ax,ax
   21260:	mov    rax,rcx
   21263:	sub    r12,0x1
   21267:	mul    rdi
   2126a:	mov    rax,rcx
   2126d:	shr    rdx,0x3
   21271:	lea    rsi,[rdx+rdx*4]
   21275:	add    rsi,rsi
   21278:	sub    rax,rsi
   2127b:	add    eax,0x30
   2127e:	mov    BYTE PTR [r12],al
   21282:	mov    rax,rcx
   21285:	mov    rcx,rdx
   21288:	cmp    rax,0x9
   2128c:	ja     21260 <__sprintf_chk@plt+0x168b0>
   2128e:	mov    rdi,r12
   21291:	call   a060 <strlen@plt>
   21296:	mov    rdx,r12
   21299:	mov    rsi,r13
   2129c:	mov    rdi,rbp
   2129f:	mov    rcx,rax
   212a2:	call   20950 <__sprintf_chk@plt+0x15fa0>
   212a7:	mov    rax,QWORD PTR [rsp+0x18]
   212ac:	sub    rax,QWORD PTR fs:0x28
   212b5:	jne    212c1 <__sprintf_chk@plt+0x16911>
   212b7:	add    rsp,0x20
   212bb:	pop    rbp
   212bc:	pop    r12
   212be:	pop    r13
   212c0:	ret    
   212c1:	call   a0a0 <__stack_chk_fail@plt>
   212c6:	cs nop WORD PTR [rax+rax*1+0x0]
   212d0:	endbr64 
   212d4:	push   r13
   212d6:	mov    r13,rsi
   212d9:	push   r12
   212db:	push   rbp
   212dc:	mov    rbp,rdx
   212df:	sub    rsp,0x20
   212e3:	mov    rcx,QWORD PTR [rdi+0x130]
   212ea:	movabs rdi,0xcccccccccccccccd
   212f4:	mov    rax,QWORD PTR fs:0x28
   212fd:	mov    QWORD PTR [rsp+0x18],rax
   21302:	xor    eax,eax
   21304:	mov    BYTE PTR [rsp+0x14],0x0
   21309:	lea    r12,[rsp+0x14]
   2130e:	xchg   ax,ax
   21310:	mov    rax,rcx
   21313:	sub    r12,0x1
   21317:	mul    rdi
   2131a:	mov    rax,rcx
   2131d:	shr    rdx,0x3
   21321:	lea    rsi,[rdx+rdx*4]
   21325:	add    rsi,rsi
   21328:	sub    rax,rsi
   2132b:	add    eax,0x30
   2132e:	mov    BYTE PTR [r12],al
   21332:	mov    rax,rcx
   21335:	mov    rcx,rdx
   21338:	cmp    rax,0x9
   2133c:	ja     21310 <__sprintf_chk@plt+0x16960>
   2133e:	mov    rdi,r12
   21341:	call   a060 <strlen@plt>
   21346:	mov    rdx,r12
   21349:	mov    rsi,r13
   2134c:	mov    rdi,rbp
   2134f:	mov    rcx,rax
   21352:	call   20950 <__sprintf_chk@plt+0x15fa0>
   21357:	mov    rax,QWORD PTR [rsp+0x18]
   2135c:	sub    rax,QWORD PTR fs:0x28
   21365:	jne    21371 <__sprintf_chk@plt+0x169c1>
   21367:	add    rsp,0x20
   2136b:	pop    rbp
   2136c:	pop    r12
   2136e:	pop    r13
   21370:	ret    
   21371:	call   a0a0 <__stack_chk_fail@plt>
   21376:	cs nop WORD PTR [rax+rax*1+0x0]
   21380:	endbr64 
   21384:	push   r13
   21386:	mov    r13,rsi
   21389:	push   r12
   2138b:	push   rbp
   2138c:	mov    rbp,rdx
   2138f:	sub    rsp,0x20
   21393:	mov    rax,QWORD PTR fs:0x28
   2139c:	mov    QWORD PTR [rsp+0x18],rax
   213a1:	mov    rax,QWORD PTR [rcx]
   213a4:	lea    r12,[rsp+0x14]
   213a9:	shl    rax,0x4
   213ad:	add    rax,QWORD PTR [rdi+0x140]
   213b4:	movabs rdi,0xcccccccccccccccd
   213be:	mov    rcx,QWORD PTR [rax]
   213c1:	mov    BYTE PTR [rsp+0x14],0x0
   213c6:	cs nop WORD PTR [rax+rax*1+0x0]
   213d0:	mov    rax,rcx
   213d3:	sub    r12,0x1
   213d7:	mul    rdi
   213da:	mov    rax,rcx
   213dd:	shr    rdx,0x3
   213e1:	lea    rsi,[rdx+rdx*4]
   213e5:	add    rsi,rsi
   213e8:	sub    rax,rsi
   213eb:	add    eax,0x30
   213ee:	mov    BYTE PTR [r12],al
   213f2:	mov    rax,rcx
   213f5:	mov    rcx,rdx
   213f8:	cmp    rax,0x9
   213fc:	ja     213d0 <__sprintf_chk@plt+0x16a20>
   213fe:	mov    rdi,r12
   21401:	call   a060 <strlen@plt>
   21406:	mov    rdx,r12
   21409:	mov    rsi,r13
   2140c:	mov    rdi,rbp
   2140f:	mov    rcx,rax
   21412:	call   20950 <__sprintf_chk@plt+0x15fa0>
   21417:	mov    rax,QWORD PTR [rsp+0x18]
   2141c:	sub    rax,QWORD PTR fs:0x28
   21425:	jne    21431 <__sprintf_chk@plt+0x16a81>
   21427:	add    rsp,0x20
   2142b:	pop    rbp
   2142c:	pop    r12
   2142e:	pop    r13
   21430:	ret    
   21431:	call   a0a0 <__stack_chk_fail@plt>
   21436:	cs nop WORD PTR [rax+rax*1+0x0]
   21440:	endbr64 
   21444:	push   r14
   21446:	push   r13
   21448:	mov    r13,rsi
   2144b:	push   r12
   2144d:	mov    r12,rcx
   21450:	push   rbp
   21451:	mov    rbp,rdx
   21454:	push   rbx
   21455:	cmp    BYTE PTR [rcx],0x0
   21458:	je     21498 <__sprintf_chk@plt+0x16ae8>
   2145a:	mov    r14,rcx
   2145d:	xor    ebx,ebx
   2145f:	nop
   21460:	mov    rdi,r14
   21463:	call   a060 <strlen@plt>
   21468:	add    rax,0x1
   2146c:	add    r14,rax
   2146f:	add    rbx,rax
   21472:	cmp    BYTE PTR [r14],0x0
   21476:	jne    21460 <__sprintf_chk@plt+0x16ab0>
   21478:	lea    rcx,[rbx+0x1]
   2147c:	pop    rbx
   2147d:	mov    rdx,r12
   21480:	mov    rsi,r13
   21483:	mov    rdi,rbp
   21486:	pop    rbp
   21487:	pop    r12
   21489:	pop    r13
   2148b:	pop    r14
   2148d:	jmp    20950 <__sprintf_chk@plt+0x15fa0>
   21492:	nop    WORD PTR [rax+rax*1+0x0]
   21498:	mov    ecx,0x1
   2149d:	jmp    2147c <__sprintf_chk@plt+0x16acc>
   2149f:	nop
   214a0:	endbr64 
   214a4:	movabs rdi,0xcccccccccccccccd
   214ae:	push   r13
   214b0:	mov    r13,rsi
   214b3:	push   r12
   214b5:	push   rbp
   214b6:	mov    rbp,rdx
   214b9:	sub    rsp,0x20
   214bd:	mov    rcx,QWORD PTR [rcx]
   214c0:	mov    rax,QWORD PTR fs:0x28
   214c9:	mov    QWORD PTR [rsp+0x18],rax
   214ce:	xor    eax,eax
   214d0:	mov    BYTE PTR [rsp+0x14],0x0
   214d5:	lea    r12,[rsp+0x14]
   214da:	nop    WORD PTR [rax+rax*1+0x0]
   214e0:	mov    rax,rcx
   214e3:	sub    r12,0x1
   214e7:	mul    rdi
   214ea:	mov    rax,rcx
   214ed:	shr    rdx,0x3
   214f1:	lea    rsi,[rdx+rdx*4]
   214f5:	add    rsi,rsi
   214f8:	sub    rax,rsi
   214fb:	add    eax,0x30
   214fe:	mov    BYTE PTR [r12],al
   21502:	mov    rax,rcx
   21505:	mov    rcx,rdx
   21508:	cmp    rax,0x9
   2150c:	ja     214e0 <__sprintf_chk@plt+0x16b30>
   2150e:	mov    rdi,r12
   21511:	call   a060 <strlen@plt>
   21516:	mov    rdx,r12
   21519:	mov    rsi,r13
   2151c:	mov    rdi,rbp
   2151f:	mov    rcx,rax
   21522:	call   20950 <__sprintf_chk@plt+0x15fa0>
   21527:	mov    rax,QWORD PTR [rsp+0x18]
   2152c:	sub    rax,QWORD PTR fs:0x28
   21535:	jne    21541 <__sprintf_chk@plt+0x16b91>
   21537:	add    rsp,0x20
   2153b:	pop    rbp
   2153c:	pop    r12
   2153e:	pop    r13
   21540:	ret    
   21541:	call   a0a0 <__stack_chk_fail@plt>
   21546:	cs nop WORD PTR [rax+rax*1+0x0]
   21550:	endbr64 
   21554:	movabs rdi,0xcccccccccccccccd
   2155e:	push   r13
   21560:	mov    r13,rsi
   21563:	push   r12
   21565:	push   rbp
   21566:	mov    rbp,rdx
   21569:	sub    rsp,0x20
   2156d:	mov    rcx,QWORD PTR [rcx]
   21570:	mov    rax,QWORD PTR fs:0x28
   21579:	mov    QWORD PTR [rsp+0x18],rax
   2157e:	xor    eax,eax
   21580:	mov    BYTE PTR [rsp+0x14],0x0
   21585:	lea    r12,[rsp+0x14]
   2158a:	nop    WORD PTR [rax+rax*1+0x0]
   21590:	mov    rax,rcx
   21593:	sub    r12,0x1
   21597:	mul    rdi
   2159a:	mov    rax,rcx
   2159d:	shr    rdx,0x3
   215a1:	lea    rsi,[rdx+rdx*4]
   215a5:	add    rsi,rsi
   215a8:	sub    rax,rsi
   215ab:	add    eax,0x30
   215ae:	mov    BYTE PTR [r12],al
   215b2:	mov    rax,rcx
   215b5:	mov    rcx,rdx
   215b8:	cmp    rax,0x9
   215bc:	ja     21590 <__sprintf_chk@plt+0x16be0>
   215be:	mov    rdi,r12
   215c1:	call   a060 <strlen@plt>
   215c6:	mov    rdx,r12
   215c9:	mov    rsi,r13
   215cc:	mov    rdi,rbp
   215cf:	mov    rcx,rax
   215d2:	call   20950 <__sprintf_chk@plt+0x15fa0>
   215d7:	mov    rax,QWORD PTR [rsp+0x18]
   215dc:	sub    rax,QWORD PTR fs:0x28
   215e5:	jne    215f1 <__sprintf_chk@plt+0x16c41>
   215e7:	add    rsp,0x20
   215eb:	pop    rbp
   215ec:	pop    r12
   215ee:	pop    r13
   215f0:	ret    
   215f1:	call   a0a0 <__stack_chk_fail@plt>
   215f6:	cs nop WORD PTR [rax+rax*1+0x0]
   21600:	endbr64 
   21604:	mov    rax,rdi
   21607:	mov    rdi,rdx
   2160a:	mov    rcx,QWORD PTR [rax+0x40]
   2160e:	mov    rdx,QWORD PTR [rax+0x38]
   21612:	jmp    20950 <__sprintf_chk@plt+0x15fa0>
   21617:	nop    WORD PTR [rax+rax*1+0x0]
   21620:	endbr64 
   21624:	mov    rax,rdi
   21627:	mov    rdi,rdx
   2162a:	mov    rcx,QWORD PTR [rax+0x50]
   2162e:	mov    rdx,QWORD PTR [rax+0x48]
   21632:	jmp    20950 <__sprintf_chk@plt+0x15fa0>
   21637:	nop    WORD PTR [rax+rax*1+0x0]
   21640:	endbr64 
   21644:	mov    rax,QWORD PTR [rcx]
   21647:	mov    r8,rdi
   2164a:	mov    rdi,rdx
   2164d:	lea    rdx,[rax+rax*2]
   21651:	mov    rax,QWORD PTR [r8+0x160]
   21658:	lea    rax,[rax+rdx*8]
   2165c:	mov    rcx,QWORD PTR [rax+0x10]
   21660:	mov    rdx,QWORD PTR [rax+0x8]
   21664:	jmp    20950 <__sprintf_chk@plt+0x15fa0>
   21669:	nop    DWORD PTR [rax+0x0]
   21670:	endbr64 
   21674:	push   r13
   21676:	mov    r13,rsi
   21679:	push   r12
   2167b:	push   rbp
   2167c:	mov    rbp,rdx
   2167f:	sub    rsp,0x20
   21683:	mov    ecx,DWORD PTR [rdi+0x124]
   21689:	movabs rdi,0xcccccccccccccccd
   21693:	mov    rax,QWORD PTR fs:0x28
   2169c:	mov    QWORD PTR [rsp+0x18],rax
   216a1:	xor    eax,eax
   216a3:	mov    BYTE PTR [rsp+0x14],0x0
   216a8:	lea    r12,[rsp+0x14]
   216ad:	nop    DWORD PTR [rax]
   216b0:	mov    rax,rcx
   216b3:	sub    r12,0x1
   216b7:	mul    rdi
   216ba:	mov    rax,rcx
   216bd:	shr    rdx,0x3
   216c1:	lea    rsi,[rdx+rdx*4]
   216c5:	add    rsi,rsi
   216c8:	sub    rax,rsi
   216cb:	add    eax,0x30
   216ce:	mov    BYTE PTR [r12],al
   216d2:	mov    rax,rcx
   216d5:	mov    rcx,rdx
   216d8:	cmp    rax,0x9
   216dc:	ja     216b0 <__sprintf_chk@plt+0x16d00>
   216de:	mov    rdi,r12
   216e1:	call   a060 <strlen@plt>
   216e6:	mov    rdx,r12
   216e9:	mov    rsi,r13
   216ec:	mov    rdi,rbp
   216ef:	mov    rcx,rax
   216f2:	call   20950 <__sprintf_chk@plt+0x15fa0>
   216f7:	mov    rax,QWORD PTR [rsp+0x18]
   216fc:	sub    rax,QWORD PTR fs:0x28
   21705:	jne    21711 <__sprintf_chk@plt+0x16d61>
   21707:	add    rsp,0x20
   2170b:	pop    rbp
   2170c:	pop    r12
   2170e:	pop    r13
   21710:	ret    
   21711:	call   a0a0 <__stack_chk_fail@plt>
   21716:	cs nop WORD PTR [rax+rax*1+0x0]
   21720:	endbr64 
   21724:	push   r13
   21726:	mov    r13,rsi
   21729:	push   r12
   2172b:	push   rbp
   2172c:	mov    rbp,rdx
   2172f:	sub    rsp,0x20
   21733:	mov    ecx,DWORD PTR [rdi+0x128]
   21739:	movabs rdi,0xcccccccccccccccd
   21743:	mov    rax,QWORD PTR fs:0x28
   2174c:	mov    QWORD PTR [rsp+0x18],rax
   21751:	xor    eax,eax
   21753:	mov    BYTE PTR [rsp+0x14],0x0
   21758:	lea    r12,[rsp+0x14]
   2175d:	nop    DWORD PTR [rax]
   21760:	mov    rax,rcx
   21763:	sub    r12,0x1
   21767:	mul    rdi
   2176a:	mov    rax,rcx
   2176d:	shr    rdx,0x3
   21771:	lea    rsi,[rdx+rdx*4]
   21775:	add    rsi,rsi
   21778:	sub    rax,rsi
   2177b:	add    eax,0x30
   2177e:	mov    BYTE PTR [r12],al
   21782:	mov    rax,rcx
   21785:	mov    rcx,rdx
   21788:	cmp    rax,0x9
   2178c:	ja     21760 <__sprintf_chk@plt+0x16db0>
   2178e:	mov    rdi,r12
   21791:	call   a060 <strlen@plt>
   21796:	mov    rdx,r12
   21799:	mov    rsi,r13
   2179c:	mov    rdi,rbp
   2179f:	mov    rcx,rax
   217a2:	call   20950 <__sprintf_chk@plt+0x15fa0>
   217a7:	mov    rax,QWORD PTR [rsp+0x18]
   217ac:	sub    rax,QWORD PTR fs:0x28
   217b5:	jne    217c1 <__sprintf_chk@plt+0x16e11>
   217b7:	add    rsp,0x20
   217bb:	pop    rbp
   217bc:	pop    r12
   217be:	pop    r13
   217c0:	ret    
   217c1:	call   a0a0 <__stack_chk_fail@plt>
   217c6:	cs nop WORD PTR [rax+rax*1+0x0]
   217d0:	push   r14
   217d2:	push   r13
   217d4:	push   r12
   217d6:	push   rbp
   217d7:	mov    ebp,edi
   217d9:	mov    rdi,rsi
   217dc:	push   rbx
   217dd:	mov    rbx,rcx
   217e0:	mov    r13,QWORD PTR [rcx+0x8]
   217e4:	cmp    bpl,0x67
   217e8:	je     219c5 <__sprintf_chk@plt+0x17015>
   217ee:	cmp    bpl,0x78
   217f2:	jne    21808 <__sprintf_chk@plt+0x16e58>
   217f4:	cmp    QWORD PTR [rip+0x5e044],0x0        # 7f840 <obstack_alloc_failed_handler@@Base+0xa08>
   217fc:	je     21808 <__sprintf_chk@plt+0x16e58>
   217fe:	mov    rdx,QWORD PTR [rip+0x5e033]        # 7f838 <obstack_alloc_failed_handler@@Base+0xa00>
   21805:	nop    DWORD PTR [rax]
   21808:	mov    rsi,r13
   2180b:	xor    r12d,r12d
   2180e:	call   10830 <__sprintf_chk@plt+0x5e80>
   21813:	mov    BYTE PTR [rax+0x9c],bpl
   2181a:	mov    rdi,rax
   2181d:	call   10a30 <__sprintf_chk@plt+0x6080>
   21822:	mov    r14,QWORD PTR [rbx+0x10]
   21826:	mov    rax,QWORD PTR [rip+0x5dd53]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2182d:	jmp    218bf <__sprintf_chk@plt+0x16f0f>
   21832:	nop    WORD PTR [rax+rax*1+0x0]
   21838:	mov    rax,QWORD PTR [r14]
   2183b:	lea    rdi,[r8+0x8]
   2183f:	mov    rsi,r14
   21842:	sub    r13,0x200
   21849:	and    rdi,0xfffffffffffffff8
   2184d:	mov    QWORD PTR [r8],rax
   21850:	mov    rax,QWORD PTR [r14+0x1f8]
   21857:	mov    QWORD PTR [r8+0x1f8],rax
   2185e:	mov    rax,r8
   21861:	sub    rax,rdi
   21864:	lea    ecx,[rax+0x200]
   2186a:	sub    rsi,rax
   2186d:	mov    eax,ecx
   2186f:	shr    eax,0x3
   21872:	mov    ecx,eax
   21874:	mov    eax,0x200
   21879:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   2187c:	mov    rdx,QWORD PTR [rip+0x5dcbd]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   21883:	add    r14,rax
   21886:	cmp    rdx,r8
   21889:	ja     218a6 <__sprintf_chk@plt+0x16ef6>
   2188b:	mov    rax,r8
   2188e:	sub    rax,rdx
   21891:	and    rax,0xfffffffffffffe00
   21897:	lea    rdx,[rdx+rax*1+0x200]
   2189f:	mov    QWORD PTR [rip+0x5dc9a],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   218a6:	mov    rax,QWORD PTR [rip+0x5dcd3]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   218ad:	cmp    rdx,rax
   218b0:	ja     aa53 <__sprintf_chk@plt+0xa3>
   218b6:	test   r13,r13
   218b9:	je     21980 <__sprintf_chk@plt+0x16fd0>
   218bf:	mov    r8,QWORD PTR [rip+0x5dc7a]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   218c6:	cmp    r8,rax
   218c9:	je     21920 <__sprintf_chk@plt+0x16f70>
   218cb:	cmp    r13,0x1ff
   218d2:	ja     21838 <__sprintf_chk@plt+0x16e88>
   218d8:	mov    rdx,r13
   218db:	mov    rdi,r8
   218de:	mov    rsi,r14
   218e1:	call   a420 <memcpy@plt>
   218e6:	mov    r8,rax
   218e9:	mov    eax,0x200
   218ee:	sub    rax,r13
   218f1:	lea    rdx,[r8+r13*1]
   218f5:	cmp    eax,0x8
   218f8:	jae    21950 <__sprintf_chk@plt+0x16fa0>
   218fa:	test   al,0x4
   218fc:	jne    219ea <__sprintf_chk@plt+0x1703a>
   21902:	test   eax,eax
   21904:	je     21911 <__sprintf_chk@plt+0x16f61>
   21906:	mov    BYTE PTR [rdx],0x0
   21909:	test   al,0x2
   2190b:	jne    219ff <__sprintf_chk@plt+0x1704f>
   21911:	mov    rax,r13
   21914:	xor    r13d,r13d
   21917:	jmp    2187c <__sprintf_chk@plt+0x16ecc>
   2191c:	nop    DWORD PTR [rax+0x0]
   21920:	xor    r8d,r8d
   21923:	cmp    BYTE PTR [rip+0x5dc0a],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2192a:	jne    218cb <__sprintf_chk@plt+0x16f1b>
   2192c:	call   f170 <__sprintf_chk@plt+0x47c0>
   21931:	mov    r8,QWORD PTR [rip+0x5dc08]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   21938:	cmp    r8,QWORD PTR [rip+0x5dc41]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2193f:	jne    218cb <__sprintf_chk@plt+0x16f1b>
   21941:	mov    BYTE PTR [rip+0x5dbec],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   21948:	xor    r8d,r8d
   2194b:	jmp    218cb <__sprintf_chk@plt+0x16f1b>
   21950:	lea    rdi,[rdx+0x8]
   21954:	mov    ecx,eax
   21956:	mov    QWORD PTR [rdx],0x0
   2195d:	mov    QWORD PTR [rdx+rcx*1-0x8],0x0
   21966:	and    rdi,0xfffffffffffffff8
   2196a:	sub    rdx,rdi
   2196d:	lea    ecx,[rax+rdx*1]
   21970:	mov    eax,ecx
   21972:	shr    eax,0x3
   21975:	mov    ecx,eax
   21977:	mov    rax,r12
   2197a:	rep stos QWORD PTR es:[rdi],rax
   2197d:	jmp    21911 <__sprintf_chk@plt+0x16f61>
   2197f:	nop
   21980:	mov    rdi,QWORD PTR [rbx]
   21983:	test   rdi,rdi
   21986:	je     219df <__sprintf_chk@plt+0x1702f>
   21988:	xor    esi,esi
   2198a:	call   4cbf0 <_obstack_free@@Base>
   2198f:	mov    rdi,QWORD PTR [rbx]
   21992:	call   9ce0 <free@plt>
   21997:	mov    QWORD PTR [rbx],0x0
   2199e:	mov    QWORD PTR [rbx+0x10],0x0
   219a6:	mov    QWORD PTR [rbx+0x8],0x0
   219ae:	cmp    bpl,0x67
   219b2:	jne    219bc <__sprintf_chk@plt+0x1700c>
   219b4:	add    QWORD PTR [rip+0x5de5c],0x1        # 7f818 <obstack_alloc_failed_handler@@Base+0x9e0>
   219bc:	pop    rbx
   219bd:	pop    rbp
   219be:	pop    r12
   219c0:	pop    r13
   219c2:	pop    r14
   219c4:	ret    
   219c5:	cmp    QWORD PTR [rip+0x5de63],0x0        # 7f830 <obstack_alloc_failed_handler@@Base+0x9f8>
   219cd:	je     21808 <__sprintf_chk@plt+0x16e58>
   219d3:	mov    rdx,QWORD PTR [rip+0x5de4e]        # 7f828 <obstack_alloc_failed_handler@@Base+0x9f0>
   219da:	jmp    21808 <__sprintf_chk@plt+0x16e58>
   219df:	mov    rdi,QWORD PTR [rbx+0x10]
   219e3:	call   9ce0 <free@plt>
   219e8:	jmp    2199e <__sprintf_chk@plt+0x16fee>
   219ea:	mov    eax,eax
   219ec:	mov    DWORD PTR [rdx],0x0
   219f2:	mov    DWORD PTR [rdx+rax*1-0x4],0x0
   219fa:	jmp    21911 <__sprintf_chk@plt+0x16f61>
   219ff:	mov    eax,eax
   21a01:	xor    ecx,ecx
   21a03:	mov    WORD PTR [rdx+rax*1-0x2],cx
   21a08:	jmp    21911 <__sprintf_chk@plt+0x16f61>
   21a0d:	nop    DWORD PTR [rax]
   21a10:	endbr64 
   21a14:	push   r15
   21a16:	push   r14
   21a18:	push   r13
   21a1a:	push   r12
   21a1c:	push   rbp
   21a1d:	push   rbx
   21a1e:	sub    rsp,0x288
   21a25:	mov    rax,QWORD PTR fs:0x28
   21a2e:	mov    QWORD PTR [rsp+0x278],rax
   21a36:	xor    eax,eax
   21a38:	cmp    DWORD PTR [rip+0x5ddc1],0x2        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   21a3f:	je     21a4e <__sprintf_chk@plt+0x1709e>
   21a41:	movzx  eax,BYTE PTR [rip+0x5ddb4]        # 7f7fc <obstack_alloc_failed_handler@@Base+0x9c4>
   21a48:	xor    eax,0x1
   21a4b:	movzx  eax,al
   21a4e:	mov    edi,0x1
   21a53:	mov    QWORD PTR [rip+0x5de4e],rax        # 7f8a8 <obstack_alloc_failed_handler@@Base+0xa70>
   21a5a:	call   10ec0 <__sprintf_chk@plt+0x6510>
   21a5f:	mov    rbx,QWORD PTR [rip+0x5dd52]        # 7f7b8 <obstack_alloc_failed_handler@@Base+0x980>
   21a66:	test   rbx,rbx
   21a69:	je     21a98 <__sprintf_chk@plt+0x170e8>
   21a6b:	cmp    QWORD PTR [rip+0x5d7d5],0x0        # 7f248 <obstack_alloc_failed_handler@@Base+0x410>
   21a73:	je     22863 <__sprintf_chk@plt+0x17eb3>
   21a79:	lea    rbp,[rip+0x5d7c8]        # 7f248 <obstack_alloc_failed_handler@@Base+0x410>
   21a80:	mov    rsi,QWORD PTR [rbx+0x8]
   21a84:	mov    rdi,QWORD PTR [rbx+0x10]
   21a88:	mov    rdx,rbp
   21a8b:	call   20c10 <__sprintf_chk@plt+0x16260>
   21a90:	mov    rbx,QWORD PTR [rbx]
   21a93:	test   rbx,rbx
   21a96:	jne    21a80 <__sprintf_chk@plt+0x170d0>
   21a98:	cmp    QWORD PTR [rip+0x5d7a8],0x0        # 7f248 <obstack_alloc_failed_handler@@Base+0x410>
   21aa0:	je     21ad8 <__sprintf_chk@plt+0x17128>
   21aa2:	lea    r12,[rip+0x5d79f]        # 7f248 <obstack_alloc_failed_handler@@Base+0x410>
   21aa9:	mov    rdi,r12
   21aac:	call   20cd0 <__sprintf_chk@plt+0x16320>
   21ab1:	call   1ca70 <__sprintf_chk@plt+0x120c0>
   21ab6:	mov    rdx,QWORD PTR [rip+0x5d5b3]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
   21abd:	mov    edi,0x67
   21ac2:	mov    rcx,r12
   21ac5:	mov    rbp,rax
   21ac8:	mov    rsi,rax
   21acb:	call   217d0 <__sprintf_chk@plt+0x16e20>
   21ad0:	mov    rdi,rbp
   21ad3:	call   9ce0 <free@plt>
   21ad8:	cmp    BYTE PTR [rip+0x5d405],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   21adf:	jne    21cd1 <__sprintf_chk@plt+0x17321>
   21ae5:	nop    DWORD PTR [rax]
   21ae8:	mov    edi,0x1
   21aed:	call   2b560 <__sprintf_chk@plt+0x20bb0>
   21af2:	test   rax,rax
   21af5:	je     21b32 <__sprintf_chk@plt+0x17182>
   21af7:	mov    rbp,QWORD PTR [rax+0x18]
   21afb:	test   rbp,rbp
   21afe:	je     21b32 <__sprintf_chk@plt+0x17182>
   21b00:	mov    rax,QWORD PTR [rip+0x5dce1]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   21b07:	mov    rsi,rbp
   21b0a:	mov    rdi,QWORD PTR [rax]
   21b0d:	call   61510 <_obstack_memory_used@@Base+0x14890>
   21b12:	test   al,al
   21b14:	jne    21ae8 <__sprintf_chk@plt+0x17138>
   21b16:	xor    edi,edi
   21b18:	mov    rdx,rbp
   21b1b:	mov    rsi,rbp
   21b1e:	call   1f6a0 <__sprintf_chk@plt+0x14cf0>
   21b23:	mov    edi,0x1
   21b28:	call   2b560 <__sprintf_chk@plt+0x20bb0>
   21b2d:	test   rax,rax
   21b30:	jne    21af7 <__sprintf_chk@plt+0x17147>
   21b32:	call   107c0 <__sprintf_chk@plt+0x5e10>
   21b37:	call   14a80 <__sprintf_chk@plt+0xa0d0>
   21b3c:	call   3be20 <__sprintf_chk@plt+0x31470>
   21b41:	cmp    QWORD PTR [rip+0x5d46f],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   21b49:	je     21ca8 <__sprintf_chk@plt+0x172f8>
   21b4f:	mov    rbp,QWORD PTR [rip+0x5dc9a]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   21b56:	test   rbp,rbp
   21b59:	je     21ca8 <__sprintf_chk@plt+0x172f8>
   21b5f:	xor    edx,edx
   21b61:	xor    esi,esi
   21b63:	mov    rdi,rbp
   21b66:	call   a6b0 <fseeko@plt>
   21b6b:	test   eax,eax
   21b6d:	jne    228d0 <__sprintf_chk@plt+0x17f20>
   21b73:	mov    rdi,rbp
   21b76:	call   a450 <fileno@plt>
   21b7b:	mov    edi,eax
   21b7d:	call   33660 <__sprintf_chk@plt+0x28cb0>
   21b82:	test   eax,eax
   21b84:	jne    228b8 <__sprintf_chk@plt+0x17f08>
   21b8a:	mov    r9d,0x2
   21b90:	mov    esi,0x1
   21b95:	mov    rdi,rbp
   21b98:	xor    eax,eax
   21b9a:	lea    r8,[rip+0x41568]        # 63109 <_obstack_memory_used@@Base+0x16489>
   21ba1:	lea    rcx,[rip+0x42849]        # 643f1 <_obstack_memory_used@@Base+0x17771>
   21ba8:	lea    rdx,[rip+0x4284a]        # 643f9 <_obstack_memory_used@@Base+0x17779>
   21baf:	lea    r13,[rsp+0x80]
   21bb7:	call   a840 <__fprintf_chk@plt>
   21bbc:	mov    rdi,QWORD PTR [rip+0x5d4ad]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
   21bc3:	mov    rsi,r13
   21bc6:	call   49490 <argp_usage@@Base+0x6110>
   21bcb:	mov    rdi,rax
   21bce:	mov    r12,rax
   21bd1:	call   a060 <strlen@plt>
   21bd6:	mov    rcx,rbp
   21bd9:	mov    edx,0x1
   21bde:	mov    rdi,r12
   21be1:	lea    rsi,[rax+0x1]
   21be5:	call   a550 <fwrite_unlocked@plt>
   21bea:	mov    rdi,QWORD PTR [rip+0x5d487]        # 7f078 <obstack_alloc_failed_handler@@Base+0x240>
   21bf1:	mov    rsi,r13
   21bf4:	call   49530 <argp_usage@@Base+0x61b0>
   21bf9:	mov    rdi,rax
   21bfc:	mov    r12,rax
   21bff:	call   a060 <strlen@plt>
   21c04:	mov    edx,0x1
   21c09:	mov    rcx,rbp
   21c0c:	mov    rdi,r12
   21c0f:	lea    rsi,[rax+0x1]
   21c13:	call   a550 <fwrite_unlocked@plt>
   21c18:	mov    edx,DWORD PTR [rbp+0x0]
   21c1b:	test   dl,0x20
   21c1e:	jne    21c6f <__sprintf_chk@plt+0x172bf>
   21c20:	mov    rax,QWORD PTR [rip+0x5d339]        # 7ef60 <obstack_alloc_failed_handler@@Base+0x128>
   21c27:	mov    QWORD PTR [rsp+0x18],rax
   21c2c:	test   rax,rax
   21c2f:	je     21c82 <__sprintf_chk@plt+0x172d2>
   21c31:	movabs r12,0xcccccccccccccccd
   21c3b:	mov    rax,QWORD PTR [rax]
   21c3e:	mov    QWORD PTR [rsp+0x8],rax
   21c43:	mov    rax,QWORD PTR [rsp+0x18]
   21c48:	mov    rcx,QWORD PTR [rsp+0x8]
   21c4d:	cmp    rcx,QWORD PTR [rax+0x8]
   21c51:	jae    21c6a <__sprintf_chk@plt+0x172ba>
   21c53:	mov    rax,QWORD PTR [rsp+0x8]
   21c58:	cmp    QWORD PTR [rax],0x0
   21c5c:	jne    22558 <__sprintf_chk@plt+0x17ba8>
   21c62:	add    QWORD PTR [rsp+0x8],0x10
   21c68:	jmp    21c43 <__sprintf_chk@plt+0x17293>
   21c6a:	and    dl,0x20
   21c6d:	je     21c82 <__sprintf_chk@plt+0x172d2>
   21c6f:	mov    rsi,QWORD PTR [rip+0x5d342]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   21c76:	lea    rdi,[rip+0x45ab9]        # 67736 <_obstack_memory_used@@Base+0x1aab6>
   21c7d:	call   3bad0 <__sprintf_chk@plt+0x31120>
   21c82:	mov    rdi,rbp
   21c85:	call   9ff0 <fclose@plt>
   21c8a:	test   eax,eax
   21c8c:	je     21ca8 <__sprintf_chk@plt+0x172f8>
   21c8e:	mov    rsi,QWORD PTR [rip+0x5d323]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   21c95:	lea    rdi,[rip+0x44dc0]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   21c9c:	call   3bad0 <__sprintf_chk@plt+0x31120>
   21ca1:	nop    DWORD PTR [rax+0x0]
   21ca8:	mov    rax,QWORD PTR [rsp+0x278]
   21cb0:	sub    rax,QWORD PTR fs:0x28
   21cb9:	jne    22ba9 <__sprintf_chk@plt+0x181f9>
   21cbf:	add    rsp,0x288
   21cc6:	pop    rbx
   21cc7:	pop    rbp
   21cc8:	pop    r12
   21cca:	pop    r13
   21ccc:	pop    r14
   21cce:	pop    r15
   21cd0:	ret    
   21cd1:	call   2c400 <__sprintf_chk@plt+0x21a50>
   21cd6:	mov    rbx,QWORD PTR [rip+0x5dafb]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21cdd:	test   rbx,rbx
   21ce0:	je     2295c <__sprintf_chk@plt+0x17fac>
   21ce6:	cmp    QWORD PTR [rip+0x5d2ca],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   21cee:	je     21d33 <__sprintf_chk@plt+0x17383>
   21cf0:	mov    rax,QWORD PTR [rip+0x5dac9]        # 7f7c0 <obstack_alloc_failed_handler@@Base+0x988>
   21cf7:	test   rax,rax
   21cfa:	je     21d1b <__sprintf_chk@plt+0x1736b>
   21cfc:	sub    eax,0x1
   21cff:	je     21d1b <__sprintf_chk@plt+0x1736b>
   21d01:	sub    eax,0x1
   21d04:	jne    22be2 <__sprintf_chk@plt+0x18232>
   21d0a:	mov    rax,QWORD PTR [rip+0x5dac7]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21d11:	cmp    DWORD PTR [rax+0x28],0x0
   21d15:	je     22bae <__sprintf_chk@plt+0x181fe>
   21d1b:	call   2a0f0 <__sprintf_chk@plt+0x1f740>
   21d20:	mov    rdi,QWORD PTR [rip+0x5dab1]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21d27:	mov    rbx,rdi
   21d2a:	test   rdi,rdi
   21d2d:	je     2298f <__sprintf_chk@plt+0x17fdf>
   21d33:	xor    ebp,ebp
   21d35:	lea    r12,[rsp+0xc0]
   21d3d:	jmp    21d4f <__sprintf_chk@plt+0x1739f>
   21d3f:	nop
   21d40:	mov    rbx,QWORD PTR [rbx]
   21d43:	add    ebp,0x1
   21d46:	test   rbx,rbx
   21d49:	je     21dd0 <__sprintf_chk@plt+0x17420>
   21d4f:	cmp    QWORD PTR [rbx+0x30],0x0
   21d54:	jne    21d40 <__sprintf_chk@plt+0x17390>
   21d56:	cmp    QWORD PTR [rbx+0x38],0x0
   21d5b:	jne    21d40 <__sprintf_chk@plt+0x17390>
   21d5d:	test   BYTE PTR [rbx+0x23],0x10
   21d61:	jne    21d40 <__sprintf_chk@plt+0x17390>
   21d63:	mov    edi,DWORD PTR [rbx+0x28]
   21d66:	cmp    edi,DWORD PTR [rip+0x5da5c]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   21d6c:	je     21d73 <__sprintf_chk@plt+0x173c3>
   21d6e:	call   26d40 <__sprintf_chk@plt+0x1c390>
   21d73:	mov    rax,QWORD PTR [rbx+0x10]
   21d77:	cmp    BYTE PTR [rax],0x0
   21d7a:	je     21d40 <__sprintf_chk@plt+0x17390>
   21d7c:	mov    rdi,r12
   21d7f:	lea    r13,[rsp+0x118]
   21d87:	call   3b1c0 <__sprintf_chk@plt+0x30810>
   21d8c:	mov    rsi,QWORD PTR [rbx+0x10]
   21d90:	mov    ecx,DWORD PTR [rip+0x5d1de]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   21d96:	mov    rdx,r13
   21d99:	mov    edi,DWORD PTR [rip+0x5a281]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   21d9f:	call   a960 <fstatat@plt>
   21da4:	test   eax,eax
   21da6:	jne    22981 <__sprintf_chk@plt+0x17fd1>
   21dac:	mov    eax,DWORD PTR [rsp+0x130]
   21db3:	and    eax,0xf000
   21db8:	cmp    eax,0x4000
   21dbd:	je     22912 <__sprintf_chk@plt+0x17f62>
   21dc3:	mov    rdi,r12
   21dc6:	call   44a50 <argp_usage@@Base+0x16d0>
   21dcb:	jmp    21d40 <__sprintf_chk@plt+0x17390>
   21dd0:	mov    rdi,QWORD PTR [rip+0x5da01]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21dd7:	lea    rdx,[rip+0x11c2]        # 22fa0 <__sprintf_chk@plt+0x185f0>
   21dde:	mov    esi,ebp
   21de0:	call   29510 <__sprintf_chk@plt+0x1eb60>
   21de5:	mov    rbx,rax
   21de8:	test   rax,rax
   21deb:	je     22ac7 <__sprintf_chk@plt+0x18117>
   21df1:	mov    rbp,rax
   21df4:	xor    eax,eax
   21df6:	cs nop WORD PTR [rax+rax*1+0x0]
   21e00:	mov    QWORD PTR [rbp+0x8],rax
   21e04:	mov    rax,rbp
   21e07:	mov    rbp,QWORD PTR [rbp+0x0]
   21e0b:	test   rbp,rbp
   21e0e:	jne    21e00 <__sprintf_chk@plt+0x17450>
   21e10:	xor    r8d,r8d
   21e13:	lea    rcx,[rip+0xb2b6]        # 2d0d0 <__sprintf_chk@plt+0x22720>
   21e1a:	xor    esi,esi
   21e1c:	xor    edi,edi
   21e1e:	lea    rdx,[rip+0xb1bb]        # 2cfe0 <__sprintf_chk@plt+0x22630>
   21e25:	mov    QWORD PTR [rip+0x5d9ac],rbx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21e2c:	xor    r13d,r13d
   21e2f:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   21e34:	mov    r12,rax
   21e37:	lea    rax,[rsp+0x20]
   21e3c:	mov    QWORD PTR [rsp],rax
   21e40:	jmp    21ec2 <__sprintf_chk@plt+0x17512>
   21e45:	nop    DWORD PTR [rax]
   21e48:	mov    rsi,r15
   21e4b:	mov    rdi,r12
   21e4e:	call   48bc0 <argp_usage@@Base+0x5840>
   21e53:	mov    r14,rax
   21e56:	test   rax,rax
   21e59:	je     21ee2 <__sprintf_chk@plt+0x17532>
   21e5f:	cmp    QWORD PTR [r15+0x40],0x0
   21e64:	je     220b0 <__sprintf_chk@plt+0x17700>
   21e6a:	mov    rdi,QWORD PTR [r15+0x48]
   21e6e:	test   rdi,rdi
   21e71:	je     21e80 <__sprintf_chk@plt+0x174d0>
   21e73:	mov    rdx,QWORD PTR [rax+0x18]
   21e77:	mov    rsi,QWORD PTR [rax+0x10]
   21e7b:	call   61810 <_obstack_memory_used@@Base+0x14b90>
   21e80:	mov    rax,QWORD PTR [r15+0x8]
   21e84:	mov    rdx,QWORD PTR [r15]
   21e87:	test   rax,rax
   21e8a:	je     2213a <__sprintf_chk@plt+0x1778a>
   21e90:	mov    QWORD PTR [rax],rdx
   21e93:	mov    rdx,QWORD PTR [r15]
   21e96:	test   rdx,rdx
   21e99:	je     2212e <__sprintf_chk@plt+0x1777e>
   21e9f:	mov    QWORD PTR [rdx+0x8],rax
   21ea3:	mov    rdi,QWORD PTR [r15+0x10]
   21ea7:	call   9ce0 <free@plt>
   21eac:	mov    rdi,QWORD PTR [r15+0x58]
   21eb0:	call   9ce0 <free@plt>
   21eb5:	mov    rdi,r15
   21eb8:	call   9ce0 <free@plt>
   21ebd:	test   rbx,rbx
   21ec0:	je     21f1e <__sprintf_chk@plt+0x1756e>
   21ec2:	mov    r15,rbx
   21ec5:	mov    rbx,QWORD PTR [rbx]
   21ec8:	mov    rsi,QWORD PTR [r15+0x10]
   21ecc:	mov    edi,DWORD PTR [r15+0x28]
   21ed0:	call   26ea0 <__sprintf_chk@plt+0x1c4f0>
   21ed5:	mov    QWORD PTR [r15+0x58],rax
   21ed9:	test   rbp,rbp
   21edc:	jne    21e48 <__sprintf_chk@plt+0x17498>
   21ee2:	mov    QWORD PTR [r15+0x30],0x0
   21eea:	mov    rdx,QWORD PTR [rsp]
   21eee:	mov    rsi,r15
   21ef1:	mov    rdi,r12
   21ef4:	call   49270 <argp_usage@@Base+0x5ef0>
   21ef9:	cmp    eax,0xffffffff
   21efc:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   21f02:	test   eax,eax
   21f04:	jne    21f12 <__sprintf_chk@plt+0x17562>
   21f06:	cmp    QWORD PTR [rsp+0x20],0x0
   21f0c:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   21f12:	add    r13d,0x1
   21f16:	mov    rbp,r15
   21f19:	test   rbx,rbx
   21f1c:	jne    21ec2 <__sprintf_chk@plt+0x17512>
   21f1e:	mov    rdi,r12
   21f21:	mov    QWORD PTR [rip+0x5d8a8],rbp        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   21f28:	call   48e30 <argp_usage@@Base+0x5ab0>
   21f2d:	mov    rdi,QWORD PTR [rip+0x5d8a4]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21f34:	lea    rdx,[rip+0x1005]        # 22f40 <__sprintf_chk@plt+0x18590>
   21f3b:	mov    esi,r13d
   21f3e:	call   29510 <__sprintf_chk@plt+0x1eb60>
   21f43:	test   rax,rax
   21f46:	je     22aa5 <__sprintf_chk@plt+0x180f5>
   21f4c:	mov    rdx,rax
   21f4f:	xor    ecx,ecx
   21f51:	nop    DWORD PTR [rax+0x0]
   21f58:	mov    QWORD PTR [rdx+0x8],rcx
   21f5c:	mov    rcx,rdx
   21f5f:	mov    rdx,QWORD PTR [rdx]
   21f62:	test   rdx,rdx
   21f65:	jne    21f58 <__sprintf_chk@plt+0x175a8>
   21f67:	cmp    QWORD PTR [rip+0x5d049],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   21f6f:	mov    QWORD PTR [rip+0x5d862],rax        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   21f76:	jne    21f8c <__sprintf_chk@plt+0x175dc>
   21f78:	jmp    222f0 <__sprintf_chk@plt+0x17940>
   21f7d:	nop    DWORD PTR [rax]
   21f80:	mov    rax,QWORD PTR [rax]
   21f83:	test   rax,rax
   21f86:	je     222f0 <__sprintf_chk@plt+0x17940>
   21f8c:	mov    rdx,QWORD PTR [rax+0x10]
   21f90:	cmp    BYTE PTR [rdx],0x0
   21f93:	je     21f80 <__sprintf_chk@plt+0x175d0>
   21f95:	mov    rax,QWORD PTR [rax+0x38]
   21f99:	cmp    QWORD PTR [rip+0x5cfaf],0x0        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   21fa1:	mov    QWORD PTR [rsp],rax
   21fa5:	je     222f0 <__sprintf_chk@plt+0x17940>
   21fab:	mov    r8,QWORD PTR [rip+0x59fd6]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   21fb2:	lea    rbp,[rsp+0x20]
   21fb7:	xor    edx,edx
   21fb9:	xor    esi,esi
   21fbb:	lea    rcx,[rip+0x236de]        # 456a0 <argp_usage@@Base+0x2320>
   21fc2:	mov    rdi,rbp
   21fc5:	call   4ca40 <_obstack_begin@@Base>
   21fca:	mov    rax,QWORD PTR [rsp]
   21fce:	test   rax,rax
   21fd1:	je     22b75 <__sprintf_chk@plt+0x181c5>
   21fd7:	mov    rax,QWORD PTR [rax+0x28]
   21fdb:	test   rax,rax
   21fde:	je     22996 <__sprintf_chk@plt+0x17fe6>
   21fe4:	mov    r14,QWORD PTR [rax]
   21fe7:	test   r14,r14
   21fea:	je     22996 <__sprintf_chk@plt+0x17fe6>
   21ff0:	mov    rbx,r14
   21ff3:	xor    r12d,r12d
   21ff6:	jmp    2200a <__sprintf_chk@plt+0x1765a>
   21ff8:	mov    rdi,rbx
   21ffb:	call   a060 <strlen@plt>
   22000:	add    rax,0x1
   22004:	add    r12,rax
   22007:	add    rbx,rax
   2200a:	cmp    BYTE PTR [rbx],0x0
   2200d:	jne    21ff8 <__sprintf_chk@plt+0x17648>
   2200f:	mov    rax,QWORD PTR [rsp+0x40]
   22014:	sub    rax,QWORD PTR [rsp+0x38]
   22019:	cmp    rax,r12
   2201c:	jb     22b1b <__sprintf_chk@plt+0x1816b>
   22022:	mov    rdi,QWORD PTR [rsp+0x38]
   22027:	mov    rdx,r12
   2202a:	mov    rsi,r14
   2202d:	call   a420 <memcpy@plt>
   22032:	add    QWORD PTR [rsp+0x38],r12
   22037:	mov    rbx,QWORD PTR [rip+0x5cf12]        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   2203e:	test   rbx,rbx
   22041:	jne    2205c <__sprintf_chk@plt+0x176ac>
   22043:	jmp    2223a <__sprintf_chk@plt+0x1788a>
   22048:	nop    DWORD PTR [rax+rax*1+0x0]
   22050:	mov    rbx,QWORD PTR [rbx]
   22053:	test   rbx,rbx
   22056:	je     2222f <__sprintf_chk@plt+0x1787f>
   2205c:	test   BYTE PTR [rbx+0x3c],0x10
   22060:	je     22050 <__sprintf_chk@plt+0x176a0>
   22062:	mov    rax,rbx
   22065:	nop    DWORD PTR [rax]
   22068:	mov    r13,rax
   2206b:	mov    rax,QWORD PTR [rax+0x40]
   2206f:	cmp    rax,rbx
   22072:	je     229d4 <__sprintf_chk@plt+0x18024>
   22078:	test   rax,rax
   2207b:	jne    22068 <__sprintf_chk@plt+0x176b8>
   2207d:	mov    r15,rbx
   22080:	jmp    220a1 <__sprintf_chk@plt+0x176f1>
   22082:	nop    WORD PTR [rax+rax*1+0x0]
   22088:	mov    rdx,QWORD PTR [r15+0x58]
   2208c:	mov    rsi,QWORD PTR [rax+0x58]
   22090:	mov    rdi,rbp
   22093:	call   29a10 <__sprintf_chk@plt+0x1f060>
   22098:	mov    r15,QWORD PTR [r15+0x40]
   2209c:	test   r15,r15
   2209f:	je     22050 <__sprintf_chk@plt+0x176a0>
   220a1:	mov    rax,QWORD PTR [r15+0x40]
   220a5:	test   rax,rax
   220a8:	jne    22088 <__sprintf_chk@plt+0x176d8>
   220aa:	jmp    22050 <__sprintf_chk@plt+0x176a0>
   220ac:	nop    DWORD PTR [rax+0x0]
   220b0:	mov    rdi,QWORD PTR [rax+0x48]
   220b4:	test   rdi,rdi
   220b7:	je     220c6 <__sprintf_chk@plt+0x17716>
   220b9:	mov    rdx,QWORD PTR [r15+0x18]
   220bd:	mov    rsi,QWORD PTR [r15+0x10]
   220c1:	call   61810 <_obstack_memory_used@@Base+0x14b90>
   220c6:	mov    rdx,QWORD PTR [rsp]
   220ca:	mov    ecx,0x1
   220cf:	mov    rsi,r15
   220d2:	mov    rdi,r12
   220d5:	call   48f20 <argp_usage@@Base+0x5ba0>
   220da:	test   rax,rax
   220dd:	je     220f0 <__sprintf_chk@plt+0x17740>
   220df:	mov    rax,QWORD PTR [rsp+0x20]
   220e4:	sub    QWORD PTR [r12+0x20],0x1
   220ea:	cmp    QWORD PTR [rax],0x0
   220ee:	je     22158 <__sprintf_chk@plt+0x177a8>
   220f0:	mov    rax,QWORD PTR [r14+0x8]
   220f4:	mov    rdx,QWORD PTR [r14]
   220f7:	test   rax,rax
   220fa:	je     2214f <__sprintf_chk@plt+0x1779f>
   220fc:	mov    QWORD PTR [rax],rdx
   220ff:	mov    rdx,QWORD PTR [r14]
   22102:	test   rdx,rdx
   22105:	je     22146 <__sprintf_chk@plt+0x17796>
   22107:	mov    QWORD PTR [rdx+0x8],rax
   2210b:	mov    rdi,QWORD PTR [r14+0x10]
   2210f:	sub    r13d,0x1
   22113:	call   9ce0 <free@plt>
   22118:	mov    rdi,QWORD PTR [r14+0x58]
   2211c:	call   9ce0 <free@plt>
   22121:	mov    rdi,r14
   22124:	call   9ce0 <free@plt>
   22129:	jmp    21ee2 <__sprintf_chk@plt+0x17532>
   2212e:	mov    QWORD PTR [rip+0x5d69b],rax        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   22135:	jmp    21ea3 <__sprintf_chk@plt+0x174f3>
   2213a:	mov    QWORD PTR [rip+0x5d697],rdx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   22141:	jmp    21e93 <__sprintf_chk@plt+0x174e3>
   22146:	mov    QWORD PTR [rip+0x5d683],rax        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   2214d:	jmp    2210b <__sprintf_chk@plt+0x1775b>
   2214f:	mov    QWORD PTR [rip+0x5d682],rdx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   22156:	jmp    220ff <__sprintf_chk@plt+0x1774f>
   22158:	mov    rax,QWORD PTR [r12+0x18]
   2215d:	sub    rax,0x1
   22161:	mov    QWORD PTR [r12+0x18],rax
   22166:	js     2280e <__sprintf_chk@plt+0x17e5e>
   2216c:	pxor   xmm1,xmm1
   22170:	cvtsi2ss xmm1,rax
   22175:	mov    rax,QWORD PTR [r12+0x10]
   2217a:	test   rax,rax
   2217d:	js     2282c <__sprintf_chk@plt+0x17e7c>
   22183:	pxor   xmm0,xmm0
   22187:	cvtsi2ss xmm0,rax
   2218c:	mov    rax,QWORD PTR [r12+0x28]
   22191:	movss  xmm2,DWORD PTR [rax]
   22195:	mulss  xmm2,xmm0
   22199:	comiss xmm2,xmm1
   2219c:	jbe    220f0 <__sprintf_chk@plt+0x17740>
   221a2:	mov    rdi,r12
   221a5:	movss  DWORD PTR [rsp+0x10],xmm0
   221ab:	movss  DWORD PTR [rsp+0x8],xmm1
   221b1:	call   48cf0 <argp_usage@@Base+0x5970>
   221b6:	mov    rax,QWORD PTR [r12+0x28]
   221bb:	movss  xmm0,DWORD PTR [rsp+0x10]
   221c1:	movss  xmm1,DWORD PTR [rsp+0x8]
   221c7:	movss  xmm2,DWORD PTR [rax]
   221cb:	mulss  xmm2,xmm0
   221cf:	comiss xmm2,xmm1
   221d2:	jbe    220f0 <__sprintf_chk@plt+0x17740>
   221d8:	mulss  xmm0,DWORD PTR [rax+0x4]
   221dd:	cmp    BYTE PTR [rax+0x10],0x0
   221e1:	je     229bc <__sprintf_chk@plt+0x1800c>
   221e7:	comiss xmm0,DWORD PTR [rip+0x42bd6]        # 64dc4 <_obstack_memory_used@@Base+0x18144>
   221ee:	jae    2299e <__sprintf_chk@plt+0x17fee>
   221f4:	cvttss2si rsi,xmm0
   221f9:	mov    rdi,r12
   221fc:	call   49030 <argp_usage@@Base+0x5cb0>
   22201:	test   al,al
   22203:	jne    220f0 <__sprintf_chk@plt+0x17740>
   22209:	mov    rdi,QWORD PTR [r12+0x48]
   2220e:	jmp    2221c <__sprintf_chk@plt+0x1786c>
   22210:	mov    rbp,QWORD PTR [rdi+0x8]
   22214:	call   9ce0 <free@plt>
   22219:	mov    rdi,rbp
   2221c:	test   rdi,rdi
   2221f:	jne    22210 <__sprintf_chk@plt+0x17860>
   22221:	mov    QWORD PTR [r12+0x48],0x0
   2222a:	jmp    220f0 <__sprintf_chk@plt+0x17740>
   2222f:	cmp    QWORD PTR [rsp],0x0
   22234:	je     222dc <__sprintf_chk@plt+0x1792c>
   2223a:	mov    rax,QWORD PTR [rsp+0x38]
   2223f:	mov    rdx,rax
   22242:	sub    rdx,QWORD PTR [rsp+0x30]
   22247:	cmp    rdx,r12
   2224a:	je     222dc <__sprintf_chk@plt+0x1792c>
   22250:	cmp    rax,QWORD PTR [rsp+0x40]
   22255:	je     22b8d <__sprintf_chk@plt+0x181dd>
   2225b:	lea    rdx,[rax+0x1]
   2225f:	mov    QWORD PTR [rsp+0x38],rdx
   22264:	mov    BYTE PTR [rax],0x0
   22267:	mov    rax,QWORD PTR [rsp]
   2226b:	mov    r12,QWORD PTR [rax+0x28]
   2226f:	mov    rdi,QWORD PTR [r12+0x18]
   22274:	call   9ce0 <free@plt>
   22279:	mov    rdi,r12
   2227c:	call   9ce0 <free@plt>
   22281:	mov    rdi,QWORD PTR [rsp+0x30]
   22286:	mov    rax,QWORD PTR [rsp+0x38]
   2228b:	cmp    rdi,rax
   2228e:	je     22b2b <__sprintf_chk@plt+0x1817b>
   22294:	mov    rdx,QWORD PTR [rsp+0x50]
   22299:	add    rax,rdx
   2229c:	not    rdx
   2229f:	and    rax,rdx
   222a2:	mov    rdx,QWORD PTR [rsp+0x40]
   222a7:	mov    rsi,rax
   222aa:	sub    rsi,QWORD PTR [rsp+0x28]
   222af:	mov    rcx,rdx
   222b2:	sub    rcx,QWORD PTR [rsp+0x28]
   222b7:	cmp    rsi,rcx
   222ba:	lea    rsi,[rip+0x42100]        # 643c1 <_obstack_memory_used@@Base+0x17741>
   222c1:	cmovbe rdx,rax
   222c5:	mov    QWORD PTR [rsp+0x38],rdx
   222ca:	mov    QWORD PTR [rsp+0x30],rdx
   222cf:	call   1f7a0 <__sprintf_chk@plt+0x14df0>
   222d4:	mov    rcx,QWORD PTR [rsp]
   222d8:	mov    QWORD PTR [rcx+0x28],rax
   222dc:	xor    esi,esi
   222de:	mov    rdi,rbp
   222e1:	call   4cbf0 <_obstack_free@@Base>
   222e6:	cs nop WORD PTR [rax+rax*1+0x0]
   222f0:	call   32220 <__sprintf_chk@plt+0x27870>
   222f5:	mov    r15,rax
   222f8:	test   rax,rax
   222fb:	je     2232f <__sprintf_chk@plt+0x1797f>
   222fd:	mov    rax,QWORD PTR [rip+0x5d4e4]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   22304:	mov    rsi,QWORD PTR [r15+0x10]
   22308:	mov    rdi,QWORD PTR [rax]
   2230b:	call   61510 <_obstack_memory_used@@Base+0x14890>
   22310:	test   al,al
   22312:	jne    222f0 <__sprintf_chk@plt+0x17940>
   22314:	mov    rsi,QWORD PTR [r15+0x10]
   22318:	xor    edi,edi
   2231a:	mov    rdx,rsi
   2231d:	call   1f6a0 <__sprintf_chk@plt+0x14cf0>
   22322:	call   32220 <__sprintf_chk@plt+0x27870>
   22327:	mov    r15,rax
   2232a:	test   rax,rax
   2232d:	jne    222fd <__sprintf_chk@plt+0x1794d>
   2232f:	mov    rax,QWORD PTR [rip+0x5d4a2]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   22336:	mov    QWORD PTR [rip+0x5d49f],0x0        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   22341:	test   rax,rax
   22344:	je     22360 <__sprintf_chk@plt+0x179b0>
   22346:	cs nop WORD PTR [rax+rax*1+0x0]
   22350:	mov    QWORD PTR [rax+0x30],0x0
   22358:	mov    rax,QWORD PTR [rax]
   2235b:	test   rax,rax
   2235e:	jne    22350 <__sprintf_chk@plt+0x179a0>
   22360:	xor    r14d,r14d
   22363:	nop    DWORD PTR [rax+rax*1+0x0]
   22368:	call   32220 <__sprintf_chk@plt+0x27870>
   2236d:	mov    rbx,rax
   22370:	test   rax,rax
   22373:	je     223ed <__sprintf_chk@plt+0x17a3d>
   22375:	mov    rax,QWORD PTR [rip+0x5d46c]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   2237c:	mov    rsi,QWORD PTR [rbx+0x10]
   22380:	mov    rdi,QWORD PTR [rax]
   22383:	call   61510 <_obstack_memory_used@@Base+0x14890>
   22388:	test   al,al
   2238a:	jne    22368 <__sprintf_chk@plt+0x179b8>
   2238c:	mov    rdi,QWORD PTR [rbx+0x10]
   22390:	call   a060 <strlen@plt>
   22395:	mov    QWORD PTR [rsp],rax
   22399:	mov    rbp,rax
   2239c:	jmp    223d5 <__sprintf_chk@plt+0x17a25>
   2239e:	xchg   ax,ax
   223a0:	movabs rax,0x5555555555555553
   223aa:	cmp    r14,rax
   223ad:	ja     22ba4 <__sprintf_chk@plt+0x181f4>
   223b3:	mov    rax,r14
   223b6:	shr    rax,1
   223b9:	lea    r14,[r14+rax*1+0x1]
   223be:	mov    rdi,r15
   223c1:	mov    rsi,r14
   223c4:	call   a570 <realloc@plt>
   223c9:	mov    r15,rax
   223cc:	test   rax,rax
   223cf:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   223d5:	cmp    rbp,r14
   223d8:	jb     223fa <__sprintf_chk@plt+0x17a4a>
   223da:	test   r15,r15
   223dd:	jne    223a0 <__sprintf_chk@plt+0x179f0>
   223df:	test   r14,r14
   223e2:	mov    eax,0x80
   223e7:	cmove  r14,rax
   223eb:	jmp    223be <__sprintf_chk@plt+0x17a0e>
   223ed:	mov    rdi,r15
   223f0:	call   9ce0 <free@plt>
   223f5:	jmp    21b32 <__sprintf_chk@plt+0x17182>
   223fa:	mov    rsi,QWORD PTR [rbx+0x10]
   223fe:	mov    rdx,rbp
   22401:	mov    rdi,r15
   22404:	call   a420 <memcpy@plt>
   22409:	cmp    BYTE PTR [r15+rbp*1-0x1],0x2f
   2240f:	je     2241e <__sprintf_chk@plt+0x17a6e>
   22411:	lea    rax,[rbp+0x1]
   22415:	mov    BYTE PTR [r15+rbp*1],0x2f
   2241a:	mov    QWORD PTR [rsp],rax
   2241e:	lea    rax,[rsp+0xc0]
   22426:	mov    rdi,rax
   22429:	mov    QWORD PTR [rsp+0x8],rax
   2242e:	call   3b1c0 <__sprintf_chk@plt+0x30810>
   22433:	mov    rax,QWORD PTR [rbx+0x38]
   22437:	test   rax,rax
   2243a:	je     22451 <__sprintf_chk@plt+0x17aa1>
   2243c:	mov    rax,QWORD PTR [rax+0x28]
   22440:	test   rax,rax
   22443:	je     22451 <__sprintf_chk@plt+0x17aa1>
   22445:	mov    rbp,QWORD PTR [rax]
   22448:	test   rbp,rbp
   2244b:	jne    224e3 <__sprintf_chk@plt+0x17b33>
   22451:	mov    rdi,QWORD PTR [rsp+0x8]
   22456:	call   44a50 <argp_usage@@Base+0x16d0>
   2245b:	jmp    22368 <__sprintf_chk@plt+0x179b8>
   22460:	cmp    QWORD PTR [rsp+0xc0],0x0
   22469:	je     22507 <__sprintf_chk@plt+0x17b57>
   2246f:	mov    rax,QWORD PTR [rsp]
   22473:	lea    r13,[rax+r12*1]
   22477:	jmp    224b5 <__sprintf_chk@plt+0x17b05>
   22479:	nop    DWORD PTR [rax+0x0]
   22480:	movabs rax,0x5555555555555553
   2248a:	cmp    r14,rax
   2248d:	ja     22ba4 <__sprintf_chk@plt+0x181f4>
   22493:	mov    rax,r14
   22496:	mov    rdi,r15
   22499:	shr    rax,1
   2249c:	lea    r14,[r14+rax*1+0x1]
   224a1:	mov    rsi,r14
   224a4:	call   a570 <realloc@plt>
   224a9:	mov    r15,rax
   224ac:	test   rax,rax
   224af:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   224b5:	cmp    r13,r14
   224b8:	ja     22480 <__sprintf_chk@plt+0x17ad0>
   224ba:	mov    rax,QWORD PTR [rsp]
   224be:	lea    r13,[rbp+0x1]
   224c2:	mov    rsi,r13
   224c5:	lea    rdi,[r15+rax*1]
   224c9:	call   9e80 <strcpy@plt>
   224ce:	mov    rdi,QWORD PTR [rsp+0x8]
   224d3:	mov    rdx,r15
   224d6:	mov    rsi,r13
   224d9:	call   1f6a0 <__sprintf_chk@plt+0x14cf0>
   224de:	lea    rbp,[rbp+r12*1+0x1]
   224e3:	movzx  r13d,BYTE PTR [rbp+0x0]
   224e8:	test   r13b,r13b
   224eb:	je     22451 <__sprintf_chk@plt+0x17aa1>
   224f1:	mov    rdi,rbp
   224f4:	call   a060 <strlen@plt>
   224f9:	mov    r12,rax
   224fc:	cmp    r13b,0x59
   22500:	jne    224de <__sprintf_chk@plt+0x17b2e>
   22502:	jmp    22460 <__sprintf_chk@plt+0x17ab0>
   22507:	mov    edi,DWORD PTR [rip+0x59b13]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   2250d:	mov    rsi,QWORD PTR [rbx+0x10]
   22511:	mov    edx,DWORD PTR [rip+0x5d2e1]        # 7f7f8 <obstack_alloc_failed_handler@@Base+0x9c0>
   22517:	call   a230 <__openat_2@plt>
   2251c:	mov    edi,eax
   2251e:	test   eax,eax
   22520:	js     22b35 <__sprintf_chk@plt+0x18185>
   22526:	lea    rsi,[rsp+0x118]
   2252e:	mov    DWORD PTR [rsp+0x268],eax
   22535:	call   a920 <fstat@plt>
   2253a:	test   eax,eax
   2253c:	jne    22b55 <__sprintf_chk@plt+0x181a5>
   22542:	mov    rdi,QWORD PTR [rbx+0x10]
   22546:	call   48620 <argp_usage@@Base+0x52a0>
   2254b:	mov    QWORD PTR [rsp+0xc0],rax
   22553:	jmp    2246f <__sprintf_chk@plt+0x17abf>
   22558:	lea    rax,[rsp+0xa0]
   22560:	mov    r14,QWORD PTR [rsp+0x8]
   22565:	mov    QWORD PTR [rsp+0x10],rax
   2256a:	nop    WORD PTR [rax+rax*1+0x0]
   22570:	mov    r13,QWORD PTR [r14]
   22573:	mov    eax,DWORD PTR [r13+0x3c]
   22577:	test   al,0x4
   22579:	je     227d9 <__sprintf_chk@plt+0x17e29>
   2257f:	test   al,0x2
   22581:	lea    rbx,[rip+0x49d05]        # 6c28d <_obstack_memory_used@@Base+0x1f60d>
   22588:	lea    rax,[rip+0x44524]        # 66ab3 <_obstack_memory_used@@Base+0x19e33>
   2258f:	cmovne rbx,rax
   22593:	lea    r15,[rbx+0x2]
   22597:	add    rbx,0x1
   2259b:	mov    rax,QWORD PTR [rbp+0x28]
   2259f:	movzx  edx,BYTE PTR [rbx-0x1]
   225a3:	cmp    rax,QWORD PTR [rbp+0x30]
   225a7:	jae    2284a <__sprintf_chk@plt+0x17e9a>
   225ad:	lea    rcx,[rax+0x1]
   225b1:	mov    QWORD PTR [rbp+0x28],rcx
   225b5:	mov    BYTE PTR [rax],dl
   225b7:	cmp    rbx,r15
   225ba:	jne    22597 <__sprintf_chk@plt+0x17be7>
   225bc:	mov    rdi,QWORD PTR [r13+0x8]
   225c0:	test   rdi,rdi
   225c3:	js     227f4 <__sprintf_chk@plt+0x17e44>
   225c9:	mov    BYTE PTR [rsp+0xb4],0x0
   225d1:	lea    rbx,[rsp+0xb4]
   225d9:	mov    r8,rbx
   225dc:	nop    DWORD PTR [rax+0x0]
   225e0:	mov    rax,rdi
   225e3:	sub    r8,0x1
   225e7:	mul    r12
   225ea:	mov    rax,rdi
   225ed:	shr    rdx,0x3
   225f1:	lea    rcx,[rdx+rdx*4]
   225f5:	add    rcx,rcx
   225f8:	sub    rax,rcx
   225fb:	add    eax,0x30
   225fe:	mov    BYTE PTR [r8],al
   22601:	mov    rax,rdi
   22604:	mov    rdi,rdx
   22607:	cmp    rax,0x9
   2260b:	ja     225e0 <__sprintf_chk@plt+0x17c30>
   2260d:	mov    rdi,r8
   22610:	mov    QWORD PTR [rsp],r8
   22614:	call   a060 <strlen@plt>
   22619:	mov    rdi,QWORD PTR [rsp]
   2261d:	mov    rcx,rbp
   22620:	mov    edx,0x1
   22625:	lea    rsi,[rax+0x1]
   22629:	call   a550 <fwrite_unlocked@plt>
   2262e:	mov    rsi,QWORD PTR [rsp+0x10]
   22633:	mov    rdi,QWORD PTR [r13+0x10]
   22637:	call   49490 <argp_usage@@Base+0x6110>
   2263c:	mov    rdi,rax
   2263f:	mov    QWORD PTR [rsp],rax
   22643:	call   a060 <strlen@plt>
   22648:	mov    rdi,QWORD PTR [rsp]
   2264c:	mov    rcx,rbp
   2264f:	mov    edx,0x1
   22654:	lea    rsi,[rax+0x1]
   22658:	call   a550 <fwrite_unlocked@plt>
   2265d:	mov    BYTE PTR [rsp+0xb4],0x0
   22665:	mov    rcx,QWORD PTR [r13+0x18]
   22669:	mov    rdi,rbx
   2266c:	nop    DWORD PTR [rax+0x0]
   22670:	mov    rax,rcx
   22673:	sub    rdi,0x1
   22677:	mul    r12
   2267a:	mov    rax,rcx
   2267d:	shr    rdx,0x3
   22681:	lea    rsi,[rdx+rdx*4]
   22685:	add    rsi,rsi
   22688:	sub    rax,rsi
   2268b:	add    eax,0x30
   2268e:	mov    BYTE PTR [rdi],al
   22690:	mov    rax,rcx
   22693:	mov    rcx,rdx
   22696:	cmp    rax,0x9
   2269a:	ja     22670 <__sprintf_chk@plt+0x17cc0>
   2269c:	mov    QWORD PTR [rsp],rdi
   226a0:	mov    r15,rbx
   226a3:	call   a060 <strlen@plt>
   226a8:	mov    rdi,QWORD PTR [rsp]
   226ac:	mov    rcx,rbp
   226af:	mov    edx,0x1
   226b4:	lea    rsi,[rax+0x1]
   226b8:	call   a550 <fwrite_unlocked@plt>
   226bd:	mov    BYTE PTR [rsp+0xb4],0x0
   226c5:	mov    rcx,QWORD PTR [r13+0x20]
   226c9:	nop    DWORD PTR [rax+0x0]
   226d0:	mov    rax,rcx
   226d3:	sub    r15,0x1
   226d7:	mul    r12
   226da:	mov    rax,rcx
   226dd:	shr    rdx,0x3
   226e1:	lea    rsi,[rdx+rdx*4]
   226e5:	add    rsi,rsi
   226e8:	sub    rax,rsi
   226eb:	add    eax,0x30
   226ee:	mov    BYTE PTR [r15],al
   226f1:	mov    rax,rcx
   226f4:	mov    rcx,rdx
   226f7:	cmp    rax,0x9
   226fb:	ja     226d0 <__sprintf_chk@plt+0x17d20>
   226fd:	mov    rdi,r15
   22700:	call   a060 <strlen@plt>
   22705:	mov    rcx,rbp
   22708:	mov    edx,0x1
   2270d:	mov    rdi,r15
   22710:	lea    rsi,[rax+0x1]
   22714:	call   a550 <fwrite_unlocked@plt>
   22719:	mov    r15,QWORD PTR [r13+0x58]
   2271d:	mov    rdi,r15
   22720:	call   a060 <strlen@plt>
   22725:	mov    rcx,rbp
   22728:	mov    edx,0x1
   2272d:	mov    rdi,r15
   22730:	lea    rsi,[rax+0x1]
   22734:	call   a550 <fwrite_unlocked@plt>
   22739:	mov    rbx,QWORD PTR [r13+0x28]
   2273d:	test   rbx,rbx
   22740:	je     227a4 <__sprintf_chk@plt+0x17df4>
   22742:	mov    edi,0x18
   22747:	call   a4a0 <malloc@plt>
   2274c:	mov    r13,rax
   2274f:	test   rax,rax
   22752:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   22758:	mov    QWORD PTR [rax],rbx
   2275b:	mov    DWORD PTR [rax+0x8],0x0
   22762:	mov    QWORD PTR [rax+0x10],0x0
   2276a:	jmp    2278c <__sprintf_chk@plt+0x17ddc>
   2276c:	nop    DWORD PTR [rax+0x0]
   22770:	mov    rdi,rax
   22773:	call   a060 <strlen@plt>
   22778:	mov    rcx,rbp
   2277b:	mov    edx,0x1
   22780:	mov    rdi,r15
   22783:	lea    rsi,[rax+0x1]
   22787:	call   a550 <fwrite_unlocked@plt>
   2278c:	mov    rdi,r13
   2278f:	call   207e0 <__sprintf_chk@plt+0x15e30>
   22794:	mov    r15,rax
   22797:	test   rax,rax
   2279a:	jne    22770 <__sprintf_chk@plt+0x17dc0>
   2279c:	mov    rdi,r13
   2279f:	call   9ce0 <free@plt>
   227a4:	mov    rax,QWORD PTR [rbp+0x28]
   227a8:	cmp    QWORD PTR [rbp+0x30],rax
   227ac:	jbe    228e8 <__sprintf_chk@plt+0x17f38>
   227b2:	lea    rdx,[rax+0x1]
   227b6:	mov    QWORD PTR [rbp+0x28],rdx
   227ba:	mov    BYTE PTR [rax],0x0
   227bd:	mov    rax,QWORD PTR [rbp+0x28]
   227c1:	cmp    rax,QWORD PTR [rbp+0x30]
   227c5:	jae    22900 <__sprintf_chk@plt+0x17f50>
   227cb:	lea    rdx,[rax+0x1]
   227cf:	mov    QWORD PTR [rbp+0x28],rdx
   227d3:	mov    BYTE PTR [rax],0x0
   227d6:	mov    edx,DWORD PTR [rbp+0x0]
   227d9:	test   dl,0x20
   227dc:	jne    21c6f <__sprintf_chk@plt+0x172bf>
   227e2:	mov    r14,QWORD PTR [r14+0x8]
   227e6:	test   r14,r14
   227e9:	jne    22570 <__sprintf_chk@plt+0x17bc0>
   227ef:	jmp    21c62 <__sprintf_chk@plt+0x172b2>
   227f4:	mov    rsi,QWORD PTR [rsp+0x10]
   227f9:	lea    rbx,[rsp+0xb4]
   22801:	call   49490 <argp_usage@@Base+0x6110>
   22806:	mov    r8,rax
   22809:	jmp    2260d <__sprintf_chk@plt+0x17c5d>
   2280e:	mov    rdx,rax
   22811:	and    eax,0x1
   22814:	pxor   xmm1,xmm1
   22818:	shr    rdx,1
   2281b:	or     rdx,rax
   2281e:	cvtsi2ss xmm1,rdx
   22823:	addss  xmm1,xmm1
   22827:	jmp    22175 <__sprintf_chk@plt+0x177c5>
   2282c:	mov    rdx,rax
   2282f:	and    eax,0x1
   22832:	pxor   xmm0,xmm0
   22836:	shr    rdx,1
   22839:	or     rdx,rax
   2283c:	cvtsi2ss xmm0,rdx
   22841:	addss  xmm0,xmm0
   22845:	jmp    2218c <__sprintf_chk@plt+0x177dc>
   2284a:	movzx  esi,dl
   2284d:	mov    rdi,rbp
   22850:	call   a120 <__overflow@plt>
   22855:	add    eax,0x1
   22858:	je     225bc <__sprintf_chk@plt+0x17c0c>
   2285e:	jmp    225b7 <__sprintf_chk@plt+0x17c07>
   22863:	mov    edi,0x58
   22868:	call   a4a0 <malloc@plt>
   2286d:	mov    rdi,rax
   22870:	test   rax,rax
   22873:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   22879:	mov    QWORD PTR [rip+0x5c9c8],rax        # 7f248 <obstack_alloc_failed_handler@@Base+0x410>
   22880:	lea    rax,[rip+0x22e19]        # 456a0 <argp_usage@@Base+0x2320>
   22887:	xor    edx,edx
   22889:	xor    esi,esi
   2288b:	mov    QWORD PTR [rdi+0x38],rax
   2288f:	mov    rax,QWORD PTR [rip+0x596f2]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   22896:	and    BYTE PTR [rdi+0x50],0xfe
   2289a:	mov    QWORD PTR [rdi+0x40],rax
   2289e:	call   4c9a0 <argp_usage@@Base+0x9620>
   228a3:	mov    rbx,QWORD PTR [rip+0x5cf0e]        # 7f7b8 <obstack_alloc_failed_handler@@Base+0x980>
   228aa:	test   rbx,rbx
   228ad:	je     21a98 <__sprintf_chk@plt+0x170e8>
   228b3:	jmp    21a79 <__sprintf_chk@plt+0x170c9>
   228b8:	mov    rsi,QWORD PTR [rip+0x5c6f9]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   228bf:	lea    rdi,[rip+0x41b22]        # 643e8 <_obstack_memory_used@@Base+0x17768>
   228c6:	call   3bad0 <__sprintf_chk@plt+0x31120>
   228cb:	jmp    21b8a <__sprintf_chk@plt+0x171da>
   228d0:	mov    rsi,QWORD PTR [rip+0x5c6e1]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   228d7:	lea    rdi,[rip+0x446bc]        # 66f9a <_obstack_memory_used@@Base+0x1a31a>
   228de:	call   3bad0 <__sprintf_chk@plt+0x31120>
   228e3:	jmp    21b73 <__sprintf_chk@plt+0x171c3>
   228e8:	xor    esi,esi
   228ea:	mov    rdi,rbp
   228ed:	call   a120 <__overflow@plt>
   228f2:	add    eax,0x1
   228f5:	je     227d6 <__sprintf_chk@plt+0x17e26>
   228fb:	jmp    227bd <__sprintf_chk@plt+0x17e0d>
   22900:	xor    esi,esi
   22902:	mov    rdi,rbp
   22905:	call   a120 <__overflow@plt>
   2290a:	mov    edx,DWORD PTR [rbp+0x0]
   2290d:	jmp    227d9 <__sprintf_chk@plt+0x17e29>
   22912:	mov    edx,DWORD PTR [rip+0x5c658]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   22918:	mov    edi,DWORD PTR [rip+0x59702]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   2291e:	mov    rsi,QWORD PTR [rbx+0x10]
   22922:	or     edx,0x10000
   22928:	call   a230 <__openat_2@plt>
   2292d:	mov    edi,eax
   2292f:	test   eax,eax
   22931:	js     229c6 <__sprintf_chk@plt+0x18016>
   22937:	mov    rsi,r13
   2293a:	mov    DWORD PTR [rsp+0x268],eax
   22941:	call   a920 <fstat@plt>
   22946:	mov    rdi,QWORD PTR [rbx+0x10]
   2294a:	test   eax,eax
   2294c:	je     22af9 <__sprintf_chk@plt+0x18149>
   22952:	call   23490 <__sprintf_chk@plt+0x18ae0>
   22957:	jmp    21dc3 <__sprintf_chk@plt+0x17413>
   2295c:	xor    ecx,ecx
   2295e:	xor    edx,edx
   22960:	lea    rdi,[rip+0x44c8d]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   22967:	xor    esi,esi
   22969:	call   29300 <__sprintf_chk@plt+0x1e950>
   2296e:	cmp    QWORD PTR [rip+0x5c642],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   22976:	jne    21cf0 <__sprintf_chk@plt+0x17340>
   2297c:	jmp    21d20 <__sprintf_chk@plt+0x17370>
   22981:	mov    rdi,QWORD PTR [rbx+0x10]
   22985:	call   23490 <__sprintf_chk@plt+0x18ae0>
   2298a:	jmp    21d40 <__sprintf_chk@plt+0x17390>
   2298f:	xor    ebp,ebp
   22991:	jmp    21dd7 <__sprintf_chk@plt+0x17427>
   22996:	xor    r12d,r12d
   22999:	jmp    22037 <__sprintf_chk@plt+0x17687>
   2299e:	subss  xmm0,DWORD PTR [rip+0x4241e]        # 64dc4 <_obstack_memory_used@@Base+0x18144>
   229a6:	mov    eax,0x1
   229ab:	shl    rax,0x3f
   229af:	cvttss2si rsi,xmm0
   229b4:	xor    rsi,rax
   229b7:	jmp    221f9 <__sprintf_chk@plt+0x17849>
   229bc:	mulss  xmm0,DWORD PTR [rax+0x8]
   229c1:	jmp    221e7 <__sprintf_chk@plt+0x17837>
   229c6:	mov    rdi,QWORD PTR [rbx+0x10]
   229ca:	call   23410 <__sprintf_chk@plt+0x18a60>
   229cf:	jmp    21dc3 <__sprintf_chk@plt+0x17413>
   229d4:	mov    rdi,QWORD PTR [rbx+0x58]
   229d8:	call   483a0 <argp_usage@@Base+0x5020>
   229dd:	mov    r15,rax
   229e0:	test   rax,rax
   229e3:	je     22ba4 <__sprintf_chk@plt+0x181f4>
   229e9:	mov    rax,QWORD PTR [rsp+0x38]
   229ee:	cmp    QWORD PTR [rsp+0x40],rax
   229f3:	je     22ab5 <__sprintf_chk@plt+0x18105>
   229f9:	mov    rax,QWORD PTR [rsp+0x38]
   229fe:	mov    rdi,r15
   22a01:	lea    rdx,[rax+0x1]
   22a05:	mov    QWORD PTR [rsp+0x38],rdx
   22a0a:	mov    BYTE PTR [rax],0x58
   22a0d:	call   a060 <strlen@plt>
   22a12:	lea    r14,[rax+0x1]
   22a16:	mov    rax,QWORD PTR [rsp+0x40]
   22a1b:	sub    rax,QWORD PTR [rsp+0x38]
   22a20:	cmp    r14,rax
   22a23:	ja     22a95 <__sprintf_chk@plt+0x180e5>
   22a25:	mov    rdi,QWORD PTR [rsp+0x38]
   22a2a:	mov    rdx,r14
   22a2d:	mov    rsi,r15
   22a30:	call   a420 <memcpy@plt>
   22a35:	mov    rsi,QWORD PTR [rbx+0x58]
   22a39:	mov    rdi,rbp
   22a3c:	lea    rdx,[rip+0x4910d]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   22a43:	add    QWORD PTR [rsp+0x38],r14
   22a48:	mov    r14,rbx
   22a4b:	call   29a10 <__sprintf_chk@plt+0x1f060>
   22a50:	cmp    rbx,r13
   22a53:	je     22a75 <__sprintf_chk@plt+0x180c5>
   22a55:	nop    DWORD PTR [rax]
   22a58:	mov    rsi,QWORD PTR [r14+0x40]
   22a5c:	mov    rdx,QWORD PTR [r14+0x58]
   22a60:	mov    rdi,rbp
   22a63:	mov    rsi,QWORD PTR [rsi+0x58]
   22a67:	call   29a10 <__sprintf_chk@plt+0x1f060>
   22a6c:	mov    r14,QWORD PTR [r14+0x40]
   22a70:	cmp    r14,r13
   22a73:	jne    22a58 <__sprintf_chk@plt+0x180a8>
   22a75:	mov    rdx,QWORD PTR [r13+0x58]
   22a79:	mov    rdi,rbp
   22a7c:	lea    rsi,[rip+0x490cd]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   22a83:	call   29a10 <__sprintf_chk@plt+0x1f060>
   22a88:	mov    rdi,r15
   22a8b:	call   9ce0 <free@plt>
   22a90:	jmp    22050 <__sprintf_chk@plt+0x176a0>
   22a95:	mov    rsi,r14
   22a98:	mov    rdi,rbp
   22a9b:	call   4ca80 <_obstack_newchunk@@Base>
   22aa0:	jmp    22a25 <__sprintf_chk@plt+0x18075>
   22aa5:	mov    QWORD PTR [rip+0x5cd28],0x0        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   22ab0:	jmp    222f0 <__sprintf_chk@plt+0x17940>
   22ab5:	mov    esi,0x1
   22aba:	mov    rdi,rbp
   22abd:	call   4ca80 <_obstack_newchunk@@Base>
   22ac2:	jmp    229f9 <__sprintf_chk@plt+0x18049>
   22ac7:	xor    r8d,r8d
   22aca:	lea    rcx,[rip+0xa5ff]        # 2d0d0 <__sprintf_chk@plt+0x22720>
   22ad1:	xor    esi,esi
   22ad3:	xor    edi,edi
   22ad5:	lea    rdx,[rip+0xa504]        # 2cfe0 <__sprintf_chk@plt+0x22630>
   22adc:	xor    ebp,ebp
   22ade:	xor    r13d,r13d
   22ae1:	mov    QWORD PTR [rip+0x5ccec],0x0        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   22aec:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   22af1:	mov    r12,rax
   22af4:	jmp    21f1e <__sprintf_chk@plt+0x1756e>
   22af9:	call   48620 <argp_usage@@Base+0x52a0>
   22afe:	mov    rsi,rbx
   22b01:	mov    rdi,r12
   22b04:	mov    QWORD PTR [rsp+0xc0],rax
   22b0c:	add    QWORD PTR [rbx+0x30],0x1
   22b11:	call   29680 <__sprintf_chk@plt+0x1ecd0>
   22b16:	jmp    21dc3 <__sprintf_chk@plt+0x17413>
   22b1b:	mov    rsi,r12
   22b1e:	mov    rdi,rbp
   22b21:	call   4ca80 <_obstack_newchunk@@Base>
   22b26:	jmp    22022 <__sprintf_chk@plt+0x17672>
   22b2b:	or     BYTE PTR [rsp+0x70],0x2
   22b30:	jmp    22294 <__sprintf_chk@plt+0x178e4>
   22b35:	xor    esi,esi
   22b37:	mov    rdi,QWORD PTR [rbx+0x10]
   22b3b:	cmp    QWORD PTR [rbx+0x40],0x0
   22b40:	lea    rdx,[rip+0x8c9]        # 23410 <__sprintf_chk@plt+0x18a60>
   22b47:	sete   sil
   22b4b:	call   26910 <__sprintf_chk@plt+0x1bf60>
   22b50:	jmp    22451 <__sprintf_chk@plt+0x17aa1>
   22b55:	xor    esi,esi
   22b57:	mov    rdi,QWORD PTR [rbx+0x10]
   22b5b:	cmp    QWORD PTR [rbx+0x40],0x0
   22b60:	lea    rdx,[rip+0x929]        # 23490 <__sprintf_chk@plt+0x18ae0>
   22b67:	sete   sil
   22b6b:	call   26910 <__sprintf_chk@plt+0x1bf60>
   22b70:	jmp    22451 <__sprintf_chk@plt+0x17aa1>
   22b75:	mov    rbx,QWORD PTR [rip+0x5c3d4]        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   22b7c:	xor    r12d,r12d
   22b7f:	test   rbx,rbx
   22b82:	jne    2205c <__sprintf_chk@plt+0x176ac>
   22b88:	jmp    222dc <__sprintf_chk@plt+0x1792c>
   22b8d:	mov    esi,0x1
   22b92:	mov    rdi,rbp
   22b95:	call   4ca80 <_obstack_newchunk@@Base>
   22b9a:	mov    rax,QWORD PTR [rsp+0x38]
   22b9f:	jmp    2225b <__sprintf_chk@plt+0x178ab>
   22ba4:	call   19130 <__sprintf_chk@plt+0xe780>
   22ba9:	call   a0a0 <__stack_chk_fail@plt>
   22bae:	mov    rax,QWORD PTR [rip+0x5c953]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   22bb5:	test   rax,rax
   22bb8:	je     22bbc <__sprintf_chk@plt+0x1820c>
   22bba:	call   rax
   22bbc:	mov    edx,0x5
   22bc1:	lea    rsi,[rip+0x42010]        # 64bd8 <_obstack_memory_used@@Base+0x17f58>
   22bc8:	xor    edi,edi
   22bca:	call   a040 <dcgettext@plt>
   22bcf:	xor    esi,esi
   22bd1:	xor    edi,edi
   22bd3:	mov    rdx,rax
   22bd6:	xor    eax,eax
   22bd8:	call   a640 <error@plt>
   22bdd:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   22be2:	mov    rax,QWORD PTR [rip+0x5c91f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   22be9:	test   rax,rax
   22bec:	je     22bf0 <__sprintf_chk@plt+0x18240>
   22bee:	call   rax
   22bf0:	mov    edx,0x5
   22bf5:	lea    rsi,[rip+0x4202c]        # 64c28 <_obstack_memory_used@@Base+0x17fa8>
   22bfc:	jmp    22bc8 <__sprintf_chk@plt+0x18218>
   22bfe:	xchg   ax,ax
   22c00:	endbr64 
   22c04:	push   r14
   22c06:	lea    r14,[rsi+0x168]
   22c0d:	push   r13
   22c0f:	mov    r13d,edi
   22c12:	mov    rdi,r14
   22c15:	push   r12
   22c17:	mov    r12,rsi
   22c1a:	push   rbp
   22c1b:	mov    rbp,rdx
   22c1e:	push   rbx
   22c1f:	sub    rsp,0x210
   22c26:	mov    rax,QWORD PTR fs:0x28
   22c2f:	mov    QWORD PTR [rsp+0x208],rax
   22c37:	xor    eax,eax
   22c39:	mov    rbx,rsp
   22c3c:	call   20cd0 <__sprintf_chk@plt+0x16320>
   22c41:	mov    ecx,0x40
   22c46:	mov    rdi,rbx
   22c49:	mov    rsi,rbp
   22c4c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   22c4f:	test   r13b,r13b
   22c52:	je     22cf0 <__sprintf_chk@plt+0x18340>
   22c58:	call   1ca70 <__sprintf_chk@plt+0x120c0>
   22c5d:	mov    rdx,QWORD PTR [rip+0x5c40c]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
   22c64:	mov    edi,0x67
   22c69:	mov    rbp,rax
   22c6c:	mov    rcx,r14
   22c6f:	mov    rsi,rbp
   22c72:	call   217d0 <__sprintf_chk@plt+0x16e20>
   22c77:	mov    rdi,rbp
   22c7a:	call   9ce0 <free@plt>
   22c7f:	mov    rax,QWORD PTR [rip+0x5c8ba]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   22c86:	cmp    rax,QWORD PTR [rip+0x5c8f3]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   22c8d:	je     22d40 <__sprintf_chk@plt+0x18390>
   22c93:	mov    rdx,QWORD PTR [rsp]
   22c97:	lea    rdi,[rax+0x8]
   22c9b:	mov    rcx,rax
   22c9e:	and    rdi,0xfffffffffffffff8
   22ca2:	sub    rcx,rdi
   22ca5:	mov    QWORD PTR [rax],rdx
   22ca8:	mov    rdx,QWORD PTR [rsp+0x1f8]
   22cb0:	sub    rbx,rcx
   22cb3:	add    ecx,0x200
   22cb9:	mov    QWORD PTR [rax+0x1f8],rdx
   22cc0:	mov    rsi,rbx
   22cc3:	shr    ecx,0x3
   22cc6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   22cc9:	mov    rdx,QWORD PTR [rsp+0x208]
   22cd1:	sub    rdx,QWORD PTR fs:0x28
   22cda:	jne    22d9a <__sprintf_chk@plt+0x183ea>
   22ce0:	add    rsp,0x210
   22ce7:	pop    rbx
   22ce8:	pop    rbp
   22ce9:	pop    r12
   22ceb:	pop    r13
   22ced:	pop    r14
   22cef:	ret    
   22cf0:	mov    rsi,QWORD PTR [rip+0x5cba1]        # 7f898 <obstack_alloc_failed_handler@@Base+0xa60>
   22cf7:	test   rsi,rsi
   22cfa:	je     22d70 <__sprintf_chk@plt+0x183c0>
   22cfc:	xor    edx,edx
   22cfe:	mov    rdi,r12
   22d01:	call   1c570 <__sprintf_chk@plt+0x11bc0>
   22d06:	mov    rbp,rax
   22d09:	mov    eax,DWORD PTR [rip+0x5c1f1]        # 7ef00 <obstack_alloc_failed_handler@@Base+0xc8>
   22d0f:	test   eax,eax
   22d11:	je     22d28 <__sprintf_chk@plt+0x18378>
   22d13:	mov    rdx,QWORD PTR [rip+0x5c1d6]        # 7eef0 <obstack_alloc_failed_handler@@Base+0xb8>
   22d1a:	mov    edi,0x78
   22d1f:	jmp    22c6c <__sprintf_chk@plt+0x182bc>
   22d24:	nop    DWORD PTR [rax+0x0]
   22d28:	mov    rdx,QWORD PTR [r12+0xb0]
   22d30:	mov    edi,0x78
   22d35:	jmp    22c6c <__sprintf_chk@plt+0x182bc>
   22d3a:	nop    WORD PTR [rax+rax*1+0x0]
   22d40:	cmp    BYTE PTR [rip+0x5c7ed],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   22d47:	jne    aa5f <__sprintf_chk@plt+0xaf>
   22d4d:	call   f170 <__sprintf_chk@plt+0x47c0>
   22d52:	mov    rax,QWORD PTR [rip+0x5c7e7]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   22d59:	cmp    rax,QWORD PTR [rip+0x5c820]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   22d60:	jne    22c93 <__sprintf_chk@plt+0x182e3>
   22d66:	jmp    aa58 <__sprintf_chk@plt+0xa8>
   22d6b:	nop    DWORD PTR [rax+rax*1+0x0]
   22d70:	movzx  edx,BYTE PTR [rip+0x5c9f1]        # 7f768 <obstack_alloc_failed_handler@@Base+0x930>
   22d77:	lea    rax,[rip+0x57902]        # 7a680 <_obstack_memory_used@@Base+0x2da00>
   22d7e:	lea    rdi,[rip+0x5cb13]        # 7f898 <obstack_alloc_failed_handler@@Base+0xa60>
   22d85:	mov    rsi,QWORD PTR [rax+rdx*8]
   22d89:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   22d8e:	mov    rsi,QWORD PTR [rip+0x5cb03]        # 7f898 <obstack_alloc_failed_handler@@Base+0xa60>
   22d95:	jmp    22cfc <__sprintf_chk@plt+0x1834c>
   22d9a:	call   a0a0 <__stack_chk_fail@plt>
   22d9f:	nop
   22da0:	endbr64 
   22da4:	mov    rdi,QWORD PTR [rdi+0x50]
   22da8:	xor    edx,edx
   22daa:	movzx  ecx,BYTE PTR [rdi]
   22dad:	test   cl,cl
   22daf:	je     22dd5 <__sprintf_chk@plt+0x18425>
   22db1:	nop    DWORD PTR [rax+0x0]
   22db8:	mov    rax,rdx
   22dbb:	add    rdi,0x1
   22dbf:	shl    rax,0x5
   22dc3:	sub    rax,rdx
   22dc6:	xor    edx,edx
   22dc8:	add    rax,rcx
   22dcb:	movzx  ecx,BYTE PTR [rdi]
   22dce:	div    rsi
   22dd1:	test   cl,cl
   22dd3:	jne    22db8 <__sprintf_chk@plt+0x18408>
   22dd5:	mov    rax,rdx
   22dd8:	ret    
   22dd9:	nop    DWORD PTR [rax+0x0]
   22de0:	endbr64 
   22de4:	mov    rax,QWORD PTR [rdi+0x18]
   22de8:	xor    edx,edx
   22dea:	add    rax,QWORD PTR [rdi+0x20]
   22dee:	div    rsi
   22df1:	mov    rax,rdx
   22df4:	ret    
   22df5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   22e00:	endbr64 
   22e04:	mov    rdx,QWORD PTR [rsi+0x18]
   22e08:	xor    eax,eax
   22e0a:	cmp    QWORD PTR [rdi+0x18],rdx
   22e0e:	je     22e18 <__sprintf_chk@plt+0x18468>
   22e10:	ret    
   22e11:	nop    DWORD PTR [rax+0x0]
   22e18:	mov    rax,QWORD PTR [rsi+0x20]
   22e1c:	cmp    QWORD PTR [rdi+0x20],rax
   22e20:	sete   al
   22e23:	ret    
   22e24:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   22e2f:	nop
   22e30:	endbr64 
   22e34:	mov    rax,QWORD PTR [rdi]
   22e37:	xor    edx,edx
   22e39:	div    rsi
   22e3c:	mov    rax,rdx
   22e3f:	ret    
   22e40:	endbr64 
   22e44:	mov    rax,QWORD PTR [rsi]
   22e47:	cmp    QWORD PTR [rdi],rax
   22e4a:	sete   al
   22e4d:	ret    
   22e4e:	xchg   ax,ax
   22e50:	push   rbp
   22e51:	push   rbx
   22e52:	sub    rsp,0x8
   22e56:	mov    rbp,QWORD PTR [rip+0x5ca93]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   22e5d:	mov    rax,QWORD PTR [rbp+0x0]
   22e61:	mov    QWORD PTR [rip+0x5ca88],rax        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   22e68:	test   rax,rax
   22e6b:	je     22e75 <__sprintf_chk@plt+0x184c5>
   22e6d:	mov    QWORD PTR [rax+0x8],0x0
   22e75:	mov    eax,DWORD PTR [rbp+0x10]
   22e78:	cmp    eax,0x4
   22e7b:	je     22e98 <__sprintf_chk@plt+0x184e8>
   22e7d:	cmp    eax,0x1
   22e80:	je     22e98 <__sprintf_chk@plt+0x184e8>
   22e82:	cmp    eax,0x3
   22e85:	jne    22eb0 <__sprintf_chk@plt+0x18500>
   22e87:	add    rsp,0x8
   22e8b:	mov    rdi,rbp
   22e8e:	pop    rbx
   22e8f:	pop    rbp
   22e90:	jmp    9ce0 <free@plt>
   22e95:	nop    DWORD PTR [rax]
   22e98:	mov    eax,DWORD PTR [rip+0x5c6da]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   22e9e:	cmp    eax,0x3
   22ea1:	je     22ef0 <__sprintf_chk@plt+0x18540>
   22ea3:	cmp    eax,0x8
   22ea6:	je     22ef0 <__sprintf_chk@plt+0x18540>
   22ea8:	add    rsp,0x8
   22eac:	pop    rbx
   22ead:	pop    rbp
   22eae:	ret    
   22eaf:	nop
   22eb0:	mov    rbx,QWORD PTR [rip+0x5cb01]        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   22eb7:	test   rbx,rbx
   22eba:	je     22e87 <__sprintf_chk@plt+0x184d7>
   22ebc:	nop    DWORD PTR [rax+0x0]
   22ec0:	mov    rdi,rbx
   22ec3:	mov    rbx,QWORD PTR [rbx+0x8]
   22ec7:	mov    QWORD PTR [rip+0x5caea],rbx        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   22ece:	call   9ce0 <free@plt>
   22ed3:	test   rbx,rbx
   22ed6:	jne    22ec0 <__sprintf_chk@plt+0x18510>
   22ed8:	add    rsp,0x8
   22edc:	mov    rdi,rbp
   22edf:	pop    rbx
   22ee0:	pop    rbp
   22ee1:	jmp    9ce0 <free@plt>
   22ee6:	cs nop WORD PTR [rax+rax*1+0x0]
   22ef0:	mov    rax,QWORD PTR [rip+0x5cac1]        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   22ef7:	mov    QWORD PTR [rbp+0x0],0x0
   22eff:	mov    QWORD PTR [rbp+0x8],rax
   22f03:	test   rax,rax
   22f06:	je     22f0b <__sprintf_chk@plt+0x1855b>
   22f08:	mov    QWORD PTR [rax],rbp
   22f0b:	mov    QWORD PTR [rip+0x5caa6],rbp        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   22f12:	add    rsp,0x8
   22f16:	pop    rbx
   22f17:	pop    rbp
   22f18:	ret    
   22f19:	nop    DWORD PTR [rax+0x0]
   22f20:	endbr64 
   22f24:	sub    rsp,0x8
   22f28:	mov    rsi,QWORD PTR [rsi+0x50]
   22f2c:	mov    rdi,QWORD PTR [rdi+0x50]
   22f30:	call   a320 <strcmp@plt>
   22f35:	test   eax,eax
   22f37:	sete   al
   22f3a:	add    rsp,0x8
   22f3e:	ret    
   22f3f:	nop
   22f40:	endbr64 
   22f44:	mov    rdx,QWORD PTR [rip+0x5c9dd]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   22f4b:	mov    rax,QWORD PTR [rsi+0x30]
   22f4f:	mov    rcx,QWORD PTR [rdi+0x30]
   22f53:	test   rdx,rdx
   22f56:	jne    22f80 <__sprintf_chk@plt+0x185d0>
   22f58:	test   rax,rax
   22f5b:	setne  al
   22f5e:	xor    edx,edx
   22f60:	test   rcx,rcx
   22f63:	movzx  eax,al
   22f66:	setne  dl
   22f69:	sub    eax,edx
   22f6b:	jne    22f96 <__sprintf_chk@plt+0x185e6>
   22f6d:	mov    rsi,QWORD PTR [rsi+0x10]
   22f71:	mov    rdi,QWORD PTR [rdi+0x10]
   22f75:	jmp    a320 <strcmp@plt>
   22f7a:	nop    WORD PTR [rax+rax*1+0x0]
   22f80:	cmp    rdx,rax
   22f83:	setbe  al
   22f86:	cmp    rdx,rcx
   22f89:	setbe  dl
   22f8c:	movzx  eax,al
   22f8f:	movzx  edx,dl
   22f92:	sub    eax,edx
   22f94:	je     22f6d <__sprintf_chk@plt+0x185bd>
   22f96:	ret    
   22f97:	nop    WORD PTR [rax+rax*1+0x0]
   22fa0:	endbr64 
   22fa4:	mov    rsi,QWORD PTR [rsi+0x10]
   22fa8:	mov    rdi,QWORD PTR [rdi+0x10]
   22fac:	jmp    a320 <strcmp@plt>
   22fb1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   22fbc:	nop    DWORD PTR [rax+0x0]
   22fc0:	push   r13
   22fc2:	mov    r13,rdi
   22fc5:	push   r12
   22fc7:	push   rbp
   22fc8:	mov    rbp,rsi
   22fcb:	push   rbx
   22fcc:	sub    rsp,0x8
   22fd0:	call   a060 <strlen@plt>
   22fd5:	mov    edi,0x60
   22fda:	mov    rbx,rax
   22fdd:	call   a4a0 <malloc@plt>
   22fe2:	test   rax,rax
   22fe5:	je     23078 <__sprintf_chk@plt+0x186c8>
   22feb:	mov    QWORD PTR [rax],0x0
   22ff2:	mov    r12,rax
   22ff5:	mov    QWORD PTR [rax+0x30],0x0
   22ffd:	mov    QWORD PTR [rax+0x28],0x0
   23005:	mov    QWORD PTR [rax+0x40],0x0
   2300d:	mov    DWORD PTR [rax+0x3c],0x0
   23014:	cmp    rbx,0x1
   23018:	jbe    23026 <__sprintf_chk@plt+0x18676>
   2301a:	cmp    BYTE PTR [r13+rbx*1-0x1],0x2f
   23020:	lea    rax,[rbx-0x1]
   23024:	je     23070 <__sprintf_chk@plt+0x186c0>
   23026:	lea    rdi,[rbx+0x1]
   2302a:	call   a4a0 <malloc@plt>
   2302f:	test   rax,rax
   23032:	je     23078 <__sprintf_chk@plt+0x186c8>
   23034:	mov    QWORD PTR [r12+0x58],rax
   23039:	mov    rdx,rbx
   2303c:	mov    rsi,r13
   2303f:	mov    rdi,rax
   23042:	call   a420 <memcpy@plt>
   23047:	mov    QWORD PTR [r12+0x50],rbp
   2304c:	mov    BYTE PTR [rax+rbx*1],0x0
   23050:	mov    rax,r12
   23053:	mov    QWORD PTR [r12+0x48],0x0
   2305c:	add    rsp,0x8
   23060:	pop    rbx
   23061:	pop    rbp
   23062:	pop    r12
   23064:	pop    r13
   23066:	ret    
   23067:	nop    WORD PTR [rax+rax*1+0x0]
   23070:	mov    rdi,rbx
   23073:	mov    rbx,rax
   23076:	jmp    2302a <__sprintf_chk@plt+0x1867a>
   23078:	call   19130 <__sprintf_chk@plt+0xe780>
   2307d:	nop    DWORD PTR [rax]
   23080:	push   r13
   23082:	push   r12
   23084:	push   rbp
   23085:	push   rbx
   23086:	sub    rsp,0x8
   2308a:	mov    r12,QWORD PTR [rip+0x5bec7]        # 7ef58 <obstack_alloc_failed_handler@@Base+0x120>
   23091:	test   r12,r12
   23094:	je     230e1 <__sprintf_chk@plt+0x18731>
   23096:	mov    r13,rdi
   23099:	mov    rbx,rsi
   2309c:	lea    rdi,[rip+0x48aad]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   230a3:	xor    esi,esi
   230a5:	call   22fc0 <__sprintf_chk@plt+0x18610>
   230aa:	mov    rdi,QWORD PTR [rip+0x5bea7]        # 7ef58 <obstack_alloc_failed_handler@@Base+0x120>
   230b1:	mov    QWORD PTR [rax+0x18],r13
   230b5:	mov    rbp,rax
   230b8:	mov    rsi,rax
   230bb:	mov    QWORD PTR [rax+0x20],rbx
   230bf:	call   48bc0 <argp_usage@@Base+0x5840>
   230c4:	mov    rdi,QWORD PTR [rbp+0x50]
   230c8:	mov    r12,rax
   230cb:	call   9ce0 <free@plt>
   230d0:	mov    rdi,QWORD PTR [rbp+0x58]
   230d4:	call   9ce0 <free@plt>
   230d9:	mov    rdi,rbp
   230dc:	call   9ce0 <free@plt>
   230e1:	add    rsp,0x8
   230e5:	mov    rax,r12
   230e8:	pop    rbx
   230e9:	pop    rbp
   230ea:	pop    r12
   230ec:	pop    r13
   230ee:	ret    
   230ef:	nop
   230f0:	endbr64 
   230f4:	sub    rsp,0x18
   230f8:	mov    eax,DWORD PTR [rsi]
   230fa:	cmp    eax,0x2
   230fd:	je     23128 <__sprintf_chk@plt+0x18778>
   230ff:	cmp    eax,0x4
   23102:	je     23119 <__sprintf_chk@plt+0x18769>
   23104:	cmp    eax,0x1
   23107:	je     231a0 <__sprintf_chk@plt+0x187f0>
   2310d:	mov    rax,QWORD PTR [rip+0x5c834]        # 7f948 <obstack_alloc_failed_handler@@Base+0xb10>
   23114:	test   rax,rax
   23117:	jne    23148 <__sprintf_chk@plt+0x18798>
   23119:	mov    rax,rdi
   2311c:	add    rsp,0x18
   23120:	ret    
   23121:	nop    DWORD PTR [rax+0x0]
   23128:	movzx  edx,BYTE PTR [rip+0x5c681]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   2312f:	mov    esi,0x1
   23134:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   23139:	mov    rdi,rax
   2313c:	mov    rax,QWORD PTR [rip+0x5c805]        # 7f948 <obstack_alloc_failed_handler@@Base+0xb10>
   23143:	test   rax,rax
   23146:	je     23119 <__sprintf_chk@plt+0x18769>
   23148:	movzx  ecx,BYTE PTR [rdi]
   2314b:	mov    rdx,rdi
   2314e:	cmp    cl,0x2f
   23151:	jne    2317c <__sprintf_chk@plt+0x187cc>
   23153:	nop    DWORD PTR [rax+rax*1+0x0]
   23158:	movzx  ecx,BYTE PTR [rdx+0x1]
   2315c:	add    rdx,0x1
   23160:	cmp    cl,0x2f
   23163:	je     23158 <__sprintf_chk@plt+0x187a8>
   23165:	test   cl,cl
   23167:	je     23180 <__sprintf_chk@plt+0x187d0>
   23169:	nop    DWORD PTR [rax+0x0]
   23170:	add    rdx,0x1
   23174:	cmp    cl,0x2f
   23177:	je     231c0 <__sprintf_chk@plt+0x18810>
   23179:	movzx  ecx,BYTE PTR [rdx]
   2317c:	test   cl,cl
   2317e:	jne    23170 <__sprintf_chk@plt+0x187c0>
   23180:	mov    QWORD PTR [rsp+0x8],rdi
   23185:	call   a060 <strlen@plt>
   2318a:	mov    rdi,QWORD PTR [rsp+0x8]
   2318f:	lea    rdx,[rdi+rax*1]
   23193:	mov    rdi,rdx
   23196:	add    rsp,0x18
   2319a:	mov    rax,rdi
   2319d:	ret    
   2319e:	xchg   ax,ax
   231a0:	movzx  edx,BYTE PTR [rip+0x5c609]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   231a7:	xor    esi,esi
   231a9:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   231ae:	mov    rdi,rax
   231b1:	jmp    2310d <__sprintf_chk@plt+0x1875d>
   231b6:	cs nop WORD PTR [rax+rax*1+0x0]
   231c0:	sub    rax,0x1
   231c4:	jne    231d4 <__sprintf_chk@plt+0x18824>
   231c6:	jmp    231de <__sprintf_chk@plt+0x1882e>
   231c8:	nop    DWORD PTR [rax+rax*1+0x0]
   231d0:	add    rdx,0x1
   231d4:	movzx  ecx,BYTE PTR [rdx]
   231d7:	cmp    cl,0x2f
   231da:	je     231d0 <__sprintf_chk@plt+0x18820>
   231dc:	jmp    2317c <__sprintf_chk@plt+0x187cc>
   231de:	mov    rax,rdx
   231e1:	sub    rax,rdi
   231e4:	cmp    rax,0xffffffffffffffff
   231e8:	jne    23193 <__sprintf_chk@plt+0x187e3>
   231ea:	jmp    23180 <__sprintf_chk@plt+0x187d0>
   231ec:	nop    DWORD PTR [rax+0x0]
   231f0:	endbr64 
   231f4:	sub    rsp,0x8
   231f8:	call   a360 <getpwnam@plt>
   231fd:	test   rax,rax
   23200:	je     23210 <__sprintf_chk@plt+0x18860>
   23202:	mov    eax,DWORD PTR [rax+0x10]
   23205:	add    rsp,0x8
   23209:	ret    
   2320a:	nop    WORD PTR [rax+rax*1+0x0]
   23210:	mov    rax,0xffffffffffffffff
   23217:	add    rsp,0x8
   2321b:	ret    
   2321c:	nop    DWORD PTR [rax+0x0]
   23220:	endbr64 
   23224:	sub    rsp,0x8
   23228:	call   a430 <getgrnam@plt>
   2322d:	test   rax,rax
   23230:	je     23240 <__sprintf_chk@plt+0x18890>
   23232:	mov    eax,DWORD PTR [rax+0x10]
   23235:	add    rsp,0x8
   23239:	ret    
   2323a:	nop    WORD PTR [rax+rax*1+0x0]
   23240:	mov    rax,0xffffffffffffffff
   23247:	add    rsp,0x8
   2324b:	ret    
   2324c:	nop    DWORD PTR [rax+0x0]
   23250:	push   rbp
   23251:	push   rbx
   23252:	mov    rbx,rdi
   23255:	sub    rsp,0x8
   23259:	mov    rbp,QWORD PTR [rip+0x5c560]        # 7f7c0 <obstack_alloc_failed_handler@@Base+0x988>
   23260:	mov    rcx,QWORD PTR [rip+0x5c7e1]        # 7fa48 <obstack_alloc_failed_handler@@Base+0xc10>
   23267:	cmp    rbp,rcx
   2326a:	je     23300 <__sprintf_chk@plt+0x18950>
   23270:	cmp    BYTE PTR [rbx],0x2e
   23273:	je     232c8 <__sprintf_chk@plt+0x18918>
   23275:	mov    rax,QWORD PTR [rip+0x5c68c]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   2327c:	lea    rdx,[rbp+rbp*2+0x0]
   23281:	lea    rax,[rax+rdx*8]
   23285:	mov    QWORD PTR [rax],rbx
   23288:	mov    QWORD PTR [rax+0x8],0x0
   23290:	mov    DWORD PTR [rax+0x10],0x0
   23297:	lea    rax,[rbp+0x1]
   2329b:	mov    QWORD PTR [rip+0x5c51e],rax        # 7f7c0 <obstack_alloc_failed_handler@@Base+0x988>
   232a2:	add    rsp,0x8
   232a6:	mov    eax,ebp
   232a8:	pop    rbx
   232a9:	pop    rbp
   232aa:	ret    
   232ab:	nop    DWORD PTR [rax+rax*1+0x0]
   232b0:	mov    rdx,rbx
   232b3:	movzx  eax,BYTE PTR [rdx+0x1]
   232b7:	lea    rbx,[rdx+0x1]
   232bb:	cmp    al,0x2f
   232bd:	je     232b0 <__sprintf_chk@plt+0x18900>
   232bf:	cmp    al,0x2e
   232c1:	jne    232e5 <__sprintf_chk@plt+0x18935>
   232c3:	nop    DWORD PTR [rax+rax*1+0x0]
   232c8:	cmp    BYTE PTR [rbx+0x1],0x2f
   232cc:	jne    233a0 <__sprintf_chk@plt+0x189f0>
   232d2:	movzx  eax,BYTE PTR [rbx+0x2]
   232d6:	lea    rdx,[rbx+0x2]
   232da:	mov    rbx,rdx
   232dd:	cmp    al,0x2f
   232df:	je     232b3 <__sprintf_chk@plt+0x18903>
   232e1:	cmp    al,0x2e
   232e3:	je     232c8 <__sprintf_chk@plt+0x18918>
   232e5:	xor    eax,eax
   232e7:	cmp    BYTE PTR [rbx+rax*1],0x0
   232eb:	jne    23275 <__sprintf_chk@plt+0x188c5>
   232ed:	add    rsp,0x8
   232f1:	lea    eax,[rbp-0x1]
   232f4:	pop    rbx
   232f5:	pop    rbp
   232f6:	ret    
   232f7:	nop    WORD PTR [rax+rax*1+0x0]
   23300:	test   rcx,rcx
   23303:	je     233b8 <__sprintf_chk@plt+0x18a08>
   23309:	mov    rdi,QWORD PTR [rip+0x5c5f8]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   23310:	test   rdi,rdi
   23313:	je     233f0 <__sprintf_chk@plt+0x18a40>
   23319:	movabs rax,0x38e38e38e38e38d
   23323:	cmp    rcx,rax
   23326:	ja     23408 <__sprintf_chk@plt+0x18a58>
   2332c:	mov    rax,rcx
   2332f:	shr    rax,1
   23332:	lea    rax,[rcx+rax*1+0x1]
   23337:	lea    rsi,[rax+rax*2]
   2333b:	mov    QWORD PTR [rip+0x5c706],rax        # 7fa48 <obstack_alloc_failed_handler@@Base+0xc10>
   23342:	shl    rsi,0x3
   23346:	call   a570 <realloc@plt>
   2334b:	test   rax,rax
   2334e:	je     23408 <__sprintf_chk@plt+0x18a58>
   23354:	mov    rbp,QWORD PTR [rip+0x5c465]        # 7f7c0 <obstack_alloc_failed_handler@@Base+0x988>
   2335b:	mov    QWORD PTR [rip+0x5c5a6],rax        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   23362:	test   rbp,rbp
   23365:	jne    23270 <__sprintf_chk@plt+0x188c0>
   2336b:	lea    rsi,[rip+0x44282]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   23372:	mov    QWORD PTR [rax+0x8],0x0
   2337a:	mov    ebp,0x1
   2337f:	mov    QWORD PTR [rax],rsi
   23382:	mov    DWORD PTR [rax+0x10],0xffffff9c
   23389:	mov    QWORD PTR [rip+0x5c42c],0x1        # 7f7c0 <obstack_alloc_failed_handler@@Base+0x988>
   23394:	jmp    23270 <__sprintf_chk@plt+0x188c0>
   23399:	nop    DWORD PTR [rax+0x0]
   233a0:	mov    eax,0x1
   233a5:	cmp    BYTE PTR [rbx+rax*1],0x0
   233a9:	jne    23275 <__sprintf_chk@plt+0x188c5>
   233af:	jmp    232ed <__sprintf_chk@plt+0x1893d>
   233b4:	nop    DWORD PTR [rax+0x0]
   233b8:	mov    rdi,QWORD PTR [rip+0x5c549]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   233bf:	mov    ecx,0x2
   233c4:	mov    QWORD PTR [rip+0x5c679],0x2        # 7fa48 <obstack_alloc_failed_handler@@Base+0xc10>
   233cf:	test   rdi,rdi
   233d2:	jne    2332c <__sprintf_chk@plt+0x1897c>
   233d8:	lea    rdi,[rcx+rcx*2]
   233dc:	shl    rdi,0x3
   233e0:	call   a4a0 <malloc@plt>
   233e5:	test   rax,rax
   233e8:	jne    2335b <__sprintf_chk@plt+0x189ab>
   233ee:	jmp    23408 <__sprintf_chk@plt+0x18a58>
   233f0:	mov    eax,0x18
   233f5:	mul    rbp
   233f8:	seto   dl
   233fb:	movzx  edx,dl
   233fe:	test   rax,rax
   23401:	js     23408 <__sprintf_chk@plt+0x18a58>
   23403:	test   rdx,rdx
   23406:	je     233d8 <__sprintf_chk@plt+0x18a28>
   23408:	call   19130 <__sprintf_chk@plt+0xe780>
   2340d:	nop    DWORD PTR [rax]
   23410:	endbr64 
   23414:	cmp    BYTE PTR [rip+0x5c0e5],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   2341b:	mov    rsi,rdi
   2341e:	je     23440 <__sprintf_chk@plt+0x18a90>
   23420:	test   BYTE PTR [rip+0x58c57],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   23427:	jne    23430 <__sprintf_chk@plt+0x18a80>
   23429:	ret    
   2342a:	nop    WORD PTR [rax+rax*1+0x0]
   23430:	lea    rdi,[rip+0x3fd89]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   23437:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   2343c:	nop    DWORD PTR [rax+0x0]
   23440:	lea    rdi,[rip+0x3fd79]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   23447:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
   2344c:	nop    DWORD PTR [rax+0x0]
   23450:	endbr64 
   23454:	cmp    BYTE PTR [rip+0x5c0a5],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   2345b:	mov    rsi,rdi
   2345e:	je     23480 <__sprintf_chk@plt+0x18ad0>
   23460:	test   BYTE PTR [rip+0x58c17],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   23467:	jne    23470 <__sprintf_chk@plt+0x18ac0>
   23469:	ret    
   2346a:	nop    WORD PTR [rax+rax*1+0x0]
   23470:	lea    rdi,[rip+0x3fc01]        # 63078 <_obstack_memory_used@@Base+0x163f8>
   23477:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   2347c:	nop    DWORD PTR [rax+0x0]
   23480:	lea    rdi,[rip+0x3fbf1]        # 63078 <_obstack_memory_used@@Base+0x163f8>
   23487:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
   2348c:	nop    DWORD PTR [rax+0x0]
   23490:	endbr64 
   23494:	cmp    BYTE PTR [rip+0x5c065],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   2349b:	mov    rsi,rdi
   2349e:	je     234c0 <__sprintf_chk@plt+0x18b10>
   234a0:	test   BYTE PTR [rip+0x58bd7],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   234a7:	jne    234b0 <__sprintf_chk@plt+0x18b00>
   234a9:	ret    
   234aa:	nop    WORD PTR [rax+rax*1+0x0]
   234b0:	lea    rdi,[rip+0x3fb8c]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   234b7:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   234bc:	nop    DWORD PTR [rax+0x0]
   234c0:	lea    rdi,[rip+0x3fb7c]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   234c7:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
   234cc:	nop    DWORD PTR [rax+0x0]
   234d0:	endbr64 
   234d4:	push   r14
   234d6:	mov    r14,rsi
   234d9:	push   r13
   234db:	mov    r13,rdx
   234de:	push   r12
   234e0:	mov    r12,rcx
   234e3:	push   rbp
   234e4:	mov    rbp,rdi
   234e7:	push   rbx
   234e8:	call   9e40 <__errno_location@plt>
   234ed:	mov    DWORD PTR [rax],0x0
   234f3:	mov    rbx,rax
   234f6:	test   r12,r12
   234f9:	js     23528 <__sprintf_chk@plt+0x18b78>
   234fb:	xor    eax,eax
   234fd:	cmp    BYTE PTR [rbp+0x0],0x2d
   23501:	sete   al
   23504:	movsx  eax,BYTE PTR [rbp+rax*1+0x0]
   23509:	sub    eax,0x30
   2350c:	cmp    eax,0x9
   2350f:	jbe    23558 <__sprintf_chk@plt+0x18ba8>
   23511:	mov    DWORD PTR [rbx],0x16
   23517:	xor    eax,eax
   23519:	pop    rbx
   2351a:	pop    rbp
   2351b:	pop    r12
   2351d:	pop    r13
   2351f:	pop    r14
   23521:	ret    
   23522:	nop    WORD PTR [rax+rax*1+0x0]
   23528:	movsx  eax,BYTE PTR [rbp+0x0]
   2352c:	sub    eax,0x30
   2352f:	cmp    eax,0x9
   23532:	ja     23511 <__sprintf_chk@plt+0x18b61>
   23534:	mov    edx,0xa
   23539:	mov    rsi,r14
   2353c:	mov    rdi,rbp
   2353f:	call   a710 <strtoumax@plt>
   23544:	cmp    r12,rax
   23547:	jae    23519 <__sprintf_chk@plt+0x18b69>
   23549:	mov    DWORD PTR [rbx],0x22
   2354f:	mov    rax,r12
   23552:	jmp    23519 <__sprintf_chk@plt+0x18b69>
   23554:	nop    DWORD PTR [rax+0x0]
   23558:	mov    edx,0xa
   2355d:	mov    rsi,r14
   23560:	mov    rdi,rbp
   23563:	call   9dc0 <strtoimax@plt>
   23568:	cmp    rax,r13
   2356b:	jl     23572 <__sprintf_chk@plt+0x18bc2>
   2356d:	cmp    r12,rax
   23570:	jge    23519 <__sprintf_chk@plt+0x18b69>
   23572:	cmp    rax,r13
   23575:	mov    rax,r12
   23578:	mov    DWORD PTR [rbx],0x22
   2357e:	cmovl  rax,r13
   23582:	jmp    23519 <__sprintf_chk@plt+0x18b69>
   23584:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2358f:	nop
   23590:	endbr64 
   23594:	movdqa xmm0,XMMWORD PTR [rip+0x43104]        # 666a0 <_obstack_memory_used@@Base+0x19a20>
   2359c:	xor    eax,eax
   2359e:	mov    edx,0x41
   235a3:	lea    rcx,[rip+0x5c516]        # 7fac0 <obstack_alloc_failed_handler@@Base+0xc88>
   235aa:	lea    rsi,[rip+0x430af]        # 66660 <_obstack_memory_used@@Base+0x199e0>
   235b1:	movaps XMMWORD PTR [rip+0x5c508],xmm0        # 7fac0 <obstack_alloc_failed_handler@@Base+0xc88>
   235b8:	movaps XMMWORD PTR [rip+0x5c511],xmm0        # 7fad0 <obstack_alloc_failed_handler@@Base+0xc98>
   235bf:	movaps XMMWORD PTR [rip+0x5c51a],xmm0        # 7fae0 <obstack_alloc_failed_handler@@Base+0xca8>
   235c6:	movaps XMMWORD PTR [rip+0x5c523],xmm0        # 7faf0 <obstack_alloc_failed_handler@@Base+0xcb8>
   235cd:	movaps XMMWORD PTR [rip+0x5c52c],xmm0        # 7fb00 <obstack_alloc_failed_handler@@Base+0xcc8>
   235d4:	movaps XMMWORD PTR [rip+0x5c535],xmm0        # 7fb10 <obstack_alloc_failed_handler@@Base+0xcd8>
   235db:	movaps XMMWORD PTR [rip+0x5c53e],xmm0        # 7fb20 <obstack_alloc_failed_handler@@Base+0xce8>
   235e2:	movaps XMMWORD PTR [rip+0x5c547],xmm0        # 7fb30 <obstack_alloc_failed_handler@@Base+0xcf8>
   235e9:	movaps XMMWORD PTR [rip+0x5c550],xmm0        # 7fb40 <obstack_alloc_failed_handler@@Base+0xd08>
   235f0:	movaps XMMWORD PTR [rip+0x5c559],xmm0        # 7fb50 <obstack_alloc_failed_handler@@Base+0xd18>
   235f7:	movaps XMMWORD PTR [rip+0x5c562],xmm0        # 7fb60 <obstack_alloc_failed_handler@@Base+0xd28>
   235fe:	movaps XMMWORD PTR [rip+0x5c56b],xmm0        # 7fb70 <obstack_alloc_failed_handler@@Base+0xd38>
   23605:	movaps XMMWORD PTR [rip+0x5c574],xmm0        # 7fb80 <obstack_alloc_failed_handler@@Base+0xd48>
   2360c:	movaps XMMWORD PTR [rip+0x5c57d],xmm0        # 7fb90 <obstack_alloc_failed_handler@@Base+0xd58>
   23613:	movaps XMMWORD PTR [rip+0x5c586],xmm0        # 7fba0 <obstack_alloc_failed_handler@@Base+0xd68>
   2361a:	movaps XMMWORD PTR [rip+0x5c58f],xmm0        # 7fbb0 <obstack_alloc_failed_handler@@Base+0xd78>
   23621:	jmp    2362d <__sprintf_chk@plt+0x18c7d>
   23623:	nop    DWORD PTR [rax+rax*1+0x0]
   23628:	movsx  rdx,BYTE PTR [rsi+rax*1]
   2362d:	mov    BYTE PTR [rcx+rdx*1],al
   23630:	add    rax,0x1
   23634:	cmp    rax,0x40
   23638:	jne    23628 <__sprintf_chk@plt+0x18c78>
   2363a:	ret    
   2363b:	nop    DWORD PTR [rax+rax*1+0x0]
   23640:	endbr64 
   23644:	push   rbp
   23645:	mov    rbp,rsp
   23648:	push   r15
   2364a:	push   r14
   2364c:	push   r13
   2364e:	mov    r13,rdx
   23651:	push   r12
   23653:	lea    r12,[rdi+rsi*1]
   23657:	push   rbx
   23658:	mov    rbx,rdi
   2365b:	sub    rsp,0x468
   23662:	mov    eax,DWORD PTR [rbp+0x10]
   23665:	mov    DWORD PTR [rbp-0x480],r9d
   2366c:	mov    DWORD PTR [rbp-0x474],eax
   23672:	mov    rax,QWORD PTR fs:0x28
   2367b:	mov    QWORD PTR [rbp-0x38],rax
   2367f:	xor    eax,eax
   23681:	cmp    BYTE PTR [rdi],0x1
   23684:	adc    rbx,0x0
   23688:	cmp    r12,rbx
   2368b:	je     237f8 <__sprintf_chk@plt+0x18e48>
   23691:	mov    QWORD PTR [rbp-0x470],r8
   23698:	mov    r14,rcx
   2369b:	mov    r15,rsi
   2369e:	mov    QWORD PTR [rbp-0x468],rdi
   236a5:	call   a980 <__ctype_b_loc@plt>
   236aa:	mov    r10,QWORD PTR [rbp-0x468]
   236b1:	mov    r8,QWORD PTR [rbp-0x470]
   236b8:	mov    QWORD PTR [rbp-0x488],rax
   236bf:	mov    rcx,QWORD PTR [rax]
   236c2:	jmp    236d5 <__sprintf_chk@plt+0x18d25>
   236c4:	nop    DWORD PTR [rax+0x0]
   236c8:	add    rbx,0x1
   236cc:	cmp    r12,rbx
   236cf:	je     237f8 <__sprintf_chk@plt+0x18e48>
   236d5:	movzx  eax,BYTE PTR [rbx]
   236d8:	mov    rdx,rax
   236db:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   236e0:	jne    236c8 <__sprintf_chk@plt+0x18d18>
   236e2:	neg    r14
   236e5:	mov    QWORD PTR [rbp-0x468],r14
   236ec:	movsx  r14d,al
   236f0:	sub    r14d,0x30
   236f4:	cmp    r14d,0x7
   236f8:	ja     23870 <__sprintf_chk@plt+0x18ec0>
   236fe:	lea    r9,[rbx+0x1]
   23702:	movsxd r14,r14d
   23705:	cmp    r9,r12
   23708:	je     23b60 <__sprintf_chk@plt+0x191b0>
   2370e:	movabs r11,0x1fffffffffffffff
   23718:	mov    r15,r9
   2371b:	xor    esi,esi
   2371d:	jmp    23742 <__sprintf_chk@plt+0x18d92>
   2371f:	nop
   23720:	mov    rdi,r14
   23723:	cdqe   
   23725:	and    rdi,r11
   23728:	cmp    rdi,r14
   2372b:	lea    r14,[rax+r14*8]
   2372f:	setne  dil
   23733:	add    r15,0x1
   23737:	or     esi,edi
   23739:	cmp    r12,r15
   2373c:	je     23b68 <__sprintf_chk@plt+0x191b8>
   23742:	movsx  eax,BYTE PTR [r15]
   23746:	sub    eax,0x30
   23749:	cmp    eax,0x7
   2374c:	jbe    23720 <__sprintf_chk@plt+0x18d70>
   2374e:	cmp    r14,r8
   23751:	ja     23b79 <__sprintf_chk@plt+0x191c9>
   23757:	test   sil,sil
   2375a:	jne    23b79 <__sprintf_chk@plt+0x191c9>
   23760:	cmp    r15,r12
   23763:	je     2388b <__sprintf_chk@plt+0x18edb>
   23769:	movzx  eax,BYTE PTR [r15]
   2376d:	test   al,al
   2376f:	je     23b50 <__sprintf_chk@plt+0x191a0>
   23775:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   2377a:	jne    23b50 <__sprintf_chk@plt+0x191a0>
   23780:	test   r13,r13
   23783:	je     23842 <__sprintf_chk@plt+0x18e92>
   23789:	mov    r14,QWORD PTR [rip+0x5c318]        # 7faa8 <obstack_alloc_failed_handler@@Base+0xc70>
   23790:	mov    QWORD PTR [rbp-0x468],r10
   23797:	call   9e40 <__errno_location@plt>
   2379c:	mov    r10,QWORD PTR [rbp-0x468]
   237a3:	test   r14,r14
   237a6:	mov    rbx,rax
   237a9:	jne    23d79 <__sprintf_chk@plt+0x193c9>
   237af:	mov    edi,0x38
   237b4:	mov    r14d,DWORD PTR [rax]
   237b7:	call   a4a0 <malloc@plt>
   237bc:	mov    r10,QWORD PTR [rbp-0x468]
   237c3:	test   rax,rax
   237c6:	je     23ff3 <__sprintf_chk@plt+0x19643>
   237cc:	lea    rsi,[rip+0x5b7ad]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   237d3:	mov    ecx,0xe
   237d8:	mov    rdi,rax
   237db:	mov    QWORD PTR [rip+0x5c2c6],rax        # 7faa8 <obstack_alloc_failed_handler@@Base+0xc70>
   237e2:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   237e4:	mov    DWORD PTR [rbx],r14d
   237e7:	mov    r14,rax
   237ea:	mov    DWORD PTR [rax],0x8
   237f0:	jmp    23d79 <__sprintf_chk@plt+0x193c9>
   237f5:	nop    DWORD PTR [rax]
   237f8:	test   r13,r13
   237fb:	je     23842 <__sprintf_chk@plt+0x18e92>
   237fd:	cmp    BYTE PTR [rbp-0x474],0x1
   23804:	je     23842 <__sprintf_chk@plt+0x18e92>
   23806:	mov    rax,QWORD PTR [rip+0x5bcfb]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2380d:	test   rax,rax
   23810:	je     23814 <__sprintf_chk@plt+0x18e64>
   23812:	call   rax
   23814:	mov    edx,0x5
   23819:	lea    rsi,[rip+0x41b18]        # 65338 <_obstack_memory_used@@Base+0x186b8>
   23820:	xor    edi,edi
   23822:	call   a040 <dcgettext@plt>
   23827:	mov    rcx,r13
   2382a:	xor    esi,esi
   2382c:	xor    edi,edi
   2382e:	mov    rdx,rax
   23831:	xor    eax,eax
   23833:	call   a640 <error@plt>
   23838:	mov    DWORD PTR [rip+0x5b882],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   23842:	mov    rax,0xffffffffffffffff
   23849:	mov    rdx,QWORD PTR [rbp-0x38]
   2384d:	sub    rdx,QWORD PTR fs:0x28
   23856:	jne    23fee <__sprintf_chk@plt+0x1963e>
   2385c:	lea    rsp,[rbp-0x28]
   23860:	pop    rbx
   23861:	pop    r12
   23863:	pop    r13
   23865:	pop    r14
   23867:	pop    r15
   23869:	pop    rbp
   2386a:	ret    
   2386b:	nop    DWORD PTR [rax+rax*1+0x0]
   23870:	cmp    BYTE PTR [rbp-0x480],0x0
   23877:	je     23890 <__sprintf_chk@plt+0x18ee0>
   23879:	xor    eax,eax
   2387b:	cmp    rbx,r12
   2387e:	je     23849 <__sprintf_chk@plt+0x18e99>
   23880:	xor    r14d,r14d
   23883:	test   dl,dl
   23885:	jne    23780 <__sprintf_chk@plt+0x18dd0>
   2388b:	mov    rax,r14
   2388e:	jmp    23849 <__sprintf_chk@plt+0x18e99>
   23890:	lea    eax,[rax-0x2b]
   23893:	test   al,0xfd
   23895:	jne    23cca <__sprintf_chk@plt+0x1931a>
   2389b:	cmp    BYTE PTR [rbp-0x474],0x0
   238a2:	jne    2391e <__sprintf_chk@plt+0x18f6e>
   238a4:	cmp    BYTE PTR [rip+0x5c205],0x0        # 7fab0 <obstack_alloc_failed_handler@@Base+0xc78>
   238ab:	jne    2391e <__sprintf_chk@plt+0x18f6e>
   238ad:	mov    rax,QWORD PTR [rip+0x5bc54]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   238b4:	mov    BYTE PTR [rip+0x5c1f5],0x1        # 7fab0 <obstack_alloc_failed_handler@@Base+0xc78>
   238bb:	test   rax,rax
   238be:	je     238de <__sprintf_chk@plt+0x18f2e>
   238c0:	mov    QWORD PTR [rbp-0x480],r8
   238c7:	mov    QWORD PTR [rbp-0x470],r10
   238ce:	call   rax
   238d0:	mov    r8,QWORD PTR [rbp-0x480]
   238d7:	mov    r10,QWORD PTR [rbp-0x470]
   238de:	mov    edx,0x5
   238e3:	lea    rsi,[rip+0x41afe]        # 653e8 <_obstack_memory_used@@Base+0x18768>
   238ea:	xor    edi,edi
   238ec:	mov    QWORD PTR [rbp-0x480],r8
   238f3:	mov    QWORD PTR [rbp-0x470],r10
   238fa:	call   a040 <dcgettext@plt>
   238ff:	xor    esi,esi
   23901:	xor    edi,edi
   23903:	mov    rdx,rax
   23906:	xor    eax,eax
   23908:	call   a640 <error@plt>
   2390d:	movzx  edx,BYTE PTR [rbx]
   23910:	mov    r8,QWORD PTR [rbp-0x480]
   23917:	mov    r10,QWORD PTR [rbp-0x470]
   2391e:	add    rbx,0x1
   23922:	cmp    dl,0x2d
   23925:	lea    rsi,[rip+0x5c194]        # 7fac0 <obstack_alloc_failed_handler@@Base+0xc88>
   2392c:	movabs rdi,0x3ffffffffffffff
   23936:	sete   cl
   23939:	xor    r14d,r14d
   2393c:	cmp    r12,rbx
   2393f:	jne    2396f <__sprintf_chk@plt+0x18fbf>
   23941:	jmp    23f94 <__sprintf_chk@plt+0x195e4>
   23946:	cs nop WORD PTR [rax+rax*1+0x0]
   23950:	mov    rdx,r14
   23953:	and    rdx,rdi
   23956:	cmp    rdx,r14
   23959:	jne    23e28 <__sprintf_chk@plt+0x19478>
   2395f:	shl    r14,0x6
   23963:	add    rbx,0x1
   23967:	or     r14,rax
   2396a:	cmp    r12,rbx
   2396d:	je     2399c <__sprintf_chk@plt+0x18fec>
   2396f:	movzx  eax,BYTE PTR [rbx]
   23972:	mov    rdx,rax
   23975:	movsx  rax,BYTE PTR [rsi+rax*1]
   2397a:	cmp    al,0x3f
   2397c:	jle    23950 <__sprintf_chk@plt+0x18fa0>
   2397e:	cmp    r12,rbx
   23981:	je     2399c <__sprintf_chk@plt+0x18fec>
   23983:	test   dl,dl
   23985:	je     2399c <__sprintf_chk@plt+0x18fec>
   23987:	mov    rax,QWORD PTR [rbp-0x488]
   2398e:	mov    rax,QWORD PTR [rax]
   23991:	test   BYTE PTR [rax+rdx*2+0x1],0x20
   23996:	je     23780 <__sprintf_chk@plt+0x18dd0>
   2399c:	test   cl,cl
   2399e:	je     23b50 <__sprintf_chk@plt+0x191a0>
   239a4:	cmp    QWORD PTR [rbp-0x468],r14
   239ab:	jae    23cbf <__sprintf_chk@plt+0x1930f>
   239b1:	test   r13,r13
   239b4:	je     23842 <__sprintf_chk@plt+0x18e92>
   239ba:	cmp    BYTE PTR [rbp-0x474],0x1
   239c1:	je     23842 <__sprintf_chk@plt+0x18e92>
   239c7:	mov    BYTE PTR [rbp-0x40b],0x0
   239ce:	mov    rsi,QWORD PTR [rbp-0x468]
   239d5:	lea    rbx,[rbp-0x40b]
   239dc:	movabs r9,0xcccccccccccccccd
   239e6:	cs nop WORD PTR [rax+rax*1+0x0]
   239f0:	mov    rax,rsi
   239f3:	mov    rdi,rbx
   239f6:	sub    rbx,0x1
   239fa:	mul    r9
   239fd:	mov    rax,rsi
   23a00:	shr    rdx,0x3
   23a04:	lea    r10,[rdx+rdx*4]
   23a08:	add    r10,r10
   23a0b:	sub    rax,r10
   23a0e:	add    eax,0x30
   23a11:	mov    BYTE PTR [rbx],al
   23a13:	mov    rax,rsi
   23a16:	mov    rsi,rdx
   23a19:	cmp    rax,0x9
   23a1d:	ja     239f0 <__sprintf_chk@plt+0x19040>
   23a1f:	mov    BYTE PTR [rbp-0x42b],0x0
   23a26:	lea    r12,[rbp-0x42b]
   23a2d:	movabs rsi,0xcccccccccccccccd
   23a37:	nop    WORD PTR [rax+rax*1+0x0]
   23a40:	mov    rax,r14
   23a43:	mov    r9,r12
   23a46:	sub    r12,0x1
   23a4a:	mul    rsi
   23a4d:	mov    rax,r14
   23a50:	shr    rdx,0x3
   23a54:	lea    r10,[rdx+rdx*4]
   23a58:	add    r10,r10
   23a5b:	sub    rax,r10
   23a5e:	add    eax,0x30
   23a61:	mov    BYTE PTR [r12],al
   23a65:	mov    rax,r14
   23a68:	mov    r14,rdx
   23a6b:	cmp    rax,0x9
   23a6f:	ja     23a40 <__sprintf_chk@plt+0x19090>
   23a71:	test   cl,cl
   23a73:	je     23a7f <__sprintf_chk@plt+0x190cf>
   23a75:	mov    BYTE PTR [r12-0x1],0x2d
   23a7b:	lea    r12,[r9-0x2]
   23a7f:	cmp    QWORD PTR [rbp-0x468],0x0
   23a87:	jne    23d54 <__sprintf_chk@plt+0x193a4>
   23a8d:	mov    rax,QWORD PTR [rip+0x5ba74]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   23a94:	test   rax,rax
   23a97:	je     23aa9 <__sprintf_chk@plt+0x190f9>
   23a99:	mov    QWORD PTR [rbp-0x468],r8
   23aa0:	call   rax
   23aa2:	mov    r8,QWORD PTR [rbp-0x468]
   23aa9:	mov    BYTE PTR [rbp-0x44c],0x0
   23ab0:	lea    r14,[rbp-0x44c]
   23ab7:	movabs rsi,0xcccccccccccccccd
   23ac1:	nop    DWORD PTR [rax+0x0]
   23ac8:	mov    rax,r8
   23acb:	sub    r14,0x1
   23acf:	mul    rsi
   23ad2:	mov    rax,r8
   23ad5:	shr    rdx,0x3
   23ad9:	lea    rcx,[rdx+rdx*4]
   23add:	add    rcx,rcx
   23ae0:	sub    rax,rcx
   23ae3:	add    eax,0x30
   23ae6:	mov    BYTE PTR [r14],al
   23ae9:	mov    rax,r8
   23aec:	mov    r8,rdx
   23aef:	cmp    rax,0x9
   23af3:	ja     23ac8 <__sprintf_chk@plt+0x19118>
   23af5:	mov    edx,0x5
   23afa:	lea    rsi,[rip+0x419b7]        # 654b8 <_obstack_memory_used@@Base+0x18838>
   23b01:	xor    edi,edi
   23b03:	call   a040 <dcgettext@plt>
   23b08:	sub    rsp,0x8
   23b0c:	mov    r9,rbx
   23b0f:	mov    r8,r13
   23b12:	push   r14
   23b14:	mov    rdx,rax
   23b17:	mov    rcx,r12
   23b1a:	xor    eax,eax
   23b1c:	xor    esi,esi
   23b1e:	xor    edi,edi
   23b20:	call   a640 <error@plt>
   23b25:	pop    rax
   23b26:	mov    rax,0xffffffffffffffff
   23b2d:	pop    rdx
   23b2e:	mov    DWORD PTR [rip+0x5b58c],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   23b38:	jmp    23849 <__sprintf_chk@plt+0x18e99>
   23b3d:	test   sil,sil
   23b40:	jne    23fa4 <__sprintf_chk@plt+0x195f4>
   23b46:	cmp    r12,r15
   23b49:	jne    23769 <__sprintf_chk@plt+0x18db9>
   23b4f:	nop
   23b50:	cmp    r8,r14
   23b53:	jae    2388b <__sprintf_chk@plt+0x18edb>
   23b59:	xor    ecx,ecx
   23b5b:	jmp    239b1 <__sprintf_chk@plt+0x19001>
   23b60:	xor    esi,esi
   23b62:	nop    WORD PTR [rax+rax*1+0x0]
   23b68:	cmp    r8,r14
   23b6b:	jb     23b76 <__sprintf_chk@plt+0x191c6>
   23b6d:	test   sil,sil
   23b70:	je     2388b <__sprintf_chk@plt+0x18edb>
   23b76:	mov    r15,r12
   23b79:	cmp    dl,0x31
   23b7c:	jle    23b3d <__sprintf_chk@plt+0x1918d>
   23b7e:	test   r13,r13
   23b81:	je     23d61 <__sprintf_chk@plt+0x193b1>
   23b87:	lea    eax,[rdx-0x30]
   23b8a:	mov    r11d,0x7
   23b90:	or     eax,0x4
   23b93:	movsx  eax,al
   23b96:	sub    r11d,eax
   23b99:	movsxd r11,r11d
   23b9c:	cmp    r9,r12
   23b9f:	je     23f8a <__sprintf_chk@plt+0x195da>
   23ba5:	xor    edi,edi
   23ba7:	mov    r14d,0x7
   23bad:	movabs rsi,0x1fffffffffffffff
   23bb7:	jmp    23be7 <__sprintf_chk@plt+0x19237>
   23bb9:	nop    DWORD PTR [rax+0x0]
   23bc0:	mov    rdx,r11
   23bc3:	and    rdx,rsi
   23bc6:	cmp    rdx,r11
   23bc9:	setne  dl
   23bcc:	add    r9,0x1
   23bd0:	or     edi,edx
   23bd2:	mov    edx,r14d
   23bd5:	sub    edx,eax
   23bd7:	movsxd rax,edx
   23bda:	lea    r11,[rax+r11*8]
   23bde:	cmp    r12,r9
   23be1:	je     23f42 <__sprintf_chk@plt+0x19592>
   23be7:	movsx  eax,BYTE PTR [r9]
   23beb:	sub    eax,0x30
   23bee:	cmp    eax,0x7
   23bf1:	jbe    23bc0 <__sprintf_chk@plt+0x19210>
   23bf3:	mov    r15,r9
   23bf6:	mov    r14,r11
   23bf9:	add    r14,0x1
   23bfd:	sete   sil
   23c01:	or     esi,edi
   23c03:	cmp    sil,0x1
   23c07:	je     23fa4 <__sprintf_chk@plt+0x195f4>
   23c0d:	cmp    QWORD PTR [rbp-0x468],r14
   23c14:	jb     23b3d <__sprintf_chk@plt+0x1918d>
   23c1a:	cmp    BYTE PTR [rbp-0x474],0x0
   23c21:	jne    23c95 <__sprintf_chk@plt+0x192e5>
   23c23:	mov    rax,QWORD PTR [rip+0x5b8de]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   23c2a:	test   rax,rax
   23c2d:	je     23c4d <__sprintf_chk@plt+0x1929d>
   23c2f:	mov    QWORD PTR [rbp-0x470],r10
   23c36:	mov    QWORD PTR [rbp-0x468],r11
   23c3d:	call   rax
   23c3f:	mov    r10,QWORD PTR [rbp-0x470]
   23c46:	mov    r11,QWORD PTR [rbp-0x468]
   23c4d:	mov    edx,0x5
   23c52:	lea    rsi,[rip+0x41717]        # 65370 <_obstack_memory_used@@Base+0x186f0>
   23c59:	xor    edi,edi
   23c5b:	mov    QWORD PTR [rbp-0x470],r10
   23c62:	mov    QWORD PTR [rbp-0x468],r11
   23c69:	call   a040 <dcgettext@plt>
   23c6e:	mov    ecx,r15d
   23c71:	mov    r9,r13
   23c74:	mov    r8,rbx
   23c77:	mov    rdx,rax
   23c7a:	sub    ecx,ebx
   23c7c:	xor    esi,esi
   23c7e:	xor    edi,edi
   23c80:	xor    eax,eax
   23c82:	call   a640 <error@plt>
   23c87:	mov    r11,QWORD PTR [rbp-0x468]
   23c8e:	mov    r10,QWORD PTR [rbp-0x470]
   23c95:	cmp    r12,r15
   23c98:	je     23f4a <__sprintf_chk@plt+0x1959a>
   23c9e:	movzx  eax,BYTE PTR [r15]
   23ca2:	test   al,al
   23ca4:	je     23f4a <__sprintf_chk@plt+0x1959a>
   23caa:	mov    rsi,QWORD PTR [rbp-0x488]
   23cb1:	mov    rdx,QWORD PTR [rsi]
   23cb4:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   23cb9:	je     23789 <__sprintf_chk@plt+0x18dd9>
   23cbf:	mov    rax,r14
   23cc2:	neg    rax
   23cc5:	jmp    23849 <__sprintf_chk@plt+0x18e99>
   23cca:	lea    rax,[r12-0x2]
   23ccf:	cmp    rbx,rax
   23cd2:	ja     23879 <__sprintf_chk@plt+0x18ec9>
   23cd8:	cmp    dl,0x80
   23cdb:	je     23ce6 <__sprintf_chk@plt+0x19336>
   23cdd:	cmp    dl,0xff
   23ce0:	jne    23879 <__sprintf_chk@plt+0x18ec9>
   23ce6:	mov    edi,edx
   23ce8:	mov    eax,edx
   23cea:	mov    esi,edx
   23cec:	add    rbx,0x1
   23cf0:	and    edi,0x40
   23cf3:	and    eax,0x3f
   23cf6:	and    esi,0x40
   23cf9:	movabs rdx,0xffffffffffffff
   23d03:	mov    ecx,edi
   23d05:	sub    eax,edi
   23d07:	neg    ecx
   23d09:	movsxd r14,eax
   23d0c:	shl    rcx,0x32
   23d10:	jmp    23d2a <__sprintf_chk@plt+0x1937a>
   23d12:	nop    WORD PTR [rax+rax*1+0x0]
   23d18:	mov    rax,r14
   23d1b:	and    rax,rdx
   23d1e:	or     rax,rcx
   23d21:	cmp    rax,r14
   23d24:	jne    23f55 <__sprintf_chk@plt+0x195a5>
   23d2a:	movzx  eax,BYTE PTR [rbx]
   23d2d:	shl    r14,0x8
   23d31:	add    rbx,0x1
   23d35:	add    r14,rax
   23d38:	cmp    r12,rbx
   23d3b:	jne    23d18 <__sprintf_chk@plt+0x19368>
   23d3d:	test   edi,edi
   23d3f:	mov    rax,r14
   23d42:	setne  cl
   23d45:	neg    rax
   23d48:	test   sil,sil
   23d4b:	cmovne r14,rax
   23d4f:	jmp    2399c <__sprintf_chk@plt+0x18fec>
   23d54:	mov    BYTE PTR [rbx-0x1],0x2d
   23d58:	lea    rbx,[rdi-0x2]
   23d5c:	jmp    23a8d <__sprintf_chk@plt+0x190dd>
   23d61:	test   sil,sil
   23d64:	je     23b46 <__sprintf_chk@plt+0x19196>
   23d6a:	jmp    23842 <__sprintf_chk@plt+0x18e92>
   23d6f:	nop
   23d70:	sub    r12,0x1
   23d74:	cmp    r10,r12
   23d77:	je     23d81 <__sprintf_chk@plt+0x193d1>
   23d79:	cmp    BYTE PTR [r12-0x1],0x0
   23d7f:	je     23d70 <__sprintf_chk@plt+0x193c0>
   23d81:	mov    rcx,r12
   23d84:	lea    rax,[rip+0x5b1f5]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   23d8b:	mov    r15d,DWORD PTR [rbx]
   23d8e:	mov    esi,0x3e8
   23d93:	sub    rcx,r10
   23d96:	test   r14,r14
   23d99:	cmovne rax,r14
   23d9d:	sub    rsp,0x8
   23da1:	lea    r14,[rbp-0x420]
   23da8:	mov    rdi,r14
   23dab:	lea    rdx,[rax+0x8]
   23daf:	mov    r9d,DWORD PTR [rax+0x4]
   23db3:	mov    r8d,DWORD PTR [rax]
   23db6:	push   QWORD PTR [rax+0x30]
   23db9:	push   QWORD PTR [rax+0x28]
   23dbc:	push   rdx
   23dbd:	mov    rdx,r10
   23dc0:	call   4a1f0 <argp_usage@@Base+0x6e70>
   23dc5:	add    rsp,0x20
   23dc9:	cmp    BYTE PTR [rbp-0x474],0x0
   23dd0:	mov    DWORD PTR [rbx],r15d
   23dd3:	jne    23842 <__sprintf_chk@plt+0x18e92>
   23dd9:	mov    rax,QWORD PTR [rip+0x5b728]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   23de0:	test   rax,rax
   23de3:	je     23de7 <__sprintf_chk@plt+0x19437>
   23de5:	call   rax
   23de7:	mov    edx,0x5
   23dec:	lea    rsi,[rip+0x4168d]        # 65480 <_obstack_memory_used@@Base+0x18800>
   23df3:	xor    edi,edi
   23df5:	call   a040 <dcgettext@plt>
   23dfa:	mov    r9,r13
   23dfd:	mov    r8,r14
   23e00:	mov    ecx,0x3e8
   23e05:	mov    rdx,rax
   23e08:	xor    esi,esi
   23e0a:	xor    edi,edi
   23e0c:	xor    eax,eax
   23e0e:	call   a640 <error@plt>
   23e13:	mov    DWORD PTR [rip+0x5b2a7],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   23e1d:	jmp    23842 <__sprintf_chk@plt+0x18e92>
   23e22:	nop    WORD PTR [rax+rax*1+0x0]
   23e28:	lea    rax,[r15+0x18]
   23e2c:	mov    rcx,rsp
   23e2f:	mov    rdx,rax
   23e32:	and    rax,0xfffffffffffff000
   23e38:	sub    rcx,rax
   23e3b:	and    rdx,0xfffffffffffffff0
   23e3f:	cmp    rsp,rcx
   23e42:	je     23e59 <__sprintf_chk@plt+0x194a9>
   23e44:	sub    rsp,0x1000
   23e4b:	or     QWORD PTR [rsp+0xff8],0x0
   23e54:	cmp    rsp,rcx
   23e57:	jne    23e44 <__sprintf_chk@plt+0x19494>
   23e59:	mov    rax,rdx
   23e5c:	and    eax,0xfff
   23e61:	sub    rsp,rax
   23e64:	test   rax,rax
   23e67:	je     23e6f <__sprintf_chk@plt+0x194bf>
   23e69:	or     QWORD PTR [rsp+rax*1-0x8],0x0
   23e6f:	lea    r12,[rsp+0xf]
   23e74:	mov    ecx,r15d
   23e77:	xor    eax,eax
   23e79:	and    r12,0xfffffffffffffff0
   23e7d:	and    ecx,0xfffffff8
   23e80:	mov    edx,eax
   23e82:	add    eax,0x8
   23e85:	mov    rsi,QWORD PTR [r10+rdx*1]
   23e89:	mov    QWORD PTR [r12+rdx*1],rsi
   23e8d:	cmp    eax,ecx
   23e8f:	jb     23e80 <__sprintf_chk@plt+0x194d0>
   23e91:	lea    rcx,[r12+rax*1]
   23e95:	xor    edx,edx
   23e97:	add    rax,r10
   23e9a:	test   r15b,0x4
   23e9e:	je     23ea9 <__sprintf_chk@plt+0x194f9>
   23ea0:	mov    edx,DWORD PTR [rax]
   23ea2:	mov    DWORD PTR [rcx],edx
   23ea4:	mov    edx,0x4
   23ea9:	test   r15b,0x2
   23ead:	je     23ebb <__sprintf_chk@plt+0x1950b>
   23eaf:	movzx  esi,WORD PTR [rax+rdx*1]
   23eb3:	mov    WORD PTR [rcx+rdx*1],si
   23eb7:	add    rdx,0x2
   23ebb:	test   r15b,0x1
   23ebf:	je     23ec8 <__sprintf_chk@plt+0x19518>
   23ec1:	movzx  eax,BYTE PTR [rax+rdx*1]
   23ec5:	mov    BYTE PTR [rcx+rdx*1],al
   23ec8:	cmp    BYTE PTR [rbp-0x474],0x1
   23ecf:	mov    BYTE PTR [r12+r15*1],0x0
   23ed4:	je     23842 <__sprintf_chk@plt+0x18e92>
   23eda:	test   r13,r13
   23edd:	je     23842 <__sprintf_chk@plt+0x18e92>
   23ee3:	mov    rax,QWORD PTR [rip+0x5b61e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   23eea:	test   rax,rax
   23eed:	je     23ef1 <__sprintf_chk@plt+0x19541>
   23eef:	call   rax
   23ef1:	mov    rsi,r12
   23ef4:	lea    rdx,[rip+0x58145]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   23efb:	xor    edi,edi
   23efd:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   23f02:	mov    edx,0x5
   23f07:	lea    rsi,[rip+0x4150a]        # 65418 <_obstack_memory_used@@Base+0x18798>
   23f0e:	xor    edi,edi
   23f10:	mov    r12,rax
   23f13:	call   a040 <dcgettext@plt>
   23f18:	mov    r8,r13
   23f1b:	mov    rcx,r12
   23f1e:	xor    esi,esi
   23f20:	mov    rdx,rax
   23f23:	xor    edi,edi
   23f25:	xor    eax,eax
   23f27:	call   a640 <error@plt>
   23f2c:	mov    rax,0xffffffffffffffff
   23f33:	mov    DWORD PTR [rip+0x5b187],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   23f3d:	jmp    23849 <__sprintf_chk@plt+0x18e99>
   23f42:	mov    r15,r12
   23f45:	jmp    23bf6 <__sprintf_chk@plt+0x19246>
   23f4a:	mov    rax,r11
   23f4d:	not    rax
   23f50:	jmp    23849 <__sprintf_chk@plt+0x18e99>
   23f55:	test   r13,r13
   23f58:	je     23842 <__sprintf_chk@plt+0x18e92>
   23f5e:	cmp    BYTE PTR [rbp-0x474],0x1
   23f65:	je     23842 <__sprintf_chk@plt+0x18e92>
   23f6b:	mov    rax,QWORD PTR [rip+0x5b596]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   23f72:	test   rax,rax
   23f75:	je     23f79 <__sprintf_chk@plt+0x195c9>
   23f77:	call   rax
   23f79:	mov    edx,0x5
   23f7e:	lea    rsi,[rip+0x414cb]        # 65450 <_obstack_memory_used@@Base+0x187d0>
   23f85:	jmp    23820 <__sprintf_chk@plt+0x18e70>
   23f8a:	mov    r15,r12
   23f8d:	xor    edi,edi
   23f8f:	jmp    23bf6 <__sprintf_chk@plt+0x19246>
   23f94:	xor    eax,eax
   23f96:	cmp    dl,0x2d
   23f99:	je     23849 <__sprintf_chk@plt+0x18e99>
   23f9f:	jmp    2388b <__sprintf_chk@plt+0x18edb>
   23fa4:	test   r13,r13
   23fa7:	je     23842 <__sprintf_chk@plt+0x18e92>
   23fad:	cmp    BYTE PTR [rbp-0x474],0x1
   23fb4:	je     23842 <__sprintf_chk@plt+0x18e92>
   23fba:	mov    rax,QWORD PTR [rip+0x5b547]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   23fc1:	test   rax,rax
   23fc4:	je     23fc8 <__sprintf_chk@plt+0x19618>
   23fc6:	call   rax
   23fc8:	mov    edx,0x5
   23fcd:	lea    rsi,[rip+0x413e4]        # 653b8 <_obstack_memory_used@@Base+0x18738>
   23fd4:	xor    edi,edi
   23fd6:	call   a040 <dcgettext@plt>
   23fdb:	mov    ecx,r15d
   23fde:	mov    r9,r13
   23fe1:	mov    r8,rbx
   23fe4:	mov    rdx,rax
   23fe7:	sub    ecx,ebx
   23fe9:	jmp    23e08 <__sprintf_chk@plt+0x19458>
   23fee:	call   a0a0 <__stack_chk_fail@plt>
   23ff3:	call   19130 <__sprintf_chk@plt+0xe780>
   23ff8:	nop    DWORD PTR [rax+rax*1+0x0]
   24000:	endbr64 
   24004:	mov    r10d,esi
   24007:	mov    r9,rdi
   2400a:	mov    rdx,rdi
   2400d:	xor    esi,esi
   2400f:	lea    r8,[rdi+0x200]
   24016:	xor    ecx,ecx
   24018:	nop    DWORD PTR [rax+rax*1+0x0]
   24020:	movzx  edi,BYTE PTR [rdx]
   24023:	add    rdx,0x1
   24027:	movsx  eax,dil
   2402b:	add    ecx,edi
   2402d:	add    esi,eax
   2402f:	cmp    r8,rdx
   24032:	jne    24020 <__sprintf_chk@plt+0x19670>
   24034:	mov    r8d,0x3
   2403a:	test   ecx,ecx
   2403c:	je     240cf <__sprintf_chk@plt+0x1971f>
   24042:	push   rbp
   24043:	lea    rdx,[r9+0x9b]
   2404a:	lea    r8,[r9+0x93]
   24051:	push   rbx
   24052:	sub    rsp,0x8
   24056:	cs nop WORD PTR [rax+rax*1+0x0]
   24060:	movzx  edi,BYTE PTR [rdx]
   24063:	sub    rdx,0x1
   24067:	movsx  eax,dil
   2406b:	sub    ecx,edi
   2406d:	sub    esi,eax
   2406f:	cmp    r8,rdx
   24072:	jne    24060 <__sprintf_chk@plt+0x196b0>
   24074:	sub    rsp,0x8
   24078:	movzx  r10d,r10b
   2407c:	xor    edx,edx
   2407e:	mov    r8d,0x7fffffff
   24084:	push   r10
   24086:	lea    rdi,[r9+0x94]
   2408d:	lea    ebx,[rcx+0x100]
   24093:	xor    ecx,ecx
   24095:	lea    ebp,[rsi+0x100]
   2409b:	mov    r9d,0x1
   240a1:	mov    esi,0x8
   240a6:	call   23640 <__sprintf_chk@plt+0x18c90>
   240ab:	pop    rdx
   240ac:	pop    rcx
   240ad:	test   eax,eax
   240af:	js     240d3 <__sprintf_chk@plt+0x19723>
   240b1:	cmp    ebx,eax
   240b3:	je     240bf <__sprintf_chk@plt+0x1970f>
   240b5:	mov    r8d,0x5
   240bb:	cmp    ebp,eax
   240bd:	jne    240c5 <__sprintf_chk@plt+0x19715>
   240bf:	mov    r8d,0x1
   240c5:	add    rsp,0x8
   240c9:	mov    eax,r8d
   240cc:	pop    rbx
   240cd:	pop    rbp
   240ce:	ret    
   240cf:	mov    eax,r8d
   240d2:	ret    
   240d3:	add    rsp,0x8
   240d7:	mov    r8d,0x5
   240dd:	mov    eax,r8d
   240e0:	pop    rbx
   240e1:	pop    rbp
   240e2:	ret    
   240e3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   240ee:	xchg   ax,ax
   240f0:	endbr64 
   240f4:	push   r12
   240f6:	mov    r12,rdi
   240f9:	push   rbp
   240fa:	shr    r12,0x3f
   240fe:	mov    ebp,edx
   24100:	push   rbx
   24101:	mov    ebx,esi
   24103:	sub    rsp,0x10
   24107:	mov    rax,QWORD PTR fs:0x28
   24110:	mov    QWORD PTR [rsp+0x8],rax
   24115:	xor    eax,eax
   24117:	mov    QWORD PTR [rsp],rdi
   2411b:	test   esi,esi
   2411d:	je     24133 <__sprintf_chk@plt+0x19783>
   2411f:	test   r12b,r12b
   24122:	je     24133 <__sprintf_chk@plt+0x19783>
   24124:	add    rdi,0x1
   24128:	mov    ebx,0x3b9aca00
   2412d:	mov    QWORD PTR [rsp],rdi
   24131:	sub    ebx,esi
   24133:	cmp    BYTE PTR [rip+0x5b7d8],0x0        # 7f912 <obstack_alloc_failed_handler@@Base+0xada>
   2413a:	mov    rdi,rsp
   2413d:	je     24198 <__sprintf_chk@plt+0x197e8>
   2413f:	call   a720 <gmtime@plt>
   24144:	mov    rcx,rax
   24147:	test   rcx,rcx
   2414a:	je     241a5 <__sprintf_chk@plt+0x197f5>
   2414c:	test   bpl,bpl
   2414f:	jne    24270 <__sprintf_chk@plt+0x198c0>
   24155:	lea    rbx,[rip+0x5b924]        # 7fa80 <obstack_alloc_failed_handler@@Base+0xc48>
   2415c:	lea    rdx,[rip+0x40c65]        # 64dc8 <_obstack_memory_used@@Base+0x18148>
   24163:	mov    esi,0x25
   24168:	mov    rdi,rbx
   2416b:	call   a600 <strftime@plt>
   24170:	mov    r8,rbx
   24173:	mov    rax,QWORD PTR [rsp+0x8]
   24178:	sub    rax,QWORD PTR fs:0x28
   24181:	jne    244af <__sprintf_chk@plt+0x19aff>
   24187:	add    rsp,0x10
   2418b:	mov    rax,r8
   2418e:	pop    rbx
   2418f:	pop    rbp
   24190:	pop    r12
   24192:	ret    
   24193:	nop    DWORD PTR [rax+rax*1+0x0]
   24198:	call   9e10 <localtime@plt>
   2419d:	mov    rcx,rax
   241a0:	test   rcx,rcx
   241a3:	jne    2414c <__sprintf_chk@plt+0x1979c>
   241a5:	mov    rsi,QWORD PTR [rsp]
   241a9:	mov    BYTE PTR [rip+0x5b8ea],0x0        # 7fa9a <obstack_alloc_failed_handler@@Base+0xc62>
   241b0:	lea    rcx,[rip+0x5b8e3]        # 7fa9a <obstack_alloc_failed_handler@@Base+0xc62>
   241b7:	movabs r8,0xcccccccccccccccd
   241c1:	mov    rax,rsi
   241c4:	neg    rax
   241c7:	test   r12b,r12b
   241ca:	cmovne rsi,rax
   241ce:	xchg   ax,ax
   241d0:	mov    rax,rsi
   241d3:	mov    r9,rcx
   241d6:	sub    rcx,0x1
   241da:	mul    r8
   241dd:	mov    rax,rsi
   241e0:	shr    rdx,0x3
   241e4:	lea    rdi,[rdx+rdx*4]
   241e8:	add    rdi,rdi
   241eb:	sub    rax,rdi
   241ee:	add    eax,0x30
   241f1:	mov    BYTE PTR [rcx],al
   241f3:	mov    rax,rsi
   241f6:	mov    rsi,rdx
   241f9:	cmp    rax,0x9
   241fd:	ja     241d0 <__sprintf_chk@plt+0x19820>
   241ff:	test   r12b,r12b
   24202:	je     2420c <__sprintf_chk@plt+0x1985c>
   24204:	mov    BYTE PTR [rcx-0x1],0x2d
   24208:	lea    rcx,[r9-0x2]
   2420c:	lea    rax,[rip+0x5b88e]        # 7faa1 <obstack_alloc_failed_handler@@Base+0xc69>
   24213:	test   bpl,bpl
   24216:	lea    rdx,[rax-0xd]
   2421a:	cmove  rax,rdx
   2421e:	xor    esi,esi
   24220:	mov    rdx,rcx
   24223:	mov    r8,rax
   24226:	sub    r8,rcx
   24229:	cmp    rax,rcx
   2422c:	cmova  r8,rsi
   24230:	sub    rdx,rax
   24233:	add    r8,rcx
   24236:	cmp    rax,rcx
   24239:	cmova  rdx,rsi
   2423d:	mov    rdi,r8
   24240:	mov    esi,0x20
   24245:	call   a1b0 <memset@plt>
   2424a:	mov    r8,rax
   2424d:	test   bpl,bpl
   24250:	je     24173 <__sprintf_chk@plt+0x197c3>
   24256:	test   ebx,ebx
   24258:	jne    24388 <__sprintf_chk@plt+0x199d8>
   2425e:	mov    BYTE PTR [rip+0x5b835],0x0        # 7fa9a <obstack_alloc_failed_handler@@Base+0xc62>
   24265:	jmp    24173 <__sprintf_chk@plt+0x197c3>
   2426a:	nop    WORD PTR [rax+rax*1+0x0]
   24270:	lea    rbp,[rip+0x5b809]        # 7fa80 <obstack_alloc_failed_handler@@Base+0xc48>
   24277:	mov    esi,0x25
   2427c:	lea    rdx,[rip+0x48c26]        # 6cea9 <_obstack_memory_used@@Base+0x20229>
   24283:	mov    rdi,rbp
   24286:	call   a600 <strftime@plt>
   2428b:	mov    rdi,rbp
   2428e:	call   a060 <strlen@plt>
   24293:	lea    rsi,[rbp+rax*1+0x0]
   24298:	test   ebx,ebx
   2429a:	je     24378 <__sprintf_chk@plt+0x199c8>
   242a0:	movsxd rax,ebx
   242a3:	mov    ecx,ebx
   242a5:	mov    BYTE PTR [rsi],0x2e
   242a8:	imul   rdx,rax,0x66666667
   242af:	sar    ecx,0x1f
   242b2:	sar    rdx,0x22
   242b6:	sub    edx,ecx
   242b8:	lea    ecx,[rdx+rdx*4]
   242bb:	mov    edx,ebx
   242bd:	add    ecx,ecx
   242bf:	sub    edx,ecx
   242c1:	jne    2447b <__sprintf_chk@plt+0x19acb>
   242c7:	mov    edi,0x9
   242cc:	nop    DWORD PTR [rax+0x0]
   242d0:	imul   rax,rax,0x66666667
   242d7:	sar    ebx,0x1f
   242da:	mov    r8d,edi
   242dd:	sub    edi,0x1
   242e0:	sar    rax,0x22
   242e4:	sub    eax,ebx
   242e6:	mov    ebx,eax
   242e8:	cdqe   
   242ea:	imul   rdx,rax,0x66666667
   242f1:	mov    ecx,ebx
   242f3:	sar    ecx,0x1f
   242f6:	sar    rdx,0x22
   242fa:	sub    edx,ecx
   242fc:	lea    ecx,[rdx+rdx*4]
   242ff:	mov    edx,ebx
   24301:	add    ecx,ecx
   24303:	sub    edx,ecx
   24305:	je     242d0 <__sprintf_chk@plt+0x19920>
   24307:	sub    r8d,0x2
   2430b:	movsxd rdi,edi
   2430e:	add    edx,0x30
   24311:	movsxd rcx,r8d
   24314:	mov    BYTE PTR [rsi+rdi*1+0x1],0x0
   24319:	mov    BYTE PTR [rsi+rcx*1+0x1],dl
   2431d:	test   r8d,r8d
   24320:	je     24365 <__sprintf_chk@plt+0x199b5>
   24322:	nop    WORD PTR [rax+rax*1+0x0]
   24328:	imul   rax,rax,0x66666667
   2432f:	sar    ebx,0x1f
   24332:	sar    rax,0x22
   24336:	sub    eax,ebx
   24338:	mov    ebx,eax
   2433a:	cdqe   
   2433c:	imul   rdx,rax,0x66666667
   24343:	mov    edi,ebx
   24345:	sar    edi,0x1f
   24348:	sar    rdx,0x22
   2434c:	sub    edx,edi
   2434e:	lea    edi,[rdx+rdx*4]
   24351:	mov    edx,ebx
   24353:	add    edi,edi
   24355:	sub    edx,edi
   24357:	add    edx,0x30
   2435a:	mov    BYTE PTR [rsi+rcx*1],dl
   2435d:	sub    rcx,0x1
   24361:	test   ecx,ecx
   24363:	jne    24328 <__sprintf_chk@plt+0x19978>
   24365:	lea    r8,[rip+0x5b714]        # 7fa80 <obstack_alloc_failed_handler@@Base+0xc48>
   2436c:	jmp    24173 <__sprintf_chk@plt+0x197c3>
   24371:	nop    DWORD PTR [rax+0x0]
   24378:	mov    BYTE PTR [rsi],0x0
   2437b:	mov    r8,rbp
   2437e:	jmp    24173 <__sprintf_chk@plt+0x197c3>
   24383:	nop    DWORD PTR [rax+rax*1+0x0]
   24388:	movsxd rax,ebx
   2438b:	mov    ecx,ebx
   2438d:	mov    BYTE PTR [rip+0x5b706],0x2e        # 7fa9a <obstack_alloc_failed_handler@@Base+0xc62>
   24394:	imul   rdx,rax,0x66666667
   2439b:	sar    ecx,0x1f
   2439e:	sar    rdx,0x22
   243a2:	sub    edx,ecx
   243a4:	lea    ecx,[rdx+rdx*4]
   243a7:	mov    edx,ebx
   243a9:	add    ecx,ecx
   243ab:	sub    edx,ecx
   243ad:	jne    2448f <__sprintf_chk@plt+0x19adf>
   243b3:	mov    esi,0x9
   243b8:	nop    DWORD PTR [rax+rax*1+0x0]
   243c0:	imul   rax,rax,0x66666667
   243c7:	sar    ebx,0x1f
   243ca:	mov    edi,esi
   243cc:	sub    esi,0x1
   243cf:	sar    rax,0x22
   243d3:	sub    eax,ebx
   243d5:	mov    ebx,eax
   243d7:	cdqe   
   243d9:	imul   rdx,rax,0x66666667
   243e0:	mov    ecx,ebx
   243e2:	sar    ecx,0x1f
   243e5:	sar    rdx,0x22
   243e9:	sub    edx,ecx
   243eb:	lea    ecx,[rdx+rdx*4]
   243ee:	mov    edx,ebx
   243f0:	add    ecx,ecx
   243f2:	sub    edx,ecx
   243f4:	je     243c0 <__sprintf_chk@plt+0x19a10>
   243f6:	lea    ecx,[rdi-0x2]
   243f9:	lea    r10,[rip+0x5b69b]        # 7fa9b <obstack_alloc_failed_handler@@Base+0xc63>
   24400:	movsxd rsi,esi
   24403:	add    edx,0x30
   24406:	movsxd r9,ecx
   24409:	mov    BYTE PTR [rsi+r10*1],0x0
   2440e:	mov    BYTE PTR [r10+r9*1],dl
   24412:	test   ecx,ecx
   24414:	je     24173 <__sprintf_chk@plt+0x197c3>
   2441a:	lea    rdi,[rip+0x5b65e]        # 7fa7f <obstack_alloc_failed_handler@@Base+0xc47>
   24421:	lea    rsi,[rip+0x5b658]        # 7fa80 <obstack_alloc_failed_handler@@Base+0xc48>
   24428:	add    rdi,r9
   2442b:	lea    edx,[rcx-0x1]
   2442e:	add    rsi,r9
   24431:	sub    rdi,rdx
   24434:	nop    DWORD PTR [rax+0x0]
   24438:	imul   rax,rax,0x66666667
   2443f:	sar    ebx,0x1f
   24442:	sub    rsi,0x1
   24446:	sar    rax,0x22
   2444a:	sub    eax,ebx
   2444c:	mov    ebx,eax
   2444e:	cdqe   
   24450:	imul   rdx,rax,0x66666667
   24457:	mov    ecx,ebx
   24459:	sar    ecx,0x1f
   2445c:	sar    rdx,0x22
   24460:	sub    edx,ecx
   24462:	lea    ecx,[rdx+rdx*4]
   24465:	mov    edx,ebx
   24467:	add    ecx,ecx
   24469:	sub    edx,ecx
   2446b:	add    edx,0x30
   2446e:	mov    BYTE PTR [rsi+0x1b],dl
   24471:	cmp    rdi,rsi
   24474:	jne    24438 <__sprintf_chk@plt+0x19a88>
   24476:	jmp    24173 <__sprintf_chk@plt+0x197c3>
   2447b:	add    edx,0x30
   2447e:	mov    BYTE PTR [rsi+0xa],0x0
   24482:	mov    ecx,0x8
   24487:	mov    BYTE PTR [rsi+0x9],dl
   2448a:	jmp    24328 <__sprintf_chk@plt+0x19978>
   2448f:	add    edx,0x30
   24492:	mov    BYTE PTR [rip+0x5b60b],0x0        # 7faa4 <obstack_alloc_failed_handler@@Base+0xc6c>
   24499:	mov    ecx,0x8
   2449e:	mov    r9d,0x8
   244a4:	mov    BYTE PTR [rip+0x5b5f9],dl        # 7faa3 <obstack_alloc_failed_handler@@Base+0xc6b>
   244aa:	jmp    2441a <__sprintf_chk@plt+0x19a6a>
   244af:	call   a0a0 <__stack_chk_fail@plt>
   244b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   244bf:	nop
   244c0:	endbr64 
   244c4:	push   r15
   244c6:	push   r14
   244c8:	mov    r14,rdi
   244cb:	push   r13
   244cd:	push   r12
   244cf:	push   rbp
   244d0:	push   rbx
   244d1:	mov    rbx,rsi
   244d4:	sub    rsp,0xe8
   244db:	mov    rax,QWORD PTR fs:0x28
   244e4:	mov    QWORD PTR [rsp+0xd8],rax
   244ec:	xor    eax,eax
   244ee:	cmp    BYTE PTR [rip+0x5b41c],0x0        # 7f911 <obstack_alloc_failed_handler@@Base+0xad9>
   244f5:	je     245e0 <__sprintf_chk@plt+0x19c30>
   244fb:	mov    r13,QWORD PTR [rdi+0x8]
   244ff:	test   r13,r13
   24502:	je     24b30 <__sprintf_chk@plt+0x1a180>
   24508:	cmp    BYTE PTR [rip+0x5b229],0x0        # 7f738 <obstack_alloc_failed_handler@@Base+0x900>
   2450f:	je     245aa <__sprintf_chk@plt+0x19bfa>
   24515:	test   rdx,rdx
   24518:	js     24b40 <__sprintf_chk@plt+0x1a190>
   2451e:	mov    BYTE PTR [rsp+0xb4],0x0
   24526:	sub    rdx,QWORD PTR [rip+0x5b403]        # 7f930 <obstack_alloc_failed_handler@@Base+0xaf8>
   2452d:	lea    r12,[rsp+0xb4]
   24535:	movabs rdi,0xcccccccccccccccd
   2453f:	mov    rcx,rdx
   24542:	sub    rcx,QWORD PTR [rip+0x5b3ef]        # 7f938 <obstack_alloc_failed_handler@@Base+0xb00>
   24549:	nop    DWORD PTR [rax+0x0]
   24550:	mov    rax,rcx
   24553:	sub    r12,0x1
   24557:	mul    rdi
   2455a:	mov    rax,rcx
   2455d:	shr    rdx,0x3
   24561:	lea    rsi,[rdx+rdx*4]
   24565:	add    rsi,rsi
   24568:	sub    rax,rsi
   2456b:	add    eax,0x30
   2456e:	mov    BYTE PTR [r12],al
   24572:	mov    rax,rcx
   24575:	mov    rcx,rdx
   24578:	cmp    rax,0x9
   2457c:	ja     24550 <__sprintf_chk@plt+0x19ba0>
   2457e:	mov    edx,0x5
   24583:	lea    rsi,[rip+0x3fc2c]        # 641b6 <_obstack_memory_used@@Base+0x17536>
   2458a:	xor    edi,edi
   2458c:	call   a040 <dcgettext@plt>
   24591:	mov    rdi,QWORD PTR [rip+0x5ab00]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24598:	mov    rcx,r12
   2459b:	mov    esi,0x1
   245a0:	mov    rdx,rax
   245a3:	xor    eax,eax
   245a5:	call   a840 <__fprintf_chk@plt>
   245aa:	mov    ebp,DWORD PTR [rip+0x5ab10]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   245b0:	cmp    ebp,0x1
   245b3:	jle    245f8 <__sprintf_chk@plt+0x19c48>
   245b5:	cmp    BYTE PTR [rbx+0x9c],0x56
   245bc:	mov    BYTE PTR [rsp+0x34],0x3f
   245c1:	ja     24820 <__sprintf_chk@plt+0x19e70>
   245c7:	movzx  eax,BYTE PTR [rbx+0x9c]
   245ce:	lea    rdx,[rip+0x41a2b]        # 66000 <_obstack_memory_used@@Base+0x19380>
   245d5:	movsxd rax,DWORD PTR [rdx+rax*4]
   245d9:	add    rax,rdx
   245dc:	notrack jmp rax
   245df:	nop
   245e0:	mov    r13,QWORD PTR [rdi]
   245e3:	test   r13,r13
   245e6:	jne    24508 <__sprintf_chk@plt+0x19b58>
   245ec:	mov    r13,QWORD PTR [rdi+0x8]
   245f0:	jmp    24508 <__sprintf_chk@plt+0x19b58>
   245f5:	nop    DWORD PTR [rax]
   245f8:	xor    edi,edi
   245fa:	mov    rbp,QWORD PTR [rip+0x5aa97]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24601:	lea    rdx,[rip+0x5a978]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   24608:	mov    rsi,r13
   2460b:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   24610:	mov    rdi,rax
   24613:	mov    rsi,rbp
   24616:	call   a2e0 <fputs_unlocked@plt>
   2461b:	cmp    BYTE PTR [rip+0x5b2ef],0x0        # 7f911 <obstack_alloc_failed_handler@@Base+0xad9>
   24622:	jne    24b60 <__sprintf_chk@plt+0x1a1b0>
   24628:	mov    rdi,QWORD PTR [rip+0x5aa69]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2462f:	mov    rax,QWORD PTR [rdi+0x28]
   24633:	cmp    rax,QWORD PTR [rdi+0x30]
   24637:	jae    24f9b <__sprintf_chk@plt+0x1a5eb>
   2463d:	lea    rdx,[rax+0x1]
   24641:	mov    QWORD PTR [rdi+0x28],rdx
   24645:	mov    BYTE PTR [rax],0xa
   24648:	mov    rdi,QWORD PTR [rip+0x5aa49]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2464f:	call   a870 <fflush_unlocked@plt>
   24654:	cmp    DWORD PTR [rip+0x5aa65],0x2        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   2465b:	jle    24740 <__sprintf_chk@plt+0x19d90>
   24661:	mov    edi,DWORD PTR [rip+0x5a875]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   24667:	test   edi,edi
   24669:	jle    2468e <__sprintf_chk@plt+0x19cde>
   2466b:	mov    rcx,QWORD PTR [r14+0x30]
   2466f:	test   rcx,rcx
   24672:	je     2468e <__sprintf_chk@plt+0x19cde>
   24674:	mov    rdi,QWORD PTR [rip+0x5aa1d]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2467b:	lea    rdx,[rip+0x407de]        # 64e60 <_obstack_memory_used@@Base+0x181e0>
   24682:	mov    esi,0x1
   24687:	xor    eax,eax
   24689:	call   a840 <__fprintf_chk@plt>
   2468e:	mov    esi,DWORD PTR [rip+0x5a84c]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   24694:	test   esi,esi
   24696:	jle    246b0 <__sprintf_chk@plt+0x19d00>
   24698:	cmp    QWORD PTR [r14+0x40],0x0
   2469d:	jne    24770 <__sprintf_chk@plt+0x19dc0>
   246a3:	cmp    QWORD PTR [r14+0x50],0x0
   246a8:	jne    24770 <__sprintf_chk@plt+0x19dc0>
   246ae:	xchg   ax,ax
   246b0:	mov    ecx,DWORD PTR [rip+0x5a822]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   246b6:	test   ecx,ecx
   246b8:	jle    24740 <__sprintf_chk@plt+0x19d90>
   246be:	cmp    QWORD PTR [r14+0x158],0x0
   246c6:	je     24740 <__sprintf_chk@plt+0x19d90>
   246c8:	xor    ebx,ebx
   246ca:	lea    r13,[rip+0x407a7]        # 64e78 <_obstack_memory_used@@Base+0x181f8>
   246d1:	jmp    246e5 <__sprintf_chk@plt+0x19d35>
   246d3:	nop    DWORD PTR [rax+rax*1+0x0]
   246d8:	add    rbx,0x1
   246dc:	cmp    QWORD PTR [r14+0x158],rbx
   246e3:	jbe    24740 <__sprintf_chk@plt+0x19d90>
   246e5:	mov    rdx,QWORD PTR [r14+0x160]
   246ec:	lea    rax,[rbx+rbx*2]
   246f0:	xor    esi,esi
   246f2:	lea    r12,[rax*8+0x0]
   246fa:	mov    rbp,QWORD PTR [rdx+rax*8]
   246fe:	add    rbp,0xd
   24702:	mov    rdi,rbp
   24705:	call   3b720 <__sprintf_chk@plt+0x30d70>
   2470a:	test   al,al
   2470c:	jne    246d8 <__sprintf_chk@plt+0x19d28>
   2470e:	mov    r8,rbp
   24711:	mov    rdx,r13
   24714:	mov    esi,0x1
   24719:	add    rbx,0x1
   2471d:	mov    rax,QWORD PTR [r14+0x160]
   24724:	mov    rdi,QWORD PTR [rip+0x5a96d]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2472b:	mov    rcx,QWORD PTR [rax+r12*1+0x10]
   24730:	xor    eax,eax
   24732:	call   a840 <__fprintf_chk@plt>
   24737:	cmp    QWORD PTR [r14+0x158],rbx
   2473e:	ja     246e5 <__sprintf_chk@plt+0x19d35>
   24740:	mov    rax,QWORD PTR [rsp+0xd8]
   24748:	sub    rax,QWORD PTR fs:0x28
   24751:	jne    24fc8 <__sprintf_chk@plt+0x1a618>
   24757:	add    rsp,0xe8
   2475e:	pop    rbx
   2475f:	pop    rbp
   24760:	pop    r12
   24762:	pop    r13
   24764:	pop    r14
   24766:	pop    r15
   24768:	ret    
   24769:	nop    DWORD PTR [rax+0x0]
   24770:	mov    rcx,QWORD PTR [rip+0x5a921]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24777:	mov    edx,0x5
   2477c:	mov    esi,0x1
   24781:	lea    rdi,[rip+0x406e1]        # 64e69 <_obstack_memory_used@@Base+0x181e9>
   24788:	call   a830 <fwrite@plt>
   2478d:	mov    rdx,QWORD PTR [r14+0x40]
   24791:	mov    rsi,QWORD PTR [r14+0x38]
   24795:	lea    rdi,[rip+0x473b4]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   2479c:	call   5d430 <_obstack_memory_used@@Base+0x107b0>
   247a1:	cmp    QWORD PTR [r14+0x40],0x0
   247a6:	mov    rdx,QWORD PTR [r14+0x50]
   247aa:	je     247b5 <__sprintf_chk@plt+0x19e05>
   247ac:	test   rdx,rdx
   247af:	jne    24f81 <__sprintf_chk@plt+0x1a5d1>
   247b5:	mov    rsi,QWORD PTR [r14+0x48]
   247b9:	lea    rdi,[rip+0x406af]        # 64e6f <_obstack_memory_used@@Base+0x181ef>
   247c0:	call   5d430 <_obstack_memory_used@@Base+0x107b0>
   247c5:	mov    rsi,QWORD PTR [rip+0x5a8cc]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   247cc:	mov    edi,0xa
   247d1:	call   a260 <fputc@plt>
   247d6:	jmp    246b0 <__sprintf_chk@plt+0x19d00>
   247db:	mov    rax,QWORD PTR [rip+0x5ad26]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   247e2:	mov    BYTE PTR [rsp+0x34],0x4c
   247e7:	test   rax,rax
   247ea:	je     247ee <__sprintf_chk@plt+0x19e3e>
   247ec:	call   rax
   247ee:	mov    edx,0x5
   247f3:	lea    rsi,[rip+0x3f97a]        # 64174 <_obstack_memory_used@@Base+0x174f4>
   247fa:	xor    edi,edi
   247fc:	call   a040 <dcgettext@plt>
   24801:	xor    esi,esi
   24803:	xor    edi,edi
   24805:	mov    rdx,rax
   24808:	xor    eax,eax
   2480a:	call   a640 <error@plt>
   2480f:	mov    ebp,DWORD PTR [rip+0x5a8ab]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   24815:	mov    DWORD PTR [rip+0x5a8a5],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2481f:	nop
   24820:	mov    edi,DWORD PTR [r14+0x70]
   24824:	lea    rsi,[rsp+0x35]
   24829:	call   3b9c0 <__sprintf_chk@plt+0x31010>
   2482e:	cmp    ebp,0x1
   24831:	jg     24bb6 <__sprintf_chk@plt+0x1a206>
   24837:	mov    BYTE PTR [rsp+0x3e],0x0
   2483c:	movzx  edx,BYTE PTR [rip+0x5b0cd]        # 7f910 <obstack_alloc_failed_handler@@Base+0xad8>
   24843:	mov    rdi,QWORD PTR [r14+0xf8]
   2484a:	mov    rsi,QWORD PTR [r14+0x100]
   24851:	call   240f0 <__sprintf_chk@plt+0x19740>
   24856:	mov    rdi,rax
   24859:	mov    QWORD PTR [rsp+0x8],rax
   2485e:	call   a060 <strlen@plt>
   24863:	mov    edi,DWORD PTR [rip+0x57957]        # 7c1c0 <_obstack_memory_used@@Base+0x2f540>
   24869:	mov    DWORD PTR [rsp+0x18],edi
   2486d:	cmp    edi,eax
   2486f:	jge    2487b <__sprintf_chk@plt+0x19ecb>
   24871:	mov    DWORD PTR [rip+0x57949],eax        # 7c1c0 <_obstack_memory_used@@Base+0x2f540>
   24877:	mov    DWORD PTR [rsp+0x18],eax
   2487b:	mov    rbp,QWORD PTR [r14+0x20]
   2487f:	test   rbp,rbp
   24882:	je     248a0 <__sprintf_chk@plt+0x19ef0>
   24884:	cmp    BYTE PTR [rbp+0x0],0x0
   24888:	je     248a0 <__sprintf_chk@plt+0x19ef0>
   2488a:	cmp    DWORD PTR [rip+0x5aa17],0x1        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   24891:	je     248a0 <__sprintf_chk@plt+0x19ef0>
   24893:	cmp    BYTE PTR [rip+0x5a676],0x0        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   2489a:	je     248ed <__sprintf_chk@plt+0x19f3d>
   2489c:	nop    DWORD PTR [rax+0x0]
   248a0:	mov    BYTE PTR [rsp+0x94],0x0
   248a8:	mov    ecx,DWORD PTR [r14+0x74]
   248ac:	lea    rbp,[rsp+0x94]
   248b4:	movabs rdi,0xcccccccccccccccd
   248be:	xchg   ax,ax
   248c0:	mov    rax,rcx
   248c3:	sub    rbp,0x1
   248c7:	mul    rdi
   248ca:	mov    rax,rcx
   248cd:	shr    rdx,0x3
   248d1:	lea    rsi,[rdx+rdx*4]
   248d5:	add    rsi,rsi
   248d8:	sub    rax,rsi
   248db:	add    eax,0x30
   248de:	mov    BYTE PTR [rbp+0x0],al
   248e1:	mov    rax,rcx
   248e4:	mov    rcx,rdx
   248e7:	cmp    rax,0x9
   248eb:	ja     248c0 <__sprintf_chk@plt+0x19f10>
   248ed:	mov    r12,QWORD PTR [r14+0x28]
   248f1:	test   r12,r12
   248f4:	je     24910 <__sprintf_chk@plt+0x19f60>
   248f6:	cmp    BYTE PTR [r12],0x0
   248fb:	je     24910 <__sprintf_chk@plt+0x19f60>
   248fd:	cmp    DWORD PTR [rip+0x5a9a4],0x1        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   24904:	je     24910 <__sprintf_chk@plt+0x19f60>
   24906:	cmp    BYTE PTR [rip+0x5a603],0x0        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   2490d:	je     2495e <__sprintf_chk@plt+0x19fae>
   2490f:	nop
   24910:	mov    BYTE PTR [rsp+0x74],0x0
   24915:	mov    ecx,DWORD PTR [r14+0x78]
   24919:	lea    r12,[rsp+0x74]
   2491e:	movabs rsi,0xcccccccccccccccd
   24928:	nop    DWORD PTR [rax+rax*1+0x0]
   24930:	mov    rax,rcx
   24933:	sub    r12,0x1
   24937:	mul    rsi
   2493a:	mov    rax,rcx
   2493d:	shr    rdx,0x3
   24941:	lea    rdi,[rdx+rdx*4]
   24945:	add    rdi,rdi
   24948:	sub    rax,rdi
   2494b:	add    eax,0x30
   2494e:	mov    BYTE PTR [r12],al
   24952:	mov    rax,rcx
   24955:	mov    rcx,rdx
   24958:	cmp    rax,0x9
   2495c:	ja     24930 <__sprintf_chk@plt+0x19f80>
   2495e:	movsx  eax,BYTE PTR [rbx+0x9c]
   24965:	sub    eax,0x33
   24968:	cmp    eax,0x1
   2496b:	jbe    24e28 <__sprintf_chk@plt+0x1a478>
   24971:	lea    rax,[rsp+0x54]
   24976:	mov    BYTE PTR [rsp+0x54],0x0
   2497b:	mov    rcx,QWORD PTR [r14+0x88]
   24982:	movabs rdi,0xcccccccccccccccd
   2498c:	mov    QWORD PTR [rsp+0x28],rax
   24991:	mov    rsi,rax
   24994:	nop    DWORD PTR [rax+0x0]
   24998:	mov    rax,rcx
   2499b:	sub    rsi,0x1
   2499f:	mul    rdi
   249a2:	mov    rax,rcx
   249a5:	shr    rdx,0x3
   249a9:	lea    r11,[rdx+rdx*4]
   249ad:	add    r11,r11
   249b0:	sub    rax,r11
   249b3:	add    eax,0x30
   249b6:	mov    BYTE PTR [rsi],al
   249b8:	mov    rax,rcx
   249bb:	mov    rcx,rdx
   249be:	cmp    rax,0x9
   249c2:	ja     24998 <__sprintf_chk@plt+0x19fe8>
   249c4:	lea    r15,[rsp+0xa0]
   249cc:	mov    edx,0x2a
   249d1:	mov    rdi,r15
   249d4:	call   a580 <__strcpy_chk@plt>
   249d9:	mov    rdi,r15
   249dc:	call   a060 <strlen@plt>
   249e1:	mov    rdi,rbp
   249e4:	mov    QWORD PTR [rsp+0x20],rax
   249e9:	mov    DWORD PTR [rsp+0x1c],eax
   249ed:	call   a060 <strlen@plt>
   249f2:	mov    rdi,r12
   249f5:	mov    QWORD PTR [rsp+0x10],rax
   249fa:	call   a060 <strlen@plt>
   249ff:	mov    rsi,QWORD PTR [rsp+0x10]
   24a04:	mov    rdx,QWORD PTR [rsp+0x20]
   24a09:	mov    r8d,DWORD PTR [rsp+0x1c]
   24a0e:	lea    eax,[rsi+rax*1+0x2]
   24a12:	mov    esi,DWORD PTR [rip+0x577ac]        # 7c1c4 <_obstack_memory_used@@Base+0x2f544>
   24a18:	add    eax,edx
   24a1a:	cmp    esi,eax
   24a1c:	jl     24e18 <__sprintf_chk@plt+0x1a468>
   24a22:	sub    esi,eax
   24a24:	lea    r8d,[rsi+rdx*1]
   24a28:	lea    rcx,[rsp+0x34]
   24a2d:	push   QWORD PTR [rsp+0x8]
   24a31:	mov    eax,DWORD PTR [rsp+0x20]
   24a35:	mov    r9,r12
   24a38:	mov    rdi,QWORD PTR [rip+0x5a659]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24a3f:	lea    rdx,[rip+0x40391]        # 64dd7 <_obstack_memory_used@@Base+0x18157>
   24a46:	mov    esi,0x1
   24a4b:	lea    r12,[rip+0x5a52e]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   24a52:	push   rax
   24a53:	xor    eax,eax
   24a55:	push   r15
   24a57:	push   r8
   24a59:	mov    r8,rbp
   24a5c:	call   a840 <__fprintf_chk@plt>
   24a61:	add    rsp,0x20
   24a65:	xor    edi,edi
   24a67:	mov    rdx,r12
   24a6a:	mov    rsi,r13
   24a6d:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   24a72:	mov    rdi,QWORD PTR [rip+0x5a61f]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24a79:	mov    esi,0x1
   24a7e:	lea    rdx,[rip+0x472d1]        # 6bd56 <_obstack_memory_used@@Base+0x1f0d6>
   24a85:	mov    rcx,rax
   24a88:	xor    eax,eax
   24a8a:	call   a840 <__fprintf_chk@plt>
   24a8f:	cmp    BYTE PTR [rip+0x5ae7b],0x0        # 7f911 <obstack_alloc_failed_handler@@Base+0xad9>
   24a96:	je     24abf <__sprintf_chk@plt+0x1a10f>
   24a98:	cmp    BYTE PTR [r14+0x10],0x0
   24a9d:	je     24abf <__sprintf_chk@plt+0x1a10f>
   24a9f:	mov    rdi,QWORD PTR [rip+0x5a5f2]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24aa6:	mov    rax,QWORD PTR [rdi+0x28]
   24aaa:	cmp    rax,QWORD PTR [rdi+0x30]
   24aae:	jae    24faa <__sprintf_chk@plt+0x1a5fa>
   24ab4:	lea    rdx,[rax+0x1]
   24ab8:	mov    QWORD PTR [rdi+0x28],rdx
   24abc:	mov    BYTE PTR [rax],0x2f
   24abf:	movzx  eax,BYTE PTR [rbx+0x9c]
   24ac6:	cmp    al,0x56
   24ac8:	ja     24ae0 <__sprintf_chk@plt+0x1a130>
   24aca:	lea    rcx,[rip+0x4168b]        # 6615c <_obstack_memory_used@@Base+0x194dc>
   24ad1:	movzx  edx,al
   24ad4:	movsxd rdx,DWORD PTR [rcx+rdx*4]
   24ad8:	add    rdx,rcx
   24adb:	notrack jmp rdx
   24ade:	xchg   ax,ax
   24ae0:	lea    rsi,[rsp+0x32]
   24ae5:	lea    rdx,[rip+0x57554]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   24aec:	xor    edi,edi
   24aee:	mov    BYTE PTR [rsp+0x32],al
   24af2:	mov    BYTE PTR [rsp+0x33],0x0
   24af7:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   24afc:	mov    edx,0x5
   24b01:	lea    rsi,[rip+0x402f6]        # 64dfe <_obstack_memory_used@@Base+0x1817e>
   24b08:	mov    r12,rax
   24b0b:	xor    edi,edi
   24b0d:	call   a040 <dcgettext@plt>
   24b12:	mov    rdi,QWORD PTR [rip+0x5a57f]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24b19:	mov    rcx,r12
   24b1c:	mov    esi,0x1
   24b21:	mov    rdx,rax
   24b24:	xor    eax,eax
   24b26:	call   a840 <__fprintf_chk@plt>
   24b2b:	jmp    24648 <__sprintf_chk@plt+0x19c98>
   24b30:	mov    r13,QWORD PTR [rdi]
   24b33:	jmp    24508 <__sprintf_chk@plt+0x19b58>
   24b38:	nop    DWORD PTR [rax+rax*1+0x0]
   24b40:	mov    rdx,QWORD PTR [rip+0x5a9f9]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   24b47:	sub    rdx,QWORD PTR [rip+0x5aa3a]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   24b4e:	sar    rdx,0x9
   24b52:	add    rdx,QWORD PTR [rip+0x5a9df]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   24b59:	jmp    2451e <__sprintf_chk@plt+0x19b6e>
   24b5e:	xchg   ax,ax
   24b60:	cmp    BYTE PTR [r14+0x10],0x0
   24b65:	je     24628 <__sprintf_chk@plt+0x19c78>
   24b6b:	mov    rdi,QWORD PTR [rip+0x5a526]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24b72:	mov    rax,QWORD PTR [rdi+0x28]
   24b76:	cmp    rax,QWORD PTR [rdi+0x30]
   24b7a:	jae    24fb9 <__sprintf_chk@plt+0x1a609>
   24b80:	lea    rdx,[rax+0x1]
   24b84:	mov    QWORD PTR [rdi+0x28],rdx
   24b88:	mov    BYTE PTR [rax],0x2f
   24b8b:	jmp    24628 <__sprintf_chk@plt+0x19c78>
   24b90:	cmp    BYTE PTR [r14+0x10],0x1
   24b95:	sbb    eax,eax
   24b97:	and    eax,0xffffffc9
   24b9a:	add    eax,0x64
   24b9d:	mov    BYTE PTR [rsp+0x34],al
   24ba1:	nop    DWORD PTR [rax+0x0]
   24ba8:	mov    edi,DWORD PTR [r14+0x70]
   24bac:	lea    rsi,[rsp+0x35]
   24bb1:	call   3b9c0 <__sprintf_chk@plt+0x31010>
   24bb6:	mov    ebp,DWORD PTR [rip+0x5a31c]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   24bbc:	test   ebp,ebp
   24bbe:	jle    24f50 <__sprintf_chk@plt+0x1a5a0>
   24bc4:	mov    eax,0x20
   24bc9:	cmp    QWORD PTR [r14+0x158],0x0
   24bd1:	mov    WORD PTR [rsp+0x3e],ax
   24bd6:	je     24f40 <__sprintf_chk@plt+0x1a590>
   24bdc:	xor    ebp,ebp
   24bde:	jmp    24bf1 <__sprintf_chk@plt+0x1a241>
   24be0:	add    rbp,0x1
   24be4:	cmp    QWORD PTR [r14+0x158],rbp
   24beb:	jbe    24f40 <__sprintf_chk@plt+0x1a590>
   24bf1:	mov    r10,QWORD PTR [r14+0x160]
   24bf8:	lea    rax,[rbp+rbp*2+0x0]
   24bfd:	xor    esi,esi
   24bff:	lea    rax,[r10+rax*8]
   24c03:	mov    rdi,QWORD PTR [rax]
   24c06:	add    rdi,0xd
   24c0a:	call   3b720 <__sprintf_chk@plt+0x30d70>
   24c0f:	test   al,al
   24c11:	jne    24be0 <__sprintf_chk@plt+0x1a230>
   24c13:	mov    BYTE PTR [rsp+0x3e],0x2a
   24c18:	mov    eax,DWORD PTR [rip+0x5a2be]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   24c1e:	xchg   ax,ax
   24c20:	test   eax,eax
   24c22:	jle    24c30 <__sprintf_chk@plt+0x1a280>
   24c24:	cmp    QWORD PTR [r14+0x30],0x0
   24c29:	je     24c30 <__sprintf_chk@plt+0x1a280>
   24c2b:	mov    BYTE PTR [rsp+0x3e],0x2e
   24c30:	mov    eax,DWORD PTR [rip+0x5a2aa]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   24c36:	test   eax,eax
   24c38:	jle    2483c <__sprintf_chk@plt+0x19e8c>
   24c3e:	cmp    QWORD PTR [r14+0x40],0x0
   24c43:	jne    24c50 <__sprintf_chk@plt+0x1a2a0>
   24c45:	cmp    QWORD PTR [r14+0x50],0x0
   24c4a:	je     2483c <__sprintf_chk@plt+0x19e8c>
   24c50:	mov    BYTE PTR [rsp+0x3e],0x2b
   24c55:	jmp    2483c <__sprintf_chk@plt+0x19e8c>
   24c5a:	mov    BYTE PTR [rsp+0x34],0x64
   24c5f:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24c64:	mov    edx,0x5
   24c69:	lea    rsi,[rip+0x401c3]        # 64e33 <_obstack_memory_used@@Base+0x181b3>
   24c70:	xor    edi,edi
   24c72:	call   a040 <dcgettext@plt>
   24c77:	mov    rdi,QWORD PTR [rip+0x5a41a]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24c7e:	mov    esi,0x1
   24c83:	mov    rdx,rax
   24c86:	xor    eax,eax
   24c88:	call   a840 <__fprintf_chk@plt>
   24c8d:	jmp    24648 <__sprintf_chk@plt+0x19c98>
   24c92:	sub    rsp,0x8
   24c96:	xor    r9d,r9d
   24c99:	mov    r8,0xffffffffffffffff
   24ca0:	xor    ecx,ecx
   24ca2:	push   0x0
   24ca4:	mov    esi,0xc
   24ca9:	lea    rdi,[rbx+0x171]
   24cb0:	lea    rdx,[rip+0x3e5a3]        # 6325a <_obstack_memory_used@@Base+0x165da>
   24cb7:	call   23640 <__sprintf_chk@plt+0x18c90>
   24cbc:	mov    BYTE PTR [rsp+0x64],0x0
   24cc1:	pop    r8
   24cc3:	movabs r8,0xcccccccccccccccd
   24ccd:	pop    r9
   24ccf:	mov    rsi,QWORD PTR [rsp+0x28]
   24cd4:	mov    rcx,rax
   24cd7:	nop    WORD PTR [rax+rax*1+0x0]
   24ce0:	mov    rax,rcx
   24ce3:	sub    rsi,0x1
   24ce7:	mul    r8
   24cea:	mov    rax,rcx
   24ced:	shr    rdx,0x3
   24cf1:	lea    rdi,[rdx+rdx*4]
   24cf5:	add    rdi,rdi
   24cf8:	sub    rax,rdi
   24cfb:	add    eax,0x30
   24cfe:	mov    BYTE PTR [rsi],al
   24d00:	mov    rax,rcx
   24d03:	mov    rcx,rdx
   24d06:	cmp    rax,0x9
   24d0a:	ja     24ce0 <__sprintf_chk@plt+0x1a330>
   24d0c:	mov    rdi,r15
   24d0f:	mov    edx,0x2a
   24d14:	call   a580 <__strcpy_chk@plt>
   24d19:	xor    edi,edi
   24d1b:	mov    edx,0x5
   24d20:	lea    rsi,[rip+0x4011f]        # 64e46 <_obstack_memory_used@@Base+0x181c6>
   24d27:	call   a040 <dcgettext@plt>
   24d2c:	mov    rdi,QWORD PTR [rip+0x5a365]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24d33:	mov    rcx,r15
   24d36:	mov    esi,0x1
   24d3b:	mov    rdx,rax
   24d3e:	xor    eax,eax
   24d40:	call   a840 <__fprintf_chk@plt>
   24d45:	jmp    24648 <__sprintf_chk@plt+0x19c98>
   24d4a:	mov    edx,0x5
   24d4f:	lea    rsi,[rip+0x400ce]        # 64e24 <_obstack_memory_used@@Base+0x181a4>
   24d56:	jmp    24c70 <__sprintf_chk@plt+0x1a2c0>
   24d5b:	mov    edx,0x5
   24d60:	lea    rsi,[rip+0x400ae]        # 64e15 <_obstack_memory_used@@Base+0x18195>
   24d67:	jmp    24c70 <__sprintf_chk@plt+0x1a2c0>
   24d6c:	mov    rsi,QWORD PTR [r14+0x18]
   24d70:	mov    rdx,r12
   24d73:	xor    edi,edi
   24d75:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   24d7a:	mov    rdi,QWORD PTR [rip+0x5a317]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24d81:	mov    esi,0x1
   24d86:	lea    rdx,[rip+0x4005c]        # 64de9 <_obstack_memory_used@@Base+0x18169>
   24d8d:	mov    rcx,rax
   24d90:	xor    eax,eax
   24d92:	call   a840 <__fprintf_chk@plt>
   24d97:	jmp    24648 <__sprintf_chk@plt+0x19c98>
   24d9c:	mov    rsi,QWORD PTR [r14+0x18]
   24da0:	mov    rdx,r12
   24da3:	xor    edi,edi
   24da5:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   24daa:	mov    edx,0x5
   24daf:	lea    rsi,[rip+0x4003b]        # 64df1 <_obstack_memory_used@@Base+0x18171>
   24db6:	mov    r12,rax
   24db9:	jmp    24b0b <__sprintf_chk@plt+0x1a15b>
   24dbe:	mov    BYTE PTR [rsp+0x34],0x68
   24dc3:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24dc8:	mov    BYTE PTR [rsp+0x34],0x4d
   24dcd:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24dd2:	mov    BYTE PTR [rip+0x5a190],0x1        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   24dd9:	mov    BYTE PTR [rsp+0x34],0x56
   24dde:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24de3:	mov    BYTE PTR [rsp+0x34],0x62
   24de8:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24ded:	mov    BYTE PTR [rsp+0x34],0x43
   24df2:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24df7:	mov    BYTE PTR [rsp+0x34],0x70
   24dfc:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24e01:	mov    BYTE PTR [rsp+0x34],0x63
   24e06:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24e0b:	mov    BYTE PTR [rsp+0x34],0x6c
   24e10:	jmp    24ba8 <__sprintf_chk@plt+0x1a1f8>
   24e15:	nop    DWORD PTR [rax]
   24e18:	mov    DWORD PTR [rip+0x573a6],eax        # 7c1c4 <_obstack_memory_used@@Base+0x2f544>
   24e1e:	jmp    24a28 <__sprintf_chk@plt+0x1a078>
   24e23:	nop    DWORD PTR [rax+rax*1+0x0]
   24e28:	mov    rcx,QWORD PTR [r14+0x80]
   24e2f:	mov    BYTE PTR [rsp+0x54],0x0
   24e34:	movabs rdi,0xcccccccccccccccd
   24e3e:	mov    rax,rcx
   24e41:	mov    rsi,rcx
   24e44:	shr    rax,0x8
   24e48:	shr    rsi,0x20
   24e4c:	and    eax,0xfff
   24e51:	and    esi,0xfffff000
   24e57:	or     esi,eax
   24e59:	lea    rax,[rsp+0x54]
   24e5e:	mov    QWORD PTR [rsp+0x28],rax
   24e63:	mov    r11,rax
   24e66:	cs nop WORD PTR [rax+rax*1+0x0]
   24e70:	mov    rax,rsi
   24e73:	sub    r11,0x1
   24e77:	mul    rdi
   24e7a:	mov    rax,rsi
   24e7d:	shr    rdx,0x3
   24e81:	lea    r15,[rdx+rdx*4]
   24e85:	add    r15,r15
   24e88:	sub    rax,r15
   24e8b:	add    eax,0x30
   24e8e:	mov    BYTE PTR [r11],al
   24e91:	mov    rax,rsi
   24e94:	mov    rsi,rdx
   24e97:	cmp    rax,0x9
   24e9b:	ja     24e70 <__sprintf_chk@plt+0x1a4c0>
   24e9d:	lea    r15,[rsp+0xa0]
   24ea5:	mov    rsi,r11
   24ea8:	mov    edx,0x2a
   24ead:	mov    QWORD PTR [rsp+0x10],rcx
   24eb2:	mov    rdi,r15
   24eb5:	call   a580 <__strcpy_chk@plt>
   24eba:	lea    rsi,[rip+0x48020]        # 6cee1 <_obstack_memory_used@@Base+0x20261>
   24ec1:	mov    rdi,r15
   24ec4:	mov    edx,0x2a
   24ec9:	call   9d20 <__strcat_chk@plt>
   24ece:	mov    rcx,QWORD PTR [rsp+0x10]
   24ed3:	mov    BYTE PTR [rsp+0x54],0x0
   24ed8:	movabs rdi,0xcccccccccccccccd
   24ee2:	mov    rsi,QWORD PTR [rsp+0x28]
   24ee7:	movzx  eax,cl
   24eea:	shr    rcx,0xc
   24eee:	xor    cl,cl
   24ef0:	or     ecx,eax
   24ef2:	nop    WORD PTR [rax+rax*1+0x0]
   24ef8:	mov    rax,rcx
   24efb:	sub    rsi,0x1
   24eff:	mul    rdi
   24f02:	mov    rax,rcx
   24f05:	shr    rdx,0x3
   24f09:	lea    r11,[rdx+rdx*4]
   24f0d:	add    r11,r11
   24f10:	sub    rax,r11
   24f13:	add    eax,0x30
   24f16:	mov    BYTE PTR [rsi],al
   24f18:	mov    rax,rcx
   24f1b:	mov    rcx,rdx
   24f1e:	cmp    rax,0x9
   24f22:	ja     24ef8 <__sprintf_chk@plt+0x1a548>
   24f24:	mov    edx,0x2a
   24f29:	mov    rdi,r15
   24f2c:	call   9d20 <__strcat_chk@plt>
   24f31:	jmp    249d9 <__sprintf_chk@plt+0x1a029>
   24f36:	cs nop WORD PTR [rax+rax*1+0x0]
   24f40:	mov    eax,DWORD PTR [rip+0x59f96]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   24f46:	jmp    24c20 <__sprintf_chk@plt+0x1a270>
   24f4b:	nop    DWORD PTR [rax+rax*1+0x0]
   24f50:	mov    eax,DWORD PTR [rip+0x59f86]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   24f56:	test   eax,eax
   24f58:	jle    24f70 <__sprintf_chk@plt+0x1a5c0>
   24f5a:	mov    edx,0x20
   24f5f:	mov    WORD PTR [rsp+0x3e],dx
   24f64:	jmp    24c20 <__sprintf_chk@plt+0x1a270>
   24f69:	nop    DWORD PTR [rax+0x0]
   24f70:	mov    r11d,DWORD PTR [rip+0x59f69]        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   24f77:	test   r11d,r11d
   24f7a:	jg     24f5a <__sprintf_chk@plt+0x1a5aa>
   24f7c:	jmp    2483c <__sprintf_chk@plt+0x19e8c>
   24f81:	mov    rsi,QWORD PTR [rip+0x5a110]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   24f88:	mov    edi,0x2c
   24f8d:	call   a260 <fputc@plt>
   24f92:	mov    rdx,QWORD PTR [r14+0x50]
   24f96:	jmp    247b5 <__sprintf_chk@plt+0x19e05>
   24f9b:	mov    esi,0xa
   24fa0:	call   a120 <__overflow@plt>
   24fa5:	jmp    24648 <__sprintf_chk@plt+0x19c98>
   24faa:	mov    esi,0x2f
   24faf:	call   a120 <__overflow@plt>
   24fb4:	jmp    24abf <__sprintf_chk@plt+0x1a10f>
   24fb9:	mov    esi,0x2f
   24fbe:	call   a120 <__overflow@plt>
   24fc3:	jmp    24628 <__sprintf_chk@plt+0x19c78>
   24fc8:	call   a0a0 <__stack_chk_fail@plt>
   24fcd:	nop    DWORD PTR [rax]
   24fd0:	endbr64 
   24fd4:	push   r12
   24fd6:	push   rbp
   24fd7:	mov    rbp,rsi
   24fda:	push   rbx
   24fdb:	mov    rbx,rdi
   24fde:	mov    rdi,QWORD PTR [rdi]
   24fe1:	call   9ce0 <free@plt>
   24fe6:	test   rbp,rbp
   24fe9:	je     25015 <__sprintf_chk@plt+0x1a665>
   24feb:	mov    rdi,rbp
   24fee:	call   a060 <strlen@plt>
   24ff3:	lea    r12,[rax+0x1]
   24ff7:	mov    rdi,r12
   24ffa:	call   a4a0 <malloc@plt>
   24fff:	mov    rdi,rax
   25002:	test   rax,rax
   25005:	je     2501d <__sprintf_chk@plt+0x1a66d>
   25007:	mov    rsi,rbp
   2500a:	mov    rdx,r12
   2500d:	call   a420 <memcpy@plt>
   25012:	mov    rbp,rax
   25015:	mov    QWORD PTR [rbx],rbp
   25018:	pop    rbx
   25019:	pop    rbp
   2501a:	pop    r12
   2501c:	ret    
   2501d:	call   19130 <__sprintf_chk@plt+0xe780>
   25022:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2502d:	nop    DWORD PTR [rax]
   25030:	endbr64 
   25034:	cmp    BYTE PTR [rip+0x5a539],0x0        # 7f574 <obstack_alloc_failed_handler@@Base+0x73c>
   2503b:	push   r12
   2503d:	push   rbp
   2503e:	push   rbx
   2503f:	mov    rbx,rdi
   25042:	jne    25125 <__sprintf_chk@plt+0x1a775>
   25048:	mov    rax,QWORD PTR [rip+0x5a559]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   2504f:	test   rax,rax
   25052:	je     25058 <__sprintf_chk@plt+0x1a6a8>
   25054:	mov    QWORD PTR [rax+0x20],rbx
   25058:	test   rbx,rbx
   2505b:	jle    25120 <__sprintf_chk@plt+0x1a770>
   25061:	lea    rcx,[rbx-0x1]
   25065:	lea    rbp,[rbx-0x200]
   2506c:	mov    rax,QWORD PTR [rip+0x5a4cd]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   25073:	mov    rdx,QWORD PTR [rip+0x5a506]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2507a:	and    rcx,0xfffffffffffffe00
   25081:	sub    rbp,rcx
   25084:	jmp    250ce <__sprintf_chk@plt+0x1a71e>
   25086:	cs nop WORD PTR [rax+rax*1+0x0]
   25090:	test   rax,rax
   25093:	je     25100 <__sprintf_chk@plt+0x1a750>
   25095:	mov    rdx,QWORD PTR [rip+0x5a4e4]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2509c:	add    rax,0x200
   250a2:	mov    QWORD PTR [rip+0x5a497],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   250a9:	cmp    rdx,rax
   250ac:	jb     aa71 <__sprintf_chk@plt+0xc1>
   250b2:	mov    rcx,QWORD PTR [rip+0x5a4ef]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   250b9:	sub    rbx,0x200
   250c0:	test   rcx,rcx
   250c3:	je     250c9 <__sprintf_chk@plt+0x1a719>
   250c5:	mov    QWORD PTR [rcx+0x20],rbx
   250c9:	cmp    rbx,rbp
   250cc:	je     25120 <__sprintf_chk@plt+0x1a770>
   250ce:	cmp    rax,rdx
   250d1:	jne    25090 <__sprintf_chk@plt+0x1a6e0>
   250d3:	cmp    BYTE PTR [rip+0x5a45a],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   250da:	jne    25100 <__sprintf_chk@plt+0x1a750>
   250dc:	call   f170 <__sprintf_chk@plt+0x47c0>
   250e1:	mov    rax,QWORD PTR [rip+0x5a458]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   250e8:	cmp    rax,QWORD PTR [rip+0x5a491]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   250ef:	jne    25090 <__sprintf_chk@plt+0x1a6e0>
   250f1:	mov    BYTE PTR [rip+0x5a43c],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   250f8:	nop    DWORD PTR [rax+rax*1+0x0]
   25100:	mov    rax,QWORD PTR [rip+0x5a401]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   25107:	test   rax,rax
   2510a:	je     2510e <__sprintf_chk@plt+0x1a75e>
   2510c:	call   rax
   2510e:	mov    edx,0x5
   25113:	lea    rsi,[rip+0x3e2a6]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   2511a:	jmp    2522d <__sprintf_chk@plt+0x1a87d>
   2511f:	nop
   25120:	pop    rbx
   25121:	pop    rbp
   25122:	pop    r12
   25124:	ret    
   25125:	mov    r12,QWORD PTR [rip+0x5a414]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2512c:	sub    r12,QWORD PTR [rip+0x5a455]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   25133:	movsxd rdx,DWORD PTR [rip+0x5a3f6]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   2513a:	mov    rax,r12
   2513d:	mov    rbp,QWORD PTR [rip+0x5a3f4]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   25144:	sar    rax,0x9
   25148:	sub    rdx,rax
   2514b:	shl    rdx,0x9
   2514f:	cmp    rdi,rdx
   25152:	jle    25048 <__sprintf_chk@plt+0x1a698>
   25158:	mov    rax,rdi
   2515b:	mov    rcx,QWORD PTR [rip+0x5a3ee]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   25162:	sub    rax,rdx
   25165:	cmp    rax,rcx
   25168:	jb     25048 <__sprintf_chk@plt+0x1a698>
   2516e:	xor    edx,edx
   25170:	mov    edi,DWORD PTR [rip+0x5a3ea]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   25176:	div    rcx
   25179:	imul   rax,rcx
   2517d:	mov    rsi,rax
   25180:	cmp    edi,0x3fffffff
   25186:	jle    25204 <__sprintf_chk@plt+0x1a854>
   25188:	sub    edi,0x40000000
   2518e:	mov    edx,0x1
   25193:	call   3cd60 <__sprintf_chk@plt+0x323b0>
   25198:	mov    rcx,rax
   2519b:	test   rcx,rcx
   2519e:	js     251f8 <__sprintf_chk@plt+0x1a848>
   251a0:	mov    rax,rcx
   251a3:	xor    edx,edx
   251a5:	div    QWORD PTR [rip+0x5a3a4]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   251ac:	test   rdx,rdx
   251af:	jne    25213 <__sprintf_chk@plt+0x1a863>
   251b1:	mov    rax,r12
   251b4:	sar    rcx,0x9
   251b8:	movsxd rdi,DWORD PTR [rip+0x5a371]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   251bf:	sar    rax,0x9
   251c3:	mov    rsi,rcx
   251c6:	add    rax,rbp
   251c9:	sub    rcx,rdi
   251cc:	sub    rsi,rax
   251cf:	mov    QWORD PTR [rip+0x5a362],rcx        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   251d6:	mov    rax,rsi
   251d9:	cqo    
   251db:	idiv   rdi
   251de:	add    QWORD PTR [rip+0x5a373],rax        # 7f558 <obstack_alloc_failed_handler@@Base+0x720>
   251e5:	mov    rax,QWORD PTR [rip+0x5a394]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   251ec:	mov    QWORD PTR [rip+0x5a34d],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   251f3:	test   rsi,rsi
   251f6:	jns    25247 <__sprintf_chk@plt+0x1a897>
   251f8:	mov    BYTE PTR [rip+0x5a375],0x0        # 7f574 <obstack_alloc_failed_handler@@Base+0x73c>
   251ff:	jmp    25048 <__sprintf_chk@plt+0x1a698>
   25204:	mov    edx,0x1
   25209:	call   a170 <lseek@plt>
   2520e:	mov    rcx,rax
   25211:	jmp    2519b <__sprintf_chk@plt+0x1a7eb>
   25213:	mov    rax,QWORD PTR [rip+0x5a2ee]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2521a:	test   rax,rax
   2521d:	je     25221 <__sprintf_chk@plt+0x1a871>
   2521f:	call   rax
   25221:	mov    edx,0x5
   25226:	lea    rsi,[rip+0x402bb]        # 654e8 <_obstack_memory_used@@Base+0x18868>
   2522d:	xor    edi,edi
   2522f:	call   a040 <dcgettext@plt>
   25234:	xor    esi,esi
   25236:	xor    edi,edi
   25238:	mov    rdx,rax
   2523b:	xor    eax,eax
   2523d:	call   a640 <error@plt>
   25242:	call   190e0 <__sprintf_chk@plt+0xe730>
   25247:	shl    rsi,0x9
   2524b:	sub    rbx,rsi
   2524e:	jmp    25048 <__sprintf_chk@plt+0x1a698>
   25253:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2525e:	xchg   ax,ax
   25260:	endbr64 
   25264:	push   rbp
   25265:	push   rbx
   25266:	sub    rsp,0x48
   2526a:	mov    rdx,QWORD PTR [rip+0x5a2cf]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   25271:	mov    rax,QWORD PTR fs:0x28
   2527a:	mov    QWORD PTR [rsp+0x38],rax
   2527f:	mov    rax,QWORD PTR [rip+0x59e42]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   25286:	movzx  ebx,BYTE PTR [rax+0x9c]
   2528d:	cmp    rax,rdx
   25290:	jb     252aa <__sprintf_chk@plt+0x1a8fa>
   25292:	sub    rax,rdx
   25295:	and    rax,0xfffffffffffffe00
   2529b:	lea    rdx,[rdx+rax*1+0x200]
   252a3:	mov    QWORD PTR [rip+0x5a296],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   252aa:	cmp    QWORD PTR [rip+0x5a2cf],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   252b1:	jb     aa76 <__sprintf_chk@plt+0xc6>
   252b7:	cmp    BYTE PTR [rip+0x5a2f2],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   252be:	jne    253d8 <__sprintf_chk@plt+0x1aa28>
   252c4:	cmp    BYTE PTR [rip+0x5a175],0x0        # 7f440 <obstack_alloc_failed_handler@@Base+0x608>
   252cb:	jne    25360 <__sprintf_chk@plt+0x1a9b0>
   252d1:	cmp    bl,0x35
   252d4:	jne    25300 <__sprintf_chk@plt+0x1a950>
   252d6:	cmp    BYTE PTR [rip+0x5a2d3],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   252dd:	jne    25315 <__sprintf_chk@plt+0x1a965>
   252df:	mov    rax,QWORD PTR [rsp+0x38]
   252e4:	sub    rax,QWORD PTR fs:0x28
   252ed:	jne    253f3 <__sprintf_chk@plt+0x1aa43>
   252f3:	add    rsp,0x48
   252f7:	pop    rbx
   252f8:	pop    rbp
   252f9:	ret    
   252fa:	nop    WORD PTR [rax+rax*1+0x0]
   25300:	mov    rdi,QWORD PTR [rip+0x5a0a1]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   25307:	call   25030 <__sprintf_chk@plt+0x1a680>
   2530c:	cmp    BYTE PTR [rip+0x5a29d],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   25313:	je     252df <__sprintf_chk@plt+0x1a92f>
   25315:	mov    rbx,QWORD PTR [rip+0x5a28c]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   2531c:	test   rbx,rbx
   2531f:	je     25344 <__sprintf_chk@plt+0x1a994>
   25321:	nop    DWORD PTR [rax+0x0]
   25328:	mov    rbp,rbx
   2532b:	mov    rbx,QWORD PTR [rbx]
   2532e:	mov    rdi,QWORD PTR [rbp+0x10]
   25332:	call   9ce0 <free@plt>
   25337:	mov    rdi,rbp
   2533a:	call   9ce0 <free@plt>
   2533f:	test   rbx,rbx
   25342:	jne    25328 <__sprintf_chk@plt+0x1a978>
   25344:	mov    QWORD PTR [rip+0x5a259],0x0        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   2534f:	mov    QWORD PTR [rip+0x5a246],0x0        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
   2535a:	jmp    252df <__sprintf_chk@plt+0x1a92f>
   2535f:	nop
   25360:	mov    rbp,rsp
   25363:	mov    rdi,rbp
   25366:	call   32390 <__sprintf_chk@plt+0x279e0>
   2536b:	test   al,al
   2536d:	je     252d6 <__sprintf_chk@plt+0x1a926>
   25373:	lea    rax,[rip+0x59fa6]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   2537a:	mov    DWORD PTR [rsp],0xffffffff
   25381:	mov    rdi,QWORD PTR [rip+0x5a0b0]        # 7f438 <obstack_alloc_failed_handler@@Base+0x600>
   25388:	mov    QWORD PTR [rsp+0x18],rax
   2538d:	mov    rax,QWORD PTR [rsp+0x20]
   25392:	mov    rax,QWORD PTR [rax+0x28]
   25396:	test   rax,rax
   25399:	je     253ac <__sprintf_chk@plt+0x1a9fc>
   2539b:	mov    rdi,rbp
   2539e:	call   rax
   253a0:	mov    rax,QWORD PTR [rsp+0x18]
   253a5:	mov    rdi,QWORD PTR [rax+0x118]
   253ac:	sub    rdi,QWORD PTR [rsp+0x10]
   253b1:	call   25030 <__sprintf_chk@plt+0x1a680>
   253b6:	mov    rax,QWORD PTR [rsp+0x20]
   253bb:	mov    rax,QWORD PTR [rax+0x8]
   253bf:	test   rax,rax
   253c2:	je     252d6 <__sprintf_chk@plt+0x1a926>
   253c8:	mov    rdi,rbp
   253cb:	call   rax
   253cd:	jmp    252d6 <__sprintf_chk@plt+0x1a926>
   253d2:	nop    WORD PTR [rax+rax*1+0x0]
   253d8:	mov    rsi,QWORD PTR [rip+0x59fc9]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   253df:	mov    rdi,QWORD PTR [rip+0x59f3a]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   253e6:	mov    rdx,rsi
   253e9:	call   fa40 <__sprintf_chk@plt+0x5090>
   253ee:	jmp    252c4 <__sprintf_chk@plt+0x1a914>
   253f3:	call   a0a0 <__stack_chk_fail@plt>
   253f8:	nop    DWORD PTR [rax+rax*1+0x0]
   25400:	endbr64 
   25404:	push   r13
   25406:	mov    r13,rdx
   25409:	push   r12
   2540b:	mov    r12,rdi
   2540e:	push   rbp
   2540f:	mov    rbp,rsi
   25412:	push   rbx
   25413:	sub    rsp,0x8
   25417:	mov    rdi,QWORD PTR [rdi]
   2541a:	call   9ce0 <free@plt>
   2541f:	test   rbp,rbp
   25422:	je     25468 <__sprintf_chk@plt+0x1aab8>
   25424:	mov    rdi,rbp
   25427:	mov    rsi,r13
   2542a:	call   a1e0 <strnlen@plt>
   2542f:	lea    rdi,[rax+0x1]
   25433:	mov    rbx,rax
   25436:	call   a4a0 <malloc@plt>
   2543b:	test   rax,rax
   2543e:	je     254b1 <__sprintf_chk@plt+0x1ab01>
   25440:	cmp    ebx,0x8
   25443:	jb     25478 <__sprintf_chk@plt+0x1aac8>
   25445:	mov    edx,ebx
   25447:	mov    rdi,rax
   2544a:	mov    rsi,rbp
   2544d:	mov    rcx,QWORD PTR [rbp+rdx*1-0x8]
   25452:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
   25457:	lea    ecx,[rbx-0x1]
   2545a:	shr    ecx,0x3
   2545d:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   25460:	mov    BYTE PTR [rax+rbx*1],0x0
   25464:	mov    QWORD PTR [r12],rax
   25468:	add    rsp,0x8
   2546c:	pop    rbx
   2546d:	pop    rbp
   2546e:	pop    r12
   25470:	pop    r13
   25472:	ret    
   25473:	nop    DWORD PTR [rax+rax*1+0x0]
   25478:	test   bl,0x4
   2547b:	jne    254a0 <__sprintf_chk@plt+0x1aaf0>
   2547d:	test   ebx,ebx
   2547f:	je     25460 <__sprintf_chk@plt+0x1aab0>
   25481:	movzx  edx,BYTE PTR [rbp+0x0]
   25485:	mov    BYTE PTR [rax],dl
   25487:	test   bl,0x2
   2548a:	je     25460 <__sprintf_chk@plt+0x1aab0>
   2548c:	mov    edx,ebx
   2548e:	movzx  ecx,WORD PTR [rbp+rdx*1-0x2]
   25493:	mov    WORD PTR [rax+rdx*1-0x2],cx
   25498:	jmp    25460 <__sprintf_chk@plt+0x1aab0>
   2549a:	nop    WORD PTR [rax+rax*1+0x0]
   254a0:	mov    edx,DWORD PTR [rbp+0x0]
   254a3:	mov    DWORD PTR [rax],edx
   254a5:	mov    edx,ebx
   254a7:	mov    ecx,DWORD PTR [rbp+rdx*1-0x4]
   254ab:	mov    DWORD PTR [rax+rdx*1-0x4],ecx
   254af:	jmp    25460 <__sprintf_chk@plt+0x1aab0>
   254b1:	call   19130 <__sprintf_chk@plt+0xe780>
   254b6:	cs nop WORD PTR [rax+rax*1+0x0]
   254c0:	endbr64 
   254c4:	movzx  edx,BYTE PTR [rdi]
   254c7:	mov    rax,rdi
   254ca:	mov    rsi,rdi
   254cd:	cmp    dl,0x2e
   254d0:	je     254e6 <__sprintf_chk@plt+0x1ab36>
   254d2:	jmp    25523 <__sprintf_chk@plt+0x1ab73>
   254d4:	nop    DWORD PTR [rax+0x0]
   254d8:	cmp    dl,0x1
   254db:	adc    rsi,0x0
   254df:	mov    BYTE PTR [rsi],dl
   254e1:	cmp    dl,0x2e
   254e4:	jne    25520 <__sprintf_chk@plt+0x1ab70>
   254e6:	cmp    BYTE PTR [rax+0x1],0x2f
   254ea:	jne    25520 <__sprintf_chk@plt+0x1ab70>
   254ec:	movzx  edx,BYTE PTR [rax+0x2]
   254f0:	lea    rcx,[rax+0x2]
   254f4:	mov    rax,rcx
   254f7:	cmp    dl,0x2f
   254fa:	jne    254d8 <__sprintf_chk@plt+0x1ab28>
   254fc:	movzx  edx,BYTE PTR [rcx+0x1]
   25500:	lea    rax,[rcx+0x1]
   25504:	cmp    dl,0x2f
   25507:	jne    254d8 <__sprintf_chk@plt+0x1ab28>
   25509:	mov    rcx,rax
   2550c:	movzx  edx,BYTE PTR [rcx+0x1]
   25510:	lea    rax,[rcx+0x1]
   25514:	cmp    dl,0x2f
   25517:	jne    254d8 <__sprintf_chk@plt+0x1ab28>
   25519:	jmp    25509 <__sprintf_chk@plt+0x1ab59>
   2551b:	nop    DWORD PTR [rax+rax*1+0x0]
   25520:	movzx  edx,BYTE PTR [rax]
   25523:	mov    BYTE PTR [rsi],dl
   25525:	add    rax,0x1
   25529:	lea    rcx,[rsi+0x1]
   2552d:	test   dl,dl
   2552f:	jne    25549 <__sprintf_chk@plt+0x1ab99>
   25531:	jmp    255a0 <__sprintf_chk@plt+0x1abf0>
   25533:	nop    DWORD PTR [rax+rax*1+0x0]
   25538:	mov    edx,esi
   2553a:	add    rcx,0x1
   2553e:	add    rax,0x1
   25542:	mov    BYTE PTR [rcx-0x1],dl
   25545:	test   dl,dl
   25547:	je     255a0 <__sprintf_chk@plt+0x1abf0>
   25549:	movzx  esi,BYTE PTR [rax]
   2554c:	cmp    dl,0x2f
   2554f:	jne    25538 <__sprintf_chk@plt+0x1ab88>
   25551:	xor    edx,edx
   25553:	cmp    sil,0x2e
   25557:	sete   dl
   2555a:	cmp    BYTE PTR [rax+rdx*1],0x2f
   2555e:	mov    edx,esi
   25560:	jne    2553a <__sprintf_chk@plt+0x1ab8a>
   25562:	nop    WORD PTR [rax+rax*1+0x0]
   25568:	cmp    dl,0x2e
   2556b:	sete   dl
   2556e:	xor    esi,esi
   25570:	movzx  edx,dl
   25573:	lea    rax,[rax+rdx*1+0x1]
   25578:	movzx  edx,BYTE PTR [rax]
   2557b:	cmp    dl,0x2e
   2557e:	sete   sil
   25582:	cmp    BYTE PTR [rax+rsi*1],0x2f
   25586:	je     25568 <__sprintf_chk@plt+0x1abb8>
   25588:	add    rcx,0x1
   2558c:	add    rax,0x1
   25590:	mov    BYTE PTR [rcx-0x1],dl
   25593:	test   dl,dl
   25595:	jne    25549 <__sprintf_chk@plt+0x1ab99>
   25597:	nop    WORD PTR [rax+rax*1+0x0]
   255a0:	mov    rax,rcx
   255a3:	sub    rax,rdi
   255a6:	cmp    rax,0x2
   255aa:	jle    255c4 <__sprintf_chk@plt+0x1ac14>
   255ac:	movzx  eax,BYTE PTR [rcx-0x2]
   255b0:	cmp    al,0x2e
   255b2:	je     255c8 <__sprintf_chk@plt+0x1ac18>
   255b4:	cmp    al,0x2f
   255b6:	jne    255c0 <__sprintf_chk@plt+0x1ac10>
   255b8:	sub    rcx,0x1
   255bc:	nop    DWORD PTR [rax+0x0]
   255c0:	mov    BYTE PTR [rcx-0x1],0x0
   255c4:	ret    
   255c5:	nop    DWORD PTR [rax]
   255c8:	cmp    BYTE PTR [rcx-0x3],0x2f
   255cc:	jne    255c0 <__sprintf_chk@plt+0x1ac10>
   255ce:	sub    rcx,0x1
   255d2:	mov    rax,rcx
   255d5:	sub    rax,rdi
   255d8:	cmp    rax,0x2
   255dc:	jle    255c0 <__sprintf_chk@plt+0x1ac10>
   255de:	jmp    255b8 <__sprintf_chk@plt+0x1ac08>
   255e0:	endbr64 
   255e4:	push   r15
   255e6:	mov    r15,rsi
   255e9:	push   r14
   255eb:	mov    r14,rdi
   255ee:	push   r13
   255f0:	push   r12
   255f2:	mov    r12,r8
   255f5:	push   rbp
   255f6:	push   rbx
   255f7:	mov    rbx,rdx
   255fa:	sub    rsp,0x18
   255fe:	mov    r13,QWORD PTR [rdi]
   25601:	mov    QWORD PTR [rsp+0x8],rcx
   25606:	mov    rdi,r13
   25609:	call   a060 <strlen@plt>
   2560e:	cmp    rax,rbx
   25611:	jbe    25632 <__sprintf_chk@plt+0x1ac82>
   25613:	mov    rdx,rbx
   25616:	mov    rsi,r15
   25619:	mov    rdi,r13
   2561c:	mov    rbp,rax
   2561f:	call   a2c0 <memcmp@plt>
   25624:	test   eax,eax
   25626:	jne    25632 <__sprintf_chk@plt+0x1ac82>
   25628:	lea    rsi,[r13+rbx*1+0x0]
   2562d:	cmp    BYTE PTR [rsi],0x2f
   25630:	je     25648 <__sprintf_chk@plt+0x1ac98>
   25632:	add    rsp,0x18
   25636:	pop    rbx
   25637:	pop    rbp
   25638:	pop    r12
   2563a:	pop    r13
   2563c:	pop    r14
   2563e:	pop    r15
   25640:	ret    
   25641:	nop    DWORD PTR [rax+0x0]
   25648:	cmp    rbx,r12
   2564b:	jb     25680 <__sprintf_chk@plt+0x1acd0>
   2564d:	sub    rbp,rbx
   25650:	lea    rdi,[r13+r12*1+0x0]
   25655:	lea    rdx,[rbp+0x1]
   25659:	call   a630 <memmove@plt>
   2565e:	mov    rsi,QWORD PTR [rsp+0x8]
   25663:	mov    rdx,r12
   25666:	mov    rdi,r13
   25669:	add    rsp,0x18
   2566d:	pop    rbx
   2566e:	pop    rbp
   2566f:	pop    r12
   25671:	pop    r13
   25673:	pop    r14
   25675:	pop    r15
   25677:	jmp    a420 <memcpy@plt>
   2567c:	nop    DWORD PTR [rax+0x0]
   25680:	mov    rax,r12
   25683:	mov    rdi,r13
   25686:	sub    rax,rbx
   25689:	lea    r15,[rax+rbp*1+0x1]
   2568e:	mov    rsi,r15
   25691:	call   a570 <realloc@plt>
   25696:	mov    r13,rax
   25699:	test   rax,rax
   2569c:	je     256a8 <__sprintf_chk@plt+0x1acf8>
   2569e:	mov    QWORD PTR [r14],r13
   256a1:	lea    rsi,[r13+rbx*1+0x0]
   256a6:	jmp    2564d <__sprintf_chk@plt+0x1ac9d>
   256a8:	test   r15,r15
   256ab:	je     2569e <__sprintf_chk@plt+0x1acee>
   256ad:	call   19130 <__sprintf_chk@plt+0xe780>
   256b2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   256bd:	nop    DWORD PTR [rax]
   256c0:	endbr64 
   256c4:	push   rbx
   256c5:	mov    rbx,rdi
   256c8:	mov    r9,rdx
   256cb:	mov    rax,rdi
   256ce:	shr    rbx,0x3f
   256d2:	cmp    esi,0x3b9ac9ff
   256d8:	ja     25758 <__sprintf_chk@plt+0x1ada8>
   256da:	mov    ecx,esi
   256dc:	test   esi,esi
   256de:	je     2575a <__sprintf_chk@plt+0x1adaa>
   256e0:	test   bl,bl
   256e2:	je     2575a <__sprintf_chk@plt+0x1adaa>
   256e4:	mov    ecx,0x3b9aca00
   256e9:	add    rax,0x1
   256ed:	sub    ecx,esi
   256ef:	neg    rax
   256f2:	mov    rdi,rax
   256f5:	movabs r10,0xcccccccccccccccd
   256ff:	lea    r8,[r9+0x15]
   25703:	nop    DWORD PTR [rax+rax*1+0x0]
   25708:	mov    rax,rdi
   2570b:	mov    r11,r8
   2570e:	sub    r8,0x1
   25712:	mul    r10
   25715:	mov    rax,rdi
   25718:	shr    rdx,0x3
   2571c:	lea    rsi,[rdx+rdx*4]
   25720:	add    rsi,rsi
   25723:	sub    rax,rsi
   25726:	add    eax,0x30
   25729:	mov    BYTE PTR [r8],al
   2572c:	mov    rax,rdi
   2572f:	mov    rdi,rdx
   25732:	cmp    rax,0x9
   25736:	ja     25708 <__sprintf_chk@plt+0x1ad58>
   25738:	test   bl,bl
   2573a:	je     25745 <__sprintf_chk@plt+0x1ad95>
   2573c:	mov    BYTE PTR [r8-0x1],0x2d
   25741:	lea    r8,[r11-0x2]
   25745:	test   ecx,ecx
   25747:	jne    25760 <__sprintf_chk@plt+0x1adb0>
   25749:	mov    BYTE PTR [r9+0x15],0x0
   2574e:	mov    rax,r8
   25751:	pop    rbx
   25752:	ret    
   25753:	nop    DWORD PTR [rax+rax*1+0x0]
   25758:	xor    ecx,ecx
   2575a:	test   bl,bl
   2575c:	je     256f5 <__sprintf_chk@plt+0x1ad45>
   2575e:	jmp    256ef <__sprintf_chk@plt+0x1ad3f>
   25760:	movsxd rax,ecx
   25763:	mov    esi,ecx
   25765:	mov    BYTE PTR [r9+0x15],0x2e
   2576a:	imul   rdx,rax,0x66666667
   25771:	sar    esi,0x1f
   25774:	sar    rdx,0x22
   25778:	sub    edx,esi
   2577a:	lea    esi,[rdx+rdx*4]
   2577d:	mov    edx,ecx
   2577f:	add    esi,esi
   25781:	sub    edx,esi
   25783:	jne    25834 <__sprintf_chk@plt+0x1ae84>
   25789:	mov    edi,0x9
   2578e:	xchg   ax,ax
   25790:	imul   rax,rax,0x66666667
   25797:	sar    ecx,0x1f
   2579a:	mov    r10d,edi
   2579d:	sub    edi,0x1
   257a0:	sar    rax,0x22
   257a4:	sub    eax,ecx
   257a6:	mov    ecx,eax
   257a8:	cdqe   
   257aa:	imul   rdx,rax,0x66666667
   257b1:	mov    esi,ecx
   257b3:	sar    esi,0x1f
   257b6:	sar    rdx,0x22
   257ba:	sub    edx,esi
   257bc:	lea    esi,[rdx+rdx*4]
   257bf:	mov    edx,ecx
   257c1:	add    esi,esi
   257c3:	sub    edx,esi
   257c5:	je     25790 <__sprintf_chk@plt+0x1ade0>
   257c7:	sub    r10d,0x2
   257cb:	movsxd rdi,edi
   257ce:	add    edx,0x30
   257d1:	movsxd rsi,r10d
   257d4:	mov    BYTE PTR [r9+rdi*1+0x16],0x0
   257da:	mov    BYTE PTR [r9+rsi*1+0x16],dl
   257df:	test   r10d,r10d
   257e2:	je     2574e <__sprintf_chk@plt+0x1ad9e>
   257e8:	nop    DWORD PTR [rax+rax*1+0x0]
   257f0:	imul   rax,rax,0x66666667
   257f7:	sar    ecx,0x1f
   257fa:	sar    rax,0x22
   257fe:	sub    eax,ecx
   25800:	mov    ecx,eax
   25802:	cdqe   
   25804:	imul   rdx,rax,0x66666667
   2580b:	mov    edi,ecx
   2580d:	sar    edi,0x1f
   25810:	sar    rdx,0x22
   25814:	sub    edx,edi
   25816:	lea    edi,[rdx+rdx*4]
   25819:	mov    edx,ecx
   2581b:	add    edi,edi
   2581d:	sub    edx,edi
   2581f:	add    edx,0x30
   25822:	mov    BYTE PTR [r9+rsi*1+0x15],dl
   25827:	sub    rsi,0x1
   2582b:	test   esi,esi
   2582d:	jne    257f0 <__sprintf_chk@plt+0x1ae40>
   2582f:	mov    rax,r8
   25832:	pop    rbx
   25833:	ret    
   25834:	add    edx,0x30
   25837:	mov    BYTE PTR [r9+0x1f],0x0
   2583c:	mov    esi,0x8
   25841:	mov    BYTE PTR [r9+0x1e],dl
   25845:	jmp    257f0 <__sprintf_chk@plt+0x1ae40>
   25847:	nop    WORD PTR [rax+rax*1+0x0]
   25850:	endbr64 
   25854:	push   r14
   25856:	push   r13
   25858:	mov    r13d,edx
   2585b:	push   r12
   2585d:	push   rbp
   2585e:	mov    rbp,rdi
   25861:	push   rbx
   25862:	movzx  r14d,BYTE PTR [rdi]
   25866:	mov    rbx,rsi
   25869:	call   9e40 <__errno_location@plt>
   2586e:	mov    r12,rax
   25871:	xor    eax,eax
   25873:	cmp    r14b,0x2d
   25877:	sete   al
   2587a:	movsx  eax,BYTE PTR [rbp+rax*1+0x0]
   2587f:	sub    eax,0x30
   25882:	cmp    eax,0x9
   25885:	jbe    258b0 <__sprintf_chk@plt+0x1af00>
   25887:	mov    DWORD PTR [r12],0x16
   2588f:	mov    rdx,0xffffffffffffffff
   25896:	movabs r8,0x8000000000000000
   258a0:	mov    QWORD PTR [rbx],rbp
   258a3:	mov    rax,r8
   258a6:	pop    rbx
   258a7:	pop    rbp
   258a8:	pop    r12
   258aa:	pop    r13
   258ac:	pop    r14
   258ae:	ret    
   258af:	nop
   258b0:	mov    DWORD PTR [r12],0x0
   258b8:	mov    edx,0xa
   258bd:	mov    rsi,rbx
   258c0:	mov    rdi,rbp
   258c3:	cmp    r14b,0x2d
   258c7:	je     259c0 <__sprintf_chk@plt+0x1b010>
   258cd:	call   a710 <strtoumax@plt>
   258d2:	mov    r8,rax
   258d5:	test   rax,rax
   258d8:	js     25988 <__sprintf_chk@plt+0x1afd8>
   258de:	mov    rbp,QWORD PTR [rbx]
   258e1:	mov    r10d,DWORD PTR [r12]
   258e5:	xor    edx,edx
   258e7:	test   r13b,r13b
   258ea:	je     25963 <__sprintf_chk@plt+0x1afb3>
   258ec:	cmp    BYTE PTR [rbp+0x0],0x2e
   258f0:	mov    rax,rbp
   258f3:	jne    25963 <__sprintf_chk@plt+0x1afb3>
   258f5:	movsx  esi,BYTE PTR [rax+0x1]
   258f9:	add    rbp,0x1
   258fd:	lea    eax,[rsi-0x30]
   25900:	mov    ecx,esi
   25902:	cmp    eax,0x9
   25905:	ja     25a28 <__sprintf_chk@plt+0x1b078>
   2590b:	xor    r9d,r9d
   2590e:	xor    eax,eax
   25910:	xor    edx,edx
   25912:	jmp    25934 <__sprintf_chk@plt+0x1af84>
   25914:	nop    DWORD PTR [rax+0x0]
   25918:	lea    edx,[rdx+rdx*4]
   2591b:	add    eax,0x1
   2591e:	lea    edx,[rsi+rdx*2-0x30]
   25922:	movsx  esi,BYTE PTR [rbp+0x1]
   25926:	add    rbp,0x1
   2592a:	lea    edi,[rsi-0x30]
   2592d:	mov    ecx,esi
   2592f:	cmp    edi,0x9
   25932:	ja     25948 <__sprintf_chk@plt+0x1af98>
   25934:	cmp    eax,0x8
   25937:	jle    25918 <__sprintf_chk@plt+0x1af68>
   25939:	cmp    cl,0x30
   2593c:	setne  cl
   2593f:	or     r9d,ecx
   25942:	jmp    25922 <__sprintf_chk@plt+0x1af72>
   25944:	nop    DWORD PTR [rax+0x0]
   25948:	cmp    eax,0x8
   2594b:	jg     2595d <__sprintf_chk@plt+0x1afad>
   2594d:	nop    DWORD PTR [rax]
   25950:	lea    edx,[rdx+rdx*4]
   25953:	add    eax,0x1
   25956:	add    edx,edx
   25958:	cmp    eax,0x9
   2595b:	jne    25950 <__sprintf_chk@plt+0x1afa0>
   2595d:	cmp    r14b,0x2d
   25961:	je     259e0 <__sprintf_chk@plt+0x1b030>
   25963:	mov    rax,0xffffffffffffffff
   2596a:	movsxd rdx,edx
   2596d:	cmp    r10d,0x22
   25971:	mov    QWORD PTR [rbx],rbp
   25974:	cmove  rdx,rax
   25978:	pop    rbx
   25979:	mov    rax,r8
   2597c:	pop    rbp
   2597d:	pop    r12
   2597f:	pop    r13
   25981:	pop    r14
   25983:	ret    
   25984:	nop    DWORD PTR [rax+0x0]
   25988:	mov    DWORD PTR [r12],0x22
   25990:	mov    rbp,QWORD PTR [rbx]
   25993:	test   r13b,r13b
   25996:	je     2599e <__sprintf_chk@plt+0x1afee>
   25998:	cmp    BYTE PTR [rbp+0x0],0x2e
   2599c:	je     25a10 <__sprintf_chk@plt+0x1b060>
   2599e:	movabs r8,0x8000000000000000
   259a8:	mov    QWORD PTR [rbx],rbp
   259ab:	pop    rbx
   259ac:	mov    rdx,0xffffffffffffffff
   259b3:	pop    rbp
   259b4:	mov    rax,r8
   259b7:	pop    r12
   259b9:	pop    r13
   259bb:	pop    r14
   259bd:	ret    
   259be:	xchg   ax,ax
   259c0:	call   9dc0 <strtoimax@plt>
   259c5:	mov    rbp,QWORD PTR [rbx]
   259c8:	mov    r10d,DWORD PTR [r12]
   259cc:	xor    edx,edx
   259ce:	mov    r8,rax
   259d1:	test   r13b,r13b
   259d4:	je     25963 <__sprintf_chk@plt+0x1afb3>
   259d6:	jmp    258ec <__sprintf_chk@plt+0x1af3c>
   259db:	nop    DWORD PTR [rax+rax*1+0x0]
   259e0:	movzx  r9d,r9b
   259e4:	add    edx,r9d
   259e7:	je     25963 <__sprintf_chk@plt+0x1afb3>
   259ed:	movabs rax,0x8000000000000000
   259f7:	cmp    r8,rax
   259fa:	je     25a34 <__sprintf_chk@plt+0x1b084>
   259fc:	mov    eax,0x3b9aca00
   25a01:	sub    r8,0x1
   25a05:	sub    eax,edx
   25a07:	mov    edx,eax
   25a09:	jmp    25963 <__sprintf_chk@plt+0x1afb3>
   25a0e:	xchg   ax,ax
   25a10:	mov    rax,rbp
   25a13:	mov    r10d,0x22
   25a19:	movabs r8,0x8000000000000000
   25a23:	jmp    258f5 <__sprintf_chk@plt+0x1af45>
   25a28:	xor    edx,edx
   25a2a:	xor    r9d,r9d
   25a2d:	xor    eax,eax
   25a2f:	jmp    25950 <__sprintf_chk@plt+0x1afa0>
   25a34:	mov    edx,0xffffffff
   25a39:	jmp    25963 <__sprintf_chk@plt+0x1afb3>
   25a3e:	xchg   ax,ax
   25a40:	endbr64 
   25a44:	movzx  eax,BYTE PTR [rdi]
   25a47:	cmp    al,0x2f
   25a49:	je     25a94 <__sprintf_chk@plt+0x1b0e4>
   25a4b:	cmp    al,0x2e
   25a4d:	jne    25a80 <__sprintf_chk@plt+0x1b0d0>
   25a4f:	movzx  eax,BYTE PTR [rdi+0x1]
   25a53:	cmp    al,0x2f
   25a55:	jne    25a80 <__sprintf_chk@plt+0x1b0d0>
   25a57:	movzx  eax,BYTE PTR [rdi+0x2]
   25a5b:	lea    rdx,[rdi+0x2]
   25a5f:	mov    rdi,rdx
   25a62:	cmp    al,0x2f
   25a64:	jne    25a4b <__sprintf_chk@plt+0x1b09b>
   25a66:	cs nop WORD PTR [rax+rax*1+0x0]
   25a70:	movzx  eax,BYTE PTR [rdi+0x1]
   25a74:	add    rdi,0x1
   25a78:	cmp    al,0x2f
   25a7a:	je     25a70 <__sprintf_chk@plt+0x1b0c0>
   25a7c:	cmp    al,0x2e
   25a7e:	je     25a4f <__sprintf_chk@plt+0x1b09f>
   25a80:	test   al,al
   25a82:	sete   al
   25a85:	ret    
   25a86:	cs nop WORD PTR [rax+rax*1+0x0]
   25a90:	add    rdi,0x1
   25a94:	movzx  eax,BYTE PTR [rdi+0x1]
   25a98:	cmp    al,0x2f
   25a9a:	je     25a90 <__sprintf_chk@plt+0x1b0e0>
   25a9c:	cmp    al,0x2e
   25a9e:	jne    25a80 <__sprintf_chk@plt+0x1b0d0>
   25aa0:	xor    eax,eax
   25aa2:	cmp    BYTE PTR [rdi+0x2],0x2e
   25aa6:	sete   al
   25aa9:	lea    rdi,[rdi+rax*1+0x2]
   25aae:	cmp    BYTE PTR [rdi],0x2f
   25ab1:	je     25a94 <__sprintf_chk@plt+0x1b0e4>
   25ab3:	xor    eax,eax
   25ab5:	ret    
   25ab6:	cs nop WORD PTR [rax+rax*1+0x0]
   25ac0:	push   r15
   25ac2:	push   r14
   25ac4:	mov    r14,rdi
   25ac7:	push   r13
   25ac9:	push   r12
   25acb:	push   rbp
   25acc:	push   rbx
   25acd:	sub    rsp,0x18
   25ad1:	call   25a40 <__sprintf_chk@plt+0x1b090>
   25ad6:	test   al,al
   25ad8:	jne    25bfd <__sprintf_chk@plt+0x1b24d>
   25ade:	mov    edi,DWORD PTR [rip+0x5653c]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   25ae4:	mov    edx,0x200
   25ae9:	mov    rsi,r14
   25aec:	call   9ee0 <unlinkat@plt>
   25af1:	mov    DWORD PTR [rsp+0xc],eax
   25af5:	test   eax,eax
   25af7:	jne    25bf3 <__sprintf_chk@plt+0x1b243>
   25afd:	mov    rbp,QWORD PTR [rip+0x59c3c]        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   25b04:	test   rbp,rbp
   25b07:	je     25bcf <__sprintf_chk@plt+0x1b21f>
   25b0d:	mov    r13d,DWORD PTR [rip+0x59cb4]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   25b14:	xor    r12d,r12d
   25b17:	jmp    25b2f <__sprintf_chk@plt+0x1b17f>
   25b19:	nop    DWORD PTR [rax+0x0]
   25b20:	mov    r12,rbp
   25b23:	test   rbx,rbx
   25b26:	je     25bcf <__sprintf_chk@plt+0x1b21f>
   25b2c:	mov    rbp,rbx
   25b2f:	mov    rbx,QWORD PTR [rbp+0x0]
   25b33:	cmp    DWORD PTR [rbp+0x5c],r13d
   25b37:	jne    25b20 <__sprintf_chk@plt+0x1b170>
   25b39:	mov    r15,QWORD PTR [rbp+0xa0]
   25b40:	mov    rsi,r14
   25b43:	mov    rdi,r15
   25b46:	call   a320 <strcmp@plt>
   25b4b:	test   eax,eax
   25b4d:	jne    25b20 <__sprintf_chk@plt+0x1b170>
   25b4f:	mov    rdi,r15
   25b52:	call   9ce0 <free@plt>
   25b57:	mov    rax,QWORD PTR [rbp+0x88]
   25b5e:	mov    r15,QWORD PTR [rbp+0x90]
   25b65:	test   rax,rax
   25b68:	je     25b93 <__sprintf_chk@plt+0x1b1e3>
   25b6a:	lea    rax,[rax+rax*2]
   25b6e:	mov    r13,r15
   25b71:	lea    r14,[r15+rax*8]
   25b75:	nop    DWORD PTR [rax]
   25b78:	mov    rdi,QWORD PTR [r13+0x0]
   25b7c:	add    r13,0x18
   25b80:	call   9ce0 <free@plt>
   25b85:	mov    rdi,QWORD PTR [r13-0x10]
   25b89:	call   9ce0 <free@plt>
   25b8e:	cmp    r14,r13
   25b91:	jne    25b78 <__sprintf_chk@plt+0x1b1c8>
   25b93:	mov    rdi,r15
   25b96:	call   9ce0 <free@plt>
   25b9b:	mov    rdi,QWORD PTR [rbp+0x60]
   25b9f:	call   9ce0 <free@plt>
   25ba4:	mov    rdi,QWORD PTR [rbp+0x68]
   25ba8:	call   9ce0 <free@plt>
   25bad:	mov    rdi,QWORD PTR [rbp+0x78]
   25bb1:	call   9ce0 <free@plt>
   25bb6:	mov    rdi,rbp
   25bb9:	call   9ce0 <free@plt>
   25bbe:	test   r12,r12
   25bc1:	je     25be2 <__sprintf_chk@plt+0x1b232>
   25bc3:	mov    QWORD PTR [r12],rbx
   25bc7:	mov    DWORD PTR [rsp+0xc],0x0
   25bcf:	mov    eax,DWORD PTR [rsp+0xc]
   25bd3:	add    rsp,0x18
   25bd7:	pop    rbx
   25bd8:	pop    rbp
   25bd9:	pop    r12
   25bdb:	pop    r13
   25bdd:	pop    r14
   25bdf:	pop    r15
   25be1:	ret    
   25be2:	mov    QWORD PTR [rip+0x59b57],rbx        # 7f740 <obstack_alloc_failed_handler@@Base+0x908>
   25be9:	mov    DWORD PTR [rsp+0xc],0x0
   25bf1:	jmp    25bcf <__sprintf_chk@plt+0x1b21f>
   25bf3:	mov    DWORD PTR [rsp+0xc],0xffffffff
   25bfb:	jmp    25bcf <__sprintf_chk@plt+0x1b21f>
   25bfd:	call   9e40 <__errno_location@plt>
   25c02:	mov    DWORD PTR [rsp+0xc],0xffffffff
   25c0a:	mov    DWORD PTR [rax],0x0
   25c10:	jmp    25bcf <__sprintf_chk@plt+0x1b21f>
   25c12:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   25c1d:	nop    DWORD PTR [rax]
   25c20:	endbr64 
   25c24:	push   r15
   25c26:	push   r14
   25c28:	push   r13
   25c2a:	mov    r13,rdi
   25c2d:	push   r12
   25c2f:	push   rbp
   25c30:	push   rbx
   25c31:	mov    ebx,esi
   25c33:	sub    rsp,0xe8
   25c3a:	mov    rdi,QWORD PTR [rip+0x59e17]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   25c41:	mov    rax,QWORD PTR fs:0x28
   25c4a:	mov    QWORD PTR [rsp+0xd8],rax
   25c52:	xor    eax,eax
   25c54:	call   9ce0 <free@plt>
   25c59:	test   r13,r13
   25c5c:	je     26138 <__sprintf_chk@plt+0x1b788>
   25c62:	mov    rdi,r13
   25c65:	call   a060 <strlen@plt>
   25c6a:	lea    r12,[rax+0x1]
   25c6e:	mov    rdi,r12
   25c71:	call   a4a0 <malloc@plt>
   25c76:	mov    rdi,rax
   25c79:	test   rax,rax
   25c7c:	je     26436 <__sprintf_chk@plt+0x1ba86>
   25c82:	mov    rdx,r12
   25c85:	mov    rsi,r13
   25c88:	call   a420 <memcpy@plt>
   25c8d:	mov    rdi,QWORD PTR [rip+0x59dbc]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   25c94:	mov    QWORD PTR [rip+0x59dbd],rax        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   25c9b:	call   9ce0 <free@plt>
   25ca0:	mov    QWORD PTR [rip+0x59da5],0x0        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   25cab:	test   bl,bl
   25cad:	je     25cf0 <__sprintf_chk@plt+0x1b340>
   25caf:	cmp    BYTE PTR [rip+0x5960a],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   25cb6:	jne    25cf0 <__sprintf_chk@plt+0x1b340>
   25cb8:	mov    esi,0x3a
   25cbd:	mov    rdi,r13
   25cc0:	call   a0f0 <strchr@plt>
   25cc5:	test   rax,rax
   25cc8:	je     25cf0 <__sprintf_chk@plt+0x1b340>
   25cca:	cmp    rax,r13
   25ccd:	jbe    25cf0 <__sprintf_chk@plt+0x1b340>
   25ccf:	sub    rax,r13
   25cd2:	mov    esi,0x2f
   25cd7:	mov    rdi,r13
   25cda:	mov    rdx,rax
   25cdd:	call   a280 <memchr@plt>
   25ce2:	test   rax,rax
   25ce5:	je     26128 <__sprintf_chk@plt+0x1b778>
   25ceb:	nop    DWORD PTR [rax+rax*1+0x0]
   25cf0:	mov    ecx,DWORD PTR [rip+0x5927e]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   25cf6:	mov    edi,DWORD PTR [rip+0x56324]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   25cfc:	lea    rdx,[rsp+0x40]
   25d01:	mov    rsi,r13
   25d04:	call   a960 <fstatat@plt>
   25d09:	test   eax,eax
   25d0b:	je     25d58 <__sprintf_chk@plt+0x1b3a8>
   25d0d:	call   9e40 <__errno_location@plt>
   25d12:	cmp    DWORD PTR [rax],0x2
   25d15:	je     26128 <__sprintf_chk@plt+0x1b778>
   25d1b:	mov    rsi,r13
   25d1e:	lea    rdi,[rip+0x3d31e]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   25d25:	call   3bad0 <__sprintf_chk@plt+0x31120>
   25d2a:	xor    eax,eax
   25d2c:	mov    rdx,QWORD PTR [rsp+0xd8]
   25d34:	sub    rdx,QWORD PTR fs:0x28
   25d3d:	jne    264ce <__sprintf_chk@plt+0x1bb1e>
   25d43:	add    rsp,0xe8
   25d4a:	pop    rbx
   25d4b:	pop    rbp
   25d4c:	pop    r12
   25d4e:	pop    r13
   25d50:	pop    r14
   25d52:	pop    r15
   25d54:	ret    
   25d55:	nop    DWORD PTR [rax]
   25d58:	mov    eax,DWORD PTR [rsp+0x58]
   25d5c:	mov    edx,eax
   25d5e:	and    edx,0xf000
   25d64:	cmp    edx,0x4000
   25d6a:	je     26128 <__sprintf_chk@plt+0x1b778>
   25d70:	test   bl,bl
   25d72:	je     25d84 <__sprintf_chk@plt+0x1b3d4>
   25d74:	and    eax,0xb000
   25d79:	cmp    eax,0x2000
   25d7e:	je     26128 <__sprintf_chk@plt+0x1b778>
   25d84:	mov    eax,DWORD PTR [rip+0x59b76]        # 7f900 <obstack_alloc_failed_handler@@Base+0xac8>
   25d8a:	mov    r12d,DWORD PTR [rip+0x5628f]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   25d91:	mov    rdi,r13
   25d94:	mov    DWORD PTR [rsp+0x14],eax
   25d98:	movzx  eax,BYTE PTR [r13+0x0]
   25d9d:	cmp    al,0x2f
   25d9f:	jne    25db4 <__sprintf_chk@plt+0x1b404>
   25da1:	nop    DWORD PTR [rax+0x0]
   25da8:	movzx  eax,BYTE PTR [rdi+0x1]
   25dac:	add    rdi,0x1
   25db0:	cmp    al,0x2f
   25db2:	je     25da8 <__sprintf_chk@plt+0x1b3f8>
   25db4:	test   al,al
   25db6:	je     25dea <__sprintf_chk@plt+0x1b43a>
   25db8:	mov    rdx,rdi
   25dbb:	xor    ecx,ecx
   25dbd:	jmp    25dd5 <__sprintf_chk@plt+0x1b425>
   25dbf:	nop
   25dc0:	test   cl,cl
   25dc2:	je     25dc9 <__sprintf_chk@plt+0x1b419>
   25dc4:	mov    rdi,rdx
   25dc7:	xor    ecx,ecx
   25dc9:	movzx  eax,BYTE PTR [rdx+0x1]
   25dcd:	add    rdx,0x1
   25dd1:	test   al,al
   25dd3:	je     25dea <__sprintf_chk@plt+0x1b43a>
   25dd5:	cmp    al,0x2f
   25dd7:	jne    25dc0 <__sprintf_chk@plt+0x1b410>
   25dd9:	movzx  eax,BYTE PTR [rdx+0x1]
   25ddd:	add    rdx,0x1
   25de1:	mov    ecx,0x1
   25de6:	test   al,al
   25de8:	jne    25dd5 <__sprintf_chk@plt+0x1b425>
   25dea:	mov    r14,rdi
   25ded:	call   a060 <strlen@plt>
   25df2:	sub    r14,r13
   25df5:	mov    rbx,QWORD PTR [rip+0x59afc]        # 7f8f8 <obstack_alloc_failed_handler@@Base+0xac0>
   25dfc:	add    rax,r14
   25dff:	mov    QWORD PTR [rsp+0x8],rax
   25e04:	test   rbx,rbx
   25e07:	je     26327 <__sprintf_chk@plt+0x1b977>
   25e0d:	mov    rdi,rbx
   25e10:	mov    r15d,0x9
   25e16:	call   a060 <strlen@plt>
   25e1b:	mov    rsi,QWORD PTR [rsp+0x8]
   25e20:	add    rax,0x1
   25e24:	cmp    rax,r15
   25e27:	lea    rdx,[rsi+0x1]
   25e2b:	mov    QWORD PTR [rsp+0x28],rax
   25e30:	cmovae r15,rax
   25e34:	mov    QWORD PTR [rsp],rdx
   25e38:	lea    rax,[r15+rdx*1]
   25e3c:	mov    rdi,rax
   25e3f:	mov    QWORD PTR [rsp+0x18],rax
   25e44:	call   a4a0 <malloc@plt>
   25e49:	mov    rbp,rax
   25e4c:	test   rax,rax
   25e4f:	je     26436 <__sprintf_chk@plt+0x1ba86>
   25e55:	mov    rdx,QWORD PTR [rsp]
   25e59:	mov    rsi,r13
   25e5c:	mov    rdi,rax
   25e5f:	call   a420 <memcpy@plt>
   25e64:	cmp    DWORD PTR [rsp+0x14],0x1
   25e69:	je     260e0 <__sprintf_chk@plt+0x1b730>
   25e6f:	lea    r13,[rbp+r14*1+0x0]
   25e74:	mov    rdi,r13
   25e77:	call   a060 <strlen@plt>
   25e7c:	mov    rbx,rax
   25e7f:	cmp    rbx,0x1
   25e83:	jbe    25e95 <__sprintf_chk@plt+0x1b4e5>
   25e85:	cmp    BYTE PTR [r13+rbx*1-0x1],0x2f
   25e8b:	lea    rax,[rbx-0x1]
   25e8f:	je     26440 <__sprintf_chk@plt+0x1ba90>
   25e95:	mov    esi,0x2e
   25e9a:	movzx  r15d,WORD PTR [r13+0x0]
   25e9f:	mov    edi,r12d
   25ea2:	xor    eax,eax
   25ea4:	mov    WORD PTR [r13+0x0],si
   25ea9:	mov    edx,0x90900
   25eae:	mov    rsi,rbp
   25eb1:	call   59ed0 <_obstack_memory_used@@Base+0xd250>
   25eb6:	lea    rdx,[r13+rbx*1+0x0]
   25ebb:	mov    DWORD PTR [rsp+0x34],eax
   25ebf:	mov    QWORD PTR [rsp],rdx
   25ec3:	test   eax,eax
   25ec5:	js     26450 <__sprintf_chk@plt+0x1baa0>
   25ecb:	mov    edi,DWORD PTR [rsp+0x34]
   25ecf:	call   a730 <fdopendir@plt>
   25ed4:	mov    rdx,QWORD PTR [rsp]
   25ed8:	test   rax,rax
   25edb:	mov    r12,rax
   25ede:	je     261d3 <__sprintf_chk@plt+0x1b823>
   25ee4:	lea    rax,[rbx+0x4]
   25ee8:	mov    WORD PTR [r13+0x0],r15w
   25eed:	mov    QWORD PTR [rsp+0x20],0x1
   25ef6:	mov    DWORD PTR [rdx],0x7e317e2e
   25efc:	mov    BYTE PTR [rdx+0x4],0x0
   25f00:	mov    DWORD PTR [rsp+0x30],0x2
   25f08:	mov    QWORD PTR [rsp],rax
   25f0c:	nop    DWORD PTR [rax+0x0]
   25f10:	mov    rdi,r12
   25f13:	call   a470 <readdir@plt>
   25f18:	test   rax,rax
   25f1b:	je     260c0 <__sprintf_chk@plt+0x1b710>
   25f21:	lea    r13,[rax+0x13]
   25f25:	mov    rdi,r13
   25f28:	call   a060 <strlen@plt>
   25f2d:	cmp    rax,QWORD PTR [rsp]
   25f31:	jb     25f10 <__sprintf_chk@plt+0x1b560>
   25f33:	lea    r15,[rbx+0x2]
   25f37:	lea    rdi,[rbp+r14*1+0x0]
   25f3c:	mov    rsi,r13
   25f3f:	mov    rdx,r15
   25f42:	call   a2c0 <memcmp@plt>
   25f47:	test   eax,eax
   25f49:	jne    25f10 <__sprintf_chk@plt+0x1b560>
   25f4b:	add    r13,r15
   25f4e:	movzx  eax,BYTE PTR [r13+0x0]
   25f53:	lea    edx,[rax-0x31]
   25f56:	cmp    dl,0x8
   25f59:	ja     25f10 <__sprintf_chk@plt+0x1b560>
   25f5b:	cmp    al,0x39
   25f5d:	movsx  eax,BYTE PTR [r13+0x1]
   25f62:	mov    r15d,0x1
   25f68:	sete   cl
   25f6b:	mov    edx,eax
   25f6d:	sub    eax,0x30
   25f70:	cmp    eax,0x9
   25f73:	ja     25f94 <__sprintf_chk@plt+0x1b5e4>
   25f75:	nop    DWORD PTR [rax]
   25f78:	cmp    dl,0x39
   25f7b:	sete   al
   25f7e:	add    r15,0x1
   25f82:	and    ecx,eax
   25f84:	movsx  eax,BYTE PTR [r13+r15*1+0x0]
   25f8a:	mov    edx,eax
   25f8c:	sub    eax,0x30
   25f8f:	cmp    eax,0x9
   25f92:	jbe    25f78 <__sprintf_chk@plt+0x1b5c8>
   25f94:	cmp    dl,0x7e
   25f97:	jne    25f10 <__sprintf_chk@plt+0x1b560>
   25f9d:	cmp    BYTE PTR [r13+r15*1+0x1],0x0
   25fa3:	jne    25f10 <__sprintf_chk@plt+0x1b560>
   25fa9:	cmp    r15,QWORD PTR [rsp+0x20]
   25fae:	ja     25fdc <__sprintf_chk@plt+0x1b62c>
   25fb0:	mov    BYTE PTR [rsp+0x38],cl
   25fb4:	jne    25f10 <__sprintf_chk@plt+0x1b560>
   25fba:	mov    rax,QWORD PTR [rsp+0x8]
   25fbf:	mov    rdx,r15
   25fc2:	mov    rsi,r13
   25fc5:	lea    rdi,[rbp+rax*1+0x2]
   25fca:	call   a2c0 <memcmp@plt>
   25fcf:	movzx  ecx,BYTE PTR [rsp+0x38]
   25fd4:	test   eax,eax
   25fd6:	jg     25f10 <__sprintf_chk@plt+0x1b560>
   25fdc:	movzx  edx,cl
   25fdf:	movzx  ecx,cl
   25fe2:	mov    DWORD PTR [rsp+0x30],ecx
   25fe6:	mov    rcx,QWORD PTR [rsp+0x8]
   25feb:	lea    rax,[r15+rdx*1]
   25fef:	mov    QWORD PTR [rsp+0x20],rax
   25ff4:	lea    rax,[rcx+rax*1+0x4]
   25ff9:	cmp    rax,QWORD PTR [rsp+0x18]
   25ffe:	jbe    26448 <__sprintf_chk@plt+0x1ba98>
   26004:	xor    ecx,ecx
   26006:	mov    rsi,rax
   26009:	test   rax,rax
   2600c:	sets   cl
   2600f:	add    rsi,rsi
   26012:	js     2640e <__sprintf_chk@plt+0x1ba5e>
   26018:	test   rcx,rcx
   2601b:	jne    2640e <__sprintf_chk@plt+0x1ba5e>
   26021:	mov    QWORD PTR [rsp+0x18],rsi
   26026:	mov    rsi,QWORD PTR [rsp+0x18]
   2602b:	mov    rdi,rbp
   2602e:	mov    QWORD PTR [rsp+0x38],rdx
   26033:	call   a570 <realloc@plt>
   26038:	mov    rdx,QWORD PTR [rsp+0x38]
   2603d:	test   rax,rax
   26040:	mov    r8,rax
   26043:	je     26418 <__sprintf_chk@plt+0x1ba68>
   26049:	mov    rax,QWORD PTR [rsp+0x8]
   2604e:	mov    ecx,0x7e2e
   26053:	mov    rsi,r13
   26056:	mov    QWORD PTR [rsp+0x38],r8
   2605b:	add    rax,r8
   2605e:	mov    WORD PTR [rax],cx
   26061:	lea    rcx,[rax+rdx*1+0x2]
   26066:	lea    rdx,[r15+0x2]
   2606a:	mov    BYTE PTR [rax+0x2],0x30
   2606e:	mov    rdi,rcx
   26071:	call   a420 <memcpy@plt>
   26076:	mov    r8,QWORD PTR [rsp+0x38]
   2607b:	mov    rcx,rax
   2607e:	add    rcx,r15
   26081:	movzx  edx,BYTE PTR [rcx-0x1]
   26085:	lea    rax,[rcx-0x1]
   26089:	cmp    dl,0x39
   2608c:	jne    260a0 <__sprintf_chk@plt+0x1b6f0>
   2608e:	xchg   ax,ax
   26090:	mov    BYTE PTR [rax],0x30
   26093:	movzx  edx,BYTE PTR [rax-0x1]
   26097:	sub    rax,0x1
   2609b:	cmp    dl,0x39
   2609e:	je     26090 <__sprintf_chk@plt+0x1b6e0>
   260a0:	add    edx,0x1
   260a3:	mov    rdi,r12
   260a6:	mov    rbp,r8
   260a9:	mov    BYTE PTR [rax],dl
   260ab:	call   a470 <readdir@plt>
   260b0:	test   rax,rax
   260b3:	jne    25f21 <__sprintf_chk@plt+0x1b571>
   260b9:	nop    DWORD PTR [rax+0x0]
   260c0:	mov    eax,DWORD PTR [rsp+0x30]
   260c4:	cmp    eax,0x2
   260c7:	je     26218 <__sprintf_chk@plt+0x1b868>
   260cd:	cmp    eax,0x1
   260d0:	je     26240 <__sprintf_chk@plt+0x1b890>
   260d6:	mov    rdi,r12
   260d9:	call   a250 <closedir@plt>
   260de:	jmp    260f5 <__sprintf_chk@plt+0x1b745>
   260e0:	mov    rdi,QWORD PTR [rsp+0x8]
   260e5:	mov    rdx,QWORD PTR [rsp+0x28]
   260ea:	mov    rsi,rbx
   260ed:	add    rdi,rbp
   260f0:	call   a420 <memcpy@plt>
   260f5:	mov    edi,DWORD PTR [rip+0x55f25]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   260fb:	mov    rsi,QWORD PTR [rip+0x59956]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   26102:	mov    rcx,rbp
   26105:	mov    QWORD PTR [rip+0x59944],rbp        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   2610c:	mov    edx,edi
   2610e:	call   a7d0 <renameat@plt>
   26113:	test   eax,eax
   26115:	jne    26140 <__sprintf_chk@plt+0x1b790>
   26117:	mov    eax,DWORD PTR [rip+0x58fa3]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   2611d:	test   eax,eax
   2611f:	jne    263ac <__sprintf_chk@plt+0x1b9fc>
   26125:	nop    DWORD PTR [rax]
   26128:	mov    eax,0x1
   2612d:	jmp    25d2c <__sprintf_chk@plt+0x1b37c>
   26132:	nop    WORD PTR [rax+rax*1+0x0]
   26138:	xor    eax,eax
   2613a:	jmp    25c8d <__sprintf_chk@plt+0x1b2dd>
   2613f:	nop
   26140:	call   9e40 <__errno_location@plt>
   26145:	mov    r13d,DWORD PTR [rax]
   26148:	mov    rax,QWORD PTR [rip+0x593b9]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2614f:	test   rax,rax
   26152:	je     2615d <__sprintf_chk@plt+0x1b7ad>
   26154:	call   rax
   26156:	mov    rbp,QWORD PTR [rip+0x598f3]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   2615d:	lea    rdx,[rip+0x55edc]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   26164:	mov    rsi,rbp
   26167:	mov    edi,0x1
   2616c:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   26171:	mov    rdi,QWORD PTR [rip+0x598e0]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   26178:	mov    rbx,rax
   2617b:	call   4b670 <argp_usage@@Base+0x82f0>
   26180:	mov    edx,0x5
   26185:	lea    rsi,[rip+0x3ed21]        # 64ead <_obstack_memory_used@@Base+0x1822d>
   2618c:	xor    edi,edi
   2618e:	mov    r12,rax
   26191:	call   a040 <dcgettext@plt>
   26196:	mov    r8,rbx
   26199:	mov    rcx,r12
   2619c:	mov    esi,r13d
   2619f:	mov    rdx,rax
   261a2:	xor    edi,edi
   261a4:	xor    eax,eax
   261a6:	call   a640 <error@plt>
   261ab:	mov    rdi,QWORD PTR [rip+0x5989e]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   261b2:	mov    DWORD PTR [rip+0x58f08],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   261bc:	call   9ce0 <free@plt>
   261c1:	xor    eax,eax
   261c3:	mov    QWORD PTR [rip+0x59882],0x0        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   261ce:	jmp    25d2c <__sprintf_chk@plt+0x1b37c>
   261d3:	call   9e40 <__errno_location@plt>
   261d8:	mov    edi,DWORD PTR [rsp+0x34]
   261dc:	mov    r12d,DWORD PTR [rax]
   261df:	mov    rbx,rax
   261e2:	call   a200 <close@plt>
   261e7:	mov    rdx,QWORD PTR [rsp]
   261eb:	mov    DWORD PTR [rbx],r12d
   261ee:	cmp    r12d,0xc
   261f2:	je     264ba <__sprintf_chk@plt+0x1bb0a>
   261f8:	mov    WORD PTR [r13+0x0],r15w
   261fd:	xor    r12d,r12d
   26200:	mov    DWORD PTR [rdx],0x7e317e2e
   26206:	mov    BYTE PTR [rdx+0x4],0x0
   2620a:	mov    DWORD PTR [rsp+0x34],0xffffffff
   26212:	nop    WORD PTR [rax+rax*1+0x0]
   26218:	cmp    DWORD PTR [rsp+0x14],0x2
   2621d:	jne    26240 <__sprintf_chk@plt+0x1b890>
   2621f:	mov    rax,QWORD PTR [rsp+0x8]
   26224:	mov    rdx,QWORD PTR [rsp+0x28]
   26229:	mov    rsi,QWORD PTR [rip+0x596c8]        # 7f8f8 <obstack_alloc_failed_handler@@Base+0xac0>
   26230:	lea    rdi,[rbp+rax*1+0x0]
   26235:	call   a420 <memcpy@plt>
   2623a:	nop    WORD PTR [rax+rax*1+0x0]
   26240:	movzx  eax,BYTE PTR [rbp+0x0]
   26244:	mov    rbx,rbp
   26247:	cmp    al,0x2f
   26249:	jne    2625c <__sprintf_chk@plt+0x1b8ac>
   2624b:	nop    DWORD PTR [rax+rax*1+0x0]
   26250:	movzx  eax,BYTE PTR [rbx+0x1]
   26254:	add    rbx,0x1
   26258:	cmp    al,0x2f
   2625a:	je     26250 <__sprintf_chk@plt+0x1b8a0>
   2625c:	test   al,al
   2625e:	je     26290 <__sprintf_chk@plt+0x1b8e0>
   26260:	mov    rdx,rbx
   26263:	xor    ecx,ecx
   26265:	jmp    26285 <__sprintf_chk@plt+0x1b8d5>
   26267:	nop    WORD PTR [rax+rax*1+0x0]
   26270:	test   cl,cl
   26272:	je     26279 <__sprintf_chk@plt+0x1b8c9>
   26274:	mov    rbx,rdx
   26277:	xor    ecx,ecx
   26279:	movzx  eax,BYTE PTR [rdx+0x1]
   2627d:	add    rdx,0x1
   26281:	test   al,al
   26283:	je     26290 <__sprintf_chk@plt+0x1b8e0>
   26285:	cmp    al,0x2f
   26287:	jne    26270 <__sprintf_chk@plt+0x1b8c0>
   26289:	mov    ecx,0x1
   2628e:	jmp    26279 <__sprintf_chk@plt+0x1b8c9>
   26290:	mov    rdi,rbx
   26293:	call   a060 <strlen@plt>
   26298:	mov    r13,rax
   2629b:	cmp    r13,0x1
   2629f:	jbe    26319 <__sprintf_chk@plt+0x1b969>
   262a1:	cmp    BYTE PTR [rbx+r13*1-0x1],0x2f
   262a7:	lea    rax,[r13-0x1]
   262ab:	je     2646e <__sprintf_chk@plt+0x1babe>
   262b1:	cmp    r13,0xe
   262b5:	jbe    26319 <__sprintf_chk@plt+0x1b969>
   262b7:	call   9e40 <__errno_location@plt>
   262bc:	cmp    DWORD PTR [rsp+0x34],0xffffffff
   262c1:	mov    r14,rax
   262c4:	je     2648a <__sprintf_chk@plt+0x1bada>
   262ca:	mov    DWORD PTR [rax],0x0
   262d0:	mov    edi,DWORD PTR [rsp+0x34]
   262d4:	mov    esi,0x3
   262d9:	call   a380 <fpathconf@plt>
   262de:	cmp    DWORD PTR [r14],0x1
   262e2:	sbb    rax,0x0
   262e6:	test   rax,rax
   262e9:	js     26476 <__sprintf_chk@plt+0x1bac6>
   262ef:	mov    rdx,rax
   262f2:	cmp    rax,r13
   262f5:	jae    26319 <__sprintf_chk@plt+0x1b969>
   262f7:	mov    rax,QWORD PTR [rsp+0x8]
   262fc:	add    rax,rbp
   262ff:	mov    rcx,rax
   26302:	sub    rcx,rbx
   26305:	cmp    rdx,rcx
   26308:	jbe    26464 <__sprintf_chk@plt+0x1bab4>
   2630e:	lea    rdx,[rcx+0x1]
   26312:	mov    BYTE PTR [rax],0x7e
   26315:	mov    BYTE PTR [rbx+rdx*1],0x0
   26319:	test   r12,r12
   2631c:	jne    260d6 <__sprintf_chk@plt+0x1b726>
   26322:	jmp    260f5 <__sprintf_chk@plt+0x1b745>
   26327:	lea    rdi,[rip+0x3eb57]        # 64e85 <_obstack_memory_used@@Base+0x18205>
   2632e:	lea    rbx,[rip+0x3ee13]        # 65148 <_obstack_memory_used@@Base+0x184c8>
   26335:	call   9d40 <getenv@plt>
   2633a:	test   rax,rax
   2633d:	je     263a0 <__sprintf_chk@plt+0x1b9f0>
   2633f:	movzx  edx,BYTE PTR [rax]
   26342:	test   dl,dl
   26344:	je     263a0 <__sprintf_chk@plt+0x1b9f0>
   26346:	mov    rbx,rax
   26349:	cmp    dl,0x2f
   2634c:	jne    26361 <__sprintf_chk@plt+0x1b9b1>
   2634e:	xchg   ax,ax
   26350:	movzx  edx,BYTE PTR [rbx+0x1]
   26354:	add    rbx,0x1
   26358:	cmp    dl,0x2f
   2635b:	je     26350 <__sprintf_chk@plt+0x1b9a0>
   2635d:	test   dl,dl
   2635f:	je     26392 <__sprintf_chk@plt+0x1b9e2>
   26361:	mov    rcx,rbx
   26364:	xor    esi,esi
   26366:	jmp    26386 <__sprintf_chk@plt+0x1b9d6>
   26368:	nop    DWORD PTR [rax+rax*1+0x0]
   26370:	test   sil,sil
   26373:	je     2637a <__sprintf_chk@plt+0x1b9ca>
   26375:	mov    rbx,rcx
   26378:	xor    esi,esi
   2637a:	movzx  edx,BYTE PTR [rcx+0x1]
   2637e:	add    rcx,0x1
   26382:	test   dl,dl
   26384:	je     26392 <__sprintf_chk@plt+0x1b9e2>
   26386:	cmp    dl,0x2f
   26389:	jne    26370 <__sprintf_chk@plt+0x1b9c0>
   2638b:	mov    esi,0x1
   26390:	jmp    2637a <__sprintf_chk@plt+0x1b9ca>
   26392:	cmp    rax,rbx
   26395:	lea    rax,[rip+0x3edac]        # 65148 <_obstack_memory_used@@Base+0x184c8>
   2639c:	cmovne rbx,rax
   263a0:	mov    QWORD PTR [rip+0x59551],rbx        # 7f8f8 <obstack_alloc_failed_handler@@Base+0xac0>
   263a7:	jmp    25e0d <__sprintf_chk@plt+0x1b45d>
   263ac:	lea    r12,[rip+0x55c8d]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   263b3:	mov    rsi,rbp
   263b6:	mov    edi,0x1
   263bb:	mov    rdx,r12
   263be:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   263c3:	mov    rsi,QWORD PTR [rip+0x5968e]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   263ca:	mov    rdx,r12
   263cd:	xor    edi,edi
   263cf:	mov    rbx,rax
   263d2:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   263d7:	xor    edi,edi
   263d9:	mov    edx,0x5
   263de:	lea    rsi,[rip+0x3eab5]        # 64e9a <_obstack_memory_used@@Base+0x1821a>
   263e5:	mov    r12,rax
   263e8:	call   a040 <dcgettext@plt>
   263ed:	mov    r8,rbx
   263f0:	mov    rcx,r12
   263f3:	mov    esi,0x1
   263f8:	mov    rdi,QWORD PTR [rip+0x58c99]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   263ff:	mov    rdx,rax
   26402:	xor    eax,eax
   26404:	call   a840 <__fprintf_chk@plt>
   26409:	jmp    26128 <__sprintf_chk@plt+0x1b778>
   2640e:	mov    QWORD PTR [rsp+0x18],rax
   26413:	jmp    26026 <__sprintf_chk@plt+0x1b676>
   26418:	mov    rdi,r12
   2641b:	call   a250 <closedir@plt>
   26420:	call   9e40 <__errno_location@plt>
   26425:	mov    rbx,rax
   26428:	mov    rdi,rbp
   2642b:	call   9ce0 <free@plt>
   26430:	mov    DWORD PTR [rbx],0xc
   26436:	call   19130 <__sprintf_chk@plt+0xe780>
   2643b:	nop    DWORD PTR [rax+rax*1+0x0]
   26440:	mov    rbx,rax
   26443:	jmp    25e7f <__sprintf_chk@plt+0x1b4cf>
   26448:	mov    r8,rbp
   2644b:	jmp    26049 <__sprintf_chk@plt+0x1b699>
   26450:	call   9e40 <__errno_location@plt>
   26455:	mov    rdx,QWORD PTR [rsp]
   26459:	mov    r12d,DWORD PTR [rax]
   2645c:	mov    rbx,rax
   2645f:	jmp    261ee <__sprintf_chk@plt+0x1b83e>
   26464:	lea    rax,[rbx+rdx*1-0x1]
   26469:	jmp    26312 <__sprintf_chk@plt+0x1b962>
   2646e:	mov    r13,rax
   26471:	jmp    2629b <__sprintf_chk@plt+0x1b8eb>
   26476:	mov    edx,0xe
   2647b:	cmp    rax,0xffffffffffffffff
   2647f:	jne    262f7 <__sprintf_chk@plt+0x1b947>
   26485:	jmp    26319 <__sprintf_chk@plt+0x1b969>
   2648a:	mov    edx,0x2e
   2648f:	movzx  r15d,WORD PTR [rbx]
   26493:	mov    esi,0x3
   26498:	mov    rdi,rbp
   2649b:	mov    WORD PTR [rbx],dx
   2649e:	mov    DWORD PTR [rax],0x0
   264a4:	call   9fc0 <pathconf@plt>
   264a9:	cmp    DWORD PTR [r14],0x1
   264ad:	mov    WORD PTR [rbx],r15w
   264b1:	sbb    rax,0x0
   264b5:	jmp    262e6 <__sprintf_chk@plt+0x1b936>
   264ba:	mov    WORD PTR [r13+0x0],r15w
   264bf:	mov    DWORD PTR [rdx],0x7e317e2e
   264c5:	mov    BYTE PTR [rdx+0x4],0x0
   264c9:	jmp    26428 <__sprintf_chk@plt+0x1ba78>
   264ce:	call   a0a0 <__stack_chk_fail@plt>
   264d3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   264de:	xchg   ax,ax
   264e0:	endbr64 
   264e4:	push   r13
   264e6:	push   r12
   264e8:	push   rbp
   264e9:	push   rbx
   264ea:	sub    rsp,0x8
   264ee:	mov    rbp,QWORD PTR [rip+0x5955b]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   264f5:	test   rbp,rbp
   264f8:	je     265b2 <__sprintf_chk@plt+0x1bc02>
   264fe:	mov    edi,DWORD PTR [rip+0x55b1c]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   26504:	mov    rcx,QWORD PTR [rip+0x5954d]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   2650b:	mov    rsi,rbp
   2650e:	mov    edx,edi
   26510:	call   a7d0 <renameat@plt>
   26515:	test   eax,eax
   26517:	je     26595 <__sprintf_chk@plt+0x1bbe5>
   26519:	call   9e40 <__errno_location@plt>
   2651e:	mov    r13d,DWORD PTR [rax]
   26521:	mov    rax,QWORD PTR [rip+0x58fe0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   26528:	test   rax,rax
   2652b:	je     26536 <__sprintf_chk@plt+0x1bb86>
   2652d:	call   rax
   2652f:	mov    rbp,QWORD PTR [rip+0x5951a]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   26536:	mov    rsi,QWORD PTR [rip+0x5951b]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   2653d:	lea    rdx,[rip+0x55afc]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   26544:	mov    edi,0x1
   26549:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2654e:	mov    rdi,rbp
   26551:	mov    rbx,rax
   26554:	call   4b670 <argp_usage@@Base+0x82f0>
   26559:	mov    edx,0x5
   2655e:	lea    rsi,[rip+0x3e948]        # 64ead <_obstack_memory_used@@Base+0x1822d>
   26565:	xor    edi,edi
   26567:	mov    r12,rax
   2656a:	call   a040 <dcgettext@plt>
   2656f:	mov    r8,rbx
   26572:	mov    rcx,r12
   26575:	mov    esi,r13d
   26578:	mov    rdx,rax
   2657b:	xor    edi,edi
   2657d:	xor    eax,eax
   2657f:	call   a640 <error@plt>
   26584:	mov    rbp,QWORD PTR [rip+0x594c5]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   2658b:	mov    DWORD PTR [rip+0x58b2f],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   26595:	mov    eax,DWORD PTR [rip+0x58b25]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   2659b:	test   eax,eax
   2659d:	jne    265c0 <__sprintf_chk@plt+0x1bc10>
   2659f:	mov    rdi,rbp
   265a2:	call   9ce0 <free@plt>
   265a7:	mov    QWORD PTR [rip+0x5949e],0x0        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   265b2:	add    rsp,0x8
   265b6:	pop    rbx
   265b7:	pop    rbp
   265b8:	pop    r12
   265ba:	pop    r13
   265bc:	ret    
   265bd:	nop    DWORD PTR [rax]
   265c0:	lea    r12,[rip+0x55a79]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   265c7:	mov    rsi,QWORD PTR [rip+0x5948a]        # 7fa58 <obstack_alloc_failed_handler@@Base+0xc20>
   265ce:	mov    edi,0x1
   265d3:	mov    rdx,r12
   265d6:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   265db:	mov    rdx,r12
   265de:	mov    rsi,rbp
   265e1:	xor    edi,edi
   265e3:	mov    rbx,rax
   265e6:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   265eb:	mov    edx,0x5
   265f0:	lea    rsi,[rip+0x3e8ce]        # 64ec5 <_obstack_memory_used@@Base+0x18245>
   265f7:	xor    edi,edi
   265f9:	mov    r12,rax
   265fc:	call   a040 <dcgettext@plt>
   26601:	mov    r8,rbx
   26604:	mov    rcx,r12
   26607:	mov    esi,0x1
   2660c:	mov    rdi,QWORD PTR [rip+0x58a85]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   26613:	mov    rdx,rax
   26616:	xor    eax,eax
   26618:	call   a840 <__fprintf_chk@plt>
   2661d:	mov    rbp,QWORD PTR [rip+0x5942c]        # 7fa50 <obstack_alloc_failed_handler@@Base+0xc18>
   26624:	jmp    2659f <__sprintf_chk@plt+0x1bbef>
   26629:	nop    DWORD PTR [rax+0x0]
   26630:	endbr64 
   26634:	push   r14
   26636:	mov    r14,rdx
   26639:	push   r13
   2663b:	mov    r13,rsi
   2663e:	push   r12
   26640:	push   rbp
   26641:	mov    ebp,edi
   26643:	sub    rsp,0x8
   26647:	call   4b7c0 <argp_usage@@Base+0x8440>
   2664c:	mov    r12,rax
   2664f:	cmp    rax,0xffffffffffffffff
   26653:	je     26668 <__sprintf_chk@plt+0x1bcb8>
   26655:	add    rsp,0x8
   26659:	mov    rax,r12
   2665c:	pop    rbp
   2665d:	pop    r12
   2665f:	pop    r13
   26661:	pop    r14
   26663:	ret    
   26664:	nop    DWORD PTR [rax+0x0]
   26668:	call   9e40 <__errno_location@plt>
   2666d:	cmp    DWORD PTR [rax],0xb
   26670:	jne    26655 <__sprintf_chk@plt+0x1bca5>
   26672:	xor    eax,eax
   26674:	mov    esi,0x3
   26679:	mov    edi,ebp
   2667b:	call   4c5c0 <argp_usage@@Base+0x9240>
   26680:	test   eax,eax
   26682:	js     26655 <__sprintf_chk@plt+0x1bca5>
   26684:	test   ah,0x8
   26687:	je     26655 <__sprintf_chk@plt+0x1bca5>
   26689:	and    ah,0xf7
   2668c:	mov    esi,0x4
   26691:	mov    edi,ebp
   26693:	mov    edx,eax
   26695:	xor    eax,eax
   26697:	call   4c5c0 <argp_usage@@Base+0x9240>
   2669c:	cmp    eax,0xffffffff
   2669f:	je     26655 <__sprintf_chk@plt+0x1bca5>
   266a1:	add    rsp,0x8
   266a5:	mov    rdx,r14
   266a8:	mov    rsi,r13
   266ab:	mov    edi,ebp
   266ad:	pop    rbp
   266ae:	pop    r12
   266b0:	pop    r13
   266b2:	pop    r14
   266b4:	jmp    4b7c0 <argp_usage@@Base+0x8440>
   266b9:	nop    DWORD PTR [rax+0x0]
   266c0:	endbr64 
   266c4:	push   r13
   266c6:	mov    r13,rsi
   266c9:	push   r12
   266cb:	push   rbp
   266cc:	mov    ebp,edi
   266ce:	push   rbx
   266cf:	mov    rbx,rdx
   266d2:	sub    rsp,0x8
   266d6:	call   48b10 <argp_usage@@Base+0x5790>
   266db:	mov    r12,rax
   266de:	cmp    rbx,rax
   266e1:	jbe    266ed <__sprintf_chk@plt+0x1bd3d>
   266e3:	call   9e40 <__errno_location@plt>
   266e8:	cmp    DWORD PTR [rax],0xb
   266eb:	je     26700 <__sprintf_chk@plt+0x1bd50>
   266ed:	add    rsp,0x8
   266f1:	mov    rax,r12
   266f4:	pop    rbx
   266f5:	pop    rbp
   266f6:	pop    r12
   266f8:	pop    r13
   266fa:	ret    
   266fb:	nop    DWORD PTR [rax+rax*1+0x0]
   26700:	xor    eax,eax
   26702:	mov    esi,0x3
   26707:	mov    edi,ebp
   26709:	call   4c5c0 <argp_usage@@Base+0x9240>
   2670e:	test   eax,eax
   26710:	js     266ed <__sprintf_chk@plt+0x1bd3d>
   26712:	test   ah,0x8
   26715:	je     266ed <__sprintf_chk@plt+0x1bd3d>
   26717:	and    ah,0xf7
   2671a:	mov    esi,0x4
   2671f:	mov    edi,ebp
   26721:	mov    edx,eax
   26723:	xor    eax,eax
   26725:	call   4c5c0 <argp_usage@@Base+0x9240>
   2672a:	cmp    eax,0xffffffff
   2672d:	je     266ed <__sprintf_chk@plt+0x1bd3d>
   2672f:	sub    rbx,r12
   26732:	lea    rsi,[r13+r12*1+0x0]
   26737:	mov    edi,ebp
   26739:	mov    rdx,rbx
   2673c:	call   48b10 <argp_usage@@Base+0x5790>
   26741:	add    r12,rax
   26744:	jmp    266ed <__sprintf_chk@plt+0x1bd3d>
   26746:	cs nop WORD PTR [rax+rax*1+0x0]
   26750:	endbr64 
   26754:	push   r13
   26756:	mov    r13,rdi
   26759:	push   r12
   2675b:	mov    r12,rsi
   2675e:	push   rbp
   2675f:	push   rbx
   26760:	mov    rbx,rdx
   26763:	sub    rsp,0x28
   26767:	mov    rax,QWORD PTR fs:0x28
   26770:	mov    QWORD PTR [rsp+0x18],rax
   26775:	xor    eax,eax
   26777:	cmp    BYTE PTR [rip+0x58d82],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   2677e:	je     26858 <__sprintf_chk@plt+0x1bea8>
   26784:	test   BYTE PTR [rip+0x558f3],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   2678b:	jne    267b0 <__sprintf_chk@plt+0x1be00>
   2678d:	mov    rax,QWORD PTR [rsp+0x18]
   26792:	sub    rax,QWORD PTR fs:0x28
   2679b:	jne    26905 <__sprintf_chk@plt+0x1bf55>
   267a1:	add    rsp,0x28
   267a5:	pop    rbx
   267a6:	pop    rbp
   267a7:	pop    r12
   267a9:	pop    r13
   267ab:	ret    
   267ac:	nop    DWORD PTR [rax+0x0]
   267b0:	call   9e40 <__errno_location@plt>
   267b5:	mov    ebp,DWORD PTR [rax]
   267b7:	mov    rax,QWORD PTR [rip+0x58d4a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   267be:	test   rax,rax
   267c1:	je     267c5 <__sprintf_chk@plt+0x1be15>
   267c3:	call   rax
   267c5:	mov    BYTE PTR [rsp+0x14],0x0
   267ca:	mov    rcx,r12
   267cd:	movabs rdi,0xcccccccccccccccd
   267d7:	lea    r12,[rsp+0x14]
   267dc:	nop    DWORD PTR [rax+0x0]
   267e0:	mov    rax,rcx
   267e3:	sub    r12,0x1
   267e7:	mul    rdi
   267ea:	mov    rax,rcx
   267ed:	shr    rdx,0x3
   267f1:	lea    rsi,[rdx+rdx*4]
   267f5:	add    rsi,rsi
   267f8:	sub    rax,rsi
   267fb:	add    eax,0x30
   267fe:	mov    BYTE PTR [r12],al
   26802:	mov    rax,rcx
   26805:	mov    rcx,rdx
   26808:	cmp    rax,0x9
   2680c:	ja     267e0 <__sprintf_chk@plt+0x1be30>
   2680e:	mov    rdi,r13
   26811:	call   4b670 <argp_usage@@Base+0x82f0>
   26816:	mov    rcx,rbx
   26819:	xor    edi,edi
   2681b:	mov    r8d,0x5
   26821:	lea    rdx,[rip+0x3ecf0]        # 65518 <_obstack_memory_used@@Base+0x18898>
   26828:	lea    rsi,[rip+0x3ed29]        # 65558 <_obstack_memory_used@@Base+0x188d8>
   2682f:	mov    r13,rax
   26832:	call   a6e0 <dcngettext@plt>
   26837:	mov    r9,rbx
   2683a:	mov    r8,r12
   2683d:	mov    rcx,r13
   26840:	mov    rdx,rax
   26843:	mov    esi,ebp
   26845:	xor    edi,edi
   26847:	xor    eax,eax
   26849:	call   a640 <error@plt>
   2684e:	jmp    2678d <__sprintf_chk@plt+0x1bddd>
   26853:	nop    DWORD PTR [rax+rax*1+0x0]
   26858:	call   9e40 <__errno_location@plt>
   2685d:	mov    ebp,DWORD PTR [rax]
   2685f:	mov    rax,QWORD PTR [rip+0x58ca2]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   26866:	test   rax,rax
   26869:	je     2686d <__sprintf_chk@plt+0x1bebd>
   2686b:	call   rax
   2686d:	mov    BYTE PTR [rsp+0x14],0x0
   26872:	mov    rcx,r12
   26875:	movabs rdi,0xcccccccccccccccd
   2687f:	lea    r12,[rsp+0x14]
   26884:	nop    DWORD PTR [rax+0x0]
   26888:	mov    rax,rcx
   2688b:	sub    r12,0x1
   2688f:	mul    rdi
   26892:	mov    rax,rcx
   26895:	shr    rdx,0x3
   26899:	lea    rsi,[rdx+rdx*4]
   2689d:	add    rsi,rsi
   268a0:	sub    rax,rsi
   268a3:	add    eax,0x30
   268a6:	mov    BYTE PTR [r12],al
   268aa:	mov    rax,rcx
   268ad:	mov    rcx,rdx
   268b0:	cmp    rax,0x9
   268b4:	ja     26888 <__sprintf_chk@plt+0x1bed8>
   268b6:	mov    rdi,r13
   268b9:	call   4b670 <argp_usage@@Base+0x82f0>
   268be:	mov    r8d,0x5
   268c4:	mov    rcx,rbx
   268c7:	xor    edi,edi
   268c9:	lea    rdx,[rip+0x3ecc8]        # 65598 <_obstack_memory_used@@Base+0x18918>
   268d0:	lea    rsi,[rip+0x3ecf9]        # 655d0 <_obstack_memory_used@@Base+0x18950>
   268d7:	mov    r13,rax
   268da:	call   a6e0 <dcngettext@plt>
   268df:	mov    r9,rbx
   268e2:	mov    r8,r12
   268e5:	mov    rcx,r13
   268e8:	mov    rdx,rax
   268eb:	mov    esi,ebp
   268ed:	xor    edi,edi
   268ef:	xor    eax,eax
   268f1:	call   a640 <error@plt>
   268f6:	mov    DWORD PTR [rip+0x587c4],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   26900:	jmp    2678d <__sprintf_chk@plt+0x1bddd>
   26905:	call   a0a0 <__stack_chk_fail@plt>
   2690a:	nop    WORD PTR [rax+rax*1+0x0]
   26910:	endbr64 
   26914:	push   r12
   26916:	push   rbp
   26917:	mov    rbp,rdi
   2691a:	push   rbx
   2691b:	mov    rbx,rdx
   2691e:	test   sil,sil
   26921:	jne    2692d <__sprintf_chk@plt+0x1bf7d>
   26923:	call   9e40 <__errno_location@plt>
   26928:	cmp    DWORD PTR [rax],0x2
   2692b:	je     26940 <__sprintf_chk@plt+0x1bf90>
   2692d:	mov    rdi,rbp
   26930:	mov    rax,rbx
   26933:	pop    rbx
   26934:	pop    rbp
   26935:	pop    r12
   26937:	jmp    rax
   26939:	nop    DWORD PTR [rax+0x0]
   26940:	test   BYTE PTR [rip+0x55735],0x40        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   26947:	je     26986 <__sprintf_chk@plt+0x1bfd6>
   26949:	mov    rax,QWORD PTR [rip+0x58bb8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   26950:	test   rax,rax
   26953:	je     26957 <__sprintf_chk@plt+0x1bfa7>
   26955:	call   rax
   26957:	mov    rdi,rbp
   2695a:	call   4b670 <argp_usage@@Base+0x82f0>
   2695f:	mov    edx,0x5
   26964:	lea    rsi,[rip+0x3ec9d]        # 65608 <_obstack_memory_used@@Base+0x18988>
   2696b:	xor    edi,edi
   2696d:	mov    r12,rax
   26970:	call   a040 <dcgettext@plt>
   26975:	mov    rcx,r12
   26978:	xor    esi,esi
   2697a:	xor    edi,edi
   2697c:	mov    rdx,rax
   2697f:	xor    eax,eax
   26981:	call   a640 <error@plt>
   26986:	mov    eax,DWORD PTR [rip+0x58738]        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2698c:	test   eax,eax
   2698e:	jg     2699a <__sprintf_chk@plt+0x1bfea>
   26990:	mov    DWORD PTR [rip+0x5872a],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2699a:	pop    rbx
   2699b:	pop    rbp
   2699c:	pop    r12
   2699e:	ret    
   2699f:	nop
   269a0:	endbr64 
   269a4:	push   r13
   269a6:	push   r12
   269a8:	push   rbp
   269a9:	mov    rbp,rdi
   269ac:	mov    edi,0x18
   269b1:	push   rbx
   269b2:	sub    rsp,0x8
   269b6:	call   a4a0 <malloc@plt>
   269bb:	test   rax,rax
   269be:	je     26a1a <__sprintf_chk@plt+0x1c06a>
   269c0:	mov    rdi,rbp
   269c3:	mov    r12,rax
   269c6:	call   a060 <strlen@plt>
   269cb:	lea    rdi,[rax+0x2]
   269cf:	mov    rbx,rax
   269d2:	mov    QWORD PTR [r12+0x8],rdi
   269d7:	call   a4a0 <malloc@plt>
   269dc:	test   rax,rax
   269df:	je     26a1a <__sprintf_chk@plt+0x1c06a>
   269e1:	mov    QWORD PTR [r12],rax
   269e5:	lea    r13,[rbx+0x1]
   269e9:	mov    rsi,rbp
   269ec:	mov    rdi,rax
   269ef:	mov    rdx,r13
   269f2:	call   a420 <memcpy@plt>
   269f7:	mov    QWORD PTR [r12+0x10],rbx
   269fc:	cmp    BYTE PTR [rax+rbx*1-0x1],0x2f
   26a01:	je     26a0c <__sprintf_chk@plt+0x1c05c>
   26a03:	mov    QWORD PTR [r12+0x10],r13
   26a08:	mov    BYTE PTR [rax+rbx*1],0x2f
   26a0c:	add    rsp,0x8
   26a10:	mov    rax,r12
   26a13:	pop    rbx
   26a14:	pop    rbp
   26a15:	pop    r12
   26a17:	pop    r13
   26a19:	ret    
   26a1a:	call   19130 <__sprintf_chk@plt+0xe780>
   26a1f:	nop
   26a20:	endbr64 
   26a24:	push   r13
   26a26:	mov    r13,rdi
   26a29:	mov    rdi,rsi
   26a2c:	push   r12
   26a2e:	push   rbp
   26a2f:	mov    rbp,rsi
   26a32:	push   rbx
   26a33:	sub    rsp,0x8
   26a37:	call   a060 <strlen@plt>
   26a3c:	mov    rsi,QWORD PTR [r13+0x8]
   26a40:	mov    rdi,QWORD PTR [r13+0x0]
   26a44:	mov    rbx,rax
   26a47:	mov    rax,QWORD PTR [r13+0x10]
   26a4b:	lea    rdx,[rax+rbx*1+0x1]
   26a50:	cmp    rdx,rsi
   26a53:	jb     26ac0 <__sprintf_chk@plt+0x1c110>
   26a55:	movabs r12,0x5555555555555553
   26a5f:	jmp    26a9f <__sprintf_chk@plt+0x1c0ef>
   26a61:	nop    DWORD PTR [rax+0x0]
   26a68:	cmp    rsi,r12
   26a6b:	ja     26aab <__sprintf_chk@plt+0x1c0fb>
   26a6d:	mov    rax,rsi
   26a70:	shr    rax,1
   26a73:	lea    rsi,[rsi+rax*1+0x1]
   26a78:	mov    QWORD PTR [r13+0x8],rsi
   26a7c:	call   a570 <realloc@plt>
   26a81:	mov    rdi,rax
   26a84:	test   rax,rax
   26a87:	je     26aab <__sprintf_chk@plt+0x1c0fb>
   26a89:	mov    rax,QWORD PTR [r13+0x10]
   26a8d:	mov    rsi,QWORD PTR [r13+0x8]
   26a91:	mov    QWORD PTR [r13+0x0],rdi
   26a95:	lea    rdx,[rax+rbx*1+0x1]
   26a9a:	cmp    rdx,rsi
   26a9d:	jb     26ac0 <__sprintf_chk@plt+0x1c110>
   26a9f:	test   rdi,rdi
   26aa2:	jne    26a68 <__sprintf_chk@plt+0x1c0b8>
   26aa4:	test   rsi,rsi
   26aa7:	je     26ab0 <__sprintf_chk@plt+0x1c100>
   26aa9:	jns    26a78 <__sprintf_chk@plt+0x1c0c8>
   26aab:	call   19130 <__sprintf_chk@plt+0xe780>
   26ab0:	mov    esi,0x80
   26ab5:	jmp    26a78 <__sprintf_chk@plt+0x1c0c8>
   26ab7:	nop    WORD PTR [rax+rax*1+0x0]
   26ac0:	mov    rsi,rbp
   26ac3:	add    rdi,rax
   26ac6:	call   9e80 <strcpy@plt>
   26acb:	mov    rax,QWORD PTR [r13+0x0]
   26acf:	add    rsp,0x8
   26ad3:	pop    rbx
   26ad4:	pop    rbp
   26ad5:	pop    r12
   26ad7:	pop    r13
   26ad9:	ret    
   26ada:	nop    WORD PTR [rax+rax*1+0x0]
   26ae0:	endbr64 
   26ae4:	push   r14
   26ae6:	push   r13
   26ae8:	mov    r13d,esi
   26aeb:	mov    rsi,rdi
   26aee:	push   r12
   26af0:	push   rbp
   26af1:	mov    rbp,rdi
   26af4:	sub    rsp,0x8
   26af8:	mov    edx,DWORD PTR [rip+0x58472]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   26afe:	mov    edi,DWORD PTR [rip+0x5551c]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   26b04:	or     edx,0x10000
   26b0a:	call   a230 <__openat_2@plt>
   26b0f:	test   eax,eax
   26b11:	jns    26b48 <__sprintf_chk@plt+0x1c198>
   26b13:	test   r13d,r13d
   26b16:	jne    26b22 <__sprintf_chk@plt+0x1c172>
   26b18:	call   9e40 <__errno_location@plt>
   26b1d:	cmp    DWORD PTR [rax],0x2
   26b20:	je     26b31 <__sprintf_chk@plt+0x1c181>
   26b22:	mov    rsi,rbp
   26b25:	lea    rdi,[rip+0x3c694]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   26b2c:	call   3bad0 <__sprintf_chk@plt+0x31120>
   26b31:	xor    r13d,r13d
   26b34:	add    rsp,0x8
   26b38:	mov    rax,r13
   26b3b:	pop    rbp
   26b3c:	pop    r12
   26b3e:	pop    r13
   26b40:	pop    r14
   26b42:	ret    
   26b43:	nop    DWORD PTR [rax+rax*1+0x0]
   26b48:	mov    edi,eax
   26b4a:	mov    r12d,eax
   26b4d:	call   a730 <fdopendir@plt>
   26b52:	mov    r13,rax
   26b55:	test   rax,rax
   26b58:	je     26b90 <__sprintf_chk@plt+0x1c1e0>
   26b5a:	mov    esi,DWORD PTR [rip+0x58c0c]        # 7f76c <obstack_alloc_failed_handler@@Base+0x934>
   26b60:	mov    rdi,rax
   26b63:	call   4b830 <argp_usage@@Base+0x84b0>
   26b68:	mov    r12,rax
   26b6b:	test   rax,rax
   26b6e:	je     26bd0 <__sprintf_chk@plt+0x1c220>
   26b70:	mov    rdi,r13
   26b73:	mov    r13,r12
   26b76:	call   a250 <closedir@plt>
   26b7b:	test   eax,eax
   26b7d:	je     26b34 <__sprintf_chk@plt+0x1c184>
   26b7f:	lea    r14,[rip+0x3d7e9]        # 6436f <_obstack_memory_used@@Base+0x176ef>
   26b86:	jmp    26bae <__sprintf_chk@plt+0x1c1fe>
   26b88:	nop    DWORD PTR [rax+rax*1+0x0]
   26b90:	lea    r14,[rip+0x3d7d8]        # 6436f <_obstack_memory_used@@Base+0x176ef>
   26b97:	mov    rsi,rbp
   26b9a:	mov    rdi,r14
   26b9d:	call   3bad0 <__sprintf_chk@plt+0x31120>
   26ba2:	mov    edi,r12d
   26ba5:	call   a200 <close@plt>
   26baa:	test   eax,eax
   26bac:	je     26b31 <__sprintf_chk@plt+0x1c181>
   26bae:	mov    rsi,rbp
   26bb1:	mov    rdi,r14
   26bb4:	call   3bad0 <__sprintf_chk@plt+0x31120>
   26bb9:	add    rsp,0x8
   26bbd:	mov    rax,r13
   26bc0:	pop    rbp
   26bc1:	pop    r12
   26bc3:	pop    r13
   26bc5:	pop    r14
   26bc7:	ret    
   26bc8:	nop    DWORD PTR [rax+rax*1+0x0]
   26bd0:	lea    r14,[rip+0x3d798]        # 6436f <_obstack_memory_used@@Base+0x176ef>
   26bd7:	mov    rsi,rbp
   26bda:	mov    rdi,r14
   26bdd:	call   3bad0 <__sprintf_chk@plt+0x31120>
   26be2:	jmp    26b70 <__sprintf_chk@plt+0x1c1c0>
   26be4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   26bef:	nop
   26bf0:	endbr64 
   26bf4:	push   r15
   26bf6:	xor    edx,edx
   26bf8:	push   r14
   26bfa:	push   r13
   26bfc:	push   r12
   26bfe:	mov    r12d,esi
   26c01:	mov    rsi,rdi
   26c04:	push   rbp
   26c05:	mov    rbp,rdi
   26c08:	push   rbx
   26c09:	sub    rsp,0x18
   26c0d:	mov    edi,DWORD PTR [rip+0x5540d]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   26c13:	call   9ee0 <unlinkat@plt>
   26c18:	test   eax,eax
   26c1a:	je     26d08 <__sprintf_chk@plt+0x1c358>
   26c20:	call   9e40 <__errno_location@plt>
   26c25:	mov    rbx,rax
   26c28:	mov    eax,DWORD PTR [rax]
   26c2a:	cmp    eax,0x1
   26c2d:	je     26c48 <__sprintf_chk@plt+0x1c298>
   26c2f:	cmp    eax,0x15
   26c32:	je     26c48 <__sprintf_chk@plt+0x1c298>
   26c34:	xor    eax,eax
   26c36:	add    rsp,0x18
   26c3a:	pop    rbx
   26c3b:	pop    rbp
   26c3c:	pop    r12
   26c3e:	pop    r13
   26c40:	pop    r14
   26c42:	pop    r15
   26c44:	ret    
   26c45:	nop    DWORD PTR [rax]
   26c48:	mov    rdi,rbp
   26c4b:	call   25ac0 <__sprintf_chk@plt+0x1b110>
   26c50:	test   eax,eax
   26c52:	je     26d08 <__sprintf_chk@plt+0x1c358>
   26c58:	mov    edx,DWORD PTR [rbx]
   26c5a:	xor    eax,eax
   26c5c:	cmp    edx,0x27
   26c5f:	ja     26c36 <__sprintf_chk@plt+0x1c286>
   26c61:	movabs rcx,0x8000020001
   26c6b:	bt     rcx,rdx
   26c6f:	jae    26c36 <__sprintf_chk@plt+0x1c286>
   26c71:	cmp    r12d,0x1
   26c75:	jne    26c34 <__sprintf_chk@plt+0x1c284>
   26c77:	xor    esi,esi
   26c79:	mov    rdi,rbp
   26c7c:	call   26ae0 <__sprintf_chk@plt+0x1c130>
   26c81:	mov    r13,rax
   26c84:	test   rax,rax
   26c87:	je     26c34 <__sprintf_chk@plt+0x1c284>
   26c89:	mov    r14,rax
   26c8c:	mov    rdi,r14
   26c8f:	call   a060 <strlen@plt>
   26c94:	mov    r12,rax
   26c97:	test   rax,rax
   26c9a:	je     26ce6 <__sprintf_chk@plt+0x1c336>
   26c9c:	mov    rsi,r14
   26c9f:	mov    rdi,rbp
   26ca2:	call   322b0 <__sprintf_chk@plt+0x27900>
   26ca7:	mov    esi,0x1
   26cac:	mov    rdi,rax
   26caf:	mov    r15,rax
   26cb2:	call   26bf0 <__sprintf_chk@plt+0x1c240>
   26cb7:	mov    rdi,r15
   26cba:	mov    DWORD PTR [rsp+0x8],eax
   26cbe:	mov    eax,DWORD PTR [rbx]
   26cc0:	mov    DWORD PTR [rsp+0xc],eax
   26cc4:	call   9ce0 <free@plt>
   26cc9:	mov    eax,DWORD PTR [rsp+0x8]
   26ccd:	test   eax,eax
   26ccf:	je     26d1c <__sprintf_chk@plt+0x1c36c>
   26cd1:	lea    r14,[r14+r12*1+0x1]
   26cd6:	mov    rdi,r14
   26cd9:	call   a060 <strlen@plt>
   26cde:	mov    r12,rax
   26ce1:	test   rax,rax
   26ce4:	jne    26c9c <__sprintf_chk@plt+0x1c2ec>
   26ce6:	mov    rdi,r13
   26ce9:	call   9ce0 <free@plt>
   26cee:	mov    rdi,rbp
   26cf1:	call   25ac0 <__sprintf_chk@plt+0x1b110>
   26cf6:	test   eax,eax
   26cf8:	sete   al
   26cfb:	movzx  eax,al
   26cfe:	jmp    26c36 <__sprintf_chk@plt+0x1c286>
   26d03:	nop    DWORD PTR [rax+rax*1+0x0]
   26d08:	add    rsp,0x18
   26d0c:	mov    eax,0x1
   26d11:	pop    rbx
   26d12:	pop    rbp
   26d13:	pop    r12
   26d15:	pop    r13
   26d17:	pop    r14
   26d19:	pop    r15
   26d1b:	ret    
   26d1c:	mov    rdi,r13
   26d1f:	call   9ce0 <free@plt>
   26d24:	mov    eax,DWORD PTR [rsp+0xc]
   26d28:	mov    DWORD PTR [rbx],eax
   26d2a:	mov    eax,DWORD PTR [rsp+0x8]
   26d2e:	jmp    26c36 <__sprintf_chk@plt+0x1c286>
   26d33:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   26d3e:	xchg   ax,ax
   26d40:	endbr64 
   26d44:	movsxd rax,edi
   26d47:	push   r12
   26d49:	lea    rdx,[rax+rax*2]
   26d4d:	push   rbp
   26d4e:	push   rbx
   26d4f:	mov    rbx,rax
   26d52:	mov    rax,QWORD PTR [rip+0x58baf]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   26d59:	lea    r12,[rax+rdx*8]
   26d5d:	mov    ebp,DWORD PTR [r12+0x10]
   26d62:	test   ebp,ebp
   26d64:	jne    26dbb <__sprintf_chk@plt+0x1c40b>
   26d66:	mov    rsi,QWORD PTR [r12]
   26d6a:	cmp    BYTE PTR [rsi],0x2f
   26d6d:	jne    26e00 <__sprintf_chk@plt+0x1c450>
   26d73:	mov    edx,DWORD PTR [rip+0x58a7f]        # 7f7f8 <obstack_alloc_failed_handler@@Base+0x9c0>
   26d79:	mov    edi,DWORD PTR [rip+0x552a1]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   26d7f:	and    edx,0xfffdffff
   26d85:	call   a230 <__openat_2@plt>
   26d8a:	mov    ebp,eax
   26d8c:	test   eax,eax
   26d8e:	js     26e8a <__sprintf_chk@plt+0x1c4da>
   26d94:	mov    rax,QWORD PTR [rip+0x58ca5]        # 7fa40 <obstack_alloc_failed_handler@@Base+0xc08>
   26d9b:	mov    DWORD PTR [r12+0x10],ebp
   26da0:	cmp    rax,0xf
   26da4:	ja     26e20 <__sprintf_chk@plt+0x1c470>
   26da6:	lea    rdx,[rax+0x1]
   26daa:	mov    QWORD PTR [rip+0x58c8f],rdx        # 7fa40 <obstack_alloc_failed_handler@@Base+0xc08>
   26db1:	lea    rdx,[rip+0x58c48]        # 7fa00 <obstack_alloc_failed_handler@@Base+0xbc8>
   26db8:	mov    DWORD PTR [rdx+rax*4],ebx
   26dbb:	test   ebp,ebp
   26dbd:	jle    26de5 <__sprintf_chk@plt+0x1c435>
   26dbf:	mov    edx,DWORD PTR [rip+0x58c3b]        # 7fa00 <obstack_alloc_failed_handler@@Base+0xbc8>
   26dc5:	cmp    ebx,edx
   26dc7:	je     26ddf <__sprintf_chk@plt+0x1c42f>
   26dc9:	lea    rax,[rip+0x58c34]        # 7fa04 <obstack_alloc_failed_handler@@Base+0xbcc>
   26dd0:	mov    ecx,edx
   26dd2:	mov    edx,DWORD PTR [rax]
   26dd4:	add    rax,0x4
   26dd8:	mov    DWORD PTR [rax-0x4],ecx
   26ddb:	cmp    ebx,edx
   26ddd:	jne    26dd0 <__sprintf_chk@plt+0x1c420>
   26ddf:	mov    DWORD PTR [rip+0x58c1b],ebx        # 7fa00 <obstack_alloc_failed_handler@@Base+0xbc8>
   26de5:	mov    DWORD PTR [rip+0x589dd],ebx        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   26deb:	pop    rbx
   26dec:	mov    DWORD PTR [rip+0x5522e],ebp        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   26df2:	pop    rbp
   26df3:	pop    r12
   26df5:	ret    
   26df6:	cs nop WORD PTR [rax+rax*1+0x0]
   26e00:	lea    edi,[rbx-0x1]
   26e03:	cmp    edi,DWORD PTR [rip+0x589bf]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   26e09:	je     26d73 <__sprintf_chk@plt+0x1c3c3>
   26e0f:	call   26d40 <__sprintf_chk@plt+0x1c390>
   26e14:	mov    rsi,QWORD PTR [r12]
   26e18:	jmp    26d73 <__sprintf_chk@plt+0x1c3c3>
   26e1d:	nop    DWORD PTR [rax]
   26e20:	movsxd rax,DWORD PTR [rip+0x58c15]        # 7fa3c <obstack_alloc_failed_handler@@Base+0xc04>
   26e27:	lea    rdx,[rax+rax*2]
   26e2b:	mov    rax,QWORD PTR [rip+0x58ad6]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   26e32:	lea    r12,[rax+rdx*8]
   26e36:	mov    edi,DWORD PTR [r12+0x10]
   26e3b:	call   a200 <close@plt>
   26e40:	test   eax,eax
   26e42:	jne    26e58 <__sprintf_chk@plt+0x1c4a8>
   26e44:	mov    DWORD PTR [r12+0x10],0x0
   26e4d:	mov    DWORD PTR [rip+0x58be9],ebx        # 7fa3c <obstack_alloc_failed_handler@@Base+0xc04>
   26e53:	jmp    26dbb <__sprintf_chk@plt+0x1c40b>
   26e58:	cmp    BYTE PTR [rip+0x586a1],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   26e5f:	mov    rsi,QWORD PTR [r12]
   26e63:	je     26e7c <__sprintf_chk@plt+0x1c4cc>
   26e65:	test   BYTE PTR [rip+0x55212],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   26e6c:	je     26e44 <__sprintf_chk@plt+0x1c494>
   26e6e:	lea    rdi,[rip+0x3fbe7]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   26e75:	call   3c100 <__sprintf_chk@plt+0x31750>
   26e7a:	jmp    26e44 <__sprintf_chk@plt+0x1c494>
   26e7c:	lea    rdi,[rip+0x3fbd9]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   26e83:	call   3bad0 <__sprintf_chk@plt+0x31120>
   26e88:	jmp    26e44 <__sprintf_chk@plt+0x1c494>
   26e8a:	mov    rdi,QWORD PTR [r12]
   26e8e:	call   3c420 <__sprintf_chk@plt+0x31a70>
   26e93:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   26e9e:	xchg   ax,ax
   26ea0:	endbr64 
   26ea4:	push   r15
   26ea6:	push   r14
   26ea8:	push   r13
   26eaa:	push   r12
   26eac:	push   rbp
   26ead:	mov    rbp,rsi
   26eb0:	push   rbx
   26eb1:	sub    rsp,0x18
   26eb5:	cmp    BYTE PTR [rsi],0x2f
   26eb8:	je     26f60 <__sprintf_chk@plt+0x1c5b0>
   26ebe:	mov    rax,QWORD PTR [rip+0x58a43]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   26ec5:	test   rax,rax
   26ec8:	je     26f90 <__sprintf_chk@plt+0x1c5e0>
   26ece:	movsxd rdx,edi
   26ed1:	mov    ebx,edi
   26ed3:	lea    r13,[rdx+rdx*2]
   26ed7:	lea    rcx,[r13*8+0x0]
   26edf:	mov    r15,QWORD PTR [rax+rcx*1+0x8]
   26ee4:	mov    QWORD PTR [rsp],rcx
   26ee8:	test   r15,r15
   26eeb:	je     26fc8 <__sprintf_chk@plt+0x1c618>
   26ef1:	mov    rdi,r15
   26ef4:	call   a060 <strlen@plt>
   26ef9:	mov    rdi,rbp
   26efc:	lea    r13,[rax+0x1]
   26f00:	mov    rbx,rax
   26f03:	call   a060 <strlen@plt>
   26f08:	lea    r14,[rax+0x1]
   26f0c:	lea    rdi,[r14+r13*1]
   26f10:	call   a4a0 <malloc@plt>
   26f15:	mov    r12,rax
   26f18:	test   rax,rax
   26f1b:	je     271a9 <__sprintf_chk@plt+0x1c7f9>
   26f21:	mov    rdx,rbx
   26f24:	mov    rsi,r15
   26f27:	mov    rdi,rax
   26f2a:	call   a420 <memcpy@plt>
   26f2f:	mov    BYTE PTR [r12+rbx*1],0x2f
   26f34:	mov    rdx,r14
   26f37:	mov    rsi,rbp
   26f3a:	lea    rdi,[r12+r13*1]
   26f3e:	call   a420 <memcpy@plt>
   26f43:	mov    rdi,r12
   26f46:	call   254c0 <__sprintf_chk@plt+0x1ab10>
   26f4b:	add    rsp,0x18
   26f4f:	mov    rax,r12
   26f52:	pop    rbx
   26f53:	pop    rbp
   26f54:	pop    r12
   26f56:	pop    r13
   26f58:	pop    r14
   26f5a:	pop    r15
   26f5c:	ret    
   26f5d:	nop    DWORD PTR [rax]
   26f60:	mov    rdi,rsi
   26f63:	call   a060 <strlen@plt>
   26f68:	lea    r12,[rax+0x1]
   26f6c:	mov    rdi,r12
   26f6f:	call   a4a0 <malloc@plt>
   26f74:	mov    rdi,rax
   26f77:	test   rax,rax
   26f7a:	je     271a9 <__sprintf_chk@plt+0x1c7f9>
   26f80:	mov    rdx,r12
   26f83:	mov    rsi,rbp
   26f86:	call   a420 <memcpy@plt>
   26f8b:	mov    r12,rax
   26f8e:	jmp    26f43 <__sprintf_chk@plt+0x1c593>
   26f90:	mov    r15,QWORD PTR [rip+0x58ac9]        # 7fa60 <obstack_alloc_failed_handler@@Base+0xc28>
   26f97:	test   r15,r15
   26f9a:	jne    26ef1 <__sprintf_chk@plt+0x1c541>
   26fa0:	xor    esi,esi
   26fa2:	xor    edi,edi
   26fa4:	call   a1f0 <getcwd@plt>
   26fa9:	mov    r15,rax
   26fac:	test   rax,rax
   26faf:	je     27170 <__sprintf_chk@plt+0x1c7c0>
   26fb5:	mov    QWORD PTR [rip+0x58aa4],rax        # 7fa60 <obstack_alloc_failed_handler@@Base+0xc28>
   26fbc:	jmp    26ef1 <__sprintf_chk@plt+0x1c541>
   26fc1:	nop    DWORD PTR [rax+0x0]
   26fc8:	mov    ecx,DWORD PTR [rip+0x587fa]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   26fce:	mov    edx,edi
   26fd0:	mov    DWORD PTR [rsp+0xc],ecx
   26fd4:	mov    rcx,QWORD PTR [rsp]
   26fd8:	lea    rax,[rax+rcx*1-0x10]
   26fdd:	test   edi,edi
   26fdf:	js     271a0 <__sprintf_chk@plt+0x1c7f0>
   26fe5:	nop    DWORD PTR [rax]
   26fe8:	mov    r14d,edx
   26feb:	lea    edx,[rdx-0x1]
   26fee:	test   r14d,r14d
   26ff1:	je     27007 <__sprintf_chk@plt+0x1c657>
   26ff3:	sub    rax,0x18
   26ff7:	cmp    QWORD PTR [rax+0x18],0x0
   26ffc:	je     26fe8 <__sprintf_chk@plt+0x1c638>
   26ffe:	cmp    ebx,r14d
   27001:	jl     26ef1 <__sprintf_chk@plt+0x1c541>
   27007:	mov    eax,DWORD PTR [rsp+0xc]
   2700b:	jmp    270a9 <__sprintf_chk@plt+0x1c6f9>
   27010:	movsxd rax,r14d
   27013:	lea    rax,[rax+rax*2]
   27017:	shl    rax,0x3
   2701b:	lea    r12,[r15+rax*1]
   2701f:	mov    r13,QWORD PTR [r12]
   27023:	cmp    BYTE PTR [r13+0x0],0x2f
   27028:	je     27110 <__sprintf_chk@plt+0x1c760>
   2702e:	mov    rdi,QWORD PTR [r15+rax*1-0x10]
   27033:	call   269a0 <__sprintf_chk@plt+0x1bff0>
   27038:	mov    r15,QWORD PTR [r12]
   2703c:	mov    rdx,QWORD PTR [rax]
   2703f:	mov    r13,rax
   27042:	mov    rax,QWORD PTR [rax+0x10]
   27046:	cmp    BYTE PTR [rdx+rax*1-0x1],0x2f
   2704b:	je     27061 <__sprintf_chk@plt+0x1c6b1>
   2704d:	lea    rsi,[rip+0x55259]        # 7c2ad <_obstack_memory_used@@Base+0x2f62d>
   27054:	mov    rdi,r13
   27057:	call   26a20 <__sprintf_chk@plt+0x1c070>
   2705c:	add    QWORD PTR [r13+0x10],0x1
   27061:	mov    rsi,r15
   27064:	mov    rdi,r13
   27067:	call   26a20 <__sprintf_chk@plt+0x1c070>
   2706c:	mov    rdi,r15
   2706f:	call   a060 <strlen@plt>
   27074:	mov    r15,QWORD PTR [r13+0x0]
   27078:	add    rax,QWORD PTR [r13+0x10]
   2707c:	mov    QWORD PTR [r13+0x10],rax
   27080:	cmp    BYTE PTR [r15+rax*1-0x1],0x2f
   27086:	jne    2708d <__sprintf_chk@plt+0x1c6dd>
   27088:	mov    BYTE PTR [r15+rax*1],0x0
   2708d:	mov    rdi,r13
   27090:	add    r14d,0x1
   27094:	call   9ce0 <free@plt>
   27099:	mov    QWORD PTR [r12+0x8],r15
   2709e:	mov    eax,DWORD PTR [rip+0x58724]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   270a4:	cmp    ebx,r14d
   270a7:	jl     270e9 <__sprintf_chk@plt+0x1c739>
   270a9:	cmp    r14d,eax
   270ac:	je     270b6 <__sprintf_chk@plt+0x1c706>
   270ae:	mov    edi,r14d
   270b1:	call   26d40 <__sprintf_chk@plt+0x1c390>
   270b6:	mov    r15,QWORD PTR [rip+0x5884b]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   270bd:	test   r14d,r14d
   270c0:	jne    27010 <__sprintf_chk@plt+0x1c660>
   270c6:	xor    esi,esi
   270c8:	xor    edi,edi
   270ca:	call   a1f0 <getcwd@plt>
   270cf:	test   rax,rax
   270d2:	je     27148 <__sprintf_chk@plt+0x1c798>
   270d4:	mov    r14d,0x1
   270da:	mov    QWORD PTR [r15+0x8],rax
   270de:	mov    eax,DWORD PTR [rip+0x586e4]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   270e4:	cmp    ebx,r14d
   270e7:	jge    270a9 <__sprintf_chk@plt+0x1c6f9>
   270e9:	cmp    DWORD PTR [rsp+0xc],eax
   270ed:	je     270f8 <__sprintf_chk@plt+0x1c748>
   270ef:	mov    edi,DWORD PTR [rsp+0xc]
   270f3:	call   26d40 <__sprintf_chk@plt+0x1c390>
   270f8:	mov    rax,QWORD PTR [rip+0x58809]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   270ff:	mov    rcx,QWORD PTR [rsp]
   27103:	mov    r15,QWORD PTR [rax+rcx*1+0x8]
   27108:	jmp    26ef1 <__sprintf_chk@plt+0x1c541>
   2710d:	nop    DWORD PTR [rax]
   27110:	mov    rdi,r13
   27113:	call   a060 <strlen@plt>
   27118:	lea    r15,[rax+0x1]
   2711c:	mov    rdi,r15
   2711f:	call   a4a0 <malloc@plt>
   27124:	mov    rdi,rax
   27127:	test   rax,rax
   2712a:	je     271a9 <__sprintf_chk@plt+0x1c7f9>
   2712c:	mov    rdx,r15
   2712f:	mov    rsi,r13
   27132:	add    r14d,0x1
   27136:	call   a420 <memcpy@plt>
   2713b:	mov    QWORD PTR [r12+0x8],rax
   27140:	jmp    2709e <__sprintf_chk@plt+0x1c6ee>
   27145:	nop    DWORD PTR [rax]
   27148:	call   9e40 <__errno_location@plt>
   2714d:	cmp    DWORD PTR [rax],0xc
   27150:	je     271a9 <__sprintf_chk@plt+0x1c7f9>
   27152:	mov    QWORD PTR [r15+0x8],0x0
   2715a:	lea    rsi,[rip+0x40493]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   27161:	lea    rdi,[rip+0x3dd75]        # 64edd <_obstack_memory_used@@Base+0x1825d>
   27168:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   2716d:	nop    DWORD PTR [rax]
   27170:	call   9e40 <__errno_location@plt>
   27175:	cmp    DWORD PTR [rax],0xc
   27178:	je     271a9 <__sprintf_chk@plt+0x1c7f9>
   2717a:	lea    rsi,[rip+0x40473]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   27181:	lea    rdi,[rip+0x3dd55]        # 64edd <_obstack_memory_used@@Base+0x1825d>
   27188:	mov    QWORD PTR [rip+0x588cd],0x0        # 7fa60 <obstack_alloc_failed_handler@@Base+0xc28>
   27193:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   27198:	nop    DWORD PTR [rax+rax*1+0x0]
   271a0:	lea    r14d,[rdi+0x1]
   271a4:	jmp    26ffe <__sprintf_chk@plt+0x1c64e>
   271a9:	call   19130 <__sprintf_chk@plt+0xe780>
   271ae:	xchg   ax,ax
   271b0:	push   r15
   271b2:	mov    r15,rdx
   271b5:	push   r14
   271b7:	mov    r14,rcx
   271ba:	push   r13
   271bc:	mov    r13,r8
   271bf:	push   r12
   271c1:	mov    r12,rdi
   271c4:	push   rbp
   271c5:	push   rbx
   271c6:	mov    ebx,r9d
   271c9:	sub    rsp,0x28
   271cd:	mov    edx,DWORD PTR [rsp+0x60]
   271d1:	mov    rbp,QWORD PTR [rsp+0x68]
   271d6:	mov    QWORD PTR [rsp+0x8],rsi
   271db:	mov    rsi,rdi
   271de:	mov    edi,DWORD PTR [rip+0x585e4]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   271e4:	mov    DWORD PTR [rsp+0x4],edx
   271e8:	mov    rax,QWORD PTR fs:0x28
   271f1:	mov    QWORD PTR [rsp+0x18],rax
   271f6:	xor    eax,eax
   271f8:	call   26ea0 <__sprintf_chk@plt+0x1c4f0>
   271fd:	mov    rdi,r12
   27200:	mov    rsi,rax
   27203:	call   22fc0 <__sprintf_chk@plt+0x18610>
   27208:	mov    edx,DWORD PTR [rsp+0x4]
   2720c:	mov    r10,QWORD PTR [rsp+0x8]
   27211:	mov    r12,rax
   27214:	mov    rax,QWORD PTR [rip+0x57d2d]        # 7ef48 <obstack_alloc_failed_handler@@Base+0x110>
   2721b:	test   rax,rax
   2721e:	je     27348 <__sprintf_chk@plt+0x1c998>
   27224:	mov    QWORD PTR [rax],r12
   27227:	mov    QWORD PTR [rip+0x57d1a],r12        # 7ef48 <obstack_alloc_failed_handler@@Base+0x110>
   2722e:	mov    QWORD PTR [r12+0x8],r10
   27233:	mov    QWORD PTR [r12+0x10],r15
   27238:	mov    QWORD PTR [r12+0x18],r14
   2723d:	mov    QWORD PTR [r12+0x20],r13
   27242:	mov    DWORD PTR [r12+0x38],0x1
   2724b:	test   bl,bl
   2724d:	je     27255 <__sprintf_chk@plt+0x1c8a5>
   2724f:	or     DWORD PTR [r12+0x3c],0x2
   27255:	test   dl,dl
   27257:	je     2725f <__sprintf_chk@plt+0x1c8af>
   27259:	or     DWORD PTR [r12+0x3c],0x4
   2725f:	test   rbp,rbp
   27262:	je     27276 <__sprintf_chk@plt+0x1c8c6>
   27264:	mov    rdi,rbp
   27267:	lea    rsi,[rip+0x3d153]        # 643c1 <_obstack_memory_used@@Base+0x17741>
   2726e:	call   1f7a0 <__sprintf_chk@plt+0x14df0>
   27273:	mov    rbp,rax
   27276:	mov    rdi,QWORD PTR [rip+0x57ce3]        # 7ef60 <obstack_alloc_failed_handler@@Base+0x128>
   2727d:	mov    QWORD PTR [r12+0x28],rbp
   27282:	test   rdi,rdi
   27285:	je     27318 <__sprintf_chk@plt+0x1c968>
   2728b:	lea    r13,[rsp+0x10]
   27290:	mov    rsi,r12
   27293:	mov    rdx,r13
   27296:	call   49270 <argp_usage@@Base+0x5ef0>
   2729b:	cmp    eax,0xffffffff
   2729e:	je     27300 <__sprintf_chk@plt+0x1c950>
   272a0:	test   eax,eax
   272a2:	je     272f0 <__sprintf_chk@plt+0x1c940>
   272a4:	mov    rdi,QWORD PTR [rip+0x57cad]        # 7ef58 <obstack_alloc_failed_handler@@Base+0x120>
   272ab:	test   rdi,rdi
   272ae:	je     27358 <__sprintf_chk@plt+0x1c9a8>
   272b4:	mov    rdx,r13
   272b7:	mov    rsi,r12
   272ba:	call   49270 <argp_usage@@Base+0x5ef0>
   272bf:	cmp    eax,0xffffffff
   272c2:	je     27300 <__sprintf_chk@plt+0x1c950>
   272c4:	test   eax,eax
   272c6:	je     27308 <__sprintf_chk@plt+0x1c958>
   272c8:	mov    rax,QWORD PTR [rsp+0x18]
   272cd:	sub    rax,QWORD PTR fs:0x28
   272d6:	jne    27388 <__sprintf_chk@plt+0x1c9d8>
   272dc:	add    rsp,0x28
   272e0:	mov    rax,r12
   272e3:	pop    rbx
   272e4:	pop    rbp
   272e5:	pop    r12
   272e7:	pop    r13
   272e9:	pop    r14
   272eb:	pop    r15
   272ed:	ret    
   272ee:	xchg   ax,ax
   272f0:	cmp    QWORD PTR [rsp+0x10],0x0
   272f6:	jne    272a4 <__sprintf_chk@plt+0x1c8f4>
   272f8:	nop    DWORD PTR [rax+rax*1+0x0]
   27300:	call   19130 <__sprintf_chk@plt+0xe780>
   27305:	nop    DWORD PTR [rax]
   27308:	cmp    QWORD PTR [rsp+0x10],0x0
   2730e:	jne    272c8 <__sprintf_chk@plt+0x1c918>
   27310:	jmp    27300 <__sprintf_chk@plt+0x1c950>
   27312:	nop    WORD PTR [rax+rax*1+0x0]
   27318:	xor    r8d,r8d
   2731b:	lea    rcx,[rip+0xffffffffffffbbfe]        # 22f20 <__sprintf_chk@plt+0x18570>
   27322:	lea    rdx,[rip+0xffffffffffffba77]        # 22da0 <__sprintf_chk@plt+0x183f0>
   27329:	xor    esi,esi
   2732b:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   27330:	mov    QWORD PTR [rip+0x57c29],rax        # 7ef60 <obstack_alloc_failed_handler@@Base+0x128>
   27337:	mov    rdi,rax
   2733a:	test   rax,rax
   2733d:	jne    2728b <__sprintf_chk@plt+0x1c8db>
   27343:	jmp    27300 <__sprintf_chk@plt+0x1c950>
   27345:	nop    DWORD PTR [rax]
   27348:	mov    QWORD PTR [rip+0x57c01],r12        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   2734f:	jmp    27227 <__sprintf_chk@plt+0x1c877>
   27354:	nop    DWORD PTR [rax+0x0]
   27358:	xor    r8d,r8d
   2735b:	lea    rcx,[rip+0xffffffffffffba9e]        # 22e00 <__sprintf_chk@plt+0x18450>
   27362:	lea    rdx,[rip+0xffffffffffffba77]        # 22de0 <__sprintf_chk@plt+0x18430>
   27369:	xor    esi,esi
   2736b:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   27370:	mov    QWORD PTR [rip+0x57be1],rax        # 7ef58 <obstack_alloc_failed_handler@@Base+0x120>
   27377:	mov    rdi,rax
   2737a:	test   rax,rax
   2737d:	jne    272b4 <__sprintf_chk@plt+0x1c904>
   27383:	jmp    27300 <__sprintf_chk@plt+0x1c950>
   27388:	call   a0a0 <__stack_chk_fail@plt>
   2738d:	nop    DWORD PTR [rax]
   27390:	endbr64 
   27394:	push   r12
   27396:	push   rbp
   27397:	sub    rsp,0x8
   2739b:	mov    r12,QWORD PTR [rip+0x57bbe]        # 7ef60 <obstack_alloc_failed_handler@@Base+0x128>
   273a2:	test   r12,r12
   273a5:	je     273f2 <__sprintf_chk@plt+0x1ca42>
   273a7:	mov    rbp,rdi
   273aa:	mov    rsi,rdi
   273ad:	mov    edi,DWORD PTR [rip+0x58415]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   273b3:	call   26ea0 <__sprintf_chk@plt+0x1c4f0>
   273b8:	mov    rdi,rbp
   273bb:	mov    rsi,rax
   273be:	call   22fc0 <__sprintf_chk@plt+0x18610>
   273c3:	mov    rdi,QWORD PTR [rip+0x57b96]        # 7ef60 <obstack_alloc_failed_handler@@Base+0x128>
   273ca:	mov    rbp,rax
   273cd:	mov    rsi,rax
   273d0:	call   48bc0 <argp_usage@@Base+0x5840>
   273d5:	mov    rdi,QWORD PTR [rbp+0x50]
   273d9:	mov    r12,rax
   273dc:	call   9ce0 <free@plt>
   273e1:	mov    rdi,QWORD PTR [rbp+0x58]
   273e5:	call   9ce0 <free@plt>
   273ea:	mov    rdi,rbp
   273ed:	call   9ce0 <free@plt>
   273f2:	add    rsp,0x8
   273f6:	mov    rax,r12
   273f9:	pop    rbp
   273fa:	pop    r12
   273fc:	ret    
   273fd:	nop    DWORD PTR [rax]
   27400:	push   r15
   27402:	push   r14
   27404:	push   r13
   27406:	push   r12
   27408:	mov    r12,rsi
   2740b:	push   rbp
   2740c:	mov    rbp,rdi
   2740f:	push   rbx
   27410:	mov    ebx,edx
   27412:	sub    rsp,0x38
   27416:	mov    r14,QWORD PTR [rsi+0x58]
   2741a:	mov    DWORD PTR [rsp+0x1c],edx
   2741e:	mov    QWORD PTR [rsp+0x8],rcx
   27423:	mov    rax,QWORD PTR fs:0x28
   2742c:	mov    QWORD PTR [rsp+0x28],rax
   27431:	xor    eax,eax
   27433:	mov    rax,r14
   27436:	shr    rax,0x3f
   2743a:	mov    QWORD PTR [rsp+0x10],rax
   2743f:	call   27390 <__sprintf_chk@plt+0x1c9e0>
   27444:	test   rax,rax
   27447:	je     27790 <__sprintf_chk@plt+0x1cde0>
   2744d:	mov    r13,rax
   27450:	test   BYTE PTR [rax+0x3c],0x1
   27454:	je     2746b <__sprintf_chk@plt+0x1cabb>
   27456:	and    ebx,0x20
   27459:	je     275c0 <__sprintf_chk@plt+0x1cc10>
   2745f:	lea    rdi,[rax+0x58]
   27463:	mov    rsi,rbp
   27466:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   2746b:	mov    rdi,QWORD PTR [r13+0x58]
   2746f:	mov    rsi,rbp
   27472:	call   a320 <strcmp@plt>
   27477:	test   eax,eax
   27479:	jne    275c0 <__sprintf_chk@plt+0x1cc10>
   2747f:	cmp    BYTE PTR [rip+0x584ce],0x0        # 7f954 <obstack_alloc_failed_handler@@Base+0xb1c>
   27486:	mov    rsi,QWORD PTR [r12+0x60]
   2748b:	je     274a8 <__sprintf_chk@plt+0x1caf8>
   2748d:	test   BYTE PTR [r13+0x3c],0x2
   27492:	je     27499 <__sprintf_chk@plt+0x1cae9>
   27494:	test   r14,r14
   27497:	js     274a8 <__sprintf_chk@plt+0x1caf8>
   27499:	mov    rdi,QWORD PTR [r12+0x58]
   2749e:	cmp    QWORD PTR [r13+0x18],rdi
   274a2:	jne    274b7 <__sprintf_chk@plt+0x1cb07>
   274a4:	nop    DWORD PTR [rax+0x0]
   274a8:	cmp    QWORD PTR [r13+0x20],rsi
   274ac:	je     275f0 <__sprintf_chk@plt+0x1cc40>
   274b2:	mov    rdi,QWORD PTR [r12+0x58]
   274b7:	call   23080 <__sprintf_chk@plt+0x186d0>
   274bc:	mov    r14,rax
   274bf:	test   rax,rax
   274c2:	je     278e0 <__sprintf_chk@plt+0x1cf30>
   274c8:	mov    rbx,QWORD PTR [rax+0x58]
   274cc:	mov    rsi,rbp
   274cf:	mov    rdi,rbx
   274d2:	call   a320 <strcmp@plt>
   274d7:	test   eax,eax
   274d9:	je     275a2 <__sprintf_chk@plt+0x1cbf2>
   274df:	test   BYTE PTR [rip+0x54b97],0x20        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   274e6:	je     27547 <__sprintf_chk@plt+0x1cb97>
   274e8:	mov    rax,QWORD PTR [rip+0x58019]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   274ef:	test   rax,rax
   274f2:	je     274fa <__sprintf_chk@plt+0x1cb4a>
   274f4:	call   rax
   274f6:	mov    rbx,QWORD PTR [r14+0x58]
   274fa:	mov    rsi,rbx
   274fd:	lea    rdx,[rip+0x54b3c]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   27504:	mov    edi,0x1
   27509:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2750e:	mov    rdi,rbp
   27511:	mov    rbx,rax
   27514:	call   4b670 <argp_usage@@Base+0x82f0>
   27519:	mov    edx,0x5
   2751e:	lea    rsi,[rip+0x3e10b]        # 65630 <_obstack_memory_used@@Base+0x189b0>
   27525:	xor    edi,edi
   27527:	mov    r15,rax
   2752a:	call   a040 <dcgettext@plt>
   2752f:	mov    r8,rbx
   27532:	mov    rcx,r15
   27535:	xor    esi,esi
   27537:	mov    rdx,rax
   2753a:	xor    edi,edi
   2753c:	xor    eax,eax
   2753e:	call   a640 <error@plt>
   27543:	mov    rbx,QWORD PTR [r14+0x58]
   27547:	mov    QWORD PTR [r13+0x40],r14
   2754b:	mov    rdi,rbx
   2754e:	or     DWORD PTR [r13+0x3c],0x10
   27553:	and    DWORD PTR [r14+0x3c],0xffffffef
   27558:	call   a060 <strlen@plt>
   2755d:	mov    rdi,rbp
   27560:	mov    r14,rax
   27563:	call   a060 <strlen@plt>
   27568:	mov    r15,QWORD PTR [rip+0x579e1]        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   2756f:	mov    r8,rax
   27572:	test   r15,r15
   27575:	je     275a2 <__sprintf_chk@plt+0x1cbf2>
   27577:	nop    WORD PTR [rax+rax*1+0x0]
   27580:	lea    rdi,[r15+0x58]
   27584:	mov    rcx,rbp
   27587:	mov    rdx,r14
   2758a:	mov    rsi,rbx
   2758d:	mov    QWORD PTR [rsp],r8
   27591:	call   255e0 <__sprintf_chk@plt+0x1ac30>
   27596:	mov    r15,QWORD PTR [r15]
   27599:	mov    r8,QWORD PTR [rsp]
   2759d:	test   r15,r15
   275a0:	jne    27580 <__sprintf_chk@plt+0x1cbd0>
   275a2:	mov    DWORD PTR [r13+0x38],0x1
   275aa:	xor    edx,edx
   275ac:	mov    eax,DWORD PTR [r13+0x3c]
   275b0:	mov    ecx,eax
   275b2:	or     ecx,0x2
   275b5:	cmp    BYTE PTR [rsp+0x10],0x0
   275ba:	cmovne eax,ecx
   275bd:	jmp    275fe <__sprintf_chk@plt+0x1cc4e>
   275bf:	nop
   275c0:	mov    rax,QWORD PTR [rsp+0x8]
   275c5:	mov    BYTE PTR [rax],0x4e
   275c8:	mov    rax,QWORD PTR [rsp+0x28]
   275cd:	sub    rax,QWORD PTR fs:0x28
   275d6:	jne    27a80 <__sprintf_chk@plt+0x1d0d0>
   275dc:	add    rsp,0x38
   275e0:	mov    rax,r13
   275e3:	pop    rbx
   275e4:	pop    rbp
   275e5:	pop    r12
   275e7:	pop    r13
   275e9:	pop    r14
   275eb:	pop    r15
   275ed:	ret    
   275ee:	xchg   ax,ax
   275f0:	mov    DWORD PTR [r13+0x38],0x1
   275f8:	mov    eax,DWORD PTR [r13+0x3c]
   275fc:	xor    edx,edx
   275fe:	or     eax,0x4
   27601:	mov    DWORD PTR [r13+0x3c],eax
   27605:	cmp    BYTE PTR [rip+0x58164],0x0        # 7f770 <obstack_alloc_failed_handler@@Base+0x938>
   2760c:	je     27720 <__sprintf_chk@plt+0x1cd70>
   27612:	mov    rax,QWORD PTR [r12+0x198]
   2761a:	test   rax,rax
   2761d:	je     27720 <__sprintf_chk@plt+0x1cd70>
   27623:	mov    rax,QWORD PTR [rax+0x58]
   27627:	cmp    QWORD PTR [r12+0x58],rax
   2762c:	je     27720 <__sprintf_chk@plt+0x1cd70>
   27632:	test   BYTE PTR [rip+0x54a45],0x4        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   27639:	je     27679 <__sprintf_chk@plt+0x1ccc9>
   2763b:	mov    rax,QWORD PTR [rip+0x57ec6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   27642:	test   rax,rax
   27645:	je     27649 <__sprintf_chk@plt+0x1cc99>
   27647:	call   rax
   27649:	mov    rdi,QWORD PTR [r13+0x58]
   2764d:	call   4b670 <argp_usage@@Base+0x82f0>
   27652:	mov    edx,0x5
   27657:	lea    rsi,[rip+0x3dffa]        # 65658 <_obstack_memory_used@@Base+0x189d8>
   2765e:	xor    edi,edi
   27660:	mov    r14,rax
   27663:	call   a040 <dcgettext@plt>
   27668:	mov    rcx,r14
   2766b:	xor    esi,esi
   2766d:	xor    edi,edi
   2766f:	mov    rdx,rax
   27672:	xor    eax,eax
   27674:	call   a640 <error@plt>
   27679:	mov    r14,QWORD PTR [r13+0x28]
   2767d:	mov    DWORD PTR [r13+0x38],0x0
   27685:	test   r14,r14
   27688:	je     27908 <__sprintf_chk@plt+0x1cf58>
   2768e:	mov    rdi,QWORD PTR [r14+0x18]
   27692:	call   9ce0 <free@plt>
   27697:	mov    rdi,r14
   2769a:	call   9ce0 <free@plt>
   2769f:	mov    QWORD PTR [r13+0x28],0x0
   276a7:	mov    eax,DWORD PTR [r13+0x38]
   276ab:	nop    DWORD PTR [rax+rax*1+0x0]
   276b0:	or     DWORD PTR [r13+0x3c],0x1
   276b5:	test   eax,eax
   276b7:	je     275c8 <__sprintf_chk@plt+0x1cc18>
   276bd:	lea    rsi,[rsp+0x20]
   276c2:	mov    rdi,r12
   276c5:	call   10110 <__sprintf_chk@plt+0x5760>
   276ca:	cmp    eax,0x2
   276cd:	je     27a10 <__sprintf_chk@plt+0x1d060>
   276d3:	cmp    eax,0x3
   276d6:	je     27a48 <__sprintf_chk@plt+0x1d098>
   276dc:	cmp    eax,0x1
   276df:	jne    275c8 <__sprintf_chk@plt+0x1cc18>
   276e5:	mov    edx,0x5
   276ea:	lea    rsi,[rip+0x3cc92]        # 64383 <_obstack_memory_used@@Base+0x17703>
   276f1:	xor    edi,edi
   276f3:	call   a040 <dcgettext@plt>
   276f8:	mov    rsi,QWORD PTR [rsp+0x20]
   276fd:	mov    rdi,rbp
   27700:	mov    rdx,rax
   27703:	call   10060 <__sprintf_chk@plt+0x56b0>
   27708:	mov    rax,QWORD PTR [rsp+0x20]
   2770d:	mov    DWORD PTR [r13+0x38],0x0
   27715:	mov    QWORD PTR [r13+0x48],rax
   27719:	jmp    275c8 <__sprintf_chk@plt+0x1cc18>
   2771e:	xchg   ax,ax
   27720:	mov    eax,DWORD PTR [rsp+0x1c]
   27724:	test   al,0x10
   27726:	je     2773b <__sprintf_chk@plt+0x1cd8b>
   27728:	mov    ebx,eax
   2772a:	and    ebx,0x3
   2772d:	mov    DWORD PTR [r13+0x38],ebx
   27731:	jne    2773b <__sprintf_chk@plt+0x1cd8b>
   27733:	mov    rax,QWORD PTR [rsp+0x8]
   27738:	mov    BYTE PTR [rax],0x4e
   2773b:	test   dl,dl
   2773d:	je     27785 <__sprintf_chk@plt+0x1cdd5>
   2773f:	test   BYTE PTR [rip+0x54937],0x20        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   27746:	je     27785 <__sprintf_chk@plt+0x1cdd5>
   27748:	mov    rax,QWORD PTR [rip+0x57db9]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2774f:	test   rax,rax
   27752:	je     27756 <__sprintf_chk@plt+0x1cda6>
   27754:	call   rax
   27756:	mov    rdi,rbp
   27759:	call   4b670 <argp_usage@@Base+0x82f0>
   2775e:	mov    edx,0x5
   27763:	lea    rsi,[rip+0x3df26]        # 65690 <_obstack_memory_used@@Base+0x18a10>
   2776a:	xor    edi,edi
   2776c:	mov    r14,rax
   2776f:	call   a040 <dcgettext@plt>
   27774:	mov    rcx,r14
   27777:	xor    esi,esi
   27779:	xor    edi,edi
   2777b:	mov    rdx,rax
   2777e:	xor    eax,eax
   27780:	call   a640 <error@plt>
   27785:	mov    eax,DWORD PTR [r13+0x38]
   27789:	jmp    276b0 <__sprintf_chk@plt+0x1cd00>
   2778e:	xchg   ax,ax
   27790:	mov    rsi,QWORD PTR [r12+0x60]
   27795:	mov    rdi,QWORD PTR [r12+0x58]
   2779a:	call   23080 <__sprintf_chk@plt+0x186d0>
   2779f:	push   0x0
   277a1:	mov    rcx,QWORD PTR [r12+0x58]
   277a6:	mov    rdi,rbp
   277a9:	push   0x1
   277ab:	mov    rsi,QWORD PTR [r12+0xb0]
   277b3:	mov    r14,rax
   277b6:	mov    r9d,DWORD PTR [rsp+0x20]
   277bb:	mov    rdx,QWORD PTR [r12+0xb8]
   277c3:	mov    r8,QWORD PTR [r12+0x60]
   277c8:	call   271b0 <__sprintf_chk@plt+0x1c800>
   277cd:	pop    rcx
   277ce:	pop    rsi
   277cf:	mov    r13,rax
   277d2:	test   r14,r14
   277d5:	je     27918 <__sprintf_chk@plt+0x1cf68>
   277db:	mov    r10,QWORD PTR [r14+0x58]
   277df:	mov    rsi,rbp
   277e2:	mov    rdi,r10
   277e5:	mov    QWORD PTR [rsp],r10
   277e9:	call   a320 <strcmp@plt>
   277ee:	mov    r10,QWORD PTR [rsp]
   277f2:	test   eax,eax
   277f4:	je     278cc <__sprintf_chk@plt+0x1cf1c>
   277fa:	test   BYTE PTR [rip+0x5487c],0x20        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   27801:	je     27864 <__sprintf_chk@plt+0x1ceb4>
   27803:	mov    rax,QWORD PTR [rip+0x57cfe]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2780a:	test   rax,rax
   2780d:	je     27815 <__sprintf_chk@plt+0x1ce65>
   2780f:	call   rax
   27811:	mov    r10,QWORD PTR [r14+0x58]
   27815:	mov    rsi,r10
   27818:	lea    rdx,[rip+0x54821]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   2781f:	mov    edi,0x1
   27824:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   27829:	mov    rdi,rbp
   2782c:	mov    QWORD PTR [rsp],rax
   27830:	call   4b670 <argp_usage@@Base+0x82f0>
   27835:	mov    edx,0x5
   2783a:	lea    rsi,[rip+0x3ddef]        # 65630 <_obstack_memory_used@@Base+0x189b0>
   27841:	xor    edi,edi
   27843:	mov    r15,rax
   27846:	call   a040 <dcgettext@plt>
   2784b:	mov    r8,QWORD PTR [rsp]
   2784f:	mov    rcx,r15
   27852:	xor    esi,esi
   27854:	mov    rdx,rax
   27857:	xor    edi,edi
   27859:	xor    eax,eax
   2785b:	call   a640 <error@plt>
   27860:	mov    r10,QWORD PTR [r14+0x58]
   27864:	or     DWORD PTR [r13+0x3c],0x10
   27869:	mov    rdi,r10
   2786c:	mov    QWORD PTR [r13+0x40],r14
   27870:	and    DWORD PTR [r14+0x3c],0xffffffef
   27875:	mov    QWORD PTR [rsp],r10
   27879:	call   a060 <strlen@plt>
   2787e:	mov    rdi,rbp
   27881:	mov    r14,rax
   27884:	call   a060 <strlen@plt>
   27889:	mov    r15,QWORD PTR [rip+0x576c0]        # 7ef50 <obstack_alloc_failed_handler@@Base+0x118>
   27890:	mov    r10,QWORD PTR [rsp]
   27894:	mov    r8,rax
   27897:	test   r15,r15
   2789a:	je     278cc <__sprintf_chk@plt+0x1cf1c>
   2789c:	nop    DWORD PTR [rax+0x0]
   278a0:	lea    rdi,[r15+0x58]
   278a4:	mov    rsi,r10
   278a7:	mov    rcx,rbp
   278aa:	mov    rdx,r14
   278ad:	mov    QWORD PTR [rsp+0x10],r8
   278b2:	mov    QWORD PTR [rsp],r10
   278b6:	call   255e0 <__sprintf_chk@plt+0x1ac30>
   278bb:	mov    r15,QWORD PTR [r15]
   278be:	mov    r10,QWORD PTR [rsp]
   278c2:	mov    r8,QWORD PTR [rsp+0x10]
   278c7:	test   r15,r15
   278ca:	jne    278a0 <__sprintf_chk@plt+0x1cef0>
   278cc:	mov    DWORD PTR [r13+0x38],0x1
   278d4:	xor    edx,edx
   278d6:	jmp    27605 <__sprintf_chk@plt+0x1cc55>
   278db:	nop    DWORD PTR [rax+rax*1+0x0]
   278e0:	mov    rax,QWORD PTR [r12+0x58]
   278e5:	mov    DWORD PTR [r13+0x38],0x2
   278ed:	mov    edx,0x1
   278f2:	mov    QWORD PTR [r13+0x18],rax
   278f6:	mov    rax,QWORD PTR [r12+0x60]
   278fb:	mov    QWORD PTR [r13+0x20],rax
   278ff:	jmp    275ac <__sprintf_chk@plt+0x1cbfc>
   27904:	nop    DWORD PTR [rax+0x0]
   27908:	or     DWORD PTR [r13+0x3c],0x1
   2790d:	jmp    275c8 <__sprintf_chk@plt+0x1cc18>
   27912:	nop    WORD PTR [rax+rax*1+0x0]
   27918:	or     DWORD PTR [rax+0x3c],0x8
   2791c:	test   BYTE PTR [rip+0x5475a],0x10        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   27923:	je     27962 <__sprintf_chk@plt+0x1cfb2>
   27925:	mov    rax,QWORD PTR [rip+0x57bdc]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2792c:	test   rax,rax
   2792f:	je     27933 <__sprintf_chk@plt+0x1cf83>
   27931:	call   rax
   27933:	mov    rdi,rbp
   27936:	call   4b670 <argp_usage@@Base+0x82f0>
   2793b:	mov    edx,0x5
   27940:	lea    rsi,[rip+0x3d59d]        # 64ee4 <_obstack_memory_used@@Base+0x18264>
   27947:	xor    edi,edi
   27949:	mov    r14,rax
   2794c:	call   a040 <dcgettext@plt>
   27951:	mov    rcx,r14
   27954:	xor    esi,esi
   27956:	xor    edi,edi
   27958:	mov    rdx,rax
   2795b:	xor    eax,eax
   2795d:	call   a640 <error@plt>
   27962:	cmp    QWORD PTR [rip+0x5764e],0x0        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2796a:	mov    eax,0x2
   2796f:	je     27980 <__sprintf_chk@plt+0x1cfd0>
   27971:	mov    DWORD PTR [r13+0x38],eax
   27975:	xor    edx,edx
   27977:	jmp    27605 <__sprintf_chk@plt+0x1cc55>
   2797c:	nop    DWORD PTR [rax+0x0]
   27980:	xor    ecx,ecx
   27982:	mov    rdi,QWORD PTR [rip+0x57e07]        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   27989:	mov    rsi,QWORD PTR [rip+0x57e08]        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   27990:	cmp    QWORD PTR [r12+0xb0],rdi
   27998:	setl   dl
   2799b:	setg   cl
   2799e:	movzx  edx,dl
   279a1:	sub    ecx,edx
   279a3:	xor    edx,edx
   279a5:	cmp    rsi,QWORD PTR [r12+0xb8]
   279ad:	setg   r8b
   279b1:	setl   dl
   279b4:	movzx  r8d,r8b
   279b8:	sub    edx,r8d
   279bb:	lea    edx,[rdx+rcx*2]
   279be:	test   edx,edx
   279c0:	js     27971 <__sprintf_chk@plt+0x1cfc1>
   279c2:	mov    edx,DWORD PTR [rip+0x57db8]        # 7f780 <obstack_alloc_failed_handler@@Base+0x948>
   279c8:	mov    eax,0x1
   279cd:	test   edx,edx
   279cf:	je     27971 <__sprintf_chk@plt+0x1cfc1>
   279d1:	xor    edx,edx
   279d3:	cmp    QWORD PTR [r12+0xc0],rdi
   279db:	setl   al
   279de:	setg   dl
   279e1:	movzx  eax,al
   279e4:	sub    edx,eax
   279e6:	xor    eax,eax
   279e8:	cmp    rsi,QWORD PTR [r12+0xc8]
   279f0:	setg   cl
   279f3:	setl   al
   279f6:	movzx  ecx,cl
   279f9:	sub    eax,ecx
   279fb:	lea    eax,[rax+rdx*2]
   279fe:	shr    eax,0x1f
   27a01:	add    eax,0x1
   27a04:	jmp    27971 <__sprintf_chk@plt+0x1cfc1>
   27a09:	nop    DWORD PTR [rax+0x0]
   27a10:	mov    edx,0x5
   27a15:	lea    rsi,[rip+0x3c967]        # 64383 <_obstack_memory_used@@Base+0x17703>
   27a1c:	xor    edi,edi
   27a1e:	call   a040 <dcgettext@plt>
   27a23:	mov    rsi,QWORD PTR [rsp+0x20]
   27a28:	mov    rdi,rbp
   27a2b:	mov    rdx,rax
   27a2e:	call   10060 <__sprintf_chk@plt+0x56b0>
   27a33:	mov    rax,QWORD PTR [rsp+0x20]
   27a38:	mov    QWORD PTR [r13+0x48],rax
   27a3c:	jmp    275c8 <__sprintf_chk@plt+0x1cc18>
   27a41:	nop    DWORD PTR [rax+0x0]
   27a48:	mov    edx,0x5
   27a4d:	lea    rsi,[rip+0x3c906]        # 6435a <_obstack_memory_used@@Base+0x176da>
   27a54:	xor    edi,edi
   27a56:	call   a040 <dcgettext@plt>
   27a5b:	mov    rsi,QWORD PTR [rsp+0x20]
   27a60:	mov    rdi,rbp
   27a63:	mov    rdx,rax
   27a66:	call   10060 <__sprintf_chk@plt+0x56b0>
   27a6b:	mov    rax,QWORD PTR [rsp+0x8]
   27a70:	mov    BYTE PTR [rax],0x4e
   27a73:	mov    DWORD PTR [r13+0x38],0x0
   27a7b:	jmp    275c8 <__sprintf_chk@plt+0x1cc18>
   27a80:	call   a0a0 <__stack_chk_fail@plt>
   27a85:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   27a90:	endbr64 
   27a94:	push   r15
   27a96:	push   r14
   27a98:	push   r13
   27a9a:	push   r12
   27a9c:	push   rbp
   27a9d:	push   rbx
   27a9e:	mov    rbx,rdi
   27aa1:	sub    rsp,0x218
   27aa8:	mov    rbp,QWORD PTR [rdi]
   27aab:	mov    rax,QWORD PTR fs:0x28
   27ab4:	mov    QWORD PTR [rsp+0x208],rax
   27abc:	xor    eax,eax
   27abe:	jmp    27ad0 <__sprintf_chk@plt+0x1d120>
   27ac0:	mov    rdi,rbx
   27ac3:	call   136b0 <__sprintf_chk@plt+0x8d00>
   27ac8:	test   al,al
   27aca:	je     27f90 <__sprintf_chk@plt+0x1d5e0>
   27ad0:	mov    edi,DWORD PTR [rbx+0x1a8]
   27ad6:	call   a730 <fdopendir@plt>
   27adb:	mov    QWORD PTR [rbx+0x1a0],rax
   27ae2:	test   rax,rax
   27ae5:	je     27ac0 <__sprintf_chk@plt+0x1d110>
   27ae7:	mov    esi,DWORD PTR [rip+0x57c7f]        # 7f76c <obstack_alloc_failed_handler@@Base+0x934>
   27aed:	mov    rdi,rax
   27af0:	call   4b830 <argp_usage@@Base+0x84b0>
   27af5:	mov    rdx,QWORD PTR [rbx+0x58]
   27af9:	mov    r12,QWORD PTR [rbx+0x198]
   27b00:	mov    QWORD PTR [rsp+0x8],rax
   27b05:	mov    QWORD PTR [rsp+0x20],rdx
   27b0a:	test   rax,rax
   27b0d:	je     27fa0 <__sprintf_chk@plt+0x1d5f0>
   27b13:	cmp    QWORD PTR [rbx+0x1b0],0x0
   27b1b:	jne    27b25 <__sprintf_chk@plt+0x1d175>
   27b1d:	mov    rdi,rbx
   27b20:	call   1bf20 <__sprintf_chk@plt+0x11570>
   27b25:	mov    rdi,rbp
   27b28:	call   a060 <strlen@plt>
   27b2d:	lea    r14,[rax+0x1]
   27b31:	mov    r13,rax
   27b34:	mov    rdi,r14
   27b37:	call   a4a0 <malloc@plt>
   27b3c:	mov    rdi,rax
   27b3f:	test   rax,rax
   27b42:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   27b48:	mov    rdx,r14
   27b4b:	mov    rsi,rbp
   27b4e:	call   a420 <memcpy@plt>
   27b53:	cmp    BYTE PTR [rax],0x0
   27b56:	mov    r14,rax
   27b59:	je     27b82 <__sprintf_chk@plt+0x1d1d2>
   27b5b:	lea    rax,[r14+r13*1-0x1]
   27b60:	cmp    rax,r14
   27b63:	ja     27b7d <__sprintf_chk@plt+0x1d1cd>
   27b65:	jmp    27b82 <__sprintf_chk@plt+0x1d1d2>
   27b67:	nop    WORD PTR [rax+rax*1+0x0]
   27b70:	sub    rax,0x1
   27b74:	mov    BYTE PTR [rax+0x1],0x0
   27b78:	cmp    rax,r14
   27b7b:	je     27b82 <__sprintf_chk@plt+0x1d1d2>
   27b7d:	cmp    BYTE PTR [rax],0x2f
   27b80:	je     27b70 <__sprintf_chk@plt+0x1d1c0>
   27b82:	xor    edx,edx
   27b84:	test   r12,r12
   27b87:	lea    rcx,[rsp+0x4f]
   27b8c:	mov    rsi,rbx
   27b8f:	sete   dl
   27b92:	mov    rdi,r14
   27b95:	shl    edx,0x5
   27b98:	call   27400 <__sprintf_chk@plt+0x1ca50>
   27b9d:	mov    rdi,r14
   27ba0:	mov    r15,rax
   27ba3:	call   9ce0 <free@plt>
   27ba8:	mov    rdi,rbp
   27bab:	call   269a0 <__sprintf_chk@plt+0x1bff0>
   27bb0:	cmp    QWORD PTR [rsp+0x8],0x0
   27bb6:	mov    r14,rax
   27bb9:	je     27c27 <__sprintf_chk@plt+0x1d277>
   27bbb:	mov    eax,DWORD PTR [r15+0x38]
   27bbf:	test   eax,eax
   27bc1:	jne    27c70 <__sprintf_chk@plt+0x1d2c0>
   27bc7:	mov    rdi,QWORD PTR [r15+0x48]
   27bcb:	test   rdi,rdi
   27bce:	je     27c27 <__sprintf_chk@plt+0x1d277>
   27bd0:	call   a060 <strlen@plt>
   27bd5:	lea    rdi,[rax+0x3]
   27bd9:	mov    rbx,rax
   27bdc:	lea    r12,[rax+0x1]
   27be0:	call   a4a0 <malloc@plt>
   27be5:	mov    rbp,rax
   27be8:	test   rax,rax
   27beb:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   27bf1:	mov    BYTE PTR [rax],0x59
   27bf4:	mov    rsi,QWORD PTR [r15+0x48]
   27bf8:	lea    rdi,[rax+0x1]
   27bfc:	mov    rdx,r12
   27bff:	call   a420 <memcpy@plt>
   27c04:	mov    BYTE PTR [rbp+rbx*1+0x2],0x0
   27c09:	mov    rax,QWORD PTR [r15+0x28]
   27c0d:	xor    esi,esi
   27c0f:	mov    rdi,rbp
   27c12:	mov    QWORD PTR [r15+0x30],rax
   27c16:	call   1f7a0 <__sprintf_chk@plt+0x14df0>
   27c1b:	mov    rdi,rbp
   27c1e:	mov    QWORD PTR [r15+0x28],rax
   27c22:	call   9ce0 <free@plt>
   27c27:	mov    rdi,QWORD PTR [r14]
   27c2a:	call   9ce0 <free@plt>
   27c2f:	mov    rdi,r14
   27c32:	call   9ce0 <free@plt>
   27c37:	mov    rdi,QWORD PTR [rsp+0x8]
   27c3c:	call   9ce0 <free@plt>
   27c41:	mov    rax,QWORD PTR [rsp+0x208]
   27c49:	sub    rax,QWORD PTR fs:0x28
   27c52:	jne    281b2 <__sprintf_chk@plt+0x1d802>
   27c58:	add    rsp,0x218
   27c5f:	mov    rax,r15
   27c62:	pop    rbx
   27c63:	pop    rbp
   27c64:	pop    r12
   27c66:	pop    r13
   27c68:	pop    r14
   27c6a:	pop    r15
   27c6c:	ret    
   27c6d:	nop    DWORD PTR [rax]
   27c70:	mov    QWORD PTR [rsp+0x30],0x0
   27c79:	cmp    eax,0x2
   27c7c:	je     27c9d <__sprintf_chk@plt+0x1d2ed>
   27c7e:	mov    rax,QWORD PTR [r15+0x40]
   27c82:	test   rax,rax
   27c85:	je     280ab <__sprintf_chk@plt+0x1d6fb>
   27c8b:	mov    rcx,QWORD PTR [rax+0x30]
   27c8f:	mov    QWORD PTR [rsp+0x30],rcx
   27c94:	test   rcx,rcx
   27c97:	je     27ff9 <__sprintf_chk@plt+0x1d649>
   27c9d:	mov    rax,QWORD PTR [rsp+0x8]
   27ca2:	cmp    BYTE PTR [rax],0x0
   27ca5:	je     280b9 <__sprintf_chk@plt+0x1d709>
   27cab:	mov    r13,rax
   27cae:	xor    ebp,ebp
   27cb0:	xor    r12d,r12d
   27cb3:	nop    DWORD PTR [rax+rax*1+0x0]
   27cb8:	mov    rdi,r13
   27cbb:	call   a060 <strlen@plt>
   27cc0:	lea    r13,[r13+rax*1+0x1]
   27cc5:	lea    r12,[r12+rax*1+0x2]
   27cca:	mov    rax,rbp
   27ccd:	add    rbp,0x1
   27cd1:	cmp    BYTE PTR [r13+0x0],0x0
   27cd6:	jne    27cb8 <__sprintf_chk@plt+0x1d308>
   27cd8:	mov    QWORD PTR [rsp+0x10],rax
   27cdd:	lea    rax,[r12+0x1]
   27ce2:	mov    QWORD PTR [rsp+0x28],rax
   27ce7:	mov    rax,rbp
   27cea:	shr    rax,0x3d
   27cee:	setne  al
   27cf1:	bt     rbp,0x3c
   27cf6:	movzx  eax,al
   27cf9:	jb     281ad <__sprintf_chk@plt+0x1d7fd>
   27cff:	test   rax,rax
   27d02:	jne    281ad <__sprintf_chk@plt+0x1d7fd>
   27d08:	mov    esi,0x8
   27d0d:	mov    rdi,rbp
   27d10:	call   a2f0 <calloc@plt>
   27d15:	mov    QWORD PTR [rsp+0x18],rax
   27d1a:	test   rax,rax
   27d1d:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   27d23:	mov    r12,QWORD PTR [rsp+0x18]
   27d28:	mov    r13,QWORD PTR [rsp+0x8]
   27d2d:	nop    DWORD PTR [rax]
   27d30:	mov    QWORD PTR [r12],r13
   27d34:	mov    rdi,r13
   27d37:	add    r12,0x8
   27d3b:	call   a060 <strlen@plt>
   27d40:	lea    r13,[r13+rax*1+0x1]
   27d45:	cmp    BYTE PTR [r13+0x0],0x0
   27d4a:	jne    27d30 <__sprintf_chk@plt+0x1d380>
   27d4c:	mov    rdi,QWORD PTR [rsp+0x18]
   27d51:	lea    rcx,[rip+0xfffffffffffef208]        # 16f60 <__sprintf_chk@plt+0xc5b0>
   27d58:	mov    edx,0x8
   27d5d:	mov    rsi,rbp
   27d60:	call   9f00 <qsort@plt>
   27d65:	mov    rdi,QWORD PTR [rsp+0x28]
   27d6a:	call   a4a0 <malloc@plt>
   27d6f:	mov    QWORD PTR [rsp+0x28],rax
   27d74:	test   rax,rax
   27d77:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   27d7d:	test   rbp,rbp
   27d80:	mov    rbp,QWORD PTR [rsp+0x28]
   27d85:	je     27e1a <__sprintf_chk@plt+0x1d46a>
   27d8b:	xor    r13d,r13d
   27d8e:	mov    r12,QWORD PTR [rsp+0x30]
   27d93:	mov    QWORD PTR [rsp+0x30],rbx
   27d98:	mov    QWORD PTR [rsp+0x38],r14
   27d9d:	mov    r14,r13
   27da0:	mov    r13,QWORD PTR [rsp+0x18]
   27da5:	nop    DWORD PTR [rax]
   27da8:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
   27dad:	mov    rdi,r12
   27db0:	mov    rsi,rbx
   27db3:	call   1f940 <__sprintf_chk@plt+0x14f90>
   27db8:	lea    rsi,[rbp+0x1]
   27dbc:	test   rax,rax
   27dbf:	je     27e00 <__sprintf_chk@plt+0x1d450>
   27dc1:	cmp    QWORD PTR [r15+0x48],0x1
   27dc6:	sbb    eax,eax
   27dc8:	and    eax,0xffffffd7
   27dcb:	add    eax,0x49
   27dce:	mov    BYTE PTR [rbp+0x0],al
   27dd1:	mov    rbp,rsi
   27dd4:	nop    DWORD PTR [rax+0x0]
   27dd8:	movzx  eax,BYTE PTR [rbx]
   27ddb:	add    rbx,0x1
   27ddf:	add    rbp,0x1
   27de3:	mov    BYTE PTR [rbp-0x1],al
   27de6:	test   al,al
   27de8:	jne    27dd8 <__sprintf_chk@plt+0x1d428>
   27dea:	lea    rax,[r14+0x1]
   27dee:	cmp    r14,QWORD PTR [rsp+0x10]
   27df3:	je     27e10 <__sprintf_chk@plt+0x1d460>
   27df5:	mov    r14,rax
   27df8:	jmp    27da8 <__sprintf_chk@plt+0x1d3f8>
   27dfa:	nop    WORD PTR [rax+rax*1+0x0]
   27e00:	cmp    QWORD PTR [r15+0x48],0x1
   27e05:	sbb    eax,eax
   27e07:	and    eax,0x10
   27e0a:	add    eax,0x49
   27e0d:	jmp    27dce <__sprintf_chk@plt+0x1d41e>
   27e0f:	nop
   27e10:	mov    r14,QWORD PTR [rsp+0x38]
   27e15:	mov    rbx,QWORD PTR [rsp+0x30]
   27e1a:	mov    BYTE PTR [rbp+0x0],0x0
   27e1e:	mov    rax,QWORD PTR [r15+0x28]
   27e22:	xor    esi,esi
   27e24:	mov    rbp,QWORD PTR [rsp+0x28]
   27e29:	mov    QWORD PTR [r15+0x30],rax
   27e2d:	mov    rdi,rbp
   27e30:	call   1f7a0 <__sprintf_chk@plt+0x14df0>
   27e35:	mov    rdi,rbp
   27e38:	mov    QWORD PTR [r15+0x28],rax
   27e3c:	call   9ce0 <free@plt>
   27e41:	mov    rdi,QWORD PTR [rsp+0x18]
   27e46:	call   9ce0 <free@plt>
   27e4b:	mov    edi,0x18
   27e50:	mov    rbp,QWORD PTR [r15+0x28]
   27e54:	call   a4a0 <malloc@plt>
   27e59:	mov    r12,rax
   27e5c:	test   rax,rax
   27e5f:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   27e65:	mov    QWORD PTR [rax],rbp
   27e68:	mov    rdi,rax
   27e6b:	mov    DWORD PTR [rax+0x8],0x1
   27e72:	mov    QWORD PTR [rax+0x10],0x0
   27e7a:	call   207e0 <__sprintf_chk@plt+0x15e30>
   27e7f:	mov    r13,rax
   27e82:	lea    rax,[rsp+0x50]
   27e87:	mov    QWORD PTR [rsp+0x10],rax
   27e8c:	test   r13,r13
   27e8f:	je     27f4d <__sprintf_chk@plt+0x1d59d>
   27e95:	mov    QWORD PTR [rsp+0x18],r15
   27e9a:	mov    r15,r13
   27e9d:	jmp    27eb8 <__sprintf_chk@plt+0x1d508>
   27e9f:	nop
   27ea0:	mov    BYTE PTR [r15],0x4e
   27ea4:	mov    rdi,r12
   27ea7:	call   207e0 <__sprintf_chk@plt+0x15e30>
   27eac:	mov    r15,rax
   27eaf:	test   rax,rax
   27eb2:	je     27f48 <__sprintf_chk@plt+0x1d598>
   27eb8:	lea    rbp,[r15+0x1]
   27ebc:	mov    rdi,r14
   27ebf:	mov    rsi,rbp
   27ec2:	call   26a20 <__sprintf_chk@plt+0x1c070>
   27ec7:	cmp    BYTE PTR [r15],0x49
   27ecb:	mov    r13,rax
   27ece:	je     27ea0 <__sprintf_chk@plt+0x1d4f0>
   27ed0:	mov    rsi,rbx
   27ed3:	mov    rdi,rax
   27ed6:	call   18ba0 <__sprintf_chk@plt+0xe1f0>
   27edb:	test   al,al
   27edd:	jne    27ea0 <__sprintf_chk@plt+0x1d4f0>
   27edf:	mov    rdi,QWORD PTR [rsp+0x10]
   27ee4:	mov    r10d,DWORD PTR [rbx+0x1a8]
   27eeb:	mov    ecx,0x37
   27ef0:	xor    eax,eax
   27ef2:	rep stos QWORD PTR es:[rdi],rax
   27ef5:	test   r10d,r10d
   27ef8:	jns    27f5a <__sprintf_chk@plt+0x1d5aa>
   27efa:	mov    DWORD PTR [rsp+0x28],r10d
   27eff:	call   9e40 <__errno_location@plt>
   27f04:	mov    r10d,DWORD PTR [rsp+0x28]
   27f09:	lea    rdx,[rip+0xffffffffffffb500]        # 23410 <__sprintf_chk@plt+0x18a60>
   27f10:	neg    r10d
   27f13:	mov    DWORD PTR [rax],r10d
   27f16:	xor    esi,esi
   27f18:	mov    rdi,r13
   27f1b:	call   26910 <__sprintf_chk@plt+0x1bf60>
   27f20:	mov    BYTE PTR [r15],0x4e
   27f24:	mov    rdi,QWORD PTR [rsp+0x10]
   27f29:	call   44a50 <argp_usage@@Base+0x16d0>
   27f2e:	mov    rdi,r12
   27f31:	call   207e0 <__sprintf_chk@plt+0x15e30>
   27f36:	mov    r15,rax
   27f39:	test   rax,rax
   27f3c:	jne    27eb8 <__sprintf_chk@plt+0x1d508>
   27f42:	nop    WORD PTR [rax+rax*1+0x0]
   27f48:	mov    r15,QWORD PTR [rsp+0x18]
   27f4d:	mov    rdi,r12
   27f50:	call   9ce0 <free@plt>
   27f55:	jmp    27c27 <__sprintf_chk@plt+0x1d277>
   27f5a:	lea    r11,[rsp+0xa8]
   27f62:	mov    ecx,DWORD PTR [rip+0x5700c]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   27f68:	mov    rsi,rbp
   27f6b:	mov    edi,r10d
   27f6e:	mov    rdx,r11
   27f71:	mov    QWORD PTR [rsp+0x28],r11
   27f76:	call   a960 <fstatat@plt>
   27f7b:	mov    r11,QWORD PTR [rsp+0x28]
   27f80:	test   eax,eax
   27f82:	je     27fbd <__sprintf_chk@plt+0x1d60d>
   27f84:	lea    rdx,[rip+0xffffffffffffb505]        # 23490 <__sprintf_chk@plt+0x18ae0>
   27f8b:	jmp    27f16 <__sprintf_chk@plt+0x1d566>
   27f8d:	nop    DWORD PTR [rax]
   27f90:	mov    rax,QWORD PTR [rbx+0x58]
   27f94:	mov    r12,QWORD PTR [rbx+0x198]
   27f9b:	mov    QWORD PTR [rsp+0x20],rax
   27fa0:	mov    rsi,rbp
   27fa3:	lea    rdi,[rip+0x3c3c5]        # 6436f <_obstack_memory_used@@Base+0x176ef>
   27faa:	call   3bad0 <__sprintf_chk@plt+0x31120>
   27faf:	mov    QWORD PTR [rsp+0x8],0x0
   27fb8:	jmp    27b13 <__sprintf_chk@plt+0x1d163>
   27fbd:	mov    eax,DWORD PTR [rsp+0xc0]
   27fc4:	and    eax,0xf000
   27fc9:	cmp    eax,0x4000
   27fce:	je     28007 <__sprintf_chk@plt+0x1d657>
   27fd0:	cmp    BYTE PTR [rip+0x57799],0x0        # 7f770 <obstack_alloc_failed_handler@@Base+0x938>
   27fd7:	je     2810b <__sprintf_chk@plt+0x1d75b>
   27fdd:	mov    rax,QWORD PTR [rsp+0x20]
   27fe2:	cmp    QWORD PTR [rsp+0xa8],rax
   27fea:	je     2810b <__sprintf_chk@plt+0x1d75b>
   27ff0:	mov    BYTE PTR [r15],0x4e
   27ff4:	jmp    27f24 <__sprintf_chk@plt+0x1d574>
   27ff9:	mov    rax,QWORD PTR [rax+0x28]
   27ffd:	mov    QWORD PTR [rsp+0x30],rax
   28002:	jmp    27c9d <__sprintf_chk@plt+0x1d2ed>
   28007:	mov    edx,DWORD PTR [rip+0x56f63]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   2800d:	mov    rdi,rbx
   28010:	mov    rsi,rbp
   28013:	mov    QWORD PTR [rsp+0x28],r11
   28018:	call   18ce0 <__sprintf_chk@plt+0xe330>
   2801d:	lea    rdx,[rip+0xffffffffffffb3ec]        # 23410 <__sprintf_chk@plt+0x18a60>
   28024:	mov    edi,eax
   28026:	test   eax,eax
   28028:	js     27f16 <__sprintf_chk@plt+0x1d566>
   2802e:	mov    rsi,QWORD PTR [rsp+0x28]
   28033:	mov    DWORD PTR [rsp+0x1f8],eax
   2803a:	call   a920 <fstat@plt>
   2803f:	mov    edx,eax
   28041:	test   eax,eax
   28043:	jne    27f84 <__sprintf_chk@plt+0x1d5d4>
   28049:	mov    eax,DWORD PTR [rsp+0xc0]
   28050:	and    eax,0xf000
   28055:	cmp    eax,0x4000
   2805a:	jne    27fd0 <__sprintf_chk@plt+0x1d620>
   28060:	mov    ecx,DWORD PTR [rip+0x5770e]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   28066:	test   ecx,ecx
   28068:	je     2815f <__sprintf_chk@plt+0x1d7af>
   2806e:	mov    rax,QWORD PTR [rsp+0x18]
   28073:	cmp    DWORD PTR [rax+0x38],0x2
   28077:	mov    eax,0x12
   2807c:	cmove  edx,eax
   2807f:	mov    BYTE PTR [r15],0x44
   28083:	mov    rcx,r15
   28086:	mov    r15,QWORD PTR [rsp+0x10]
   2808b:	mov    rdi,r13
   2808e:	mov    QWORD PTR [rsp+0x1e8],rbx
   28096:	mov    rsi,r15
   28099:	call   27400 <__sprintf_chk@plt+0x1ca50>
   2809e:	mov    rdi,r15
   280a1:	call   18d70 <__sprintf_chk@plt+0xe3c0>
   280a6:	jmp    27f24 <__sprintf_chk@plt+0x1d574>
   280ab:	mov    rax,QWORD PTR [r15+0x28]
   280af:	mov    QWORD PTR [rsp+0x30],rax
   280b4:	jmp    27c9d <__sprintf_chk@plt+0x1d2ed>
   280b9:	mov    esi,0x8
   280be:	xor    edi,edi
   280c0:	call   a2f0 <calloc@plt>
   280c5:	mov    QWORD PTR [rsp+0x18],rax
   280ca:	test   rax,rax
   280cd:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   280d3:	mov    rdi,QWORD PTR [rsp+0x18]
   280d8:	lea    rcx,[rip+0xfffffffffffeee81]        # 16f60 <__sprintf_chk@plt+0xc5b0>
   280df:	mov    edx,0x8
   280e4:	xor    esi,esi
   280e6:	call   9f00 <qsort@plt>
   280eb:	mov    edi,0x1
   280f0:	call   a4a0 <malloc@plt>
   280f5:	mov    rbp,rax
   280f8:	test   rax,rax
   280fb:	je     281ad <__sprintf_chk@plt+0x1d7fd>
   28101:	mov    QWORD PTR [rsp+0x28],rax
   28106:	jmp    27e1a <__sprintf_chk@plt+0x1d46a>
   2810b:	cmp    BYTE PTR [r15],0x59
   2810f:	je     27f24 <__sprintf_chk@plt+0x1d574>
   28115:	xor    edx,edx
   28117:	mov    rsi,QWORD PTR [rip+0x57672]        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   2811e:	mov    rcx,QWORD PTR [rip+0x57673]        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   28125:	cmp    rsi,QWORD PTR [rsp+0x100]
   2812d:	setg   al
   28130:	setl   dl
   28133:	movzx  eax,al
   28136:	sub    edx,eax
   28138:	xor    eax,eax
   2813a:	cmp    QWORD PTR [rsp+0x108],rcx
   28142:	setl   dil
   28146:	setg   al
   28149:	movzx  edi,dil
   2814d:	sub    eax,edi
   2814f:	lea    eax,[rax+rdx*2]
   28152:	test   eax,eax
   28154:	js     28169 <__sprintf_chk@plt+0x1d7b9>
   28156:	mov    BYTE PTR [r15],0x59
   2815a:	jmp    27f24 <__sprintf_chk@plt+0x1d574>
   2815f:	mov    edx,0x10
   28164:	jmp    2807f <__sprintf_chk@plt+0x1d6cf>
   28169:	mov    eax,DWORD PTR [rip+0x57611]        # 7f780 <obstack_alloc_failed_handler@@Base+0x948>
   2816f:	test   eax,eax
   28171:	je     27ff0 <__sprintf_chk@plt+0x1d640>
   28177:	xor    edx,edx
   28179:	cmp    rsi,QWORD PTR [rsp+0x110]
   28181:	setg   al
   28184:	setl   dl
   28187:	movzx  eax,al
   2818a:	sub    edx,eax
   2818c:	xor    eax,eax
   2818e:	cmp    rcx,QWORD PTR [rsp+0x118]
   28196:	setg   cl
   28199:	setl   al
   2819c:	movzx  ecx,cl
   2819f:	sub    eax,ecx
   281a1:	lea    eax,[rax+rdx*2]
   281a4:	test   eax,eax
   281a6:	jns    28156 <__sprintf_chk@plt+0x1d7a6>
   281a8:	jmp    27ff0 <__sprintf_chk@plt+0x1d640>
   281ad:	call   19130 <__sprintf_chk@plt+0xe780>
   281b2:	call   a0a0 <__stack_chk_fail@plt>
   281b7:	nop    WORD PTR [rax+rax*1+0x0]
   281c0:	endbr64 
   281c4:	push   rax
   281c5:	pop    rax
   281c6:	lea    rsi,[rip+0x3cd2c]        # 64ef9 <_obstack_memory_used@@Base+0x18279>
   281cd:	xor    edi,edi
   281cf:	mov    edx,0x5
   281d4:	sub    rsp,0x8
   281d8:	call   a040 <dcgettext@plt>
   281dd:	lea    rdi,[rip+0x3cd23]        # 64f07 <_obstack_memory_used@@Base+0x18287>
   281e4:	mov    rsi,rax
   281e7:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   281ec:	nop    DWORD PTR [rax+0x0]
   281f0:	endbr64 
   281f4:	sub    rsp,0x8
   281f8:	call   a950 <fork@plt>
   281fd:	cmp    eax,0xffffffff
   28200:	je     28207 <__sprintf_chk@plt+0x1d857>
   28202:	add    rsp,0x8
   28206:	ret    
   28207:	call   281c0 <__sprintf_chk@plt+0x1d810>
   2820c:	nop    DWORD PTR [rax+0x0]
   28210:	endbr64 
   28214:	push   rax
   28215:	pop    rax
   28216:	lea    rsi,[rip+0x3ccef]        # 64f0c <_obstack_memory_used@@Base+0x1828c>
   2821d:	xor    edi,edi
   2821f:	mov    edx,0x5
   28224:	sub    rsp,0x8
   28228:	call   a040 <dcgettext@plt>
   2822d:	lea    rdi,[rip+0x3cced]        # 64f21 <_obstack_memory_used@@Base+0x182a1>
   28234:	mov    rsi,rax
   28237:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   2823c:	nop    DWORD PTR [rax+0x0]
   28240:	endbr64 
   28244:	push   rbp
   28245:	mov    rbp,rdi
   28248:	call   a210 <pipe@plt>
   2824d:	test   eax,eax
   2824f:	js     28253 <__sprintf_chk@plt+0x1d8a3>
   28251:	pop    rbp
   28252:	ret    
   28253:	mov    rdi,rbp
   28256:	call   28210 <__sprintf_chk@plt+0x1d860>
   2825b:	nop    DWORD PTR [rax+rax*1+0x0]
   28260:	endbr64 
   28264:	push   r13
   28266:	push   r12
   28268:	mov    r12,rsi
   2826b:	push   rbp
   2826c:	push   rbx
   2826d:	mov    ebx,edi
   2826f:	sub    rsp,0x8
   28273:	test   edi,edi
   28275:	je     28283 <__sprintf_chk@plt+0x1d8d3>
   28277:	cmp    DWORD PTR [rip+0x57773],edi        # 7f9f0 <obstack_alloc_failed_handler@@Base+0xbb8>
   2827d:	je     28336 <__sprintf_chk@plt+0x1d986>
   28283:	mov    rbp,QWORD PTR [rip+0x5775e]        # 7f9e8 <obstack_alloc_failed_handler@@Base+0xbb0>
   2828a:	test   rbp,rbp
   2828d:	je     28297 <__sprintf_chk@plt+0x1d8e7>
   2828f:	cmp    DWORD PTR [rip+0x5774f],ebx        # 7f9e4 <obstack_alloc_failed_handler@@Base+0xbac>
   28295:	je     282f2 <__sprintf_chk@plt+0x1d942>
   28297:	mov    edi,ebx
   28299:	call   a010 <getpwuid@plt>
   2829e:	test   rax,rax
   282a1:	je     28330 <__sprintf_chk@plt+0x1d980>
   282a7:	mov    rbp,QWORD PTR [rax]
   282aa:	mov    rdi,QWORD PTR [rip+0x57737]        # 7f9e8 <obstack_alloc_failed_handler@@Base+0xbb0>
   282b1:	mov    DWORD PTR [rip+0x5772d],ebx        # 7f9e4 <obstack_alloc_failed_handler@@Base+0xbac>
   282b7:	call   9ce0 <free@plt>
   282bc:	test   rbp,rbp
   282bf:	je     282eb <__sprintf_chk@plt+0x1d93b>
   282c1:	mov    rdi,rbp
   282c4:	call   a060 <strlen@plt>
   282c9:	lea    r13,[rax+0x1]
   282cd:	mov    rdi,r13
   282d0:	call   a4a0 <malloc@plt>
   282d5:	mov    rdi,rax
   282d8:	test   rax,rax
   282db:	je     28357 <__sprintf_chk@plt+0x1d9a7>
   282dd:	mov    rsi,rbp
   282e0:	mov    rdx,r13
   282e3:	call   a420 <memcpy@plt>
   282e8:	mov    rbp,rax
   282eb:	mov    QWORD PTR [rip+0x576f6],rbp        # 7f9e8 <obstack_alloc_failed_handler@@Base+0xbb0>
   282f2:	mov    rdi,rbp
   282f5:	call   a060 <strlen@plt>
   282fa:	lea    r13,[rax+0x1]
   282fe:	mov    rdi,r13
   28301:	call   a4a0 <malloc@plt>
   28306:	mov    rdi,rax
   28309:	test   rax,rax
   2830c:	je     28357 <__sprintf_chk@plt+0x1d9a7>
   2830e:	mov    rdx,r13
   28311:	mov    rsi,rbp
   28314:	call   a420 <memcpy@plt>
   28319:	mov    QWORD PTR [r12],rax
   2831d:	add    rsp,0x8
   28321:	pop    rbx
   28322:	pop    rbp
   28323:	pop    r12
   28325:	pop    r13
   28327:	ret    
   28328:	nop    DWORD PTR [rax+rax*1+0x0]
   28330:	mov    DWORD PTR [rip+0x576ba],ebx        # 7f9f0 <obstack_alloc_failed_handler@@Base+0xbb8>
   28336:	mov    edi,0x1
   2833b:	call   a4a0 <malloc@plt>
   28340:	test   rax,rax
   28343:	je     28357 <__sprintf_chk@plt+0x1d9a7>
   28345:	mov    BYTE PTR [rax],0x0
   28348:	mov    QWORD PTR [r12],rax
   2834c:	add    rsp,0x8
   28350:	pop    rbx
   28351:	pop    rbp
   28352:	pop    r12
   28354:	pop    r13
   28356:	ret    
   28357:	call   19130 <__sprintf_chk@plt+0xe780>
   2835c:	nop    DWORD PTR [rax+0x0]
   28360:	endbr64 
   28364:	push   r13
   28366:	push   r12
   28368:	mov    r12,rsi
   2836b:	push   rbp
   2836c:	push   rbx
   2836d:	mov    ebx,edi
   2836f:	sub    rsp,0x8
   28373:	test   edi,edi
   28375:	je     28383 <__sprintf_chk@plt+0x1d9d3>
   28377:	cmp    DWORD PTR [rip+0x57663],edi        # 7f9e0 <obstack_alloc_failed_handler@@Base+0xba8>
   2837d:	je     28436 <__sprintf_chk@plt+0x1da86>
   28383:	mov    rbp,QWORD PTR [rip+0x5764e]        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   2838a:	test   rbp,rbp
   2838d:	je     28397 <__sprintf_chk@plt+0x1d9e7>
   2838f:	cmp    DWORD PTR [rip+0x5763b],ebx        # 7f9d0 <obstack_alloc_failed_handler@@Base+0xb98>
   28395:	je     283f2 <__sprintf_chk@plt+0x1da42>
   28397:	mov    edi,ebx
   28399:	call   a100 <getgrgid@plt>
   2839e:	test   rax,rax
   283a1:	je     28430 <__sprintf_chk@plt+0x1da80>
   283a7:	mov    rbp,QWORD PTR [rax]
   283aa:	mov    rdi,QWORD PTR [rip+0x57627]        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   283b1:	mov    DWORD PTR [rip+0x57619],ebx        # 7f9d0 <obstack_alloc_failed_handler@@Base+0xb98>
   283b7:	call   9ce0 <free@plt>
   283bc:	test   rbp,rbp
   283bf:	je     283eb <__sprintf_chk@plt+0x1da3b>
   283c1:	mov    rdi,rbp
   283c4:	call   a060 <strlen@plt>
   283c9:	lea    r13,[rax+0x1]
   283cd:	mov    rdi,r13
   283d0:	call   a4a0 <malloc@plt>
   283d5:	mov    rdi,rax
   283d8:	test   rax,rax
   283db:	je     28457 <__sprintf_chk@plt+0x1daa7>
   283dd:	mov    rsi,rbp
   283e0:	mov    rdx,r13
   283e3:	call   a420 <memcpy@plt>
   283e8:	mov    rbp,rax
   283eb:	mov    QWORD PTR [rip+0x575e6],rbp        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   283f2:	mov    rdi,rbp
   283f5:	call   a060 <strlen@plt>
   283fa:	lea    r13,[rax+0x1]
   283fe:	mov    rdi,r13
   28401:	call   a4a0 <malloc@plt>
   28406:	mov    rdi,rax
   28409:	test   rax,rax
   2840c:	je     28457 <__sprintf_chk@plt+0x1daa7>
   2840e:	mov    rdx,r13
   28411:	mov    rsi,rbp
   28414:	call   a420 <memcpy@plt>
   28419:	mov    QWORD PTR [r12],rax
   2841d:	add    rsp,0x8
   28421:	pop    rbx
   28422:	pop    rbp
   28423:	pop    r12
   28425:	pop    r13
   28427:	ret    
   28428:	nop    DWORD PTR [rax+rax*1+0x0]
   28430:	mov    DWORD PTR [rip+0x575aa],ebx        # 7f9e0 <obstack_alloc_failed_handler@@Base+0xba8>
   28436:	mov    edi,0x1
   2843b:	call   a4a0 <malloc@plt>
   28440:	test   rax,rax
   28443:	je     28457 <__sprintf_chk@plt+0x1daa7>
   28445:	mov    BYTE PTR [rax],0x0
   28448:	mov    QWORD PTR [r12],rax
   2844c:	add    rsp,0x8
   28450:	pop    rbx
   28451:	pop    rbp
   28452:	pop    r12
   28454:	pop    r13
   28456:	ret    
   28457:	call   19130 <__sprintf_chk@plt+0xe780>
   2845c:	nop    DWORD PTR [rax+0x0]
   28460:	endbr64 
   28464:	push   r13
   28466:	push   r12
   28468:	push   rbp
   28469:	mov    rbp,rdi
   2846c:	push   rbx
   2846d:	mov    rbx,rsi
   28470:	sub    rsp,0x8
   28474:	mov    rsi,QWORD PTR [rip+0x5754d]        # 7f9c8 <obstack_alloc_failed_handler@@Base+0xb90>
   2847b:	test   rsi,rsi
   2847e:	je     2848d <__sprintf_chk@plt+0x1dadd>
   28480:	call   a320 <strcmp@plt>
   28485:	test   eax,eax
   28487:	je     2850e <__sprintf_chk@plt+0x1db5e>
   2848d:	mov    rsi,QWORD PTR [rip+0x57554]        # 7f9e8 <obstack_alloc_failed_handler@@Base+0xbb0>
   28494:	test   rsi,rsi
   28497:	je     284a1 <__sprintf_chk@plt+0x1daf1>
   28499:	movzx  eax,BYTE PTR [rsi]
   2849c:	cmp    BYTE PTR [rbp+0x0],al
   2849f:	je     28520 <__sprintf_chk@plt+0x1db70>
   284a1:	mov    rdi,rbp
   284a4:	call   a360 <getpwnam@plt>
   284a9:	test   rax,rax
   284ac:	je     28540 <__sprintf_chk@plt+0x1db90>
   284b2:	mov    r12d,DWORD PTR [rax+0x10]
   284b6:	mov    rbp,QWORD PTR [rax]
   284b9:	mov    rdi,QWORD PTR [rip+0x57528]        # 7f9e8 <obstack_alloc_failed_handler@@Base+0xbb0>
   284c0:	mov    DWORD PTR [rip+0x5751d],r12d        # 7f9e4 <obstack_alloc_failed_handler@@Base+0xbac>
   284c7:	call   9ce0 <free@plt>
   284cc:	test   rbp,rbp
   284cf:	je     284ff <__sprintf_chk@plt+0x1db4f>
   284d1:	mov    rdi,rbp
   284d4:	call   a060 <strlen@plt>
   284d9:	lea    r13,[rax+0x1]
   284dd:	mov    rdi,r13
   284e0:	call   a4a0 <malloc@plt>
   284e5:	mov    rdi,rax
   284e8:	test   rax,rax
   284eb:	je     28587 <__sprintf_chk@plt+0x1dbd7>
   284f1:	mov    rsi,rbp
   284f4:	mov    rdx,r13
   284f7:	call   a420 <memcpy@plt>
   284fc:	mov    rbp,rax
   284ff:	mov    QWORD PTR [rip+0x574e2],rbp        # 7f9e8 <obstack_alloc_failed_handler@@Base+0xbb0>
   28506:	mov    DWORD PTR [rbx],r12d
   28509:	mov    eax,0x1
   2850e:	add    rsp,0x8
   28512:	pop    rbx
   28513:	pop    rbp
   28514:	pop    r12
   28516:	pop    r13
   28518:	ret    
   28519:	nop    DWORD PTR [rax+0x0]
   28520:	mov    rdi,rbp
   28523:	call   a320 <strcmp@plt>
   28528:	test   eax,eax
   2852a:	jne    284a1 <__sprintf_chk@plt+0x1daf1>
   28530:	mov    r12d,DWORD PTR [rip+0x574ad]        # 7f9e4 <obstack_alloc_failed_handler@@Base+0xbac>
   28537:	jmp    28506 <__sprintf_chk@plt+0x1db56>
   28539:	nop    DWORD PTR [rax+0x0]
   28540:	mov    rdi,QWORD PTR [rip+0x57481]        # 7f9c8 <obstack_alloc_failed_handler@@Base+0xb90>
   28547:	call   9ce0 <free@plt>
   2854c:	mov    rdi,rbp
   2854f:	call   a060 <strlen@plt>
   28554:	lea    r12,[rax+0x1]
   28558:	mov    rdi,r12
   2855b:	call   a4a0 <malloc@plt>
   28560:	mov    rdi,rax
   28563:	test   rax,rax
   28566:	je     28587 <__sprintf_chk@plt+0x1dbd7>
   28568:	mov    rdx,r12
   2856b:	mov    rsi,rbp
   2856e:	call   a420 <memcpy@plt>
   28573:	mov    QWORD PTR [rip+0x5744e],rax        # 7f9c8 <obstack_alloc_failed_handler@@Base+0xb90>
   2857a:	add    rsp,0x8
   2857e:	xor    eax,eax
   28580:	pop    rbx
   28581:	pop    rbp
   28582:	pop    r12
   28584:	pop    r13
   28586:	ret    
   28587:	call   19130 <__sprintf_chk@plt+0xe780>
   2858c:	nop    DWORD PTR [rax+0x0]
   28590:	endbr64 
   28594:	push   r12
   28596:	push   rbp
   28597:	mov    rbp,rdi
   2859a:	push   rbx
   2859b:	mov    rbx,rsi
   2859e:	mov    rsi,QWORD PTR [rip+0x5741b]        # 7f9c0 <obstack_alloc_failed_handler@@Base+0xb88>
   285a5:	test   rsi,rsi
   285a8:	je     285b7 <__sprintf_chk@plt+0x1dc07>
   285aa:	call   a320 <strcmp@plt>
   285af:	test   eax,eax
   285b1:	je     28639 <__sprintf_chk@plt+0x1dc89>
   285b7:	mov    rsi,QWORD PTR [rip+0x5741a]        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   285be:	test   rsi,rsi
   285c1:	je     286b8 <__sprintf_chk@plt+0x1dd08>
   285c7:	movzx  eax,BYTE PTR [rsi]
   285ca:	mov    rdi,rbp
   285cd:	cmp    BYTE PTR [rbp+0x0],al
   285d0:	je     28640 <__sprintf_chk@plt+0x1dc90>
   285d2:	call   a430 <getgrnam@plt>
   285d7:	test   rax,rax
   285da:	je     28670 <__sprintf_chk@plt+0x1dcc0>
   285e0:	mov    eax,DWORD PTR [rax+0x10]
   285e3:	mov    rdi,QWORD PTR [rip+0x573ee]        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   285ea:	mov    DWORD PTR [rip+0x573e0],eax        # 7f9d0 <obstack_alloc_failed_handler@@Base+0xb98>
   285f0:	call   9ce0 <free@plt>
   285f5:	mov    rdi,rbp
   285f8:	call   a060 <strlen@plt>
   285fd:	lea    r12,[rax+0x1]
   28601:	mov    rdi,r12
   28604:	call   a4a0 <malloc@plt>
   28609:	mov    rdi,rax
   2860c:	test   rax,rax
   2860f:	je     28706 <__sprintf_chk@plt+0x1dd56>
   28615:	mov    rdx,r12
   28618:	mov    rsi,rbp
   2861b:	call   a420 <memcpy@plt>
   28620:	mov    r12d,DWORD PTR [rip+0x573a9]        # 7f9d0 <obstack_alloc_failed_handler@@Base+0xb98>
   28627:	mov    rbp,rax
   2862a:	mov    QWORD PTR [rip+0x573a7],rbp        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   28631:	mov    DWORD PTR [rbx],r12d
   28634:	mov    eax,0x1
   28639:	pop    rbx
   2863a:	pop    rbp
   2863b:	pop    r12
   2863d:	ret    
   2863e:	xchg   ax,ax
   28640:	call   a320 <strcmp@plt>
   28645:	test   eax,eax
   28647:	je     28660 <__sprintf_chk@plt+0x1dcb0>
   28649:	mov    rdi,rbp
   2864c:	call   a430 <getgrnam@plt>
   28651:	test   rax,rax
   28654:	jne    285e0 <__sprintf_chk@plt+0x1dc30>
   28656:	jmp    28670 <__sprintf_chk@plt+0x1dcc0>
   28658:	nop    DWORD PTR [rax+rax*1+0x0]
   28660:	mov    r12d,DWORD PTR [rip+0x57369]        # 7f9d0 <obstack_alloc_failed_handler@@Base+0xb98>
   28667:	jmp    28631 <__sprintf_chk@plt+0x1dc81>
   28669:	nop    DWORD PTR [rax+0x0]
   28670:	mov    rdi,QWORD PTR [rip+0x57349]        # 7f9c0 <obstack_alloc_failed_handler@@Base+0xb88>
   28677:	call   9ce0 <free@plt>
   2867c:	mov    rdi,rbp
   2867f:	call   a060 <strlen@plt>
   28684:	lea    r12,[rax+0x1]
   28688:	mov    rdi,r12
   2868b:	call   a4a0 <malloc@plt>
   28690:	mov    rdi,rax
   28693:	test   rax,rax
   28696:	je     28706 <__sprintf_chk@plt+0x1dd56>
   28698:	mov    rsi,rbp
   2869b:	mov    rdx,r12
   2869e:	call   a420 <memcpy@plt>
   286a3:	mov    rbp,rax
   286a6:	pop    rbx
   286a7:	mov    QWORD PTR [rip+0x57312],rbp        # 7f9c0 <obstack_alloc_failed_handler@@Base+0xb88>
   286ae:	xor    eax,eax
   286b0:	pop    rbp
   286b1:	pop    r12
   286b3:	ret    
   286b4:	nop    DWORD PTR [rax+0x0]
   286b8:	mov    rdi,rbp
   286bb:	call   a430 <getgrnam@plt>
   286c0:	test   rax,rax
   286c3:	je     286f0 <__sprintf_chk@plt+0x1dd40>
   286c5:	mov    r12d,DWORD PTR [rax+0x10]
   286c9:	mov    rdi,QWORD PTR [rip+0x57308]        # 7f9d8 <obstack_alloc_failed_handler@@Base+0xba0>
   286d0:	mov    DWORD PTR [rip+0x572f9],r12d        # 7f9d0 <obstack_alloc_failed_handler@@Base+0xb98>
   286d7:	call   9ce0 <free@plt>
   286dc:	test   rbp,rbp
   286df:	je     2862a <__sprintf_chk@plt+0x1dc7a>
   286e5:	jmp    285f5 <__sprintf_chk@plt+0x1dc45>
   286ea:	nop    WORD PTR [rax+rax*1+0x0]
   286f0:	mov    rdi,QWORD PTR [rip+0x572c9]        # 7f9c0 <obstack_alloc_failed_handler@@Base+0xb88>
   286f7:	call   9ce0 <free@plt>
   286fc:	test   rbp,rbp
   286ff:	je     286a6 <__sprintf_chk@plt+0x1dcf6>
   28701:	jmp    2867c <__sprintf_chk@plt+0x1dccc>
   28706:	call   19130 <__sprintf_chk@plt+0xe780>
   2870b:	nop    DWORD PTR [rax+rax*1+0x0]
   28710:	endbr64 
   28714:	push   r15
   28716:	xor    r9d,r9d
   28719:	mov    r8,0xffffffffffffffff
   28720:	push   r14
   28722:	mov    r14,rsi
   28725:	mov    esi,0x8
   2872a:	push   r13
   2872c:	mov    r13,rdx
   2872f:	lea    rdx,[rip+0x3abb7]        # 632ed <_obstack_memory_used@@Base+0x1666d>
   28736:	push   r12
   28738:	push   rbp
   28739:	push   rbx
   2873a:	mov    rbx,rdi
   2873d:	add    rdi,0x64
   28741:	lea    rbp,[rbx+0x101]
   28748:	sub    rsp,0x60
   2874c:	mov    DWORD PTR [rsp+0x14],ecx
   28750:	movabs rcx,0x8000000000000000
   2875a:	mov    rax,QWORD PTR fs:0x28
   28763:	mov    QWORD PTR [rsp+0x50],rax
   28768:	xor    eax,eax
   2876a:	push   0x0
   2876c:	call   23640 <__sprintf_chk@plt+0x18c90>
   28771:	lea    rsi,[rip+0x3eb73]        # 672eb <_obstack_memory_used@@Base+0x1a66b>
   28778:	mov    rdi,rbp
   2877b:	mov    r15d,eax
   2877e:	mov    r12,rax
   28781:	call   a320 <strcmp@plt>
   28786:	and    r15d,0xfff
   2878d:	pop    rdx
   2878e:	pop    rcx
   2878f:	test   eax,eax
   28791:	jne    28a98 <__sprintf_chk@plt+0x1e0e8>
   28797:	cmp    BYTE PTR [rbx+0x1db],0x0
   2879e:	je     28a00 <__sprintf_chk@plt+0x1e050>
   287a4:	cmp    QWORD PTR [r14+0x170],0x1
   287ac:	mov    ebp,0x3
   287b1:	sbb    ebp,0xffffffff
   287b4:	sub    rsp,0x8
   287b8:	mov    DWORD PTR [r13+0x0],ebp
   287bc:	xor    r9d,r9d
   287bf:	mov    esi,0xc
   287c4:	push   0x0
   287c6:	lea    r12,[rip+0x3aa86]        # 63253 <_obstack_memory_used@@Base+0x165d3>
   287cd:	lea    rdi,[rbx+0x88]
   287d4:	movabs r8,0x7fffffffffffffff
   287de:	mov    DWORD PTR [r14+0x70],r15d
   287e2:	mov    rdx,r12
   287e5:	movabs rcx,0x8000000000000000
   287ef:	call   23640 <__sprintf_chk@plt+0x18c90>
   287f4:	xor    esi,esi
   287f6:	cmp    BYTE PTR [rbx+0x109],0x0
   287fd:	pop    r13
   287ff:	mov    QWORD PTR [r14+0xf8],rax
   28806:	pop    r15
   28808:	mov    QWORD PTR [r14+0x100],0x0
   28813:	je     2881c <__sprintf_chk@plt+0x1de6c>
   28815:	lea    rsi,[rbx+0x109]
   2881c:	lea    rdi,[r14+0x20]
   28820:	mov    edx,0x20
   28825:	call   25400 <__sprintf_chk@plt+0x1aa50>
   2882a:	xor    esi,esi
   2882c:	cmp    BYTE PTR [rbx+0x129],0x0
   28833:	je     2883c <__sprintf_chk@plt+0x1de8c>
   28835:	lea    rsi,[rbx+0x129]
   2883c:	lea    rdi,[r14+0x28]
   28840:	mov    edx,0x20
   28845:	call   25400 <__sprintf_chk@plt+0x1aa50>
   2884a:	mov    QWORD PTR [r14+0x38],0x0
   28852:	mov    QWORD PTR [r14+0x160],0x0
   2885d:	mov    QWORD PTR [r14+0x158],0x0
   28868:	mov    QWORD PTR [r14+0x40],0x0
   28870:	mov    QWORD PTR [r14+0x48],0x0
   28878:	mov    QWORD PTR [r14+0x50],0x0
   28880:	mov    QWORD PTR [r14+0x30],0x0
   28888:	cmp    ebp,0x2
   2888b:	je     28ad0 <__sprintf_chk@plt+0x1e120>
   28891:	cmp    ebp,0x5
   28894:	je     28c50 <__sprintf_chk@plt+0x1e2a0>
   2889a:	movdqa xmm0,XMMWORD PTR [rip+0x567ce]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
   288a2:	movups XMMWORD PTR [r14+0x108],xmm0
   288aa:	movups XMMWORD PTR [r14+0xe8],xmm0
   288b2:	cmp    ebp,0x1
   288b5:	je     28bb0 <__sprintf_chk@plt+0x1e200>
   288bb:	mov    r10d,DWORD PTR [rsp+0xc]
   288c0:	test   r10d,r10d
   288c3:	je     2894f <__sprintf_chk@plt+0x1df9f>
   288c9:	cmp    BYTE PTR [rip+0x56640],0x0        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   288d0:	jne    288df <__sprintf_chk@plt+0x1df2f>
   288d2:	cmp    BYTE PTR [rbx+0x109],0x0
   288d9:	jne    28c30 <__sprintf_chk@plt+0x1e280>
   288df:	sub    rsp,0x8
   288e3:	xor    r9d,r9d
   288e6:	mov    r8d,0xffffffff
   288ec:	xor    ecx,ecx
   288ee:	push   0x0
   288f0:	lea    rdi,[rbx+0x6c]
   288f4:	mov    esi,0x8
   288f9:	lea    rdx,[rip+0x3a9f4]        # 632f4 <_obstack_memory_used@@Base+0x16674>
   28900:	call   23640 <__sprintf_chk@plt+0x18c90>
   28905:	pop    r8
   28907:	pop    r9
   28909:	mov    DWORD PTR [r14+0x74],eax
   2890d:	cmp    BYTE PTR [rip+0x565fc],0x0        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   28914:	jne    28923 <__sprintf_chk@plt+0x1df73>
   28916:	cmp    BYTE PTR [rbx+0x129],0x0
   2891d:	jne    28c10 <__sprintf_chk@plt+0x1e260>
   28923:	sub    rsp,0x8
   28927:	lea    rdi,[rbx+0x74]
   2892b:	mov    esi,0x8
   28930:	xor    r9d,r9d
   28933:	push   0x0
   28935:	mov    r8d,0xffffffff
   2893b:	xor    ecx,ecx
   2893d:	lea    rdx,[rip+0x3a9b6]        # 632fa <_obstack_memory_used@@Base+0x1667a>
   28944:	call   23640 <__sprintf_chk@plt+0x18c90>
   28949:	pop    rsi
   2894a:	pop    rdi
   2894b:	mov    DWORD PTR [r14+0x78],eax
   2894f:	movsx  edx,BYTE PTR [rbx+0x9c]
   28956:	xor    eax,eax
   28958:	sub    edx,0x33
   2895b:	cmp    edx,0x1
   2895e:	jbe    28b00 <__sprintf_chk@plt+0x1e150>
   28964:	mov    QWORD PTR [r14+0x80],rax
   2896b:	mov    rdi,r14
   2896e:	lea    rbp,[rsp+0x10]
   28973:	call   1cce0 <__sprintf_chk@plt+0x12330>
   28978:	mov    rdi,rbp
   2897b:	call   32390 <__sprintf_chk@plt+0x279e0>
   28980:	test   al,al
   28982:	je     28a50 <__sprintf_chk@plt+0x1e0a0>
   28988:	mov    rax,QWORD PTR [rsp+0x30]
   2898d:	mov    QWORD PTR [rsp+0x28],r14
   28992:	mov    rax,QWORD PTR [rax+0x10]
   28996:	test   rax,rax
   28999:	je     28a50 <__sprintf_chk@plt+0x1e0a0>
   2899f:	mov    rdi,rbp
   289a2:	call   rax
   289a4:	test   al,al
   289a6:	je     28a50 <__sprintf_chk@plt+0x1e0a0>
   289ac:	mov    rdi,rbp
   289af:	call   32390 <__sprintf_chk@plt+0x279e0>
   289b4:	test   al,al
   289b6:	je     289d0 <__sprintf_chk@plt+0x1e020>
   289b8:	mov    rax,QWORD PTR [rsp+0x30]
   289bd:	mov    QWORD PTR [rsp+0x28],r14
   289c2:	mov    rax,QWORD PTR [rax+0x20]
   289c6:	test   rax,rax
   289c9:	je     289d0 <__sprintf_chk@plt+0x1e020>
   289cb:	mov    rdi,rbp
   289ce:	call   rax
   289d0:	mov    BYTE PTR [r14+0x120],0x1
   289d8:	mov    rax,QWORD PTR [rsp+0x48]
   289dd:	sub    rax,QWORD PTR fs:0x28
   289e6:	jne    28d27 <__sprintf_chk@plt+0x1e377>
   289ec:	add    rsp,0x58
   289f0:	pop    rbx
   289f1:	pop    rbp
   289f2:	pop    r12
   289f4:	pop    r13
   289f6:	pop    r14
   289f8:	pop    r15
   289fa:	ret    
   289fb:	nop    DWORD PTR [rax+rax*1+0x0]
   28a00:	movzx  eax,BYTE PTR [rbx+0x1dc]
   28a07:	sub    eax,0x30
   28a0a:	cmp    al,0x7
   28a0c:	ja     287a4 <__sprintf_chk@plt+0x1ddf4>
   28a12:	cmp    BYTE PTR [rbx+0x1e7],0x20
   28a19:	jne    287a4 <__sprintf_chk@plt+0x1ddf4>
   28a1f:	movzx  eax,BYTE PTR [rbx+0x1e8]
   28a26:	sub    eax,0x30
   28a29:	cmp    al,0x7
   28a2b:	ja     287a4 <__sprintf_chk@plt+0x1ddf4>
   28a31:	cmp    BYTE PTR [rbx+0x1f3],0x20
   28a38:	mov    ebp,0x5
   28a3d:	jne    287a4 <__sprintf_chk@plt+0x1ddf4>
   28a43:	jmp    287b4 <__sprintf_chk@plt+0x1de04>
   28a48:	nop    DWORD PTR [rax+rax*1+0x0]
   28a50:	mov    eax,DWORD PTR [rip+0x56852]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   28a56:	mov    BYTE PTR [r14+0x120],0x0
   28a5e:	and    eax,0xfffffffb
   28a61:	cmp    eax,0x2
   28a64:	jne    28a76 <__sprintf_chk@plt+0x1e0c6>
   28a66:	mov    rax,QWORD PTR [rip+0x5665b]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   28a6d:	cmp    BYTE PTR [rax+0x9c],0x44
   28a74:	je     28a84 <__sprintf_chk@plt+0x1e0d4>
   28a76:	cmp    QWORD PTR [r14+0x190],0x0
   28a7e:	je     289d8 <__sprintf_chk@plt+0x1e028>
   28a84:	mov    BYTE PTR [r14+0x188],0x1
   28a8c:	jmp    289d8 <__sprintf_chk@plt+0x1e028>
   28a91:	nop    DWORD PTR [rax+0x0]
   28a98:	mov    rdi,rbp
   28a9b:	lea    rsi,[rip+0x3a716]        # 631b8 <_obstack_memory_used@@Base+0x16538>
   28aa2:	mov    ebp,0x1
   28aa7:	call   a320 <strcmp@plt>
   28aac:	test   eax,eax
   28aae:	jne    287b4 <__sprintf_chk@plt+0x1de04>
   28ab4:	and    r12,0xfffffffffffff000
   28abb:	cmp    r12,0x1
   28abf:	sbb    ebp,ebp
   28ac1:	and    ebp,0x4
   28ac4:	add    ebp,0x2
   28ac7:	jmp    287b4 <__sprintf_chk@plt+0x1de04>
   28acc:	nop    DWORD PTR [rax+0x0]
   28ad0:	cmp    BYTE PTR [rip+0x5640d],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   28ad7:	jne    28ce0 <__sprintf_chk@plt+0x1e330>
   28add:	movdqa xmm0,XMMWORD PTR [rip+0x5658b]        # 7f070 <obstack_alloc_failed_handler@@Base+0x238>
   28ae5:	movups XMMWORD PTR [r14+0x108],xmm0
   28aed:	movups XMMWORD PTR [r14+0xe8],xmm0
   28af5:	jmp    288bb <__sprintf_chk@plt+0x1df0b>
   28afa:	nop    WORD PTR [rax+rax*1+0x0]
   28b00:	sub    rsp,0x8
   28b04:	lea    rdi,[rbx+0x151]
   28b0b:	xor    r9d,r9d
   28b0e:	mov    r8d,0x7fffffff
   28b14:	push   0x0
   28b16:	mov    rcx,0xffffffff80000000
   28b1d:	mov    esi,0x8
   28b22:	lea    rdx,[rip+0x3a7f1]        # 6331a <_obstack_memory_used@@Base+0x1669a>
   28b29:	call   23640 <__sprintf_chk@plt+0x18c90>
   28b2e:	mov    rcx,0xffffffff80000000
   28b35:	xor    r9d,r9d
   28b38:	mov    esi,0x8
   28b3d:	mov    rbp,rax
   28b40:	lea    rdx,[rip+0x3a7c2]        # 63309 <_obstack_memory_used@@Base+0x16689>
   28b47:	lea    rdi,[rbx+0x149]
   28b4e:	mov    r8d,0x7fffffff
   28b54:	mov    DWORD PTR [rsp],0x0
   28b5b:	call   23640 <__sprintf_chk@plt+0x18c90>
   28b60:	mov    rdx,rbp
   28b63:	movzx  ebp,bpl
   28b67:	movabs rcx,0xffffff00000
   28b71:	mov    eax,eax
   28b73:	shl    rdx,0xc
   28b77:	and    rdx,rcx
   28b7a:	mov    rcx,rax
   28b7d:	shl    rax,0x20
   28b81:	shl    rcx,0x8
   28b85:	or     rdx,rbp
   28b88:	and    ecx,0xfff00
   28b8e:	or     rdx,rcx
   28b91:	movabs rcx,0xfffff00000000000
   28b9b:	and    rax,rcx
   28b9e:	or     rax,rdx
   28ba1:	pop    rdx
   28ba2:	pop    rcx
   28ba3:	jmp    28964 <__sprintf_chk@plt+0x1dfb4>
   28ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   28bb0:	sub    rsp,0x8
   28bb4:	lea    rdi,[rbx+0x6c]
   28bb8:	xor    r9d,r9d
   28bbb:	xor    ecx,ecx
   28bbd:	push   0x0
   28bbf:	mov    r8d,0xffffffff
   28bc5:	mov    esi,0x8
   28bca:	lea    rdx,[rip+0x3a723]        # 632f4 <_obstack_memory_used@@Base+0x16674>
   28bd1:	call   23640 <__sprintf_chk@plt+0x18c90>
   28bd6:	lea    rdi,[rbx+0x74]
   28bda:	xor    r9d,r9d
   28bdd:	xor    ecx,ecx
   28bdf:	mov    DWORD PTR [r14+0x74],eax
   28be3:	mov    r8d,0xffffffff
   28be9:	mov    esi,0x8
   28bee:	lea    rdx,[rip+0x3a705]        # 632fa <_obstack_memory_used@@Base+0x1667a>
   28bf5:	mov    DWORD PTR [rsp],0x0
   28bfc:	call   23640 <__sprintf_chk@plt+0x18c90>
   28c01:	pop    r11
   28c03:	pop    rbx
   28c04:	mov    DWORD PTR [r14+0x78],eax
   28c08:	xor    eax,eax
   28c0a:	jmp    28964 <__sprintf_chk@plt+0x1dfb4>
   28c0f:	nop
   28c10:	lea    rsi,[r14+0x78]
   28c14:	lea    rdi,[rbx+0x129]
   28c1b:	call   28590 <__sprintf_chk@plt+0x1dbe0>
   28c20:	test   eax,eax
   28c22:	je     28923 <__sprintf_chk@plt+0x1df73>
   28c28:	jmp    2894f <__sprintf_chk@plt+0x1df9f>
   28c2d:	nop    DWORD PTR [rax]
   28c30:	lea    rsi,[r14+0x74]
   28c34:	lea    rdi,[rbx+0x109]
   28c3b:	call   28460 <__sprintf_chk@plt+0x1dab0>
   28c40:	test   eax,eax
   28c42:	je     288df <__sprintf_chk@plt+0x1df2f>
   28c48:	jmp    2890d <__sprintf_chk@plt+0x1df5d>
   28c4d:	nop    DWORD PTR [rax]
   28c50:	sub    rsp,0x8
   28c54:	xor    r9d,r9d
   28c57:	mov    rdx,r12
   28c5a:	mov    esi,0xc
   28c5f:	push   0x0
   28c61:	movabs r13,0x8000000000000000
   28c6b:	lea    rdi,[rbx+0x1dc]
   28c72:	movabs r8,0x7fffffffffffffff
   28c7c:	mov    rcx,r13
   28c7f:	call   23640 <__sprintf_chk@plt+0x18c90>
   28c84:	lea    rdi,[rbx+0x1e8]
   28c8b:	mov    QWORD PTR [r14+0xe8],rax
   28c92:	mov    rdx,r12
   28c95:	xor    r9d,r9d
   28c98:	mov    rcx,r13
   28c9b:	mov    esi,0xc
   28ca0:	movabs r8,0x7fffffffffffffff
   28caa:	mov    DWORD PTR [rsp],0x0
   28cb1:	call   23640 <__sprintf_chk@plt+0x18c90>
   28cb6:	pop    rbp
   28cb7:	pop    r12
   28cb9:	mov    QWORD PTR [r14+0x110],0x0
   28cc4:	mov    QWORD PTR [r14+0x108],rax
   28ccb:	mov    QWORD PTR [r14+0xf0],0x0
   28cd6:	jmp    288bb <__sprintf_chk@plt+0x1df0b>
   28cdb:	nop    DWORD PTR [rax+rax*1+0x0]
   28ce0:	sub    rsp,0x8
   28ce4:	xor    r9d,r9d
   28ce7:	mov    rdx,r12
   28cea:	mov    esi,0xc
   28cef:	push   0x0
   28cf1:	movabs r13,0x8000000000000000
   28cfb:	lea    rdi,[rbx+0x159]
   28d02:	movabs r8,0x7fffffffffffffff
   28d0c:	mov    rcx,r13
   28d0f:	call   23640 <__sprintf_chk@plt+0x18c90>
   28d14:	lea    rdi,[rbx+0x165]
   28d1b:	mov    QWORD PTR [r14+0xe8],rax
   28d22:	jmp    28c92 <__sprintf_chk@plt+0x1e2e2>
   28d27:	call   a0a0 <__stack_chk_fail@plt>
   28d2c:	nop    DWORD PTR [rax+0x0]
   28d30:	endbr64 
   28d34:	push   r14
   28d36:	mov    ecx,0x40
   28d3b:	push   r13
   28d3d:	push   r12
   28d3f:	push   rbp
   28d40:	sub    rsp,0x3e8
   28d47:	mov    rax,QWORD PTR fs:0x28
   28d50:	mov    QWORD PTR [rsp+0x3d8],rax
   28d58:	xor    eax,eax
   28d5a:	lea    r13,[rsp+0x1d0]
   28d62:	mov    rdi,r13
   28d65:	rep stos QWORD PTR es:[rdi],rax
   28d68:	mov    rax,QWORD PTR [rip+0x56d49]        # 7fab8 <obstack_alloc_failed_handler@@Base+0xc80>
   28d6f:	mov    BYTE PTR [rsp+0x26c],0x56
   28d77:	test   rax,rax
   28d7a:	je     28d98 <__sprintf_chk@plt+0x1e3e8>
   28d7c:	mov    rdx,QWORD PTR [rax+0x88]
   28d83:	mov    QWORD PTR [rsp+0x258],rdx
   28d8b:	mov    eax,DWORD PTR [rax+0x90]
   28d91:	mov    DWORD PTR [rsp+0x260],eax
   28d98:	lea    rbp,[rsp+0x10]
   28d9d:	xor    eax,eax
   28d9f:	mov    ecx,0x37
   28da4:	mov    rdi,rbp
   28da7:	rep stos QWORD PTR es:[rdi],rax
   28daa:	mov    edi,0x2
   28daf:	call   a4a0 <malloc@plt>
   28db4:	test   rax,rax
   28db7:	je     28e58 <__sprintf_chk@plt+0x1e4a8>
   28dbd:	mov    edx,0x2e
   28dc2:	xor    ecx,ecx
   28dc4:	mov    rdi,r13
   28dc7:	mov    rsi,rbp
   28dca:	mov    WORD PTR [rax],dx
   28dcd:	lea    rdx,[rsp+0xc]
   28dd2:	mov    QWORD PTR [rsp+0x18],rax
   28dd7:	call   28710 <__sprintf_chk@plt+0x1dd60>
   28ddc:	mov    r12,QWORD PTR [rip+0x5650d]        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   28de3:	mov    rdi,QWORD PTR [rsp+0x18]
   28de8:	call   9ce0 <free@plt>
   28ded:	test   r12,r12
   28df0:	je     28e1c <__sprintf_chk@plt+0x1e46c>
   28df2:	mov    rdi,r12
   28df5:	call   a060 <strlen@plt>
   28dfa:	lea    r14,[rax+0x1]
   28dfe:	mov    rdi,r14
   28e01:	call   a4a0 <malloc@plt>
   28e06:	mov    rdi,rax
   28e09:	test   rax,rax
   28e0c:	je     28e58 <__sprintf_chk@plt+0x1e4a8>
   28e0e:	mov    rsi,r12
   28e11:	mov    rdx,r14
   28e14:	call   a420 <memcpy@plt>
   28e19:	mov    r12,rax
   28e1c:	xor    edx,edx
   28e1e:	mov    rdi,rbp
   28e21:	mov    rsi,r13
   28e24:	mov    QWORD PTR [rsp+0x18],r12
   28e29:	call   244c0 <__sprintf_chk@plt+0x19b10>
   28e2e:	mov    rdi,rbp
   28e31:	call   44a50 <argp_usage@@Base+0x16d0>
   28e36:	mov    rax,QWORD PTR [rsp+0x3d8]
   28e3e:	sub    rax,QWORD PTR fs:0x28
   28e47:	jne    28e5d <__sprintf_chk@plt+0x1e4ad>
   28e49:	add    rsp,0x3e8
   28e50:	pop    rbp
   28e51:	pop    r12
   28e53:	pop    r13
   28e55:	pop    r14
   28e57:	ret    
   28e58:	call   19130 <__sprintf_chk@plt+0xe780>
   28e5d:	call   a0a0 <__stack_chk_fail@plt>
   28e62:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   28e6d:	nop    DWORD PTR [rax]
   28e70:	endbr64 
   28e74:	mov    eax,DWORD PTR [rip+0x56246]        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   28e7a:	test   eax,eax
   28e7c:	jne    28e98 <__sprintf_chk@plt+0x1e4e8>
   28e7e:	cmp    BYTE PTR [rip+0x56624],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   28e85:	je     28e90 <__sprintf_chk@plt+0x1e4e0>
   28e87:	ret    
   28e88:	nop    DWORD PTR [rax+rax*1+0x0]
   28e90:	jmp    25260 <__sprintf_chk@plt+0x1a8b0>
   28e95:	nop    DWORD PTR [rax]
   28e98:	push   r13
   28e9a:	push   r12
   28e9c:	push   rbp
   28e9d:	push   rbx
   28e9e:	sub    rsp,0x18
   28ea2:	cmp    DWORD PTR [rip+0x563ff],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   28ea9:	mov    rdx,QWORD PTR [rip+0x56690]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   28eb0:	mov    rbp,QWORD PTR [rip+0x566d1]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   28eb7:	mov    rbx,QWORD PTR [rip+0x5667a]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   28ebe:	mov    rsi,QWORD PTR [rip+0x56203]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   28ec5:	je     28ff0 <__sprintf_chk@plt+0x1e640>
   28ecb:	sub    rdx,rbp
   28ece:	lea    rdi,[rip+0x5644b]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   28ed5:	sar    rdx,0x9
   28ed9:	add    rdx,rbx
   28edc:	call   244c0 <__sprintf_chk@plt+0x19b10>
   28ee1:	cmp    BYTE PTR [rip+0x55ffc],0x0        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   28ee8:	je     28fd8 <__sprintf_chk@plt+0x1e628>
   28eee:	cmp    DWORD PTR [rip+0x561cb],0x2        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   28ef5:	jle    28fd8 <__sprintf_chk@plt+0x1e628>
   28efb:	call   59b10 <_obstack_memory_used@@Base+0xce90>
   28f00:	test   al,al
   28f02:	je     28fd8 <__sprintf_chk@plt+0x1e628>
   28f08:	mov    r12,QWORD PTR [rip+0x565a1]        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   28f0f:	movzx  r13d,BYTE PTR [r12]
   28f14:	test   r13b,r13b
   28f17:	je     2903f <__sprintf_chk@plt+0x1e68f>
   28f1d:	mov    rbp,r12
   28f20:	xor    ebx,ebx
   28f22:	nop    WORD PTR [rax+rax*1+0x0]
   28f28:	mov    rdi,rbp
   28f2b:	call   a060 <strlen@plt>
   28f30:	add    rax,0x1
   28f34:	add    rbp,rax
   28f37:	add    rbx,rax
   28f3a:	cmp    BYTE PTR [rbp+0x0],0x0
   28f3e:	jne    28f28 <__sprintf_chk@plt+0x1e578>
   28f40:	add    rbx,0x1
   28f44:	je     28fd8 <__sprintf_chk@plt+0x1e628>
   28f4a:	add    r12,0x1
   28f4e:	sub    rbx,0x1
   28f52:	xor    ebp,ebp
   28f54:	jmp    28fa5 <__sprintf_chk@plt+0x1e5f5>
   28f56:	cs nop WORD PTR [rax+rax*1+0x0]
   28f60:	lea    eax,[r13-0x44]
   28f64:	cmp    al,0x15
   28f66:	ja     28f77 <__sprintf_chk@plt+0x1e5c7>
   28f68:	mov    edx,0x314401
   28f6d:	bt     rdx,rax
   28f71:	jb     29050 <__sprintf_chk@plt+0x1e6a0>
   28f77:	mov    rax,QWORD PTR [r8+0x28]
   28f7b:	cmp    rax,QWORD PTR [r8+0x30]
   28f7f:	jae    290a0 <__sprintf_chk@plt+0x1e6f0>
   28f85:	lea    rdx,[rax+0x1]
   28f89:	mov    QWORD PTR [r8+0x28],rdx
   28f8d:	mov    BYTE PTR [rax],r13b
   28f90:	lea    rax,[rbx-0x1]
   28f94:	test   rbx,rbx
   28f97:	je     28fd8 <__sprintf_chk@plt+0x1e628>
   28f99:	movzx  r13d,BYTE PTR [r12]
   28f9e:	mov    rbx,rax
   28fa1:	add    r12,0x1
   28fa5:	mov    r8,QWORD PTR [rip+0x560ec]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   28fac:	movsx  edi,r13b
   28fb0:	test   r13b,r13b
   28fb3:	jne    28f60 <__sprintf_chk@plt+0x1e5b0>
   28fb5:	mov    rax,QWORD PTR [r8+0x28]
   28fb9:	cmp    rax,QWORD PTR [r8+0x30]
   28fbd:	jae    29088 <__sprintf_chk@plt+0x1e6d8>
   28fc3:	lea    rdx,[rax+0x1]
   28fc7:	xor    ebp,ebp
   28fc9:	mov    QWORD PTR [r8+0x28],rdx
   28fcd:	mov    BYTE PTR [rax],0xa
   28fd0:	jmp    28f90 <__sprintf_chk@plt+0x1e5e0>
   28fd2:	nop    WORD PTR [rax+rax*1+0x0]
   28fd8:	cmp    BYTE PTR [rip+0x564ca],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   28fdf:	je     29030 <__sprintf_chk@plt+0x1e680>
   28fe1:	add    rsp,0x18
   28fe5:	pop    rbx
   28fe6:	pop    rbp
   28fe7:	pop    r12
   28fe9:	pop    r13
   28feb:	ret    
   28fec:	nop    DWORD PTR [rax+0x0]
   28ff0:	cmp    BYTE PTR [rip+0x55f72],0x0        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   28ff7:	jne    28ecb <__sprintf_chk@plt+0x1e51b>
   28ffd:	cmp    QWORD PTR [rip+0x562eb],0x0        # 7f2f0 <obstack_alloc_failed_handler@@Base+0x4b8>
   29005:	je     28ecb <__sprintf_chk@plt+0x1e51b>
   2900b:	mov    QWORD PTR [rsp+0x8],rdx
   29010:	mov    QWORD PTR [rsp],rsi
   29014:	call   28d30 <__sprintf_chk@plt+0x1e380>
   29019:	mov    BYTE PTR [rip+0x55f49],0x1        # 7ef69 <obstack_alloc_failed_handler@@Base+0x131>
   29020:	mov    rdx,QWORD PTR [rsp+0x8]
   29025:	mov    rsi,QWORD PTR [rsp]
   29029:	jmp    28ecb <__sprintf_chk@plt+0x1e51b>
   2902e:	xchg   ax,ax
   29030:	add    rsp,0x18
   29034:	pop    rbx
   29035:	pop    rbp
   29036:	pop    r12
   29038:	pop    r13
   2903a:	jmp    25260 <__sprintf_chk@plt+0x1a8b0>
   2903f:	mov    ebx,0x1
   29044:	jmp    28f4a <__sprintf_chk@plt+0x1e59a>
   29049:	nop    DWORD PTR [rax+0x0]
   29050:	mov    rsi,r8
   29053:	call   a260 <fputc@plt>
   29058:	test   ebp,ebp
   2905a:	je     29070 <__sprintf_chk@plt+0x1e6c0>
   2905c:	mov    ebp,0x1
   29061:	jmp    28f90 <__sprintf_chk@plt+0x1e5e0>
   29066:	cs nop WORD PTR [rax+rax*1+0x0]
   29070:	mov    rsi,QWORD PTR [rip+0x56021]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   29077:	mov    edi,0x20
   2907c:	call   a260 <fputc@plt>
   29081:	jmp    2905c <__sprintf_chk@plt+0x1e6ac>
   29083:	nop    DWORD PTR [rax+rax*1+0x0]
   29088:	mov    esi,0xa
   2908d:	mov    rdi,r8
   29090:	xor    ebp,ebp
   29092:	call   a120 <__overflow@plt>
   29097:	jmp    28f90 <__sprintf_chk@plt+0x1e5e0>
   2909c:	nop    DWORD PTR [rax+0x0]
   290a0:	movzx  esi,dil
   290a4:	mov    rdi,r8
   290a7:	call   a120 <__overflow@plt>
   290ac:	jmp    28f90 <__sprintf_chk@plt+0x1e5e0>
   290b1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   290bc:	nop    DWORD PTR [rax+0x0]
   290c0:	endbr64 
   290c4:	push   r12
   290c6:	mov    edi,0x38
   290cb:	call   a4a0 <malloc@plt>
   290d0:	test   rax,rax
   290d3:	je     29150 <__sprintf_chk@plt+0x1e7a0>
   290d5:	mov    rdx,QWORD PTR [rip+0x56814]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   290dc:	mov    r12,rax
   290df:	test   rdx,rdx
   290e2:	je     29108 <__sprintf_chk@plt+0x1e758>
   290e4:	mov    rax,QWORD PTR [rdx+0x8]
   290e8:	mov    QWORD PTR [r12+0x8],rax
   290ed:	test   rax,rax
   290f0:	je     290f5 <__sprintf_chk@plt+0x1e745>
   290f2:	mov    QWORD PTR [rax],r12
   290f5:	mov    QWORD PTR [r12],rdx
   290f9:	mov    rax,r12
   290fc:	mov    QWORD PTR [rdx+0x8],r12
   29100:	pop    r12
   29102:	ret    
   29103:	nop    DWORD PTR [rax+rax*1+0x0]
   29108:	mov    QWORD PTR [rax],0x0
   2910f:	mov    edi,0x38
   29114:	mov    QWORD PTR [rax+0x8],0x0
   2911c:	mov    DWORD PTR [rax+0x10],0x3
   29123:	mov    QWORD PTR [rip+0x567c6],rax        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2912a:	call   a4a0 <malloc@plt>
   2912f:	test   rax,rax
   29132:	je     29150 <__sprintf_chk@plt+0x1e7a0>
   29134:	mov    rdx,r12
   29137:	mov    r12,rax
   2913a:	mov    QWORD PTR [rax+0x8],0x0
   29142:	mov    QWORD PTR [r12],rdx
   29146:	mov    rax,r12
   29149:	mov    QWORD PTR [rdx+0x8],r12
   2914d:	pop    r12
   2914f:	ret    
   29150:	call   19130 <__sprintf_chk@plt+0xe780>
   29155:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   29160:	endbr64 
   29164:	push   r12
   29166:	push   rbp
   29167:	mov    rbp,rsi
   2916a:	push   rbx
   2916b:	cmp    edi,0x100
   29171:	je     29260 <__sprintf_chk@plt+0x1e8b0>
   29177:	mov    ebx,edi
   29179:	jg     291c0 <__sprintf_chk@plt+0x1e810>
   2917b:	cmp    edi,0x43
   2917e:	je     29240 <__sprintf_chk@plt+0x1e890>
   29184:	cmp    edi,0x54
   29187:	jne    291e8 <__sprintf_chk@plt+0x1e838>
   29189:	call   290c0 <__sprintf_chk@plt+0x1e710>
   2918e:	mov    DWORD PTR [rip+0x56668],0x2        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   29198:	mov    DWORD PTR [rax+0x10],0x2
   2919f:	mov    QWORD PTR [rax+0x18],rbp
   291a3:	mov    QWORD PTR [rax+0x20],0x0
   291ab:	mov    QWORD PTR [rax+0x30],0x0
   291b3:	xor    eax,eax
   291b5:	pop    rbx
   291b6:	pop    rbp
   291b7:	pop    r12
   291b9:	ret    
   291ba:	nop    WORD PTR [rax+rax*1+0x0]
   291c0:	cmp    edi,0x1000005
   291c6:	jne    291e8 <__sprintf_chk@plt+0x1e838>
   291c8:	mov    rax,QWORD PTR [rdx+0x28]
   291cc:	mov    rax,QWORD PTR [rax]
   291cf:	cmp    DWORD PTR [rax],0x2
   291d2:	je     292a8 <__sprintf_chk@plt+0x1e8f8>
   291d8:	pop    rbx
   291d9:	mov    eax,0x7
   291de:	pop    rbp
   291df:	pop    r12
   291e1:	ret    
   291e2:	nop    WORD PTR [rax+rax*1+0x0]
   291e8:	lea    rax,[rip+0x53111]        # 7c300 <_obstack_memory_used@@Base+0x2f680>
   291ef:	jmp    29200 <__sprintf_chk@plt+0x1e850>
   291f1:	nop    DWORD PTR [rax+0x0]
   291f8:	cmp    ebx,edx
   291fa:	je     29220 <__sprintf_chk@plt+0x1e870>
   291fc:	add    rax,0x30
   29200:	cmp    QWORD PTR [rax],0x0
   29204:	mov    edx,DWORD PTR [rax+0x8]
   29207:	jne    291f8 <__sprintf_chk@plt+0x1e848>
   29209:	test   edx,edx
   2920b:	jne    291f8 <__sprintf_chk@plt+0x1e848>
   2920d:	cmp    QWORD PTR [rax+0x20],0x0
   29212:	je     291d8 <__sprintf_chk@plt+0x1e828>
   29214:	cmp    ebx,edx
   29216:	jne    291fc <__sprintf_chk@plt+0x1e84c>
   29218:	nop    DWORD PTR [rax+rax*1+0x0]
   29220:	call   290c0 <__sprintf_chk@plt+0x1e710>
   29225:	mov    DWORD PTR [rax+0x10],0x4
   2922c:	mov    DWORD PTR [rax+0x18],ebx
   2922f:	mov    QWORD PTR [rax+0x20],rbp
   29233:	pop    rbx
   29234:	xor    eax,eax
   29236:	pop    rbp
   29237:	pop    r12
   29239:	ret    
   2923a:	nop    WORD PTR [rax+rax*1+0x0]
   29240:	call   290c0 <__sprintf_chk@plt+0x1e710>
   29245:	mov    DWORD PTR [rax+0x10],0x1
   2924c:	mov    QWORD PTR [rax+0x18],rbp
   29250:	xor    eax,eax
   29252:	pop    rbx
   29253:	pop    rbp
   29254:	pop    r12
   29256:	ret    
   29257:	nop    WORD PTR [rax+rax*1+0x0]
   29260:	call   290c0 <__sprintf_chk@plt+0x1e710>
   29265:	mov    DWORD PTR [rax+0x10],0x0
   2926c:	mov    QWORD PTR [rax+0x18],rbp
   29270:	mov    eax,DWORD PTR [rip+0x5658a]        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   29276:	test   eax,eax
   29278:	je     29290 <__sprintf_chk@plt+0x1e8e0>
   2927a:	cmp    eax,0x1
   2927d:	jne    29233 <__sprintf_chk@plt+0x1e883>
   2927f:	mov    DWORD PTR [rip+0x56577],0x2        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   29289:	xor    eax,eax
   2928b:	jmp    291b5 <__sprintf_chk@plt+0x1e805>
   29290:	mov    DWORD PTR [rip+0x56566],0x1        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   2929a:	xor    eax,eax
   2929c:	jmp    291b5 <__sprintf_chk@plt+0x1e805>
   292a1:	nop    DWORD PTR [rax+0x0]
   292a8:	xor    edi,edi
   292aa:	mov    rbx,QWORD PTR [rax+0x10]
   292ae:	mov    r12,QWORD PTR [rax+0x8]
   292b2:	mov    edx,0x5
   292b7:	lea    rsi,[rip+0x3bc68]        # 64f26 <_obstack_memory_used@@Base+0x182a6>
   292be:	call   a040 <dcgettext@plt>
   292c3:	xor    esi,esi
   292c5:	xor    edi,edi
   292c7:	mov    r8,rbx
   292ca:	mov    rdx,rax
   292cd:	mov    rcx,r12
   292d0:	xor    eax,eax
   292d2:	call   a640 <error@plt>
   292d7:	cmp    DWORD PTR [rip+0x55de6],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   292de:	jg     291d8 <__sprintf_chk@plt+0x1e828>
   292e4:	mov    DWORD PTR [rip+0x55dd6],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   292ee:	jmp    291d8 <__sprintf_chk@plt+0x1e828>
   292f3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   292fe:	xchg   ax,ax
   29300:	endbr64 
   29304:	push   r15
   29306:	push   r14
   29308:	mov    r14,rdi
   2930b:	mov    edi,0x60
   29310:	push   r13
   29312:	mov    r13d,esi
   29315:	mov    esi,0x1
   2931a:	push   r12
   2931c:	push   rbp
   2931d:	mov    rbp,rcx
   29320:	push   rbx
   29321:	mov    ebx,edx
   29323:	sub    rsp,0x8
   29327:	call   a2f0 <calloc@plt>
   2932c:	test   rax,rax
   2932f:	je     29421 <__sprintf_chk@plt+0x1ea71>
   29335:	mov    r12,rax
   29338:	test   r14,r14
   2933b:	je     29400 <__sprintf_chk@plt+0x1ea50>
   29341:	mov    rdi,r14
   29344:	call   a060 <strlen@plt>
   29349:	lea    r15,[rax+0x1]
   2934d:	mov    rdi,r15
   29350:	call   a4a0 <malloc@plt>
   29355:	mov    rdi,rax
   29358:	test   rax,rax
   2935b:	je     29421 <__sprintf_chk@plt+0x1ea71>
   29361:	mov    rdx,r15
   29364:	mov    rsi,r14
   29367:	call   a420 <memcpy@plt>
   2936c:	mov    QWORD PTR [r12+0x10],rax
   29371:	mov    rdi,rax
   29374:	call   a060 <strlen@plt>
   29379:	xor    edx,edx
   2937b:	mov    DWORD PTR [r12+0x28],r13d
   29380:	mov    rcx,QWORD PTR [rip+0x56449]        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   29387:	mov    QWORD PTR [r12+0x18],rax
   2938c:	mov    eax,DWORD PTR [rip+0x52f16]        # 7c2a8 <_obstack_memory_used@@Base+0x2f628>
   29392:	or     eax,DWORD PTR [rip+0x56540]        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   29398:	or     eax,DWORD PTR [rip+0x563d6]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2939e:	mov    QWORD PTR [r12+0x8],rcx
   293a3:	cmp    DWORD PTR [rip+0x56532],0x2        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   293aa:	mov    QWORD PTR [r12+0x40],rbp
   293af:	sete   dl
   293b2:	mov    BYTE PTR [r12+0x24],bl
   293b7:	shl    edx,0x1c
   293ba:	mov    QWORD PTR [r12],0x0
   293c2:	mov    QWORD PTR [r12+0x30],0x0
   293cb:	or     eax,edx
   293cd:	mov    DWORD PTR [r12+0x20],eax
   293d2:	mov    QWORD PTR [r12+0x38],0x0
   293db:	test   rcx,rcx
   293de:	je     29418 <__sprintf_chk@plt+0x1ea68>
   293e0:	mov    QWORD PTR [rcx],r12
   293e3:	mov    QWORD PTR [rip+0x563e6],r12        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   293ea:	add    rsp,0x8
   293ee:	mov    rax,r12
   293f1:	pop    rbx
   293f2:	pop    rbp
   293f3:	pop    r12
   293f5:	pop    r13
   293f7:	pop    r14
   293f9:	pop    r15
   293fb:	ret    
   293fc:	nop    DWORD PTR [rax+0x0]
   29400:	mov    r15d,0x1
   29406:	lea    r14,[rip+0x42743]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   2940d:	jmp    2934d <__sprintf_chk@plt+0x1e99d>
   29412:	nop    WORD PTR [rax+rax*1+0x0]
   29418:	mov    QWORD PTR [rip+0x563b9],r12        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2941f:	jmp    293e3 <__sprintf_chk@plt+0x1ea33>
   29421:	call   19130 <__sprintf_chk@plt+0xe780>
   29426:	cs nop WORD PTR [rax+rax*1+0x0]
   29430:	endbr64 
   29434:	mov    rax,QWORD PTR [rdi+0x8]
   29438:	mov    rdx,QWORD PTR [rdi]
   2943b:	test   rax,rax
   2943e:	je     29450 <__sprintf_chk@plt+0x1eaa0>
   29440:	mov    QWORD PTR [rax],rdx
   29443:	test   rdx,rdx
   29446:	je     2945c <__sprintf_chk@plt+0x1eaac>
   29448:	mov    QWORD PTR [rdx+0x8],rax
   2944c:	ret    
   2944d:	nop    DWORD PTR [rax]
   29450:	mov    QWORD PTR [rip+0x56381],rdx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   29457:	test   rdx,rdx
   2945a:	jne    29448 <__sprintf_chk@plt+0x1ea98>
   2945c:	mov    QWORD PTR [rip+0x5636d],rax        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   29463:	ret    
   29464:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2946f:	nop
   29470:	endbr64 
   29474:	mov    eax,DWORD PTR [rip+0x56462]        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   2947a:	test   eax,eax
   2947c:	jne    29508 <__sprintf_chk@plt+0x1eb58>
   29482:	sub    rsp,0x8
   29486:	xor    esi,esi
   29488:	call   48550 <argp_usage@@Base+0x51d0>
   2948d:	test   al,al
   2948f:	je     294f9 <__sprintf_chk@plt+0x1eb49>
   29491:	mov    rax,QWORD PTR [rip+0x56070]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   29498:	mov    DWORD PTR [rip+0x564b6],0x1        # 7f958 <obstack_alloc_failed_handler@@Base+0xb20>
   294a2:	test   rax,rax
   294a5:	je     294a9 <__sprintf_chk@plt+0x1eaf9>
   294a7:	call   rax
   294a9:	mov    edx,0x5
   294ae:	lea    rsi,[rip+0x3c1fb]        # 656b0 <_obstack_memory_used@@Base+0x18a30>
   294b5:	xor    edi,edi
   294b7:	call   a040 <dcgettext@plt>
   294bc:	xor    esi,esi
   294be:	xor    edi,edi
   294c0:	mov    rdx,rax
   294c3:	xor    eax,eax
   294c5:	call   a640 <error@plt>
   294ca:	mov    rax,QWORD PTR [rip+0x56037]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   294d1:	test   rax,rax
   294d4:	je     294d8 <__sprintf_chk@plt+0x1eb28>
   294d6:	call   rax
   294d8:	mov    edx,0x5
   294dd:	lea    rsi,[rip+0x3c1fc]        # 656e0 <_obstack_memory_used@@Base+0x18a60>
   294e4:	xor    edi,edi
   294e6:	call   a040 <dcgettext@plt>
   294eb:	xor    esi,esi
   294ed:	xor    edi,edi
   294ef:	mov    rdx,rax
   294f2:	xor    eax,eax
   294f4:	call   a640 <error@plt>
   294f9:	mov    eax,DWORD PTR [rip+0x56459]        # 7f958 <obstack_alloc_failed_handler@@Base+0xb20>
   294ff:	add    rsp,0x8
   29503:	ret    
   29504:	nop    DWORD PTR [rax+0x0]
   29508:	mov    eax,DWORD PTR [rip+0x5644a]        # 7f958 <obstack_alloc_failed_handler@@Base+0xb20>
   2950e:	ret    
   2950f:	nop
   29510:	endbr64 
   29514:	push   r14
   29516:	push   r13
   29518:	push   r12
   2951a:	push   rbp
   2951b:	push   rbx
   2951c:	sub    rsp,0x20
   29520:	mov    rax,QWORD PTR fs:0x28
   29529:	mov    QWORD PTR [rsp+0x18],rax
   2952e:	xor    eax,eax
   29530:	cmp    esi,0x1
   29533:	je     29653 <__sprintf_chk@plt+0x1eca3>
   29539:	mov    r8,QWORD PTR [rdi]
   2953c:	mov    r12,rdx
   2953f:	cmp    esi,0x2
   29542:	je     29640 <__sprintf_chk@plt+0x1ec90>
   29548:	lea    eax,[rsi+0x1]
   2954b:	mov    r13d,esi
   2954e:	mov    r8d,eax
   29551:	shr    r13d,0x1f
   29555:	shr    r8d,0x1f
   29559:	add    r13d,esi
   2955c:	add    r8d,eax
   2955f:	sar    r13d,1
   29562:	mov    rax,rdi
   29565:	sar    r8d,1
   29568:	mov    edx,r8d
   2956b:	sub    edx,0x1
   2956e:	jne    29630 <__sprintf_chk@plt+0x1ec80>
   29574:	mov    r14,QWORD PTR [rax]
   29577:	mov    QWORD PTR [rax],0x0
   2957e:	mov    esi,r8d
   29581:	mov    rdx,r12
   29584:	call   29510 <__sprintf_chk@plt+0x1eb60>
   29589:	mov    rdx,r12
   2958c:	mov    esi,r13d
   2958f:	mov    rdi,r14
   29592:	mov    rbp,rax
   29595:	call   29510 <__sprintf_chk@plt+0x1eb60>
   2959a:	mov    rbx,rax
   2959d:	test   rbp,rbp
   295a0:	je     29670 <__sprintf_chk@plt+0x1ecc0>
   295a6:	test   rax,rax
   295a9:	je     29670 <__sprintf_chk@plt+0x1ecc0>
   295af:	lea    r13,[rsp+0x10]
   295b4:	jmp    295da <__sprintf_chk@plt+0x1ec2a>
   295b6:	cs nop WORD PTR [rax+rax*1+0x0]
   295c0:	mov    rdx,rbx
   295c3:	mov    rax,rbx
   295c6:	mov    rbx,QWORD PTR [rbx]
   295c9:	mov    QWORD PTR [r13+0x0],rdx
   295cd:	test   rbp,rbp
   295d0:	je     29600 <__sprintf_chk@plt+0x1ec50>
   295d2:	test   rbx,rbx
   295d5:	je     29600 <__sprintf_chk@plt+0x1ec50>
   295d7:	mov    r13,rax
   295da:	mov    rsi,rbx
   295dd:	mov    rdi,rbp
   295e0:	call   r12
   295e3:	test   eax,eax
   295e5:	jns    295c0 <__sprintf_chk@plt+0x1ec10>
   295e7:	mov    rdx,rbp
   295ea:	mov    rax,rbp
   295ed:	mov    rbp,QWORD PTR [rbp+0x0]
   295f1:	mov    QWORD PTR [r13+0x0],rdx
   295f5:	test   rbp,rbp
   295f8:	jne    295d2 <__sprintf_chk@plt+0x1ec22>
   295fa:	nop    WORD PTR [rax+rax*1+0x0]
   29600:	test   rbp,rbp
   29603:	cmove  rbp,rbx
   29607:	mov    QWORD PTR [rax],rbp
   2960a:	mov    rax,QWORD PTR [rsp+0x10]
   2960f:	mov    rdx,QWORD PTR [rsp+0x18]
   29614:	sub    rdx,QWORD PTR fs:0x28
   2961d:	jne    29677 <__sprintf_chk@plt+0x1ecc7>
   2961f:	add    rsp,0x20
   29623:	pop    rbx
   29624:	pop    rbp
   29625:	pop    r12
   29627:	pop    r13
   29629:	pop    r14
   2962b:	ret    
   2962c:	nop    DWORD PTR [rax+0x0]
   29630:	mov    rax,QWORD PTR [rax]
   29633:	sub    edx,0x1
   29636:	je     29574 <__sprintf_chk@plt+0x1ebc4>
   2963c:	jmp    29630 <__sprintf_chk@plt+0x1ec80>
   2963e:	xchg   ax,ax
   29640:	mov    QWORD PTR [rsp+0x8],rdi
   29645:	mov    rsi,r8
   29648:	call   rdx
   2964a:	mov    rdi,QWORD PTR [rsp+0x8]
   2964f:	test   eax,eax
   29651:	jg     29660 <__sprintf_chk@plt+0x1ecb0>
   29653:	mov    rax,rdi
   29656:	jmp    2960f <__sprintf_chk@plt+0x1ec5f>
   29658:	nop    DWORD PTR [rax+rax*1+0x0]
   29660:	mov    rax,QWORD PTR [rdi]
   29663:	mov    QWORD PTR [rax],rdi
   29666:	mov    QWORD PTR [rdi],0x0
   2966d:	jmp    2960f <__sprintf_chk@plt+0x1ec5f>
   2966f:	nop
   29670:	lea    rax,[rsp+0x10]
   29675:	jmp    29600 <__sprintf_chk@plt+0x1ec50>
   29677:	call   a0a0 <__stack_chk_fail@plt>
   2967c:	nop    DWORD PTR [rax+0x0]
   29680:	endbr64 
   29684:	push   r15
   29686:	push   r14
   29688:	push   r13
   2968a:	push   r12
   2968c:	mov    r12,rsi
   2968f:	push   rbp
   29690:	push   rbx
   29691:	sub    rsp,0x208
   29698:	mov    QWORD PTR [rsp+0x18],rdi
   2969d:	mov    rax,QWORD PTR fs:0x28
   296a6:	mov    QWORD PTR [rsp+0x1f8],rax
   296ae:	xor    eax,eax
   296b0:	call   27a90 <__sprintf_chk@plt+0x1d0e0>
   296b5:	mov    QWORD PTR [r12+0x38],rax
   296ba:	test   rax,rax
   296bd:	je     297b1 <__sprintf_chk@plt+0x1ee01>
   296c3:	mov    rax,QWORD PTR [rax+0x28]
   296c7:	test   rax,rax
   296ca:	je     297b1 <__sprintf_chk@plt+0x1ee01>
   296d0:	mov    rbx,QWORD PTR [rax]
   296d3:	test   rbx,rbx
   296d6:	je     297b1 <__sprintf_chk@plt+0x1ee01>
   296dc:	mov    rax,QWORD PTR [r12+0x18]
   296e1:	lea    r9,[rax+0x66]
   296e5:	cmp    rax,0x63
   296e9:	mov    QWORD PTR [rsp+0x8],rax
   296ee:	mov    eax,0x66
   296f3:	cmova  rax,r9
   296f7:	mov    rdi,rax
   296fa:	mov    r13,rax
   296fd:	call   a4a0 <malloc@plt>
   29702:	mov    r14,rax
   29705:	test   rax,rax
   29708:	je     29a06 <__sprintf_chk@plt+0x1f056>
   2970e:	mov    eax,DWORD PTR [r12+0x28]
   29713:	mov    rsi,QWORD PTR [r12+0x10]
   29718:	mov    rdi,r14
   2971b:	mov    DWORD PTR [rsp+0x34],eax
   2971f:	call   9e80 <strcpy@plt>
   29724:	mov    rax,QWORD PTR [rsp+0x8]
   29729:	cmp    BYTE PTR [r14+rax*1-0x1],0x2f
   2972f:	je     29745 <__sprintf_chk@plt+0x1ed95>
   29731:	mov    BYTE PTR [r14+rax*1],0x2f
   29736:	mov    BYTE PTR [r14+rax*1+0x1],0x0
   2973c:	add    rax,0x1
   29740:	mov    QWORD PTR [rsp+0x8],rax
   29745:	movzx  r15d,BYTE PTR [rbx]
   29749:	test   r15b,r15b
   2974c:	je     29958 <__sprintf_chk@plt+0x1efa8>
   29752:	mov    QWORD PTR [rsp+0x28],0x0
   2975b:	lea    rax,[rsp+0x40]
   29760:	mov    QWORD PTR [rsp+0x10],0x0
   29769:	mov    QWORD PTR [rsp+0x20],rax
   2976e:	mov    rax,r12
   29771:	mov    r12,r13
   29774:	mov    r13,r14
   29777:	mov    r14,rax
   2977a:	mov    rdi,rbx
   2977d:	call   a060 <strlen@plt>
   29782:	mov    rbp,rax
   29785:	cmp    r15b,0x44
   29789:	je     297e0 <__sprintf_chk@plt+0x1ee30>
   2978b:	lea    rbx,[rbx+rbp*1+0x1]
   29790:	movzx  r15d,BYTE PTR [rbx]
   29794:	test   r15b,r15b
   29797:	jne    2977a <__sprintf_chk@plt+0x1edca>
   29799:	mov    r12,r14
   2979c:	mov    r14,r13
   2979f:	mov    rdi,r14
   297a2:	call   9ce0 <free@plt>
   297a7:	mov    rax,QWORD PTR [rsp+0x10]
   297ac:	mov    QWORD PTR [r12+0x48],rax
   297b1:	mov    rax,QWORD PTR [rsp+0x1f8]
   297b9:	sub    rax,QWORD PTR fs:0x28
   297c2:	jne    29a0b <__sprintf_chk@plt+0x1f05b>
   297c8:	add    rsp,0x208
   297cf:	pop    rbx
   297d0:	pop    rbp
   297d1:	pop    r12
   297d3:	pop    r13
   297d5:	pop    r14
   297d7:	pop    r15
   297d9:	ret    
   297da:	nop    WORD PTR [rax+rax*1+0x0]
   297e0:	mov    rax,QWORD PTR [rsp+0x8]
   297e5:	mov    rdi,r13
   297e8:	lea    r15,[rax+rbp*1]
   297ec:	jmp    29822 <__sprintf_chk@plt+0x1ee72>
   297ee:	xchg   ax,ax
   297f0:	movabs rax,0x5555555555555553
   297fa:	cmp    r12,rax
   297fd:	ja     29a06 <__sprintf_chk@plt+0x1f056>
   29803:	mov    rax,r12
   29806:	shr    rax,1
   29809:	lea    r12,[r12+rax*1+0x1]
   2980e:	mov    rsi,r12
   29811:	call   a570 <realloc@plt>
   29816:	mov    rdi,rax
   29819:	test   rax,rax
   2981c:	je     29a06 <__sprintf_chk@plt+0x1f056>
   29822:	cmp    r15,r12
   29825:	ja     297f0 <__sprintf_chk@plt+0x1ee40>
   29827:	mov    rax,QWORD PTR [rsp+0x8]
   2982c:	lea    r10,[rbx+0x1]
   29830:	mov    r13,rdi
   29833:	mov    rsi,r10
   29836:	mov    QWORD PTR [rsp+0x38],r10
   2983b:	lea    rdi,[rdi+rax*1]
   2983f:	call   9e80 <strcpy@plt>
   29844:	mov    esi,DWORD PTR [rsp+0x34]
   29848:	xor    edx,edx
   2984a:	mov    rcx,r14
   2984d:	mov    rdi,r13
   29850:	call   29300 <__sprintf_chk@plt+0x1e950>
   29855:	cmp    QWORD PTR [rsp+0x10],0x0
   2985b:	mov    r10,QWORD PTR [rsp+0x38]
   29860:	mov    r15,rax
   29863:	je     29970 <__sprintf_chk@plt+0x1efc0>
   29869:	mov    rax,QWORD PTR [rsp+0x28]
   2986e:	mov    QWORD PTR [rax+0x50],r15
   29872:	mov    rdi,QWORD PTR [rsp+0x20]
   29877:	xor    eax,eax
   29879:	mov    ecx,0x37
   2987e:	rep stos QWORD PTR es:[rdi],rax
   29881:	mov    rax,QWORD PTR [rsp+0x18]
   29886:	mov    edx,DWORD PTR [rax+0x1a8]
   2988c:	mov    QWORD PTR [rsp+0x1d8],rax
   29894:	test   edx,edx
   29896:	mov    DWORD PTR [rsp+0x28],edx
   2989a:	jns    298f0 <__sprintf_chk@plt+0x1ef40>
   2989c:	call   9e40 <__errno_location@plt>
   298a1:	mov    edx,DWORD PTR [rsp+0x28]
   298a5:	neg    edx
   298a7:	mov    DWORD PTR [rax],edx
   298a9:	cmp    BYTE PTR [rip+0x55c50],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   298b0:	je     29980 <__sprintf_chk@plt+0x1efd0>
   298b6:	test   BYTE PTR [rip+0x527c1],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   298bd:	jne    298d8 <__sprintf_chk@plt+0x1ef28>
   298bf:	mov    rdi,QWORD PTR [rsp+0x20]
   298c4:	call   44a50 <argp_usage@@Base+0x16d0>
   298c9:	mov    QWORD PTR [rsp+0x28],r15
   298ce:	jmp    2978b <__sprintf_chk@plt+0x1eddb>
   298d3:	nop    DWORD PTR [rax+rax*1+0x0]
   298d8:	mov    rsi,r13
   298db:	lea    rdi,[rip+0x398de]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   298e2:	call   3c100 <__sprintf_chk@plt+0x31750>
   298e7:	jmp    298bf <__sprintf_chk@plt+0x1ef0f>
   298e9:	nop    DWORD PTR [rax+0x0]
   298f0:	mov    edx,DWORD PTR [rip+0x5567a]        # 7ef70 <obstack_alloc_failed_handler@@Base+0x138>
   298f6:	mov    rdi,QWORD PTR [rsp+0x18]
   298fb:	mov    rsi,r10
   298fe:	or     edx,0x10000
   29904:	call   18ce0 <__sprintf_chk@plt+0xe330>
   29909:	mov    edi,eax
   2990b:	test   eax,eax
   2990d:	js     298a9 <__sprintf_chk@plt+0x1eef9>
   2990f:	lea    rsi,[rsp+0x98]
   29917:	mov    DWORD PTR [rsp+0x1e8],eax
   2991e:	call   a920 <fstat@plt>
   29923:	test   eax,eax
   29925:	je     299a3 <__sprintf_chk@plt+0x1eff3>
   29927:	cmp    BYTE PTR [rip+0x55bd2],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   2992e:	je     299f2 <__sprintf_chk@plt+0x1f042>
   29934:	test   BYTE PTR [rip+0x52743],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   2993b:	je     298bf <__sprintf_chk@plt+0x1ef0f>
   2993d:	mov    rsi,r13
   29940:	lea    rdi,[rip+0x396fc]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   29947:	call   3c100 <__sprintf_chk@plt+0x31750>
   2994c:	jmp    298bf <__sprintf_chk@plt+0x1ef0f>
   29951:	nop    DWORD PTR [rax+0x0]
   29958:	mov    QWORD PTR [rsp+0x10],0x0
   29961:	jmp    2979f <__sprintf_chk@plt+0x1edef>
   29966:	cs nop WORD PTR [rax+rax*1+0x0]
   29970:	mov    QWORD PTR [rsp+0x10],rax
   29975:	jmp    29872 <__sprintf_chk@plt+0x1eec2>
   2997a:	nop    WORD PTR [rax+rax*1+0x0]
   29980:	mov    rsi,r13
   29983:	lea    rdi,[rip+0x39836]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   2998a:	call   3bad0 <__sprintf_chk@plt+0x31120>
   2998f:	mov    rdi,QWORD PTR [rsp+0x20]
   29994:	call   44a50 <argp_usage@@Base+0x16d0>
   29999:	mov    QWORD PTR [rsp+0x28],r15
   2999e:	jmp    2978b <__sprintf_chk@plt+0x1eddb>
   299a3:	mov    rdi,r13
   299a6:	call   a060 <strlen@plt>
   299ab:	lea    rdx,[rax+0x1]
   299af:	mov    rdi,rdx
   299b2:	mov    QWORD PTR [rsp+0x28],rdx
   299b7:	call   a4a0 <malloc@plt>
   299bc:	mov    rdi,rax
   299bf:	test   rax,rax
   299c2:	je     29a06 <__sprintf_chk@plt+0x1f056>
   299c4:	mov    rdx,QWORD PTR [rsp+0x28]
   299c9:	mov    rsi,r13
   299cc:	call   a420 <memcpy@plt>
   299d1:	mov    rdi,QWORD PTR [rsp+0x20]
   299d6:	mov    rsi,r15
   299d9:	mov    QWORD PTR [rsp+0x40],rax
   299de:	call   29680 <__sprintf_chk@plt+0x1ecd0>
   299e3:	mov    rdi,QWORD PTR [rsp+0x20]
   299e8:	call   18d70 <__sprintf_chk@plt+0xe3c0>
   299ed:	jmp    298bf <__sprintf_chk@plt+0x1ef0f>
   299f2:	mov    rsi,r13
   299f5:	lea    rdi,[rip+0x39647]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   299fc:	call   3bad0 <__sprintf_chk@plt+0x31120>
   29a01:	jmp    298bf <__sprintf_chk@plt+0x1ef0f>
   29a06:	call   19130 <__sprintf_chk@plt+0xe780>
   29a0b:	call   a0a0 <__stack_chk_fail@plt>
   29a10:	endbr64 
   29a14:	push   r13
   29a16:	mov    r13,rsi
   29a19:	push   r12
   29a1b:	mov    r12,rdx
   29a1e:	push   rbp
   29a1f:	push   rbx
   29a20:	mov    rbx,rdi
   29a23:	sub    rsp,0x8
   29a27:	cmp    BYTE PTR [rsi],0x0
   29a2a:	jne    29ad8 <__sprintf_chk@plt+0x1f128>
   29a30:	mov    rax,QWORD PTR [rbx+0x18]
   29a34:	cmp    QWORD PTR [rbx+0x20],rax
   29a38:	je     29afa <__sprintf_chk@plt+0x1f14a>
   29a3e:	lea    rdx,[rax+0x1]
   29a42:	mov    rdi,r13
   29a45:	mov    QWORD PTR [rbx+0x18],rdx
   29a49:	mov    BYTE PTR [rax],0x52
   29a4c:	call   a060 <strlen@plt>
   29a51:	mov    rdi,QWORD PTR [rbx+0x18]
   29a55:	lea    rbp,[rax+0x1]
   29a59:	mov    rax,QWORD PTR [rbx+0x20]
   29a5d:	sub    rax,rdi
   29a60:	cmp    rbp,rax
   29a63:	ja     29b60 <__sprintf_chk@plt+0x1f1b0>
   29a69:	mov    rdx,rbp
   29a6c:	mov    rsi,r13
   29a6f:	call   a420 <memcpy@plt>
   29a74:	mov    rax,QWORD PTR [rbx+0x18]
   29a78:	add    rax,rbp
   29a7b:	mov    QWORD PTR [rbx+0x18],rax
   29a7f:	cmp    BYTE PTR [r12],0x0
   29a84:	jne    29b28 <__sprintf_chk@plt+0x1f178>
   29a8a:	cmp    QWORD PTR [rbx+0x20],rax
   29a8e:	je     29b4a <__sprintf_chk@plt+0x1f19a>
   29a94:	lea    rdx,[rax+0x1]
   29a98:	mov    rdi,r12
   29a9b:	mov    QWORD PTR [rbx+0x18],rdx
   29a9f:	mov    BYTE PTR [rax],0x54
   29aa2:	call   a060 <strlen@plt>
   29aa7:	mov    rdi,QWORD PTR [rbx+0x18]
   29aab:	lea    rbp,[rax+0x1]
   29aaf:	mov    rax,QWORD PTR [rbx+0x20]
   29ab3:	sub    rax,rdi
   29ab6:	cmp    rbp,rax
   29ab9:	ja     29b10 <__sprintf_chk@plt+0x1f160>
   29abb:	mov    rdx,rbp
   29abe:	mov    rsi,r12
   29ac1:	call   a420 <memcpy@plt>
   29ac6:	add    QWORD PTR [rbx+0x18],rbp
   29aca:	add    rsp,0x8
   29ace:	pop    rbx
   29acf:	pop    rbp
   29ad0:	pop    r12
   29ad2:	pop    r13
   29ad4:	ret    
   29ad5:	nop    DWORD PTR [rax]
   29ad8:	movzx  edx,BYTE PTR [rip+0x55cd1]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   29adf:	mov    rdi,r13
   29ae2:	xor    esi,esi
   29ae4:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   29ae9:	mov    r13,rax
   29aec:	mov    rax,QWORD PTR [rbx+0x18]
   29af0:	cmp    QWORD PTR [rbx+0x20],rax
   29af4:	jne    29a3e <__sprintf_chk@plt+0x1f08e>
   29afa:	mov    esi,0x1
   29aff:	mov    rdi,rbx
   29b02:	call   4ca80 <_obstack_newchunk@@Base>
   29b07:	mov    rax,QWORD PTR [rbx+0x18]
   29b0b:	jmp    29a3e <__sprintf_chk@plt+0x1f08e>
   29b10:	mov    rdi,rbx
   29b13:	mov    rsi,rbp
   29b16:	call   4ca80 <_obstack_newchunk@@Base>
   29b1b:	mov    rdi,QWORD PTR [rbx+0x18]
   29b1f:	jmp    29abb <__sprintf_chk@plt+0x1f10b>
   29b21:	nop    DWORD PTR [rax+0x0]
   29b28:	movzx  edx,BYTE PTR [rip+0x55c81]        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   29b2f:	mov    rdi,r12
   29b32:	xor    esi,esi
   29b34:	call   3c650 <__sprintf_chk@plt+0x31ca0>
   29b39:	mov    r12,rax
   29b3c:	mov    rax,QWORD PTR [rbx+0x18]
   29b40:	cmp    QWORD PTR [rbx+0x20],rax
   29b44:	jne    29a94 <__sprintf_chk@plt+0x1f0e4>
   29b4a:	mov    esi,0x1
   29b4f:	mov    rdi,rbx
   29b52:	call   4ca80 <_obstack_newchunk@@Base>
   29b57:	mov    rax,QWORD PTR [rbx+0x18]
   29b5b:	jmp    29a94 <__sprintf_chk@plt+0x1f0e4>
   29b60:	mov    rdi,rbx
   29b63:	mov    rsi,rbp
   29b66:	call   4ca80 <_obstack_newchunk@@Base>
   29b6b:	mov    rdi,QWORD PTR [rbx+0x18]
   29b6f:	jmp    29a69 <__sprintf_chk@plt+0x1f0b9>
   29b74:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   29b7f:	nop
   29b80:	push   r14
   29b82:	push   r13
   29b84:	mov    r13,rdx
   29b87:	push   r12
   29b89:	push   rbp
   29b8a:	mov    rbp,rdi
   29b8d:	push   rbx
   29b8e:	mov    rbx,rsi
   29b91:	mov    rax,QWORD PTR [rdi+0x8]
   29b95:	cmp    rax,QWORD PTR [rdi+0x10]
   29b99:	jae    29c60 <__sprintf_chk@plt+0x1f2b0>
   29b9f:	lea    rdx,[rax+0x1]
   29ba3:	mov    QWORD PTR [rdi+0x8],rdx
   29ba7:	movzx  r12d,BYTE PTR [rax]
   29bab:	lea    eax,[r12+0x1]
   29bb0:	xor    r14d,r14d
   29bb3:	cmp    eax,0x1
   29bb6:	ja     29bef <__sprintf_chk@plt+0x1f23f>
   29bb8:	jmp    29c10 <__sprintf_chk@plt+0x1f260>
   29bba:	nop    WORD PTR [rax+rax*1+0x0]
   29bc0:	lea    rax,[rdx+0x1]
   29bc4:	mov    QWORD PTR [rbx+0x18],rax
   29bc8:	mov    BYTE PTR [rdx],r12b
   29bcb:	mov    rax,QWORD PTR [rbp+0x8]
   29bcf:	cmp    rax,QWORD PTR [rbp+0x10]
   29bd3:	jae    29c38 <__sprintf_chk@plt+0x1f288>
   29bd5:	lea    rdx,[rax+0x1]
   29bd9:	mov    QWORD PTR [rbp+0x8],rdx
   29bdd:	movzx  r12d,BYTE PTR [rax]
   29be1:	lea    eax,[r12+0x1]
   29be6:	add    r14,0x1
   29bea:	cmp    eax,0x1
   29bed:	jbe    29c10 <__sprintf_chk@plt+0x1f260>
   29bef:	mov    rdx,QWORD PTR [rbx+0x18]
   29bf3:	cmp    QWORD PTR [rbx+0x20],rdx
   29bf7:	jne    29bc0 <__sprintf_chk@plt+0x1f210>
   29bf9:	mov    esi,0x1
   29bfe:	mov    rdi,rbx
   29c01:	call   4ca80 <_obstack_newchunk@@Base>
   29c06:	mov    rdx,QWORD PTR [rbx+0x18]
   29c0a:	jmp    29bc0 <__sprintf_chk@plt+0x1f210>
   29c0c:	nop    DWORD PTR [rax+0x0]
   29c10:	mov    rax,QWORD PTR [rbx+0x18]
   29c14:	cmp    QWORD PTR [rbx+0x20],rax
   29c18:	je     29c48 <__sprintf_chk@plt+0x1f298>
   29c1a:	lea    rdx,[rax+0x1]
   29c1e:	mov    QWORD PTR [rbx+0x18],rdx
   29c22:	mov    BYTE PTR [rax],0x0
   29c25:	mov    eax,r12d
   29c28:	pop    rbx
   29c29:	pop    rbp
   29c2a:	pop    r12
   29c2c:	mov    QWORD PTR [r13+0x0],r14
   29c30:	pop    r13
   29c32:	pop    r14
   29c34:	ret    
   29c35:	nop    DWORD PTR [rax]
   29c38:	mov    rdi,rbp
   29c3b:	call   9d30 <__uflow@plt>
   29c40:	mov    r12d,eax
   29c43:	jmp    29be1 <__sprintf_chk@plt+0x1f231>
   29c45:	nop    DWORD PTR [rax]
   29c48:	mov    esi,0x1
   29c4d:	mov    rdi,rbx
   29c50:	call   4ca80 <_obstack_newchunk@@Base>
   29c55:	mov    rax,QWORD PTR [rbx+0x18]
   29c59:	jmp    29c1a <__sprintf_chk@plt+0x1f26a>
   29c5b:	nop    DWORD PTR [rax+rax*1+0x0]
   29c60:	call   9d30 <__uflow@plt>
   29c65:	mov    r12d,eax
   29c68:	jmp    29bab <__sprintf_chk@plt+0x1f1fb>
   29c6d:	nop    DWORD PTR [rax]
   29c70:	push   r15
   29c72:	mov    r15,rdi
   29c75:	push   r14
   29c77:	push   r13
   29c79:	push   r12
   29c7b:	mov    r12,rdx
   29c7e:	push   rbp
   29c7f:	mov    rbp,rsi
   29c82:	push   rbx
   29c83:	sub    rsp,0x98
   29c8a:	mov    QWORD PTR [rsp],rcx
   29c8e:	mov    QWORD PTR [rsp+0x8],r8
   29c93:	mov    rax,QWORD PTR fs:0x28
   29c9c:	mov    QWORD PTR [rsp+0x88],rax
   29ca4:	mov    rax,QWORD PTR [rdi+0x8]
   29ca8:	cmp    rax,QWORD PTR [rdi+0x10]
   29cac:	jae    29ef0 <__sprintf_chk@plt+0x1f540>
   29cb2:	lea    rdx,[rax+0x1]
   29cb6:	mov    QWORD PTR [rdi+0x8],rdx
   29cba:	movzx  ecx,BYTE PTR [rax]
   29cbd:	cmp    ecx,0x2d
   29cc0:	sete   r14b
   29cc4:	xor    ebx,ebx
   29cc6:	jmp    29d04 <__sprintf_chk@plt+0x1f354>
   29cc8:	nop    DWORD PTR [rax+rax*1+0x0]
   29cd0:	lea    edi,[rcx-0x30]
   29cd3:	cmp    edi,0x9
   29cd6:	ja     29da0 <__sprintf_chk@plt+0x1f3f0>
   29cdc:	mov    BYTE PTR [rsp+rbx*1+0x70],cl
   29ce0:	lea    r13,[rsp+0x70]
   29ce5:	cmp    rbx,0x14
   29ce9:	je     29d30 <__sprintf_chk@plt+0x1f380>
   29ceb:	mov    rax,QWORD PTR [r15+0x8]
   29cef:	cmp    rax,QWORD PTR [r15+0x10]
   29cf3:	jae    29d1c <__sprintf_chk@plt+0x1f36c>
   29cf5:	lea    rcx,[rax+0x1]
   29cf9:	mov    QWORD PTR [r15+0x8],rcx
   29cfd:	movzx  ecx,BYTE PTR [rax]
   29d00:	add    rbx,0x1
   29d04:	test   ebx,ebx
   29d06:	sete   al
   29d09:	and    al,r14b
   29d0c:	je     29cd0 <__sprintf_chk@plt+0x1f320>
   29d0e:	mov    BYTE PTR [rsp+0x70],cl
   29d12:	mov    rax,QWORD PTR [r15+0x8]
   29d16:	cmp    rax,QWORD PTR [r15+0x10]
   29d1a:	jb     29cf5 <__sprintf_chk@plt+0x1f345>
   29d1c:	mov    rdi,r15
   29d1f:	call   9d30 <__uflow@plt>
   29d24:	mov    ecx,eax
   29d26:	jmp    29d00 <__sprintf_chk@plt+0x1f350>
   29d28:	nop    DWORD PTR [rax+rax*1+0x0]
   29d30:	mov    rax,QWORD PTR [rip+0x557d1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   29d37:	test   rax,rax
   29d3a:	je     29d3e <__sprintf_chk@plt+0x1f38e>
   29d3c:	call   rax
   29d3e:	mov    rdi,r15
   29d41:	call   9e90 <ftello@plt>
   29d46:	lea    rsi,[rsp+0x50]
   29d4b:	mov    rdi,rax
   29d4e:	call   49490 <argp_usage@@Base+0x6110>
   29d53:	mov    rdi,QWORD PTR [rip+0x5525e]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   29d5a:	mov    rbx,rax
   29d5d:	call   4b670 <argp_usage@@Base+0x82f0>
   29d62:	mov    edx,0x5
   29d67:	lea    rsi,[rip+0x3b9ca]        # 65738 <_obstack_memory_used@@Base+0x18ab8>
   29d6e:	xor    edi,edi
   29d70:	mov    r12,rax
   29d73:	call   a040 <dcgettext@plt>
   29d78:	push   r13
   29d7a:	push   0x15
   29d7c:	mov    rdx,rax
   29d7f:	mov    r9,rbp
   29d82:	mov    r8,rbx
   29d85:	mov    rcx,r12
   29d88:	xor    esi,esi
   29d8a:	xor    edi,edi
   29d8c:	xor    eax,eax
   29d8e:	call   a640 <error@plt>
   29d93:	call   190e0 <__sprintf_chk@plt+0xe730>
   29d98:	nop    DWORD PTR [rax+rax*1+0x0]
   29da0:	movsxd rdx,ebx
   29da3:	mov    BYTE PTR [rsp+rdx*1+0x70],0x0
   29da8:	test   ecx,ecx
   29daa:	js     29e88 <__sprintf_chk@plt+0x1f4d8>
   29db0:	jne    29f8c <__sprintf_chk@plt+0x1f5dc>
   29db6:	mov    rcx,QWORD PTR [rsp]
   29dba:	lea    r13,[rsp+0x70]
   29dbf:	mov    rdx,r12
   29dc2:	xor    esi,esi
   29dc4:	mov    rdi,r13
   29dc7:	call   234d0 <__sprintf_chk@plt+0x18b20>
   29dcc:	mov    rdx,QWORD PTR [rsp+0x8]
   29dd1:	mov    QWORD PTR [rdx],rax
   29dd4:	call   9e40 <__errno_location@plt>
   29dd9:	mov    r14d,DWORD PTR [rax]
   29ddc:	test   r14d,r14d
   29ddf:	jne    29e0f <__sprintf_chk@plt+0x1f45f>
   29de1:	mov    eax,0x1
   29de6:	mov    rdx,QWORD PTR [rsp+0x88]
   29dee:	sub    rdx,QWORD PTR fs:0x28
   29df7:	jne    2a002 <__sprintf_chk@plt+0x1f652>
   29dfd:	add    rsp,0x98
   29e04:	pop    rbx
   29e05:	pop    rbp
   29e06:	pop    r12
   29e08:	pop    r13
   29e0a:	pop    r14
   29e0c:	pop    r15
   29e0e:	ret    
   29e0f:	mov    rax,QWORD PTR [rip+0x556f2]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   29e16:	cmp    r14d,0x22
   29e1a:	je     29efc <__sprintf_chk@plt+0x1f54c>
   29e20:	test   rax,rax
   29e23:	je     29e27 <__sprintf_chk@plt+0x1f477>
   29e25:	call   rax
   29e27:	mov    rdi,r15
   29e2a:	call   9e90 <ftello@plt>
   29e2f:	lea    rsi,[rsp+0x50]
   29e34:	mov    rdi,rax
   29e37:	call   49490 <argp_usage@@Base+0x6110>
   29e3c:	mov    rdi,QWORD PTR [rip+0x55175]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   29e43:	mov    rbx,rax
   29e46:	call   4b670 <argp_usage@@Base+0x82f0>
   29e4b:	mov    edx,0x5
   29e50:	lea    rsi,[rip+0x3b0eb]        # 64f42 <_obstack_memory_used@@Base+0x182c2>
   29e57:	xor    edi,edi
   29e59:	mov    r12,rax
   29e5c:	call   a040 <dcgettext@plt>
   29e61:	mov    r9,rbp
   29e64:	mov    r8,rbx
   29e67:	mov    rcx,r12
   29e6a:	mov    rdx,rax
   29e6d:	push   rax
   29e6e:	mov    esi,r14d
   29e71:	xor    edi,edi
   29e73:	push   r13
   29e75:	xor    eax,eax
   29e77:	call   a640 <error@plt>
   29e7c:	call   190e0 <__sprintf_chk@plt+0xe730>
   29e81:	nop    DWORD PTR [rax+0x0]
   29e88:	test   BYTE PTR [r15],0x20
   29e8c:	jne    29fef <__sprintf_chk@plt+0x1f63f>
   29e92:	test   ebx,ebx
   29e94:	je     29de6 <__sprintf_chk@plt+0x1f436>
   29e9a:	mov    rax,QWORD PTR [rip+0x55667]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   29ea1:	test   rax,rax
   29ea4:	je     29ea8 <__sprintf_chk@plt+0x1f4f8>
   29ea6:	call   rax
   29ea8:	mov    edx,0x5
   29ead:	lea    rsi,[rip+0x3b8ac]        # 65760 <_obstack_memory_used@@Base+0x18ae0>
   29eb4:	xor    edi,edi
   29eb6:	call   a040 <dcgettext@plt>
   29ebb:	mov    rdi,QWORD PTR [rip+0x550f6]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   29ec2:	mov    rbx,rax
   29ec5:	call   4b670 <argp_usage@@Base+0x82f0>
   29eca:	mov    r8,rbx
   29ecd:	xor    esi,esi
   29ecf:	xor    edi,edi
   29ed1:	mov    rcx,rax
   29ed4:	lea    rdx,[rip+0x42f9c]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   29edb:	xor    eax,eax
   29edd:	call   a640 <error@plt>
   29ee2:	call   190e0 <__sprintf_chk@plt+0xe730>
   29ee7:	nop    WORD PTR [rax+rax*1+0x0]
   29ef0:	call   9d30 <__uflow@plt>
   29ef5:	mov    ecx,eax
   29ef7:	jmp    29cbd <__sprintf_chk@plt+0x1f30d>
   29efc:	test   rax,rax
   29eff:	je     29f03 <__sprintf_chk@plt+0x1f553>
   29f01:	call   rax
   29f03:	mov    rdi,QWORD PTR [rsp]
   29f07:	lea    rsi,[rsp+0x10]
   29f0c:	call   49530 <argp_usage@@Base+0x61b0>
   29f11:	lea    rsi,[rsp+0x30]
   29f16:	mov    rdi,r12
   29f19:	mov    QWORD PTR [rsp],rax
   29f1d:	call   49490 <argp_usage@@Base+0x6110>
   29f22:	mov    rdi,r15
   29f25:	mov    r14,rax
   29f28:	call   9e90 <ftello@plt>
   29f2d:	lea    rsi,[rsp+0x50]
   29f32:	mov    rdi,rax
   29f35:	call   49490 <argp_usage@@Base+0x6110>
   29f3a:	mov    rdi,QWORD PTR [rip+0x55077]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   29f41:	mov    rbx,rax
   29f44:	call   4b670 <argp_usage@@Base+0x82f0>
   29f49:	mov    edx,0x5
   29f4e:	lea    rsi,[rip+0x3b863]        # 657b8 <_obstack_memory_used@@Base+0x18b38>
   29f55:	xor    edi,edi
   29f57:	mov    r12,rax
   29f5a:	call   a040 <dcgettext@plt>
   29f5f:	mov    r9,r14
   29f62:	mov    r8,rbx
   29f65:	mov    esi,0x22
   29f6a:	push   rcx
   29f6b:	mov    rdx,rax
   29f6e:	xor    edi,edi
   29f70:	xor    eax,eax
   29f72:	push   r13
   29f74:	push   rbp
   29f75:	mov    rcx,QWORD PTR [rsp+0x18]
   29f7a:	push   rcx
   29f7b:	mov    rcx,r12
   29f7e:	call   a640 <error@plt>
   29f83:	add    rsp,0x20
   29f87:	call   190e0 <__sprintf_chk@plt+0xe730>
   29f8c:	mov    rax,QWORD PTR [rip+0x55575]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   29f93:	test   rax,rax
   29f96:	je     29fa0 <__sprintf_chk@plt+0x1f5f0>
   29f98:	mov    DWORD PTR [rsp],ecx
   29f9b:	call   rax
   29f9d:	mov    ecx,DWORD PTR [rsp]
   29fa0:	mov    rdi,r15
   29fa3:	mov    DWORD PTR [rsp],ecx
   29fa6:	call   9e90 <ftello@plt>
   29fab:	lea    rsi,[rsp+0x50]
   29fb0:	mov    rdi,rax
   29fb3:	call   49490 <argp_usage@@Base+0x6110>
   29fb8:	mov    rdi,QWORD PTR [rip+0x54ff9]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   29fbf:	mov    rbx,rax
   29fc2:	call   4b670 <argp_usage@@Base+0x82f0>
   29fc7:	mov    edx,0x5
   29fcc:	lea    rsi,[rip+0x3b7ad]        # 65780 <_obstack_memory_used@@Base+0x18b00>
   29fd3:	xor    edi,edi
   29fd5:	mov    r12,rax
   29fd8:	call   a040 <dcgettext@plt>
   29fdd:	mov    ecx,DWORD PTR [rsp]
   29fe0:	mov    rdx,rax
   29fe3:	push   rcx
   29fe4:	lea    rax,[rsp+0x78]
   29fe9:	push   rax
   29fea:	jmp    29d7f <__sprintf_chk@plt+0x1f3cf>
   29fef:	mov    rsi,QWORD PTR [rip+0x54fc2]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   29ff6:	lea    rdi,[rip+0x3958c]        # 63589 <_obstack_memory_used@@Base+0x16909>
   29ffd:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   2a002:	call   a0a0 <__stack_chk_fail@plt>
   2a007:	nop    WORD PTR [rax+rax*1+0x0]
   2a010:	movabs rcx,0x7fffffffffffffff
   2a01a:	push   rbp
   2a01b:	mov    rbp,rdi
   2a01e:	movabs rdx,0x8000000000000000
   2a028:	push   rbx
   2a029:	mov    rbx,rsi
   2a02c:	lea    rsi,[rip+0x3d713]        # 67746 <_obstack_memory_used@@Base+0x1aac6>
   2a033:	sub    rsp,0x28
   2a037:	mov    rax,QWORD PTR fs:0x28
   2a040:	mov    QWORD PTR [rsp+0x18],rax
   2a045:	xor    eax,eax
   2a047:	lea    r8,[rsp+0x10]
   2a04c:	call   29c70 <__sprintf_chk@plt+0x1f2c0>
   2a051:	test   al,al
   2a053:	je     2a09c <__sprintf_chk@plt+0x1f6ec>
   2a055:	xor    edx,edx
   2a057:	lea    r8,[rsp+0x8]
   2a05c:	mov    ecx,0x3b9ac9ff
   2a061:	mov    rdi,rbp
   2a064:	lea    rsi,[rip+0x3d6e9]        # 67754 <_obstack_memory_used@@Base+0x1aad4>
   2a06b:	call   29c70 <__sprintf_chk@plt+0x1f2c0>
   2a070:	test   al,al
   2a072:	je     2a09c <__sprintf_chk@plt+0x1f6ec>
   2a074:	mov    rax,QWORD PTR [rsp+0x10]
   2a079:	mov    QWORD PTR [rbx],rax
   2a07c:	mov    rax,QWORD PTR [rsp+0x8]
   2a081:	mov    QWORD PTR [rbx+0x8],rax
   2a085:	mov    rax,QWORD PTR [rsp+0x18]
   2a08a:	sub    rax,QWORD PTR fs:0x28
   2a093:	jne    2a0e9 <__sprintf_chk@plt+0x1f739>
   2a095:	add    rsp,0x28
   2a099:	pop    rbx
   2a09a:	pop    rbp
   2a09b:	ret    
   2a09c:	mov    rax,QWORD PTR [rip+0x55465]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a0a3:	test   rax,rax
   2a0a6:	je     2a0aa <__sprintf_chk@plt+0x1f6fa>
   2a0a8:	call   rax
   2a0aa:	mov    edx,0x5
   2a0af:	lea    rsi,[rip+0x3b6aa]        # 65760 <_obstack_memory_used@@Base+0x18ae0>
   2a0b6:	xor    edi,edi
   2a0b8:	call   a040 <dcgettext@plt>
   2a0bd:	mov    rdi,QWORD PTR [rip+0x54ef4]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a0c4:	mov    rbx,rax
   2a0c7:	call   4b670 <argp_usage@@Base+0x82f0>
   2a0cc:	mov    r8,rbx
   2a0cf:	xor    esi,esi
   2a0d1:	xor    edi,edi
   2a0d3:	mov    rcx,rax
   2a0d6:	lea    rdx,[rip+0x42d9a]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   2a0dd:	xor    eax,eax
   2a0df:	call   a640 <error@plt>
   2a0e4:	call   190e0 <__sprintf_chk@plt+0xe730>
   2a0e9:	call   a0a0 <__stack_chk_fail@plt>
   2a0ee:	xchg   ax,ax
   2a0f0:	endbr64 
   2a0f4:	push   r15
   2a0f6:	mov    edx,0x1b6
   2a0fb:	push   r14
   2a0fd:	push   r13
   2a0ff:	push   r12
   2a101:	push   rbp
   2a102:	push   rbx
   2a103:	sub    rsp,0xd8
   2a10a:	mov    rdi,QWORD PTR [rip+0x54ea7]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a111:	mov    rax,QWORD PTR fs:0x28
   2a11a:	mov    QWORD PTR [rsp+0xc8],rax
   2a122:	xor    eax,eax
   2a124:	cmp    DWORD PTR [rip+0x55825],0x1        # 7f950 <obstack_alloc_failed_handler@@Base+0xb18>
   2a12b:	mov    QWORD PTR [rsp+0x28],0x0
   2a134:	mov    QWORD PTR [rsp+0x20],0x0
   2a13d:	sbb    esi,esi
   2a13f:	and    esi,0x200
   2a145:	add    esi,0x42
   2a148:	call   a690 <open@plt>
   2a14d:	test   eax,eax
   2a14f:	js     2a587 <__sprintf_chk@plt+0x1fbd7>
   2a155:	lea    rsi,[rip+0x3adf9]        # 64f55 <_obstack_memory_used@@Base+0x182d5>
   2a15c:	mov    edi,eax
   2a15e:	mov    ebp,eax
   2a160:	call   a590 <fdopen@plt>
   2a165:	mov    QWORD PTR [rip+0x55684],rax        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a16c:	test   rax,rax
   2a16f:	je     2ab04 <__sprintf_chk@plt+0x20154>
   2a175:	call   32220 <__sprintf_chk@plt+0x27870>
   2a17a:	mov    rax,QWORD PTR [rip+0x55657]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2a181:	mov    QWORD PTR [rip+0x55654],0x0        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   2a18c:	test   rax,rax
   2a18f:	je     2a1a8 <__sprintf_chk@plt+0x1f7f8>
   2a191:	nop    DWORD PTR [rax+0x0]
   2a198:	mov    QWORD PTR [rax+0x30],0x0
   2a1a0:	mov    rax,QWORD PTR [rax]
   2a1a3:	test   rax,rax
   2a1a6:	jne    2a198 <__sprintf_chk@plt+0x1f7e8>
   2a1a8:	lea    rsi,[rsp+0x20]
   2a1ad:	lea    rdi,[rsp+0x28]
   2a1b2:	mov    edx,0xa
   2a1b7:	mov    rcx,QWORD PTR [rip+0x55632]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a1be:	call   a310 <__getdelim@plt>
   2a1c3:	test   rax,rax
   2a1c6:	jle    2a548 <__sprintf_chk@plt+0x1fb98>
   2a1cc:	mov    rbp,QWORD PTR [rsp+0x28]
   2a1d1:	mov    edx,0x7
   2a1d6:	lea    rsi,[rip+0x3a214]        # 643f1 <_obstack_memory_used@@Base+0x17771>
   2a1dd:	mov    rdi,rbp
   2a1e0:	call   9e50 <strncmp@plt>
   2a1e5:	test   eax,eax
   2a1e7:	jne    2a7f8 <__sprintf_chk@plt+0x1fe48>
   2a1ed:	cmp    BYTE PTR [rbp+0x7],0x2d
   2a1f1:	lea    rbx,[rbp+0x8]
   2a1f5:	je     2a233 <__sprintf_chk@plt+0x1f883>
   2a1f7:	mov    rax,QWORD PTR [rip+0x5530a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a1fe:	test   rax,rax
   2a201:	je     2a205 <__sprintf_chk@plt+0x1f855>
   2a203:	call   rax
   2a205:	mov    edx,0x5
   2a20a:	lea    rsi,[rip+0x3ad47]        # 64f58 <_obstack_memory_used@@Base+0x182d8>
   2a211:	xor    edi,edi
   2a213:	call   a040 <dcgettext@plt>
   2a218:	xor    esi,esi
   2a21a:	mov    edi,0x1
   2a21f:	mov    rdx,rax
   2a222:	xor    eax,eax
   2a224:	call   a640 <error@plt>
   2a229:	mov    DWORD PTR [rip+0x54e91],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2a233:	movzx  eax,BYTE PTR [rbp+0x8]
   2a237:	cmp    al,0x2d
   2a239:	je     2a290 <__sprintf_chk@plt+0x1f8e0>
   2a23b:	lea    rbp,[rip+0x3ad16]        # 64f58 <_obstack_memory_used@@Base+0x182d8>
   2a242:	nop    WORD PTR [rax+rax*1+0x0]
   2a248:	test   al,al
   2a24a:	jne    2a284 <__sprintf_chk@plt+0x1f8d4>
   2a24c:	mov    rax,QWORD PTR [rip+0x552b5]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a253:	test   rax,rax
   2a256:	je     2a25a <__sprintf_chk@plt+0x1f8aa>
   2a258:	call   rax
   2a25a:	mov    edx,0x5
   2a25f:	mov    rsi,rbp
   2a262:	xor    edi,edi
   2a264:	call   a040 <dcgettext@plt>
   2a269:	xor    esi,esi
   2a26b:	mov    edi,0x1
   2a270:	mov    rdx,rax
   2a273:	xor    eax,eax
   2a275:	call   a640 <error@plt>
   2a27a:	mov    DWORD PTR [rip+0x54e40],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2a284:	movzx  eax,BYTE PTR [rbx+0x1]
   2a288:	add    rbx,0x1
   2a28c:	cmp    al,0x2d
   2a28e:	jne    2a248 <__sprintf_chk@plt+0x1f898>
   2a290:	lea    rdi,[rbx+0x1]
   2a294:	mov    edx,0xa
   2a299:	xor    esi,esi
   2a29b:	call   a710 <strtoumax@plt>
   2a2a0:	mov    r13,rax
   2a2a3:	cmp    rax,0x1
   2a2a7:	jbe    2a5b1 <__sprintf_chk@plt+0x1fc01>
   2a2ad:	cmp    rax,0x2
   2a2b1:	jne    2a506 <__sprintf_chk@plt+0x1fb56>
   2a2b7:	lea    rax,[rip+0x1b3e2]        # 456a0 <argp_usage@@Base+0x2320>
   2a2be:	lea    rbp,[rsp+0x50]
   2a2c3:	xor    edx,edx
   2a2c5:	xor    esi,esi
   2a2c7:	mov    QWORD PTR [rsp+0x88],rax
   2a2cf:	mov    rax,QWORD PTR [rip+0x51cb2]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   2a2d6:	mov    rdi,rbp
   2a2d9:	lea    r12,[rsp+0x30]
   2a2de:	and    BYTE PTR [rsp+0xa0],0xfe
   2a2e6:	lea    rbx,[rsp+0x38]
   2a2eb:	mov    QWORD PTR [rsp+0x90],rax
   2a2f3:	call   4c9a0 <argp_usage@@Base+0x9620>
   2a2f8:	mov    rdi,QWORD PTR [rip+0x554f1]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a2ff:	lea    rsi,[rip+0x5548a]        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   2a306:	call   2a010 <__sprintf_chk@plt+0x1f660>
   2a30b:	lea    rax,[rsp+0x40]
   2a310:	mov    QWORD PTR [rsp+0x18],rax
   2a315:	nop    DWORD PTR [rax]
   2a318:	mov    rdi,QWORD PTR [rip+0x554d1]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a31f:	xor    edx,edx
   2a321:	mov    r8,r12
   2a324:	mov    ecx,0x1
   2a329:	lea    rsi,[rip+0x3aca7]        # 64fd7 <_obstack_memory_used@@Base+0x18357>
   2a330:	call   29c70 <__sprintf_chk@plt+0x1f2c0>
   2a335:	test   al,al
   2a337:	je     2a548 <__sprintf_chk@plt+0x1fb98>
   2a33d:	mov    rsi,QWORD PTR [rsp+0x18]
   2a342:	mov    rdi,QWORD PTR [rip+0x554a7]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a349:	cmp    QWORD PTR [rsp+0x30],0x0
   2a34f:	setne  BYTE PTR [rsp+0xc]
   2a354:	call   2a010 <__sprintf_chk@plt+0x1f660>
   2a359:	mov    rdi,QWORD PTR [rip+0x55490]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a360:	xor    edx,edx
   2a362:	mov    r8,r12
   2a365:	mov    rcx,0xffffffffffffffff
   2a36c:	lea    rsi,[rip+0x3d398]        # 6770b <_obstack_memory_used@@Base+0x1aa8b>
   2a373:	call   29c70 <__sprintf_chk@plt+0x1f2c0>
   2a378:	test   al,al
   2a37a:	je     2aa08 <__sprintf_chk@plt+0x20058>
   2a380:	mov    rdi,QWORD PTR [rip+0x55469]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a387:	xor    edx,edx
   2a389:	mov    r8,r12
   2a38c:	mov    rcx,0xffffffffffffffff
   2a393:	lea    rsi,[rip+0x3ac41]        # 64fdb <_obstack_memory_used@@Base+0x1835b>
   2a39a:	mov    r14,QWORD PTR [rsp+0x30]
   2a39f:	call   29c70 <__sprintf_chk@plt+0x1f2c0>
   2a3a4:	test   al,al
   2a3a6:	je     2aa08 <__sprintf_chk@plt+0x20058>
   2a3ac:	mov    rdi,QWORD PTR [rip+0x5543d]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a3b3:	mov    rdx,rbx
   2a3b6:	mov    rsi,rbp
   2a3b9:	mov    r15,QWORD PTR [rsp+0x30]
   2a3be:	call   29b80 <__sprintf_chk@plt+0x1f1d0>
   2a3c3:	test   eax,eax
   2a3c5:	jne    2aa08 <__sprintf_chk@plt+0x20058>
   2a3cb:	mov    r13,QWORD PTR [rsp+0x60]
   2a3d0:	mov    rax,QWORD PTR [rsp+0x68]
   2a3d5:	cmp    r13,rax
   2a3d8:	je     2a6e0 <__sprintf_chk@plt+0x1fd30>
   2a3de:	mov    rdx,QWORD PTR [rsp+0x80]
   2a3e6:	add    rax,rdx
   2a3e9:	not    rdx
   2a3ec:	and    rax,rdx
   2a3ef:	mov    rdx,QWORD PTR [rsp+0x70]
   2a3f4:	mov    rsi,rax
   2a3f7:	sub    rsi,QWORD PTR [rsp+0x58]
   2a3fc:	mov    rcx,rdx
   2a3ff:	sub    rcx,QWORD PTR [rsp+0x58]
   2a404:	cmp    rsi,rcx
   2a407:	cmovbe rdx,rax
   2a40b:	mov    QWORD PTR [rsp+0x68],rdx
   2a410:	mov    QWORD PTR [rsp+0x60],rdx
   2a415:	jmp    2a428 <__sprintf_chk@plt+0x1fa78>
   2a417:	nop    WORD PTR [rax+rax*1+0x0]
   2a420:	cmp    QWORD PTR [rsp+0x38],0x1
   2a426:	jbe    2a43e <__sprintf_chk@plt+0x1fa8e>
   2a428:	mov    rdi,QWORD PTR [rip+0x553c1]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a42f:	mov    rdx,rbx
   2a432:	mov    rsi,rbp
   2a435:	call   29b80 <__sprintf_chk@plt+0x1f1d0>
   2a43a:	test   eax,eax
   2a43c:	je     2a420 <__sprintf_chk@plt+0x1fa70>
   2a43e:	mov    rdi,QWORD PTR [rip+0x553ab]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a445:	mov    rax,QWORD PTR [rdi+0x8]
   2a449:	cmp    rax,QWORD PTR [rdi+0x10]
   2a44d:	jae    2a740 <__sprintf_chk@plt+0x1fd90>
   2a453:	lea    rdx,[rax+0x1]
   2a457:	mov    QWORD PTR [rdi+0x8],rdx
   2a45b:	movzx  eax,BYTE PTR [rax]
   2a45e:	test   eax,eax
   2a460:	jne    2aa74 <__sprintf_chk@plt+0x200c4>
   2a466:	mov    r10,QWORD PTR [rsp+0x60]
   2a46b:	mov    rax,QWORD PTR [rsp+0x68]
   2a470:	cmp    r10,rax
   2a473:	je     2a6f0 <__sprintf_chk@plt+0x1fd40>
   2a479:	mov    rdx,QWORD PTR [rsp+0x80]
   2a481:	mov    r8,r15
   2a484:	mov    rdi,r13
   2a487:	add    rax,rdx
   2a48a:	not    rdx
   2a48d:	and    rax,rdx
   2a490:	mov    rdx,QWORD PTR [rsp+0x70]
   2a495:	mov    rsi,rax
   2a498:	sub    rsi,QWORD PTR [rsp+0x58]
   2a49d:	mov    rcx,rdx
   2a4a0:	sub    rcx,QWORD PTR [rsp+0x58]
   2a4a5:	cmp    rsi,rcx
   2a4a8:	mov    rcx,r14
   2a4ab:	cmovbe rdx,rax
   2a4af:	mov    QWORD PTR [rsp+0x68],rdx
   2a4b4:	mov    QWORD PTR [rsp+0x60],rdx
   2a4b9:	push   r10
   2a4bb:	mov    QWORD PTR [rsp+0x18],r10
   2a4c0:	push   0x0
   2a4c2:	mov    r9d,DWORD PTR [rsp+0x1c]
   2a4c7:	mov    rsi,QWORD PTR [rsp+0x50]
   2a4cc:	mov    rdx,QWORD PTR [rsp+0x58]
   2a4d1:	and    r9d,0x1
   2a4d5:	call   271b0 <__sprintf_chk@plt+0x1c800>
   2a4da:	pop    rax
   2a4db:	pop    rdx
   2a4dc:	mov    r10,QWORD PTR [rsp+0x10]
   2a4e1:	cmp    r10,QWORD PTR [rsp+0x58]
   2a4e6:	jbe    2a6d0 <__sprintf_chk@plt+0x1fd20>
   2a4ec:	cmp    r10,QWORD PTR [rsp+0x70]
   2a4f1:	jae    2a6d0 <__sprintf_chk@plt+0x1fd20>
   2a4f7:	mov    QWORD PTR [rsp+0x60],r10
   2a4fc:	mov    QWORD PTR [rsp+0x68],r10
   2a501:	jmp    2a318 <__sprintf_chk@plt+0x1f968>
   2a506:	mov    rax,QWORD PTR [rip+0x54ffb]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a50d:	test   rax,rax
   2a510:	je     2a514 <__sprintf_chk@plt+0x1fb64>
   2a512:	call   rax
   2a514:	mov    edx,0x5
   2a519:	lea    rsi,[rip+0x3b2f0]        # 65810 <_obstack_memory_used@@Base+0x18b90>
   2a520:	xor    edi,edi
   2a522:	call   a040 <dcgettext@plt>
   2a527:	mov    rcx,r13
   2a52a:	xor    esi,esi
   2a52c:	mov    edi,0x1
   2a531:	mov    rdx,rax
   2a534:	xor    eax,eax
   2a536:	call   a640 <error@plt>
   2a53b:	mov    DWORD PTR [rip+0x54b7f],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2a545:	nop    DWORD PTR [rax]
   2a548:	mov    rax,QWORD PTR [rip+0x552a1]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a54f:	test   BYTE PTR [rax],0x20
   2a552:	jne    2a59c <__sprintf_chk@plt+0x1fbec>
   2a554:	mov    rdi,QWORD PTR [rsp+0x28]
   2a559:	call   9ce0 <free@plt>
   2a55e:	mov    rax,QWORD PTR [rsp+0xc8]
   2a566:	sub    rax,QWORD PTR fs:0x28
   2a56f:	jne    2aaff <__sprintf_chk@plt+0x2014f>
   2a575:	add    rsp,0xd8
   2a57c:	pop    rbx
   2a57d:	pop    rbp
   2a57e:	pop    r12
   2a580:	pop    r13
   2a582:	pop    r14
   2a584:	pop    r15
   2a586:	ret    
   2a587:	mov    rsi,QWORD PTR [rip+0x54a2a]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a58e:	lea    rdi,[rip+0x38c2b]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   2a595:	call   3bad0 <__sprintf_chk@plt+0x31120>
   2a59a:	jmp    2a55e <__sprintf_chk@plt+0x1fbae>
   2a59c:	mov    rsi,QWORD PTR [rip+0x54a15]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a5a3:	lea    rdi,[rip+0x38fdf]        # 63589 <_obstack_memory_used@@Base+0x16909>
   2a5aa:	call   3bad0 <__sprintf_chk@plt+0x31120>
   2a5af:	jmp    2a554 <__sprintf_chk@plt+0x1fba4>
   2a5b1:	mov    QWORD PTR [rsp+0x38],0x0
   2a5ba:	mov    rbp,QWORD PTR [rsp+0x28]
   2a5bf:	mov    QWORD PTR [rsp+0x40],0x0
   2a5c8:	jne    2a80a <__sprintf_chk@plt+0x1fe5a>
   2a5ce:	lea    r15,[rsp+0x40]
   2a5d3:	lea    r12,[rsp+0x38]
   2a5d8:	mov    edx,0xa
   2a5dd:	mov    rcx,QWORD PTR [rip+0x5520c]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a5e4:	mov    rsi,r15
   2a5e7:	mov    rdi,r12
   2a5ea:	call   a310 <__getdelim@plt>
   2a5ef:	test   rax,rax
   2a5f2:	jle    2a975 <__sprintf_chk@plt+0x1ffc5>
   2a5f8:	mov    rdi,QWORD PTR [rsp+0x38]
   2a5fd:	lea    rbp,[rsp+0x50]
   2a602:	xor    edx,edx
   2a604:	mov    rsi,rbp
   2a607:	call   25850 <__sprintf_chk@plt+0x1aea0>
   2a60c:	mov    QWORD PTR [rip+0x55185],rdx        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2a613:	cmp    QWORD PTR [rip+0x5517d],0x0        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2a61b:	mov    QWORD PTR [rip+0x5516e],rax        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   2a622:	js     2aaf5 <__sprintf_chk@plt+0x20145>
   2a628:	mov    rbx,QWORD PTR [rsp+0x50]
   2a62d:	mov    r14d,0x2
   2a633:	cmp    BYTE PTR [rbx],0x0
   2a636:	jne    2a8a0 <__sprintf_chk@plt+0x1fef0>
   2a63c:	mov    rcx,QWORD PTR [rip+0x551ad]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2a643:	mov    edx,0xa
   2a648:	mov    rsi,r15
   2a64b:	mov    rdi,r12
   2a64e:	call   a310 <__getdelim@plt>
   2a653:	test   eax,eax
   2a655:	jle    2a997 <__sprintf_chk@plt+0x1ffe7>
   2a65b:	mov    rdx,QWORD PTR [rsp+0x38]
   2a660:	xor    r12d,r12d
   2a663:	cdqe   
   2a665:	cmp    BYTE PTR [rdx],0x2b
   2a668:	lea    rax,[rdx+rax*1-0x1]
   2a66d:	sete   r12b
   2a671:	add    r14,0x1
   2a675:	add    r12,rdx
   2a678:	cmp    BYTE PTR [rax],0xa
   2a67b:	jne    2a680 <__sprintf_chk@plt+0x1fcd0>
   2a67d:	mov    BYTE PTR [rax],0x0
   2a680:	call   9e40 <__errno_location@plt>
   2a685:	mov    rbx,rax
   2a688:	cmp    r13,0x1
   2a68c:	je     2a74a <__sprintf_chk@plt+0x1fd9a>
   2a692:	mov    DWORD PTR [rbx],0x0
   2a698:	movsx  eax,BYTE PTR [r12]
   2a69d:	sub    eax,0x30
   2a6a0:	cmp    eax,0x9
   2a6a3:	jbe    2a6fd <__sprintf_chk@plt+0x1fd4d>
   2a6a5:	mov    DWORD PTR [rbx],0x16
   2a6ab:	mov    rax,QWORD PTR [rip+0x54e56]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a6b2:	test   rax,rax
   2a6b5:	je     2a6b9 <__sprintf_chk@plt+0x1fd09>
   2a6b7:	call   rax
   2a6b9:	mov    edx,0x5
   2a6be:	lea    rsi,[rip+0x3a8e7]        # 64fac <_obstack_memory_used@@Base+0x1832c>
   2a6c5:	jmp    2a7bc <__sprintf_chk@plt+0x1fe0c>
   2a6ca:	nop    WORD PTR [rax+rax*1+0x0]
   2a6d0:	mov    rsi,r10
   2a6d3:	mov    rdi,rbp
   2a6d6:	call   4cbf0 <_obstack_free@@Base>
   2a6db:	jmp    2a318 <__sprintf_chk@plt+0x1f968>
   2a6e0:	or     BYTE PTR [rsp+0xa0],0x2
   2a6e8:	jmp    2a3de <__sprintf_chk@plt+0x1fa2e>
   2a6ed:	nop    DWORD PTR [rax]
   2a6f0:	or     BYTE PTR [rsp+0xa0],0x2
   2a6f8:	jmp    2a479 <__sprintf_chk@plt+0x1fac9>
   2a6fd:	mov    edx,0xa
   2a702:	mov    rsi,rbp
   2a705:	mov    rdi,r12
   2a708:	call   a710 <strtoumax@plt>
   2a70d:	mov    ecx,DWORD PTR [rbx]
   2a70f:	mov    rdx,QWORD PTR [rsp+0x50]
   2a714:	mov    rax,QWORD PTR [rip+0x54ded]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a71b:	test   ecx,ecx
   2a71d:	jne    2a6b2 <__sprintf_chk@plt+0x1fd02>
   2a71f:	cmp    BYTE PTR [rdx],0x20
   2a722:	jne    2a6b2 <__sprintf_chk@plt+0x1fd02>
   2a724:	mov    DWORD PTR [rbx],0x16
   2a72a:	test   rax,rax
   2a72d:	je     2a731 <__sprintf_chk@plt+0x1fd81>
   2a72f:	call   rax
   2a731:	mov    edx,0x5
   2a736:	lea    rsi,[rip+0x3a885]        # 64fc2 <_obstack_memory_used@@Base+0x18342>
   2a73d:	jmp    2a7bc <__sprintf_chk@plt+0x1fe0c>
   2a73f:	nop
   2a740:	call   9d30 <__uflow@plt>
   2a745:	jmp    2a45e <__sprintf_chk@plt+0x1faae>
   2a74a:	xor    edx,edx
   2a74c:	mov    rsi,rbp
   2a74f:	mov    rdi,r12
   2a752:	call   25850 <__sprintf_chk@plt+0x1aea0>
   2a757:	mov    r13,QWORD PTR [rsp+0x50]
   2a75c:	test   rdx,rdx
   2a75f:	js     2aa55 <__sprintf_chk@plt+0x200a5>
   2a765:	cmp    BYTE PTR [r13+0x0],0x20
   2a76a:	jne    2aa55 <__sprintf_chk@plt+0x200a5>
   2a770:	mov    DWORD PTR [rbx],0x0
   2a776:	mov    edx,0xa
   2a77b:	mov    rsi,rbp
   2a77e:	mov    rdi,r13
   2a781:	call   a710 <strtoumax@plt>
   2a786:	mov    r8,rax
   2a789:	mov    eax,DWORD PTR [rbx]
   2a78b:	cmp    r8,0x3b9ac9ff
   2a792:	jbe    2a871 <__sprintf_chk@plt+0x1fec1>
   2a798:	test   eax,eax
   2a79a:	jne    2a7a2 <__sprintf_chk@plt+0x1fdf2>
   2a79c:	mov    DWORD PTR [rbx],0x22
   2a7a2:	mov    rax,QWORD PTR [rip+0x54d5f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a7a9:	test   rax,rax
   2a7ac:	je     2a7b0 <__sprintf_chk@plt+0x1fe00>
   2a7ae:	call   rax
   2a7b0:	mov    edx,0x5
   2a7b5:	lea    rsi,[rip+0x3b02c]        # 657e8 <_obstack_memory_used@@Base+0x18b68>
   2a7bc:	xor    edi,edi
   2a7be:	call   a040 <dcgettext@plt>
   2a7c3:	mov    rdi,QWORD PTR [rip+0x547ee]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a7ca:	mov    rbp,rax
   2a7cd:	call   4b670 <argp_usage@@Base+0x82f0>
   2a7d2:	mov    esi,DWORD PTR [rbx]
   2a7d4:	mov    r9,rbp
   2a7d7:	mov    r8,r14
   2a7da:	mov    rcx,rax
   2a7dd:	lea    rdx,[rip+0x3a7a3]        # 64f87 <_obstack_memory_used@@Base+0x18307>
   2a7e4:	xor    edi,edi
   2a7e6:	xor    eax,eax
   2a7e8:	call   a640 <error@plt>
   2a7ed:	call   190e0 <__sprintf_chk@plt+0xe730>
   2a7f2:	nop    WORD PTR [rax+rax*1+0x0]
   2a7f8:	mov    QWORD PTR [rsp+0x38],0x0
   2a801:	mov    QWORD PTR [rsp+0x40],0x0
   2a80a:	mov    rdi,rbp
   2a80d:	lea    rbp,[rsp+0x50]
   2a812:	call   a880 <strdup@plt>
   2a817:	mov    rdi,rax
   2a81a:	mov    r12,rax
   2a81d:	mov    QWORD PTR [rsp+0x38],rax
   2a822:	call   a060 <strlen@plt>
   2a827:	xor    edx,edx
   2a829:	mov    rsi,rbp
   2a82c:	mov    rdi,r12
   2a82f:	add    rax,0x1
   2a833:	mov    QWORD PTR [rsp+0x40],rax
   2a838:	call   25850 <__sprintf_chk@plt+0x1aea0>
   2a83d:	mov    QWORD PTR [rip+0x54f54],rdx        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2a844:	cmp    QWORD PTR [rip+0x54f4c],0x0        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2a84c:	mov    QWORD PTR [rip+0x54f3d],rax        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   2a853:	js     2a9a6 <__sprintf_chk@plt+0x1fff6>
   2a859:	xor    r13d,r13d
   2a85c:	mov    r14d,0x1
   2a862:	lea    r15,[rsp+0x40]
   2a867:	lea    r12,[rsp+0x38]
   2a86c:	jmp    2a63c <__sprintf_chk@plt+0x1fc8c>
   2a871:	test   eax,eax
   2a873:	jne    2a7a2 <__sprintf_chk@plt+0x1fdf2>
   2a879:	mov    r12,QWORD PTR [rsp+0x50]
   2a87e:	cmp    r13,r12
   2a881:	je     2a7a2 <__sprintf_chk@plt+0x1fdf2>
   2a887:	cmp    BYTE PTR [r12],0x20
   2a88c:	je     2a692 <__sprintf_chk@plt+0x1fce2>
   2a892:	jmp    2a7a2 <__sprintf_chk@plt+0x1fdf2>
   2a897:	nop    WORD PTR [rax+rax*1+0x0]
   2a8a0:	call   9e40 <__errno_location@plt>
   2a8a5:	add    rbx,0x1
   2a8a9:	mov    edx,0xa
   2a8ae:	mov    rsi,rbp
   2a8b1:	mov    DWORD PTR [rax],0x0
   2a8b7:	mov    r14,rax
   2a8ba:	mov    rdi,rbx
   2a8bd:	call   a710 <strtoumax@plt>
   2a8c2:	mov    edx,DWORD PTR [r14]
   2a8c5:	test   edx,edx
   2a8c7:	jne    2a8f5 <__sprintf_chk@plt+0x1ff45>
   2a8c9:	cmp    rax,0x3b9ac9ff
   2a8cf:	ja     2a8ee <__sprintf_chk@plt+0x1ff3e>
   2a8d1:	test   edx,edx
   2a8d3:	jne    2a8f5 <__sprintf_chk@plt+0x1ff45>
   2a8d5:	cmp    rbx,QWORD PTR [rsp+0x50]
   2a8da:	je     2a8f5 <__sprintf_chk@plt+0x1ff45>
   2a8dc:	mov    QWORD PTR [rip+0x54eb5],rax        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2a8e3:	mov    r14d,0x2
   2a8e9:	jmp    2a63c <__sprintf_chk@plt+0x1fc8c>
   2a8ee:	mov    DWORD PTR [r14],0x22
   2a8f5:	mov    rax,QWORD PTR [rip+0x54c0c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a8fc:	test   rax,rax
   2a8ff:	je     2a903 <__sprintf_chk@plt+0x1ff53>
   2a901:	call   rax
   2a903:	mov    edx,0x5
   2a908:	lea    rsi,[rip+0x3a665]        # 64f74 <_obstack_memory_used@@Base+0x182f4>
   2a90f:	xor    edi,edi
   2a911:	call   a040 <dcgettext@plt>
   2a916:	mov    rdi,QWORD PTR [rip+0x5469b]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a91d:	mov    rbx,rax
   2a920:	call   4b670 <argp_usage@@Base+0x82f0>
   2a925:	mov    esi,DWORD PTR [r14]
   2a928:	mov    r9,rbx
   2a92b:	xor    edi,edi
   2a92d:	mov    rcx,rax
   2a930:	mov    r8d,0x2
   2a936:	xor    eax,eax
   2a938:	mov    r14d,0x2
   2a93e:	lea    rdx,[rip+0x3a642]        # 64f87 <_obstack_memory_used@@Base+0x18307>
   2a945:	call   a640 <error@plt>
   2a94a:	movabs rax,0x8000000000000000
   2a954:	mov    DWORD PTR [rip+0x54766],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2a95e:	mov    QWORD PTR [rip+0x54e2b],rax        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   2a965:	mov    QWORD PTR [rip+0x54e28],0xffffffffffffffff        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2a970:	jmp    2a63c <__sprintf_chk@plt+0x1fc8c>
   2a975:	mov    rsi,QWORD PTR [rip+0x5463c]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a97c:	lea    rdi,[rip+0x38c06]        # 63589 <_obstack_memory_used@@Base+0x16909>
   2a983:	call   3bad0 <__sprintf_chk@plt+0x31120>
   2a988:	mov    rdi,QWORD PTR [rsp+0x38]
   2a98d:	call   9ce0 <free@plt>
   2a992:	jmp    2a548 <__sprintf_chk@plt+0x1fb98>
   2a997:	mov    rdi,QWORD PTR [rsp+0x38]
   2a99c:	call   9ce0 <free@plt>
   2a9a1:	jmp    2a548 <__sprintf_chk@plt+0x1fb98>
   2a9a6:	mov    ebp,0x1
   2a9ab:	mov    rax,QWORD PTR [rip+0x54b56]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2a9b2:	test   rax,rax
   2a9b5:	je     2a9b9 <__sprintf_chk@plt+0x20009>
   2a9b7:	call   rax
   2a9b9:	mov    edx,0x5
   2a9be:	lea    rsi,[rip+0x3a5af]        # 64f74 <_obstack_memory_used@@Base+0x182f4>
   2a9c5:	xor    edi,edi
   2a9c7:	call   a040 <dcgettext@plt>
   2a9cc:	mov    rdi,QWORD PTR [rip+0x545e5]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2a9d3:	mov    rbx,rax
   2a9d6:	call   4b670 <argp_usage@@Base+0x82f0>
   2a9db:	mov    r12,rax
   2a9de:	call   9e40 <__errno_location@plt>
   2a9e3:	mov    r9,rbx
   2a9e6:	mov    r8,rbp
   2a9e9:	mov    rcx,r12
   2a9ec:	mov    esi,DWORD PTR [rax]
   2a9ee:	lea    rdx,[rip+0x3a592]        # 64f87 <_obstack_memory_used@@Base+0x18307>
   2a9f5:	xor    edi,edi
   2a9f7:	xor    eax,eax
   2a9f9:	call   a640 <error@plt>
   2a9fe:	call   190e0 <__sprintf_chk@plt+0xe730>
   2aa03:	nop    DWORD PTR [rax+rax*1+0x0]
   2aa08:	mov    rax,QWORD PTR [rip+0x54af9]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2aa0f:	test   rax,rax
   2aa12:	je     2aa16 <__sprintf_chk@plt+0x20066>
   2aa14:	call   rax
   2aa16:	mov    edx,0x5
   2aa1b:	lea    rsi,[rip+0x3ad3e]        # 65760 <_obstack_memory_used@@Base+0x18ae0>
   2aa22:	xor    edi,edi
   2aa24:	call   a040 <dcgettext@plt>
   2aa29:	mov    rdi,QWORD PTR [rip+0x54588]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2aa30:	mov    rbx,rax
   2aa33:	call   4b670 <argp_usage@@Base+0x82f0>
   2aa38:	mov    r8,rbx
   2aa3b:	xor    esi,esi
   2aa3d:	xor    edi,edi
   2aa3f:	mov    rcx,rax
   2aa42:	lea    rdx,[rip+0x4242e]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   2aa49:	xor    eax,eax
   2aa4b:	call   a640 <error@plt>
   2aa50:	call   190e0 <__sprintf_chk@plt+0xe730>
   2aa55:	mov    rax,QWORD PTR [rip+0x54aac]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2aa5c:	test   rax,rax
   2aa5f:	je     2aa63 <__sprintf_chk@plt+0x200b3>
   2aa61:	call   rax
   2aa63:	mov    edx,0x5
   2aa68:	lea    rsi,[rip+0x3a523]        # 64f92 <_obstack_memory_used@@Base+0x18312>
   2aa6f:	jmp    2a7bc <__sprintf_chk@plt+0x1fe0c>
   2aa74:	mov    rax,QWORD PTR [rip+0x54a8d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2aa7b:	test   rax,rax
   2aa7e:	je     2aa82 <__sprintf_chk@plt+0x200d2>
   2aa80:	call   rax
   2aa82:	mov    edx,0x5
   2aa87:	lea    rsi,[rip+0x3a551]        # 64fdf <_obstack_memory_used@@Base+0x1835f>
   2aa8e:	xor    edi,edi
   2aa90:	call   a040 <dcgettext@plt>
   2aa95:	mov    rdi,QWORD PTR [rip+0x54d54]        # 7f7f0 <obstack_alloc_failed_handler@@Base+0x9b8>
   2aa9c:	mov    rbp,rax
   2aa9f:	call   9e90 <ftello@plt>
   2aaa4:	lea    rsi,[rsp+0xb0]
   2aaac:	mov    rdi,rax
   2aaaf:	call   49490 <argp_usage@@Base+0x6110>
   2aab4:	mov    rdi,QWORD PTR [rip+0x544fd]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2aabb:	mov    rbx,rax
   2aabe:	call   4b670 <argp_usage@@Base+0x82f0>
   2aac3:	mov    edx,0x5
   2aac8:	lea    rsi,[rip+0x3a52a]        # 64ff9 <_obstack_memory_used@@Base+0x18379>
   2aacf:	xor    edi,edi
   2aad1:	mov    r12,rax
   2aad4:	call   a040 <dcgettext@plt>
   2aad9:	mov    r9,rbp
   2aadc:	mov    r8,rbx
   2aadf:	mov    rcx,r12
   2aae2:	mov    rdx,rax
   2aae5:	xor    esi,esi
   2aae7:	xor    edi,edi
   2aae9:	xor    eax,eax
   2aaeb:	call   a640 <error@plt>
   2aaf0:	call   190e0 <__sprintf_chk@plt+0xe730>
   2aaf5:	mov    ebp,0x2
   2aafa:	jmp    2a9ab <__sprintf_chk@plt+0x1fffb>
   2aaff:	call   a0a0 <__stack_chk_fail@plt>
   2ab04:	mov    rsi,QWORD PTR [rip+0x544ad]        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   2ab0b:	lea    rdi,[rip+0x386ae]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   2ab12:	call   3bad0 <__sprintf_chk@plt+0x31120>
   2ab17:	mov    edi,ebp
   2ab19:	call   a200 <close@plt>
   2ab1e:	jmp    2a55e <__sprintf_chk@plt+0x1fbae>
   2ab23:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2ab2e:	xchg   ax,ax
   2ab30:	endbr64 
   2ab34:	push   r15
   2ab36:	push   r14
   2ab38:	lea    r14,[rip+0x38686]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   2ab3f:	push   r13
   2ab41:	push   r12
   2ab43:	push   rbp
   2ab44:	push   rbx
   2ab45:	sub    rsp,0x188
   2ab4c:	mov    r13,QWORD PTR [rip+0x54a2d]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2ab53:	mov    QWORD PTR [rsp+0x18],rdi
   2ab58:	mov    QWORD PTR [rsp+0x8],rsi
   2ab5d:	mov    DWORD PTR [rsp+0x14],edx
   2ab61:	mov    rax,QWORD PTR fs:0x28
   2ab6a:	mov    QWORD PTR [rsp+0x178],rax
   2ab72:	xor    eax,eax
   2ab74:	mov    QWORD PTR [rsp+0x30],0x0
   2ab7d:	mov    QWORD PTR [rsp+0x38],0x0
   2ab86:	mov    QWORD PTR [rsp+0x20],0x0
   2ab8f:	mov    QWORD PTR [rsp+0x28],0x0
   2ab98:	nop    DWORD PTR [rax+rax*1+0x0]
   2aba0:	mov    r12,QWORD PTR [rip+0x54999]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2aba7:	cmp    r13,r12
   2abaa:	je     2ad7e <__sprintf_chk@plt+0x203ce>
   2abb0:	mov    rax,QWORD PTR [rsp+0x18]
   2abb5:	mov    QWORD PTR [rax],r12
   2abb8:	test   r12,r12
   2abbb:	je     2adb3 <__sprintf_chk@plt+0x20403>
   2abc1:	xor    esi,esi
   2abc3:	mov    rdi,r12
   2abc6:	call   24000 <__sprintf_chk@plt+0x19650>
   2abcb:	mov    r15d,eax
   2abce:	cmp    eax,0x1
   2abd1:	jne    2adb9 <__sprintf_chk@plt+0x20409>
   2abd7:	cmp    BYTE PTR [r12+0x9c],0x31
   2abe0:	jne    2acb8 <__sprintf_chk@plt+0x20308>
   2abe6:	mov    rax,QWORD PTR [rsp+0x8]
   2abeb:	mov    QWORD PTR [rax+0x88],0x0
   2abf6:	mov    rdi,QWORD PTR [rip+0x54d23]        # 7f920 <obstack_alloc_failed_handler@@Base+0xae8>
   2abfd:	call   9ce0 <free@plt>
   2ac02:	mov    rax,QWORD PTR [rsp+0x28]
   2ac07:	lea    rbp,[rax+0x200]
   2ac0e:	test   rax,rax
   2ac11:	je     2b17d <__sprintf_chk@plt+0x207cd>
   2ac17:	mov    rax,QWORD PTR [rsp+0x28]
   2ac1c:	mov    rbx,QWORD PTR [rsp+0x8]
   2ac21:	mov    rsi,rbp
   2ac24:	mov    QWORD PTR [rip+0x54cf5],rax        # 7f920 <obstack_alloc_failed_handler@@Base+0xae8>
   2ac2b:	mov    rax,QWORD PTR [rsp+0x38]
   2ac30:	mov    rdi,rbx
   2ac33:	mov    QWORD PTR [rip+0x54cfe],rax        # 7f938 <obstack_alloc_failed_handler@@Base+0xb00>
   2ac3a:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   2ac3f:	mov    rsi,rbp
   2ac42:	lea    rdi,[rbx+0x8]
   2ac46:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   2ac4b:	mov    rdi,QWORD PTR [rbx+0x8]
   2ac4f:	call   484b0 <argp_usage@@Base+0x5130>
   2ac54:	mov    rdi,QWORD PTR [rip+0x54cbd]        # 7f918 <obstack_alloc_failed_handler@@Base+0xae0>
   2ac5b:	mov    BYTE PTR [rbx+0x10],al
   2ac5e:	call   9ce0 <free@plt>
   2ac63:	mov    rax,QWORD PTR [rsp+0x20]
   2ac68:	test   rax,rax
   2ac6b:	je     2b211 <__sprintf_chk@plt+0x20861>
   2ac71:	lea    rsi,[rax+0x200]
   2ac78:	mov    rax,QWORD PTR [rsp+0x20]
   2ac7d:	mov    rdi,QWORD PTR [rsp+0x8]
   2ac82:	mov    QWORD PTR [rip+0x54c8f],rax        # 7f918 <obstack_alloc_failed_handler@@Base+0xae0>
   2ac89:	mov    rax,QWORD PTR [rsp+0x30]
   2ac8e:	add    rdi,0x18
   2ac92:	mov    QWORD PTR [rip+0x54c97],rax        # 7f930 <obstack_alloc_failed_handler@@Base+0xaf8>
   2ac99:	call   24fd0 <__sprintf_chk@plt+0x1a620>
   2ac9e:	mov    QWORD PTR [rsp+0x20],0x0
   2aca7:	mov    QWORD PTR [rsp+0x28],0x0
   2acb0:	jmp    2adb9 <__sprintf_chk@plt+0x20409>
   2acb5:	nop    DWORD PTR [rax]
   2acb8:	sub    rsp,0x8
   2acbc:	lea    r13,[r12+0x7c]
   2acc1:	mov    esi,0xc
   2acc6:	xor    ecx,ecx
   2acc8:	push   0x0
   2acca:	mov    rdi,r13
   2accd:	xor    r9d,r9d
   2acd0:	mov    rdx,r14
   2acd3:	movabs r8,0x7fffffffffffffff
   2acdd:	call   23640 <__sprintf_chk@plt+0x18c90>
   2ace2:	mov    rsi,QWORD PTR [rsp+0x18]
   2ace7:	mov    QWORD PTR [rsi+0x88],rax
   2acee:	pop    rdi
   2acef:	pop    r8
   2acf1:	test   rax,rax
   2acf4:	js     2b172 <__sprintf_chk@plt+0x207c2>
   2acfa:	movzx  ebp,BYTE PTR [r12+0x9c]
   2ad03:	lea    ecx,[rbp-0x4b]
   2ad06:	cmp    cl,0x1
   2ad09:	jbe    2ad15 <__sprintf_chk@plt+0x20365>
   2ad0b:	cmp    bpl,0x78
   2ad0f:	jne    2adf9 <__sprintf_chk@plt+0x20449>
   2ad15:	cmp    DWORD PTR [rsp+0x14],0x1
   2ad1a:	je     2b167 <__sprintf_chk@plt+0x207b7>
   2ad20:	cmp    cl,0x1
   2ad23:	jbe    2aef0 <__sprintf_chk@plt+0x20540>
   2ad29:	sub    rsp,0x8
   2ad2d:	xor    ecx,ecx
   2ad2f:	mov    rdi,r13
   2ad32:	xor    r9d,r9d
   2ad35:	push   0x0
   2ad37:	mov    rdx,r14
   2ad3a:	mov    esi,0xc
   2ad3f:	movabs r8,0x7fffffffffffffff
   2ad49:	call   23640 <__sprintf_chk@plt+0x18c90>
   2ad4e:	mov    rsi,r12
   2ad51:	mov    rdx,rax
   2ad54:	mov    rax,QWORD PTR [rsp+0x18]
   2ad59:	lea    rdi,[rax+0x168]
   2ad60:	call   1cdc0 <__sprintf_chk@plt+0x12410>
   2ad65:	mov    r13,QWORD PTR [rip+0x54814]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2ad6c:	mov    r12,QWORD PTR [rip+0x547cd]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2ad73:	pop    rcx
   2ad74:	pop    rsi
   2ad75:	cmp    r13,r12
   2ad78:	jne    2abb0 <__sprintf_chk@plt+0x20200>
   2ad7e:	cmp    BYTE PTR [rip+0x547af],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2ad85:	jne    2ada7 <__sprintf_chk@plt+0x203f7>
   2ad87:	call   f170 <__sprintf_chk@plt+0x47c0>
   2ad8c:	mov    r12,QWORD PTR [rip+0x547ad]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2ad93:	cmp    r12,QWORD PTR [rip+0x547e6]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2ad9a:	jne    2abb0 <__sprintf_chk@plt+0x20200>
   2ada0:	mov    BYTE PTR [rip+0x5478d],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2ada7:	mov    rax,QWORD PTR [rsp+0x18]
   2adac:	mov    QWORD PTR [rax],0x0
   2adb3:	mov    r15d,0x4
   2adb9:	mov    rdi,QWORD PTR [rsp+0x28]
   2adbe:	call   9ce0 <free@plt>
   2adc3:	mov    rdi,QWORD PTR [rsp+0x20]
   2adc8:	call   9ce0 <free@plt>
   2adcd:	mov    rax,QWORD PTR [rsp+0x178]
   2add5:	sub    rax,QWORD PTR fs:0x28
   2adde:	jne    2b3a2 <__sprintf_chk@plt+0x209f2>
   2ade4:	add    rsp,0x188
   2adeb:	mov    eax,r15d
   2adee:	pop    rbx
   2adef:	pop    rbp
   2adf0:	pop    r12
   2adf2:	pop    r13
   2adf4:	pop    r14
   2adf6:	pop    r15
   2adf8:	ret    
   2adf9:	cmp    bpl,0x67
   2adfd:	je     2ae09 <__sprintf_chk@plt+0x20459>
   2adff:	cmp    bpl,0x58
   2ae03:	jne    2abf6 <__sprintf_chk@plt+0x20246>
   2ae09:	cmp    DWORD PTR [rsp+0x14],0x1
   2ae0e:	je     2b167 <__sprintf_chk@plt+0x207b7>
   2ae14:	cmp    bpl,0x58
   2ae18:	je     2ad29 <__sprintf_chk@plt+0x20379>
   2ae1e:	mov    rax,QWORD PTR [rip+0x54c93]        # 7fab8 <obstack_alloc_failed_handler@@Base+0xc80>
   2ae25:	test   rax,rax
   2ae28:	je     2b148 <__sprintf_chk@plt+0x20798>
   2ae2e:	mov    rdx,QWORD PTR [r12]
   2ae32:	lea    rdi,[rax+0x8]
   2ae36:	mov    rsi,r12
   2ae39:	pxor   xmm0,xmm0
   2ae3d:	and    rdi,0xfffffffffffffff8
   2ae41:	lea    r15,[rsp+0x50]
   2ae46:	xor    r9d,r9d
   2ae49:	sub    rsp,0x8
   2ae4d:	movabs r8,0x7fffffffffffffff
   2ae57:	mov    QWORD PTR [rax],rdx
   2ae5a:	mov    rdx,QWORD PTR [r12+0x1f8]
   2ae62:	mov    QWORD PTR [rax+0x1f8],rdx
   2ae69:	sub    rax,rdi
   2ae6c:	mov    rdx,r14
   2ae6f:	sub    rsi,rax
   2ae72:	add    eax,0x200
   2ae77:	shr    eax,0x3
   2ae7a:	mov    ecx,eax
   2ae7c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   2ae7f:	movaps XMMWORD PTR [rsp+0x58],xmm0
   2ae84:	mov    esi,0xc
   2ae89:	mov    rdi,r13
   2ae8c:	movaps XMMWORD PTR [rsp+0x68],xmm0
   2ae91:	push   0x0
   2ae93:	call   23640 <__sprintf_chk@plt+0x18c90>
   2ae98:	mov    rdi,r15
   2ae9b:	mov    rsi,r12
   2ae9e:	mov    rdx,rax
   2aea1:	call   1cdc0 <__sprintf_chk@plt+0x12410>
   2aea6:	mov    rdi,QWORD PTR [rsp+0x68]
   2aeab:	pop    rax
   2aeac:	pop    rdx
   2aead:	test   rdi,rdi
   2aeb0:	jne    2b0aa <__sprintf_chk@plt+0x206fa>
   2aeb6:	mov    rdi,QWORD PTR [rsp+0x50]
   2aebb:	test   rdi,rdi
   2aebe:	je     2b139 <__sprintf_chk@plt+0x20789>
   2aec4:	xor    esi,esi
   2aec6:	call   4cbf0 <_obstack_free@@Base>
   2aecb:	mov    rdi,QWORD PTR [rsp+0x50]
   2aed0:	call   9ce0 <free@plt>
   2aed5:	cmp    DWORD PTR [rsp+0x14],0x2
   2aeda:	je     2b167 <__sprintf_chk@plt+0x207b7>
   2aee0:	mov    r13,QWORD PTR [rip+0x54699]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2aee7:	jmp    2aba0 <__sprintf_chk@plt+0x201f0>
   2aeec:	nop    DWORD PTR [rax+0x0]
   2aef0:	mov    rcx,rax
   2aef3:	lea    rbx,[rax+0x200]
   2aefa:	and    ecx,0x1ff
   2af00:	je     2af15 <__sprintf_chk@plt+0x20565>
   2af02:	lea    rbx,[rax+0x400]
   2af09:	sub    rbx,rcx
   2af0c:	cmp    rax,rbx
   2af0f:	ja     2b3a7 <__sprintf_chk@plt+0x209f7>
   2af15:	lea    rdi,[rbx+0x1]
   2af19:	call   a4a0 <malloc@plt>
   2af1e:	mov    r15,rax
   2af21:	test   rax,rax
   2af24:	je     2b3a7 <__sprintf_chk@plt+0x209f7>
   2af2a:	mov    r13,rbx
   2af2d:	shr    r13,0x9
   2af31:	cmp    bpl,0x4c
   2af35:	je     2b091 <__sprintf_chk@plt+0x206e1>
   2af3b:	mov    rdi,QWORD PTR [rsp+0x20]
   2af40:	call   9ce0 <free@plt>
   2af45:	mov    QWORD PTR [rsp+0x30],r13
   2af4a:	mov    QWORD PTR [rsp+0x20],r15
   2af4f:	mov    rax,QWORD PTR [rip+0x545ea]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2af56:	cmp    rax,r12
   2af59:	ja     2af77 <__sprintf_chk@plt+0x205c7>
   2af5b:	mov    rdx,r12
   2af5e:	sub    rdx,rax
   2af61:	and    rdx,0xfffffffffffffe00
   2af68:	lea    rax,[rax+rdx*1+0x200]
   2af70:	mov    QWORD PTR [rip+0x545c9],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2af77:	mov    r13,QWORD PTR [rip+0x54602]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2af7e:	cmp    rax,r13
   2af81:	ja     aa7b <__sprintf_chk@plt+0xcb>
   2af87:	mov    rdi,r15
   2af8a:	add    r15,0x200
   2af91:	sub    rbx,0x200
   2af98:	mov    rsi,r12
   2af9b:	mov    ecx,0x40
   2afa0:	mov    rbp,rbx
   2afa3:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   2afa6:	jne    2b00e <__sprintf_chk@plt+0x2065e>
   2afa8:	jmp    2b088 <__sprintf_chk@plt+0x206d8>
   2afad:	nop    DWORD PTR [rax]
   2afb0:	test   rbx,rbx
   2afb3:	je     2b048 <__sprintf_chk@plt+0x20698>
   2afb9:	mov    r13,QWORD PTR [rip+0x545c0]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2afc0:	mov    rdi,r15
   2afc3:	mov    rsi,rbx
   2afc6:	mov    r12,r13
   2afc9:	sub    r12,rbx
   2afcc:	cmp    r12,rbp
   2afcf:	cmova  r12,rbp
   2afd3:	mov    rdx,r12
   2afd6:	add    r15,r12
   2afd9:	call   a420 <memcpy@plt>
   2afde:	lea    rax,[r12-0x1]
   2afe3:	mov    rcx,rbx
   2afe6:	add    rcx,rax
   2afe9:	jb     2b000 <__sprintf_chk@plt+0x20650>
   2afeb:	and    rax,0xfffffffffffffe00
   2aff1:	lea    rbx,[rbx+rax*1+0x200]
   2aff9:	mov    QWORD PTR [rip+0x54540],rbx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2b000:	cmp    rbx,r13
   2b003:	ja     aa7b <__sprintf_chk@plt+0xcb>
   2b009:	sub    rbp,r12
   2b00c:	je     2b088 <__sprintf_chk@plt+0x206d8>
   2b00e:	mov    rbx,QWORD PTR [rip+0x5452b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2b015:	cmp    rbx,r13
   2b018:	jne    2afb0 <__sprintf_chk@plt+0x20600>
   2b01a:	cmp    BYTE PTR [rip+0x54513],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2b021:	jne    2b048 <__sprintf_chk@plt+0x20698>
   2b023:	call   f170 <__sprintf_chk@plt+0x47c0>
   2b028:	mov    rbx,QWORD PTR [rip+0x54511]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2b02f:	cmp    rbx,QWORD PTR [rip+0x5454a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2b036:	jne    2afb0 <__sprintf_chk@plt+0x20600>
   2b03c:	mov    BYTE PTR [rip+0x544f1],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2b043:	nop    DWORD PTR [rax+rax*1+0x0]
   2b048:	mov    rax,QWORD PTR [rip+0x544b9]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2b04f:	test   rax,rax
   2b052:	je     2b056 <__sprintf_chk@plt+0x206a6>
   2b054:	call   rax
   2b056:	mov    edx,0x5
   2b05b:	lea    rsi,[rip+0x3835e]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   2b062:	xor    edi,edi
   2b064:	call   a040 <dcgettext@plt>
   2b069:	xor    esi,esi
   2b06b:	xor    edi,edi
   2b06d:	mov    rdx,rax
   2b070:	xor    eax,eax
   2b072:	call   a640 <error@plt>
   2b077:	mov    r13,QWORD PTR [rip+0x54502]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2b07e:	mov    DWORD PTR [rip+0x5403c],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2b088:	mov    BYTE PTR [r15],0x0
   2b08c:	jmp    2aba0 <__sprintf_chk@plt+0x201f0>
   2b091:	mov    rdi,QWORD PTR [rsp+0x28]
   2b096:	call   9ce0 <free@plt>
   2b09b:	mov    QWORD PTR [rsp+0x38],r13
   2b0a0:	mov    QWORD PTR [rsp+0x28],r15
   2b0a5:	jmp    2af4f <__sprintf_chk@plt+0x2059f>
   2b0aa:	mov    rsi,QWORD PTR [rsp+0x60]
   2b0af:	mov    rbx,QWORD PTR [rip+0x5465a]        # 7f710 <obstack_alloc_failed_handler@@Base+0x8d8>
   2b0b6:	lea    rax,[rsi+0x200]
   2b0bd:	mov    QWORD PTR [rsp+0x48],rax
   2b0c2:	test   rbx,rbx
   2b0c5:	je     2b0ff <__sprintf_chk@plt+0x2074f>
   2b0c7:	nop    WORD PTR [rax+rax*1+0x0]
   2b0d0:	mov    rbp,rbx
   2b0d3:	mov    rbx,QWORD PTR [rbx]
   2b0d6:	mov    rdi,QWORD PTR [rbp+0x8]
   2b0da:	call   9ce0 <free@plt>
   2b0df:	mov    rdi,QWORD PTR [rbp+0x10]
   2b0e3:	call   9ce0 <free@plt>
   2b0e8:	mov    rdi,rbp
   2b0eb:	call   9ce0 <free@plt>
   2b0f0:	test   rbx,rbx
   2b0f3:	jne    2b0d0 <__sprintf_chk@plt+0x20720>
   2b0f5:	mov    rdi,QWORD PTR [rsp+0x58]
   2b0fa:	mov    rsi,QWORD PTR [rsp+0x60]
   2b0ff:	mov    QWORD PTR [rip+0x54606],0x0        # 7f710 <obstack_alloc_failed_handler@@Base+0x8d8>
   2b10a:	lea    rbx,[rsp+0x48]
   2b10f:	lea    r8,[rip+0x545fa]        # 7f710 <obstack_alloc_failed_handler@@Base+0x8d8>
   2b116:	lea    rcx,[rip+0xffffffffffff04e3]        # 1b600 <__sprintf_chk@plt+0x10c50>
   2b11d:	mov    rdx,rbx
   2b120:	call   61a80 <_obstack_memory_used@@Base+0x14e00>
   2b125:	test   al,al
   2b127:	je     2aeb6 <__sprintf_chk@plt+0x20506>
   2b12d:	mov    rdi,QWORD PTR [rsp+0x58]
   2b132:	mov    rsi,QWORD PTR [rsp+0x60]
   2b137:	jmp    2b10f <__sprintf_chk@plt+0x2075f>
   2b139:	mov    rdi,QWORD PTR [rsp+0x60]
   2b13e:	call   9ce0 <free@plt>
   2b143:	jmp    2aed5 <__sprintf_chk@plt+0x20525>
   2b148:	mov    edi,0x200
   2b14d:	call   a4a0 <malloc@plt>
   2b152:	test   rax,rax
   2b155:	je     2b3a7 <__sprintf_chk@plt+0x209f7>
   2b15b:	mov    QWORD PTR [rip+0x54956],rax        # 7fab8 <obstack_alloc_failed_handler@@Base+0xc80>
   2b162:	jmp    2ae2e <__sprintf_chk@plt+0x2047e>
   2b167:	mov    r15d,0x2
   2b16d:	jmp    2adb9 <__sprintf_chk@plt+0x20409>
   2b172:	mov    r15d,0x5
   2b178:	jmp    2adb9 <__sprintf_chk@plt+0x20409>
   2b17d:	cmp    BYTE PTR [r12+0x159],0x0
   2b186:	je     2b2a4 <__sprintf_chk@plt+0x208f4>
   2b18c:	lea    rdi,[r12+0x101]
   2b194:	lea    rsi,[rip+0x3c150]        # 672eb <_obstack_memory_used@@Base+0x1a66b>
   2b19b:	call   a320 <strcmp@plt>
   2b1a0:	lea    r13,[rsp+0x70]
   2b1a5:	mov    r8d,eax
   2b1a8:	mov    rax,r13
   2b1ab:	test   r8d,r8d
   2b1ae:	je     2b2b1 <__sprintf_chk@plt+0x20901>
   2b1b4:	movdqu xmm3,XMMWORD PTR [r12]
   2b1ba:	mov    rbp,r13
   2b1bd:	mov    QWORD PTR [rsp+0x38],0x0
   2b1c6:	movups XMMWORD PTR [rax],xmm3
   2b1c9:	movdqu xmm4,XMMWORD PTR [r12+0x10]
   2b1d0:	movups XMMWORD PTR [rax+0x10],xmm4
   2b1d4:	movdqu xmm5,XMMWORD PTR [r12+0x20]
   2b1db:	movups XMMWORD PTR [rax+0x20],xmm5
   2b1df:	movdqu xmm6,XMMWORD PTR [r12+0x30]
   2b1e6:	movups XMMWORD PTR [rax+0x30],xmm6
   2b1ea:	movdqu xmm7,XMMWORD PTR [r12+0x40]
   2b1f1:	movups XMMWORD PTR [rax+0x40],xmm7
   2b1f5:	movdqu xmm1,XMMWORD PTR [r12+0x50]
   2b1fc:	movups XMMWORD PTR [rax+0x50],xmm1
   2b200:	mov    edx,DWORD PTR [r12+0x60]
   2b205:	mov    BYTE PTR [rax+0x64],0x0
   2b209:	mov    DWORD PTR [rax+0x60],edx
   2b20c:	jmp    2ac17 <__sprintf_chk@plt+0x20267>
   2b211:	movdqu xmm2,XMMWORD PTR [r12+0x9d]
   2b21b:	lea    rsi,[rsp+0x70]
   2b220:	movdqu xmm3,XMMWORD PTR [r12+0xad]
   2b22a:	mov    BYTE PTR [rsp+0xd4],0x0
   2b232:	movdqu xmm4,XMMWORD PTR [r12+0xbd]
   2b23c:	movdqu xmm5,XMMWORD PTR [r12+0xcd]
   2b246:	mov    QWORD PTR [rsp+0x30],0x0
   2b24f:	movdqu xmm6,XMMWORD PTR [r12+0xdd]
   2b259:	mov    eax,DWORD PTR [r12+0xfd]
   2b261:	movaps XMMWORD PTR [rsp+0x70],xmm2
   2b266:	movdqu xmm7,XMMWORD PTR [r12+0xed]
   2b270:	movaps XMMWORD PTR [rsp+0x80],xmm3
   2b278:	mov    DWORD PTR [rsp+0xd0],eax
   2b27f:	movaps XMMWORD PTR [rsp+0x90],xmm4
   2b287:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   2b28f:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   2b297:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   2b29f:	jmp    2ac78 <__sprintf_chk@plt+0x202c8>
   2b2a4:	lea    r13,[rsp+0x70]
   2b2a9:	mov    rax,r13
   2b2ac:	jmp    2b1b4 <__sprintf_chk@plt+0x20804>
   2b2b1:	movdqu xmm1,XMMWORD PTR [r12+0x159]
   2b2bb:	mov    rdi,r13
   2b2be:	movdqu xmm2,XMMWORD PTR [r12+0x169]
   2b2c8:	mov    BYTE PTR [rsp+0x10b],0x0
   2b2d0:	mov    rdx,QWORD PTR [r12+0x1e9]
   2b2d8:	movdqu xmm3,XMMWORD PTR [r12+0x179]
   2b2e2:	movdqu xmm4,XMMWORD PTR [r12+0x189]
   2b2ec:	movaps XMMWORD PTR [rsp+0x70],xmm1
   2b2f1:	movdqu xmm5,XMMWORD PTR [r12+0x199]
   2b2fb:	movdqu xmm6,XMMWORD PTR [r12+0x1a9]
   2b305:	movdqu xmm7,XMMWORD PTR [r12+0x1b9]
   2b30f:	mov    QWORD PTR [rsp+0x100],rdx
   2b317:	movdqu xmm1,XMMWORD PTR [r12+0x1c9]
   2b321:	movzx  edx,WORD PTR [r12+0x1f1]
   2b32a:	movaps XMMWORD PTR [rsp+0x80],xmm2
   2b332:	movzx  eax,BYTE PTR [r12+0x1f3]
   2b33b:	movaps XMMWORD PTR [rsp+0x90],xmm3
   2b343:	movdqu xmm2,XMMWORD PTR [r12+0x1d9]
   2b34d:	mov    WORD PTR [rsp+0x108],dx
   2b355:	mov    BYTE PTR [rsp+0x10a],al
   2b35c:	movaps XMMWORD PTR [rsp+0xa0],xmm4
   2b364:	movaps XMMWORD PTR [rsp+0xb0],xmm5
   2b36c:	movaps XMMWORD PTR [rsp+0xc0],xmm6
   2b374:	movaps XMMWORD PTR [rsp+0xd0],xmm7
   2b37c:	movaps XMMWORD PTR [rsp+0xe0],xmm1
   2b384:	movaps XMMWORD PTR [rsp+0xf0],xmm2
   2b38c:	call   a060 <strlen@plt>
   2b391:	lea    rdx,[r13+rax*1+0x0]
   2b396:	mov    BYTE PTR [rdx],0x2f
   2b399:	lea    rax,[rdx+0x1]
   2b39d:	jmp    2b1b4 <__sprintf_chk@plt+0x20804>
   2b3a2:	call   a0a0 <__stack_chk_fail@plt>
   2b3a7:	call   19130 <__sprintf_chk@plt+0xe780>
   2b3ac:	nop    DWORD PTR [rax+0x0]
   2b3b0:	push   r14
   2b3b2:	push   r13
   2b3b4:	push   r12
   2b3b6:	push   rbp
   2b3b7:	push   rbx
   2b3b8:	sub    rsp,0x140
   2b3bf:	movzx  ebx,BYTE PTR [rdi]
   2b3c2:	mov    rax,QWORD PTR fs:0x28
   2b3cb:	mov    QWORD PTR [rsp+0x138],rax
   2b3d3:	xor    eax,eax
   2b3d5:	test   bl,bl
   2b3d7:	je     2b4e0 <__sprintf_chk@plt+0x20b30>
   2b3dd:	mov    r12,rdi
   2b3e0:	mov    rbp,rsi
   2b3e3:	call   a980 <__ctype_b_loc@plt>
   2b3e8:	mov    rdx,QWORD PTR [rax]
   2b3eb:	jmp    2b402 <__sprintf_chk@plt+0x20a52>
   2b3ed:	nop    DWORD PTR [rax]
   2b3f0:	movzx  ebx,BYTE PTR [r12+0x1]
   2b3f6:	add    r12,0x1
   2b3fa:	test   bl,bl
   2b3fc:	je     2b4e0 <__sprintf_chk@plt+0x20b30>
   2b402:	movsx  rax,bl
   2b406:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   2b40b:	jne    2b3f0 <__sprintf_chk@plt+0x20a40>
   2b40d:	cmp    bl,0x2d
   2b410:	jne    2b4e0 <__sprintf_chk@plt+0x20b30>
   2b416:	lea    r13,[rsp+0x50]
   2b41b:	mov    edx,0x2000e46
   2b420:	mov    rdi,r12
   2b423:	mov    QWORD PTR [rsp+0x60],0x1
   2b42c:	mov    rsi,r13
   2b42f:	call   3f220 <__sprintf_chk@plt+0x34870>
   2b434:	mov    r14d,eax
   2b437:	test   eax,eax
   2b439:	jne    2b50c <__sprintf_chk@plt+0x20b5c>
   2b43f:	mov    rdx,QWORD PTR [rsp+0x58]
   2b444:	mov    rax,QWORD PTR [rip+0x53b75]        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
   2b44b:	lea    r9,[rsp+0x20]
   2b450:	xor    r8d,r8d
   2b453:	mov    rsi,QWORD PTR [rsp+0x60]
   2b458:	mov    ecx,0x2a
   2b45d:	add    esi,DWORD PTR [rsp+0x50]
   2b461:	lea    rdi,[rip+0x50e58]        # 7c2c0 <_obstack_memory_used@@Base+0x2f640>
   2b468:	mov    QWORD PTR [rdx],rax
   2b46b:	mov    rax,QWORD PTR [rbp+0x18]
   2b46f:	mov    DWORD PTR [rsp],0x2
   2b476:	mov    QWORD PTR [rsp+0x8],rax
   2b47b:	mov    rax,QWORD PTR [rbp+0x20]
   2b47f:	mov    QWORD PTR [rsp+0x28],0x0
   2b488:	mov    QWORD PTR [rsp+0x10],rax
   2b48d:	mov    rax,rsp
   2b490:	mov    QWORD PTR [rsp+0x20],rax
   2b495:	xor    eax,eax
   2b497:	mov    WORD PTR [rsp+0x30],ax
   2b49c:	mov    BYTE PTR [rsp+0x32],0x0
   2b4a1:	mov    QWORD PTR [rsp+0x38],0x0
   2b4aa:	mov    QWORD PTR [rsp+0x40],0x0
   2b4b3:	call   42240 <argp_parse@@Base>
   2b4b8:	mov    rdx,QWORD PTR [rsp+0x50]
   2b4bd:	add    rdx,QWORD PTR [rsp+0x60]
   2b4c2:	je     2b4d4 <__sprintf_chk@plt+0x20b24>
   2b4c4:	mov    rdi,QWORD PTR [rsp+0x58]
   2b4c9:	shl    rdx,0x3
   2b4cd:	xor    esi,esi
   2b4cf:	call   a1b0 <memset@plt>
   2b4d4:	mov    rdi,r13
   2b4d7:	call   3cee0 <__sprintf_chk@plt+0x32530>
   2b4dc:	jmp    2b4e6 <__sprintf_chk@plt+0x20b36>
   2b4de:	xchg   ax,ax
   2b4e0:	mov    r14d,0x1
   2b4e6:	mov    rax,QWORD PTR [rsp+0x138]
   2b4ee:	sub    rax,QWORD PTR fs:0x28
   2b4f7:	jne    2b551 <__sprintf_chk@plt+0x20ba1>
   2b4f9:	add    rsp,0x140
   2b500:	mov    eax,r14d
   2b503:	pop    rbx
   2b504:	pop    rbp
   2b505:	pop    r12
   2b507:	pop    r13
   2b509:	pop    r14
   2b50b:	ret    
   2b50c:	mov    rax,QWORD PTR [rip+0x53ff5]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2b513:	test   rax,rax
   2b516:	je     2b51a <__sprintf_chk@plt+0x20b6a>
   2b518:	call   rax
   2b51a:	mov    rdi,r13
   2b51d:	call   403a0 <__sprintf_chk@plt+0x359f0>
   2b522:	mov    edx,0x5
   2b527:	lea    rsi,[rip+0x37ba4]        # 630d2 <_obstack_memory_used@@Base+0x16452>
   2b52e:	xor    edi,edi
   2b530:	mov    rbx,rax
   2b533:	call   a040 <dcgettext@plt>
   2b538:	mov    r8,rbx
   2b53b:	mov    rcx,r12
   2b53e:	xor    esi,esi
   2b540:	mov    rdx,rax
   2b543:	xor    edi,edi
   2b545:	xor    eax,eax
   2b547:	call   a640 <error@plt>
   2b54c:	call   190e0 <__sprintf_chk@plt+0xe730>
   2b551:	call   a0a0 <__stack_chk_fail@plt>
   2b556:	cs nop WORD PTR [rax+rax*1+0x0]
   2b560:	endbr64 
   2b564:	push   r15
   2b566:	push   r14
   2b568:	push   r13
   2b56a:	push   r12
   2b56c:	push   rbp
   2b56d:	lea    rbp,[rip+0x3ad44]        # 662b8 <_obstack_memory_used@@Base+0x19638>
   2b574:	push   rbx
   2b575:	sub    rsp,0xc8
   2b57c:	mov    r13,QWORD PTR [rip+0x5436d]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2b583:	mov    DWORD PTR [rsp+0xc],edi
   2b587:	mov    rax,QWORD PTR fs:0x28
   2b590:	mov    QWORD PTR [rsp+0xb8],rax
   2b598:	xor    eax,eax
   2b59a:	test   r13,r13
   2b59d:	je     2bb5f <__sprintf_chk@plt+0x211af>
   2b5a3:	cmp    DWORD PTR [r13+0x10],0x4
   2b5a8:	ja     2b59a <__sprintf_chk@plt+0x20bea>
   2b5aa:	mov    eax,DWORD PTR [r13+0x10]
   2b5ae:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
   2b5b3:	add    rax,rbp
   2b5b6:	notrack jmp rax
   2b5b9:	nop    DWORD PTR [rax+0x0]
   2b5c0:	mov    r12,QWORD PTR [r13+0x18]
   2b5c4:	mov    rdi,r12
   2b5c7:	call   a060 <strlen@plt>
   2b5cc:	mov    edx,DWORD PTR [rsp+0xc]
   2b5d0:	test   edx,edx
   2b5d2:	je     2b620 <__sprintf_chk@plt+0x20c70>
   2b5d4:	lea    r13,[rax+0x1]
   2b5d8:	mov    rdi,r13
   2b5db:	call   a4a0 <malloc@plt>
   2b5e0:	mov    rdi,rax
   2b5e3:	test   rax,rax
   2b5e6:	je     2c38a <__sprintf_chk@plt+0x219da>
   2b5ec:	mov    rdx,r13
   2b5ef:	mov    rsi,r12
   2b5f2:	call   a420 <memcpy@plt>
   2b5f7:	mov    rdi,rax
   2b5fa:	call   23250 <__sprintf_chk@plt+0x188a0>
   2b5ff:	cmp    eax,DWORD PTR [rip+0x541c3]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   2b605:	mov    edi,eax
   2b607:	je     2b60e <__sprintf_chk@plt+0x20c5e>
   2b609:	call   26d40 <__sprintf_chk@plt+0x1c390>
   2b60e:	call   22e50 <__sprintf_chk@plt+0x184a0>
   2b613:	mov    r13,QWORD PTR [rip+0x542d6]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2b61a:	jmp    2b59a <__sprintf_chk@plt+0x20bea>
   2b61f:	nop
   2b620:	mov    r12,QWORD PTR [r13+0x18]
   2b624:	mov    rdi,r12
   2b627:	call   a060 <strlen@plt>
   2b62c:	mov    rsi,QWORD PTR [rip+0x5429d]        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2b633:	mov    rdi,QWORD PTR [rip+0x542a6]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b63a:	mov    rbx,rax
   2b63d:	cmp    rax,rsi
   2b640:	jb     2b870 <__sprintf_chk@plt+0x20ec0>
   2b646:	movabs rbp,0x5555555555555553
   2b650:	jmp    2b69b <__sprintf_chk@plt+0x20ceb>
   2b652:	nop    WORD PTR [rax+rax*1+0x0]
   2b658:	cmp    rsi,rbp
   2b65b:	ja     2c38a <__sprintf_chk@plt+0x219da>
   2b661:	mov    rax,rsi
   2b664:	shr    rax,1
   2b667:	lea    rsi,[rsi+rax*1+0x1]
   2b66c:	mov    QWORD PTR [rip+0x5425d],rsi        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2b673:	call   a570 <realloc@plt>
   2b678:	mov    rdi,rax
   2b67b:	test   rax,rax
   2b67e:	je     2c38a <__sprintf_chk@plt+0x219da>
   2b684:	mov    rsi,QWORD PTR [rip+0x54245]        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2b68b:	mov    QWORD PTR [rip+0x5424e],rdi        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b692:	cmp    rbx,rsi
   2b695:	jb     2b870 <__sprintf_chk@plt+0x20ec0>
   2b69b:	test   rdi,rdi
   2b69e:	jne    2b658 <__sprintf_chk@plt+0x20ca8>
   2b6a0:	test   rsi,rsi
   2b6a3:	mov    eax,0x80
   2b6a8:	cmove  rsi,rax
   2b6ac:	jmp    2b66c <__sprintf_chk@plt+0x20cbc>
   2b6ae:	xchg   ax,ax
   2b6b0:	mov    rbx,QWORD PTR [r13+0x20]
   2b6b4:	mov    r13d,DWORD PTR [r13+0x18]
   2b6b8:	lea    eax,[r13-0x58]
   2b6bc:	cmp    eax,0xc4
   2b6c1:	ja     2be9b <__sprintf_chk@plt+0x214eb>
   2b6c7:	lea    rcx,[rip+0x3abfe]        # 662cc <_obstack_memory_used@@Base+0x1964c>
   2b6ce:	movsxd rax,DWORD PTR [rcx+rax*4]
   2b6d2:	add    rax,rcx
   2b6d5:	notrack jmp rax
   2b6d8:	nop    DWORD PTR [rax+rax*1+0x0]
   2b6e0:	mov    r14,QWORD PTR [r13+0x30]
   2b6e4:	test   r14,r14
   2b6e7:	je     2ba10 <__sprintf_chk@plt+0x21060>
   2b6ed:	mov    r8d,DWORD PTR [r13+0x28]
   2b6f1:	mov    rax,QWORD PTR [r13+0x20]
   2b6f5:	mov    rdx,QWORD PTR [r14+0x8]
   2b6f9:	mov    rdi,QWORD PTR [r14+0x10]
   2b6fd:	add    rax,0x1
   2b701:	mov    QWORD PTR [r13+0x20],rax
   2b705:	cmp    rdi,rdx
   2b708:	jbe    2ba80 <__sprintf_chk@plt+0x210d0>
   2b70e:	lea    rsi,[rdx+0x1]
   2b712:	mov    QWORD PTR [r14+0x8],rsi
   2b716:	movzx  r15d,BYTE PTR [rdx]
   2b71a:	cmp    r15d,r8d
   2b71d:	je     2bec8 <__sprintf_chk@plt+0x21518>
   2b723:	xor    ebx,ebx
   2b725:	jmp    2b774 <__sprintf_chk@plt+0x20dc4>
   2b727:	nop    WORD PTR [rax+rax*1+0x0]
   2b730:	mov    BYTE PTR [rdi+rbx*1],r15b
   2b734:	lea    r12,[rbx+0x1]
   2b738:	test   r15d,r15d
   2b73b:	je     2b7e3 <__sprintf_chk@plt+0x20e33>
   2b741:	mov    rax,QWORD PTR [r14+0x8]
   2b745:	cmp    rax,QWORD PTR [r14+0x10]
   2b749:	jae    2b918 <__sprintf_chk@plt+0x20f68>
   2b74f:	lea    rdx,[rax+0x1]
   2b753:	mov    QWORD PTR [r14+0x8],rdx
   2b757:	movzx  r15d,BYTE PTR [rax]
   2b75b:	mov    eax,0x1
   2b760:	cmp    r15d,r8d
   2b763:	je     2b940 <__sprintf_chk@plt+0x20f90>
   2b769:	test   al,al
   2b76b:	je     2b940 <__sprintf_chk@plt+0x20f90>
   2b771:	mov    rbx,r12
   2b774:	cmp    QWORD PTR [rip+0x54155],rbx        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2b77b:	mov    rdi,QWORD PTR [rip+0x5415e]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b782:	jne    2b730 <__sprintf_chk@plt+0x20d80>
   2b784:	test   rdi,rdi
   2b787:	je     2b9e8 <__sprintf_chk@plt+0x21038>
   2b78d:	movabs rax,0x5555555555555553
   2b797:	cmp    rbx,rax
   2b79a:	ja     2c38a <__sprintf_chk@plt+0x219da>
   2b7a0:	mov    rax,rbx
   2b7a3:	shr    rax,1
   2b7a6:	lea    rsi,[rbx+rax*1+0x1]
   2b7ab:	mov    DWORD PTR [rsp],r8d
   2b7af:	mov    QWORD PTR [rip+0x5411a],rsi        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2b7b6:	call   a570 <realloc@plt>
   2b7bb:	mov    r8d,DWORD PTR [rsp]
   2b7bf:	test   rax,rax
   2b7c2:	mov    rdi,rax
   2b7c5:	je     2c38a <__sprintf_chk@plt+0x219da>
   2b7cb:	mov    QWORD PTR [rip+0x5410e],rdi        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b7d2:	lea    r12,[rbx+0x1]
   2b7d6:	mov    BYTE PTR [rdi+rbx*1],r15b
   2b7da:	test   r15d,r15d
   2b7dd:	jne    2b741 <__sprintf_chk@plt+0x20d91>
   2b7e3:	test   BYTE PTR [rip+0x50893],0x2        # 7c07d <_obstack_memory_used@@Base+0x2f3fd>
   2b7ea:	je     2b818 <__sprintf_chk@plt+0x20e68>
   2b7ec:	mov    rax,QWORD PTR [rip+0x53d15]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2b7f3:	test   rax,rax
   2b7f6:	je     2b7fa <__sprintf_chk@plt+0x20e4a>
   2b7f8:	call   rax
   2b7fa:	mov    rdi,QWORD PTR [r13+0x18]
   2b7fe:	call   4b670 <argp_usage@@Base+0x82f0>
   2b803:	lea    rdx,[rip+0x3a06e]        # 65878 <_obstack_memory_used@@Base+0x18bf8>
   2b80a:	xor    esi,esi
   2b80c:	xor    edi,edi
   2b80e:	mov    rcx,rax
   2b811:	xor    eax,eax
   2b813:	call   a640 <error@plt>
   2b818:	mov    DWORD PTR [r13+0x28],0x0
   2b820:	cmp    BYTE PTR [r13+0x2c],0x0
   2b825:	mov    rdi,QWORD PTR [rip+0x540b4]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b82c:	jne    2b852 <__sprintf_chk@plt+0x20ea2>
   2b82e:	cmp    BYTE PTR [rip+0x540b3],0x0        # 7f8e8 <obstack_alloc_failed_handler@@Base+0xab0>
   2b835:	jne    2be70 <__sprintf_chk@plt+0x214c0>
   2b83b:	mov    rsi,r13
   2b83e:	call   2b3b0 <__sprintf_chk@plt+0x20a00>
   2b843:	test   eax,eax
   2b845:	je     2bb4f <__sprintf_chk@plt+0x2119f>
   2b84b:	mov    rdi,QWORD PTR [rip+0x5408e]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b852:	mov    QWORD PTR [rip+0x5413f],rdi        # 7f998 <obstack_alloc_failed_handler@@Base+0xb60>
   2b859:	lea    r13,[rip+0x54120]        # 7f980 <obstack_alloc_failed_handler@@Base+0xb48>
   2b860:	mov    DWORD PTR [rip+0x54126],0x0        # 7f990 <obstack_alloc_failed_handler@@Base+0xb58>
   2b86a:	jmp    2b8d7 <__sprintf_chk@plt+0x20f27>
   2b86c:	nop    DWORD PTR [rax+0x0]
   2b870:	mov    rsi,r12
   2b873:	call   9e80 <strcpy@plt>
   2b878:	mov    rdi,rax
   2b87b:	mov    QWORD PTR [rsp],rax
   2b87f:	call   a060 <strlen@plt>
   2b884:	mov    rdi,QWORD PTR [rsp]
   2b888:	lea    rax,[rdi+rax*1-0x1]
   2b88d:	cmp    rdi,rax
   2b890:	jb     2b8a5 <__sprintf_chk@plt+0x20ef5>
   2b892:	jmp    2b8aa <__sprintf_chk@plt+0x20efa>
   2b894:	nop    DWORD PTR [rax+0x0]
   2b898:	sub    rax,0x1
   2b89c:	mov    BYTE PTR [rax+0x1],0x0
   2b8a0:	cmp    rdi,rax
   2b8a3:	je     2b8aa <__sprintf_chk@plt+0x20efa>
   2b8a5:	cmp    BYTE PTR [rax],0x2f
   2b8a8:	je     2b898 <__sprintf_chk@plt+0x20ee8>
   2b8aa:	cmp    BYTE PTR [rip+0x54037],0x0        # 7f8e8 <obstack_alloc_failed_handler@@Base+0xab0>
   2b8b1:	mov    rbx,QWORD PTR [rip+0x54028]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b8b8:	jne    2b908 <__sprintf_chk@plt+0x20f58>
   2b8ba:	mov    eax,DWORD PTR [r13+0x10]
   2b8be:	mov    QWORD PTR [rip+0x540d3],rbx        # 7f998 <obstack_alloc_failed_handler@@Base+0xb60>
   2b8c5:	lea    r13,[rip+0x540b4]        # 7f980 <obstack_alloc_failed_handler@@Base+0xb48>
   2b8cc:	mov    DWORD PTR [rip+0x540be],eax        # 7f990 <obstack_alloc_failed_handler@@Base+0xb58>
   2b8d2:	call   22e50 <__sprintf_chk@plt+0x184a0>
   2b8d7:	mov    rax,QWORD PTR [rsp+0xb8]
   2b8df:	sub    rax,QWORD PTR fs:0x28
   2b8e8:	jne    2c3d2 <__sprintf_chk@plt+0x21a22>
   2b8ee:	add    rsp,0xc8
   2b8f5:	mov    rax,r13
   2b8f8:	pop    rbx
   2b8f9:	pop    rbp
   2b8fa:	pop    r12
   2b8fc:	pop    r13
   2b8fe:	pop    r14
   2b900:	pop    r15
   2b902:	ret    
   2b903:	nop    DWORD PTR [rax+rax*1+0x0]
   2b908:	mov    rdi,rbx
   2b90b:	call   618c0 <_obstack_memory_used@@Base+0x14c40>
   2b910:	jmp    2b8ba <__sprintf_chk@plt+0x20f0a>
   2b912:	nop    WORD PTR [rax+rax*1+0x0]
   2b918:	mov    rdi,r14
   2b91b:	mov    DWORD PTR [rsp],r8d
   2b91f:	call   9d30 <__uflow@plt>
   2b924:	mov    r8d,DWORD PTR [rsp]
   2b928:	mov    r15d,eax
   2b92b:	cmp    eax,0xffffffff
   2b92e:	setne  al
   2b931:	cmp    r15d,r8d
   2b934:	jne    2b769 <__sprintf_chk@plt+0x20db9>
   2b93a:	nop    WORD PTR [rax+rax*1+0x0]
   2b940:	test   r12,r12
   2b943:	sete   cl
   2b946:	and    eax,ecx
   2b948:	test   al,al
   2b94a:	jne    2be82 <__sprintf_chk@plt+0x214d2>
   2b950:	mov    rsi,QWORD PTR [rip+0x53f79]        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2b957:	mov    rbx,QWORD PTR [rip+0x53f82]        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2b95e:	cmp    r12,rsi
   2b961:	je     2bafa <__sprintf_chk@plt+0x2114a>
   2b967:	mov    BYTE PTR [rbx+r12*1],0x0
   2b96c:	mov    rdi,rbx
   2b96f:	mov    BYTE PTR [rsp],cl
   2b972:	call   a060 <strlen@plt>
   2b977:	movzx  ecx,BYTE PTR [rsp]
   2b97b:	lea    rax,[rbx+rax*1-0x1]
   2b980:	cmp    rbx,rax
   2b983:	jb     2b99d <__sprintf_chk@plt+0x20fed>
   2b985:	jmp    2b9a2 <__sprintf_chk@plt+0x20ff2>
   2b987:	nop    WORD PTR [rax+rax*1+0x0]
   2b990:	sub    rax,0x1
   2b994:	mov    BYTE PTR [rax+0x1],0x0
   2b998:	cmp    rbx,rax
   2b99b:	je     2b9a2 <__sprintf_chk@plt+0x20ff2>
   2b99d:	cmp    BYTE PTR [rax],0x2f
   2b9a0:	je     2b990 <__sprintf_chk@plt+0x20fe0>
   2b9a2:	cmp    r15d,0xffffffff
   2b9a6:	jne    2b820 <__sprintf_chk@plt+0x20e70>
   2b9ac:	test   cl,cl
   2b9ae:	je     2b820 <__sprintf_chk@plt+0x20e70>
   2b9b4:	mov    rax,QWORD PTR [r13+0x18]
   2b9b8:	cmp    BYTE PTR [rax],0x2d
   2b9bb:	jne    2ba70 <__sprintf_chk@plt+0x210c0>
   2b9c1:	cmp    BYTE PTR [rax+0x1],0x0
   2b9c5:	jne    2ba70 <__sprintf_chk@plt+0x210c0>
   2b9cb:	mov    QWORD PTR [r13+0x30],0x0
   2b9d3:	call   22e50 <__sprintf_chk@plt+0x184a0>
   2b9d8:	mov    r13,QWORD PTR [rip+0x53f11]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2b9df:	jmp    2b59a <__sprintf_chk@plt+0x20bea>
   2b9e4:	nop    DWORD PTR [rax+0x0]
   2b9e8:	test   rbx,rbx
   2b9eb:	je     2ba00 <__sprintf_chk@plt+0x21050>
   2b9ed:	js     2c38a <__sprintf_chk@plt+0x219da>
   2b9f3:	mov    rsi,rbx
   2b9f6:	jmp    2b7ab <__sprintf_chk@plt+0x20dfb>
   2b9fb:	nop    DWORD PTR [rax+rax*1+0x0]
   2ba00:	mov    esi,0x80
   2ba05:	jmp    2b7ab <__sprintf_chk@plt+0x20dfb>
   2ba0a:	nop    WORD PTR [rax+rax*1+0x0]
   2ba10:	mov    rbx,QWORD PTR [r13+0x18]
   2ba14:	cmp    BYTE PTR [rbx],0x2d
   2ba17:	jne    2bab8 <__sprintf_chk@plt+0x21108>
   2ba1d:	cmp    BYTE PTR [rbx+0x1],0x0
   2ba21:	jne    2bab8 <__sprintf_chk@plt+0x21108>
   2ba27:	cmp    QWORD PTR [rip+0x53e99],0x0        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
   2ba2f:	jne    2c3e6 <__sprintf_chk@plt+0x21a36>
   2ba35:	lea    rax,[rip+0x395d5]        # 65011 <_obstack_memory_used@@Base+0x18391>
   2ba3c:	mov    QWORD PTR [rip+0x53e85],rax        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
   2ba43:	mov    rax,QWORD PTR [rip+0x5055e]        # 7bfa8 <_obstack_memory_used@@Base+0x2f328>
   2ba4a:	mov    r14,QWORD PTR [rax]
   2ba4d:	mov    QWORD PTR [r13+0x30],r14
   2ba51:	movsx  r8d,BYTE PTR [rip+0x50853]        # 7c2ac <_obstack_memory_used@@Base+0x2f62c>
   2ba59:	movzx  eax,BYTE PTR [rip+0x53f18]        # 7f978 <obstack_alloc_failed_handler@@Base+0xb40>
   2ba60:	mov    DWORD PTR [r13+0x28],r8d
   2ba64:	mov    BYTE PTR [r13+0x2c],al
   2ba68:	jmp    2b6f1 <__sprintf_chk@plt+0x20d41>
   2ba6d:	nop    DWORD PTR [rax]
   2ba70:	mov    rdi,QWORD PTR [r13+0x30]
   2ba74:	call   9ff0 <fclose@plt>
   2ba79:	jmp    2b9cb <__sprintf_chk@plt+0x2101b>
   2ba7e:	xchg   ax,ax
   2ba80:	mov    rdi,r14
   2ba83:	mov    DWORD PTR [rsp],r8d
   2ba87:	call   9d30 <__uflow@plt>
   2ba8c:	mov    r8d,DWORD PTR [rsp]
   2ba90:	mov    r15d,eax
   2ba93:	cmp    eax,0xffffffff
   2ba96:	setne  al
   2ba99:	cmp    r15d,r8d
   2ba9c:	je     2baa6 <__sprintf_chk@plt+0x210f6>
   2ba9e:	test   al,al
   2baa0:	jne    2b723 <__sprintf_chk@plt+0x20d73>
   2baa6:	mov    ecx,0x1
   2baab:	xor    r12d,r12d
   2baae:	jmp    2b948 <__sprintf_chk@plt+0x20f98>
   2bab3:	nop    DWORD PTR [rax+rax*1+0x0]
   2bab8:	lea    rsi,[rsp+0x20]
   2babd:	mov    rdi,rbx
   2bac0:	call   a400 <stat@plt>
   2bac5:	test   eax,eax
   2bac7:	jne    2c3d7 <__sprintf_chk@plt+0x21a27>
   2bacd:	mov    rax,r13
   2bad0:	jmp    2bae4 <__sprintf_chk@plt+0x21134>
   2bad2:	nop    WORD PTR [rax+rax*1+0x0]
   2bad8:	mov    rax,QWORD PTR [rax]
   2badb:	test   rax,rax
   2bade:	je     2bd0e <__sprintf_chk@plt+0x2135e>
   2bae4:	cmp    DWORD PTR [rax+0x10],0x2
   2bae8:	jne    2bad8 <__sprintf_chk@plt+0x21128>
   2baea:	cmp    QWORD PTR [rax+0x30],0x0
   2baef:	je     2bad8 <__sprintf_chk@plt+0x21128>
   2baf1:	mov    r12,QWORD PTR [rax+0x18]
   2baf5:	jmp    2bd24 <__sprintf_chk@plt+0x21374>
   2bafa:	test   rbx,rbx
   2bafd:	je     2c37f <__sprintf_chk@plt+0x219cf>
   2bb03:	movabs rax,0x5555555555555553
   2bb0d:	cmp    r12,rax
   2bb10:	ja     2c38a <__sprintf_chk@plt+0x219da>
   2bb16:	mov    rax,r12
   2bb19:	shr    rax,1
   2bb1c:	lea    rsi,[r12+rax*1+0x1]
   2bb21:	mov    rdi,rbx
   2bb24:	mov    BYTE PTR [rsp],cl
   2bb27:	mov    QWORD PTR [rip+0x53da2],rsi        # 7f8d0 <obstack_alloc_failed_handler@@Base+0xa98>
   2bb2e:	call   a570 <realloc@plt>
   2bb33:	movzx  ecx,BYTE PTR [rsp]
   2bb37:	test   rax,rax
   2bb3a:	mov    rbx,rax
   2bb3d:	je     2c38a <__sprintf_chk@plt+0x219da>
   2bb43:	mov    QWORD PTR [rip+0x53d96],rbx        # 7f8e0 <obstack_alloc_failed_handler@@Base+0xaa8>
   2bb4a:	jmp    2b967 <__sprintf_chk@plt+0x20fb7>
   2bb4f:	mov    r13,QWORD PTR [rip+0x53d9a]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2bb56:	test   r13,r13
   2bb59:	jne    2bed0 <__sprintf_chk@plt+0x21520>
   2bb5f:	cmp    QWORD PTR [rip+0x53e51],0x0        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   2bb67:	je     2b8d7 <__sprintf_chk@plt+0x20f27>
   2bb6d:	mov    rax,QWORD PTR [rip+0x53994]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2bb74:	test   rax,rax
   2bb77:	je     2bb7b <__sprintf_chk@plt+0x211cb>
   2bb79:	call   rax
   2bb7b:	mov    edx,0x5
   2bb80:	lea    rsi,[rip+0x39d41]        # 658c8 <_obstack_memory_used@@Base+0x18c48>
   2bb87:	xor    edi,edi
   2bb89:	call   a040 <dcgettext@plt>
   2bb8e:	xor    esi,esi
   2bb90:	xor    edi,edi
   2bb92:	mov    rdx,rax
   2bb95:	xor    eax,eax
   2bb97:	call   a640 <error@plt>
   2bb9c:	mov    rax,QWORD PTR [rip+0x53e15]        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   2bba3:	mov    DWORD PTR [rip+0x53517],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2bbad:	nop    DWORD PTR [rax]
   2bbb0:	mov    r14,rax
   2bbb3:	mov    rax,QWORD PTR [rax+0x8]
   2bbb7:	test   rax,rax
   2bbba:	jne    2bbb0 <__sprintf_chk@plt+0x21200>
   2bbbc:	lea    rbx,[rip+0x5047d]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   2bbc3:	lea    rbp,[rip+0x39464]        # 6502e <_obstack_memory_used@@Base+0x183ae>
   2bbca:	lea    r12,[rip+0x39471]        # 65042 <_obstack_memory_used@@Base+0x183c2>
   2bbd1:	nop    DWORD PTR [rax+0x0]
   2bbd8:	mov    eax,DWORD PTR [r14+0x10]
   2bbdc:	cmp    eax,0x1
   2bbdf:	je     2bcc0 <__sprintf_chk@plt+0x21310>
   2bbe5:	cmp    eax,0x4
   2bbe8:	jne    2bc82 <__sprintf_chk@plt+0x212d2>
   2bbee:	mov    rsi,QWORD PTR [r14+0x20]
   2bbf2:	mov    rax,QWORD PTR [rip+0x5390f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2bbf9:	test   rsi,rsi
   2bbfc:	je     2c336 <__sprintf_chk@plt+0x21986>
   2bc02:	test   rax,rax
   2bc05:	je     2bc0d <__sprintf_chk@plt+0x2125d>
   2bc07:	call   rax
   2bc09:	mov    rsi,QWORD PTR [r14+0x20]
   2bc0d:	mov    rdx,rbx
   2bc10:	xor    edi,edi
   2bc12:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2bc17:	mov    ecx,DWORD PTR [r14+0x18]
   2bc1b:	mov    r8,rax
   2bc1e:	lea    rax,[rip+0x506db]        # 7c300 <_obstack_memory_used@@Base+0x2f680>
   2bc25:	jmp    2bc38 <__sprintf_chk@plt+0x21288>
   2bc27:	nop    WORD PTR [rax+rax*1+0x0]
   2bc30:	cmp    ecx,edx
   2bc32:	je     2bc50 <__sprintf_chk@plt+0x212a0>
   2bc34:	add    rax,0x30
   2bc38:	mov    r15,QWORD PTR [rax]
   2bc3b:	mov    edx,DWORD PTR [rax+0x8]
   2bc3e:	test   r15,r15
   2bc41:	jne    2bc30 <__sprintf_chk@plt+0x21280>
   2bc43:	test   edx,edx
   2bc45:	jne    2bc30 <__sprintf_chk@plt+0x21280>
   2bc47:	cmp    QWORD PTR [rax+0x20],0x0
   2bc4c:	jne    2bc30 <__sprintf_chk@plt+0x21280>
   2bc4e:	xchg   ax,ax
   2bc50:	mov    edx,0x5
   2bc55:	mov    rsi,r12
   2bc58:	xor    edi,edi
   2bc5a:	mov    QWORD PTR [rsp],r8
   2bc5e:	call   a040 <dcgettext@plt>
   2bc63:	mov    r8,QWORD PTR [rsp]
   2bc67:	mov    rcx,r15
   2bc6a:	xor    esi,esi
   2bc6c:	mov    rdx,rax
   2bc6f:	xor    edi,edi
   2bc71:	xor    eax,eax
   2bc73:	call   a640 <error@plt>
   2bc78:	mov    DWORD PTR [rip+0x53442],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2bc82:	mov    r14,QWORD PTR [r14]
   2bc85:	test   r14,r14
   2bc88:	jne    2bbd8 <__sprintf_chk@plt+0x21228>
   2bc8e:	mov    rbx,QWORD PTR [rip+0x53d23]        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   2bc95:	test   rbx,rbx
   2bc98:	je     2b8d7 <__sprintf_chk@plt+0x20f27>
   2bc9e:	xchg   ax,ax
   2bca0:	mov    rdi,rbx
   2bca3:	mov    rbx,QWORD PTR [rbx+0x8]
   2bca7:	mov    QWORD PTR [rip+0x53d0a],rbx        # 7f9b8 <obstack_alloc_failed_handler@@Base+0xb80>
   2bcae:	call   9ce0 <free@plt>
   2bcb3:	test   rbx,rbx
   2bcb6:	jne    2bca0 <__sprintf_chk@plt+0x212f0>
   2bcb8:	jmp    2b8d7 <__sprintf_chk@plt+0x20f27>
   2bcbd:	nop    DWORD PTR [rax]
   2bcc0:	mov    rax,QWORD PTR [rip+0x53841]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2bcc7:	test   rax,rax
   2bcca:	je     2bcce <__sprintf_chk@plt+0x2131e>
   2bccc:	call   rax
   2bcce:	mov    rsi,QWORD PTR [r14+0x18]
   2bcd2:	mov    rdx,rbx
   2bcd5:	xor    edi,edi
   2bcd7:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2bcdc:	mov    edx,0x5
   2bce1:	mov    rsi,rbp
   2bce4:	mov    r15,rax
   2bce7:	xor    edi,edi
   2bce9:	call   a040 <dcgettext@plt>
   2bcee:	mov    rcx,r15
   2bcf1:	xor    esi,esi
   2bcf3:	xor    edi,edi
   2bcf5:	mov    rdx,rax
   2bcf8:	xor    eax,eax
   2bcfa:	call   a640 <error@plt>
   2bcff:	mov    DWORD PTR [rip+0x533bb],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2bd09:	jmp    2bc82 <__sprintf_chk@plt+0x212d2>
   2bd0e:	mov    edx,0x5
   2bd13:	lea    rsi,[rip+0x392fa]        # 65014 <_obstack_memory_used@@Base+0x18394>
   2bd1a:	xor    edi,edi
   2bd1c:	call   a040 <dcgettext@plt>
   2bd21:	mov    r12,rax
   2bd24:	mov    r14,QWORD PTR [rip+0x53c45]        # 7f970 <obstack_alloc_failed_handler@@Base+0xb38>
   2bd2b:	test   r14,r14
   2bd2e:	je     2be0c <__sprintf_chk@plt+0x2145c>
   2bd34:	mov    rdx,QWORD PTR [rsp+0x28]
   2bd39:	mov    rcx,QWORD PTR [rsp+0x20]
   2bd3e:	mov    r15,r14
   2bd41:	jmp    2bd54 <__sprintf_chk@plt+0x213a4>
   2bd43:	nop    DWORD PTR [rax+rax*1+0x0]
   2bd48:	mov    r15,QWORD PTR [r15]
   2bd4b:	test   r15,r15
   2bd4e:	je     2be0c <__sprintf_chk@plt+0x2145c>
   2bd54:	cmp    QWORD PTR [r15+0x8],rdx
   2bd58:	jne    2bd48 <__sprintf_chk@plt+0x21398>
   2bd5a:	cmp    QWORD PTR [r15+0x10],rcx
   2bd5e:	jne    2bd48 <__sprintf_chk@plt+0x21398>
   2bd60:	mov    ecx,DWORD PTR [rip+0x53226]        # 7ef8c <obstack_alloc_failed_handler@@Base+0x154>
   2bd66:	mov    edx,ecx
   2bd68:	mov    r13d,ecx
   2bd6b:	not    edx
   2bd6d:	shr    r13d,0x1a
   2bd71:	and    edx,0x4000000
   2bd77:	and    r13d,0x1
   2bd7b:	xor    edx,ecx
   2bd7d:	mov    DWORD PTR [rip+0x53209],edx        # 7ef8c <obstack_alloc_failed_handler@@Base+0x154>
   2bd83:	mov    rdx,QWORD PTR [rip+0x5377e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2bd8a:	test   rdx,rdx
   2bd8d:	je     2bd91 <__sprintf_chk@plt+0x213e1>
   2bd8f:	call   rdx
   2bd91:	lea    rdx,[rip+0x531e8]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   2bd98:	mov    rsi,rbx
   2bd9b:	xor    edi,edi
   2bd9d:	mov    r15,QWORD PTR [r15+0x18]
   2bda1:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2bda6:	mov    edx,0x5
   2bdab:	lea    rsi,[rip+0x39a8e]        # 65840 <_obstack_memory_used@@Base+0x18bc0>
   2bdb2:	xor    edi,edi
   2bdb4:	mov    r14,rax
   2bdb7:	call   a040 <dcgettext@plt>
   2bdbc:	mov    r9,r15
   2bdbf:	mov    r8,r12
   2bdc2:	mov    rcx,r14
   2bdc5:	mov    rdx,rax
   2bdc8:	xor    esi,esi
   2bdca:	xor    edi,edi
   2bdcc:	xor    eax,eax
   2bdce:	call   a640 <error@plt>
   2bdd3:	mov    edx,DWORD PTR [rip+0x531b3]        # 7ef8c <obstack_alloc_failed_handler@@Base+0x154>
   2bdd9:	mov    DWORD PTR [rip+0x532e1],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2bde3:	mov    eax,edx
   2bde5:	shr    eax,0x1a
   2bde8:	xor    eax,r13d
   2bdeb:	shl    eax,0x1a
   2bdee:	and    eax,0x4000000
   2bdf3:	xor    eax,edx
   2bdf5:	mov    DWORD PTR [rip+0x53191],eax        # 7ef8c <obstack_alloc_failed_handler@@Base+0x154>
   2bdfb:	call   22e50 <__sprintf_chk@plt+0x184a0>
   2be00:	mov    r13,QWORD PTR [rip+0x53ae9]        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2be07:	jmp    2b59a <__sprintf_chk@plt+0x20bea>
   2be0c:	mov    edi,0x20
   2be11:	call   a4a0 <malloc@plt>
   2be16:	test   rax,rax
   2be19:	je     2c38a <__sprintf_chk@plt+0x219da>
   2be1f:	mov    rdx,QWORD PTR [rsp+0x28]
   2be24:	mov    QWORD PTR [rax],r14
   2be27:	lea    rsi,[rip+0x3ac64]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
   2be2e:	mov    QWORD PTR [rax+0x18],r12
   2be32:	mov    rdi,QWORD PTR [r13+0x18]
   2be36:	mov    QWORD PTR [rax+0x8],rdx
   2be3a:	mov    rdx,QWORD PTR [rsp+0x20]
   2be3f:	mov    QWORD PTR [rip+0x53b2a],rax        # 7f970 <obstack_alloc_failed_handler@@Base+0xb38>
   2be46:	mov    QWORD PTR [rax+0x10],rdx
   2be4a:	call   a6d0 <fopen@plt>
   2be4f:	mov    QWORD PTR [r13+0x30],rax
   2be53:	mov    r14,rax
   2be56:	test   rax,rax
   2be59:	jne    2ba51 <__sprintf_chk@plt+0x210a1>
   2be5f:	mov    rdi,QWORD PTR [r13+0x18]
   2be63:	call   3c420 <__sprintf_chk@plt+0x31a70>
   2be68:	nop    DWORD PTR [rax+rax*1+0x0]
   2be70:	mov    QWORD PTR [rsp],rdi
   2be74:	call   618c0 <_obstack_memory_used@@Base+0x14c40>
   2be79:	mov    rdi,QWORD PTR [rsp]
   2be7d:	jmp    2b83b <__sprintf_chk@plt+0x20e8b>
   2be82:	mov    r14,QWORD PTR [r13+0x30]
   2be86:	mov    r8d,DWORD PTR [r13+0x28]
   2be8a:	mov    rax,QWORD PTR [r13+0x20]
   2be8e:	mov    rdx,QWORD PTR [r14+0x8]
   2be92:	mov    rdi,QWORD PTR [r14+0x10]
   2be96:	jmp    2b6fd <__sprintf_chk@plt+0x20d4d>
   2be9b:	mov    rax,QWORD PTR [rip+0x53666]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2bea2:	test   rax,rax
   2bea5:	je     2bea9 <__sprintf_chk@plt+0x214f9>
   2bea7:	call   rax
   2bea9:	mov    ecx,r13d
   2beac:	lea    rdx,[rip+0x399f5]        # 658a8 <_obstack_memory_used@@Base+0x18c28>
   2beb3:	xor    esi,esi
   2beb5:	xor    edi,edi
   2beb7:	xor    eax,eax
   2beb9:	call   a640 <error@plt>
   2bebe:	call   190e0 <__sprintf_chk@plt+0xe730>
   2bec3:	nop    DWORD PTR [rax+rax*1+0x0]
   2bec8:	mov    rdx,rsi
   2becb:	jmp    2b6fd <__sprintf_chk@plt+0x20d4d>
   2bed0:	mov    rax,QWORD PTR [r13+0x8]
   2bed4:	test   rax,rax
   2bed7:	je     2b59a <__sprintf_chk@plt+0x20bea>
   2bedd:	nop    DWORD PTR [rax]
   2bee0:	mov    r13,rax
   2bee3:	mov    rax,QWORD PTR [rax+0x8]
   2bee7:	test   rax,rax
   2beea:	jne    2bee0 <__sprintf_chk@plt+0x21530>
   2beec:	mov    QWORD PTR [rip+0x539fd],r13        # 7f8f0 <obstack_alloc_failed_handler@@Base+0xab8>
   2bef3:	jmp    2b59a <__sprintf_chk@plt+0x20bea>
   2bef8:	mov    edi,0x28
   2befd:	call   a4a0 <malloc@plt>
   2bf02:	test   rax,rax
   2bf05:	je     2c38a <__sprintf_chk@plt+0x219da>
   2bf0b:	mov    rdx,QWORD PTR [rip+0x5300e]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2bf12:	lea    rcx,[rip+0x39108]        # 65021 <_obstack_memory_used@@Base+0x183a1>
   2bf19:	mov    QWORD PTR [rax+0x8],0xc
   2bf21:	mov    QWORD PTR [rax],rcx
   2bf24:	lea    rcx,[rip+0xfffffffffffe1b25]        # da50 <__sprintf_chk@plt+0x30a0>
   2bf2b:	mov    QWORD PTR [rax+0x18],rcx
   2bf2f:	mov    QWORD PTR [rax+0x20],rdx
   2bf33:	mov    DWORD PTR [rax+0x10],0x1
   2bf3a:	mov    QWORD PTR [rip+0x52fdf],rax        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2bf41:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2bf46:	mov    edi,0x28
   2bf4b:	call   a4a0 <malloc@plt>
   2bf50:	test   rax,rax
   2bf53:	je     2c38a <__sprintf_chk@plt+0x219da>
   2bf59:	mov    rdx,QWORD PTR [rip+0x52fc0]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2bf60:	lea    rcx,[rip+0x390ba]        # 65021 <_obstack_memory_used@@Base+0x183a1>
   2bf67:	mov    QWORD PTR [rax+0x8],0xc
   2bf6f:	mov    QWORD PTR [rax],rcx
   2bf72:	lea    rcx,[rip+0xfffffffffffe1ad7]        # da50 <__sprintf_chk@plt+0x30a0>
   2bf79:	mov    QWORD PTR [rax+0x18],rcx
   2bf7d:	mov    QWORD PTR [rax+0x20],rdx
   2bf81:	mov    DWORD PTR [rax+0x10],0x2
   2bf88:	mov    QWORD PTR [rip+0x52f91],rax        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2bf8f:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2bf94:	mov    BYTE PTR [rip+0x539dd],0x1        # 7f978 <obstack_alloc_failed_handler@@Base+0xb40>
   2bf9b:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2bfa0:	and    DWORD PTR [rip+0x53931],0xfffffffe        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2bfa7:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2bfac:	xor    eax,eax
   2bfae:	mov    r13d,DWORD PTR [rip+0x53923]        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2bfb5:	or     r13d,DWORD PTR [rip+0x537b8]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2bfbc:	cmp    DWORD PTR [rip+0x53919],0x1        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   2bfc3:	mov    r11,QWORD PTR [rip+0x5381e]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   2bfca:	setne  al
   2bfcd:	shl    eax,0x1c
   2bfd0:	or     r13d,eax
   2bfd3:	lea    rax,[rip+0x25a06]        # 519e0 <_obstack_memory_used@@Base+0x4d60>
   2bfda:	mov    QWORD PTR [rsp+0x18],rax
   2bfdf:	cmp    BYTE PTR [rbx],0x2d
   2bfe2:	je     2c399 <__sprintf_chk@plt+0x219e9>
   2bfe8:	lea    rsi,[rip+0x3af11]        # 66f00 <_obstack_memory_used@@Base+0x1a280>
   2bfef:	mov    rdi,rbx
   2bff2:	mov    QWORD PTR [rsp],r11
   2bff6:	call   a6d0 <fopen@plt>
   2bffb:	mov    r11,QWORD PTR [rsp]
   2bfff:	test   rax,rax
   2c002:	mov    r10,rax
   2c005:	je     2c044 <__sprintf_chk@plt+0x21694>
   2c007:	mov    ecx,r13d
   2c00a:	lea    rdi,[rip+0x194ef]        # 45500 <argp_usage@@Base+0x2180>
   2c011:	mov    rdx,r10
   2c014:	mov    rsi,r11
   2c017:	lea    r9,[rsp+0x18]
   2c01c:	mov    r8d,0xa
   2c022:	mov    QWORD PTR [rsp],r10
   2c026:	call   48720 <argp_usage@@Base+0x53a0>
   2c02b:	mov    rdi,QWORD PTR [rsp]
   2c02f:	mov    r13d,eax
   2c032:	call   9ff0 <fclose@plt>
   2c037:	test   eax,eax
   2c039:	jne    2c044 <__sprintf_chk@plt+0x21694>
   2c03b:	test   r13d,r13d
   2c03e:	je     2b60e <__sprintf_chk@plt+0x20c5e>
   2c044:	call   9e40 <__errno_location@plt>
   2c049:	mov    ebp,DWORD PTR [rax]
   2c04b:	mov    rax,QWORD PTR [rip+0x534b6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2c052:	test   rax,rax
   2c055:	je     2c059 <__sprintf_chk@plt+0x216a9>
   2c057:	call   rax
   2c059:	mov    rdi,rbx
   2c05c:	call   4b670 <argp_usage@@Base+0x82f0>
   2c061:	lea    rdx,[rip+0x3fcef]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   2c068:	mov    esi,ebp
   2c06a:	xor    edi,edi
   2c06c:	mov    rcx,rax
   2c06f:	xor    eax,eax
   2c071:	call   a640 <error@plt>
   2c076:	call   190e0 <__sprintf_chk@plt+0xe730>
   2c07b:	nop    DWORD PTR [rax+rax*1+0x0]
   2c080:	lea    rbx,[rip+0x4e6e1]        # 7a768 <_obstack_memory_used@@Base+0x2dae8>
   2c087:	lea    rsi,[rip+0x38f7b]        # 65009 <_obstack_memory_used@@Base+0x18389>
   2c08e:	xchg   ax,ax
   2c090:	mov    rdi,QWORD PTR [rip+0x53751]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   2c097:	mov    edx,0x10000000
   2c09c:	add    rbx,0x8
   2c0a0:	call   519e0 <_obstack_memory_used@@Base+0x4d60>
   2c0a5:	mov    rsi,QWORD PTR [rbx-0x8]
   2c0a9:	test   rsi,rsi
   2c0ac:	jne    2c090 <__sprintf_chk@plt+0x216e0>
   2c0ae:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c0b3:	mov    BYTE PTR [rip+0x5382e],0x1        # 7f8e8 <obstack_alloc_failed_handler@@Base+0xab0>
   2c0ba:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c0bf:	mov    DWORD PTR [rip+0x53813],0x2        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   2c0c9:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c0ce:	mov    BYTE PTR [rip+0x53813],0x0        # 7f8e8 <obstack_alloc_failed_handler@@Base+0xab0>
   2c0d5:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c0da:	mov    BYTE PTR [rip+0x53897],0x0        # 7f978 <obstack_alloc_failed_handler@@Base+0xb40>
   2c0e1:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c0e6:	or     DWORD PTR [rip+0x537eb],0x1        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c0ed:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c0f2:	mov    DWORD PTR [rip+0x537e0],0x1        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   2c0fc:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c101:	mov    BYTE PTR [rip+0x501a4],0x0        # 7c2ac <_obstack_memory_used@@Base+0x2f62c>
   2c108:	mov    BYTE PTR [rip+0x53869],0x1        # 7f978 <obstack_alloc_failed_handler@@Base+0xb40>
   2c10f:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c114:	mov    BYTE PTR [rip+0x50191],0xa        # 7c2ac <_obstack_memory_used@@Base+0x2f62c>
   2c11b:	mov    BYTE PTR [rip+0x53856],0x0        # 7f978 <obstack_alloc_failed_handler@@Base+0xb40>
   2c122:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c127:	mov    edi,0x28
   2c12c:	call   a4a0 <malloc@plt>
   2c131:	test   rax,rax
   2c134:	je     2c38a <__sprintf_chk@plt+0x219da>
   2c13a:	mov    rdx,QWORD PTR [rip+0x52ddf]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2c141:	lea    rcx,[rip+0x38ed9]        # 65021 <_obstack_memory_used@@Base+0x183a1>
   2c148:	mov    QWORD PTR [rax+0x8],0xc
   2c150:	mov    QWORD PTR [rax],rcx
   2c153:	lea    rcx,[rip+0xfffffffffffe18f6]        # da50 <__sprintf_chk@plt+0x30a0>
   2c15a:	mov    QWORD PTR [rax+0x18],rcx
   2c15e:	mov    QWORD PTR [rax+0x20],rdx
   2c162:	mov    DWORD PTR [rax+0x10],0x3
   2c169:	mov    QWORD PTR [rip+0x52db0],rax        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2c170:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c175:	xor    eax,eax
   2c177:	mov    edx,DWORD PTR [rip+0x5375b]        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c17d:	or     edx,DWORD PTR [rip+0x535f1]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2c183:	mov    rsi,rbx
   2c186:	cmp    DWORD PTR [rip+0x5374f],0x1        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   2c18d:	mov    rdi,QWORD PTR [rip+0x53654]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   2c194:	setne  al
   2c197:	shl    eax,0x1c
   2c19a:	or     edx,eax
   2c19c:	call   519e0 <_obstack_memory_used@@Base+0x4d60>
   2c1a1:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c1a6:	mov    esi,0x2
   2c1ab:	mov    rdi,rbx
   2c1ae:	call   1bea0 <__sprintf_chk@plt+0x114f0>
   2c1b3:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c1b8:	mov    esi,0x1
   2c1bd:	mov    rdi,rbx
   2c1c0:	call   1bea0 <__sprintf_chk@plt+0x114f0>
   2c1c5:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c1ca:	mov    edi,0x28
   2c1cf:	call   a4a0 <malloc@plt>
   2c1d4:	mov    r13,rax
   2c1d7:	test   rax,rax
   2c1da:	je     2c38a <__sprintf_chk@plt+0x219da>
   2c1e0:	mov    rax,QWORD PTR [rip+0x52d39]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2c1e7:	mov    QWORD PTR [r13+0x0],rbx
   2c1eb:	mov    DWORD PTR [r13+0x10],0x1
   2c1f3:	mov    QWORD PTR [r13+0x20],rax
   2c1f7:	mov    QWORD PTR [r13+0x18],0x0
   2c1ff:	mov    rdi,rbx
   2c202:	call   a060 <strlen@plt>
   2c207:	mov    QWORD PTR [r13+0x8],rax
   2c20b:	mov    QWORD PTR [rip+0x52d0e],r13        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2c212:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c217:	mov    edi,0x28
   2c21c:	call   a4a0 <malloc@plt>
   2c221:	mov    r13,rax
   2c224:	test   rax,rax
   2c227:	je     2c38a <__sprintf_chk@plt+0x219da>
   2c22d:	mov    rax,QWORD PTR [rip+0x52cec]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2c234:	mov    QWORD PTR [r13+0x0],rbx
   2c238:	mov    DWORD PTR [r13+0x10],0x2
   2c240:	mov    QWORD PTR [r13+0x20],rax
   2c244:	jmp    2c1f7 <__sprintf_chk@plt+0x21847>
   2c246:	mov    edi,0x28
   2c24b:	call   a4a0 <malloc@plt>
   2c250:	mov    r13,rax
   2c253:	test   rax,rax
   2c256:	je     2c38a <__sprintf_chk@plt+0x219da>
   2c25c:	mov    rax,QWORD PTR [rip+0x52cbd]        # 7ef20 <obstack_alloc_failed_handler@@Base+0xe8>
   2c263:	mov    QWORD PTR [r13+0x0],rbx
   2c267:	mov    DWORD PTR [r13+0x10],0x3
   2c26f:	mov    QWORD PTR [r13+0x20],rax
   2c273:	jmp    2c1f7 <__sprintf_chk@plt+0x21847>
   2c275:	lea    rbx,[rip+0x4e42c]        # 7a6a8 <_obstack_memory_used@@Base+0x2da28>
   2c27c:	lea    rsi,[rip+0x38d8a]        # 6500d <_obstack_memory_used@@Base+0x1838d>
   2c283:	nop    DWORD PTR [rax+rax*1+0x0]
   2c288:	mov    rdi,QWORD PTR [rip+0x53559]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   2c28f:	xor    edx,edx
   2c291:	add    rbx,0x8
   2c295:	call   519e0 <_obstack_memory_used@@Base+0x4d60>
   2c29a:	mov    rsi,QWORD PTR [rbx-0x8]
   2c29e:	test   rsi,rsi
   2c2a1:	jne    2c288 <__sprintf_chk@plt+0x218d8>
   2c2a3:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c2a8:	mov    rdi,QWORD PTR [rip+0x4ff31]        # 7c1e0 <_obstack_memory_used@@Base+0x2f560>
   2c2af:	lea    rbx,[rip+0x4ff2a]        # 7c1e0 <_obstack_memory_used@@Base+0x2f560>
   2c2b6:	test   rdi,rdi
   2c2b9:	je     2b60e <__sprintf_chk@plt+0x20c5e>
   2c2bf:	nop
   2c2c0:	xor    esi,esi
   2c2c2:	add    rbx,0x28
   2c2c6:	call   1bea0 <__sprintf_chk@plt+0x114f0>
   2c2cb:	mov    rdi,QWORD PTR [rbx]
   2c2ce:	test   rdi,rdi
   2c2d1:	jne    2c2c0 <__sprintf_chk@plt+0x21910>
   2c2d3:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c2d8:	or     DWORD PTR [rip+0x535f9],0x10        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c2df:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c2e4:	and    DWORD PTR [rip+0x535ed],0xffffffef        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c2eb:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c2f0:	or     DWORD PTR [rip+0x535de],0x40000000        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c2fa:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c2ff:	and    DWORD PTR [rip+0x535cf],0xbfffffff        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c309:	mov    DWORD PTR [rip+0x4ff95],0x0        # 7c2a8 <_obstack_memory_used@@Base+0x2f628>
   2c313:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c318:	mov    DWORD PTR [rip+0x53452],0x8        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2c322:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c327:	mov    DWORD PTR [rip+0x53443],0x0        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2c331:	jmp    2b60e <__sprintf_chk@plt+0x20c5e>
   2c336:	test   rax,rax
   2c339:	je     2c33d <__sprintf_chk@plt+0x2198d>
   2c33b:	call   rax
   2c33d:	mov    ecx,DWORD PTR [r14+0x18]
   2c341:	lea    rax,[rip+0x4ffb8]        # 7c300 <_obstack_memory_used@@Base+0x2f680>
   2c348:	jmp    2c358 <__sprintf_chk@plt+0x219a8>
   2c34a:	nop    WORD PTR [rax+rax*1+0x0]
   2c350:	cmp    edx,ecx
   2c352:	je     2c36e <__sprintf_chk@plt+0x219be>
   2c354:	add    rax,0x30
   2c358:	mov    r15,QWORD PTR [rax]
   2c35b:	mov    edx,DWORD PTR [rax+0x8]
   2c35e:	test   r15,r15
   2c361:	jne    2c350 <__sprintf_chk@plt+0x219a0>
   2c363:	test   edx,edx
   2c365:	jne    2c350 <__sprintf_chk@plt+0x219a0>
   2c367:	cmp    QWORD PTR [rax+0x20],0x0
   2c36c:	jne    2c350 <__sprintf_chk@plt+0x219a0>
   2c36e:	mov    edx,0x5
   2c373:	lea    rsi,[rip+0x38cde]        # 65058 <_obstack_memory_used@@Base+0x183d8>
   2c37a:	jmp    2bce7 <__sprintf_chk@plt+0x21337>
   2c37f:	test   r12,r12
   2c382:	je     2c38f <__sprintf_chk@plt+0x219df>
   2c384:	jns    2bb21 <__sprintf_chk@plt+0x21171>
   2c38a:	call   19130 <__sprintf_chk@plt+0xe780>
   2c38f:	mov    esi,0x80
   2c394:	jmp    2bb21 <__sprintf_chk@plt+0x21171>
   2c399:	cmp    BYTE PTR [rbx+0x1],0x0
   2c39d:	jne    2bfe8 <__sprintf_chk@plt+0x21638>
   2c3a3:	mov    rax,QWORD PTR [rip+0x4fbfe]        # 7bfa8 <_obstack_memory_used@@Base+0x2f328>
   2c3aa:	mov    ecx,r13d
   2c3ad:	lea    r9,[rsp+0x18]
   2c3b2:	mov    r8d,0xa
   2c3b8:	mov    rsi,r11
   2c3bb:	lea    rdi,[rip+0x1913e]        # 45500 <argp_usage@@Base+0x2180>
   2c3c2:	mov    rdx,QWORD PTR [rax]
   2c3c5:	call   48720 <argp_usage@@Base+0x53a0>
   2c3ca:	mov    r13d,eax
   2c3cd:	jmp    2c03b <__sprintf_chk@plt+0x2168b>
   2c3d2:	call   a0a0 <__stack_chk_fail@plt>
   2c3d7:	mov    rsi,rbx
   2c3da:	lea    rdi,[rip+0x36c62]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   2c3e1:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   2c3e6:	lea    rdi,[rip+0x38c24]        # 65011 <_obstack_memory_used@@Base+0x18391>
   2c3ed:	call   3b1d0 <__sprintf_chk@plt+0x30820>
   2c3f2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c3fd:	nop    DWORD PTR [rax]
   2c400:	endbr64 
   2c404:	push   r12
   2c406:	push   rbp
   2c407:	push   rbx
   2c408:	xor    ebx,ebx
   2c40a:	sub    rsp,0x10
   2c40e:	cmp    BYTE PTR [rip+0x534ac],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
   2c415:	jne    2c4db <__sprintf_chk@plt+0x21b2b>
   2c41b:	nop    DWORD PTR [rax+rax*1+0x0]
   2c420:	mov    r12d,ebx
   2c423:	jmp    2c46c <__sprintf_chk@plt+0x21abc>
   2c425:	nop    DWORD PTR [rax]
   2c428:	cmp    DWORD PTR [rax+0x10],0x1
   2c42c:	mov    rbp,QWORD PTR [rax+0x18]
   2c430:	jne    2c500 <__sprintf_chk@plt+0x21b50>
   2c436:	mov    rdi,rbp
   2c439:	call   a060 <strlen@plt>
   2c43e:	lea    r12,[rax+0x1]
   2c442:	mov    rdi,r12
   2c445:	call   a4a0 <malloc@plt>
   2c44a:	mov    rdi,rax
   2c44d:	test   rax,rax
   2c450:	je     2c638 <__sprintf_chk@plt+0x21c88>
   2c456:	mov    rdx,r12
   2c459:	mov    rsi,rbp
   2c45c:	call   a420 <memcpy@plt>
   2c461:	mov    rdi,rax
   2c464:	call   23250 <__sprintf_chk@plt+0x188a0>
   2c469:	mov    r12d,eax
   2c46c:	xor    edi,edi
   2c46e:	call   2b560 <__sprintf_chk@plt+0x20bb0>
   2c473:	test   rax,rax
   2c476:	jne    2c428 <__sprintf_chk@plt+0x21a78>
   2c478:	cmp    ebx,r12d
   2c47b:	je     2c4f5 <__sprintf_chk@plt+0x21b45>
   2c47d:	xor    ecx,ecx
   2c47f:	xor    edx,edx
   2c481:	mov    esi,r12d
   2c484:	add    rsp,0x10
   2c488:	xor    edi,edi
   2c48a:	pop    rbx
   2c48b:	pop    rbp
   2c48c:	pop    r12
   2c48e:	jmp    29300 <__sprintf_chk@plt+0x1e950>
   2c493:	nop    DWORD PTR [rax+rax*1+0x0]
   2c498:	cmp    DWORD PTR [rax+0x10],0x1
   2c49c:	jne    2c51a <__sprintf_chk@plt+0x21b6a>
   2c49e:	mov    rbp,QWORD PTR [rax+0x18]
   2c4a2:	mov    rdi,rbp
   2c4a5:	call   a060 <strlen@plt>
   2c4aa:	lea    r12,[rax+0x1]
   2c4ae:	mov    rdi,r12
   2c4b1:	call   a4a0 <malloc@plt>
   2c4b6:	mov    rdi,rax
   2c4b9:	test   rax,rax
   2c4bc:	je     2c638 <__sprintf_chk@plt+0x21c88>
   2c4c2:	mov    rdx,r12
   2c4c5:	mov    rsi,rbp
   2c4c8:	call   a420 <memcpy@plt>
   2c4cd:	mov    rdi,rax
   2c4d0:	call   23250 <__sprintf_chk@plt+0x188a0>
   2c4d5:	mov    DWORD PTR [rip+0x5348d],eax        # 7f968 <obstack_alloc_failed_handler@@Base+0xb30>
   2c4db:	xor    edi,edi
   2c4dd:	call   2b560 <__sprintf_chk@plt+0x20bb0>
   2c4e2:	test   rax,rax
   2c4e5:	jne    2c498 <__sprintf_chk@plt+0x21ae8>
   2c4e7:	mov    esi,DWORD PTR [rip+0x5347b]        # 7f968 <obstack_alloc_failed_handler@@Base+0xb30>
   2c4ed:	test   esi,esi
   2c4ef:	jne    2c62f <__sprintf_chk@plt+0x21c7f>
   2c4f5:	add    rsp,0x10
   2c4f9:	pop    rbx
   2c4fa:	pop    rbp
   2c4fb:	pop    r12
   2c4fd:	ret    
   2c4fe:	xchg   ax,ax
   2c500:	xor    ecx,ecx
   2c502:	mov    edx,0x1
   2c507:	mov    esi,r12d
   2c50a:	mov    rdi,rbp
   2c50d:	call   29300 <__sprintf_chk@plt+0x1e950>
   2c512:	mov    ebx,r12d
   2c515:	jmp    2c420 <__sprintf_chk@plt+0x21a70>
   2c51a:	mov    rbp,QWORD PTR [rip+0x5343f]        # 7f960 <obstack_alloc_failed_handler@@Base+0xb28>
   2c521:	test   rbp,rbp
   2c524:	je     2c54a <__sprintf_chk@plt+0x21b9a>
   2c526:	mov    rdi,QWORD PTR [rbp+0x10]
   2c52a:	mov    QWORD PTR [rsp+0x8],rax
   2c52f:	call   9ce0 <free@plt>
   2c534:	mov    rdi,QWORD PTR [rbp+0x58]
   2c538:	call   9ce0 <free@plt>
   2c53d:	mov    rdi,rbp
   2c540:	call   9ce0 <free@plt>
   2c545:	mov    rax,QWORD PTR [rsp+0x8]
   2c54a:	mov    esi,0x1
   2c54f:	mov    edi,0x60
   2c554:	mov    rbp,QWORD PTR [rax+0x18]
   2c558:	call   a2f0 <calloc@plt>
   2c55d:	mov    rbx,rax
   2c560:	test   rax,rax
   2c563:	je     2c638 <__sprintf_chk@plt+0x21c88>
   2c569:	test   rbp,rbp
   2c56c:	je     2c61d <__sprintf_chk@plt+0x21c6d>
   2c572:	mov    rdi,rbp
   2c575:	call   a060 <strlen@plt>
   2c57a:	lea    r12,[rax+0x1]
   2c57e:	mov    rdi,r12
   2c581:	call   a4a0 <malloc@plt>
   2c586:	mov    rdi,rax
   2c589:	test   rax,rax
   2c58c:	je     2c638 <__sprintf_chk@plt+0x21c88>
   2c592:	mov    rdx,r12
   2c595:	mov    rsi,rbp
   2c598:	call   a420 <memcpy@plt>
   2c59d:	mov    QWORD PTR [rbx+0x10],rax
   2c5a1:	mov    rdi,rax
   2c5a4:	call   a060 <strlen@plt>
   2c5a9:	xor    edx,edx
   2c5ab:	mov    QWORD PTR [rbx],0x0
   2c5b2:	mov    QWORD PTR [rbx+0x18],rax
   2c5b6:	mov    eax,DWORD PTR [rip+0x533ac]        # 7f968 <obstack_alloc_failed_handler@@Base+0xb30>
   2c5bc:	mov    QWORD PTR [rbx+0x30],0x0
   2c5c4:	mov    DWORD PTR [rbx+0x28],eax
   2c5c7:	mov    eax,DWORD PTR [rip+0x4fcdb]        # 7c2a8 <_obstack_memory_used@@Base+0x2f628>
   2c5cd:	or     eax,DWORD PTR [rip+0x53305]        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   2c5d3:	or     eax,DWORD PTR [rip+0x5319b]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2c5d9:	mov    QWORD PTR [rbx+0x38],0x0
   2c5e1:	cmp    DWORD PTR [rip+0x532f4],0x2        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   2c5e8:	mov    QWORD PTR [rbx+0x40],0x0
   2c5f0:	sete   dl
   2c5f3:	mov    BYTE PTR [rbx+0x24],0x1
   2c5f7:	shl    edx,0x1c
   2c5fa:	mov    QWORD PTR [rip+0x5335f],rbx        # 7f960 <obstack_alloc_failed_handler@@Base+0xb28>
   2c601:	or     eax,edx
   2c603:	mov    QWORD PTR [rip+0x531c6],rbx        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   2c60a:	mov    DWORD PTR [rbx+0x20],eax
   2c60d:	mov    QWORD PTR [rip+0x531c4],rbx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c614:	add    rsp,0x10
   2c618:	pop    rbx
   2c619:	pop    rbp
   2c61a:	pop    r12
   2c61c:	ret    
   2c61d:	mov    r12d,0x1
   2c623:	lea    rbp,[rip+0x3f526]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   2c62a:	jmp    2c57e <__sprintf_chk@plt+0x21bce>
   2c62f:	xor    ecx,ecx
   2c631:	xor    edx,edx
   2c633:	jmp    2c484 <__sprintf_chk@plt+0x21ad4>
   2c638:	call   19130 <__sprintf_chk@plt+0xe780>
   2c63d:	nop    DWORD PTR [rax]
   2c640:	endbr64 
   2c644:	push   rbp
   2c645:	mov    rbp,rdi
   2c648:	push   rbx
   2c649:	sub    rsp,0x8
   2c64d:	mov    rbx,QWORD PTR [rip+0x53184]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c654:	nop    DWORD PTR [rax+0x0]
   2c658:	test   rbx,rbx
   2c65b:	je     2c748 <__sprintf_chk@plt+0x21d98>
   2c661:	mov    rdi,QWORD PTR [rbx+0x10]
   2c665:	cmp    BYTE PTR [rdi],0x0
   2c668:	je     2c754 <__sprintf_chk@plt+0x21da4>
   2c66e:	mov    edx,DWORD PTR [rbx+0x20]
   2c671:	mov    rsi,rbp
   2c674:	call   48660 <argp_usage@@Base+0x52e0>
   2c679:	test   al,al
   2c67b:	jne    2c6f0 <__sprintf_chk@plt+0x21d40>
   2c67d:	mov    rbx,QWORD PTR [rbx]
   2c680:	test   rbx,rbx
   2c683:	je     2c696 <__sprintf_chk@plt+0x21ce6>
   2c685:	mov    rdi,QWORD PTR [rbx+0x10]
   2c689:	cmp    BYTE PTR [rdi],0x0
   2c68c:	jne    2c66e <__sprintf_chk@plt+0x21cbe>
   2c68e:	mov    rbx,QWORD PTR [rbx]
   2c691:	test   rbx,rbx
   2c694:	jne    2c685 <__sprintf_chk@plt+0x21cd5>
   2c696:	cmp    BYTE PTR [rip+0x53223],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
   2c69d:	jne    2c6d8 <__sprintf_chk@plt+0x21d28>
   2c69f:	cmp    BYTE PTR [rip+0x5321b],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
   2c6a6:	je     2c6c9 <__sprintf_chk@plt+0x21d19>
   2c6a8:	mov    rax,QWORD PTR [rip+0x53129]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c6af:	cmp    QWORD PTR [rax+0x30],0x0
   2c6b4:	je     2c6c9 <__sprintf_chk@plt+0x21d19>
   2c6b6:	call   2c400 <__sprintf_chk@plt+0x21a50>
   2c6bb:	mov    rbx,QWORD PTR [rip+0x53116]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c6c2:	cmp    QWORD PTR [rbx+0x30],0x0
   2c6c7:	je     2c658 <__sprintf_chk@plt+0x21ca8>
   2c6c9:	xor    eax,eax
   2c6cb:	add    rsp,0x8
   2c6cf:	pop    rbx
   2c6d0:	pop    rbp
   2c6d1:	ret    
   2c6d2:	nop    WORD PTR [rax+rax*1+0x0]
   2c6d8:	cmp    QWORD PTR [rip+0x530f8],0x0        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c6e0:	jne    2c69f <__sprintf_chk@plt+0x21cef>
   2c6e2:	mov    BYTE PTR [rip+0x531d7],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
   2c6e9:	jmp    2c69f <__sprintf_chk@plt+0x21cef>
   2c6eb:	nop    DWORD PTR [rax+rax*1+0x0]
   2c6f0:	cmp    BYTE PTR [rip+0x531c9],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
   2c6f7:	je     2c709 <__sprintf_chk@plt+0x21d59>
   2c6f9:	cmp    QWORD PTR [rip+0x530d8],rbx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c700:	jne    2c69f <__sprintf_chk@plt+0x21cef>
   2c702:	mov    BYTE PTR [rip+0x531b7],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
   2c709:	mov    rdx,QWORD PTR [rbx+0x18]
   2c70d:	mov    rax,QWORD PTR [rbx+0x30]
   2c711:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x2f
   2c716:	je     2c791 <__sprintf_chk@plt+0x21de1>
   2c718:	add    rax,0x1
   2c71c:	mov    QWORD PTR [rbx+0x30],rax
   2c720:	mov    edi,DWORD PTR [rbx+0x28]
   2c723:	cmp    edi,DWORD PTR [rip+0x5309f]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   2c729:	je     2c730 <__sprintf_chk@plt+0x21d80>
   2c72b:	call   26d40 <__sprintf_chk@plt+0x1c390>
   2c730:	mov    rdx,QWORD PTR [rip+0x531f1]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   2c737:	mov    rax,QWORD PTR [rbx+0x30]
   2c73b:	test   rdx,rdx
   2c73e:	jne    2c786 <__sprintf_chk@plt+0x21dd6>
   2c740:	test   rax,rax
   2c743:	setne  al
   2c746:	jmp    2c6cb <__sprintf_chk@plt+0x21d1b>
   2c748:	add    rsp,0x8
   2c74c:	mov    eax,0x1
   2c751:	pop    rbx
   2c752:	pop    rbp
   2c753:	ret    
   2c754:	mov    edi,DWORD PTR [rbx+0x28]
   2c757:	cmp    edi,DWORD PTR [rip+0x5306b]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   2c75d:	je     2c764 <__sprintf_chk@plt+0x21db4>
   2c75f:	call   26d40 <__sprintf_chk@plt+0x1c390>
   2c764:	mov    QWORD PTR [rip+0x53069],0x0        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c76f:	mov    eax,0x1
   2c774:	mov    QWORD PTR [rip+0x53051],0x0        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   2c77f:	add    rsp,0x8
   2c783:	pop    rbx
   2c784:	pop    rbp
   2c785:	ret    
   2c786:	cmp    rdx,rax
   2c789:	sete   al
   2c78c:	jmp    2c6cb <__sprintf_chk@plt+0x21d1b>
   2c791:	mov    edx,DWORD PTR [rip+0x52fdd]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   2c797:	test   edx,edx
   2c799:	je     2c718 <__sprintf_chk@plt+0x21d68>
   2c79f:	test   rax,rax
   2c7a2:	jne    2c720 <__sprintf_chk@plt+0x21d70>
   2c7a8:	jmp    2c718 <__sprintf_chk@plt+0x21d68>
   2c7ad:	nop    DWORD PTR [rax]
   2c7b0:	endbr64 
   2c7b4:	push   r13
   2c7b6:	push   r12
   2c7b8:	lea    r12,[rip+0x391d9]        # 65998 <_obstack_memory_used@@Base+0x18d18>
   2c7bf:	push   rbp
   2c7c0:	lea    rbp,[rip+0x388a4]        # 6506b <_obstack_memory_used@@Base+0x183eb>
   2c7c7:	push   rbx
   2c7c8:	sub    rsp,0x8
   2c7cc:	mov    rbx,QWORD PTR [rip+0x53005]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c7d3:	test   rbx,rbx
   2c7d6:	jne    2c7f6 <__sprintf_chk@plt+0x21e46>
   2c7d8:	jmp    2c870 <__sprintf_chk@plt+0x21ec0>
   2c7dd:	nop    DWORD PTR [rax]
   2c7e0:	test   rdx,rdx
   2c7e3:	jne    2c7ee <__sprintf_chk@plt+0x21e3e>
   2c7e5:	mov    rdi,QWORD PTR [rbx+0x10]
   2c7e9:	cmp    BYTE PTR [rdi],0x0
   2c7ec:	jne    2c814 <__sprintf_chk@plt+0x21e64>
   2c7ee:	mov    rbx,QWORD PTR [rbx]
   2c7f1:	test   rbx,rbx
   2c7f4:	je     2c870 <__sprintf_chk@plt+0x21ec0>
   2c7f6:	mov    rax,QWORD PTR [rip+0x5312b]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   2c7fd:	mov    rdx,QWORD PTR [rbx+0x30]
   2c801:	test   rax,rax
   2c804:	je     2c7e0 <__sprintf_chk@plt+0x21e30>
   2c806:	cmp    rax,rdx
   2c809:	jbe    2c7ee <__sprintf_chk@plt+0x21e3e>
   2c80b:	mov    rdi,QWORD PTR [rbx+0x10]
   2c80f:	cmp    BYTE PTR [rdi],0x0
   2c812:	je     2c7ee <__sprintf_chk@plt+0x21e3e>
   2c814:	call   29470 <__sprintf_chk@plt+0x1eac0>
   2c819:	mov    rax,QWORD PTR [rip+0x52ce8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2c820:	test   rax,rax
   2c823:	je     2c827 <__sprintf_chk@plt+0x21e77>
   2c825:	call   rax
   2c827:	mov    rdi,QWORD PTR [rbx+0x10]
   2c82b:	call   4b670 <argp_usage@@Base+0x82f0>
   2c830:	cmp    QWORD PTR [rbx+0x30],0x0
   2c835:	mov    edx,0x5
   2c83a:	mov    r13,rax
   2c83d:	jne    2c910 <__sprintf_chk@plt+0x21f60>
   2c843:	mov    rsi,rbp
   2c846:	xor    edi,edi
   2c848:	call   a040 <dcgettext@plt>
   2c84d:	mov    rdx,rax
   2c850:	mov    rcx,r13
   2c853:	xor    esi,esi
   2c855:	xor    edi,edi
   2c857:	xor    eax,eax
   2c859:	call   a640 <error@plt>
   2c85e:	mov    rbx,QWORD PTR [rbx]
   2c861:	mov    DWORD PTR [rip+0x52859],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2c86b:	test   rbx,rbx
   2c86e:	jne    2c7f6 <__sprintf_chk@plt+0x21e46>
   2c870:	cmp    BYTE PTR [rip+0x5304a],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
   2c877:	lea    rbx,[rip+0x387ed]        # 6506b <_obstack_memory_used@@Base+0x183eb>
   2c87e:	mov    QWORD PTR [rip+0x52f4f],0x0        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2c889:	mov    QWORD PTR [rip+0x52f3c],0x0        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   2c894:	jne    2c8fc <__sprintf_chk@plt+0x21f4c>
   2c896:	add    rsp,0x8
   2c89a:	pop    rbx
   2c89b:	pop    rbp
   2c89c:	pop    r12
   2c89e:	pop    r13
   2c8a0:	ret    
   2c8a1:	nop    DWORD PTR [rax+0x0]
   2c8a8:	mov    rbp,QWORD PTR [rax+0x18]
   2c8ac:	test   rbp,rbp
   2c8af:	je     2c896 <__sprintf_chk@plt+0x21ee6>
   2c8b1:	mov    rdi,rbp
   2c8b4:	call   29470 <__sprintf_chk@plt+0x1eac0>
   2c8b9:	mov    rax,QWORD PTR [rip+0x52c48]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2c8c0:	test   rax,rax
   2c8c3:	je     2c8c7 <__sprintf_chk@plt+0x21f17>
   2c8c5:	call   rax
   2c8c7:	mov    rdi,rbp
   2c8ca:	call   4b670 <argp_usage@@Base+0x82f0>
   2c8cf:	mov    edx,0x5
   2c8d4:	mov    rsi,rbx
   2c8d7:	xor    edi,edi
   2c8d9:	mov    r12,rax
   2c8dc:	call   a040 <dcgettext@plt>
   2c8e1:	mov    rcx,r12
   2c8e4:	xor    esi,esi
   2c8e6:	xor    edi,edi
   2c8e8:	mov    rdx,rax
   2c8eb:	xor    eax,eax
   2c8ed:	call   a640 <error@plt>
   2c8f2:	mov    DWORD PTR [rip+0x527c8],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2c8fc:	mov    edi,0x1
   2c901:	call   2b560 <__sprintf_chk@plt+0x20bb0>
   2c906:	test   rax,rax
   2c909:	jne    2c8a8 <__sprintf_chk@plt+0x21ef8>
   2c90b:	jmp    2c896 <__sprintf_chk@plt+0x21ee6>
   2c90d:	nop    DWORD PTR [rax]
   2c910:	mov    rsi,r12
   2c913:	xor    edi,edi
   2c915:	call   a040 <dcgettext@plt>
   2c91a:	mov    rdx,rax
   2c91d:	jmp    2c850 <__sprintf_chk@plt+0x21ea0>
   2c922:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c92d:	nop    DWORD PTR [rax]
   2c930:	endbr64 
   2c934:	push   r15
   2c936:	xor    r15d,r15d
   2c939:	push   r14
   2c93b:	lea    r14,[rip+0x36911]        # 63253 <_obstack_memory_used@@Base+0x165d3>
   2c942:	push   r13
   2c944:	lea    r13,[rip+0x5277d]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2c94b:	push   r12
   2c94d:	mov    r12,rdi
   2c950:	push   rbp
   2c951:	lea    rbp,[rip+0x529c8]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   2c958:	push   rbx
   2c959:	lea    rbx,[rip+0x39c80]        # 665e0 <_obstack_memory_used@@Base+0x19960>
   2c960:	sub    rsp,0x38
   2c964:	mov    rax,QWORD PTR fs:0x28
   2c96d:	mov    QWORD PTR [rsp+0x28],rax
   2c972:	xor    eax,eax
   2c974:	call   23590 <__sprintf_chk@plt+0x18be0>
   2c979:	call   2c400 <__sprintf_chk@plt+0x21a50>
   2c97e:	xor    edi,edi
   2c980:	call   10ec0 <__sprintf_chk@plt+0x6510>
   2c985:	mov    rdi,rbp
   2c988:	call   44a50 <argp_usage@@Base+0x16d0>
   2c98d:	xor    edx,edx
   2c98f:	mov    rsi,rbp
   2c992:	mov    rdi,r13
   2c995:	call   2ab30 <__sprintf_chk@plt+0x20180>
   2c99a:	cmp    eax,0x5
   2c99d:	ja     2c9b8 <__sprintf_chk@plt+0x22008>
   2c99f:	mov    eax,eax
   2c9a1:	movsxd rax,DWORD PTR [rbx+rax*4]
   2c9a5:	add    rax,rbx
   2c9a8:	notrack jmp rax
   2c9ab:	cmp    BYTE PTR [rip+0x52d86],0x0        # 7f738 <obstack_alloc_failed_handler@@Base+0x900>
   2c9b2:	jne    2cdbb <__sprintf_chk@plt+0x2240b>
   2c9b8:	call   14a80 <__sprintf_chk@plt+0xa0d0>
   2c9bd:	mov    rax,QWORD PTR [rsp+0x28]
   2c9c2:	sub    rax,QWORD PTR fs:0x28
   2c9cb:	jne    2cfd7 <__sprintf_chk@plt+0x22627>
   2c9d1:	add    rsp,0x38
   2c9d5:	pop    rbx
   2c9d6:	pop    rbp
   2c9d7:	pop    r12
   2c9d9:	pop    r13
   2c9db:	pop    r14
   2c9dd:	pop    r15
   2c9df:	jmp    2c7b0 <__sprintf_chk@plt+0x21e00>
   2c9e4:	mov    r15d,0x5
   2c9ea:	cmp    BYTE PTR [rip+0x52d47],0x0        # 7f738 <obstack_alloc_failed_handler@@Base+0x900>
   2c9f1:	jne    2ce75 <__sprintf_chk@plt+0x224c5>
   2c9f7:	mov    rdi,QWORD PTR [rip+0x526ca]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2c9fe:	call   ece0 <__sprintf_chk@plt+0x4330>
   2ca03:	cmp    BYTE PTR [rip+0x5255e],0x0        # 7ef68 <obstack_alloc_failed_handler@@Base+0x130>
   2ca0a:	je     2cd4c <__sprintf_chk@plt+0x2239c>
   2ca10:	mov    rsi,QWORD PTR [rip+0x52911]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2ca17:	test   rsi,rsi
   2ca1a:	je     2c985 <__sprintf_chk@plt+0x21fd5>
   2ca20:	mov    r8,QWORD PTR [rip+0x52f01]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   2ca27:	test   r8,r8
   2ca2a:	je     2c985 <__sprintf_chk@plt+0x21fd5>
   2ca30:	cmp    BYTE PTR [rip+0x528f9],0x0        # 7f330 <obstack_alloc_failed_handler@@Base+0x4f8>
   2ca37:	mov    QWORD PTR [rsp],r8
   2ca3b:	jne    2c985 <__sprintf_chk@plt+0x21fd5>
   2ca41:	mov    rdi,rsi
   2ca44:	mov    QWORD PTR [rsp+0x8],rsi
   2ca49:	call   a060 <strlen@plt>
   2ca4e:	mov    rdx,QWORD PTR [rip+0x52d83]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   2ca55:	mov    rsi,QWORD PTR [rsp+0x8]
   2ca5a:	mov    r8,QWORD PTR [rsp]
   2ca5e:	test   rdx,rdx
   2ca61:	je     2c9b8 <__sprintf_chk@plt+0x22008>
   2ca67:	nop    WORD PTR [rax+rax*1+0x0]
   2ca70:	mov    rcx,QWORD PTR [rdx+0x10]
   2ca74:	cmp    BYTE PTR [rcx],0x0
   2ca77:	je     2ca83 <__sprintf_chk@plt+0x220d3>
   2ca79:	cmp    QWORD PTR [rdx+0x30],r8
   2ca7d:	jb     2c985 <__sprintf_chk@plt+0x21fd5>
   2ca83:	mov    rcx,QWORD PTR [rdx+0x18]
   2ca87:	cmp    rax,rcx
   2ca8a:	jb     2ca96 <__sprintf_chk@plt+0x220e6>
   2ca8c:	cmp    BYTE PTR [rsi+rcx*1],0x2f
   2ca90:	je     2c985 <__sprintf_chk@plt+0x21fd5>
   2ca96:	mov    rdx,QWORD PTR [rdx]
   2ca99:	test   rdx,rdx
   2ca9c:	jne    2ca70 <__sprintf_chk@plt+0x220c0>
   2ca9e:	jmp    2c9b8 <__sprintf_chk@plt+0x22008>
   2caa3:	lea    r15,[rip+0x527fe]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   2caaa:	mov    rdi,QWORD PTR [rip+0x52617]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cab1:	mov    ecx,0x1
   2cab6:	mov    rdx,r15
   2cab9:	mov    rsi,rbp
   2cabc:	call   28710 <__sprintf_chk@plt+0x1dd60>
   2cac1:	mov    rdi,QWORD PTR [rip+0x52860]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2cac8:	call   2c640 <__sprintf_chk@plt+0x21c90>
   2cacd:	test   al,al
   2cacf:	jne    2cc5e <__sprintf_chk@plt+0x222ae>
   2cad5:	mov    rax,QWORD PTR [rip+0x525ec]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cadc:	movzx  eax,BYTE PTR [rax+0x9c]
   2cae3:	cmp    al,0x4d
   2cae5:	je     2cf1d <__sprintf_chk@plt+0x2256d>
   2caeb:	cmp    al,0x56
   2caed:	je     2cd1e <__sprintf_chk@plt+0x2236e>
   2caf3:	cmp    al,0x35
   2caf5:	je     2cebd <__sprintf_chk@plt+0x2250d>
   2cafb:	cmp    BYTE PTR [rip+0x529a7],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   2cb02:	je     2ce55 <__sprintf_chk@plt+0x224a5>
   2cb08:	mov    r15d,0x1
   2cb0e:	jmp    2ca10 <__sprintf_chk@plt+0x22060>
   2cb13:	mov    rdi,QWORD PTR [rip+0x525ae]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cb1a:	call   ece0 <__sprintf_chk@plt+0x4330>
   2cb1f:	test   r15d,r15d
   2cb22:	je     2cb88 <__sprintf_chk@plt+0x221d8>
   2cb24:	sub    r15d,0x1
   2cb28:	je     2cbc1 <__sprintf_chk@plt+0x22211>
   2cb2e:	mov    rsi,QWORD PTR [rip+0x527f3]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2cb35:	test   rsi,rsi
   2cb38:	je     2cf12 <__sprintf_chk@plt+0x22562>
   2cb3e:	mov    r8,QWORD PTR [rip+0x52de3]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   2cb45:	mov    r15d,0x5
   2cb4b:	test   r8,r8
   2cb4e:	jne    2ca30 <__sprintf_chk@plt+0x22080>
   2cb54:	mov    rdi,rbp
   2cb57:	call   44a50 <argp_usage@@Base+0x16d0>
   2cb5c:	xor    edx,edx
   2cb5e:	mov    rsi,rbp
   2cb61:	mov    rdi,r13
   2cb64:	call   2ab30 <__sprintf_chk@plt+0x20180>
   2cb69:	mov    r15d,eax
   2cb6c:	cmp    eax,0x5
   2cb6f:	ja     2c9b8 <__sprintf_chk@plt+0x22008>
   2cb75:	lea    rdx,[rip+0x39a7c]        # 665f8 <_obstack_memory_used@@Base+0x19978>
   2cb7c:	mov    eax,eax
   2cb7e:	movsxd rax,DWORD PTR [rdx+rax*4]
   2cb82:	add    rax,rdx
   2cb85:	notrack jmp rax
   2cb88:	mov    rax,QWORD PTR [rip+0x52979]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2cb8f:	test   rax,rax
   2cb92:	je     2cb96 <__sprintf_chk@plt+0x221e6>
   2cb94:	call   rax
   2cb96:	mov    edx,0x5
   2cb9b:	lea    rsi,[rip+0x36d46]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   2cba2:	xor    edi,edi
   2cba4:	call   a040 <dcgettext@plt>
   2cba9:	xor    esi,esi
   2cbab:	xor    edi,edi
   2cbad:	mov    rdx,rax
   2cbb0:	xor    eax,eax
   2cbb2:	call   a640 <error@plt>
   2cbb7:	mov    DWORD PTR [rip+0x52503],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2cbc1:	cmp    BYTE PTR [rip+0x52b70],0x0        # 7f738 <obstack_alloc_failed_handler@@Base+0x900>
   2cbc8:	jne    2ce01 <__sprintf_chk@plt+0x22451>
   2cbce:	mov    rax,QWORD PTR [rip+0x52933]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2cbd5:	test   rax,rax
   2cbd8:	je     2cbdc <__sprintf_chk@plt+0x2222c>
   2cbda:	call   rax
   2cbdc:	mov    edx,0x5
   2cbe1:	lea    rsi,[rip+0x384c6]        # 650ae <_obstack_memory_used@@Base+0x1842e>
   2cbe8:	xor    edi,edi
   2cbea:	call   a040 <dcgettext@plt>
   2cbef:	xor    esi,esi
   2cbf1:	xor    edi,edi
   2cbf3:	mov    rdx,rax
   2cbf6:	xor    eax,eax
   2cbf8:	call   a640 <error@plt>
   2cbfd:	mov    rsi,QWORD PTR [rip+0x52724]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2cc04:	mov    DWORD PTR [rip+0x524b6],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   2cc0e:	test   rsi,rsi
   2cc11:	je     2cf12 <__sprintf_chk@plt+0x22562>
   2cc17:	mov    r8,QWORD PTR [rip+0x52d0a]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   2cc1e:	mov    r15d,0x5
   2cc24:	test   r8,r8
   2cc27:	jne    2ca30 <__sprintf_chk@plt+0x22080>
   2cc2d:	mov    rdi,rbp
   2cc30:	call   44a50 <argp_usage@@Base+0x16d0>
   2cc35:	xor    edx,edx
   2cc37:	mov    rsi,rbp
   2cc3a:	mov    rdi,r13
   2cc3d:	call   2ab30 <__sprintf_chk@plt+0x20180>
   2cc42:	cmp    eax,0x5
   2cc45:	ja     2c9b8 <__sprintf_chk@plt+0x22008>
   2cc4b:	lea    rdx,[rip+0x399be]        # 66610 <_obstack_memory_used@@Base+0x19990>
   2cc52:	mov    eax,eax
   2cc54:	movsxd rax,DWORD PTR [rdx+rax*4]
   2cc58:	add    rax,rdx
   2cc5b:	notrack jmp rax
   2cc5e:	cmp    QWORD PTR [rip+0x52b32],0x0        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2cc66:	js     2ccec <__sprintf_chk@plt+0x2233c>
   2cc6c:	mov    ecx,0x1
   2cc71:	xor    r9d,r9d
   2cc74:	mov    rdx,r14
   2cc77:	mov    esi,0xc
   2cc7c:	mov    rax,QWORD PTR [rip+0x52445]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cc83:	shl    rcx,0x3f
   2cc87:	movabs r8,0x7fffffffffffffff
   2cc91:	lea    rdi,[rax+0x88]
   2cc98:	push   rax
   2cc99:	push   0x0
   2cc9b:	call   23640 <__sprintf_chk@plt+0x18c90>
   2cca0:	pop    rdx
   2cca1:	xor    edx,edx
   2cca3:	cmp    QWORD PTR [rip+0x52ae6],rax        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   2ccaa:	mov    rcx,QWORD PTR [rip+0x52ae7]        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   2ccb1:	setl   dl
   2ccb4:	pop    rsi
   2ccb5:	mov    QWORD PTR [rip+0x5275c],rax        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   2ccbc:	mov    QWORD PTR [rip+0x52759],0x0        # 7f420 <obstack_alloc_failed_handler@@Base+0x5e8>
   2ccc7:	setg   al
   2ccca:	movzx  eax,al
   2cccd:	sub    edx,eax
   2cccf:	mov    rax,rcx
   2ccd2:	shr    rax,0x3f
   2ccd6:	test   rcx,rcx
   2ccd9:	setg   cl
   2ccdc:	movzx  ecx,cl
   2ccdf:	sub    eax,ecx
   2cce1:	lea    eax,[rax+rdx*2]
   2cce4:	test   eax,eax
   2cce6:	js     2cad5 <__sprintf_chk@plt+0x22125>
   2ccec:	mov    rsi,QWORD PTR [rip+0x527c5]        # 7f4b8 <obstack_alloc_failed_handler@@Base+0x680>
   2ccf3:	mov    rdi,QWORD PTR [rip+0x5262e]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2ccfa:	call   18ba0 <__sprintf_chk@plt+0xe1f0>
   2ccff:	test   al,al
   2cd01:	jne    2cad5 <__sprintf_chk@plt+0x22125>
   2cd07:	mov    rax,QWORD PTR [rip+0x523ba]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cd0e:	movsx  edi,BYTE PTR [rax+0x9c]
   2cd15:	cmp    edi,0x56
   2cd18:	jne    2cf22 <__sprintf_chk@plt+0x22572>
   2cd1e:	call   r12
   2cd21:	mov    rsi,QWORD PTR [rip+0x52600]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2cd28:	test   rsi,rsi
   2cd2b:	je     2cf9b <__sprintf_chk@plt+0x225eb>
   2cd31:	mov    r8,QWORD PTR [rip+0x52bf0]        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   2cd38:	test   r8,r8
   2cd3b:	je     2cf4e <__sprintf_chk@plt+0x2259e>
   2cd41:	mov    r15d,0x1
   2cd47:	jmp    2ca30 <__sprintf_chk@plt+0x22080>
   2cd4c:	xor    edx,edx
   2cd4e:	mov    rsi,rbp
   2cd51:	mov    rdi,r13
   2cd54:	call   2ab30 <__sprintf_chk@plt+0x20180>
   2cd59:	cmp    eax,0x3
   2cd5c:	je     2c9b8 <__sprintf_chk@plt+0x22008>
   2cd62:	test   BYTE PTR [rip+0x4f313],0x1        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   2cd69:	je     2c9b8 <__sprintf_chk@plt+0x22008>
   2cd6f:	mov    rax,QWORD PTR [rip+0x52792]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2cd76:	test   rax,rax
   2cd79:	je     2cd7d <__sprintf_chk@plt+0x223cd>
   2cd7b:	call   rax
   2cd7d:	call   ecc0 <__sprintf_chk@plt+0x4310>
   2cd82:	lea    rsi,[rsp+0x10]
   2cd87:	mov    rdi,rax
   2cd8a:	call   49530 <argp_usage@@Base+0x61b0>
   2cd8f:	xor    edi,edi
   2cd91:	mov    edx,0x5
   2cd96:	lea    rsi,[rip+0x36664]        # 63401 <_obstack_memory_used@@Base+0x16781>
   2cd9d:	mov    r12,rax
   2cda0:	call   a040 <dcgettext@plt>
   2cda5:	mov    rcx,r12
   2cda8:	xor    esi,esi
   2cdaa:	xor    edi,edi
   2cdac:	mov    rdx,rax
   2cdaf:	xor    eax,eax
   2cdb1:	call   a640 <error@plt>
   2cdb6:	jmp    2c9b8 <__sprintf_chk@plt+0x22008>
   2cdbb:	call   ecc0 <__sprintf_chk@plt+0x4310>
   2cdc0:	lea    rsi,[rsp+0x10]
   2cdc5:	mov    rdi,rax
   2cdc8:	call   49530 <argp_usage@@Base+0x61b0>
   2cdcd:	xor    edi,edi
   2cdcf:	mov    edx,0x5
   2cdd4:	lea    rsi,[rip+0x382b6]        # 65091 <_obstack_memory_used@@Base+0x18411>
   2cddb:	mov    r12,rax
   2cdde:	call   a040 <dcgettext@plt>
   2cde3:	mov    rdi,QWORD PTR [rip+0x522ae]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2cdea:	mov    rcx,r12
   2cded:	mov    esi,0x1
   2cdf2:	mov    rdx,rax
   2cdf5:	xor    eax,eax
   2cdf7:	call   a840 <__fprintf_chk@plt>
   2cdfc:	jmp    2c9b8 <__sprintf_chk@plt+0x22008>
   2ce01:	call   ecc0 <__sprintf_chk@plt+0x4310>
   2ce06:	sub    rax,QWORD PTR [rip+0x52b23]        # 7f930 <obstack_alloc_failed_handler@@Base+0xaf8>
   2ce0d:	lea    rsi,[rsp+0x10]
   2ce12:	mov    rdi,rax
   2ce15:	sub    rdi,QWORD PTR [rip+0x52b1c]        # 7f938 <obstack_alloc_failed_handler@@Base+0xb00>
   2ce1c:	call   49530 <argp_usage@@Base+0x61b0>
   2ce21:	xor    edi,edi
   2ce23:	mov    edx,0x5
   2ce28:	lea    rsi,[rip+0x37387]        # 641b6 <_obstack_memory_used@@Base+0x17536>
   2ce2f:	mov    r15,rax
   2ce32:	call   a040 <dcgettext@plt>
   2ce37:	mov    rdi,QWORD PTR [rip+0x5225a]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2ce3e:	mov    rcx,r15
   2ce41:	mov    esi,0x1
   2ce46:	mov    rdx,rax
   2ce49:	xor    eax,eax
   2ce4b:	call   a840 <__fprintf_chk@plt>
   2ce50:	jmp    2cbce <__sprintf_chk@plt+0x2221e>
   2ce55:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   2ce5a:	mov    rsi,QWORD PTR [rip+0x524c7]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2ce61:	test   rsi,rsi
   2ce64:	je     2cfa6 <__sprintf_chk@plt+0x225f6>
   2ce6a:	mov    r15d,0x1
   2ce70:	jmp    2ca20 <__sprintf_chk@plt+0x22070>
   2ce75:	call   ecc0 <__sprintf_chk@plt+0x4310>
   2ce7a:	lea    rsi,[rsp+0x10]
   2ce7f:	mov    rdi,rax
   2ce82:	call   49530 <argp_usage@@Base+0x61b0>
   2ce87:	xor    edi,edi
   2ce89:	mov    edx,0x5
   2ce8e:	lea    rsi,[rip+0x38b33]        # 659c8 <_obstack_memory_used@@Base+0x18d48>
   2ce95:	mov    QWORD PTR [rsp],rax
   2ce99:	call   a040 <dcgettext@plt>
   2ce9e:	mov    rcx,QWORD PTR [rsp]
   2cea2:	mov    esi,0x1
   2cea7:	mov    rdi,QWORD PTR [rip+0x521ea]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   2ceae:	mov    rdx,rax
   2ceb1:	xor    eax,eax
   2ceb3:	call   a840 <__fprintf_chk@plt>
   2ceb8:	jmp    2c9f7 <__sprintf_chk@plt+0x22047>
   2cebd:	cmp    BYTE PTR [rip+0x52a7c],0x0        # 7f940 <obstack_alloc_failed_handler@@Base+0xb08>
   2cec4:	je     2cafb <__sprintf_chk@plt+0x2214b>
   2ceca:	mov    rax,QWORD PTR [rip+0x52637]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2ced1:	test   rax,rax
   2ced4:	je     2ced8 <__sprintf_chk@plt+0x22528>
   2ced6:	call   rax
   2ced8:	mov    rdi,QWORD PTR [rip+0x52449]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   2cedf:	call   4b670 <argp_usage@@Base+0x82f0>
   2cee4:	xor    edi,edi
   2cee6:	mov    edx,0x5
   2ceeb:	lea    rsi,[rip+0x38192]        # 65084 <_obstack_memory_used@@Base+0x18404>
   2cef2:	mov    QWORD PTR [rsp],rax
   2cef6:	call   a040 <dcgettext@plt>
   2cefb:	mov    rcx,QWORD PTR [rsp]
   2ceff:	xor    esi,esi
   2cf01:	xor    edi,edi
   2cf03:	mov    rdx,rax
   2cf06:	xor    eax,eax
   2cf08:	call   a640 <error@plt>
   2cf0d:	jmp    2cafb <__sprintf_chk@plt+0x2214b>
   2cf12:	mov    r15d,0x5
   2cf18:	jmp    2c985 <__sprintf_chk@plt+0x21fd5>
   2cf1d:	mov    edi,0x4d
   2cf22:	call   58610 <_obstack_memory_used@@Base+0xb990>
   2cf27:	jmp    2cd1e <__sprintf_chk@plt+0x2236e>
   2cf2c:	mov    rdi,QWORD PTR [rip+0x52195]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cf33:	call   ece0 <__sprintf_chk@plt+0x4330>
   2cf38:	jmp    2cb2e <__sprintf_chk@plt+0x2217e>
   2cf3d:	mov    rdi,QWORD PTR [rip+0x52184]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cf44:	call   ece0 <__sprintf_chk@plt+0x4330>
   2cf49:	jmp    2ca10 <__sprintf_chk@plt+0x22060>
   2cf4e:	mov    rdi,rbp
   2cf51:	call   44a50 <argp_usage@@Base+0x16d0>
   2cf56:	xor    edx,edx
   2cf58:	mov    rsi,rbp
   2cf5b:	mov    rdi,r13
   2cf5e:	call   2ab30 <__sprintf_chk@plt+0x20180>
   2cf63:	cmp    eax,0x5
   2cf66:	ja     2c9b8 <__sprintf_chk@plt+0x22008>
   2cf6c:	lea    rdx,[rip+0x396b5]        # 66628 <_obstack_memory_used@@Base+0x199a8>
   2cf73:	mov    eax,eax
   2cf75:	movsxd rax,DWORD PTR [rdx+rax*4]
   2cf79:	add    rax,rdx
   2cf7c:	notrack jmp rax
   2cf7f:	mov    r15d,0x1
   2cf85:	jmp    2c9ea <__sprintf_chk@plt+0x2203a>
   2cf8a:	mov    rdi,QWORD PTR [rip+0x52137]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2cf91:	call   ece0 <__sprintf_chk@plt+0x4330>
   2cf96:	jmp    2cbc1 <__sprintf_chk@plt+0x22211>
   2cf9b:	mov    r15d,0x1
   2cfa1:	jmp    2c985 <__sprintf_chk@plt+0x21fd5>
   2cfa6:	mov    rdi,rbp
   2cfa9:	call   44a50 <argp_usage@@Base+0x16d0>
   2cfae:	xor    edx,edx
   2cfb0:	mov    rsi,rbp
   2cfb3:	mov    rdi,r13
   2cfb6:	call   2ab30 <__sprintf_chk@plt+0x20180>
   2cfbb:	cmp    eax,0x5
   2cfbe:	ja     2c9b8 <__sprintf_chk@plt+0x22008>
   2cfc4:	lea    rsi,[rip+0x39675]        # 66640 <_obstack_memory_used@@Base+0x199c0>
   2cfcb:	mov    eax,eax
   2cfcd:	movsxd rax,DWORD PTR [rsi+rax*4]
   2cfd1:	add    rax,rsi
   2cfd4:	notrack jmp rax
   2cfd7:	call   a0a0 <__stack_chk_fail@plt>
   2cfdc:	nop    DWORD PTR [rax+0x0]
   2cfe0:	endbr64 
   2cfe4:	mov    rdi,QWORD PTR [rdi+0x58]
   2cfe8:	xor    edx,edx
   2cfea:	movzx  ecx,BYTE PTR [rdi]
   2cfed:	test   cl,cl
   2cfef:	je     2d015 <__sprintf_chk@plt+0x22665>
   2cff1:	nop    DWORD PTR [rax+0x0]
   2cff8:	mov    rax,rdx
   2cffb:	add    rdi,0x1
   2cfff:	shl    rax,0x5
   2d003:	sub    rax,rdx
   2d006:	xor    edx,edx
   2d008:	add    rax,rcx
   2d00b:	movzx  ecx,BYTE PTR [rdi]
   2d00e:	div    rsi
   2d011:	test   cl,cl
   2d013:	jne    2cff8 <__sprintf_chk@plt+0x22648>
   2d015:	mov    rax,rdx
   2d018:	ret    
   2d019:	nop    DWORD PTR [rax+0x0]
   2d020:	endbr64 
   2d024:	mov    rax,QWORD PTR [rip+0x5209d]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2d02b:	cmp    BYTE PTR [rax+0x9c],0x53
   2d032:	sete   al
   2d035:	ret    
   2d036:	cs nop WORD PTR [rax+rax*1+0x0]
   2d040:	endbr64 
   2d044:	mov    rax,QWORD PTR [rip+0x5207d]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2d04b:	cmp    BYTE PTR [rax+0x9c],0x53
   2d052:	sete   al
   2d055:	ret    
   2d056:	cs nop WORD PTR [rax+rax*1+0x0]
   2d060:	endbr64 
   2d064:	mov    rdx,QWORD PTR [rdi+0x18]
   2d068:	mov    eax,0x1
   2d06d:	cmp    QWORD PTR [rdx+0x130],0x0
   2d075:	jne    2d082 <__sprintf_chk@plt+0x226d2>
   2d077:	mov    eax,DWORD PTR [rdx+0x124]
   2d07d:	test   eax,eax
   2d07f:	setne  al
   2d082:	ret    
   2d083:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2d08e:	xchg   ax,ax
   2d090:	mov    rax,rdi
   2d093:	jmp    2d0a0 <__sprintf_chk@plt+0x226f0>
   2d095:	nop    DWORD PTR [rax]
   2d098:	cmp    esi,edx
   2d09a:	je     2d0c4 <__sprintf_chk@plt+0x22714>
   2d09c:	add    rax,0x30
   2d0a0:	cmp    QWORD PTR [rax],0x0
   2d0a4:	mov    edx,DWORD PTR [rax+0x8]
   2d0a7:	jne    2d098 <__sprintf_chk@plt+0x226e8>
   2d0a9:	test   edx,edx
   2d0ab:	jne    2d098 <__sprintf_chk@plt+0x226e8>
   2d0ad:	cmp    QWORD PTR [rax+0x10],0x0
   2d0b2:	jne    2d098 <__sprintf_chk@plt+0x226e8>
   2d0b4:	mov    ecx,DWORD PTR [rax+0x18]
   2d0b7:	test   ecx,ecx
   2d0b9:	jne    2d098 <__sprintf_chk@plt+0x226e8>
   2d0bb:	cmp    QWORD PTR [rax+0x20],0x0
   2d0c0:	jne    2d098 <__sprintf_chk@plt+0x226e8>
   2d0c2:	xor    eax,eax
   2d0c4:	ret    
   2d0c5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2d0d0:	endbr64 
   2d0d4:	sub    rsp,0x8
   2d0d8:	mov    rsi,QWORD PTR [rsi+0x58]
   2d0dc:	mov    rdi,QWORD PTR [rdi+0x58]
   2d0e0:	call   a320 <strcmp@plt>
   2d0e5:	test   eax,eax
   2d0e7:	sete   al
   2d0ea:	add    rsp,0x8
   2d0ee:	ret    
   2d0ef:	nop
   2d0f0:	mov    eax,DWORD PTR [rdi]
   2d0f2:	xor    r8d,r8d
   2d0f5:	cmp    eax,DWORD PTR [rsi]
   2d0f7:	je     2d0fd <__sprintf_chk@plt+0x2274d>
   2d0f9:	mov    eax,r8d
   2d0fc:	ret    
   2d0fd:	sub    eax,0x1
   2d100:	je     2d11e <__sprintf_chk@plt+0x2276e>
   2d102:	push   rax
   2d103:	mov    rsi,QWORD PTR [rsi+0x8]
   2d107:	mov    rdi,QWORD PTR [rdi+0x8]
   2d10b:	call   a320 <strcmp@plt>
   2d110:	xor    r8d,r8d
   2d113:	pop    rdx
   2d114:	test   eax,eax
   2d116:	sete   r8b
   2d11a:	mov    eax,r8d
   2d11d:	ret    
   2d11e:	mov    r8d,0x1
   2d124:	jmp    2d0f9 <__sprintf_chk@plt+0x22749>
   2d126:	cs nop WORD PTR [rax+rax*1+0x0]
   2d130:	endbr64 
   2d134:	push   rbx
   2d135:	mov    rax,QWORD PTR [rip+0x51f8c]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2d13c:	mov    rbx,rdi
   2d13f:	xor    ecx,ecx
   2d141:	xor    r9d,r9d
   2d144:	lea    rdx,[rip+0x3607a]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   2d14b:	mov    esi,0xc
   2d150:	movabs r8,0x7fffffffffffffff
   2d15a:	lea    rdi,[rax+0x1e3]
   2d161:	sub    rsp,0x8
   2d165:	push   0x0
   2d167:	call   23640 <__sprintf_chk@plt+0x18c90>
   2d16c:	mov    rdx,QWORD PTR [rbx+0x18]
   2d170:	mov    rcx,QWORD PTR [rdx+0x88]
   2d177:	mov    QWORD PTR [rdx+0x118],rcx
   2d17e:	xor    ecx,ecx
   2d180:	test   rax,rax
   2d183:	cmovns rcx,rax
   2d187:	not    rax
   2d18a:	shr    rax,0x3f
   2d18e:	mov    QWORD PTR [rdx+0x88],rcx
   2d195:	pop    rdx
   2d196:	pop    rcx
   2d197:	pop    rbx
   2d198:	ret    
   2d199:	nop    DWORD PTR [rax+0x0]
   2d1a0:	endbr64 
   2d1a4:	push   rbx
   2d1a5:	mov    rax,QWORD PTR [rip+0x51f1c]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   2d1ac:	mov    rbx,rdi
   2d1af:	xor    ecx,ecx
   2d1b1:	xor    r9d,r9d
   2d1b4:	lea    rdx,[rip+0x3600a]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   2d1bb:	mov    esi,0xc
   2d1c0:	movabs r8,0x7fffffffffffffff
   2d1ca:	lea    rdi,[rax+0x1c4]
   2d1d1:	sub    rsp,0x8
   2d1d5:	push   0x0
   2d1d7:	call   23640 <__sprintf_chk@plt+0x18c90>
   2d1dc:	mov    rdx,QWORD PTR [rbx+0x18]
   2d1e0:	mov    rcx,QWORD PTR [rdx+0x88]
   2d1e7:	mov    QWORD PTR [rdx+0x118],rcx
   2d1ee:	xor    ecx,ecx
   2d1f0:	test   rax,rax
   2d1f3:	cmovns rcx,rax
   2d1f7:	not    rax
   2d1fa:	shr    rax,0x3f
   2d1fe:	mov    QWORD PTR [rdx+0x88],rcx
   2d205:	pop    rdx
   2d206:	pop    rcx
   2d207:	pop    rbx
   2d208:	ret    
   2d209:	nop    DWORD PTR [rax+0x0]
   2d210:	endbr64 
   2d214:	push   r15
   2d216:	push   r14
   2d218:	push   r13
   2d21a:	push   r12
   2d21c:	mov    r12,rdi
   2d21f:	push   rbp
   2d220:	push   rbx
   2d221:	sub    rsp,0x18
   2d225:	mov    r14,QWORD PTR [rip+0x52314]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2d22c:	mov    rdi,QWORD PTR [rdi+0x18]
   2d230:	sub    r14,QWORD PTR [rip+0x52351]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   2d237:	sar    r14,0x9
   2d23b:	add    r14,QWORD PTR [rip+0x522f6]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   2d242:	mov    QWORD PTR [rsp+0x8],r14
   2d247:	call   11f50 <__sprintf_chk@plt+0x75a0>
   2d24c:	mov    BYTE PTR [rax+0x9c],0x53
   2d253:	mov    rbp,rax
   2d256:	mov    rax,QWORD PTR [r12+0x18]
   2d25b:	cmp    QWORD PTR [rax+0x130],0x4
   2d263:	jbe    2d26c <__sprintf_chk@plt+0x228bc>
   2d265:	mov    BYTE PTR [rbp+0x1e2],0x1
   2d26c:	sub    rsp,0x8
   2d270:	lea    r13,[rip+0x35f4e]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   2d277:	xor    ecx,ecx
   2d279:	mov    rdi,QWORD PTR [rax+0x88]
   2d280:	push   r13
   2d282:	mov    r9d,0xc
   2d288:	lea    r8,[rbp+0x1e3]
   2d28f:	mov    edx,0x8
   2d294:	mov    rsi,rdi
   2d297:	shr    rdi,0x3f
   2d29b:	lea    r15,[rbp+0x182]
   2d2a2:	call   101a0 <__sprintf_chk@plt+0x57f0>
   2d2a7:	mov    rax,QWORD PTR [r12+0x18]
   2d2ac:	lea    r8,[rbp+0x7c]
   2d2b0:	xor    ecx,ecx
   2d2b2:	mov    r9d,0xc
   2d2b8:	mov    edx,0x8
   2d2bd:	mov    rdi,QWORD PTR [rax+0x118]
   2d2c4:	mov    QWORD PTR [rsp],r13
   2d2c8:	mov    rsi,rdi
   2d2cb:	shr    rdi,0x3f
   2d2cf:	call   101a0 <__sprintf_chk@plt+0x57f0>
   2d2d4:	mov    rdi,QWORD PTR [r12+0x18]
   2d2d9:	pop    r9
   2d2db:	pop    r10
   2d2dd:	mov    rbx,QWORD PTR [rdi+0x130]
   2d2e4:	test   rbx,rbx
   2d2e7:	je     2d546 <__sprintf_chk@plt+0x22b96>
   2d2ed:	xor    ebx,ebx
   2d2ef:	jmp    2d300 <__sprintf_chk@plt+0x22950>
   2d2f1:	nop    DWORD PTR [rax+0x0]
   2d2f8:	test   al,al
   2d2fa:	je     2d38a <__sprintf_chk@plt+0x229da>
   2d300:	mov    rax,QWORD PTR [rdi+0x140]
   2d307:	mov    r14,rbx
   2d30a:	sub    rsp,0x8
   2d30e:	xor    ecx,ecx
   2d310:	shl    r14,0x4
   2d314:	mov    r8,r15
   2d317:	mov    edx,0x8
   2d31c:	add    rbx,0x1
   2d320:	mov    rdi,QWORD PTR [rax+r14*1]
   2d324:	push   r13
   2d326:	mov    r9d,0xc
   2d32c:	mov    rsi,rdi
   2d32f:	shr    rdi,0x3f
   2d333:	call   101a0 <__sprintf_chk@plt+0x57f0>
   2d338:	mov    rax,QWORD PTR [r12+0x18]
   2d33d:	lea    r8,[r15+0xc]
   2d341:	xor    ecx,ecx
   2d343:	mov    r9d,0xc
   2d349:	mov    edx,0x8
   2d34e:	add    r15,0x18
   2d352:	mov    rax,QWORD PTR [rax+0x140]
   2d359:	mov    rdi,QWORD PTR [rax+r14*1+0x8]
   2d35e:	mov    QWORD PTR [rsp],r13
   2d362:	mov    rsi,rdi
   2d365:	shr    rdi,0x3f
   2d369:	call   101a0 <__sprintf_chk@plt+0x57f0>
   2d36e:	mov    rdi,QWORD PTR [r12+0x18]
   2d373:	pop    rsi
   2d374:	pop    r8
   2d376:	cmp    rbx,QWORD PTR [rdi+0x130]
   2d37d:	setb   al
   2d380:	cmp    rbx,0x4
   2d384:	jne    2d2f8 <__sprintf_chk@plt+0x22948>
   2d38a:	mov    BYTE PTR [rbp+0x1e2],al
   2d390:	mov    rdx,QWORD PTR [rsp+0x8]
   2d395:	mov    rsi,rbp
   2d398:	call   10b40 <__sprintf_chk@plt+0x6190>
   2d39d:	mov    rdx,QWORD PTR [r12+0x18]
   2d3a2:	cmp    QWORD PTR [rdx+0x130],rbx
   2d3a9:	jbe    2d4e4 <__sprintf_chk@plt+0x22b34>
   2d3af:	nop
   2d3b0:	mov    rbp,QWORD PTR [rip+0x52189]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2d3b7:	cmp    rbp,QWORD PTR [rip+0x521c2]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2d3be:	je     2d510 <__sprintf_chk@plt+0x22b60>
   2d3c4:	lea    rdi,[rbp+0x8]
   2d3c8:	mov    rcx,rbp
   2d3cb:	xor    eax,eax
   2d3cd:	mov    r15,rbp
   2d3d0:	and    rdi,0xfffffffffffffff8
   2d3d4:	mov    QWORD PTR [rbp+0x0],0x0
   2d3dc:	mov    QWORD PTR [rbp+0x1f8],0x0
   2d3e7:	sub    rcx,rdi
   2d3ea:	add    ecx,0x200
   2d3f0:	shr    ecx,0x3
   2d3f3:	rep stos QWORD PTR es:[rdi],rax
   2d3f6:	mov    rdx,QWORD PTR [r12+0x18]
   2d3fb:	cmp    QWORD PTR [rdx+0x130],rbx
   2d402:	jbe    2d4a5 <__sprintf_chk@plt+0x22af5>
   2d408:	lea    rax,[rbx+0x15]
   2d40c:	mov    QWORD PTR [rsp+0x8],rax
   2d411:	jmp    2d423 <__sprintf_chk@plt+0x22a73>
   2d413:	nop    DWORD PTR [rax+rax*1+0x0]
   2d418:	cmp    QWORD PTR [rsp+0x8],rbx
   2d41d:	je     2d500 <__sprintf_chk@plt+0x22b50>
   2d423:	mov    rax,QWORD PTR [rdx+0x140]
   2d42a:	mov    r14,rbx
   2d42d:	sub    rsp,0x8
   2d431:	xor    ecx,ecx
   2d433:	shl    r14,0x4
   2d437:	mov    r8,r15
   2d43a:	mov    edx,0x8
   2d43f:	add    rbx,0x1
   2d443:	mov    rdi,QWORD PTR [rax+r14*1]
   2d447:	push   r13
   2d449:	mov    r9d,0xc
   2d44f:	mov    rsi,rdi
   2d452:	shr    rdi,0x3f
   2d456:	call   101a0 <__sprintf_chk@plt+0x57f0>
   2d45b:	mov    rax,QWORD PTR [r12+0x18]
   2d460:	lea    r8,[r15+0xc]
   2d464:	xor    ecx,ecx
   2d466:	mov    edx,0x8
   2d46b:	mov    r9d,0xc
   2d471:	add    r15,0x18
   2d475:	mov    rax,QWORD PTR [rax+0x140]
   2d47c:	mov    rdi,QWORD PTR [rax+r14*1+0x8]
   2d481:	mov    QWORD PTR [rsp],r13
   2d485:	mov    rsi,rdi
   2d488:	shr    rdi,0x3f
   2d48c:	call   101a0 <__sprintf_chk@plt+0x57f0>
   2d491:	mov    rdx,QWORD PTR [r12+0x18]
   2d496:	pop    rax
   2d497:	pop    rcx
   2d498:	cmp    rbx,QWORD PTR [rdx+0x130]
   2d49f:	jb     2d418 <__sprintf_chk@plt+0x22a68>
   2d4a5:	mov    rax,QWORD PTR [rip+0x52094]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2d4ac:	cmp    rax,rbp
   2d4af:	ja     2d4ca <__sprintf_chk@plt+0x22b1a>
   2d4b1:	sub    rbp,rax
   2d4b4:	and    rbp,0xfffffffffffffe00
   2d4bb:	lea    rax,[rax+rbp*1+0x200]
   2d4c3:	mov    QWORD PTR [rip+0x52076],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2d4ca:	cmp    rax,QWORD PTR [rip+0x520af]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2d4d1:	ja     aa85 <__sprintf_chk@plt+0xd5>
   2d4d7:	cmp    QWORD PTR [rdx+0x130],rbx
   2d4de:	ja     2d3b0 <__sprintf_chk@plt+0x22a00>
   2d4e4:	add    rsp,0x18
   2d4e8:	mov    eax,0x1
   2d4ed:	pop    rbx
   2d4ee:	pop    rbp
   2d4ef:	pop    r12
   2d4f1:	pop    r13
   2d4f3:	pop    r14
   2d4f5:	pop    r15
   2d4f7:	ret    
   2d4f8:	nop    DWORD PTR [rax+rax*1+0x0]
   2d500:	mov    BYTE PTR [rbp+0x1f8],0x1
   2d507:	jmp    2d4a5 <__sprintf_chk@plt+0x22af5>
   2d509:	nop    DWORD PTR [rax+0x0]
   2d510:	xor    ebp,ebp
   2d512:	cmp    BYTE PTR [rip+0x5201b],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2d519:	jne    2d3c4 <__sprintf_chk@plt+0x22a14>
   2d51f:	call   f170 <__sprintf_chk@plt+0x47c0>
   2d524:	mov    rbp,QWORD PTR [rip+0x52015]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   2d52b:	cmp    rbp,QWORD PTR [rip+0x5204e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   2d532:	jne    2d3c4 <__sprintf_chk@plt+0x22a14>
   2d538:	mov    BYTE PTR [rip+0x51ff5],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   2d53f:	xor    ebp,ebp
   2d541:	jmp    2d3c4 <__sprintf_chk@plt+0x22a14>
   2d546:	xor    eax,eax
   2d548:	jmp    2d38a <__sprintf_chk@plt+0x229da>
   2d54d:	nop    DWORD PTR [rax]
   2d550:	push   r14
   2d552:	push   r13
   2d554:	push   r12
   2d556:	xor    r12d,r12d
   2d559:	push   rbp
   2d55a:	push   rbx
   2d55b:	sub    rsp,0x10
   2d55f:	mov    rax,QWORD PTR fs:0x28
   2d568:	mov    QWORD PTR [rsp+0x8],rax
   2d56d:	xor    eax,eax
   2d56f:	movsx  eax,BYTE PTR [rsi]
   2d572:	sub    eax,0x30
   2d575:	cmp    eax,0x9
   2d578:	jbe    2d5a0 <__sprintf_chk@plt+0x22bf0>
   2d57a:	mov    rax,QWORD PTR [rsp+0x8]
   2d57f:	sub    rax,QWORD PTR fs:0x28
   2d588:	jne    2d5e6 <__sprintf_chk@plt+0x22c36>
   2d58a:	add    rsp,0x10
   2d58e:	mov    eax,r12d
   2d591:	pop    rbx
   2d592:	pop    rbp
   2d593:	pop    r12
   2d595:	pop    r13
   2d597:	pop    r14
   2d599:	ret    
   2d59a:	nop    WORD PTR [rax+rax*1+0x0]
   2d5a0:	mov    rbp,rsi
   2d5a3:	mov    r14,rdx
   2d5a6:	mov    r13,rdi
   2d5a9:	call   9e40 <__errno_location@plt>
   2d5ae:	mov    rsi,rsp
   2d5b1:	mov    edx,0xa
   2d5b6:	mov    rdi,rbp
   2d5b9:	mov    DWORD PTR [rax],0x0
   2d5bf:	mov    rbx,rax
   2d5c2:	call   a710 <strtoumax@plt>
   2d5c7:	cmp    r14,rax
   2d5ca:	jb     2d57a <__sprintf_chk@plt+0x22bca>
   2d5cc:	cmp    DWORD PTR [rbx],0x22
   2d5cf:	je     2d57a <__sprintf_chk@plt+0x22bca>
   2d5d1:	mov    rdx,QWORD PTR [rsp]
   2d5d5:	cmp    BYTE PTR [rdx],0x0
   2d5d8:	jne    2d57a <__sprintf_chk@plt+0x22bca>
   2d5da:	mov    QWORD PTR [r13+0x0],rax
   2d5de:	mov    r12d,0x1
   2d5e4:	jmp    2d57a <__sprintf_chk@plt+0x22bca>
   2d5e6:	call   a0a0 <__stack_chk_fail@plt>
   2d5eb:	nop    DWORD PTR [rax+rax*1+0x0]
   2d5f0:	push   r14
   2d5f2:	push   r13
   2d5f4:	mov    r13,rsi
   2d5f7:	mov    esi,0x2e
   2d5fc:	push   r12
   2d5fe:	push   rbp
   2d5ff:	mov    rbp,rdi
   2d602:	push   rbx
   2d603:	call   a130 <strrchr@plt>
   2d608:	mov    r12,rax
   2d60b:	test   rax,rax
   2d60e:	je     2d674 <__sprintf_chk@plt+0x22cc4>
   2d610:	lea    r14,[rax+0x1]
   2d614:	mov    rdi,r14
   2d617:	call   a060 <strlen@plt>
   2d61c:	mov    rdi,QWORD PTR [rip+0x514bd]        # 7eae0 <_obstack_memory_used@@Base+0x31e60>
   2d623:	mov    rbx,rax
   2d626:	test   rdi,rdi
   2d629:	je     2d680 <__sprintf_chk@plt+0x22cd0>
   2d62b:	lea    r12,[rip+0x514ae]        # 7eae0 <_obstack_memory_used@@Base+0x31e60>
   2d632:	jmp    2d646 <__sprintf_chk@plt+0x22c96>
   2d634:	nop    DWORD PTR [rax+0x0]
   2d638:	mov    rdi,QWORD PTR [r12+0x18]
   2d63d:	add    r12,0x18
   2d641:	test   rdi,rdi
   2d644:	je     2d680 <__sprintf_chk@plt+0x22cd0>
   2d646:	cmp    QWORD PTR [r12+0x8],rbx
   2d64b:	jne    2d638 <__sprintf_chk@plt+0x22c88>
   2d64d:	mov    rdx,rbx
   2d650:	mov    rsi,r14
   2d653:	call   a2c0 <memcmp@plt>
   2d658:	test   eax,eax
   2d65a:	jne    2d638 <__sprintf_chk@plt+0x22c88>
   2d65c:	test   r13,r13
   2d65f:	je     2d674 <__sprintf_chk@plt+0x22cc4>
   2d661:	mov    rdi,rbp
   2d664:	call   a060 <strlen@plt>
   2d669:	sub    rax,rbx
   2d66c:	sub    rax,0x1
   2d670:	mov    QWORD PTR [r13+0x0],rax
   2d674:	pop    rbx
   2d675:	mov    rax,r12
   2d678:	pop    rbp
   2d679:	pop    r12
   2d67b:	pop    r13
   2d67d:	pop    r14
   2d67f:	ret    
   2d680:	xor    r12d,r12d
   2d683:	jmp    2d674 <__sprintf_chk@plt+0x22cc4>
   2d685:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2d690:	push   r15
   2d692:	push   r14
   2d694:	push   r13
   2d696:	push   r12
   2d698:	push   rbp
   2d699:	push   rbx
   2d69a:	sub    rsp,0x108
   2d6a1:	mov    r12,QWORD PTR [rip+0x51ec0]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   2d6a8:	mov    rax,QWORD PTR fs:0x28
   2d6b1:	mov    QWORD PTR [rsp+0xf8],rax
   2d6b9:	mov    rax,QWORD PTR [rip+0x4e900]        # 7bfc0 <_obstack_memory_used@@Base+0x2f340>
   2d6c0:	mov    QWORD PTR [rsp+0x20],0x1
   2d6c9:	mov    rax,QWORD PTR [rax]
   2d6cc:	mov    QWORD PTR [rsp+0x80],rax
   2d6d4:	test   r12,r12
   2d6d7:	je     2d89e <__sprintf_chk@plt+0x22eee>
   2d6dd:	lea    rbp,[rsp+0x10]
   2d6e2:	mov    edx,0x2080e06
   2d6e7:	mov    rdi,r12
   2d6ea:	mov    rsi,rbp
   2d6ed:	lea    r13,[rip+0x38fd4]        # 666c8 <_obstack_memory_used@@Base+0x19a48>
   2d6f4:	lea    r14,[rip+0x4e9a5]        # 7c0a0 <_obstack_memory_used@@Base+0x2f420>
   2d6fb:	call   3f220 <__sprintf_chk@plt+0x34870>
   2d700:	test   eax,eax
   2d702:	jne    2d859 <__sprintf_chk@plt+0x22ea9>
   2d708:	nop    DWORD PTR [rax+rax*1+0x0]
   2d710:	mov    rax,QWORD PTR [rsp+0x10]
   2d715:	mov    rdi,QWORD PTR [rsp+0x18]
   2d71a:	lea    rdx,[rax*8+0x0]
   2d722:	mov    rax,QWORD PTR [rsp+0x20]
   2d727:	lea    rsi,[rdi+rax*8]
   2d72b:	call   a630 <memmove@plt>
   2d730:	mov    rax,QWORD PTR [rsp+0x18]
   2d735:	mov    rdx,QWORD PTR [rsp+0x10]
   2d73a:	mov    QWORD PTR [rax+rdx*8],r13
   2d73e:	mov    rdi,QWORD PTR [rax]
   2d741:	mov    rsi,rax
   2d744:	call   a780 <execvp@plt>
   2d749:	mov    rdx,QWORD PTR [rsp+0x10]
   2d74e:	mov    rax,QWORD PTR [rsp+0x18]
   2d753:	mov    QWORD PTR [rax+rdx*8],0x0
   2d75b:	cmp    QWORD PTR [rip+0x51e05],0x0        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   2d763:	je     2d778 <__sprintf_chk@plt+0x22dc8>
   2d765:	mov    rsi,r12
   2d768:	lea    rdi,[rip+0x35cfc]        # 6346b <_obstack_memory_used@@Base+0x167eb>
   2d76f:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   2d774:	nop    DWORD PTR [rax+0x0]
   2d778:	movsxd rax,r15d
   2d77b:	mov    esi,DWORD PTR [rip+0x518ff]        # 7f080 <obstack_alloc_failed_handler@@Base+0x248>
   2d781:	lea    rax,[rax+rax*2]
   2d785:	lea    rax,[r14+rax*8]
   2d789:	mov    edx,DWORD PTR [rax]
   2d78b:	test   edx,edx
   2d78d:	jne    2d7a3 <__sprintf_chk@plt+0x22df3>
   2d78f:	jmp    2d765 <__sprintf_chk@plt+0x22db5>
   2d791:	nop    DWORD PTR [rax+0x0]
   2d798:	mov    edx,DWORD PTR [rax+0x18]
   2d79b:	add    rax,0x18
   2d79f:	test   edx,edx
   2d7a1:	je     2d765 <__sprintf_chk@plt+0x22db5>
   2d7a3:	movsxd rcx,r15d
   2d7a6:	add    r15d,0x1
   2d7aa:	cmp    esi,edx
   2d7ac:	jne    2d798 <__sprintf_chk@plt+0x22de8>
   2d7ae:	lea    rax,[rcx+rcx*2]
   2d7b2:	mov    rbx,QWORD PTR [r14+rax*8+0x8]
   2d7b7:	test   rbx,rbx
   2d7ba:	je     2d765 <__sprintf_chk@plt+0x22db5>
   2d7bc:	test   BYTE PTR [rip+0x4e8bb],0x8        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   2d7c3:	je     2d83e <__sprintf_chk@plt+0x22e8e>
   2d7c5:	mov    rax,QWORD PTR [rip+0x51d3c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2d7cc:	test   rax,rax
   2d7cf:	je     2d7d3 <__sprintf_chk@plt+0x22e23>
   2d7d1:	call   rax
   2d7d3:	xor    edi,edi
   2d7d5:	mov    edx,0x5
   2d7da:	lea    rsi,[rip+0x38ecf]        # 666b0 <_obstack_memory_used@@Base+0x19a30>
   2d7e1:	call   a040 <dcgettext@plt>
   2d7e6:	mov    QWORD PTR [rsp+0x8],rax
   2d7eb:	call   9e40 <__errno_location@plt>
   2d7f0:	mov    rdx,QWORD PTR [rsp+0x8]
   2d7f5:	xor    edi,edi
   2d7f7:	mov    rcx,r12
   2d7fa:	mov    esi,DWORD PTR [rax]
   2d7fc:	xor    eax,eax
   2d7fe:	call   a640 <error@plt>
   2d803:	test   BYTE PTR [rip+0x4e874],0x8        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   2d80a:	je     2d83e <__sprintf_chk@plt+0x22e8e>
   2d80c:	mov    rax,QWORD PTR [rip+0x51cf5]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2d813:	test   rax,rax
   2d816:	je     2d81a <__sprintf_chk@plt+0x22e6a>
   2d818:	call   rax
   2d81a:	mov    edx,0x5
   2d81f:	lea    rsi,[rip+0x38e98]        # 666be <_obstack_memory_used@@Base+0x19a3e>
   2d826:	xor    edi,edi
   2d828:	call   a040 <dcgettext@plt>
   2d82d:	mov    rcx,rbx
   2d830:	xor    esi,esi
   2d832:	xor    edi,edi
   2d834:	mov    rdx,rax
   2d837:	xor    eax,eax
   2d839:	call   a640 <error@plt>
   2d83e:	mov    r12,rbx
   2d841:	mov    edx,0x2080e0e
   2d846:	mov    rsi,rbp
   2d849:	mov    rdi,r12
   2d84c:	call   3f220 <__sprintf_chk@plt+0x34870>
   2d851:	test   eax,eax
   2d853:	je     2d710 <__sprintf_chk@plt+0x22d60>
   2d859:	mov    rax,QWORD PTR [rip+0x51ca8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2d860:	test   rax,rax
   2d863:	je     2d867 <__sprintf_chk@plt+0x22eb7>
   2d865:	call   rax
   2d867:	mov    rdi,rbp
   2d86a:	call   403a0 <__sprintf_chk@plt+0x359f0>
   2d86f:	mov    edx,0x5
   2d874:	lea    rsi,[rip+0x35857]        # 630d2 <_obstack_memory_used@@Base+0x16452>
   2d87b:	xor    edi,edi
   2d87d:	mov    rbx,rax
   2d880:	call   a040 <dcgettext@plt>
   2d885:	mov    r8,rbx
   2d888:	mov    rcx,r12
   2d88b:	xor    esi,esi
   2d88d:	mov    rdx,rax
   2d890:	xor    edi,edi
   2d892:	xor    eax,eax
   2d894:	call   a640 <error@plt>
   2d899:	call   190e0 <__sprintf_chk@plt+0xe730>
   2d89e:	mov    esi,DWORD PTR [rip+0x517dc]        # 7f080 <obstack_alloc_failed_handler@@Base+0x248>
   2d8a4:	test   esi,esi
   2d8a6:	je     2d8f1 <__sprintf_chk@plt+0x22f41>
   2d8a8:	mov    eax,DWORD PTR [rip+0x4e7f2]        # 7c0a0 <_obstack_memory_used@@Base+0x2f420>
   2d8ae:	test   eax,eax
   2d8b0:	je     2d8f1 <__sprintf_chk@plt+0x22f41>
   2d8b2:	lea    rdx,[rip+0x4e7ff]        # 7c0b8 <_obstack_memory_used@@Base+0x2f438>
   2d8b9:	xor    r15d,r15d
   2d8bc:	jmp    2d8ca <__sprintf_chk@plt+0x22f1a>
   2d8be:	xchg   ax,ax
   2d8c0:	mov    eax,DWORD PTR [rdx]
   2d8c2:	add    rdx,0x18
   2d8c6:	test   eax,eax
   2d8c8:	je     2d8f1 <__sprintf_chk@plt+0x22f41>
   2d8ca:	mov    ecx,r15d
   2d8cd:	add    r15d,0x1
   2d8d1:	cmp    esi,eax
   2d8d3:	jne    2d8c0 <__sprintf_chk@plt+0x22f10>
   2d8d5:	movsxd rax,ecx
   2d8d8:	lea    rdx,[rip+0x4e7c1]        # 7c0a0 <_obstack_memory_used@@Base+0x2f420>
   2d8df:	imul   rax,rax,0x18
   2d8e3:	mov    r12,QWORD PTR [rdx+rax*1+0x8]
   2d8e8:	test   r12,r12
   2d8eb:	jne    2d6dd <__sprintf_chk@plt+0x22d2d>
   2d8f1:	mov    rax,QWORD PTR [rip+0x51c10]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2d8f8:	test   rax,rax
   2d8fb:	je     2d8ff <__sprintf_chk@plt+0x22f4f>
   2d8fd:	call   rax
   2d8ff:	mov    edx,0x5
   2d904:	lea    rsi,[rip+0x3a0ad]        # 679b8 <_obstack_memory_used@@Base+0x1ad38>
   2d90b:	xor    edi,edi
   2d90d:	call   a040 <dcgettext@plt>
   2d912:	xor    esi,esi
   2d914:	xor    edi,edi
   2d916:	mov    rdx,rax
   2d919:	xor    eax,eax
   2d91b:	call   a640 <error@plt>
   2d920:	call   190e0 <__sprintf_chk@plt+0xe730>
   2d925:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2d930:	push   r12
   2d932:	push   rbp
   2d933:	mov    rbp,rdi
   2d936:	lea    rdi,[rip+0x39954]        # 67291 <_obstack_memory_used@@Base+0x1a611>
   2d93d:	push   rbx
   2d93e:	lea    rbx,[rip+0x4c7bb]        # 7a100 <_obstack_memory_used@@Base+0x2d480>
   2d945:	jmp    2d95d <__sprintf_chk@plt+0x22fad>
   2d947:	nop    WORD PTR [rax+rax*1+0x0]
   2d950:	mov    rdi,QWORD PTR [rbx+0x10]
   2d954:	add    rbx,0x10
   2d958:	test   rdi,rdi
   2d95b:	je     2d977 <__sprintf_chk@plt+0x22fc7>
   2d95d:	mov    rsi,rbp
   2d960:	call   a320 <strcmp@plt>
   2d965:	test   eax,eax
   2d967:	jne    2d950 <__sprintf_chk@plt+0x22fa0>
   2d969:	mov    eax,DWORD PTR [rbx+0x8]
   2d96c:	pop    rbx
   2d96d:	pop    rbp
   2d96e:	pop    r12
   2d970:	mov    DWORD PTR [rip+0x5192e],eax        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   2d976:	ret    
   2d977:	mov    rax,QWORD PTR [rip+0x51b8a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2d97e:	test   rax,rax
   2d981:	je     2d985 <__sprintf_chk@plt+0x22fd5>
   2d983:	call   rax
   2d985:	mov    rdi,rbp
   2d988:	call   4b670 <argp_usage@@Base+0x82f0>
   2d98d:	mov    edx,0x5
   2d992:	lea    rsi,[rip+0x38d32]        # 666cb <_obstack_memory_used@@Base+0x19a4b>
   2d999:	xor    edi,edi
   2d99b:	mov    r12,rax
   2d99e:	call   a040 <dcgettext@plt>
   2d9a3:	mov    rcx,r12
   2d9a6:	xor    esi,esi
   2d9a8:	xor    edi,edi
   2d9aa:	mov    rdx,rax
   2d9ad:	xor    eax,eax
   2d9af:	call   a640 <error@plt>
   2d9b4:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   2d9b9:	nop    DWORD PTR [rax+0x0]
   2d9c0:	push   r12
   2d9c2:	mov    r12,rdi
   2d9c5:	push   rbx
   2d9c6:	mov    rbx,rsi
   2d9c9:	sub    rsp,0x8
   2d9cd:	mov    rax,QWORD PTR [rip+0x51b34]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2d9d4:	test   rax,rax
   2d9d7:	je     2d9db <__sprintf_chk@plt+0x2302b>
   2d9d9:	call   rax
   2d9db:	mov    edx,0x5
   2d9e0:	lea    rsi,[rip+0x38cff]        # 666e6 <_obstack_memory_used@@Base+0x19a66>
   2d9e7:	xor    edi,edi
   2d9e9:	call   a040 <dcgettext@plt>
   2d9ee:	mov    r8,rbx
   2d9f1:	mov    rcx,r12
   2d9f4:	xor    esi,esi
   2d9f6:	mov    rdx,rax
   2d9f9:	xor    edi,edi
   2d9fb:	xor    eax,eax
   2d9fd:	call   a640 <error@plt>
   2da02:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   2da07:	nop    WORD PTR [rax+rax*1+0x0]
   2da10:	mov    eax,DWORD PTR [rip+0x51b62]        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   2da16:	cmp    eax,edi
   2da18:	je     2da1e <__sprintf_chk@plt+0x2306e>
   2da1a:	test   eax,eax
   2da1c:	jne    2da25 <__sprintf_chk@plt+0x23075>
   2da1e:	mov    DWORD PTR [rip+0x51b54],edi        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   2da24:	ret    
   2da25:	push   rax
   2da26:	mov    rax,QWORD PTR [rip+0x51adb]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2da2d:	test   rax,rax
   2da30:	je     2da34 <__sprintf_chk@plt+0x23084>
   2da32:	call   rax
   2da34:	mov    edx,0x5
   2da39:	lea    rsi,[rip+0x39fa0]        # 679e0 <_obstack_memory_used@@Base+0x1ad60>
   2da40:	xor    edi,edi
   2da42:	call   a040 <dcgettext@plt>
   2da47:	xor    esi,esi
   2da49:	xor    edi,edi
   2da4b:	mov    rdx,rax
   2da4e:	xor    eax,eax
   2da50:	call   a640 <error@plt>
   2da55:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   2da5a:	nop    WORD PTR [rax+rax*1+0x0]
   2da60:	sub    rsp,0x8
   2da64:	lea    rsi,[rip+0x3983d]        # 672a8 <_obstack_memory_used@@Base+0x1a628>
   2da6b:	lea    rax,[rip+0x4c68e]        # 7a100 <_obstack_memory_used@@Base+0x2d480>
   2da72:	jmp    2da7c <__sprintf_chk@plt+0x230cc>
   2da74:	nop    DWORD PTR [rax+0x0]
   2da78:	mov    rsi,QWORD PTR [rax+0x10]
   2da7c:	add    rax,0x10
   2da80:	test   rsi,rsi
   2da83:	je     2dac8 <__sprintf_chk@plt+0x23118>
   2da85:	cmp    DWORD PTR [rax+0x8],0x6
   2da89:	jne    2da78 <__sprintf_chk@plt+0x230c8>
   2da8b:	sub    rsp,0x8
   2da8f:	lea    rax,[rip+0x38c7c]        # 66712 <_obstack_memory_used@@Base+0x19a92>
   2da96:	lea    r9,[rip+0x38c67]        # 66704 <_obstack_memory_used@@Base+0x19a84>
   2da9d:	mov    ecx,0x14
   2daa2:	push   rax
   2daa3:	lea    r8,[rip+0x39eb5]        # 6795f <_obstack_memory_used@@Base+0x1acdf>
   2daaa:	lea    rdx,[rip+0x38c8d]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   2dab1:	xor    eax,eax
   2dab3:	lea    rdi,[rip+0x39f7e]        # 67a38 <_obstack_memory_used@@Base+0x1adb8>
   2daba:	call   4bc20 <argp_usage@@Base+0x88a0>
   2dabf:	add    rsp,0x18
   2dac3:	ret    
   2dac4:	nop    DWORD PTR [rax+0x0]
   2dac8:	lea    rsi,[rip+0x35620]        # 630ef <_obstack_memory_used@@Base+0x1646f>
   2dacf:	jmp    2da8b <__sprintf_chk@plt+0x230db>
   2dad1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2dadc:	nop    DWORD PTR [rax+0x0]
   2dae0:	push   r14
   2dae2:	push   r13
   2dae4:	push   r12
   2dae6:	mov    r12,rsi
   2dae9:	push   rbp
   2daea:	mov    ebp,edi
   2daec:	push   rbx
   2daed:	mov    r14,QWORD PTR [rsi+0x8]
   2daf1:	test   r14,r14
   2daf4:	je     2db58 <__sprintf_chk@plt+0x231a8>
   2daf6:	mov    rdi,r14
   2daf9:	call   a060 <strlen@plt>
   2dafe:	lea    rdi,[rax+0x21]
   2db02:	mov    r13,rax
   2db05:	call   a4a0 <malloc@plt>
   2db0a:	mov    rbx,rax
   2db0d:	test   rax,rax
   2db10:	je     2db78 <__sprintf_chk@plt+0x231c8>
   2db12:	lea    rcx,[rax+0x20]
   2db16:	lea    rdx,[r13+0x1]
   2db1a:	mov    rsi,r14
   2db1d:	mov    rdi,rcx
   2db20:	call   a420 <memcpy@plt>
   2db25:	mov    QWORD PTR [rbx+0x8],rax
   2db29:	mov    eax,DWORD PTR [r12]
   2db2d:	lea    rdx,[rip+0x5210c]        # 7fc40 <argp_program_version_hook@@Base+0x68>
   2db34:	mov    DWORD PTR [rbx],eax
   2db36:	mov    rax,QWORD PTR [r12+0x10]
   2db3b:	mov    QWORD PTR [rbx+0x10],rax
   2db3f:	mov    rax,QWORD PTR [rdx+rbp*8]
   2db43:	mov    QWORD PTR [rdx+rbp*8],rbx
   2db47:	mov    QWORD PTR [rbx+0x18],rax
   2db4b:	pop    rbx
   2db4c:	pop    rbp
   2db4d:	pop    r12
   2db4f:	pop    r13
   2db51:	pop    r14
   2db53:	ret    
   2db54:	nop    DWORD PTR [rax+0x0]
   2db58:	mov    edi,0x20
   2db5d:	call   a4a0 <malloc@plt>
   2db62:	mov    rbx,rax
   2db65:	test   rax,rax
   2db68:	je     2db78 <__sprintf_chk@plt+0x231c8>
   2db6a:	mov    QWORD PTR [rbx+0x8],0x0
   2db72:	jmp    2db29 <__sprintf_chk@plt+0x23179>
   2db74:	nop    DWORD PTR [rax+0x0]
   2db78:	call   19130 <__sprintf_chk@plt+0xe780>
   2db7d:	nop    DWORD PTR [rax]
   2db80:	push   rbp
   2db81:	push   rbx
   2db82:	mov    rbx,rdi
   2db85:	xor    edi,edi
   2db87:	sub    rsp,0x8
   2db8b:	call   2dae0 <__sprintf_chk@plt+0x23130>
   2db90:	mov    rdi,QWORD PTR [rip+0x519d1]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   2db97:	test   rdi,rdi
   2db9a:	je     2dbb1 <__sprintf_chk@plt+0x23201>
   2db9c:	mov    rsi,rbx
   2db9f:	mov    rbp,rax
   2dba2:	call   a320 <strcmp@plt>
   2dba7:	test   eax,eax
   2dba9:	je     2dbb1 <__sprintf_chk@plt+0x23201>
   2dbab:	cmp    DWORD PTR [rbp+0x0],0x1
   2dbaf:	je     2dbbf <__sprintf_chk@plt+0x2320f>
   2dbb1:	mov    QWORD PTR [rip+0x519b0],rbx        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   2dbb8:	add    rsp,0x8
   2dbbc:	pop    rbx
   2dbbd:	pop    rbp
   2dbbe:	ret    
   2dbbf:	mov    rax,QWORD PTR [rip+0x51942]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2dbc6:	test   rax,rax
   2dbc9:	je     2dbcd <__sprintf_chk@plt+0x2321d>
   2dbcb:	call   rax
   2dbcd:	mov    edx,0x5
   2dbd2:	lea    rsi,[rip+0x39eaf]        # 67a88 <_obstack_memory_used@@Base+0x1ae08>
   2dbd9:	xor    edi,edi
   2dbdb:	call   a040 <dcgettext@plt>
   2dbe0:	xor    esi,esi
   2dbe2:	xor    edi,edi
   2dbe4:	mov    rdx,rax
   2dbe7:	xor    eax,eax
   2dbe9:	call   a640 <error@plt>
   2dbee:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   2dbf3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2dbfe:	xchg   ax,ax
   2dc00:	push   rbp
   2dc01:	movsxd rbp,edi
   2dc04:	mov    edi,0x9
   2dc09:	push   rbx
   2dc0a:	mov    rbx,rsi
   2dc0d:	sub    rsp,0x8
   2dc11:	call   2dae0 <__sprintf_chk@plt+0x23130>
   2dc16:	test   rax,rax
   2dc19:	je     2dc41 <__sprintf_chk@plt+0x23291>
   2dc1b:	mov    edx,DWORD PTR [rbx]
   2dc1d:	cmp    edx,DWORD PTR [rax]
   2dc1f:	jne    2dc41 <__sprintf_chk@plt+0x23291>
   2dc21:	cmp    edx,0x1
   2dc24:	je     2dc37 <__sprintf_chk@plt+0x23287>
   2dc26:	mov    rsi,QWORD PTR [rax+0x8]
   2dc2a:	mov    rdi,QWORD PTR [rbx+0x8]
   2dc2e:	call   a320 <strcmp@plt>
   2dc33:	test   eax,eax
   2dc35:	jne    2dc41 <__sprintf_chk@plt+0x23291>
   2dc37:	mov    eax,DWORD PTR [rip+0x51af7]        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   2dc3d:	cmp    eax,ebp
   2dc3f:	jne    2dc4e <__sprintf_chk@plt+0x2329e>
   2dc41:	mov    DWORD PTR [rip+0x51aed],ebp        # 7f734 <obstack_alloc_failed_handler@@Base+0x8fc>
   2dc47:	add    rsp,0x8
   2dc4b:	pop    rbx
   2dc4c:	pop    rbp
   2dc4d:	ret    
   2dc4e:	lea    rdx,[rip+0x4cd0b]        # 7a960 <_obstack_memory_used@@Base+0x2dce0>
   2dc55:	mov    rsi,QWORD PTR [rdx+rax*8]
   2dc59:	mov    rdi,QWORD PTR [rdx+rbp*8]
   2dc5d:	call   2d9c0 <__sprintf_chk@plt+0x23010>
   2dc62:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2dc6d:	nop    DWORD PTR [rax]
   2dc70:	endbr64 
   2dc74:	push   rbp
   2dc75:	mov    ebp,edi
   2dc77:	call   dbf0 <__sprintf_chk@plt+0x3240>
   2dc7c:	mov    ecx,0xa
   2dc81:	mov    edx,0xa
   2dc86:	mov    rax,QWORD PTR [rip+0x4e35b]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   2dc8d:	lea    rsi,[rip+0x4c4dc]        # 7a170 <_obstack_memory_used@@Base+0x2d4f0>
   2dc94:	mov    rdi,QWORD PTR [rax]
   2dc97:	call   dc90 <__sprintf_chk@plt+0x32e0>
   2dc9c:	mov    edi,ebp
   2dc9e:	lea    rsi,[rip+0xffffffffffffffcb]        # 2dc70 <__sprintf_chk@plt+0x232c0>
   2dca5:	pop    rbp
   2dca6:	jmp    a330 <signal@plt>
   2dcab:	nop    DWORD PTR [rax+rax*1+0x0]
   2dcb0:	push   r15
   2dcb2:	push   r14
   2dcb4:	mov    r14,rdx
   2dcb7:	push   r13
   2dcb9:	push   r12
   2dcbb:	push   rbp
   2dcbc:	push   rbx
   2dcbd:	sub    rsp,0x8c8
   2dcc4:	mov    QWORD PTR [rsp+0x10],rdi
   2dcc9:	mov    QWORD PTR [rsp+0x18],rsi
   2dcce:	mov    QWORD PTR [rsp+0x8],rcx
   2dcd3:	mov    rax,QWORD PTR fs:0x28
   2dcdc:	mov    QWORD PTR [rsp+0x8b8],rax
   2dce4:	xor    eax,eax
   2dce6:	movzx  eax,BYTE PTR [rdx]
   2dce9:	sub    eax,0x2e
   2dcec:	cmp    al,0x1
   2dcee:	ja     2dd50 <__sprintf_chk@plt+0x233a0>
   2dcf0:	lea    rsi,[rsp+0x450]
   2dcf8:	mov    rdi,rdx
   2dcfb:	call   a400 <stat@plt>
   2dd00:	test   eax,eax
   2dd02:	jne    31fa5 <__sprintf_chk@plt+0x275f5>
   2dd08:	mov    rdx,QWORD PTR [rsp+0x4a8]
   2dd10:	mov    rsi,QWORD PTR [rsp+0x8]
   2dd15:	mov    QWORD PTR [rsi],rdx
   2dd18:	mov    rdx,QWORD PTR [rsp+0x4b0]
   2dd20:	mov    QWORD PTR [rsi+0x8],rdx
   2dd24:	mov    rdx,QWORD PTR [rsp+0x8b8]
   2dd2c:	sub    rdx,QWORD PTR fs:0x28
   2dd35:	jne    31fa0 <__sprintf_chk@plt+0x275f0>
   2dd3b:	add    rsp,0x8c8
   2dd42:	pop    rbx
   2dd43:	pop    rbp
   2dd44:	pop    r12
   2dd46:	pop    r13
   2dd48:	pop    r14
   2dd4a:	pop    r15
   2dd4c:	ret    
   2dd4d:	nop    DWORD PTR [rax]
   2dd50:	lea    rdi,[rip+0x38a04]        # 6675b <_obstack_memory_used@@Base+0x19adb>
   2dd57:	call   9d40 <getenv@plt>
   2dd5c:	mov    rdi,rax
   2dd5f:	mov    QWORD PTR [rsp+0x20],rax
   2dd64:	call   56f90 <_obstack_memory_used@@Base+0xa310>
   2dd69:	mov    rbx,rax
   2dd6c:	test   rax,rax
   2dd6f:	je     2e5b0 <__sprintf_chk@plt+0x23c00>
   2dd75:	mov    rdi,r14
   2dd78:	lea    r12,[rsp+0xd0]
   2dd80:	mov    r13,r14
   2dd83:	call   a060 <strlen@plt>
   2dd88:	mov    rsi,r12
   2dd8b:	xor    edi,edi
   2dd8d:	mov    QWORD PTR [rsp+0x68],rax
   2dd92:	call   9f70 <clock_gettime@plt>
   2dd97:	mov    rax,QWORD PTR [rsp+0xd0]
   2dd9f:	mov    rbp,QWORD PTR [rsp+0xd8]
   2dda7:	mov    QWORD PTR [rsp+0x28],rax
   2ddac:	movzx  eax,BYTE PTR [r13+0x0]
   2ddb1:	cmp    al,0xd
   2ddb3:	jg     2e320 <__sprintf_chk@plt+0x23970>
   2ddb9:	cmp    al,0x8
   2ddbb:	jg     2e328 <__sprintf_chk@plt+0x23978>
   2ddc1:	mov    edx,0x4
   2ddc6:	lea    rsi,[rip+0x38991]        # 6675e <_obstack_memory_used@@Base+0x19ade>
   2ddcd:	mov    rdi,r13
   2ddd0:	call   9e50 <strncmp@plt>
   2ddd5:	test   eax,eax
   2ddd7:	jne    2de30 <__sprintf_chk@plt+0x23480>
   2ddd9:	movzx  r15d,BYTE PTR [r13+0x4]
   2ddde:	lea    rcx,[r13+0x4]
   2dde2:	test   r15b,r15b
   2dde5:	je     2de30 <__sprintf_chk@plt+0x23480>
   2dde7:	mov    rdx,rcx
   2ddea:	mov    eax,r15d
   2dded:	mov    edi,0x1
   2ddf2:	jmp    2de13 <__sprintf_chk@plt+0x23463>
   2ddf4:	nop    DWORD PTR [rax+0x0]
   2ddf8:	cmp    al,0x22
   2ddfa:	je     2e520 <__sprintf_chk@plt+0x23b70>
   2de00:	mov    rax,rdx
   2de03:	lea    rdx,[rax+0x1]
   2de07:	movzx  eax,BYTE PTR [rax+0x1]
   2de0b:	add    rdi,0x1
   2de0f:	test   al,al
   2de11:	je     2de30 <__sprintf_chk@plt+0x23480>
   2de13:	cmp    al,0x5c
   2de15:	jne    2ddf8 <__sprintf_chk@plt+0x23448>
   2de17:	lea    rax,[rdx+0x1]
   2de1b:	movzx  edx,BYTE PTR [rdx+0x1]
   2de1f:	cmp    dl,0x5c
   2de22:	je     2de03 <__sprintf_chk@plt+0x23453>
   2de24:	cmp    dl,0x22
   2de27:	je     2de03 <__sprintf_chk@plt+0x23453>
   2de29:	nop    DWORD PTR [rax+0x0]
   2de30:	lea    rdx,[rsp+0x160]
   2de38:	mov    rsi,r12
   2de3b:	mov    rdi,rbx
   2de3e:	call   57260 <_obstack_memory_used@@Base+0xa5e0>
   2de43:	test   rax,rax
   2de46:	je     2eeb0 <__sprintf_chk@plt+0x24500>
   2de4c:	mov    QWORD PTR [rsp+0x60],0x0
   2de55:	mov    r15,rbx
   2de58:	cmp    BYTE PTR [r13+0x0],0x0
   2de5d:	movsxd rbp,ebp
   2de60:	lea    rax,[rip+0x3e426]        # 6c28d <_obstack_memory_used@@Base+0x1f60d>
   2de67:	mov    QWORD PTR [rsp+0x360],0x0
   2de73:	cmove  r13,rax
   2de77:	xor    r11d,r11d
   2de7a:	movsxd rax,DWORD PTR [rsp+0x174]
   2de82:	mov    QWORD PTR [rsp+0x390],rbp
   2de8a:	mov    DWORD PTR [rsp+0x34c],0x2
   2de95:	mov    ebp,0x76a700
   2de9a:	lea    r12,[rsp+0x1e0]
   2dea2:	add    rax,0x76c
   2dea8:	mov    QWORD PTR [rsp+0x330],r13
   2deb0:	mov    QWORD PTR [rsp+0x358],rax
   2deb8:	mov    eax,DWORD PTR [rsp+0x170]
   2debf:	mov    QWORD PTR [rsp+0x398],0x0
   2decb:	mov    QWORD PTR [rsp+0x3a0],0x0
   2ded7:	add    eax,0x1
   2deda:	mov    QWORD PTR [rsp+0x3a8],0x0
   2dee6:	cdqe   
   2dee8:	mov    QWORD PTR [rsp+0x368],rax
   2def0:	movsxd rax,DWORD PTR [rsp+0x16c]
   2def8:	mov    QWORD PTR [rsp+0x3b0],0x0
   2df04:	mov    QWORD PTR [rsp+0x370],rax
   2df0c:	movsxd rax,DWORD PTR [rsp+0x168]
   2df14:	mov    QWORD PTR [rsp+0x3b8],0x0
   2df20:	mov    QWORD PTR [rsp+0x378],rax
   2df28:	movsxd rax,DWORD PTR [rsp+0x164]
   2df30:	mov    QWORD PTR [rsp+0x3c0],0x0
   2df3c:	mov    QWORD PTR [rsp+0x380],rax
   2df44:	movsxd rax,DWORD PTR [rsp+0x160]
   2df4c:	mov    DWORD PTR [rsp+0x3c8],0x0
   2df57:	mov    QWORD PTR [rsp+0x388],rax
   2df5f:	mov    eax,DWORD PTR [rsp+0x180]
   2df66:	mov    WORD PTR [rsp+0x3d0],r11w
   2df6f:	mov    DWORD PTR [rsp+0x100],eax
   2df76:	mov    QWORD PTR [rsp+0x3d8],0x0
   2df82:	mov    QWORD PTR [rsp+0x3e0],0x0
   2df8e:	mov    QWORD PTR [rsp+0x3e8],0x0
   2df9a:	mov    QWORD PTR [rsp+0x3f0],0x0
   2dfa6:	mov    QWORD PTR [rsp+0x3f8],0x0
   2dfb2:	mov    QWORD PTR [rsp+0x400],0x0
   2dfbe:	mov    rdx,QWORD PTR [rsp+0x190]
   2dfc6:	mov    BYTE PTR [rsp+0x410],0x0
   2dfce:	mov    r13,QWORD PTR [rsp+0x28]
   2dfd3:	mov    QWORD PTR [rsp+0x408],0x0
   2dfdf:	mov    QWORD PTR [rsp+0x418],rdx
   2dfe7:	mov    DWORD PTR [rsp+0x420],0x10d
   2dff2:	mov    DWORD PTR [rsp+0x424],eax
   2dff9:	mov    QWORD PTR [rsp+0x428],0x0
   2e005:	movsxd rax,ebp
   2e008:	add    rax,r13
   2e00b:	mov    QWORD PTR [rsp+0x1a0],rax
   2e013:	jo     2e05c <__sprintf_chk@plt+0x236ac>
   2e015:	lea    rsi,[rsp+0x1a0]
   2e01d:	mov    rdx,r12
   2e020:	mov    rdi,r15
   2e023:	call   57260 <_obstack_memory_used@@Base+0xa5e0>
   2e028:	test   rax,rax
   2e02b:	je     2e04e <__sprintf_chk@plt+0x2369e>
   2e02d:	mov    rax,QWORD PTR [rsp+0x210]
   2e035:	test   rax,rax
   2e038:	je     2e04e <__sprintf_chk@plt+0x2369e>
   2e03a:	mov    edx,DWORD PTR [rsp+0x200]
   2e041:	cmp    edx,DWORD PTR [rsp+0x424]
   2e048:	jne    30bc8 <__sprintf_chk@plt+0x26218>
   2e04e:	add    ebp,0x76a700
   2e054:	cmp    ebp,0x1da9c00
   2e05a:	jne    2e005 <__sprintf_chk@plt+0x23655>
   2e05c:	mov    rdi,QWORD PTR [rsp+0x418]
   2e064:	test   rdi,rdi
   2e067:	je     2e096 <__sprintf_chk@plt+0x236e6>
   2e069:	mov    rsi,QWORD PTR [rsp+0x428]
   2e071:	test   rsi,rsi
   2e074:	je     2e096 <__sprintf_chk@plt+0x236e6>
   2e076:	call   a320 <strcmp@plt>
   2e07b:	test   eax,eax
   2e07d:	jne    2e096 <__sprintf_chk@plt+0x236e6>
   2e07f:	mov    DWORD PTR [rsp+0x424],0xffffffff
   2e08a:	mov    QWORD PTR [rsp+0x428],0x0
   2e096:	xor    r10d,r10d
   2e099:	mov    eax,0x26
   2e09e:	mov    QWORD PTR [rsp+0x40],r15
   2e0a3:	xor    r12d,r12d
   2e0a6:	lea    rbp,[rsp+0x250]
   2e0ae:	mov    r9d,0xfffffffe
   2e0b4:	mov    QWORD PTR [rsp+0x48],rbx
   2e0b9:	lea    rcx,[rsp+0x450]
   2e0c1:	mov    QWORD PTR [rsp+0x50],r14
   2e0c6:	mov    r13,rbp
   2e0c9:	mov    rbx,rbp
   2e0cc:	mov    r15,rcx
   2e0cf:	mov    WORD PTR [rsp+0x250],r10w
   2e0d8:	mov    ebp,r9d
   2e0db:	movsx  r14d,al
   2e0df:	mov    QWORD PTR [rsp+0x70],rcx
   2e0e4:	mov    DWORD PTR [rsp+0x58],0x0
   2e0ec:	cmp    al,0xa3
   2e0ee:	je     2e230 <__sprintf_chk@plt+0x23880>
   2e0f4:	cmp    ebp,0xfffffffe
   2e0f7:	je     2eb50 <__sprintf_chk@plt+0x241a0>
   2e0fd:	test   ebp,ebp
   2e0ff:	jle    2e628 <__sprintf_chk@plt+0x23c78>
   2e105:	cmp    ebp,0x115
   2e10b:	jle    2edf0 <__sprintf_chk@plt+0x24440>
   2e111:	add    r14d,0x2
   2e115:	mov    edx,0x2
   2e11a:	cmp    r14d,0x70
   2e11e:	ja     2e230 <__sprintf_chk@plt+0x23880>
   2e124:	movsxd r8,r14d
   2e127:	lea    rax,[rip+0x3cf92]        # 6b0c0 <_obstack_memory_used@@Base+0x1e440>
   2e12e:	movsx  eax,BYTE PTR [rax+r8*1]
   2e133:	cmp    edx,eax
   2e135:	jne    2e230 <__sprintf_chk@plt+0x23880>
   2e13b:	lea    rax,[rip+0x3cefe]        # 6b040 <_obstack_memory_used@@Base+0x1e3c0>
   2e142:	movzx  r12d,BYTE PTR [rax+r8*1]
   2e147:	test   r12d,r12d
   2e14a:	jne    2ed60 <__sprintf_chk@plt+0x243b0>
   2e150:	mov    rax,QWORD PTR [r15+0x48]
   2e154:	mov    r12,QWORD PTR [r15+0x38]
   2e158:	mov    rdx,r13
   2e15b:	mov    r14,r15
   2e15e:	mov    r11,QWORD PTR [r15+0x40]
   2e162:	mov    r9,QWORD PTR [r15+0x60]
   2e166:	mov    ecx,0xffffffe4
   2e16b:	mov    r10d,DWORD PTR [r15+0x68]
   2e16f:	movsx  edi,BYTE PTR [rip+0x3cd4e]        # 6aec4 <_obstack_memory_used@@Base+0x1e244>
   2e176:	mov    QWORD PTR [rsp+0x28],rax
   2e17b:	mov    rax,QWORD PTR [r15+0x50]
   2e17f:	mov    QWORD PTR [rsp+0x30],rax
   2e184:	mov    rax,QWORD PTR [r15+0x58]
   2e188:	mov    QWORD PTR [rsp+0x38],rax
   2e18d:	nop    DWORD PTR [rax]
   2e190:	mov    rax,QWORD PTR [rsp+0x28]
   2e195:	mov    QWORD PTR [r14+0x38],r12
   2e199:	lea    r15,[r14+0x38]
   2e19d:	mov    QWORD PTR [r14+0x40],r11
   2e1a1:	mov    QWORD PTR [r14+0x48],rax
   2e1a5:	mov    rax,QWORD PTR [rsp+0x30]
   2e1aa:	mov    QWORD PTR [r14+0x60],r9
   2e1ae:	mov    QWORD PTR [r14+0x50],rax
   2e1b2:	mov    rax,QWORD PTR [rsp+0x38]
   2e1b7:	mov    DWORD PTR [r14+0x68],r10d
   2e1bb:	mov    QWORD PTR [r14+0x58],rax
   2e1bf:	movsx  eax,WORD PTR [rdx]
   2e1c2:	mov    esi,eax
   2e1c4:	add    eax,edi
   2e1c6:	cmp    eax,0x70
   2e1c9:	ja     2e1e2 <__sprintf_chk@plt+0x23832>
   2e1cb:	cdqe   
   2e1cd:	lea    rdi,[rip+0x3ceec]        # 6b0c0 <_obstack_memory_used@@Base+0x1e440>
   2e1d4:	movsx  di,BYTE PTR [rdi+rax*1]
   2e1d9:	cmp    si,di
   2e1dc:	je     305a8 <__sprintf_chk@plt+0x25bf8>
   2e1e2:	movsxd rcx,ecx
   2e1e5:	lea    rax,[rip+0x3ccd4]        # 6aec0 <_obstack_memory_used@@Base+0x1e240>
   2e1ec:	movsx  r12,BYTE PTR [rax+rcx*1]
   2e1f1:	lea    r13,[rdx+0x2]
   2e1f5:	lea    rax,[rsp+0x276]
   2e1fd:	mov    WORD PTR [rdx+0x2],r12w
   2e202:	cmp    r13,rax
   2e205:	jae    2e3f8 <__sprintf_chk@plt+0x23a48>
   2e20b:	cmp    r12d,0xc
   2e20f:	je     2e631 <__sprintf_chk@plt+0x23c81>
   2e215:	lea    rdx,[rip+0x3d044]        # 6b260 <_obstack_memory_used@@Base+0x1e5e0>
   2e21c:	movsxd rax,r12d
   2e21f:	movzx  eax,BYTE PTR [rdx+rax*1]
   2e223:	movsx  r14d,al
   2e227:	cmp    al,0xa3
   2e229:	jne    2e0f4 <__sprintf_chk@plt+0x23744>
   2e22f:	nop
   2e230:	lea    rax,[rip+0x3cd89]        # 6afc0 <_obstack_memory_used@@Base+0x1e340>
   2e237:	movzx  ecx,BYTE PTR [rax+r12*1]
   2e23c:	mov    eax,ecx
   2e23e:	test   ecx,ecx
   2e240:	jne    2e338 <__sprintf_chk@plt+0x23988>
   2e246:	cmp    DWORD PTR [rsp+0x58],0x3
   2e24b:	jne    2e25b <__sprintf_chk@plt+0x238ab>
   2e24d:	test   ebp,ebp
   2e24f:	jg     2ee10 <__sprintf_chk@plt+0x24460>
   2e255:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2e25b:	lea    rdx,[rip+0x3cffe]        # 6b260 <_obstack_memory_used@@Base+0x1e5e0>
   2e262:	jmp    2e27e <__sprintf_chk@plt+0x238ce>
   2e264:	nop    DWORD PTR [rax+0x0]
   2e268:	cmp    r13,rbx
   2e26b:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2e271:	movsx  r12,WORD PTR [r13-0x2]
   2e276:	sub    r13,0x2
   2e27a:	sub    r15,0x38
   2e27e:	movsx  eax,BYTE PTR [rdx+r12*1]
   2e283:	cmp    eax,0xffffffa3
   2e286:	je     2e268 <__sprintf_chk@plt+0x238b8>
   2e288:	add    eax,0x1
   2e28b:	cmp    eax,0x70
   2e28e:	ja     2e268 <__sprintf_chk@plt+0x238b8>
   2e290:	cdqe   
   2e292:	lea    rcx,[rip+0x3ce27]        # 6b0c0 <_obstack_memory_used@@Base+0x1e440>
   2e299:	cmp    BYTE PTR [rcx+rax*1],0x1
   2e29d:	jne    2e268 <__sprintf_chk@plt+0x238b8>
   2e29f:	lea    rcx,[rip+0x3cd9a]        # 6b040 <_obstack_memory_used@@Base+0x1e3c0>
   2e2a6:	movzx  r12d,BYTE PTR [rcx+rax*1]
   2e2ab:	test   r12d,r12d
   2e2ae:	je     2e268 <__sprintf_chk@plt+0x238b8>
   2e2b0:	mov    rax,QWORD PTR [rsp+0x78]
   2e2b5:	mov    DWORD PTR [rsp+0x58],0x3
   2e2bd:	add    r15,0x38
   2e2c1:	mov    rdx,r13
   2e2c4:	movdqa xmm7,XMMWORD PTR [rsp+0x200]
   2e2cd:	mov    QWORD PTR [rsp+0x1e8],rax
   2e2d5:	mov    rax,QWORD PTR [rsp+0x80]
   2e2dd:	movdqa xmm5,XMMWORD PTR [rsp+0x1e0]
   2e2e6:	movups XMMWORD PTR [r15+0x20],xmm7
   2e2eb:	mov    QWORD PTR [rsp+0x1f0],rax
   2e2f3:	mov    rax,QWORD PTR [rsp+0x210]
   2e2fb:	movdqa xmm6,XMMWORD PTR [rsp+0x1f0]
   2e304:	movups XMMWORD PTR [r15],xmm5
   2e308:	mov    QWORD PTR [r15+0x30],rax
   2e30c:	movups XMMWORD PTR [r15+0x10],xmm6
   2e311:	jmp    2e1f1 <__sprintf_chk@plt+0x23841>
   2e316:	cs nop WORD PTR [rax+rax*1+0x0]
   2e320:	cmp    al,0x20
   2e322:	jne    2ddc1 <__sprintf_chk@plt+0x23411>
   2e328:	add    r13,0x1
   2e32c:	jmp    2ddac <__sprintf_chk@plt+0x233fc>
   2e331:	nop    DWORD PTR [rax+0x0]
   2e338:	lea    rdx,[rip+0x3cc21]        # 6af60 <_obstack_memory_used@@Base+0x1e2e0>
   2e33f:	movsxd rcx,ecx
   2e342:	sub    eax,0x4
   2e345:	movzx  edi,BYTE PTR [rdx+rcx*1]
   2e349:	mov    edx,0x1
   2e34e:	sub    edx,edi
   2e350:	mov    rsi,rdi
   2e353:	movsxd rdx,edx
   2e356:	lea    rdi,[rdx*8+0x0]
   2e35e:	sub    rdi,rdx
   2e361:	lea    rdx,[r15+rdi*8]
   2e365:	mov    rdi,QWORD PTR [rdx+0x10]
   2e369:	mov    r12,QWORD PTR [rdx]
   2e36c:	mov    r11,QWORD PTR [rdx+0x8]
   2e370:	mov    r9,QWORD PTR [rdx+0x28]
   2e374:	mov    QWORD PTR [rsp+0x28],rdi
   2e379:	mov    rdi,QWORD PTR [rdx+0x18]
   2e37d:	mov    r10d,DWORD PTR [rdx+0x30]
   2e381:	mov    QWORD PTR [rsp+0x30],rdi
   2e386:	mov    rdi,QWORD PTR [rdx+0x20]
   2e38a:	mov    QWORD PTR [rsp+0x38],rdi
   2e38f:	cmp    al,0x57
   2e391:	ja     2eec2 <__sprintf_chk@plt+0x24512>
   2e397:	lea    rdx,[rip+0x3bf02]        # 6a2a0 <_obstack_memory_used@@Base+0x1d620>
   2e39e:	movzx  eax,al
   2e3a1:	movsxd rax,DWORD PTR [rdx+rax*4]
   2e3a5:	add    rax,rdx
   2e3a8:	notrack jmp rax
   2e3ab:	movabs rdx,0x8000000000000000
   2e3b5:	mov    rax,QWORD PTR [r15-0x70]
   2e3b9:	mov    QWORD PTR [rsp+0x368],rax
   2e3c1:	mov    rax,QWORD PTR [r15-0x30]
   2e3c5:	mov    rcx,rax
   2e3c8:	neg    rcx
   2e3cb:	mov    QWORD PTR [rsp+0x370],rcx
   2e3d3:	cmp    rax,rdx
   2e3d6:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2e3d8:	mov    rax,QWORD PTR [r15+0x8]
   2e3dc:	mov    rcx,rax
   2e3df:	neg    rcx
   2e3e2:	mov    QWORD PTR [rsp+0x358],rcx
   2e3ea:	cmp    rax,rdx
   2e3ed:	jne    3030c <__sprintf_chk@plt+0x2595c>
   2e3f3:	nop    DWORD PTR [rax+rax*1+0x0]
   2e3f8:	movzx  r13d,BYTE PTR [rsp+0x409]
   2e401:	mov    r15,QWORD PTR [rsp+0x40]
   2e406:	mov    rbx,QWORD PTR [rsp+0x48]
   2e40b:	mov    r14,QWORD PTR [rsp+0x50]
   2e410:	test   r13b,r13b
   2e413:	je     2e458 <__sprintf_chk@plt+0x23aa8>
   2e415:	mov    rax,QWORD PTR [rsp+0x68]
   2e41a:	mov    rbp,QWORD PTR [rsp+0x330]
   2e422:	mov    edx,0x5
   2e427:	add    rax,r14
   2e42a:	cmp    rbp,rax
   2e42d:	jae    2ef23 <__sprintf_chk@plt+0x24573>
   2e433:	xor    edi,edi
   2e435:	lea    rsi,[rip+0x396ec]        # 67b28 <_obstack_memory_used@@Base+0x1aea8>
   2e43c:	call   a040 <dcgettext@plt>
   2e441:	mov    rdi,rax
   2e444:	mov    rsi,rbp
   2e447:	xor    eax,eax
   2e449:	xor    r13d,r13d
   2e44c:	call   49610 <argp_usage@@Base+0x6290>
   2e451:	nop    DWORD PTR [rax+0x0]
   2e458:	cmp    rbx,r15
   2e45b:	je     2e478 <__sprintf_chk@plt+0x23ac8>
   2e45d:	cmp    r15,0x1
   2e461:	je     2e478 <__sprintf_chk@plt+0x23ac8>
   2e463:	nop    DWORD PTR [rax+rax*1+0x0]
   2e468:	mov    rdi,r15
   2e46b:	mov    r15,QWORD PTR [r15]
   2e46e:	call   9ce0 <free@plt>
   2e473:	test   r15,r15
   2e476:	jne    2e468 <__sprintf_chk@plt+0x23ab8>
   2e478:	mov    rdi,QWORD PTR [rsp+0x60]
   2e47d:	call   9ce0 <free@plt>
   2e482:	cmp    rbx,0x1
   2e486:	je     2e4a0 <__sprintf_chk@plt+0x23af0>
   2e488:	nop    DWORD PTR [rax+rax*1+0x0]
   2e490:	mov    rdi,rbx
   2e493:	mov    rbx,QWORD PTR [rbx]
   2e496:	call   9ce0 <free@plt>
   2e49b:	test   rbx,rbx
   2e49e:	jne    2e490 <__sprintf_chk@plt+0x23ae0>
   2e4a0:	test   r13b,r13b
   2e4a3:	je     2e5b0 <__sprintf_chk@plt+0x23c00>
   2e4a9:	mov    edi,0x28
   2e4ae:	call   a4a0 <malloc@plt>
   2e4b3:	mov    rbx,rax
   2e4b6:	test   rax,rax
   2e4b9:	je     32114 <__sprintf_chk@plt+0x27764>
   2e4bf:	mov    rax,QWORD PTR [rsp+0x8]
   2e4c4:	mov    rdi,r14
   2e4c7:	movdqu xmm0,XMMWORD PTR [rax]
   2e4cb:	mov    rax,QWORD PTR [rsp+0x18]
   2e4d0:	mov    QWORD PTR [rbx+0x18],rax
   2e4d4:	movups XMMWORD PTR [rbx+0x8],xmm0
   2e4d8:	call   a060 <strlen@plt>
   2e4dd:	lea    r12,[rax+0x1]
   2e4e1:	mov    rdi,r12
   2e4e4:	call   a4a0 <malloc@plt>
   2e4e9:	mov    rdi,rax
   2e4ec:	test   rax,rax
   2e4ef:	je     32114 <__sprintf_chk@plt+0x27764>
   2e4f5:	mov    rdx,r12
   2e4f8:	mov    rsi,r14
   2e4fb:	call   a420 <memcpy@plt>
   2e500:	mov    rcx,QWORD PTR [rsp+0x10]
   2e505:	mov    QWORD PTR [rbx+0x20],rax
   2e509:	mov    rax,QWORD PTR [rcx+0x8]
   2e50d:	mov    QWORD PTR [rcx+0x8],rbx
   2e511:	mov    QWORD PTR [rbx],rax
   2e514:	xor    eax,eax
   2e516:	jmp    2dd24 <__sprintf_chk@plt+0x23374>
   2e51b:	nop    DWORD PTR [rax+rax*1+0x0]
   2e520:	lea    rax,[rsp+0x2c0]
   2e528:	mov    QWORD PTR [rsp+0x60],0x0
   2e531:	mov    QWORD PTR [rsp+0x20],rax
   2e536:	cmp    rdi,0x64
   2e53a:	jg     2ef00 <__sprintf_chk@plt+0x24550>
   2e540:	mov    rdx,QWORD PTR [rsp+0x20]
   2e545:	cmp    r15b,0x22
   2e549:	je     2e575 <__sprintf_chk@plt+0x23bc5>
   2e54b:	nop    DWORD PTR [rax+rax*1+0x0]
   2e550:	xor    eax,eax
   2e552:	cmp    r15b,0x5c
   2e556:	sete   al
   2e559:	add    rdx,0x1
   2e55d:	add    rax,rcx
   2e560:	movzx  ecx,BYTE PTR [rax]
   2e563:	movzx  r15d,BYTE PTR [rax+0x1]
   2e568:	mov    BYTE PTR [rdx-0x1],cl
   2e56b:	lea    rcx,[rax+0x1]
   2e56f:	cmp    r15b,0x22
   2e573:	jne    2e550 <__sprintf_chk@plt+0x23ba0>
   2e575:	mov    BYTE PTR [rdx],0x0
   2e578:	mov    rdi,QWORD PTR [rsp+0x20]
   2e57d:	mov    QWORD PTR [rsp+0x30],rcx
   2e582:	call   56f90 <_obstack_memory_used@@Base+0xa310>
   2e587:	mov    r15,rax
   2e58a:	test   rax,rax
   2e58d:	jne    2ee38 <__sprintf_chk@plt+0x24488>
   2e593:	mov    rdi,QWORD PTR [rsp+0x60]
   2e598:	call   9ce0 <free@plt>
   2e59d:	cmp    rbx,0x1
   2e5a1:	jne    2eeba <__sprintf_chk@plt+0x2450a>
   2e5a7:	nop    WORD PTR [rax+rax*1+0x0]
   2e5b0:	mov    rax,QWORD PTR [rip+0x50f51]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   2e5b7:	test   rax,rax
   2e5ba:	je     2e5be <__sprintf_chk@plt+0x23c0e>
   2e5bc:	call   rax
   2e5be:	mov    rsi,r14
   2e5c1:	lea    rdx,[rip+0x4da78]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   2e5c8:	xor    edi,edi
   2e5ca:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   2e5cf:	mov    r14,QWORD PTR [rsp+0x8]
   2e5d4:	xor    edx,edx
   2e5d6:	mov    rbx,rax
   2e5d9:	mov    rdi,QWORD PTR [r14]
   2e5dc:	mov    rsi,QWORD PTR [r14+0x8]
   2e5e0:	call   240f0 <__sprintf_chk@plt+0x19740>
   2e5e5:	mov    edx,0x5
   2e5ea:	lea    rsi,[rip+0x39c5f]        # 68250 <_obstack_memory_used@@Base+0x1b5d0>
   2e5f1:	xor    edi,edi
   2e5f3:	mov    r12,rax
   2e5f6:	call   a040 <dcgettext@plt>
   2e5fb:	mov    r8,rbx
   2e5fe:	mov    rcx,r12
   2e601:	xor    esi,esi
   2e603:	mov    rdx,rax
   2e606:	xor    edi,edi
   2e608:	xor    eax,eax
   2e60a:	call   a640 <error@plt>
   2e60f:	mov    QWORD PTR [r14+0x8],0x0
   2e617:	mov    eax,0x1
   2e61c:	jmp    2dd24 <__sprintf_chk@plt+0x23374>
   2e621:	nop    DWORD PTR [rax+0x0]
   2e628:	xor    edx,edx
   2e62a:	xor    ebp,ebp
   2e62c:	jmp    2e11a <__sprintf_chk@plt+0x2376a>
   2e631:	cmp    BYTE PTR [rsp+0x409],0x0
   2e639:	mov    rbp,rbx
   2e63c:	mov    r15,QWORD PTR [rsp+0x40]
   2e641:	mov    r14,QWORD PTR [rsp+0x50]
   2e646:	mov    rbx,QWORD PTR [rsp+0x48]
   2e64b:	jne    305c0 <__sprintf_chk@plt+0x25c10>
   2e651:	movzx  r13d,BYTE PTR [rsp+0x3d0]
   2e65a:	test   r13b,r13b
   2e65d:	jne    2ee80 <__sprintf_chk@plt+0x244d0>
   2e663:	mov    rax,QWORD PTR [rsp+0x3d8]
   2e66b:	mov    rdx,QWORD PTR [rsp+0x400]
   2e673:	or     rax,QWORD PTR [rsp+0x3f8]
   2e67b:	add    rdx,QWORD PTR [rsp+0x3e8]
   2e683:	or     rax,QWORD PTR [rsp+0x3e0]
   2e68b:	or     rax,QWORD PTR [rsp+0x3f0]
   2e693:	or     rax,rdx
   2e696:	cmp    rax,0x1
   2e69a:	jg     2ee78 <__sprintf_chk@plt+0x244c8>
   2e6a0:	mov    r8,QWORD PTR [rsp+0x358]
   2e6a8:	test   r8,r8
   2e6ab:	js     30af6 <__sprintf_chk@plt+0x26146>
   2e6b1:	cmp    QWORD PTR [rsp+0x360],0x2
   2e6ba:	je     310e0 <__sprintf_chk@plt+0x26730>
   2e6c0:	xor    ecx,ecx
   2e6c2:	lea    rax,[r8-0x76c]
   2e6c9:	cmp    r8,0x76c
   2e6d0:	jae    30bfc <__sprintf_chk@plt+0x2624c>
   2e6d6:	test   rax,rax
   2e6d9:	jns    30c05 <__sprintf_chk@plt+0x26255>
   2e6df:	movsxd rdx,eax
   2e6e2:	cmp    rax,rdx
   2e6e5:	mov    edx,0x1
   2e6ea:	cmovne ecx,edx
   2e6ed:	and    ecx,0x1
   2e6f0:	mov    BYTE PTR [rsp+0x28],cl
   2e6f4:	cmp    BYTE PTR [rsp+0x28],0x0
   2e6f9:	mov    DWORD PTR [rsp+0xf4],eax
   2e700:	jne    309e0 <__sprintf_chk@plt+0x26030>
   2e706:	mov    rdx,QWORD PTR [rsp+0x368]
   2e70e:	xor    ecx,ecx
   2e710:	add    rdx,0xffffffffffffffff
   2e714:	movsxd rax,edx
   2e717:	seto   cl
   2e71a:	mov    DWORD PTR [rsp+0xf0],edx
   2e721:	cmp    rdx,rax
   2e724:	mov    eax,0x1
   2e729:	cmovne ecx,eax
   2e72c:	mov    eax,edx
   2e72e:	movzx  edx,BYTE PTR [rsp+0x409]
   2e736:	test   ecx,ecx
   2e738:	jne    30a0c <__sprintf_chk@plt+0x2605c>
   2e73e:	mov    rcx,QWORD PTR [rsp+0x370]
   2e746:	movsxd rsi,ecx
   2e749:	mov    DWORD PTR [rsp+0xec],ecx
   2e750:	cmp    rcx,rsi
   2e753:	mov    esi,ecx
   2e755:	setne  cl
   2e758:	movzx  ecx,cl
   2e75b:	mov    DWORD PTR [rsp+0x38],ecx
   2e75f:	jne    30a0c <__sprintf_chk@plt+0x2605c>
   2e765:	mov    r11,QWORD PTR [rsp+0x3f8]
   2e76d:	test   r11,r11
   2e770:	jne    311aa <__sprintf_chk@plt+0x267fa>
   2e776:	cmp    BYTE PTR [rsp+0x3d1],0x0
   2e77e:	je     3124e <__sprintf_chk@plt+0x2689e>
   2e784:	cmp    QWORD PTR [rsp+0x3d8],0x0
   2e78d:	jne    3124e <__sprintf_chk@plt+0x2689e>
   2e793:	cmp    QWORD PTR [rsp+0x3e0],0x0
   2e79c:	je     311aa <__sprintf_chk@plt+0x267fa>
   2e7a2:	mov    QWORD PTR [rsp+0xe0],0x0
   2e7ae:	mov    DWORD PTR [rsp+0xe8],0x0
   2e7b9:	mov    QWORD PTR [rsp+0x390],0x0
   2e7c5:	test   dl,dl
   2e7c7:	jne    31a0c <__sprintf_chk@plt+0x2705c>
   2e7cd:	xor    r9d,r9d
   2e7d0:	xor    ecx,ecx
   2e7d2:	xor    r10d,r10d
   2e7d5:	mov    DWORD PTR [rsp+0x100],0xffffffff
   2e7e0:	cmp    QWORD PTR [rsp+0x3e8],0x0
   2e7e9:	jne    3123b <__sprintf_chk@plt+0x2688b>
   2e7ef:	mov    edx,DWORD PTR [rsp+0x100]
   2e7f6:	mov    DWORD PTR [rsp+0x130],eax
   2e7fd:	lea    r13,[rsp+0xe0]
   2e805:	mov    rdi,r15
   2e808:	mov    eax,DWORD PTR [rsp+0xf4]
   2e80f:	mov    DWORD PTR [rsp+0x12c],esi
   2e816:	lea    r12,[rsp+0x120]
   2e81e:	mov    rsi,r13
   2e821:	mov    DWORD PTR [rsp+0x120],r10d
   2e829:	mov    DWORD PTR [rsp+0x124],ecx
   2e830:	mov    DWORD PTR [rsp+0x128],r9d
   2e838:	mov    DWORD PTR [rsp+0x134],eax
   2e83f:	mov    DWORD PTR [rsp+0x140],edx
   2e846:	mov    DWORD PTR [rsp+0xf8],0xffffffff
   2e851:	call   57310 <_obstack_memory_used@@Base+0xa690>
   2e856:	mov    rsi,r13
   2e859:	mov    rdi,r12
   2e85c:	mov    QWORD PTR [rsp+0x30],rax
   2e861:	call   49ab0 <argp_usage@@Base+0x6730>
   2e866:	test   al,al
   2e868:	jne    30d83 <__sprintf_chk@plt+0x263d3>
   2e86e:	mov    rax,QWORD PTR [rsp+0x400]
   2e876:	mov    QWORD PTR [rsp+0x68],rax
   2e87b:	test   rax,rax
   2e87e:	jne    30c97 <__sprintf_chk@plt+0x262e7>
   2e884:	mov    eax,DWORD PTR [rsp+0x128]
   2e88b:	mov    r9d,DWORD PTR [rsp+0x120]
   2e893:	mov    r8d,DWORD PTR [rsp+0xe0]
   2e89b:	mov    ecx,DWORD PTR [rsp+0x124]
   2e8a2:	mov    DWORD PTR [rsp+0x40],eax
   2e8a6:	mov    eax,DWORD PTR [rsp+0xe8]
   2e8ad:	mov    r11d,DWORD PTR [rsp+0xe4]
   2e8b5:	mov    DWORD PTR [rsp+0x48],eax
   2e8b9:	mov    eax,DWORD PTR [rsp+0x12c]
   2e8c0:	mov    DWORD PTR [rsp+0x20],eax
   2e8c4:	mov    eax,DWORD PTR [rsp+0xec]
   2e8cb:	mov    DWORD PTR [rsp+0x28],eax
   2e8cf:	mov    eax,DWORD PTR [rsp+0x130]
   2e8d6:	mov    DWORD PTR [rsp+0x30],eax
   2e8da:	mov    eax,DWORD PTR [rsp+0xf0]
   2e8e1:	mov    DWORD PTR [rsp+0x38],eax
   2e8e5:	mov    eax,DWORD PTR [rsp+0x134]
   2e8ec:	mov    DWORD PTR [rsp+0x50],eax
   2e8f0:	mov    eax,DWORD PTR [rsp+0xf4]
   2e8f7:	mov    DWORD PTR [rsp+0x58],eax
   2e8fb:	movzx  eax,BYTE PTR [rsp+0x409]
   2e903:	cmp    r9d,r8d
   2e906:	jne    31caf <__sprintf_chk@plt+0x272ff>
   2e90c:	cmp    ecx,r11d
   2e90f:	jne    31caf <__sprintf_chk@plt+0x272ff>
   2e915:	mov    esi,DWORD PTR [rsp+0x28]
   2e919:	cmp    DWORD PTR [rsp+0x20],esi
   2e91d:	jne    31be3 <__sprintf_chk@plt+0x27233>
   2e923:	mov    esi,DWORD PTR [rsp+0x48]
   2e927:	cmp    DWORD PTR [rsp+0x40],esi
   2e92b:	je     31be3 <__sprintf_chk@plt+0x27233>
   2e931:	mov    esi,DWORD PTR [rsp+0x38]
   2e935:	cmp    DWORD PTR [rsp+0x30],esi
   2e939:	jne    31be3 <__sprintf_chk@plt+0x27233>
   2e93f:	mov    esi,DWORD PTR [rsp+0x58]
   2e943:	cmp    DWORD PTR [rsp+0x50],esi
   2e947:	jne    31be3 <__sprintf_chk@plt+0x27233>
   2e94d:	test   al,al
   2e94f:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   2e955:	mov    edx,0x5
   2e95a:	lea    rsi,[rip+0x393d7]        # 67d38 <_obstack_memory_used@@Base+0x1b0b8>
   2e961:	xor    edi,edi
   2e963:	call   a040 <dcgettext@plt>
   2e968:	lea    rbp,[rsp+0x330]
   2e970:	mov    rdi,rax
   2e973:	xor    eax,eax
   2e975:	call   49610 <argp_usage@@Base+0x6290>
   2e97a:	mov    rdx,QWORD PTR [rsp+0x70]
   2e97f:	mov    rsi,rbp
   2e982:	mov    rdi,r12
   2e985:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   2e98a:	mov    edx,0x5
   2e98f:	lea    rsi,[rip+0x37f31]        # 668c7 <_obstack_memory_used@@Base+0x19c47>
   2e996:	xor    edi,edi
   2e998:	mov    r12,rax
   2e99b:	call   a040 <dcgettext@plt>
   2e9a0:	mov    rsi,r12
   2e9a3:	mov    rdi,rax
   2e9a6:	xor    eax,eax
   2e9a8:	call   49610 <argp_usage@@Base+0x6290>
   2e9ad:	mov    rdx,QWORD PTR [rsp+0x70]
   2e9b2:	mov    rsi,rbp
   2e9b5:	mov    rdi,r13
   2e9b8:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   2e9bd:	mov    edx,0x5
   2e9c2:	lea    rsi,[rip+0x37f1c]        # 668e5 <_obstack_memory_used@@Base+0x19c65>
   2e9c9:	xor    edi,edi
   2e9cb:	mov    rbp,rax
   2e9ce:	call   a040 <dcgettext@plt>
   2e9d3:	mov    rsi,rbp
   2e9d6:	mov    ebp,0x1
   2e9db:	mov    rdi,rax
   2e9de:	xor    eax,eax
   2e9e0:	call   49610 <argp_usage@@Base+0x6290>
   2e9e5:	lea    rdi,[rip+0x3d164]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   2e9ec:	lea    r8,[rip+0x37d4a]        # 6673d <_obstack_memory_used@@Base+0x19abd>
   2e9f3:	mov    rax,rdi
   2e9f6:	lea    rdx,[rip+0x3d153]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   2e9fd:	mov    r10d,DWORD PTR [rsp+0x38]
   2ea02:	lea    rcx,[rip+0x3d147]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   2ea09:	cmp    DWORD PTR [rsp+0x30],r10d
   2ea0e:	lea    rsi,[rip+0x37d28]        # 6673d <_obstack_memory_used@@Base+0x19abd>
   2ea15:	cmove  rsi,rcx
   2ea19:	mov    r11d,DWORD PTR [rsp+0x58]
   2ea1e:	lea    r9,[rip+0x37d16]        # 6673b <_obstack_memory_used@@Base+0x19abb>
   2ea25:	cmp    DWORD PTR [rsp+0x50],r11d
   2ea2a:	cmove  r9,rcx
   2ea2e:	push   rcx
   2ea2f:	mov    ecx,0x64
   2ea34:	push   rax
   2ea35:	xor    eax,eax
   2ea37:	push   rdi
   2ea38:	push   r8
   2ea3a:	lea    r8,[rip+0x3931f]        # 67d60 <_obstack_memory_used@@Base+0x1b0e0>
   2ea41:	push   rdx
   2ea42:	mov    edx,0x1
   2ea47:	push   rsi
   2ea48:	mov    rdi,QWORD PTR [rsp+0xa0]
   2ea50:	mov    esi,0x64
   2ea55:	call   9d90 <__snprintf_chk@plt>
   2ea5a:	add    rsp,0x30
   2ea5e:	test   eax,eax
   2ea60:	js     2ea93 <__sprintf_chk@plt+0x240e3>
   2ea62:	mov    edx,0x63
   2ea67:	cmp    eax,edx
   2ea69:	cmovg  eax,edx
   2ea6c:	xor    ecx,ecx
   2ea6e:	cdqe   
   2ea70:	jmp    2ea81 <__sprintf_chk@plt+0x240d1>
   2ea72:	mov    rsi,QWORD PTR [rsp+0x70]
   2ea77:	sub    rax,0x1
   2ea7b:	cmp    BYTE PTR [rsi+rax*1],0x20
   2ea7f:	jne    2ea8b <__sprintf_chk@plt+0x240db>
   2ea81:	movsxd rdx,eax
   2ea84:	cmp    rcx,rax
   2ea87:	jne    2ea72 <__sprintf_chk@plt+0x240c2>
   2ea89:	xor    edx,edx
   2ea8b:	mov    BYTE PTR [rsp+rdx*1+0x450],0x0
   2ea93:	mov    rsi,QWORD PTR [rsp+0x70]
   2ea98:	xor    eax,eax
   2ea9a:	lea    rdi,[rip+0x3e58e]        # 6d02f <_obstack_memory_used@@Base+0x203af>
   2eaa1:	call   49610 <argp_usage@@Base+0x6290>
   2eaa6:	xor    edi,edi
   2eaa8:	mov    edx,0x5
   2eaad:	lea    rsi,[rip+0x37e4f]        # 66903 <_obstack_memory_used@@Base+0x19c83>
   2eab4:	call   a040 <dcgettext@plt>
   2eab9:	mov    rdi,rax
   2eabc:	xor    eax,eax
   2eabe:	call   49610 <argp_usage@@Base+0x6290>
   2eac3:	test   ebp,ebp
   2eac5:	jne    320f2 <__sprintf_chk@plt+0x27742>
   2eacb:	mov    ecx,DWORD PTR [rsp+0x28]
   2eacf:	cmp    DWORD PTR [rsp+0x20],ecx
   2ead3:	je     2eafc <__sprintf_chk@plt+0x2414c>
   2ead5:	mov    ecx,DWORD PTR [rsp+0x38]
   2ead9:	cmp    DWORD PTR [rsp+0x30],ecx
   2eadd:	je     2eafc <__sprintf_chk@plt+0x2414c>
   2eadf:	xor    edi,edi
   2eae1:	mov    edx,0x5
   2eae6:	lea    rsi,[rip+0x392eb]        # 67dd8 <_obstack_memory_used@@Base+0x1b158>
   2eaed:	call   a040 <dcgettext@plt>
   2eaf2:	mov    rdi,rax
   2eaf5:	xor    eax,eax
   2eaf7:	call   49610 <argp_usage@@Base+0x6290>
   2eafc:	mov    edx,0x5
   2eb01:	xor    edi,edi
   2eb03:	lea    rsi,[rip+0x392f6]        # 67e00 <_obstack_memory_used@@Base+0x1b180>
   2eb0a:	call   a040 <dcgettext@plt>
   2eb0f:	mov    rdi,rax
   2eb12:	xor    eax,eax
   2eb14:	call   49610 <argp_usage@@Base+0x6290>
   2eb19:	cmp    QWORD PTR [rsp+0x68],0x0
   2eb1f:	mov    edx,0x5
   2eb24:	je     3216e <__sprintf_chk@plt+0x277be>
   2eb2a:	lea    rsi,[rip+0x37dea]        # 6691b <_obstack_memory_used@@Base+0x19c9b>
   2eb31:	xor    edi,edi
   2eb33:	call   a040 <dcgettext@plt>
   2eb38:	mov    rsi,rax
   2eb3b:	lea    rdi,[rip+0x37dfd]        # 6693f <_obstack_memory_used@@Base+0x19cbf>
   2eb42:	xor    eax,eax
   2eb44:	call   49610 <argp_usage@@Base+0x6290>
   2eb49:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   2eb4e:	xchg   ax,ax
   2eb50:	mov    rdx,QWORD PTR [rsp+0x330]
   2eb58:	movzx  ecx,BYTE PTR [rdx]
   2eb5b:	cmp    cl,0xd
   2eb5e:	jg     2ebf0 <__sprintf_chk@plt+0x24240>
   2eb64:	cmp    cl,0x8
   2eb67:	jg     2ebf9 <__sprintf_chk@plt+0x24249>
   2eb6d:	movzx  eax,cl
   2eb70:	lea    edi,[rcx-0x2b]
   2eb73:	mov    esi,ecx
   2eb75:	sub    eax,0x30
   2eb78:	and    edi,0xfffffffd
   2eb7b:	cmp    eax,0x9
   2eb7e:	jbe    2ec10 <__sprintf_chk@plt+0x24260>
   2eb84:	test   dil,dil
   2eb87:	je     2eea0 <__sprintf_chk@plt+0x244f0>
   2eb8d:	cmp    cl,0x5a
   2eb90:	jg     30815 <__sprintf_chk@plt+0x25e65>
   2eb96:	cmp    cl,0x40
   2eb99:	jg     30820 <__sprintf_chk@plt+0x25e70>
   2eb9f:	cmp    cl,0x28
   2eba2:	jne    2edd1 <__sprintf_chk@plt+0x24421>
   2eba8:	xor    ecx,ecx
   2ebaa:	jmp    2ebc4 <__sprintf_chk@plt+0x24214>
   2ebac:	nop    DWORD PTR [rax+0x0]
   2ebb0:	cmp    al,0x29
   2ebb2:	sete   al
   2ebb5:	movzx  eax,al
   2ebb8:	sub    rcx,rax
   2ebbb:	test   rcx,rcx
   2ebbe:	je     30bf3 <__sprintf_chk@plt+0x26243>
   2ebc4:	mov    rsi,rdx
   2ebc7:	add    rdx,0x1
   2ebcb:	mov    QWORD PTR [rsp+0x330],rdx
   2ebd3:	movzx  eax,BYTE PTR [rdx-0x1]
   2ebd7:	test   al,al
   2ebd9:	je     2e628 <__sprintf_chk@plt+0x23c78>
   2ebdf:	cmp    al,0x28
   2ebe1:	jne    2ebb0 <__sprintf_chk@plt+0x24200>
   2ebe3:	add    rcx,0x1
   2ebe7:	jmp    2ebbb <__sprintf_chk@plt+0x2420b>
   2ebe9:	nop    DWORD PTR [rax+0x0]
   2ebf0:	cmp    cl,0x20
   2ebf3:	jne    2eb6d <__sprintf_chk@plt+0x241bd>
   2ebf9:	add    rdx,0x1
   2ebfd:	mov    QWORD PTR [rsp+0x330],rdx
   2ec05:	movzx  ecx,BYTE PTR [rdx]
   2ec08:	jmp    2eb5b <__sprintf_chk@plt+0x241ab>
   2ec0d:	nop    DWORD PTR [rax]
   2ec10:	cmp    cl,0x2d
   2ec13:	sete   al
   2ec16:	test   dil,dil
   2ec19:	jne    31416 <__sprintf_chk@plt+0x26a66>
   2ec1f:	cmp    al,0x1
   2ec21:	sbb    eax,eax
   2ec23:	and    eax,0x2
   2ec26:	sub    eax,0x1
   2ec29:	add    rdx,0x1
   2ec2d:	mov    QWORD PTR [rsp+0x330],rdx
   2ec35:	movzx  ecx,BYTE PTR [rdx]
   2ec38:	cmp    cl,0xd
   2ec3b:	jg     2ed50 <__sprintf_chk@plt+0x243a0>
   2ec41:	cmp    cl,0x8
   2ec44:	jg     2ec29 <__sprintf_chk@plt+0x24279>
   2ec46:	movzx  esi,cl
   2ec49:	sub    esi,0x30
   2ec4c:	cmp    esi,0x9
   2ec4f:	ja     2eb5b <__sprintf_chk@plt+0x241ab>
   2ec55:	xor    edi,edi
   2ec57:	mov    ebp,0x30
   2ec5c:	mov    esi,ebp
   2ec5e:	sub    esi,ecx
   2ec60:	sub    ecx,0x30
   2ec63:	cmp    eax,0xffffffff
   2ec66:	cmove  ecx,esi
   2ec69:	movsxd rcx,ecx
   2ec6c:	add    rdi,rcx
   2ec6f:	jo     2f118 <__sprintf_chk@plt+0x24768>
   2ec75:	movzx  ecx,BYTE PTR [rdx+0x1]
   2ec79:	lea    r9,[rdx+0x1]
   2ec7d:	lea    r8d,[rcx-0x30]
   2ec81:	mov    esi,ecx
   2ec83:	cmp    r8d,0x9
   2ec87:	jbe    2ee20 <__sprintf_chk@plt+0x24470>
   2ec8d:	and    esi,0xfffffffd
   2ec90:	cmp    sil,0x2c
   2ec94:	jne    2ef40 <__sprintf_chk@plt+0x24590>
   2ec9a:	movsx  ecx,BYTE PTR [r9+0x1]
   2ec9f:	sub    ecx,0x30
   2eca2:	cmp    ecx,0x9
   2eca5:	ja     2ef40 <__sprintf_chk@plt+0x24590>
   2ecab:	movsx  r11d,BYTE PTR [rdx+0x3]
   2ecb0:	lea    r9,[rdx+0x3]
   2ecb4:	mov    esi,0x8
   2ecb9:	mov    ebp,r11d
   2ecbc:	nop    DWORD PTR [rax+0x0]
   2ecc0:	lea    ecx,[rcx+rcx*4]
   2ecc3:	lea    edx,[r11-0x30]
   2ecc7:	add    ecx,ecx
   2ecc9:	cmp    edx,0x9
   2eccc:	ja     2ece0 <__sprintf_chk@plt+0x24330>
   2ecce:	movsx  r11d,BYTE PTR [r9+0x1]
   2ecd3:	add    ecx,edx
   2ecd5:	add    r9,0x1
   2ecd9:	mov    ebp,r11d
   2ecdc:	lea    edx,[r11-0x30]
   2ece0:	sub    esi,0x1
   2ece3:	jne    2ecc0 <__sprintf_chk@plt+0x24310>
   2ece5:	cmp    eax,0xffffffff
   2ece8:	je     2f0c1 <__sprintf_chk@plt+0x24711>
   2ecee:	cmp    edx,0x9
   2ecf1:	ja     2ed04 <__sprintf_chk@plt+0x24354>
   2ecf3:	movsx  edx,BYTE PTR [r9+0x1]
   2ecf8:	add    r9,0x1
   2ecfc:	sub    edx,0x30
   2ecff:	cmp    edx,0x9
   2ed02:	jbe    2ecf3 <__sprintf_chk@plt+0x24343>
   2ed04:	test   eax,eax
   2ed06:	jns    30c67 <__sprintf_chk@plt+0x262b7>
   2ed0c:	test   ecx,ecx
   2ed0e:	je     30c67 <__sprintf_chk@plt+0x262b7>
   2ed14:	add    rdi,0xffffffffffffffff
   2ed18:	jo     2f118 <__sprintf_chk@plt+0x24768>
   2ed1e:	mov    eax,0x3b9aca00
   2ed23:	mov    edx,0x15
   2ed28:	mov    ebp,0x114
   2ed2d:	mov    QWORD PTR [rsp+0x1e0],rdi
   2ed35:	sub    eax,ecx
   2ed37:	mov    QWORD PTR [rsp+0x330],r9
   2ed3f:	cdqe   
   2ed41:	mov    QWORD PTR [rsp+0x78],rax
   2ed46:	jmp    2edfe <__sprintf_chk@plt+0x2444e>
   2ed4b:	nop    DWORD PTR [rax+rax*1+0x0]
   2ed50:	cmp    cl,0x20
   2ed53:	je     2ec29 <__sprintf_chk@plt+0x24279>
   2ed59:	jmp    2ec46 <__sprintf_chk@plt+0x24296>
   2ed5e:	xchg   ax,ax
   2ed60:	mov    eax,DWORD PTR [rsp+0x58]
   2ed64:	mov    rdx,r13
   2ed67:	mov    ebp,0xfffffffe
   2ed6c:	movdqa xmm3,XMMWORD PTR [rsp+0x200]
   2ed75:	cmp    eax,0x1
   2ed78:	movups XMMWORD PTR [r15+0x58],xmm3
   2ed7d:	adc    eax,0xffffffff
   2ed80:	add    r15,0x38
   2ed84:	mov    DWORD PTR [rsp+0x58],eax
   2ed88:	mov    rax,QWORD PTR [rsp+0x78]
   2ed8d:	mov    QWORD PTR [rsp+0x1e8],rax
   2ed95:	mov    rax,QWORD PTR [rsp+0x80]
   2ed9d:	movdqa xmm1,XMMWORD PTR [rsp+0x1e0]
   2eda6:	mov    QWORD PTR [rsp+0x1f0],rax
   2edae:	mov    rax,QWORD PTR [rsp+0x210]
   2edb6:	movdqa xmm2,XMMWORD PTR [rsp+0x1f0]
   2edbf:	movups XMMWORD PTR [r15],xmm1
   2edc3:	mov    QWORD PTR [r15+0x30],rax
   2edc7:	movups XMMWORD PTR [r15+0x10],xmm2
   2edcc:	jmp    2e1f1 <__sprintf_chk@plt+0x23841>
   2edd1:	lea    rax,[rdx+0x1]
   2edd5:	mov    QWORD PTR [rsp+0x330],rax
   2eddd:	movzx  ebp,BYTE PTR [rdx]
   2ede0:	xor    edx,edx
   2ede2:	test   ebp,ebp
   2ede4:	je     2e11a <__sprintf_chk@plt+0x2376a>
   2edea:	nop    WORD PTR [rax+rax*1+0x0]
   2edf0:	movsxd rax,ebp
   2edf3:	lea    rdx,[rip+0x3c346]        # 6b140 <_obstack_memory_used@@Base+0x1e4c0>
   2edfa:	movzx  edx,BYTE PTR [rdx+rax*1]
   2edfe:	add    r14d,edx
   2ee01:	jmp    2e11a <__sprintf_chk@plt+0x2376a>
   2ee06:	cs nop WORD PTR [rax+rax*1+0x0]
   2ee10:	mov    ebp,0xfffffffe
   2ee15:	jmp    2e25b <__sprintf_chk@plt+0x238ab>
   2ee1a:	nop    WORD PTR [rax+rax*1+0x0]
   2ee20:	imul   rdi,rdi,0xa
   2ee24:	jo     2f118 <__sprintf_chk@plt+0x24768>
   2ee2a:	mov    rdx,r9
   2ee2d:	jmp    2ec5c <__sprintf_chk@plt+0x242ac>
   2ee32:	nop    WORD PTR [rax+rax*1+0x0]
   2ee38:	mov    rcx,QWORD PTR [rsp+0x30]
   2ee3d:	lea    r13,[rcx+0x1]
   2ee41:	movzx  eax,BYTE PTR [r13+0x0]
   2ee46:	cmp    al,0xd
   2ee48:	jg     30590 <__sprintf_chk@plt+0x25be0>
   2ee4e:	cmp    al,0x8
   2ee50:	jg     30598 <__sprintf_chk@plt+0x25be8>
   2ee56:	lea    rdx,[rsp+0x160]
   2ee5e:	mov    rsi,r12
   2ee61:	mov    rdi,r15
   2ee64:	call   57260 <_obstack_memory_used@@Base+0xa5e0>
   2ee69:	test   rax,rax
   2ee6c:	jne    2de58 <__sprintf_chk@plt+0x234a8>
   2ee72:	nop    WORD PTR [rax+rax*1+0x0]
   2ee78:	xor    r13d,r13d
   2ee7b:	jmp    2e458 <__sprintf_chk@plt+0x23aa8>
   2ee80:	movdqu xmm4,XMMWORD PTR [rsp+0x388]
   2ee89:	mov    rax,QWORD PTR [rsp+0x8]
   2ee8e:	movups XMMWORD PTR [rax],xmm4
   2ee91:	jmp    2e458 <__sprintf_chk@plt+0x23aa8>
   2ee96:	cs nop WORD PTR [rax+rax*1+0x0]
   2eea0:	cmp    cl,0x2d
   2eea3:	sete   al
   2eea6:	jmp    2ec1f <__sprintf_chk@plt+0x2426f>
   2eeab:	nop    DWORD PTR [rax+rax*1+0x0]
   2eeb0:	cmp    rbx,0x1
   2eeb4:	je     2e5b0 <__sprintf_chk@plt+0x23c00>
   2eeba:	xor    r13d,r13d
   2eebd:	jmp    2e490 <__sprintf_chk@plt+0x23ae0>
   2eec2:	imul   rdx,rsi,0x38
   2eec6:	add    rsi,rsi
   2eec9:	lea    rdi,[rip+0x3c010]        # 6aee0 <_obstack_memory_used@@Base+0x1e260>
   2eed0:	sub    r15,rdx
   2eed3:	mov    rdx,r13
   2eed6:	sub    rdx,rsi
   2eed9:	lea    rsi,[rip+0x3c020]        # 6af00 <_obstack_memory_used@@Base+0x1e280>
   2eee0:	mov    r14,r15
   2eee3:	movzx  ecx,BYTE PTR [rsi+rcx*1]
   2eee7:	sub    ecx,0x1c
   2eeea:	movsxd rsi,ecx
   2eeed:	movsx  edi,BYTE PTR [rdi+rsi*1]
   2eef1:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2eef6:	cs nop WORD PTR [rax+rax*1+0x0]
   2ef00:	mov    QWORD PTR [rsp+0x30],rcx
   2ef05:	call   a4a0 <malloc@plt>
   2ef0a:	mov    QWORD PTR [rsp+0x60],rax
   2ef0f:	test   rax,rax
   2ef12:	je     2eeb0 <__sprintf_chk@plt+0x24500>
   2ef14:	mov    QWORD PTR [rsp+0x20],rax
   2ef19:	mov    rcx,QWORD PTR [rsp+0x30]
   2ef1e:	jmp    2e540 <__sprintf_chk@plt+0x23b90>
   2ef23:	xor    edi,edi
   2ef25:	lea    rsi,[rip+0x3788b]        # 667b7 <_obstack_memory_used@@Base+0x19b37>
   2ef2c:	call   a040 <dcgettext@plt>
   2ef31:	mov    rdi,rax
   2ef34:	jmp    2e444 <__sprintf_chk@plt+0x23a94>
   2ef39:	nop    DWORD PTR [rax+0x0]
   2ef40:	mov    rcx,r9
   2ef43:	sub    rcx,QWORD PTR [rsp+0x330]
   2ef4b:	mov    edx,eax
   2ef4d:	mov    QWORD PTR [rsp+0x78],rdi
   2ef52:	mov    QWORD PTR [rsp+0x80],rcx
   2ef5a:	mov    ecx,eax
   2ef5c:	shr    edx,0x1f
   2ef5f:	neg    ecx
   2ef61:	mov    BYTE PTR [rsp+0x1e0],dl
   2ef68:	sbb    edx,edx
   2ef6a:	mov    QWORD PTR [rsp+0x330],r9
   2ef72:	add    edx,0x14
   2ef75:	neg    eax
   2ef77:	sbb    ebp,ebp
   2ef79:	add    ebp,0x113
   2ef7f:	jmp    2edfe <__sprintf_chk@plt+0x2444e>
   2ef84:	mov    r9,QWORD PTR [r15-0x38]
   2ef88:	mov    r10d,DWORD PTR [r15-0x30]
   2ef8c:	lea    r14,[r15-0x70]
   2ef90:	lea    rdx,[r13-0x4]
   2ef94:	mov    edi,0xffffffa3
   2ef99:	mov    ecx,0x11
   2ef9e:	mov    QWORD PTR [rsp+0x38],0x0
   2efa7:	xor    r11d,r11d
   2efaa:	xor    r12d,r12d
   2efad:	mov    QWORD PTR [rsp+0x30],0x0
   2efb6:	mov    QWORD PTR [rsp+0x28],0x0
   2efbf:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2efc4:	mov    eax,DWORD PTR [r15+0x30]
   2efc8:	xor    r8d,r8d
   2efcb:	add    eax,DWORD PTR [rsp+0x3c8]
   2efd2:	mov    DWORD PTR [rsp+0x3c8],eax
   2efd9:	seto   r8b
   2efdd:	mov    rax,QWORD PTR [rsp+0x3c0]
   2efe5:	add    rax,QWORD PTR [r15+0x28]
   2efe9:	mov    rdx,rax
   2efec:	seto   al
   2efef:	xor    edi,edi
   2eff1:	mov    QWORD PTR [rsp+0x3c0],rdx
   2eff9:	mov    rdx,QWORD PTR [rsp+0x3b8]
   2f001:	movzx  eax,al
   2f004:	add    rdx,QWORD PTR [r15+0x20]
   2f008:	seto   dil
   2f00c:	mov    QWORD PTR [rsp+0x3b8],rdx
   2f014:	xor    esi,esi
   2f016:	mov    rdx,QWORD PTR [rsp+0x3b0]
   2f01e:	add    rdx,QWORD PTR [r15+0x18]
   2f022:	seto   sil
   2f026:	mov    QWORD PTR [rsp+0x3b0],rdx
   2f02e:	xor    ecx,ecx
   2f030:	mov    rdx,QWORD PTR [rsp+0x3a8]
   2f038:	add    rdx,QWORD PTR [r15+0x10]
   2f03c:	seto   cl
   2f03f:	mov    QWORD PTR [rsp+0x3a8],rdx
   2f047:	xor    r14d,r14d
   2f04a:	mov    rdx,QWORD PTR [rsp+0x3a0]
   2f052:	add    rdx,QWORD PTR [r15+0x8]
   2f056:	mov    QWORD PTR [rsp+0x88],rcx
   2f05e:	seto   r14b
   2f062:	mov    QWORD PTR [rsp+0x3a0],rdx
   2f06a:	xor    ecx,ecx
   2f06c:	mov    rdx,QWORD PTR [rsp+0x398]
   2f074:	add    rdx,QWORD PTR [r15]
   2f077:	seto   cl
   2f07a:	or     eax,r8d
   2f07d:	mov    QWORD PTR [rsp+0x398],rdx
   2f085:	or     eax,edi
   2f087:	or     eax,esi
   2f089:	or     al,BYTE PTR [rsp+0x88]
   2f090:	or     al,r14b
   2f093:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2f099:	test   rcx,rcx
   2f09c:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2f0a2:	mov    BYTE PTR [rsp+0x3d1],0x1
   2f0aa:	lea    r14,[r15-0x38]
   2f0ae:	lea    rdx,[r13-0x2]
   2f0b2:	mov    edi,0xffffffa3
   2f0b7:	mov    ecx,0x10
   2f0bc:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f0c1:	cmp    edx,0x9
   2f0c4:	ja     2f0e3 <__sprintf_chk@plt+0x24733>
   2f0c6:	cmp    bpl,0x30
   2f0ca:	jne    31e86 <__sprintf_chk@plt+0x274d6>
   2f0d0:	movsx  edx,BYTE PTR [r9+0x1]
   2f0d5:	add    r9,0x1
   2f0d9:	mov    ebp,edx
   2f0db:	sub    edx,0x30
   2f0de:	cmp    edx,0x9
   2f0e1:	jbe    2f0c6 <__sprintf_chk@plt+0x24716>
   2f0e3:	test   ecx,ecx
   2f0e5:	jne    2ed14 <__sprintf_chk@plt+0x24364>
   2f0eb:	mov    QWORD PTR [rsp+0x1e0],rdi
   2f0f3:	mov    edx,0x15
   2f0f8:	mov    ebp,0x114
   2f0fd:	mov    QWORD PTR [rsp+0x78],0x0
   2f106:	mov    QWORD PTR [rsp+0x330],r9
   2f10e:	jmp    2edfe <__sprintf_chk@plt+0x2444e>
   2f113:	nop    DWORD PTR [rax+rax*1+0x0]
   2f118:	mov    edx,0x2
   2f11d:	mov    ebp,0x3f
   2f122:	jmp    2edfe <__sprintf_chk@plt+0x2444e>
   2f127:	mov    rax,QWORD PTR [r15-0x30]
   2f12b:	imul   rax,QWORD PTR [r15]
   2f12f:	seto   r12b
   2f133:	mov    QWORD PTR [rsp+0x28],rax
   2f138:	movzx  r12d,r12b
   2f13c:	jo     2e3f8 <__sprintf_chk@plt+0x23a48>
   2f142:	lea    r14,[r15-0x70]
   2f146:	lea    rdx,[r13-0x4]
   2f14a:	xor    r9d,r9d
   2f14d:	xor    r11d,r11d
   2f150:	mov    edi,0x3c
   2f155:	mov    ecx,0x12
   2f15a:	xor    r10d,r10d
   2f15d:	mov    QWORD PTR [rsp+0x38],0x0
   2f166:	mov    QWORD PTR [rsp+0x30],0x0
   2f16f:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f174:	mov    r11,QWORD PTR [r15-0x30]
   2f178:	lea    r14,[r15-0x70]
   2f17c:	lea    rdx,[r13-0x4]
   2f180:	mov    edi,0x3c
   2f185:	mov    ecx,0x12
   2f18a:	mov    QWORD PTR [rsp+0x38],0x0
   2f193:	xor    r10d,r10d
   2f196:	xor    r9d,r9d
   2f199:	xor    r12d,r12d
   2f19c:	mov    QWORD PTR [rsp+0x30],0x0
   2f1a5:	mov    QWORD PTR [rsp+0x28],0x0
   2f1ae:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f1b3:	mov    r12,QWORD PTR [r15-0x30]
   2f1b7:	lea    r14,[r15-0x70]
   2f1bb:	lea    rdx,[r13-0x4]
   2f1bf:	mov    edi,0x3c
   2f1c4:	mov    ecx,0x12
   2f1c9:	mov    QWORD PTR [rsp+0x38],0x0
   2f1d2:	xor    r10d,r10d
   2f1d5:	xor    r9d,r9d
   2f1d8:	xor    r11d,r11d
   2f1db:	mov    QWORD PTR [rsp+0x30],0x0
   2f1e4:	mov    QWORD PTR [rsp+0x28],0x0
   2f1ed:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f1f2:	lea    r14,[r15-0x38]
   2f1f6:	lea    rdx,[r13-0x2]
   2f1fa:	mov    edi,0xffffffa3
   2f1ff:	xor    r10d,r10d
   2f202:	mov    ecx,0x11
   2f207:	mov    r9d,0x1
   2f20d:	jmp    2ef9e <__sprintf_chk@plt+0x245ee>
   2f212:	mov    r9,QWORD PTR [r15-0x30]
   2f216:	lea    r14,[r15-0x70]
   2f21a:	lea    rdx,[r13-0x4]
   2f21e:	mov    edi,0xffffffa3
   2f223:	mov    ecx,0x11
   2f228:	xor    r10d,r10d
   2f22b:	jmp    2ef9e <__sprintf_chk@plt+0x245ee>
   2f230:	mov    r9,QWORD PTR [r15-0x38]
   2f234:	lea    r14,[r15-0x70]
   2f238:	lea    rdx,[r13-0x4]
   2f23c:	mov    edi,0xffffffa3
   2f241:	mov    ecx,0x11
   2f246:	jmp    2f228 <__sprintf_chk@plt+0x24878>
   2f248:	mov    DWORD PTR [rsp+0x98],r10d
   2f250:	lea    rax,[rsp+0x330]
   2f258:	sub    rsp,0x8
   2f25c:	mov    QWORD PTR [rsp+0x98],r9
   2f264:	mov    rdi,rax
   2f267:	mov    QWORD PTR [rsp+0x90],r11
   2f26f:	push   QWORD PTR [r15-0x28]
   2f273:	push   QWORD PTR [r15-0x30]
   2f277:	push   QWORD PTR [r15-0x38]
   2f27b:	call   49700 <argp_usage@@Base+0x6380>
   2f280:	add    rsp,0x20
   2f284:	mov    eax,DWORD PTR [r15+0x30]
   2f288:	xor    r8d,r8d
   2f28b:	add    eax,DWORD PTR [rsp+0x3c8]
   2f292:	mov    DWORD PTR [rsp+0x3c8],eax
   2f299:	seto   r8b
   2f29d:	mov    rax,QWORD PTR [rsp+0x3c0]
   2f2a5:	add    rax,QWORD PTR [r15+0x28]
   2f2a9:	mov    rdx,rax
   2f2ac:	seto   al
   2f2af:	xor    edi,edi
   2f2b1:	mov    QWORD PTR [rsp+0x3c0],rdx
   2f2b9:	mov    rdx,QWORD PTR [rsp+0x3b8]
   2f2c1:	movzx  eax,al
   2f2c4:	add    rdx,QWORD PTR [r15+0x20]
   2f2c8:	seto   dil
   2f2cc:	mov    QWORD PTR [rsp+0x3b8],rdx
   2f2d4:	xor    esi,esi
   2f2d6:	mov    rdx,QWORD PTR [rsp+0x3b0]
   2f2de:	add    rdx,QWORD PTR [r15+0x18]
   2f2e2:	seto   sil
   2f2e6:	mov    QWORD PTR [rsp+0x3b0],rdx
   2f2ee:	xor    r10d,r10d
   2f2f1:	mov    rdx,QWORD PTR [rsp+0x3a8]
   2f2f9:	add    rdx,QWORD PTR [r15+0x10]
   2f2fd:	seto   r10b
   2f301:	mov    QWORD PTR [rsp+0x3a8],rdx
   2f309:	xor    r14d,r14d
   2f30c:	mov    rdx,QWORD PTR [rsp+0x3a0]
   2f314:	add    rdx,QWORD PTR [r15+0x8]
   2f318:	seto   r14b
   2f31c:	mov    QWORD PTR [rsp+0x3a0],rdx
   2f324:	xor    ecx,ecx
   2f326:	mov    rdx,QWORD PTR [rsp+0x398]
   2f32e:	add    rdx,QWORD PTR [r15]
   2f331:	seto   cl
   2f334:	or     eax,r8d
   2f337:	mov    QWORD PTR [rsp+0x398],rdx
   2f33f:	or     eax,edi
   2f341:	or     eax,esi
   2f343:	or     eax,r10d
   2f346:	or     al,r14b
   2f349:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2f34f:	test   rcx,rcx
   2f352:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2f358:	mov    BYTE PTR [rsp+0x3d1],0x1
   2f360:	lea    r14,[r15-0x70]
   2f364:	lea    rdx,[r13-0x4]
   2f368:	mov    r11,QWORD PTR [rsp+0x88]
   2f370:	mov    r9,QWORD PTR [rsp+0x90]
   2f378:	mov    edi,0xffffffa3
   2f37d:	mov    ecx,0x18
   2f382:	mov    r10d,DWORD PTR [rsp+0x98]
   2f38a:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f38f:	mov    DWORD PTR [rsp+0x98],r10d
   2f397:	lea    rax,[rsp+0x330]
   2f39f:	sub    rsp,0x8
   2f3a3:	lea    r14,[r15-0x38]
   2f3a7:	mov    QWORD PTR [rsp+0x98],r9
   2f3af:	mov    rdi,rax
   2f3b2:	mov    QWORD PTR [rsp+0x90],r11
   2f3ba:	push   QWORD PTR [r15+0x10]
   2f3be:	push   QWORD PTR [r15+0x8]
   2f3c2:	push   QWORD PTR [r15]
   2f3c5:	call   49700 <argp_usage@@Base+0x6380>
   2f3ca:	add    rsp,0x20
   2f3ce:	lea    rdx,[r13-0x2]
   2f3d2:	mov    edi,0xffffffa3
   2f3d7:	mov    ecx,0x17
   2f3dc:	mov    r11,QWORD PTR [rsp+0x88]
   2f3e4:	mov    r9,QWORD PTR [rsp+0x90]
   2f3ec:	mov    r10d,DWORD PTR [rsp+0x98]
   2f3f4:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f3f9:	mov    r12,QWORD PTR [r15+0x8]
   2f3fd:	lea    r14,[r15-0x38]
   2f401:	lea    rdx,[r13-0x2]
   2f405:	xor    r11d,r11d
   2f408:	mov    edi,0xffffffa4
   2f40d:	mov    ecx,0x16
   2f412:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f417:	mov    r12,QWORD PTR [r15+0x8]
   2f41b:	lea    r14,[r15-0x38]
   2f41f:	lea    rdx,[r13-0x2]
   2f423:	xor    r11d,r11d
   2f426:	mov    edi,0xffffffa3
   2f42b:	mov    ecx,0x15
   2f430:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f435:	mov    rax,QWORD PTR [r15]
   2f438:	lea    r14,[r15-0x38]
   2f43c:	lea    rdx,[r13-0x2]
   2f440:	mov    edi,0xffffffa3
   2f445:	mov    ecx,0x13
   2f44a:	mov    QWORD PTR [rsp+0x28],rax
   2f44f:	xor    r10d,r10d
   2f452:	xor    r9d,r9d
   2f455:	xor    r11d,r11d
   2f458:	xor    r12d,r12d
   2f45b:	mov    QWORD PTR [rsp+0x38],0x0
   2f464:	mov    QWORD PTR [rsp+0x30],0x0
   2f46d:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f472:	mov    r9,QWORD PTR [r15-0x30]
   2f476:	lea    r14,[r15-0x70]
   2f47a:	lea    rdx,[r13-0x4]
   2f47e:	mov    edi,0x3c
   2f483:	mov    ecx,0x12
   2f488:	jmp    2f228 <__sprintf_chk@plt+0x24878>
   2f48d:	mov    rax,QWORD PTR [r15-0x30]
   2f491:	lea    r14,[r15-0x70]
   2f495:	lea    rdx,[r13-0x4]
   2f499:	mov    edi,0x3c
   2f49e:	mov    ecx,0x12
   2f4a3:	mov    QWORD PTR [rsp+0x38],rax
   2f4a8:	xor    r10d,r10d
   2f4ab:	xor    r9d,r9d
   2f4ae:	xor    r11d,r11d
   2f4b1:	xor    r12d,r12d
   2f4b4:	mov    QWORD PTR [rsp+0x30],0x0
   2f4bd:	mov    QWORD PTR [rsp+0x28],0x0
   2f4c6:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f4cb:	mov    rax,QWORD PTR [r15-0x30]
   2f4cf:	lea    r14,[r15-0x70]
   2f4d3:	lea    rdx,[r13-0x4]
   2f4d7:	mov    edi,0x3c
   2f4dc:	mov    ecx,0x12
   2f4e1:	mov    QWORD PTR [rsp+0x30],rax
   2f4e6:	xor    r10d,r10d
   2f4e9:	xor    r9d,r9d
   2f4ec:	xor    r11d,r11d
   2f4ef:	xor    r12d,r12d
   2f4f2:	mov    QWORD PTR [rsp+0x38],0x0
   2f4fb:	mov    QWORD PTR [rsp+0x28],0x0
   2f504:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f509:	mov    r12,QWORD PTR [r15-0x38]
   2f50d:	lea    r14,[r15-0x70]
   2f511:	lea    rdx,[r13-0x4]
   2f515:	mov    edi,0xffffffa3
   2f51a:	mov    ecx,0x11
   2f51f:	jmp    2f1c9 <__sprintf_chk@plt+0x24819>
   2f524:	lea    rdx,[rsi*8+0x0]
   2f52c:	xor    r10d,r10d
   2f52f:	xor    r9d,r9d
   2f532:	mov    QWORD PTR [rsp+0x38],0x0
   2f53b:	sub    rdx,rsi
   2f53e:	add    rsi,rsi
   2f541:	mov    edi,0xffffffa3
   2f546:	mov    ecx,0x11
   2f54b:	shl    rdx,0x3
   2f54f:	xor    r11d,r11d
   2f552:	mov    r12d,0x1
   2f558:	mov    QWORD PTR [rsp+0x30],0x0
   2f561:	mov    QWORD PTR [rsp+0x28],0x0
   2f56a:	sub    r15,rdx
   2f56d:	mov    rdx,r13
   2f570:	mov    r14,r15
   2f573:	sub    rdx,rsi
   2f576:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f57b:	mov    r12,QWORD PTR [r15-0x30]
   2f57f:	lea    r14,[r15-0x70]
   2f583:	lea    rdx,[r13-0x4]
   2f587:	mov    edi,0xffffffa3
   2f58c:	mov    ecx,0x11
   2f591:	jmp    2f1c9 <__sprintf_chk@plt+0x24819>
   2f596:	mov    rax,QWORD PTR [r15-0x38]
   2f59a:	imul   rax,QWORD PTR [r15]
   2f59e:	seto   r12b
   2f5a2:	mov    QWORD PTR [rsp+0x28],rax
   2f5a7:	movzx  r12d,r12b
   2f5ab:	jo     2e3f8 <__sprintf_chk@plt+0x23a48>
   2f5b1:	lea    r14,[r15-0x70]
   2f5b5:	lea    rdx,[r13-0x4]
   2f5b9:	xor    r9d,r9d
   2f5bc:	xor    r11d,r11d
   2f5bf:	mov    edi,0xffffffa3
   2f5c4:	mov    ecx,0x11
   2f5c9:	xor    r10d,r10d
   2f5cc:	mov    QWORD PTR [rsp+0x38],0x0
   2f5d5:	mov    QWORD PTR [rsp+0x30],0x0
   2f5de:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f5e3:	lea    r14,[r15-0x38]
   2f5e7:	lea    rdx,[r13-0x2]
   2f5eb:	mov    edi,0xffffffa3
   2f5f0:	xor    r10d,r10d
   2f5f3:	mov    QWORD PTR [rsp+0x38],0x0
   2f5fc:	mov    ecx,0x11
   2f601:	xor    r9d,r9d
   2f604:	xor    r12d,r12d
   2f607:	mov    QWORD PTR [rsp+0x30],0x0
   2f610:	mov    r11d,0x1
   2f616:	mov    QWORD PTR [rsp+0x28],0x0
   2f61f:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f624:	mov    r11,QWORD PTR [r15-0x30]
   2f628:	lea    r14,[r15-0x70]
   2f62c:	lea    rdx,[r13-0x4]
   2f630:	mov    edi,0xffffffa3
   2f635:	mov    ecx,0x11
   2f63a:	jmp    2f18a <__sprintf_chk@plt+0x247da>
   2f63f:	mov    r11,QWORD PTR [r15-0x38]
   2f643:	lea    r14,[r15-0x70]
   2f647:	lea    rdx,[r13-0x4]
   2f64b:	mov    edi,0xffffffa3
   2f650:	mov    ecx,0x11
   2f655:	jmp    2f18a <__sprintf_chk@plt+0x247da>
   2f65a:	lea    r14,[r15-0x38]
   2f65e:	lea    rdx,[r13-0x2]
   2f662:	mov    edi,0xffffffa3
   2f667:	xor    r10d,r10d
   2f66a:	mov    ecx,0x11
   2f66f:	xor    r9d,r9d
   2f672:	xor    r11d,r11d
   2f675:	xor    r12d,r12d
   2f678:	mov    QWORD PTR [rsp+0x38],0x1
   2f681:	mov    QWORD PTR [rsp+0x30],0x0
   2f68a:	mov    QWORD PTR [rsp+0x28],0x0
   2f693:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f698:	mov    rax,QWORD PTR [r15-0x30]
   2f69c:	mov    QWORD PTR [rsp+0x38],rax
   2f6a1:	lea    r14,[r15-0x70]
   2f6a5:	lea    rdx,[r13-0x4]
   2f6a9:	mov    edi,0xffffffa3
   2f6ae:	mov    ecx,0x11
   2f6b3:	jmp    2f4a8 <__sprintf_chk@plt+0x24af8>
   2f6b8:	mov    rax,QWORD PTR [r15-0x38]
   2f6bc:	jmp    2f69c <__sprintf_chk@plt+0x24cec>
   2f6be:	lea    r14,[r15-0x38]
   2f6c2:	lea    rdx,[r13-0x2]
   2f6c6:	mov    edi,0xffffffa3
   2f6cb:	xor    r10d,r10d
   2f6ce:	mov    ecx,0x11
   2f6d3:	xor    r9d,r9d
   2f6d6:	xor    r11d,r11d
   2f6d9:	xor    r12d,r12d
   2f6dc:	mov    QWORD PTR [rsp+0x38],0x0
   2f6e5:	mov    QWORD PTR [rsp+0x30],0x1
   2f6ee:	mov    QWORD PTR [rsp+0x28],0x0
   2f6f7:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f6fc:	mov    rax,QWORD PTR [r15-0x30]
   2f700:	mov    QWORD PTR [rsp+0x30],rax
   2f705:	lea    r14,[r15-0x70]
   2f709:	lea    rdx,[r13-0x4]
   2f70d:	mov    edi,0xffffffa3
   2f712:	mov    ecx,0x11
   2f717:	jmp    2f4e6 <__sprintf_chk@plt+0x24b36>
   2f71c:	mov    rax,QWORD PTR [r15-0x38]
   2f720:	jmp    2f700 <__sprintf_chk@plt+0x24d50>
   2f722:	mov    rax,QWORD PTR [r15]
   2f725:	lea    r14,[r15-0x38]
   2f729:	lea    rdx,[r13-0x2]
   2f72d:	mov    edi,0xffffffa3
   2f732:	mov    ecx,0x11
   2f737:	mov    QWORD PTR [rsp+0x28],rax
   2f73c:	jmp    2f44f <__sprintf_chk@plt+0x24a9f>
   2f741:	mov    rax,QWORD PTR [r15-0x30]
   2f745:	jmp    2f59a <__sprintf_chk@plt+0x24bea>
   2f74a:	mov    r12,QWORD PTR [r15+0x8]
   2f74e:	lea    r14,[r15-0x70]
   2f752:	lea    rdx,[r13-0x4]
   2f756:	mov    edi,0x2b
   2f75b:	mov    ecx,0x19
   2f760:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f765:	mov    r8d,DWORD PTR [r15-0x8]
   2f769:	mov    rax,QWORD PTR [r15-0x30]
   2f76d:	mov    rcx,QWORD PTR [r15-0x28]
   2f771:	mov    rsi,QWORD PTR [r15-0x20]
   2f775:	mov    rdi,QWORD PTR [r15-0x18]
   2f779:	mov    DWORD PTR [rsp+0xb4],r8d
   2f781:	mov    r8,QWORD PTR [rsp+0x3a0]
   2f789:	mov    rdx,QWORD PTR [r15-0x10]
   2f78d:	mov    QWORD PTR [rsp+0x88],rax
   2f795:	mov    QWORD PTR [rsp+0x90],rcx
   2f79d:	mov    r14,QWORD PTR [r15-0x38]
   2f7a1:	mov    QWORD PTR [rsp+0xb8],r8
   2f7a9:	mov    r8,QWORD PTR [rsp+0x398]
   2f7b1:	mov    QWORD PTR [rsp+0x98],rsi
   2f7b9:	mov    rcx,QWORD PTR [rsp+0x3b8]
   2f7c1:	mov    QWORD PTR [rsp+0xc0],r8
   2f7c9:	mov    r8d,DWORD PTR [r15]
   2f7cc:	mov    QWORD PTR [rsp+0xa0],rdi
   2f7d4:	mov    rsi,QWORD PTR [rsp+0x3c0]
   2f7dc:	mov    QWORD PTR [rsp+0xa8],rdx
   2f7e4:	mov    edi,DWORD PTR [rsp+0x3c8]
   2f7eb:	mov    rdx,QWORD PTR [rsp+0x3b0]
   2f7f3:	mov    rax,QWORD PTR [rsp+0x3a8]
   2f7fb:	test   r8d,r8d
   2f7fe:	js     31668 <__sprintf_chk@plt+0x26cb8>
   2f804:	xor    r8d,r8d
   2f807:	add    edi,DWORD PTR [rsp+0xb4]
   2f80e:	seto   r8b
   2f812:	mov    DWORD PTR [rsp+0xb4],r8d
   2f81a:	xor    r8d,r8d
   2f81d:	add    rsi,QWORD PTR [rsp+0xa8]
   2f825:	seto   r8b
   2f829:	mov    QWORD PTR [rsp+0xa8],r8
   2f831:	xor    r8d,r8d
   2f834:	add    rcx,QWORD PTR [rsp+0xa0]
   2f83c:	seto   r8b
   2f840:	mov    QWORD PTR [rsp+0xa0],r8
   2f848:	xor    r8d,r8d
   2f84b:	add    rdx,QWORD PTR [rsp+0x98]
   2f853:	seto   r8b
   2f857:	mov    QWORD PTR [rsp+0x98],r8
   2f85f:	xor    r8d,r8d
   2f862:	add    rax,QWORD PTR [rsp+0x90]
   2f86a:	seto   r8b
   2f86e:	mov    QWORD PTR [rsp+0x90],rax
   2f876:	xor    eax,eax
   2f878:	mov    QWORD PTR [rsp+0xc8],r8
   2f880:	mov    r8,QWORD PTR [rsp+0xb8]
   2f888:	add    r8,QWORD PTR [rsp+0x88]
   2f890:	mov    QWORD PTR [rsp+0x88],r8
   2f898:	mov    r8,QWORD PTR [rsp+0xc0]
   2f8a0:	seto   al
   2f8a3:	add    r8,r14
   2f8a6:	seto   r14b
   2f8aa:	movzx  r14d,r14b
   2f8ae:	mov    QWORD PTR [rsp+0xb8],r14
   2f8b6:	mov    r14,r8
   2f8b9:	movzx  r8d,BYTE PTR [rsp+0xa8]
   2f8c2:	or     r8b,BYTE PTR [rsp+0xb4]
   2f8ca:	or     r8b,BYTE PTR [rsp+0xa0]
   2f8d2:	or     r8b,BYTE PTR [rsp+0x98]
   2f8da:	or     r8b,BYTE PTR [rsp+0xc8]
   2f8e2:	or     r8d,eax
   2f8e5:	or     r8b,BYTE PTR [rsp+0xb8]
   2f8ed:	mov    rax,QWORD PTR [rsp+0x90]
   2f8f5:	mov    DWORD PTR [rsp+0x3c8],edi
   2f8fc:	mov    QWORD PTR [rsp+0x3c0],rsi
   2f904:	mov    QWORD PTR [rsp+0x3a8],rax
   2f90c:	mov    rax,QWORD PTR [rsp+0x88]
   2f914:	mov    QWORD PTR [rsp+0x3b8],rcx
   2f91c:	mov    QWORD PTR [rsp+0x3b0],rdx
   2f924:	mov    QWORD PTR [rsp+0x3a0],rax
   2f92c:	mov    QWORD PTR [rsp+0x398],r14
   2f934:	test   r8b,r8b
   2f937:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2f93d:	mov    BYTE PTR [rsp+0x3d1],0x1
   2f945:	lea    r14,[r15-0x70]
   2f949:	lea    rdx,[r13-0x4]
   2f94d:	mov    edi,0xffffffa3
   2f952:	mov    ecx,0x10
   2f957:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f95c:	mov    rax,QWORD PTR [r15-0x60]
   2f960:	movdqu xmm7,XMMWORD PTR [r15-0x70]
   2f966:	movabs rdx,0x8000000000000000
   2f970:	mov    QWORD PTR [rsp+0x360],rax
   2f978:	mov    rax,QWORD PTR [r15-0x30]
   2f97c:	movaps XMMWORD PTR [rsp+0x350],xmm7
   2f984:	mov    rcx,rax
   2f987:	neg    rcx
   2f98a:	mov    QWORD PTR [rsp+0x368],rcx
   2f992:	cmp    rax,rdx
   2f995:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2f99b:	mov    rax,QWORD PTR [r15+0x8]
   2f99f:	mov    rcx,rax
   2f9a2:	neg    rcx
   2f9a5:	mov    QWORD PTR [rsp+0x370],rcx
   2f9ad:	cmp    rax,rdx
   2f9b0:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2f9b6:	lea    r14,[r15-0xa8]
   2f9bd:	lea    rdx,[r13-0x6]
   2f9c1:	mov    edi,0xffffffa3
   2f9c6:	mov    ecx,0xf
   2f9cb:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f9d0:	mov    eax,DWORD PTR [r15]
   2f9d3:	add    eax,0xe10
   2f9d8:	mov    DWORD PTR [rsp+0x348],eax
   2f9df:	lea    r14,[r15-0x38]
   2f9e3:	lea    rdx,[r13-0x2]
   2f9e7:	mov    edi,0xffffffa3
   2f9ec:	mov    ecx,0xc
   2f9f1:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2f9f6:	lea    rax,[rsp+0x330]
   2f9fe:	mov    rcx,QWORD PTR [r15-0x28]
   2fa02:	mov    rdx,QWORD PTR [r15-0x30]
   2fa06:	mov    DWORD PTR [rsp+0x98],r10d
   2fa0e:	movzx  esi,BYTE PTR [r15-0x38]
   2fa13:	mov    r8,QWORD PTR [r15]
   2fa16:	mov    rdi,rax
   2fa19:	mov    QWORD PTR [rsp+0x90],r9
   2fa21:	mov    QWORD PTR [rsp+0x88],r11
   2fa29:	call   61450 <_obstack_memory_used@@Base+0x147d0>
   2fa2e:	test   al,al
   2fa30:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2fa36:	movsxd rax,DWORD PTR [rsp+0x348]
   2fa3e:	xor    edx,edx
   2fa40:	add    rax,QWORD PTR [r15-0x70]
   2fa44:	movsxd rcx,eax
   2fa47:	seto   dl
   2fa4a:	mov    DWORD PTR [rsp+0x348],eax
   2fa51:	cmp    rax,rcx
   2fa54:	mov    ecx,0x1
   2fa59:	cmovne edx,ecx
   2fa5c:	test   edx,edx
   2fa5e:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2fa64:	lea    r14,[r15-0xa8]
   2fa6b:	lea    rdx,[r13-0x6]
   2fa6f:	mov    edi,0xffffffa3
   2fa74:	mov    r11,QWORD PTR [rsp+0x88]
   2fa7c:	mov    r9,QWORD PTR [rsp+0x90]
   2fa84:	mov    r10d,DWORD PTR [rsp+0x98]
   2fa8c:	mov    ecx,0xc
   2fa91:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fa96:	mov    DWORD PTR [rsp+0x98],r10d
   2fa9e:	mov    QWORD PTR [rsp+0x90],r9
   2faa6:	mov    QWORD PTR [rsp+0x88],r11
   2faae:	mov    DWORD PTR [rsp+0x348],0xffff9d90
   2fab9:	mov    eax,DWORD PTR [r15+0x30]
   2fabd:	xor    r8d,r8d
   2fac0:	add    eax,DWORD PTR [rsp+0x3c8]
   2fac7:	mov    DWORD PTR [rsp+0x3c8],eax
   2face:	seto   r8b
   2fad2:	mov    rax,QWORD PTR [rsp+0x3c0]
   2fada:	add    rax,QWORD PTR [r15+0x28]
   2fade:	mov    rdx,rax
   2fae1:	seto   al
   2fae4:	xor    edi,edi
   2fae6:	mov    QWORD PTR [rsp+0x3c0],rdx
   2faee:	mov    rdx,QWORD PTR [rsp+0x3b8]
   2faf6:	movzx  eax,al
   2faf9:	add    rdx,QWORD PTR [r15+0x20]
   2fafd:	seto   dil
   2fb01:	mov    QWORD PTR [rsp+0x3b8],rdx
   2fb09:	xor    esi,esi
   2fb0b:	mov    rdx,QWORD PTR [rsp+0x3b0]
   2fb13:	add    rdx,QWORD PTR [r15+0x18]
   2fb17:	seto   sil
   2fb1b:	mov    QWORD PTR [rsp+0x3b0],rdx
   2fb23:	xor    r10d,r10d
   2fb26:	mov    rdx,QWORD PTR [rsp+0x3a8]
   2fb2e:	add    rdx,QWORD PTR [r15+0x10]
   2fb32:	seto   r10b
   2fb36:	mov    QWORD PTR [rsp+0x3a8],rdx
   2fb3e:	xor    r14d,r14d
   2fb41:	mov    rdx,QWORD PTR [rsp+0x3a0]
   2fb49:	add    rdx,QWORD PTR [r15+0x8]
   2fb4d:	seto   r14b
   2fb51:	mov    QWORD PTR [rsp+0x3a0],rdx
   2fb59:	xor    ecx,ecx
   2fb5b:	mov    rdx,QWORD PTR [rsp+0x398]
   2fb63:	add    rdx,QWORD PTR [r15]
   2fb66:	seto   cl
   2fb69:	or     eax,r8d
   2fb6c:	mov    QWORD PTR [rsp+0x398],rdx
   2fb74:	or     eax,edi
   2fb76:	or     eax,esi
   2fb78:	or     eax,r10d
   2fb7b:	or     al,r14b
   2fb7e:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2fb84:	test   rcx,rcx
   2fb87:	jne    2e3f8 <__sprintf_chk@plt+0x23a48>
   2fb8d:	xor    edi,edi
   2fb8f:	mov    edx,0x5
   2fb94:	lea    r14,[r15-0x70]
   2fb98:	mov    BYTE PTR [rsp+0x3d1],0x1
   2fba0:	lea    rsi,[rip+0x36c00]        # 667a7 <_obstack_memory_used@@Base+0x19b27>
   2fba7:	call   a040 <dcgettext@plt>
   2fbac:	cmp    BYTE PTR [rsp+0x409],0x0
   2fbb4:	mov    r11,QWORD PTR [rsp+0x88]
   2fbbc:	lea    rdx,[r13-0x4]
   2fbc0:	mov    r9,QWORD PTR [rsp+0x90]
   2fbc8:	mov    r10d,DWORD PTR [rsp+0x98]
   2fbd0:	mov    rdi,rax
   2fbd3:	je     3122c <__sprintf_chk@plt+0x2687c>
   2fbd9:	lea    rax,[rsp+0x330]
   2fbe1:	mov    DWORD PTR [rsp+0xa0],r10d
   2fbe9:	mov    rsi,rax
   2fbec:	mov    QWORD PTR [rsp+0x98],r9
   2fbf4:	mov    QWORD PTR [rsp+0x90],r11
   2fbfc:	mov    QWORD PTR [rsp+0x88],rdx
   2fc04:	call   49f00 <argp_usage@@Base+0x6b80>
   2fc09:	mov    rdx,QWORD PTR [rsp+0x88]
   2fc11:	mov    r11,QWORD PTR [rsp+0x90]
   2fc19:	mov    edi,0xffffffa3
   2fc1e:	mov    r9,QWORD PTR [rsp+0x98]
   2fc26:	mov    r10d,DWORD PTR [rsp+0xa0]
   2fc2e:	mov    ecx,0xc
   2fc33:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fc38:	mov    rax,QWORD PTR [r15-0x38]
   2fc3c:	mov    DWORD PTR [rsp+0x98],r10d
   2fc44:	mov    QWORD PTR [rsp+0x90],r9
   2fc4c:	mov    QWORD PTR [rsp+0x88],r11
   2fc54:	mov    DWORD PTR [rsp+0x348],eax
   2fc5b:	jmp    2fab9 <__sprintf_chk@plt+0x25109>
   2fc60:	lea    r14,[r15-0x38]
   2fc64:	lea    rdx,[r13-0x2]
   2fc68:	mov    edi,0xffffffa3
   2fc6d:	mov    DWORD PTR [rsp+0x348],0xffff9d90
   2fc78:	mov    ecx,0xc
   2fc7d:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fc82:	mov    rax,QWORD PTR [r15]
   2fc85:	jmp    2f9d8 <__sprintf_chk@plt+0x25028>
   2fc8a:	lea    r14,[r15-0x70]
   2fc8e:	lea    rdx,[r13-0x4]
   2fc92:	mov    edi,0xffffffa3
   2fc97:	add    QWORD PTR [rsp+0x3f0],0x1
   2fca0:	mov    DWORD PTR [rsp+0x344],0x1
   2fcab:	mov    ecx,0xb
   2fcb0:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fcb5:	mov    rax,QWORD PTR [r15]
   2fcb8:	lea    r14,[r15-0x38]
   2fcbc:	lea    rdx,[r13-0x2]
   2fcc0:	mov    edi,0xffffffa3
   2fcc5:	mov    ecx,0xb
   2fcca:	mov    DWORD PTR [rsp+0x344],eax
   2fcd1:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fcd6:	lea    rax,[rsp+0x330]
   2fcde:	mov    rcx,QWORD PTR [r15-0x28]
   2fce2:	mov    rdx,QWORD PTR [r15-0x30]
   2fce6:	mov    DWORD PTR [rsp+0x98],r10d
   2fcee:	movzx  esi,BYTE PTR [r15-0x38]
   2fcf3:	mov    r8,QWORD PTR [r15]
   2fcf6:	mov    rdi,rax
   2fcf9:	mov    QWORD PTR [rsp+0x90],r9
   2fd01:	add    QWORD PTR [rsp+0x400],0x1
   2fd0a:	mov    QWORD PTR [rsp+0x88],r11
   2fd12:	call   61450 <_obstack_memory_used@@Base+0x147d0>
   2fd17:	test   al,al
   2fd19:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   2fd1f:	mov    r11,QWORD PTR [rsp+0x88]
   2fd27:	mov    r9,QWORD PTR [rsp+0x90]
   2fd2f:	lea    r14,[r15-0x70]
   2fd33:	lea    rdx,[r13-0x4]
   2fd37:	mov    r10d,DWORD PTR [rsp+0x98]
   2fd3f:	mov    edi,0xffffffe5
   2fd44:	mov    ecx,0xa
   2fd49:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fd4e:	mov    rax,QWORD PTR [r15-0x38]
   2fd52:	mov    edi,0x14
   2fd57:	mov    rdx,QWORD PTR [r15-0xa0]
   2fd5e:	mov    DWORD PTR [rsp+0x34c],0x2
   2fd69:	mov    rcx,QWORD PTR [r15-0x110]
   2fd70:	lea    r14,[r15-0x150]
   2fd77:	mov    QWORD PTR [rsp+0x388],rax
   2fd7f:	movsxd rax,DWORD PTR [r15-0x30]
   2fd83:	mov    QWORD PTR [rsp+0x378],rcx
   2fd8b:	mov    ecx,0x8
   2fd90:	mov    QWORD PTR [rsp+0x380],rdx
   2fd98:	lea    rdx,[r13-0xc]
   2fd9c:	mov    QWORD PTR [rsp+0x390],rax
   2fda4:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fda9:	mov    rdx,QWORD PTR [r15-0xa0]
   2fdb0:	mov    rax,QWORD PTR [r15-0x30]
   2fdb4:	mov    QWORD PTR [rsp+0x388],0x0
   2fdc0:	lea    r14,[r15-0xe0]
   2fdc7:	mov    DWORD PTR [rsp+0x34c],0x2
   2fdd2:	mov    edi,0x14
   2fdd7:	mov    ecx,0x8
   2fddc:	mov    QWORD PTR [rsp+0x378],rdx
   2fde4:	lea    rdx,[r13-0x8]
   2fde8:	mov    QWORD PTR [rsp+0x380],rax
   2fdf0:	mov    QWORD PTR [rsp+0x390],0x0
   2fdfc:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fe01:	mov    rax,QWORD PTR [r15-0x30]
   2fe05:	lea    r14,[r15-0x70]
   2fe09:	mov    QWORD PTR [rsp+0x380],0x0
   2fe15:	lea    rdx,[r13-0x4]
   2fe19:	mov    DWORD PTR [rsp+0x34c],0x2
   2fe24:	mov    edi,0x14
   2fe29:	mov    ecx,0x8
   2fe2e:	mov    QWORD PTR [rsp+0x378],rax
   2fe36:	mov    QWORD PTR [rsp+0x388],0x0
   2fe42:	mov    QWORD PTR [rsp+0x390],0x0
   2fe4e:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fe53:	mov    rax,QWORD PTR [r15-0x38]
   2fe57:	mov    rdx,QWORD PTR [r15-0xa0]
   2fe5e:	lea    r14,[r15-0x150]
   2fe65:	mov    edi,0xffffffa3
   2fe6a:	mov    rcx,QWORD PTR [r15-0x110]
   2fe71:	mov    QWORD PTR [rsp+0x388],rax
   2fe79:	movsxd rax,DWORD PTR [r15-0x30]
   2fe7d:	mov    QWORD PTR [rsp+0x378],rcx
   2fe85:	mov    ecx,0x7
   2fe8a:	mov    QWORD PTR [rsp+0x390],rax
   2fe92:	mov    rax,QWORD PTR [r15]
   2fe95:	mov    QWORD PTR [rsp+0x380],rdx
   2fe9d:	lea    rdx,[r13-0xc]
   2fea1:	mov    DWORD PTR [rsp+0x34c],eax
   2fea8:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2fead:	mov    rax,QWORD PTR [r15-0x30]
   2feb1:	mov    rdx,QWORD PTR [r15-0xa0]
   2feb8:	mov    QWORD PTR [rsp+0x388],0x0
   2fec4:	lea    r14,[r15-0xe0]
   2fecb:	mov    edi,0xffffffa3
   2fed0:	mov    ecx,0x7
   2fed5:	mov    QWORD PTR [rsp+0x390],0x0
   2fee1:	mov    QWORD PTR [rsp+0x380],rax
   2fee9:	mov    rax,QWORD PTR [r15]
   2feec:	mov    QWORD PTR [rsp+0x378],rdx
   2fef4:	lea    rdx,[r13-0x8]
   2fef8:	mov    DWORD PTR [rsp+0x34c],eax
   2feff:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2ff04:	mov    rax,QWORD PTR [r15-0x30]
   2ff08:	lea    r14,[r15-0x70]
   2ff0c:	mov    QWORD PTR [rsp+0x380],0x0
   2ff18:	lea    rdx,[r13-0x4]
   2ff1c:	mov    edi,0xffffffa3
   2ff21:	mov    ecx,0x7
   2ff26:	mov    QWORD PTR [rsp+0x388],0x0
   2ff32:	mov    QWORD PTR [rsp+0x378],rax
   2ff3a:	mov    rax,QWORD PTR [r15]
   2ff3d:	mov    QWORD PTR [rsp+0x390],0x0
   2ff49:	mov    DWORD PTR [rsp+0x34c],eax
   2ff50:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   2ff55:	mov    DWORD PTR [rsp+0x98],r10d
   2ff5d:	mov    edx,0x5
   2ff62:	lea    rsi,[rip+0x36847]        # 667b0 <_obstack_memory_used@@Base+0x19b30>
   2ff69:	mov    QWORD PTR [rsp+0x90],r9
   2ff71:	mov    QWORD PTR [rsp+0x88],r11
   2ff79:	xor    edi,edi
   2ff7b:	lea    r14,[r15-0x38]
   2ff7f:	call   a040 <dcgettext@plt>
   2ff84:	cmp    BYTE PTR [rsp+0x409],0x0
   2ff8c:	mov    r11,QWORD PTR [rsp+0x88]
   2ff94:	lea    rdx,[r13-0x2]
   2ff98:	mov    r9,QWORD PTR [rsp+0x90]
   2ffa0:	mov    r10d,DWORD PTR [rsp+0x98]
   2ffa8:	mov    rdi,rax
   2ffab:	je     30ac5 <__sprintf_chk@plt+0x26115>
   2ffb1:	lea    rax,[rsp+0x330]
   2ffb9:	mov    DWORD PTR [rsp+0xa0],r10d
   2ffc1:	mov    rsi,rax
   2ffc4:	mov    QWORD PTR [rsp+0x98],r9
   2ffcc:	mov    QWORD PTR [rsp+0x90],r11
   2ffd4:	mov    QWORD PTR [rsp+0x88],rdx
   2ffdc:	call   49f00 <argp_usage@@Base+0x6b80>
   2ffe1:	mov    rdx,QWORD PTR [rsp+0x88]
   2ffe9:	mov    r11,QWORD PTR [rsp+0x90]
   2fff1:	mov    edi,0xffffffa3
   2fff6:	mov    ecx,0x4
   2fffb:	mov    r9,QWORD PTR [rsp+0x98]
   30003:	mov    r10d,DWORD PTR [rsp+0xa0]
   3000b:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30010:	mov    DWORD PTR [rsp+0x98],r10d
   30018:	mov    edx,0x5
   3001d:	lea    rsi,[rip+0x36c30]        # 66c54 <_obstack_memory_used@@Base+0x19fd4>
   30024:	mov    QWORD PTR [rsp+0x90],r9
   3002c:	mov    QWORD PTR [rsp+0x88],r11
   30034:	xor    edi,edi
   30036:	lea    r14,[r15-0x38]
   3003a:	call   a040 <dcgettext@plt>
   3003f:	cmp    BYTE PTR [rsp+0x409],0x0
   30047:	mov    r11,QWORD PTR [rsp+0x88]
   3004f:	lea    rdx,[r13-0x2]
   30053:	mov    r9,QWORD PTR [rsp+0x90]
   3005b:	mov    r10d,DWORD PTR [rsp+0x98]
   30063:	mov    rdi,rax
   30066:	je     30ac5 <__sprintf_chk@plt+0x26115>
   3006c:	lea    rax,[rsp+0x330]
   30074:	mov    DWORD PTR [rsp+0xa0],r10d
   3007c:	mov    rsi,rax
   3007f:	mov    QWORD PTR [rsp+0x98],r9
   30087:	mov    QWORD PTR [rsp+0x90],r11
   3008f:	mov    QWORD PTR [rsp+0x88],rdx
   30097:	call   49af0 <argp_usage@@Base+0x6770>
   3009c:	jmp    2ffe1 <__sprintf_chk@plt+0x25631>
   300a1:	movdqu xmm6,XMMWORD PTR [r15]
   300a6:	xor    edi,edi
   300a8:	mov    edx,0x5
   300ad:	lea    r14,[r15-0x70]
   300b1:	lea    rsi,[rip+0x366c5]        # 6677d <_obstack_memory_used@@Base+0x19afd>
   300b8:	mov    DWORD PTR [rsp+0x98],r10d
   300c0:	mov    QWORD PTR [rsp+0x90],r9
   300c8:	mov    QWORD PTR [rsp+0x88],r11
   300d0:	mov    BYTE PTR [rsp+0x3d0],0x1
   300d8:	movups XMMWORD PTR [rsp+0x388],xmm6
   300e0:	call   a040 <dcgettext@plt>
   300e5:	cmp    BYTE PTR [rsp+0x409],0x0
   300ed:	mov    r11,QWORD PTR [rsp+0x88]
   300f5:	lea    rdx,[r13-0x4]
   300f9:	mov    r9,QWORD PTR [rsp+0x90]
   30101:	mov    r10d,DWORD PTR [rsp+0x98]
   30109:	mov    rdi,rax
   3010c:	je     3141d <__sprintf_chk@plt+0x26a6d>
   30112:	lea    rax,[rsp+0x330]
   3011a:	mov    DWORD PTR [rsp+0xa0],r10d
   30122:	mov    rsi,rax
   30125:	mov    QWORD PTR [rsp+0x98],r9
   3012d:	mov    QWORD PTR [rsp+0x90],r11
   30135:	mov    QWORD PTR [rsp+0x88],rdx
   3013d:	call   49af0 <argp_usage@@Base+0x6770>
   30142:	mov    rdx,QWORD PTR [rsp+0x88]
   3014a:	mov    r11,QWORD PTR [rsp+0x90]
   30152:	mov    edi,0xffffffa3
   30157:	mov    r9,QWORD PTR [rsp+0x98]
   3015f:	mov    r10d,DWORD PTR [rsp+0xa0]
   30167:	mov    ecx,0x2
   3016c:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30171:	add    QWORD PTR [rsp+0x400],0x1
   3017a:	mov    edx,0x5
   3017f:	lea    rsi,[rip+0x36618]        # 6679e <_obstack_memory_used@@Base+0x19b1e>
   30186:	mov    DWORD PTR [rsp+0x98],r10d
   3018e:	mov    QWORD PTR [rsp+0x90],r9
   30196:	mov    QWORD PTR [rsp+0x88],r11
   3019e:	jmp    30034 <__sprintf_chk@plt+0x25684>
   301a3:	add    QWORD PTR [rsp+0x3e0],0x1
   301ac:	mov    edx,0x5
   301b1:	lea    rsi,[rip+0x365eb]        # 667a3 <_obstack_memory_used@@Base+0x19b23>
   301b8:	mov    DWORD PTR [rsp+0x98],r10d
   301c0:	mov    QWORD PTR [rsp+0x90],r9
   301c8:	mov    QWORD PTR [rsp+0x88],r11
   301d0:	jmp    30034 <__sprintf_chk@plt+0x25684>
   301d5:	add    QWORD PTR [rsp+0x3d8],0x1
   301de:	mov    edx,0x5
   301e3:	lea    rsi,[rip+0x369af]        # 66b99 <_obstack_memory_used@@Base+0x19f19>
   301ea:	mov    DWORD PTR [rsp+0x98],r10d
   301f2:	mov    QWORD PTR [rsp+0x90],r9
   301fa:	mov    QWORD PTR [rsp+0x88],r11
   30202:	jmp    30034 <__sprintf_chk@plt+0x25684>
   30207:	mov    DWORD PTR [rsp+0x98],r10d
   3020f:	mov    edx,0x5
   30214:	lea    rsi,[rip+0x3658c]        # 667a7 <_obstack_memory_used@@Base+0x19b27>
   3021b:	mov    QWORD PTR [rsp+0x90],r9
   30223:	mov    QWORD PTR [rsp+0x88],r11
   3022b:	jmp    2ff79 <__sprintf_chk@plt+0x255c9>
   30230:	add    QWORD PTR [rsp+0x3f8],0x1
   30239:	mov    edx,0x5
   3023e:	lea    rsi,[rip+0x34d62]        # 64fa7 <_obstack_memory_used@@Base+0x18327>
   30245:	mov    DWORD PTR [rsp+0x98],r10d
   3024d:	mov    QWORD PTR [rsp+0x90],r9
   30255:	mov    QWORD PTR [rsp+0x88],r11
   3025d:	jmp    30034 <__sprintf_chk@plt+0x25684>
   30262:	add    QWORD PTR [rsp+0x3f8],0x1
   3026b:	mov    edx,0x5
   30270:	lea    rsi,[rip+0x36518]        # 6678f <_obstack_memory_used@@Base+0x19b0f>
   30277:	add    QWORD PTR [rsp+0x3d8],0x1
   30280:	mov    DWORD PTR [rsp+0x98],r10d
   30288:	mov    QWORD PTR [rsp+0x90],r9
   30290:	mov    QWORD PTR [rsp+0x88],r11
   30298:	jmp    30034 <__sprintf_chk@plt+0x25684>
   3029d:	add    QWORD PTR [rsp+0x3e8],0x1
   302a6:	mov    edx,0x5
   302ab:	lea    rsi,[rip+0x364e6]        # 66798 <_obstack_memory_used@@Base+0x19b18>
   302b2:	mov    DWORD PTR [rsp+0x98],r10d
   302ba:	mov    QWORD PTR [rsp+0x90],r9
   302c2:	mov    QWORD PTR [rsp+0x88],r11
   302ca:	jmp    30034 <__sprintf_chk@plt+0x25684>
   302cf:	mov    rax,QWORD PTR [r15-0x68]
   302d3:	mov    QWORD PTR [rsp+0x370],rax
   302db:	mov    rax,QWORD PTR [r15-0x38]
   302df:	mov    QWORD PTR [rsp+0x368],rax
   302e7:	mov    rax,QWORD PTR [r15+0x8]
   302eb:	mov    rdx,rax
   302ee:	neg    rdx
   302f1:	mov    QWORD PTR [rsp+0x358],rdx
   302f9:	movabs rdx,0x8000000000000000
   30303:	cmp    rax,rdx
   30306:	je     2e3f8 <__sprintf_chk@plt+0x23a48>
   3030c:	mov    rax,QWORD PTR [r15+0x10]
   30310:	lea    r14,[r15-0xa8]
   30317:	lea    rdx,[r13-0x6]
   3031b:	mov    edi,0xffffffa3
   30320:	mov    ecx,0xe
   30325:	mov    QWORD PTR [rsp+0x360],rax
   3032d:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30332:	mov    r8,QWORD PTR [r15-0xd0]
   30339:	movzx  eax,BYTE PTR [rsp+0x409]
   30341:	cmp    r8,0x3
   30345:	jle    3144b <__sprintf_chk@plt+0x26a9b>
   3034b:	test   al,al
   3034d:	jne    31a70 <__sprintf_chk@plt+0x270c0>
   30353:	mov    rax,QWORD PTR [r15-0xd0]
   3035a:	lea    r14,[r15-0x118]
   30361:	lea    rdx,[r13-0xa]
   30365:	movdqu xmm7,XMMWORD PTR [r15-0xe0]
   3036e:	mov    edi,0xffffffa3
   30373:	mov    ecx,0xe
   30378:	mov    QWORD PTR [rsp+0x360],rax
   30380:	mov    rax,QWORD PTR [r15-0x68]
   30384:	movaps XMMWORD PTR [rsp+0x350],xmm7
   3038c:	mov    QWORD PTR [rsp+0x368],rax
   30394:	mov    rax,QWORD PTR [r15+0x8]
   30398:	mov    QWORD PTR [rsp+0x370],rax
   303a0:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   303a5:	mov    rax,QWORD PTR [r15-0x68]
   303a9:	lea    r14,[r15-0xa8]
   303b0:	lea    rdx,[r13-0x6]
   303b4:	mov    edi,0xffffffa3
   303b9:	mov    ecx,0xe
   303be:	mov    QWORD PTR [rsp+0x368],rax
   303c6:	mov    rax,QWORD PTR [r15+0x8]
   303ca:	mov    QWORD PTR [rsp+0x370],rax
   303d2:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   303d7:	mov    rax,QWORD PTR [r15-0x30]
   303db:	mov    QWORD PTR [rsp+0x338],rax
   303e3:	mov    rax,QWORD PTR [r15]
   303e6:	lea    r14,[r15-0x70]
   303ea:	lea    rdx,[r13-0x4]
   303ee:	mov    BYTE PTR [rsp+0x410],0x1
   303f6:	mov    edi,0xffffffa3
   303fb:	mov    ecx,0xd
   30400:	mov    DWORD PTR [rsp+0x340],eax
   30407:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   3040c:	mov    rax,QWORD PTR [r15-0x30]
   30410:	lea    r14,[r15-0x70]
   30414:	lea    rdx,[r13-0x4]
   30418:	mov    edi,0xffffffa3
   3041d:	mov    ecx,0xe
   30422:	mov    QWORD PTR [rsp+0x370],rax
   3042a:	mov    rax,QWORD PTR [r15]
   3042d:	mov    QWORD PTR [rsp+0x368],rax
   30435:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   3043a:	mov    rax,QWORD PTR [r15-0xa8]
   30441:	movdqu xmm7,XMMWORD PTR [r15]
   30446:	lea    r14,[r15-0xe0]
   3044d:	lea    rdx,[r13-0x8]
   30451:	mov    edi,0xffffffa3
   30456:	mov    ecx,0xe
   3045b:	mov    QWORD PTR [rsp+0x368],rax
   30463:	mov    rax,QWORD PTR [r15-0x68]
   30467:	movaps XMMWORD PTR [rsp+0x350],xmm7
   3046f:	mov    QWORD PTR [rsp+0x370],rax
   30477:	mov    rax,QWORD PTR [r15+0x10]
   3047b:	mov    QWORD PTR [rsp+0x360],rax
   30483:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30488:	mov    rax,QWORD PTR [r15-0x38]
   3048c:	lea    r14,[r15-0x70]
   30490:	lea    rdx,[r13-0x4]
   30494:	mov    edi,0xffffffa3
   30499:	mov    ecx,0xe
   3049e:	mov    QWORD PTR [rsp+0x368],rax
   304a6:	mov    rax,QWORD PTR [r15+0x8]
   304aa:	mov    QWORD PTR [rsp+0x370],rax
   304b2:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   304b7:	mov    rax,QWORD PTR [r15-0x68]
   304bb:	movdqu xmm6,XMMWORD PTR [r15]
   304c0:	mov    QWORD PTR [rsp+0x370],rax
   304c8:	mov    rax,QWORD PTR [r15-0x38]
   304cc:	movaps XMMWORD PTR [rsp+0x350],xmm6
   304d4:	mov    QWORD PTR [rsp+0x368],rax
   304dc:	jmp    3030c <__sprintf_chk@plt+0x2595c>
   304e1:	mov    rax,QWORD PTR [r15-0x38]
   304e5:	jmp    303db <__sprintf_chk@plt+0x25a2b>
   304ea:	mov    rax,QWORD PTR [r15-0x38]
   304ee:	lea    r14,[r15-0x70]
   304f2:	lea    rdx,[r13-0x4]
   304f6:	mov    QWORD PTR [rsp+0x338],0x0
   30502:	mov    edi,0xffffffa3
   30507:	mov    ecx,0xd
   3050c:	mov    DWORD PTR [rsp+0x340],eax
   30513:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30518:	mov    rax,QWORD PTR [r15]
   3051b:	lea    r14,[r15-0x38]
   3051f:	lea    rdx,[r13-0x2]
   30523:	mov    edi,0xffffffa3
   30528:	mov    QWORD PTR [rsp+0x338],0x0
   30534:	mov    ecx,0xd
   30539:	mov    DWORD PTR [rsp+0x340],eax
   30540:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30545:	mov    eax,DWORD PTR [r15-0x38]
   30549:	lea    r14,[r15-0x70]
   3054d:	lea    rdx,[r13-0x4]
   30551:	mov    edi,0xffffffa3
   30556:	mov    ecx,0xc
   3055b:	add    eax,0xe10
   30560:	mov    DWORD PTR [rsp+0x348],eax
   30567:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   3056c:	mov    rdx,r13
   3056f:	mov    r14,r15
   30572:	mov    edi,0x2b
   30577:	mov    ecx,0x19
   3057c:	mov    r12,0xffffffffffffffff
   30583:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30588:	nop    DWORD PTR [rax+rax*1+0x0]
   30590:	cmp    al,0x20
   30592:	jne    2ee56 <__sprintf_chk@plt+0x244a6>
   30598:	add    r13,0x1
   3059c:	jmp    2ee41 <__sprintf_chk@plt+0x24491>
   305a1:	nop    DWORD PTR [rax+0x0]
   305a8:	lea    rcx,[rip+0x3aa91]        # 6b040 <_obstack_memory_used@@Base+0x1e3c0>
   305af:	movzx  r12d,BYTE PTR [rcx+rax*1]
   305b4:	jmp    2e1f1 <__sprintf_chk@plt+0x23841>
   305b9:	nop    DWORD PTR [rax+0x0]
   305c0:	mov    edx,0x5
   305c5:	lea    rsi,[rip+0x36202]        # 667ce <_obstack_memory_used@@Base+0x19b4e>
   305cc:	xor    edi,edi
   305ce:	call   a040 <dcgettext@plt>
   305d3:	mov    rdi,rax
   305d6:	xor    eax,eax
   305d8:	call   49610 <argp_usage@@Base+0x6290>
   305dd:	cmp    BYTE PTR [rsp+0x3d0],0x0
   305e5:	mov    edx,0x5
   305ea:	lea    rsi,[rip+0x361ee]        # 667df <_obstack_memory_used@@Base+0x19b5f>
   305f1:	jne    30887 <__sprintf_chk@plt+0x25ed7>
   305f7:	cmp    QWORD PTR [rsp+0x400],0x0
   30600:	mov    edx,0x5
   30605:	lea    rsi,[rip+0x361ec]        # 667f8 <_obstack_memory_used@@Base+0x19b78>
   3060c:	jne    30887 <__sprintf_chk@plt+0x25ed7>
   30612:	mov    r13,QWORD PTR [rsp+0x20]
   30617:	test   r13,r13
   3061a:	je     3087b <__sprintf_chk@plt+0x25ecb>
   30620:	cmp    rbx,r15
   30623:	je     30c10 <__sprintf_chk@plt+0x26260>
   30629:	mov    edx,0x5
   3062e:	lea    rsi,[rip+0x361db]        # 66810 <_obstack_memory_used@@Base+0x19b90>
   30635:	xor    edi,edi
   30637:	call   a040 <dcgettext@plt>
   3063c:	mov    r12,QWORD PTR [rip+0x4b9a5]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   30643:	mov    rcx,r13
   30646:	mov    esi,0x1
   3064b:	mov    rdx,rax
   3064e:	xor    eax,eax
   30650:	mov    rdi,QWORD PTR [r12]
   30654:	call   a840 <__fprintf_chk@plt>
   30659:	nop    DWORD PTR [rax+0x0]
   30660:	cmp    QWORD PTR [rsp+0x3e8],0x0
   30669:	mov    rax,QWORD PTR [rsp+0x400]
   30671:	je     308c3 <__sprintf_chk@plt+0x25f13>
   30677:	test   rax,rax
   3067a:	jne    308d2 <__sprintf_chk@plt+0x25f22>
   30680:	mov    r9d,DWORD PTR [rsp+0x344]
   30688:	mov    rcx,QWORD PTR [r12]
   3068c:	test   r9d,r9d
   3068f:	jg     308ad <__sprintf_chk@plt+0x25efd>
   30695:	nop    DWORD PTR [rax]
   30698:	mov    rsi,QWORD PTR [r12]
   3069c:	mov    edi,0xa
   306a1:	call   a260 <fputc@plt>
   306a6:	cmp    BYTE PTR [rsp+0x3d0],0x0
   306ae:	movzx  r13d,BYTE PTR [rsp+0x409]
   306b7:	je     30905 <__sprintf_chk@plt+0x25f55>
   306bd:	movdqu xmm5,XMMWORD PTR [rsp+0x388]
   306c6:	mov    rax,QWORD PTR [rsp+0x8]
   306cb:	movups XMMWORD PTR [rax],xmm5
   306ce:	test   r13b,r13b
   306d1:	je     3119f <__sprintf_chk@plt+0x267ef>
   306d7:	cmp    QWORD PTR [rsp+0x20],0x0
   306dd:	mov    edx,0x5
   306e2:	lea    rsi,[rip+0x3630b]        # 669f4 <_obstack_memory_used@@Base+0x19d74>
   306e9:	je     30710 <__sprintf_chk@plt+0x25d60>
   306eb:	mov    rdi,QWORD PTR [rsp+0x20]
   306f0:	lea    rsi,[rip+0x36130]        # 66827 <_obstack_memory_used@@Base+0x19ba7>
   306f7:	call   a320 <strcmp@plt>
   306fc:	mov    edx,0x5
   30701:	test   eax,eax
   30703:	jne    30ad4 <__sprintf_chk@plt+0x26124>
   30709:	lea    rsi,[rip+0x362fe]        # 66a0e <_obstack_memory_used@@Base+0x19d8e>
   30710:	xor    edi,edi
   30712:	call   a040 <dcgettext@plt>
   30717:	mov    rdi,rax
   3071a:	xor    eax,eax
   3071c:	call   49610 <argp_usage@@Base+0x6290>
   30721:	mov    rax,QWORD PTR [rsp+0x8]
   30726:	xor    edi,edi
   30728:	mov    edx,0x5
   3072d:	lea    rsi,[rip+0x37af4]        # 68228 <_obstack_memory_used@@Base+0x1b5a8>
   30734:	mov    r8,QWORD PTR [rax]
   30737:	mov    r12d,DWORD PTR [rax+0x8]
   3073b:	mov    QWORD PTR [rsp+0x20],r8
   30740:	call   a040 <dcgettext@plt>
   30745:	mov    rsi,QWORD PTR [rsp+0x20]
   3074a:	mov    edx,r12d
   3074d:	lea    r12,[rsp+0x1a0]
   30755:	mov    rdi,rax
   30758:	xor    eax,eax
   3075a:	call   49610 <argp_usage@@Base+0x6290>
   3075f:	mov    rdi,QWORD PTR [rsp+0x8]
   30764:	mov    rsi,r12
   30767:	call   a150 <gmtime_r@plt>
   3076c:	test   rax,rax
   3076f:	je     307a1 <__sprintf_chk@plt+0x25df1>
   30771:	mov    rdi,r12
   30774:	mov    rdx,rbp
   30777:	xor    esi,esi
   30779:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   3077e:	lea    rsi,[rip+0x362a3]        # 66a28 <_obstack_memory_used@@Base+0x19da8>
   30785:	xor    edi,edi
   30787:	mov    edx,0x5
   3078c:	mov    r12,rax
   3078f:	call   a040 <dcgettext@plt>
   30794:	mov    rsi,r12
   30797:	mov    rdi,rax
   3079a:	xor    eax,eax
   3079c:	call   49610 <argp_usage@@Base+0x6290>
   307a1:	lea    r12,[rsp+0x1e0]
   307a9:	mov    rsi,QWORD PTR [rsp+0x8]
   307ae:	mov    rdi,r15
   307b1:	mov    rdx,r12
   307b4:	call   57260 <_obstack_memory_used@@Base+0xa5e0>
   307b9:	test   rax,rax
   307bc:	je     2e458 <__sprintf_chk@plt+0x23aa8>
   307c2:	mov    edi,DWORD PTR [rsp+0x208]
   307c9:	lea    rsi,[rsp+0x230]
   307d1:	call   49880 <argp_usage@@Base+0x6500>
   307d6:	mov    rdx,rbp
   307d9:	xor    esi,esi
   307db:	mov    rdi,r12
   307de:	mov    QWORD PTR [rsp+0x20],rax
   307e3:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   307e8:	xor    edi,edi
   307ea:	mov    edx,0x5
   307ef:	lea    rsi,[rip+0x36243]        # 66a39 <_obstack_memory_used@@Base+0x19db9>
   307f6:	mov    rbp,rax
   307f9:	call   a040 <dcgettext@plt>
   307fe:	mov    rdx,QWORD PTR [rsp+0x20]
   30803:	mov    rsi,rbp
   30806:	mov    rdi,rax
   30809:	xor    eax,eax
   3080b:	call   49610 <argp_usage@@Base+0x6290>
   30810:	jmp    2e458 <__sprintf_chk@plt+0x23aa8>
   30815:	lea    eax,[rcx-0x61]
   30818:	cmp    al,0x19
   3081a:	ja     2eb9f <__sprintf_chk@plt+0x241ef>
   30820:	lea    r11,[rsp+0x230]
   30828:	add    rdx,0x1
   3082c:	lea    rdi,[rsp+0x243]
   30834:	mov    rax,r11
   30837:	jmp    30854 <__sprintf_chk@plt+0x25ea4>
   30839:	nop    DWORD PTR [rax+0x0]
   30840:	cmp    sil,0x40
   30844:	jg     30850 <__sprintf_chk@plt+0x25ea0>
   30846:	cmp    sil,0x2e
   3084a:	jne    30a3c <__sprintf_chk@plt+0x2608c>
   30850:	add    rdx,0x1
   30854:	cmp    rax,rdi
   30857:	jae    30860 <__sprintf_chk@plt+0x25eb0>
   30859:	mov    BYTE PTR [rax],sil
   3085c:	add    rax,0x1
   30860:	mov    QWORD PTR [rsp+0x330],rdx
   30868:	movzx  esi,BYTE PTR [rdx]
   3086b:	cmp    sil,0x5a
   3086f:	jle    30840 <__sprintf_chk@plt+0x25e90>
   30871:	lea    ecx,[rsi-0x61]
   30874:	cmp    cl,0x19
   30877:	jbe    30850 <__sprintf_chk@plt+0x25ea0>
   30879:	jmp    30846 <__sprintf_chk@plt+0x25e96>
   3087b:	mov    edx,0x5
   30880:	lea    rsi,[rip+0x35fbf]        # 66846 <_obstack_memory_used@@Base+0x19bc6>
   30887:	xor    edi,edi
   30889:	call   a040 <dcgettext@plt>
   3088e:	mov    r12,QWORD PTR [rip+0x4b753]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   30895:	mov    esi,0x1
   3089a:	mov    rdx,rax
   3089d:	xor    eax,eax
   3089f:	mov    rdi,QWORD PTR [r12]
   308a3:	call   a840 <__fprintf_chk@plt>
   308a8:	jmp    30660 <__sprintf_chk@plt+0x25cb0>
   308ad:	mov    edx,0x5
   308b2:	mov    esi,0x1
   308b7:	lea    rdi,[rip+0x35f9d]        # 6685b <_obstack_memory_used@@Base+0x19bdb>
   308be:	call   a830 <fwrite@plt>
   308c3:	cmp    QWORD PTR [rsp+0x400],0x0
   308cc:	je     30698 <__sprintf_chk@plt+0x25ce8>
   308d2:	mov    edi,DWORD PTR [rsp+0x348]
   308d9:	lea    rsi,[rsp+0x230]
   308e1:	call   49880 <argp_usage@@Base+0x6500>
   308e6:	mov    rdi,QWORD PTR [r12]
   308ea:	mov    esi,0x1
   308ef:	lea    rdx,[rip+0x35f5f]        # 66855 <_obstack_memory_used@@Base+0x19bd5>
   308f6:	mov    rcx,rax
   308f9:	xor    eax,eax
   308fb:	call   a840 <__fprintf_chk@plt>
   30900:	jmp    30698 <__sprintf_chk@plt+0x25ce8>
   30905:	mov    rsi,QWORD PTR [rsp+0x3f8]
   3090d:	mov    rcx,QWORD PTR [rsp+0x3d8]
   30915:	mov    rdx,QWORD PTR [rsp+0x400]
   3091d:	add    rdx,QWORD PTR [rsp+0x3e8]
   30925:	mov    rax,rsi
   30928:	or     rax,rcx
   3092b:	or     rax,QWORD PTR [rsp+0x3e0]
   30933:	or     rax,QWORD PTR [rsp+0x3f0]
   3093b:	or     rax,rdx
   3093e:	cmp    rax,0x1
   30942:	jle    2e6a0 <__sprintf_chk@plt+0x23cf0>
   30948:	test   r13b,r13b
   3094b:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   30951:	cmp    rsi,0x1
   30955:	jle    3096d <__sprintf_chk@plt+0x25fbd>
   30957:	lea    rdi,[rip+0x3721a]        # 67b78 <_obstack_memory_used@@Base+0x1aef8>
   3095e:	xor    eax,eax
   30960:	call   49610 <argp_usage@@Base+0x6290>
   30965:	mov    rcx,QWORD PTR [rsp+0x3d8]
   3096d:	cmp    rcx,0x1
   30971:	jle    30981 <__sprintf_chk@plt+0x25fd1>
   30973:	lea    rdi,[rip+0x37226]        # 67ba0 <_obstack_memory_used@@Base+0x1af20>
   3097a:	xor    eax,eax
   3097c:	call   49610 <argp_usage@@Base+0x6290>
   30981:	cmp    QWORD PTR [rsp+0x3e0],0x1
   3098a:	jle    3099a <__sprintf_chk@plt+0x25fea>
   3098c:	lea    rdi,[rip+0x37235]        # 67bc8 <_obstack_memory_used@@Base+0x1af48>
   30993:	xor    eax,eax
   30995:	call   49610 <argp_usage@@Base+0x6290>
   3099a:	cmp    QWORD PTR [rsp+0x3f0],0x1
   309a3:	jle    309b3 <__sprintf_chk@plt+0x26003>
   309a5:	lea    rdi,[rip+0x37244]        # 67bf0 <_obstack_memory_used@@Base+0x1af70>
   309ac:	xor    eax,eax
   309ae:	call   49610 <argp_usage@@Base+0x6290>
   309b3:	mov    rax,QWORD PTR [rsp+0x400]
   309bb:	add    rax,QWORD PTR [rsp+0x3e8]
   309c3:	cmp    rax,0x1
   309c7:	jle    2ee78 <__sprintf_chk@plt+0x244c8>
   309cd:	lea    rdi,[rip+0x3724c]        # 67c20 <_obstack_memory_used@@Base+0x1afa0>
   309d4:	xor    eax,eax
   309d6:	call   49610 <argp_usage@@Base+0x6290>
   309db:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   309e0:	test   r13b,r13b
   309e3:	je     30a0c <__sprintf_chk@plt+0x2605c>
   309e5:	lea    rsi,[rip+0x35e75]        # 66861 <_obstack_memory_used@@Base+0x19be1>
   309ec:	xor    edi,edi
   309ee:	mov    edx,0x5
   309f3:	mov    QWORD PTR [rsp+0x20],r8
   309f8:	call   a040 <dcgettext@plt>
   309fd:	mov    rsi,QWORD PTR [rsp+0x20]
   30a02:	mov    rdi,rax
   30a05:	xor    eax,eax
   30a07:	call   49610 <argp_usage@@Base+0x6290>
   30a0c:	cmp    BYTE PTR [rsp+0x409],0x0
   30a14:	mov    edx,0x5
   30a19:	lea    rsi,[rip+0x37258]        # 67c78 <_obstack_memory_used@@Base+0x1aff8>
   30a20:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   30a26:	xor    edi,edi
   30a28:	call   a040 <dcgettext@plt>
   30a2d:	mov    rdi,rax
   30a30:	xor    eax,eax
   30a32:	call   49610 <argp_usage@@Base+0x6290>
   30a37:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   30a3c:	mov    BYTE PTR [rax],0x0
   30a3f:	movzx  eax,BYTE PTR [rsp+0x230]
   30a47:	mov    rcx,r11
   30a4a:	test   al,al
   30a4c:	je     30a6d <__sprintf_chk@plt+0x260bd>
   30a4e:	xchg   ax,ax
   30a50:	movzx  edx,al
   30a53:	lea    esi,[rdx-0x61]
   30a56:	sub    edx,0x20
   30a59:	cmp    esi,0x1a
   30a5c:	cmovb  eax,edx
   30a5f:	add    rcx,0x1
   30a63:	mov    BYTE PTR [rcx-0x1],al
   30a66:	movzx  eax,BYTE PTR [rcx]
   30a69:	test   al,al
   30a6b:	jne    30a50 <__sprintf_chk@plt+0x260a0>
   30a6d:	lea    rbp,[rip+0x4a4ac]        # 7af20 <_obstack_memory_used@@Base+0x2e2a0>
   30a74:	mov    QWORD PTR [rsp+0x28],rbx
   30a79:	lea    rsi,[rip+0x35c9f]        # 6671f <_obstack_memory_used@@Base+0x19a9f>
   30a80:	mov    rbx,rbp
   30a83:	mov    rbp,r11
   30a86:	jmp    30a9d <__sprintf_chk@plt+0x260ed>
   30a88:	nop    DWORD PTR [rax+rax*1+0x0]
   30a90:	mov    rsi,QWORD PTR [rbx+0x10]
   30a94:	add    rbx,0x10
   30a98:	test   rsi,rsi
   30a9b:	je     30b1c <__sprintf_chk@plt+0x2616c>
   30a9d:	mov    rdi,rbp
   30aa0:	call   a320 <strcmp@plt>
   30aa5:	test   eax,eax
   30aa7:	jne    30a90 <__sprintf_chk@plt+0x260e0>
   30aa9:	mov    rbp,rbx
   30aac:	mov    rbx,QWORD PTR [rsp+0x28]
   30ab1:	movsxd rax,DWORD PTR [rbp+0xc]
   30ab5:	mov    ebp,DWORD PTR [rbp+0x8]
   30ab8:	mov    QWORD PTR [rsp+0x1e0],rax
   30ac0:	jmp    2e0fd <__sprintf_chk@plt+0x2374d>
   30ac5:	mov    edi,0xffffffa3
   30aca:	mov    ecx,0x4
   30acf:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   30ad4:	xor    edi,edi
   30ad6:	lea    rsi,[rip+0x37723]        # 68200 <_obstack_memory_used@@Base+0x1b580>
   30add:	call   a040 <dcgettext@plt>
   30ae2:	mov    rsi,QWORD PTR [rsp+0x20]
   30ae7:	mov    rdi,rax
   30aea:	xor    eax,eax
   30aec:	call   49610 <argp_usage@@Base+0x6290>
   30af1:	jmp    30721 <__sprintf_chk@plt+0x25d71>
   30af6:	mov    rax,0xfffffffffffff894
   30afd:	xor    ecx,ecx
   30aff:	sub    rax,r8
   30b02:	movsxd rdx,eax
   30b05:	seto   cl
   30b08:	cmp    rax,rdx
   30b0b:	mov    edx,0x1
   30b10:	cmove  edx,ecx
   30b13:	mov    DWORD PTR [rsp+0x28],edx
   30b17:	jmp    2e6f4 <__sprintf_chk@plt+0x23d44>
   30b1c:	mov    rdi,rbp
   30b1f:	mov    QWORD PTR [rsp+0x30],rbp
   30b24:	mov    rbx,QWORD PTR [rsp+0x28]
   30b29:	call   a060 <strlen@plt>
   30b2e:	mov    DWORD PTR [rsp+0x28],0x1
   30b36:	mov    r11,rbp
   30b39:	cmp    rax,0x3
   30b3d:	mov    QWORD PTR [rsp+0x38],rax
   30b42:	je     30b63 <__sprintf_chk@plt+0x261b3>
   30b44:	mov    DWORD PTR [rsp+0x28],0x0
   30b4c:	cmp    rax,0x4
   30b50:	jne    30b63 <__sprintf_chk@plt+0x261b3>
   30b52:	xor    eax,eax
   30b54:	cmp    BYTE PTR [rsp+0x233],0x2e
   30b5c:	sete   al
   30b5f:	mov    DWORD PTR [rsp+0x28],eax
   30b63:	mov    QWORD PTR [rsp+0x30],r11
   30b68:	lea    rbp,[rip+0x4a211]        # 7ad80 <_obstack_memory_used@@Base+0x2e100>
   30b6f:	lea    rsi,[rip+0x35bac]        # 66722 <_obstack_memory_used@@Base+0x19aa2>
   30b76:	jmp    30bad <__sprintf_chk@plt+0x261fd>
   30b78:	nop    DWORD PTR [rax+rax*1+0x0]
   30b80:	mov    rdi,QWORD PTR [rsp+0x30]
   30b85:	mov    edx,0x3
   30b8a:	call   9e50 <strncmp@plt>
   30b8f:	test   eax,eax
   30b91:	sete   dl
   30b94:	test   dl,dl
   30b96:	jne    30ab1 <__sprintf_chk@plt+0x26101>
   30b9c:	mov    rsi,QWORD PTR [rbp+0x10]
   30ba0:	add    rbp,0x10
   30ba4:	test   rsi,rsi
   30ba7:	je     31107 <__sprintf_chk@plt+0x26757>
   30bad:	mov    r9d,DWORD PTR [rsp+0x28]
   30bb2:	test   r9d,r9d
   30bb5:	jne    30b80 <__sprintf_chk@plt+0x261d0>
   30bb7:	mov    rdi,QWORD PTR [rsp+0x30]
   30bbc:	call   a320 <strcmp@plt>
   30bc1:	test   eax,eax
   30bc3:	sete   dl
   30bc6:	jmp    30b94 <__sprintf_chk@plt+0x261e4>
   30bc8:	mov    QWORD PTR [rsp+0x428],rax
   30bd0:	mov    DWORD PTR [rsp+0x430],0x10d
   30bdb:	mov    DWORD PTR [rsp+0x434],edx
   30be2:	mov    QWORD PTR [rsp+0x438],0x0
   30bee:	jmp    2e05c <__sprintf_chk@plt+0x236ac>
   30bf3:	movzx  ecx,BYTE PTR [rsi+0x1]
   30bf7:	jmp    2eb5b <__sprintf_chk@plt+0x241ab>
   30bfc:	test   rax,rax
   30bff:	jns    2e6df <__sprintf_chk@plt+0x23d2f>
   30c05:	mov    ecx,0x1
   30c0a:	jmp    2e6df <__sprintf_chk@plt+0x23d2f>
   30c0f:	nop
   30c10:	mov    rdi,QWORD PTR [rsp+0x20]
   30c15:	lea    rsi,[rip+0x35c0b]        # 66827 <_obstack_memory_used@@Base+0x19ba7>
   30c1c:	call   a320 <strcmp@plt>
   30c21:	mov    edx,0x5
   30c26:	lea    rsi,[rip+0x36f23]        # 67b50 <_obstack_memory_used@@Base+0x1aed0>
   30c2d:	test   eax,eax
   30c2f:	je     30887 <__sprintf_chk@plt+0x25ed7>
   30c35:	xor    edi,edi
   30c37:	lea    rsi,[rip+0x35bee]        # 6682c <_obstack_memory_used@@Base+0x19bac>
   30c3e:	call   a040 <dcgettext@plt>
   30c43:	mov    rcx,QWORD PTR [rsp+0x20]
   30c48:	mov    esi,0x1
   30c4d:	mov    r12,QWORD PTR [rip+0x4b394]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   30c54:	mov    rdx,rax
   30c57:	xor    eax,eax
   30c59:	mov    rdi,QWORD PTR [r12]
   30c5d:	call   a840 <__fprintf_chk@plt>
   30c62:	jmp    30660 <__sprintf_chk@plt+0x25cb0>
   30c67:	movsxd rcx,ecx
   30c6a:	mov    QWORD PTR [rsp+0x1e0],rdi
   30c72:	mov    QWORD PTR [rsp+0x78],rcx
   30c77:	mov    ecx,eax
   30c79:	neg    ecx
   30c7b:	mov    QWORD PTR [rsp+0x330],r9
   30c83:	sbb    edx,edx
   30c85:	add    edx,0x16
   30c88:	neg    eax
   30c8a:	sbb    ebp,ebp
   30c8c:	add    ebp,0x115
   30c92:	jmp    2edfe <__sprintf_chk@plt+0x2444e>
   30c97:	mov    edi,DWORD PTR [rsp+0x348]
   30c9e:	mov    esi,0x5858
   30ca3:	mov    BYTE PTR [rsp+0x452],0x58
   30cab:	mov    WORD PTR [rsp+0x450],si
   30cb3:	lea    rsi,[rsp+0x453]
   30cbb:	call   49880 <argp_usage@@Base+0x6500>
   30cc0:	mov    rdi,QWORD PTR [rsp+0x70]
   30cc5:	call   56f90 <_obstack_memory_used@@Base+0xa310>
   30cca:	mov    rdx,rax
   30ccd:	test   rax,rax
   30cd0:	je     31bae <__sprintf_chk@plt+0x271fe>
   30cd6:	mov    rax,QWORD PTR [rsp+0x120]
   30cde:	mov    rdi,rdx
   30ce1:	mov    rsi,r13
   30ce4:	mov    QWORD PTR [rsp+0x40],rdx
   30ce9:	mov    DWORD PTR [rsp+0xf8],0xffffffff
   30cf4:	mov    QWORD PTR [rsp+0xe0],rax
   30cfc:	mov    rax,QWORD PTR [rsp+0x128]
   30d04:	mov    QWORD PTR [rsp+0xe8],rax
   30d0c:	mov    rax,QWORD PTR [rsp+0x130]
   30d14:	mov    QWORD PTR [rsp+0xf0],rax
   30d1c:	mov    eax,DWORD PTR [rsp+0x140]
   30d23:	mov    DWORD PTR [rsp+0x100],eax
   30d2a:	call   57310 <_obstack_memory_used@@Base+0xa690>
   30d2f:	mov    rsi,r13
   30d32:	mov    rdi,r12
   30d35:	mov    QWORD PTR [rsp+0x30],rax
   30d3a:	call   49ab0 <argp_usage@@Base+0x6730>
   30d3f:	mov    rdx,QWORD PTR [rsp+0x40]
   30d44:	cmp    rdx,0x1
   30d48:	je     30d7b <__sprintf_chk@plt+0x263cb>
   30d4a:	mov    QWORD PTR [rsp+0x40],r12
   30d4f:	mov    r12,rbx
   30d52:	mov    rbx,rdx
   30d55:	mov    QWORD PTR [rsp+0x48],rbp
   30d5a:	mov    ebp,eax
   30d5c:	mov    rdi,rbx
   30d5f:	mov    rbx,QWORD PTR [rbx]
   30d62:	call   9ce0 <free@plt>
   30d67:	test   rbx,rbx
   30d6a:	jne    30d5c <__sprintf_chk@plt+0x263ac>
   30d6c:	mov    eax,ebp
   30d6e:	mov    rbx,r12
   30d71:	mov    rbp,QWORD PTR [rsp+0x48]
   30d76:	mov    r12,QWORD PTR [rsp+0x40]
   30d7b:	test   al,al
   30d7d:	je     2e884 <__sprintf_chk@plt+0x23ed4>
   30d83:	cmp    QWORD PTR [rsp+0x3e0],0x0
   30d8c:	je     312d3 <__sprintf_chk@plt+0x26923>
   30d92:	cmp    QWORD PTR [rsp+0x3d8],0x0
   30d9b:	jne    31590 <__sprintf_chk@plt+0x26be0>
   30da1:	mov    rcx,QWORD PTR [rsp+0x338]
   30da9:	test   rcx,rcx
   30dac:	jle    30dc6 <__sprintf_chk@plt+0x26416>
   30dae:	mov    eax,DWORD PTR [rsp+0x340]
   30db5:	cmp    DWORD PTR [rsp+0xf8],eax
   30dbc:	setne  al
   30dbf:	movzx  eax,al
   30dc2:	mov    DWORD PTR [rsp+0x38],eax
   30dc6:	movsxd rax,DWORD PTR [rsp+0x38]
   30dcb:	sub    rcx,rax
   30dce:	imul   rcx,rcx,0x7
   30dd2:	jo     31510 <__sprintf_chk@plt+0x26b60>
   30dd8:	mov    eax,DWORD PTR [rsp+0x340]
   30ddf:	sub    eax,DWORD PTR [rsp+0xf8]
   30de6:	mov    esi,0x7
   30deb:	add    eax,0x7
   30dee:	cdq    
   30def:	idiv   esi
   30df1:	movsxd rax,edx
   30df4:	add    rax,rcx
   30df7:	jo     31510 <__sprintf_chk@plt+0x26b60>
   30dfd:	movsxd rdx,DWORD PTR [rsp+0xec]
   30e05:	add    rax,rdx
   30e08:	seto   dl
   30e0b:	movsxd rcx,eax
   30e0e:	mov    DWORD PTR [rsp+0xec],eax
   30e15:	cmp    rax,rcx
   30e18:	movzx  edx,dl
   30e1b:	mov    ecx,0x1
   30e20:	cmovne edx,ecx
   30e23:	test   edx,edx
   30e25:	jne    31510 <__sprintf_chk@plt+0x26b60>
   30e2b:	mov    rsi,r13
   30e2e:	mov    rdi,r15
   30e31:	mov    DWORD PTR [rsp+0x100],0xffffffff
   30e3c:	call   57310 <_obstack_memory_used@@Base+0xa690>
   30e41:	mov    QWORD PTR [rsp+0x30],rax
   30e46:	add    rax,0x1
   30e4a:	je     31510 <__sprintf_chk@plt+0x26b60>
   30e50:	cmp    BYTE PTR [rsp+0x409],0x0
   30e58:	jne    31283 <__sprintf_chk@plt+0x268d3>
   30e5e:	mov    rdx,QWORD PTR [rsp+0x398]
   30e66:	mov    rax,QWORD PTR [rsp+0x3a0]
   30e6e:	or     rax,rdx
   30e71:	or     rax,QWORD PTR [rsp+0x3a8]
   30e79:	je     314d3 <__sprintf_chk@plt+0x26b23>
   30e7f:	movsxd rax,DWORD PTR [rsp+0xf4]
   30e87:	add    rax,rdx
   30e8a:	seto   dl
   30e8d:	movsxd rcx,eax
   30e90:	movzx  edx,dl
   30e93:	cmp    rax,rcx
   30e96:	jne    2ee78 <__sprintf_chk@plt+0x244c8>
   30e9c:	test   edx,edx
   30e9e:	jne    2ee78 <__sprintf_chk@plt+0x244c8>
   30ea4:	mov    DWORD PTR [rsp+0x38],eax
   30ea8:	movsxd rax,DWORD PTR [rsp+0xf0]
   30eb0:	add    rax,QWORD PTR [rsp+0x3a0]
   30eb8:	mov    r12,rax
   30ebb:	seto   al
   30ebe:	movsxd rdx,r12d
   30ec1:	movzx  eax,al
   30ec4:	cmp    r12,rdx
   30ec7:	jne    313da <__sprintf_chk@plt+0x26a2a>
   30ecd:	test   eax,eax
   30ecf:	jne    313da <__sprintf_chk@plt+0x26a2a>
   30ed5:	movsxd rax,DWORD PTR [rsp+0xec]
   30edd:	add    rax,QWORD PTR [rsp+0x3a8]
   30ee5:	mov    rcx,rax
   30ee8:	mov    QWORD PTR [rsp+0x40],rax
   30eed:	seto   al
   30ef0:	movsxd rdx,ecx
   30ef3:	movzx  eax,al
   30ef6:	cmp    rcx,rdx
   30ef9:	jne    313da <__sprintf_chk@plt+0x26a2a>
   30eff:	test   eax,eax
   30f01:	jne    313da <__sprintf_chk@plt+0x26a2a>
   30f07:	mov    rax,QWORD PTR [rsp+0x40]
   30f0c:	mov    ecx,DWORD PTR [rsp+0x38]
   30f10:	mov    rsi,r13
   30f13:	mov    rdi,r15
   30f16:	mov    DWORD PTR [rsp+0xf0],r12d
   30f1e:	mov    DWORD PTR [rsp+0x48],eax
   30f22:	mov    DWORD PTR [rsp+0xec],eax
   30f29:	mov    rax,QWORD PTR [rsp+0x120]
   30f31:	mov    DWORD PTR [rsp+0xf4],ecx
   30f38:	mov    QWORD PTR [rsp+0xe0],rax
   30f40:	mov    eax,DWORD PTR [rsp+0x128]
   30f47:	mov    DWORD PTR [rsp+0xe8],eax
   30f4e:	mov    eax,DWORD PTR [rsp+0x140]
   30f55:	mov    DWORD PTR [rsp+0x100],eax
   30f5c:	call   57310 <_obstack_memory_used@@Base+0xa690>
   30f61:	mov    QWORD PTR [rsp+0x30],rax
   30f66:	add    rax,0x1
   30f6a:	je     32119 <__sprintf_chk@plt+0x27769>
   30f70:	movzx  eax,BYTE PTR [rsp+0x409]
   30f78:	mov    BYTE PTR [rsp+0x28],al
   30f7c:	test   al,al
   30f7e:	jne    31753 <__sprintf_chk@plt+0x26da3>
   30f84:	cmp    QWORD PTR [rsp+0x400],0x0
   30f8d:	je     314e2 <__sprintf_chk@plt+0x26b32>
   30f93:	mov    rdx,QWORD PTR [rsp+0x30]
   30f98:	xor    esi,esi
   30f9a:	movsxd rax,DWORD PTR [rsp+0x348]
   30fa2:	sub    rax,QWORD PTR [rsp+0x108]
   30faa:	seto   sil
   30fae:	xor    ecx,ecx
   30fb0:	sub    rdx,rax
   30fb3:	seto   cl
   30fb6:	mov    rax,rdx
   30fb9:	or     rcx,rsi
   30fbc:	jne    2ee78 <__sprintf_chk@plt+0x244c8>
   30fc2:	mov    QWORD PTR [rsp+0x30],rax
   30fc7:	cmp    BYTE PTR [rsp+0x28],0x0
   30fcc:	je     314e2 <__sprintf_chk@plt+0x26b32>
   30fd2:	lea    rsi,[rsp+0x330]
   30fda:	mov    rdx,rbp
   30fdd:	mov    rdi,r13
   30fe0:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   30fe5:	xor    edi,edi
   30fe7:	mov    edx,0x5
   30fec:	lea    rsi,[rip+0x359e7]        # 669da <_obstack_memory_used@@Base+0x19d5a>
   30ff3:	mov    r12,rax
   30ff6:	call   a040 <dcgettext@plt>
   30ffb:	mov    rdx,QWORD PTR [rsp+0x30]
   31000:	mov    rsi,r12
   31003:	mov    rdi,rax
   31006:	xor    eax,eax
   31008:	call   49610 <argp_usage@@Base+0x6290>
   3100d:	mov    r11,QWORD PTR [rsp+0x3b0]
   31015:	mov    rdi,QWORD PTR [rsp+0x390]
   3101d:	mov    r10d,DWORD PTR [rsp+0x3c8]
   31025:	imul   r9,r11,0xe10
   3102c:	jo     3142c <__sprintf_chk@plt+0x26a7c>
   31032:	movsxd rsi,r10d
   31035:	mov    r8d,0x3b9aca00
   3103b:	add    rdi,rsi
   3103e:	mov    rax,rdi
   31041:	cqo    
   31043:	idiv   r8
   31046:	lea    rax,[rdx+0x3b9aca00]
   3104d:	cqo    
   3104f:	idiv   r8
   31052:	sub    rdi,rdx
   31055:	mov    rcx,rdx
   31058:	mov    rax,rdi
   3105b:	cqo    
   3105d:	idiv   r8
   31060:	mov    rdx,QWORD PTR [rsp+0x30]
   31065:	movzx  r8d,BYTE PTR [rsp+0x409]
   3106e:	add    rdx,r9
   31071:	mov    rdi,rax
   31074:	jo     3142c <__sprintf_chk@plt+0x26a7c>
   3107a:	mov    r13,QWORD PTR [rsp+0x3b8]
   31082:	imul   rax,r13,0x3c
   31086:	jo     3142c <__sprintf_chk@plt+0x26a7c>
   3108c:	add    rax,rdx
   3108f:	jo     3142c <__sprintf_chk@plt+0x26a7c>
   31095:	mov    r12,QWORD PTR [rsp+0x3c0]
   3109d:	add    rax,r12
   310a0:	jo     3142c <__sprintf_chk@plt+0x26a7c>
   310a6:	movsxd rdx,edi
   310a9:	add    rax,rdx
   310ac:	mov    r9,rax
   310af:	jo     3142c <__sprintf_chk@plt+0x26a7c>
   310b5:	mov    rax,QWORD PTR [rsp+0x8]
   310ba:	mov    QWORD PTR [rax],r9
   310bd:	mov    QWORD PTR [rax+0x8],rcx
   310c1:	test   r8b,r8b
   310c4:	je     310d8 <__sprintf_chk@plt+0x26728>
   310c6:	mov    rax,r13
   310c9:	or     rax,r12
   310cc:	or     rax,r11
   310cf:	or     rax,rsi
   310d2:	jne    32035 <__sprintf_chk@plt+0x27685>
   310d8:	mov    r13d,r8d
   310db:	jmp    306ce <__sprintf_chk@plt+0x25d1e>
   310e0:	cmp    r8,0x45
   310e4:	mov    r12d,0x7d0
   310ea:	mov    eax,0x76c
   310ef:	cmovge r12,rax
   310f3:	add    r12,r8
   310f6:	test   r13b,r13b
   310f9:	jne    314a1 <__sprintf_chk@plt+0x26af1>
   310ff:	mov    r8,r12
   31102:	jmp    2e6c0 <__sprintf_chk@plt+0x23d10>
   31107:	mov    r11,QWORD PTR [rsp+0x30]
   3110c:	lea    rdi,[rsp+0x330]
   31114:	mov    BYTE PTR [rsp+0x88],dl
   3111b:	mov    QWORD PTR [rsp+0x30],rdi
   31120:	mov    rsi,r11
   31123:	mov    QWORD PTR [rsp+0x28],r11
   31128:	call   499e0 <argp_usage@@Base+0x6660>
   3112d:	mov    rbp,rax
   31130:	test   rax,rax
   31133:	jne    30ab1 <__sprintf_chk@plt+0x26101>
   31139:	mov    r11,QWORD PTR [rsp+0x28]
   3113e:	lea    rsi,[rip+0x3b1ec]        # 6c331 <_obstack_memory_used@@Base+0x1f6b1>
   31145:	mov    rdi,r11
   31148:	mov    QWORD PTR [rsp+0x90],r11
   31150:	call   a320 <strcmp@plt>
   31155:	test   eax,eax
   31157:	je     31b4d <__sprintf_chk@plt+0x2719d>
   3115d:	lea    rbp,[rip+0x49b5c]        # 7acc0 <_obstack_memory_used@@Base+0x2e040>
   31164:	mov    QWORD PTR [rsp+0x28],rbx
   31169:	lea    rsi,[rip+0x355ba]        # 6672a <_obstack_memory_used@@Base+0x19aaa>
   31170:	mov    rbx,rbp
   31173:	mov    rbp,QWORD PTR [rsp+0x90]
   3117b:	jmp    3118e <__sprintf_chk@plt+0x267de>
   3117d:	mov    rsi,QWORD PTR [rbx+0x10]
   31181:	add    rbx,0x10
   31185:	test   rsi,rsi
   31188:	je     31adc <__sprintf_chk@plt+0x2712c>
   3118e:	mov    rdi,rbp
   31191:	call   a320 <strcmp@plt>
   31196:	test   eax,eax
   31198:	jne    3117d <__sprintf_chk@plt+0x267cd>
   3119a:	jmp    30aa9 <__sprintf_chk@plt+0x260f9>
   3119f:	mov    r13d,0x1
   311a5:	jmp    2e458 <__sprintf_chk@plt+0x23aa8>
   311aa:	mov    r9d,DWORD PTR [rsp+0x34c]
   311b2:	mov    r13,QWORD PTR [rsp+0x378]
   311ba:	test   r9d,r9d
   311bd:	je     31643 <__sprintf_chk@plt+0x26c93>
   311c3:	cmp    r9d,0x1
   311c7:	je     315df <__sprintf_chk@plt+0x26c2f>
   311cd:	cmp    r13,0x17
   311d1:	ja     32162 <__sprintf_chk@plt+0x277b2>
   311d7:	mov    r9d,r13d
   311da:	mov    rdi,QWORD PTR [rsp+0x380]
   311e2:	mov    r8,QWORD PTR [rsp+0x388]
   311ea:	mov    DWORD PTR [rsp+0xe8],r9d
   311f2:	mov    DWORD PTR [rsp+0xe4],edi
   311f9:	mov    ecx,edi
   311fb:	mov    r10d,r8d
   311fe:	mov    DWORD PTR [rsp+0xe0],r8d
   31206:	test   dl,dl
   31208:	jne    31985 <__sprintf_chk@plt+0x26fd5>
   3120e:	mov    rdx,QWORD PTR [rsp+0x3d8]
   31216:	or     rdx,QWORD PTR [rsp+0x3e0]
   3121e:	or     rdx,r11
   31221:	je     2e7e0 <__sprintf_chk@plt+0x23e30>
   31227:	jmp    2e7d5 <__sprintf_chk@plt+0x23e25>
   3122c:	mov    edi,0xffffffa3
   31231:	mov    ecx,0xc
   31236:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   3123b:	mov    edx,DWORD PTR [rsp+0x344]
   31242:	mov    DWORD PTR [rsp+0x100],edx
   31249:	jmp    2e7f6 <__sprintf_chk@plt+0x23e46>
   3124e:	mov    QWORD PTR [rsp+0xe0],0x0
   3125a:	mov    DWORD PTR [rsp+0xe8],0x0
   31265:	mov    QWORD PTR [rsp+0x390],0x0
   31271:	test   dl,dl
   31273:	jne    31a0c <__sprintf_chk@plt+0x2705c>
   31279:	xor    r9d,r9d
   3127c:	xor    ecx,ecx
   3127e:	xor    r10d,r10d
   31281:	jmp    3120e <__sprintf_chk@plt+0x2685e>
   31283:	lea    r12,[rsp+0x330]
   3128b:	mov    rdx,rbp
   3128e:	mov    rdi,r13
   31291:	mov    rsi,r12
   31294:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31299:	mov    rsi,QWORD PTR [rsp+0x70]
   3129e:	mov    rdi,r12
   312a1:	mov    QWORD PTR [rsp+0x38],rax
   312a6:	call   57e30 <_obstack_memory_used@@Base+0xb1b0>
   312ab:	mov    edx,0x5
   312b0:	lea    rsi,[rip+0x35693]        # 6694a <_obstack_memory_used@@Base+0x19cca>
   312b7:	xor    edi,edi
   312b9:	mov    r12,rax
   312bc:	call   a040 <dcgettext@plt>
   312c1:	mov    rdx,QWORD PTR [rsp+0x38]
   312c6:	mov    rsi,r12
   312c9:	mov    rdi,rax
   312cc:	xor    eax,eax
   312ce:	call   49610 <argp_usage@@Base+0x6290>
   312d3:	cmp    BYTE PTR [rsp+0x409],0x0
   312db:	je     30e5e <__sprintf_chk@plt+0x264ae>
   312e1:	cmp    QWORD PTR [rsp+0x3d8],0x0
   312ea:	mov    rax,QWORD PTR [rsp+0x3e0]
   312f2:	jne    31a1c <__sprintf_chk@plt+0x2706c>
   312f8:	test   rax,rax
   312fb:	je     31d9f <__sprintf_chk@plt+0x273ef>
   31301:	lea    r12,[rsp+0x330]
   31309:	mov    rsi,r12
   3130c:	mov    rdx,rbp
   3130f:	mov    rdi,r13
   31312:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31317:	mov    edx,0x5
   3131c:	xor    edi,edi
   3131e:	lea    rsi,[rip+0x35662]        # 66987 <_obstack_memory_used@@Base+0x19d07>
   31325:	mov    r12,rax
   31328:	call   a040 <dcgettext@plt>
   3132d:	mov    rsi,r12
   31330:	mov    rdi,rax
   31333:	xor    eax,eax
   31335:	call   49610 <argp_usage@@Base+0x6290>
   3133a:	mov    rdx,QWORD PTR [rsp+0x398]
   31342:	mov    rax,QWORD PTR [rsp+0x3a0]
   3134a:	movzx  ecx,BYTE PTR [rsp+0x409]
   31352:	or     rax,rdx
   31355:	mov    rsi,rax
   31358:	or     rsi,QWORD PTR [rsp+0x3a8]
   31360:	mov    BYTE PTR [rsp+0x28],cl
   31364:	je     31914 <__sprintf_chk@plt+0x26f64>
   3136a:	test   cl,cl
   3136c:	je     30e7f <__sprintf_chk@plt+0x264cf>
   31372:	test   rax,rax
   31375:	je     31a2a <__sprintf_chk@plt+0x2707a>
   3137b:	cmp    DWORD PTR [rsp+0xec],0xf
   31383:	je     313a2 <__sprintf_chk@plt+0x269f2>
   31385:	xor    edi,edi
   31387:	mov    edx,0x5
   3138c:	lea    rsi,[rip+0x36b55]        # 67ee8 <_obstack_memory_used@@Base+0x1b268>
   31393:	call   a040 <dcgettext@plt>
   31398:	mov    rdi,rax
   3139b:	xor    eax,eax
   3139d:	call   49610 <argp_usage@@Base+0x6290>
   313a2:	cmp    QWORD PTR [rsp+0x3a8],0x0
   313ab:	jne    31a2a <__sprintf_chk@plt+0x2707a>
   313b1:	xor    edx,edx
   313b3:	movsxd rax,DWORD PTR [rsp+0xf4]
   313bb:	add    rax,QWORD PTR [rsp+0x398]
   313c3:	movsxd rcx,eax
   313c6:	seto   dl
   313c9:	cmp    rax,rcx
   313cc:	jne    313da <__sprintf_chk@plt+0x26a2a>
   313ce:	mov    DWORD PTR [rsp+0x38],eax
   313d2:	test   edx,edx
   313d4:	je     30ea8 <__sprintf_chk@plt+0x264f8>
   313da:	cmp    BYTE PTR [rsp+0x409],0x0
   313e2:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   313e8:	xor    edi,edi
   313ea:	mov    edx,0x5
   313ef:	lea    rsi,[rip+0x355ab]        # 669a1 <_obstack_memory_used@@Base+0x19d21>
   313f6:	call   a040 <dcgettext@plt>
   313fb:	mov    edx,0x865
   31400:	lea    rsi,[rip+0x355a8]        # 669af <_obstack_memory_used@@Base+0x19d2f>
   31407:	mov    rdi,rax
   3140a:	xor    eax,eax
   3140c:	call   49610 <argp_usage@@Base+0x6290>
   31411:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   31416:	xor    eax,eax
   31418:	jmp    2ec55 <__sprintf_chk@plt+0x242a5>
   3141d:	mov    edi,0xffffffa3
   31422:	mov    ecx,0x2
   31427:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   3142c:	cmp    BYTE PTR [rsp+0x409],0x0
   31434:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   3143a:	mov    edx,0x5
   3143f:	lea    rsi,[rip+0x36cd2]        # 68118 <_obstack_memory_used@@Base+0x1b498>
   31446:	jmp    30a26 <__sprintf_chk@plt+0x26076>
   3144b:	mov    r14,QWORD PTR [r15-0xd8]
   31452:	test   al,al
   31454:	jne    31b59 <__sprintf_chk@plt+0x271a9>
   3145a:	mov    rax,QWORD PTR [r15-0x68]
   3145e:	movdqu xmm6,XMMWORD PTR [r15]
   31463:	lea    rdx,[r13-0xa]
   31467:	mov    QWORD PTR [rsp+0x368],r14
   3146f:	mov    edi,0xffffffa3
   31474:	lea    r14,[r15-0x118]
   3147b:	mov    ecx,0xe
   31480:	mov    QWORD PTR [rsp+0x370],rax
   31488:	mov    rax,QWORD PTR [r15+0x10]
   3148c:	movaps XMMWORD PTR [rsp+0x350],xmm6
   31494:	mov    QWORD PTR [rsp+0x360],rax
   3149c:	jmp    2e190 <__sprintf_chk@plt+0x237e0>
   314a1:	mov    edx,0x5
   314a6:	lea    rsi,[rip+0x3679b]        # 67c48 <_obstack_memory_used@@Base+0x1afc8>
   314ad:	xor    edi,edi
   314af:	mov    QWORD PTR [rsp+0x28],r8
   314b4:	call   a040 <dcgettext@plt>
   314b9:	mov    rsi,QWORD PTR [rsp+0x28]
   314be:	mov    rdx,r12
   314c1:	mov    rdi,rax
   314c4:	xor    eax,eax
   314c6:	call   49610 <argp_usage@@Base+0x6290>
   314cb:	mov    r8,r12
   314ce:	jmp    2e6c0 <__sprintf_chk@plt+0x23d10>
   314d3:	cmp    QWORD PTR [rsp+0x400],0x0
   314dc:	jne    31923 <__sprintf_chk@plt+0x26f73>
   314e2:	mov    r11,QWORD PTR [rsp+0x3b0]
   314ea:	mov    rdi,QWORD PTR [rsp+0x390]
   314f2:	mov    r10d,DWORD PTR [rsp+0x3c8]
   314fa:	imul   r9,r11,0xe10
   31501:	jno    31032 <__sprintf_chk@plt+0x26682>
   31507:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   3150c:	nop    DWORD PTR [rax+0x0]
   31510:	cmp    BYTE PTR [rsp+0x409],0x0
   31518:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   3151e:	lea    r9,[rsp+0x330]
   31526:	mov    rdx,rbp
   31529:	mov    rdi,r13
   3152c:	mov    rsi,r9
   3152f:	mov    QWORD PTR [rsp+0x28],r9
   31534:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31539:	mov    rsi,QWORD PTR [rsp+0x70]
   3153e:	mov    rdi,QWORD PTR [rsp+0x28]
   31543:	mov    r13d,DWORD PTR [rsp+0x340]
   3154b:	mov    r12,QWORD PTR [rsp+0x338]
   31553:	mov    QWORD PTR [rsp+0x20],rax
   31558:	call   57e30 <_obstack_memory_used@@Base+0xb1b0>
   3155d:	xor    edi,edi
   3155f:	mov    edx,0x5
   31564:	lea    rsi,[rip+0x368bd]        # 67e28 <_obstack_memory_used@@Base+0x1b1a8>
   3156b:	mov    rbp,rax
   3156e:	call   a040 <dcgettext@plt>
   31573:	mov    r8,QWORD PTR [rsp+0x20]
   31578:	mov    ecx,r13d
   3157b:	mov    rdx,r12
   3157e:	mov    rdi,rax
   31581:	mov    rsi,rbp
   31584:	xor    eax,eax
   31586:	call   49610 <argp_usage@@Base+0x6290>
   3158b:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   31590:	cmp    BYTE PTR [rsp+0x409],0x0
   31598:	je     30e5e <__sprintf_chk@plt+0x264ae>
   3159e:	mov    rsi,QWORD PTR [rsp+0x70]
   315a3:	lea    r12,[rsp+0x330]
   315ab:	mov    rdi,r12
   315ae:	call   57e30 <_obstack_memory_used@@Base+0xb1b0>
   315b3:	xor    edi,edi
   315b5:	mov    edx,0x5
   315ba:	lea    rsi,[rip+0x368e7]        # 67ea8 <_obstack_memory_used@@Base+0x1b228>
   315c1:	mov    QWORD PTR [rsp+0x28],rax
   315c6:	call   a040 <dcgettext@plt>
   315cb:	mov    rsi,QWORD PTR [rsp+0x28]
   315d0:	mov    rdi,rax
   315d3:	xor    eax,eax
   315d5:	call   49610 <argp_usage@@Base+0x6290>
   315da:	jmp    31309 <__sprintf_chk@plt+0x26959>
   315df:	lea    rcx,[r13-0x1]
   315e3:	lea    r9d,[r13+0xc]
   315e7:	cmp    rcx,0xa
   315eb:	jbe    311da <__sprintf_chk@plt+0x2682a>
   315f1:	mov    r9d,0xc
   315f7:	lea    r12,[rip+0x3513a]        # 66738 <_obstack_memory_used@@Base+0x19ab8>
   315fe:	cmp    r13,0xc
   31602:	je     311da <__sprintf_chk@plt+0x2682a>
   31608:	mov    DWORD PTR [rsp+0xe8],0xffffffff
   31613:	test   dl,dl
   31615:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   3161b:	xor    edi,edi
   3161d:	mov    edx,0x5
   31622:	lea    rsi,[rip+0x35256]        # 6687f <_obstack_memory_used@@Base+0x19bff>
   31629:	call   a040 <dcgettext@plt>
   3162e:	mov    rdx,r12
   31631:	mov    rsi,r13
   31634:	mov    rdi,rax
   31637:	xor    eax,eax
   31639:	call   49610 <argp_usage@@Base+0x6290>
   3163e:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   31643:	lea    rcx,[r13-0x1]
   31647:	cmp    rcx,0xa
   3164b:	jbe    311d7 <__sprintf_chk@plt+0x26827>
   31651:	lea    r12,[rip+0x35d48]        # 673a0 <_obstack_memory_used@@Base+0x1a720>
   31658:	cmp    r13,0xc
   3165c:	je     311da <__sprintf_chk@plt+0x2682a>
   31662:	jmp    31608 <__sprintf_chk@plt+0x26c58>
   31664:	nop    DWORD PTR [rax+0x0]
   31668:	xor    r8d,r8d
   3166b:	sub    edi,DWORD PTR [rsp+0xb4]
   31672:	seto   r8b
   31676:	mov    DWORD PTR [rsp+0xb4],r8d
   3167e:	xor    r8d,r8d
   31681:	sub    rsi,QWORD PTR [rsp+0xa8]
   31689:	seto   r8b
   3168d:	mov    QWORD PTR [rsp+0xa8],r8
   31695:	xor    r8d,r8d
   31698:	sub    rcx,QWORD PTR [rsp+0xa0]
   316a0:	seto   r8b
   316a4:	mov    QWORD PTR [rsp+0xa0],r8
   316ac:	xor    r8d,r8d
   316af:	sub    rdx,QWORD PTR [rsp+0x98]
   316b7:	seto   r8b
   316bb:	mov    QWORD PTR [rsp+0x98],r8
   316c3:	xor    r8d,r8d
   316c6:	sub    rax,QWORD PTR [rsp+0x90]
   316ce:	seto   r8b
   316d2:	mov    QWORD PTR [rsp+0x90],rax
   316da:	xor    eax,eax
   316dc:	mov    QWORD PTR [rsp+0xc8],r8
   316e4:	mov    r8,QWORD PTR [rsp+0xb8]
   316ec:	sub    r8,QWORD PTR [rsp+0x88]
   316f4:	mov    QWORD PTR [rsp+0x88],r8
   316fc:	mov    r8,QWORD PTR [rsp+0xc0]
   31704:	seto   al
   31707:	mov    QWORD PTR [rsp+0xb8],rax
   3170f:	xor    eax,eax
   31711:	sub    r8,r14
   31714:	seto   al
   31717:	mov    r14,r8
   3171a:	movzx  r8d,BYTE PTR [rsp+0xa8]
   31723:	or     r8b,BYTE PTR [rsp+0xb4]
   3172b:	or     r8b,BYTE PTR [rsp+0xa0]
   31733:	or     r8b,BYTE PTR [rsp+0x98]
   3173b:	or     r8b,BYTE PTR [rsp+0xc8]
   31743:	or     r8b,BYTE PTR [rsp+0xb8]
   3174b:	or     r8d,eax
   3174e:	jmp    2f8ed <__sprintf_chk@plt+0x24f3d>
   31753:	mov    r8,QWORD PTR [rsp+0x3a0]
   3175b:	mov    r9,QWORD PTR [rsp+0x398]
   31763:	xor    edi,edi
   31765:	mov    edx,0x5
   3176a:	mov    rcx,QWORD PTR [rsp+0x3a8]
   31772:	lea    rsi,[rip+0x3685f]        # 67fd8 <_obstack_memory_used@@Base+0x1b358>
   31779:	mov    QWORD PTR [rsp+0x50],r8
   3177e:	mov    QWORD PTR [rsp+0x28],r9
   31783:	mov    QWORD PTR [rsp+0x58],rcx
   31788:	call   a040 <dcgettext@plt>
   3178d:	mov    rcx,QWORD PTR [rsp+0x58]
   31792:	mov    rdx,QWORD PTR [rsp+0x50]
   31797:	mov    rsi,QWORD PTR [rsp+0x28]
   3179c:	mov    rdi,rax
   3179f:	xor    eax,eax
   317a1:	call   49610 <argp_usage@@Base+0x6290>
   317a6:	lea    rsi,[rsp+0x330]
   317ae:	mov    rdx,rbp
   317b1:	mov    rdi,r13
   317b4:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   317b9:	mov    edx,0x5
   317be:	lea    rsi,[rip+0x351fb]        # 669c0 <_obstack_memory_used@@Base+0x19d40>
   317c5:	xor    edi,edi
   317c7:	mov    QWORD PTR [rsp+0x28],rax
   317cc:	call   a040 <dcgettext@plt>
   317d1:	mov    rsi,QWORD PTR [rsp+0x28]
   317d6:	mov    rdi,rax
   317d9:	xor    eax,eax
   317db:	call   49610 <argp_usage@@Base+0x6290>
   317e0:	mov    eax,DWORD PTR [rsp+0x140]
   317e7:	cmp    eax,0xffffffff
   317ea:	je     31812 <__sprintf_chk@plt+0x26e62>
   317ec:	cmp    eax,DWORD PTR [rsp+0x100]
   317f3:	je     31812 <__sprintf_chk@plt+0x26e62>
   317f5:	xor    edi,edi
   317f7:	mov    edx,0x5
   317fc:	lea    rsi,[rip+0x36815]        # 68018 <_obstack_memory_used@@Base+0x1b398>
   31803:	call   a040 <dcgettext@plt>
   31808:	mov    rdi,rax
   3180b:	xor    eax,eax
   3180d:	call   49610 <argp_usage@@Base+0x6290>
   31812:	cmp    QWORD PTR [rsp+0x3a8],0x0
   3181b:	jne    31908 <__sprintf_chk@plt+0x26f58>
   31821:	mov    eax,DWORD PTR [rsp+0x40]
   31825:	cmp    eax,DWORD PTR [rsp+0xec]
   3182c:	jne    3184b <__sprintf_chk@plt+0x26e9b>
   3182e:	cmp    QWORD PTR [rsp+0x3a0],0x0
   31837:	jne    31908 <__sprintf_chk@plt+0x26f58>
   3183d:	cmp    r12d,DWORD PTR [rsp+0xf0]
   31845:	je     31908 <__sprintf_chk@plt+0x26f58>
   3184b:	mov    edx,0x5
   31850:	lea    rsi,[rip+0x36801]        # 68058 <_obstack_memory_used@@Base+0x1b3d8>
   31857:	xor    edi,edi
   31859:	call   a040 <dcgettext@plt>
   3185e:	mov    rdi,rax
   31861:	xor    eax,eax
   31863:	call   49610 <argp_usage@@Base+0x6290>
   31868:	lea    r9,[rsp+0x223]
   31870:	mov    edi,DWORD PTR [rsp+0x38]
   31874:	mov    rsi,r9
   31877:	mov    QWORD PTR [rsp+0x40],r9
   3187c:	call   49970 <argp_usage@@Base+0x65f0>
   31881:	mov    edx,0x5
   31886:	lea    rsi,[rip+0x3680b]        # 68098 <_obstack_memory_used@@Base+0x1b418>
   3188d:	xor    edi,edi
   3188f:	mov    QWORD PTR [rsp+0x28],rax
   31894:	call   a040 <dcgettext@plt>
   31899:	mov    ecx,DWORD PTR [rsp+0x48]
   3189d:	mov    rsi,QWORD PTR [rsp+0x28]
   318a2:	lea    edx,[r12+0x1]
   318a7:	mov    rdi,rax
   318aa:	xor    eax,eax
   318ac:	call   49610 <argp_usage@@Base+0x6290>
   318b1:	mov    eax,DWORD PTR [rsp+0xf0]
   318b8:	mov    ecx,DWORD PTR [rsp+0xec]
   318bf:	mov    rsi,QWORD PTR [rsp+0x40]
   318c4:	mov    edi,DWORD PTR [rsp+0xf4]
   318cb:	lea    r8d,[rax+0x1]
   318cf:	mov    DWORD PTR [rsp+0x38],ecx
   318d3:	mov    DWORD PTR [rsp+0x28],r8d
   318d8:	call   49970 <argp_usage@@Base+0x65f0>
   318dd:	mov    edx,0x5
   318e2:	lea    rsi,[rip+0x367d7]        # 680c0 <_obstack_memory_used@@Base+0x1b440>
   318e9:	xor    edi,edi
   318eb:	mov    r12,rax
   318ee:	call   a040 <dcgettext@plt>
   318f3:	mov    ecx,DWORD PTR [rsp+0x38]
   318f7:	mov    edx,DWORD PTR [rsp+0x28]
   318fb:	mov    rsi,r12
   318fe:	mov    rdi,rax
   31901:	xor    eax,eax
   31903:	call   49610 <argp_usage@@Base+0x6290>
   31908:	movzx  eax,BYTE PTR [rsp+0x409]
   31910:	mov    BYTE PTR [rsp+0x28],al
   31914:	cmp    QWORD PTR [rsp+0x400],0x0
   3191d:	je     30fc7 <__sprintf_chk@plt+0x26617>
   31923:	movsxd rax,DWORD PTR [rsp+0x348]
   3192b:	mov    rdx,QWORD PTR [rsp+0x30]
   31930:	xor    esi,esi
   31932:	mov    r12,rax
   31935:	sub    rax,QWORD PTR [rsp+0x108]
   3193d:	seto   sil
   31941:	xor    ecx,ecx
   31943:	sub    rdx,rax
   31946:	seto   cl
   31949:	mov    rax,rdx
   3194c:	or     rsi,rcx
   3194f:	je     30fc2 <__sprintf_chk@plt+0x26612>
   31955:	cmp    BYTE PTR [rsp+0x28],0x0
   3195a:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   31960:	xor    edi,edi
   31962:	mov    edx,0x5
   31967:	lea    rsi,[rip+0x3677a]        # 680e8 <_obstack_memory_used@@Base+0x1b468>
   3196e:	call   a040 <dcgettext@plt>
   31973:	mov    esi,r12d
   31976:	mov    rdi,rax
   31979:	xor    eax,eax
   3197b:	call   49610 <argp_usage@@Base+0x6290>
   31980:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   31985:	push   r8
   31987:	mov    edx,0x1
   3198c:	lea    r8,[rip+0x34f07]        # 6689a <_obstack_memory_used@@Base+0x19c1a>
   31993:	xor    eax,eax
   31995:	push   rdi
   31996:	mov    ecx,0x64
   3199b:	mov    rdi,rbp
   3199e:	mov    esi,0x64
   319a3:	call   9d90 <__snprintf_chk@plt>
   319a8:	pop    rdi
   319a9:	pop    r8
   319ab:	mov    edx,0x5
   319b0:	cmp    QWORD PTR [rsp+0x3f8],0x0
   319b9:	je     31a5a <__sprintf_chk@plt+0x270aa>
   319bf:	xor    edi,edi
   319c1:	lea    rsi,[rip+0x362d8]        # 67ca0 <_obstack_memory_used@@Base+0x1b020>
   319c8:	call   a040 <dcgettext@plt>
   319cd:	mov    rdi,rax
   319d0:	mov    rsi,rbp
   319d3:	xor    eax,eax
   319d5:	call   49610 <argp_usage@@Base+0x6290>
   319da:	mov    r11,QWORD PTR [rsp+0x3f8]
   319e2:	mov    r10d,DWORD PTR [rsp+0xe0]
   319ea:	mov    ecx,DWORD PTR [rsp+0xe4]
   319f1:	mov    r9d,DWORD PTR [rsp+0xe8]
   319f9:	mov    esi,DWORD PTR [rsp+0xec]
   31a00:	mov    eax,DWORD PTR [rsp+0xf0]
   31a07:	jmp    3120e <__sprintf_chk@plt+0x2685e>
   31a0c:	lea    rdi,[rip+0x362ed]        # 67d00 <_obstack_memory_used@@Base+0x1b080>
   31a13:	xor    eax,eax
   31a15:	call   49610 <argp_usage@@Base+0x6290>
   31a1a:	jmp    319da <__sprintf_chk@plt+0x2702a>
   31a1c:	test   rax,rax
   31a1f:	je     31301 <__sprintf_chk@plt+0x26951>
   31a25:	jmp    3159e <__sprintf_chk@plt+0x26bee>
   31a2a:	cmp    DWORD PTR [rsp+0xe8],0xc
   31a32:	je     313b1 <__sprintf_chk@plt+0x26a01>
   31a38:	xor    edi,edi
   31a3a:	mov    edx,0x5
   31a3f:	lea    rsi,[rip+0x3650a]        # 67f50 <_obstack_memory_used@@Base+0x1b2d0>
   31a46:	call   a040 <dcgettext@plt>
   31a4b:	mov    rdi,rax
   31a4e:	xor    eax,eax
   31a50:	call   49610 <argp_usage@@Base+0x6290>
   31a55:	jmp    313b1 <__sprintf_chk@plt+0x26a01>
   31a5a:	xor    edi,edi
   31a5c:	lea    rsi,[rip+0x3626d]        # 67cd0 <_obstack_memory_used@@Base+0x1b050>
   31a63:	call   a040 <dcgettext@plt>
   31a68:	mov    rdi,rax
   31a6b:	jmp    319d0 <__sprintf_chk@plt+0x27020>
   31a70:	mov    r14,QWORD PTR [r15-0xd8]
   31a77:	mov    edx,0x5
   31a7c:	lea    rsi,[rip+0x36025]        # 67aa8 <_obstack_memory_used@@Base+0x1ae28>
   31a83:	xor    edi,edi
   31a85:	mov    DWORD PTR [rsp+0x98],r10d
   31a8d:	mov    QWORD PTR [rsp+0x90],r9
   31a95:	mov    QWORD PTR [rsp+0x88],r11
   31a9d:	mov    QWORD PTR [rsp+0xa0],r8
   31aa5:	call   a040 <dcgettext@plt>
   31aaa:	mov    rdx,QWORD PTR [rsp+0xa0]
   31ab2:	mov    rsi,r14
   31ab5:	mov    rdi,rax
   31ab8:	xor    eax,eax
   31aba:	call   49610 <argp_usage@@Base+0x6290>
   31abf:	mov    r10d,DWORD PTR [rsp+0x98]
   31ac7:	mov    r9,QWORD PTR [rsp+0x90]
   31acf:	mov    r11,QWORD PTR [rsp+0x88]
   31ad7:	jmp    30353 <__sprintf_chk@plt+0x259a3>
   31adc:	mov    rax,QWORD PTR [rsp+0x38]
   31ae1:	movzx  edx,BYTE PTR [rsp+0x88]
   31ae9:	mov    r11,rbp
   31aec:	mov    rbx,QWORD PTR [rsp+0x28]
   31af1:	lea    rcx,[rbp+rax*1-0x1]
   31af6:	cmp    BYTE PTR [rcx],0x53
   31af9:	je     31e95 <__sprintf_chk@plt+0x274e5>
   31aff:	mov    QWORD PTR [rsp+0x28],rbx
   31b04:	lea    rbp,[rip+0x49055]        # 7ab60 <_obstack_memory_used@@Base+0x2dee0>
   31b0b:	mov    rbx,r11
   31b0e:	lea    rsi,[rip+0x34c1a]        # 6672f <_obstack_memory_used@@Base+0x19aaf>
   31b15:	jmp    31b30 <__sprintf_chk@plt+0x27180>
   31b17:	mov    rsi,QWORD PTR [rbp+0x10]
   31b1b:	add    rbp,0x10
   31b1f:	movzx  edx,BYTE PTR [rsp+0x88]
   31b27:	test   rsi,rsi
   31b2a:	je     31eec <__sprintf_chk@plt+0x2753c>
   31b30:	mov    rdi,rbx
   31b33:	mov    BYTE PTR [rsp+0x88],dl
   31b3a:	call   a320 <strcmp@plt>
   31b3f:	test   eax,eax
   31b41:	jne    31b17 <__sprintf_chk@plt+0x27167>
   31b43:	mov    rbx,QWORD PTR [rsp+0x28]
   31b48:	jmp    30ab1 <__sprintf_chk@plt+0x26101>
   31b4d:	lea    rbp,[rip+0x48e4c]        # 7a9a0 <_obstack_memory_used@@Base+0x2dd20>
   31b54:	jmp    30ab1 <__sprintf_chk@plt+0x26101>
   31b59:	mov    edx,0x5
   31b5e:	lea    rsi,[rip+0x35f7b]        # 67ae0 <_obstack_memory_used@@Base+0x1ae60>
   31b65:	xor    edi,edi
   31b67:	mov    DWORD PTR [rsp+0x98],r10d
   31b6f:	mov    QWORD PTR [rsp+0x90],r9
   31b77:	mov    QWORD PTR [rsp+0x88],r11
   31b7f:	call   a040 <dcgettext@plt>
   31b84:	mov    rsi,r14
   31b87:	mov    rdi,rax
   31b8a:	xor    eax,eax
   31b8c:	call   49610 <argp_usage@@Base+0x6290>
   31b91:	mov    r10d,DWORD PTR [rsp+0x98]
   31b99:	mov    r9,QWORD PTR [rsp+0x90]
   31ba1:	mov    r11,QWORD PTR [rsp+0x88]
   31ba9:	jmp    3145a <__sprintf_chk@plt+0x26aaa>
   31bae:	cmp    BYTE PTR [rsp+0x409],0x0
   31bb6:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   31bbc:	xor    edi,edi
   31bbe:	mov    edx,0x5
   31bc3:	lea    rsi,[rip+0x34cdf]        # 668a9 <_obstack_memory_used@@Base+0x19c29>
   31bca:	call   a040 <dcgettext@plt>
   31bcf:	mov    rsi,QWORD PTR [rsp+0x70]
   31bd4:	mov    rdi,rax
   31bd7:	xor    eax,eax
   31bd9:	call   49610 <argp_usage@@Base+0x6290>
   31bde:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   31be3:	test   al,al
   31be5:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   31beb:	mov    edx,0x5
   31bf0:	lea    rsi,[rip+0x36141]        # 67d38 <_obstack_memory_used@@Base+0x1b0b8>
   31bf7:	xor    edi,edi
   31bf9:	call   a040 <dcgettext@plt>
   31bfe:	lea    rbp,[rsp+0x330]
   31c06:	mov    rdi,rax
   31c09:	xor    eax,eax
   31c0b:	call   49610 <argp_usage@@Base+0x6290>
   31c10:	mov    rdx,QWORD PTR [rsp+0x70]
   31c15:	mov    rsi,rbp
   31c18:	mov    rdi,r12
   31c1b:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31c20:	mov    edx,0x5
   31c25:	lea    rsi,[rip+0x34c9b]        # 668c7 <_obstack_memory_used@@Base+0x19c47>
   31c2c:	xor    edi,edi
   31c2e:	mov    r12,rax
   31c31:	call   a040 <dcgettext@plt>
   31c36:	mov    rsi,r12
   31c39:	mov    rdi,rax
   31c3c:	xor    eax,eax
   31c3e:	call   49610 <argp_usage@@Base+0x6290>
   31c43:	mov    rdx,QWORD PTR [rsp+0x70]
   31c48:	mov    rsi,rbp
   31c4b:	mov    rdi,r13
   31c4e:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31c53:	mov    edx,0x5
   31c58:	lea    rsi,[rip+0x34c86]        # 668e5 <_obstack_memory_used@@Base+0x19c65>
   31c5f:	xor    edi,edi
   31c61:	mov    rbp,rax
   31c64:	call   a040 <dcgettext@plt>
   31c69:	mov    rsi,rbp
   31c6c:	mov    rdi,rax
   31c6f:	xor    eax,eax
   31c71:	call   49610 <argp_usage@@Base+0x6290>
   31c76:	lea    rax,[rip+0x39ed3]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   31c7d:	mov    rdi,rax
   31c80:	mov    esi,DWORD PTR [rsp+0x48]
   31c84:	lea    rdx,[rip+0x34ab2]        # 6673d <_obstack_memory_used@@Base+0x19abd>
   31c8b:	cmp    DWORD PTR [rsp+0x40],esi
   31c8f:	lea    r8,[rip+0x39eba]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   31c96:	cmovne r8,rdx
   31c9a:	mov    esi,DWORD PTR [rsp+0x28]
   31c9e:	xor    ebp,ebp
   31ca0:	cmp    DWORD PTR [rsp+0x20],esi
   31ca4:	jne    2e9fd <__sprintf_chk@plt+0x2404d>
   31caa:	jmp    2e9f6 <__sprintf_chk@plt+0x24046>
   31caf:	mov    DWORD PTR [rsp+0x90],r11d
   31cb7:	mov    DWORD PTR [rsp+0x88],ecx
   31cbe:	mov    DWORD PTR [rsp+0x80],r8d
   31cc6:	mov    DWORD PTR [rsp+0x78],r9d
   31ccb:	test   al,al
   31ccd:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   31cd3:	mov    edx,0x5
   31cd8:	lea    rsi,[rip+0x36059]        # 67d38 <_obstack_memory_used@@Base+0x1b0b8>
   31cdf:	xor    edi,edi
   31ce1:	call   a040 <dcgettext@plt>
   31ce6:	lea    rbp,[rsp+0x330]
   31cee:	mov    rdi,rax
   31cf1:	xor    eax,eax
   31cf3:	call   49610 <argp_usage@@Base+0x6290>
   31cf8:	mov    rdx,QWORD PTR [rsp+0x70]
   31cfd:	mov    rsi,rbp
   31d00:	mov    rdi,r12
   31d03:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31d08:	mov    edx,0x5
   31d0d:	lea    rsi,[rip+0x34bb3]        # 668c7 <_obstack_memory_used@@Base+0x19c47>
   31d14:	xor    edi,edi
   31d16:	mov    r12,rax
   31d19:	call   a040 <dcgettext@plt>
   31d1e:	mov    rsi,r12
   31d21:	mov    rdi,rax
   31d24:	xor    eax,eax
   31d26:	call   49610 <argp_usage@@Base+0x6290>
   31d2b:	mov    rdx,QWORD PTR [rsp+0x70]
   31d30:	mov    rsi,rbp
   31d33:	mov    rdi,r13
   31d36:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   31d3b:	mov    edx,0x5
   31d40:	lea    rsi,[rip+0x34b9e]        # 668e5 <_obstack_memory_used@@Base+0x19c65>
   31d47:	xor    edi,edi
   31d49:	mov    rbp,rax
   31d4c:	call   a040 <dcgettext@plt>
   31d51:	mov    rsi,rbp
   31d54:	mov    rdi,rax
   31d57:	xor    eax,eax
   31d59:	call   49610 <argp_usage@@Base+0x6290>
   31d5e:	mov    r9d,DWORD PTR [rsp+0x78]
   31d63:	mov    r8d,DWORD PTR [rsp+0x80]
   31d6b:	cmp    r9d,r8d
   31d6e:	je     31fe8 <__sprintf_chk@plt+0x27638>
   31d74:	mov    ecx,DWORD PTR [rsp+0x88]
   31d7b:	mov    r11d,DWORD PTR [rsp+0x90]
   31d83:	lea    rax,[rip+0x349b3]        # 6673d <_obstack_memory_used@@Base+0x19abd>
   31d8a:	cmp    ecx,r11d
   31d8d:	jne    31c7d <__sprintf_chk@plt+0x272cd>
   31d93:	lea    rdi,[rip+0x39db6]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   31d9a:	jmp    31c80 <__sprintf_chk@plt+0x272d0>
   31d9f:	mov    ecx,DWORD PTR [rsp+0xf4]
   31da6:	mov    eax,DWORD PTR [rsp+0xf0]
   31dad:	mov    esi,0x64
   31db2:	lea    rdi,[rsp+0x223]
   31dba:	mov    r10d,DWORD PTR [rsp+0xec]
   31dc2:	mov    QWORD PTR [rsp+0x28],rdi
   31dc7:	lea    r12d,[rax+0x1]
   31dcb:	mov    eax,ecx
   31dcd:	cdq    
   31dce:	mov    DWORD PTR [rsp+0x38],r10d
   31dd3:	idiv   esi
   31dd5:	lea    rsi,[rip+0x34b8c]        # 66968 <_obstack_memory_used@@Base+0x19ce8>
   31ddc:	add    eax,0x13
   31ddf:	cmp    ecx,0xfffff894
   31de5:	mov    r9d,edx
   31de8:	setge  cl
   31deb:	mov    r8d,eax
   31dee:	movzx  ecx,cl
   31df1:	add    rcx,rsi
   31df4:	neg    r9d
   31df7:	mov    esi,0x1
   31dfc:	cmovs  r9d,edx
   31e00:	neg    r8d
   31e03:	mov    edx,0xd
   31e08:	cmovs  r8d,eax
   31e0c:	xor    eax,eax
   31e0e:	call   a9b0 <__sprintf_chk@plt>
   31e13:	mov    r10d,DWORD PTR [rsp+0x38]
   31e18:	mov    rdi,rbp
   31e1b:	xor    eax,eax
   31e1d:	mov    ecx,0x64
   31e22:	mov    edx,0x1
   31e27:	mov    esi,0x64
   31e2c:	push   r10
   31e2e:	lea    r8,[rip+0x34b3d]        # 66972 <_obstack_memory_used@@Base+0x19cf2>
   31e35:	push   r12
   31e37:	mov    r9,QWORD PTR [rsp+0x38]
   31e3c:	call   9d90 <__snprintf_chk@plt>
   31e41:	mov    edx,0x5
   31e46:	xor    edi,edi
   31e48:	lea    rsi,[rip+0x36029]        # 67e78 <_obstack_memory_used@@Base+0x1b1f8>
   31e4f:	call   a040 <dcgettext@plt>
   31e54:	mov    rsi,rbp
   31e57:	mov    rdi,rax
   31e5a:	xor    eax,eax
   31e5c:	call   49610 <argp_usage@@Base+0x6290>
   31e61:	pop    rax
   31e62:	pop    rdx
   31e63:	cmp    QWORD PTR [rsp+0x3e0],0x0
   31e6c:	je     31301 <__sprintf_chk@plt+0x26951>
   31e72:	cmp    QWORD PTR [rsp+0x3d8],0x0
   31e7b:	jne    3159e <__sprintf_chk@plt+0x26bee>
   31e81:	jmp    31301 <__sprintf_chk@plt+0x26951>
   31e86:	movsx  edx,BYTE PTR [r9]
   31e8a:	add    ecx,0x1
   31e8d:	sub    edx,0x30
   31e90:	jmp    2ecee <__sprintf_chk@plt+0x2433e>
   31e95:	mov    BYTE PTR [rcx],0x0
   31e98:	lea    rbp,[rip+0x48e21]        # 7acc0 <_obstack_memory_used@@Base+0x2e040>
   31e9f:	lea    rsi,[rip+0x34884]        # 6672a <_obstack_memory_used@@Base+0x19aaa>
   31ea6:	mov    rbx,r11
   31ea9:	jmp    31ecc <__sprintf_chk@plt+0x2751c>
   31eab:	mov    rsi,QWORD PTR [rbp+0x10]
   31eaf:	add    rbp,0x10
   31eb3:	movzx  edx,BYTE PTR [rsp+0x88]
   31ebb:	mov    rcx,QWORD PTR [rsp+0x90]
   31ec3:	test   rsi,rsi
   31ec6:	je     32025 <__sprintf_chk@plt+0x27675>
   31ecc:	mov    rdi,rbx
   31ecf:	mov    QWORD PTR [rsp+0x90],rcx
   31ed7:	mov    BYTE PTR [rsp+0x88],dl
   31ede:	call   a320 <strcmp@plt>
   31ee3:	test   eax,eax
   31ee5:	jne    31eab <__sprintf_chk@plt+0x274fb>
   31ee7:	jmp    31b43 <__sprintf_chk@plt+0x27193>
   31eec:	cmp    QWORD PTR [rsp+0x38],0x1
   31ef2:	mov    r11,rbx
   31ef5:	movzx  eax,BYTE PTR [rsp+0x230]
   31efd:	mov    rbx,QWORD PTR [rsp+0x28]
   31f02:	je     31ffb <__sprintf_chk@plt+0x2764b>
   31f08:	mov    rsi,r11
   31f0b:	mov    rcx,r11
   31f0e:	test   al,al
   31f10:	jne    31f2a <__sprintf_chk@plt+0x2757a>
   31f12:	jmp    31f5c <__sprintf_chk@plt+0x275ac>
   31f14:	nop    DWORD PTR [rax+0x0]
   31f18:	add    rcx,0x1
   31f1c:	movzx  eax,BYTE PTR [rsi+0x1]
   31f20:	add    rsi,0x1
   31f24:	mov    BYTE PTR [rcx],al
   31f26:	test   al,al
   31f28:	je     31f35 <__sprintf_chk@plt+0x27585>
   31f2a:	cmp    al,0x2e
   31f2c:	jne    31f18 <__sprintf_chk@plt+0x27568>
   31f2e:	mov    edx,0x1
   31f33:	jmp    31f1c <__sprintf_chk@plt+0x2756c>
   31f35:	test   dl,dl
   31f37:	je     31f5c <__sprintf_chk@plt+0x275ac>
   31f39:	mov    rdi,QWORD PTR [rsp+0x30]
   31f3e:	mov    rsi,r11
   31f41:	mov    QWORD PTR [rsp+0x28],r11
   31f46:	call   499e0 <argp_usage@@Base+0x6660>
   31f4b:	mov    r11,QWORD PTR [rsp+0x28]
   31f50:	test   rax,rax
   31f53:	mov    rbp,rax
   31f56:	jne    30ab1 <__sprintf_chk@plt+0x26101>
   31f5c:	cmp    BYTE PTR [rsp+0x409],0x0
   31f64:	je     2f118 <__sprintf_chk@plt+0x24768>
   31f6a:	mov    edx,0x5
   31f6f:	lea    rsi,[rip+0x347ed]        # 66763 <_obstack_memory_used@@Base+0x19ae3>
   31f76:	xor    edi,edi
   31f78:	mov    QWORD PTR [rsp+0x28],r11
   31f7d:	call   a040 <dcgettext@plt>
   31f82:	mov    rsi,QWORD PTR [rsp+0x28]
   31f87:	mov    ebp,0x3f
   31f8c:	mov    rdi,rax
   31f8f:	xor    eax,eax
   31f91:	call   49610 <argp_usage@@Base+0x6290>
   31f96:	mov    edx,0x2
   31f9b:	jmp    2edfe <__sprintf_chk@plt+0x2444e>
   31fa0:	call   a0a0 <__stack_chk_fail@plt>
   31fa5:	mov    rsi,r14
   31fa8:	lea    rdi,[rip+0x31094]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   31faf:	call   3bad0 <__sprintf_chk@plt+0x31120>
   31fb4:	mov    rax,QWORD PTR [rip+0x4d54d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   31fbb:	test   rax,rax
   31fbe:	je     31fc2 <__sprintf_chk@plt+0x27612>
   31fc0:	call   rax
   31fc2:	mov    edx,0x5
   31fc7:	lea    rsi,[rip+0x34772]        # 66740 <_obstack_memory_used@@Base+0x19ac0>
   31fce:	xor    edi,edi
   31fd0:	call   a040 <dcgettext@plt>
   31fd5:	xor    esi,esi
   31fd7:	xor    edi,edi
   31fd9:	mov    rdx,rax
   31fdc:	xor    eax,eax
   31fde:	call   a640 <error@plt>
   31fe3:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   31fe8:	lea    rax,[rip+0x39b61]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   31fef:	lea    rdi,[rip+0x34747]        # 6673d <_obstack_memory_used@@Base+0x19abd>
   31ff6:	jmp    31c80 <__sprintf_chk@plt+0x272d0>
   31ffb:	lea    rbp,[rip+0x489be]        # 7a9c0 <_obstack_memory_used@@Base+0x2dd40>
   32002:	lea    rsi,[rip+0x34a8c]        # 66a95 <_obstack_memory_used@@Base+0x19e15>
   32009:	jmp    3201c <__sprintf_chk@plt+0x2766c>
   3200b:	mov    rsi,QWORD PTR [rbp+0x10]
   3200f:	add    rbp,0x10
   32013:	test   rsi,rsi
   32016:	je     31f08 <__sprintf_chk@plt+0x27558>
   3201c:	cmp    BYTE PTR [rsi],al
   3201e:	jne    3200b <__sprintf_chk@plt+0x2765b>
   32020:	jmp    30ab1 <__sprintf_chk@plt+0x26101>
   32025:	mov    r11,rbx
   32028:	mov    BYTE PTR [rcx],0x53
   3202b:	mov    rbx,QWORD PTR [rsp+0x28]
   32030:	jmp    31aff <__sprintf_chk@plt+0x2714f>
   32035:	xor    edi,edi
   32037:	mov    edx,0x5
   3203c:	mov    QWORD PTR [rsp+0x38],r9
   32041:	lea    rsi,[rip+0x36100]        # 68148 <_obstack_memory_used@@Base+0x1b4c8>
   32048:	mov    QWORD PTR [rsp+0x30],r11
   3204d:	mov    DWORD PTR [rsp+0x28],r10d
   32052:	call   a040 <dcgettext@plt>
   32057:	mov    r8d,DWORD PTR [rsp+0x28]
   3205c:	mov    rcx,r12
   3205f:	mov    rdx,r13
   32062:	mov    rsi,QWORD PTR [rsp+0x30]
   32067:	mov    rdi,rax
   3206a:	xor    eax,eax
   3206c:	call   49610 <argp_usage@@Base+0x6290>
   32071:	xor    edi,edi
   32073:	mov    edx,0x5
   32078:	lea    rsi,[rip+0x36119]        # 68198 <_obstack_memory_used@@Base+0x1b518>
   3207f:	call   a040 <dcgettext@plt>
   32084:	mov    rsi,QWORD PTR [rsp+0x38]
   32089:	mov    rdi,rax
   3208c:	xor    eax,eax
   3208e:	call   49610 <argp_usage@@Base+0x6290>
   32093:	cmp    DWORD PTR [rsp+0x100],0xffffffff
   3209b:	je     320e4 <__sprintf_chk@plt+0x27734>
   3209d:	mov    rsi,QWORD PTR [rsp+0x8]
   320a2:	lea    rdx,[rsp+0x1e0]
   320aa:	mov    rdi,r15
   320ad:	call   57260 <_obstack_memory_used@@Base+0xa5e0>
   320b2:	test   rax,rax
   320b5:	je     320e4 <__sprintf_chk@plt+0x27734>
   320b7:	mov    eax,DWORD PTR [rsp+0x200]
   320be:	cmp    DWORD PTR [rsp+0x100],eax
   320c5:	je     320e4 <__sprintf_chk@plt+0x27734>
   320c7:	xor    edi,edi
   320c9:	mov    edx,0x5
   320ce:	lea    rsi,[rip+0x360eb]        # 681c0 <_obstack_memory_used@@Base+0x1b540>
   320d5:	call   a040 <dcgettext@plt>
   320da:	mov    rdi,rax
   320dd:	xor    eax,eax
   320df:	call   49610 <argp_usage@@Base+0x6290>
   320e4:	movzx  r8d,BYTE PTR [rsp+0x409]
   320ed:	jmp    310d8 <__sprintf_chk@plt+0x26728>
   320f2:	xor    edi,edi
   320f4:	mov    edx,0x5
   320f9:	lea    rsi,[rip+0x35ca0]        # 67da0 <_obstack_memory_used@@Base+0x1b120>
   32100:	call   a040 <dcgettext@plt>
   32105:	mov    rdi,rax
   32108:	xor    eax,eax
   3210a:	call   49610 <argp_usage@@Base+0x6290>
   3210f:	jmp    2eacb <__sprintf_chk@plt+0x2411b>
   32114:	call   19130 <__sprintf_chk@plt+0xe780>
   32119:	cmp    BYTE PTR [rsp+0x409],0x0
   32121:	je     2ee78 <__sprintf_chk@plt+0x244c8>
   32127:	lea    rsi,[rsp+0x330]
   3212f:	mov    rdx,rbp
   32132:	mov    rdi,r13
   32135:	call   57f40 <_obstack_memory_used@@Base+0xb2c0>
   3213a:	xor    edi,edi
   3213c:	mov    edx,0x5
   32141:	lea    rsi,[rip+0x35e50]        # 67f98 <_obstack_memory_used@@Base+0x1b318>
   32148:	mov    rbp,rax
   3214b:	call   a040 <dcgettext@plt>
   32150:	mov    rsi,rbp
   32153:	mov    rdi,rax
   32156:	xor    eax,eax
   32158:	call   49610 <argp_usage@@Base+0x6290>
   3215d:	jmp    2ee78 <__sprintf_chk@plt+0x244c8>
   32162:	lea    r12,[rip+0x399e7]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   32169:	jmp    31608 <__sprintf_chk@plt+0x26c58>
   3216e:	lea    rsi,[rip+0x347b9]        # 6692e <_obstack_memory_used@@Base+0x19cae>
   32175:	xor    edi,edi
   32177:	call   a040 <dcgettext@plt>
   3217c:	mov    rsi,rax
   3217f:	jmp    2eb3b <__sprintf_chk@plt+0x2418b>
   32184:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3218f:	nop
   32190:	endbr64 
   32194:	push   r12
   32196:	push   rbx
   32197:	mov    rbx,rdi
   3219a:	sub    rsp,0x8
   3219e:	mov    r12,QWORD PTR [rip+0x4d633]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   321a5:	nop    DWORD PTR [rax]
   321a8:	test   r12,r12
   321ab:	jne    321b9 <__sprintf_chk@plt+0x27809>
   321ad:	jmp    321d4 <__sprintf_chk@plt+0x27824>
   321af:	nop
   321b0:	mov    r12,QWORD PTR [r12]
   321b4:	test   r12,r12
   321b7:	je     321e0 <__sprintf_chk@plt+0x27830>
   321b9:	mov    rdi,QWORD PTR [r12+0x10]
   321be:	cmp    BYTE PTR [rdi],0x0
   321c1:	je     321b0 <__sprintf_chk@plt+0x27800>
   321c3:	mov    edx,DWORD PTR [r12+0x20]
   321c8:	mov    rsi,rbx
   321cb:	call   48660 <argp_usage@@Base+0x52e0>
   321d0:	test   al,al
   321d2:	je     321b0 <__sprintf_chk@plt+0x27800>
   321d4:	add    rsp,0x8
   321d8:	mov    rax,r12
   321db:	pop    rbx
   321dc:	pop    r12
   321de:	ret    
   321df:	nop
   321e0:	cmp    BYTE PTR [rip+0x4d6da],0x0        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
   321e7:	je     321d4 <__sprintf_chk@plt+0x27824>
   321e9:	mov    rax,QWORD PTR [rip+0x4d5e8]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   321f0:	test   rax,rax
   321f3:	je     321d4 <__sprintf_chk@plt+0x27824>
   321f5:	cmp    QWORD PTR [rax+0x30],0x0
   321fa:	je     321d4 <__sprintf_chk@plt+0x27824>
   321fc:	call   2c400 <__sprintf_chk@plt+0x21a50>
   32201:	mov    rax,QWORD PTR [rip+0x4d5d0]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   32208:	cmp    QWORD PTR [rax+0x30],0x0
   3220d:	jne    321d4 <__sprintf_chk@plt+0x27824>
   3220f:	mov    r12,rax
   32212:	jmp    321a8 <__sprintf_chk@plt+0x277f8>
   32214:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3221f:	nop
   32220:	endbr64 
   32224:	mov    rax,QWORD PTR [rip+0x4d5b5]        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   3222b:	test   rax,rax
   3222e:	je     32290 <__sprintf_chk@plt+0x278e0>
   32230:	cmp    QWORD PTR [rax+0x30],0x0
   32235:	jne    32240 <__sprintf_chk@plt+0x27890>
   32237:	mov    rdx,QWORD PTR [rax+0x10]
   3223b:	cmp    BYTE PTR [rdx],0x0
   3223e:	jne    32258 <__sprintf_chk@plt+0x278a8>
   32240:	mov    rax,QWORD PTR [rax]
   32243:	mov    QWORD PTR [rip+0x4d596],rax        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   3224a:	test   rax,rax
   3224d:	jne    32230 <__sprintf_chk@plt+0x27880>
   3224f:	xor    eax,eax
   32251:	ret    
   32252:	nop    WORD PTR [rax+rax*1+0x0]
   32258:	mov    edi,DWORD PTR [rax+0x28]
   3225b:	cmp    edi,DWORD PTR [rip+0x4d567]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   32261:	mov    QWORD PTR [rax+0x30],0x1
   32269:	je     32280 <__sprintf_chk@plt+0x278d0>
   3226b:	sub    rsp,0x8
   3226f:	call   26d40 <__sprintf_chk@plt+0x1c390>
   32274:	mov    rax,QWORD PTR [rip+0x4d565]        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   3227b:	add    rsp,0x8
   3227f:	ret    
   32280:	mov    rax,QWORD PTR [rip+0x4d559]        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   32287:	ret    
   32288:	nop    DWORD PTR [rax+rax*1+0x0]
   32290:	mov    rax,QWORD PTR [rip+0x4d541]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   32297:	mov    QWORD PTR [rip+0x4d542],rax        # 7f7e0 <obstack_alloc_failed_handler@@Base+0x9a8>
   3229e:	test   rax,rax
   322a1:	jne    32230 <__sprintf_chk@plt+0x27880>
   322a3:	jmp    3224f <__sprintf_chk@plt+0x2789f>
   322a5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   322b0:	endbr64 
   322b4:	push   r15
   322b6:	mov    r15,rdi
   322b9:	push   r14
   322bb:	push   r13
   322bd:	mov    r13,rsi
   322c0:	push   r12
   322c2:	push   rbp
   322c3:	xor    ebp,ebp
   322c5:	push   rbx
   322c6:	sub    rsp,0x8
   322ca:	call   a060 <strlen@plt>
   322cf:	mov    rdi,r13
   322d2:	mov    rbx,rax
   322d5:	call   a060 <strlen@plt>
   322da:	lea    r14,[rax+0x1]
   322de:	test   rbx,rbx
   322e1:	je     322f2 <__sprintf_chk@plt+0x27942>
   322e3:	cmp    BYTE PTR [r15+rbx*1-0x1],0x2f
   322e9:	mov    rbp,rbx
   322ec:	je     322f2 <__sprintf_chk@plt+0x27942>
   322ee:	lea    rbp,[rbx+0x1]
   322f2:	lea    rdi,[r14+rbp*1]
   322f6:	call   a4a0 <malloc@plt>
   322fb:	mov    r12,rax
   322fe:	test   rax,rax
   32301:	je     32337 <__sprintf_chk@plt+0x27987>
   32303:	mov    rdx,rbx
   32306:	mov    rsi,r15
   32309:	mov    rdi,rax
   3230c:	call   a420 <memcpy@plt>
   32311:	lea    rdi,[r12+rbp*1]
   32315:	mov    rdx,r14
   32318:	mov    rsi,r13
   3231b:	mov    BYTE PTR [r12+rbx*1],0x2f
   32320:	call   a420 <memcpy@plt>
   32325:	add    rsp,0x8
   32329:	mov    rax,r12
   3232c:	pop    rbx
   3232d:	pop    rbp
   3232e:	pop    r12
   32330:	pop    r13
   32332:	pop    r14
   32334:	pop    r15
   32336:	ret    
   32337:	call   19130 <__sprintf_chk@plt+0xe780>
   3233c:	nop    DWORD PTR [rax+0x0]
   32340:	endbr64 
   32344:	movzx  edx,BYTE PTR [rdi]
   32347:	cmp    dl,0x2e
   3234a:	jne    32353 <__sprintf_chk@plt+0x279a3>
   3234c:	jmp    32368 <__sprintf_chk@plt+0x279b8>
   3234e:	xchg   ax,ax
   32350:	movzx  edx,BYTE PTR [rdi]
   32353:	add    rdi,0x1
   32357:	cmp    dl,0x2f
   3235a:	je     32344 <__sprintf_chk@plt+0x27994>
   3235c:	test   dl,dl
   3235e:	jne    32350 <__sprintf_chk@plt+0x279a0>
   32360:	xor    eax,eax
   32362:	ret    
   32363:	nop    DWORD PTR [rax+rax*1+0x0]
   32368:	cmp    BYTE PTR [rdi+0x1],0x2e
   3236c:	jne    32353 <__sprintf_chk@plt+0x279a3>
   3236e:	movzx  ecx,BYTE PTR [rdi+0x2]
   32372:	cmp    cl,0x2f
   32375:	sete   al
   32378:	test   cl,cl
   3237a:	sete   cl
   3237d:	or     al,cl
   3237f:	je     32353 <__sprintf_chk@plt+0x279a3>
   32381:	ret    
   32382:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3238d:	nop    DWORD PTR [rax]
   32390:	endbr64 
   32394:	pxor   xmm0,xmm0
   32398:	movups XMMWORD PTR [rdi],xmm0
   3239b:	mov    eax,DWORD PTR [rip+0x4cf07]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   323a1:	movups XMMWORD PTR [rdi+0x10],xmm0
   323a5:	test   eax,eax
   323a7:	cmove  eax,DWORD PTR [rip+0x4cef6]        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   323ae:	movups XMMWORD PTR [rdi+0x20],xmm0
   323b2:	cmp    eax,0x5
   323b5:	je     323f8 <__sprintf_chk@plt+0x27a48>
   323b7:	ja     323d8 <__sprintf_chk@plt+0x27a28>
   323b9:	cmp    eax,0x2
   323bc:	je     323e0 <__sprintf_chk@plt+0x27a30>
   323be:	cmp    eax,0x4
   323c1:	jne    323dd <__sprintf_chk@plt+0x27a2d>
   323c3:	lea    rax,[rip+0x48cd6]        # 7b0a0 <_obstack_memory_used@@Base+0x2e420>
   323ca:	mov    QWORD PTR [rdi+0x20],rax
   323ce:	mov    eax,0x1
   323d3:	ret    
   323d4:	nop    DWORD PTR [rax+0x0]
   323d8:	cmp    eax,0x6
   323db:	je     323e0 <__sprintf_chk@plt+0x27a30>
   323dd:	xor    eax,eax
   323df:	ret    
   323e0:	lea    rax,[rip+0x48d19]        # 7b100 <_obstack_memory_used@@Base+0x2e480>
   323e7:	mov    QWORD PTR [rdi+0x20],rax
   323eb:	mov    eax,0x1
   323f0:	ret    
   323f1:	nop    DWORD PTR [rax+0x0]
   323f8:	lea    rax,[rip+0x48c41]        # 7b040 <_obstack_memory_used@@Base+0x2e3c0>
   323ff:	jmp    323ca <__sprintf_chk@plt+0x27a1a>
   32401:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3240c:	nop    DWORD PTR [rax+0x0]
   32410:	endbr64 
   32414:	push   r13
   32416:	push   r12
   32418:	mov    r12,rsi
   3241b:	push   rbp
   3241c:	push   rbx
   3241d:	mov    rbx,rdi
   32420:	sub    rsp,0x38
   32424:	mov    rax,QWORD PTR fs:0x28
   3242d:	mov    QWORD PTR [rsp+0x28],rax
   32432:	xor    eax,eax
   32434:	cmp    BYTE PTR [rdi+0x4],0x0
   32438:	je     32470 <__sprintf_chk@plt+0x27ac0>
   3243a:	mov    edi,DWORD PTR [rdi]
   3243c:	xor    edx,edx
   3243e:	call   a170 <lseek@plt>
   32443:	test   rax,rax
   32446:	js     324c3 <__sprintf_chk@plt+0x27b13>
   32448:	mov    eax,0x1
   3244d:	mov    rdx,QWORD PTR [rsp+0x28]
   32452:	sub    rdx,QWORD PTR fs:0x28
   3245b:	jne    32599 <__sprintf_chk@plt+0x27be9>
   32461:	add    rsp,0x38
   32465:	pop    rbx
   32466:	pop    rbp
   32467:	pop    r12
   32469:	pop    r13
   3246b:	ret    
   3246c:	nop    DWORD PTR [rax+0x0]
   32470:	mov    rax,QWORD PTR [rdi+0x8]
   32474:	cmp    rsi,rax
   32477:	jl     324b8 <__sprintf_chk@plt+0x27b08>
   32479:	lea    rbp,[rip+0x38e60]        # 6b2e0 <_obstack_memory_used@@Base+0x1e660>
   32480:	jg     32495 <__sprintf_chk@plt+0x27ae5>
   32482:	jmp    32448 <__sprintf_chk@plt+0x27a98>
   32484:	nop    DWORD PTR [rax+0x0]
   32488:	add    rax,QWORD PTR [rbx+0x8]
   3248c:	mov    QWORD PTR [rbx+0x8],rax
   32490:	cmp    r12,rax
   32493:	jle    32448 <__sprintf_chk@plt+0x27a98>
   32495:	mov    rdx,r12
   32498:	mov    ecx,0x200
   3249d:	mov    edi,DWORD PTR [rbx]
   3249f:	mov    rsi,rbp
   324a2:	sub    rdx,rax
   324a5:	cmp    rdx,rcx
   324a8:	cmovg  rdx,rcx
   324ac:	call   9f90 <write@plt>
   324b1:	test   rax,rax
   324b4:	jg     32488 <__sprintf_chk@plt+0x27ad8>
   324b6:	jne    324c3 <__sprintf_chk@plt+0x27b13>
   324b8:	call   9e40 <__errno_location@plt>
   324bd:	mov    DWORD PTR [rax],0x16
   324c3:	mov    rax,QWORD PTR [rbx+0x18]
   324c7:	mov    r13,QWORD PTR [rax]
   324ca:	movzx  eax,BYTE PTR [rip+0x4d02f]        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   324d1:	test   al,al
   324d3:	je     32580 <__sprintf_chk@plt+0x27bd0>
   324d9:	xor    eax,eax
   324db:	test   BYTE PTR [rip+0x49b9c],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   324e2:	je     3244d <__sprintf_chk@plt+0x27a9d>
   324e8:	call   9e40 <__errno_location@plt>
   324ed:	mov    ebp,DWORD PTR [rax]
   324ef:	mov    rax,QWORD PTR [rip+0x4d012]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   324f6:	test   rax,rax
   324f9:	je     324fd <__sprintf_chk@plt+0x27b4d>
   324fb:	call   rax
   324fd:	mov    BYTE PTR [rsp+0x24],0x0
   32502:	mov    rsi,r12
   32505:	lea    rbx,[rsp+0x24]
   3250a:	movabs rdi,0xcccccccccccccccd
   32514:	nop    DWORD PTR [rax+0x0]
   32518:	mov    rax,rsi
   3251b:	sub    rbx,0x1
   3251f:	mul    rdi
   32522:	mov    rax,rsi
   32525:	shr    rdx,0x3
   32529:	lea    rcx,[rdx+rdx*4]
   3252d:	add    rcx,rcx
   32530:	sub    rax,rcx
   32533:	add    eax,0x30
   32536:	mov    BYTE PTR [rbx],al
   32538:	mov    rax,rsi
   3253b:	mov    rsi,rdx
   3253e:	cmp    rax,0x9
   32542:	ja     32518 <__sprintf_chk@plt+0x27b68>
   32544:	mov    rdi,r13
   32547:	call   4b670 <argp_usage@@Base+0x82f0>
   3254c:	mov    edx,0x5
   32551:	lea    rsi,[rip+0x35d28]        # 68280 <_obstack_memory_used@@Base+0x1b600>
   32558:	xor    edi,edi
   3255a:	mov    r12,rax
   3255d:	call   a040 <dcgettext@plt>
   32562:	mov    r8,rbx
   32565:	mov    rcx,r12
   32568:	mov    esi,ebp
   3256a:	mov    rdx,rax
   3256d:	xor    edi,edi
   3256f:	xor    eax,eax
   32571:	call   a640 <error@plt>
   32576:	xor    eax,eax
   32578:	jmp    3244d <__sprintf_chk@plt+0x27a9d>
   3257d:	nop    DWORD PTR [rax]
   32580:	mov    rsi,r12
   32583:	mov    rdi,r13
   32586:	mov    BYTE PTR [rsp+0xf],al
   3258a:	call   3c440 <__sprintf_chk@plt+0x31a90>
   3258f:	movzx  eax,BYTE PTR [rsp+0xf]
   32594:	jmp    3244d <__sprintf_chk@plt+0x27a9d>
   32599:	call   a0a0 <__stack_chk_fail@plt>
   3259e:	xchg   ax,ax
   325a0:	endbr64 
   325a4:	push   r15
   325a6:	shl    rsi,0x4
   325aa:	push   r14
   325ac:	push   r13
   325ae:	push   r12
   325b0:	push   rbp
   325b1:	mov    rbp,rdi
   325b4:	push   rbx
   325b5:	sub    rsp,0xd8
   325bc:	mov    rax,QWORD PTR fs:0x28
   325c5:	mov    QWORD PTR [rsp+0xc8],rax
   325cd:	xor    eax,eax
   325cf:	mov    rax,QWORD PTR [rdi+0x18]
   325d3:	mov    QWORD PTR [rsp+0x8],rsi
   325d8:	add    rsi,QWORD PTR [rax+0x140]
   325df:	mov    rbx,QWORD PTR [rsi+0x8]
   325e3:	mov    rsi,QWORD PTR [rsi]
   325e6:	call   32410 <__sprintf_chk@plt+0x27a60>
   325eb:	mov    r12d,eax
   325ee:	test   al,al
   325f0:	jne    32672 <__sprintf_chk@plt+0x27cc2>
   325f6:	jmp    326fe <__sprintf_chk@plt+0x27d4e>
   325fb:	nop    DWORD PTR [rax+rax*1+0x0]
   32600:	mov    edi,DWORD PTR [rbp+0x0]
   32603:	mov    rdx,r13
   32606:	mov    rsi,r14
   32609:	call   4b7c0 <argp_usage@@Base+0x8440>
   3260e:	mov    r15,rax
   32611:	cmp    rax,0xffffffffffffffff
   32615:	je     326d6 <__sprintf_chk@plt+0x27d26>
   3261b:	test   rax,rax
   3261e:	je     3272a <__sprintf_chk@plt+0x27d7a>
   32624:	mov    edx,0x200
   32629:	lea    rdi,[r14+rax*1]
   3262d:	xor    esi,esi
   3262f:	sub    rbx,r15
   32632:	sub    rdx,rax
   32635:	call   a1b0 <memset@plt>
   3263a:	mov    rdx,QWORD PTR [rip+0x4ceff]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32641:	add    QWORD PTR [rbp+0x10],r15
   32645:	cmp    rdx,r14
   32648:	ja     32665 <__sprintf_chk@plt+0x27cb5>
   3264a:	mov    rax,r14
   3264d:	sub    rax,rdx
   32650:	and    rax,0xfffffffffffffe00
   32656:	lea    rdx,[rdx+rax*1+0x200]
   3265e:	mov    QWORD PTR [rip+0x4cedb],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32665:	cmp    QWORD PTR [rip+0x4cf14],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   3266c:	jb     aa8a <__sprintf_chk@plt+0xda>
   32672:	test   rbx,rbx
   32675:	jle    326fe <__sprintf_chk@plt+0x27d4e>
   3267b:	mov    eax,0x200
   32680:	mov    r14,QWORD PTR [rip+0x4ceb9]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32687:	cmp    rbx,rax
   3268a:	cmovle rax,rbx
   3268e:	cmp    r14,QWORD PTR [rip+0x4ceeb]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32695:	mov    r13,rax
   32698:	jne    32600 <__sprintf_chk@plt+0x27c50>
   3269e:	xor    r14d,r14d
   326a1:	cmp    BYTE PTR [rip+0x4ce8c],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   326a8:	jne    32600 <__sprintf_chk@plt+0x27c50>
   326ae:	call   f170 <__sprintf_chk@plt+0x47c0>
   326b3:	mov    r14,QWORD PTR [rip+0x4ce86]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   326ba:	cmp    r14,QWORD PTR [rip+0x4cebf]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   326c1:	jne    32600 <__sprintf_chk@plt+0x27c50>
   326c7:	mov    BYTE PTR [rip+0x4ce66],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   326ce:	xor    r14d,r14d
   326d1:	jmp    32600 <__sprintf_chk@plt+0x27c50>
   326d6:	mov    rax,QWORD PTR [rbp+0x18]
   326da:	mov    rdx,QWORD PTR [rsp+0x8]
   326df:	xor    r12d,r12d
   326e2:	add    rdx,QWORD PTR [rax+0x140]
   326e9:	mov    rdi,QWORD PTR [rax]
   326ec:	mov    rsi,QWORD PTR [rdx+0x8]
   326f0:	add    rsi,QWORD PTR [rdx]
   326f3:	mov    rdx,r13
   326f6:	sub    rsi,rbx
   326f9:	call   26750 <__sprintf_chk@plt+0x1bda0>
   326fe:	mov    rax,QWORD PTR [rsp+0xc8]
   32706:	sub    rax,QWORD PTR fs:0x28
   3270f:	jne    32841 <__sprintf_chk@plt+0x27e91>
   32715:	add    rsp,0xd8
   3271c:	mov    eax,r12d
   3271f:	pop    rbx
   32720:	pop    rbp
   32721:	pop    r12
   32723:	pop    r13
   32725:	pop    r14
   32727:	pop    r15
   32729:	ret    
   3272a:	mov    edi,DWORD PTR [rbp+0x0]
   3272d:	lea    rsi,[rsp+0x30]
   32732:	call   a920 <fstat@plt>
   32737:	mov    rdi,QWORD PTR [rbp+0x18]
   3273b:	test   eax,eax
   3273d:	je     3281a <__sprintf_chk@plt+0x27e6a>
   32743:	mov    r13,QWORD PTR [rsp+0x8]
   32748:	add    r13,QWORD PTR [rdi+0x140]
   3274f:	mov    rax,QWORD PTR [r13+0x8]
   32753:	add    rbx,QWORD PTR [rdi+0x88]
   3275a:	add    rax,QWORD PTR [r13+0x0]
   3275e:	sub    rbx,rax
   32761:	mov    r12,rbx
   32764:	test   BYTE PTR [rip+0x49911],0x80        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   3276b:	je     32809 <__sprintf_chk@plt+0x27e59>
   32771:	mov    rax,QWORD PTR [rip+0x4cd90]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   32778:	test   rax,rax
   3277b:	je     32783 <__sprintf_chk@plt+0x27dd3>
   3277d:	call   rax
   3277f:	mov    rdi,QWORD PTR [rbp+0x18]
   32783:	mov    BYTE PTR [rsp+0x24],0x0
   32788:	mov    rcx,r12
   3278b:	lea    rbx,[rsp+0x24]
   32790:	movabs r8,0xcccccccccccccccd
   3279a:	nop    WORD PTR [rax+rax*1+0x0]
   327a0:	mov    rax,rcx
   327a3:	sub    rbx,0x1
   327a7:	mul    r8
   327aa:	mov    rax,rcx
   327ad:	shr    rdx,0x3
   327b1:	lea    rsi,[rdx+rdx*4]
   327b5:	add    rsi,rsi
   327b8:	sub    rax,rsi
   327bb:	add    eax,0x30
   327be:	mov    BYTE PTR [rbx],al
   327c0:	mov    rax,rcx
   327c3:	mov    rcx,rdx
   327c6:	cmp    rax,0x9
   327ca:	ja     327a0 <__sprintf_chk@plt+0x27df0>
   327cc:	mov    rdi,QWORD PTR [rdi]
   327cf:	call   4b670 <argp_usage@@Base+0x82f0>
   327d4:	mov    r8d,0x5
   327da:	mov    rcx,r12
   327dd:	xor    edi,edi
   327df:	lea    rdx,[rip+0x311e2]        # 639c8 <_obstack_memory_used@@Base+0x16d48>
   327e6:	lea    rsi,[rip+0x3120b]        # 639f8 <_obstack_memory_used@@Base+0x16d78>
   327ed:	mov    r13,rax
   327f0:	call   a6e0 <dcngettext@plt>
   327f5:	mov    r8,rbx
   327f8:	mov    rcx,r13
   327fb:	xor    esi,esi
   327fd:	mov    rdx,rax
   32800:	xor    edi,edi
   32802:	xor    eax,eax
   32804:	call   a640 <error@plt>
   32809:	cmp    BYTE PTR [rip+0x4ccf0],0x0        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   32810:	je     3282b <__sprintf_chk@plt+0x27e7b>
   32812:	xor    r12d,r12d
   32815:	jmp    326fe <__sprintf_chk@plt+0x27d4e>
   3281a:	mov    r12,QWORD PTR [rdi+0x88]
   32821:	sub    r12,QWORD PTR [rsp+0x60]
   32826:	jmp    32764 <__sprintf_chk@plt+0x27db4>
   3282b:	mov    eax,DWORD PTR [rip+0x4c893]        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   32831:	test   eax,eax
   32833:	jg     32812 <__sprintf_chk@plt+0x27e62>
   32835:	mov    DWORD PTR [rip+0x4c885],0x1        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3283f:	jmp    32812 <__sprintf_chk@plt+0x27e62>
   32841:	call   a0a0 <__stack_chk_fail@plt>
   32846:	cs nop WORD PTR [rax+rax*1+0x0]
   32850:	endbr64 
   32854:	push   r13
   32856:	shl    rsi,0x4
   3285a:	push   r12
   3285c:	push   rbp
   3285d:	mov    rbp,rsi
   32860:	push   rbx
   32861:	mov    rbx,rdi
   32864:	sub    rsp,0x8
   32868:	mov    rax,QWORD PTR [rdi+0x18]
   3286c:	mov    rax,QWORD PTR [rax+0x140]
   32873:	mov    rsi,QWORD PTR [rax+rsi*1]
   32877:	call   32410 <__sprintf_chk@plt+0x27a60>
   3287c:	mov    r13d,eax
   3287f:	test   al,al
   32881:	je     328a9 <__sprintf_chk@plt+0x27ef9>
   32883:	mov    rax,QWORD PTR [rbx+0x18]
   32887:	mov    rax,QWORD PTR [rax+0x140]
   3288e:	mov    rbp,QWORD PTR [rax+rbp*1+0x8]
   32893:	test   rbp,rbp
   32896:	jne    3294b <__sprintf_chk@plt+0x27f9b>
   3289c:	movzx  ebp,BYTE PTR [rbx+0x4]
   328a0:	test   bpl,bpl
   328a3:	jne    3297c <__sprintf_chk@plt+0x27fcc>
   328a9:	add    rsp,0x8
   328ad:	mov    eax,r13d
   328b0:	pop    rbx
   328b1:	pop    rbp
   328b2:	pop    r12
   328b4:	pop    r13
   328b6:	ret    
   328b7:	nop    WORD PTR [rax+rax*1+0x0]
   328c0:	cmp    BYTE PTR [rip+0x4cc6d],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   328c7:	jne    329d0 <__sprintf_chk@plt+0x28020>
   328cd:	call   f170 <__sprintf_chk@plt+0x47c0>
   328d2:	mov    rsi,QWORD PTR [rip+0x4cc67]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   328d9:	cmp    rsi,QWORD PTR [rip+0x4cca0]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   328e0:	je     329c1 <__sprintf_chk@plt+0x28011>
   328e6:	test   rsi,rsi
   328e9:	je     329d0 <__sprintf_chk@plt+0x28020>
   328ef:	lea    rax,[rsi+0x200]
   328f6:	cmp    rax,QWORD PTR [rip+0x4cc83]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   328fd:	mov    QWORD PTR [rip+0x4cc3c],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32904:	ja     aa8f <__sprintf_chk@plt+0xdf>
   3290a:	add    QWORD PTR [rbx+0x10],0x200
   32912:	mov    edi,DWORD PTR [rbx]
   32914:	mov    rdx,r12
   32917:	call   266c0 <__sprintf_chk@plt+0x1bd10>
   3291c:	mov    rcx,QWORD PTR [rip+0x4cc85]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   32923:	mov    rdi,QWORD PTR [rbx+0x18]
   32927:	sub    rbp,rax
   3292a:	test   rcx,rcx
   3292d:	je     3293e <__sprintf_chk@plt+0x27f8e>
   3292f:	mov    rdx,QWORD PTR [rdi+0x118]
   32936:	sub    rdx,QWORD PTR [rbx+0x10]
   3293a:	mov    QWORD PTR [rcx+0x20],rdx
   3293e:	add    QWORD PTR [rbx+0x8],rax
   32942:	cmp    r12,rax
   32945:	jne    32a1a <__sprintf_chk@plt+0x2806a>
   3294b:	test   rbp,rbp
   3294e:	jle    328a9 <__sprintf_chk@plt+0x27ef9>
   32954:	mov    edx,0x200
   32959:	mov    rsi,QWORD PTR [rip+0x4cbe0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32960:	cmp    rbp,rdx
   32963:	cmovle rdx,rbp
   32967:	cmp    rsi,QWORD PTR [rip+0x4cc12]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   3296e:	mov    r12,rdx
   32971:	jne    328e6 <__sprintf_chk@plt+0x27f36>
   32977:	jmp    328c0 <__sprintf_chk@plt+0x27f10>
   3297c:	mov    r12d,DWORD PTR [rbx]
   3297f:	xor    esi,esi
   32981:	mov    edx,0x1
   32986:	mov    edi,r12d
   32989:	call   a170 <lseek@plt>
   3298e:	mov    rsi,rax
   32991:	test   rax,rax
   32994:	js     329a6 <__sprintf_chk@plt+0x27ff6>
   32996:	mov    edi,r12d
   32999:	call   a140 <ftruncate@plt>
   3299e:	test   eax,eax
   329a0:	je     328a9 <__sprintf_chk@plt+0x27ef9>
   329a6:	mov    rax,QWORD PTR [rbx+0x18]
   329aa:	lea    rdi,[rip+0x31a37]        # 643e8 <_obstack_memory_used@@Base+0x17768>
   329b1:	mov    r13d,ebp
   329b4:	mov    rsi,QWORD PTR [rax]
   329b7:	call   3c100 <__sprintf_chk@plt+0x31750>
   329bc:	jmp    328a9 <__sprintf_chk@plt+0x27ef9>
   329c1:	mov    BYTE PTR [rip+0x4cb6c],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   329c8:	nop    DWORD PTR [rax+rax*1+0x0]
   329d0:	mov    rax,QWORD PTR [rip+0x4cb31]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   329d7:	test   rax,rax
   329da:	je     329de <__sprintf_chk@plt+0x2802e>
   329dc:	call   rax
   329de:	mov    edx,0x5
   329e3:	lea    rsi,[rip+0x309d6]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   329ea:	xor    edi,edi
   329ec:	xor    r13d,r13d
   329ef:	call   a040 <dcgettext@plt>
   329f4:	xor    esi,esi
   329f6:	xor    edi,edi
   329f8:	mov    rdx,rax
   329fb:	xor    eax,eax
   329fd:	call   a640 <error@plt>
   32a02:	mov    eax,r13d
   32a05:	mov    DWORD PTR [rip+0x4c6b5],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   32a0f:	add    rsp,0x8
   32a13:	pop    rbx
   32a14:	pop    rbp
   32a15:	pop    r12
   32a17:	pop    r13
   32a19:	ret    
   32a1a:	mov    rdi,QWORD PTR [rdi]
   32a1d:	mov    rdx,r12
   32a20:	mov    rsi,rax
   32a23:	xor    r13d,r13d
   32a26:	call   3c5c0 <__sprintf_chk@plt+0x31c10>
   32a2b:	add    rsp,0x8
   32a2f:	mov    eax,r13d
   32a32:	pop    rbx
   32a33:	pop    rbp
   32a34:	pop    r12
   32a36:	pop    r13
   32a38:	ret    
   32a39:	nop    DWORD PTR [rax+0x0]
   32a40:	endbr64 
   32a44:	push   r13
   32a46:	mov    r13,rsi
   32a49:	push   r12
   32a4b:	push   rbp
   32a4c:	push   rbx
   32a4d:	mov    rbx,rdi
   32a50:	sub    rsp,0x8
   32a54:	mov    rbp,QWORD PTR [rbx+0x130]
   32a5b:	mov    rax,QWORD PTR [rbx+0x138]
   32a62:	mov    rdi,QWORD PTR [rdi+0x140]
   32a69:	lea    r12,[rbp+0x1]
   32a6d:	cmp    rax,rbp
   32a70:	je     32a98 <__sprintf_chk@plt+0x280e8>
   32a72:	movdqu xmm0,XMMWORD PTR [r13+0x0]
   32a78:	shl    rbp,0x4
   32a7c:	movups XMMWORD PTR [rdi+rbp*1],xmm0
   32a80:	mov    QWORD PTR [rbx+0x130],r12
   32a87:	add    rsp,0x8
   32a8b:	pop    rbx
   32a8c:	pop    rbp
   32a8d:	pop    r12
   32a8f:	pop    r13
   32a91:	ret    
   32a92:	nop    WORD PTR [rax+rax*1+0x0]
   32a98:	test   rdi,rdi
   32a9b:	je     32ae0 <__sprintf_chk@plt+0x28130>
   32a9d:	movabs rax,0x555555555555554
   32aa7:	cmp    rbp,rax
   32aaa:	ja     32b2c <__sprintf_chk@plt+0x2817c>
   32ab0:	mov    rsi,rbp
   32ab3:	shr    rsi,1
   32ab6:	add    rsi,r12
   32ab9:	mov    QWORD PTR [rbx+0x138],rsi
   32ac0:	shl    rsi,0x4
   32ac4:	call   a570 <realloc@plt>
   32ac9:	mov    rdi,rax
   32acc:	test   rax,rax
   32acf:	je     32b2c <__sprintf_chk@plt+0x2817c>
   32ad1:	mov    QWORD PTR [rbx+0x140],rdi
   32ad8:	jmp    32a72 <__sprintf_chk@plt+0x280c2>
   32ada:	nop    WORD PTR [rax+rax*1+0x0]
   32ae0:	test   rax,rax
   32ae3:	je     32b20 <__sprintf_chk@plt+0x28170>
   32ae5:	mov    rcx,rax
   32ae8:	xor    edx,edx
   32aea:	mov    rdi,rax
   32aed:	shr    rcx,0x3c
   32af1:	setne  dl
   32af4:	shl    rdi,0x4
   32af8:	js     32b2c <__sprintf_chk@plt+0x2817c>
   32afa:	test   rdx,rdx
   32afd:	jne    32b2c <__sprintf_chk@plt+0x2817c>
   32aff:	mov    QWORD PTR [rbx+0x138],rax
   32b06:	call   a4a0 <malloc@plt>
   32b0b:	mov    rdi,rax
   32b0e:	test   rax,rax
   32b11:	je     32b2c <__sprintf_chk@plt+0x2817c>
   32b13:	lea    r12,[rbp+0x1]
   32b17:	jmp    32ad1 <__sprintf_chk@plt+0x28121>
   32b19:	nop    DWORD PTR [rax+0x0]
   32b20:	mov    edi,0x80
   32b25:	mov    eax,0x8
   32b2a:	jmp    32aff <__sprintf_chk@plt+0x2814f>
   32b2c:	call   19130 <__sprintf_chk@plt+0xe780>
   32b31:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   32b3c:	nop    DWORD PTR [rax+0x0]
   32b40:	endbr64 
   32b44:	push   r15
   32b46:	mov    r9d,0x1
   32b4c:	push   r14
   32b4e:	push   r13
   32b50:	push   r12
   32b52:	push   rbp
   32b53:	push   rbx
   32b54:	sub    rsp,0x88
   32b5b:	mov    rax,QWORD PTR fs:0x28
   32b64:	mov    QWORD PTR [rsp+0x78],rax
   32b69:	mov    rax,QWORD PTR [rdi+0x18]
   32b6d:	mov    eax,DWORD PTR [rax+0x124]
   32b73:	test   eax,eax
   32b75:	jne    32ba0 <__sprintf_chk@plt+0x281f0>
   32b77:	mov    rax,QWORD PTR [rsp+0x78]
   32b7c:	sub    rax,QWORD PTR fs:0x28
   32b85:	jne    33192 <__sprintf_chk@plt+0x287e2>
   32b8b:	add    rsp,0x88
   32b92:	mov    eax,r9d
   32b95:	pop    rbx
   32b96:	pop    rbp
   32b97:	pop    r12
   32b99:	pop    r13
   32b9b:	pop    r14
   32b9d:	pop    r15
   32b9f:	ret    
   32ba0:	mov    rax,QWORD PTR [rip+0x4c9e1]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   32ba7:	mov    r14,QWORD PTR [rip+0x4c992]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32bae:	mov    r13,rdi
   32bb1:	mov    QWORD PTR [rsp+0x8],rax
   32bb6:	mov    rax,QWORD PTR [rip+0x4c97b]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   32bbd:	mov    QWORD PTR [rsp+0x10],rax
   32bc2:	mov    rax,QWORD PTR [rip+0x4c4ff]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   32bc9:	cmp    rax,r14
   32bcc:	jb     32fb0 <__sprintf_chk@plt+0x28600>
   32bd2:	sub    rax,r14
   32bd5:	and    rax,0xfffffffffffffe00
   32bdb:	lea    rax,[r14+rax*1+0x200]
   32be3:	mov    QWORD PTR [rip+0x4c956],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32bea:	cmp    rax,QWORD PTR [rip+0x4c98f]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32bf1:	ja     aa94 <__sprintf_chk@plt+0xe4>
   32bf7:	mov    rdx,QWORD PTR [rip+0x4c942]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32bfe:	mov    rbx,rdx
   32c01:	je     32db0 <__sprintf_chk@plt+0x28400>
   32c07:	test   rdx,rdx
   32c0a:	je     32ddc <__sprintf_chk@plt+0x2842c>
   32c10:	lea    r11,[rsp+0x60]
   32c15:	lea    rsi,[rsp+0x74]
   32c1a:	mov    rcx,rbx
   32c1d:	mov    rbp,rdx
   32c20:	lea    r12,[rdx+0x200]
   32c27:	mov    r15,r11
   32c2a:	mov    rbx,rsi
   32c2d:	jmp    32c4c <__sprintf_chk@plt+0x2829c>
   32c2f:	nop
   32c30:	lea    rbp,[rax+0x1]
   32c34:	movzx  eax,BYTE PTR [rax]
   32c37:	add    r15,0x1
   32c3b:	mov    BYTE PTR [r15-0x1],al
   32c3f:	cmp    al,0xa
   32c41:	je     32d50 <__sprintf_chk@plt+0x283a0>
   32c47:	cmp    r15,rbx
   32c4a:	je     32c90 <__sprintf_chk@plt+0x282e0>
   32c4c:	mov    rax,rbp
   32c4f:	cmp    rbp,r12
   32c52:	jne    32c30 <__sprintf_chk@plt+0x28280>
   32c54:	mov    rax,QWORD PTR [rip+0x4c925]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32c5b:	add    rdx,0x200
   32c62:	mov    QWORD PTR [rip+0x4c8d7],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32c69:	cmp    rdx,rax
   32c6c:	ja     aa94 <__sprintf_chk@plt+0xe4>
   32c72:	mov    rcx,rdx
   32c75:	je     32ce0 <__sprintf_chk@plt+0x28330>
   32c77:	test   rdx,rdx
   32c7a:	je     32d14 <__sprintf_chk@plt+0x28364>
   32c80:	mov    rax,rdx
   32c83:	lea    r12,[rdx+0x200]
   32c8a:	jmp    32c30 <__sprintf_chk@plt+0x28280>
   32c8c:	nop    DWORD PTR [rax+0x0]
   32c90:	mov    rax,QWORD PTR [rip+0x4c871]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   32c97:	test   rax,rax
   32c9a:	je     32c9e <__sprintf_chk@plt+0x282ee>
   32c9c:	call   rax
   32c9e:	mov    rax,QWORD PTR [r13+0x18]
   32ca2:	mov    edx,0x5
   32ca7:	lea    rsi,[rip+0x355f2]        # 682a0 <_obstack_memory_used@@Base+0x1b620>
   32cae:	mov    r12,QWORD PTR [rax]
   32cb1:	xor    edi,edi
   32cb3:	call   a040 <dcgettext@plt>
   32cb8:	mov    rcx,r12
   32cbb:	xor    esi,esi
   32cbd:	xor    edi,edi
   32cbf:	mov    rdx,rax
   32cc2:	xor    eax,eax
   32cc4:	call   a640 <error@plt>
   32cc9:	xor    r9d,r9d
   32ccc:	mov    DWORD PTR [rip+0x4c3ee],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   32cd6:	jmp    32b77 <__sprintf_chk@plt+0x281c7>
   32cdb:	nop    DWORD PTR [rax+rax*1+0x0]
   32ce0:	cmp    BYTE PTR [rip+0x4c84d],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   32ce7:	mov    QWORD PTR [rsp],r11
   32ceb:	jne    32d14 <__sprintf_chk@plt+0x28364>
   32ced:	call   f170 <__sprintf_chk@plt+0x47c0>
   32cf2:	mov    rdx,QWORD PTR [rip+0x4c847]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32cf9:	mov    r11,QWORD PTR [rsp]
   32cfd:	cmp    rdx,QWORD PTR [rip+0x4c87c]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32d04:	mov    rcx,rdx
   32d07:	jne    32c77 <__sprintf_chk@plt+0x282c7>
   32d0d:	mov    BYTE PTR [rip+0x4c820],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   32d14:	mov    rax,QWORD PTR [rip+0x4c7ed]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   32d1b:	test   rax,rax
   32d1e:	je     32d22 <__sprintf_chk@plt+0x28372>
   32d20:	call   rax
   32d22:	mov    edx,0x5
   32d27:	lea    rsi,[rip+0x30692]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   32d2e:	xor    edi,edi
   32d30:	call   a040 <dcgettext@plt>
   32d35:	xor    esi,esi
   32d37:	xor    edi,edi
   32d39:	mov    rdx,rax
   32d3c:	xor    eax,eax
   32d3e:	call   a640 <error@plt>
   32d43:	call   190e0 <__sprintf_chk@plt+0xe730>
   32d48:	nop    DWORD PTR [rax+rax*1+0x0]
   32d50:	mov    BYTE PTR [r15-0x1],0x0
   32d55:	lea    r15,[rsp+0x48]
   32d5a:	mov    rsi,r11
   32d5d:	mov    rbx,rcx
   32d60:	mov    rdx,0xffffffffffffffff
   32d67:	mov    rdi,r15
   32d6a:	mov    QWORD PTR [rsp],r11
   32d6e:	call   2d550 <__sprintf_chk@plt+0x22ba0>
   32d73:	mov    r11,QWORD PTR [rsp]
   32d77:	test   al,al
   32d79:	mov    r9d,eax
   32d7c:	jne    32e10 <__sprintf_chk@plt+0x28460>
   32d82:	mov    rax,QWORD PTR [rip+0x4c77f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   32d89:	test   rax,rax
   32d8c:	je     32d90 <__sprintf_chk@plt+0x283e0>
   32d8e:	call   rax
   32d90:	mov    rax,QWORD PTR [r13+0x18]
   32d94:	mov    edx,0x5
   32d99:	lea    rsi,[rip+0x35530]        # 682d0 <_obstack_memory_used@@Base+0x1b650>
   32da0:	mov    r12,QWORD PTR [rax]
   32da3:	jmp    32cb1 <__sprintf_chk@plt+0x28301>
   32da8:	nop    DWORD PTR [rax+rax*1+0x0]
   32db0:	cmp    BYTE PTR [rip+0x4c77d],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   32db7:	jne    32ddc <__sprintf_chk@plt+0x2842c>
   32db9:	call   f170 <__sprintf_chk@plt+0x47c0>
   32dbe:	mov    rdx,QWORD PTR [rip+0x4c77b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32dc5:	cmp    rdx,QWORD PTR [rip+0x4c7b4]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32dcc:	mov    rbx,rdx
   32dcf:	jne    32c07 <__sprintf_chk@plt+0x28257>
   32dd5:	mov    BYTE PTR [rip+0x4c758],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   32ddc:	mov    rax,QWORD PTR [rip+0x4c725]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   32de3:	test   rax,rax
   32de6:	je     32dea <__sprintf_chk@plt+0x2843a>
   32de8:	call   rax
   32dea:	mov    edx,0x5
   32def:	lea    rsi,[rip+0x305ca]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   32df6:	xor    edi,edi
   32df8:	call   a040 <dcgettext@plt>
   32dfd:	xor    esi,esi
   32dff:	xor    edi,edi
   32e01:	mov    rdx,rax
   32e04:	xor    eax,eax
   32e06:	call   a640 <error@plt>
   32e0b:	call   190e0 <__sprintf_chk@plt+0xe730>
   32e10:	mov    rdx,QWORD PTR [rsp+0x48]
   32e15:	mov    r10,QWORD PTR [r13+0x18]
   32e19:	mov    rax,rdx
   32e1c:	mov    QWORD PTR [r10+0x138],rdx
   32e23:	shr    rax,0x3c
   32e27:	setne  al
   32e2a:	bt     rdx,0x3b
   32e2f:	movzx  eax,al
   32e32:	jb     33197 <__sprintf_chk@plt+0x287e7>
   32e38:	test   rax,rax
   32e3b:	jne    33197 <__sprintf_chk@plt+0x287e7>
   32e41:	mov    esi,0x10
   32e46:	mov    rdi,rdx
   32e49:	mov    QWORD PTR [rsp+0x28],r11
   32e4e:	mov    BYTE PTR [rsp+0x20],r9b
   32e53:	mov    QWORD PTR [rsp+0x18],r10
   32e58:	mov    QWORD PTR [rsp],rdx
   32e5c:	call   a2f0 <calloc@plt>
   32e61:	test   rax,rax
   32e64:	je     33197 <__sprintf_chk@plt+0x287e7>
   32e6a:	mov    rdx,QWORD PTR [rsp]
   32e6e:	mov    r10,QWORD PTR [rsp+0x18]
   32e73:	movzx  r9d,BYTE PTR [rsp+0x20]
   32e79:	test   rdx,rdx
   32e7c:	mov    QWORD PTR [r10+0x140],rax
   32e83:	mov    QWORD PTR [r10+0x130],0x0
   32e8e:	je     33127 <__sprintf_chk@plt+0x28777>
   32e94:	lea    rax,[rsp+0x50]
   32e99:	mov    BYTE PTR [rsp+0x3f],r9b
   32e9e:	lea    r10,[rsp+0x74]
   32ea3:	mov    QWORD PTR [rsp+0x18],0x0
   32eac:	mov    QWORD PTR [rsp+0x20],rax
   32eb1:	mov    QWORD PTR [rsp],r15
   32eb5:	mov    r15,QWORD PTR [rsp+0x28]
   32eba:	mov    QWORD PTR [rsp+0x30],r14
   32ebf:	mov    r14,r12
   32ec2:	mov    r12,r10
   32ec5:	mov    rdx,r15
   32ec8:	jmp    32eef <__sprintf_chk@plt+0x2853f>
   32eca:	nop    WORD PTR [rax+rax*1+0x0]
   32ed0:	lea    rbp,[rax+0x1]
   32ed4:	movzx  eax,BYTE PTR [rax]
   32ed7:	add    rdx,0x1
   32edb:	mov    BYTE PTR [rdx-0x1],al
   32ede:	cmp    al,0xa
   32ee0:	je     32fb8 <__sprintf_chk@plt+0x28608>
   32ee6:	cmp    rdx,r12
   32ee9:	je     32c90 <__sprintf_chk@plt+0x282e0>
   32eef:	mov    rax,rbp
   32ef2:	cmp    rbp,r14
   32ef5:	jne    32ed0 <__sprintf_chk@plt+0x28520>
   32ef7:	mov    rax,QWORD PTR [rip+0x4c642]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32efe:	cmp    rax,rbx
   32f01:	ja     32f1c <__sprintf_chk@plt+0x2856c>
   32f03:	sub    rbx,rax
   32f06:	and    rbx,0xfffffffffffffe00
   32f0d:	lea    rax,[rax+rbx*1+0x200]
   32f15:	mov    QWORD PTR [rip+0x4c624],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32f1c:	cmp    rax,QWORD PTR [rip+0x4c65d]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32f23:	ja     aa94 <__sprintf_chk@plt+0xe4>
   32f29:	mov    rbx,QWORD PTR [rip+0x4c610]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32f30:	je     32f43 <__sprintf_chk@plt+0x28593>
   32f32:	test   rbx,rbx
   32f35:	je     32f72 <__sprintf_chk@plt+0x285c2>
   32f37:	mov    rax,rbx
   32f3a:	lea    r14,[rbx+0x200]
   32f41:	jmp    32ed0 <__sprintf_chk@plt+0x28520>
   32f43:	cmp    BYTE PTR [rip+0x4c5ea],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   32f4a:	mov    QWORD PTR [rsp+0x28],rdx
   32f4f:	jne    32f72 <__sprintf_chk@plt+0x285c2>
   32f51:	call   f170 <__sprintf_chk@plt+0x47c0>
   32f56:	mov    rbx,QWORD PTR [rip+0x4c5e3]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   32f5d:	mov    rdx,QWORD PTR [rsp+0x28]
   32f62:	cmp    rbx,QWORD PTR [rip+0x4c617]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   32f69:	jne    32f32 <__sprintf_chk@plt+0x28582>
   32f6b:	mov    BYTE PTR [rip+0x4c5c2],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   32f72:	mov    rax,QWORD PTR [rip+0x4c58f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   32f79:	test   rax,rax
   32f7c:	je     32f80 <__sprintf_chk@plt+0x285d0>
   32f7e:	call   rax
   32f80:	mov    edx,0x5
   32f85:	lea    rsi,[rip+0x30434]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   32f8c:	xor    edi,edi
   32f8e:	call   a040 <dcgettext@plt>
   32f93:	xor    esi,esi
   32f95:	xor    edi,edi
   32f97:	mov    rdx,rax
   32f9a:	xor    eax,eax
   32f9c:	call   a640 <error@plt>
   32fa1:	call   190e0 <__sprintf_chk@plt+0xe730>
   32fa6:	cs nop WORD PTR [rax+rax*1+0x0]
   32fb0:	mov    rax,r14
   32fb3:	jmp    32bea <__sprintf_chk@plt+0x2823a>
   32fb8:	mov    BYTE PTR [rdx-0x1],0x0
   32fbc:	mov    rdi,QWORD PTR [rsp]
   32fc0:	mov    rsi,r15
   32fc3:	movabs rdx,0x7fffffffffffffff
   32fcd:	call   2d550 <__sprintf_chk@plt+0x22ba0>
   32fd2:	test   al,al
   32fd4:	je     32d82 <__sprintf_chk@plt+0x283d2>
   32fda:	mov    rax,QWORD PTR [rsp+0x48]
   32fdf:	mov    QWORD PTR [rsp+0x50],rax
   32fe4:	mov    rax,rbx
   32fe7:	mov    rbx,r15
   32fea:	jmp    33010 <__sprintf_chk@plt+0x28660>
   32fec:	nop    DWORD PTR [rax+0x0]
   32ff0:	movzx  edx,BYTE PTR [rcx]
   32ff3:	lea    rbp,[rcx+0x1]
   32ff7:	add    rbx,0x1
   32ffb:	mov    BYTE PTR [rbx-0x1],dl
   32ffe:	cmp    dl,0xa
   33001:	je     330c0 <__sprintf_chk@plt+0x28710>
   33007:	cmp    rbx,r12
   3300a:	je     32c90 <__sprintf_chk@plt+0x282e0>
   33010:	mov    rcx,rbp
   33013:	cmp    rbp,r14
   33016:	jne    32ff0 <__sprintf_chk@plt+0x28640>
   33018:	mov    rcx,QWORD PTR [rip+0x4c521]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3301f:	cmp    rcx,rax
   33022:	ja     3303c <__sprintf_chk@plt+0x2868c>
   33024:	sub    rax,rcx
   33027:	and    rax,0xfffffffffffffe00
   3302d:	lea    rcx,[rcx+rax*1+0x200]
   33035:	mov    QWORD PTR [rip+0x4c504],rcx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3303c:	cmp    rcx,QWORD PTR [rip+0x4c53d]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   33043:	ja     aa94 <__sprintf_chk@plt+0xe4>
   33049:	mov    rax,QWORD PTR [rip+0x4c4f0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   33050:	je     33063 <__sprintf_chk@plt+0x286b3>
   33052:	test   rax,rax
   33055:	je     33088 <__sprintf_chk@plt+0x286d8>
   33057:	mov    rcx,rax
   3305a:	lea    r14,[rax+0x200]
   33061:	jmp    32ff0 <__sprintf_chk@plt+0x28640>
   33063:	cmp    BYTE PTR [rip+0x4c4ca],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   3306a:	jne    33088 <__sprintf_chk@plt+0x286d8>
   3306c:	call   f170 <__sprintf_chk@plt+0x47c0>
   33071:	mov    rax,QWORD PTR [rip+0x4c4c8]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   33078:	cmp    rax,QWORD PTR [rip+0x4c501]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   3307f:	jne    33052 <__sprintf_chk@plt+0x286a2>
   33081:	mov    BYTE PTR [rip+0x4c4ac],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   33088:	mov    rax,QWORD PTR [rip+0x4c479]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3308f:	test   rax,rax
   33092:	je     33096 <__sprintf_chk@plt+0x286e6>
   33094:	call   rax
   33096:	mov    edx,0x5
   3309b:	lea    rsi,[rip+0x3031e]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   330a2:	xor    edi,edi
   330a4:	call   a040 <dcgettext@plt>
   330a9:	xor    esi,esi
   330ab:	xor    edi,edi
   330ad:	mov    rdx,rax
   330b0:	xor    eax,eax
   330b2:	call   a640 <error@plt>
   330b7:	call   190e0 <__sprintf_chk@plt+0xe730>
   330bc:	nop    DWORD PTR [rax+0x0]
   330c0:	mov    rdx,rbx
   330c3:	mov    rdi,QWORD PTR [rsp]
   330c7:	mov    rsi,r15
   330ca:	mov    rbx,rax
   330cd:	mov    BYTE PTR [rdx-0x1],0x0
   330d1:	movabs rdx,0x7fffffffffffffff
   330db:	call   2d550 <__sprintf_chk@plt+0x22ba0>
   330e0:	test   al,al
   330e2:	je     32d82 <__sprintf_chk@plt+0x283d2>
   330e8:	mov    rax,QWORD PTR [rsp+0x48]
   330ed:	mov    rsi,QWORD PTR [rsp+0x20]
   330f2:	mov    rdi,QWORD PTR [r13+0x18]
   330f6:	mov    QWORD PTR [rsp+0x58],rax
   330fb:	call   32a40 <__sprintf_chk@plt+0x28090>
   33100:	mov    rax,QWORD PTR [r13+0x18]
   33104:	add    QWORD PTR [rsp+0x18],0x1
   3310a:	mov    rsi,QWORD PTR [rsp+0x18]
   3310f:	cmp    rsi,QWORD PTR [rax+0x138]
   33116:	jb     32ec5 <__sprintf_chk@plt+0x28515>
   3311c:	mov    r14,QWORD PTR [rsp+0x30]
   33121:	movzx  r9d,BYTE PTR [rsp+0x3f]
   33127:	mov    rax,QWORD PTR [rip+0x4c412]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3312e:	cmp    rbx,rax
   33131:	jb     3314c <__sprintf_chk@plt+0x2879c>
   33133:	sub    rbx,rax
   33136:	and    rbx,0xfffffffffffffe00
   3313d:	lea    rax,[rax+rbx*1+0x200]
   33145:	mov    QWORD PTR [rip+0x4c3f4],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3314c:	cmp    rax,QWORD PTR [rip+0x4c42d]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   33153:	ja     aa94 <__sprintf_chk@plt+0xe4>
   33159:	sub    rax,QWORD PTR [rip+0x4c428]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   33160:	mov    rdx,rax
   33163:	mov    rax,r14
   33166:	sub    rax,QWORD PTR [rsp+0x8]
   3316b:	sar    rdx,0x9
   3316f:	sar    rax,0x9
   33173:	add    rdx,QWORD PTR [rip+0x4c3be]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   3317a:	add    rax,QWORD PTR [rsp+0x10]
   3317f:	sub    rdx,rax
   33182:	mov    rax,rdx
   33185:	shl    rax,0x9
   33189:	add    QWORD PTR [r13+0x10],rax
   3318d:	jmp    32b77 <__sprintf_chk@plt+0x281c7>
   33192:	call   a0a0 <__stack_chk_fail@plt>
   33197:	call   19130 <__sprintf_chk@plt+0xe780>
   3319c:	nop    DWORD PTR [rax+0x0]
   331a0:	push   r12
   331a2:	xor    r9d,r9d
   331a5:	xor    ecx,ecx
   331a7:	lea    r12,[rip+0x30017]        # 631c5 <_obstack_memory_used@@Base+0x16545>
   331ae:	movabs r8,0x7fffffffffffffff
   331b8:	push   rbp
   331b9:	mov    rdx,r12
   331bc:	mov    rbp,rdi
   331bf:	push   rbx
   331c0:	mov    rbx,rsi
   331c3:	mov    esi,0xc
   331c8:	mov    rdi,rbx
   331cb:	sub    rsp,0x28
   331cf:	mov    rax,QWORD PTR fs:0x28
   331d8:	mov    QWORD PTR [rsp+0x20],rax
   331dd:	xor    eax,eax
   331df:	push   0x0
   331e1:	call   23640 <__sprintf_chk@plt+0x18c90>
   331e6:	xor    ecx,ecx
   331e8:	xor    r9d,r9d
   331eb:	mov    rdx,r12
   331ee:	mov    esi,0xc
   331f3:	lea    rdi,[rbx+0xc]
   331f7:	movabs r8,0x7fffffffffffffff
   33201:	mov    QWORD PTR [rsp+0x10],rax
   33206:	mov    DWORD PTR [rsp],0x0
   3320d:	call   23640 <__sprintf_chk@plt+0x18c90>
   33212:	mov    rdx,QWORD PTR [rsp+0x10]
   33217:	mov    r8d,0x2
   3321d:	mov    QWORD PTR [rsp+0x18],rax
   33222:	pop    rcx
   33223:	mov    rcx,rdx
   33226:	pop    rsi
   33227:	or     rcx,rax
   3322a:	js     33253 <__sprintf_chk@plt+0x288a3>
   3322c:	add    rdx,rax
   3322f:	jo     33253 <__sprintf_chk@plt+0x288a3>
   33231:	mov    rdi,QWORD PTR [rbp+0x18]
   33235:	cmp    QWORD PTR [rdi+0x88],rdx
   3323c:	jl     33253 <__sprintf_chk@plt+0x288a3>
   3323e:	cmp    QWORD PTR [rdi+0x118],0x0
   33246:	js     33253 <__sprintf_chk@plt+0x288a3>
   33248:	mov    rsi,rsp
   3324b:	call   32a40 <__sprintf_chk@plt+0x28090>
   33250:	xor    r8d,r8d
   33253:	mov    rax,QWORD PTR [rsp+0x18]
   33258:	sub    rax,QWORD PTR fs:0x28
   33261:	jne    3326f <__sprintf_chk@plt+0x288bf>
   33263:	add    rsp,0x20
   33267:	mov    eax,r8d
   3326a:	pop    rbx
   3326b:	pop    rbp
   3326c:	pop    r12
   3326e:	ret    
   3326f:	call   a0a0 <__stack_chk_fail@plt>
   33274:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3327f:	nop
   33280:	endbr64 
   33284:	push   r13
   33286:	push   r12
   33288:	push   rbp
   33289:	mov    rbp,rdi
   3328c:	push   rbx
   3328d:	sub    rsp,0x8
   33291:	mov    rax,QWORD PTR [rdi+0x18]
   33295:	mov    r12,QWORD PTR [rip+0x4be2c]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   3329c:	lea    rbx,[r12+0x182]
   332a4:	lea    r13,[r12+0x1e2]
   332ac:	mov    QWORD PTR [rax+0x130],0x0
   332b7:	cmp    BYTE PTR [rbx+0xc],0x0
   332bb:	jne    332cd <__sprintf_chk@plt+0x2891d>
   332bd:	add    rsp,0x8
   332c1:	mov    eax,0x1
   332c6:	pop    rbx
   332c7:	pop    rbp
   332c8:	pop    r12
   332ca:	pop    r13
   332cc:	ret    
   332cd:	mov    rsi,rbx
   332d0:	mov    rdi,rbp
   332d3:	call   331a0 <__sprintf_chk@plt+0x287f0>
   332d8:	test   eax,eax
   332da:	jne    3337f <__sprintf_chk@plt+0x289cf>
   332e0:	add    rbx,0x18
   332e4:	cmp    rbx,r13
   332e7:	jne    332b7 <__sprintf_chk@plt+0x28907>
   332e9:	cmp    BYTE PTR [r12+0x1e2],0x0
   332f2:	je     332bd <__sprintf_chk@plt+0x2890d>
   332f4:	nop    DWORD PTR [rax+0x0]
   332f8:	mov    r12,QWORD PTR [rip+0x4c241]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   332ff:	cmp    r12,QWORD PTR [rip+0x4c27a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   33306:	je     333e0 <__sprintf_chk@plt+0x28a30>
   3330c:	test   r12,r12
   3330f:	je     33410 <__sprintf_chk@plt+0x28a60>
   33315:	lea    rax,[r12+0x200]
   3331d:	cmp    QWORD PTR [rip+0x4c25c],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   33324:	mov    QWORD PTR [rip+0x4c215],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3332b:	jb     aa99 <__sprintf_chk@plt+0xe9>
   33331:	mov    rbx,r12
   33334:	xor    r13d,r13d
   33337:	jmp    33344 <__sprintf_chk@plt+0x28994>
   33339:	nop    DWORD PTR [rax+0x0]
   33340:	test   dl,dl
   33342:	je     3336c <__sprintf_chk@plt+0x289bc>
   33344:	cmp    BYTE PTR [rbx+0xc],0x0
   33348:	je     332bd <__sprintf_chk@plt+0x2890d>
   3334e:	mov    rsi,rbx
   33351:	mov    rdi,rbp
   33354:	add    r13,0x1
   33358:	call   331a0 <__sprintf_chk@plt+0x287f0>
   3335d:	test   eax,eax
   3335f:	sete   dl
   33362:	add    rbx,0x18
   33366:	cmp    r13,0x14
   3336a:	jbe    33340 <__sprintf_chk@plt+0x28990>
   3336c:	cmp    BYTE PTR [r12+0x1f8],0x0
   33375:	je     3337f <__sprintf_chk@plt+0x289cf>
   33377:	test   dl,dl
   33379:	jne    332f8 <__sprintf_chk@plt+0x28948>
   3337f:	cmp    eax,0x2
   33382:	jne    332bd <__sprintf_chk@plt+0x2890d>
   33388:	mov    rax,QWORD PTR [rip+0x4c179]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3338f:	test   rax,rax
   33392:	je     33396 <__sprintf_chk@plt+0x289e6>
   33394:	call   rax
   33396:	mov    rax,QWORD PTR [rbp+0x18]
   3339a:	mov    edx,0x5
   3339f:	lea    rsi,[rip+0x34f52]        # 682f8 <_obstack_memory_used@@Base+0x1b678>
   333a6:	xor    edi,edi
   333a8:	mov    r12,QWORD PTR [rax]
   333ab:	call   a040 <dcgettext@plt>
   333b0:	xor    esi,esi
   333b2:	xor    edi,edi
   333b4:	mov    rdx,rax
   333b7:	mov    rcx,r12
   333ba:	xor    eax,eax
   333bc:	call   a640 <error@plt>
   333c1:	xor    eax,eax
   333c3:	mov    DWORD PTR [rip+0x4bcf7],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   333cd:	add    rsp,0x8
   333d1:	pop    rbx
   333d2:	pop    rbp
   333d3:	pop    r12
   333d5:	pop    r13
   333d7:	ret    
   333d8:	nop    DWORD PTR [rax+rax*1+0x0]
   333e0:	cmp    BYTE PTR [rip+0x4c14d],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   333e7:	jne    33410 <__sprintf_chk@plt+0x28a60>
   333e9:	call   f170 <__sprintf_chk@plt+0x47c0>
   333ee:	mov    r12,QWORD PTR [rip+0x4c14b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   333f5:	cmp    r12,QWORD PTR [rip+0x4c184]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   333fc:	jne    3330c <__sprintf_chk@plt+0x2895c>
   33402:	mov    BYTE PTR [rip+0x4c12b],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   33409:	nop    DWORD PTR [rax+0x0]
   33410:	mov    rax,QWORD PTR [rip+0x4c0f1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   33417:	test   rax,rax
   3341a:	je     3341e <__sprintf_chk@plt+0x28a6e>
   3341c:	call   rax
   3341e:	mov    edx,0x5
   33423:	lea    rsi,[rip+0x2ff96]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   3342a:	xor    edi,edi
   3342c:	call   a040 <dcgettext@plt>
   33431:	xor    esi,esi
   33433:	xor    edi,edi
   33435:	mov    rdx,rax
   33438:	xor    eax,eax
   3343a:	call   a640 <error@plt>
   3343f:	xor    eax,eax
   33441:	mov    DWORD PTR [rip+0x4bc79],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3344b:	add    rsp,0x8
   3344f:	pop    rbx
   33450:	pop    rbp
   33451:	pop    r12
   33453:	pop    r13
   33455:	ret    
   33456:	cs nop WORD PTR [rax+rax*1+0x0]
   33460:	endbr64 
   33464:	push   r13
   33466:	push   r12
   33468:	push   rbp
   33469:	mov    rbp,rdi
   3346c:	push   rbx
   3346d:	sub    rsp,0x8
   33471:	mov    rbx,QWORD PTR [rip+0x4bc50]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   33478:	mov    rax,QWORD PTR [rdi+0x18]
   3347c:	cmp    BYTE PTR [rbx+0x159],0x0
   33483:	mov    QWORD PTR [rax+0x130],0x0
   3348e:	jne    334a0 <__sprintf_chk@plt+0x28af0>
   33490:	cmp    BYTE PTR [rbx+0x16e],0x0
   33497:	jne    3360e <__sprintf_chk@plt+0x28c5e>
   3349d:	nop    DWORD PTR [rax]
   334a0:	mov    r12,QWORD PTR [rip+0x4c099]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   334a7:	cmp    r12,QWORD PTR [rip+0x4c0d2]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   334ae:	je     33598 <__sprintf_chk@plt+0x28be8>
   334b4:	test   r12,r12
   334b7:	je     335c8 <__sprintf_chk@plt+0x28c18>
   334bd:	lea    rax,[r12+0x200]
   334c5:	cmp    QWORD PTR [rip+0x4c0b4],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   334cc:	mov    QWORD PTR [rip+0x4c06d],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   334d3:	jb     aa9e <__sprintf_chk@plt+0xee>
   334d9:	mov    rbx,r12
   334dc:	xor    r13d,r13d
   334df:	nop
   334e0:	cmp    BYTE PTR [rbx+0xc],0x0
   334e4:	jne    33500 <__sprintf_chk@plt+0x28b50>
   334e6:	add    QWORD PTR [rbp+0x10],0x200
   334ee:	add    rsp,0x8
   334f2:	mov    eax,0x1
   334f7:	pop    rbx
   334f8:	pop    rbp
   334f9:	pop    r12
   334fb:	pop    r13
   334fd:	ret    
   334fe:	xchg   ax,ax
   33500:	mov    rsi,rbx
   33503:	mov    rdi,rbp
   33506:	add    r13,0x1
   3350a:	call   331a0 <__sprintf_chk@plt+0x287f0>
   3350f:	test   eax,eax
   33511:	sete   dl
   33514:	add    rbx,0x18
   33518:	cmp    r13,0x14
   3351c:	ja     33522 <__sprintf_chk@plt+0x28b72>
   3351e:	test   dl,dl
   33520:	jne    334e0 <__sprintf_chk@plt+0x28b30>
   33522:	add    QWORD PTR [rbp+0x10],0x200
   3352a:	cmp    BYTE PTR [r12+0x1f8],0x0
   33533:	je     3353d <__sprintf_chk@plt+0x28b8d>
   33535:	test   dl,dl
   33537:	jne    334a0 <__sprintf_chk@plt+0x28af0>
   3353d:	cmp    eax,0x2
   33540:	jne    334ee <__sprintf_chk@plt+0x28b3e>
   33542:	mov    rax,QWORD PTR [rip+0x4bfbf]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   33549:	test   rax,rax
   3354c:	je     33550 <__sprintf_chk@plt+0x28ba0>
   3354e:	call   rax
   33550:	mov    rax,QWORD PTR [rbp+0x18]
   33554:	mov    edx,0x5
   33559:	lea    rsi,[rip+0x34d98]        # 682f8 <_obstack_memory_used@@Base+0x1b678>
   33560:	xor    edi,edi
   33562:	mov    r12,QWORD PTR [rax]
   33565:	call   a040 <dcgettext@plt>
   3356a:	xor    esi,esi
   3356c:	xor    edi,edi
   3356e:	mov    rdx,rax
   33571:	mov    rcx,r12
   33574:	xor    eax,eax
   33576:	call   a640 <error@plt>
   3357b:	xor    eax,eax
   3357d:	mov    DWORD PTR [rip+0x4bb3d],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   33587:	add    rsp,0x8
   3358b:	pop    rbx
   3358c:	pop    rbp
   3358d:	pop    r12
   3358f:	pop    r13
   33591:	ret    
   33592:	nop    WORD PTR [rax+rax*1+0x0]
   33598:	cmp    BYTE PTR [rip+0x4bf95],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   3359f:	jne    335c8 <__sprintf_chk@plt+0x28c18>
   335a1:	call   f170 <__sprintf_chk@plt+0x47c0>
   335a6:	mov    r12,QWORD PTR [rip+0x4bf93]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   335ad:	cmp    r12,QWORD PTR [rip+0x4bfcc]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   335b4:	jne    334b4 <__sprintf_chk@plt+0x28b04>
   335ba:	mov    BYTE PTR [rip+0x4bf73],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   335c1:	nop    DWORD PTR [rax+0x0]
   335c8:	mov    rax,QWORD PTR [rip+0x4bf39]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   335cf:	test   rax,rax
   335d2:	je     335d6 <__sprintf_chk@plt+0x28c26>
   335d4:	call   rax
   335d6:	mov    edx,0x5
   335db:	lea    rsi,[rip+0x2fdde]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   335e2:	xor    edi,edi
   335e4:	call   a040 <dcgettext@plt>
   335e9:	xor    esi,esi
   335eb:	xor    edi,edi
   335ed:	mov    rdx,rax
   335f0:	xor    eax,eax
   335f2:	call   a640 <error@plt>
   335f7:	xor    eax,eax
   335f9:	mov    DWORD PTR [rip+0x4bac1],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   33603:	add    rsp,0x8
   33607:	pop    rbx
   33608:	pop    rbp
   33609:	pop    r12
   3360b:	pop    r13
   3360d:	ret    
   3360e:	lea    r12,[rbx+0x164]
   33615:	lea    r13,[rbx+0x1c4]
   3361c:	cmp    BYTE PTR [r12+0xc],0x0
   33622:	je     334ee <__sprintf_chk@plt+0x28b3e>
   33628:	mov    rsi,r12
   3362b:	mov    rdi,rbp
   3362e:	call   331a0 <__sprintf_chk@plt+0x287f0>
   33633:	test   eax,eax
   33635:	jne    3353d <__sprintf_chk@plt+0x28b8d>
   3363b:	add    r12,0x18
   3363f:	cmp    r13,r12
   33642:	jne    3361c <__sprintf_chk@plt+0x28c6c>
   33644:	cmp    BYTE PTR [rbx+0x163],0x0
   3364b:	jne    334a0 <__sprintf_chk@plt+0x28af0>
   33651:	jmp    334ee <__sprintf_chk@plt+0x28b3e>
   33656:	cs nop WORD PTR [rax+rax*1+0x0]
   33660:	endbr64 
   33664:	push   rbp
   33665:	xor    esi,esi
   33667:	mov    edx,0x1
   3366c:	mov    ebp,edi
   3366e:	call   a170 <lseek@plt>
   33673:	test   rax,rax
   33676:	js     33683 <__sprintf_chk@plt+0x28cd3>
   33678:	mov    edi,ebp
   3367a:	mov    rsi,rax
   3367d:	pop    rbp
   3367e:	jmp    a140 <ftruncate@plt>
   33683:	or     eax,0xffffffff
   33686:	pop    rbp
   33687:	ret    
   33688:	nop    DWORD PTR [rax+rax*1+0x0]
   33690:	endbr64 
   33694:	push   rbx
   33695:	mov    rbx,rsi
   33698:	xor    esi,esi
   3369a:	call   2d5f0 <__sprintf_chk@plt+0x22c40>
   3369f:	test   rax,rax
   336a2:	je     336a8 <__sprintf_chk@plt+0x28cf8>
   336a4:	mov    rbx,QWORD PTR [rax+0x10]
   336a8:	test   rbx,rbx
   336ab:	je     336b4 <__sprintf_chk@plt+0x28d04>
   336ad:	mov    QWORD PTR [rip+0x4beb4],rbx        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   336b4:	pop    rbx
   336b5:	ret    
   336b6:	cs nop WORD PTR [rax+rax*1+0x0]
   336c0:	endbr64 
   336c4:	push   rbp
   336c5:	mov    rbp,rdi
   336c8:	lea    rdi,[rip+0x2fd4a]        # 63419 <_obstack_memory_used@@Base+0x16799>
   336cf:	sub    rsp,0x30
   336d3:	mov    rax,QWORD PTR fs:0x28
   336dc:	mov    QWORD PTR [rsp+0x28],rax
   336e1:	xor    eax,eax
   336e3:	mov    rsi,rsp
   336e6:	lea    rax,[rip+0x3335f]        # 66a4c <_obstack_memory_used@@Base+0x19dcc>
   336ed:	mov    QWORD PTR [rsp],rdi
   336f1:	mov    QWORD PTR [rsp+0x8],rax
   336f6:	mov    QWORD PTR [rsp+0x10],rbp
   336fb:	mov    QWORD PTR [rsp+0x18],0x0
   33704:	call   a940 <execv@plt>
   33709:	mov    rsi,rbp
   3370c:	lea    rdi,[rip+0x2fd58]        # 6346b <_obstack_memory_used@@Base+0x167eb>
   33713:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   33718:	nop    DWORD PTR [rax+rax*1+0x0]
   33720:	endbr64 
   33724:	sub    rsp,0xa8
   3372b:	mov    rax,QWORD PTR fs:0x28
   33734:	mov    QWORD PTR [rsp+0x98],rax
   3373c:	xor    eax,eax
   3373e:	mov    rsi,rsp
   33741:	call   a400 <stat@plt>
   33746:	test   eax,eax
   33748:	jne    33779 <__sprintf_chk@plt+0x28dc9>
   3374a:	mov    eax,DWORD PTR [rsp+0x18]
   3374e:	and    eax,0xf000
   33753:	cmp    eax,0x8000
   33758:	sete   al
   3375b:	movzx  eax,al
   3375e:	mov    rdx,QWORD PTR [rsp+0x98]
   33766:	sub    rdx,QWORD PTR fs:0x28
   3376f:	jne    33789 <__sprintf_chk@plt+0x28dd9>
   33771:	add    rsp,0xa8
   33778:	ret    
   33779:	call   9e40 <__errno_location@plt>
   3377e:	cmp    DWORD PTR [rax],0x2
   33781:	sete   al
   33784:	movzx  eax,al
   33787:	jmp    3375e <__sprintf_chk@plt+0x28dae>
   33789:	call   a0a0 <__stack_chk_fail@plt>
   3378e:	xchg   ax,ax
   33790:	endbr64 
   33794:	push   r15
   33796:	push   r14
   33798:	push   r13
   3379a:	push   r12
   3379c:	push   rbp
   3379d:	push   rbx
   3379e:	sub    rsp,0xa8
   337a5:	mov    edi,DWORD PTR [rip+0x4bdb5]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   337ab:	mov    r12,QWORD PTR [rip+0x4bd9e]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   337b2:	mov    rax,QWORD PTR fs:0x28
   337bb:	mov    QWORD PTR [rsp+0x98],rax
   337c3:	xor    eax,eax
   337c5:	mov    r14,QWORD PTR [rip+0x4bdbc]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   337cc:	cmp    edi,0x3fffffff
   337d2:	jle    338c0 <__sprintf_chk@plt+0x28f10>
   337d8:	lea    r13,[rsp+0x10]
   337dd:	lea    ebp,[rdi-0x40000000]
   337e3:	mov    r8,r12
   337e6:	mov    edx,0x40
   337eb:	mov    rdi,r13
   337ee:	lea    rcx,[rip+0x3325a]        # 66a4f <_obstack_memory_used@@Base+0x19dcf>
   337f5:	mov    esi,0x1
   337fa:	call   a9b0 <__sprintf_chk@plt>
   337ff:	mov    rsi,r13
   33802:	mov    edi,ebp
   33804:	xor    r13d,r13d
   33807:	call   3c8b0 <__sprintf_chk@plt+0x31f00>
   3380c:	cmp    eax,0xffffffff
   3380f:	je     33896 <__sprintf_chk@plt+0x28ee6>
   33815:	mov    esi,0x1
   3381a:	mov    edi,0xd
   3381f:	lea    rbx,[rip+0x4923a]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   33826:	movsxd r15,ebp
   33829:	call   a330 <signal@plt>
   3382e:	mov    edi,DWORD PTR [rbx+r15*8+0x4]
   33833:	mov    rsi,r14
   33836:	mov    rdx,r12
   33839:	mov    QWORD PTR [rsp+0x8],rax
   3383e:	call   48b10 <argp_usage@@Base+0x5790>
   33843:	mov    rsi,QWORD PTR [rsp+0x8]
   33848:	mov    edi,0xd
   3384d:	mov    r13,rax
   33850:	call   a330 <signal@plt>
   33855:	cmp    r13,r12
   33858:	je     338f0 <__sprintf_chk@plt+0x28f40>
   3385e:	lea    rbp,[rip+0x491db]        # 7ca40 <_obstack_memory_used@@Base+0x2fdc0>
   33865:	mov    edi,DWORD PTR [rbp+r15*8+0x0]
   3386a:	call   a200 <close@plt>
   3386f:	mov    edi,DWORD PTR [rbx+r15*8+0x4]
   33874:	call   a200 <close@plt>
   33879:	mov    DWORD PTR [rbp+r15*8+0x0],0xffffffff
   33882:	mov    DWORD PTR [rbx+r15*8+0x4],0xffffffff
   3388b:	call   9e40 <__errno_location@plt>
   33890:	mov    DWORD PTR [rax],0x5
   33896:	mov    rax,QWORD PTR [rsp+0x98]
   3389e:	sub    rax,QWORD PTR fs:0x28
   338a7:	jne    33926 <__sprintf_chk@plt+0x28f76>
   338a9:	add    rsp,0xa8
   338b0:	mov    rax,r13
   338b3:	pop    rbx
   338b4:	pop    rbp
   338b5:	pop    r12
   338b7:	pop    r13
   338b9:	pop    r14
   338bb:	pop    r15
   338bd:	ret    
   338be:	xchg   ax,ax
   338c0:	mov    rax,QWORD PTR [rsp+0x98]
   338c8:	sub    rax,QWORD PTR fs:0x28
   338d1:	jne    33926 <__sprintf_chk@plt+0x28f76>
   338d3:	add    rsp,0xa8
   338da:	mov    rdx,r12
   338dd:	mov    rsi,r14
   338e0:	pop    rbx
   338e1:	pop    rbp
   338e2:	pop    r12
   338e4:	pop    r13
   338e6:	pop    r14
   338e8:	pop    r15
   338ea:	jmp    48b10 <argp_usage@@Base+0x5790>
   338ef:	nop
   338f0:	mov    edi,ebp
   338f2:	lea    rsi,[rsp+0x50]
   338f7:	call   3c960 <__sprintf_chk@plt+0x31fb0>
   338fc:	mov    rdi,rax
   338ff:	test   rax,rax
   33902:	je     33936 <__sprintf_chk@plt+0x28f86>
   33904:	xor    esi,esi
   33906:	mov    edx,0xa
   3390b:	call   a410 <strtol@plt>
   33910:	test   rax,rax
   33913:	js     3392b <__sprintf_chk@plt+0x28f7b>
   33915:	cmp    r13,rax
   33918:	je     33896 <__sprintf_chk@plt+0x28ee6>
   3391e:	mov    r13,rax
   33921:	jmp    3385e <__sprintf_chk@plt+0x28eae>
   33926:	call   a0a0 <__stack_chk_fail@plt>
   3392b:	call   9e40 <__errno_location@plt>
   33930:	mov    DWORD PTR [rax],0x5
   33936:	xor    r13d,r13d
   33939:	jmp    33896 <__sprintf_chk@plt+0x28ee6>
   3393e:	xchg   ax,ax
   33940:	endbr64 
   33944:	push   rbp
   33945:	push   rbx
   33946:	mov    ebx,edi
   33948:	sub    rsp,0x18
   3394c:	mov    rax,QWORD PTR fs:0x28
   33955:	mov    QWORD PTR [rsp+0x8],rax
   3395a:	xor    eax,eax
   3395c:	lea    rbp,[rsp+0x4]
   33961:	jmp    33972 <__sprintf_chk@plt+0x28fc2>
   33963:	nop    DWORD PTR [rax+rax*1+0x0]
   33968:	call   9e40 <__errno_location@plt>
   3396d:	cmp    DWORD PTR [rax],0x4
   33970:	jne    339a8 <__sprintf_chk@plt+0x28ff8>
   33972:	xor    edx,edx
   33974:	mov    rsi,rbp
   33977:	mov    edi,ebx
   33979:	call   a680 <waitpid@plt>
   3397e:	cmp    eax,0xffffffff
   33981:	je     33968 <__sprintf_chk@plt+0x28fb8>
   33983:	mov    eax,DWORD PTR [rsp+0x4]
   33987:	mov    edx,eax
   33989:	movzx  edi,ah
   3398c:	and    edx,0x7f
   3398f:	add    edx,0x1
   33992:	cmp    dl,0x1
   33995:	jle    339a3 <__sprintf_chk@plt+0x28ff3>
   33997:	and    eax,0x7f
   3399a:	mov    edi,eax
   3399c:	call   9da0 <raise@plt>
   339a1:	xor    edi,edi
   339a3:	call   a820 <exit@plt>
   339a8:	mov    rsi,QWORD PTR [rip+0x4bbb9]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   339af:	lea    rdi,[rip+0x2f74b]        # 63101 <_obstack_memory_used@@Base+0x16481>
   339b6:	call   3bad0 <__sprintf_chk@plt+0x31120>
   339bb:	jmp    33983 <__sprintf_chk@plt+0x28fd3>
   339bd:	nop    DWORD PTR [rax]
   339c0:	endbr64 
   339c4:	push   r12
   339c6:	push   rbp
   339c7:	mov    ebp,edi
   339c9:	mov    edi,esi
   339cb:	push   rbx
   339cc:	mov    ebx,esi
   339ce:	call   a200 <close@plt>
   339d3:	test   eax,eax
   339d5:	je     339e9 <__sprintf_chk@plt+0x29039>
   339d7:	call   9e40 <__errno_location@plt>
   339dc:	mov    r12d,DWORD PTR [rax]
   339df:	cmp    r12d,0x9
   339e3:	jne    33a71 <__sprintf_chk@plt+0x290c1>
   339e9:	mov    edi,ebp
   339eb:	call   a160 <dup@plt>
   339f0:	cmp    ebx,eax
   339f2:	jne    33a2e <__sprintf_chk@plt+0x2907e>
   339f4:	mov    edi,ebp
   339f6:	call   a200 <close@plt>
   339fb:	test   eax,eax
   339fd:	jne    33a08 <__sprintf_chk@plt+0x29058>
   339ff:	pop    rbx
   33a00:	pop    rbp
   33a01:	pop    r12
   33a03:	ret    
   33a04:	nop    DWORD PTR [rax+0x0]
   33a08:	lea    rsi,[rip+0x2f754]        # 63163 <_obstack_memory_used@@Base+0x164e3>
   33a0f:	xor    edi,edi
   33a11:	mov    edx,0x5
   33a16:	call   a040 <dcgettext@plt>
   33a1b:	pop    rbx
   33a1c:	lea    rdi,[rip+0x33039]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   33a23:	pop    rbp
   33a24:	mov    rsi,rax
   33a27:	pop    r12
   33a29:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
   33a2e:	test   eax,eax
   33a30:	jns    aaa3 <__sprintf_chk@plt+0xf3>
   33a36:	call   9e40 <__errno_location@plt>
   33a3b:	mov    ebp,DWORD PTR [rax]
   33a3d:	mov    rax,QWORD PTR [rip+0x4bac4]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   33a44:	test   rax,rax
   33a47:	je     33a4b <__sprintf_chk@plt+0x2909b>
   33a49:	call   rax
   33a4b:	mov    edx,0x5
   33a50:	lea    rsi,[rip+0x3300b]        # 66a62 <_obstack_memory_used@@Base+0x19de2>
   33a57:	xor    edi,edi
   33a59:	call   a040 <dcgettext@plt>
   33a5e:	mov    esi,ebp
   33a60:	xor    edi,edi
   33a62:	mov    rdx,rax
   33a65:	xor    eax,eax
   33a67:	call   a640 <error@plt>
   33a6c:	call   190e0 <__sprintf_chk@plt+0xe730>
   33a71:	mov    rax,QWORD PTR [rip+0x4ba90]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   33a78:	test   rax,rax
   33a7b:	je     33a7f <__sprintf_chk@plt+0x290cf>
   33a7d:	call   rax
   33a7f:	mov    edx,0x5
   33a84:	lea    rsi,[rip+0x32fca]        # 66a55 <_obstack_memory_used@@Base+0x19dd5>
   33a8b:	xor    edi,edi
   33a8d:	call   a040 <dcgettext@plt>
   33a92:	mov    esi,r12d
   33a95:	xor    edi,edi
   33a97:	mov    rdx,rax
   33a9a:	xor    eax,eax
   33a9c:	call   a640 <error@plt>
   33aa1:	call   190e0 <__sprintf_chk@plt+0xe730>
   33aa6:	cs nop WORD PTR [rax+rax*1+0x0]
   33ab0:	endbr64 
   33ab4:	push   r14
   33ab6:	push   r13
   33ab8:	push   r12
   33aba:	push   rbp
   33abb:	push   rbx
   33abc:	sub    rsp,0x20
   33ac0:	mov    rax,QWORD PTR fs:0x28
   33ac9:	mov    QWORD PTR [rsp+0x18],rax
   33ace:	xor    eax,eax
   33ad0:	lea    rdi,[rsp+0x10]
   33ad5:	call   28240 <__sprintf_chk@plt+0x1d890>
   33ada:	call   281f0 <__sprintf_chk@plt+0x1d840>
   33adf:	test   eax,eax
   33ae1:	jg     33ca4 <__sprintf_chk@plt+0x292f4>
   33ae7:	mov    edx,0x5
   33aec:	lea    rsi,[rip+0x2f7c6]        # 632b9 <_obstack_memory_used@@Base+0x16639>
   33af3:	xor    edi,edi
   33af5:	call   a040 <dcgettext@plt>
   33afa:	mov    rdi,rax
   33afd:	call   4a140 <argp_usage@@Base+0x6dc0>
   33b02:	mov    edi,0xd
   33b07:	xor    esi,esi
   33b09:	call   a330 <signal@plt>
   33b0e:	mov    edi,DWORD PTR [rsp+0x14]
   33b12:	cmp    edi,0x1
   33b15:	jne    33c95 <__sprintf_chk@plt+0x292e5>
   33b1b:	mov    edi,DWORD PTR [rsp+0x10]
   33b1f:	lea    r12,[rip+0x32c18]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   33b26:	call   ed20 <__sprintf_chk@plt+0x4370>
   33b2b:	mov    rax,QWORD PTR [rip+0x4b79e]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   33b32:	mov    rsi,r12
   33b35:	mov    rbp,QWORD PTR [rax]
   33b38:	mov    rdi,rbp
   33b3b:	call   a320 <strcmp@plt>
   33b40:	test   eax,eax
   33b42:	je     33b8c <__sprintf_chk@plt+0x291dc>
   33b44:	cmp    BYTE PTR [rip+0x4b775],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   33b4b:	jne    33b7c <__sprintf_chk@plt+0x291cc>
   33b4d:	mov    esi,0x3a
   33b52:	mov    rdi,rbp
   33b55:	call   a0f0 <strchr@plt>
   33b5a:	cmp    rbp,rax
   33b5d:	jae    33b7c <__sprintf_chk@plt+0x291cc>
   33b5f:	test   rax,rax
   33b62:	je     33b7c <__sprintf_chk@plt+0x291cc>
   33b64:	sub    rax,rbp
   33b67:	mov    esi,0x2f
   33b6c:	mov    rdi,rbp
   33b6f:	mov    rdx,rax
   33b72:	call   a280 <memchr@plt>
   33b77:	test   rax,rax
   33b7a:	je     33b8c <__sprintf_chk@plt+0x291dc>
   33b7c:	mov    rdi,rbp
   33b7f:	call   33720 <__sprintf_chk@plt+0x28d70>
   33b84:	test   eax,eax
   33b86:	jne    33d56 <__sprintf_chk@plt+0x293a6>
   33b8c:	lea    rdi,[rsp+0x8]
   33b91:	call   28240 <__sprintf_chk@plt+0x1d890>
   33b96:	call   281f0 <__sprintf_chk@plt+0x1d840>
   33b9b:	mov    r13d,eax
   33b9e:	test   eax,eax
   33ba0:	je     33da2 <__sprintf_chk@plt+0x293f2>
   33ba6:	mov    edi,DWORD PTR [rsp+0xc]
   33baa:	cmp    edi,0x1
   33bad:	je     33bb9 <__sprintf_chk@plt+0x29209>
   33baf:	mov    esi,0x1
   33bb4:	call   339c0 <__sprintf_chk@plt+0x29010>
   33bb9:	mov    edi,DWORD PTR [rsp+0x8]
   33bbd:	call   ed20 <__sprintf_chk@plt+0x4370>
   33bc2:	mov    rax,QWORD PTR [rip+0x4b707]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   33bc9:	mov    rsi,r12
   33bcc:	mov    rbp,QWORD PTR [rax]
   33bcf:	mov    rdi,rbp
   33bd2:	call   a320 <strcmp@plt>
   33bd7:	test   eax,eax
   33bd9:	jne    33cf0 <__sprintf_chk@plt+0x29340>
   33bdf:	mov    DWORD PTR [rip+0x4b977],0x0        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   33be9:	lea    r12,[rip+0x33b46]        # 67736 <_obstack_memory_used@@Base+0x1aab6>
   33bf0:	mov    DWORD PTR [rip+0x4b90a],0x0        # 7f504 <obstack_alloc_failed_handler@@Base+0x6cc>
   33bfa:	jmp    33c19 <__sprintf_chk@plt+0x29269>
   33bfc:	nop    DWORD PTR [rax+0x0]
   33c00:	sub    edi,0x40000000
   33c06:	call   3cc00 <__sprintf_chk@plt+0x32250>
   33c0b:	mov    rbx,rax
   33c0e:	cmp    rbx,0xffffffffffffffff
   33c12:	jne    33c43 <__sprintf_chk@plt+0x29293>
   33c14:	call   ed70 <__sprintf_chk@plt+0x43c0>
   33c19:	mov    edi,DWORD PTR [rip+0x4b941]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   33c1f:	mov    rdx,QWORD PTR [rip+0x4b92a]        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   33c26:	mov    rsi,QWORD PTR [rip+0x4b95b]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   33c2d:	cmp    edi,0x3fffffff
   33c33:	jg     33c00 <__sprintf_chk@plt+0x29250>
   33c35:	call   4b7c0 <argp_usage@@Base+0x8440>
   33c3a:	mov    rbx,rax
   33c3d:	cmp    rbx,0xffffffffffffffff
   33c41:	je     33c14 <__sprintf_chk@plt+0x29264>
   33c43:	test   rbx,rbx
   33c46:	je     33cde <__sprintf_chk@plt+0x2932e>
   33c4c:	mov    r14,QWORD PTR [rip+0x4b935]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   33c53:	nop    DWORD PTR [rax+rax*1+0x0]
   33c58:	mov    ebp,0x200
   33c5d:	mov    rsi,r14
   33c60:	mov    edi,0x1
   33c65:	cmp    rbx,rbp
   33c68:	cmovbe rbp,rbx
   33c6c:	mov    rdx,rbp
   33c6f:	call   48b10 <argp_usage@@Base+0x5790>
   33c74:	cmp    rax,rbp
   33c77:	je     33c88 <__sprintf_chk@plt+0x292d8>
   33c79:	mov    rsi,QWORD PTR [rip+0x4b8e8]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   33c80:	mov    rdi,r12
   33c83:	call   3bad0 <__sprintf_chk@plt+0x31120>
   33c88:	add    r14,rbp
   33c8b:	sub    rbx,rbp
   33c8e:	jne    33c58 <__sprintf_chk@plt+0x292a8>
   33c90:	jmp    33bf0 <__sprintf_chk@plt+0x29240>
   33c95:	mov    esi,0x1
   33c9a:	call   339c0 <__sprintf_chk@plt+0x29010>
   33c9f:	jmp    33b1b <__sprintf_chk@plt+0x2916b>
   33ca4:	mov    r12d,eax
   33ca7:	mov    edi,DWORD PTR [rsp+0x14]
   33cab:	mov    eax,DWORD PTR [rsp+0x10]
   33caf:	mov    DWORD PTR [rip+0x4b8ab],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   33cb5:	call   ed20 <__sprintf_chk@plt+0x4370>
   33cba:	mov    rax,QWORD PTR [rsp+0x18]
   33cbf:	sub    rax,QWORD PTR fs:0x28
   33cc8:	jne    33d9d <__sprintf_chk@plt+0x293ed>
   33cce:	add    rsp,0x20
   33cd2:	mov    eax,r12d
   33cd5:	pop    rbx
   33cd6:	pop    rbp
   33cd7:	pop    r12
   33cd9:	pop    r13
   33cdb:	pop    r14
   33cdd:	ret    
   33cde:	mov    edi,0x1
   33ce3:	call   ed20 <__sprintf_chk@plt+0x4370>
   33ce8:	mov    edi,r13d
   33ceb:	call   33940 <__sprintf_chk@plt+0x28f90>
   33cf0:	cmp    BYTE PTR [rip+0x4b5c9],0x0        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   33cf7:	jne    33d28 <__sprintf_chk@plt+0x29378>
   33cf9:	mov    esi,0x3a
   33cfe:	mov    rdi,rbp
   33d01:	call   a0f0 <strchr@plt>
   33d06:	test   rax,rax
   33d09:	je     33d28 <__sprintf_chk@plt+0x29378>
   33d0b:	cmp    rbp,rax
   33d0e:	jae    33d28 <__sprintf_chk@plt+0x29378>
   33d10:	sub    rax,rbp
   33d13:	mov    esi,0x2f
   33d18:	mov    rdi,rbp
   33d1b:	mov    rdx,rax
   33d1e:	call   a280 <memchr@plt>
   33d23:	test   rax,rax
   33d26:	je     33d8a <__sprintf_chk@plt+0x293da>
   33d28:	mov    edx,0x1b6
   33d2d:	xor    esi,esi
   33d2f:	mov    rdi,rbp
   33d32:	xor    eax,eax
   33d34:	call   a690 <open@plt>
   33d39:	mov    DWORD PTR [rip+0x4b821],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   33d3f:	test   eax,eax
   33d41:	jns    33be9 <__sprintf_chk@plt+0x29239>
   33d47:	mov    rax,QWORD PTR [rip+0x4b582]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   33d4e:	mov    rdi,QWORD PTR [rax]
   33d51:	call   3c420 <__sprintf_chk@plt+0x31a70>
   33d56:	mov    rax,QWORD PTR [rip+0x4b573]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   33d5d:	mov    edx,0x1b6
   33d62:	xor    esi,esi
   33d64:	mov    rdi,QWORD PTR [rax]
   33d67:	xor    eax,eax
   33d69:	call   a690 <open@plt>
   33d6e:	mov    DWORD PTR [rip+0x4b7ec],eax        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   33d74:	test   eax,eax
   33d76:	js     33d47 <__sprintf_chk@plt+0x29397>
   33d78:	jne    33d7f <__sprintf_chk@plt+0x293cf>
   33d7a:	call   2d690 <__sprintf_chk@plt+0x22ce0>
   33d7f:	xor    esi,esi
   33d81:	mov    edi,eax
   33d83:	call   339c0 <__sprintf_chk@plt+0x29010>
   33d88:	jmp    33d7a <__sprintf_chk@plt+0x293ca>
   33d8a:	mov    rdx,QWORD PTR [rip+0x4b51f]        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   33d91:	xor    esi,esi
   33d93:	mov    rdi,rbp
   33d96:	call   59f50 <_obstack_memory_used@@Base+0xd2d0>
   33d9b:	jmp    33d39 <__sprintf_chk@plt+0x29389>
   33d9d:	call   a0a0 <__stack_chk_fail@plt>
   33da2:	mov    edx,0x5
   33da7:	lea    rsi,[rip+0x2f517]        # 632c5 <_obstack_memory_used@@Base+0x16645>
   33dae:	xor    edi,edi
   33db0:	call   a040 <dcgettext@plt>
   33db5:	mov    rdi,rax
   33db8:	call   4a140 <argp_usage@@Base+0x6dc0>
   33dbd:	mov    edi,DWORD PTR [rsp+0x8]
   33dc1:	test   edi,edi
   33dc3:	je     33dcc <__sprintf_chk@plt+0x2941c>
   33dc5:	xor    esi,esi
   33dc7:	call   339c0 <__sprintf_chk@plt+0x29010>
   33dcc:	mov    edi,DWORD PTR [rsp+0xc]
   33dd0:	call   ed20 <__sprintf_chk@plt+0x4370>
   33dd5:	jmp    33d7a <__sprintf_chk@plt+0x293ca>
   33dd7:	nop    WORD PTR [rax+rax*1+0x0]
   33de0:	endbr64 
   33de4:	push   r12
   33de6:	mov    r12d,esi
   33de9:	push   rbp
   33dea:	push   rbx
   33deb:	mov    ebx,edi
   33ded:	sub    rsp,0x20
   33df1:	mov    rax,QWORD PTR fs:0x28
   33dfa:	mov    QWORD PTR [rsp+0x18],rax
   33dff:	xor    eax,eax
   33e01:	lea    rbp,[rsp+0x14]
   33e06:	jmp    33e1a <__sprintf_chk@plt+0x2946a>
   33e08:	nop    DWORD PTR [rax+rax*1+0x0]
   33e10:	call   9e40 <__errno_location@plt>
   33e15:	cmp    DWORD PTR [rax],0x4
   33e18:	jne    33e61 <__sprintf_chk@plt+0x294b1>
   33e1a:	xor    edx,edx
   33e1c:	mov    rsi,rbp
   33e1f:	mov    edi,ebx
   33e21:	call   a680 <waitpid@plt>
   33e26:	cmp    eax,0xffffffff
   33e29:	je     33e10 <__sprintf_chk@plt+0x29460>
   33e2b:	mov    ecx,DWORD PTR [rsp+0x14]
   33e2f:	mov    eax,ecx
   33e31:	and    eax,0x7f
   33e34:	add    eax,0x1
   33e37:	cmp    al,0x1
   33e39:	jle    33e76 <__sprintf_chk@plt+0x294c6>
   33e3b:	and    ecx,0x7f
   33e3e:	cmp    ecx,0xd
   33e41:	jne    33ebd <__sprintf_chk@plt+0x2950d>
   33e43:	test   r12b,r12b
   33e46:	jne    33ebd <__sprintf_chk@plt+0x2950d>
   33e48:	mov    rax,QWORD PTR [rsp+0x18]
   33e4d:	sub    rax,QWORD PTR fs:0x28
   33e56:	jne    33eb8 <__sprintf_chk@plt+0x29508>
   33e58:	add    rsp,0x20
   33e5c:	pop    rbx
   33e5d:	pop    rbp
   33e5e:	pop    r12
   33e60:	ret    
   33e61:	mov    rsi,QWORD PTR [rip+0x4b700]        # 7f568 <obstack_alloc_failed_handler@@Base+0x730>
   33e68:	lea    rdi,[rip+0x2f292]        # 63101 <_obstack_memory_used@@Base+0x16481>
   33e6f:	call   3bad0 <__sprintf_chk@plt+0x31120>
   33e74:	jmp    33e2b <__sprintf_chk@plt+0x2947b>
   33e76:	test   ch,0xff
   33e79:	je     33e48 <__sprintf_chk@plt+0x29498>
   33e7b:	mov    rax,QWORD PTR [rip+0x4b686]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   33e82:	test   rax,rax
   33e85:	je     33e8d <__sprintf_chk@plt+0x294dd>
   33e87:	call   rax
   33e89:	mov    ecx,DWORD PTR [rsp+0x14]
   33e8d:	mov    edx,0x5
   33e92:	lea    rsi,[rip+0x3040e]        # 642a7 <_obstack_memory_used@@Base+0x17627>
   33e99:	xor    edi,edi
   33e9b:	movzx  ebx,ch
   33e9e:	call   a040 <dcgettext@plt>
   33ea3:	mov    ecx,ebx
   33ea5:	mov    rdx,rax
   33ea8:	xor    esi,esi
   33eaa:	xor    edi,edi
   33eac:	xor    eax,eax
   33eae:	call   a640 <error@plt>
   33eb3:	call   190e0 <__sprintf_chk@plt+0xe730>
   33eb8:	call   a0a0 <__stack_chk_fail@plt>
   33ebd:	mov    rax,QWORD PTR [rip+0x4b644]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   33ec4:	test   rax,rax
   33ec7:	je     33ed3 <__sprintf_chk@plt+0x29523>
   33ec9:	mov    DWORD PTR [rsp+0xc],ecx
   33ecd:	call   rax
   33ecf:	mov    ecx,DWORD PTR [rsp+0xc]
   33ed3:	mov    edx,0x5
   33ed8:	lea    rsi,[rip+0x32b8e]        # 66a6d <_obstack_memory_used@@Base+0x19ded>
   33edf:	xor    edi,edi
   33ee1:	mov    DWORD PTR [rsp+0xc],ecx
   33ee5:	call   a040 <dcgettext@plt>
   33eea:	mov    ecx,DWORD PTR [rsp+0xc]
   33eee:	mov    rdx,rax
   33ef1:	jmp    33ea8 <__sprintf_chk@plt+0x294f8>
   33ef3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   33efe:	xchg   ax,ax
   33f00:	endbr64 
   33f04:	push   r13
   33f06:	push   r12
   33f08:	mov    r12,rdi
   33f0b:	push   rbp
   33f0c:	mov    rbp,rsi
   33f0f:	sub    rsp,0x20
   33f13:	mov    rax,QWORD PTR fs:0x28
   33f1c:	mov    QWORD PTR [rsp+0x18],rax
   33f21:	xor    eax,eax
   33f23:	cmp    QWORD PTR [rip+0x4bd6d],0x0        # 7fc98 <argp_program_version_hook@@Base+0xc0>
   33f2b:	je     33fd0 <__sprintf_chk@plt+0x29620>
   33f31:	lea    rdx,[rip+0x48108]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   33f38:	mov    rsi,rbp
   33f3b:	xor    edi,edi
   33f3d:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   33f42:	mov    rdi,QWORD PTR [rip+0x4b14f]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   33f49:	mov    rcx,r12
   33f4c:	lea    rdx,[rip+0x32b37]        # 66a8a <_obstack_memory_used@@Base+0x19e0a>
   33f53:	mov    r8,rax
   33f56:	mov    esi,0x1
   33f5b:	xor    eax,eax
   33f5d:	call   a840 <__fprintf_chk@plt>
   33f62:	mov    rdi,QWORD PTR [rip+0x4b12f]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   33f69:	call   a870 <fflush_unlocked@plt>
   33f6e:	mov    r12d,DWORD PTR [rip+0x4bd1b]        # 7fc90 <argp_program_version_hook@@Base+0xb8>
   33f75:	test   r12d,r12d
   33f78:	je     34020 <__sprintf_chk@plt+0x29670>
   33f7e:	xor    r12d,r12d
   33f81:	mov    rdi,QWORD PTR [rip+0x4b110]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   33f88:	mov    rax,QWORD PTR [rdi+0x28]
   33f8c:	cmp    rax,QWORD PTR [rdi+0x30]
   33f90:	jae    340c8 <__sprintf_chk@plt+0x29718>
   33f96:	lea    rdx,[rax+0x1]
   33f9a:	mov    QWORD PTR [rdi+0x28],rdx
   33f9e:	mov    BYTE PTR [rax],0xa
   33fa1:	mov    rdi,QWORD PTR [rip+0x4b0f0]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   33fa8:	call   a870 <fflush_unlocked@plt>
   33fad:	mov    rax,QWORD PTR [rsp+0x18]
   33fb2:	sub    rax,QWORD PTR fs:0x28
   33fbb:	jne    340d7 <__sprintf_chk@plt+0x29727>
   33fc1:	add    rsp,0x20
   33fc5:	mov    eax,r12d
   33fc8:	pop    rbp
   33fc9:	pop    r12
   33fcb:	pop    r13
   33fcd:	ret    
   33fce:	xchg   ax,ax
   33fd0:	mov    eax,DWORD PTR [rip+0x4b58a]        # 7f560 <obstack_alloc_failed_handler@@Base+0x728>
   33fd6:	test   eax,eax
   33fd8:	je     33fe8 <__sprintf_chk@plt+0x29638>
   33fda:	cmp    QWORD PTR [rip+0x4b8e6],0x0        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
   33fe2:	je     340a0 <__sprintf_chk@plt+0x296f0>
   33fe8:	lea    r13,[rip+0x2f109]        # 630f8 <_obstack_memory_used@@Base+0x16478>
   33fef:	lea    rsi,[rip+0x32a9c]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
   33ff6:	mov    rdi,r13
   33ff9:	call   a6d0 <fopen@plt>
   33ffe:	mov    QWORD PTR [rip+0x4bc93],rax        # 7fc98 <argp_program_version_hook@@Base+0xc0>
   34005:	test   rax,rax
   34008:	jne    33f31 <__sprintf_chk@plt+0x29581>
   3400e:	mov    rdi,r13
   34011:	call   3c420 <__sprintf_chk@plt+0x31a70>
   34016:	cs nop WORD PTR [rax+rax*1+0x0]
   34020:	lea    rsi,[rsp+0x8]
   34025:	lea    rdi,[rsp+0x10]
   3402a:	mov    edx,0xa
   3402f:	mov    rcx,QWORD PTR [rip+0x4bc62]        # 7fc98 <argp_program_version_hook@@Base+0xc0>
   34036:	mov    QWORD PTR [rsp+0x10],0x0
   3403f:	mov    QWORD PTR [rsp+0x8],0x0
   34048:	call   a310 <__getdelim@plt>
   3404d:	test   rax,rax
   34050:	jns    34070 <__sprintf_chk@plt+0x296c0>
   34052:	mov    DWORD PTR [rip+0x4bc34],0x1        # 7fc90 <argp_program_version_hook@@Base+0xb8>
   3405c:	mov    rdi,QWORD PTR [rsp+0x10]
   34061:	call   9ce0 <free@plt>
   34066:	jmp    33f81 <__sprintf_chk@plt+0x295d1>
   3406b:	nop    DWORD PTR [rax+rax*1+0x0]
   34070:	mov    rdi,QWORD PTR [rsp+0x10]
   34075:	xor    r12d,r12d
   34078:	call   a3b0 <rpmatch@plt>
   3407d:	mov    ebp,DWORD PTR [rip+0x4bc0d]        # 7fc90 <argp_program_version_hook@@Base+0xb8>
   34083:	mov    rdi,QWORD PTR [rsp+0x10]
   34088:	test   eax,eax
   3408a:	setg   r12b
   3408e:	call   9ce0 <free@plt>
   34093:	test   ebp,ebp
   34095:	je     33fad <__sprintf_chk@plt+0x295fd>
   3409b:	jmp    33f81 <__sprintf_chk@plt+0x295d1>
   340a0:	lea    rax,[rip+0x329e0]        # 66a87 <_obstack_memory_used@@Base+0x19e07>
   340a7:	mov    QWORD PTR [rip+0x4b81a],rax        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
   340ae:	mov    rax,QWORD PTR [rip+0x47ef3]        # 7bfa8 <_obstack_memory_used@@Base+0x2f328>
   340b5:	mov    rax,QWORD PTR [rax]
   340b8:	mov    QWORD PTR [rip+0x4bbd9],rax        # 7fc98 <argp_program_version_hook@@Base+0xc0>
   340bf:	jmp    33f31 <__sprintf_chk@plt+0x29581>
   340c4:	nop    DWORD PTR [rax+0x0]
   340c8:	mov    esi,0xa
   340cd:	call   a120 <__overflow@plt>
   340d2:	jmp    33fa1 <__sprintf_chk@plt+0x295f1>
   340d7:	call   a0a0 <__stack_chk_fail@plt>
   340dc:	nop    DWORD PTR [rax+0x0]
   340e0:	endbr64 
   340e4:	cmp    edi,0x9
   340e7:	ja     aaa8 <__sprintf_chk@plt+0xf8>
   340ed:	lea    rdx,[rip+0x3630c]        # 6a400 <_obstack_memory_used@@Base+0x1d780>
   340f4:	mov    edi,edi
   340f6:	movsxd rax,DWORD PTR [rdx+rdi*4]
   340fa:	add    rax,rdx
   340fd:	notrack jmp rax
   34100:	lea    rax,[rip+0x32999]        # 66aa0 <_obstack_memory_used@@Base+0x19e20>
   34107:	ret    
   34108:	nop    DWORD PTR [rax+rax*1+0x0]
   34110:	lea    rax,[rip+0x3298c]        # 66aa3 <_obstack_memory_used@@Base+0x19e23>
   34117:	ret    
   34118:	nop    DWORD PTR [rax+rax*1+0x0]
   34120:	lea    rax,[rip+0x2efc8]        # 630ef <_obstack_memory_used@@Base+0x1646f>
   34127:	ret    
   34128:	nop    DWORD PTR [rax+rax*1+0x0]
   34130:	lea    rax,[rip+0x3295a]        # 66a91 <_obstack_memory_used@@Base+0x19e11>
   34137:	ret    
   34138:	nop    DWORD PTR [rax+rax*1+0x0]
   34140:	lea    rax,[rip+0x3294d]        # 66a94 <_obstack_memory_used@@Base+0x19e14>
   34147:	ret    
   34148:	nop    DWORD PTR [rax+rax*1+0x0]
   34150:	lea    rax,[rip+0x328f5]        # 66a4c <_obstack_memory_used@@Base+0x19dcc>
   34157:	ret    
   34158:	nop    DWORD PTR [rax+rax*1+0x0]
   34160:	lea    rax,[rip+0x32930]        # 66a97 <_obstack_memory_used@@Base+0x19e17>
   34167:	ret    
   34168:	nop    DWORD PTR [rax+rax*1+0x0]
   34170:	lea    rax,[rip+0x32551]        # 666c8 <_obstack_memory_used@@Base+0x19a48>
   34177:	ret    
   34178:	nop    DWORD PTR [rax+rax*1+0x0]
   34180:	lea    rax,[rip+0x32913]        # 66a9a <_obstack_memory_used@@Base+0x19e1a>
   34187:	ret    
   34188:	nop    DWORD PTR [rax+rax*1+0x0]
   34190:	lea    rax,[rip+0x32906]        # 66a9d <_obstack_memory_used@@Base+0x19e1d>
   34197:	ret    
   34198:	nop    DWORD PTR [rax+rax*1+0x0]
   341a0:	endbr64 
   341a4:	push   r13
   341a6:	push   r12
   341a8:	mov    r12,rdi
   341ab:	push   rbp
   341ac:	push   rbx
   341ad:	sub    rsp,0x8
   341b1:	cmp    BYTE PTR [rdi],0x53
   341b4:	jne    341c0 <__sprintf_chk@plt+0x29810>
   341b6:	cmp    BYTE PTR [rdi+0x1],0x49
   341ba:	je     34250 <__sprintf_chk@plt+0x298a0>
   341c0:	mov    rbp,r12
   341c3:	lea    rbx,[rip+0x46db6]        # 7af80 <_obstack_memory_used@@Base+0x2e300>
   341ca:	lea    rdi,[rip+0x328df]        # 66ab0 <_obstack_memory_used@@Base+0x19e30>
   341d1:	mov    rsi,rbp
   341d4:	lea    r13,[rbx+0x50]
   341d8:	call   a320 <strcmp@plt>
   341dd:	test   eax,eax
   341df:	je     341f9 <__sprintf_chk@plt+0x29849>
   341e1:	add    rbx,0x10
   341e5:	cmp    rbx,r13
   341e8:	je     34210 <__sprintf_chk@plt+0x29860>
   341ea:	mov    rdi,QWORD PTR [rbx]
   341ed:	mov    rsi,rbp
   341f0:	call   a320 <strcmp@plt>
   341f5:	test   eax,eax
   341f7:	jne    341e1 <__sprintf_chk@plt+0x29831>
   341f9:	mov    eax,DWORD PTR [rbx+0x8]
   341fc:	add    rsp,0x8
   34200:	pop    rbx
   34201:	pop    rbp
   34202:	pop    r12
   34204:	pop    r13
   34206:	ret    
   34207:	nop    WORD PTR [rax+rax*1+0x0]
   34210:	mov    rax,QWORD PTR [rip+0x4b2f1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   34217:	test   rax,rax
   3421a:	je     3421e <__sprintf_chk@plt+0x2986e>
   3421c:	call   rax
   3421e:	mov    edx,0x5
   34223:	lea    rsi,[rip+0x3288b]        # 66ab5 <_obstack_memory_used@@Base+0x19e35>
   3422a:	xor    edi,edi
   3422c:	call   a040 <dcgettext@plt>
   34231:	mov    rcx,r12
   34234:	xor    esi,esi
   34236:	xor    edi,edi
   34238:	mov    rdx,rax
   3423b:	xor    eax,eax
   3423d:	call   a640 <error@plt>
   34242:	call   190e0 <__sprintf_chk@plt+0xe730>
   34247:	nop    WORD PTR [rax+rax*1+0x0]
   34250:	cmp    BYTE PTR [rdi+0x2],0x47
   34254:	jne    341c0 <__sprintf_chk@plt+0x29810>
   3425a:	lea    rbp,[rdi+0x3]
   3425e:	jmp    341c3 <__sprintf_chk@plt+0x29813>
   34263:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3426e:	xchg   ax,ax
   34270:	endbr64 
   34274:	push   r15
   34276:	mov    rcx,rdi
   34279:	push   r14
   3427b:	push   r13
   3427d:	push   r12
   3427f:	push   rbp
   34280:	push   rbx
   34281:	sub    rsp,0x88
   34288:	mov    r13,QWORD PTR [rdi+0x18]
   3428c:	mov    edx,DWORD PTR [rip+0x4ba0e]        # 7fca0 <argp_program_version_hook@@Base+0xc8>
   34292:	mov    rax,QWORD PTR fs:0x28
   3429b:	mov    QWORD PTR [rsp+0x78],rax
   342a0:	xor    eax,eax
   342a2:	mov    r14,QWORD PTR [rip+0x4b297]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   342a9:	mov    eax,DWORD PTR [rip+0x4b9f5]        # 7fca4 <argp_program_version_hook@@Base+0xcc>
   342af:	sub    r14,QWORD PTR [rip+0x4b2d2]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   342b6:	mov    DWORD PTR [r13+0x128],edx
   342bd:	sar    r14,0x9
   342c1:	add    r14,QWORD PTR [rip+0x4b270]        # 7f538 <obstack_alloc_failed_handler@@Base+0x700>
   342c8:	mov    DWORD PTR [r13+0x124],eax
   342cf:	mov    QWORD PTR [rsp+0x8],r14
   342d4:	mov    rbx,QWORD PTR [r13+0x140]
   342db:	test   eax,eax
   342dd:	jne    343c5 <__sprintf_chk@plt+0x29a15>
   342e3:	cmp    QWORD PTR [r13+0x178],0x0
   342eb:	je     34dfe <__sprintf_chk@plt+0x2a44e>
   342f1:	mov    rbp,QWORD PTR [rip+0x4b420]        # 7f718 <obstack_alloc_failed_handler@@Base+0x8e0>
   342f8:	test   rbp,rbp
   342fb:	je     34be3 <__sprintf_chk@plt+0x2a233>
   34301:	lea    r12,[rip+0x3018a]        # 64492 <_obstack_memory_used@@Base+0x17812>
   34308:	mov    r13,rcx
   3430b:	jmp    3431d <__sprintf_chk@plt+0x2996d>
   3430d:	nop    DWORD PTR [rax]
   34310:	mov    rbp,QWORD PTR [rbp+0x0]
   34314:	test   rbp,rbp
   34317:	je     34be0 <__sprintf_chk@plt+0x2a230>
   3431d:	mov    rdi,QWORD PTR [rbp+0x8]
   34321:	xor    edx,edx
   34323:	mov    rsi,r12
   34326:	call   9cf0 <fnmatch@plt>
   3432b:	test   eax,eax
   3432d:	jne    34310 <__sprintf_chk@plt+0x29960>
   3432f:	mov    rcx,r13
   34332:	mov    QWORD PTR [rsp+0x38],0x0
   3433b:	mov    rsi,QWORD PTR [rcx+0x18]
   3433f:	cmp    QWORD PTR [rsi+0x130],0x0
   34347:	je     34d70 <__sprintf_chk@plt+0x2a3c0>
   3434d:	lea    rbx,[rsp+0x38]
   34352:	lea    r12,[rip+0x2fe37]        # 64190 <_obstack_memory_used@@Base+0x17510>
   34359:	mov    r13,rcx
   3435c:	lea    rbp,[rip+0x3011b]        # 6447e <_obstack_memory_used@@Base+0x177fe>
   34363:	jmp    34391 <__sprintf_chk@plt+0x299e1>
   34365:	nop    DWORD PTR [rax]
   34368:	mov    rsi,QWORD PTR [r13+0x18]
   3436c:	cmp    QWORD PTR [rsi+0x178],0x0
   34374:	je     343b4 <__sprintf_chk@plt+0x29a04>
   34376:	mov    rax,QWORD PTR [rsp+0x38]
   3437b:	add    rax,0x1
   3437f:	mov    QWORD PTR [rsp+0x38],rax
   34384:	cmp    rax,QWORD PTR [rsi+0x130]
   3438b:	jae    34d6d <__sprintf_chk@plt+0x2a3bd>
   34391:	cmp    QWORD PTR [rsi+0x178],0x0
   34399:	jne    34368 <__sprintf_chk@plt+0x299b8>
   3439b:	mov    rdx,rbx
   3439e:	mov    rdi,r12
   343a1:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   343a6:	mov    rsi,QWORD PTR [r13+0x18]
   343aa:	cmp    QWORD PTR [rsi+0x178],0x0
   343b2:	jne    34376 <__sprintf_chk@plt+0x299c6>
   343b4:	mov    rdx,rbx
   343b7:	mov    rdi,rbp
   343ba:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   343bf:	mov    rsi,QWORD PTR [r13+0x18]
   343c3:	jmp    34376 <__sprintf_chk@plt+0x299c6>
   343c5:	mov    rax,QWORD PTR [r13+0x8]
   343c9:	mov    BYTE PTR [rsp+0x74],0x0
   343ce:	lea    r8,[rsp+0x74]
   343d3:	movabs r10,0xcccccccccccccccd
   343dd:	mov    r12,QWORD PTR [r13+0x130]
   343e4:	mov    r9,r8
   343e7:	mov    QWORD PTR [rsp+0x10],rax
   343ec:	mov    rsi,r12
   343ef:	nop
   343f0:	mov    rax,rsi
   343f3:	sub    r9,0x1
   343f7:	mul    r10
   343fa:	mov    rax,rsi
   343fd:	shr    rdx,0x3
   34401:	lea    rdi,[rdx+rdx*4]
   34405:	add    rdi,rdi
   34408:	sub    rax,rdi
   3440b:	add    eax,0x30
   3440e:	mov    BYTE PTR [r9],al
   34411:	mov    rax,rsi
   34414:	mov    rsi,rdx
   34417:	cmp    rax,0x9
   3441b:	ja     343f0 <__sprintf_chk@plt+0x29a40>
   3441d:	mov    rdi,r9
   34420:	mov    QWORD PTR [rsp+0x20],rcx
   34425:	mov    QWORD PTR [rsp+0x18],r8
   3442a:	call   a060 <strlen@plt>
   3442f:	test   r12,r12
   34432:	mov    r8,QWORD PTR [rsp+0x18]
   34437:	mov    rcx,QWORD PTR [rsp+0x20]
   3443c:	lea    rbp,[rax+0x1]
   34440:	je     3451f <__sprintf_chk@plt+0x29b6f>
   34446:	mov    rax,r12
   34449:	mov    QWORD PTR [rsp+0x20],rbx
   3444e:	movabs r14,0xcccccccccccccccd
   34458:	shl    rax,0x4
   3445c:	mov    QWORD PTR [rsp+0x28],rcx
   34461:	add    rax,rbx
   34464:	mov    QWORD PTR [rsp+0x18],r13
   34469:	mov    r13,r8
   3446c:	mov    r15,rax
   3446f:	nop
   34470:	mov    BYTE PTR [rsp+0x74],0x0
   34475:	mov    rcx,QWORD PTR [rbx]
   34478:	mov    rdi,r13
   3447b:	nop    DWORD PTR [rax+rax*1+0x0]
   34480:	mov    rax,rcx
   34483:	sub    rdi,0x1
   34487:	mul    r14
   3448a:	mov    rax,rcx
   3448d:	shr    rdx,0x3
   34491:	lea    rsi,[rdx+rdx*4]
   34495:	add    rsi,rsi
   34498:	sub    rax,rsi
   3449b:	add    eax,0x30
   3449e:	mov    BYTE PTR [rdi],al
   344a0:	mov    rax,rcx
   344a3:	mov    rcx,rdx
   344a6:	cmp    rax,0x9
   344aa:	ja     34480 <__sprintf_chk@plt+0x29ad0>
   344ac:	call   a060 <strlen@plt>
   344b1:	mov    rcx,QWORD PTR [rbx+0x8]
   344b5:	add    rbp,0x2
   344b9:	mov    rdi,r13
   344bc:	mov    BYTE PTR [rsp+0x74],0x0
   344c1:	mov    r12,rax
   344c4:	nop    DWORD PTR [rax+0x0]
   344c8:	mov    rax,rcx
   344cb:	sub    rdi,0x1
   344cf:	mul    r14
   344d2:	mov    rax,rcx
   344d5:	shr    rdx,0x3
   344d9:	lea    rsi,[rdx+rdx*4]
   344dd:	add    rsi,rsi
   344e0:	sub    rax,rsi
   344e3:	add    eax,0x30
   344e6:	mov    BYTE PTR [rdi],al
   344e8:	mov    rax,rcx
   344eb:	mov    rcx,rdx
   344ee:	cmp    rax,0x9
   344f2:	ja     344c8 <__sprintf_chk@plt+0x29b18>
   344f4:	call   a060 <strlen@plt>
   344f9:	add    r12,rbp
   344fc:	add    rbx,0x10
   34500:	lea    rbp,[r12+rax*1]
   34504:	cmp    rbx,r15
   34507:	jne    34470 <__sprintf_chk@plt+0x29ac0>
   3450d:	mov    r8,r13
   34510:	mov    rbx,QWORD PTR [rsp+0x20]
   34515:	mov    rcx,QWORD PTR [rsp+0x28]
   3451a:	mov    r13,QWORD PTR [rsp+0x18]
   3451f:	lea    rax,[rbp+0x3fe]
   34526:	add    rbp,0x1ff
   3452d:	cmovns rax,rbp
   34531:	and    rax,0xfffffffffffffe00
   34537:	add    QWORD PTR [r13+0x118],rax
   3453e:	add    QWORD PTR [rcx+0x10],rax
   34542:	cmp    QWORD PTR [r13+0x178],0x0
   3454a:	je     34e58 <__sprintf_chk@plt+0x2a4a8>
   34550:	xor    edx,edx
   34552:	lea    rsi,[rip+0x32574]        # 66acd <_obstack_memory_used@@Base+0x19e4d>
   34559:	mov    rdi,r13
   3455c:	mov    QWORD PTR [rsp+0x20],r8
   34561:	mov    QWORD PTR [rsp+0x18],rcx
   34566:	call   1c570 <__sprintf_chk@plt+0x11bc0>
   3456b:	mov    rcx,QWORD PTR [rsp+0x18]
   34570:	mov    QWORD PTR [r13+0x8],rax
   34574:	mov    rbp,QWORD PTR [rcx+0x18]
   34578:	mov    r12,QWORD PTR [rbp+0x8]
   3457c:	mov    rdi,r12
   3457f:	call   a060 <strlen@plt>
   34584:	mov    rcx,QWORD PTR [rsp+0x18]
   34589:	mov    r8,QWORD PTR [rsp+0x20]
   3458e:	cmp    rax,0x64
   34592:	jbe    3459e <__sprintf_chk@plt+0x29bee>
   34594:	mov    BYTE PTR [r12+0x64],0x0
   3459a:	mov    rbp,QWORD PTR [rcx+0x18]
   3459e:	mov    rax,QWORD PTR [rbp+0x118]
   345a5:	mov    r12,QWORD PTR [rbp+0x88]
   345ac:	mov    rdi,rbp
   345af:	mov    QWORD PTR [rsp+0x20],r8
   345b4:	mov    QWORD PTR [rsp+0x18],rcx
   345b9:	mov    QWORD PTR [rbp+0x88],rax
   345c0:	call   11f50 <__sprintf_chk@plt+0x75a0>
   345c5:	mov    rcx,QWORD PTR [rsp+0x18]
   345ca:	mov    rdx,QWORD PTR [rsp+0x8]
   345cf:	mov    QWORD PTR [rbp+0x88],r12
   345d6:	mov    rsi,rax
   345d9:	mov    rdi,QWORD PTR [rcx+0x18]
   345dd:	call   10b40 <__sprintf_chk@plt+0x6190>
   345e2:	mov    rcx,QWORD PTR [rsp+0x18]
   345e7:	mov    rax,QWORD PTR [rcx+0x18]
   345eb:	mov    QWORD PTR [rsp+0x8],rcx
   345f0:	mov    rdi,QWORD PTR [rax+0x8]
   345f4:	call   9ce0 <free@plt>
   345f9:	mov    rcx,QWORD PTR [rsp+0x8]
   345fe:	mov    rdi,QWORD PTR [rsp+0x10]
   34603:	mov    rbp,QWORD PTR [rip+0x4af36]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3460a:	cmp    rbp,QWORD PTR [rip+0x4af6f]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34611:	mov    rax,QWORD PTR [rcx+0x18]
   34615:	mov    r8,QWORD PTR [rsp+0x20]
   3461a:	mov    QWORD PTR [rax+0x8],rdi
   3461e:	je     34dbe <__sprintf_chk@plt+0x2a40e>
   34624:	mov    BYTE PTR [rsp+0x74],0x0
   34629:	mov    rsi,QWORD PTR [rax+0x130]
   34630:	mov    r9,rbp
   34633:	mov    r13,r8
   34636:	movabs rdi,0xcccccccccccccccd
   34640:	mov    rax,rsi
   34643:	mov    r12,rsi
   34646:	sub    r13,0x1
   3464a:	mul    rdi
   3464d:	shr    rdx,0x3
   34651:	lea    rax,[rdx+rdx*4]
   34655:	add    rax,rax
   34658:	sub    r12,rax
   3465b:	mov    rax,rsi
   3465e:	mov    rsi,rdx
   34661:	add    r12d,0x30
   34665:	mov    BYTE PTR [r13+0x0],r12b
   34669:	cmp    rax,0x9
   3466d:	ja     34640 <__sprintf_chk@plt+0x29c90>
   3466f:	lea    rdx,[rbp+0x200]
   34676:	mov    r14,rcx
   34679:	mov    r15,r8
   3467c:	jmp    34695 <__sprintf_chk@plt+0x29ce5>
   3467e:	xchg   ax,ax
   34680:	add    r13,0x1
   34684:	mov    BYTE PTR [rax],r12b
   34687:	lea    r9,[rax+0x1]
   3468b:	movzx  r12d,BYTE PTR [r13+0x0]
   34690:	test   r12b,r12b
   34693:	je     346e8 <__sprintf_chk@plt+0x29d38>
   34695:	mov    rax,r9
   34698:	cmp    rdx,r9
   3469b:	jne    34680 <__sprintf_chk@plt+0x29cd0>
   3469d:	mov    rax,QWORD PTR [rip+0x4ae9c]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   346a4:	cmp    rbp,rax
   346a7:	jb     346c2 <__sprintf_chk@plt+0x29d12>
   346a9:	sub    rbp,rax
   346ac:	and    rbp,0xfffffffffffffe00
   346b3:	lea    rax,[rax+rbp*1+0x200]
   346bb:	mov    QWORD PTR [rip+0x4ae7e],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   346c2:	cmp    QWORD PTR [rip+0x4aeb7],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   346c9:	jb     aaae <__sprintf_chk@plt+0xfe>
   346cf:	mov    rbp,QWORD PTR [rip+0x4ae6a]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   346d6:	je     34ba8 <__sprintf_chk@plt+0x2a1f8>
   346dc:	mov    rax,rbp
   346df:	lea    rdx,[rbp+0x200]
   346e6:	jmp    34680 <__sprintf_chk@plt+0x29cd0>
   346e8:	mov    rcx,r14
   346eb:	mov    r8,r15
   346ee:	cmp    r9,rdx
   346f1:	je     347dc <__sprintf_chk@plt+0x29e2c>
   346f7:	mov    BYTE PTR [r9],0xa
   346fb:	mov    rax,QWORD PTR [rcx+0x18]
   346ff:	lea    rdi,[r9+0x1]
   34703:	cmp    QWORD PTR [rax+0x130],0x0
   3470b:	je     34969 <__sprintf_chk@plt+0x29fb9>
   34711:	movabs r15,0xcccccccccccccccd
   3471b:	xor    r14d,r14d
   3471e:	xchg   ax,ax
   34720:	mov    BYTE PTR [rsp+0x74],0x0
   34725:	mov    rsi,QWORD PTR [rbx]
   34728:	mov    r13,r8
   3472b:	nop    DWORD PTR [rax+rax*1+0x0]
   34730:	mov    rax,rsi
   34733:	mov    r12,rsi
   34736:	sub    r13,0x1
   3473a:	mul    r15
   3473d:	shr    rdx,0x3
   34741:	lea    rax,[rdx+rdx*4]
   34745:	add    rax,rax
   34748:	sub    r12,rax
   3474b:	mov    rax,rsi
   3474e:	mov    rsi,rdx
   34751:	add    r12d,0x30
   34755:	mov    BYTE PTR [r13+0x0],r12b
   34759:	cmp    rax,0x9
   3475d:	ja     34730 <__sprintf_chk@plt+0x29d80>
   3475f:	lea    rsi,[rbp+0x200]
   34766:	jmp    34789 <__sprintf_chk@plt+0x29dd9>
   34768:	nop    DWORD PTR [rax+rax*1+0x0]
   34770:	add    r13,0x1
   34774:	mov    BYTE PTR [rax],r12b
   34777:	lea    rdi,[rax+0x1]
   3477b:	movzx  r12d,BYTE PTR [r13+0x0]
   34780:	test   r12b,r12b
   34783:	je     34828 <__sprintf_chk@plt+0x29e78>
   34789:	mov    rax,rdi
   3478c:	cmp    rsi,rdi
   3478f:	jne    34770 <__sprintf_chk@plt+0x29dc0>
   34791:	mov    rax,QWORD PTR [rip+0x4ada8]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34798:	cmp    rbp,rax
   3479b:	jb     347b6 <__sprintf_chk@plt+0x29e06>
   3479d:	sub    rbp,rax
   347a0:	and    rbp,0xfffffffffffffe00
   347a7:	lea    rax,[rax+rbp*1+0x200]
   347af:	mov    QWORD PTR [rip+0x4ad8a],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   347b6:	cmp    QWORD PTR [rip+0x4adc3],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   347bd:	jb     aaae <__sprintf_chk@plt+0xfe>
   347c3:	mov    rbp,QWORD PTR [rip+0x4ad76]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   347ca:	je     34a28 <__sprintf_chk@plt+0x2a078>
   347d0:	mov    rax,rbp
   347d3:	lea    rsi,[rbp+0x200]
   347da:	jmp    34770 <__sprintf_chk@plt+0x29dc0>
   347dc:	mov    rax,QWORD PTR [rip+0x4ad5d]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   347e3:	cmp    rax,rbp
   347e6:	ja     34801 <__sprintf_chk@plt+0x29e51>
   347e8:	sub    rbp,rax
   347eb:	and    rbp,0xfffffffffffffe00
   347f2:	lea    rax,[rax+rbp*1+0x200]
   347fa:	mov    QWORD PTR [rip+0x4ad3f],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34801:	cmp    rax,QWORD PTR [rip+0x4ad78]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34808:	ja     aaae <__sprintf_chk@plt+0xfe>
   3480e:	mov    rbp,QWORD PTR [rip+0x4ad2b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34815:	je     34b5a <__sprintf_chk@plt+0x2a1aa>
   3481b:	mov    r9,rbp
   3481e:	jmp    346f7 <__sprintf_chk@plt+0x29d47>
   34823:	nop    DWORD PTR [rax+rax*1+0x0]
   34828:	cmp    rdi,rsi
   3482b:	je     348e8 <__sprintf_chk@plt+0x29f38>
   34831:	mov    BYTE PTR [rsp+0x74],0x0
   34836:	mov    r13,r8
   34839:	mov    BYTE PTR [rdi],0xa
   3483c:	mov    r9,QWORD PTR [rbx+0x8]
   34840:	mov    rax,r9
   34843:	mov    r12,r9
   34846:	sub    r13,0x1
   3484a:	mul    r15
   3484d:	shr    rdx,0x3
   34851:	lea    rax,[rdx+rdx*4]
   34855:	add    rax,rax
   34858:	sub    r12,rax
   3485b:	mov    rax,r9
   3485e:	mov    r9,rdx
   34861:	add    r12d,0x30
   34865:	mov    BYTE PTR [r13+0x0],r12b
   34869:	cmp    rax,0x9
   3486d:	ja     34840 <__sprintf_chk@plt+0x29e90>
   3486f:	lea    rax,[rdi+0x1]
   34873:	jmp    34891 <__sprintf_chk@plt+0x29ee1>
   34875:	nop    DWORD PTR [rax]
   34878:	add    r13,0x1
   3487c:	mov    BYTE PTR [rdx],r12b
   3487f:	lea    rax,[rdx+0x1]
   34883:	movzx  r12d,BYTE PTR [r13+0x0]
   34888:	test   r12b,r12b
   3488b:	je     34940 <__sprintf_chk@plt+0x29f90>
   34891:	mov    rdx,rax
   34894:	cmp    rsi,rax
   34897:	jne    34878 <__sprintf_chk@plt+0x29ec8>
   34899:	mov    rax,QWORD PTR [rip+0x4aca0]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   348a0:	cmp    rax,rbp
   348a3:	ja     348be <__sprintf_chk@plt+0x29f0e>
   348a5:	sub    rbp,rax
   348a8:	and    rbp,0xfffffffffffffe00
   348af:	lea    rax,[rax+rbp*1+0x200]
   348b7:	mov    QWORD PTR [rip+0x4ac82],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   348be:	cmp    QWORD PTR [rip+0x4acbb],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   348c5:	jb     aaae <__sprintf_chk@plt+0xfe>
   348cb:	mov    rbp,QWORD PTR [rip+0x4ac6e]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   348d2:	je     34ac0 <__sprintf_chk@plt+0x2a110>
   348d8:	mov    rdx,rbp
   348db:	lea    rsi,[rbp+0x200]
   348e2:	jmp    34878 <__sprintf_chk@plt+0x29ec8>
   348e4:	nop    DWORD PTR [rax+0x0]
   348e8:	mov    rax,QWORD PTR [rip+0x4ac51]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   348ef:	cmp    rax,rbp
   348f2:	ja     3490d <__sprintf_chk@plt+0x29f5d>
   348f4:	sub    rbp,rax
   348f7:	and    rbp,0xfffffffffffffe00
   348fe:	lea    rax,[rax+rbp*1+0x200]
   34906:	mov    QWORD PTR [rip+0x4ac33],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   3490d:	cmp    rax,QWORD PTR [rip+0x4ac6c]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34914:	ja     aaae <__sprintf_chk@plt+0xfe>
   3491a:	mov    rbp,QWORD PTR [rip+0x4ac1f]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34921:	je     34b10 <__sprintf_chk@plt+0x2a160>
   34927:	mov    rdi,rbp
   3492a:	lea    rsi,[rbp+0x200]
   34931:	jmp    34831 <__sprintf_chk@plt+0x29e81>
   34936:	cs nop WORD PTR [rax+rax*1+0x0]
   34940:	cmp    rax,rsi
   34943:	je     349e0 <__sprintf_chk@plt+0x2a030>
   34949:	mov    BYTE PTR [rax],0xa
   3494c:	lea    rdi,[rax+0x1]
   34950:	mov    rax,QWORD PTR [rcx+0x18]
   34954:	add    r14,0x1
   34958:	add    rbx,0x10
   3495c:	cmp    r14,QWORD PTR [rax+0x130]
   34963:	jb     34720 <__sprintf_chk@plt+0x29d70>
   34969:	mov    rax,rbp
   3496c:	xor    esi,esi
   3496e:	sub    rax,rdi
   34971:	lea    rdx,[rax+0x200]
   34978:	call   a1b0 <memset@plt>
   3497d:	mov    rax,QWORD PTR [rip+0x4abbc]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34984:	cmp    rbp,rax
   34987:	jb     349a2 <__sprintf_chk@plt+0x29ff2>
   34989:	sub    rbp,rax
   3498c:	and    rbp,0xfffffffffffffe00
   34993:	lea    rax,[rax+rbp*1+0x200]
   3499b:	mov    QWORD PTR [rip+0x4ab9e],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   349a2:	cmp    QWORD PTR [rip+0x4abd7],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   349a9:	jb     aaae <__sprintf_chk@plt+0xfe>
   349af:	mov    eax,0x1
   349b4:	mov    rdx,QWORD PTR [rsp+0x78]
   349b9:	sub    rdx,QWORD PTR fs:0x28
   349c2:	jne    351bb <__sprintf_chk@plt+0x2a80b>
   349c8:	add    rsp,0x88
   349cf:	pop    rbx
   349d0:	pop    rbp
   349d1:	pop    r12
   349d3:	pop    r13
   349d5:	pop    r14
   349d7:	pop    r15
   349d9:	ret    
   349da:	nop    WORD PTR [rax+rax*1+0x0]
   349e0:	mov    rax,QWORD PTR [rip+0x4ab59]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   349e7:	cmp    rax,rbp
   349ea:	ja     34a05 <__sprintf_chk@plt+0x2a055>
   349ec:	sub    rbp,rax
   349ef:	and    rbp,0xfffffffffffffe00
   349f6:	lea    rax,[rax+rbp*1+0x200]
   349fe:	mov    QWORD PTR [rip+0x4ab3b],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34a05:	cmp    rax,QWORD PTR [rip+0x4ab74]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34a0c:	ja     aaae <__sprintf_chk@plt+0xfe>
   34a12:	mov    rbp,QWORD PTR [rip+0x4ab27]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34a19:	je     34a78 <__sprintf_chk@plt+0x2a0c8>
   34a1b:	mov    rax,rbp
   34a1e:	jmp    34949 <__sprintf_chk@plt+0x29f99>
   34a23:	nop    DWORD PTR [rax+rax*1+0x0]
   34a28:	xor    ebp,ebp
   34a2a:	cmp    BYTE PTR [rip+0x4ab03],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34a31:	jne    347d0 <__sprintf_chk@plt+0x29e20>
   34a37:	mov    QWORD PTR [rsp+0x10],r8
   34a3c:	mov    QWORD PTR [rsp+0x8],rcx
   34a41:	call   f170 <__sprintf_chk@plt+0x47c0>
   34a46:	mov    rcx,QWORD PTR [rsp+0x8]
   34a4b:	mov    r8,QWORD PTR [rsp+0x10]
   34a50:	mov    rbp,QWORD PTR [rip+0x4aae9]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34a57:	cmp    rbp,QWORD PTR [rip+0x4ab22]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34a5e:	jne    347d0 <__sprintf_chk@plt+0x29e20>
   34a64:	mov    BYTE PTR [rip+0x4aac9],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34a6b:	xor    ebp,ebp
   34a6d:	jmp    347d0 <__sprintf_chk@plt+0x29e20>
   34a72:	nop    WORD PTR [rax+rax*1+0x0]
   34a78:	xor    ebp,ebp
   34a7a:	cmp    BYTE PTR [rip+0x4aab3],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34a81:	jne    34a1b <__sprintf_chk@plt+0x2a06b>
   34a83:	mov    QWORD PTR [rsp+0x10],r8
   34a88:	mov    QWORD PTR [rsp+0x8],rcx
   34a8d:	call   f170 <__sprintf_chk@plt+0x47c0>
   34a92:	mov    rcx,QWORD PTR [rsp+0x8]
   34a97:	mov    r8,QWORD PTR [rsp+0x10]
   34a9c:	mov    rbp,QWORD PTR [rip+0x4aa9d]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34aa3:	cmp    rbp,QWORD PTR [rip+0x4aad6]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34aaa:	jne    34a1b <__sprintf_chk@plt+0x2a06b>
   34ab0:	mov    BYTE PTR [rip+0x4aa7d],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34ab7:	xor    ebp,ebp
   34ab9:	jmp    34a1b <__sprintf_chk@plt+0x2a06b>
   34abe:	xchg   ax,ax
   34ac0:	xor    ebp,ebp
   34ac2:	cmp    BYTE PTR [rip+0x4aa6b],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34ac9:	jne    348d8 <__sprintf_chk@plt+0x29f28>
   34acf:	mov    QWORD PTR [rsp+0x10],r8
   34ad4:	mov    QWORD PTR [rsp+0x8],rcx
   34ad9:	call   f170 <__sprintf_chk@plt+0x47c0>
   34ade:	mov    rcx,QWORD PTR [rsp+0x8]
   34ae3:	mov    r8,QWORD PTR [rsp+0x10]
   34ae8:	mov    rbp,QWORD PTR [rip+0x4aa51]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34aef:	cmp    rbp,QWORD PTR [rip+0x4aa8a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34af6:	jne    348d8 <__sprintf_chk@plt+0x29f28>
   34afc:	mov    BYTE PTR [rip+0x4aa31],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34b03:	xor    ebp,ebp
   34b05:	jmp    348d8 <__sprintf_chk@plt+0x29f28>
   34b0a:	nop    WORD PTR [rax+rax*1+0x0]
   34b10:	xor    ebp,ebp
   34b12:	cmp    BYTE PTR [rip+0x4aa1b],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34b19:	jne    34927 <__sprintf_chk@plt+0x29f77>
   34b1f:	mov    QWORD PTR [rsp+0x10],r8
   34b24:	mov    QWORD PTR [rsp+0x8],rcx
   34b29:	call   f170 <__sprintf_chk@plt+0x47c0>
   34b2e:	mov    rcx,QWORD PTR [rsp+0x8]
   34b33:	mov    r8,QWORD PTR [rsp+0x10]
   34b38:	mov    rbp,QWORD PTR [rip+0x4aa01]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34b3f:	cmp    rbp,QWORD PTR [rip+0x4aa3a]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34b46:	jne    34927 <__sprintf_chk@plt+0x29f77>
   34b4c:	mov    BYTE PTR [rip+0x4a9e1],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34b53:	xor    ebp,ebp
   34b55:	jmp    34927 <__sprintf_chk@plt+0x29f77>
   34b5a:	xor    ebp,ebp
   34b5c:	cmp    BYTE PTR [rip+0x4a9d1],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34b63:	jne    3481b <__sprintf_chk@plt+0x29e6b>
   34b69:	mov    QWORD PTR [rsp+0x10],r8
   34b6e:	mov    QWORD PTR [rsp+0x8],rcx
   34b73:	call   f170 <__sprintf_chk@plt+0x47c0>
   34b78:	mov    rcx,QWORD PTR [rsp+0x8]
   34b7d:	mov    r8,QWORD PTR [rsp+0x10]
   34b82:	mov    rbp,QWORD PTR [rip+0x4a9b7]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34b89:	cmp    rbp,QWORD PTR [rip+0x4a9f0]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34b90:	jne    3481b <__sprintf_chk@plt+0x29e6b>
   34b96:	mov    BYTE PTR [rip+0x4a997],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34b9d:	xor    ebp,ebp
   34b9f:	jmp    3481b <__sprintf_chk@plt+0x29e6b>
   34ba4:	nop    DWORD PTR [rax+0x0]
   34ba8:	xor    ebp,ebp
   34baa:	cmp    BYTE PTR [rip+0x4a983],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34bb1:	jne    346dc <__sprintf_chk@plt+0x29d2c>
   34bb7:	call   f170 <__sprintf_chk@plt+0x47c0>
   34bbc:	mov    rbp,QWORD PTR [rip+0x4a97d]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34bc3:	cmp    rbp,QWORD PTR [rip+0x4a9b6]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34bca:	jne    346dc <__sprintf_chk@plt+0x29d2c>
   34bd0:	mov    BYTE PTR [rip+0x4a95d],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34bd7:	xor    ebp,ebp
   34bd9:	jmp    346dc <__sprintf_chk@plt+0x29d2c>
   34bde:	xchg   ax,ax
   34be0:	mov    rcx,r13
   34be3:	mov    eax,DWORD PTR [rip+0x4b0b7]        # 7fca0 <argp_program_version_hook@@Base+0xc8>
   34be9:	mov    rbp,QWORD PTR [rcx+0x18]
   34bed:	test   eax,eax
   34bef:	je     34332 <__sprintf_chk@plt+0x29982>
   34bf5:	cmp    QWORD PTR [rbp+0x178],0x0
   34bfd:	je     350e0 <__sprintf_chk@plt+0x2a730>
   34c03:	mov    rdi,rbp
   34c06:	xor    edx,edx
   34c08:	lea    rsi,[rip+0x31ebe]        # 66acd <_obstack_memory_used@@Base+0x19e4d>
   34c0f:	mov    r12,QWORD PTR [rbp+0x8]
   34c13:	mov    QWORD PTR [rsp+0x10],rcx
   34c18:	lea    r13,[rip+0x382c2]        # 6cee1 <_obstack_memory_used@@Base+0x20261>
   34c1f:	movabs r15,0xcccccccccccccccd
   34c29:	call   1c570 <__sprintf_chk@plt+0x11bc0>
   34c2e:	mov    rcx,QWORD PTR [rsp+0x10]
   34c33:	mov    QWORD PTR [rsp+0x38],0x0
   34c3c:	mov    QWORD PTR [rbp+0x8],rax
   34c40:	xor    eax,eax
   34c42:	lea    rbp,[rsp+0x54]
   34c47:	mov    rdi,QWORD PTR [rcx+0x18]
   34c4b:	cmp    QWORD PTR [rdi+0x130],0x0
   34c53:	mov    r14,rdi
   34c56:	mov    QWORD PTR [rdi+0x180],0x0
   34c61:	je     34f13 <__sprintf_chk@plt+0x2a563>
   34c67:	mov    r14,rcx
   34c6a:	nop    WORD PTR [rax+rax*1+0x0]
   34c70:	shl    rax,0x4
   34c74:	mov    rsi,rbp
   34c77:	mov    rcx,QWORD PTR [rbx+rax*1]
   34c7b:	mov    BYTE PTR [rsp+0x54],0x0
   34c80:	mov    rax,rcx
   34c83:	sub    rsi,0x1
   34c87:	mul    r15
   34c8a:	mov    rax,rcx
   34c8d:	shr    rdx,0x3
   34c91:	lea    r8,[rdx+rdx*4]
   34c95:	add    r8,r8
   34c98:	sub    rax,r8
   34c9b:	add    eax,0x30
   34c9e:	mov    BYTE PTR [rsi],al
   34ca0:	mov    rax,rcx
   34ca3:	mov    rcx,rdx
   34ca6:	cmp    rax,0x9
   34caa:	ja     34c80 <__sprintf_chk@plt+0x2a2d0>
   34cac:	add    rdi,0x168
   34cb3:	call   208c0 <__sprintf_chk@plt+0x15f10>
   34cb8:	mov    rax,QWORD PTR [r14+0x18]
   34cbc:	mov    rsi,r13
   34cbf:	lea    rdi,[rax+0x168]
   34cc6:	call   208c0 <__sprintf_chk@plt+0x15f10>
   34ccb:	mov    rax,QWORD PTR [rsp+0x38]
   34cd0:	mov    r8,rbp
   34cd3:	shl    rax,0x4
   34cd7:	mov    rcx,QWORD PTR [rbx+rax*1+0x8]
   34cdc:	mov    BYTE PTR [rsp+0x54],0x0
   34ce1:	nop    DWORD PTR [rax+0x0]
   34ce8:	mov    rax,rcx
   34ceb:	sub    r8,0x1
   34cef:	mul    r15
   34cf2:	mov    rax,rcx
   34cf5:	shr    rdx,0x3
   34cf9:	lea    rsi,[rdx+rdx*4]
   34cfd:	add    rsi,rsi
   34d00:	sub    rax,rsi
   34d03:	add    eax,0x30
   34d06:	mov    BYTE PTR [r8],al
   34d09:	mov    rax,rcx
   34d0c:	mov    rcx,rdx
   34d0f:	cmp    rax,0x9
   34d13:	ja     34ce8 <__sprintf_chk@plt+0x2a338>
   34d15:	mov    rax,QWORD PTR [r14+0x18]
   34d19:	mov    rsi,r8
   34d1c:	lea    rdi,[rax+0x168]
   34d23:	call   208c0 <__sprintf_chk@plt+0x15f10>
   34d28:	mov    rax,QWORD PTR [rsp+0x38]
   34d2d:	mov    rdi,QWORD PTR [r14+0x18]
   34d31:	add    rax,0x1
   34d35:	mov    QWORD PTR [rsp+0x38],rax
   34d3a:	cmp    rax,QWORD PTR [rdi+0x130]
   34d41:	jae    34f0d <__sprintf_chk@plt+0x2a55d>
   34d47:	test   rax,rax
   34d4a:	je     34c70 <__sprintf_chk@plt+0x2a2c0>
   34d50:	add    rdi,0x168
   34d57:	mov    rsi,r13
   34d5a:	call   208c0 <__sprintf_chk@plt+0x15f10>
   34d5f:	mov    rax,QWORD PTR [rsp+0x38]
   34d64:	mov    rdi,QWORD PTR [r14+0x18]
   34d68:	jmp    34c70 <__sprintf_chk@plt+0x2a2c0>
   34d6d:	mov    rcx,r13
   34d70:	mov    rax,QWORD PTR [rsi+0x118]
   34d77:	mov    rbx,QWORD PTR [rsi+0x88]
   34d7e:	mov    rdi,rsi
   34d81:	mov    QWORD PTR [rsp+0x18],rcx
   34d86:	mov    QWORD PTR [rsp+0x10],rsi
   34d8b:	mov    QWORD PTR [rsi+0x88],rax
   34d92:	call   11f50 <__sprintf_chk@plt+0x75a0>
   34d97:	mov    rsi,QWORD PTR [rsp+0x10]
   34d9c:	mov    rcx,QWORD PTR [rsp+0x18]
   34da1:	mov    rdx,QWORD PTR [rsp+0x8]
   34da6:	mov    QWORD PTR [rsi+0x88],rbx
   34dad:	mov    rdi,QWORD PTR [rcx+0x18]
   34db1:	mov    rsi,rax
   34db4:	call   10b40 <__sprintf_chk@plt+0x6190>
   34db9:	jmp    349af <__sprintf_chk@plt+0x29fff>
   34dbe:	xor    ebp,ebp
   34dc0:	cmp    BYTE PTR [rip+0x4a76d],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   34dc7:	jne    34624 <__sprintf_chk@plt+0x29c74>
   34dcd:	mov    QWORD PTR [rsp+0x10],r8
   34dd2:	call   f170 <__sprintf_chk@plt+0x47c0>
   34dd7:	mov    rcx,QWORD PTR [rsp+0x8]
   34ddc:	mov    r8,QWORD PTR [rsp+0x10]
   34de1:	mov    rbp,QWORD PTR [rip+0x4a758]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   34de8:	cmp    rbp,QWORD PTR [rip+0x4a791]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   34def:	je     35104 <__sprintf_chk@plt+0x2a754>
   34df5:	mov    rax,QWORD PTR [rcx+0x18]
   34df9:	jmp    34624 <__sprintf_chk@plt+0x29c74>
   34dfe:	mov    QWORD PTR [rsp+0x10],rdi
   34e03:	xor    edx,edx
   34e05:	mov    rsi,r13
   34e08:	lea    rdi,[rip+0x2f65f]        # 6446e <_obstack_memory_used@@Base+0x177ee>
   34e0f:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   34e14:	mov    rcx,QWORD PTR [rsp+0x10]
   34e19:	mov    rsi,QWORD PTR [rcx+0x18]
   34e1d:	cmp    QWORD PTR [rsi+0x178],0x0
   34e25:	jne    342f1 <__sprintf_chk@plt+0x29941>
   34e2b:	xor    edx,edx
   34e2d:	lea    rdi,[rip+0x2f625]        # 64459 <_obstack_memory_used@@Base+0x177d9>
   34e34:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   34e39:	mov    rbp,QWORD PTR [rip+0x4a8d8]        # 7f718 <obstack_alloc_failed_handler@@Base+0x8e0>
   34e40:	mov    rcx,QWORD PTR [rsp+0x10]
   34e45:	test   rbp,rbp
   34e48:	jne    34301 <__sprintf_chk@plt+0x29951>
   34e4e:	jmp    34be3 <__sprintf_chk@plt+0x2a233>
   34e53:	nop    DWORD PTR [rax+rax*1+0x0]
   34e58:	xor    edx,edx
   34e5a:	mov    rsi,r13
   34e5d:	mov    QWORD PTR [rsp+0x20],r8
   34e62:	lea    rdi,[rip+0x2f5ba]        # 64423 <_obstack_memory_used@@Base+0x177a3>
   34e69:	mov    QWORD PTR [rsp+0x18],rcx
   34e6e:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   34e73:	mov    rcx,QWORD PTR [rsp+0x18]
   34e78:	mov    r8,QWORD PTR [rsp+0x20]
   34e7d:	mov    r13,QWORD PTR [rcx+0x18]
   34e81:	cmp    QWORD PTR [r13+0x178],0x0
   34e89:	jne    34550 <__sprintf_chk@plt+0x29ba0>
   34e8f:	xor    edx,edx
   34e91:	mov    rsi,r13
   34e94:	lea    rdi,[rip+0x2f599]        # 64434 <_obstack_memory_used@@Base+0x177b4>
   34e9b:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   34ea0:	mov    rcx,QWORD PTR [rsp+0x18]
   34ea5:	mov    r8,QWORD PTR [rsp+0x20]
   34eaa:	mov    r13,QWORD PTR [rcx+0x18]
   34eae:	cmp    QWORD PTR [r13+0x178],0x0
   34eb6:	jne    34550 <__sprintf_chk@plt+0x29ba0>
   34ebc:	xor    edx,edx
   34ebe:	mov    rsi,r13
   34ec1:	lea    rdi,[rip+0x2f54b]        # 64413 <_obstack_memory_used@@Base+0x17793>
   34ec8:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   34ecd:	mov    rcx,QWORD PTR [rsp+0x18]
   34ed2:	mov    r8,QWORD PTR [rsp+0x20]
   34ed7:	mov    r13,QWORD PTR [rcx+0x18]
   34edb:	cmp    QWORD PTR [r13+0x178],0x0
   34ee3:	jne    34550 <__sprintf_chk@plt+0x29ba0>
   34ee9:	mov    rsi,r13
   34eec:	xor    edx,edx
   34eee:	lea    rdi,[rip+0x2f550]        # 64445 <_obstack_memory_used@@Base+0x177c5>
   34ef5:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   34efa:	mov    rcx,QWORD PTR [rsp+0x18]
   34eff:	mov    r8,QWORD PTR [rsp+0x20]
   34f04:	mov    r13,QWORD PTR [rcx+0x18]
   34f08:	jmp    34550 <__sprintf_chk@plt+0x29ba0>
   34f0d:	mov    rcx,r14
   34f10:	mov    r14,rdi
   34f13:	cmp    QWORD PTR [r14+0x178],0x0
   34f1b:	je     34f3f <__sprintf_chk@plt+0x2a58f>
   34f1d:	mov    rdi,QWORD PTR [r14+0x8]
   34f21:	mov    QWORD PTR [rsp+0x8],rcx
   34f26:	call   9ce0 <free@plt>
   34f2b:	mov    rcx,QWORD PTR [rsp+0x8]
   34f30:	mov    rax,QWORD PTR [rcx+0x18]
   34f34:	mov    QWORD PTR [rax+0x8],r12
   34f38:	xor    eax,eax
   34f3a:	jmp    349b4 <__sprintf_chk@plt+0x2a004>
   34f3f:	mov    rbx,QWORD PTR [r14+0x168]
   34f46:	test   rbx,rbx
   34f49:	je     3515f <__sprintf_chk@plt+0x2a7af>
   34f4f:	mov    rax,QWORD PTR [r14+0x180]
   34f56:	xor    r10d,r10d
   34f59:	lea    r8,[rsp+0x74]
   34f5e:	movabs rdi,0xcccccccccccccccd
   34f68:	lea    r11,[rax+0x11]
   34f6c:	mov    BYTE PTR [rsp+0x74],0x0
   34f71:	lea    rsi,[r11+r10*1]
   34f75:	mov    rbp,r8
   34f78:	nop    DWORD PTR [rax+rax*1+0x0]
   34f80:	mov    rax,rsi
   34f83:	sub    rbp,0x1
   34f87:	mul    rdi
   34f8a:	mov    rax,rsi
   34f8d:	shr    rdx,0x3
   34f91:	lea    r9,[rdx+rdx*4]
   34f95:	add    r9,r9
   34f98:	sub    rax,r9
   34f9b:	add    eax,0x30
   34f9e:	mov    BYTE PTR [rbp+0x0],al
   34fa1:	mov    rax,rsi
   34fa4:	mov    rsi,rdx
   34fa7:	cmp    rax,0x9
   34fab:	ja     34f80 <__sprintf_chk@plt+0x2a5d0>
   34fad:	mov    rax,r8
   34fb0:	sub    rax,rbp
   34fb3:	cmp    r10,rax
   34fb6:	je     34fbd <__sprintf_chk@plt+0x2a60d>
   34fb8:	mov    r10,rax
   34fbb:	jmp    34f6c <__sprintf_chk@plt+0x2a5bc>
   34fbd:	mov    rdx,QWORD PTR [rbx+0x20]
   34fc1:	mov    rax,QWORD PTR [rbx+0x18]
   34fc5:	lea    r15,[r10+0x10]
   34fc9:	mov    r13,rbx
   34fcc:	mov    rsi,rdx
   34fcf:	sub    rsi,rax
   34fd2:	cmp    r15,rsi
   34fd5:	ja     35116 <__sprintf_chk@plt+0x2a766>
   34fdb:	add    rax,r15
   34fde:	mov    QWORD PTR [rbx+0x18],rax
   34fe2:	mov    rax,QWORD PTR [r13+0x18]
   34fe6:	add    QWORD PTR [r14+0x170],r15
   34fed:	cmp    rax,rdx
   34ff0:	je     3513f <__sprintf_chk@plt+0x2a78f>
   34ff6:	lea    rdx,[rax+0x1]
   34ffa:	mov    QWORD PTR [rsp+0x10],rcx
   34fff:	movabs rbx,0x726170732e554e47
   35009:	mov    QWORD PTR [r13+0x18],rdx
   3500d:	mov    r13,r15
   35010:	mov    BYTE PTR [rax],0xa
   35013:	mov    rdx,QWORD PTR [r14+0x180]
   3501a:	not    r13
   3501d:	add    QWORD PTR [r14+0x170],0x1
   35025:	mov    rax,QWORD PTR [r14+0x168]
   3502c:	sub    r13,rdx
   3502f:	add    r13,QWORD PTR [rax+0x18]
   35033:	lea    rdi,[r13+r15*1+0x0]
   35038:	mov    rsi,r13
   3503b:	call   a630 <memmove@plt>
   35040:	mov    rsi,rbp
   35043:	mov    rdi,r13
   35046:	call   a030 <stpcpy@plt>
   3504b:	mov    rcx,QWORD PTR [rsp+0x10]
   35050:	mov    edx,0x7061
   35055:	mov    WORD PTR [rax+0xd],dx
   35059:	mov    BYTE PTR [rax],0x20
   3505c:	mov    QWORD PTR [rax+0x1],rbx
   35060:	mov    DWORD PTR [rax+0x9],0x6d2e6573
   35067:	mov    BYTE PTR [rax+0xf],0x3d
   3506b:	mov    rbx,QWORD PTR [rcx+0x18]
   3506f:	mov    rax,QWORD PTR [rbx+0x118]
   35076:	mov    rbp,QWORD PTR [rbx+0x88]
   3507d:	mov    rdi,rbx
   35080:	mov    QWORD PTR [rbx+0x88],rax
   35087:	call   11f50 <__sprintf_chk@plt+0x75a0>
   3508c:	mov    rcx,QWORD PTR [rsp+0x10]
   35091:	mov    rdx,QWORD PTR [rsp+0x8]
   35096:	mov    QWORD PTR [rbx+0x88],rbp
   3509d:	mov    rsi,rax
   350a0:	mov    rdi,QWORD PTR [rcx+0x18]
   350a4:	call   10b40 <__sprintf_chk@plt+0x6190>
   350a9:	test   r12,r12
   350ac:	je     349af <__sprintf_chk@plt+0x29fff>
   350b2:	mov    rcx,QWORD PTR [rsp+0x10]
   350b7:	mov    rax,QWORD PTR [rcx+0x18]
   350bb:	mov    QWORD PTR [rsp+0x8],rcx
   350c0:	mov    rdi,QWORD PTR [rax+0x8]
   350c4:	call   9ce0 <free@plt>
   350c9:	mov    rcx,QWORD PTR [rsp+0x8]
   350ce:	mov    rax,QWORD PTR [rcx+0x18]
   350d2:	mov    QWORD PTR [rax+0x8],r12
   350d6:	mov    eax,0x1
   350db:	jmp    349b4 <__sprintf_chk@plt+0x2a004>
   350e0:	mov    rsi,rbp
   350e3:	xor    edx,edx
   350e5:	mov    QWORD PTR [rsp+0x10],rcx
   350ea:	lea    rdi,[rip+0x2f322]        # 64413 <_obstack_memory_used@@Base+0x17793>
   350f1:	call   1d4d0 <__sprintf_chk@plt+0x12b20>
   350f6:	mov    rcx,QWORD PTR [rsp+0x10]
   350fb:	mov    rbp,QWORD PTR [rcx+0x18]
   350ff:	jmp    34c03 <__sprintf_chk@plt+0x2a253>
   35104:	mov    BYTE PTR [rip+0x4a429],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   3510b:	mov    rax,QWORD PTR [rcx+0x18]
   3510f:	xor    ebp,ebp
   35111:	jmp    34624 <__sprintf_chk@plt+0x29c74>
   35116:	mov    rsi,r15
   35119:	mov    rdi,rbx
   3511c:	mov    QWORD PTR [rsp+0x10],rcx
   35121:	call   4ca80 <_obstack_newchunk@@Base>
   35126:	mov    r13,QWORD PTR [r14+0x168]
   3512d:	mov    rax,QWORD PTR [rbx+0x18]
   35131:	mov    rcx,QWORD PTR [rsp+0x10]
   35136:	mov    rdx,QWORD PTR [r13+0x20]
   3513a:	jmp    34fdb <__sprintf_chk@plt+0x2a62b>
   3513f:	mov    esi,0x1
   35144:	mov    rdi,r13
   35147:	mov    QWORD PTR [rsp+0x10],rcx
   3514c:	call   4ca80 <_obstack_newchunk@@Base>
   35151:	mov    rax,QWORD PTR [r13+0x18]
   35155:	mov    rcx,QWORD PTR [rsp+0x10]
   3515a:	jmp    34ff6 <__sprintf_chk@plt+0x2a646>
   3515f:	mov    edi,0x58
   35164:	mov    QWORD PTR [rsp+0x10],rcx
   35169:	call   a4a0 <malloc@plt>
   3516e:	mov    rcx,QWORD PTR [rsp+0x10]
   35173:	test   rax,rax
   35176:	mov    rdi,rax
   35179:	je     351c0 <__sprintf_chk@plt+0x2a810>
   3517b:	mov    QWORD PTR [r14+0x168],rax
   35182:	lea    rax,[rip+0x10517]        # 456a0 <argp_usage@@Base+0x2320>
   35189:	xor    edx,edx
   3518b:	xor    esi,esi
   3518d:	mov    QWORD PTR [rdi+0x38],rax
   35191:	mov    rax,QWORD PTR [rip+0x46df0]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   35198:	and    BYTE PTR [rdi+0x50],0xfe
   3519c:	mov    QWORD PTR [rdi+0x40],rax
   351a0:	mov    QWORD PTR [rsp+0x10],rcx
   351a5:	call   4c9a0 <argp_usage@@Base+0x9620>
   351aa:	mov    rbx,QWORD PTR [r14+0x168]
   351b1:	mov    rcx,QWORD PTR [rsp+0x10]
   351b6:	jmp    34f4f <__sprintf_chk@plt+0x2a59f>
   351bb:	call   a0a0 <__stack_chk_fail@plt>
   351c0:	call   19130 <__sprintf_chk@plt+0xe780>
   351c5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   351d0:	endbr64 
   351d4:	push   r14
   351d6:	push   r13
   351d8:	push   r12
   351da:	push   rbp
   351db:	push   rbx
   351dc:	sub    rsp,0x60
   351e0:	mov    rax,QWORD PTR fs:0x28
   351e9:	mov    QWORD PTR [rsp+0x58],rax
   351ee:	xor    eax,eax
   351f0:	cmp    edi,0x94
   351f6:	je     35650 <__sprintf_chk@plt+0x2aca0>
   351fc:	jle    35378 <__sprintf_chk@plt+0x2a9c8>
   35202:	cmp    edi,0xcf
   35208:	je     35690 <__sprintf_chk@plt+0x2ace0>
   3520e:	jle    353d0 <__sprintf_chk@plt+0x2aa20>
   35214:	cmp    edi,0x2000004
   3521a:	jne    35460 <__sprintf_chk@plt+0x2aab0>
   35220:	lea    rax,[rip+0x10479]        # 456a0 <argp_usage@@Base+0x2320>
   35227:	mov    r13,rsp
   3522a:	xor    edx,edx
   3522c:	xor    esi,esi
   3522e:	mov    QWORD PTR [rsp+0x38],rax
   35233:	mov    rax,QWORD PTR [rip+0x46d4e]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   3523a:	mov    rdi,r13
   3523d:	and    BYTE PTR [rsp+0x50],0xfe
   35242:	mov    QWORD PTR [rsp+0x40],rax
   35247:	call   4c9a0 <argp_usage@@Base+0x9620>
   3524c:	mov    edx,0x5
   35251:	lea    rsi,[rip+0x330c8]        # 68320 <_obstack_memory_used@@Base+0x1b6a0>
   35258:	xor    edi,edi
   3525a:	call   a040 <dcgettext@plt>
   3525f:	mov    rdi,rax
   35262:	mov    rbp,rax
   35265:	call   a060 <strlen@plt>
   3526a:	mov    rdi,QWORD PTR [rsp+0x18]
   3526f:	mov    rbx,rax
   35272:	mov    rax,QWORD PTR [rsp+0x20]
   35277:	sub    rax,rdi
   3527a:	cmp    rbx,rax
   3527d:	ja     35700 <__sprintf_chk@plt+0x2ad50>
   35283:	mov    rdx,rbx
   35286:	mov    rsi,rbp
   35289:	call   a420 <memcpy@plt>
   3528e:	mov    rax,QWORD PTR [rsp+0x20]
   35293:	add    rbx,QWORD PTR [rsp+0x18]
   35298:	mov    QWORD PTR [rsp+0x18],rbx
   3529d:	sub    rax,rbx
   352a0:	cmp    rax,0x1
   352a4:	jbe    35760 <__sprintf_chk@plt+0x2adb0>
   352aa:	mov    edx,0xa0a
   352af:	lea    r12,[rip+0x45d32]        # 7afe8 <_obstack_memory_used@@Base+0x2e368>
   352b6:	lea    r14,[rip+0x31827]        # 66ae4 <_obstack_memory_used@@Base+0x19e64>
   352bd:	mov    WORD PTR [rbx],dx
   352c0:	mov    rax,QWORD PTR [rsp+0x18]
   352c5:	lea    rdx,[rax+0x2]
   352c9:	mov    QWORD PTR [rsp+0x18],rdx
   352ce:	jmp    3534b <__sprintf_chk@plt+0x2a99b>
   352d0:	mov    eax,0x2020
   352d5:	mov    rdi,r14
   352d8:	mov    WORD PTR [rdx],ax
   352db:	mov    rax,QWORD PTR [rsp+0x18]
   352e0:	lea    rbp,[rax+0x2]
   352e4:	mov    QWORD PTR [rsp+0x18],rbp
   352e9:	call   a060 <strlen@plt>
   352ee:	mov    rbx,rax
   352f1:	mov    rax,QWORD PTR [rsp+0x20]
   352f6:	sub    rax,rbp
   352f9:	cmp    rbx,rax
   352fc:	ja     354d8 <__sprintf_chk@plt+0x2ab28>
   35302:	mov    rdx,rbx
   35305:	mov    rsi,r14
   35308:	mov    rdi,rbp
   3530b:	call   a420 <memcpy@plt>
   35310:	mov    rax,QWORD PTR [rsp+0x18]
   35315:	add    rax,rbx
   35318:	mov    QWORD PTR [rsp+0x18],rax
   3531d:	cmp    rax,QWORD PTR [rsp+0x20]
   35322:	je     354f0 <__sprintf_chk@plt+0x2ab40>
   35328:	lea    rdx,[rax+0x1]
   3532c:	add    r12,0x8
   35330:	mov    QWORD PTR [rsp+0x18],rdx
   35335:	mov    BYTE PTR [rax],0xa
   35338:	mov    r14,QWORD PTR [r12-0x8]
   3533d:	test   r14,r14
   35340:	je     35510 <__sprintf_chk@plt+0x2ab60>
   35346:	mov    rdx,QWORD PTR [rsp+0x18]
   3534b:	mov    rax,QWORD PTR [rsp+0x20]
   35350:	sub    rax,rdx
   35353:	cmp    rax,0x1
   35357:	ja     352d0 <__sprintf_chk@plt+0x2a920>
   3535d:	mov    esi,0x2
   35362:	mov    rdi,r13
   35365:	call   4ca80 <_obstack_newchunk@@Base>
   3536a:	mov    rdx,QWORD PTR [rsp+0x18]
   3536f:	jmp    352d0 <__sprintf_chk@plt+0x2a920>
   35374:	nop    DWORD PTR [rax+0x0]
   35378:	cmp    edi,0x6a
   3537b:	je     356c8 <__sprintf_chk@plt+0x2ad18>
   35381:	jle    35420 <__sprintf_chk@plt+0x2aa70>
   35387:	cmp    edi,0x7a
   3538a:	jne    35460 <__sprintf_chk@plt+0x2aab0>
   35390:	xor    edi,edi
   35392:	mov    edx,0x5
   35397:	lea    rsi,[rip+0x3174e]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   3539e:	call   a040 <dcgettext@plt>
   353a3:	mov    rdi,rax
   353a6:	mov    rax,QWORD PTR [rsp+0x58]
   353ab:	sub    rax,QWORD PTR fs:0x28
   353b4:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   353ba:	lea    rsi,[rip+0x31ff0]        # 673b1 <_obstack_memory_used@@Base+0x1a731>
   353c1:	jmp    354c1 <__sprintf_chk@plt+0x2ab11>
   353c6:	cs nop WORD PTR [rax+rax*1+0x0]
   353d0:	cmp    edi,0x95
   353d6:	je     35490 <__sprintf_chk@plt+0x2aae0>
   353dc:	cmp    edi,0x96
   353e2:	jne    35460 <__sprintf_chk@plt+0x2aab0>
   353e4:	xor    edi,edi
   353e6:	mov    edx,0x5
   353eb:	lea    rsi,[rip+0x316fa]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   353f2:	call   a040 <dcgettext@plt>
   353f7:	mov    rdi,rax
   353fa:	mov    rax,QWORD PTR [rsp+0x58]
   353ff:	sub    rax,QWORD PTR fs:0x28
   35408:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   3540e:	lea    rsi,[rip+0x2e15c]        # 63571 <_obstack_memory_used@@Base+0x168f1>
   35415:	jmp    354c1 <__sprintf_chk@plt+0x2ab11>
   3541a:	nop    WORD PTR [rax+rax*1+0x0]
   35420:	cmp    edi,0x4a
   35423:	je     35490 <__sprintf_chk@plt+0x2aae0>
   35425:	cmp    edi,0x5a
   35428:	jne    35460 <__sprintf_chk@plt+0x2aab0>
   3542a:	xor    edi,edi
   3542c:	mov    edx,0x5
   35431:	lea    rsi,[rip+0x316b4]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   35438:	call   a040 <dcgettext@plt>
   3543d:	mov    rdi,rax
   35440:	mov    rax,QWORD PTR [rsp+0x58]
   35445:	sub    rax,QWORD PTR fs:0x28
   3544e:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   35454:	lea    rsi,[rip+0x31f2a]        # 67385 <_obstack_memory_used@@Base+0x1a705>
   3545b:	jmp    354c1 <__sprintf_chk@plt+0x2ab11>
   3545d:	nop    DWORD PTR [rax]
   35460:	mov    r12,rsi
   35463:	mov    rax,QWORD PTR [rsp+0x58]
   35468:	sub    rax,QWORD PTR fs:0x28
   35471:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   35477:	add    rsp,0x60
   3547b:	mov    rax,r12
   3547e:	pop    rbx
   3547f:	pop    rbp
   35480:	pop    r12
   35482:	pop    r13
   35484:	pop    r14
   35486:	ret    
   35487:	nop    WORD PTR [rax+rax*1+0x0]
   35490:	xor    edi,edi
   35492:	mov    edx,0x5
   35497:	lea    rsi,[rip+0x3164e]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   3549e:	call   a040 <dcgettext@plt>
   354a3:	mov    rdi,rax
   354a6:	mov    rax,QWORD PTR [rsp+0x58]
   354ab:	sub    rax,QWORD PTR fs:0x28
   354b4:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   354ba:	lea    rsi,[rip+0x324eb]        # 679ac <_obstack_memory_used@@Base+0x1ad2c>
   354c1:	add    rsp,0x60
   354c5:	xor    eax,eax
   354c7:	pop    rbx
   354c8:	pop    rbp
   354c9:	pop    r12
   354cb:	pop    r13
   354cd:	pop    r14
   354cf:	jmp    4bc20 <argp_usage@@Base+0x88a0>
   354d4:	nop    DWORD PTR [rax+0x0]
   354d8:	mov    rsi,rbx
   354db:	mov    rdi,r13
   354de:	call   4ca80 <_obstack_newchunk@@Base>
   354e3:	mov    rbp,QWORD PTR [rsp+0x18]
   354e8:	jmp    35302 <__sprintf_chk@plt+0x2a952>
   354ed:	nop    DWORD PTR [rax]
   354f0:	mov    esi,0x1
   354f5:	mov    rdi,r13
   354f8:	call   4ca80 <_obstack_newchunk@@Base>
   354fd:	mov    rax,QWORD PTR [rsp+0x18]
   35502:	jmp    35328 <__sprintf_chk@plt+0x2a978>
   35507:	nop    WORD PTR [rax+rax*1+0x0]
   35510:	mov    edx,0x5
   35515:	lea    rsi,[rip+0x315ee]        # 66b0a <_obstack_memory_used@@Base+0x19e8a>
   3551c:	xor    edi,edi
   3551e:	call   a040 <dcgettext@plt>
   35523:	mov    rdi,rax
   35526:	mov    rbp,rax
   35529:	call   a060 <strlen@plt>
   3552e:	mov    rdi,QWORD PTR [rsp+0x18]
   35533:	mov    rbx,rax
   35536:	mov    rax,QWORD PTR [rsp+0x20]
   3553b:	sub    rax,rdi
   3553e:	cmp    rbx,rax
   35541:	ja     35720 <__sprintf_chk@plt+0x2ad70>
   35547:	mov    rdx,rbx
   3554a:	mov    rsi,rbp
   3554d:	call   a420 <memcpy@plt>
   35552:	add    QWORD PTR [rsp+0x18],rbx
   35557:	call   2da60 <__sprintf_chk@plt+0x230b0>
   3555c:	mov    rdi,rax
   3555f:	mov    rbp,rax
   35562:	call   a060 <strlen@plt>
   35567:	mov    rdi,QWORD PTR [rsp+0x18]
   3556c:	mov    rbx,rax
   3556f:	mov    rax,QWORD PTR [rsp+0x20]
   35574:	sub    rax,rdi
   35577:	cmp    rbx,rax
   3557a:	ja     35738 <__sprintf_chk@plt+0x2ad88>
   35580:	mov    rdx,rbx
   35583:	mov    rsi,rbp
   35586:	call   a420 <memcpy@plt>
   3558b:	mov    rax,QWORD PTR [rsp+0x18]
   35590:	add    rax,rbx
   35593:	mov    QWORD PTR [rsp+0x18],rax
   35598:	cmp    rax,QWORD PTR [rsp+0x20]
   3559d:	je     35780 <__sprintf_chk@plt+0x2add0>
   355a3:	lea    rdx,[rax+0x1]
   355a7:	mov    QWORD PTR [rsp+0x18],rdx
   355ac:	mov    BYTE PTR [rax],0xa
   355af:	mov    rax,QWORD PTR [rsp+0x18]
   355b4:	cmp    QWORD PTR [rsp+0x20],rax
   355b9:	je     357a0 <__sprintf_chk@plt+0x2adf0>
   355bf:	lea    rdx,[rax+0x1]
   355c3:	mov    QWORD PTR [rsp+0x18],rdx
   355c8:	mov    BYTE PTR [rax],0x0
   355cb:	mov    rbp,QWORD PTR [rsp+0x10]
   355d0:	mov    rax,QWORD PTR [rsp+0x18]
   355d5:	cmp    rax,rbp
   355d8:	je     35750 <__sprintf_chk@plt+0x2ada0>
   355de:	mov    rdx,QWORD PTR [rsp+0x30]
   355e3:	mov    rdi,rbp
   355e6:	add    rax,rdx
   355e9:	not    rdx
   355ec:	and    rax,rdx
   355ef:	mov    rdx,QWORD PTR [rsp+0x20]
   355f4:	mov    rsi,rax
   355f7:	sub    rsi,QWORD PTR [rsp+0x8]
   355fc:	mov    rcx,rdx
   355ff:	sub    rcx,QWORD PTR [rsp+0x8]
   35604:	cmp    rsi,rcx
   35607:	cmovbe rdx,rax
   3560b:	mov    QWORD PTR [rsp+0x18],rdx
   35610:	mov    QWORD PTR [rsp+0x10],rdx
   35615:	call   a060 <strlen@plt>
   3561a:	lea    r12,[rax+0x1]
   3561e:	mov    rdi,r12
   35621:	call   a4a0 <malloc@plt>
   35626:	mov    rdi,rax
   35629:	test   rax,rax
   3562c:	je     357b7 <__sprintf_chk@plt+0x2ae07>
   35632:	mov    rdx,r12
   35635:	mov    rsi,rbp
   35638:	call   a420 <memcpy@plt>
   3563d:	xor    esi,esi
   3563f:	mov    rdi,r13
   35642:	mov    r12,rax
   35645:	call   4cbf0 <_obstack_free@@Base>
   3564a:	jmp    35463 <__sprintf_chk@plt+0x2aab3>
   3564f:	nop
   35650:	xor    edi,edi
   35652:	mov    edx,0x5
   35657:	lea    rsi,[rip+0x3148e]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   3565e:	call   a040 <dcgettext@plt>
   35663:	mov    rdi,rax
   35666:	mov    rax,QWORD PTR [rsp+0x58]
   3566b:	sub    rax,QWORD PTR fs:0x28
   35674:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   3567a:	lea    rsi,[rip+0x2dedf]        # 63560 <_obstack_memory_used@@Base+0x168e0>
   35681:	jmp    354c1 <__sprintf_chk@plt+0x2ab11>
   35686:	cs nop WORD PTR [rax+rax*1+0x0]
   35690:	xor    edi,edi
   35692:	mov    edx,0x5
   35697:	lea    rsi,[rip+0x3144e]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   3569e:	call   a040 <dcgettext@plt>
   356a3:	mov    rdi,rax
   356a6:	mov    rax,QWORD PTR [rsp+0x58]
   356ab:	sub    rax,QWORD PTR fs:0x28
   356b4:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   356b6:	lea    rsi,[rip+0x2debb]        # 63578 <_obstack_memory_used@@Base+0x168f8>
   356bd:	jmp    354c1 <__sprintf_chk@plt+0x2ab11>
   356c2:	nop    WORD PTR [rax+rax*1+0x0]
   356c8:	xor    edi,edi
   356ca:	mov    edx,0x5
   356cf:	lea    rsi,[rip+0x31416]        # 66aec <_obstack_memory_used@@Base+0x19e6c>
   356d6:	call   a040 <dcgettext@plt>
   356db:	mov    rdi,rax
   356de:	mov    rax,QWORD PTR [rsp+0x58]
   356e3:	sub    rax,QWORD PTR fs:0x28
   356ec:	jne    35715 <__sprintf_chk@plt+0x2ad65>
   356ee:	lea    rsi,[rip+0x2de63]        # 63558 <_obstack_memory_used@@Base+0x168d8>
   356f5:	jmp    354c1 <__sprintf_chk@plt+0x2ab11>
   356fa:	nop    WORD PTR [rax+rax*1+0x0]
   35700:	mov    rdi,r13
   35703:	mov    rsi,rbx
   35706:	call   4ca80 <_obstack_newchunk@@Base>
   3570b:	mov    rdi,QWORD PTR [rsp+0x18]
   35710:	jmp    35283 <__sprintf_chk@plt+0x2a8d3>
   35715:	call   a0a0 <__stack_chk_fail@plt>
   3571a:	nop    WORD PTR [rax+rax*1+0x0]
   35720:	mov    rdi,r13
   35723:	mov    rsi,rbx
   35726:	call   4ca80 <_obstack_newchunk@@Base>
   3572b:	mov    rdi,QWORD PTR [rsp+0x18]
   35730:	jmp    35547 <__sprintf_chk@plt+0x2ab97>
   35735:	nop    DWORD PTR [rax]
   35738:	mov    rdi,r13
   3573b:	mov    rsi,rbx
   3573e:	call   4ca80 <_obstack_newchunk@@Base>
   35743:	mov    rdi,QWORD PTR [rsp+0x18]
   35748:	jmp    35580 <__sprintf_chk@plt+0x2abd0>
   3574d:	nop    DWORD PTR [rax]
   35750:	or     BYTE PTR [rsp+0x50],0x2
   35755:	jmp    355de <__sprintf_chk@plt+0x2ac2e>
   3575a:	nop    WORD PTR [rax+rax*1+0x0]
   35760:	mov    esi,0x2
   35765:	mov    rdi,r13
   35768:	call   4ca80 <_obstack_newchunk@@Base>
   3576d:	mov    rbx,QWORD PTR [rsp+0x18]
   35772:	jmp    352aa <__sprintf_chk@plt+0x2a8fa>
   35777:	nop    WORD PTR [rax+rax*1+0x0]
   35780:	mov    esi,0x1
   35785:	mov    rdi,r13
   35788:	call   4ca80 <_obstack_newchunk@@Base>
   3578d:	mov    rax,QWORD PTR [rsp+0x18]
   35792:	jmp    355a3 <__sprintf_chk@plt+0x2abf3>
   35797:	nop    WORD PTR [rax+rax*1+0x0]
   357a0:	mov    esi,0x1
   357a5:	mov    rdi,r13
   357a8:	call   4ca80 <_obstack_newchunk@@Base>
   357ad:	mov    rax,QWORD PTR [rsp+0x18]
   357b2:	jmp    355bf <__sprintf_chk@plt+0x2ac0f>
   357b7:	call   19130 <__sprintf_chk@plt+0xe780>
   357bc:	nop    DWORD PTR [rax+0x0]
   357c0:	endbr64 
   357c4:	push   r15
   357c6:	push   r14
   357c8:	push   r13
   357ca:	push   r12
   357cc:	mov    r12,rdx
   357cf:	push   rbp
   357d0:	push   rbx
   357d1:	mov    ebx,edi
   357d3:	sub    rsp,0x2e8
   357da:	mov    r15,QWORD PTR [rdx+0x28]
   357de:	mov    rax,QWORD PTR fs:0x28
   357e7:	mov    QWORD PTR [rsp+0x2d8],rax
   357ef:	xor    eax,eax
   357f1:	cmp    edi,0xcf
   357f7:	jg     35828 <__sprintf_chk@plt+0x2ae78>
   357f9:	test   edi,edi
   357fb:	js     36ff0 <__sprintf_chk@plt+0x2c640>
   35801:	cmp    edi,0xcf
   35807:	ja     358d0 <__sprintf_chk@plt+0x2af20>
   3580d:	lea    rdx,[rip+0x34c14]        # 6a428 <_obstack_memory_used@@Base+0x1d7a8>
   35814:	mov    eax,edi
   35816:	mov    rbp,rsi
   35819:	movsxd rax,DWORD PTR [rdx+rax*4]
   3581d:	add    rax,rdx
   35820:	notrack jmp rax
   35823:	nop    DWORD PTR [rax+rax*1+0x0]
   35828:	cmp    edi,0x1000003
   3582e:	jne    35888 <__sprintf_chk@plt+0x2aed8>
   35830:	mov    rax,QWORD PTR [rdx]
   35833:	mov    rax,QWORD PTR [rax+0x20]
   35837:	test   rax,rax
   3583a:	je     35880 <__sprintf_chk@plt+0x2aed0>
   3583c:	cmp    QWORD PTR [rax],0x0
   35840:	je     35880 <__sprintf_chk@plt+0x2aed0>
   35842:	mov    edx,0x20
   35847:	xor    eax,eax
   35849:	jmp    35855 <__sprintf_chk@plt+0x2aea5>
   3584b:	nop    DWORD PTR [rax+rax*1+0x0]
   35850:	mov    r15,QWORD PTR [r12+0x28]
   35855:	mov    rcx,QWORD PTR [r12+0x30]
   3585a:	mov    QWORD PTR [rcx+rax*1],r15
   3585e:	mov    rcx,QWORD PTR [r12]
   35862:	add    rax,0x8
   35866:	mov    rcx,QWORD PTR [rcx+0x20]
   3586a:	mov    rcx,QWORD PTR [rcx+rdx*1]
   3586e:	add    rdx,0x20
   35872:	test   rcx,rcx
   35875:	jne    35850 <__sprintf_chk@plt+0x2aea0>
   35877:	nop    WORD PTR [rax+rax*1+0x0]
   35880:	xor    r12d,r12d
   35883:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35885:	nop    DWORD PTR [rax]
   35888:	cmp    edi,0x1000005
   3588e:	je     37ae9 <__sprintf_chk@plt+0x2d139>
   35894:	mov    r12d,0x7
   3589a:	mov    rax,QWORD PTR [rsp+0x2d8]
   358a2:	sub    rax,QWORD PTR fs:0x28
   358ab:	jne    37b27 <__sprintf_chk@plt+0x2d177>
   358b1:	add    rsp,0x2e8
   358b8:	mov    eax,r12d
   358bb:	pop    rbx
   358bc:	pop    rbp
   358bd:	pop    r12
   358bf:	pop    r13
   358c1:	pop    r14
   358c3:	pop    r15
   358c5:	ret    
   358c6:	cs nop WORD PTR [rax+rax*1+0x0]
   358d0:	mov    r12d,0x7
   358d6:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   358d8:	mov    edx,0x5
   358dd:	lea    rsi,[rip+0x32a74]        # 68358 <_obstack_memory_used@@Base+0x1b6d8>
   358e4:	xor    edi,edi
   358e6:	call   a040 <dcgettext@plt>
   358eb:	mov    rdi,r12
   358ee:	mov    rsi,rax
   358f1:	xor    eax,eax
   358f3:	call   41e00 <argp_error@@Base>
   358f8:	mov    edi,0x40
   358fd:	call   a820 <exit@plt>
   35902:	nop    WORD PTR [rax+rax*1+0x0]
   35908:	mov    rsi,QWORD PTR [r15]
   3590b:	lea    rdi,[rip+0x3209a]        # 679ac <_obstack_memory_used@@Base+0x1ad2c>
   35912:	xor    r12d,r12d
   35915:	call   2db80 <__sprintf_chk@plt+0x231d0>
   3591a:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3591f:	lea    rdi,[rip+0x319d3]        # 672f9 <_obstack_memory_used@@Base+0x1a679>
   35926:	call   2d930 <__sprintf_chk@plt+0x22f80>
   3592b:	lea    rdx,[rip+0x4a2ae]        # 7fbe0 <argp_program_version_hook@@Base+0x8>
   35932:	cmp    ebx,0xce
   35938:	mov    DWORD PTR [rip+0x49596],0x1        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   35942:	lea    rax,[rdx+0x18]
   35946:	cmove  rax,rdx
   3594a:	mov    rbx,rax
   3594d:	mov    rax,QWORD PTR [rax+0x10]
   35951:	mov    rcx,QWORD PTR [rbx+0x8]
   35955:	mov    rdi,QWORD PTR [rbx]
   35958:	cmp    rax,rcx
   3595b:	je     3770c <__sprintf_chk@plt+0x2cd5c>
   35961:	lea    rdx,[rax+0x1]
   35965:	xor    r12d,r12d
   35968:	mov    QWORD PTR [rbx+0x10],rdx
   3596c:	mov    QWORD PTR [rdi+rax*8],rbp
   35970:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35975:	mov    rsi,QWORD PTR [r15]
   35978:	mov    edi,0x2
   3597d:	call   2dae0 <__sprintf_chk@plt+0x23130>
   35982:	mov    QWORD PTR [rip+0x4962f],rbp        # 7efb8 <obstack_alloc_failed_handler@@Base+0x180>
   35989:	mov    DWORD PTR [rip+0x49ded],0x1        # 7f780 <obstack_alloc_failed_handler@@Base+0x948>
   35993:	mov    BYTE PTR [rip+0x4954a],0x1        # 7eee4 <obstack_alloc_failed_handler@@Base+0xac>
   3599a:	xor    r12d,r12d
   3599d:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   359a2:	movzx  ecx,BYTE PTR [rsi]
   359a5:	lea    rdx,[rip+0x495dc]        # 7ef88 <obstack_alloc_failed_handler@@Base+0x150>
   359ac:	test   cl,cl
   359ae:	je     35880 <__sprintf_chk@plt+0x2aed0>
   359b4:	nop    DWORD PTR [rax+0x0]
   359b8:	mov    eax,ecx
   359ba:	and    ecx,0x1f
   359bd:	add    rbp,0x1
   359c1:	shr    al,0x5
   359c4:	movzx  eax,al
   359c7:	lea    rsi,[rdx+rax*4]
   359cb:	mov    edi,DWORD PTR [rsi]
   359cd:	mov    eax,edi
   359cf:	shr    eax,cl
   359d1:	not    eax
   359d3:	and    eax,0x1
   359d6:	shl    eax,cl
   359d8:	xor    eax,edi
   359da:	mov    DWORD PTR [rsi],eax
   359dc:	movzx  ecx,BYTE PTR [rbp+0x0]
   359e0:	test   cl,cl
   359e2:	jne    359b8 <__sprintf_chk@plt+0x2b008>
   359e4:	jmp    35880 <__sprintf_chk@plt+0x2aed0>
   359e9:	lea    rdi,[rip+0x31909]        # 672f9 <_obstack_memory_used@@Base+0x1a679>
   359f0:	xor    r12d,r12d
   359f3:	call   2d930 <__sprintf_chk@plt+0x22f80>
   359f8:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   359fd:	lea    rax,[rip+0xfc9c]        # 456a0 <argp_usage@@Base+0x2320>
   35a04:	xor    edx,edx
   35a06:	xor    esi,esi
   35a08:	and    BYTE PTR [rsp+0xa0],0xfe
   35a10:	mov    QWORD PTR [rsp+0x88],rax
   35a18:	mov    rax,QWORD PTR [rip+0x46569]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   35a1f:	lea    r13,[rip+0x374bb]        # 6cee1 <_obstack_memory_used@@Base+0x20261>
   35a26:	mov    QWORD PTR [rsp+0x90],rax
   35a2e:	lea    rax,[rsp+0x50]
   35a33:	mov    rdi,rax
   35a36:	mov    QWORD PTR [rsp+0x10],rax
   35a3b:	call   4c9a0 <argp_usage@@Base+0x9620>
   35a40:	lea    rax,[rsp+0x40]
   35a45:	mov    QWORD PTR [rsp],r15
   35a49:	mov    QWORD PTR [rsp+0x18],rax
   35a4e:	lea    rax,[rsp+0xd0]
   35a56:	mov    QWORD PTR [rsp+0x20],rax
   35a5b:	cmp    BYTE PTR [rbp+0x0],0x0
   35a5f:	mov    r15,QWORD PTR [rsp+0x68]
   35a64:	mov    r14,QWORD PTR [rsp+0x70]
   35a69:	je     37b2c <__sprintf_chk@plt+0x2d17c>
   35a6f:	mov    rsi,r13
   35a72:	mov    rdi,rbp
   35a75:	sub    r14,r15
   35a78:	call   a270 <strcspn@plt>
   35a7d:	mov    esi,0x3d
   35a82:	mov    rdi,rbp
   35a85:	mov    rdx,rax
   35a88:	mov    r12,rax
   35a8b:	call   a280 <memchr@plt>
   35a90:	mov    rbx,rax
   35a93:	test   rax,rax
   35a96:	jne    36bc0 <__sprintf_chk@plt+0x2c210>
   35a9c:	cmp    r12,r14
   35a9f:	ja     36c98 <__sprintf_chk@plt+0x2c2e8>
   35aa5:	mov    rdi,r15
   35aa8:	mov    rdx,r12
   35aab:	mov    rsi,rbp
   35aae:	call   a420 <memcpy@plt>
   35ab3:	mov    r15,QWORD PTR [rsp+0x68]
   35ab8:	add    r15,r12
   35abb:	mov    QWORD PTR [rsp+0x68],r15
   35ac0:	add    rbp,r12
   35ac3:	movzx  eax,BYTE PTR [rbp+0x0]
   35ac7:	test   al,al
   35ac9:	jne    3751e <__sprintf_chk@plt+0x2cb6e>
   35acf:	mov    r14,r15
   35ad2:	mov    r12,QWORD PTR [rsp+0x70]
   35ad7:	mov    r15,QWORD PTR [rsp]
   35adb:	cmp    r12,r14
   35ade:	je     378fb <__sprintf_chk@plt+0x2cf4b>
   35ae4:	lea    rax,[r14+0x1]
   35ae8:	mov    QWORD PTR [rsp+0x68],rax
   35aed:	mov    BYTE PTR [r14],0x0
   35af1:	mov    rbp,QWORD PTR [rsp+0x60]
   35af6:	mov    rax,QWORD PTR [rsp+0x68]
   35afb:	cmp    rbp,rax
   35afe:	je     377f9 <__sprintf_chk@plt+0x2ce49>
   35b04:	mov    rdx,QWORD PTR [rsp+0x80]
   35b0c:	mov    rdi,rbp
   35b0f:	add    rax,rdx
   35b12:	not    rdx
   35b15:	and    rax,rdx
   35b18:	mov    rdx,QWORD PTR [rsp+0x70]
   35b1d:	mov    rsi,rax
   35b20:	sub    rsi,QWORD PTR [rsp+0x58]
   35b25:	mov    rcx,rdx
   35b28:	sub    rcx,QWORD PTR [rsp+0x58]
   35b2d:	cmp    rsi,rcx
   35b30:	cmovbe rdx,rax
   35b34:	mov    QWORD PTR [rsp+0x68],rdx
   35b39:	mov    QWORD PTR [rsp+0x60],rdx
   35b3e:	call   a060 <strlen@plt>
   35b43:	lea    r12,[rax+0x1]
   35b47:	mov    rdi,r12
   35b4a:	call   a4a0 <malloc@plt>
   35b4f:	mov    rdi,rax
   35b52:	test   rax,rax
   35b55:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   35b5b:	mov    rdx,r12
   35b5e:	mov    rsi,rbp
   35b61:	lea    rbx,[rip+0x37379]        # 6cee1 <_obstack_memory_used@@Base+0x20261>
   35b68:	call   a420 <memcpy@plt>
   35b6d:	mov    rdi,QWORD PTR [rsp+0x10]
   35b72:	xor    esi,esi
   35b74:	mov    r12,rax
   35b77:	call   4cbf0 <_obstack_free@@Base>
   35b7c:	mov    BYTE PTR [r15+0x11],0x1
   35b81:	mov    rsi,rbx
   35b84:	mov    rdi,r12
   35b87:	call   a6f0 <strtok@plt>
   35b8c:	mov    rbp,rax
   35b8f:	test   rax,rax
   35b92:	je     35bcb <__sprintf_chk@plt+0x2b21b>
   35b94:	nop    DWORD PTR [rax+0x0]
   35b98:	mov    esi,0x3d
   35b9d:	mov    rdi,rbp
   35ba0:	call   a0f0 <strchr@plt>
   35ba5:	mov    rsi,rax
   35ba8:	test   rax,rax
   35bab:	je     37c3b <__sprintf_chk@plt+0x2d28b>
   35bb1:	mov    rdi,rbp
   35bb4:	call   1c170 <__sprintf_chk@plt+0x117c0>
   35bb9:	mov    rsi,rbx
   35bbc:	xor    edi,edi
   35bbe:	call   a6f0 <strtok@plt>
   35bc3:	mov    rbp,rax
   35bc6:	test   rax,rax
   35bc9:	jne    35b98 <__sprintf_chk@plt+0x2b1e8>
   35bcb:	mov    rdi,r12
   35bce:	xor    r12d,r12d
   35bd1:	call   9ce0 <free@plt>
   35bd6:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35bdb:	mov    rsi,QWORD PTR [r15]
   35bde:	mov    edi,0x2
   35be3:	xor    r12d,r12d
   35be6:	call   2dc00 <__sprintf_chk@plt+0x23250>
   35beb:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35bf0:	mov    rsi,QWORD PTR [r15]
   35bf3:	xor    edi,edi
   35bf5:	xor    r12d,r12d
   35bf8:	call   2dc00 <__sprintf_chk@plt+0x23250>
   35bfd:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35c02:	mov    rsi,QWORD PTR [r15]
   35c05:	mov    edi,0x7
   35c0a:	xor    r12d,r12d
   35c0d:	call   2dae0 <__sprintf_chk@plt+0x23130>
   35c12:	mov    BYTE PTR [rip+0x49fff],0x1        # 7fc18 <argp_program_version_hook@@Base+0x40>
   35c19:	mov    QWORD PTR [rip+0x49ff0],rbp        # 7fc10 <argp_program_version_hook@@Base+0x38>
   35c20:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35c25:	mov    BYTE PTR [rip+0x49b44],0x1        # 7f770 <obstack_alloc_failed_handler@@Base+0x938>
   35c2c:	xor    r12d,r12d
   35c2f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35c34:	lea    rcx,[rip+0x2e63a]        # 64275 <_obstack_memory_used@@Base+0x175f5>
   35c3b:	lea    rdx,[rip+0xfffffffffffed5ae]        # 231f0 <__sprintf_chk@plt+0x18840>
   35c42:	xor    r12d,r12d
   35c45:	lea    rdi,[rip+0x4926c]        # 7eeb8 <obstack_alloc_failed_handler@@Base+0x80>
   35c4c:	call   5a960 <_obstack_memory_used@@Base+0xdce0>
   35c51:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35c56:	lea    rsi,[rip+0x4924b]        # 7eea8 <obstack_alloc_failed_handler@@Base+0x70>
   35c5d:	mov    rdi,rbp
   35c60:	call   584c0 <_obstack_memory_used@@Base+0xb840>
   35c65:	cmp    rax,0xffffffffffffffff
   35c69:	je     376de <__sprintf_chk@plt+0x2cd2e>
   35c6f:	mov    DWORD PTR [rip+0x4923b],eax        # 7eeb0 <obstack_alloc_failed_handler@@Base+0x78>
   35c75:	xor    r12d,r12d
   35c78:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35c7d:	lea    rdi,[rip+0x3160d]        # 67291 <_obstack_memory_used@@Base+0x1a611>
   35c84:	xor    r12d,r12d
   35c87:	call   2d930 <__sprintf_chk@plt+0x22f80>
   35c8c:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35c91:	movzx  ecx,BYTE PTR [rsi]
   35c94:	lea    rdx,[rip+0x492ed]        # 7ef88 <obstack_alloc_failed_handler@@Base+0x150>
   35c9b:	test   cl,cl
   35c9d:	je     35880 <__sprintf_chk@plt+0x2aed0>
   35ca3:	nop    DWORD PTR [rax+rax*1+0x0]
   35ca8:	mov    eax,ecx
   35caa:	and    ecx,0x1f
   35cad:	add    rbp,0x1
   35cb1:	shr    al,0x5
   35cb4:	movzx  eax,al
   35cb7:	lea    rsi,[rdx+rax*4]
   35cbb:	mov    edi,DWORD PTR [rsi]
   35cbd:	mov    eax,edi
   35cbf:	shr    eax,cl
   35cc1:	and    eax,0x1
   35cc4:	shl    eax,cl
   35cc6:	xor    eax,edi
   35cc8:	mov    DWORD PTR [rsi],eax
   35cca:	movzx  ecx,BYTE PTR [rbp+0x0]
   35cce:	test   cl,cl
   35cd0:	jne    35ca8 <__sprintf_chk@plt+0x2b2f8>
   35cd2:	jmp    35880 <__sprintf_chk@plt+0x2aed0>
   35cd7:	mov    rsi,QWORD PTR [r15]
   35cda:	mov    edi,0x1
   35cdf:	xor    r12d,r12d
   35ce2:	call   2dc00 <__sprintf_chk@plt+0x23250>
   35ce7:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35cec:	mov    BYTE PTR [rip+0x49a2f],0x0        # 7f722 <obstack_alloc_failed_handler@@Base+0x8ea>
   35cf3:	xor    r12d,r12d
   35cf6:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35cfb:	mov    BYTE PTR [rip+0x49a1f],0x0        # 7f721 <obstack_alloc_failed_handler@@Base+0x8e9>
   35d02:	xor    r12d,r12d
   35d05:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d0a:	mov    BYTE PTR [rip+0x49c43],0x0        # 7f954 <obstack_alloc_failed_handler@@Base+0xb1c>
   35d11:	xor    r12d,r12d
   35d14:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d19:	mov    BYTE PTR [r15+0x12],0x0
   35d1e:	xor    r12d,r12d
   35d21:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d26:	mov    DWORD PTR [rip+0x491b0],0xffffffff        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   35d30:	xor    r12d,r12d
   35d33:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d38:	cmp    QWORD PTR [rip+0x49a58],0x0        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   35d40:	jns    37e63 <__sprintf_chk@plt+0x2d4b3>
   35d46:	lea    rsi,[rip+0x30dd7]        # 66b24 <_obstack_memory_used@@Base+0x19ea4>
   35d4d:	lea    rcx,[rip+0x49a3c]        # 7f790 <obstack_alloc_failed_handler@@Base+0x958>
   35d54:	mov    rdx,rbp
   35d57:	mov    rdi,r15
   35d5a:	xor    r12d,r12d
   35d5d:	call   2dcb0 <__sprintf_chk@plt+0x23300>
   35d62:	mov    rsi,QWORD PTR [r15]
   35d65:	mov    edi,0x3
   35d6a:	call   2dae0 <__sprintf_chk@plt+0x23130>
   35d6f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d74:	mov    DWORD PTR [rip+0x4915e],0xffffffff        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   35d7e:	xor    r12d,r12d
   35d81:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d86:	mov    BYTE PTR [rip+0x49183],0x1        # 7ef10 <obstack_alloc_failed_handler@@Base+0xd8>
   35d8d:	xor    r12d,r12d
   35d90:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35d95:	mov    DWORD PTR [rip+0x49139],0xffffffff        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   35d9f:	xor    r12d,r12d
   35da2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35da7:	mov    rsi,QWORD PTR [r15]
   35daa:	mov    edi,0x1
   35daf:	call   2dae0 <__sprintf_chk@plt+0x23130>
   35db4:	test   rbp,rbp
   35db7:	je     3767e <__sprintf_chk@plt+0x2ccce>
   35dbd:	xor    esi,esi
   35dbf:	lea    rdx,[rsp+0x50]
   35dc4:	lea    rcx,[rip+0x35d85]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   35dcb:	mov    rdi,rbp
   35dce:	call   58000 <_obstack_memory_used@@Base+0xb380>
   35dd3:	test   eax,eax
   35dd5:	jne    37e82 <__sprintf_chk@plt+0x2d4d2>
   35ddb:	mov    rax,QWORD PTR [rsp+0x50]
   35de0:	xor    r12d,r12d
   35de3:	mov    QWORD PTR [rip+0x49b3e],rax        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   35dea:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35def:	mov    DWORD PTR [rip+0x49953],0xffffffff        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
   35df9:	xor    r12d,r12d
   35dfc:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35e01:	mov    DWORD PTR [rip+0x49945],0xffffffff        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   35e0b:	xor    r12d,r12d
   35e0e:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35e13:	mov    DWORD PTR [rip+0x49753],0x0        # 7f570 <obstack_alloc_failed_handler@@Base+0x738>
   35e1d:	xor    r12d,r12d
   35e20:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35e25:	mov    rdx,rsi
   35e28:	lea    rcx,[rip+0x490c1]        # 7eef0 <obstack_alloc_failed_handler@@Base+0xb8>
   35e2f:	mov    rdi,r15
   35e32:	lea    rsi,[rip+0x30d40]        # 66b79 <_obstack_memory_used@@Base+0x19ef9>
   35e39:	call   2dcb0 <__sprintf_chk@plt+0x23300>
   35e3e:	mov    edx,DWORD PTR [rip+0x490bc]        # 7ef00 <obstack_alloc_failed_handler@@Base+0xc8>
   35e44:	test   edx,edx
   35e46:	jne    35880 <__sprintf_chk@plt+0x2aed0>
   35e4c:	mov    DWORD PTR [rip+0x490aa],0x1        # 7ef00 <obstack_alloc_failed_handler@@Base+0xc8>
   35e56:	xor    r12d,r12d
   35e59:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35e5e:	movsx  ebx,BYTE PTR [rsi]
   35e61:	lea    eax,[rbx-0x30]
   35e64:	cmp    al,0x7
   35e66:	jbe    375da <__sprintf_chk@plt+0x2cc2a>
   35e6c:	mov    rdx,rsi
   35e6f:	mov    ecx,ebx
   35e71:	mov    edi,0x1
   35e76:	movabs rsi,0x2000280000000000
   35e80:	test   bl,bl
   35e82:	je     35ec9 <__sprintf_chk@plt+0x2b519>
   35e84:	nop    DWORD PTR [rax+0x0]
   35e88:	cmp    cl,0x3d
   35e8b:	ja     35e9c <__sprintf_chk@plt+0x2b4ec>
   35e8d:	mov    rax,rsi
   35e90:	shr    rax,cl
   35e93:	and    eax,0x1
   35e96:	cmp    al,0x1
   35e98:	sbb    rdi,0xffffffffffffffff
   35e9c:	movzx  ecx,BYTE PTR [rdx+0x1]
   35ea0:	add    rdx,0x1
   35ea4:	test   cl,cl
   35ea6:	jne    35e88 <__sprintf_chk@plt+0x2b4d8>
   35ea8:	mov    rax,rdi
   35eab:	shr    rax,0x3c
   35eaf:	setne  al
   35eb2:	bt     rdi,0x3b
   35eb7:	movzx  eax,al
   35eba:	jb     3794b <__sprintf_chk@plt+0x2cf9b>
   35ec0:	test   rax,rax
   35ec3:	jne    3794b <__sprintf_chk@plt+0x2cf9b>
   35ec9:	shl    rdi,0x4
   35ecd:	call   a4a0 <malloc@plt>
   35ed2:	mov    r9,rax
   35ed5:	test   rax,rax
   35ed8:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   35ede:	xor    esi,esi
   35ee0:	lea    r11,[rip+0x34881]        # 6a768 <_obstack_memory_used@@Base+0x1dae8>
   35ee7:	xor    r8d,r8d
   35eea:	cmp    bl,0x67
   35eed:	je     37824 <__sprintf_chk@plt+0x2ce74>
   35ef3:	jg     36ec4 <__sprintf_chk@plt+0x2c514>
   35ef9:	cmp    bl,0x61
   35efc:	je     3753e <__sprintf_chk@plt+0x2cb8e>
   35f02:	jle    36eed <__sprintf_chk@plt+0x2c53d>
   35f08:	mov    rdi,r9
   35f0b:	call   9ce0 <free@plt>
   35f10:	mov    rax,QWORD PTR [rip+0x495f1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   35f17:	mov    QWORD PTR [rip+0x48fe6],0x0        # 7ef08 <obstack_alloc_failed_handler@@Base+0xd0>
   35f22:	test   rax,rax
   35f25:	je     35f29 <__sprintf_chk@plt+0x2b579>
   35f27:	call   rax
   35f29:	mov    edx,0x5
   35f2e:	lea    rsi,[rip+0x30cfa]        # 66c2f <_obstack_memory_used@@Base+0x19faf>
   35f35:	xor    edi,edi
   35f37:	call   a040 <dcgettext@plt>
   35f3c:	xor    esi,esi
   35f3e:	xor    edi,edi
   35f40:	mov    rdx,rax
   35f43:	xor    eax,eax
   35f45:	call   a640 <error@plt>
   35f4a:	call   190e0 <__sprintf_chk@plt+0xe730>
   35f4f:	nop
   35f50:	mov    rsi,QWORD PTR [r15]
   35f53:	lea    rdi,[rip+0x2d617]        # 63571 <_obstack_memory_used@@Base+0x168f1>
   35f5a:	xor    r12d,r12d
   35f5d:	call   2db80 <__sprintf_chk@plt+0x231d0>
   35f62:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35f67:	mov    rsi,QWORD PTR [r15]
   35f6a:	lea    rdi,[rip+0x2d5ef]        # 63560 <_obstack_memory_used@@Base+0x168e0>
   35f71:	xor    r12d,r12d
   35f74:	call   2db80 <__sprintf_chk@plt+0x231d0>
   35f79:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35f7e:	mov    QWORD PTR [rip+0x49373],rsi        # 7f2f8 <obstack_alloc_failed_handler@@Base+0x4c0>
   35f85:	xor    r12d,r12d
   35f88:	mov    BYTE PTR [rip+0x49621],0x1        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   35f8f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35f94:	mov    rsi,QWORD PTR [r15]
   35f97:	mov    rdi,rbp
   35f9a:	xor    r12d,r12d
   35f9d:	call   2db80 <__sprintf_chk@plt+0x231d0>
   35fa2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35fa7:	mov    rdi,rsi
   35faa:	xor    r12d,r12d
   35fad:	call   2d930 <__sprintf_chk@plt+0x22f80>
   35fb2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   35fb7:	lea    r12,[rsp+0x50]
   35fbc:	mov    edx,0xa
   35fc1:	mov    rdi,rbp
   35fc4:	mov    BYTE PTR [rip+0x497b2],0x1        # 7f77d <obstack_alloc_failed_handler@@Base+0x945>
   35fcb:	mov    rsi,r12
   35fce:	call   a770 <strtoul@plt>
   35fd3:	mov    DWORD PTR [rip+0x49ccb],eax        # 7fca4 <argp_program_version_hook@@Base+0xcc>
   35fd9:	mov    rax,QWORD PTR [rsp+0x50]
   35fde:	movzx  edx,BYTE PTR [rax]
   35fe1:	test   dl,dl
   35fe3:	je     36013 <__sprintf_chk@plt+0x2b663>
   35fe5:	cmp    dl,0x2e
   35fe8:	jne    37c72 <__sprintf_chk@plt+0x2d2c2>
   35fee:	lea    rdi,[rax+0x1]
   35ff2:	mov    edx,0xa
   35ff7:	mov    rsi,r12
   35ffa:	call   a770 <strtoul@plt>
   35fff:	mov    DWORD PTR [rip+0x49c9b],eax        # 7fca0 <argp_program_version_hook@@Base+0xc8>
   36005:	mov    rax,QWORD PTR [rsp+0x50]
   3600a:	cmp    BYTE PTR [rax],0x0
   3600d:	jne    37c72 <__sprintf_chk@plt+0x2d2c2>
   36013:	xor    r12d,r12d
   36016:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3601b:	lea    rbx,[rip+0x34e8e]        # 6aeb0 <_obstack_memory_used@@Base+0x1e230>
   36022:	lea    r8,[rip+0x2a87]        # 38ab0 <__sprintf_chk@plt+0x2e100>
   36029:	xor    r12d,r12d
   3602c:	mov    rcx,rbx
   3602f:	lea    rdx,[rip+0x4490a]        # 7a940 <_obstack_memory_used@@Base+0x2dcc0>
   36036:	lea    rdi,[rip+0x30b61]        # 66b9e <_obstack_memory_used@@Base+0x19f1e>
   3603d:	call   5afe0 <_obstack_memory_used@@Base+0xe360>
   36042:	mov    BYTE PTR [rip+0x49734],0x1        # 7f77d <obstack_alloc_failed_handler@@Base+0x945>
   36049:	mov    eax,DWORD PTR [rbx+rax*4]
   3604c:	mov    DWORD PTR [rip+0x49726],eax        # 7f778 <obstack_alloc_failed_handler@@Base+0x940>
   36052:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36057:	lea    rbx,[rip+0x469ca]        # 7ca28 <_obstack_memory_used@@Base+0x2fda8>
   3605e:	lea    r8,[rip+0x2a4b]        # 38ab0 <__sprintf_chk@plt+0x2e100>
   36065:	xor    r12d,r12d
   36068:	mov    rcx,rbx
   3606b:	lea    rdx,[rip+0x4488e]        # 7a900 <_obstack_memory_used@@Base+0x2dc80>
   36072:	lea    rdi,[rip+0x30c67]        # 66ce0 <_obstack_memory_used@@Base+0x1a060>
   36079:	call   5afe0 <_obstack_memory_used@@Base+0xe360>
   3607e:	mov    eax,DWORD PTR [rbx+rax*4]
   36081:	mov    DWORD PTR [rip+0x496e5],eax        # 7f76c <obstack_alloc_failed_handler@@Base+0x934>
   36087:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3608c:	mov    rsi,QWORD PTR [r15]
   3608f:	mov    edi,0x5
   36094:	xor    r12d,r12d
   36097:	call   2dc00 <__sprintf_chk@plt+0x23250>
   3609c:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   360a1:	mov    BYTE PTR [rip+0x49869],0x1        # 7f911 <obstack_alloc_failed_handler@@Base+0xad9>
   360a8:	xor    r12d,r12d
   360ab:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   360b0:	lea    rdi,[rip+0x32461]        # 68518 <_obstack_memory_used@@Base+0x1b898>
   360b7:	lea    r13,[rip+0x447a2]        # 7a860 <_obstack_memory_used@@Base+0x2dbe0>
   360be:	movabs r12,0xcccccccccccccccd
   360c8:	call   9ef0 <puts@plt>
   360cd:	lea    r8,[rip+0x30ba8]        # 66c7c <_obstack_memory_used@@Base+0x19ffc>
   360d4:	xor    eax,eax
   360d6:	mov    edi,0x1
   360db:	lea    rcx,[rip+0x30b9e]        # 66c80 <_obstack_memory_used@@Base+0x1a000>
   360e2:	lea    rdx,[rip+0x30b9b]        # 66c84 <_obstack_memory_used@@Base+0x1a004>
   360e9:	lea    rsi,[rip+0x30b9f]        # 66c8f <_obstack_memory_used@@Base+0x1a00f>
   360f0:	lea    rbp,[rsp+0xe4]
   360f8:	call   a5d0 <__printf_chk@plt>
   360fd:	lea    rbx,[rip+0x30ba7]        # 66cab <_obstack_memory_used@@Base+0x1a02b>
   36104:	xor    edi,edi
   36106:	mov    r8d,0x1
   3610c:	nop    DWORD PTR [rax+0x0]
   36110:	mov    BYTE PTR [rsp+0xe4],0x0
   36118:	mov    rcx,r8
   3611b:	mov    r14,rbp
   3611e:	xchg   ax,ax
   36120:	mov    rax,rcx
   36123:	sub    r14,0x1
   36127:	mul    r12
   3612a:	mov    rax,rcx
   3612d:	shr    rdx,0x3
   36131:	lea    rsi,[rdx+rdx*4]
   36135:	add    rsi,rsi
   36138:	sub    rax,rsi
   3613b:	add    eax,0x30
   3613e:	mov    BYTE PTR [r14],al
   36141:	mov    rax,rcx
   36144:	mov    rcx,rdx
   36147:	cmp    rax,0x9
   3614b:	ja     36120 <__sprintf_chk@plt+0x2b770>
   3614d:	mov    rcx,rdi
   36150:	cmp    r8,rdi
   36153:	jb     36c80 <__sprintf_chk@plt+0x2c2d0>
   36159:	mov    BYTE PTR [rsp+0xc4],0x0
   36161:	lea    r9,[rsp+0xc4]
   36169:	nop    DWORD PTR [rax+0x0]
   36170:	mov    rax,rcx
   36173:	sub    r9,0x1
   36177:	mul    r12
   3617a:	mov    rax,rcx
   3617d:	shr    rdx,0x3
   36181:	lea    rsi,[rdx+rdx*4]
   36185:	add    rsi,rsi
   36188:	sub    rax,rsi
   3618b:	add    eax,0x30
   3618e:	mov    BYTE PTR [r9],al
   36191:	mov    rax,rcx
   36194:	mov    rcx,rdx
   36197:	cmp    rax,0x9
   3619b:	ja     36170 <__sprintf_chk@plt+0x2b7c0>
   3619d:	mov    rdx,QWORD PTR [r13+0x0]
   361a1:	xor    eax,eax
   361a3:	mov    r8,r14
   361a6:	mov    rcx,r9
   361a9:	mov    rsi,rbx
   361ac:	mov    edi,0x1
   361b1:	add    r13,0x18
   361b5:	call   a5d0 <__printf_chk@plt>
   361ba:	cmp    QWORD PTR [r13+0x0],0x0
   361bf:	je     374ac <__sprintf_chk@plt+0x2cafc>
   361c5:	mov    r8,QWORD PTR [r13+0x10]
   361c9:	mov    rdi,QWORD PTR [r13+0x8]
   361cd:	jmp    36110 <__sprintf_chk@plt+0x2b760>
   361d2:	mov    BYTE PTR [rip+0x49767],0x1        # 7f940 <obstack_alloc_failed_handler@@Base+0xb08>
   361d9:	xor    r12d,r12d
   361dc:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   361e1:	call   2da60 <__sprintf_chk@plt+0x230b0>
   361e6:	mov    rdi,rax
   361e9:	mov    rbp,rax
   361ec:	call   9ef0 <puts@plt>
   361f1:	call   4b700 <argp_usage@@Base+0x8380>
   361f6:	mov    rdi,rbp
   361f9:	call   9ce0 <free@plt>
   361fe:	xor    edi,edi
   36200:	call   a820 <exit@plt>
   36205:	lea    rdi,[rip+0x310ed]        # 672f9 <_obstack_memory_used@@Base+0x1a679>
   3620c:	xor    r12d,r12d
   3620f:	call   2d930 <__sprintf_chk@plt+0x22f80>
   36214:	mov    DWORD PTR [rip+0x48cbe],0x1        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   3621e:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36223:	mov    DWORD PTR [rip+0x49523],0x1        # 7f750 <obstack_alloc_failed_handler@@Base+0x918>
   3622d:	xor    r12d,r12d
   36230:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36235:	mov    QWORD PTR [rip+0x49074],rsi        # 7f2b0 <obstack_alloc_failed_handler@@Base+0x478>
   3623c:	xor    r12d,r12d
   3623f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36244:	mov    QWORD PTR [rip+0x4888d],rsi        # 7ead8 <_obstack_memory_used@@Base+0x31e58>
   3624b:	xor    r12d,r12d
   3624e:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36253:	mov    BYTE PTR [rip+0x49046],0x1        # 7f2a0 <obstack_alloc_failed_handler@@Base+0x468>
   3625a:	xor    r12d,r12d
   3625d:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36262:	mov    BYTE PTR [rip+0x49513],0x1        # 7f77c <obstack_alloc_failed_handler@@Base+0x944>
   36269:	xor    r12d,r12d
   3626c:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36271:	mov    BYTE PTR [rip+0x494a8],0x1        # 7f720 <obstack_alloc_failed_handler@@Base+0x8e8>
   36278:	xor    r12d,r12d
   3627b:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36280:	xor    esi,esi
   36282:	lea    rdx,[rsp+0x50]
   36287:	lea    rcx,[rip+0x308c9]        # 66b57 <_obstack_memory_used@@Base+0x19ed7>
   3628e:	mov    rdi,rbp
   36291:	call   58000 <_obstack_memory_used@@Base+0xb380>
   36296:	test   eax,eax
   36298:	jne    37cd4 <__sprintf_chk@plt+0x2d324>
   3629e:	mov    rax,QWORD PTR [rsp+0x50]
   362a3:	mov    QWORD PTR [rip+0x492a6],rax        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   362aa:	test   eax,0x1ff
   362af:	jne    37ca6 <__sprintf_chk@plt+0x2d2f6>
   362b5:	shr    rax,0x9
   362b9:	xor    r12d,r12d
   362bc:	mov    DWORD PTR [rip+0x4926e],eax        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   362c2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   362c7:	mov    QWORD PTR [rip+0x49032],rsi        # 7f300 <obstack_alloc_failed_handler@@Base+0x4c8>
   362ce:	xor    r12d,r12d
   362d1:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   362d6:	mov    BYTE PTR [rip+0x49635],0x1        # 7f912 <obstack_alloc_failed_handler@@Base+0xada>
   362dd:	xor    r12d,r12d
   362e0:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   362e5:	lea    r15,[rip+0x466b8]        # 7c9a4 <_obstack_memory_used@@Base+0x2fd24>
   362ec:	nop    DWORD PTR [rax+0x0]
   362f0:	cmp    BYTE PTR [rbp+0x0],0x0
   362f4:	je     35880 <__sprintf_chk@plt+0x2aed0>
   362fa:	mov    esi,0x1
   362ff:	mov    edi,0x70
   36304:	call   a2f0 <calloc@plt>
   36309:	mov    r14,rax
   3630c:	test   rax,rax
   3630f:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   36315:	mov    rax,QWORD PTR [rip+0x49904]        # 7fc20 <argp_program_version_hook@@Base+0x48>
   3631c:	test   rax,rax
   3631f:	je     36eb8 <__sprintf_chk@plt+0x2c508>
   36325:	mov    QWORD PTR [rax],r14
   36328:	cmp    BYTE PTR [rbp+0x0],0x73
   3632c:	mov    QWORD PTR [rip+0x498ed],r14        # 7fc20 <argp_program_version_hook@@Base+0x48>
   36333:	je     36cd8 <__sprintf_chk@plt+0x2c328>
   36339:	mov    edx,0x6
   3633e:	lea    rsi,[rip+0x30887]        # 66bcc <_obstack_memory_used@@Base+0x19f4c>
   36345:	mov    rdi,rbp
   36348:	call   9e50 <strncmp@plt>
   3634d:	test   eax,eax
   3634f:	jne    37ee8 <__sprintf_chk@plt+0x2d538>
   36355:	movzx  eax,BYTE PTR [rbp+0x6]
   36359:	lea    rbx,[rbp+0x6]
   3635d:	mov    DWORD PTR [rip+0x4663d],0x0        # 7c9a4 <_obstack_memory_used@@Base+0x2fd24>
   36367:	test   al,al
   36369:	jne    36393 <__sprintf_chk@plt+0x2b9e3>
   3636b:	jmp    36e80 <__sprintf_chk@plt+0x2c4d0>
   36370:	movsx  esi,al
   36373:	mov    rdi,r15
   36376:	call   3b350 <__sprintf_chk@plt+0x309a0>
   3637b:	test   eax,eax
   3637d:	jne    37b45 <__sprintf_chk@plt+0x2d195>
   36383:	movzx  eax,BYTE PTR [rbx+0x1]
   36387:	add    rbx,0x1
   3638b:	test   al,al
   3638d:	je     36e80 <__sprintf_chk@plt+0x2c4d0>
   36393:	cmp    al,0x3b
   36395:	jne    36370 <__sprintf_chk@plt+0x2b9c0>
   36397:	lea    rbp,[rbx+0x1]
   3639b:	jmp    362f0 <__sprintf_chk@plt+0x2b940>
   363a0:	cmp    QWORD PTR [rip+0x49380],0x0        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   363a8:	jne    37f07 <__sprintf_chk@plt+0x2d557>
   363ae:	mov    QWORD PTR [rip+0x49373],rsi        # 7f728 <obstack_alloc_failed_handler@@Base+0x8f0>
   363b5:	xor    r12d,r12d
   363b8:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   363bd:	test   rsi,rsi
   363c0:	je     37691 <__sprintf_chk@plt+0x2cce1>
   363c6:	mov    rdi,rsi
   363c9:	xor    r12d,r12d
   363cc:	call   341a0 <__sprintf_chk@plt+0x297f0>
   363d1:	lea    rsi,[rip+0xffffffffffff7898]        # 2dc70 <__sprintf_chk@plt+0x232c0>
   363d8:	mov    edi,eax
   363da:	call   a330 <signal@plt>
   363df:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   363e4:	mov    edi,0x9
   363e9:	xor    r12d,r12d
   363ec:	call   2da10 <__sprintf_chk@plt+0x23060>
   363f1:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   363f6:	xor    esi,esi
   363f8:	lea    rdx,[rsp+0x50]
   363fd:	lea    rcx,[rip+0x3574c]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   36404:	mov    rdi,rbp
   36407:	call   58000 <_obstack_memory_used@@Base+0xb380>
   3640c:	test   eax,eax
   3640e:	jne    37f26 <__sprintf_chk@plt+0x2d576>
   36414:	mov    rax,QWORD PTR [rsp+0x50]
   36419:	xor    r12d,r12d
   3641c:	mov    QWORD PTR [rip+0x49525],rax        # 7f948 <obstack_alloc_failed_handler@@Base+0xb10>
   36423:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36428:	mov    rsi,QWORD PTR [r15]
   3642b:	mov    edi,0x5
   36430:	call   2dae0 <__sprintf_chk@plt+0x23130>
   36435:	mov    esi,0x1
   3643a:	mov    edi,0x60
   3643f:	call   a2f0 <calloc@plt>
   36444:	mov    rbx,rax
   36447:	test   rax,rax
   3644a:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   36450:	test   rbp,rbp
   36453:	je     377e7 <__sprintf_chk@plt+0x2ce37>
   36459:	mov    rdi,rbp
   3645c:	call   a060 <strlen@plt>
   36461:	lea    r12,[rax+0x1]
   36465:	mov    rdi,r12
   36468:	call   a4a0 <malloc@plt>
   3646d:	mov    rdi,rax
   36470:	test   rax,rax
   36473:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   36479:	mov    rdx,r12
   3647c:	mov    rsi,rbp
   3647f:	call   a420 <memcpy@plt>
   36484:	mov    QWORD PTR [rbx+0x10],rax
   36488:	mov    rdi,rax
   3648b:	call   a060 <strlen@plt>
   36490:	cmp    BYTE PTR [rip+0x49429],0x0        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
   36497:	mov    QWORD PTR [rbx+0x18],rax
   3649b:	jne    3776e <__sprintf_chk@plt+0x2cdbe>
   364a1:	mov    rax,QWORD PTR [rip+0x49330]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   364a8:	cmp    QWORD PTR [rip+0x49320],0x0        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   364b0:	mov    QWORD PTR [rbx+0x8],0x0
   364b8:	mov    QWORD PTR [rip+0x49319],rbx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   364bf:	mov    QWORD PTR [rbx],rax
   364c2:	je     37806 <__sprintf_chk@plt+0x2ce56>
   364c8:	xor    edx,edx
   364ca:	mov    eax,DWORD PTR [rip+0x45dd8]        # 7c2a8 <_obstack_memory_used@@Base+0x2f628>
   364d0:	or     eax,DWORD PTR [rip+0x49402]        # 7f8d8 <obstack_alloc_failed_handler@@Base+0xaa0>
   364d6:	mov    QWORD PTR [rbx+0x30],0x0
   364de:	or     eax,DWORD PTR [rip+0x49290]        # 7f774 <obstack_alloc_failed_handler@@Base+0x93c>
   364e4:	cmp    DWORD PTR [rip+0x493f1],0x2        # 7f8dc <obstack_alloc_failed_handler@@Base+0xaa4>
   364eb:	mov    DWORD PTR [rbx+0x28],0x0
   364f2:	sete   dl
   364f5:	mov    QWORD PTR [rbx+0x38],0x0
   364fd:	xor    r12d,r12d
   36500:	shl    edx,0x1c
   36503:	mov    QWORD PTR [rbx+0x40],0x0
   3650b:	or     eax,edx
   3650d:	mov    BYTE PTR [rbx+0x24],0x1
   36511:	mov    DWORD PTR [rbx+0x20],eax
   36514:	mov    BYTE PTR [rip+0x493a5],0x1        # 7f8c0 <obstack_alloc_failed_handler@@Base+0xa88>
   3651b:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36520:	mov    BYTE PTR [rip+0x48d85],0x1        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   36527:	xor    r12d,r12d
   3652a:	mov    QWORD PTR [r15+0x18],rsi
   3652e:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36533:	mov    edi,0x1
   36538:	xor    r12d,r12d
   3653b:	call   2da10 <__sprintf_chk@plt+0x23060>
   36540:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36545:	mov    DWORD PTR [rip+0x491fd],0x1        # 7f74c <obstack_alloc_failed_handler@@Base+0x914>
   3654f:	xor    r12d,r12d
   36552:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36557:	mov    BYTE PTR [r15+0x10],0x1
   3655c:	xor    r12d,r12d
   3655f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36564:	mov    DWORD PTR [rip+0x49002],0x1        # 7f570 <obstack_alloc_failed_handler@@Base+0x738>
   3656e:	xor    r12d,r12d
   36571:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36576:	lea    rdi,[rip+0x30d7c]        # 672f9 <_obstack_memory_used@@Base+0x1a679>
   3657d:	xor    r12d,r12d
   36580:	call   2d930 <__sprintf_chk@plt+0x22f80>
   36585:	mov    DWORD PTR [rip+0x48951],0x1        # 7eee0 <obstack_alloc_failed_handler@@Base+0xa8>
   3658f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36594:	mov    rsi,QWORD PTR [r15]
   36597:	lea    rdi,[rip+0x30e13]        # 673b1 <_obstack_memory_used@@Base+0x1a731>
   3659e:	xor    r12d,r12d
   365a1:	call   2db80 <__sprintf_chk@plt+0x231d0>
   365a6:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   365ab:	mov    edi,0x6
   365b0:	xor    r12d,r12d
   365b3:	call   2da10 <__sprintf_chk@plt+0x23060>
   365b8:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   365bd:	mov    BYTE PTR [rip+0x491dc],0x1        # 7f7a0 <obstack_alloc_failed_handler@@Base+0x968>
   365c4:	xor    r12d,r12d
   365c7:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   365cc:	add    DWORD PTR [rip+0x48aed],0x1        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   365d3:	xor    r12d,r12d
   365d6:	or     DWORD PTR [rip+0x45a9c],0x583000        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   365e0:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   365e5:	mov    edi,0x8
   365ea:	xor    r12d,r12d
   365ed:	call   2da10 <__sprintf_chk@plt+0x23060>
   365f2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   365f7:	mov    edi,0x7
   365fc:	xor    r12d,r12d
   365ff:	call   2da10 <__sprintf_chk@plt+0x23060>
   36604:	add    DWORD PTR [rip+0x48ab5],0x1        # 7f0c0 <obstack_alloc_failed_handler@@Base+0x288>
   3660b:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36610:	mov    rsi,QWORD PTR [r15]
   36613:	mov    edi,0x6
   36618:	xor    r12d,r12d
   3661b:	call   2dae0 <__sprintf_chk@plt+0x23130>
   36620:	mov    BYTE PTR [rip+0x4929a],0x1        # 7f8c1 <obstack_alloc_failed_handler@@Base+0xa89>
   36627:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3662c:	mov    QWORD PTR [rip+0x48a6d],rsi        # 7f0a0 <obstack_alloc_failed_handler@@Base+0x268>
   36633:	xor    r12d,r12d
   36636:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3663b:	mov    BYTE PTR [rip+0x48ebe],0x1        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   36642:	xor    r12d,r12d
   36645:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3664a:	mov    BYTE PTR [rip+0x490d1],0x1        # 7f722 <obstack_alloc_failed_handler@@Base+0x8ea>
   36651:	xor    r12d,r12d
   36654:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36659:	lea    rcx,[rip+0x2dc1d]        # 6427d <_obstack_memory_used@@Base+0x175fd>
   36660:	lea    rdx,[rip+0xfffffffffffecbb9]        # 23220 <__sprintf_chk@plt+0x18870>
   36667:	xor    r12d,r12d
   3666a:	lea    rdi,[rip+0x4885f]        # 7eed0 <obstack_alloc_failed_handler@@Base+0x98>
   36671:	call   5a960 <_obstack_memory_used@@Base+0xdce0>
   36676:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3667b:	lea    rsi,[rip+0x4883e]        # 7eec0 <obstack_alloc_failed_handler@@Base+0x88>
   36682:	mov    rdi,rbp
   36685:	call   584c0 <_obstack_memory_used@@Base+0xb840>
   3668a:	cmp    rax,0xffffffffffffffff
   3668e:	je     377b9 <__sprintf_chk@plt+0x2ce09>
   36694:	mov    DWORD PTR [rip+0x4882e],eax        # 7eec8 <obstack_alloc_failed_handler@@Base+0x90>
   3669a:	xor    r12d,r12d
   3669d:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   366a2:	mov    BYTE PTR [rip+0x49267],0x1        # 7f910 <obstack_alloc_failed_handler@@Base+0xad8>
   366a9:	xor    r12d,r12d
   366ac:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   366b1:	mov    BYTE PTR [rip+0x48c08],0x1        # 7f2c0 <obstack_alloc_failed_handler@@Base+0x488>
   366b8:	xor    r12d,r12d
   366bb:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   366c0:	mov    edi,0x4
   366c5:	xor    r12d,r12d
   366c8:	call   2da10 <__sprintf_chk@plt+0x23060>
   366cd:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   366d2:	mov    BYTE PTR [rip+0x490d8],0x1        # 7f7b1 <obstack_alloc_failed_handler@@Base+0x979>
   366d9:	xor    r12d,r12d
   366dc:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   366e1:	mov    BYTE PTR [rip+0x49039],0x1        # 7f721 <obstack_alloc_failed_handler@@Base+0x8e9>
   366e8:	xor    r12d,r12d
   366eb:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   366f0:	mov    DWORD PTR [rip+0x48806],0x2        # 7ef00 <obstack_alloc_failed_handler@@Base+0xc8>
   366fa:	xor    r12d,r12d
   366fd:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36702:	mov    rdi,rsi
   36705:	xor    r12d,r12d
   36708:	call   fb00 <__sprintf_chk@plt+0x5150>
   3670d:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36712:	test   rsi,rsi
   36715:	je     37812 <__sprintf_chk@plt+0x2ce62>
   3671b:	cmp    BYTE PTR [rsi],0x2e
   3671e:	je     379b4 <__sprintf_chk@plt+0x2d004>
   36724:	xor    edx,edx
   36726:	lea    rsi,[rsp+0x50]
   3672b:	mov    rdi,rbp
   3672e:	call   a770 <strtoul@plt>
   36733:	mov    DWORD PTR [rip+0x48de3],eax        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
   36739:	mov    rax,QWORD PTR [rsp+0x50]
   3673e:	cmp    BYTE PTR [rax],0x0
   36741:	jne    37d1d <__sprintf_chk@plt+0x2d36d>
   36747:	xor    r12d,r12d
   3674a:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3674f:	mov    BYTE PTR [rip+0x491fe],0x1        # 7f954 <obstack_alloc_failed_handler@@Base+0xb1c>
   36756:	xor    r12d,r12d
   36759:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3675e:	mov    BYTE PTR [rip+0x48b47],0x1        # 7f2ac <obstack_alloc_failed_handler@@Base+0x474>
   36765:	test   rsi,rsi
   36768:	je     35880 <__sprintf_chk@plt+0x2aed0>
   3676e:	mov    QWORD PTR [r15+0x20],rsi
   36772:	xor    r12d,r12d
   36775:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3677a:	mov    eax,0x1
   3677f:	test   rsi,rsi
   36782:	je     367ab <__sprintf_chk@plt+0x2bdfb>
   36784:	lea    rbx,[rip+0x3471d]        # 6aea8 <_obstack_memory_used@@Base+0x1e228>
   3678b:	lea    r8,[rip+0x231e]        # 38ab0 <__sprintf_chk@plt+0x2e100>
   36792:	mov    rcx,rbx
   36795:	lea    rdx,[rip+0x44184]        # 7a920 <_obstack_memory_used@@Base+0x2dca0>
   3679c:	lea    rdi,[rip+0x3047b]        # 66c1e <_obstack_memory_used@@Base+0x19f9e>
   367a3:	call   5afe0 <_obstack_memory_used@@Base+0xe360>
   367a8:	mov    eax,DWORD PTR [rbx+rax*4]
   367ab:	mov    DWORD PTR [rip+0x487bb],eax        # 7ef6c <obstack_alloc_failed_handler@@Base+0x134>
   367b1:	xor    r12d,r12d
   367b4:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   367b9:	mov    rsi,QWORD PTR [r15]
   367bc:	lea    rdi,[rip+0x2cdb5]        # 63578 <_obstack_memory_used@@Base+0x168f8>
   367c3:	xor    r12d,r12d
   367c6:	call   2db80 <__sprintf_chk@plt+0x231d0>
   367cb:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   367d0:	lea    rdi,[rip+0x30b22]        # 672f9 <_obstack_memory_used@@Base+0x1a679>
   367d7:	xor    r12d,r12d
   367da:	call   2d930 <__sprintf_chk@plt+0x22f80>
   367df:	mov    DWORD PTR [rip+0x486ef],0x1        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   367e9:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   367ee:	lea    rsi,[rip+0x30416]        # 66c0b <_obstack_memory_used@@Base+0x19f8b>
   367f5:	mov    rdi,rbp
   367f8:	call   a320 <strcmp@plt>
   367fd:	mov    r12d,eax
   36800:	test   eax,eax
   36802:	je     3775f <__sprintf_chk@plt+0x2cdaf>
   36808:	mov    rdi,rbp
   3680b:	call   a060 <strlen@plt>
   36810:	cmp    rax,0x2
   36814:	jbe    36822 <__sprintf_chk@plt+0x2be72>
   36816:	cmp    WORD PTR [rbp+0x0],0x6f6e
   3681c:	je     379ea <__sprintf_chk@plt+0x2d03a>
   36822:	lea    rbx,[rip+0x46197]        # 7c9c0 <_obstack_memory_used@@Base+0x2fd40>
   36829:	lea    r8,[rip+0x2280]        # 38ab0 <__sprintf_chk@plt+0x2e100>
   36830:	mov    rsi,rbp
   36833:	xor    r12d,r12d
   36836:	mov    rcx,rbx
   36839:	lea    rdx,[rip+0x43f40]        # 7a780 <_obstack_memory_used@@Base+0x2db00>
   36840:	lea    rdi,[rip+0x303cd]        # 66c14 <_obstack_memory_used@@Base+0x19f94>
   36847:	call   5afe0 <_obstack_memory_used@@Base+0xe360>
   3684c:	mov    eax,DWORD PTR [rbx+rax*4]
   3684f:	or     DWORD PTR [rip+0x45827],eax        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   36855:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3685a:	mov    BYTE PTR [rip+0x48ef3],0x1        # 7f754 <obstack_alloc_failed_handler@@Base+0x91c>
   36861:	xor    r12d,r12d
   36864:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36869:	call   290c0 <__sprintf_chk@plt+0x1e710>
   3686e:	mov    DWORD PTR [rax+0x10],0x0
   36875:	mov    QWORD PTR [rax+0x18],rbp
   36879:	mov    eax,DWORD PTR [rip+0x48f81]        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   3687f:	test   eax,eax
   36881:	je     376cc <__sprintf_chk@plt+0x2cd1c>
   36887:	mov    r12d,ebx
   3688a:	cmp    eax,0x1
   3688d:	jne    3589a <__sprintf_chk@plt+0x2aeea>
   36893:	mov    DWORD PTR [rip+0x48f63],0x2        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   3689d:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   368a2:	mov    BYTE PTR [rip+0x487ff],0x1        # 7f0a8 <obstack_alloc_failed_handler@@Base+0x270>
   368a9:	xor    r12d,r12d
   368ac:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   368b1:	mov    edi,0x2
   368b6:	xor    r12d,r12d
   368b9:	call   2da10 <__sprintf_chk@plt+0x23060>
   368be:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   368c3:	mov    BYTE PTR [rip+0x48ce6],0x1        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   368ca:	xor    r12d,r12d
   368cd:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   368d2:	lea    r12,[rip+0x3027e]        # 66b57 <_obstack_memory_used@@Base+0x19ed7>
   368d9:	lea    rdx,[rsp+0x50]
   368de:	mov    rdi,rbp
   368e1:	lea    rsi,[rsp+0x40]
   368e6:	mov    rcx,r12
   368e9:	call   58000 <_obstack_memory_used@@Base+0xb380>
   368ee:	test   eax,eax
   368f0:	jne    37dd0 <__sprintf_chk@plt+0x2d420>
   368f6:	mov    rax,QWORD PTR [rsp+0x40]
   368fb:	mov    rbx,QWORD PTR [rsp+0x50]
   36900:	cmp    rax,rbp
   36903:	jbe    3691a <__sprintf_chk@plt+0x2bf6a>
   36905:	movsx  esi,BYTE PTR [rax-0x1]
   36909:	mov    rdi,r12
   3690c:	call   a0f0 <strchr@plt>
   36911:	test   rax,rax
   36914:	je     37988 <__sprintf_chk@plt+0x2cfd8>
   3691a:	test   rbx,rbx
   3691d:	js     376ae <__sprintf_chk@plt+0x2ccfe>
   36923:	pxor   xmm0,xmm0
   36927:	cvtsi2sd xmm0,rbx
   3692c:	mov    BYTE PTR [rip+0x48c7d],0x1        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   36933:	xor    r12d,r12d
   36936:	movsd  QWORD PTR [rip+0x48bea],xmm0        # 7f528 <obstack_alloc_failed_handler@@Base+0x6f0>
   3693e:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36943:	mov    BYTE PTR [rip+0x48dee],0x1        # 7f738 <obstack_alloc_failed_handler@@Base+0x900>
   3694a:	xor    r12d,r12d
   3694d:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36952:	mov    BYTE PTR [rip+0x4860f],0x1        # 7ef68 <obstack_alloc_failed_handler@@Base+0x130>
   36959:	xor    r12d,r12d
   3695c:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36961:	mov    BYTE PTR [rip+0x48e94],0x1        # 7f7fc <obstack_alloc_failed_handler@@Base+0x9c4>
   36968:	xor    r12d,r12d
   3696b:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36970:	mov    rax,QWORD PTR [rip+0x48951]        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
   36977:	mov    rcx,QWORD PTR [rip+0x492b2]        # 7fc30 <argp_program_version_hook@@Base+0x58>
   3697e:	mov    rdi,QWORD PTR [rip+0x4894b]        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   36985:	cmp    rax,rcx
   36988:	je     3783c <__sprintf_chk@plt+0x2ce8c>
   3698e:	lea    rdx,[rax+0x1]
   36992:	xor    r12d,r12d
   36995:	mov    QWORD PTR [rip+0x4892c],rdx        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
   3699c:	mov    QWORD PTR [rdi+rax*8],rbp
   369a0:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   369a5:	mov    edi,0x5
   369aa:	xor    r12d,r12d
   369ad:	call   2da10 <__sprintf_chk@plt+0x23060>
   369b2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   369b7:	cmp    QWORD PTR [rip+0x48dd9],0x0        # 7f798 <obstack_alloc_failed_handler@@Base+0x960>
   369bf:	mov    DWORD PTR [rip+0x48db7],0x1        # 7f780 <obstack_alloc_failed_handler@@Base+0x948>
   369c9:	jns    37e63 <__sprintf_chk@plt+0x2d4b3>
   369cf:	lea    rsi,[rip+0x3015c]        # 66b32 <_obstack_memory_used@@Base+0x19eb2>
   369d6:	jmp    35d4d <__sprintf_chk@plt+0x2b39d>
   369db:	mov    DWORD PTR [rip+0x49243],0x1        # 7fc28 <argp_program_version_hook@@Base+0x50>
   369e5:	xor    r12d,r12d
   369e8:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   369ed:	mov    rsi,QWORD PTR [r15]
   369f0:	mov    edi,0x4
   369f5:	xor    r12d,r12d
   369f8:	call   2dc00 <__sprintf_chk@plt+0x23250>
   369fd:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a02:	mov    rsi,QWORD PTR [r15]
   36a05:	lea    rdi,[rip+0x2cb4c]        # 63558 <_obstack_memory_used@@Base+0x168d8>
   36a0c:	xor    r12d,r12d
   36a0f:	call   2db80 <__sprintf_chk@plt+0x231d0>
   36a14:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a19:	mov    rsi,QWORD PTR [r15]
   36a1c:	mov    edi,0x8
   36a21:	xor    r12d,r12d
   36a24:	call   2dae0 <__sprintf_chk@plt+0x23130>
   36a29:	mov    BYTE PTR [rip+0x48d80],0x1        # 7f7b0 <obstack_alloc_failed_handler@@Base+0x978>
   36a30:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a35:	mov    BYTE PTR [rip+0x48cf4],0x1        # 7f730 <obstack_alloc_failed_handler@@Base+0x8f8>
   36a3c:	xor    r12d,r12d
   36a3f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a44:	mov    rsi,QWORD PTR [r15]
   36a47:	lea    rdi,[rip+0x30937]        # 67385 <_obstack_memory_used@@Base+0x1a705>
   36a4e:	xor    r12d,r12d
   36a51:	call   2db80 <__sprintf_chk@plt+0x231d0>
   36a56:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a5b:	mov    rsi,QWORD PTR [r15]
   36a5e:	mov    edi,0x4
   36a63:	xor    r12d,r12d
   36a66:	call   2dae0 <__sprintf_chk@plt+0x23130>
   36a6b:	mov    BYTE PTR [rip+0x48a66],0x1        # 7f4d8 <obstack_alloc_failed_handler@@Base+0x6a0>
   36a72:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a77:	mov    QWORD PTR [rip+0x4881a],rsi        # 7f298 <obstack_alloc_failed_handler@@Base+0x460>
   36a7e:	xor    r12d,r12d
   36a81:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a86:	mov    rsi,QWORD PTR [r15]
   36a89:	mov    edi,0x3
   36a8e:	xor    r12d,r12d
   36a91:	call   2dc00 <__sprintf_chk@plt+0x23250>
   36a96:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36a9b:	mov    BYTE PTR [rip+0x48cdb],0x1        # 7f77d <obstack_alloc_failed_handler@@Base+0x945>
   36aa2:	xor    r12d,r12d
   36aa5:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36aaa:	lea    rsi,[rsp+0x50]
   36aaf:	mov    edx,0xa
   36ab4:	mov    rdi,rbp
   36ab7:	call   a770 <strtoul@plt>
   36abc:	mov    DWORD PTR [rip+0x48e8e],eax        # 7f950 <obstack_alloc_failed_handler@@Base+0xb18>
   36ac2:	mov    rax,QWORD PTR [rsp+0x50]
   36ac7:	cmp    BYTE PTR [rax],0x0
   36aca:	jne    37e25 <__sprintf_chk@plt+0x2d475>
   36ad0:	xor    r12d,r12d
   36ad3:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36ad8:	mov    rsi,QWORD PTR [r15]
   36adb:	mov    edi,0x6
   36ae0:	xor    r12d,r12d
   36ae3:	call   2dc00 <__sprintf_chk@plt+0x23250>
   36ae8:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36aed:	mov    BYTE PTR [rip+0x48c3d],0x1        # 7f731 <obstack_alloc_failed_handler@@Base+0x8f9>
   36af4:	xor    r12d,r12d
   36af7:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36afc:	xor    esi,esi
   36afe:	lea    rdx,[rsp+0x50]
   36b03:	lea    rcx,[rip+0x35046]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   36b0a:	mov    rdi,rbp
   36b0d:	call   58000 <_obstack_memory_used@@Base+0xb380>
   36b12:	test   eax,eax
   36b14:	jne    37e44 <__sprintf_chk@plt+0x2d494>
   36b1a:	mov    rax,QWORD PTR [rsp+0x50]
   36b1f:	movsxd rdx,eax
   36b22:	mov    DWORD PTR [rip+0x48a08],eax        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   36b28:	cmp    rdx,rax
   36b2b:	jne    37e44 <__sprintf_chk@plt+0x2d494>
   36b31:	test   eax,eax
   36b33:	jle    37e44 <__sprintf_chk@plt+0x2d494>
   36b39:	mov    rdx,rax
   36b3c:	shl    rdx,0x9
   36b40:	mov    QWORD PTR [rip+0x48a09],rdx        # 7f550 <obstack_alloc_failed_handler@@Base+0x718>
   36b47:	shr    rdx,0x9
   36b4b:	cmp    rax,rdx
   36b4e:	jne    37e44 <__sprintf_chk@plt+0x2d494>
   36b54:	xor    r12d,r12d
   36b57:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36b5c:	mov    BYTE PTR [r15+0x12],0x1
   36b61:	xor    r12d,r12d
   36b64:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36b69:	mov    edi,0x3
   36b6e:	xor    r12d,r12d
   36b71:	call   2da10 <__sprintf_chk@plt+0x23060>
   36b76:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36b7b:	xor    r13d,r13d
   36b7e:	lea    rsi,[rip+0x2ff5f]        # 66ae4 <_obstack_memory_used@@Base+0x19e64>
   36b85:	lea    r14,[rip+0x44454]        # 7afe0 <_obstack_memory_used@@Base+0x2e360>
   36b8c:	jmp    36ba1 <__sprintf_chk@plt+0x2c1f1>
   36b8e:	xchg   ax,ax
   36b90:	add    r13,0x1
   36b94:	mov    rsi,QWORD PTR [r14+r13*8]
   36b98:	test   rsi,rsi
   36b9b:	je     37b99 <__sprintf_chk@plt+0x2d1e9>
   36ba1:	mov    rdi,rbp
   36ba4:	call   a320 <strcmp@plt>
   36ba9:	test   eax,eax
   36bab:	jne    36b90 <__sprintf_chk@plt+0x2c1e0>
   36bad:	mov    DWORD PTR [rip+0x483cc],r13d        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   36bb4:	mov    r12d,eax
   36bb7:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36bbc:	nop    DWORD PTR [rax+0x0]
   36bc0:	mov    rdx,rax
   36bc3:	sub    rdx,rbp
   36bc6:	add    rdx,0x1
   36bca:	cmp    rdx,r14
   36bcd:	ja     36cb0 <__sprintf_chk@plt+0x2c300>
   36bd3:	mov    rdi,r15
   36bd6:	mov    rsi,rbp
   36bd9:	mov    QWORD PTR [rsp+0x8],rdx
   36bde:	mov    r15,r12
   36be1:	call   a420 <memcpy@plt>
   36be6:	mov    rdx,QWORD PTR [rsp+0x8]
   36beb:	mov    r14,QWORD PTR [rsp+0x68]
   36bf0:	lea    r8,[rbx+0x1]
   36bf4:	movzx  ebx,BYTE PTR [rbx+0x1]
   36bf8:	add    r14,rdx
   36bfb:	sub    r15,rdx
   36bfe:	mov    QWORD PTR [rsp+0x68],r14
   36c03:	test   bl,bl
   36c05:	je     36c4c <__sprintf_chk@plt+0x2c29c>
   36c07:	mov    QWORD PTR [rsp+0x8],r8
   36c0c:	call   a980 <__ctype_b_loc@plt>
   36c11:	mov    r8,QWORD PTR [rsp+0x8]
   36c16:	mov    rdx,QWORD PTR [rax]
   36c19:	jmp    36c31 <__sprintf_chk@plt+0x2c281>
   36c1b:	nop    DWORD PTR [rax+rax*1+0x0]
   36c20:	movzx  ebx,BYTE PTR [r8+0x1]
   36c25:	add    r8,0x1
   36c29:	sub    r15,0x1
   36c2d:	test   bl,bl
   36c2f:	je     36c4c <__sprintf_chk@plt+0x2c29c>
   36c31:	movzx  eax,bl
   36c34:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   36c39:	jne    36c20 <__sprintf_chk@plt+0x2c270>
   36c3b:	cmp    bl,0x7b
   36c3e:	jne    36c4c <__sprintf_chk@plt+0x2c29c>
   36c40:	cmp    BYTE PTR [r8+r15*1-0x1],0x7d
   36c46:	je     37549 <__sprintf_chk@plt+0x2cb99>
   36c4c:	mov    rax,QWORD PTR [rsp+0x70]
   36c51:	sub    rax,r14
   36c54:	cmp    rax,r15
   36c57:	jb     36e90 <__sprintf_chk@plt+0x2c4e0>
   36c5d:	mov    rdx,r15
   36c60:	mov    rsi,r8
   36c63:	mov    rdi,r14
   36c66:	call   a420 <memcpy@plt>
   36c6b:	add    r15,QWORD PTR [rsp+0x68]
   36c70:	mov    QWORD PTR [rsp+0x68],r15
   36c75:	jmp    35ac0 <__sprintf_chk@plt+0x2b110>
   36c7a:	nop    WORD PTR [rax+rax*1+0x0]
   36c80:	lea    rsi,[rsp+0xb0]
   36c88:	call   49490 <argp_usage@@Base+0x6110>
   36c8d:	mov    r9,rax
   36c90:	jmp    3619d <__sprintf_chk@plt+0x2b7ed>
   36c95:	nop    DWORD PTR [rax]
   36c98:	mov    rdi,QWORD PTR [rsp+0x10]
   36c9d:	mov    rsi,r12
   36ca0:	call   4ca80 <_obstack_newchunk@@Base>
   36ca5:	mov    r15,QWORD PTR [rsp+0x68]
   36caa:	jmp    35aa5 <__sprintf_chk@plt+0x2b0f5>
   36caf:	nop
   36cb0:	mov    rdi,QWORD PTR [rsp+0x10]
   36cb5:	mov    rsi,rdx
   36cb8:	mov    QWORD PTR [rsp+0x8],rdx
   36cbd:	call   4ca80 <_obstack_newchunk@@Base>
   36cc2:	mov    r15,QWORD PTR [rsp+0x68]
   36cc7:	mov    rdx,QWORD PTR [rsp+0x8]
   36ccc:	jmp    36bd3 <__sprintf_chk@plt+0x2c223>
   36cd1:	nop    DWORD PTR [rax+0x0]
   36cd8:	movsx  eax,BYTE PTR [rbp+0x1]
   36cdc:	mov    DWORD PTR [rsp+0x2c],eax
   36ce0:	mov    edx,eax
   36ce2:	test   eax,eax
   36ce4:	je     37ee8 <__sprintf_chk@plt+0x2d538>
   36cea:	lea    rax,[rbp+0x2]
   36cee:	mov    QWORD PTR [rsp+0x8],rax
   36cf3:	movzx  eax,BYTE PTR [rbp+0x2]
   36cf7:	test   al,al
   36cf9:	je     37ee8 <__sprintf_chk@plt+0x2d538>
   36cff:	mov    r9d,0x2
   36d05:	mov    r11d,0x2
   36d0b:	jmp    36d32 <__sprintf_chk@plt+0x2c382>
   36d0d:	nop    DWORD PTR [rax]
   36d10:	cmp    al,0x5c
   36d12:	jne    36d1e <__sprintf_chk@plt+0x2c36e>
   36d14:	cmp    BYTE PTR [rbp+r11*1+0x1],0x1
   36d1a:	sbb    r13d,0xffffffff
   36d1e:	movsxd r11,r13d
   36d21:	movzx  eax,BYTE PTR [rbp+r11*1+0x0]
   36d27:	mov    r9,r11
   36d2a:	test   al,al
   36d2c:	je     37ee8 <__sprintf_chk@plt+0x2d538>
   36d32:	lea    r13d,[r9+0x1]
   36d36:	cmp    dl,al
   36d38:	jne    36d10 <__sprintf_chk@plt+0x2c360>
   36d3a:	movsxd rdx,r13d
   36d3d:	lea    rcx,[rbp+rdx*1+0x0]
   36d42:	movzx  ebx,BYTE PTR [rcx]
   36d45:	mov    QWORD PTR [rsp],rcx
   36d49:	test   bl,bl
   36d4b:	je     37ee8 <__sprintf_chk@plt+0x2d538>
   36d51:	mov    r12d,r13d
   36d54:	jmp    36d82 <__sprintf_chk@plt+0x2c3d2>
   36d56:	cs nop WORD PTR [rax+rax*1+0x0]
   36d60:	cmp    bl,0x5c
   36d63:	jne    36d6e <__sprintf_chk@plt+0x2c3be>
   36d65:	cmp    BYTE PTR [rbp+rdx*1+0x1],0x1
   36d6a:	sbb    r12d,0xffffffff
   36d6e:	add    r12d,0x1
   36d72:	movsxd rdx,r12d
   36d75:	movzx  ebx,BYTE PTR [rbp+rdx*1+0x0]
   36d7a:	test   bl,bl
   36d7c:	je     37ee8 <__sprintf_chk@plt+0x2d538>
   36d82:	cmp    al,bl
   36d84:	jne    36d60 <__sprintf_chk@plt+0x2c3b0>
   36d86:	mov    eax,DWORD PTR [rip+0x45c18]        # 7c9a4 <_obstack_memory_used@@Base+0x2fd24>
   36d8c:	lea    rdi,[rbp+rdx*1+0x1]
   36d91:	mov    DWORD PTR [r14+0x8],0x0
   36d99:	mov    QWORD PTR [rsp+0x40],rdi
   36d9e:	mov    DWORD PTR [r14+0xc],eax
   36da2:	movzx  eax,BYTE PTR [rdi]
   36da5:	test   al,al
   36da7:	je     379a7 <__sprintf_chk@plt+0x2cff7>
   36dad:	cmp    al,0x3b
   36daf:	je     379a7 <__sprintf_chk@plt+0x2cff7>
   36db5:	xor    ecx,ecx
   36db7:	mov    DWORD PTR [rsp+0x10],r12d
   36dbc:	lea    rbp,[r14+0xc]
   36dc0:	mov    QWORD PTR [rsp+0x18],r11
   36dc5:	mov    r12d,ecx
   36dc8:	mov    DWORD PTR [rsp+0x20],r9d
   36dcd:	jmp    36e11 <__sprintf_chk@plt+0x2c461>
   36dcf:	nop
   36dd0:	cmp    al,0x2f
   36dd2:	jg     36e60 <__sprintf_chk@plt+0x2c4b0>
   36dd8:	movsx  esi,al
   36ddb:	mov    rdi,rbp
   36dde:	call   3b350 <__sprintf_chk@plt+0x309a0>
   36de3:	test   eax,eax
   36de5:	jne    37ec0 <__sprintf_chk@plt+0x2d510>
   36deb:	mov    rax,QWORD PTR [rsp+0x40]
   36df0:	lea    rdi,[rax+0x1]
   36df4:	nop    DWORD PTR [rax+0x0]
   36df8:	mov    QWORD PTR [rsp+0x40],rdi
   36dfd:	movzx  eax,BYTE PTR [rax+0x1]
   36e01:	test   al,al
   36e03:	je     3747e <__sprintf_chk@plt+0x2cace>
   36e09:	cmp    al,0x3b
   36e0b:	je     36ffb <__sprintf_chk@plt+0x2c64b>
   36e11:	cmp    al,0x69
   36e13:	je     36e50 <__sprintf_chk@plt+0x2c4a0>
   36e15:	jg     36e38 <__sprintf_chk@plt+0x2c488>
   36e17:	cmp    al,0x39
   36e19:	jle    36dd0 <__sprintf_chk@plt+0x2c420>
   36e1b:	cmp    al,0x67
   36e1d:	jne    36dd8 <__sprintf_chk@plt+0x2c428>
   36e1f:	mov    rax,QWORD PTR [rsp+0x40]
   36e24:	mov    DWORD PTR [r14+0x8],0x1
   36e2c:	lea    rdi,[rax+0x1]
   36e30:	jmp    36df8 <__sprintf_chk@plt+0x2c448>
   36e32:	nop    WORD PTR [rax+rax*1+0x0]
   36e38:	cmp    al,0x78
   36e3a:	jne    36dd8 <__sprintf_chk@plt+0x2c428>
   36e3c:	mov    rax,QWORD PTR [rsp+0x40]
   36e41:	or     r12d,0x1
   36e45:	lea    rdi,[rax+0x1]
   36e49:	jmp    36df8 <__sprintf_chk@plt+0x2c448>
   36e4b:	nop    DWORD PTR [rax+rax*1+0x0]
   36e50:	mov    rax,QWORD PTR [rsp+0x40]
   36e55:	or     r12d,0x2
   36e59:	lea    rdi,[rax+0x1]
   36e5d:	jmp    36df8 <__sprintf_chk@plt+0x2c448>
   36e5f:	nop
   36e60:	lea    rsi,[rsp+0x40]
   36e65:	xor    edx,edx
   36e67:	call   a770 <strtoul@plt>
   36e6c:	mov    rdi,QWORD PTR [rsp+0x40]
   36e71:	mov    DWORD PTR [r14+0x10],eax
   36e75:	lea    rax,[rdi-0x1]
   36e79:	jmp    36df8 <__sprintf_chk@plt+0x2c448>
   36e7e:	xchg   ax,ax
   36e80:	mov    rbp,rbx
   36e83:	jmp    362f0 <__sprintf_chk@plt+0x2b940>
   36e88:	nop    DWORD PTR [rax+rax*1+0x0]
   36e90:	mov    rdi,QWORD PTR [rsp+0x10]
   36e95:	mov    rsi,r15
   36e98:	mov    QWORD PTR [rsp+0x8],r8
   36e9d:	call   4ca80 <_obstack_newchunk@@Base>
   36ea2:	mov    r14,QWORD PTR [rsp+0x68]
   36ea7:	mov    r8,QWORD PTR [rsp+0x8]
   36eac:	jmp    36c5d <__sprintf_chk@plt+0x2c2ad>
   36eb1:	nop    DWORD PTR [rax+0x0]
   36eb8:	mov    QWORD PTR [rip+0x48081],r14        # 7ef40 <obstack_alloc_failed_handler@@Base+0x108>
   36ebf:	jmp    36328 <__sprintf_chk@plt+0x2b978>
   36ec4:	cmp    bl,0x6f
   36ec7:	je     37830 <__sprintf_chk@plt+0x2ce80>
   36ecd:	cmp    bl,0x75
   36ed0:	jne    35f08 <__sprintf_chk@plt+0x2b558>
   36ed6:	or     r8d,0x9c0
   36edd:	nop    DWORD PTR [rax]
   36ee0:	add    rbp,0x1
   36ee4:	movzx  ebx,BYTE PTR [rbp+0x0]
   36ee8:	jmp    35eea <__sprintf_chk@plt+0x2b53a>
   36eed:	mov    eax,ebx
   36eef:	and    eax,0xffffffef
   36ef2:	cmp    al,0x2d
   36ef4:	je     36eff <__sprintf_chk@plt+0x2c54f>
   36ef6:	cmp    bl,0x2b
   36ef9:	jne    35f08 <__sprintf_chk@plt+0x2b558>
   36eff:	lea    r10,[rsi+0x1]
   36f03:	shl    rsi,0x4
   36f07:	add    rsi,r9
   36f0a:	jmp    36f59 <__sprintf_chk@plt+0x2c5a9>
   36f0c:	cmp    al,0x2f
   36f0e:	jg     374c2 <__sprintf_chk@plt+0x2cb12>
   36f14:	mov    ebp,0x1
   36f19:	xor    edx,edx
   36f1b:	mov    DWORD PTR [rsi+0x4],r8d
   36f1f:	mov    DWORD PTR [rsi+0x8],edx
   36f22:	mov    BYTE PTR [rsi],bl
   36f24:	mov    ebx,eax
   36f26:	mov    BYTE PTR [rsi+0x1],bpl
   36f2a:	mov    rbp,rcx
   36f2d:	mov    eax,edx
   36f2f:	and    eax,r8d
   36f32:	test   r8d,r8d
   36f35:	cmovne edx,eax
   36f38:	mov    DWORD PTR [rsi+0xc],edx
   36f3b:	mov    edx,ebx
   36f3d:	lea    rax,[r10+0x1]
   36f41:	add    rsi,0x10
   36f45:	and    edx,0xffffffef
   36f48:	cmp    dl,0x2d
   36f4b:	je     36f56 <__sprintf_chk@plt+0x2c5a6>
   36f4d:	cmp    bl,0x2b
   36f50:	jne    37b80 <__sprintf_chk@plt+0x2d1d0>
   36f56:	mov    r10,rax
   36f59:	movsx  eax,BYTE PTR [rbp+0x1]
   36f5d:	lea    rcx,[rbp+0x1]
   36f61:	cmp    al,0x6f
   36f63:	je     376a0 <__sprintf_chk@plt+0x2ccf0>
   36f69:	jg     36f92 <__sprintf_chk@plt+0x2c5e2>
   36f6b:	cmp    al,0x37
   36f6d:	jle    36f0c <__sprintf_chk@plt+0x2c55c>
   36f6f:	lea    rdi,[rbp+0x2]
   36f73:	mov    edx,0x38
   36f78:	cmp    al,0x67
   36f7a:	jne    36f9f <__sprintf_chk@plt+0x2c5ef>
   36f7c:	mov    BYTE PTR [rsi],bl
   36f7e:	movzx  ebx,BYTE PTR [rbp+0x2]
   36f82:	mov    rbp,rdi
   36f85:	mov    BYTE PTR [rsi+0x1],0x3
   36f89:	mov    DWORD PTR [rsi+0x4],r8d
   36f8d:	mov    DWORD PTR [rsi+0x8],edx
   36f90:	jmp    36f2d <__sprintf_chk@plt+0x2c57d>
   36f92:	lea    rdi,[rbp+0x2]
   36f96:	mov    edx,0x1c0
   36f9b:	cmp    al,0x75
   36f9d:	je     36f7c <__sprintf_chk@plt+0x2c5cc>
   36f9f:	mov    ebp,0x1
   36fa4:	xor    edx,edx
   36fa6:	lea    edi,[rax-0x58]
   36fa9:	cmp    dil,0x20
   36fad:	ja     36f1b <__sprintf_chk@plt+0x2c56b>
   36fb3:	movzx  edi,dil
   36fb7:	movsxd rdi,DWORD PTR [r11+rdi*4]
   36fbb:	add    rdi,r11
   36fbe:	notrack jmp rdi
   36fc1:	or     edx,0x49
   36fc4:	nop    DWORD PTR [rax+0x0]
   36fc8:	add    rcx,0x1
   36fcc:	movzx  eax,BYTE PTR [rcx]
   36fcf:	jmp    36fa6 <__sprintf_chk@plt+0x2c5f6>
   36fd1:	or     dl,0x92
   36fd4:	jmp    36fc8 <__sprintf_chk@plt+0x2c618>
   36fd6:	or     dh,0x2
   36fd9:	jmp    36fc8 <__sprintf_chk@plt+0x2c618>
   36fdb:	or     dh,0xc
   36fde:	jmp    36fc8 <__sprintf_chk@plt+0x2c618>
   36fe0:	or     edx,0x124
   36fe6:	jmp    36fc8 <__sprintf_chk@plt+0x2c618>
   36fe8:	mov    ebp,0x2
   36fed:	jmp    36fc8 <__sprintf_chk@plt+0x2c618>
   36fef:	nop
   36ff0:	mov    r12d,0x7
   36ff6:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   36ffb:	mov    r9d,DWORD PTR [rsp+0x20]
   37000:	mov    r11,QWORD PTR [rsp+0x18]
   37005:	mov    DWORD PTR [rsp+0x20],r12d
   3700a:	mov    r12d,DWORD PTR [rsp+0x10]
   3700f:	add    rdi,0x1
   37013:	mov    QWORD PTR [rsp+0x40],rdi
   37018:	lea    edi,[r9-0x1]
   3701c:	mov    QWORD PTR [rsp+0x18],r11
   37021:	movsxd rdi,edi
   37024:	mov    DWORD PTR [rsp+0x10],r9d
   37029:	call   a4a0 <malloc@plt>
   3702e:	mov    rbp,rax
   37031:	test   rax,rax
   37034:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   3703a:	mov    r9d,DWORD PTR [rsp+0x10]
   3703f:	mov    rsi,QWORD PTR [rsp+0x8]
   37044:	mov    rdi,rax
   37047:	lea    edx,[r9-0x2]
   3704b:	movsxd rdx,edx
   3704e:	call   a420 <memcpy@plt>
   37053:	mov    edx,DWORD PTR [rsp+0x20]
   37057:	lea    rdi,[r14+0x18]
   3705b:	mov    rsi,rbp
   3705e:	mov    r11,QWORD PTR [rsp+0x18]
   37063:	mov    BYTE PTR [rbp+r11*1-0x2],0x0
   37069:	mov    QWORD PTR [rsp+0x8],r11
   3706e:	call   505c0 <_obstack_memory_used@@Base+0x3940>
   37073:	mov    r11,QWORD PTR [rsp+0x8]
   37078:	mov    r9d,DWORD PTR [rsp+0x10]
   3707d:	test   eax,eax
   3707f:	jne    37d3c <__sprintf_chk@plt+0x2d38c>
   37085:	cmp    BYTE PTR [rbp+0x0],0x5e
   37089:	je     3749f <__sprintf_chk@plt+0x2caef>
   3708f:	cmp    r9d,0x2
   37093:	je     370a1 <__sprintf_chk@plt+0x2c6f1>
   37095:	cmp    BYTE PTR [rbp+r11*1-0x3],0x24
   3709b:	je     3749f <__sprintf_chk@plt+0x2caef>
   370a1:	mov    rdi,rbp
   370a4:	sub    r12d,r13d
   370a7:	call   9ce0 <free@plt>
   370ac:	lea    edi,[r12+0x1]
   370b1:	movsxd rdi,edi
   370b4:	call   a4a0 <malloc@plt>
   370b9:	mov    rbp,rax
   370bc:	test   rax,rax
   370bf:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   370c5:	mov    rsi,QWORD PTR [rsp]
   370c9:	movsxd r12,r12d
   370cc:	mov    rdi,rax
   370cf:	mov    rdx,r12
   370d2:	call   a420 <memcpy@plt>
   370d7:	mov    QWORD PTR [rsp+0x38],rbp
   370dc:	mov    rdx,rbp
   370df:	mov    rsi,rbp
   370e2:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
   370e8:	movzx  eax,BYTE PTR [rbp+0x0]
   370ec:	test   al,al
   370ee:	jne    37114 <__sprintf_chk@plt+0x2c764>
   370f0:	jmp    37458 <__sprintf_chk@plt+0x2caa8>
   370f5:	nop    DWORD PTR [rax]
   370f8:	cmp    al,0x26
   370fa:	je     373f8 <__sprintf_chk@plt+0x2ca48>
   37100:	add    rdx,0x1
   37104:	mov    QWORD PTR [rsp+0x38],rdx
   37109:	movzx  eax,BYTE PTR [rdx]
   3710c:	test   al,al
   3710e:	je     37458 <__sprintf_chk@plt+0x2caa8>
   37114:	cmp    al,0x5c
   37116:	jne    370f8 <__sprintf_chk@plt+0x2c748>
   37118:	mov    rdi,r14
   3711b:	call   3b220 <__sprintf_chk@plt+0x30870>
   37120:	mov    r12,QWORD PTR [rsp+0x38]
   37125:	lea    rdi,[r12+0x1]
   3712a:	mov    QWORD PTR [rsp+0x38],rdi
   3712f:	movzx  edx,BYTE PTR [r12+0x1]
   37135:	lea    eax,[rdx-0x26]
   37138:	cmp    al,0x50
   3713a:	ja     37150 <__sprintf_chk@plt+0x2c7a0>
   3713c:	lea    rcx,[rip+0x336a9]        # 6a7ec <_obstack_memory_used@@Base+0x1db6c>
   37143:	movzx  eax,al
   37146:	movsxd rax,DWORD PTR [rcx+rax*4]
   3714a:	add    rax,rcx
   3714d:	notrack jmp rax
   37150:	cmp    dl,bl
   37152:	je     37896 <__sprintf_chk@plt+0x2cee6>
   37158:	mov    BYTE PTR [rsp+0xd1],dl
   3715f:	lea    rsi,[rsp+0xd0]
   37167:	lea    rdx,[rsp+0xd2]
   3716f:	mov    rdi,r14
   37172:	mov    BYTE PTR [rsp+0xd0],0x5c
   3717a:	call   3b220 <__sprintf_chk@plt+0x30870>
   3717f:	mov    rax,QWORD PTR [rsp+0x38]
   37184:	lea    rsi,[rax+0x1]
   37188:	mov    QWORD PTR [rsp+0x38],rsi
   3718d:	nop    DWORD PTR [rax]
   37190:	mov    rdx,rsi
   37193:	jmp    37109 <__sprintf_chk@plt+0x2c759>
   37198:	lea    rsi,[rsp+0x38]
   3719d:	mov    edx,0xa
   371a2:	call   a770 <strtoul@plt>
   371a7:	mov    r12,rax
   371aa:	cmp    rax,QWORD PTR [r14+0x48]
   371ae:	ja     37def <__sprintf_chk@plt+0x2d43f>
   371b4:	mov    edi,0x20
   371b9:	call   a4a0 <malloc@plt>
   371be:	test   rax,rax
   371c1:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   371c7:	mov    rdx,QWORD PTR [r14+0x60]
   371cb:	mov    QWORD PTR [rax],0x0
   371d2:	test   rdx,rdx
   371d5:	je     37926 <__sprintf_chk@plt+0x2cf76>
   371db:	mov    QWORD PTR [rdx],rax
   371de:	add    QWORD PTR [r14+0x68],0x1
   371e3:	mov    rsi,QWORD PTR [rsp+0x38]
   371e8:	mov    QWORD PTR [r14+0x60],rax
   371ec:	mov    DWORD PTR [rax+0x8],0x1
   371f3:	mov    QWORD PTR [rax+0x10],r12
   371f7:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   371f9:	mov    esi,0xb
   371fe:	xchg   ax,ax
   37200:	mov    rdi,r14
   37203:	call   3b2d0 <__sprintf_chk@plt+0x30920>
   37208:	mov    rax,QWORD PTR [rsp+0x38]
   3720d:	lea    rsi,[rax+0x1]
   37211:	mov    QWORD PTR [rsp+0x38],rsi
   37216:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   3721b:	mov    edi,0x20
   37220:	call   a4a0 <malloc@plt>
   37225:	test   rax,rax
   37228:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   3722e:	mov    rdx,QWORD PTR [r14+0x60]
   37232:	mov    QWORD PTR [rax],0x0
   37239:	test   rdx,rdx
   3723c:	je     37950 <__sprintf_chk@plt+0x2cfa0>
   37242:	mov    QWORD PTR [rdx],rax
   37245:	lea    rsi,[r12+0x2]
   3724a:	add    QWORD PTR [r14+0x68],0x1
   3724f:	mov    QWORD PTR [r14+0x60],rax
   37253:	mov    DWORD PTR [rax+0x8],0x2
   3725a:	mov    DWORD PTR [rax+0x10],0x1
   37261:	mov    QWORD PTR [rsp+0x38],rsi
   37266:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   3726b:	mov    esi,0x9
   37270:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   37272:	mov    esi,0xd
   37277:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   37279:	mov    esi,0xa
   3727e:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   37280:	mov    edi,0x20
   37285:	call   a4a0 <malloc@plt>
   3728a:	test   rax,rax
   3728d:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   37293:	mov    rdx,QWORD PTR [r14+0x60]
   37297:	mov    QWORD PTR [rax],0x0
   3729e:	test   rdx,rdx
   372a1:	je     37959 <__sprintf_chk@plt+0x2cfa9>
   372a7:	mov    QWORD PTR [rdx],rax
   372aa:	lea    rsi,[r12+0x2]
   372af:	add    QWORD PTR [r14+0x68],0x1
   372b4:	mov    QWORD PTR [r14+0x60],rax
   372b8:	mov    DWORD PTR [rax+0x8],0x2
   372bf:	mov    DWORD PTR [rax+0x10],0x2
   372c6:	mov    QWORD PTR [rsp+0x38],rsi
   372cb:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   372d0:	mov    esi,0xc
   372d5:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   372da:	mov    esi,0x8
   372df:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   372e4:	mov    esi,0x7
   372e9:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   372ee:	mov    esi,0x5c
   372f3:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   372f8:	mov    edi,0x20
   372fd:	call   a4a0 <malloc@plt>
   37302:	test   rax,rax
   37305:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   3730b:	mov    rdx,QWORD PTR [r14+0x60]
   3730f:	mov    QWORD PTR [rax],0x0
   37316:	test   rdx,rdx
   37319:	je     37914 <__sprintf_chk@plt+0x2cf64>
   3731f:	mov    QWORD PTR [rdx],rax
   37322:	lea    rsi,[r12+0x2]
   37327:	add    QWORD PTR [r14+0x68],0x1
   3732c:	mov    QWORD PTR [r14+0x60],rax
   37330:	mov    DWORD PTR [rax+0x8],0x2
   37337:	mov    DWORD PTR [rax+0x10],0x3
   3733e:	mov    QWORD PTR [rsp+0x38],rsi
   37343:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   37348:	mov    edi,0x20
   3734d:	call   a4a0 <malloc@plt>
   37352:	test   rax,rax
   37355:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   3735b:	mov    rdx,QWORD PTR [r14+0x60]
   3735f:	mov    QWORD PTR [rax],0x0
   37366:	test   rdx,rdx
   37369:	je     37962 <__sprintf_chk@plt+0x2cfb2>
   3736f:	mov    QWORD PTR [rdx],rax
   37372:	lea    rsi,[r12+0x2]
   37377:	add    QWORD PTR [r14+0x68],0x1
   3737c:	mov    QWORD PTR [r14+0x60],rax
   37380:	mov    DWORD PTR [rax+0x8],0x2
   37387:	mov    DWORD PTR [rax+0x10],0x4
   3738e:	mov    QWORD PTR [rsp+0x38],rsi
   37393:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   37398:	mov    esi,0x26
   3739d:	jmp    37200 <__sprintf_chk@plt+0x2c850>
   373a2:	mov    edi,0x20
   373a7:	call   a4a0 <malloc@plt>
   373ac:	test   rax,rax
   373af:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   373b5:	mov    rdx,QWORD PTR [r14+0x60]
   373b9:	mov    QWORD PTR [rax],0x0
   373c0:	test   rdx,rdx
   373c3:	je     3791d <__sprintf_chk@plt+0x2cf6d>
   373c9:	mov    QWORD PTR [rdx],rax
   373cc:	lea    rsi,[r12+0x2]
   373d1:	add    QWORD PTR [r14+0x68],0x1
   373d6:	mov    QWORD PTR [r14+0x60],rax
   373da:	mov    DWORD PTR [rax+0x8],0x2
   373e1:	mov    DWORD PTR [rax+0x10],0x0
   373e8:	mov    QWORD PTR [rsp+0x38],rsi
   373ed:	jmp    37190 <__sprintf_chk@plt+0x2c7e0>
   373f2:	nop    WORD PTR [rax+rax*1+0x0]
   373f8:	mov    rdi,r14
   373fb:	call   3b220 <__sprintf_chk@plt+0x30870>
   37400:	mov    edi,0x20
   37405:	call   a4a0 <malloc@plt>
   3740a:	test   rax,rax
   3740d:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   37413:	mov    rdx,QWORD PTR [r14+0x60]
   37417:	mov    QWORD PTR [rax],0x0
   3741e:	test   rdx,rdx
   37421:	je     37478 <__sprintf_chk@plt+0x2cac8>
   37423:	mov    QWORD PTR [rdx],rax
   37426:	mov    QWORD PTR [r14+0x60],rax
   3742a:	mov    DWORD PTR [rax+0x8],0x1
   37431:	mov    QWORD PTR [rax+0x10],0x0
   37439:	mov    rax,QWORD PTR [rsp+0x38]
   3743e:	add    QWORD PTR [r14+0x68],0x1
   37443:	lea    rsi,[rax+0x1]
   37447:	mov    QWORD PTR [rsp+0x38],rsi
   3744c:	mov    rdx,rsi
   3744f:	jmp    37109 <__sprintf_chk@plt+0x2c759>
   37454:	nop    DWORD PTR [rax+0x0]
   37458:	mov    rdi,r14
   3745b:	call   3b220 <__sprintf_chk@plt+0x30870>
   37460:	mov    rdi,rbp
   37463:	call   9ce0 <free@plt>
   37468:	mov    rbp,QWORD PTR [rsp+0x40]
   3746d:	jmp    362f0 <__sprintf_chk@plt+0x2b940>
   37472:	nop    WORD PTR [rax+rax*1+0x0]
   37478:	mov    QWORD PTR [r14+0x58],rax
   3747c:	jmp    37426 <__sprintf_chk@plt+0x2ca76>
   3747e:	mov    r9d,DWORD PTR [rsp+0x20]
   37483:	mov    r11,QWORD PTR [rsp+0x18]
   37488:	mov    DWORD PTR [rsp+0x20],r12d
   3748d:	mov    r12d,DWORD PTR [rsp+0x10]
   37492:	cmp    al,0x3b
   37494:	jne    37018 <__sprintf_chk@plt+0x2c668>
   3749a:	jmp    3700f <__sprintf_chk@plt+0x2c65f>
   3749f:	mov    DWORD PTR [r14+0x8],0x0
   374a7:	jmp    370a1 <__sprintf_chk@plt+0x2c6f1>
   374ac:	mov    edi,0xa
   374b1:	call   9de0 <putchar@plt>
   374b6:	call   4b700 <argp_usage@@Base+0x8380>
   374bb:	xor    edi,edi
   374bd:	call   a820 <exit@plt>
   374c2:	xor    edx,edx
   374c4:	lea    edx,[rax+rdx*8-0x30]
   374c8:	add    rcx,0x1
   374cc:	cmp    edx,0xfff
   374d2:	ja     35f08 <__sprintf_chk@plt+0x2b558>
   374d8:	movsx  eax,BYTE PTR [rcx]
   374db:	lea    edi,[rax-0x30]
   374de:	cmp    dil,0x7
   374e2:	jbe    374c4 <__sprintf_chk@plt+0x2cb14>
   374e4:	test   r8d,r8d
   374e7:	jne    35f08 <__sprintf_chk@plt+0x2b558>
   374ed:	test   al,al
   374ef:	je     374f9 <__sprintf_chk@plt+0x2cb49>
   374f1:	cmp    al,0x2c
   374f3:	jne    35f08 <__sprintf_chk@plt+0x2b558>
   374f9:	mov    BYTE PTR [rsi],bl
   374fb:	mov    rbp,rcx
   374fe:	mov    ebx,eax
   37500:	mov    r8d,0xfff
   37506:	mov    DWORD PTR [rsi+0x8],edx
   37509:	mov    edx,0xfff
   3750e:	mov    BYTE PTR [rsi+0x1],0x1
   37512:	mov    DWORD PTR [rsi+0x4],0xfff
   37519:	jmp    36f38 <__sprintf_chk@plt+0x2c588>
   3751e:	cmp    r15,QWORD PTR [rsp+0x70]
   37523:	je     3796b <__sprintf_chk@plt+0x2cfbb>
   37529:	lea    rdx,[r15+0x1]
   3752d:	add    rbp,0x1
   37531:	mov    QWORD PTR [rsp+0x68],rdx
   37536:	mov    BYTE PTR [r15],al
   37539:	jmp    35a5b <__sprintf_chk@plt+0x2b0ab>
   3753e:	mov    r8d,0xfff
   37544:	jmp    36ee0 <__sprintf_chk@plt+0x2c530>
   37549:	mov    rdi,r15
   3754c:	mov    QWORD PTR [rsp+0x8],r8
   37551:	call   a4a0 <malloc@plt>
   37556:	mov    rbx,rax
   37559:	test   rax,rax
   3755c:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   37562:	mov    r8,QWORD PTR [rsp+0x8]
   37567:	lea    rdx,[r15-0x2]
   3756b:	mov    rdi,rax
   3756e:	lea    rsi,[r8+0x1]
   37572:	call   a420 <memcpy@plt>
   37577:	mov    BYTE PTR [rbx+r15*1-0x2],0x0
   3757d:	mov    rcx,QWORD PTR [rsp+0x18]
   37582:	mov    rdx,rbx
   37585:	mov    rdi,QWORD PTR [rsp]
   37589:	lea    rsi,[rip+0x2f6cb]        # 66c5b <_obstack_memory_used@@Base+0x19fdb>
   37590:	call   2dcb0 <__sprintf_chk@plt+0x23300>
   37595:	mov    r8,QWORD PTR [rsp+0x8]
   3759a:	test   eax,eax
   3759c:	je     378a7 <__sprintf_chk@plt+0x2cef7>
   375a2:	mov    rdi,QWORD PTR [rsp+0x68]
   375a7:	mov    rax,QWORD PTR [rsp+0x70]
   375ac:	sub    rax,rdi
   375af:	cmp    r15,rax
   375b2:	ja     379c9 <__sprintf_chk@plt+0x2d019>
   375b8:	mov    rdx,r15
   375bb:	mov    rsi,r8
   375be:	call   a420 <memcpy@plt>
   375c3:	add    r15,QWORD PTR [rsp+0x68]
   375c8:	mov    QWORD PTR [rsp+0x68],r15
   375cd:	mov    rdi,rbx
   375d0:	call   9ce0 <free@plt>
   375d5:	jmp    35ac0 <__sprintf_chk@plt+0x2b110>
   375da:	mov    rax,rsi
   375dd:	xor    r12d,r12d
   375e0:	lea    r12d,[rbx+r12*8-0x30]
   375e5:	add    rax,0x1
   375e9:	cmp    r12d,0xfff
   375f0:	ja     35f10 <__sprintf_chk@plt+0x2b560>
   375f6:	movsx  ebx,BYTE PTR [rax]
   375f9:	lea    edx,[rbx-0x30]
   375fc:	cmp    dl,0x7
   375ff:	jbe    375e0 <__sprintf_chk@plt+0x2cc30>
   37601:	test   bl,bl
   37603:	jne    35f10 <__sprintf_chk@plt+0x2b560>
   37609:	mov    ebx,r12d
   3760c:	sub    rax,rbp
   3760f:	mov    edi,0x20
   37614:	and    ebx,0xc00
   3761a:	or     ebx,0x3ff
   37620:	cmp    rax,0x5
   37624:	mov    eax,0xfff
   37629:	cmovge ebx,eax
   3762c:	call   a4a0 <malloc@plt>
   37631:	mov    r9,rax
   37634:	test   rax,rax
   37637:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   3763d:	mov    eax,0x13d
   37642:	mov    DWORD PTR [r9+0x4],0xfff
   3764a:	mov    WORD PTR [r9],ax
   3764e:	mov    DWORD PTR [r9+0x8],r12d
   37652:	mov    DWORD PTR [r9+0xc],ebx
   37656:	mov    BYTE PTR [r9+0x11],0x0
   3765b:	xor    edi,edi
   3765d:	mov    QWORD PTR [rip+0x478a4],r9        # 7ef08 <obstack_alloc_failed_handler@@Base+0xd0>
   37664:	xor    r12d,r12d
   37667:	call   a3f0 <umask@plt>
   3766c:	mov    edi,eax
   3766e:	mov    DWORD PTR [rip+0x47890],eax        # 7ef04 <obstack_alloc_failed_handler@@Base+0xcc>
   37674:	call   a3f0 <umask@plt>
   37679:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3767e:	mov    QWORD PTR [rip+0x4829f],0x1        # 7f928 <obstack_alloc_failed_handler@@Base+0xaf0>
   37689:	xor    r12d,r12d
   3768c:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   37691:	mov    BYTE PTR [rip+0x47e80],0x1        # 7f518 <obstack_alloc_failed_handler@@Base+0x6e0>
   37698:	xor    r12d,r12d
   3769b:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   376a0:	lea    rdi,[rbp+0x2]
   376a4:	mov    edx,0x7
   376a9:	jmp    36f7c <__sprintf_chk@plt+0x2c5cc>
   376ae:	mov    rax,rbx
   376b1:	and    ebx,0x1
   376b4:	pxor   xmm0,xmm0
   376b8:	shr    rax,1
   376bb:	or     rax,rbx
   376be:	cvtsi2sd xmm0,rax
   376c3:	addsd  xmm0,xmm0
   376c7:	jmp    3692c <__sprintf_chk@plt+0x2bf7c>
   376cc:	mov    DWORD PTR [rip+0x4812a],0x1        # 7f800 <obstack_alloc_failed_handler@@Base+0x9c8>
   376d6:	mov    r12d,ebx
   376d9:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   376de:	mov    rdi,QWORD PTR [rip+0x477c3]        # 7eea8 <obstack_alloc_failed_handler@@Base+0x70>
   376e5:	mov    DWORD PTR [rip+0x477c1],0xffffffff        # 7eeb0 <obstack_alloc_failed_handler@@Base+0x78>
   376ef:	test   rdi,rdi
   376f2:	je     35880 <__sprintf_chk@plt+0x2aed0>
   376f8:	lea    rsi,[rip+0x477b1]        # 7eeb0 <obstack_alloc_failed_handler@@Base+0x78>
   376ff:	xor    r12d,r12d
   37702:	call   28460 <__sprintf_chk@plt+0x1dab0>
   37707:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3770c:	test   rcx,rcx
   3770f:	jne    3792f <__sprintf_chk@plt+0x2cf7f>
   37715:	mov    QWORD PTR [rbx+0x8],0x4
   3771d:	mov    ecx,0x4
   37722:	test   rdi,rdi
   37725:	je     37a67 <__sprintf_chk@plt+0x2d0b7>
   3772b:	mov    rax,rcx
   3772e:	shr    rax,1
   37731:	lea    rax,[rcx+rax*1+0x1]
   37736:	mov    QWORD PTR [rbx+0x8],rax
   3773a:	lea    rsi,[rax*8+0x0]
   37742:	call   a570 <realloc@plt>
   37747:	mov    rdi,rax
   3774a:	test   rax,rax
   3774d:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   37753:	mov    QWORD PTR [rbx],rdi
   37756:	mov    rax,QWORD PTR [rbx+0x10]
   3775a:	jmp    35961 <__sprintf_chk@plt+0x2afb1>
   3775f:	mov    DWORD PTR [rip+0x44913],0x0        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   37769:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   3776e:	mov    rbp,QWORD PTR [rip+0x48063]        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   37775:	mov    rax,QWORD PTR [rbp+0x8]
   37779:	mov    rdx,QWORD PTR [rbp+0x0]
   3777d:	test   rax,rax
   37780:	je     37a3b <__sprintf_chk@plt+0x2d08b>
   37786:	mov    QWORD PTR [rax],rdx
   37789:	mov    rdx,QWORD PTR [rbp+0x0]
   3778d:	test   rdx,rdx
   37790:	je     37a2f <__sprintf_chk@plt+0x2d07f>
   37796:	mov    QWORD PTR [rdx+0x8],rax
   3779a:	mov    rdi,QWORD PTR [rbp+0x10]
   3779e:	call   9ce0 <free@plt>
   377a3:	mov    rdi,QWORD PTR [rbp+0x58]
   377a7:	call   9ce0 <free@plt>
   377ac:	mov    rdi,rbp
   377af:	call   9ce0 <free@plt>
   377b4:	jmp    364a1 <__sprintf_chk@plt+0x2baf1>
   377b9:	mov    rdi,QWORD PTR [rip+0x47700]        # 7eec0 <obstack_alloc_failed_handler@@Base+0x88>
   377c0:	mov    DWORD PTR [rip+0x476fe],0xffffffff        # 7eec8 <obstack_alloc_failed_handler@@Base+0x90>
   377ca:	test   rdi,rdi
   377cd:	je     35880 <__sprintf_chk@plt+0x2aed0>
   377d3:	lea    rsi,[rip+0x476ee]        # 7eec8 <obstack_alloc_failed_handler@@Base+0x90>
   377da:	xor    r12d,r12d
   377dd:	call   28590 <__sprintf_chk@plt+0x1dbe0>
   377e2:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   377e7:	mov    r12d,0x1
   377ed:	lea    rbp,[rip+0x3435c]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   377f4:	jmp    36465 <__sprintf_chk@plt+0x2bab5>
   377f9:	or     BYTE PTR [rsp+0xa0],0x2
   37801:	jmp    35b04 <__sprintf_chk@plt+0x2b154>
   37806:	mov    QWORD PTR [rip+0x47fc3],rbx        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   3780d:	jmp    364c8 <__sprintf_chk@plt+0x2bb18>
   37812:	mov    DWORD PTR [rip+0x47d00],0xa        # 7f51c <obstack_alloc_failed_handler@@Base+0x6e4>
   3781c:	xor    r12d,r12d
   3781f:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   37824:	or     r8d,0x438
   3782b:	jmp    36ee0 <__sprintf_chk@plt+0x2c530>
   37830:	or     r8d,0x207
   37837:	jmp    36ee0 <__sprintf_chk@plt+0x2c530>
   3783c:	test   rdi,rdi
   3783f:	je     37a89 <__sprintf_chk@plt+0x2d0d9>
   37845:	movabs rdx,0xaaaaaaaaaaaaaa9
   3784f:	cmp    rax,rdx
   37852:	ja     3794b <__sprintf_chk@plt+0x2cf9b>
   37858:	mov    rdx,rax
   3785b:	shr    rdx,1
   3785e:	lea    rax,[rax+rdx*1+0x1]
   37863:	lea    rsi,[rax*8+0x0]
   3786b:	mov    QWORD PTR [rip+0x483be],rax        # 7fc30 <argp_program_version_hook@@Base+0x58>
   37872:	call   a570 <realloc@plt>
   37877:	mov    rdi,rax
   3787a:	test   rax,rax
   3787d:	je     3794b <__sprintf_chk@plt+0x2cf9b>
   37883:	mov    QWORD PTR [rip+0x47a46],rdi        # 7f2d0 <obstack_alloc_failed_handler@@Base+0x498>
   3788a:	mov    rax,QWORD PTR [rip+0x47a37]        # 7f2c8 <obstack_alloc_failed_handler@@Base+0x490>
   37891:	jmp    3698e <__sprintf_chk@plt+0x2bfde>
   37896:	mov    esi,DWORD PTR [rsp+0x2c]
   3789a:	mov    rdi,r14
   3789d:	call   3b2d0 <__sprintf_chk@plt+0x30920>
   378a2:	jmp    3717f <__sprintf_chk@plt+0x2c7cf>
   378a7:	mov    rdx,QWORD PTR [rsp+0x20]
   378ac:	mov    rdi,QWORD PTR [rsp+0x40]
   378b1:	mov    rsi,QWORD PTR [rsp+0x48]
   378b6:	call   256c0 <__sprintf_chk@plt+0x1ad10>
   378bb:	mov    rdi,rax
   378be:	mov    r14,rax
   378c1:	call   a060 <strlen@plt>
   378c6:	mov    r15,rax
   378c9:	mov    rax,QWORD PTR [rsp+0x70]
   378ce:	sub    rax,QWORD PTR [rsp+0x68]
   378d3:	cmp    r15,rax
   378d6:	ja     37ad7 <__sprintf_chk@plt+0x2d127>
   378dc:	mov    rdi,QWORD PTR [rsp+0x68]
   378e1:	mov    rdx,r15
   378e4:	mov    rsi,r14
   378e7:	call   a420 <memcpy@plt>
   378ec:	add    r15,QWORD PTR [rsp+0x68]
   378f1:	mov    QWORD PTR [rsp+0x68],r15
   378f6:	jmp    375cd <__sprintf_chk@plt+0x2cc1d>
   378fb:	mov    rdi,QWORD PTR [rsp+0x10]
   37900:	mov    esi,0x1
   37905:	call   4ca80 <_obstack_newchunk@@Base>
   3790a:	mov    r14,QWORD PTR [rsp+0x68]
   3790f:	jmp    35ae4 <__sprintf_chk@plt+0x2b134>
   37914:	mov    QWORD PTR [r14+0x58],rax
   37918:	jmp    37322 <__sprintf_chk@plt+0x2c972>
   3791d:	mov    QWORD PTR [r14+0x58],rax
   37921:	jmp    373cc <__sprintf_chk@plt+0x2ca1c>
   37926:	mov    QWORD PTR [r14+0x58],rax
   3792a:	jmp    371de <__sprintf_chk@plt+0x2c82e>
   3792f:	test   rdi,rdi
   37932:	je     37a47 <__sprintf_chk@plt+0x2d097>
   37938:	movabs rax,0xaaaaaaaaaaaaaa9
   37942:	cmp    rcx,rax
   37945:	jbe    3772b <__sprintf_chk@plt+0x2cd7b>
   3794b:	call   19130 <__sprintf_chk@plt+0xe780>
   37950:	mov    QWORD PTR [r14+0x58],rax
   37954:	jmp    37245 <__sprintf_chk@plt+0x2c895>
   37959:	mov    QWORD PTR [r14+0x58],rax
   3795d:	jmp    372aa <__sprintf_chk@plt+0x2c8fa>
   37962:	mov    QWORD PTR [r14+0x58],rax
   37966:	jmp    37372 <__sprintf_chk@plt+0x2c9c2>
   3796b:	mov    rdi,QWORD PTR [rsp+0x10]
   37970:	mov    esi,0x1
   37975:	call   4ca80 <_obstack_newchunk@@Base>
   3797a:	mov    r15,QWORD PTR [rsp+0x68]
   3797f:	movzx  eax,BYTE PTR [rbp+0x0]
   37983:	jmp    37529 <__sprintf_chk@plt+0x2cb79>
   37988:	test   rbx,rbx
   3798b:	js     37b09 <__sprintf_chk@plt+0x2d159>
   37991:	pxor   xmm0,xmm0
   37995:	cvtsi2sd xmm0,rbx
   3799a:	mulsd  xmm0,QWORD PTR [rip+0x33b3e]        # 6b4e0 <_obstack_memory_used@@Base+0x1e860>
   379a2:	jmp    3692c <__sprintf_chk@plt+0x2bf7c>
   379a7:	mov    DWORD PTR [rsp+0x20],0x0
   379af:	jmp    37492 <__sprintf_chk@plt+0x2cae2>
   379b4:	lea    rdi,[rip+0x2fc39]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   379bb:	add    rbp,0x1
   379bf:	call   fb00 <__sprintf_chk@plt+0x5150>
   379c4:	jmp    36724 <__sprintf_chk@plt+0x2bd74>
   379c9:	mov    rdi,QWORD PTR [rsp+0x10]
   379ce:	mov    rsi,r15
   379d1:	mov    QWORD PTR [rsp+0x8],r8
   379d6:	call   4ca80 <_obstack_newchunk@@Base>
   379db:	mov    rdi,QWORD PTR [rsp+0x68]
   379e0:	mov    r8,QWORD PTR [rsp+0x8]
   379e5:	jmp    375b8 <__sprintf_chk@plt+0x2cc08>
   379ea:	cmp    BYTE PTR [rbp+0x2],0x2d
   379ee:	jne    36822 <__sprintf_chk@plt+0x2be72>
   379f4:	lea    rbx,[rip+0x44fc5]        # 7c9c0 <_obstack_memory_used@@Base+0x2fd40>
   379fb:	lea    rsi,[rbp+0x3]
   379ff:	xor    r12d,r12d
   37a02:	lea    r8,[rip+0x10a7]        # 38ab0 <__sprintf_chk@plt+0x2e100>
   37a09:	mov    rcx,rbx
   37a0c:	lea    rdx,[rip+0x42d6d]        # 7a780 <_obstack_memory_used@@Base+0x2db00>
   37a13:	lea    rdi,[rip+0x2f1fa]        # 66c14 <_obstack_memory_used@@Base+0x19f94>
   37a1a:	call   5afe0 <_obstack_memory_used@@Base+0xe360>
   37a1f:	mov    eax,DWORD PTR [rbx+rax*4]
   37a22:	not    eax
   37a24:	and    DWORD PTR [rip+0x44652],eax        # 7c07c <_obstack_memory_used@@Base+0x2f3fc>
   37a2a:	jmp    3589a <__sprintf_chk@plt+0x2aeea>
   37a2f:	mov    QWORD PTR [rip+0x47d9a],rax        # 7f7d0 <obstack_alloc_failed_handler@@Base+0x998>
   37a36:	jmp    3779a <__sprintf_chk@plt+0x2cdea>
   37a3b:	mov    QWORD PTR [rip+0x47d96],rdx        # 7f7d8 <obstack_alloc_failed_handler@@Base+0x9a0>
   37a42:	jmp    37789 <__sprintf_chk@plt+0x2cdd9>
   37a47:	mov    eax,0x8
   37a4c:	mul    rcx
   37a4f:	seto   dl
   37a52:	movzx  edx,dl
   37a55:	test   rax,rax
   37a58:	js     3794b <__sprintf_chk@plt+0x2cf9b>
   37a5e:	test   rdx,rdx
   37a61:	jne    3794b <__sprintf_chk@plt+0x2cf9b>
   37a67:	mov    QWORD PTR [rbx+0x8],rcx
   37a6b:	lea    rdi,[rcx*8+0x0]
   37a73:	call   a4a0 <malloc@plt>
   37a78:	mov    rdi,rax
   37a7b:	test   rax,rax
   37a7e:	jne    37753 <__sprintf_chk@plt+0x2cda3>
   37a84:	jmp    3794b <__sprintf_chk@plt+0x2cf9b>
   37a89:	test   rcx,rcx
   37a8c:	je     37b3b <__sprintf_chk@plt+0x2d18b>
   37a92:	mov    eax,0x8
   37a97:	mul    rcx
   37a9a:	seto   dl
   37a9d:	movzx  edx,dl
   37aa0:	test   rax,rax
   37aa3:	js     3794b <__sprintf_chk@plt+0x2cf9b>
   37aa9:	test   rdx,rdx
   37aac:	jne    3794b <__sprintf_chk@plt+0x2cf9b>
   37ab2:	lea    rdi,[rcx*8+0x0]
   37aba:	mov    QWORD PTR [rip+0x4816f],rcx        # 7fc30 <argp_program_version_hook@@Base+0x58>
   37ac1:	call   a4a0 <malloc@plt>
   37ac6:	mov    rdi,rax
   37ac9:	test   rax,rax
   37acc:	jne    37883 <__sprintf_chk@plt+0x2ced3>
   37ad2:	jmp    3794b <__sprintf_chk@plt+0x2cf9b>
   37ad7:	mov    rdi,QWORD PTR [rsp+0x10]
   37adc:	mov    rsi,r15
   37adf:	call   4ca80 <_obstack_newchunk@@Base>
   37ae4:	jmp    378dc <__sprintf_chk@plt+0x2cf2c>
   37ae9:	mov    rax,QWORD PTR [r15]
   37aec:	mov    edx,DWORD PTR [rax]
   37aee:	cmp    edx,0x2
   37af1:	je     37c07 <__sprintf_chk@plt+0x2d257>
   37af7:	test   edx,edx
   37af9:	je     37bda <__sprintf_chk@plt+0x2d22a>
   37aff:	mov    edi,0x40
   37b04:	call   a820 <exit@plt>
   37b09:	mov    rax,rbx
   37b0c:	and    ebx,0x1
   37b0f:	pxor   xmm0,xmm0
   37b13:	shr    rax,1
   37b16:	or     rax,rbx
   37b19:	cvtsi2sd xmm0,rax
   37b1e:	addsd  xmm0,xmm0
   37b22:	jmp    3799a <__sprintf_chk@plt+0x2cfea>
   37b27:	call   a0a0 <__stack_chk_fail@plt>
   37b2c:	mov    r12,r14
   37b2f:	mov    r14,r15
   37b32:	mov    r15,QWORD PTR [rsp]
   37b36:	jmp    35adb <__sprintf_chk@plt+0x2b12b>
   37b3b:	mov    ecx,0x10
   37b40:	jmp    37ab2 <__sprintf_chk@plt+0x2d102>
   37b45:	mov    rax,QWORD PTR [rip+0x479bc]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37b4c:	test   rax,rax
   37b4f:	je     37b53 <__sprintf_chk@plt+0x2d1a3>
   37b51:	call   rax
   37b53:	movsx  r12d,BYTE PTR [rbx]
   37b57:	mov    edx,0x5
   37b5c:	lea    rsi,[rip+0x2f070]        # 66bd3 <_obstack_memory_used@@Base+0x19f53>
   37b63:	xor    edi,edi
   37b65:	call   a040 <dcgettext@plt>
   37b6a:	mov    ecx,r12d
   37b6d:	mov    rdx,rax
   37b70:	xor    esi,esi
   37b72:	xor    edi,edi
   37b74:	xor    eax,eax
   37b76:	call   a640 <error@plt>
   37b7b:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   37b80:	cmp    bl,0x2c
   37b83:	jne    37e0e <__sprintf_chk@plt+0x2d45e>
   37b89:	movzx  ebx,BYTE PTR [rbp+0x1]
   37b8d:	mov    rsi,r10
   37b90:	add    rbp,0x1
   37b94:	jmp    35ee7 <__sprintf_chk@plt+0x2b537>
   37b99:	mov    rax,QWORD PTR [rip+0x47968]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37ba0:	test   rax,rax
   37ba3:	je     37ba7 <__sprintf_chk@plt+0x2d1f7>
   37ba5:	call   rax
   37ba7:	mov    rbx,QWORD PTR [rip+0x47412]        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
   37bae:	mov    edx,0x5
   37bb3:	lea    rsi,[rip+0x308b6]        # 68470 <_obstack_memory_used@@Base+0x1b7f0>
   37bba:	xor    edi,edi
   37bbc:	call   a040 <dcgettext@plt>
   37bc1:	mov    rcx,rbp
   37bc4:	mov    rdx,rax
   37bc7:	mov    r8,rbx
   37bca:	xor    esi,esi
   37bcc:	xor    edi,edi
   37bce:	xor    eax,eax
   37bd0:	call   a640 <error@plt>
   37bd5:	call   190e0 <__sprintf_chk@plt+0xe730>
   37bda:	mov    r12,QWORD PTR [rax+0x8]
   37bde:	xor    edi,edi
   37be0:	mov    edx,0x5
   37be5:	lea    rsi,[rip+0x2f119]        # 66d05 <_obstack_memory_used@@Base+0x1a085>
   37bec:	call   a040 <dcgettext@plt>
   37bf1:	xor    esi,esi
   37bf3:	xor    edi,edi
   37bf5:	mov    rdx,rax
   37bf8:	mov    rcx,r12
   37bfb:	xor    eax,eax
   37bfd:	call   a640 <error@plt>
   37c02:	jmp    37aff <__sprintf_chk@plt+0x2d14f>
   37c07:	mov    rbx,QWORD PTR [rax+0x10]
   37c0b:	mov    r12,QWORD PTR [rax+0x8]
   37c0f:	xor    edi,edi
   37c11:	mov    edx,0x5
   37c16:	lea    rsi,[rip+0x2f0ca]        # 66ce7 <_obstack_memory_used@@Base+0x1a067>
   37c1d:	call   a040 <dcgettext@plt>
   37c22:	mov    r8,rbx
   37c25:	mov    rcx,r12
   37c28:	xor    esi,esi
   37c2a:	mov    rdx,rax
   37c2d:	xor    edi,edi
   37c2f:	xor    eax,eax
   37c31:	call   a640 <error@plt>
   37c36:	jmp    37aff <__sprintf_chk@plt+0x2d14f>
   37c3b:	mov    rax,QWORD PTR [rip+0x478c6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37c42:	test   rax,rax
   37c45:	je     37c49 <__sprintf_chk@plt+0x2d299>
   37c47:	call   rax
   37c49:	mov    edx,0x5
   37c4e:	lea    rsi,[rip+0x3086b]        # 684c0 <_obstack_memory_used@@Base+0x1b840>
   37c55:	xor    edi,edi
   37c57:	call   a040 <dcgettext@plt>
   37c5c:	mov    rcx,rbp
   37c5f:	mov    rdx,rax
   37c62:	xor    esi,esi
   37c64:	xor    edi,edi
   37c66:	xor    eax,eax
   37c68:	call   a640 <error@plt>
   37c6d:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   37c72:	mov    rax,QWORD PTR [rip+0x4788f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37c79:	test   rax,rax
   37c7c:	je     37c80 <__sprintf_chk@plt+0x2d2d0>
   37c7e:	call   rax
   37c80:	mov    edx,0x5
   37c85:	lea    rsi,[rip+0x2ef23]        # 66baf <_obstack_memory_used@@Base+0x19f2f>
   37c8c:	xor    edi,edi
   37c8e:	call   a040 <dcgettext@plt>
   37c93:	xor    esi,esi
   37c95:	xor    edi,edi
   37c97:	mov    rdx,rax
   37c9a:	xor    eax,eax
   37c9c:	call   a640 <error@plt>
   37ca1:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   37ca6:	mov    rax,QWORD PTR [rip+0x4785b]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37cad:	test   rax,rax
   37cb0:	je     37cb4 <__sprintf_chk@plt+0x2d304>
   37cb2:	call   rax
   37cb4:	mov    edx,0x5
   37cb9:	lea    rsi,[rip+0x30830]        # 684f0 <_obstack_memory_used@@Base+0x1b870>
   37cc0:	xor    edi,edi
   37cc2:	call   a040 <dcgettext@plt>
   37cc7:	mov    ecx,0x200
   37ccc:	mov    rdx,rax
   37ccf:	jmp    37b70 <__sprintf_chk@plt+0x2d1c0>
   37cd4:	mov    rax,QWORD PTR [rip+0x4782d]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37cdb:	test   rax,rax
   37cde:	je     37ce2 <__sprintf_chk@plt+0x2d332>
   37ce0:	call   rax
   37ce2:	mov    edx,0x5
   37ce7:	lea    rsi,[rip+0x2ef7a]        # 66c68 <_obstack_memory_used@@Base+0x19fe8>
   37cee:	xor    edi,edi
   37cf0:	call   a040 <dcgettext@plt>
   37cf5:	mov    rdi,rbp
   37cf8:	mov    rbx,rax
   37cfb:	call   4b670 <argp_usage@@Base+0x82f0>
   37d00:	mov    r8,rbx
   37d03:	xor    esi,esi
   37d05:	xor    edi,edi
   37d07:	mov    rcx,rax
   37d0a:	lea    rdx,[rip+0x35166]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   37d11:	xor    eax,eax
   37d13:	call   a640 <error@plt>
   37d18:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   37d1d:	mov    rax,QWORD PTR [rip+0x477e4]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37d24:	test   rax,rax
   37d27:	je     37d2b <__sprintf_chk@plt+0x2d37b>
   37d29:	call   rax
   37d2b:	mov    edx,0x5
   37d30:	lea    rsi,[rip+0x30711]        # 68448 <_obstack_memory_used@@Base+0x1b7c8>
   37d37:	jmp    35f35 <__sprintf_chk@plt+0x2b585>
   37d3c:	cmp    eax,0x10
   37d3f:	ja     aab3 <__sprintf_chk@plt+0x103>
   37d45:	cdqe   
   37d47:	lea    rdx,[rip+0x330d2]        # 6ae20 <_obstack_memory_used@@Base+0x1e1a0>
   37d4e:	xor    edi,edi
   37d50:	lea    rsi,[rip+0x32f49]        # 6aca0 <_obstack_memory_used@@Base+0x1e020>
   37d57:	add    rsi,QWORD PTR [rdx+rax*8]
   37d5b:	mov    edx,0x5
   37d60:	call   a040 <dcgettext@plt>
   37d65:	mov    rdi,rax
   37d68:	mov    rbp,rax
   37d6b:	call   a060 <strlen@plt>
   37d70:	lea    rdx,[rax+0x1]
   37d74:	cmp    rdx,0x200
   37d7b:	ja     37dc1 <__sprintf_chk@plt+0x2d411>
   37d7d:	lea    r12,[rsp+0xd0]
   37d85:	mov    ecx,0x200
   37d8a:	mov    rsi,rbp
   37d8d:	mov    rdi,r12
   37d90:	call   a390 <__memcpy_chk@plt>
   37d95:	mov    rax,QWORD PTR [rip+0x4776c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37d9c:	test   rax,rax
   37d9f:	je     37da3 <__sprintf_chk@plt+0x2d3f3>
   37da1:	call   rax
   37da3:	mov    edx,0x5
   37da8:	lea    rsi,[rip+0x30631]        # 683e0 <_obstack_memory_used@@Base+0x1b760>
   37daf:	xor    edi,edi
   37db1:	call   a040 <dcgettext@plt>
   37db6:	mov    rcx,r12
   37db9:	mov    rdx,rax
   37dbc:	jmp    37c62 <__sprintf_chk@plt+0x2d2b2>
   37dc1:	mov    BYTE PTR [rsp+0x2cf],0x0
   37dc9:	mov    edx,0x1ff
   37dce:	jmp    37d7d <__sprintf_chk@plt+0x2d3cd>
   37dd0:	mov    rax,QWORD PTR [rip+0x47731]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37dd7:	test   rax,rax
   37dda:	je     37dde <__sprintf_chk@plt+0x2d42e>
   37ddc:	call   rax
   37dde:	mov    edx,0x5
   37de3:	lea    rsi,[rip+0x2ed7b]        # 66b65 <_obstack_memory_used@@Base+0x19ee5>
   37dea:	jmp    37cee <__sprintf_chk@plt+0x2d33e>
   37def:	mov    rax,QWORD PTR [rip+0x47712]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37df6:	test   rax,rax
   37df9:	je     37dfd <__sprintf_chk@plt+0x2d44d>
   37dfb:	call   rax
   37dfd:	mov    edx,0x5
   37e02:	lea    rsi,[rip+0x305ff]        # 68408 <_obstack_memory_used@@Base+0x1b788>
   37e09:	jmp    37c8c <__sprintf_chk@plt+0x2d2dc>
   37e0e:	test   bl,bl
   37e10:	jne    35f08 <__sprintf_chk@plt+0x2b558>
   37e16:	shl    r10,0x4
   37e1a:	mov    BYTE PTR [r9+r10*1+0x1],0x0
   37e20:	jmp    3765b <__sprintf_chk@plt+0x2ccab>
   37e25:	mov    rax,QWORD PTR [rip+0x476dc]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37e2c:	test   rax,rax
   37e2f:	je     37e33 <__sprintf_chk@plt+0x2d483>
   37e31:	call   rax
   37e33:	mov    edx,0x5
   37e38:	lea    rsi,[rip+0x30551]        # 68390 <_obstack_memory_used@@Base+0x1b710>
   37e3f:	jmp    37c8c <__sprintf_chk@plt+0x2d2dc>
   37e44:	mov    rax,QWORD PTR [rip+0x476bd]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37e4b:	test   rax,rax
   37e4e:	je     37e52 <__sprintf_chk@plt+0x2d4a2>
   37e50:	call   rax
   37e52:	mov    edx,0x5
   37e57:	lea    rsi,[rip+0x2ece1]        # 66b3f <_obstack_memory_used@@Base+0x19ebf>
   37e5e:	jmp    37cee <__sprintf_chk@plt+0x2d33e>
   37e63:	mov    rax,QWORD PTR [rip+0x4769e]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37e6a:	test   rax,rax
   37e6d:	je     37e71 <__sprintf_chk@plt+0x2d4c1>
   37e6f:	call   rax
   37e71:	mov    edx,0x5
   37e76:	lea    rsi,[rip+0x2ed04]        # 66b81 <_obstack_memory_used@@Base+0x19f01>
   37e7d:	jmp    37c8c <__sprintf_chk@plt+0x2d2dc>
   37e82:	mov    rax,QWORD PTR [rip+0x4767f]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37e89:	test   rax,rax
   37e8c:	je     37e90 <__sprintf_chk@plt+0x2d4e0>
   37e8e:	call   rax
   37e90:	mov    edx,0x5
   37e95:	lea    rsi,[rip+0x2edb0]        # 66c4c <_obstack_memory_used@@Base+0x19fcc>
   37e9c:	xor    edi,edi
   37e9e:	call   a040 <dcgettext@plt>
   37ea3:	mov    rdi,rbp
   37ea6:	mov    rbx,rax
   37ea9:	call   4b670 <argp_usage@@Base+0x82f0>
   37eae:	mov    r8,rbx
   37eb1:	lea    rdx,[rip+0x34fbf]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   37eb8:	mov    rcx,rax
   37ebb:	jmp    37bca <__sprintf_chk@plt+0x2d21a>
   37ec0:	mov    rax,QWORD PTR [rip+0x47641]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37ec7:	test   rax,rax
   37eca:	je     37ece <__sprintf_chk@plt+0x2d51e>
   37ecc:	call   rax
   37ece:	mov    rax,QWORD PTR [rsp+0x40]
   37ed3:	mov    edx,0x5
   37ed8:	lea    rsi,[rip+0x304d1]        # 683b0 <_obstack_memory_used@@Base+0x1b730>
   37edf:	movsx  r12d,BYTE PTR [rax]
   37ee3:	jmp    37b63 <__sprintf_chk@plt+0x2d1b3>
   37ee8:	mov    rax,QWORD PTR [rip+0x47619]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37eef:	test   rax,rax
   37ef2:	je     37ef6 <__sprintf_chk@plt+0x2d546>
   37ef4:	call   rax
   37ef6:	mov    edx,0x5
   37efb:	lea    rsi,[rip+0x2ecec]        # 66bee <_obstack_memory_used@@Base+0x19f6e>
   37f02:	jmp    37c8c <__sprintf_chk@plt+0x2d2dc>
   37f07:	mov    rax,QWORD PTR [rip+0x475fa]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37f0e:	test   rax,rax
   37f11:	je     37f15 <__sprintf_chk@plt+0x2d565>
   37f13:	call   rax
   37f15:	mov    edx,0x5
   37f1a:	lea    rsi,[rip+0x30627]        # 68548 <_obstack_memory_used@@Base+0x1b8c8>
   37f21:	jmp    37c8c <__sprintf_chk@plt+0x2d2dc>
   37f26:	mov    rax,QWORD PTR [rip+0x475db]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   37f2d:	test   rax,rax
   37f30:	je     37f34 <__sprintf_chk@plt+0x2d584>
   37f32:	call   rax
   37f34:	mov    edx,0x5
   37f39:	lea    rsi,[rip+0x2ed85]        # 66cc5 <_obstack_memory_used@@Base+0x1a045>
   37f40:	jmp    37cee <__sprintf_chk@plt+0x2d33e>
   37f45:	cs nop WORD PTR [rax+rax*1+0x0]
   37f4f:	nop
   37f50:	endbr64 
   37f54:	movzx  ecx,BYTE PTR [rdi]
   37f57:	xor    edx,edx
   37f59:	test   cl,cl
   37f5b:	je     37f7d <__sprintf_chk@plt+0x2d5cd>
   37f5d:	nop    DWORD PTR [rax]
   37f60:	mov    rax,rdx
   37f63:	add    rdi,0x1
   37f67:	shl    rax,0x5
   37f6b:	sub    rax,rdx
   37f6e:	xor    edx,edx
   37f70:	add    rax,rcx
   37f73:	movzx  ecx,BYTE PTR [rdi]
   37f76:	div    rsi
   37f79:	test   cl,cl
   37f7b:	jne    37f60 <__sprintf_chk@plt+0x2d5b0>
   37f7d:	mov    rax,rdx
   37f80:	ret    
   37f81:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   37f8c:	nop    DWORD PTR [rax+0x0]
   37f90:	mov    eax,0x77
   37f95:	test   dil,0x2
   37f99:	jne    37fab <__sprintf_chk@plt+0x2d5fb>
   37f9b:	mov    eax,edi
   37f9d:	and    eax,0x1
   37fa0:	cmp    eax,0x1
   37fa3:	sbb    eax,eax
   37fa5:	and    eax,0xffffffbf
   37fa8:	add    eax,0x6e
   37fab:	mov    BYTE PTR [rip+0x47d0f],al        # 7fcc0 <argp_program_bug_address@@Base+0x10>
   37fb1:	mov    eax,edi
   37fb3:	and    eax,0x4
   37fb6:	mov    BYTE PTR [rip+0x47d09],0x0        # 7fcc6 <argp_program_bug_address@@Base+0x16>
   37fbd:	cmp    eax,0x1
   37fc0:	sbb    eax,eax
   37fc2:	and    eax,0xffffffbc
   37fc5:	add    eax,0x71
   37fc8:	mov    BYTE PTR [rip+0x47cf3],al        # 7fcc1 <argp_program_bug_address@@Base+0x11>
   37fce:	mov    eax,edi
   37fd0:	and    eax,0x8
   37fd3:	cmp    eax,0x1
   37fd6:	sbb    eax,eax
   37fd8:	and    eax,0xffffffe8
   37fdb:	add    eax,0x45
   37fde:	mov    BYTE PTR [rip+0x47cde],al        # 7fcc2 <argp_program_bug_address@@Base+0x12>
   37fe4:	mov    eax,edi
   37fe6:	and    eax,0x10
   37fe9:	cmp    eax,0x1
   37fec:	sbb    eax,eax
   37fee:	and    eax,0xffffffc3
   37ff1:	add    eax,0x6a
   37ff4:	mov    BYTE PTR [rip+0x47cc9],al        # 7fcc3 <argp_program_bug_address@@Base+0x13>
   37ffa:	mov    eax,edi
   37ffc:	and    eax,0x20
   37fff:	cmp    eax,0x1
   38002:	sbb    eax,eax
   38004:	and    edi,0x40
   38007:	and    eax,0xffffffba
   3800a:	add    eax,0x73
   3800d:	cmp    edi,0x1
   38010:	mov    BYTE PTR [rip+0x47cae],al        # 7fcc4 <argp_program_bug_address@@Base+0x14>
   38016:	sbb    eax,eax
   38018:	and    eax,0xffffffc9
   3801b:	add    eax,0x64
   3801e:	mov    BYTE PTR [rip+0x47ca1],al        # 7fcc5 <argp_program_bug_address@@Base+0x15>
   38024:	lea    rax,[rip+0x47c95]        # 7fcc0 <argp_program_bug_address@@Base+0x10>
   3802b:	ret    
   3802c:	nop    DWORD PTR [rax+0x0]
   38030:	push   r14
   38032:	push   r13
   38034:	push   r12
   38036:	push   rbp
   38037:	push   rbx
   38038:	mov    rbx,QWORD PTR [rdi+0xd0]
   3803f:	test   rbx,rbx
   38042:	je     380e8 <__sprintf_chk@plt+0x2d738>
   38048:	mov    r12,rdi
   3804b:	xor    ebp,ebp
   3804d:	lea    r14,[rip+0x334b4]        # 6b508 <_obstack_memory_used@@Base+0x1e888>
   38054:	lea    r13,[rip+0x3348d]        # 6b4e8 <_obstack_memory_used@@Base+0x1e868>
   3805b:	jmp    38094 <__sprintf_chk@plt+0x2d6e4>
   3805d:	nop    DWORD PTR [rax]
   38060:	call   37f90 <__sprintf_chk@plt+0x2d5e0>
   38065:	sub    rsp,0x8
   38069:	mov    r8d,DWORD PTR [rbx+0x10]
   3806d:	mov    rcx,rbx
   38070:	mov    esi,DWORD PTR [r12+0xe0]
   38078:	mov    r9,rax
   3807b:	push   rdx
   3807c:	mov    rdi,r13
   3807f:	mov    edx,ebp
   38081:	xor    eax,eax
   38083:	add    ebp,0x1
   38086:	call   r10
   38089:	mov    rbx,QWORD PTR [rbx+0x8]
   3808d:	pop    rcx
   3808e:	pop    rsi
   3808f:	test   rbx,rbx
   38092:	je     380e8 <__sprintf_chk@plt+0x2d738>
   38094:	mov    edi,DWORD PTR [rbx+0x10]
   38097:	mov    r10,QWORD PTR [r12+0x68]
   3809c:	mov    rdx,QWORD PTR [rbx+0x18]
   380a0:	test   dil,0x2
   380a4:	jne    38060 <__sprintf_chk@plt+0x2d6b0>
   380a6:	mov    ecx,DWORD PTR [rbx+0x20]
   380a9:	mov    r11,QWORD PTR [r12+0xa8]
   380b1:	call   37f90 <__sprintf_chk@plt+0x2d5e0>
   380b6:	mov    r8d,DWORD PTR [rbx+0x10]
   380ba:	mov    esi,DWORD PTR [r12+0xe0]
   380c2:	mov    rdi,r14
   380c5:	add    r11,rdx
   380c8:	sub    ecx,edx
   380ca:	mov    r9,rax
   380cd:	mov    edx,ebp
   380cf:	push   r11
   380d1:	xor    eax,eax
   380d3:	add    ebp,0x1
   380d6:	push   rcx
   380d7:	mov    rcx,rbx
   380da:	call   r10
   380dd:	mov    rbx,QWORD PTR [rbx+0x8]
   380e1:	pop    rax
   380e2:	pop    rdx
   380e3:	test   rbx,rbx
   380e6:	jne    38094 <__sprintf_chk@plt+0x2d6e4>
   380e8:	pop    rbx
   380e9:	pop    rbp
   380ea:	pop    r12
   380ec:	pop    r13
   380ee:	pop    r14
   380f0:	ret    
   380f1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   380fc:	nop    DWORD PTR [rax+0x0]
   38100:	mov    rax,rsi
   38103:	mov    r10d,0x1
   38109:	cmp    rsi,rdx
   3810c:	jb     38125 <__sprintf_chk@plt+0x2d775>
   3810e:	jmp    38156 <__sprintf_chk@plt+0x2d7a6>
   38110:	cmp    sil,BYTE PTR [r8]
   38113:	je     38180 <__sprintf_chk@plt+0x2d7d0>
   38115:	cmp    sil,BYTE PTR [r8+0x1]
   38119:	je     38190 <__sprintf_chk@plt+0x2d7e0>
   3811b:	nop    DWORD PTR [rax+rax*1+0x0]
   38120:	cmp    rdx,rax
   38123:	jbe    38156 <__sprintf_chk@plt+0x2d7a6>
   38125:	add    rax,0x1
   38129:	movzx  esi,BYTE PTR [rdi+rax*1-0x1]
   3812e:	lea    r9,[rax-0x1]
   38132:	cmp    sil,0x22
   38136:	je     38164 <__sprintf_chk@plt+0x2d7b4>
   38138:	cmp    sil,0x27
   3813c:	jne    38110 <__sprintf_chk@plt+0x2d760>
   3813e:	cmp    rdx,rax
   38141:	jbe    38156 <__sprintf_chk@plt+0x2d7a6>
   38143:	movzx  esi,BYTE PTR [rdi+rax*1]
   38147:	add    rax,0x1
   3814b:	cmp    sil,0x27
   3814f:	je     38120 <__sprintf_chk@plt+0x2d770>
   38151:	cmp    rdx,rax
   38154:	ja     38143 <__sprintf_chk@plt+0x2d793>
   38156:	mov    eax,0x1
   3815b:	ret    
   3815c:	nop    DWORD PTR [rax+0x0]
   38160:	add    rax,0x2
   38164:	cmp    rdx,rax
   38167:	jbe    38156 <__sprintf_chk@plt+0x2d7a6>
   38169:	movzx  esi,BYTE PTR [rdi+rax*1]
   3816d:	cmp    sil,0x5c
   38171:	je     38160 <__sprintf_chk@plt+0x2d7b0>
   38173:	add    rax,0x1
   38177:	cmp    sil,0x22
   3817b:	jne    38164 <__sprintf_chk@plt+0x2d7b4>
   3817d:	jmp    38120 <__sprintf_chk@plt+0x2d770>
   3817f:	nop
   38180:	add    r10,0x1
   38184:	cmp    rdx,rax
   38187:	ja     38125 <__sprintf_chk@plt+0x2d775>
   38189:	jmp    38156 <__sprintf_chk@plt+0x2d7a6>
   3818b:	nop    DWORD PTR [rax+rax*1+0x0]
   38190:	sub    r10,0x1
   38194:	jne    38120 <__sprintf_chk@plt+0x2d770>
   38196:	mov    QWORD PTR [rcx],r9
   38199:	xor    eax,eax
   3819b:	ret    
   3819c:	nop    DWORD PTR [rax+0x0]
   381a0:	endbr64 
   381a4:	lea    ecx,[rdi-0x41]
   381a7:	cmp    ecx,0x3a
   381aa:	ja     381c0 <__sprintf_chk@plt+0x2d810>
   381ac:	movabs rax,0x7ffffff43ffffff
   381b6:	shr    rax,cl
   381b9:	and    eax,0x1
   381bc:	ret    
   381bd:	nop    DWORD PTR [rax]
   381c0:	xor    eax,eax
   381c2:	ret    
   381c3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   381ce:	xchg   ax,ax
   381d0:	endbr64 
   381d4:	xor    eax,eax
   381d6:	cmp    edi,0x28
   381d9:	sete   al
   381dc:	ret    
   381dd:	nop    DWORD PTR [rax]
   381e0:	mov    r8,rdx
   381e3:	mov    rax,rdi
   381e6:	mov    rdx,rcx
   381e9:	mov    edi,esi
   381eb:	test   r8,r8
   381ee:	je     38238 <__sprintf_chk@plt+0x2d888>
   381f0:	mov    r9,QWORD PTR [r8+0x28]
   381f4:	test   r9,r9
   381f7:	je     38238 <__sprintf_chk@plt+0x2d888>
   381f9:	test   rcx,rcx
   381fc:	je     3822b <__sprintf_chk@plt+0x2d87b>
   381fe:	mov    rdx,QWORD PTR [rcx+0x58]
   38202:	mov    rcx,QWORD PTR [rdx+0x50]
   38206:	mov    rdx,QWORD PTR [rdx+0x58]
   3820a:	cmp    rdx,rcx
   3820d:	ja     38221 <__sprintf_chk@plt+0x2d871>
   3820f:	jmp    38240 <__sprintf_chk@plt+0x2d890>
   38211:	nop    DWORD PTR [rax+0x0]
   38218:	add    rcx,0x48
   3821c:	cmp    rdx,rcx
   3821f:	jbe    38240 <__sprintf_chk@plt+0x2d890>
   38221:	cmp    r8,QWORD PTR [rcx+0x8]
   38225:	jne    38218 <__sprintf_chk@plt+0x2d868>
   38227:	mov    rdx,QWORD PTR [rcx+0x30]
   3822b:	mov    rsi,rax
   3822e:	jmp    r9
   38231:	nop    DWORD PTR [rax+0x0]
   38238:	ret    
   38239:	nop    DWORD PTR [rax+0x0]
   38240:	xor    edx,edx
   38242:	mov    rsi,rax
   38245:	jmp    r9
   38248:	nop    DWORD PTR [rax+rax*1+0x0]
   38250:	endbr64 
   38254:	cmp    QWORD PTR [rdi+0x10],0x0
   38259:	je     38260 <__sprintf_chk@plt+0x2d8b0>
   3825b:	xor    eax,eax
   3825d:	ret    
   3825e:	xchg   ax,ax
   38260:	cmp    QWORD PTR [rsi+0x10],0x0
   38265:	jne    3825b <__sprintf_chk@plt+0x2d8ab>
   38267:	mov    eax,DWORD PTR [rdi+0x18]
   3826a:	or     eax,DWORD PTR [rsi+0x18]
   3826d:	test   al,0x10
   3826f:	jne    3825b <__sprintf_chk@plt+0x2d8ab>
   38271:	mov    rax,QWORD PTR [rcx]
   38274:	mov    edx,DWORD PTR [rdi+0x8]
   38277:	lea    rsi,[rax+0x1]
   3827b:	mov    QWORD PTR [rcx],rsi
   3827e:	mov    BYTE PTR [rax],dl
   38280:	jmp    3825b <__sprintf_chk@plt+0x2d8ab>
   38282:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3828d:	nop    DWORD PTR [rax]
   38290:	push   rbp
   38291:	push   rbx
   38292:	mov    rbx,rsi
   38295:	sub    rsp,0x8
   38299:	mov    rax,QWORD PTR [rdi]
   3829c:	mov    rbp,QWORD PTR [rdi+0x20]
   382a0:	test   rax,rax
   382a3:	je     382f0 <__sprintf_chk@plt+0x2d940>
   382a5:	add    QWORD PTR [rsi+0x10],0x1
   382aa:	xor    edx,edx
   382ac:	jmp    382b3 <__sprintf_chk@plt+0x2d903>
   382ae:	xchg   ax,ax
   382b0:	add    edx,0x1
   382b3:	mov    esi,DWORD PTR [rax+0x8]
   382b6:	add    rax,0x30
   382ba:	test   esi,esi
   382bc:	jne    382b0 <__sprintf_chk@plt+0x2d900>
   382be:	cmp    QWORD PTR [rax-0x30],0x0
   382c3:	jne    382b0 <__sprintf_chk@plt+0x2d900>
   382c5:	cmp    QWORD PTR [rax-0x10],0x0
   382ca:	jne    382b0 <__sprintf_chk@plt+0x2d900>
   382cc:	mov    ecx,DWORD PTR [rax-0x8]
   382cf:	test   ecx,ecx
   382d1:	jne    382b0 <__sprintf_chk@plt+0x2d900>
   382d3:	lea    eax,[rdx+rdx*2]
   382d6:	movsxd rdx,edx
   382d9:	add    QWORD PTR [rbx+0x8],rdx
   382dd:	cdqe   
   382df:	add    QWORD PTR [rbx],rax
   382e2:	test   rbp,rbp
   382e5:	jne    38301 <__sprintf_chk@plt+0x2d951>
   382e7:	add    rsp,0x8
   382eb:	pop    rbx
   382ec:	pop    rbp
   382ed:	ret    
   382ee:	xchg   ax,ax
   382f0:	cmp    QWORD PTR [rdi+0x8],0x0
   382f5:	je     382fc <__sprintf_chk@plt+0x2d94c>
   382f7:	add    QWORD PTR [rsi+0x10],0x1
   382fc:	test   rbp,rbp
   382ff:	je     382e7 <__sprintf_chk@plt+0x2d937>
   38301:	mov    rdi,QWORD PTR [rbp+0x0]
   38305:	test   rdi,rdi
   38308:	je     382e7 <__sprintf_chk@plt+0x2d937>
   3830a:	add    rbp,0x20
   3830e:	mov    rsi,rbx
   38311:	call   38290 <__sprintf_chk@plt+0x2d8e0>
   38316:	mov    rdi,QWORD PTR [rbp+0x0]
   3831a:	add    QWORD PTR [rbx+0x18],0x1
   3831f:	test   rdi,rdi
   38322:	jne    3830a <__sprintf_chk@plt+0x2d95a>
   38324:	add    rsp,0x8
   38328:	pop    rbx
   38329:	pop    rbp
   3832a:	ret    
   3832b:	nop    DWORD PTR [rax+rax*1+0x0]
   38330:	push   r12
   38332:	push   rbp
   38333:	push   rbx
   38334:	mov    rbx,QWORD PTR [rdi+0xd0]
   3833b:	test   rbx,rbx
   3833e:	je     383a7 <__sprintf_chk@plt+0x2d9f7>
   38340:	mov    r12,rdi
   38343:	jmp    38361 <__sprintf_chk@plt+0x2d9b1>
   38345:	nop    DWORD PTR [rax]
   38348:	mov    rdx,QWORD PTR [rbp+0x0]
   3834c:	test   rdx,rdx
   3834f:	je     383b0 <__sprintf_chk@plt+0x2da00>
   38351:	and    DWORD PTR [rdx+0x10],0xffffffef
   38355:	mov    eax,DWORD PTR [rbp+0x10]
   38358:	test   al,0x1
   3835a:	jne    3837e <__sprintf_chk@plt+0x2d9ce>
   3835c:	test   rbx,rbx
   3835f:	je     383a7 <__sprintf_chk@plt+0x2d9f7>
   38361:	mov    rbp,rbx
   38364:	mov    rbx,QWORD PTR [rbx+0x8]
   38368:	mov    eax,DWORD PTR [rbp+0x10]
   3836b:	mov    ecx,eax
   3836d:	test   al,0x40
   3836f:	jne    38348 <__sprintf_chk@plt+0x2d998>
   38371:	test   al,0x1
   38373:	je     3835c <__sprintf_chk@plt+0x2d9ac>
   38375:	mov    rdx,QWORD PTR [rbp+0x0]
   38379:	test   rdx,rdx
   3837c:	je     383b4 <__sprintf_chk@plt+0x2da04>
   3837e:	mov    QWORD PTR [rdx+0x8],rbx
   38382:	test   rbx,rbx
   38385:	je     383e0 <__sprintf_chk@plt+0x2da30>
   38387:	mov    ecx,eax
   38389:	mov    rax,QWORD PTR [rbp+0x8]
   3838d:	test   rax,rax
   38390:	je     383c6 <__sprintf_chk@plt+0x2da16>
   38392:	and    ecx,0x2
   38395:	mov    QWORD PTR [rax],rdx
   38398:	jne    383d3 <__sprintf_chk@plt+0x2da23>
   3839a:	mov    rdi,rbp
   3839d:	call   9ce0 <free@plt>
   383a2:	test   rbx,rbx
   383a5:	jne    38361 <__sprintf_chk@plt+0x2d9b1>
   383a7:	pop    rbx
   383a8:	pop    rbp
   383a9:	pop    r12
   383ab:	ret    
   383ac:	nop    DWORD PTR [rax+0x0]
   383b0:	test   al,0x1
   383b2:	je     3835c <__sprintf_chk@plt+0x2d9ac>
   383b4:	mov    rax,rbx
   383b7:	mov    QWORD PTR [r12+0xd0],rbx
   383bf:	xor    edx,edx
   383c1:	test   rax,rax
   383c4:	jne    38392 <__sprintf_chk@plt+0x2d9e2>
   383c6:	and    ecx,0x2
   383c9:	mov    QWORD PTR [r12+0xd8],rdx
   383d1:	je     3839a <__sprintf_chk@plt+0x2d9ea>
   383d3:	mov    rdi,QWORD PTR [rbp+0x18]
   383d7:	call   9ce0 <free@plt>
   383dc:	jmp    3839a <__sprintf_chk@plt+0x2d9ea>
   383de:	xchg   ax,ax
   383e0:	and    DWORD PTR [rdx+0x10],0xffffffef
   383e4:	mov    rax,QWORD PTR [rbp+0x8]
   383e8:	mov    ecx,DWORD PTR [rbp+0x10]
   383eb:	jmp    3838d <__sprintf_chk@plt+0x2d9dd>
   383ed:	nop    DWORD PTR [rax]
   383f0:	endbr64 
   383f4:	sub    rsp,0x8
   383f8:	mov    rdx,QWORD PTR [rdi+0xd0]
   383ff:	mov    r10,rdi
   38402:	test   rdx,rdx
   38405:	je     384f0 <__sprintf_chk@plt+0x2db40>
   3840b:	mov    esi,DWORD PTR [rdx+0x10]
   3840e:	test   sil,0x4
   38412:	jne    38430 <__sprintf_chk@plt+0x2da80>
   38414:	jmp    38495 <__sprintf_chk@plt+0x2dae5>
   38416:	cs nop WORD PTR [rax+rax*1+0x0]
   38420:	test   sil,0x10
   38424:	je     384d8 <__sprintf_chk@plt+0x2db28>
   3842a:	mov    esi,DWORD PTR [rax+0x10]
   3842d:	mov    rdx,rax
   38430:	mov    rax,QWORD PTR [rdx+0x8]
   38434:	test   rax,rax
   38437:	jne    38420 <__sprintf_chk@plt+0x2da70>
   38439:	test   sil,0x4
   3843d:	jne    384f0 <__sprintf_chk@plt+0x2db40>
   38443:	mov    rcx,QWORD PTR [rdx+0x20]
   38447:	mov    r11,QWORD PTR [rdx+0x18]
   3844b:	jmp    38473 <__sprintf_chk@plt+0x2dac3>
   3844d:	nop    DWORD PTR [rax]
   38450:	mov    rdi,QWORD PTR [r10+0xa8]
   38457:	lea    r9,[rcx-0x1]
   3845b:	movzx  edi,BYTE PTR [rdi+rcx*1-0x1]
   38460:	lea    r8d,[rdi-0x9]
   38464:	cmp    r8b,0x1
   38468:	jbe    38470 <__sprintf_chk@plt+0x2dac0>
   3846a:	cmp    dil,0x20
   3846e:	jne    384e8 <__sprintf_chk@plt+0x2db38>
   38470:	mov    rcx,r9
   38473:	cmp    r11,rcx
   38476:	jb     38450 <__sprintf_chk@plt+0x2daa0>
   38478:	mov    QWORD PTR [rdx+0x20],rcx
   3847c:	jne    38484 <__sprintf_chk@plt+0x2dad4>
   3847e:	or     esi,0x1
   38481:	mov    DWORD PTR [rdx+0x10],esi
   38484:	test   rax,rax
   38487:	je     384f0 <__sprintf_chk@plt+0x2db40>
   38489:	mov    rdx,rax
   3848c:	mov    esi,DWORD PTR [rdx+0x10]
   3848f:	test   sil,0x4
   38493:	jne    38430 <__sprintf_chk@plt+0x2da80>
   38495:	mov    rax,QWORD PTR [rdx+0x18]
   38499:	mov    r8,QWORD PTR [rdx+0x20]
   3849d:	cmp    rax,r8
   384a0:	jae    38500 <__sprintf_chk@plt+0x2db50>
   384a2:	mov    r9,QWORD PTR [r10+0xa8]
   384a9:	nop    DWORD PTR [rax+0x0]
   384b0:	movzx  ecx,BYTE PTR [r9+rax*1]
   384b5:	lea    edi,[rcx-0x9]
   384b8:	cmp    dil,0x1
   384bc:	jbe    384c3 <__sprintf_chk@plt+0x2db13>
   384be:	cmp    cl,0x20
   384c1:	jne    38500 <__sprintf_chk@plt+0x2db50>
   384c3:	add    rax,0x1
   384c7:	cmp    rax,r8
   384ca:	jne    384b0 <__sprintf_chk@plt+0x2db00>
   384cc:	mov    QWORD PTR [rdx+0x18],r8
   384d0:	jmp    38430 <__sprintf_chk@plt+0x2da80>
   384d5:	nop    DWORD PTR [rax]
   384d8:	test   sil,0x4
   384dc:	jne    38489 <__sprintf_chk@plt+0x2dad9>
   384de:	jmp    38443 <__sprintf_chk@plt+0x2da93>
   384e3:	nop    DWORD PTR [rax+rax*1+0x0]
   384e8:	mov    QWORD PTR [rdx+0x20],rcx
   384ec:	jmp    38484 <__sprintf_chk@plt+0x2dad4>
   384ee:	xchg   ax,ax
   384f0:	mov    rdi,r10
   384f3:	call   38330 <__sprintf_chk@plt+0x2d980>
   384f8:	xor    eax,eax
   384fa:	add    rsp,0x8
   384fe:	ret    
   384ff:	nop
   38500:	mov    r8,rax
   38503:	mov    QWORD PTR [rdx+0x18],r8
   38507:	jmp    38430 <__sprintf_chk@plt+0x2da80>
   3850c:	nop    DWORD PTR [rax+0x0]
   38510:	push   rbp
   38511:	mov    rbp,rdi
   38514:	push   rbx
   38515:	sub    rsp,0x8
   38519:	cmp    QWORD PTR [rdi],0x0
   3851d:	je     38560 <__sprintf_chk@plt+0x2dbb0>
   3851f:	mov    rdx,QWORD PTR [rdi+0x10]
   38523:	mov    rax,QWORD PTR [rdi+0x8]
   38527:	xor    ebx,ebx
   38529:	nop    DWORD PTR [rax+0x0]
   38530:	lea    rcx,[rbx+rdx*1]
   38534:	mov    rdi,QWORD PTR [rax+rcx*8]
   38538:	test   rdi,rdi
   3853b:	je     38556 <__sprintf_chk@plt+0x2dba6>
   3853d:	call   9ce0 <free@plt>
   38542:	mov    rdx,QWORD PTR [rbp+0x10]
   38546:	mov    rax,QWORD PTR [rbp+0x8]
   3854a:	lea    rcx,[rbx+rdx*1]
   3854e:	mov    QWORD PTR [rax+rcx*8],0x0
   38556:	add    rbx,0x1
   3855a:	cmp    QWORD PTR [rbp+0x0],rbx
   3855e:	ja     38530 <__sprintf_chk@plt+0x2db80>
   38560:	mov    QWORD PTR [rbp+0x0],0x0
   38568:	add    rsp,0x8
   3856c:	pop    rbx
   3856d:	pop    rbp
   3856e:	ret    
   3856f:	nop
   38570:	push   rbx
   38571:	mov    eax,DWORD PTR [rdi+0x20]
   38574:	mov    rbx,rdi
   38577:	test   al,0x8
   38579:	je     385a0 <__sprintf_chk@plt+0x2dbf0>
   3857b:	test   al,0x1
   3857d:	je     385c8 <__sprintf_chk@plt+0x2dc18>
   3857f:	cmp    DWORD PTR [rbx+0xc0],0x9
   38586:	je     385d6 <__sprintf_chk@plt+0x2dc26>
   38588:	mov    QWORD PTR [rbx+0xc8],0x0
   38593:	mov    DWORD PTR [rbx+0xc0],0x0
   3859d:	pop    rbx
   3859e:	ret    
   3859f:	nop
   385a0:	mov    QWORD PTR [rdi+0x8],0x0
   385a8:	mov    QWORD PTR [rdi],0x0
   385af:	mov    QWORD PTR [rdi+0x18],0x0
   385b7:	mov    DWORD PTR [rbx+0xc0],0x0
   385c1:	pop    rbx
   385c2:	ret    
   385c3:	nop    DWORD PTR [rax+rax*1+0x0]
   385c8:	call   38510 <__sprintf_chk@plt+0x2db60>
   385cd:	cmp    DWORD PTR [rbx+0xc0],0x9
   385d4:	jne    38588 <__sprintf_chk@plt+0x2dbd8>
   385d6:	mov    rdi,QWORD PTR [rbx+0xc8]
   385dd:	call   9ce0 <free@plt>
   385e2:	jmp    38588 <__sprintf_chk@plt+0x2dbd8>
   385e4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   385ef:	nop
   385f0:	push   r12
   385f2:	push   rbp
   385f3:	push   rbx
   385f4:	movsxd rax,DWORD PTR [rdi+0xc0]
   385fb:	mov    rbx,QWORD PTR [rdi+0x60]
   385ff:	cmp    eax,0x1
   38602:	je     38640 <__sprintf_chk@plt+0x2dc90>
   38604:	cmp    eax,0x9
   38607:	je     38680 <__sprintf_chk@plt+0x2dcd0>
   38609:	lea    rsi,[rip+0x2aa88]        # 63098 <_obstack_memory_used@@Base+0x16418>
   38610:	cmp    eax,0x8
   38613:	jle    38630 <__sprintf_chk@plt+0x2dc80>
   38615:	mov    rcx,rbx
   38618:	lea    rdi,[rip+0x33738]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   3861f:	pop    rbx
   38620:	xor    eax,eax
   38622:	pop    rbp
   38623:	pop    r12
   38625:	jmp    rcx
   38627:	nop    WORD PTR [rax+rax*1+0x0]
   38630:	lea    rdx,[rip+0x41a69]        # 7a0a0 <_obstack_memory_used@@Base+0x2d420>
   38637:	mov    rsi,QWORD PTR [rdx+rax*8]
   3863b:	jmp    38615 <__sprintf_chk@plt+0x2dc65>
   3863d:	nop    DWORD PTR [rax]
   38640:	mov    r12,QWORD PTR [rdi+0xb8]
   38647:	mov    rax,QWORD PTR [rdi+0xa8]
   3864e:	xor    edi,edi
   38650:	mov    edx,0x5
   38655:	lea    rsi,[rip+0x32ed4]        # 6b530 <_obstack_memory_used@@Base+0x1e8b0>
   3865c:	movsx  ebp,BYTE PTR [rax+r12*1]
   38661:	call   a040 <dcgettext@plt>
   38666:	mov    rdx,r12
   38669:	mov    rcx,rbx
   3866c:	pop    rbx
   3866d:	mov    rdi,rax
   38670:	mov    esi,ebp
   38672:	xor    eax,eax
   38674:	pop    rbp
   38675:	pop    r12
   38677:	jmp    rcx
   38679:	nop    DWORD PTR [rax+0x0]
   38680:	mov    rsi,QWORD PTR [rdi+0xc8]
   38687:	jmp    38615 <__sprintf_chk@plt+0x2dc65>
   38689:	nop    DWORD PTR [rax+0x0]
   38690:	push   r12
   38692:	push   rbp
   38693:	mov    rbp,rdi
   38696:	push   rbx
   38697:	mov    DWORD PTR [rdi+0x20],ecx
   3869a:	test   ecx,0x10000
   386a0:	jne    386ad <__sprintf_chk@plt+0x2dcfd>
   386a2:	lea    rax,[rip+0x267]        # 38910 <__sprintf_chk@plt+0x2df60>
   386a9:	mov    QWORD PTR [rdi+0x58],rax
   386ad:	mov    eax,ecx
   386af:	and    eax,0x20000
   386b4:	jne    386c1 <__sprintf_chk@plt+0x2dd11>
   386b6:	lea    rbx,[rip+0x313]        # 389d0 <__sprintf_chk@plt+0x2e020>
   386bd:	mov    QWORD PTR [rbp+0x60],rbx
   386c1:	test   cl,0x40
   386c4:	jne    386e4 <__sprintf_chk@plt+0x2dd34>
   386c6:	mov    QWORD PTR [rbp+0x88],0x0
   386d1:	mov    QWORD PTR [rbp+0x80],0x0
   386dc:	mov    QWORD PTR [rbp+0x78],0x0
   386e4:	test   cl,0x4
   386e7:	jne    386f7 <__sprintf_chk@plt+0x2dd47>
   386e9:	cmp    QWORD PTR [rbp+0xa0],0x0
   386f1:	je     38898 <__sprintf_chk@plt+0x2dee8>
   386f7:	test   ecx,0x200000
   386fd:	je     38728 <__sprintf_chk@plt+0x2dd78>
   386ff:	test   ecx,0x40000
   38705:	jne    38728 <__sprintf_chk@plt+0x2dd78>
   38707:	test   eax,eax
   38709:	jne    38888 <__sprintf_chk@plt+0x2ded8>
   3870f:	test   cl,0x10
   38712:	je     388d0 <__sprintf_chk@plt+0x2df20>
   38718:	lea    rax,[rip+0x2b1]        # 389d0 <__sprintf_chk@plt+0x2e020>
   3871f:	mov    QWORD PTR [rbp+0x68],rax
   38723:	nop    DWORD PTR [rax+rax*1+0x0]
   38728:	mov    QWORD PTR [rbp+0xa8],rsi
   3872f:	mov    QWORD PTR [rbp+0xb0],rdx
   38736:	test   cl,0x2
   38739:	jne    38743 <__sprintf_chk@plt+0x2dd93>
   3873b:	mov    QWORD PTR [rbp+0x10],0x0
   38743:	test   ch,0x40
   38746:	jne    38753 <__sprintf_chk@plt+0x2dda3>
   38748:	lea    rax,[rip+0x333f6]        # 6bb45 <_obstack_memory_used@@Base+0x1eec5>
   3874f:	mov    QWORD PTR [rbp+0x38],rax
   38753:	test   ch,0x80
   38756:	jne    38760 <__sprintf_chk@plt+0x2ddb0>
   38758:	mov    QWORD PTR [rbp+0x40],0x0
   38760:	test   ecx,0x4000000
   38766:	je     38810 <__sprintf_chk@plt+0x2de60>
   3876c:	test   ecx,ecx
   3876e:	js     38777 <__sprintf_chk@plt+0x2ddc7>
   38770:	mov    DWORD PTR [rbp+0x24],0x0
   38777:	test   ecx,0x10000000
   3877d:	jne    387e8 <__sprintf_chk@plt+0x2de38>
   3877f:	mov    eax,DWORD PTR [rbp+0x24]
   38782:	test   ecx,0x2000000
   38788:	je     38860 <__sprintf_chk@plt+0x2deb0>
   3878e:	lea    rdx,[rip+0x4657b]        # 7ed10 <argp_err_exit_status@@Base+0x50>
   38795:	or     eax,0x660
   3879a:	mov    QWORD PTR [rbp+0x48],rdx
   3879e:	mov    QWORD PTR [rbp+0x50],rdx
   387a2:	mov    DWORD PTR [rbp+0x24],eax
   387a5:	and    ecx,0x8
   387a8:	mov    QWORD PTR [rbp+0x30],0x0
   387b0:	mov    QWORD PTR [rbp+0xb8],0x0
   387bb:	jne    38820 <__sprintf_chk@plt+0x2de70>
   387bd:	mov    QWORD PTR [rbp+0xd8],0x0
   387c8:	mov    rdi,rbp
   387cb:	mov    QWORD PTR [rbp+0xd0],0x0
   387d6:	call   38570 <__sprintf_chk@plt+0x2dbc0>
   387db:	xor    eax,eax
   387dd:	pop    rbx
   387de:	pop    rbp
   387df:	pop    r12
   387e1:	ret    
   387e2:	nop    WORD PTR [rax+rax*1+0x0]
   387e8:	cmp    QWORD PTR [rbp+0x48],0x0
   387ed:	je     388c0 <__sprintf_chk@plt+0x2df10>
   387f3:	cmp    QWORD PTR [rbp+0x50],0x0
   387f8:	jne    387a5 <__sprintf_chk@plt+0x2ddf5>
   387fa:	lea    rax,[rip+0x3334f]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   38801:	mov    QWORD PTR [rbp+0x50],rax
   38805:	jmp    387a5 <__sprintf_chk@plt+0x2ddf5>
   38807:	nop    WORD PTR [rax+rax*1+0x0]
   38810:	mov    QWORD PTR [rbp+0x98],0x0
   3881b:	jmp    3876c <__sprintf_chk@plt+0x2ddbc>
   38820:	mov    rbx,QWORD PTR [rbp+0xd0]
   38827:	test   rbx,rbx
   3882a:	jne    3883d <__sprintf_chk@plt+0x2de8d>
   3882c:	jmp    387bd <__sprintf_chk@plt+0x2de0d>
   3882e:	xchg   ax,ax
   38830:	mov    rdi,r12
   38833:	call   9ce0 <free@plt>
   38838:	test   rbx,rbx
   3883b:	je     387bd <__sprintf_chk@plt+0x2de0d>
   3883d:	mov    r12,rbx
   38840:	mov    rbx,QWORD PTR [rbx+0x8]
   38844:	test   BYTE PTR [r12+0x10],0x2
   3884a:	je     38830 <__sprintf_chk@plt+0x2de80>
   3884c:	mov    rdi,QWORD PTR [r12+0x18]
   38851:	call   9ce0 <free@plt>
   38856:	jmp    38830 <__sprintf_chk@plt+0x2de80>
   38858:	nop    DWORD PTR [rax+rax*1+0x0]
   38860:	lea    rsi,[rip+0x332e9]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   38867:	or     ah,0x1
   3886a:	mov    QWORD PTR [rbp+0x48],rsi
   3886e:	lea    rsi,[rip+0x332d4]        # 6bb49 <_obstack_memory_used@@Base+0x1eec9>
   38875:	mov    QWORD PTR [rbp+0x50],rsi
   38879:	mov    DWORD PTR [rbp+0x24],eax
   3887c:	jmp    387a5 <__sprintf_chk@plt+0x2ddf5>
   38881:	nop    DWORD PTR [rax+0x0]
   38888:	mov    rax,QWORD PTR [rbp+0x60]
   3888c:	mov    QWORD PTR [rbp+0x68],rax
   38890:	jmp    38728 <__sprintf_chk@plt+0x2dd78>
   38895:	nop    DWORD PTR [rax]
   38898:	mov    DWORD PTR [rbp+0xc0],0x3
   388a2:	and    ecx,0x10
   388a5:	jne    388e0 <__sprintf_chk@plt+0x2df30>
   388a7:	call   9e40 <__errno_location@plt>
   388ac:	mov    DWORD PTR [rax],0x16
   388b2:	mov    eax,DWORD PTR [rbp+0xc0]
   388b8:	jmp    387dd <__sprintf_chk@plt+0x2de2d>
   388bd:	nop    DWORD PTR [rax]
   388c0:	lea    rax,[rip+0x33289]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   388c7:	mov    QWORD PTR [rbp+0x48],rax
   388cb:	jmp    387f3 <__sprintf_chk@plt+0x2de43>
   388d0:	and    ecx,0xffdfffff
   388d6:	mov    DWORD PTR [rbp+0x20],ecx
   388d9:	jmp    38728 <__sprintf_chk@plt+0x2dd78>
   388de:	xchg   ax,ax
   388e0:	mov    rdi,rbp
   388e3:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   388e8:	jmp    388a7 <__sprintf_chk@plt+0x2def7>
   388ea:	nop    WORD PTR [rax+rax*1+0x0]
   388f0:	endbr64 
   388f4:	sub    rsp,0x8
   388f8:	call   a320 <strcmp@plt>
   388fd:	test   eax,eax
   388ff:	sete   al
   38902:	add    rsp,0x8
   38906:	ret    
   38907:	nop    WORD PTR [rax+rax*1+0x0]
   38910:	endbr64 
   38914:	push   rbx
   38915:	mov    edx,0x5
   3891a:	mov    rbx,QWORD PTR [rdi+0x60]
   3891e:	lea    rsi,[rip+0x2aba0]        # 634c5 <_obstack_memory_used@@Base+0x16845>
   38925:	xor    edi,edi
   38927:	call   a040 <dcgettext@plt>
   3892c:	lea    rdi,[rip+0x33424]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   38933:	mov    rsi,rax
   38936:	xor    eax,eax
   38938:	call   rbx
   3893a:	call   9e30 <abort@plt>
   3893f:	nop
   38940:	push   rbp
   38941:	mov    rbp,rsi
   38944:	lea    rsi,[rip+0x33203]        # 6bb4e <_obstack_memory_used@@Base+0x1eece>
   3894b:	push   rbx
   3894c:	mov    rbx,rdi
   3894f:	sub    rsp,0x8
   38953:	call   a270 <strcspn@plt>
   38958:	add    rax,rbx
   3895b:	movzx  ecx,BYTE PTR [rax]
   3895e:	test   cl,cl
   38960:	je     38998 <__sprintf_chk@plt+0x2dfe8>
   38962:	mov    r8,rax
   38965:	jmp    38985 <__sprintf_chk@plt+0x2dfd5>
   38967:	nop    WORD PTR [rax+rax*1+0x0]
   38970:	cmp    cl,0x23
   38973:	je     389b0 <__sprintf_chk@plt+0x2e000>
   38975:	mov    BYTE PTR [rax],cl
   38977:	movzx  ecx,BYTE PTR [rdx]
   3897a:	mov    r8,rdx
   3897d:	add    rax,0x1
   38981:	test   cl,cl
   38983:	je     38998 <__sprintf_chk@plt+0x2dfe8>
   38985:	lea    rdx,[r8+0x1]
   38989:	cmp    cl,0x9
   3898c:	jne    38970 <__sprintf_chk@plt+0x2dfc0>
   3898e:	movzx  ecx,BYTE PTR [rdx]
   38991:	mov    r8,rdx
   38994:	test   cl,cl
   38996:	jne    38985 <__sprintf_chk@plt+0x2dfd5>
   38998:	mov    rdx,rax
   3899b:	sub    rdx,rbx
   3899e:	mov    QWORD PTR [rbp+0x0],rdx
   389a2:	mov    BYTE PTR [rax],0x0
   389a5:	add    rsp,0x8
   389a9:	pop    rbx
   389aa:	pop    rbp
   389ab:	ret    
   389ac:	nop    DWORD PTR [rax+0x0]
   389b0:	cmp    BYTE PTR [r8],0xa
   389b4:	je     389c9 <__sprintf_chk@plt+0x2e019>
   389b6:	cs nop WORD PTR [rax+rax*1+0x0]
   389c0:	cmp    BYTE PTR [rdx],0xa
   389c3:	lea    rdx,[rdx+0x1]
   389c7:	jne    389c0 <__sprintf_chk@plt+0x2e010>
   389c9:	mov    ecx,0xa
   389ce:	jmp    38975 <__sprintf_chk@plt+0x2dfc5>
   389d0:	endbr64 
   389d4:	push   rbx
   389d5:	mov    r10,rdi
   389d8:	sub    rsp,0xd0
   389df:	mov    QWORD PTR [rsp+0x28],rsi
   389e4:	mov    QWORD PTR [rsp+0x30],rdx
   389e9:	mov    QWORD PTR [rsp+0x38],rcx
   389ee:	mov    QWORD PTR [rsp+0x40],r8
   389f3:	mov    QWORD PTR [rsp+0x48],r9
   389f8:	test   al,al
   389fa:	je     38a33 <__sprintf_chk@plt+0x2e083>
   389fc:	movaps XMMWORD PTR [rsp+0x50],xmm0
   38a01:	movaps XMMWORD PTR [rsp+0x60],xmm1
   38a06:	movaps XMMWORD PTR [rsp+0x70],xmm2
   38a0b:	movaps XMMWORD PTR [rsp+0x80],xmm3
   38a13:	movaps XMMWORD PTR [rsp+0x90],xmm4
   38a1b:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   38a23:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   38a2b:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   38a33:	mov    rax,QWORD PTR fs:0x28
   38a3c:	mov    QWORD PTR [rsp+0x18],rax
   38a41:	xor    eax,eax
   38a43:	mov    rbx,QWORD PTR [rip+0x4359e]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   38a4a:	mov    rcx,rsp
   38a4d:	mov    rdx,r10
   38a50:	lea    rax,[rsp+0xe0]
   38a58:	mov    esi,0x1
   38a5d:	mov    DWORD PTR [rsp],0x8
   38a64:	mov    rdi,QWORD PTR [rbx]
   38a67:	mov    QWORD PTR [rsp+0x8],rax
   38a6c:	lea    rax,[rsp+0x20]
   38a71:	mov    DWORD PTR [rsp+0x4],0x30
   38a79:	mov    QWORD PTR [rsp+0x10],rax
   38a7e:	call   9e20 <__vfprintf_chk@plt>
   38a83:	mov    rsi,QWORD PTR [rbx]
   38a86:	mov    edi,0xa
   38a8b:	call   a260 <fputc@plt>
   38a90:	mov    rax,QWORD PTR [rsp+0x18]
   38a95:	sub    rax,QWORD PTR fs:0x28
   38a9e:	jne    38aa9 <__sprintf_chk@plt+0x2e0f9>
   38aa0:	add    rsp,0xd0
   38aa7:	pop    rbx
   38aa8:	ret    
   38aa9:	call   a0a0 <__stack_chk_fail@plt>
   38aae:	xchg   ax,ax
   38ab0:	endbr64 
   38ab4:	push   rax
   38ab5:	pop    rax
   38ab6:	sub    rsp,0x8
   38aba:	mov    edi,DWORD PTR [rip+0x43ee0]        # 7c9a0 <_obstack_memory_used@@Base+0x2fd20>
   38ac0:	call   a820 <exit@plt>
   38ac5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   38ad0:	push   r15
   38ad2:	push   r14
   38ad4:	push   r13
   38ad6:	push   r12
   38ad8:	push   rbp
   38ad9:	push   rbx
   38ada:	sub    rsp,0x28
   38ade:	mov    r12d,DWORD PTR [rdi+0x8]
   38ae2:	mov    r14,QWORD PTR [rdi]
   38ae5:	mov    QWORD PTR [rsp+0x8],rsi
   38aea:	mov    r15,QWORD PTR [rdi+0x10]
   38aee:	mov    QWORD PTR [rsp+0x10],rdx
   38af3:	mov    QWORD PTR [rsp+0x18],rcx
   38af8:	test   r12d,r12d
   38afb:	je     38bc8 <__sprintf_chk@plt+0x2e218>
   38b01:	mov    rbx,r14
   38b04:	jmp    38b5d <__sprintf_chk@plt+0x2e1ad>
   38b06:	cs nop WORD PTR [rax+rax*1+0x0]
   38b10:	mov    ecx,DWORD PTR [rbx+0x8]
   38b13:	mov    edx,0x1
   38b18:	lea    eax,[rcx-0x1]
   38b1b:	mov    DWORD PTR [rsp],ecx
   38b1e:	cmp    eax,0xfe
   38b23:	ja     38b4f <__sprintf_chk@plt+0x2e19f>
   38b25:	mov    BYTE PTR [rsp+0x7],dl
   38b29:	call   a980 <__ctype_b_loc@plt>
   38b2e:	mov    edx,0x1
   38b33:	mov    r10,rax
   38b36:	movsxd rax,DWORD PTR [rsp]
   38b3a:	mov    rdi,QWORD PTR [r10]
   38b3d:	mov    rcx,rax
   38b40:	test   BYTE PTR [rdi+rax*2+0x1],0x40
   38b45:	je     38b4f <__sprintf_chk@plt+0x2e19f>
   38b47:	movsx  eax,BYTE PTR [r15]
   38b4b:	cmp    eax,ecx
   38b4d:	je     38b90 <__sprintf_chk@plt+0x2e1e0>
   38b4f:	add    rbx,0x30
   38b53:	sub    r12d,0x1
   38b57:	je     38b7b <__sprintf_chk@plt+0x2e1cb>
   38b59:	test   dl,dl
   38b5b:	je     38b7b <__sprintf_chk@plt+0x2e1cb>
   38b5d:	mov    ebp,DWORD PTR [rbx+0x18]
   38b60:	mov    r13d,ebp
   38b63:	and    r13d,0x8
   38b67:	je     38b10 <__sprintf_chk@plt+0x2e160>
   38b69:	mov    edx,0x1
   38b6e:	xor    r13d,r13d
   38b71:	add    rbx,0x30
   38b75:	sub    r12d,0x1
   38b79:	jne    38b59 <__sprintf_chk@plt+0x2e1a9>
   38b7b:	add    rsp,0x28
   38b7f:	mov    eax,r13d
   38b82:	pop    rbx
   38b83:	pop    rbp
   38b84:	pop    r12
   38b86:	pop    r13
   38b88:	pop    r14
   38b8a:	pop    r15
   38b8c:	ret    
   38b8d:	nop    DWORD PTR [rax]
   38b90:	test   bpl,0x4
   38b94:	cmove  r14,rbx
   38b98:	and    ebp,0x2
   38b9b:	jne    38bbc <__sprintf_chk@plt+0x2e20c>
   38b9d:	mov    rdx,QWORD PTR [rsp+0x10]
   38ba2:	mov    rcx,QWORD PTR [rsp+0x18]
   38ba7:	mov    rsi,r14
   38baa:	mov    rdi,rbx
   38bad:	mov    rax,QWORD PTR [rsp+0x8]
   38bb2:	call   rax
   38bb4:	test   eax,eax
   38bb6:	mov    r13d,eax
   38bb9:	sete   dl
   38bbc:	add    r15,0x1
   38bc0:	jmp    38b4f <__sprintf_chk@plt+0x2e19f>
   38bc2:	nop    WORD PTR [rax+rax*1+0x0]
   38bc8:	xor    r13d,r13d
   38bcb:	jmp    38b7b <__sprintf_chk@plt+0x2e1cb>
   38bcd:	nop    DWORD PTR [rax]
   38bd0:	endbr64 
   38bd4:	push   r12
   38bd6:	push   rbx
   38bd7:	sub    rsp,0x8
   38bdb:	mov    r12d,DWORD PTR [rdi+0x18]
   38bdf:	and    r12d,0x8
   38be3:	jne    38c18 <__sprintf_chk@plt+0x2e268>
   38be5:	mov    ebx,DWORD PTR [rdi+0x8]
   38be8:	lea    eax,[rbx-0x1]
   38beb:	cmp    eax,0xfe
   38bf0:	ja     38c06 <__sprintf_chk@plt+0x2e256>
   38bf2:	call   a980 <__ctype_b_loc@plt>
   38bf7:	movsxd rdx,ebx
   38bfa:	mov    rax,QWORD PTR [rax]
   38bfd:	test   BYTE PTR [rax+rdx*2+0x1],0x40
   38c02:	cmovne r12d,ebx
   38c06:	add    rsp,0x8
   38c0a:	mov    eax,r12d
   38c0d:	pop    rbx
   38c0e:	pop    r12
   38c10:	ret    
   38c11:	nop    DWORD PTR [rax+0x0]
   38c18:	xor    r12d,r12d
   38c1b:	add    rsp,0x8
   38c1f:	mov    eax,r12d
   38c22:	pop    rbx
   38c23:	pop    r12
   38c25:	ret    
   38c26:	cs nop WORD PTR [rax+rax*1+0x0]
   38c30:	push   rbx
   38c31:	mov    rbx,rdi
   38c34:	call   a980 <__ctype_b_loc@plt>
   38c39:	mov    rdi,QWORD PTR [rax]
   38c3c:	mov    rax,QWORD PTR [rbx]
   38c3f:	jmp    38c4b <__sprintf_chk@plt+0x2e29b>
   38c41:	nop    DWORD PTR [rax+0x0]
   38c48:	mov    QWORD PTR [rbx],rax
   38c4b:	movzx  ecx,BYTE PTR [rax]
   38c4e:	add    rax,0x1
   38c52:	mov    rsi,rcx
   38c55:	movzx  ecx,WORD PTR [rdi+rcx*2]
   38c59:	test   ch,0x20
   38c5c:	jne    38c48 <__sprintf_chk@plt+0x2e298>
   38c5e:	xor    r8d,r8d
   38c61:	cmp    sil,0x2d
   38c65:	setne  r8b
   38c69:	test   sil,sil
   38c6c:	jne    38c82 <__sprintf_chk@plt+0x2e2d2>
   38c6e:	jmp    38c87 <__sprintf_chk@plt+0x2e2d7>
   38c70:	mov    QWORD PTR [rbx],rax
   38c73:	movzx  edx,BYTE PTR [rax]
   38c76:	add    rax,0x1
   38c7a:	test   dl,dl
   38c7c:	je     38c87 <__sprintf_chk@plt+0x2e2d7>
   38c7e:	movzx  ecx,WORD PTR [rdi+rdx*2]
   38c82:	and    ecx,0x8
   38c85:	je     38c70 <__sprintf_chk@plt+0x2e2c0>
   38c87:	mov    eax,r8d
   38c8a:	pop    rbx
   38c8b:	ret    
   38c8c:	nop    DWORD PTR [rax+0x0]
   38c90:	push   r15
   38c92:	push   r14
   38c94:	push   r13
   38c96:	mov    r13,rcx
   38c99:	push   r12
   38c9b:	mov    r12,r8
   38c9e:	push   rbp
   38c9f:	push   rbx
   38ca0:	sub    rsp,0x48
   38ca4:	mov    rax,QWORD PTR [rdi]
   38ca7:	mov    rbp,QWORD PTR [rdi+0x20]
   38cab:	mov    QWORD PTR [rsp+0x8],rdi
   38cb0:	mov    QWORD PTR [rsp+0x20],rsi
   38cb5:	mov    DWORD PTR [rsp+0x2c],edx
   38cb9:	test   rax,rax
   38cbc:	je     38ec8 <__sprintf_chk@plt+0x2e518>
   38cc2:	mov    QWORD PTR [rsp+0x30],rcx
   38cc7:	mov    r13,rax
   38cca:	mov    QWORD PTR [rsp+0x38],rbp
   38ccf:	mov    rbp,rax
   38cd2:	nop    WORD PTR [rax+rax*1+0x0]
   38cd8:	mov    r14d,DWORD PTR [r13+0x8]
   38cdc:	test   r14d,r14d
   38cdf:	jne    38cec <__sprintf_chk@plt+0x2e33c>
   38ce1:	cmp    QWORD PTR [r13+0x0],0x0
   38ce6:	je     38e68 <__sprintf_chk@plt+0x2e4b8>
   38cec:	mov    eax,DWORD PTR [r13+0x18]
   38cf0:	test   al,0x4
   38cf2:	je     38e58 <__sprintf_chk@plt+0x2e4a8>
   38cf8:	mov    ebx,DWORD PTR [rbp+0x18]
   38cfb:	and    ebx,0x8
   38cfe:	jne    38df8 <__sprintf_chk@plt+0x2e448>
   38d04:	test   al,0x8
   38d06:	jne    38d30 <__sprintf_chk@plt+0x2e380>
   38d08:	lea    eax,[r14-0x1]
   38d0c:	cmp    eax,0xfe
   38d11:	ja     38d30 <__sprintf_chk@plt+0x2e380>
   38d13:	call   a980 <__ctype_b_loc@plt>
   38d18:	mov    r8,rax
   38d1b:	movsxd rax,r14d
   38d1e:	mov    rdx,QWORD PTR [r8]
   38d21:	test   BYTE PTR [rdx+rax*2+0x1],0x40
   38d26:	jne    38e08 <__sprintf_chk@plt+0x2e458>
   38d2c:	nop    DWORD PTR [rax+0x0]
   38d30:	mov    r15,QWORD PTR [r13+0x0]
   38d34:	test   r15,r15
   38d37:	je     38df8 <__sprintf_chk@plt+0x2e448>
   38d3d:	mov    rax,QWORD PTR [r12]
   38d41:	mov    r14,QWORD PTR [rax+0x10]
   38d45:	mov    QWORD PTR [rsp+0x18],rax
   38d4a:	mov    rdi,QWORD PTR [r14]
   38d4d:	mov    QWORD PTR [rsp+0x10],r14
   38d52:	test   rdi,rdi
   38d55:	je     38d7d <__sprintf_chk@plt+0x2e3cd>
   38d57:	nop    WORD PTR [rax+rax*1+0x0]
   38d60:	mov    rsi,r15
   38d63:	call   a320 <strcmp@plt>
   38d68:	test   eax,eax
   38d6a:	je     38e98 <__sprintf_chk@plt+0x2e4e8>
   38d70:	mov    rdi,QWORD PTR [r14+0x20]
   38d74:	add    r14,0x20
   38d78:	test   rdi,rdi
   38d7b:	jne    38d60 <__sprintf_chk@plt+0x2e3b0>
   38d7d:	mov    rdx,QWORD PTR [r12+0x10]
   38d82:	cmp    QWORD PTR [rbp+0x10],0x0
   38d87:	mov    QWORD PTR [rdx],r15
   38d8a:	je     38d95 <__sprintf_chk@plt+0x2e3e5>
   38d8c:	mov    ebx,DWORD PTR [rbp+0x18]
   38d8f:	and    ebx,0x1
   38d92:	add    ebx,0x1
   38d95:	mov    DWORD PTR [rdx+0x8],ebx
   38d98:	mov    eax,DWORD PTR [r13+0x8]
   38d9c:	mov    QWORD PTR [rdx+0x10],0x0
   38da4:	test   eax,eax
   38da6:	jne    38eb8 <__sprintf_chk@plt+0x2e508>
   38dac:	mov    esi,DWORD PTR [rbp+0x8]
   38daf:	and    esi,0xffffff
   38db5:	mov    rbx,QWORD PTR [rsp+0x18]
   38dba:	mov    rax,QWORD PTR [rsp+0x30]
   38dbf:	sub    rax,QWORD PTR [rbx+0x50]
   38dc3:	movabs rbx,0x8e38e38e38e38e39
   38dcd:	sar    rax,0x3
   38dd1:	imul   rax,rbx
   38dd5:	add    eax,0x1
   38dd8:	shl    eax,0x18
   38ddb:	add    eax,esi
   38ddd:	mov    DWORD PTR [rdx+0x18],eax
   38de0:	lea    rax,[rdx+0x20]
   38de4:	mov    QWORD PTR [r12+0x10],rax
   38de9:	mov    QWORD PTR [rdx+0x20],0x0
   38df1:	nop    DWORD PTR [rax+0x0]
   38df8:	add    r13,0x30
   38dfc:	jmp    38cd8 <__sprintf_chk@plt+0x2e328>
   38e01:	nop    DWORD PTR [rax+0x0]
   38e08:	mov    rax,QWORD PTR [r12+0x8]
   38e0d:	lea    rdx,[rax+0x1]
   38e11:	mov    QWORD PTR [r12+0x8],rdx
   38e16:	mov    BYTE PTR [rax],r14b
   38e19:	cmp    QWORD PTR [rbp+0x10],0x0
   38e1e:	je     38e48 <__sprintf_chk@plt+0x2e498>
   38e20:	mov    rax,QWORD PTR [r12+0x8]
   38e25:	lea    rdx,[rax+0x1]
   38e29:	mov    QWORD PTR [r12+0x8],rdx
   38e2e:	mov    BYTE PTR [rax],0x3a
   38e31:	test   BYTE PTR [rbp+0x18],0x1
   38e35:	je     38e48 <__sprintf_chk@plt+0x2e498>
   38e37:	mov    rax,QWORD PTR [r12+0x8]
   38e3c:	lea    rdx,[rax+0x1]
   38e40:	mov    QWORD PTR [r12+0x8],rdx
   38e45:	mov    BYTE PTR [rax],0x3a
   38e48:	mov    rax,QWORD PTR [r12+0x8]
   38e4d:	mov    BYTE PTR [rax],0x0
   38e50:	jmp    38d30 <__sprintf_chk@plt+0x2e380>
   38e55:	nop    DWORD PTR [rax]
   38e58:	mov    ebx,eax
   38e5a:	mov    rbp,r13
   38e5d:	jmp    38cfb <__sprintf_chk@plt+0x2e34b>
   38e62:	nop    WORD PTR [rax+rax*1+0x0]
   38e68:	cmp    QWORD PTR [r13+0x20],0x0
   38e6d:	jne    38cec <__sprintf_chk@plt+0x2e33c>
   38e73:	mov    eax,DWORD PTR [r13+0x28]
   38e77:	test   eax,eax
   38e79:	jne    38cec <__sprintf_chk@plt+0x2e33c>
   38e7f:	mov    rax,QWORD PTR [rsp+0x8]
   38e84:	mov    rbp,QWORD PTR [rsp+0x38]
   38e89:	mov    r13,QWORD PTR [rsp+0x30]
   38e8e:	mov    rax,QWORD PTR [rax+0x8]
   38e92:	jmp    38ed5 <__sprintf_chk@plt+0x2e525>
   38e94:	nop    DWORD PTR [rax+0x0]
   38e98:	mov    rdx,r14
   38e9b:	sub    rdx,QWORD PTR [rsp+0x10]
   38ea0:	sar    rdx,0x5
   38ea4:	test   edx,edx
   38ea6:	js     38d7d <__sprintf_chk@plt+0x2e3cd>
   38eac:	add    r13,0x30
   38eb0:	jmp    38cd8 <__sprintf_chk@plt+0x2e328>
   38eb5:	nop    DWORD PTR [rax]
   38eb8:	and    eax,0xffffff
   38ebd:	mov    esi,eax
   38ebf:	jmp    38db5 <__sprintf_chk@plt+0x2e405>
   38ec4:	nop    DWORD PTR [rax+0x0]
   38ec8:	mov    rax,QWORD PTR [rdi+0x8]
   38ecc:	test   rax,rax
   38ecf:	je     38fa0 <__sprintf_chk@plt+0x2e5f0>
   38ed5:	mov    QWORD PTR [r13+0x0],rax
   38ed9:	mov    rax,QWORD PTR [rsp+0x8]
   38ede:	mov    QWORD PTR [r13+0x8],rax
   38ee2:	mov    rax,QWORD PTR [r12+0x8]
   38ee7:	mov    DWORD PTR [r13+0x18],0x0
   38eef:	mov    QWORD PTR [r13+0x10],rax
   38ef3:	mov    rax,QWORD PTR [rsp+0x20]
   38ef8:	mov    QWORD PTR [r13+0x30],0x0
   38f00:	mov    QWORD PTR [r13+0x20],rax
   38f04:	mov    eax,DWORD PTR [rsp+0x2c]
   38f08:	mov    QWORD PTR [r13+0x40],0x0
   38f10:	mov    DWORD PTR [r13+0x28],eax
   38f14:	mov    QWORD PTR [r13+0x38],0x0
   38f1c:	test   rbp,rbp
   38f1f:	je     38f5a <__sprintf_chk@plt+0x2e5aa>
   38f21:	cmp    QWORD PTR [rbp+0x0],0x0
   38f26:	je     38fa5 <__sprintf_chk@plt+0x2e5f5>
   38f28:	xor    eax,eax
   38f2a:	nop    WORD PTR [rax+rax*1+0x0]
   38f30:	lea    edx,[rax+0x1]
   38f33:	mov    rcx,rdx
   38f36:	mov    rax,rdx
   38f39:	shl    rcx,0x5
   38f3d:	cmp    QWORD PTR [rbp+rcx*1+0x0],0x0
   38f43:	jne    38f30 <__sprintf_chk@plt+0x2e580>
   38f45:	shl    rdx,0x3
   38f49:	mov    rax,QWORD PTR [r12+0x18]
   38f4e:	mov    QWORD PTR [r13+0x38],rax
   38f52:	add    rax,rdx
   38f55:	mov    QWORD PTR [r12+0x18],rax
   38f5a:	lea    rcx,[r13+0x48]
   38f5e:	test   rbp,rbp
   38f61:	je     38f8e <__sprintf_chk@plt+0x2e5de>
   38f63:	mov    rdi,QWORD PTR [rbp+0x0]
   38f67:	test   rdi,rdi
   38f6a:	je     38f8e <__sprintf_chk@plt+0x2e5de>
   38f6c:	xor    ebx,ebx
   38f6e:	mov    edx,ebx
   38f70:	add    rbp,0x20
   38f74:	mov    r8,r12
   38f77:	mov    rsi,r13
   38f7a:	call   38c90 <__sprintf_chk@plt+0x2e2e0>
   38f7f:	mov    rdi,QWORD PTR [rbp+0x0]
   38f83:	add    ebx,0x1
   38f86:	mov    rcx,rax
   38f89:	test   rdi,rdi
   38f8c:	jne    38f6e <__sprintf_chk@plt+0x2e5be>
   38f8e:	add    rsp,0x48
   38f92:	mov    rax,rcx
   38f95:	pop    rbx
   38f96:	pop    rbp
   38f97:	pop    r12
   38f99:	pop    r13
   38f9b:	pop    r14
   38f9d:	pop    r15
   38f9f:	ret    
   38fa0:	xor    r13d,r13d
   38fa3:	jmp    38f5e <__sprintf_chk@plt+0x2e5ae>
   38fa5:	xor    edx,edx
   38fa7:	jmp    38f49 <__sprintf_chk@plt+0x2e599>
   38fa9:	nop    DWORD PTR [rax+0x0]
   38fb0:	endbr64 
   38fb4:	push   r15
   38fb6:	push   r14
   38fb8:	push   r13
   38fba:	mov    r13,rsi
   38fbd:	push   r12
   38fbf:	push   rbp
   38fc0:	mov    rbp,rdi
   38fc3:	push   rbx
   38fc4:	sub    rsp,0x28
   38fc8:	mov    rdx,QWORD PTR [rdi+0x20]
   38fcc:	mov    rax,QWORD PTR fs:0x28
   38fd5:	mov    QWORD PTR [rsp+0x18],rax
   38fda:	xor    eax,eax
   38fdc:	test   rdx,rdx
   38fdf:	je     39280 <__sprintf_chk@plt+0x2e8d0>
   38fe5:	mov    rax,rdx
   38fe8:	nop    DWORD PTR [rax+rax*1+0x0]
   38ff0:	mov    rcx,rax
   38ff3:	mov    rax,QWORD PTR [rax+0x10]
   38ff7:	test   rax,rax
   38ffa:	jne    38ff0 <__sprintf_chk@plt+0x2e640>
   38ffc:	mov    edi,DWORD PTR [rcx+0xc]
   38fff:	mov    rcx,QWORD PTR [r13+0x20]
   39003:	test   rcx,rcx
   39006:	je     39270 <__sprintf_chk@plt+0x2e8c0>
   3900c:	mov    rax,rcx
   3900f:	nop
   39010:	mov    rsi,rax
   39013:	mov    rax,QWORD PTR [rax+0x10]
   39017:	test   rax,rax
   3901a:	jne    39010 <__sprintf_chk@plt+0x2e660>
   3901c:	mov    eax,DWORD PTR [rsi+0xc]
   3901f:	mov    r12d,eax
   39022:	mov    esi,edi
   39024:	sub    esi,eax
   39026:	sub    r12d,edi
   39029:	xor    eax,edi
   3902b:	cmovns r12d,esi
   3902f:	test   r12d,r12d
   39032:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   39034:	xor    r12d,r12d
   39037:	test   rdx,rdx
   3903a:	setne  r12b
   3903e:	cmp    rcx,0x1
   39042:	adc    r12d,0xffffffff
   39046:	test   r12d,r12d
   39049:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   3904b:	test   rdx,rdx
   3904e:	je     39137 <__sprintf_chk@plt+0x2e787>
   39054:	mov    esi,DWORD PTR [rdx+0x20]
   39057:	mov    eax,DWORD PTR [rcx+0x20]
   3905a:	mov    r9,QWORD PTR [rcx+0x10]
   3905e:	cmp    esi,eax
   39060:	jg     390e0 <__sprintf_chk@plt+0x2e730>
   39062:	mov    r11,QWORD PTR [rdx+0x10]
   39066:	mov    edi,DWORD PTR [rdx+0x8]
   39069:	mov    r10d,DWORD PTR [rdx+0xc]
   3906d:	jge    39116 <__sprintf_chk@plt+0x2e766>
   39073:	nop    DWORD PTR [rax+rax*1+0x0]
   39078:	mov    rcx,QWORD PTR [rcx+0x10]
   3907c:	cmp    esi,DWORD PTR [rcx+0x20]
   3907f:	jl     39078 <__sprintf_chk@plt+0x2e6c8>
   39081:	mov    r12d,DWORD PTR [rcx+0x8]
   39085:	mov    r9,QWORD PTR [rcx+0x10]
   39089:	mov    rdx,r11
   3908c:	mov    esi,r10d
   3908f:	mov    r8d,DWORD PTR [rcx+0xc]
   39093:	mov    ecx,r12d
   39096:	call   617a0 <_obstack_memory_used@@Base+0x14b20>
   3909b:	mov    r12d,eax
   3909e:	test   eax,eax
   390a0:	je     393cf <__sprintf_chk@plt+0x2ea1f>
   390a6:	cs nop WORD PTR [rax+rax*1+0x0]
   390b0:	mov    rax,QWORD PTR [rsp+0x18]
   390b5:	sub    rax,QWORD PTR fs:0x28
   390be:	jne    393e8 <__sprintf_chk@plt+0x2ea38>
   390c4:	add    rsp,0x28
   390c8:	mov    eax,r12d
   390cb:	pop    rbx
   390cc:	pop    rbp
   390cd:	pop    r12
   390cf:	pop    r13
   390d1:	pop    r14
   390d3:	pop    r15
   390d5:	ret    
   390d6:	cs nop WORD PTR [rax+rax*1+0x0]
   390e0:	mov    rdx,QWORD PTR [rdx+0x10]
   390e4:	cmp    eax,DWORD PTR [rdx+0x20]
   390e7:	jl     390e0 <__sprintf_chk@plt+0x2e730>
   390e9:	mov    r11d,DWORD PTR [rcx+0x8]
   390ed:	mov    r10,QWORD PTR [rdx+0x10]
   390f1:	mov    esi,DWORD PTR [rdx+0xc]
   390f4:	mov    edi,DWORD PTR [rdx+0x8]
   390f7:	mov    r8d,DWORD PTR [rcx+0xc]
   390fb:	mov    rdx,r10
   390fe:	mov    ecx,r11d
   39101:	call   617a0 <_obstack_memory_used@@Base+0x14b20>
   39106:	mov    r12d,eax
   39109:	test   eax,eax
   3910b:	mov    eax,0x1
   39110:	cmove  r12d,eax
   39114:	jmp    390b0 <__sprintf_chk@plt+0x2e700>
   39116:	mov    r12d,DWORD PTR [rcx+0x8]
   3911a:	mov    r8d,DWORD PTR [rcx+0xc]
   3911e:	mov    rdx,r11
   39121:	mov    esi,r10d
   39124:	mov    ecx,r12d
   39127:	call   617a0 <_obstack_memory_used@@Base+0x14b20>
   3912c:	mov    r12d,eax
   3912f:	test   eax,eax
   39131:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   39137:	mov    eax,DWORD PTR [r13+0x18]
   3913b:	mov    edx,DWORD PTR [rbp+0x18]
   3913e:	mov    r12d,eax
   39141:	mov    ecx,edx
   39143:	sub    ecx,eax
   39145:	sub    r12d,edx
   39148:	xor    eax,edx
   3914a:	cmovns r12d,ecx
   3914e:	test   r12d,r12d
   39151:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   39157:	mov    eax,DWORD PTR [rbp+0x8]
   3915a:	mov    rsi,QWORD PTR [rbp+0x0]
   3915e:	test   eax,eax
   39160:	je     3918b <__sprintf_chk@plt+0x2e7db>
   39162:	lea    rcx,[rax+rax*2]
   39166:	mov    rax,rsi
   39169:	shl    rcx,0x4
   3916d:	add    rcx,rsi
   39170:	mov    rdx,QWORD PTR [rax]
   39173:	test   rdx,rdx
   39176:	je     39182 <__sprintf_chk@plt+0x2e7d2>
   39178:	test   BYTE PTR [rax+0x18],0x2
   3917c:	je     39290 <__sprintf_chk@plt+0x2e8e0>
   39182:	add    rax,0x30
   39186:	cmp    rax,rcx
   39189:	jne    39170 <__sprintf_chk@plt+0x2e7c0>
   3918b:	mov    eax,DWORD PTR [r13+0x8]
   3918f:	mov    r14,QWORD PTR [r13+0x0]
   39193:	xor    ecx,ecx
   39195:	mov    QWORD PTR [rsp+0x8],0x0
   3919e:	test   eax,eax
   391a0:	je     393da <__sprintf_chk@plt+0x2ea2a>
   391a6:	lea    rdx,[rax+rax*2]
   391aa:	mov    rax,r14
   391ad:	shl    rdx,0x4
   391b1:	add    rdx,r14
   391b4:	nop    DWORD PTR [rax+0x0]
   391b8:	mov    rbx,QWORD PTR [rax]
   391bb:	test   rbx,rbx
   391be:	je     391c6 <__sprintf_chk@plt+0x2e816>
   391c0:	test   BYTE PTR [rax+0x18],0x2
   391c4:	je     391d1 <__sprintf_chk@plt+0x2e821>
   391c6:	add    rax,0x30
   391ca:	cmp    rax,rdx
   391cd:	jne    391b8 <__sprintf_chk@plt+0x2e808>
   391cf:	xor    ebx,ebx
   391d1:	mov    QWORD PTR [rsp+0x10],rbx
   391d6:	test   BYTE PTR [rsi+0x18],0x8
   391da:	je     391e4 <__sprintf_chk@plt+0x2e834>
   391dc:	test   cl,cl
   391de:	jne    392b0 <__sprintf_chk@plt+0x2e900>
   391e4:	test   BYTE PTR [r14+0x18],0x8
   391e9:	je     39210 <__sprintf_chk@plt+0x2e860>
   391eb:	test   rbx,rbx
   391ee:	je     39210 <__sprintf_chk@plt+0x2e860>
   391f0:	lea    rdi,[rsp+0x10]
   391f5:	call   38c30 <__sprintf_chk@plt+0x2e280>
   391fa:	cmp    eax,0x1
   391fd:	adc    r12d,0xffffffff
   39201:	test   r12d,r12d
   39204:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   3920a:	nop    WORD PTR [rax+rax*1+0x0]
   39210:	mov    rax,QWORD PTR [rbp+0x28]
   39214:	lea    r12,[rip+0xfffffffffffff9b5]        # 38bd0 <__sprintf_chk@plt+0x2e220>
   3921b:	mov    rdi,rbp
   3921e:	xor    ecx,ecx
   39220:	mov    rsi,r12
   39223:	mov    rdx,QWORD PTR [rax+0x30]
   39227:	call   38ad0 <__sprintf_chk@plt+0x2e120>
   3922c:	xor    ecx,ecx
   3922e:	mov    rsi,r12
   39231:	mov    rdi,r13
   39234:	mov    ebx,eax
   39236:	movsx  ebp,al
   39239:	mov    rax,QWORD PTR [r13+0x28]
   3923d:	mov    rdx,QWORD PTR [rax+0x30]
   39241:	call   38ad0 <__sprintf_chk@plt+0x2e120>
   39246:	movsx  r15d,al
   3924a:	test   ebp,ebp
   3924c:	jne    392e8 <__sprintf_chk@plt+0x2e938>
   39252:	mov    rdx,QWORD PTR [rsp+0x8]
   39257:	test   rdx,rdx
   3925a:	je     393ba <__sprintf_chk@plt+0x2ea0a>
   39260:	movzx  r12d,BYTE PTR [rdx]
   39264:	mov    r13,r12
   39267:	shl    r12,0x2
   3926b:	jmp    392f7 <__sprintf_chk@plt+0x2e947>
   39270:	mov    eax,DWORD PTR [r13+0x18]
   39274:	jmp    3901f <__sprintf_chk@plt+0x2e66f>
   39279:	nop    DWORD PTR [rax+0x0]
   39280:	mov    edi,DWORD PTR [rdi+0x18]
   39283:	jmp    38fff <__sprintf_chk@plt+0x2e64f>
   39288:	nop    DWORD PTR [rax+rax*1+0x0]
   39290:	mov    eax,DWORD PTR [r13+0x8]
   39294:	mov    QWORD PTR [rsp+0x8],rdx
   39299:	mov    ecx,0x1
   3929e:	mov    r14,QWORD PTR [r13+0x0]
   392a2:	test   eax,eax
   392a4:	jne    391a6 <__sprintf_chk@plt+0x2e7f6>
   392aa:	jmp    391cf <__sprintf_chk@plt+0x2e81f>
   392af:	nop
   392b0:	lea    rdi,[rsp+0x8]
   392b5:	call   38c30 <__sprintf_chk@plt+0x2e280>
   392ba:	test   eax,eax
   392bc:	je     391e4 <__sprintf_chk@plt+0x2e834>
   392c2:	mov    r12d,0x1
   392c8:	test   BYTE PTR [r14+0x18],0x8
   392cd:	je     390b0 <__sprintf_chk@plt+0x2e700>
   392d3:	test   rbx,rbx
   392d6:	je     390b0 <__sprintf_chk@plt+0x2e700>
   392dc:	jmp    391f0 <__sprintf_chk@plt+0x2e840>
   392e1:	nop    DWORD PTR [rax+0x0]
   392e8:	movzx  r13d,bl
   392ec:	movzx  ebx,bl
   392ef:	lea    r12,[rbx*4+0x0]
   392f7:	test   r15d,r15d
   392fa:	jne    39316 <__sprintf_chk@plt+0x2e966>
   392fc:	mov    rax,QWORD PTR [rsp+0x10]
   39301:	test   rax,rax
   39304:	je     393c5 <__sprintf_chk@plt+0x2ea15>
   3930a:	movzx  ebx,BYTE PTR [rax]
   3930d:	mov    r14,rbx
   39310:	shl    rbx,0x2
   39314:	jmp    39325 <__sprintf_chk@plt+0x2e975>
   39316:	movzx  r14d,al
   3931a:	movzx  eax,al
   3931d:	lea    rbx,[rax*4+0x0]
   39325:	call   a970 <__ctype_tolower_loc@plt>
   3932a:	mov    rax,QWORD PTR [rax]
   3932d:	mov    r12d,DWORD PTR [rax+r12*1]
   39331:	sub    r12d,DWORD PTR [rax+rbx*1]
   39335:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   3933b:	sub    r14d,r13d
   3933e:	mov    r12d,r14d
   39341:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   39347:	xor    r12d,r12d
   3934a:	test   ebp,ebp
   3934c:	setne  r12b
   39350:	cmp    r15d,0x1
   39354:	adc    r12d,0xffffffff
   39358:	test   r12d,r12d
   3935b:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   39361:	test   ebp,ebp
   39363:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   39369:	mov    rdi,QWORD PTR [rsp+0x8]
   3936e:	mov    rsi,QWORD PTR [rsp+0x10]
   39373:	xor    r12d,r12d
   39376:	test   rdi,rdi
   39379:	setne  r12b
   3937d:	cmp    rsi,0x1
   39381:	adc    r12d,0xffffffff
   39385:	test   r12d,r12d
   39388:	jne    390b0 <__sprintf_chk@plt+0x2e700>
   3938e:	test   rdi,rdi
   39391:	je     390b0 <__sprintf_chk@plt+0x2e700>
   39397:	mov    rax,QWORD PTR [rsp+0x18]
   3939c:	sub    rax,QWORD PTR fs:0x28
   393a5:	jne    393e8 <__sprintf_chk@plt+0x2ea38>
   393a7:	add    rsp,0x28
   393ab:	pop    rbx
   393ac:	pop    rbp
   393ad:	pop    r12
   393af:	pop    r13
   393b1:	pop    r14
   393b3:	pop    r15
   393b5:	jmp    9e00 <strcasecmp@plt>
   393ba:	xor    r12d,r12d
   393bd:	xor    r13d,r13d
   393c0:	jmp    392f7 <__sprintf_chk@plt+0x2e947>
   393c5:	xor    ebx,ebx
   393c7:	xor    r14d,r14d
   393ca:	jmp    39325 <__sprintf_chk@plt+0x2e975>
   393cf:	mov    r12d,0xffffffff
   393d5:	jmp    390b0 <__sprintf_chk@plt+0x2e700>
   393da:	mov    QWORD PTR [rsp+0x10],0x0
   393e3:	jmp    39210 <__sprintf_chk@plt+0x2e860>
   393e8:	call   a0a0 <__stack_chk_fail@plt>
   393ed:	nop    DWORD PTR [rax]
   393f0:	push   r15
   393f2:	push   r14
   393f4:	push   r13
   393f6:	push   r12
   393f8:	push   rbp
   393f9:	push   rbx
   393fa:	sub    rsp,0x78
   393fe:	mov    rcx,QWORD PTR [rdi+0x20]
   39402:	mov    r12,QWORD PTR [rdi]
   39405:	mov    QWORD PTR [rsp+0x20],rdi
   3940a:	mov    edi,0x20
   3940f:	mov    QWORD PTR [rsp+0x10],rsi
   39414:	mov    QWORD PTR [rsp+0x8],rcx
   39419:	call   a4a0 <malloc@plt>
   3941e:	mov    QWORD PTR [rsp+0x40],rax
   39423:	test   rax,rax
   39426:	je     39aae <__sprintf_chk@plt+0x2f0fe>
   3942c:	mov    rax,QWORD PTR [rsp+0x40]
   39431:	mov    DWORD PTR [rax+0x8],0x0
   39438:	mov    QWORD PTR [rax+0x18],0x0
   39440:	test   r12,r12
   39443:	je     39633 <__sprintf_chk@plt+0x2ec83>
   39449:	test   BYTE PTR [r12+0x18],0x4
   3944f:	jne    39a8f <__sprintf_chk@plt+0x2f0df>
   39455:	mov    r15,QWORD PTR [rsp+0x40]
   3945a:	mov    rbx,r12
   3945d:	xor    r13d,r13d
   39460:	xor    r14d,r14d
   39463:	jmp    394a5 <__sprintf_chk@plt+0x2eaf5>
   39465:	nop    DWORD PTR [rax]
   39468:	mov    eax,DWORD PTR [rbx+0x18]
   3946b:	test   al,0x4
   3946d:	jne    39477 <__sprintf_chk@plt+0x2eac7>
   3946f:	add    r13d,0x1
   39473:	mov    DWORD PTR [r15+0x8],r13d
   39477:	test   al,0x8
   39479:	jne    394a1 <__sprintf_chk@plt+0x2eaf1>
   3947b:	movsxd rbp,DWORD PTR [rbx+0x8]
   3947f:	lea    eax,[rbp-0x1]
   39482:	cmp    eax,0xfe
   39487:	ja     394a1 <__sprintf_chk@plt+0x2eaf1>
   39489:	call   a980 <__ctype_b_loc@plt>
   3948e:	mov    rax,QWORD PTR [rax]
   39491:	movzx  eax,WORD PTR [rax+rbp*2]
   39495:	and    ax,0x4000
   39499:	cmp    ax,0x1
   3949d:	sbb    r14d,0xffffffff
   394a1:	add    rbx,0x30
   394a5:	mov    edx,DWORD PTR [rbx+0x8]
   394a8:	test   edx,edx
   394aa:	jne    39468 <__sprintf_chk@plt+0x2eab8>
   394ac:	cmp    QWORD PTR [rbx],0x0
   394b0:	jne    39468 <__sprintf_chk@plt+0x2eab8>
   394b2:	cmp    QWORD PTR [rbx+0x20],0x0
   394b7:	jne    39468 <__sprintf_chk@plt+0x2eab8>
   394b9:	mov    eax,DWORD PTR [rbx+0x28]
   394bc:	test   eax,eax
   394be:	jne    39468 <__sprintf_chk@plt+0x2eab8>
   394c0:	lea    rdi,[r13*8+0x0]
   394c8:	mov    DWORD PTR [rsp+0x18],eax
   394cc:	sub    rdi,r13
   394cf:	shl    rdi,0x3
   394d3:	call   a4a0 <malloc@plt>
   394d8:	mov    rbp,QWORD PTR [rsp+0x40]
   394dd:	lea    edi,[r14+0x1]
   394e1:	mov    r15,rax
   394e4:	mov    QWORD PTR [rbp+0x0],rax
   394e8:	call   a4a0 <malloc@plt>
   394ed:	mov    QWORD PTR [rbp+0x10],rax
   394f1:	mov    rbx,rax
   394f4:	test   r15,r15
   394f7:	je     39a70 <__sprintf_chk@plt+0x2f0c0>
   394fd:	test   rax,rax
   39500:	je     39a70 <__sprintf_chk@plt+0x2f0c0>
   39506:	mov    edx,DWORD PTR [r12+0x8]
   3950b:	mov    r14,rax
   3950e:	mov    r13,r15
   39511:	mov    eax,DWORD PTR [r12+0x28]
   39516:	test   edx,edx
   39518:	jne    39606 <__sprintf_chk@plt+0x2ec56>
   3951e:	xchg   ax,ax
   39520:	cmp    QWORD PTR [r12],0x0
   39525:	je     39a24 <__sprintf_chk@plt+0x2f074>
   3952b:	mov    QWORD PTR [r13+0x0],r12
   3952f:	mov    DWORD PTR [r13+0x8],0x0
   39537:	mov    QWORD PTR [r13+0x10],r14
   3953b:	test   eax,eax
   3953d:	jne    3961e <__sprintf_chk@plt+0x2ec6e>
   39543:	cmp    QWORD PTR [r12],0x0
   39548:	jne    39550 <__sprintf_chk@plt+0x2eba0>
   3954a:	add    DWORD PTR [rsp+0x18],0x1
   3954f:	nop
   39550:	mov    eax,DWORD PTR [rsp+0x18]
   39554:	mov    r15d,0x1
   3955a:	mov    DWORD PTR [r13+0x18],eax
   3955e:	mov    rax,QWORD PTR [rsp+0x10]
   39563:	mov    QWORD PTR [r13+0x20],rax
   39567:	mov    rax,QWORD PTR [rsp+0x20]
   3956c:	mov    QWORD PTR [r13+0x28],rax
   39570:	mov    eax,DWORD PTR [r12+0x18]
   39575:	nop    DWORD PTR [rax]
   39578:	mov    DWORD PTR [r13+0x8],r15d
   3957c:	test   al,0x8
   3957e:	jne    395d0 <__sprintf_chk@plt+0x2ec20>
   39580:	mov    ebp,DWORD PTR [r12+0x8]
   39585:	lea    eax,[rbp-0x1]
   39588:	cmp    eax,0xfe
   3958d:	ja     395d0 <__sprintf_chk@plt+0x2ec20>
   3958f:	call   a980 <__ctype_b_loc@plt>
   39594:	mov    r8,rax
   39597:	movsxd rax,ebp
   3959a:	mov    rdx,QWORD PTR [r8]
   3959d:	test   BYTE PTR [rdx+rax*2+0x1],0x40
   395a2:	je     395d0 <__sprintf_chk@plt+0x2ec20>
   395a4:	mov    edx,ebp
   395a6:	cmp    rbx,r14
   395a9:	jae    39a18 <__sprintf_chk@plt+0x2f068>
   395af:	mov    rax,rbx
   395b2:	jmp    395c5 <__sprintf_chk@plt+0x2ec15>
   395b4:	nop    DWORD PTR [rax+0x0]
   395b8:	add    rax,0x1
   395bc:	cmp    rax,r14
   395bf:	je     39a18 <__sprintf_chk@plt+0x2f068>
   395c5:	cmp    dl,BYTE PTR [rax]
   395c7:	jne    395b8 <__sprintf_chk@plt+0x2ec08>
   395c9:	nop    DWORD PTR [rax+0x0]
   395d0:	mov    edx,DWORD PTR [r12+0x38]
   395d5:	add    r12,0x30
   395d9:	test   edx,edx
   395db:	jne    395e8 <__sprintf_chk@plt+0x2ec38>
   395dd:	cmp    QWORD PTR [r12],0x0
   395e2:	je     399f0 <__sprintf_chk@plt+0x2f040>
   395e8:	mov    eax,DWORD PTR [r12+0x18]
   395ed:	add    r15d,0x1
   395f1:	test   al,0x4
   395f3:	jne    39578 <__sprintf_chk@plt+0x2ebc8>
   395f5:	add    r13,0x38
   395f9:	mov    eax,DWORD PTR [r12+0x28]
   395fe:	test   edx,edx
   39600:	je     39520 <__sprintf_chk@plt+0x2eb70>
   39606:	mov    QWORD PTR [r13+0x0],r12
   3960a:	mov    DWORD PTR [r13+0x8],0x0
   39612:	mov    QWORD PTR [r13+0x10],r14
   39616:	test   eax,eax
   39618:	je     39550 <__sprintf_chk@plt+0x2eba0>
   3961e:	mov    DWORD PTR [rsp+0x18],eax
   39622:	jmp    39550 <__sprintf_chk@plt+0x2eba0>
   39627:	test   eax,eax
   39629:	jne    39a4d <__sprintf_chk@plt+0x2f09d>
   3962f:	mov    BYTE PTR [r14],0x0
   39633:	mov    rax,QWORD PTR [rsp+0x8]
   39638:	test   rax,rax
   3963b:	je     39761 <__sprintf_chk@plt+0x2edb1>
   39641:	mov    rbp,QWORD PTR [rax]
   39644:	test   rbp,rbp
   39647:	je     39761 <__sprintf_chk@plt+0x2edb1>
   3964d:	mov    rbx,QWORD PTR [rsp+0x40]
   39652:	mov    r8,rbp
   39655:	lea    rax,[rbx+0x18]
   39659:	mov    QWORD PTR [rsp+0x68],rax
   3965e:	mov    rax,QWORD PTR [rsp+0x8]
   39663:	mov    r14d,DWORD PTR [rax+0x18]
   39667:	mov    rbp,QWORD PTR [rax+0x10]
   3966b:	test   r14d,r14d
   3966e:	jne    3967a <__sprintf_chk@plt+0x2ecca>
   39670:	mov    rsi,QWORD PTR [rsp+0x10]
   39675:	test   rbp,rbp
   39678:	je     396e0 <__sprintf_chk@plt+0x2ed30>
   3967a:	mov    r15,QWORD PTR [rsp+0x20]
   3967f:	mov    edi,0x30
   39684:	mov    QWORD PTR [rsp+0x18],r8
   39689:	mov    r12,QWORD PTR [rsp+0x8]
   3968e:	sub    r12,QWORD PTR [r15+0x20]
   39692:	call   a4a0 <malloc@plt>
   39697:	sar    r12,0x5
   3969b:	mov    r8,QWORD PTR [rsp+0x18]
   396a0:	test   rax,rax
   396a3:	mov    rsi,rax
   396a6:	je     396e0 <__sprintf_chk@plt+0x2ed30>
   396a8:	mov    rcx,QWORD PTR [rsp+0x10]
   396ad:	mov    DWORD PTR [rax+0xc],r14d
   396b1:	mov    QWORD PTR [rax],rbp
   396b4:	mov    DWORD PTR [rax+0x8],r12d
   396b8:	mov    QWORD PTR [rax+0x10],rcx
   396bc:	mov    QWORD PTR [rax+0x18],r15
   396c0:	xor    eax,eax
   396c2:	test   rcx,rcx
   396c5:	je     396d1 <__sprintf_chk@plt+0x2ed21>
   396c7:	mov    eax,DWORD PTR [rcx+0x20]
   396ca:	mov    DWORD PTR [rsp+0x18],eax
   396ce:	add    eax,0x1
   396d1:	mov    DWORD PTR [rsi+0x20],eax
   396d4:	mov    rax,QWORD PTR [rbx+0x18]
   396d8:	mov    QWORD PTR [rbx+0x18],rsi
   396dc:	mov    QWORD PTR [rsi+0x28],rax
   396e0:	mov    rdi,r8
   396e3:	call   393f0 <__sprintf_chk@plt+0x2ea40>
   396e8:	mov    rbp,rax
   396eb:	mov    rax,QWORD PTR [rbx+0x18]
   396ef:	test   rax,rax
   396f2:	je     39a66 <__sprintf_chk@plt+0x2f0b6>
   396f8:	nop    DWORD PTR [rax+rax*1+0x0]
   39700:	mov    rdx,rax
   39703:	mov    rax,QWORD PTR [rax+0x28]
   39707:	test   rax,rax
   3970a:	jne    39700 <__sprintf_chk@plt+0x2ed50>
   3970c:	add    rdx,0x28
   39710:	mov    rax,QWORD PTR [rbp+0x18]
   39714:	mov    r13d,DWORD PTR [rbp+0x8]
   39718:	mov    QWORD PTR [rdx],rax
   3971b:	mov    QWORD PTR [rbp+0x18],0x0
   39723:	test   r13d,r13d
   39726:	je     39742 <__sprintf_chk@plt+0x2ed92>
   39728:	mov    edx,DWORD PTR [rbx+0x8]
   3972b:	test   edx,edx
   3972d:	jne    39775 <__sprintf_chk@plt+0x2edc5>
   3972f:	mov    rax,QWORD PTR [rbp+0x0]
   39733:	mov    DWORD PTR [rbx+0x8],r13d
   39737:	mov    QWORD PTR [rbx],rax
   3973a:	mov    rax,QWORD PTR [rbp+0x10]
   3973e:	mov    QWORD PTR [rbx+0x10],rax
   39742:	mov    rdi,rbp
   39745:	call   9ce0 <free@plt>
   3974a:	add    QWORD PTR [rsp+0x8],0x20
   39750:	mov    rax,QWORD PTR [rsp+0x8]
   39755:	mov    r8,QWORD PTR [rax]
   39758:	test   r8,r8
   3975b:	jne    3965e <__sprintf_chk@plt+0x2ecae>
   39761:	mov    rax,QWORD PTR [rsp+0x40]
   39766:	add    rsp,0x78
   3976a:	pop    rbx
   3976b:	pop    rbp
   3976c:	pop    r12
   3976e:	pop    r13
   39770:	pop    r14
   39772:	pop    r15
   39774:	ret    
   39775:	lea    eax,[r13+rdx*1+0x0]
   3977a:	mov    DWORD PTR [rsp+0x30],edx
   3977e:	lea    rdi,[rax*8+0x0]
   39786:	mov    DWORD PTR [rsp+0x4c],eax
   3978a:	sub    rdi,rax
   3978d:	shl    rdi,0x3
   39791:	call   a4a0 <malloc@plt>
   39796:	mov    r15,QWORD PTR [rbx+0x10]
   3979a:	mov    QWORD PTR [rsp+0x38],rax
   3979f:	mov    rdi,r15
   397a2:	call   a060 <strlen@plt>
   397a7:	mov    r14,QWORD PTR [rbp+0x10]
   397ab:	mov    ecx,eax
   397ad:	mov    rdi,r14
   397b0:	mov    r12,rcx
   397b3:	mov    QWORD PTR [rsp+0x18],rcx
   397b8:	call   a060 <strlen@plt>
   397bd:	lea    rdi,[r12+rax*1+0x1]
   397c2:	call   a4a0 <malloc@plt>
   397c7:	cmp    QWORD PTR [rsp+0x38],0x0
   397cd:	mov    QWORD PTR [rsp+0x28],rax
   397d2:	je     39acd <__sprintf_chk@plt+0x2f11d>
   397d8:	test   rax,rax
   397db:	mov    edx,DWORD PTR [rsp+0x30]
   397df:	je     39acd <__sprintf_chk@plt+0x2f11d>
   397e5:	lea    r9,[rdx*8+0x0]
   397ed:	mov    r11,QWORD PTR [rbp+0x0]
   397f1:	mov    rsi,QWORD PTR [rbx]
   397f4:	sub    r9,rdx
   397f7:	mov    rdi,QWORD PTR [rsp+0x38]
   397fc:	lea    r12,[r9*8+0x0]
   39804:	mov    QWORD PTR [rsp+0x58],r11
   39809:	mov    rdx,r12
   3980c:	mov    QWORD PTR [rsp+0x50],rsi
   39811:	call   a620 <mempcpy@plt>
   39816:	mov    ecx,r13d
   39819:	mov    rsi,QWORD PTR [rsp+0x58]
   3981e:	lea    rdx,[rcx*8+0x0]
   39826:	mov    rdi,rax
   39829:	mov    QWORD PTR [rsp+0x30],rcx
   3982e:	sub    rdx,rcx
   39831:	shl    rdx,0x3
   39835:	call   a420 <memcpy@plt>
   3983a:	mov    rdx,QWORD PTR [rsp+0x18]
   3983f:	mov    rdi,QWORD PTR [rsp+0x28]
   39844:	mov    rsi,r15
   39847:	call   a420 <memcpy@plt>
   3984c:	mov    rdx,QWORD PTR [rsp+0x38]
   39851:	mov    rsi,QWORD PTR [rsp+0x28]
   39856:	mov    rcx,QWORD PTR [rsp+0x30]
   3985b:	lea    r13,[rdx+r12*1]
   3985f:	nop
   39860:	mov    rax,QWORD PTR [rdx+0x10]
   39864:	add    rdx,0x38
   39868:	sub    rax,r15
   3986b:	add    rax,rsi
   3986e:	mov    QWORD PTR [rdx-0x28],rax
   39872:	cmp    rdx,r13
   39875:	jne    39860 <__sprintf_chk@plt+0x2eeb0>
   39877:	lea    rax,[rcx*8+0x0]
   3987f:	mov    r15,QWORD PTR [rsp+0x18]
   39884:	add    r15,QWORD PTR [rsp+0x28]
   39889:	mov    QWORD PTR [rsp+0x58],rbp
   3988e:	sub    rax,rcx
   39891:	mov    QWORD PTR [rsp+0x18],r15
   39896:	mov    rbp,r13
   39899:	lea    rax,[r13+rax*8+0x0]
   3989e:	mov    QWORD PTR [rsp+0x60],rbx
   398a3:	mov    rbx,r15
   398a6:	mov    r15,r14
   398a9:	mov    QWORD PTR [rsp+0x30],rax
   398ae:	xchg   ax,ax
   398b0:	mov    rax,QWORD PTR [rsp+0x18]
   398b5:	mov    r12,QWORD PTR [rbp+0x0]
   398b9:	mov    QWORD PTR [rbp+0x10],rax
   398bd:	mov    eax,DWORD PTR [rbp+0x8]
   398c0:	test   eax,eax
   398c2:	je     3991d <__sprintf_chk@plt+0x2ef6d>
   398c4:	sub    eax,0x1
   398c7:	lea    rsi,[rax+rax*2+0x3]
   398cc:	shl    rsi,0x4
   398d0:	lea    r14,[r12+rsi*1]
   398d4:	nop    DWORD PTR [rax+0x0]
   398d8:	test   BYTE PTR [r12+0x18],0x8
   398de:	jne    39914 <__sprintf_chk@plt+0x2ef64>
   398e0:	mov    r13d,DWORD PTR [r12+0x8]
   398e5:	lea    eax,[r13-0x1]
   398e9:	cmp    eax,0xfe
   398ee:	ja     39914 <__sprintf_chk@plt+0x2ef64>
   398f0:	call   a980 <__ctype_b_loc@plt>
   398f5:	mov    r8,rax
   398f8:	movsxd rax,r13d
   398fb:	mov    rdx,QWORD PTR [r8]
   398fe:	test   BYTE PTR [rdx+rax*2+0x1],0x40
   39903:	je     39914 <__sprintf_chk@plt+0x2ef64>
   39905:	movsx  eax,BYTE PTR [r15]
   39909:	mov    edx,eax
   3990b:	cmp    eax,r13d
   3990e:	je     399a8 <__sprintf_chk@plt+0x2eff8>
   39914:	add    r12,0x30
   39918:	cmp    r14,r12
   3991b:	jne    398d8 <__sprintf_chk@plt+0x2ef28>
   3991d:	add    rbp,0x38
   39921:	cmp    QWORD PTR [rsp+0x30],rbp
   39926:	jne    398b0 <__sprintf_chk@plt+0x2ef00>
   39928:	mov    rax,QWORD PTR [rsp+0x18]
   3992d:	mov    rbx,QWORD PTR [rsp+0x60]
   39932:	mov    rdi,QWORD PTR [rsp+0x50]
   39937:	mov    rbp,QWORD PTR [rsp+0x58]
   3993c:	mov    BYTE PTR [rax],0x0
   3993f:	call   9ce0 <free@plt>
   39944:	mov    rdi,QWORD PTR [rbx+0x10]
   39948:	call   9ce0 <free@plt>
   3994d:	mov    rax,QWORD PTR [rsp+0x38]
   39952:	mov    r12,QWORD PTR [rbp+0x18]
   39956:	mov    QWORD PTR [rbx],rax
   39959:	mov    eax,DWORD PTR [rsp+0x4c]
   3995d:	mov    DWORD PTR [rbx+0x8],eax
   39960:	mov    rax,QWORD PTR [rsp+0x28]
   39965:	mov    QWORD PTR [rbx+0x10],rax
   39969:	test   r12,r12
   3996c:	je     39982 <__sprintf_chk@plt+0x2efd2>
   3996e:	xchg   ax,ax
   39970:	mov    rdi,r12
   39973:	mov    r12,QWORD PTR [r12+0x28]
   39978:	call   9ce0 <free@plt>
   3997d:	test   r12,r12
   39980:	jne    39970 <__sprintf_chk@plt+0x2efc0>
   39982:	mov    eax,DWORD PTR [rbp+0x8]
   39985:	test   eax,eax
   39987:	je     39742 <__sprintf_chk@plt+0x2ed92>
   3998d:	mov    rdi,QWORD PTR [rbp+0x0]
   39991:	call   9ce0 <free@plt>
   39996:	mov    rdi,QWORD PTR [rbp+0x10]
   3999a:	call   9ce0 <free@plt>
   3999f:	jmp    39742 <__sprintf_chk@plt+0x2ed92>
   399a4:	nop    DWORD PTR [rax+0x0]
   399a8:	mov    rax,QWORD PTR [rsp+0x28]
   399ad:	cmp    rax,rbx
   399b0:	jb     399c1 <__sprintf_chk@plt+0x2f011>
   399b2:	jmp    399d0 <__sprintf_chk@plt+0x2f020>
   399b4:	nop    DWORD PTR [rax+0x0]
   399b8:	add    rax,0x1
   399bc:	cmp    rbx,rax
   399bf:	je     399d0 <__sprintf_chk@plt+0x2f020>
   399c1:	cmp    dl,BYTE PTR [rax]
   399c3:	jne    399b8 <__sprintf_chk@plt+0x2f008>
   399c5:	add    r15,0x1
   399c9:	jmp    39914 <__sprintf_chk@plt+0x2ef64>
   399ce:	xchg   ax,ax
   399d0:	mov    rax,QWORD PTR [rsp+0x18]
   399d5:	add    r15,0x1
   399d9:	mov    BYTE PTR [rax],dl
   399db:	add    rax,0x1
   399df:	mov    QWORD PTR [rsp+0x18],rax
   399e4:	jmp    39914 <__sprintf_chk@plt+0x2ef64>
   399e9:	nop    DWORD PTR [rax+0x0]
   399f0:	cmp    QWORD PTR [r12+0x20],0x0
   399f6:	jne    395e8 <__sprintf_chk@plt+0x2ec38>
   399fc:	mov    eax,DWORD PTR [r12+0x28]
   39a01:	test   eax,eax
   39a03:	jne    395e8 <__sprintf_chk@plt+0x2ec38>
   39a09:	add    r13,0x38
   39a0d:	jmp    395f9 <__sprintf_chk@plt+0x2ec49>
   39a12:	nop    WORD PTR [rax+rax*1+0x0]
   39a18:	mov    BYTE PTR [r14],bpl
   39a1b:	add    r14,0x1
   39a1f:	jmp    395d0 <__sprintf_chk@plt+0x2ec20>
   39a24:	cmp    QWORD PTR [r12+0x20],0x0
   39a2a:	je     39627 <__sprintf_chk@plt+0x2ec77>
   39a30:	mov    QWORD PTR [r13+0x0],r12
   39a34:	mov    DWORD PTR [r13+0x8],0x0
   39a3c:	mov    QWORD PTR [r13+0x10],r14
   39a40:	test   eax,eax
   39a42:	je     3954a <__sprintf_chk@plt+0x2eb9a>
   39a48:	jmp    3961e <__sprintf_chk@plt+0x2ec6e>
   39a4d:	mov    QWORD PTR [r13+0x0],r12
   39a51:	mov    DWORD PTR [r13+0x8],0x0
   39a59:	mov    QWORD PTR [r13+0x10],r14
   39a5d:	mov    DWORD PTR [rsp+0x18],eax
   39a61:	jmp    39550 <__sprintf_chk@plt+0x2eba0>
   39a66:	mov    rdx,QWORD PTR [rsp+0x68]
   39a6b:	jmp    39710 <__sprintf_chk@plt+0x2ed60>
   39a70:	lea    rcx,[rip+0x32799]        # 6c210 <_obstack_memory_used@@Base+0x1f590>
   39a77:	mov    edx,0x1d9
   39a7c:	lea    rsi,[rip+0x320ce]        # 6bb51 <_obstack_memory_used@@Base+0x1eed1>
   39a83:	lea    rdi,[rip+0x31ace]        # 6b558 <_obstack_memory_used@@Base+0x1e8d8>
   39a8a:	call   a190 <__assert_fail@plt>
   39a8f:	lea    rcx,[rip+0x3277a]        # 6c210 <_obstack_memory_used@@Base+0x1f590>
   39a96:	mov    edx,0x1cb
   39a9b:	lea    rsi,[rip+0x320af]        # 6bb51 <_obstack_memory_used@@Base+0x1eed1>
   39aa2:	lea    rdi,[rip+0x320b8]        # 6bb61 <_obstack_memory_used@@Base+0x1eee1>
   39aa9:	call   a190 <__assert_fail@plt>
   39aae:	lea    rcx,[rip+0x3275b]        # 6c210 <_obstack_memory_used@@Base+0x1f590>
   39ab5:	mov    edx,0x1c1
   39aba:	lea    rsi,[rip+0x32090]        # 6bb51 <_obstack_memory_used@@Base+0x1eed1>
   39ac1:	lea    rdi,[rip+0x32095]        # 6bb5d <_obstack_memory_used@@Base+0x1eedd>
   39ac8:	call   a190 <__assert_fail@plt>
   39acd:	lea    rcx,[rip+0x3274c]        # 6c220 <_obstack_memory_used@@Base+0x1f5a0>
   39ad4:	mov    edx,0x3c9
   39ad9:	lea    rsi,[rip+0x32071]        # 6bb51 <_obstack_memory_used@@Base+0x1eed1>
   39ae0:	lea    rdi,[rip+0x3208a]        # 6bb71 <_obstack_memory_used@@Base+0x1eef1>
   39ae7:	call   a190 <__assert_fail@plt>
   39aec:	nop    DWORD PTR [rax+0x0]
   39af0:	push   rbp
   39af1:	push   rbx
   39af2:	mov    rbx,rdi
   39af5:	sub    rsp,0x18
   39af9:	mov    rax,QWORD PTR [rdi+0x38]
   39afd:	sub    rax,QWORD PTR [rdi+0x30]
   39b01:	cmp    rax,QWORD PTR [rdi+0x20]
   39b05:	ja     39b60 <__sprintf_chk@plt+0x2f1b0>
   39b07:	mov    rax,QWORD PTR [rbx+0x28]
   39b0b:	xor    edx,edx
   39b0d:	test   rax,rax
   39b10:	cmovs  rax,rdx
   39b14:	sub    esi,eax
   39b16:	lea    ebp,[rsi-0x1]
   39b19:	test   esi,esi
   39b1b:	jg     39b30 <__sprintf_chk@plt+0x2f180>
   39b1d:	jmp    39b58 <__sprintf_chk@plt+0x2f1a8>
   39b1f:	nop
   39b20:	lea    rdx,[rax+0x1]
   39b24:	mov    QWORD PTR [rbx+0x38],rdx
   39b28:	mov    BYTE PTR [rax],0x20
   39b2b:	sub    ebp,0x1
   39b2e:	jb     39b58 <__sprintf_chk@plt+0x2f1a8>
   39b30:	mov    rax,QWORD PTR [rbx+0x38]
   39b34:	cmp    rax,QWORD PTR [rbx+0x40]
   39b38:	jne    39b20 <__sprintf_chk@plt+0x2f170>
   39b3a:	mov    esi,0x1
   39b3f:	mov    rdi,rbx
   39b42:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39b47:	test   eax,eax
   39b49:	je     39b2b <__sprintf_chk@plt+0x2f17b>
   39b4b:	mov    rax,QWORD PTR [rbx+0x38]
   39b4f:	jmp    39b20 <__sprintf_chk@plt+0x2f170>
   39b51:	nop    DWORD PTR [rax+0x0]
   39b58:	add    rsp,0x18
   39b5c:	pop    rbx
   39b5d:	pop    rbp
   39b5e:	ret    
   39b5f:	nop
   39b60:	mov    DWORD PTR [rsp+0xc],esi
   39b64:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   39b69:	mov    esi,DWORD PTR [rsp+0xc]
   39b6d:	jmp    39b07 <__sprintf_chk@plt+0x2f157>
   39b6f:	nop
   39b70:	push   rbp
   39b71:	mov    rbp,rsi
   39b74:	push   rbx
   39b75:	mov    rbx,rdi
   39b78:	sub    rsp,0x8
   39b7c:	mov    rdx,QWORD PTR [rdi+0x38]
   39b80:	mov    rax,rdx
   39b83:	sub    rax,QWORD PTR [rdi+0x30]
   39b87:	cmp    rax,QWORD PTR [rdi+0x20]
   39b8b:	ja     39be0 <__sprintf_chk@plt+0x2f230>
   39b8d:	mov    rax,QWORD PTR [rbx+0x28]
   39b91:	xor    esi,esi
   39b93:	mov    rcx,QWORD PTR [rbx+0x40]
   39b97:	test   rax,rax
   39b9a:	cmovs  rax,rsi
   39b9e:	add    rax,rbp
   39ba1:	cmp    rax,QWORD PTR [rbx+0x10]
   39ba5:	jb     39bc0 <__sprintf_chk@plt+0x2f210>
   39ba7:	cmp    rdx,rcx
   39baa:	je     39bf0 <__sprintf_chk@plt+0x2f240>
   39bac:	lea    rax,[rdx+0x1]
   39bb0:	mov    QWORD PTR [rbx+0x38],rax
   39bb4:	mov    BYTE PTR [rdx],0xa
   39bb7:	add    rsp,0x8
   39bbb:	pop    rbx
   39bbc:	pop    rbp
   39bbd:	ret    
   39bbe:	xchg   ax,ax
   39bc0:	cmp    rdx,rcx
   39bc3:	je     39c10 <__sprintf_chk@plt+0x2f260>
   39bc5:	lea    rax,[rdx+0x1]
   39bc9:	mov    QWORD PTR [rbx+0x38],rax
   39bcd:	mov    BYTE PTR [rdx],0x20
   39bd0:	add    rsp,0x8
   39bd4:	pop    rbx
   39bd5:	pop    rbp
   39bd6:	ret    
   39bd7:	nop    WORD PTR [rax+rax*1+0x0]
   39be0:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   39be5:	mov    rdx,QWORD PTR [rbx+0x38]
   39be9:	jmp    39b8d <__sprintf_chk@plt+0x2f1dd>
   39beb:	nop    DWORD PTR [rax+rax*1+0x0]
   39bf0:	mov    esi,0x1
   39bf5:	mov    rdi,rbx
   39bf8:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39bfd:	test   eax,eax
   39bff:	je     39bb7 <__sprintf_chk@plt+0x2f207>
   39c01:	mov    rdx,QWORD PTR [rbx+0x38]
   39c05:	jmp    39bac <__sprintf_chk@plt+0x2f1fc>
   39c07:	nop    WORD PTR [rax+rax*1+0x0]
   39c10:	mov    esi,0x1
   39c15:	mov    rdi,rbx
   39c18:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39c1d:	test   eax,eax
   39c1f:	je     39bb7 <__sprintf_chk@plt+0x2f207>
   39c21:	mov    rdx,QWORD PTR [rbx+0x38]
   39c25:	jmp    39bc5 <__sprintf_chk@plt+0x2f215>
   39c27:	nop    WORD PTR [rax+rax*1+0x0]
   39c30:	push   r15
   39c32:	push   r14
   39c34:	push   r13
   39c36:	push   r12
   39c38:	mov    r12,rsi
   39c3b:	push   rbp
   39c3c:	mov    rbp,rdi
   39c3f:	push   rbx
   39c40:	mov    rbx,rdx
   39c43:	sub    rsp,0x18
   39c47:	test   rdi,rdi
   39c4a:	je     39d60 <__sprintf_chk@plt+0x2f3b0>
   39c50:	mov    rdi,QWORD PTR [rsi+0x30]
   39c54:	mov    edx,0x5
   39c59:	mov    rsi,rbp
   39c5c:	call   a040 <dcgettext@plt>
   39c61:	mov    rcx,QWORD PTR [rbx+0x20]
   39c65:	mov    rdx,r12
   39c68:	mov    esi,0x2000003
   39c6d:	mov    rdi,rax
   39c70:	mov    rbp,rax
   39c73:	call   381e0 <__sprintf_chk@plt+0x2d830>
   39c78:	mov    r12,rax
   39c7b:	test   rax,rax
   39c7e:	je     39c96 <__sprintf_chk@plt+0x2f2e6>
   39c80:	cmp    BYTE PTR [r12],0x0
   39c85:	mov    rax,QWORD PTR [rbx+0x10]
   39c89:	jne    39cb8 <__sprintf_chk@plt+0x2f308>
   39c8b:	mov    rax,QWORD PTR [rbx+0x10]
   39c8f:	mov    DWORD PTR [rax+0x8],0x1
   39c96:	cmp    rbp,r12
   39c99:	je     39d7f <__sprintf_chk@plt+0x2f3cf>
   39c9f:	add    rsp,0x18
   39ca3:	mov    rdi,r12
   39ca6:	pop    rbx
   39ca7:	pop    rbp
   39ca8:	pop    r12
   39caa:	pop    r13
   39cac:	pop    r14
   39cae:	pop    r15
   39cb0:	jmp    9ce0 <free@plt>
   39cb5:	nop    DWORD PTR [rax]
   39cb8:	cmp    QWORD PTR [rax],0x0
   39cbc:	mov    r13,QWORD PTR [rbx+0x8]
   39cc0:	je     39cdb <__sprintf_chk@plt+0x2f32b>
   39cc2:	mov    rax,QWORD PTR [r13+0x38]
   39cc6:	cmp    rax,QWORD PTR [r13+0x40]
   39cca:	je     39e50 <__sprintf_chk@plt+0x2f4a0>
   39cd0:	lea    rdx,[rax+0x1]
   39cd4:	mov    QWORD PTR [r13+0x38],rdx
   39cd8:	mov    BYTE PTR [rax],0xa
   39cdb:	mov    rdi,QWORD PTR [rbx+0x8]
   39cdf:	mov    esi,DWORD PTR [rip+0x45013]        # 7ecf8 <argp_err_exit_status@@Base+0x38>
   39ce5:	call   39af0 <__sprintf_chk@plt+0x2f140>
   39cea:	mov    r13,QWORD PTR [rbx+0x8]
   39cee:	movsxd r14,DWORD PTR [rip+0x45003]        # 7ecf8 <argp_err_exit_status@@Base+0x38>
   39cf5:	mov    rax,QWORD PTR [r13+0x38]
   39cf9:	sub    rax,QWORD PTR [r13+0x30]
   39cfd:	cmp    rax,QWORD PTR [r13+0x20]
   39d01:	ja     39de0 <__sprintf_chk@plt+0x2f430>
   39d07:	mov    QWORD PTR [r13+0x8],r14
   39d0b:	mov    r15,r13
   39d0e:	mov    QWORD PTR [r15+0x18],r14
   39d12:	mov    rdi,r12
   39d15:	call   a060 <strlen@plt>
   39d1a:	mov    r14,rax
   39d1d:	test   rax,rax
   39d20:	jne    39da8 <__sprintf_chk@plt+0x2f3f8>
   39d26:	mov    rax,QWORD PTR [r13+0x38]
   39d2a:	mov    r14,r13
   39d2d:	mov    rdx,rax
   39d30:	sub    rdx,QWORD PTR [r13+0x30]
   39d34:	cmp    rdx,QWORD PTR [r13+0x20]
   39d38:	ja     39d90 <__sprintf_chk@plt+0x2f3e0>
   39d3a:	mov    QWORD PTR [r13+0x8],0x0
   39d42:	cmp    QWORD PTR [r14+0x40],rax
   39d46:	je     39e28 <__sprintf_chk@plt+0x2f478>
   39d4c:	lea    rdx,[rax+0x1]
   39d50:	mov    QWORD PTR [r14+0x38],rdx
   39d54:	mov    BYTE PTR [rax],0xa
   39d57:	jmp    39c8b <__sprintf_chk@plt+0x2f2db>
   39d5c:	nop    DWORD PTR [rax+0x0]
   39d60:	mov    rcx,QWORD PTR [rdx+0x20]
   39d64:	xor    edi,edi
   39d66:	mov    rdx,rsi
   39d69:	mov    esi,0x2000003
   39d6e:	call   381e0 <__sprintf_chk@plt+0x2d830>
   39d73:	mov    r12,rax
   39d76:	test   rax,rax
   39d79:	jne    39c80 <__sprintf_chk@plt+0x2f2d0>
   39d7f:	add    rsp,0x18
   39d83:	pop    rbx
   39d84:	pop    rbp
   39d85:	pop    r12
   39d87:	pop    r13
   39d89:	pop    r14
   39d8b:	pop    r15
   39d8d:	ret    
   39d8e:	xchg   ax,ax
   39d90:	mov    rdi,r13
   39d93:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   39d98:	mov    r14,QWORD PTR [rbx+0x8]
   39d9c:	mov    rax,QWORD PTR [r14+0x38]
   39da0:	jmp    39d3a <__sprintf_chk@plt+0x2f38a>
   39da2:	nop    WORD PTR [rax+rax*1+0x0]
   39da8:	mov    rdi,QWORD PTR [r13+0x38]
   39dac:	mov    rax,QWORD PTR [r13+0x40]
   39db0:	lea    rdx,[rdi+r14*1]
   39db4:	cmp    rax,rdx
   39db7:	jae    39dc5 <__sprintf_chk@plt+0x2f415>
   39db9:	sub    rax,rdi
   39dbc:	cmp    r14,rax
   39dbf:	ja     39e70 <__sprintf_chk@plt+0x2f4c0>
   39dc5:	mov    rdx,r14
   39dc8:	mov    rsi,r12
   39dcb:	call   a420 <memcpy@plt>
   39dd0:	add    QWORD PTR [r13+0x38],r14
   39dd4:	mov    r13,QWORD PTR [rbx+0x8]
   39dd8:	jmp    39d26 <__sprintf_chk@plt+0x2f376>
   39ddd:	nop    DWORD PTR [rax]
   39de0:	mov    rdi,r13
   39de3:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   39de8:	mov    r15,QWORD PTR [rbx+0x8]
   39dec:	mov    eax,DWORD PTR [rip+0x44f06]        # 7ecf8 <argp_err_exit_status@@Base+0x38>
   39df2:	mov    rcx,QWORD PTR [r15+0x20]
   39df6:	mov    rdx,QWORD PTR [r15+0x38]
   39dfa:	mov    DWORD PTR [rsp+0xc],eax
   39dfe:	sub    rdx,QWORD PTR [r15+0x30]
   39e02:	mov    QWORD PTR [r13+0x8],r14
   39e06:	cmp    rdx,rcx
   39e09:	jbe    39e8c <__sprintf_chk@plt+0x2f4dc>
   39e0f:	mov    rdi,r15
   39e12:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   39e17:	mov    r13,QWORD PTR [rbx+0x8]
   39e1b:	movsxd r14,DWORD PTR [rsp+0xc]
   39e20:	jmp    39d0e <__sprintf_chk@plt+0x2f35e>
   39e25:	nop    DWORD PTR [rax]
   39e28:	mov    esi,0x1
   39e2d:	mov    rdi,r14
   39e30:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39e35:	test   eax,eax
   39e37:	je     39c8b <__sprintf_chk@plt+0x2f2db>
   39e3d:	mov    rax,QWORD PTR [r14+0x38]
   39e41:	jmp    39d4c <__sprintf_chk@plt+0x2f39c>
   39e46:	cs nop WORD PTR [rax+rax*1+0x0]
   39e50:	mov    esi,0x1
   39e55:	mov    rdi,r13
   39e58:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39e5d:	test   eax,eax
   39e5f:	je     39cdb <__sprintf_chk@plt+0x2f32b>
   39e65:	mov    rax,QWORD PTR [r13+0x38]
   39e69:	jmp    39cd0 <__sprintf_chk@plt+0x2f320>
   39e6e:	xchg   ax,ax
   39e70:	mov    rsi,r14
   39e73:	mov    rdi,r13
   39e76:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39e7b:	test   eax,eax
   39e7d:	je     39dd4 <__sprintf_chk@plt+0x2f424>
   39e83:	mov    rdi,QWORD PTR [r13+0x38]
   39e87:	jmp    39dc5 <__sprintf_chk@plt+0x2f415>
   39e8c:	movsxd r14,DWORD PTR [rsp+0xc]
   39e91:	mov    r13,r15
   39e94:	jmp    39d0e <__sprintf_chk@plt+0x2f35e>
   39e99:	nop    DWORD PTR [rax+0x0]
   39ea0:	push   r15
   39ea2:	push   r14
   39ea4:	push   r13
   39ea6:	push   r12
   39ea8:	mov    r12d,edi
   39eab:	push   rbp
   39eac:	mov    rbp,rsi
   39eaf:	push   rbx
   39eb0:	sub    rsp,0x8
   39eb4:	mov    r13,QWORD PTR [rsi+0x8]
   39eb8:	mov    esi,DWORD PTR [rsi+0x18]
   39ebb:	test   esi,esi
   39ebd:	je     39f90 <__sprintf_chk@plt+0x2f5e0>
   39ec3:	mov    rax,QWORD PTR [rbp+0x10]
   39ec7:	mov    rdx,QWORD PTR [rbp+0x0]
   39ecb:	mov    ecx,DWORD PTR [rax+0x8]
   39ece:	mov    r15,QWORD PTR [rax]
   39ed1:	mov    r14,QWORD PTR [rdx+0x20]
   39ed5:	test   ecx,ecx
   39ed7:	je     39eeb <__sprintf_chk@plt+0x2f53b>
   39ed9:	test   r15,r15
   39edc:	je     39eeb <__sprintf_chk@plt+0x2f53b>
   39ede:	mov    eax,DWORD PTR [r15+0x18]
   39ee2:	cmp    DWORD PTR [rdx+0x18],eax
   39ee5:	jne    3a020 <__sprintf_chk@plt+0x2f670>
   39eeb:	mov    rbx,r13
   39eee:	test   r14,r14
   39ef1:	je     39f04 <__sprintf_chk@plt+0x2f554>
   39ef3:	mov    rdi,QWORD PTR [r14]
   39ef6:	test   rdi,rdi
   39ef9:	je     39f04 <__sprintf_chk@plt+0x2f554>
   39efb:	cmp    BYTE PTR [rdi],0x0
   39efe:	jne    39fe0 <__sprintf_chk@plt+0x2f630>
   39f04:	mov    rdx,QWORD PTR [rbx+0x20]
   39f08:	mov    rax,QWORD PTR [rbx+0x38]
   39f0c:	sub    rax,QWORD PTR [rbx+0x30]
   39f10:	mov    DWORD PTR [rbp+0x18],0x0
   39f17:	cmp    rax,rdx
   39f1a:	ja     39fd0 <__sprintf_chk@plt+0x2f620>
   39f20:	mov    rax,QWORD PTR [rbx+0x28]
   39f24:	xor    edx,edx
   39f26:	test   rax,rax
   39f29:	cmovns rdx,rax
   39f2d:	mov    eax,r12d
   39f30:	sub    eax,edx
   39f32:	lea    ebp,[rax-0x1]
   39f35:	test   eax,eax
   39f37:	jg     39f50 <__sprintf_chk@plt+0x2f5a0>
   39f39:	jmp    39f78 <__sprintf_chk@plt+0x2f5c8>
   39f3b:	nop    DWORD PTR [rax+rax*1+0x0]
   39f40:	lea    rdx,[rax+0x1]
   39f44:	mov    QWORD PTR [rbx+0x38],rdx
   39f48:	mov    BYTE PTR [rax],0x20
   39f4b:	sub    ebp,0x1
   39f4e:	jb     39f78 <__sprintf_chk@plt+0x2f5c8>
   39f50:	mov    rax,QWORD PTR [rbx+0x38]
   39f54:	cmp    rax,QWORD PTR [rbx+0x40]
   39f58:	jne    39f40 <__sprintf_chk@plt+0x2f590>
   39f5a:	mov    esi,0x1
   39f5f:	mov    rdi,rbx
   39f62:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   39f67:	test   eax,eax
   39f69:	je     39f4b <__sprintf_chk@plt+0x2f59b>
   39f6b:	mov    rax,QWORD PTR [rbx+0x38]
   39f6f:	jmp    39f40 <__sprintf_chk@plt+0x2f590>
   39f71:	nop    DWORD PTR [rax+0x0]
   39f78:	add    rsp,0x8
   39f7c:	pop    rbx
   39f7d:	pop    rbp
   39f7e:	pop    r12
   39f80:	pop    r13
   39f82:	pop    r14
   39f84:	pop    r15
   39f86:	ret    
   39f87:	nop    WORD PTR [rax+rax*1+0x0]
   39f90:	mov    rdx,QWORD PTR [r13+0x38]
   39f94:	mov    rax,QWORD PTR [r13+0x40]
   39f98:	lea    rcx,[rdx+0x2]
   39f9c:	cmp    rax,rcx
   39f9f:	jae    39fae <__sprintf_chk@plt+0x2f5fe>
   39fa1:	sub    rax,rdx
   39fa4:	cmp    rax,0x1
   39fa8:	jbe    3a087 <__sprintf_chk@plt+0x2f6d7>
   39fae:	mov    eax,0x202c
   39fb3:	mov    WORD PTR [rdx],ax
   39fb6:	add    QWORD PTR [r13+0x38],0x2
   39fbb:	mov    rbx,QWORD PTR [rbp+0x8]
   39fbf:	mov    rax,QWORD PTR [rbx+0x38]
   39fc3:	mov    rdx,QWORD PTR [rbx+0x20]
   39fc7:	sub    rax,QWORD PTR [rbx+0x30]
   39fcb:	jmp    39f17 <__sprintf_chk@plt+0x2f567>
   39fd0:	mov    rdi,rbx
   39fd3:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   39fd8:	jmp    39f20 <__sprintf_chk@plt+0x2f570>
   39fdd:	nop    DWORD PTR [rax]
   39fe0:	test   r15,r15
   39fe3:	je     3a053 <__sprintf_chk@plt+0x2f6a3>
   39fe5:	mov    rax,QWORD PTR [r15+0x20]
   39fe9:	cmp    rax,r14
   39fec:	je     39f04 <__sprintf_chk@plt+0x2f554>
   39ff2:	test   rax,rax
   39ff5:	je     3a053 <__sprintf_chk@plt+0x2f6a3>
   39ff7:	nop    WORD PTR [rax+rax*1+0x0]
   3a000:	mov    rax,QWORD PTR [rax+0x10]
   3a004:	test   rax,rax
   3a007:	je     3a04e <__sprintf_chk@plt+0x2f69e>
   3a009:	cmp    r14,rax
   3a00c:	jne    3a000 <__sprintf_chk@plt+0x2f650>
   3a00e:	mov    rax,QWORD PTR [r13+0x38]
   3a012:	mov    rdx,QWORD PTR [r13+0x20]
   3a016:	sub    rax,QWORD PTR [r13+0x30]
   3a01a:	jmp    39f10 <__sprintf_chk@plt+0x2f560>
   3a01f:	nop
   3a020:	mov    rax,QWORD PTR [r13+0x38]
   3a024:	cmp    rax,QWORD PTR [r13+0x40]
   3a028:	je     3a0bf <__sprintf_chk@plt+0x2f70f>
   3a02e:	lea    rdx,[rax+0x1]
   3a032:	mov    QWORD PTR [r13+0x38],rdx
   3a036:	mov    BYTE PTR [rax],0xa
   3a039:	mov    r13,QWORD PTR [rbp+0x8]
   3a03d:	mov    rbx,r13
   3a040:	test   r14,r14
   3a043:	jne    39ef3 <__sprintf_chk@plt+0x2f543>
   3a049:	jmp    39f04 <__sprintf_chk@plt+0x2f554>
   3a04e:	cmp    r14,rax
   3a051:	je     3a00e <__sprintf_chk@plt+0x2f65e>
   3a053:	mov    rsi,QWORD PTR [r14+0x18]
   3a057:	mov    rdx,rbp
   3a05a:	mov    r13,QWORD PTR [r13+0x18]
   3a05e:	call   39c30 <__sprintf_chk@plt+0x2f280>
   3a063:	mov    r14,QWORD PTR [rbp+0x8]
   3a067:	mov    rdx,QWORD PTR [r14+0x20]
   3a06b:	mov    rax,QWORD PTR [r14+0x38]
   3a06f:	mov    rbx,r14
   3a072:	sub    rax,QWORD PTR [r14+0x30]
   3a076:	cmp    rax,rdx
   3a079:	ja     3a0a5 <__sprintf_chk@plt+0x2f6f5>
   3a07b:	movsxd r13,r13d
   3a07e:	mov    QWORD PTR [r14+0x18],r13
   3a082:	jmp    39f10 <__sprintf_chk@plt+0x2f560>
   3a087:	mov    esi,0x2
   3a08c:	mov    rdi,r13
   3a08f:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3a094:	test   eax,eax
   3a096:	je     39fbb <__sprintf_chk@plt+0x2f60b>
   3a09c:	mov    rdx,QWORD PTR [r13+0x38]
   3a0a0:	jmp    39fae <__sprintf_chk@plt+0x2f5fe>
   3a0a5:	mov    rdi,r14
   3a0a8:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   3a0ad:	mov    rbx,QWORD PTR [rbp+0x8]
   3a0b1:	mov    rax,QWORD PTR [rbx+0x38]
   3a0b5:	mov    rdx,QWORD PTR [rbx+0x20]
   3a0b9:	sub    rax,QWORD PTR [rbx+0x30]
   3a0bd:	jmp    3a07b <__sprintf_chk@plt+0x2f6cb>
   3a0bf:	mov    esi,0x1
   3a0c4:	mov    rdi,r13
   3a0c7:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3a0cc:	test   eax,eax
   3a0ce:	je     3a039 <__sprintf_chk@plt+0x2f689>
   3a0d4:	mov    rax,QWORD PTR [r13+0x38]
   3a0d8:	jmp    3a02e <__sprintf_chk@plt+0x2f67e>
   3a0dd:	nop    DWORD PTR [rax]
   3a0e0:	push   r13
   3a0e2:	mov    r13,rsi
   3a0e5:	mov    rax,rdi
   3a0e8:	push   r12
   3a0ea:	push   rbp
   3a0eb:	mov    rsi,QWORD PTR [rdi+0x10]
   3a0ef:	test   rsi,rsi
   3a0f2:	je     3a148 <__sprintf_chk@plt+0x2f798>
   3a0f4:	mov    rdi,rcx
   3a0f7:	mov    rbp,r8
   3a0fa:	test   BYTE PTR [rax+0x18],0x1
   3a0fe:	jne    3a120 <__sprintf_chk@plt+0x2f770>
   3a100:	mov    edx,0x5
   3a105:	call   a040 <dcgettext@plt>
   3a10a:	mov    rsi,r13
   3a10d:	mov    rdi,rbp
   3a110:	pop    rbp
   3a111:	mov    rdx,rax
   3a114:	pop    r12
   3a116:	xor    eax,eax
   3a118:	pop    r13
   3a11a:	jmp    57a90 <_obstack_memory_used@@Base+0xae10>
   3a11f:	nop
   3a120:	mov    r12,rdx
   3a123:	mov    edx,0x5
   3a128:	call   a040 <dcgettext@plt>
   3a12d:	mov    rsi,r12
   3a130:	mov    rdi,rbp
   3a133:	pop    rbp
   3a134:	mov    rdx,rax
   3a137:	pop    r12
   3a139:	xor    eax,eax
   3a13b:	pop    r13
   3a13d:	jmp    57a90 <_obstack_memory_used@@Base+0xae10>
   3a142:	nop    WORD PTR [rax+rax*1+0x0]
   3a148:	pop    rbp
   3a149:	pop    r12
   3a14b:	pop    r13
   3a14d:	ret    
   3a14e:	xchg   ax,ax
   3a150:	endbr64 
   3a154:	push   r13
   3a156:	push   r12
   3a158:	mov    r12,rcx
   3a15b:	push   rbp
   3a15c:	push   rbx
   3a15d:	mov    rbx,rdi
   3a160:	mov    rdi,rdx
   3a163:	sub    rsp,0x8
   3a167:	mov    r8,QWORD PTR [rbx+0x10]
   3a16b:	test   r8,r8
   3a16e:	je     3a1d0 <__sprintf_chk@plt+0x2f820>
   3a170:	mov    ebp,DWORD PTR [rbx+0x18]
   3a173:	or     ebp,DWORD PTR [rsi+0x18]
   3a176:	test   bpl,0x10
   3a17a:	je     3a190 <__sprintf_chk@plt+0x2f7e0>
   3a17c:	add    rsp,0x8
   3a180:	xor    eax,eax
   3a182:	pop    rbx
   3a183:	pop    rbp
   3a184:	pop    r12
   3a186:	pop    r13
   3a188:	ret    
   3a189:	nop    DWORD PTR [rax+0x0]
   3a190:	mov    edx,0x5
   3a195:	mov    rsi,r8
   3a198:	call   a040 <dcgettext@plt>
   3a19d:	and    ebp,0x1
   3a1a0:	mov    r13,rax
   3a1a3:	je     3a1f0 <__sprintf_chk@plt+0x2f840>
   3a1a5:	mov    edx,DWORD PTR [rbx+0x8]
   3a1a8:	mov    rcx,rax
   3a1ab:	mov    rdi,r12
   3a1ae:	lea    rsi,[rip+0x319d5]        # 6bb8a <_obstack_memory_used@@Base+0x1ef0a>
   3a1b5:	xor    eax,eax
   3a1b7:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   3a1bc:	add    rsp,0x8
   3a1c0:	xor    eax,eax
   3a1c2:	pop    rbx
   3a1c3:	pop    rbp
   3a1c4:	pop    r12
   3a1c6:	pop    r13
   3a1c8:	ret    
   3a1c9:	nop    DWORD PTR [rax+0x0]
   3a1d0:	mov    r8,QWORD PTR [rsi+0x10]
   3a1d4:	test   r8,r8
   3a1d7:	jne    3a170 <__sprintf_chk@plt+0x2f7c0>
   3a1d9:	add    rsp,0x8
   3a1dd:	xor    eax,eax
   3a1df:	pop    rbx
   3a1e0:	pop    rbp
   3a1e1:	pop    r12
   3a1e3:	pop    r13
   3a1e5:	ret    
   3a1e6:	cs nop WORD PTR [rax+rax*1+0x0]
   3a1f0:	mov    rdi,rax
   3a1f3:	call   a060 <strlen@plt>
   3a1f8:	mov    rdi,r12
   3a1fb:	lea    rsi,[rax+0x6]
   3a1ff:	call   39b70 <__sprintf_chk@plt+0x2f1c0>
   3a204:	mov    edx,DWORD PTR [rbx+0x8]
   3a207:	mov    rcx,r13
   3a20a:	mov    rdi,r12
   3a20d:	lea    rsi,[rip+0x31981]        # 6bb95 <_obstack_memory_used@@Base+0x1ef15>
   3a214:	xor    eax,eax
   3a216:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   3a21b:	add    rsp,0x8
   3a21f:	xor    eax,eax
   3a221:	pop    rbx
   3a222:	pop    rbp
   3a223:	pop    r12
   3a225:	pop    r13
   3a227:	ret    
   3a228:	nop    DWORD PTR [rax+rax*1+0x0]
   3a230:	push   rbp
   3a231:	mov    rbp,rsp
   3a234:	push   r15
   3a236:	push   r14
   3a238:	push   r13
   3a23a:	push   r12
   3a23c:	push   rbx
   3a23d:	sub    rsp,0x38
   3a241:	mov    r13d,DWORD PTR [rdi+0x8]
   3a245:	mov    rax,QWORD PTR fs:0x28
   3a24e:	mov    QWORD PTR [rbp-0x38],rax
   3a252:	xor    eax,eax
   3a254:	test   r13d,r13d
   3a257:	je     3a427 <__sprintf_chk@plt+0x2fa77>
   3a25d:	mov    r12,rdi
   3a260:	mov    rdi,QWORD PTR [rdi+0x10]
   3a264:	mov    rbx,rsi
   3a267:	call   a060 <strlen@plt>
   3a26c:	mov    rcx,rsp
   3a26f:	add    rax,0x18
   3a273:	mov    rdx,rax
   3a276:	and    rax,0xfffffffffffff000
   3a27c:	sub    rcx,rax
   3a27f:	and    rdx,0xfffffffffffffff0
   3a283:	cmp    rsp,rcx
   3a286:	je     3a29d <__sprintf_chk@plt+0x2f8ed>
   3a288:	sub    rsp,0x1000
   3a28f:	or     QWORD PTR [rsp+0xff8],0x0
   3a298:	cmp    rsp,rcx
   3a29b:	jne    3a288 <__sprintf_chk@plt+0x2f8d8>
   3a29d:	and    edx,0xfff
   3a2a3:	sub    rsp,rdx
   3a2a6:	test   rdx,rdx
   3a2a9:	je     3a2b1 <__sprintf_chk@plt+0x2f901>
   3a2ab:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   3a2b1:	lea    rax,[rsp+0xf]
   3a2b6:	mov    r15,QWORD PTR [r12]
   3a2ba:	lea    r14,[rbp-0x40]
   3a2be:	and    rax,0xfffffffffffffff0
   3a2c2:	mov    QWORD PTR [rbp-0x50],rax
   3a2c6:	mov    QWORD PTR [rbp-0x40],rax
   3a2ca:	lea    rax,[r13*8+0x0]
   3a2d2:	sub    rax,r13
   3a2d5:	lea    r13,[rip+0xffffffffffffdf74]        # 38250 <__sprintf_chk@plt+0x2d8a0>
   3a2dc:	lea    rax,[r15+rax*8]
   3a2e0:	mov    QWORD PTR [rbp-0x48],rax
   3a2e4:	nop    DWORD PTR [rax+0x0]
   3a2e8:	mov    rax,QWORD PTR [r15+0x28]
   3a2ec:	mov    rdi,r15
   3a2ef:	mov    rcx,r14
   3a2f2:	mov    rsi,r13
   3a2f5:	add    r15,0x38
   3a2f9:	mov    rdx,QWORD PTR [rax+0x30]
   3a2fd:	call   38ad0 <__sprintf_chk@plt+0x2e120>
   3a302:	cmp    r15,QWORD PTR [rbp-0x48]
   3a306:	jne    3a2e8 <__sprintf_chk@plt+0x2f938>
   3a308:	mov    rax,QWORD PTR [rbp-0x40]
   3a30c:	cmp    rax,QWORD PTR [rbp-0x50]
   3a310:	ja     3a47b <__sprintf_chk@plt+0x2facb>
   3a316:	mov    eax,DWORD PTR [r12+0x8]
   3a31b:	mov    r13,QWORD PTR [r12]
   3a31f:	test   eax,eax
   3a321:	je     3a427 <__sprintf_chk@plt+0x2fa77>
   3a327:	lea    rdx,[rax*8+0x0]
   3a32f:	lea    r14,[rip+0xfffffffffffffe1a]        # 3a150 <__sprintf_chk@plt+0x2f7a0>
   3a336:	sub    rdx,rax
   3a339:	lea    r15,[r13+rdx*8+0x0]
   3a33e:	xchg   ax,ax
   3a340:	mov    rax,QWORD PTR [r13+0x28]
   3a344:	mov    rdi,r13
   3a347:	mov    rcx,rbx
   3a34a:	mov    rsi,r14
   3a34d:	add    r13,0x38
   3a351:	mov    rdx,QWORD PTR [rax+0x30]
   3a355:	call   38ad0 <__sprintf_chk@plt+0x2e120>
   3a35a:	cmp    r13,r15
   3a35d:	jne    3a340 <__sprintf_chk@plt+0x2f990>
   3a35f:	mov    eax,DWORD PTR [r12+0x8]
   3a364:	mov    r14,QWORD PTR [r12]
   3a368:	test   eax,eax
   3a36a:	je     3a427 <__sprintf_chk@plt+0x2fa77>
   3a370:	lea    rdx,[rax*8+0x0]
   3a378:	sub    rdx,rax
   3a37b:	lea    rax,[r14+rdx*8]
   3a37f:	mov    QWORD PTR [rbp-0x58],rax
   3a383:	nop    DWORD PTR [rax+rax*1+0x0]
   3a388:	mov    rax,QWORD PTR [r14+0x28]
   3a38c:	mov    r13,QWORD PTR [r14]
   3a38f:	mov    rax,QWORD PTR [rax+0x30]
   3a393:	mov    QWORD PTR [rbp-0x48],rax
   3a397:	mov    eax,DWORD PTR [r14+0x8]
   3a39b:	test   eax,eax
   3a39d:	je     3a419 <__sprintf_chk@plt+0x2fa69>
   3a39f:	lea    r10,[rax+rax*2]
   3a3a3:	mov    r15,r13
   3a3a6:	shl    r10,0x4
   3a3aa:	lea    r12,[r13+r10*1+0x0]
   3a3af:	nop
   3a3b0:	mov    rdx,QWORD PTR [r15]
   3a3b3:	test   rdx,rdx
   3a3b6:	je     3a410 <__sprintf_chk@plt+0x2fa60>
   3a3b8:	mov    eax,DWORD PTR [r15+0x18]
   3a3bc:	test   al,0x4
   3a3be:	cmove  r13,r15
   3a3c2:	test   al,0x2
   3a3c4:	jne    3a410 <__sprintf_chk@plt+0x2fa60>
   3a3c6:	mov    rsi,QWORD PTR [r15+0x10]
   3a3ca:	or     eax,DWORD PTR [r13+0x18]
   3a3ce:	mov    ecx,eax
   3a3d0:	mov    rdi,QWORD PTR [r13+0x10]
   3a3d4:	and    eax,0x10
   3a3d7:	test   rsi,rsi
   3a3da:	je     3a448 <__sprintf_chk@plt+0x2fa98>
   3a3dc:	test   eax,eax
   3a3de:	jne    3a410 <__sprintf_chk@plt+0x2fa60>
   3a3e0:	mov    rdi,QWORD PTR [rbp-0x48]
   3a3e4:	mov    edx,0x5
   3a3e9:	mov    DWORD PTR [rbp-0x50],ecx
   3a3ec:	call   a040 <dcgettext@plt>
   3a3f1:	mov    ecx,DWORD PTR [rbp-0x50]
   3a3f4:	mov    rdx,QWORD PTR [r15]
   3a3f7:	and    ecx,0x1
   3a3fa:	mov    rcx,rax
   3a3fd:	je     3a468 <__sprintf_chk@plt+0x2fab8>
   3a3ff:	lea    rsi,[rip+0x3179f]        # 6bba5 <_obstack_memory_used@@Base+0x1ef25>
   3a406:	mov    rdi,rbx
   3a409:	xor    eax,eax
   3a40b:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   3a410:	add    r15,0x30
   3a414:	cmp    r15,r12
   3a417:	jne    3a3b0 <__sprintf_chk@plt+0x2fa00>
   3a419:	add    r14,0x38
   3a41d:	cmp    r14,QWORD PTR [rbp-0x58]
   3a421:	jne    3a388 <__sprintf_chk@plt+0x2f9d8>
   3a427:	mov    rax,QWORD PTR [rbp-0x38]
   3a42b:	sub    rax,QWORD PTR fs:0x28
   3a434:	jne    3a4a8 <__sprintf_chk@plt+0x2faf8>
   3a436:	lea    rsp,[rbp-0x28]
   3a43a:	pop    rbx
   3a43b:	pop    r12
   3a43d:	pop    r13
   3a43f:	pop    r14
   3a441:	pop    r15
   3a443:	pop    rbp
   3a444:	ret    
   3a445:	nop    DWORD PTR [rax]
   3a448:	test   eax,eax
   3a44a:	jne    3a410 <__sprintf_chk@plt+0x2fa60>
   3a44c:	test   rdi,rdi
   3a44f:	jne    3a4a0 <__sprintf_chk@plt+0x2faf0>
   3a451:	lea    rsi,[rip+0x31765]        # 6bbbd <_obstack_memory_used@@Base+0x1ef3d>
   3a458:	mov    rdi,rbx
   3a45b:	xor    eax,eax
   3a45d:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   3a462:	jmp    3a410 <__sprintf_chk@plt+0x2fa60>
   3a464:	nop    DWORD PTR [rax+0x0]
   3a468:	lea    rsi,[rip+0x31743]        # 6bbb2 <_obstack_memory_used@@Base+0x1ef32>
   3a46f:	mov    rdi,rbx
   3a472:	xor    eax,eax
   3a474:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   3a479:	jmp    3a410 <__sprintf_chk@plt+0x2fa60>
   3a47b:	lea    rdx,[rax+0x1]
   3a47f:	lea    rsi,[rip+0x31718]        # 6bb9e <_obstack_memory_used@@Base+0x1ef1e>
   3a486:	mov    rdi,rbx
   3a489:	mov    QWORD PTR [rbp-0x40],rdx
   3a48d:	mov    rdx,QWORD PTR [rbp-0x50]
   3a491:	mov    BYTE PTR [rax],0x0
   3a494:	xor    eax,eax
   3a496:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   3a49b:	jmp    3a316 <__sprintf_chk@plt+0x2f966>
   3a4a0:	mov    rsi,rdi
   3a4a3:	jmp    3a3e0 <__sprintf_chk@plt+0x2fa30>
   3a4a8:	call   a0a0 <__stack_chk_fail@plt>
   3a4ad:	nop    DWORD PTR [rax]
   3a4b0:	push   r15
   3a4b2:	push   r14
   3a4b4:	mov    r14,rdi
   3a4b7:	push   r13
   3a4b9:	mov    r13,rdx
   3a4bc:	push   r12
   3a4be:	mov    r12d,ecx
   3a4c1:	push   rbp
   3a4c2:	mov    rbp,r8
   3a4c5:	push   rbx
   3a4c6:	sub    rsp,0x38
   3a4ca:	mov    rax,QWORD PTR [rdx]
   3a4cd:	mov    rbx,QWORD PTR [rdi+0x20]
   3a4d1:	mov    QWORD PTR [rsp+0x8],rsi
   3a4d6:	mov    rsi,QWORD PTR [rdi+0x10]
   3a4da:	mov    QWORD PTR [rsp+0x28],rax
   3a4df:	mov    QWORD PTR [rsp+0x10],rsi
   3a4e4:	test   rsi,rsi
   3a4e7:	je     3a4fc <__sprintf_chk@plt+0x2fb4c>
   3a4e9:	mov    rdi,QWORD PTR [rdi+0x30]
   3a4ed:	mov    edx,0x5
   3a4f2:	call   a040 <dcgettext@plt>
   3a4f7:	mov    QWORD PTR [rsp+0x10],rax
   3a4fc:	mov    rcx,QWORD PTR [rsp+0x8]
   3a501:	mov    rdi,QWORD PTR [rsp+0x10]
   3a506:	mov    rdx,r14
   3a509:	mov    esi,0x2000006
   3a50e:	call   381e0 <__sprintf_chk@plt+0x2d830>
   3a513:	mov    QWORD PTR [rsp+0x20],rax
   3a518:	test   rax,rax
   3a51b:	je     3a678 <__sprintf_chk@plt+0x2fcc8>
   3a521:	mov    esi,0xa
   3a526:	mov    rdi,rax
   3a529:	call   9f20 <strchrnul@plt>
   3a52e:	cmp    BYTE PTR [rax],0x0
   3a531:	mov    r15,rax
   3a534:	jne    3a620 <__sprintf_chk@plt+0x2fc70>
   3a53a:	mov    BYTE PTR [rsp+0x4],0x0
   3a53f:	mov    r14,QWORD PTR [rsp+0x20]
   3a544:	lea    rsi,[r15+0x1]
   3a548:	mov    rdi,rbp
   3a54b:	sub    rsi,r14
   3a54e:	call   39b70 <__sprintf_chk@plt+0x2f1c0>
   3a553:	mov    rdi,QWORD PTR [rbp+0x38]
   3a557:	mov    rdx,r15
   3a55a:	mov    rax,QWORD PTR [rbp+0x40]
   3a55e:	sub    rdx,r14
   3a561:	lea    rcx,[rdi+rdx*1]
   3a565:	cmp    rax,rcx
   3a568:	jae    3a576 <__sprintf_chk@plt+0x2fbc6>
   3a56a:	sub    rax,rdi
   3a56d:	cmp    rdx,rax
   3a570:	ja     3a6d8 <__sprintf_chk@plt+0x2fd28>
   3a576:	mov    rsi,r14
   3a579:	mov    QWORD PTR [rsp+0x18],rdx
   3a57e:	call   a420 <memcpy@plt>
   3a583:	mov    rdx,QWORD PTR [rsp+0x18]
   3a588:	add    QWORD PTR [rbp+0x38],rdx
   3a58c:	mov    rax,QWORD PTR [rsp+0x20]
   3a591:	cmp    QWORD PTR [rsp+0x10],rax
   3a596:	je     3a5a0 <__sprintf_chk@plt+0x2fbf0>
   3a598:	mov    rdi,rax
   3a59b:	call   9ce0 <free@plt>
   3a5a0:	test   rbx,rbx
   3a5a3:	jne    3a5d0 <__sprintf_chk@plt+0x2fc20>
   3a5a5:	jmp    3a5d8 <__sprintf_chk@plt+0x2fc28>
   3a5a7:	nop    WORD PTR [rax+rax*1+0x0]
   3a5b0:	mov    rsi,QWORD PTR [rsp+0x8]
   3a5b5:	mov    ecx,r12d
   3a5b8:	mov    r8,rbp
   3a5bb:	mov    rdx,r13
   3a5be:	xor    r12d,r12d
   3a5c1:	add    rbx,0x20
   3a5c5:	call   3a4b0 <__sprintf_chk@plt+0x2fb00>
   3a5ca:	test   eax,eax
   3a5cc:	sete   r12b
   3a5d0:	mov    rdi,QWORD PTR [rbx]
   3a5d3:	test   rdi,rdi
   3a5d6:	jne    3a5b0 <__sprintf_chk@plt+0x2fc00>
   3a5d8:	test   r12d,r12d
   3a5db:	je     3a691 <__sprintf_chk@plt+0x2fce1>
   3a5e1:	cmp    BYTE PTR [rsp+0x4],0x0
   3a5e6:	je     3a691 <__sprintf_chk@plt+0x2fce1>
   3a5ec:	mov    rax,QWORD PTR [rsp+0x28]
   3a5f1:	cmp    BYTE PTR [r15],0x0
   3a5f5:	movzx  edx,BYTE PTR [rax]
   3a5f8:	je     3a6b0 <__sprintf_chk@plt+0x2fd00>
   3a5fe:	add    edx,0x1
   3a601:	mov    BYTE PTR [rax],dl
   3a603:	mov    eax,0x1
   3a608:	add    rsp,0x38
   3a60c:	pop    rbx
   3a60d:	pop    rbp
   3a60e:	pop    r12
   3a610:	pop    r13
   3a612:	pop    r14
   3a614:	pop    r15
   3a616:	ret    
   3a617:	nop    WORD PTR [rax+rax*1+0x0]
   3a620:	mov    rax,QWORD PTR [rsp+0x28]
   3a625:	movsx  eax,BYTE PTR [rax]
   3a628:	mov    DWORD PTR [rsp+0x18],eax
   3a62c:	test   eax,eax
   3a62e:	jle    3a700 <__sprintf_chk@plt+0x2fd50>
   3a634:	xor    edx,edx
   3a636:	cs nop WORD PTR [rax+rax*1+0x0]
   3a640:	lea    r14,[r15+0x1]
   3a644:	mov    esi,0xa
   3a649:	mov    DWORD PTR [rsp+0x4],edx
   3a64d:	mov    rdi,r14
   3a650:	call   9f20 <strchrnul@plt>
   3a655:	mov    edx,DWORD PTR [rsp+0x4]
   3a659:	mov    r15,rax
   3a65c:	add    edx,0x1
   3a65f:	cmp    edx,DWORD PTR [rsp+0x18]
   3a663:	jne    3a640 <__sprintf_chk@plt+0x2fc90>
   3a665:	add    QWORD PTR [r13+0x0],0x1
   3a66a:	mov    BYTE PTR [rsp+0x4],0x1
   3a66f:	jmp    3a544 <__sprintf_chk@plt+0x2fb94>
   3a674:	nop    DWORD PTR [rax+0x0]
   3a678:	test   rbx,rbx
   3a67b:	je     3a691 <__sprintf_chk@plt+0x2fce1>
   3a67d:	mov    rdi,QWORD PTR [rbx]
   3a680:	mov    BYTE PTR [rsp+0x4],0x0
   3a685:	xor    r15d,r15d
   3a688:	test   rdi,rdi
   3a68b:	jne    3a5b0 <__sprintf_chk@plt+0x2fc00>
   3a691:	xor    eax,eax
   3a693:	test   r12d,r12d
   3a696:	sete   al
   3a699:	add    rsp,0x38
   3a69d:	pop    rbx
   3a69e:	pop    rbp
   3a69f:	pop    r12
   3a6a1:	pop    r13
   3a6a3:	pop    r14
   3a6a5:	pop    r15
   3a6a7:	ret    
   3a6a8:	nop    DWORD PTR [rax+rax*1+0x0]
   3a6b0:	xor    eax,eax
   3a6b2:	test   dl,dl
   3a6b4:	jle    3a608 <__sprintf_chk@plt+0x2fc58>
   3a6ba:	mov    rbx,QWORD PTR [rsp+0x28]
   3a6bf:	mov    BYTE PTR [rbx],0x0
   3a6c2:	add    rsp,0x38
   3a6c6:	pop    rbx
   3a6c7:	pop    rbp
   3a6c8:	pop    r12
   3a6ca:	pop    r13
   3a6cc:	pop    r14
   3a6ce:	pop    r15
   3a6d0:	ret    
   3a6d1:	nop    DWORD PTR [rax+0x0]
   3a6d8:	mov    rsi,rdx
   3a6db:	mov    rdi,rbp
   3a6de:	mov    QWORD PTR [rsp+0x18],rdx
   3a6e3:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3a6e8:	mov    rdx,QWORD PTR [rsp+0x18]
   3a6ed:	test   eax,eax
   3a6ef:	je     3a58c <__sprintf_chk@plt+0x2fbdc>
   3a6f5:	mov    rdi,QWORD PTR [rbp+0x38]
   3a6f9:	jmp    3a576 <__sprintf_chk@plt+0x2fbc6>
   3a6fe:	xchg   ax,ax
   3a700:	mov    r14,QWORD PTR [rsp+0x20]
   3a705:	jmp    3a665 <__sprintf_chk@plt+0x2fcb5>
   3a70a:	nop    WORD PTR [rax+rax*1+0x0]
   3a710:	push   r15
   3a712:	push   r14
   3a714:	mov    r14,rdi
   3a717:	push   r13
   3a719:	push   r12
   3a71b:	mov    r12,rsi
   3a71e:	push   rbp
   3a71f:	mov    rbp,r9
   3a722:	push   rbx
   3a723:	sub    rsp,0x28
   3a727:	mov    r15,QWORD PTR [rdi+0x18]
   3a72b:	mov    DWORD PTR [rsp+0x18],edx
   3a72f:	mov    DWORD PTR [rsp],ecx
   3a732:	mov    DWORD PTR [rsp+0x4],r8d
   3a737:	test   r15,r15
   3a73a:	je     3a7f0 <__sprintf_chk@plt+0x2fe40>
   3a740:	mov    rdi,QWORD PTR [rdi+0x30]
   3a744:	mov    rsi,r15
   3a747:	mov    edx,0x5
   3a74c:	call   a040 <dcgettext@plt>
   3a751:	mov    rbx,QWORD PTR [r14+0x20]
   3a755:	mov    r15,rax
   3a758:	test   rax,rax
   3a75b:	je     3aae0 <__sprintf_chk@plt+0x30130>
   3a761:	mov    esi,0xb
   3a766:	mov    rdi,rax
   3a769:	call   a0f0 <strchr@plt>
   3a76e:	mov    esi,DWORD PTR [rsp+0x18]
   3a772:	mov    QWORD PTR [rsp+0x8],rax
   3a777:	test   esi,esi
   3a779:	jne    3aaa0 <__sprintf_chk@plt+0x300f0>
   3a77f:	cmp    QWORD PTR [rsp+0x8],0x0
   3a785:	mov    rcx,QWORD PTR [r14+0x28]
   3a789:	je     3aab6 <__sprintf_chk@plt+0x30106>
   3a78f:	mov    r13,QWORD PTR [rsp+0x8]
   3a794:	sub    r13,r15
   3a797:	setne  dl
   3a79a:	test   rcx,rcx
   3a79d:	je     3aac4 <__sprintf_chk@plt+0x30114>
   3a7a3:	test   r13,r13
   3a7a6:	je     3acff <__sprintf_chk@plt+0x3034f>
   3a7ac:	mov    rdi,r15
   3a7af:	mov    rsi,r13
   3a7b2:	mov    QWORD PTR [rsp+0x8],rcx
   3a7b7:	call   a2b0 <strndup@plt>
   3a7bc:	mov    BYTE PTR [rsp+0x10],0x1
   3a7c1:	mov    rcx,QWORD PTR [rsp+0x8]
   3a7c6:	test   rax,rax
   3a7c9:	mov    r15,rax
   3a7cc:	setne  BYTE PTR [rsp+0x1e]
   3a7d1:	test   r12,r12
   3a7d4:	jne    3a813 <__sprintf_chk@plt+0x2fe63>
   3a7d6:	cs nop WORD PTR [rax+rax*1+0x0]
   3a7e0:	mov    QWORD PTR [rsp+0x8],0x0
   3a7e9:	jmp    3a848 <__sprintf_chk@plt+0x2fe98>
   3a7eb:	nop    DWORD PTR [rax+rax*1+0x0]
   3a7f0:	mov    rcx,QWORD PTR [rdi+0x28]
   3a7f4:	mov    rbx,QWORD PTR [rdi+0x20]
   3a7f8:	test   rcx,rcx
   3a7fb:	je     3aaed <__sprintf_chk@plt+0x3013d>
   3a801:	mov    BYTE PTR [rsp+0x1e],0x0
   3a806:	xor    r13d,r13d
   3a809:	mov    BYTE PTR [rsp+0x10],0x0
   3a80e:	test   r12,r12
   3a811:	je     3a7e0 <__sprintf_chk@plt+0x2fe30>
   3a813:	mov    rdx,QWORD PTR [r12+0x58]
   3a818:	mov    rax,QWORD PTR [rdx+0x50]
   3a81c:	mov    rdx,QWORD PTR [rdx+0x58]
   3a820:	cmp    rdx,rax
   3a823:	ja     3a839 <__sprintf_chk@plt+0x2fe89>
   3a825:	jmp    3a7e0 <__sprintf_chk@plt+0x2fe30>
   3a827:	nop    WORD PTR [rax+rax*1+0x0]
   3a830:	add    rax,0x48
   3a834:	cmp    rdx,rax
   3a837:	jbe    3a7e0 <__sprintf_chk@plt+0x2fe30>
   3a839:	cmp    r14,QWORD PTR [rax+0x8]
   3a83d:	jne    3a830 <__sprintf_chk@plt+0x2fe80>
   3a83f:	mov    rax,QWORD PTR [rax+0x30]
   3a843:	mov    QWORD PTR [rsp+0x8],rax
   3a848:	mov    eax,DWORD PTR [rsp+0x18]
   3a84c:	mov    rdx,QWORD PTR [rsp+0x8]
   3a851:	mov    rsi,r15
   3a854:	lea    edi,[rax+0x2000001]
   3a85a:	call   rcx
   3a85c:	mov    r10,rax
   3a85f:	test   rax,rax
   3a862:	je     3abf0 <__sprintf_chk@plt+0x30240>
   3a868:	cmp    r15,rax
   3a86b:	sete   dl
   3a86e:	and    dl,BYTE PTR [rsp+0x10]
   3a872:	mov    ecx,DWORD PTR [rsp]
   3a875:	test   ecx,ecx
   3a877:	jne    3aa80 <__sprintf_chk@plt+0x300d0>
   3a87d:	test   dl,dl
   3a87f:	je     3aa10 <__sprintf_chk@plt+0x30060>
   3a885:	mov    rdi,QWORD PTR [rbp+0x38]
   3a889:	mov    rax,QWORD PTR [rbp+0x40]
   3a88d:	lea    rdx,[rdi+r13*1]
   3a891:	cmp    rax,rdx
   3a894:	jae    3a8a2 <__sprintf_chk@plt+0x2fef2>
   3a896:	sub    rax,rdi
   3a899:	cmp    rax,r13
   3a89c:	jb     3ab90 <__sprintf_chk@plt+0x301e0>
   3a8a2:	mov    QWORD PTR [rsp+0x10],r10
   3a8a7:	mov    rdx,r13
   3a8aa:	mov    rsi,r15
   3a8ad:	call   a420 <memcpy@plt>
   3a8b2:	mov    rax,QWORD PTR [rbp+0x38]
   3a8b6:	mov    r10,QWORD PTR [rsp+0x10]
   3a8bb:	add    rax,r13
   3a8be:	mov    QWORD PTR [rbp+0x38],rax
   3a8c2:	sub    rax,QWORD PTR [rbp+0x30]
   3a8c6:	cmp    rax,QWORD PTR [rbp+0x20]
   3a8ca:	ja     3aa40 <__sprintf_chk@plt+0x30090>
   3a8d0:	mov    rax,QWORD PTR [rbp+0x28]
   3a8d4:	xor    edx,edx
   3a8d6:	test   rax,rax
   3a8d9:	cmovs  rax,rdx
   3a8dd:	cmp    QWORD PTR [rbp+0x8],rax
   3a8e1:	jb     3aa60 <__sprintf_chk@plt+0x300b0>
   3a8e7:	mov    r13d,0x1
   3a8ed:	cmp    r15,r10
   3a8f0:	je     3a8fa <__sprintf_chk@plt+0x2ff4a>
   3a8f2:	mov    rdi,r10
   3a8f5:	call   9ce0 <free@plt>
   3a8fa:	cmp    BYTE PTR [rsp+0x1e],0x0
   3a8ff:	je     3a914 <__sprintf_chk@plt+0x2ff64>
   3a901:	cmp    QWORD PTR [r14+0x28],0x0
   3a906:	je     3a990 <__sprintf_chk@plt+0x2ffe0>
   3a90c:	mov    rdi,r15
   3a90f:	call   9ce0 <free@plt>
   3a914:	mov    eax,DWORD PTR [rsp+0x18]
   3a918:	test   eax,eax
   3a91a:	je     3a990 <__sprintf_chk@plt+0x2ffe0>
   3a91c:	mov    rcx,QWORD PTR [r14+0x28]
   3a920:	test   rcx,rcx
   3a923:	je     3a990 <__sprintf_chk@plt+0x2ffe0>
   3a925:	mov    rdx,QWORD PTR [rsp+0x8]
   3a92a:	xor    esi,esi
   3a92c:	mov    edi,0x2000004
   3a931:	call   rcx
   3a933:	mov    r15,rax
   3a936:	test   rax,rax
   3a939:	je     3a990 <__sprintf_chk@plt+0x2ffe0>
   3a93b:	or     r13d,DWORD PTR [rsp]
   3a93f:	jne    3ab70 <__sprintf_chk@plt+0x301c0>
   3a945:	mov    rdi,r15
   3a948:	call   a060 <strlen@plt>
   3a94d:	mov    r13,rax
   3a950:	test   rax,rax
   3a953:	jne    3ab38 <__sprintf_chk@plt+0x30188>
   3a959:	mov    rdi,r15
   3a95c:	call   9ce0 <free@plt>
   3a961:	mov    rax,QWORD PTR [rbp+0x38]
   3a965:	sub    rax,QWORD PTR [rbp+0x30]
   3a969:	cmp    rax,QWORD PTR [rbp+0x20]
   3a96d:	ja     3ab28 <__sprintf_chk@plt+0x30178>
   3a973:	mov    rax,QWORD PTR [rbp+0x28]
   3a977:	xor    edx,edx
   3a979:	mov    r13d,0x1
   3a97f:	test   rax,rax
   3a982:	cmovs  rax,rdx
   3a986:	cmp    QWORD PTR [rbp+0x8],rax
   3a98a:	jb     3ab00 <__sprintf_chk@plt+0x30150>
   3a990:	test   rbx,rbx
   3a993:	je     3a9f7 <__sprintf_chk@plt+0x30047>
   3a995:	mov    rdi,QWORD PTR [rbx]
   3a998:	test   rdi,rdi
   3a99b:	je     3a9f7 <__sprintf_chk@plt+0x30047>
   3a99d:	mov    edx,DWORD PTR [rsp+0x4]
   3a9a1:	mov    eax,r13d
   3a9a4:	xor    eax,0x1
   3a9a7:	xor    edx,0x1
   3a9aa:	mov    r15d,edx
   3a9ad:	or     eax,edx
   3a9af:	and    r15d,0x1
   3a9b3:	test   al,0x1
   3a9b5:	je     3ac00 <__sprintf_chk@plt+0x30250>
   3a9bb:	mov    r14d,DWORD PTR [rsp+0x18]
   3a9c0:	mov    eax,DWORD PTR [rsp]
   3a9c3:	add    rbx,0x20
   3a9c7:	xor    ecx,ecx
   3a9c9:	mov    r8d,DWORD PTR [rsp+0x4]
   3a9ce:	mov    r9,rbp
   3a9d1:	mov    edx,r14d
   3a9d4:	mov    rsi,r12
   3a9d7:	or     eax,r13d
   3a9da:	setne  cl
   3a9dd:	call   3a710 <__sprintf_chk@plt+0x2fd60>
   3a9e2:	mov    rdi,QWORD PTR [rbx]
   3a9e5:	or     r13d,eax
   3a9e8:	test   rdi,rdi
   3a9eb:	je     3a9f7 <__sprintf_chk@plt+0x30047>
   3a9ed:	test   r13d,r13d
   3a9f0:	je     3a9c0 <__sprintf_chk@plt+0x30010>
   3a9f2:	test   r15b,r15b
   3a9f5:	jne    3a9c0 <__sprintf_chk@plt+0x30010>
   3a9f7:	add    rsp,0x28
   3a9fb:	mov    eax,r13d
   3a9fe:	pop    rbx
   3a9ff:	pop    rbp
   3aa00:	pop    r12
   3aa02:	pop    r13
   3aa04:	pop    r14
   3aa06:	pop    r15
   3aa08:	ret    
   3aa09:	nop    DWORD PTR [rax+0x0]
   3aa10:	mov    rdi,r10
   3aa13:	mov    QWORD PTR [rsp+0x10],r10
   3aa18:	call   a060 <strlen@plt>
   3aa1d:	mov    r10,QWORD PTR [rsp+0x10]
   3aa22:	test   rax,rax
   3aa25:	mov    r13,rax
   3aa28:	jne    3abc0 <__sprintf_chk@plt+0x30210>
   3aa2e:	mov    rax,QWORD PTR [rbp+0x38]
   3aa32:	sub    rax,QWORD PTR [rbp+0x30]
   3aa36:	cmp    rax,QWORD PTR [rbp+0x20]
   3aa3a:	jbe    3a8d0 <__sprintf_chk@plt+0x2ff20>
   3aa40:	mov    rdi,rbp
   3aa43:	mov    QWORD PTR [rsp+0x10],r10
   3aa48:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   3aa4d:	mov    r10,QWORD PTR [rsp+0x10]
   3aa52:	jmp    3a8d0 <__sprintf_chk@plt+0x2ff20>
   3aa57:	nop    WORD PTR [rax+rax*1+0x0]
   3aa60:	mov    rax,QWORD PTR [rbp+0x38]
   3aa64:	cmp    rax,QWORD PTR [rbp+0x40]
   3aa68:	je     3ac28 <__sprintf_chk@plt+0x30278>
   3aa6e:	lea    rdx,[rax+0x1]
   3aa72:	mov    QWORD PTR [rbp+0x38],rdx
   3aa76:	mov    BYTE PTR [rax],0xa
   3aa79:	jmp    3a8e7 <__sprintf_chk@plt+0x2ff37>
   3aa7e:	xchg   ax,ax
   3aa80:	mov    rax,QWORD PTR [rbp+0x38]
   3aa84:	cmp    rax,QWORD PTR [rbp+0x40]
   3aa88:	je     3ac50 <__sprintf_chk@plt+0x302a0>
   3aa8e:	lea    rsi,[rax+0x1]
   3aa92:	mov    QWORD PTR [rbp+0x38],rsi
   3aa96:	mov    BYTE PTR [rax],0xa
   3aa99:	jmp    3a87d <__sprintf_chk@plt+0x2fecd>
   3aa9e:	xchg   ax,ax
   3aaa0:	test   rax,rax
   3aaa3:	je     3ac10 <__sprintf_chk@plt+0x30260>
   3aaa9:	mov    r15,QWORD PTR [rsp+0x8]
   3aaae:	mov    rcx,QWORD PTR [r14+0x28]
   3aab2:	add    r15,0x1
   3aab6:	xor    edx,edx
   3aab8:	xor    r13d,r13d
   3aabb:	test   rcx,rcx
   3aabe:	jne    3a801 <__sprintf_chk@plt+0x2fe51>
   3aac4:	mov    BYTE PTR [rsp+0x1e],dl
   3aac8:	mov    r10,r15
   3aacb:	mov    QWORD PTR [rsp+0x8],0x0
   3aad4:	jmp    3a872 <__sprintf_chk@plt+0x2fec2>
   3aad9:	nop    DWORD PTR [rax+0x0]
   3aae0:	mov    rcx,QWORD PTR [r14+0x28]
   3aae4:	test   rcx,rcx
   3aae7:	jne    3a801 <__sprintf_chk@plt+0x2fe51>
   3aaed:	mov    QWORD PTR [rsp+0x8],0x0
   3aaf6:	xor    r13d,r13d
   3aaf9:	jmp    3a914 <__sprintf_chk@plt+0x2ff64>
   3aafe:	xchg   ax,ax
   3ab00:	mov    rax,QWORD PTR [rbp+0x38]
   3ab04:	cmp    rax,QWORD PTR [rbp+0x40]
   3ab08:	je     3ace1 <__sprintf_chk@plt+0x30331>
   3ab0e:	lea    rdx,[rax+0x1]
   3ab12:	mov    r13d,0x1
   3ab18:	mov    QWORD PTR [rbp+0x38],rdx
   3ab1c:	mov    BYTE PTR [rax],0xa
   3ab1f:	jmp    3a990 <__sprintf_chk@plt+0x2ffe0>
   3ab24:	nop    DWORD PTR [rax+0x0]
   3ab28:	mov    rdi,rbp
   3ab2b:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   3ab30:	jmp    3a973 <__sprintf_chk@plt+0x2ffc3>
   3ab35:	nop    DWORD PTR [rax]
   3ab38:	mov    rdi,QWORD PTR [rbp+0x38]
   3ab3c:	mov    rax,QWORD PTR [rbp+0x40]
   3ab40:	lea    rcx,[rdi+r13*1]
   3ab44:	cmp    rax,rcx
   3ab47:	jae    3ab55 <__sprintf_chk@plt+0x301a5>
   3ab49:	sub    rax,rdi
   3ab4c:	cmp    r13,rax
   3ab4f:	ja     3ac81 <__sprintf_chk@plt+0x302d1>
   3ab55:	mov    rdx,r13
   3ab58:	mov    rsi,r15
   3ab5b:	call   a420 <memcpy@plt>
   3ab60:	add    QWORD PTR [rbp+0x38],r13
   3ab64:	jmp    3a959 <__sprintf_chk@plt+0x2ffa9>
   3ab69:	nop    DWORD PTR [rax+0x0]
   3ab70:	mov    rax,QWORD PTR [rbp+0x38]
   3ab74:	cmp    rax,QWORD PTR [rbp+0x40]
   3ab78:	je     3acc3 <__sprintf_chk@plt+0x30313>
   3ab7e:	lea    rdx,[rax+0x1]
   3ab82:	mov    QWORD PTR [rbp+0x38],rdx
   3ab86:	mov    BYTE PTR [rax],0xa
   3ab89:	jmp    3a945 <__sprintf_chk@plt+0x2ff95>
   3ab8e:	xchg   ax,ax
   3ab90:	mov    rsi,r13
   3ab93:	mov    rdi,rbp
   3ab96:	mov    QWORD PTR [rsp+0x10],r10
   3ab9b:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3aba0:	mov    r10,QWORD PTR [rsp+0x10]
   3aba5:	test   eax,eax
   3aba7:	je     3aa2e <__sprintf_chk@plt+0x3007e>
   3abad:	mov    rdi,QWORD PTR [rbp+0x38]
   3abb1:	jmp    3a8a2 <__sprintf_chk@plt+0x2fef2>
   3abb6:	cs nop WORD PTR [rax+rax*1+0x0]
   3abc0:	mov    rdi,QWORD PTR [rbp+0x38]
   3abc4:	mov    rax,QWORD PTR [rbp+0x40]
   3abc8:	lea    rsi,[rdi+r13*1]
   3abcc:	cmp    rax,rsi
   3abcf:	jae    3abdd <__sprintf_chk@plt+0x3022d>
   3abd1:	sub    rax,rdi
   3abd4:	cmp    r13,rax
   3abd7:	ja     3ac9d <__sprintf_chk@plt+0x302ed>
   3abdd:	mov    QWORD PTR [rsp+0x10],r10
   3abe2:	mov    rdx,r13
   3abe5:	mov    rsi,r10
   3abe8:	jmp    3a8ad <__sprintf_chk@plt+0x2fefd>
   3abed:	nop    DWORD PTR [rax]
   3abf0:	xor    r13d,r13d
   3abf3:	jmp    3a8fa <__sprintf_chk@plt+0x2ff4a>
   3abf8:	nop    DWORD PTR [rax+rax*1+0x0]
   3ac00:	mov    r13d,0x1
   3ac06:	jmp    3a9f7 <__sprintf_chk@plt+0x30047>
   3ac0b:	nop    DWORD PTR [rax+rax*1+0x0]
   3ac10:	mov    rcx,QWORD PTR [r14+0x28]
   3ac14:	xor    r13d,r13d
   3ac17:	test   rcx,rcx
   3ac1a:	je     3a990 <__sprintf_chk@plt+0x2ffe0>
   3ac20:	xor    r15d,r15d
   3ac23:	jmp    3a801 <__sprintf_chk@plt+0x2fe51>
   3ac28:	mov    esi,0x1
   3ac2d:	mov    rdi,rbp
   3ac30:	mov    QWORD PTR [rsp+0x10],r10
   3ac35:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3ac3a:	mov    r10,QWORD PTR [rsp+0x10]
   3ac3f:	test   eax,eax
   3ac41:	je     3a8e7 <__sprintf_chk@plt+0x2ff37>
   3ac47:	mov    rax,QWORD PTR [rbp+0x38]
   3ac4b:	jmp    3aa6e <__sprintf_chk@plt+0x300be>
   3ac50:	mov    esi,0x1
   3ac55:	mov    rdi,rbp
   3ac58:	mov    BYTE PTR [rsp+0x1f],dl
   3ac5c:	mov    QWORD PTR [rsp+0x10],r10
   3ac61:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3ac66:	mov    r10,QWORD PTR [rsp+0x10]
   3ac6b:	movzx  edx,BYTE PTR [rsp+0x1f]
   3ac70:	test   eax,eax
   3ac72:	je     3a87d <__sprintf_chk@plt+0x2fecd>
   3ac78:	mov    rax,QWORD PTR [rbp+0x38]
   3ac7c:	jmp    3aa8e <__sprintf_chk@plt+0x300de>
   3ac81:	mov    rsi,r13
   3ac84:	mov    rdi,rbp
   3ac87:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3ac8c:	test   eax,eax
   3ac8e:	je     3a959 <__sprintf_chk@plt+0x2ffa9>
   3ac94:	mov    rdi,QWORD PTR [rbp+0x38]
   3ac98:	jmp    3ab55 <__sprintf_chk@plt+0x301a5>
   3ac9d:	mov    rsi,r13
   3aca0:	mov    rdi,rbp
   3aca3:	mov    QWORD PTR [rsp+0x10],r10
   3aca8:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3acad:	mov    r10,QWORD PTR [rsp+0x10]
   3acb2:	test   eax,eax
   3acb4:	je     3aa2e <__sprintf_chk@plt+0x3007e>
   3acba:	mov    rdi,QWORD PTR [rbp+0x38]
   3acbe:	jmp    3abdd <__sprintf_chk@plt+0x3022d>
   3acc3:	mov    esi,0x1
   3acc8:	mov    rdi,rbp
   3accb:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3acd0:	test   eax,eax
   3acd2:	je     3a945 <__sprintf_chk@plt+0x2ff95>
   3acd8:	mov    rax,QWORD PTR [rbp+0x38]
   3acdc:	jmp    3ab7e <__sprintf_chk@plt+0x301ce>
   3ace1:	mov    esi,0x1
   3ace6:	mov    rdi,rbp
   3ace9:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   3acee:	test   eax,eax
   3acf0:	je     3a990 <__sprintf_chk@plt+0x2ffe0>
   3acf6:	mov    rax,QWORD PTR [rbp+0x38]
   3acfa:	jmp    3ab0e <__sprintf_chk@plt+0x3015e>
   3acff:	mov    BYTE PTR [rsp+0x1e],0x0
   3ad04:	mov    BYTE PTR [rsp+0x10],0x0
   3ad09:	jmp    3a80e <__sprintf_chk@plt+0x2fe5e>
   3ad0e:	xchg   ax,ax
   3ad10:	endbr64 
   3ad14:	push   r15
   3ad16:	push   r14
   3ad18:	push   r13
   3ad1a:	push   r12
   3ad1c:	mov    r12,rdi
   3ad1f:	push   rbp
   3ad20:	push   rbx
   3ad21:	xor    ebx,ebx
   3ad23:	sub    rsp,0x38
   3ad27:	mov    rbp,QWORD PTR [rip+0x44e9a]        # 7fbc8 <obstack_alloc_failed_handler@@Base+0xd90>
   3ad2e:	mov    rcx,QWORD PTR [rip+0x44e9b]        # 7fbd0 <obstack_alloc_failed_handler@@Base+0xd98>
   3ad35:	cmp    QWORD PTR [rbp+0x0],0x0
   3ad3a:	je     3ad4c <__sprintf_chk@plt+0x3039c>
   3ad3c:	nop    DWORD PTR [rax+0x0]
   3ad40:	add    rbx,0x1
   3ad44:	cmp    QWORD PTR [rbp+rbx*8+0x0],0x0
   3ad4a:	jne    3ad40 <__sprintf_chk@plt+0x30390>
   3ad4c:	test   rcx,rcx
   3ad4f:	je     3aeb0 <__sprintf_chk@plt+0x30500>
   3ad55:	lea    r9,[rip+0x283ad]        # 63109 <_obstack_memory_used@@Base+0x16489>
   3ad5c:	mov    esi,0x1
   3ad61:	mov    rdi,r12
   3ad64:	xor    eax,eax
   3ad66:	lea    r8,[rip+0x29684]        # 643f1 <_obstack_memory_used@@Base+0x17771>
   3ad6d:	lea    rdx,[rip+0x30e51]        # 6bbc5 <_obstack_memory_used@@Base+0x1ef45>
   3ad74:	call   a840 <__fprintf_chk@plt>
   3ad79:	xor    edi,edi
   3ad7b:	mov    edx,0x5
   3ad80:	lea    rsi,[rip+0x30e51]        # 6bbd8 <_obstack_memory_used@@Base+0x1ef58>
   3ad87:	call   a040 <dcgettext@plt>
   3ad8c:	mov    r8d,0x7e5
   3ad92:	mov    esi,0x1
   3ad97:	mov    rdi,r12
   3ad9a:	mov    rcx,rax
   3ad9d:	lea    rdx,[rip+0x3135c]        # 6c100 <_obstack_memory_used@@Base+0x1f480>
   3ada4:	xor    eax,eax
   3ada6:	call   a840 <__fprintf_chk@plt>
   3adab:	mov    rsi,r12
   3adae:	mov    edi,0xa
   3adb3:	call   a350 <fputc_unlocked@plt>
   3adb8:	xor    edi,edi
   3adba:	mov    edx,0x5
   3adbf:	lea    rsi,[rip+0x307ba]        # 6b580 <_obstack_memory_used@@Base+0x1e900>
   3adc6:	call   a040 <dcgettext@plt>
   3adcb:	mov    esi,0x1
   3add0:	mov    rdi,r12
   3add3:	lea    rcx,[rip+0x30856]        # 6b630 <_obstack_memory_used@@Base+0x1e9b0>
   3adda:	mov    rdx,rax
   3addd:	xor    eax,eax
   3addf:	call   a840 <__fprintf_chk@plt>
   3ade4:	mov    rsi,r12
   3ade7:	mov    edi,0xa
   3adec:	call   a350 <fputc_unlocked@plt>
   3adf1:	cmp    rbx,0x9
   3adf5:	ja     3b16d <__sprintf_chk@plt+0x307bd>
   3adfb:	lea    rdx,[rip+0x311fe]        # 6c000 <_obstack_memory_used@@Base+0x1f380>
   3ae02:	movsxd rax,DWORD PTR [rdx+rbx*4]
   3ae06:	add    rax,rdx
   3ae09:	notrack jmp rax
   3ae0c:	nop    DWORD PTR [rax+0x0]
   3ae10:	mov    r10,QWORD PTR [rbp+0x38]
   3ae14:	mov    r9,QWORD PTR [rbp+0x30]
   3ae18:	mov    edx,0x5
   3ae1d:	xor    edi,edi
   3ae1f:	mov    r8,QWORD PTR [rbp+0x28]
   3ae23:	mov    rcx,QWORD PTR [rbp+0x20]
   3ae27:	lea    rsi,[rip+0x308ca]        # 6b6f8 <_obstack_memory_used@@Base+0x1ea78>
   3ae2e:	mov    r15,QWORD PTR [rbp+0x18]
   3ae32:	mov    r14,QWORD PTR [rbp+0x10]
   3ae36:	mov    QWORD PTR [rsp+0x20],r10
   3ae3b:	mov    rbx,QWORD PTR [rbp+0x8]
   3ae3f:	mov    r13,QWORD PTR [rbp+0x0]
   3ae43:	mov    QWORD PTR [rsp+0x18],r9
   3ae48:	mov    QWORD PTR [rsp+0x10],r8
   3ae4d:	mov    QWORD PTR [rsp+0x8],rcx
   3ae52:	call   a040 <dcgettext@plt>
   3ae57:	sub    rsp,0x8
   3ae5b:	mov    rdx,rax
   3ae5e:	mov    r10,QWORD PTR [rsp+0x28]
   3ae63:	mov    esi,0x1
   3ae68:	mov    rdi,r12
   3ae6b:	xor    eax,eax
   3ae6d:	push   r10
   3ae6f:	mov    r9,QWORD PTR [rsp+0x28]
   3ae74:	push   r9
   3ae76:	mov    r8,QWORD PTR [rsp+0x28]
   3ae7b:	mov    r9,r14
   3ae7e:	push   r8
   3ae80:	mov    rcx,QWORD PTR [rsp+0x28]
   3ae85:	mov    r8,rbx
   3ae88:	push   rcx
   3ae89:	mov    rcx,r13
   3ae8c:	push   r15
   3ae8e:	call   a840 <__fprintf_chk@plt>
   3ae93:	add    rsp,0x30
   3ae97:	add    rsp,0x38
   3ae9b:	pop    rbx
   3ae9c:	pop    rbp
   3ae9d:	pop    r12
   3ae9f:	pop    r13
   3aea1:	pop    r14
   3aea3:	pop    r15
   3aea5:	ret    
   3aea6:	cs nop WORD PTR [rax+rax*1+0x0]
   3aeb0:	lea    r8,[rip+0x28252]        # 63109 <_obstack_memory_used@@Base+0x16489>
   3aeb7:	mov    esi,0x1
   3aebc:	mov    rdi,r12
   3aebf:	xor    eax,eax
   3aec1:	lea    rcx,[rip+0x29529]        # 643f1 <_obstack_memory_used@@Base+0x17771>
   3aec8:	lea    rdx,[rip+0x30d02]        # 6bbd1 <_obstack_memory_used@@Base+0x1ef51>
   3aecf:	call   a840 <__fprintf_chk@plt>
   3aed4:	jmp    3ad79 <__sprintf_chk@plt+0x303c9>
   3aed9:	nop    DWORD PTR [rax+0x0]
   3aee0:	mov    r11,QWORD PTR [rbp+0x40]
   3aee4:	mov    r10,QWORD PTR [rbp+0x38]
   3aee8:	mov    edx,0x5
   3aeed:	lea    rsi,[rip+0x30834]        # 6b728 <_obstack_memory_used@@Base+0x1eaa8>
   3aef4:	mov    r9,QWORD PTR [rbp+0x30]
   3aef8:	mov    r8,QWORD PTR [rbp+0x28]
   3aefc:	mov    rcx,QWORD PTR [rbp+0x20]
   3af00:	mov    r15,QWORD PTR [rbp+0x18]
   3af04:	mov    QWORD PTR [rsp+0x28],r11
   3af09:	mov    r14,QWORD PTR [rbp+0x10]
   3af0d:	mov    rbx,QWORD PTR [rbp+0x8]
   3af11:	mov    QWORD PTR [rsp+0x20],r10
   3af16:	mov    QWORD PTR [rsp+0x18],r9
   3af1b:	mov    r13,QWORD PTR [rbp+0x0]
   3af1f:	mov    QWORD PTR [rsp+0x10],r8
   3af24:	mov    QWORD PTR [rsp+0x8],rcx
   3af29:	xor    edi,edi
   3af2b:	call   a040 <dcgettext@plt>
   3af30:	mov    r11,QWORD PTR [rsp+0x28]
   3af35:	mov    rdx,rax
   3af38:	push   r11
   3af3a:	jmp    3ae5e <__sprintf_chk@plt+0x304ae>
   3af3f:	nop
   3af40:	mov    r13,QWORD PTR [rbp+0x0]
   3af44:	mov    edx,0x5
   3af49:	lea    rsi,[rip+0x30c8c]        # 6bbdc <_obstack_memory_used@@Base+0x1ef5c>
   3af50:	xor    edi,edi
   3af52:	call   a040 <dcgettext@plt>
   3af57:	add    rsp,0x38
   3af5b:	mov    rdi,r12
   3af5e:	mov    esi,0x1
   3af63:	pop    rbx
   3af64:	mov    rdx,rax
   3af67:	pop    rbp
   3af68:	mov    rcx,r13
   3af6b:	pop    r12
   3af6d:	xor    eax,eax
   3af6f:	pop    r13
   3af71:	pop    r14
   3af73:	pop    r15
   3af75:	jmp    a840 <__fprintf_chk@plt>
   3af7a:	nop    WORD PTR [rax+rax*1+0x0]
   3af80:	mov    rbx,QWORD PTR [rbp+0x8]
   3af84:	mov    r13,QWORD PTR [rbp+0x0]
   3af88:	mov    edx,0x5
   3af8d:	xor    edi,edi
   3af8f:	lea    rsi,[rip+0x30c56]        # 6bbec <_obstack_memory_used@@Base+0x1ef6c>
   3af96:	call   a040 <dcgettext@plt>
   3af9b:	add    rsp,0x38
   3af9f:	mov    r8,rbx
   3afa2:	mov    rcx,r13
   3afa5:	pop    rbx
   3afa6:	mov    rdx,rax
   3afa9:	pop    rbp
   3afaa:	mov    rdi,r12
   3afad:	mov    esi,0x1
   3afb2:	pop    r12
   3afb4:	xor    eax,eax
   3afb6:	pop    r13
   3afb8:	pop    r14
   3afba:	pop    r15
   3afbc:	jmp    a840 <__fprintf_chk@plt>
   3afc1:	nop    DWORD PTR [rax+0x0]
   3afc8:	mov    r14,QWORD PTR [rbp+0x10]
   3afcc:	mov    rbx,QWORD PTR [rbp+0x8]
   3afd0:	mov    edx,0x5
   3afd5:	xor    edi,edi
   3afd7:	mov    r13,QWORD PTR [rbp+0x0]
   3afdb:	lea    rsi,[rip+0x30c21]        # 6bc03 <_obstack_memory_used@@Base+0x1ef83>
   3afe2:	call   a040 <dcgettext@plt>
   3afe7:	add    rsp,0x38
   3afeb:	mov    r9,r14
   3afee:	mov    r8,rbx
   3aff1:	mov    rdx,rax
   3aff4:	pop    rbx
   3aff5:	mov    rcx,r13
   3aff8:	pop    rbp
   3aff9:	mov    rdi,r12
   3affc:	mov    esi,0x1
   3b001:	pop    r12
   3b003:	xor    eax,eax
   3b005:	pop    r13
   3b007:	pop    r14
   3b009:	pop    r15
   3b00b:	jmp    a840 <__fprintf_chk@plt>
   3b010:	mov    edx,0x5
   3b015:	xor    edi,edi
   3b017:	mov    r15,QWORD PTR [rbp+0x18]
   3b01b:	mov    r14,QWORD PTR [rbp+0x10]
   3b01f:	lea    rsi,[rip+0x30632]        # 6b658 <_obstack_memory_used@@Base+0x1e9d8>
   3b026:	mov    rbx,QWORD PTR [rbp+0x8]
   3b02a:	mov    r13,QWORD PTR [rbp+0x0]
   3b02e:	call   a040 <dcgettext@plt>
   3b033:	sub    rsp,0x8
   3b037:	mov    rdx,rax
   3b03a:	push   r15
   3b03c:	mov    r9,r14
   3b03f:	mov    r8,rbx
   3b042:	mov    rcx,r13
   3b045:	mov    rdi,r12
   3b048:	mov    esi,0x1
   3b04d:	xor    eax,eax
   3b04f:	call   a840 <__fprintf_chk@plt>
   3b054:	pop    rax
   3b055:	pop    rdx
   3b056:	add    rsp,0x38
   3b05a:	pop    rbx
   3b05b:	pop    rbp
   3b05c:	pop    r12
   3b05e:	pop    r13
   3b060:	pop    r14
   3b062:	pop    r15
   3b064:	ret    
   3b065:	nop    DWORD PTR [rax]
   3b068:	mov    rcx,QWORD PTR [rbp+0x20]
   3b06c:	mov    edx,0x5
   3b071:	xor    edi,edi
   3b073:	mov    r15,QWORD PTR [rbp+0x18]
   3b077:	lea    rsi,[rip+0x305fa]        # 6b678 <_obstack_memory_used@@Base+0x1e9f8>
   3b07e:	mov    r14,QWORD PTR [rbp+0x10]
   3b082:	mov    rbx,QWORD PTR [rbp+0x8]
   3b086:	mov    QWORD PTR [rsp+0x8],rcx
   3b08b:	mov    r13,QWORD PTR [rbp+0x0]
   3b08f:	call   a040 <dcgettext@plt>
   3b094:	mov    rcx,QWORD PTR [rsp+0x8]
   3b099:	mov    rdx,rax
   3b09c:	push   rcx
   3b09d:	jmp    3b03a <__sprintf_chk@plt+0x3068a>
   3b09f:	nop
   3b0a0:	mov    r8,QWORD PTR [rbp+0x28]
   3b0a4:	mov    rcx,QWORD PTR [rbp+0x20]
   3b0a8:	mov    edx,0x5
   3b0ad:	xor    edi,edi
   3b0af:	lea    rsi,[rip+0x305ea]        # 6b6a0 <_obstack_memory_used@@Base+0x1ea20>
   3b0b6:	mov    r15,QWORD PTR [rbp+0x18]
   3b0ba:	mov    r14,QWORD PTR [rbp+0x10]
   3b0be:	mov    rbx,QWORD PTR [rbp+0x8]
   3b0c2:	mov    r13,QWORD PTR [rbp+0x0]
   3b0c6:	mov    QWORD PTR [rsp+0x10],r8
   3b0cb:	mov    QWORD PTR [rsp+0x8],rcx
   3b0d0:	call   a040 <dcgettext@plt>
   3b0d5:	sub    rsp,0x8
   3b0d9:	mov    rdx,rax
   3b0dc:	mov    r8,QWORD PTR [rsp+0x18]
   3b0e1:	mov    r9,r14
   3b0e4:	mov    rdi,r12
   3b0e7:	mov    esi,0x1
   3b0ec:	xor    eax,eax
   3b0ee:	push   r8
   3b0f0:	mov    rcx,QWORD PTR [rsp+0x18]
   3b0f5:	mov    r8,rbx
   3b0f8:	push   rcx
   3b0f9:	mov    rcx,r13
   3b0fc:	push   r15
   3b0fe:	call   a840 <__fprintf_chk@plt>
   3b103:	add    rsp,0x20
   3b107:	add    rsp,0x38
   3b10b:	pop    rbx
   3b10c:	pop    rbp
   3b10d:	pop    r12
   3b10f:	pop    r13
   3b111:	pop    r14
   3b113:	pop    r15
   3b115:	ret    
   3b116:	cs nop WORD PTR [rax+rax*1+0x0]
   3b120:	mov    r9,QWORD PTR [rbp+0x30]
   3b124:	mov    r8,QWORD PTR [rbp+0x28]
   3b128:	mov    edx,0x5
   3b12d:	xor    edi,edi
   3b12f:	mov    rcx,QWORD PTR [rbp+0x20]
   3b133:	lea    rsi,[rip+0x3058e]        # 6b6c8 <_obstack_memory_used@@Base+0x1ea48>
   3b13a:	mov    r15,QWORD PTR [rbp+0x18]
   3b13e:	mov    r14,QWORD PTR [rbp+0x10]
   3b142:	mov    rbx,QWORD PTR [rbp+0x8]
   3b146:	mov    QWORD PTR [rsp+0x18],r9
   3b14b:	mov    QWORD PTR [rsp+0x10],r8
   3b150:	mov    r13,QWORD PTR [rbp+0x0]
   3b154:	mov    QWORD PTR [rsp+0x8],rcx
   3b159:	call   a040 <dcgettext@plt>
   3b15e:	mov    r9,QWORD PTR [rsp+0x18]
   3b163:	mov    rdx,rax
   3b166:	push   r9
   3b168:	jmp    3b0dc <__sprintf_chk@plt+0x3072c>
   3b16d:	mov    r11,QWORD PTR [rbp+0x40]
   3b171:	mov    r10,QWORD PTR [rbp+0x38]
   3b175:	mov    edx,0x5
   3b17a:	lea    rsi,[rip+0x305df]        # 6b760 <_obstack_memory_used@@Base+0x1eae0>
   3b181:	mov    r9,QWORD PTR [rbp+0x30]
   3b185:	mov    r8,QWORD PTR [rbp+0x28]
   3b189:	mov    rcx,QWORD PTR [rbp+0x20]
   3b18d:	mov    r15,QWORD PTR [rbp+0x18]
   3b191:	mov    QWORD PTR [rsp+0x28],r11
   3b196:	mov    r14,QWORD PTR [rbp+0x10]
   3b19a:	mov    rbx,QWORD PTR [rbp+0x8]
   3b19e:	mov    QWORD PTR [rsp+0x20],r10
   3b1a3:	mov    QWORD PTR [rsp+0x18],r9
   3b1a8:	mov    r13,QWORD PTR [rbp+0x0]
   3b1ac:	mov    QWORD PTR [rsp+0x10],r8
   3b1b1:	mov    QWORD PTR [rsp+0x8],rcx
   3b1b6:	jmp    3af29 <__sprintf_chk@plt+0x30579>
   3b1bb:	nop    DWORD PTR [rax+rax*1+0x0]
   3b1c0:	endbr64 
   3b1c4:	mov    ecx,0x37
   3b1c9:	xor    eax,eax
   3b1cb:	rep stos QWORD PTR es:[rdi],rax
   3b1ce:	ret    
   3b1cf:	nop
   3b1d0:	endbr64 
   3b1d4:	push   r12
   3b1d6:	push   rbx
   3b1d7:	mov    rbx,rdi
   3b1da:	sub    rsp,0x8
   3b1de:	mov    rax,QWORD PTR [rip+0x44323]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3b1e5:	test   rax,rax
   3b1e8:	je     3b1ec <__sprintf_chk@plt+0x3083c>
   3b1ea:	call   rax
   3b1ec:	mov    r12,QWORD PTR [rip+0x446d5]        # 7f8c8 <obstack_alloc_failed_handler@@Base+0xa90>
   3b1f3:	mov    edx,0x5
   3b1f8:	lea    rsi,[rip+0x305a1]        # 6b7a0 <_obstack_memory_used@@Base+0x1eb20>
   3b1ff:	xor    edi,edi
   3b201:	call   a040 <dcgettext@plt>
   3b206:	mov    r8,rbx
   3b209:	xor    esi,esi
   3b20b:	xor    edi,edi
   3b20d:	mov    rdx,rax
   3b210:	mov    rcx,r12
   3b213:	xor    eax,eax
   3b215:	call   a640 <error@plt>
   3b21a:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   3b21f:	nop
   3b220:	endbr64 
   3b224:	push   r13
   3b226:	push   r12
   3b228:	push   rbp
   3b229:	push   rbx
   3b22a:	mov    rbx,rdx
   3b22d:	sub    rsp,0x8
   3b231:	sub    rbx,rsi
   3b234:	jne    3b248 <__sprintf_chk@plt+0x30898>
   3b236:	add    rsp,0x8
   3b23a:	pop    rbx
   3b23b:	pop    rbp
   3b23c:	pop    r12
   3b23e:	pop    r13
   3b240:	ret    
   3b241:	nop    DWORD PTR [rax+0x0]
   3b248:	mov    r12,rdi
   3b24b:	mov    edi,0x20
   3b250:	mov    rbp,rsi
   3b253:	call   a4a0 <malloc@plt>
   3b258:	mov    r13,rax
   3b25b:	test   rax,rax
   3b25e:	je     3b2c7 <__sprintf_chk@plt+0x30917>
   3b260:	mov    QWORD PTR [rax],0x0
   3b267:	mov    rax,QWORD PTR [r12+0x60]
   3b26c:	test   rax,rax
   3b26f:	je     3b2c0 <__sprintf_chk@plt+0x30910>
   3b271:	mov    QWORD PTR [rax],r13
   3b274:	add    QWORD PTR [r12+0x68],0x1
   3b27a:	lea    rdi,[rbx+0x1]
   3b27e:	mov    QWORD PTR [r12+0x60],r13
   3b283:	mov    DWORD PTR [r13+0x8],0x0
   3b28b:	call   a4a0 <malloc@plt>
   3b290:	test   rax,rax
   3b293:	je     3b2c7 <__sprintf_chk@plt+0x30917>
   3b295:	mov    rdx,rbx
   3b298:	mov    rsi,rbp
   3b29b:	mov    rdi,rax
   3b29e:	mov    QWORD PTR [r13+0x10],rax
   3b2a2:	call   a420 <memcpy@plt>
   3b2a7:	mov    QWORD PTR [r13+0x18],rbx
   3b2ab:	mov    BYTE PTR [rax+rbx*1],0x0
   3b2af:	add    rsp,0x8
   3b2b3:	pop    rbx
   3b2b4:	pop    rbp
   3b2b5:	pop    r12
   3b2b7:	pop    r13
   3b2b9:	ret    
   3b2ba:	nop    WORD PTR [rax+rax*1+0x0]
   3b2c0:	mov    QWORD PTR [r12+0x58],r13
   3b2c5:	jmp    3b274 <__sprintf_chk@plt+0x308c4>
   3b2c7:	call   19130 <__sprintf_chk@plt+0xe780>
   3b2cc:	nop    DWORD PTR [rax+0x0]
   3b2d0:	endbr64 
   3b2d4:	push   r12
   3b2d6:	mov    r12d,esi
   3b2d9:	push   rbp
   3b2da:	mov    rbp,rdi
   3b2dd:	mov    edi,0x20
   3b2e2:	push   rbx
   3b2e3:	call   a4a0 <malloc@plt>
   3b2e8:	test   rax,rax
   3b2eb:	je     3b346 <__sprintf_chk@plt+0x30996>
   3b2ed:	mov    QWORD PTR [rax],0x0
   3b2f4:	mov    rbx,rax
   3b2f7:	mov    rax,QWORD PTR [rbp+0x60]
   3b2fb:	test   rax,rax
   3b2fe:	je     3b340 <__sprintf_chk@plt+0x30990>
   3b300:	mov    QWORD PTR [rax],rbx
   3b303:	add    QWORD PTR [rbp+0x68],0x1
   3b308:	mov    edi,0x2
   3b30d:	mov    QWORD PTR [rbp+0x60],rbx
   3b311:	mov    DWORD PTR [rbx+0x8],0x0
   3b318:	call   a4a0 <malloc@plt>
   3b31d:	test   rax,rax
   3b320:	je     3b346 <__sprintf_chk@plt+0x30996>
   3b322:	mov    QWORD PTR [rbx+0x10],rax
   3b326:	mov    BYTE PTR [rax],r12b
   3b329:	mov    BYTE PTR [rax+0x1],0x0
   3b32d:	mov    QWORD PTR [rbx+0x18],0x1
   3b335:	pop    rbx
   3b336:	pop    rbp
   3b337:	pop    r12
   3b339:	ret    
   3b33a:	nop    WORD PTR [rax+rax*1+0x0]
   3b340:	mov    QWORD PTR [rbp+0x58],rbx
   3b344:	jmp    3b303 <__sprintf_chk@plt+0x30953>
   3b346:	call   19130 <__sprintf_chk@plt+0xe780>
   3b34b:	nop    DWORD PTR [rax+rax*1+0x0]
   3b350:	endbr64 
   3b354:	sub    esi,0x48
   3b357:	cmp    esi,0x2b
   3b35a:	ja     3b370 <__sprintf_chk@plt+0x309c0>
   3b35c:	lea    rdx,[rip+0x30cc5]        # 6c028 <_obstack_memory_used@@Base+0x1f3a8>
   3b363:	movsxd rax,DWORD PTR [rdx+rsi*4]
   3b367:	add    rax,rdx
   3b36a:	notrack jmp rax
   3b36d:	nop    DWORD PTR [rax]
   3b370:	mov    eax,0x1
   3b375:	ret    
   3b376:	cs nop WORD PTR [rax+rax*1+0x0]
   3b380:	or     DWORD PTR [rdi],0x4
   3b383:	xor    eax,eax
   3b385:	ret    
   3b386:	cs nop WORD PTR [rax+rax*1+0x0]
   3b390:	and    DWORD PTR [rdi],0xfffffffd
   3b393:	xor    eax,eax
   3b395:	ret    
   3b396:	cs nop WORD PTR [rax+rax*1+0x0]
   3b3a0:	and    DWORD PTR [rdi],0xfffffffe
   3b3a3:	xor    eax,eax
   3b3a5:	ret    
   3b3a6:	cs nop WORD PTR [rax+rax*1+0x0]
   3b3b0:	and    DWORD PTR [rdi],0xfffffffb
   3b3b3:	xor    eax,eax
   3b3b5:	ret    
   3b3b6:	cs nop WORD PTR [rax+rax*1+0x0]
   3b3c0:	or     DWORD PTR [rdi],0x2
   3b3c3:	xor    eax,eax
   3b3c5:	ret    
   3b3c6:	cs nop WORD PTR [rax+rax*1+0x0]
   3b3d0:	or     DWORD PTR [rdi],0x1
   3b3d3:	xor    eax,eax
   3b3d5:	ret    
   3b3d6:	cs nop WORD PTR [rax+rax*1+0x0]
   3b3e0:	endbr64 
   3b3e4:	push   r13
   3b3e6:	mov    r13,rsi
   3b3e9:	push   r12
   3b3eb:	push   rbp
   3b3ec:	mov    ebp,edi
   3b3ee:	push   rbx
   3b3ef:	mov    rbx,rdx
   3b3f2:	sub    rsp,0x8
   3b3f6:	cmp    QWORD PTR [rip+0x44903],rdx        # 7fd00 <argp_program_bug_address@@Base+0x50>
   3b3fd:	mov    r12,QWORD PTR [rip+0x448f4]        # 7fcf8 <argp_program_bug_address@@Base+0x48>
   3b404:	jb     3b498 <__sprintf_chk@plt+0x30ae8>
   3b40a:	mov    rdx,rbx
   3b40d:	mov    rsi,r13
   3b410:	mov    rdi,r12
   3b413:	call   a420 <memcpy@plt>
   3b418:	cmp    ebp,0x3
   3b41b:	je     3b4c0 <__sprintf_chk@plt+0x30b10>
   3b421:	ja     3b458 <__sprintf_chk@plt+0x30aa8>
   3b423:	cmp    ebp,0x1
   3b426:	je     3b500 <__sprintf_chk@plt+0x30b50>
   3b42c:	cmp    ebp,0x2
   3b42f:	jne    3b445 <__sprintf_chk@plt+0x30a95>
   3b431:	call   a970 <__ctype_tolower_loc@plt>
   3b436:	movzx  edx,BYTE PTR [r12]
   3b43b:	mov    rax,QWORD PTR [rax]
   3b43e:	mov    eax,DWORD PTR [rax+rdx*4]
   3b441:	mov    BYTE PTR [r12],al
   3b445:	add    rsp,0x8
   3b449:	mov    rax,r12
   3b44c:	pop    rbx
   3b44d:	pop    rbp
   3b44e:	pop    r12
   3b450:	pop    r13
   3b452:	ret    
   3b453:	nop    DWORD PTR [rax+rax*1+0x0]
   3b458:	cmp    ebp,0x4
   3b45b:	jne    3b445 <__sprintf_chk@plt+0x30a95>
   3b45d:	add    rbx,r12
   3b460:	cmp    rbx,r12
   3b463:	jbe    3b445 <__sprintf_chk@plt+0x30a95>
   3b465:	call   a970 <__ctype_tolower_loc@plt>
   3b46a:	mov    rdx,r12
   3b46d:	nop    DWORD PTR [rax]
   3b470:	movzx  esi,BYTE PTR [rdx]
   3b473:	mov    rcx,QWORD PTR [rax]
   3b476:	add    rdx,0x1
   3b47a:	mov    ecx,DWORD PTR [rcx+rsi*4]
   3b47d:	mov    BYTE PTR [rdx-0x1],cl
   3b480:	cmp    rdx,rbx
   3b483:	jne    3b470 <__sprintf_chk@plt+0x30ac0>
   3b485:	add    rsp,0x8
   3b489:	mov    rax,r12
   3b48c:	pop    rbx
   3b48d:	pop    rbp
   3b48e:	pop    r12
   3b490:	pop    r13
   3b492:	ret    
   3b493:	nop    DWORD PTR [rax+rax*1+0x0]
   3b498:	mov    rsi,rdx
   3b49b:	mov    rdi,r12
   3b49e:	mov    QWORD PTR [rip+0x4485b],rdx        # 7fd00 <argp_program_bug_address@@Base+0x50>
   3b4a5:	call   a570 <realloc@plt>
   3b4aa:	test   rax,rax
   3b4ad:	je     3b522 <__sprintf_chk@plt+0x30b72>
   3b4af:	mov    QWORD PTR [rip+0x44842],rax        # 7fcf8 <argp_program_bug_address@@Base+0x48>
   3b4b6:	mov    r12,rax
   3b4b9:	jmp    3b40a <__sprintf_chk@plt+0x30a5a>
   3b4be:	xchg   ax,ax
   3b4c0:	add    rbx,r12
   3b4c3:	cmp    rbx,r12
   3b4c6:	jbe    3b445 <__sprintf_chk@plt+0x30a95>
   3b4cc:	call   9d10 <__ctype_toupper_loc@plt>
   3b4d1:	mov    rdx,r12
   3b4d4:	nop    DWORD PTR [rax+0x0]
   3b4d8:	movzx  esi,BYTE PTR [rdx]
   3b4db:	mov    rcx,QWORD PTR [rax]
   3b4de:	add    rdx,0x1
   3b4e2:	mov    ecx,DWORD PTR [rcx+rsi*4]
   3b4e5:	mov    BYTE PTR [rdx-0x1],cl
   3b4e8:	cmp    rbx,rdx
   3b4eb:	jne    3b4d8 <__sprintf_chk@plt+0x30b28>
   3b4ed:	add    rsp,0x8
   3b4f1:	mov    rax,r12
   3b4f4:	pop    rbx
   3b4f5:	pop    rbp
   3b4f6:	pop    r12
   3b4f8:	pop    r13
   3b4fa:	ret    
   3b4fb:	nop    DWORD PTR [rax+rax*1+0x0]
   3b500:	call   9d10 <__ctype_toupper_loc@plt>
   3b505:	movzx  edx,BYTE PTR [r12]
   3b50a:	mov    rax,QWORD PTR [rax]
   3b50d:	mov    eax,DWORD PTR [rax+rdx*4]
   3b510:	mov    BYTE PTR [r12],al
   3b514:	add    rsp,0x8
   3b518:	mov    rax,r12
   3b51b:	pop    rbx
   3b51c:	pop    rbp
   3b51d:	pop    r12
   3b51f:	pop    r13
   3b521:	ret    
   3b522:	test   rbx,rbx
   3b525:	jne    3b530 <__sprintf_chk@plt+0x30b80>
   3b527:	test   r12,r12
   3b52a:	jne    3b4af <__sprintf_chk@plt+0x30aff>
   3b530:	call   19130 <__sprintf_chk@plt+0xe780>
   3b535:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3b540:	endbr64 
   3b544:	push   r14
   3b546:	movzx  r14d,dil
   3b54a:	push   r13
   3b54c:	lea    r13,[rip+0x437ed]        # 7ed40 <argp_err_exit_status@@Base+0x80>
   3b553:	push   r12
   3b555:	push   rbp
   3b556:	mov    rbp,rsi
   3b559:	push   rbx
   3b55a:	mov    rbx,rdx
   3b55d:	sub    rsp,0x30
   3b561:	mov    r12,QWORD PTR [r13+r14*8+0x0]
   3b566:	mov    rax,QWORD PTR fs:0x28
   3b56f:	mov    QWORD PTR [rsp+0x28],rax
   3b574:	xor    eax,eax
   3b576:	cmp    r12,0xffffffffffffffff
   3b57a:	je     3b620 <__sprintf_chk@plt+0x30c70>
   3b580:	test   r12,r12
   3b583:	je     3b6c0 <__sprintf_chk@plt+0x30d10>
   3b589:	mov    rdi,rbp
   3b58c:	call   a060 <strlen@plt>
   3b591:	lea    rdi,[rax+0x1]
   3b595:	mov    QWORD PTR [rsp+0x10],rdi
   3b59a:	shl    rdi,0x4
   3b59e:	add    rdi,0x1
   3b5a2:	mov    QWORD PTR [rsp+0x8],rdi
   3b5a7:	call   a4a0 <malloc@plt>
   3b5ac:	mov    r13,rax
   3b5af:	test   rax,rax
   3b5b2:	je     3b716 <__sprintf_chk@plt+0x30d66>
   3b5b8:	lea    rcx,[rsp+0x18]
   3b5bd:	lea    rdx,[rsp+0x10]
   3b5c2:	mov    rdi,r12
   3b5c5:	mov    QWORD PTR [rsp+0x18],rax
   3b5ca:	lea    rsi,[rsp+0x20]
   3b5cf:	lea    r8,[rsp+0x8]
   3b5d4:	mov    QWORD PTR [rsp+0x20],rbp
   3b5d9:	call   9ed0 <iconv@plt>
   3b5de:	test   rax,rax
   3b5e1:	jne    3b6b0 <__sprintf_chk@plt+0x30d00>
   3b5e7:	mov    rax,QWORD PTR [rsp+0x18]
   3b5ec:	mov    BYTE PTR [rax],0x0
   3b5ef:	mov    eax,0x1
   3b5f4:	mov    QWORD PTR [rbx],r13
   3b5f7:	mov    rdx,QWORD PTR [rsp+0x28]
   3b5fc:	sub    rdx,QWORD PTR fs:0x28
   3b605:	jne    3b711 <__sprintf_chk@plt+0x30d61>
   3b60b:	add    rsp,0x30
   3b60f:	pop    rbx
   3b610:	pop    rbp
   3b611:	pop    r12
   3b613:	pop    r13
   3b615:	pop    r14
   3b617:	ret    
   3b618:	nop    DWORD PTR [rax+rax*1+0x0]
   3b620:	test   dil,dil
   3b623:	mov    edi,0xe
   3b628:	jne    3b678 <__sprintf_chk@plt+0x30cc8>
   3b62a:	call   a4e0 <nl_langinfo@plt>
   3b62f:	mov    rdi,rax
   3b632:	test   rax,rax
   3b635:	je     3b6f8 <__sprintf_chk@plt+0x30d48>
   3b63b:	cmp    BYTE PTR [rax],0x0
   3b63e:	lea    rax,[rip+0x305da]        # 6bc1f <_obstack_memory_used@@Base+0x1ef9f>
   3b645:	cmove  rdi,rax
   3b649:	lea    rsi,[rip+0x305d5]        # 6bc25 <_obstack_memory_used@@Base+0x1efa5>
   3b650:	call   a9a0 <iconv_open@plt>
   3b655:	mov    QWORD PTR [rip+0x436e4],rax        # 7ed40 <argp_err_exit_status@@Base+0x80>
   3b65c:	mov    r12,QWORD PTR [r13+r14*8+0x0]
   3b661:	test   r12,r12
   3b664:	je     3b6c0 <__sprintf_chk@plt+0x30d10>
   3b666:	cmp    r12,0xffffffffffffffff
   3b66a:	jne    3b589 <__sprintf_chk@plt+0x30bd9>
   3b670:	xor    eax,eax
   3b672:	jmp    3b5f7 <__sprintf_chk@plt+0x30c47>
   3b674:	nop    DWORD PTR [rax+0x0]
   3b678:	call   a4e0 <nl_langinfo@plt>
   3b67d:	mov    rsi,rax
   3b680:	test   rax,rax
   3b683:	je     3b708 <__sprintf_chk@plt+0x30d58>
   3b689:	cmp    BYTE PTR [rax],0x0
   3b68c:	lea    rax,[rip+0x3058c]        # 6bc1f <_obstack_memory_used@@Base+0x1ef9f>
   3b693:	cmove  rsi,rax
   3b697:	lea    rdi,[rip+0x30587]        # 6bc25 <_obstack_memory_used@@Base+0x1efa5>
   3b69e:	call   a9a0 <iconv_open@plt>
   3b6a3:	mov    QWORD PTR [rip+0x4369e],rax        # 7ed48 <argp_err_exit_status@@Base+0x88>
   3b6aa:	jmp    3b65c <__sprintf_chk@plt+0x30cac>
   3b6ac:	nop    DWORD PTR [rax+0x0]
   3b6b0:	mov    rdi,r13
   3b6b3:	call   9ce0 <free@plt>
   3b6b8:	xor    eax,eax
   3b6ba:	jmp    3b5f7 <__sprintf_chk@plt+0x30c47>
   3b6bf:	nop
   3b6c0:	mov    rdi,rbp
   3b6c3:	call   a060 <strlen@plt>
   3b6c8:	lea    r12,[rax+0x1]
   3b6cc:	mov    rdi,r12
   3b6cf:	call   a4a0 <malloc@plt>
   3b6d4:	mov    rdi,rax
   3b6d7:	test   rax,rax
   3b6da:	je     3b716 <__sprintf_chk@plt+0x30d66>
   3b6dc:	mov    rdx,r12
   3b6df:	mov    rsi,rbp
   3b6e2:	call   a420 <memcpy@plt>
   3b6e7:	mov    QWORD PTR [rbx],rax
   3b6ea:	mov    eax,0x1
   3b6ef:	jmp    3b5f7 <__sprintf_chk@plt+0x30c47>
   3b6f4:	nop    DWORD PTR [rax+0x0]
   3b6f8:	lea    rdi,[rip+0x30520]        # 6bc1f <_obstack_memory_used@@Base+0x1ef9f>
   3b6ff:	jmp    3b649 <__sprintf_chk@plt+0x30c99>
   3b704:	nop    DWORD PTR [rax+0x0]
   3b708:	lea    rsi,[rip+0x30510]        # 6bc1f <_obstack_memory_used@@Base+0x1ef9f>
   3b70f:	jmp    3b697 <__sprintf_chk@plt+0x30ce7>
   3b711:	call   a0a0 <__stack_chk_fail@plt>
   3b716:	call   19130 <__sprintf_chk@plt+0xe780>
   3b71b:	nop    DWORD PTR [rax+rax*1+0x0]
   3b720:	endbr64 
   3b724:	cmp    QWORD PTR [rip+0x444bc],0x0        # 7fbe8 <argp_program_version_hook@@Base+0x10>
   3b72c:	push   r12
   3b72e:	push   rbp
   3b72f:	mov    rbp,rdi
   3b732:	push   rbx
   3b733:	jne    3b760 <__sprintf_chk@plt+0x30db0>
   3b735:	test   sil,sil
   3b738:	jne    3b7a0 <__sprintf_chk@plt+0x30df0>
   3b73a:	mov    edx,0x5
   3b73f:	lea    rsi,[rip+0x304e5]        # 6bc2b <_obstack_memory_used@@Base+0x1efab>
   3b746:	call   9e50 <strncmp@plt>
   3b74b:	test   eax,eax
   3b74d:	je     3b7a0 <__sprintf_chk@plt+0x30df0>
   3b74f:	pop    rbx
   3b750:	mov    eax,0x1
   3b755:	pop    rbp
   3b756:	pop    r12
   3b758:	ret    
   3b759:	nop    DWORD PTR [rax+0x0]
   3b760:	cmp    QWORD PTR [rip+0x44488],0x0        # 7fbf0 <argp_program_version_hook@@Base+0x18>
   3b768:	je     3b74f <__sprintf_chk@plt+0x30d9f>
   3b76a:	xor    ebx,ebx
   3b76c:	lea    r12,[rip+0x4446d]        # 7fbe0 <argp_program_version_hook@@Base+0x8>
   3b773:	jmp    3b785 <__sprintf_chk@plt+0x30dd5>
   3b775:	nop    DWORD PTR [rax]
   3b778:	add    rbx,0x1
   3b77c:	cmp    QWORD PTR [rip+0x4446d],rbx        # 7fbf0 <argp_program_version_hook@@Base+0x18>
   3b783:	jbe    3b74f <__sprintf_chk@plt+0x30d9f>
   3b785:	mov    rax,QWORD PTR [r12]
   3b789:	xor    edx,edx
   3b78b:	mov    rsi,rbp
   3b78e:	mov    rdi,QWORD PTR [rax+rbx*8]
   3b792:	call   9cf0 <fnmatch@plt>
   3b797:	test   eax,eax
   3b799:	jne    3b778 <__sprintf_chk@plt+0x30dc8>
   3b79b:	nop    DWORD PTR [rax+rax*1+0x0]
   3b7a0:	cmp    QWORD PTR [rip+0x44458],0x0        # 7fc00 <argp_program_version_hook@@Base+0x28>
   3b7a8:	jne    3b7b8 <__sprintf_chk@plt+0x30e08>
   3b7aa:	xor    eax,eax
   3b7ac:	pop    rbx
   3b7ad:	pop    rbp
   3b7ae:	pop    r12
   3b7b0:	ret    
   3b7b1:	nop    DWORD PTR [rax+0x0]
   3b7b8:	cmp    QWORD PTR [rip+0x44448],0x0        # 7fc08 <argp_program_version_hook@@Base+0x30>
   3b7c0:	je     3b7aa <__sprintf_chk@plt+0x30dfa>
   3b7c2:	xor    ebx,ebx
   3b7c4:	nop    DWORD PTR [rax+0x0]
   3b7c8:	mov    rax,QWORD PTR [rip+0x44429]        # 7fbf8 <argp_program_version_hook@@Base+0x20>
   3b7cf:	xor    edx,edx
   3b7d1:	mov    rsi,rbp
   3b7d4:	mov    rdi,QWORD PTR [rax+rbx*8]
   3b7d8:	call   9cf0 <fnmatch@plt>
   3b7dd:	test   eax,eax
   3b7df:	je     3b74f <__sprintf_chk@plt+0x30d9f>
   3b7e5:	add    rbx,0x1
   3b7e9:	cmp    QWORD PTR [rip+0x44418],rbx        # 7fc08 <argp_program_version_hook@@Base+0x30>
   3b7f0:	ja     3b7c8 <__sprintf_chk@plt+0x30e18>
   3b7f2:	xor    eax,eax
   3b7f4:	jmp    3b7ac <__sprintf_chk@plt+0x30dfc>
   3b7f6:	cs nop WORD PTR [rax+rax*1+0x0]
   3b800:	endbr64 
   3b804:	push   r15
   3b806:	push   r14
   3b808:	push   r13
   3b80a:	push   r12
   3b80c:	push   rbp
   3b80d:	push   rbx
   3b80e:	sub    rsp,0x18
   3b812:	cmp    QWORD PTR [rdi+0x158],0x0
   3b81a:	mov    DWORD PTR [rsp+0x4],ecx
   3b81e:	je     3b8e2 <__sprintf_chk@plt+0x30f32>
   3b824:	mov    r14,rdi
   3b827:	mov    r13,rsi
   3b82a:	mov    r12d,edx
   3b82d:	xor    ebx,ebx
   3b82f:	nop
   3b830:	mov    rdx,QWORD PTR [r14+0x160]
   3b837:	lea    rax,[rbx+rbx*2]
   3b83b:	lea    rbp,[rax*8+0x0]
   3b843:	mov    r10,QWORD PTR [rdx+rax*8]
   3b847:	lea    r15,[r10+0xd]
   3b84b:	cmp    r12b,0x30
   3b84f:	jne    3b86e <__sprintf_chk@plt+0x30ebe>
   3b851:	lea    rsi,[rip+0x303ee]        # 6bc46 <_obstack_memory_used@@Base+0x1efc6>
   3b858:	mov    rdi,r15
   3b85b:	call   a320 <strcmp@plt>
   3b860:	test   eax,eax
   3b862:	setne  al
   3b865:	movzx  eax,al
   3b868:	cmp    eax,DWORD PTR [rsp+0x4]
   3b86c:	je     3b8d1 <__sprintf_chk@plt+0x30f21>
   3b86e:	xor    esi,esi
   3b870:	mov    rdi,r15
   3b873:	call   3b720 <__sprintf_chk@plt+0x30d70>
   3b878:	test   al,al
   3b87a:	jne    3b8d1 <__sprintf_chk@plt+0x30f21>
   3b87c:	add    rbp,QWORD PTR [r14+0x160]
   3b883:	mov    rdx,QWORD PTR [rbp+0x8]
   3b887:	mov    rcx,QWORD PTR [rbp+0x10]
   3b88b:	test   rdx,rdx
   3b88e:	je     3b8d1 <__sprintf_chk@plt+0x30f21>
   3b890:	mov    edi,DWORD PTR [rip+0x4078a]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   3b896:	cmp    r12b,0x32
   3b89a:	je     3b950 <__sprintf_chk@plt+0x30fa0>
   3b8a0:	cmp    edi,0xffffff9c
   3b8a3:	je     3b980 <__sprintf_chk@plt+0x30fd0>
   3b8a9:	cmp    BYTE PTR [r13+0x0],0x2f
   3b8ae:	je     3b980 <__sprintf_chk@plt+0x30fd0>
   3b8b4:	mov    r8,rcx
   3b8b7:	mov    rsi,r13
   3b8ba:	lea    rbp,[rip+0x30370]        # 6bc31 <_obstack_memory_used@@Base+0x1efb1>
   3b8c1:	mov    rcx,rdx
   3b8c4:	mov    rdx,r15
   3b8c7:	call   595f0 <_obstack_memory_used@@Base+0xc970>
   3b8cc:	cmp    eax,0xffffffff
   3b8cf:	je     3b8f8 <__sprintf_chk@plt+0x30f48>
   3b8d1:	add    rbx,0x1
   3b8d5:	cmp    rbx,QWORD PTR [r14+0x158]
   3b8dc:	jb     3b830 <__sprintf_chk@plt+0x30e80>
   3b8e2:	add    rsp,0x18
   3b8e6:	pop    rbx
   3b8e7:	pop    rbp
   3b8e8:	pop    r12
   3b8ea:	pop    r13
   3b8ec:	pop    r14
   3b8ee:	pop    r15
   3b8f0:	ret    
   3b8f1:	nop    DWORD PTR [rax+0x0]
   3b8f8:	test   BYTE PTR [rip+0x4077f],0x20        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   3b8ff:	je     3b8d1 <__sprintf_chk@plt+0x30f21>
   3b901:	mov    rax,QWORD PTR [rip+0x43c00]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3b908:	test   rax,rax
   3b90b:	je     3b90f <__sprintf_chk@plt+0x30f5f>
   3b90d:	call   rax
   3b90f:	xor    edi,edi
   3b911:	mov    edx,0x5
   3b916:	lea    rsi,[rip+0x2feb3]        # 6b7d0 <_obstack_memory_used@@Base+0x1eb50>
   3b91d:	call   a040 <dcgettext@plt>
   3b922:	mov    QWORD PTR [rsp+0x8],rax
   3b927:	call   9e40 <__errno_location@plt>
   3b92c:	mov    rdx,QWORD PTR [rsp+0x8]
   3b931:	mov    r9,r13
   3b934:	mov    r8,r15
   3b937:	mov    esi,DWORD PTR [rax]
   3b939:	mov    rcx,rbp
   3b93c:	xor    edi,edi
   3b93e:	xor    eax,eax
   3b940:	call   a640 <error@plt>
   3b945:	jmp    3b8d1 <__sprintf_chk@plt+0x30f21>
   3b947:	nop    WORD PTR [rax+rax*1+0x0]
   3b950:	cmp    edi,0xffffff9c
   3b953:	je     3b9a0 <__sprintf_chk@plt+0x30ff0>
   3b955:	cmp    BYTE PTR [r13+0x0],0x2f
   3b95a:	je     3b9a0 <__sprintf_chk@plt+0x30ff0>
   3b95c:	mov    r8,rcx
   3b95f:	mov    rsi,r13
   3b962:	lea    rbp,[rip+0x302d3]        # 6bc3c <_obstack_memory_used@@Base+0x1efbc>
   3b969:	mov    rcx,rdx
   3b96c:	mov    rdx,r15
   3b96f:	call   59880 <_obstack_memory_used@@Base+0xcc00>
   3b974:	jmp    3b8cc <__sprintf_chk@plt+0x30f1c>
   3b979:	nop    DWORD PTR [rax+0x0]
   3b980:	xor    r8d,r8d
   3b983:	mov    rsi,r15
   3b986:	lea    rbp,[rip+0x302a4]        # 6bc31 <_obstack_memory_used@@Base+0x1efb1>
   3b98d:	mov    rdi,r13
   3b990:	call   a850 <setxattr@plt>
   3b995:	jmp    3b8cc <__sprintf_chk@plt+0x30f1c>
   3b99a:	nop    WORD PTR [rax+rax*1+0x0]
   3b9a0:	xor    r8d,r8d
   3b9a3:	mov    rsi,r15
   3b9a6:	lea    rbp,[rip+0x3028f]        # 6bc3c <_obstack_memory_used@@Base+0x1efbc>
   3b9ad:	mov    rdi,r13
   3b9b0:	call   a500 <lsetxattr@plt>
   3b9b5:	jmp    3b8cc <__sprintf_chk@plt+0x30f1c>
   3b9ba:	nop    WORD PTR [rax+rax*1+0x0]
   3b9c0:	endbr64 
   3b9c4:	mov    ecx,edi
   3b9c6:	mov    eax,edi
   3b9c8:	mov    rdx,rsi
   3b9cb:	and    ecx,0x100
   3b9d1:	cmp    ecx,0x1
   3b9d4:	sbb    ecx,ecx
   3b9d6:	and    ecx,0xffffffbb
   3b9d9:	add    ecx,0x72
   3b9dc:	mov    BYTE PTR [rsi],cl
   3b9de:	mov    ecx,edi
   3b9e0:	and    ecx,0x80
   3b9e6:	cmp    ecx,0x1
   3b9e9:	sbb    ecx,ecx
   3b9eb:	and    ecx,0xffffffb6
   3b9ee:	add    ecx,0x77
   3b9f1:	mov    BYTE PTR [rsi+0x1],cl
   3b9f4:	mov    ecx,edi
   3b9f6:	and    ecx,0x40
   3b9f9:	cmp    ecx,0x1
   3b9fc:	sbb    ecx,ecx
   3b9fe:	test   ah,0x8
   3ba01:	je     3ba98 <__sprintf_chk@plt+0x310e8>
   3ba07:	and    ecx,0xffffffe0
   3ba0a:	add    ecx,0x73
   3ba0d:	mov    BYTE PTR [rdx+0x2],cl
   3ba10:	mov    ecx,eax
   3ba12:	and    ecx,0x20
   3ba15:	cmp    ecx,0x1
   3ba18:	sbb    ecx,ecx
   3ba1a:	and    ecx,0xffffffbb
   3ba1d:	add    ecx,0x72
   3ba20:	mov    BYTE PTR [rdx+0x3],cl
   3ba23:	mov    ecx,eax
   3ba25:	and    ecx,0x10
   3ba28:	cmp    ecx,0x1
   3ba2b:	sbb    ecx,ecx
   3ba2d:	and    ecx,0xffffffb6
   3ba30:	add    ecx,0x77
   3ba33:	mov    BYTE PTR [rdx+0x4],cl
   3ba36:	mov    ecx,eax
   3ba38:	and    ecx,0x8
   3ba3b:	cmp    ecx,0x1
   3ba3e:	sbb    ecx,ecx
   3ba40:	test   ah,0x4
   3ba43:	je     3bac0 <__sprintf_chk@plt+0x31110>
   3ba45:	and    ecx,0xffffffe0
   3ba48:	add    ecx,0x73
   3ba4b:	mov    BYTE PTR [rdx+0x5],cl
   3ba4e:	mov    ecx,eax
   3ba50:	and    ecx,0x4
   3ba53:	cmp    ecx,0x1
   3ba56:	sbb    ecx,ecx
   3ba58:	and    ecx,0xffffffbb
   3ba5b:	add    ecx,0x72
   3ba5e:	mov    BYTE PTR [rdx+0x6],cl
   3ba61:	mov    ecx,eax
   3ba63:	and    ecx,0x2
   3ba66:	cmp    ecx,0x1
   3ba69:	sbb    ecx,ecx
   3ba6b:	and    ecx,0xffffffb6
   3ba6e:	add    ecx,0x77
   3ba71:	mov    BYTE PTR [rdx+0x7],cl
   3ba74:	mov    ecx,eax
   3ba76:	and    ecx,0x1
   3ba79:	test   ah,0x2
   3ba7c:	je     3baa8 <__sprintf_chk@plt+0x310f8>
   3ba7e:	cmp    ecx,0x1
   3ba81:	mov    BYTE PTR [rdx+0x9],0x0
   3ba85:	sbb    eax,eax
   3ba87:	and    eax,0xffffffe0
   3ba8a:	add    eax,0x74
   3ba8d:	mov    BYTE PTR [rdx+0x8],al
   3ba90:	ret    
   3ba91:	nop    DWORD PTR [rax+0x0]
   3ba98:	and    ecx,0xffffffb5
   3ba9b:	add    ecx,0x78
   3ba9e:	jmp    3ba0d <__sprintf_chk@plt+0x3105d>
   3baa3:	nop    DWORD PTR [rax+rax*1+0x0]
   3baa8:	cmp    ecx,0x1
   3baab:	mov    BYTE PTR [rdx+0x9],0x0
   3baaf:	sbb    eax,eax
   3bab1:	and    eax,0xffffffb5
   3bab4:	add    eax,0x78
   3bab7:	mov    BYTE PTR [rdx+0x8],al
   3baba:	ret    
   3babb:	nop    DWORD PTR [rax+rax*1+0x0]
   3bac0:	and    ecx,0xffffffb5
   3bac3:	add    ecx,0x78
   3bac6:	jmp    3ba4b <__sprintf_chk@plt+0x3109b>
   3bac8:	nop    DWORD PTR [rax+rax*1+0x0]
   3bad0:	endbr64 
   3bad4:	push   r12
   3bad6:	mov    r12,rsi
   3bad9:	push   rbp
   3bada:	push   rbx
   3badb:	mov    rbx,rdi
   3bade:	call   9e40 <__errno_location@plt>
   3bae3:	mov    ebp,DWORD PTR [rax]
   3bae5:	mov    rax,QWORD PTR [rip+0x43a1c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3baec:	test   rax,rax
   3baef:	je     3baf3 <__sprintf_chk@plt+0x31143>
   3baf1:	call   rax
   3baf3:	mov    rdi,r12
   3baf6:	call   4b670 <argp_usage@@Base+0x82f0>
   3bafb:	mov    edx,0x5
   3bb00:	lea    rsi,[rip+0x30153]        # 6bc5a <_obstack_memory_used@@Base+0x1efda>
   3bb07:	xor    edi,edi
   3bb09:	mov    r12,rax
   3bb0c:	call   a040 <dcgettext@plt>
   3bb11:	mov    r8,rbx
   3bb14:	mov    rcx,r12
   3bb17:	mov    esi,ebp
   3bb19:	mov    rdx,rax
   3bb1c:	xor    edi,edi
   3bb1e:	xor    eax,eax
   3bb20:	call   a640 <error@plt>
   3bb25:	pop    rbx
   3bb26:	pop    rbp
   3bb27:	mov    DWORD PTR [rip+0x43593],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3bb31:	pop    r12
   3bb33:	ret    
   3bb34:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3bb3f:	nop
   3bb40:	push   r15
   3bb42:	push   r14
   3bb44:	push   r13
   3bb46:	push   r12
   3bb48:	push   rbp
   3bb49:	push   rbx
   3bb4a:	sub    rsp,0x18
   3bb4e:	mov    r15,QWORD PTR [rip+0x4419b]        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3bb55:	mov    r13d,DWORD PTR [rip+0x43c6c]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bb5c:	mov    DWORD PTR [rsp+0xc],edi
   3bb60:	test   r15,r15
   3bb63:	je     3be10 <__sprintf_chk@plt+0x31460>
   3bb69:	mov    ebp,edi
   3bb6b:	mov    eax,r13d
   3bb6e:	xor    ebx,ebx
   3bb70:	jmp    3bb80 <__sprintf_chk@plt+0x311d0>
   3bb72:	nop    WORD PTR [rax+rax*1+0x0]
   3bb78:	mov    rbx,r14
   3bb7b:	test   r15,r15
   3bb7e:	je     3bbec <__sprintf_chk@plt+0x3123c>
   3bb80:	mov    r14,r15
   3bb83:	mov    r15,QWORD PTR [r15]
   3bb86:	test   bpl,bpl
   3bb89:	jne    3bb98 <__sprintf_chk@plt+0x311e8>
   3bb8b:	mov    rcx,QWORD PTR [rip+0x4353e]        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   3bb92:	cmp    QWORD PTR [r14+0x20],rcx
   3bb96:	jae    3bb78 <__sprintf_chk@plt+0x311c8>
   3bb98:	mov    edi,DWORD PTR [r14+0x8]
   3bb9c:	cmp    edi,eax
   3bb9e:	je     3bba5 <__sprintf_chk@plt+0x311f5>
   3bba0:	call   26d40 <__sprintf_chk@plt+0x1c390>
   3bba5:	cmp    BYTE PTR [r14+0x18],0x0
   3bbaa:	mov    r12,QWORD PTR [r14+0x10]
   3bbae:	je     3bd68 <__sprintf_chk@plt+0x313b8>
   3bbb4:	mov    edi,DWORD PTR [r14+0x8]
   3bbb8:	test   edi,edi
   3bbba:	je     3bcd8 <__sprintf_chk@plt+0x31328>
   3bbc0:	cmp    BYTE PTR [r12],0x0
   3bbc5:	je     3bbde <__sprintf_chk@plt+0x3122e>
   3bbc7:	cmp    BYTE PTR [r12],0x2e
   3bbcc:	jne    3bcd8 <__sprintf_chk@plt+0x31328>
   3bbd2:	cmp    BYTE PTR [r12+0x1],0x0
   3bbd8:	jne    3bcd8 <__sprintf_chk@plt+0x31328>
   3bbde:	mov    eax,DWORD PTR [rip+0x43be4]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bbe4:	mov    rbx,r14
   3bbe7:	test   r15,r15
   3bbea:	jne    3bb80 <__sprintf_chk@plt+0x311d0>
   3bbec:	mov    rbx,QWORD PTR [rip+0x440fd]        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3bbf3:	test   rbx,rbx
   3bbf6:	je     3be13 <__sprintf_chk@plt+0x31463>
   3bbfc:	cmp    BYTE PTR [rsp+0xc],0x0
   3bc01:	je     3bde4 <__sprintf_chk@plt+0x31434>
   3bc07:	lea    r14,[rip+0x3005a]        # 6bc68 <_obstack_memory_used@@Base+0x1efe8>
   3bc0e:	xchg   ax,ax
   3bc10:	mov    edi,DWORD PTR [rbx+0x8]
   3bc13:	mov    r12,QWORD PTR [rbx]
   3bc16:	cmp    edi,eax
   3bc18:	je     3bc22 <__sprintf_chk@plt+0x31272>
   3bc1a:	call   26d40 <__sprintf_chk@plt+0x1c390>
   3bc1f:	mov    eax,DWORD PTR [rbx+0x8]
   3bc22:	mov    rbp,QWORD PTR [rbx+0x10]
   3bc26:	test   eax,eax
   3bc28:	je     3bc70 <__sprintf_chk@plt+0x312c0>
   3bc2a:	cmp    BYTE PTR [rbx+0x18],0x0
   3bc2e:	je     3bc70 <__sprintf_chk@plt+0x312c0>
   3bc30:	cmp    BYTE PTR [rbp+0x0],0x0
   3bc34:	je     3bc42 <__sprintf_chk@plt+0x31292>
   3bc36:	cmp    BYTE PTR [rbp+0x0],0x2e
   3bc3a:	jne    3bc70 <__sprintf_chk@plt+0x312c0>
   3bc3c:	cmp    BYTE PTR [rbp+0x1],0x0
   3bc40:	jne    3bc70 <__sprintf_chk@plt+0x312c0>
   3bc42:	movsxd rdx,DWORD PTR [rip+0x43b7f]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bc49:	mov    rsi,QWORD PTR [rip+0x43cb8]        # 7f908 <obstack_alloc_failed_handler@@Base+0xad0>
   3bc50:	lea    edi,[rax-0x1]
   3bc53:	mov    rcx,rdx
   3bc56:	lea    rdx,[rdx+rdx*2]
   3bc5a:	lea    rdx,[rsi+rdx*8]
   3bc5e:	mov    rbp,QWORD PTR [rdx]
   3bc61:	cmp    edi,ecx
   3bc63:	je     3bc70 <__sprintf_chk@plt+0x312c0>
   3bc65:	call   26d40 <__sprintf_chk@plt+0x1c390>
   3bc6a:	nop    WORD PTR [rax+rax*1+0x0]
   3bc70:	mov    edi,DWORD PTR [rip+0x403aa]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   3bc76:	mov    edx,0x200
   3bc7b:	mov    rsi,rbp
   3bc7e:	call   9ee0 <unlinkat@plt>
   3bc83:	test   eax,eax
   3bc85:	je     3bc9c <__sprintf_chk@plt+0x312ec>
   3bc87:	call   9e40 <__errno_location@plt>
   3bc8c:	cmp    DWORD PTR [rax],0x2
   3bc8f:	je     3bc9c <__sprintf_chk@plt+0x312ec>
   3bc91:	mov    rsi,rbp
   3bc94:	mov    rdi,r14
   3bc97:	call   3bad0 <__sprintf_chk@plt+0x31120>
   3bc9c:	mov    rdi,QWORD PTR [rbx+0x10]
   3bca0:	call   9ce0 <free@plt>
   3bca5:	mov    rax,QWORD PTR [rip+0x4403c]        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3bcac:	sub    QWORD PTR [rip+0x4402c],0x1        # 7fce0 <argp_program_bug_address@@Base+0x30>
   3bcb4:	mov    QWORD PTR [rip+0x4402d],rbx        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3bcbb:	mov    QWORD PTR [rbx],rax
   3bcbe:	test   r12,r12
   3bcc1:	je     3bdc8 <__sprintf_chk@plt+0x31418>
   3bcc7:	mov    eax,DWORD PTR [rip+0x43afb]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bccd:	mov    rbx,r12
   3bcd0:	jmp    3bc10 <__sprintf_chk@plt+0x31260>
   3bcd5:	nop    DWORD PTR [rax]
   3bcd8:	mov    edi,DWORD PTR [rip+0x40342]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   3bcde:	mov    edx,0x200
   3bce3:	mov    rsi,r12
   3bce6:	call   9ee0 <unlinkat@plt>
   3bceb:	test   eax,eax
   3bced:	je     3bda0 <__sprintf_chk@plt+0x313f0>
   3bcf3:	call   9e40 <__errno_location@plt>
   3bcf8:	mov    eax,DWORD PTR [rax]
   3bcfa:	cmp    eax,0x11
   3bcfd:	je     3bbde <__sprintf_chk@plt+0x3122e>
   3bd03:	cmp    eax,0x27
   3bd06:	je     3bbde <__sprintf_chk@plt+0x3122e>
   3bd0c:	cmp    eax,0x2
   3bd0f:	je     3bda0 <__sprintf_chk@plt+0x313f0>
   3bd15:	lea    rdi,[rip+0x2ff4c]        # 6bc68 <_obstack_memory_used@@Base+0x1efe8>
   3bd1c:	mov    rsi,r12
   3bd1f:	call   3bad0 <__sprintf_chk@plt+0x31120>
   3bd24:	mov    rdi,QWORD PTR [r14+0x10]
   3bd28:	nop    DWORD PTR [rax+rax*1+0x0]
   3bd30:	call   9ce0 <free@plt>
   3bd35:	mov    rax,QWORD PTR [rip+0x43fac]        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3bd3c:	sub    QWORD PTR [rip+0x43f9c],0x1        # 7fce0 <argp_program_bug_address@@Base+0x30>
   3bd44:	mov    QWORD PTR [rip+0x43f9d],r14        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3bd4b:	mov    QWORD PTR [r14],rax
   3bd4e:	test   rbx,rbx
   3bd51:	je     3bdb0 <__sprintf_chk@plt+0x31400>
   3bd53:	mov    QWORD PTR [rbx],r15
   3bd56:	mov    eax,DWORD PTR [rip+0x43a6c]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bd5c:	jmp    3bb7b <__sprintf_chk@plt+0x311cb>
   3bd61:	nop    DWORD PTR [rax+0x0]
   3bd68:	mov    edi,DWORD PTR [rip+0x402b2]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   3bd6e:	xor    edx,edx
   3bd70:	mov    rsi,r12
   3bd73:	call   9ee0 <unlinkat@plt>
   3bd78:	test   eax,eax
   3bd7a:	je     3bda0 <__sprintf_chk@plt+0x313f0>
   3bd7c:	call   9e40 <__errno_location@plt>
   3bd81:	mov    rdi,QWORD PTR [r14+0x10]
   3bd85:	cmp    DWORD PTR [rax],0x2
   3bd88:	je     3bd30 <__sprintf_chk@plt+0x31380>
   3bd8a:	mov    rsi,rdi
   3bd8d:	lea    rdi,[rip+0x2b25d]        # 66ff1 <_obstack_memory_used@@Base+0x1a371>
   3bd94:	call   3bad0 <__sprintf_chk@plt+0x31120>
   3bd99:	nop    DWORD PTR [rax+0x0]
   3bda0:	mov    rdi,QWORD PTR [r14+0x10]
   3bda4:	jmp    3bd30 <__sprintf_chk@plt+0x31380>
   3bda6:	cs nop WORD PTR [rax+rax*1+0x0]
   3bdb0:	mov    QWORD PTR [rip+0x43f39],r15        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3bdb7:	mov    eax,DWORD PTR [rip+0x43a0b]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bdbd:	jmp    3bb7b <__sprintf_chk@plt+0x311cb>
   3bdc2:	nop    WORD PTR [rax+rax*1+0x0]
   3bdc8:	mov    QWORD PTR [rip+0x43f05],0x0        # 7fcd8 <argp_program_bug_address@@Base+0x28>
   3bdd3:	mov    eax,DWORD PTR [rip+0x439ef]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3bdd9:	mov    QWORD PTR [rip+0x43f0c],0x0        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3bde4:	cmp    r13d,eax
   3bde7:	je     3be00 <__sprintf_chk@plt+0x31450>
   3bde9:	add    rsp,0x18
   3bded:	mov    edi,r13d
   3bdf0:	pop    rbx
   3bdf1:	pop    rbp
   3bdf2:	pop    r12
   3bdf4:	pop    r13
   3bdf6:	pop    r14
   3bdf8:	pop    r15
   3bdfa:	jmp    26d40 <__sprintf_chk@plt+0x1c390>
   3bdff:	nop
   3be00:	add    rsp,0x18
   3be04:	pop    rbx
   3be05:	pop    rbp
   3be06:	pop    r12
   3be08:	pop    r13
   3be0a:	pop    r14
   3be0c:	pop    r15
   3be0e:	ret    
   3be0f:	nop
   3be10:	mov    eax,r13d
   3be13:	mov    QWORD PTR [rip+0x43eba],0x0        # 7fcd8 <argp_program_bug_address@@Base+0x28>
   3be1e:	jmp    3bde4 <__sprintf_chk@plt+0x31434>
   3be20:	endbr64 
   3be24:	push   rbx
   3be25:	mov    edi,0x1
   3be2a:	call   3bb40 <__sprintf_chk@plt+0x31190>
   3be2f:	mov    rbx,QWORD PTR [rip+0x43eb2]        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3be36:	test   rbx,rbx
   3be39:	je     3be57 <__sprintf_chk@plt+0x314a7>
   3be3b:	nop    DWORD PTR [rax+rax*1+0x0]
   3be40:	mov    rdi,rbx
   3be43:	mov    rbx,QWORD PTR [rbx]
   3be46:	call   9ce0 <free@plt>
   3be4b:	mov    QWORD PTR [rip+0x43e96],rbx        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3be52:	test   rbx,rbx
   3be55:	jne    3be40 <__sprintf_chk@plt+0x31490>
   3be57:	pop    rbx
   3be58:	ret    
   3be59:	nop    DWORD PTR [rax+0x0]
   3be60:	endbr64 
   3be64:	push   r13
   3be66:	push   r12
   3be68:	mov    r12,rdi
   3be6b:	push   rbp
   3be6c:	mov    ebp,esi
   3be6e:	push   rbx
   3be6f:	sub    rsp,0x8
   3be73:	mov    rax,QWORD PTR [rip+0x43e76]        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3be7a:	test   rax,rax
   3be7d:	je     3be90 <__sprintf_chk@plt+0x314e0>
   3be7f:	mov    rsi,QWORD PTR [rip+0x4324a]        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   3be86:	cmp    QWORD PTR [rax+0x20],rsi
   3be8a:	jb     3bfe0 <__sprintf_chk@plt+0x31630>
   3be90:	mov    rbx,QWORD PTR [rip+0x43e51]        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3be97:	test   rbx,rbx
   3be9a:	je     3bff7 <__sprintf_chk@plt+0x31647>
   3bea0:	mov    rax,QWORD PTR [rbx]
   3bea3:	mov    QWORD PTR [rbx],0x0
   3beaa:	mov    QWORD PTR [rip+0x43e37],rax        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3beb1:	mov    eax,DWORD PTR [rip+0x43911]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   3beb7:	mov    QWORD PTR [rbx],0x0
   3bebe:	mov    rdi,r12
   3bec1:	mov    DWORD PTR [rbx+0x8],eax
   3bec4:	call   a060 <strlen@plt>
   3bec9:	lea    r13,[rax+0x1]
   3becd:	mov    rdi,r13
   3bed0:	call   a4a0 <malloc@plt>
   3bed5:	mov    rdi,rax
   3bed8:	test   rax,rax
   3bedb:	je     3c00d <__sprintf_chk@plt+0x3165d>
   3bee1:	mov    rdx,r13
   3bee4:	mov    rsi,r12
   3bee7:	call   a420 <memcpy@plt>
   3beec:	mov    QWORD PTR [rbx+0x10],rax
   3bef0:	mov    rdi,rax
   3bef3:	call   254c0 <__sprintf_chk@plt+0x1ab10>
   3bef8:	mov    rax,QWORD PTR [rip+0x431d1]        # 7f0d0 <obstack_alloc_failed_handler@@Base+0x298>
   3beff:	mov    BYTE PTR [rbx+0x18],bpl
   3bf03:	mov    QWORD PTR [rbx+0x20],rax
   3bf07:	test   bpl,bpl
   3bf0a:	je     3bfa1 <__sprintf_chk@plt+0x315f1>
   3bf10:	mov    rax,QWORD PTR [rbx+0x10]
   3bf14:	cmp    BYTE PTR [rax],0x0
   3bf17:	jne    3bf98 <__sprintf_chk@plt+0x315e8>
   3bf19:	mov    rsi,QWORD PTR [rip+0x43dd0]        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3bf20:	test   rsi,rsi
   3bf23:	je     3bf64 <__sprintf_chk@plt+0x315b4>
   3bf25:	mov    rax,rsi
   3bf28:	xor    ecx,ecx
   3bf2a:	jmp    3bf33 <__sprintf_chk@plt+0x31583>
   3bf2c:	nop    DWORD PTR [rax+0x0]
   3bf30:	mov    rax,rdx
   3bf33:	cmp    BYTE PTR [rax+0x18],0x0
   3bf37:	je     3bf59 <__sprintf_chk@plt+0x315a9>
   3bf39:	mov    rdx,QWORD PTR [rax+0x10]
   3bf3d:	cmp    BYTE PTR [rdx],0x0
   3bf40:	je     3bf4d <__sprintf_chk@plt+0x3159d>
   3bf42:	cmp    BYTE PTR [rdx],0x2e
   3bf45:	jne    3bf59 <__sprintf_chk@plt+0x315a9>
   3bf47:	cmp    BYTE PTR [rdx+0x1],0x0
   3bf4b:	jne    3bf59 <__sprintf_chk@plt+0x315a9>
   3bf4d:	mov    edi,DWORD PTR [rbx+0x8]
   3bf50:	cmp    DWORD PTR [rax+0x8],edi
   3bf53:	jl     3c018 <__sprintf_chk@plt+0x31668>
   3bf59:	mov    rdx,QWORD PTR [rax]
   3bf5c:	mov    rcx,rax
   3bf5f:	test   rdx,rdx
   3bf62:	jne    3bf30 <__sprintf_chk@plt+0x31580>
   3bf64:	mov    rax,QWORD PTR [rip+0x43d6d]        # 7fcd8 <argp_program_bug_address@@Base+0x28>
   3bf6b:	test   rax,rax
   3bf6e:	je     3c08f <__sprintf_chk@plt+0x316df>
   3bf74:	mov    rdx,QWORD PTR [rax]
   3bf77:	mov    QWORD PTR [rbx],rdx
   3bf7a:	mov    QWORD PTR [rax],rbx
   3bf7d:	mov    rsi,QWORD PTR [rbx]
   3bf80:	test   rsi,rsi
   3bf83:	jne    3bfc2 <__sprintf_chk@plt+0x31612>
   3bf85:	nop    DWORD PTR [rax]
   3bf88:	mov    QWORD PTR [rip+0x43d49],rbx        # 7fcd8 <argp_program_bug_address@@Base+0x28>
   3bf8f:	jmp    3bfc2 <__sprintf_chk@plt+0x31612>
   3bf91:	nop    DWORD PTR [rax+0x0]
   3bf98:	cmp    BYTE PTR [rax],0x2e
   3bf9b:	je     3c038 <__sprintf_chk@plt+0x31688>
   3bfa1:	mov    rax,QWORD PTR [rip+0x43d30]        # 7fcd8 <argp_program_bug_address@@Base+0x28>
   3bfa8:	test   rax,rax
   3bfab:	je     3c060 <__sprintf_chk@plt+0x316b0>
   3bfb1:	mov    rdx,QWORD PTR [rax]
   3bfb4:	mov    QWORD PTR [rbx],rdx
   3bfb7:	mov    QWORD PTR [rax],rbx
   3bfba:	mov    rax,QWORD PTR [rbx]
   3bfbd:	test   rax,rax
   3bfc0:	je     3bf88 <__sprintf_chk@plt+0x315d8>
   3bfc2:	mov    rax,QWORD PTR [rip+0x43d17]        # 7fce0 <argp_program_bug_address@@Base+0x30>
   3bfc9:	add    rax,0x1
   3bfcd:	mov    QWORD PTR [rip+0x43d0c],rax        # 7fce0 <argp_program_bug_address@@Base+0x30>
   3bfd4:	add    rsp,0x8
   3bfd8:	pop    rbx
   3bfd9:	pop    rbp
   3bfda:	pop    r12
   3bfdc:	pop    r13
   3bfde:	ret    
   3bfdf:	nop
   3bfe0:	xor    edi,edi
   3bfe2:	call   3bb40 <__sprintf_chk@plt+0x31190>
   3bfe7:	mov    rbx,QWORD PTR [rip+0x43cfa]        # 7fce8 <argp_program_bug_address@@Base+0x38>
   3bfee:	test   rbx,rbx
   3bff1:	jne    3bea0 <__sprintf_chk@plt+0x314f0>
   3bff7:	mov    edi,0x28
   3bffc:	call   a4a0 <malloc@plt>
   3c001:	mov    rbx,rax
   3c004:	test   rax,rax
   3c007:	jne    3beb1 <__sprintf_chk@plt+0x31501>
   3c00d:	call   19130 <__sprintf_chk@plt+0xe780>
   3c012:	nop    WORD PTR [rax+rax*1+0x0]
   3c018:	test   rcx,rcx
   3c01b:	je     3c080 <__sprintf_chk@plt+0x316d0>
   3c01d:	mov    rax,QWORD PTR [rcx]
   3c020:	mov    QWORD PTR [rbx],rax
   3c023:	mov    QWORD PTR [rcx],rbx
   3c026:	cmp    QWORD PTR [rbx],0x0
   3c02a:	jne    3bfc2 <__sprintf_chk@plt+0x31612>
   3c02c:	jmp    3bf88 <__sprintf_chk@plt+0x315d8>
   3c031:	nop    DWORD PTR [rax+0x0]
   3c038:	cmp    BYTE PTR [rax+0x1],0x0
   3c03c:	jne    3bfa1 <__sprintf_chk@plt+0x315f1>
   3c042:	mov    rsi,QWORD PTR [rip+0x43ca7]        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3c049:	test   rsi,rsi
   3c04c:	jne    3bf25 <__sprintf_chk@plt+0x31575>
   3c052:	jmp    3bf64 <__sprintf_chk@plt+0x315b4>
   3c057:	nop    WORD PTR [rax+rax*1+0x0]
   3c060:	mov    rax,QWORD PTR [rip+0x43c89]        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3c067:	mov    QWORD PTR [rip+0x43c82],rbx        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3c06e:	mov    QWORD PTR [rbx],rax
   3c071:	jmp    3bfbd <__sprintf_chk@plt+0x3160d>
   3c076:	cs nop WORD PTR [rax+rax*1+0x0]
   3c080:	mov    QWORD PTR [rbx],rsi
   3c083:	mov    QWORD PTR [rip+0x43c66],rbx        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3c08a:	jmp    3bfc2 <__sprintf_chk@plt+0x31612>
   3c08f:	mov    QWORD PTR [rbx],rsi
   3c092:	mov    QWORD PTR [rip+0x43c57],rbx        # 7fcf0 <argp_program_bug_address@@Base+0x40>
   3c099:	jmp    3bf80 <__sprintf_chk@plt+0x315d0>
   3c09e:	xchg   ax,ax
   3c0a0:	endbr64 
   3c0a4:	push   r12
   3c0a6:	mov    r12,rsi
   3c0a9:	push   rbp
   3c0aa:	push   rbx
   3c0ab:	mov    rbx,rdi
   3c0ae:	call   9e40 <__errno_location@plt>
   3c0b3:	mov    ebp,DWORD PTR [rax]
   3c0b5:	mov    rax,QWORD PTR [rip+0x4344c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c0bc:	test   rax,rax
   3c0bf:	je     3c0c3 <__sprintf_chk@plt+0x31713>
   3c0c1:	call   rax
   3c0c3:	mov    rdi,r12
   3c0c6:	call   4b670 <argp_usage@@Base+0x82f0>
   3c0cb:	mov    edx,0x5
   3c0d0:	lea    rsi,[rip+0x2fb83]        # 6bc5a <_obstack_memory_used@@Base+0x1efda>
   3c0d7:	xor    edi,edi
   3c0d9:	mov    r12,rax
   3c0dc:	call   a040 <dcgettext@plt>
   3c0e1:	mov    r8,rbx
   3c0e4:	mov    rcx,r12
   3c0e7:	mov    esi,ebp
   3c0e9:	mov    rdx,rax
   3c0ec:	xor    edi,edi
   3c0ee:	xor    eax,eax
   3c0f0:	call   a640 <error@plt>
   3c0f5:	call   190e0 <__sprintf_chk@plt+0xe730>
   3c0fa:	nop    WORD PTR [rax+rax*1+0x0]
   3c100:	endbr64 
   3c104:	push   r12
   3c106:	mov    r12,rsi
   3c109:	push   rbp
   3c10a:	push   rbx
   3c10b:	mov    rbx,rdi
   3c10e:	call   9e40 <__errno_location@plt>
   3c113:	mov    ebp,DWORD PTR [rax]
   3c115:	mov    rax,QWORD PTR [rip+0x433ec]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c11c:	test   rax,rax
   3c11f:	je     3c123 <__sprintf_chk@plt+0x31773>
   3c121:	call   rax
   3c123:	mov    rdi,r12
   3c126:	call   4b670 <argp_usage@@Base+0x82f0>
   3c12b:	mov    edx,0x5
   3c130:	lea    rsi,[rip+0x2fb37]        # 6bc6e <_obstack_memory_used@@Base+0x1efee>
   3c137:	xor    edi,edi
   3c139:	mov    r12,rax
   3c13c:	call   a040 <dcgettext@plt>
   3c141:	mov    r8,rbx
   3c144:	mov    rcx,r12
   3c147:	pop    rbx
   3c148:	mov    rdx,rax
   3c14b:	mov    esi,ebp
   3c14d:	xor    edi,edi
   3c14f:	pop    rbp
   3c150:	xor    eax,eax
   3c152:	pop    r12
   3c154:	jmp    a640 <error@plt>
   3c159:	nop    DWORD PTR [rax+0x0]
   3c160:	endbr64 
   3c164:	push   r12
   3c166:	push   rbx
   3c167:	mov    rbx,rdi
   3c16a:	sub    rsp,0x8
   3c16e:	mov    rdi,QWORD PTR [rdi+0x1a0]
   3c175:	test   rdi,rdi
   3c178:	je     3c1c8 <__sprintf_chk@plt+0x31818>
   3c17a:	call   a250 <closedir@plt>
   3c17f:	mov    DWORD PTR [rbx+0x1a8],0x0
   3c189:	mov    r12d,0x1
   3c18f:	mov    QWORD PTR [rbx+0x1a0],0x0
   3c19a:	test   eax,eax
   3c19c:	je     3c1ba <__sprintf_chk@plt+0x3180a>
   3c19e:	movzx  r12d,BYTE PTR [rip+0x4335a]        # 7f500 <obstack_alloc_failed_handler@@Base+0x6c8>
   3c1a6:	mov    rsi,QWORD PTR [rbx]
   3c1a9:	test   r12b,r12b
   3c1ac:	je     3c210 <__sprintf_chk@plt+0x31860>
   3c1ae:	xor    r12d,r12d
   3c1b1:	test   BYTE PTR [rip+0x3fec6],0x80        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   3c1b8:	jne    3c1f0 <__sprintf_chk@plt+0x31840>
   3c1ba:	add    rsp,0x8
   3c1be:	mov    eax,r12d
   3c1c1:	pop    rbx
   3c1c2:	pop    r12
   3c1c4:	ret    
   3c1c5:	nop    DWORD PTR [rax]
   3c1c8:	mov    edi,DWORD PTR [rbx+0x1a8]
   3c1ce:	test   edi,edi
   3c1d0:	jg     3c200 <__sprintf_chk@plt+0x31850>
   3c1d2:	mov    DWORD PTR [rbx+0x1a8],0x0
   3c1dc:	mov    r12d,0x1
   3c1e2:	add    rsp,0x8
   3c1e6:	mov    eax,r12d
   3c1e9:	pop    rbx
   3c1ea:	pop    r12
   3c1ec:	ret    
   3c1ed:	nop    DWORD PTR [rax]
   3c1f0:	lea    rdi,[rip+0x2a865]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   3c1f7:	call   3c100 <__sprintf_chk@plt+0x31750>
   3c1fc:	jmp    3c1ba <__sprintf_chk@plt+0x3180a>
   3c1fe:	xchg   ax,ax
   3c200:	call   a200 <close@plt>
   3c205:	jmp    3c17f <__sprintf_chk@plt+0x317cf>
   3c20a:	nop    WORD PTR [rax+rax*1+0x0]
   3c210:	lea    rdi,[rip+0x2a845]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   3c217:	call   3bad0 <__sprintf_chk@plt+0x31120>
   3c21c:	add    rsp,0x8
   3c220:	mov    eax,r12d
   3c223:	pop    rbx
   3c224:	pop    r12
   3c226:	ret    
   3c227:	nop    WORD PTR [rax+rax*1+0x0]
   3c230:	endbr64 
   3c234:	mov    eax,DWORD PTR [rip+0x42ca2]        # 7eedc <obstack_alloc_failed_handler@@Base+0xa4>
   3c23a:	test   eax,eax
   3c23c:	jle    3c2c0 <__sprintf_chk@plt+0x31910>
   3c242:	push   r12
   3c244:	mov    r12,rsi
   3c247:	push   rbp
   3c248:	lea    rbp,[rdx+0x30]
   3c24c:	push   rbx
   3c24d:	mov    ebx,ecx
   3c24f:	test   ecx,ecx
   3c251:	je     3c278 <__sprintf_chk@plt+0x318c8>
   3c253:	mov    rsi,rbp
   3c256:	mov    edi,ecx
   3c258:	call   9d50 <fgetfilecon@plt>
   3c25d:	mov    rsi,rbp
   3c260:	mov    edi,eax
   3c262:	call   4c6b0 <argp_usage@@Base+0x9330>
   3c267:	cmp    eax,0xffffffff
   3c26a:	je     3c28f <__sprintf_chk@plt+0x318df>
   3c26c:	pop    rbx
   3c26d:	pop    rbp
   3c26e:	pop    r12
   3c270:	ret    
   3c271:	nop    DWORD PTR [rax+0x0]
   3c278:	cmp    edi,0xffffff9c
   3c27b:	je     3c2c8 <__sprintf_chk@plt+0x31918>
   3c27d:	cmp    BYTE PTR [rsi],0x2f
   3c280:	je     3c2c8 <__sprintf_chk@plt+0x31918>
   3c282:	mov    rdx,rbp
   3c285:	call   4c730 <argp_usage@@Base+0x93b0>
   3c28a:	cmp    eax,0xffffffff
   3c28d:	jne    3c26c <__sprintf_chk@plt+0x318bc>
   3c28f:	call   9e40 <__errno_location@plt>
   3c294:	mov    eax,DWORD PTR [rax]
   3c296:	cmp    eax,0x5f
   3c299:	je     3c26c <__sprintf_chk@plt+0x318bc>
   3c29b:	cmp    eax,0x3d
   3c29e:	je     3c26c <__sprintf_chk@plt+0x318bc>
   3c2a0:	test   ebx,ebx
   3c2a2:	lea    rdi,[rip+0x2f9dc]        # 6bc85 <_obstack_memory_used@@Base+0x1f005>
   3c2a9:	pop    rbx
   3c2aa:	mov    rsi,r12
   3c2ad:	lea    rax,[rip+0x2f9dd]        # 6bc91 <_obstack_memory_used@@Base+0x1f011>
   3c2b4:	pop    rbp
   3c2b5:	pop    r12
   3c2b7:	cmove  rdi,rax
   3c2bb:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   3c2c0:	ret    
   3c2c1:	nop    DWORD PTR [rax+0x0]
   3c2c8:	mov    rsi,rbp
   3c2cb:	mov    rdi,r12
   3c2ce:	call   a8a0 <lgetfilecon@plt>
   3c2d3:	mov    rsi,rbp
   3c2d6:	mov    edi,eax
   3c2d8:	call   4c6b0 <argp_usage@@Base+0x9330>
   3c2dd:	jmp    3c267 <__sprintf_chk@plt+0x318b7>
   3c2df:	nop
   3c2e0:	endbr64 
   3c2e4:	push   r13
   3c2e6:	mov    r13d,esi
   3c2e9:	push   r12
   3c2eb:	mov    r12,rdi
   3c2ee:	push   rbp
   3c2ef:	push   rbx
   3c2f0:	sub    rsp,0x28
   3c2f4:	mov    rax,QWORD PTR fs:0x28
   3c2fd:	mov    QWORD PTR [rsp+0x18],rax
   3c302:	xor    eax,eax
   3c304:	lea    rbx,[rsp+0xe]
   3c309:	call   9e40 <__errno_location@plt>
   3c30e:	mov    rsi,rbx
   3c311:	mov    edi,r13d
   3c314:	mov    ebp,DWORD PTR [rax]
   3c316:	call   3b9c0 <__sprintf_chk@plt+0x31010>
   3c31b:	mov    rax,QWORD PTR [rip+0x431e6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c322:	test   rax,rax
   3c325:	je     3c329 <__sprintf_chk@plt+0x31979>
   3c327:	call   rax
   3c329:	mov    rdi,r12
   3c32c:	call   4b670 <argp_usage@@Base+0x82f0>
   3c331:	mov    edx,0x5
   3c336:	lea    rsi,[rip+0x2f962]        # 6bc9f <_obstack_memory_used@@Base+0x1f01f>
   3c33d:	xor    edi,edi
   3c33f:	mov    r12,rax
   3c342:	call   a040 <dcgettext@plt>
   3c347:	mov    r8,rbx
   3c34a:	mov    rcx,r12
   3c34d:	mov    esi,ebp
   3c34f:	mov    rdx,rax
   3c352:	xor    edi,edi
   3c354:	xor    eax,eax
   3c356:	call   a640 <error@plt>
   3c35b:	mov    DWORD PTR [rip+0x42d5f],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3c365:	mov    rax,QWORD PTR [rsp+0x18]
   3c36a:	sub    rax,QWORD PTR fs:0x28
   3c373:	jne    3c380 <__sprintf_chk@plt+0x319d0>
   3c375:	add    rsp,0x28
   3c379:	pop    rbx
   3c37a:	pop    rbp
   3c37b:	pop    r12
   3c37d:	pop    r13
   3c37f:	ret    
   3c380:	call   a0a0 <__stack_chk_fail@plt>
   3c385:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3c390:	endbr64 
   3c394:	push   r13
   3c396:	mov    r13,rdi
   3c399:	push   r12
   3c39b:	mov    r12,rsi
   3c39e:	push   rbp
   3c39f:	push   rbx
   3c3a0:	sub    rsp,0x8
   3c3a4:	call   9e40 <__errno_location@plt>
   3c3a9:	mov    ebp,DWORD PTR [rax]
   3c3ab:	mov    rax,QWORD PTR [rip+0x43156]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c3b2:	test   rax,rax
   3c3b5:	je     3c3b9 <__sprintf_chk@plt+0x31a09>
   3c3b7:	call   rax
   3c3b9:	mov    rsi,r13
   3c3bc:	lea    rdx,[rip+0x3fc7d]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   3c3c3:	mov    edi,0x1
   3c3c8:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   3c3cd:	mov    rdi,r12
   3c3d0:	mov    rbx,rax
   3c3d3:	call   4b670 <argp_usage@@Base+0x82f0>
   3c3d8:	mov    edx,0x5
   3c3dd:	lea    rsi,[rip+0x2f8d8]        # 6bcbc <_obstack_memory_used@@Base+0x1f03c>
   3c3e4:	xor    edi,edi
   3c3e6:	mov    r12,rax
   3c3e9:	call   a040 <dcgettext@plt>
   3c3ee:	mov    r8,rbx
   3c3f1:	mov    rcx,r12
   3c3f4:	mov    esi,ebp
   3c3f6:	mov    rdx,rax
   3c3f9:	xor    edi,edi
   3c3fb:	xor    eax,eax
   3c3fd:	call   a640 <error@plt>
   3c402:	mov    DWORD PTR [rip+0x42cb8],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3c40c:	add    rsp,0x8
   3c410:	pop    rbx
   3c411:	pop    rbp
   3c412:	pop    r12
   3c414:	pop    r13
   3c416:	ret    
   3c417:	nop    WORD PTR [rax+rax*1+0x0]
   3c420:	endbr64 
   3c424:	push   rax
   3c425:	pop    rax
   3c426:	mov    rsi,rdi
   3c429:	sub    rsp,0x8
   3c42d:	lea    rdi,[rip+0x26d8c]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   3c434:	call   3c0a0 <__sprintf_chk@plt+0x316f0>
   3c439:	nop    DWORD PTR [rax+0x0]
   3c440:	endbr64 
   3c444:	push   r13
   3c446:	push   r12
   3c448:	push   rbp
   3c449:	mov    rbp,rdi
   3c44c:	push   rbx
   3c44d:	mov    rbx,rsi
   3c450:	sub    rsp,0x28
   3c454:	mov    rax,QWORD PTR fs:0x28
   3c45d:	mov    QWORD PTR [rsp+0x18],rax
   3c462:	xor    eax,eax
   3c464:	call   9e40 <__errno_location@plt>
   3c469:	mov    r12d,DWORD PTR [rax]
   3c46c:	mov    rax,QWORD PTR [rip+0x43095]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c473:	test   rax,rax
   3c476:	je     3c47a <__sprintf_chk@plt+0x31aca>
   3c478:	call   rax
   3c47a:	mov    BYTE PTR [rsp+0x14],0x0
   3c47f:	mov    rsi,rbx
   3c482:	movabs rdi,0xcccccccccccccccd
   3c48c:	lea    rbx,[rsp+0x14]
   3c491:	nop    DWORD PTR [rax+0x0]
   3c498:	mov    rax,rsi
   3c49b:	sub    rbx,0x1
   3c49f:	mul    rdi
   3c4a2:	mov    rax,rsi
   3c4a5:	shr    rdx,0x3
   3c4a9:	lea    rcx,[rdx+rdx*4]
   3c4ad:	add    rcx,rcx
   3c4b0:	sub    rax,rcx
   3c4b3:	add    eax,0x30
   3c4b6:	mov    BYTE PTR [rbx],al
   3c4b8:	mov    rax,rsi
   3c4bb:	mov    rsi,rdx
   3c4be:	cmp    rax,0x9
   3c4c2:	ja     3c498 <__sprintf_chk@plt+0x31ae8>
   3c4c4:	mov    rdi,rbp
   3c4c7:	call   4b670 <argp_usage@@Base+0x82f0>
   3c4cc:	mov    edx,0x5
   3c4d1:	lea    rsi,[rip+0x2f7ff]        # 6bcd7 <_obstack_memory_used@@Base+0x1f057>
   3c4d8:	xor    edi,edi
   3c4da:	mov    r13,rax
   3c4dd:	call   a040 <dcgettext@plt>
   3c4e2:	mov    r8,rbx
   3c4e5:	mov    rcx,r13
   3c4e8:	mov    esi,r12d
   3c4eb:	mov    rdx,rax
   3c4ee:	xor    edi,edi
   3c4f0:	xor    eax,eax
   3c4f2:	call   a640 <error@plt>
   3c4f7:	mov    DWORD PTR [rip+0x42bc3],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3c501:	mov    rax,QWORD PTR [rsp+0x18]
   3c506:	sub    rax,QWORD PTR fs:0x28
   3c50f:	jne    3c51c <__sprintf_chk@plt+0x31b6c>
   3c511:	add    rsp,0x28
   3c515:	pop    rbx
   3c516:	pop    rbp
   3c517:	pop    r12
   3c519:	pop    r13
   3c51b:	ret    
   3c51c:	call   a0a0 <__stack_chk_fail@plt>
   3c521:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3c52c:	nop    DWORD PTR [rax+0x0]
   3c530:	endbr64 
   3c534:	push   r13
   3c536:	mov    r13,rdi
   3c539:	push   r12
   3c53b:	mov    r12,rsi
   3c53e:	push   rbp
   3c53f:	push   rbx
   3c540:	sub    rsp,0x8
   3c544:	call   9e40 <__errno_location@plt>
   3c549:	mov    ebp,DWORD PTR [rax]
   3c54b:	mov    rax,QWORD PTR [rip+0x42fb6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c552:	test   rax,rax
   3c555:	je     3c559 <__sprintf_chk@plt+0x31ba9>
   3c557:	call   rax
   3c559:	mov    rsi,r13
   3c55c:	lea    rdx,[rip+0x3fadd]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   3c563:	mov    edi,0x1
   3c568:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   3c56d:	mov    rdi,r12
   3c570:	mov    rbx,rax
   3c573:	call   4b670 <argp_usage@@Base+0x82f0>
   3c578:	mov    edx,0x5
   3c57d:	lea    rsi,[rip+0x2f284]        # 6b808 <_obstack_memory_used@@Base+0x1eb88>
   3c584:	xor    edi,edi
   3c586:	mov    r12,rax
   3c589:	call   a040 <dcgettext@plt>
   3c58e:	mov    r8,rbx
   3c591:	mov    rcx,r12
   3c594:	mov    esi,ebp
   3c596:	mov    rdx,rax
   3c599:	xor    edi,edi
   3c59b:	xor    eax,eax
   3c59d:	call   a640 <error@plt>
   3c5a2:	mov    DWORD PTR [rip+0x42b18],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3c5ac:	add    rsp,0x8
   3c5b0:	pop    rbx
   3c5b1:	pop    rbp
   3c5b2:	pop    r12
   3c5b4:	pop    r13
   3c5b6:	ret    
   3c5b7:	nop    WORD PTR [rax+rax*1+0x0]
   3c5c0:	endbr64 
   3c5c4:	push   r12
   3c5c6:	mov    r12,rdi
   3c5c9:	push   rbp
   3c5ca:	push   rbx
   3c5cb:	test   rsi,rsi
   3c5ce:	je     3c630 <__sprintf_chk@plt+0x31c80>
   3c5d0:	mov    rax,QWORD PTR [rip+0x42f31]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c5d7:	mov    rbx,rsi
   3c5da:	mov    rbp,rdx
   3c5dd:	test   rax,rax
   3c5e0:	je     3c5e4 <__sprintf_chk@plt+0x31c34>
   3c5e2:	call   rax
   3c5e4:	mov    rcx,rbp
   3c5e7:	mov    r8d,0x5
   3c5ed:	lea    rdx,[rip+0x2f234]        # 6b828 <_obstack_memory_used@@Base+0x1eba8>
   3c5f4:	xor    edi,edi
   3c5f6:	lea    rsi,[rip+0x2f24b]        # 6b848 <_obstack_memory_used@@Base+0x1ebc8>
   3c5fd:	call   a6e0 <dcngettext@plt>
   3c602:	mov    r9,rbp
   3c605:	mov    r8,rbx
   3c608:	mov    rcx,r12
   3c60b:	mov    rdx,rax
   3c60e:	xor    esi,esi
   3c610:	xor    edi,edi
   3c612:	xor    eax,eax
   3c614:	call   a640 <error@plt>
   3c619:	pop    rbx
   3c61a:	pop    rbp
   3c61b:	mov    DWORD PTR [rip+0x42a9f],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   3c625:	pop    r12
   3c627:	ret    
   3c628:	nop    DWORD PTR [rax+rax*1+0x0]
   3c630:	pop    rbx
   3c631:	mov    rsi,rdi
   3c634:	lea    rdi,[rip+0x2b0fb]        # 67736 <_obstack_memory_used@@Base+0x1aab6>
   3c63b:	pop    rbp
   3c63c:	pop    r12
   3c63e:	jmp    3bad0 <__sprintf_chk@plt+0x31120>
   3c643:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3c64e:	xchg   ax,ax
   3c650:	endbr64 
   3c654:	push   r15
   3c656:	push   r14
   3c658:	push   r13
   3c65a:	push   r12
   3c65c:	push   rbp
   3c65d:	mov    ebp,esi
   3c65f:	push   rbx
   3c660:	mov    rbx,rdi
   3c663:	sub    rsp,0x28
   3c667:	mov    rax,QWORD PTR fs:0x28
   3c670:	mov    QWORD PTR [rsp+0x18],rax
   3c675:	xor    eax,eax
   3c677:	movzx  eax,BYTE PTR [rdi]
   3c67a:	test   dl,dl
   3c67c:	jne    3c6f0 <__sprintf_chk@plt+0x31d40>
   3c67e:	test   al,al
   3c680:	je     3c747 <__sprintf_chk@plt+0x31d97>
   3c686:	mov    rdx,rdi
   3c689:	xor    r13d,r13d
   3c68c:	nop    DWORD PTR [rax+0x0]
   3c690:	movzx  esi,BYTE PTR [rdx+0x1]
   3c694:	cmp    al,0x2e
   3c696:	je     3c720 <__sprintf_chk@plt+0x31d70>
   3c69c:	mov    ecx,eax
   3c69e:	mov    eax,esi
   3c6a0:	jmp    3c6b2 <__sprintf_chk@plt+0x31d02>
   3c6a2:	nop    WORD PTR [rax+rax*1+0x0]
   3c6a8:	test   al,al
   3c6aa:	je     3c6c0 <__sprintf_chk@plt+0x31d10>
   3c6ac:	mov    ecx,eax
   3c6ae:	movzx  eax,BYTE PTR [rdx+0x1]
   3c6b2:	add    rdx,0x1
   3c6b6:	cmp    cl,0x2f
   3c6b9:	jne    3c6a8 <__sprintf_chk@plt+0x31cf8>
   3c6bb:	test   al,al
   3c6bd:	jne    3c690 <__sprintf_chk@plt+0x31ce0>
   3c6bf:	nop
   3c6c0:	lea    r12,[rbx+r13*1]
   3c6c4:	cmp    BYTE PTR [r12],0x2f
   3c6c9:	je     3c791 <__sprintf_chk@plt+0x31de1>
   3c6cf:	test   r13,r13
   3c6d2:	jne    3c7ab <__sprintf_chk@plt+0x31dfb>
   3c6d8:	cmp    BYTE PTR [r12],0x0
   3c6dd:	jne    3c6f7 <__sprintf_chk@plt+0x31d47>
   3c6df:	cmp    rbx,r12
   3c6e2:	je     3c747 <__sprintf_chk@plt+0x31d97>
   3c6e4:	lea    r12,[rip+0x2af09]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   3c6eb:	jmp    3c6f7 <__sprintf_chk@plt+0x31d47>
   3c6ed:	nop    DWORD PTR [rax]
   3c6f0:	test   al,al
   3c6f2:	je     3c747 <__sprintf_chk@plt+0x31d97>
   3c6f4:	mov    r12,rdi
   3c6f7:	mov    rax,QWORD PTR [rsp+0x18]
   3c6fc:	sub    rax,QWORD PTR fs:0x28
   3c705:	jne    3c8a4 <__sprintf_chk@plt+0x31ef4>
   3c70b:	add    rsp,0x28
   3c70f:	mov    rax,r12
   3c712:	pop    rbx
   3c713:	pop    rbp
   3c714:	pop    r12
   3c716:	pop    r13
   3c718:	pop    r14
   3c71a:	pop    r15
   3c71c:	ret    
   3c71d:	nop    DWORD PTR [rax]
   3c720:	cmp    sil,0x2e
   3c724:	jne    3c69c <__sprintf_chk@plt+0x31cec>
   3c72a:	movzx  ecx,BYTE PTR [rdx+0x2]
   3c72e:	cmp    cl,0x2f
   3c731:	je     3c73b <__sprintf_chk@plt+0x31d8b>
   3c733:	test   cl,cl
   3c735:	jne    3c69c <__sprintf_chk@plt+0x31cec>
   3c73b:	lea    r13,[rdx+0x2]
   3c73f:	sub    r13,rbx
   3c742:	jmp    3c69c <__sprintf_chk@plt+0x31cec>
   3c747:	mov    rax,QWORD PTR [rip+0x42dba]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c74e:	test   rax,rax
   3c751:	je     3c755 <__sprintf_chk@plt+0x31da5>
   3c753:	call   rax
   3c755:	lea    rax,[rip+0x3ebe4]        # 7b340 <_obstack_memory_used@@Base+0x2e6c0>
   3c75c:	movzx  ebp,bpl
   3c760:	mov    edx,0x5
   3c765:	xor    edi,edi
   3c767:	mov    rsi,QWORD PTR [rax+rbp*8]
   3c76b:	lea    r12,[rip+0x2ae82]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   3c772:	call   a040 <dcgettext@plt>
   3c777:	lea    rdx,[rip+0x2f5d9]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   3c77e:	xor    esi,esi
   3c780:	xor    edi,edi
   3c782:	mov    rcx,rax
   3c785:	xor    eax,eax
   3c787:	call   a640 <error@plt>
   3c78c:	jmp    3c6f7 <__sprintf_chk@plt+0x31d47>
   3c791:	add    r12,0x1
   3c795:	cmp    BYTE PTR [r12],0x2f
   3c79a:	je     3c791 <__sprintf_chk@plt+0x31de1>
   3c79c:	mov    r13,r12
   3c79f:	sub    r13,rbx
   3c7a2:	test   r13,r13
   3c7a5:	je     3c6d8 <__sprintf_chk@plt+0x31d28>
   3c7ab:	movzx  eax,bpl
   3c7af:	lea    rdi,[rip+0x4277a]        # 7ef30 <obstack_alloc_failed_handler@@Base+0xf8>
   3c7b6:	mov    r14,QWORD PTR [rdi+rax*8]
   3c7ba:	lea    rdi,[r13+0x1]
   3c7be:	mov    QWORD PTR [rsp+0x8],rax
   3c7c3:	call   a4a0 <malloc@plt>
   3c7c8:	mov    r15,rax
   3c7cb:	test   rax,rax
   3c7ce:	je     3c89f <__sprintf_chk@plt+0x31eef>
   3c7d4:	mov    rdx,r13
   3c7d7:	mov    rsi,rbx
   3c7da:	mov    rdi,rax
   3c7dd:	call   a420 <memcpy@plt>
   3c7e2:	mov    BYTE PTR [r15+r13*1],0x0
   3c7e7:	test   r14,r14
   3c7ea:	je     3c869 <__sprintf_chk@plt+0x31eb9>
   3c7ec:	lea    rdx,[rsp+0x10]
   3c7f1:	mov    rsi,r15
   3c7f4:	mov    rdi,r14
   3c7f7:	call   49270 <argp_usage@@Base+0x5ef0>
   3c7fc:	cmp    eax,0xffffffff
   3c7ff:	je     3c89f <__sprintf_chk@plt+0x31eef>
   3c805:	test   eax,eax
   3c807:	jne    3c829 <__sprintf_chk@plt+0x31e79>
   3c809:	mov    rax,QWORD PTR [rsp+0x10]
   3c80e:	test   rax,rax
   3c811:	je     3c89f <__sprintf_chk@plt+0x31eef>
   3c817:	cmp    r15,rax
   3c81a:	je     3c829 <__sprintf_chk@plt+0x31e79>
   3c81c:	mov    rdi,r15
   3c81f:	call   9ce0 <free@plt>
   3c824:	jmp    3c6d8 <__sprintf_chk@plt+0x31d28>
   3c829:	mov    rax,QWORD PTR [rip+0x42cd8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   3c830:	test   rax,rax
   3c833:	je     3c837 <__sprintf_chk@plt+0x31e87>
   3c835:	call   rax
   3c837:	mov    rdi,QWORD PTR [rsp+0x8]
   3c83c:	lea    rax,[rip+0x3eb0d]        # 7b350 <_obstack_memory_used@@Base+0x2e6d0>
   3c843:	mov    edx,0x5
   3c848:	mov    rsi,QWORD PTR [rax+rdi*8]
   3c84c:	xor    edi,edi
   3c84e:	call   a040 <dcgettext@plt>
   3c853:	mov    rcx,r15
   3c856:	xor    esi,esi
   3c858:	xor    edi,edi
   3c85a:	mov    rdx,rax
   3c85d:	xor    eax,eax
   3c85f:	call   a640 <error@plt>
   3c864:	jmp    3c6d8 <__sprintf_chk@plt+0x31d28>
   3c869:	xor    edi,edi
   3c86b:	xor    r8d,r8d
   3c86e:	lea    rcx,[rip+0xffffffffffffc07b]        # 388f0 <__sprintf_chk@plt+0x2df40>
   3c875:	xor    esi,esi
   3c877:	lea    rdx,[rip+0xffffffffffffb6d2]        # 37f50 <__sprintf_chk@plt+0x2d5a0>
   3c87e:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   3c883:	mov    rdi,QWORD PTR [rsp+0x8]
   3c888:	mov    r14,rax
   3c88b:	lea    rax,[rip+0x4269e]        # 7ef30 <obstack_alloc_failed_handler@@Base+0xf8>
   3c892:	mov    QWORD PTR [rax+rdi*8],r14
   3c896:	test   r14,r14
   3c899:	jne    3c7ec <__sprintf_chk@plt+0x31e3c>
   3c89f:	call   19130 <__sprintf_chk@plt+0xe780>
   3c8a4:	call   a0a0 <__stack_chk_fail@plt>
   3c8a9:	nop    DWORD PTR [rax+0x0]
   3c8b0:	endbr64 
   3c8b4:	push   r14
   3c8b6:	lea    r14,[rip+0x401a3]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   3c8bd:	push   r13
   3c8bf:	movsxd r13,edi
   3c8c2:	mov    rdi,rsi
   3c8c5:	push   r12
   3c8c7:	push   rbp
   3c8c8:	mov    rbp,rsi
   3c8cb:	push   rbx
   3c8cc:	call   a060 <strlen@plt>
   3c8d1:	mov    esi,0x1
   3c8d6:	mov    edi,0xd
   3c8db:	mov    rbx,rax
   3c8de:	call   a330 <signal@plt>
   3c8e3:	mov    edi,DWORD PTR [r14+r13*8+0x4]
   3c8e8:	mov    rsi,rbp
   3c8eb:	mov    rdx,rbx
   3c8ee:	mov    r12,rax
   3c8f1:	call   48b10 <argp_usage@@Base+0x5790>
   3c8f6:	mov    rsi,r12
   3c8f9:	mov    edi,0xd
   3c8fe:	mov    rbp,rax
   3c901:	call   a330 <signal@plt>
   3c906:	xor    eax,eax
   3c908:	cmp    rbp,rbx
   3c90b:	jne    3c920 <__sprintf_chk@plt+0x31f70>
   3c90d:	pop    rbx
   3c90e:	pop    rbp
   3c90f:	pop    r12
   3c911:	pop    r13
   3c913:	pop    r14
   3c915:	ret    
   3c916:	cs nop WORD PTR [rax+rax*1+0x0]
   3c920:	lea    rbx,[rip+0x40119]        # 7ca40 <_obstack_memory_used@@Base+0x2fdc0>
   3c927:	mov    edi,DWORD PTR [rbx+r13*8]
   3c92b:	call   a200 <close@plt>
   3c930:	mov    edi,DWORD PTR [r14+r13*8+0x4]
   3c935:	call   a200 <close@plt>
   3c93a:	mov    DWORD PTR [rbx+r13*8],0xffffffff
   3c942:	mov    DWORD PTR [r14+r13*8+0x4],0xffffffff
   3c94b:	call   9e40 <__errno_location@plt>
   3c950:	mov    DWORD PTR [rax],0x5
   3c956:	mov    eax,0xffffffff
   3c95b:	jmp    3c90d <__sprintf_chk@plt+0x31f5d>
   3c95d:	nop    DWORD PTR [rax]
   3c960:	endbr64 
   3c964:	push   r15
   3c966:	push   r14
   3c968:	lea    r14,[rip+0x400d1]        # 7ca40 <_obstack_memory_used@@Base+0x2fdc0>
   3c96f:	push   r13
   3c971:	lea    r13,[rsi+0x40]
   3c975:	push   r12
   3c977:	movsxd r12,edi
   3c97a:	push   rbp
   3c97b:	mov    rbp,rsi
   3c97e:	push   rbx
   3c97f:	mov    rbx,rsi
   3c982:	sub    rsp,0x18
   3c986:	mov    rax,QWORD PTR fs:0x28
   3c98f:	mov    QWORD PTR [rsp+0x8],rax
   3c994:	xor    eax,eax
   3c996:	jmp    3c9b2 <__sprintf_chk@plt+0x32002>
   3c998:	nop    DWORD PTR [rax+rax*1+0x0]
   3c9a0:	cmp    BYTE PTR [rbx],0xa
   3c9a3:	je     3ca30 <__sprintf_chk@plt+0x32080>
   3c9a9:	add    rbx,0x1
   3c9ad:	cmp    rbx,r13
   3c9b0:	je     3c9c9 <__sprintf_chk@plt+0x32019>
   3c9b2:	mov    edi,DWORD PTR [r14+r12*8]
   3c9b6:	mov    edx,0x1
   3c9bb:	mov    rsi,rbx
   3c9be:	call   4b7c0 <argp_usage@@Base+0x8440>
   3c9c3:	cmp    rax,0x1
   3c9c7:	je     3c9a0 <__sprintf_chk@plt+0x31ff0>
   3c9c9:	mov    edi,DWORD PTR [r14+r12*8]
   3c9cd:	lea    rbx,[rip+0x4008c]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   3c9d4:	xor    r13d,r13d
   3c9d7:	call   a200 <close@plt>
   3c9dc:	mov    edi,DWORD PTR [rbx+r12*8+0x4]
   3c9e1:	call   a200 <close@plt>
   3c9e6:	mov    DWORD PTR [r14+r12*8],0xffffffff
   3c9ee:	mov    DWORD PTR [rbx+r12*8+0x4],0xffffffff
   3c9f7:	call   9e40 <__errno_location@plt>
   3c9fc:	mov    DWORD PTR [rax],0x5
   3ca02:	mov    rax,QWORD PTR [rsp+0x8]
   3ca07:	sub    rax,QWORD PTR fs:0x28
   3ca10:	jne    3caeb <__sprintf_chk@plt+0x3213b>
   3ca16:	add    rsp,0x18
   3ca1a:	mov    rax,r13
   3ca1d:	pop    rbx
   3ca1e:	pop    rbp
   3ca1f:	pop    r12
   3ca21:	pop    r13
   3ca23:	pop    r14
   3ca25:	pop    r15
   3ca27:	ret    
   3ca28:	nop    DWORD PTR [rax+rax*1+0x0]
   3ca30:	mov    BYTE PTR [rbx],0x0
   3ca33:	movzx  eax,BYTE PTR [rbp+0x0]
   3ca37:	test   al,al
   3ca39:	jne    3ca50 <__sprintf_chk@plt+0x320a0>
   3ca3b:	jmp    3c9c9 <__sprintf_chk@plt+0x32019>
   3ca3d:	nop    DWORD PTR [rax]
   3ca40:	movzx  eax,BYTE PTR [rbp+0x1]
   3ca44:	add    rbp,0x1
   3ca48:	test   al,al
   3ca4a:	je     3c9c9 <__sprintf_chk@plt+0x32019>
   3ca50:	cmp    al,0x20
   3ca52:	je     3ca40 <__sprintf_chk@plt+0x32090>
   3ca54:	lea    edx,[rax-0x45]
   3ca57:	lea    rbx,[rsp+0x7]
   3ca5c:	cmp    dl,0x1
   3ca5f:	jbe    3ca77 <__sprintf_chk@plt+0x320c7>
   3ca61:	cmp    al,0x41
   3ca63:	jne    3c9c9 <__sprintf_chk@plt+0x32019>
   3ca69:	lea    r13,[rbp+0x1]
   3ca6d:	jmp    3ca02 <__sprintf_chk@plt+0x32052>
   3ca6f:	nop
   3ca70:	cmp    BYTE PTR [rsp+0x7],0xa
   3ca75:	je     3ca8e <__sprintf_chk@plt+0x320de>
   3ca77:	mov    edi,DWORD PTR [r14+r12*8]
   3ca7b:	mov    edx,0x1
   3ca80:	mov    rsi,rbx
   3ca83:	call   4b7c0 <argp_usage@@Base+0x8440>
   3ca88:	cmp    rax,0x1
   3ca8c:	je     3ca70 <__sprintf_chk@plt+0x320c0>
   3ca8e:	call   9e40 <__errno_location@plt>
   3ca93:	xor    esi,esi
   3ca95:	lea    rdi,[rbp+0x1]
   3ca99:	mov    edx,0xa
   3ca9e:	mov    rbx,rax
   3caa1:	xor    r13d,r13d
   3caa4:	call   a410 <strtol@plt>
   3caa9:	mov    DWORD PTR [rbx],eax
   3caab:	cmp    BYTE PTR [rbp+0x0],0x46
   3caaf:	mov    r15,rax
   3cab2:	jne    3ca02 <__sprintf_chk@plt+0x32052>
   3cab8:	mov    edi,DWORD PTR [r14+r12*8]
   3cabc:	lea    rbp,[rip+0x3ff9d]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   3cac3:	call   a200 <close@plt>
   3cac8:	mov    edi,DWORD PTR [rbp+r12*8+0x4]
   3cacd:	call   a200 <close@plt>
   3cad2:	mov    DWORD PTR [r14+r12*8],0xffffffff
   3cada:	mov    DWORD PTR [rbp+r12*8+0x4],0xffffffff
   3cae3:	mov    DWORD PTR [rbx],r15d
   3cae6:	jmp    3ca02 <__sprintf_chk@plt+0x32052>
   3caeb:	call   a0a0 <__stack_chk_fail@plt>
   3caf0:	endbr64 
   3caf4:	push   r15
   3caf6:	lea    rsi,[rip+0x2f1f0]        # 6bced <_obstack_memory_used@@Base+0x1f06d>
   3cafd:	push   r14
   3caff:	push   r13
   3cb01:	push   r12
   3cb03:	push   rbp
   3cb04:	push   rbx
   3cb05:	movsxd rbx,edi
   3cb08:	mov    edi,ebx
   3cb0a:	sub    rsp,0x58
   3cb0e:	mov    rax,QWORD PTR fs:0x28
   3cb17:	mov    QWORD PTR [rsp+0x48],rax
   3cb1c:	xor    eax,eax
   3cb1e:	call   3c8b0 <__sprintf_chk@plt+0x31f00>
   3cb23:	cmp    eax,0xffffffff
   3cb26:	je     3cbf0 <__sprintf_chk@plt+0x32240>
   3cb2c:	mov    rsi,rsp
   3cb2f:	mov    edi,ebx
   3cb31:	call   3c960 <__sprintf_chk@plt+0x31fb0>
   3cb36:	mov    r12,rax
   3cb39:	call   9e40 <__errno_location@plt>
   3cb3e:	mov    rbp,rax
   3cb41:	test   r12,r12
   3cb44:	je     3cbd8 <__sprintf_chk@plt+0x32228>
   3cb4a:	mov    rdi,r12
   3cb4d:	mov    edx,0xa
   3cb52:	xor    esi,esi
   3cb54:	call   a410 <strtol@plt>
   3cb59:	mov    r12,rax
   3cb5c:	test   rax,rax
   3cb5f:	js     3cbc0 <__sprintf_chk@plt+0x32210>
   3cb61:	mov    r13d,DWORD PTR [rbp+0x0]
   3cb65:	lea    r15,[rip+0x3fed4]        # 7ca40 <_obstack_memory_used@@Base+0x2fdc0>
   3cb6c:	lea    r14,[rip+0x3feed]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   3cb73:	mov    edi,DWORD PTR [r15+rbx*8]
   3cb77:	call   a200 <close@plt>
   3cb7c:	mov    edi,DWORD PTR [r14+rbx*8+0x4]
   3cb81:	call   a200 <close@plt>
   3cb86:	mov    DWORD PTR [r15+rbx*8],0xffffffff
   3cb8e:	mov    DWORD PTR [r14+rbx*8+0x4],0xffffffff
   3cb97:	mov    DWORD PTR [rbp+0x0],r13d
   3cb9b:	mov    rax,QWORD PTR [rsp+0x48]
   3cba0:	sub    rax,QWORD PTR fs:0x28
   3cba9:	jne    3cbf5 <__sprintf_chk@plt+0x32245>
   3cbab:	add    rsp,0x58
   3cbaf:	mov    eax,r12d
   3cbb2:	pop    rbx
   3cbb3:	pop    rbp
   3cbb4:	pop    r12
   3cbb6:	pop    r13
   3cbb8:	pop    r14
   3cbba:	pop    r15
   3cbbc:	ret    
   3cbbd:	nop    DWORD PTR [rax]
   3cbc0:	mov    DWORD PTR [rbp+0x0],0x5
   3cbc7:	mov    r12d,0xffffffff
   3cbcd:	mov    r13d,0x5
   3cbd3:	jmp    3cb65 <__sprintf_chk@plt+0x321b5>
   3cbd5:	nop    DWORD PTR [rax]
   3cbd8:	mov    r13d,DWORD PTR [rax]
   3cbdb:	mov    r12d,0xffffffff
   3cbe1:	jmp    3cb65 <__sprintf_chk@plt+0x321b5>
   3cbe6:	cs nop WORD PTR [rax+rax*1+0x0]
   3cbf0:	mov    r12d,eax
   3cbf3:	jmp    3cb9b <__sprintf_chk@plt+0x321eb>
   3cbf5:	call   a0a0 <__stack_chk_fail@plt>
   3cbfa:	nop    WORD PTR [rax+rax*1+0x0]
   3cc00:	endbr64 
   3cc04:	push   r15
   3cc06:	mov    r8,rdx
   3cc09:	lea    rcx,[rip+0x2f0e0]        # 6bcf0 <_obstack_memory_used@@Base+0x1f070>
   3cc10:	push   r14
   3cc12:	movsxd r14,edi
   3cc15:	push   r13
   3cc17:	push   r12
   3cc19:	push   rbp
   3cc1a:	mov    rbp,rsi
   3cc1d:	mov    esi,0x1
   3cc22:	push   rbx
   3cc23:	mov    rbx,rdx
   3cc26:	mov    edx,0x40
   3cc2b:	sub    rsp,0x98
   3cc32:	mov    rax,QWORD PTR fs:0x28
   3cc3b:	mov    QWORD PTR [rsp+0x88],rax
   3cc43:	xor    eax,eax
   3cc45:	mov    r12,rsp
   3cc48:	mov    rdi,r12
   3cc4b:	call   a9b0 <__sprintf_chk@plt>
   3cc50:	mov    rsi,r12
   3cc53:	mov    edi,r14d
   3cc56:	call   3c8b0 <__sprintf_chk@plt+0x31f00>
   3cc5b:	cmp    eax,0xffffffff
   3cc5e:	je     3cd50 <__sprintf_chk@plt+0x323a0>
   3cc64:	mov    edi,r14d
   3cc67:	lea    rsi,[rsp+0x40]
   3cc6c:	call   3c960 <__sprintf_chk@plt+0x31fb0>
   3cc71:	mov    rdi,rax
   3cc74:	test   rax,rax
   3cc77:	je     3cd50 <__sprintf_chk@plt+0x323a0>
   3cc7d:	mov    edx,0xa
   3cc82:	xor    esi,esi
   3cc84:	call   a410 <strtol@plt>
   3cc89:	mov    r12,rax
   3cc8c:	test   rax,rax
   3cc8f:	js     3cd44 <__sprintf_chk@plt+0x32394>
   3cc95:	mov    r13,rax
   3cc98:	cmp    rbx,rax
   3cc9b:	jb     3cd50 <__sprintf_chk@plt+0x323a0>
   3cca1:	test   rax,rax
   3cca4:	je     3cd1c <__sprintf_chk@plt+0x3236c>
   3cca6:	xor    ebx,ebx
   3cca8:	lea    r15,[rip+0x3fd91]        # 7ca40 <_obstack_memory_used@@Base+0x2fdc0>
   3ccaf:	jmp    3ccc3 <__sprintf_chk@plt+0x32313>
   3ccb1:	nop    DWORD PTR [rax+0x0]
   3ccb8:	add    rbx,rax
   3ccbb:	add    rbp,rax
   3ccbe:	cmp    r12,rbx
   3ccc1:	jbe    3cd1c <__sprintf_chk@plt+0x3236c>
   3ccc3:	mov    edi,DWORD PTR [r15+r14*8]
   3ccc7:	mov    rdx,r12
   3ccca:	mov    rsi,rbp
   3cccd:	sub    rdx,rbx
   3ccd0:	call   4b7c0 <argp_usage@@Base+0x8440>
   3ccd5:	lea    rdx,[rax-0x1]
   3ccd9:	cmp    rdx,0xfffffffffffffffd
   3ccdd:	jbe    3ccb8 <__sprintf_chk@plt+0x32308>
   3ccdf:	mov    edi,DWORD PTR [r15+r14*8]
   3cce3:	lea    rbx,[rip+0x3fd76]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   3ccea:	mov    r13,0xffffffffffffffff
   3ccf1:	call   a200 <close@plt>
   3ccf6:	mov    edi,DWORD PTR [rbx+r14*8+0x4]
   3ccfb:	call   a200 <close@plt>
   3cd00:	mov    DWORD PTR [r15+r14*8],0xffffffff
   3cd08:	mov    DWORD PTR [rbx+r14*8+0x4],0xffffffff
   3cd11:	call   9e40 <__errno_location@plt>
   3cd16:	mov    DWORD PTR [rax],0x5
   3cd1c:	mov    rax,QWORD PTR [rsp+0x88]
   3cd24:	sub    rax,QWORD PTR fs:0x28
   3cd2d:	jne    3cd59 <__sprintf_chk@plt+0x323a9>
   3cd2f:	add    rsp,0x98
   3cd36:	mov    rax,r13
   3cd39:	pop    rbx
   3cd3a:	pop    rbp
   3cd3b:	pop    r12
   3cd3d:	pop    r13
   3cd3f:	pop    r14
   3cd41:	pop    r15
   3cd43:	ret    
   3cd44:	call   9e40 <__errno_location@plt>
   3cd49:	mov    DWORD PTR [rax],0x5
   3cd4f:	nop
   3cd50:	mov    r13,0xffffffffffffffff
   3cd57:	jmp    3cd1c <__sprintf_chk@plt+0x3236c>
   3cd59:	call   a0a0 <__stack_chk_fail@plt>
   3cd5e:	xchg   ax,ax
   3cd60:	endbr64 
   3cd64:	push   r12
   3cd66:	mov    rcx,rsi
   3cd69:	mov    r11,rsi
   3cd6c:	mov    r9d,edx
   3cd6f:	push   rbp
   3cd70:	mov    ebp,edi
   3cd72:	movabs rdi,0xcccccccccccccccd
   3cd7c:	sub    rsp,0xb8
   3cd83:	mov    rax,QWORD PTR fs:0x28
   3cd8c:	mov    QWORD PTR [rsp+0xa8],rax
   3cd94:	xor    eax,eax
   3cd96:	neg    rcx
   3cd99:	mov    BYTE PTR [rsp+0x14],0x0
   3cd9e:	lea    r8,[rsp+0x14]
   3cda3:	cmovs  rcx,rsi
   3cda7:	nop    WORD PTR [rax+rax*1+0x0]
   3cdb0:	mov    rax,rcx
   3cdb3:	mov    r10,r8
   3cdb6:	sub    r8,0x1
   3cdba:	mul    rdi
   3cdbd:	mov    rax,rcx
   3cdc0:	shr    rdx,0x3
   3cdc4:	lea    rsi,[rdx+rdx*4]
   3cdc8:	add    rsi,rsi
   3cdcb:	sub    rax,rsi
   3cdce:	add    eax,0x30
   3cdd1:	mov    BYTE PTR [r8],al
   3cdd4:	mov    rax,rcx
   3cdd7:	mov    rcx,rdx
   3cdda:	cmp    rax,0x9
   3cdde:	ja     3cdb0 <__sprintf_chk@plt+0x32400>
   3cde0:	test   r11,r11
   3cde3:	jns    3cdee <__sprintf_chk@plt+0x3243e>
   3cde5:	mov    BYTE PTR [r8-0x1],0x2d
   3cdea:	lea    r8,[r10-0x2]
   3cdee:	lea    r12,[rsp+0x20]
   3cdf3:	mov    esi,0x1
   3cdf8:	xor    eax,eax
   3cdfa:	mov    edx,0x40
   3cdff:	mov    rdi,r12
   3ce02:	lea    rcx,[rip+0x2eeed]        # 6bcf6 <_obstack_memory_used@@Base+0x1f076>
   3ce09:	call   a9b0 <__sprintf_chk@plt>
   3ce0e:	mov    rsi,r12
   3ce11:	mov    edi,ebp
   3ce13:	call   3c8b0 <__sprintf_chk@plt+0x31f00>
   3ce18:	cmp    eax,0xffffffff
   3ce1b:	je     3cea2 <__sprintf_chk@plt+0x324f2>
   3ce21:	lea    rsi,[rsp+0x60]
   3ce26:	mov    edi,ebp
   3ce28:	call   3c960 <__sprintf_chk@plt+0x31fb0>
   3ce2d:	test   rax,rax
   3ce30:	je     3cea2 <__sprintf_chk@plt+0x324f2>
   3ce32:	movzx  esi,BYTE PTR [rax]
   3ce35:	cmp    sil,0x20
   3ce39:	je     3ced0 <__sprintf_chk@plt+0x32520>
   3ce3f:	cmp    sil,0x9
   3ce43:	je     3ced0 <__sprintf_chk@plt+0x32520>
   3ce49:	lea    edx,[rsi-0x2b]
   3ce4c:	and    edx,0xfffffffd
   3ce4f:	cmp    dl,0x1
   3ce52:	adc    rax,0x0
   3ce56:	xor    r8d,r8d
   3ce59:	lea    rcx,[rax+0x1]
   3ce5d:	movsx  eax,BYTE PTR [rax]
   3ce60:	sub    eax,0x30
   3ce63:	cmp    eax,0x9
   3ce66:	jbe    3ce88 <__sprintf_chk@plt+0x324d8>
   3ce68:	jmp    3cea9 <__sprintf_chk@plt+0x324f9>
   3ce6a:	nop    WORD PTR [rax+rax*1+0x0]
   3ce70:	lea    r8,[rdx+rax*1]
   3ce74:	cmp    rdx,r8
   3ce77:	jg     3cea2 <__sprintf_chk@plt+0x324f2>
   3ce79:	movsx  eax,BYTE PTR [rcx]
   3ce7c:	add    rcx,0x1
   3ce80:	sub    eax,0x30
   3ce83:	cmp    eax,0x9
   3ce86:	ja     3cea9 <__sprintf_chk@plt+0x324f9>
   3ce88:	lea    rdx,[r8+r8*4]
   3ce8c:	cdqe   
   3ce8e:	add    rdx,rdx
   3ce91:	cmp    sil,0x2d
   3ce95:	jne    3ce70 <__sprintf_chk@plt+0x324c0>
   3ce97:	mov    r8,rdx
   3ce9a:	sub    r8,rax
   3ce9d:	cmp    rdx,r8
   3cea0:	jge    3ce79 <__sprintf_chk@plt+0x324c9>
   3cea2:	mov    r8,0xffffffffffffffff
   3cea9:	mov    rax,QWORD PTR [rsp+0xa8]
   3ceb1:	sub    rax,QWORD PTR fs:0x28
   3ceba:	jne    3ced9 <__sprintf_chk@plt+0x32529>
   3cebc:	add    rsp,0xb8
   3cec3:	mov    rax,r8
   3cec6:	pop    rbp
   3cec7:	pop    r12
   3cec9:	ret    
   3ceca:	nop    WORD PTR [rax+rax*1+0x0]
   3ced0:	add    rax,0x1
   3ced4:	jmp    3ce32 <__sprintf_chk@plt+0x32482>
   3ced9:	call   a0a0 <__stack_chk_fail@plt>
   3cede:	xchg   ax,ax
   3cee0:	endbr64 
   3cee4:	push   r12
   3cee6:	mov    r12,rdi
   3cee9:	push   rbp
   3ceea:	push   rbx
   3ceeb:	mov    rbx,QWORD PTR [rdi+0xd0]
   3cef2:	test   rbx,rbx
   3cef5:	jne    3cf0d <__sprintf_chk@plt+0x3255d>
   3cef7:	jmp    3cf30 <__sprintf_chk@plt+0x32580>
   3cef9:	nop    DWORD PTR [rax+0x0]
   3cf00:	mov    rdi,rbp
   3cf03:	call   9ce0 <free@plt>
   3cf08:	test   rbx,rbx
   3cf0b:	je     3cf30 <__sprintf_chk@plt+0x32580>
   3cf0d:	mov    rbp,rbx
   3cf10:	mov    rbx,QWORD PTR [rbx+0x8]
   3cf14:	test   BYTE PTR [rbp+0x10],0x2
   3cf18:	je     3cf00 <__sprintf_chk@plt+0x32550>
   3cf1a:	mov    rdi,QWORD PTR [rbp+0x18]
   3cf1e:	call   9ce0 <free@plt>
   3cf23:	mov    rdi,rbp
   3cf26:	call   9ce0 <free@plt>
   3cf2b:	test   rbx,rbx
   3cf2e:	jne    3cf0d <__sprintf_chk@plt+0x3255d>
   3cf30:	mov    QWORD PTR [r12+0xd8],0x0
   3cf3c:	mov    rdi,r12
   3cf3f:	mov    QWORD PTR [r12+0xd0],0x0
   3cf4b:	call   38510 <__sprintf_chk@plt+0x2db60>
   3cf50:	mov    rdi,QWORD PTR [r12+0x8]
   3cf55:	call   9ce0 <free@plt>
   3cf5a:	mov    QWORD PTR [r12+0x8],0x0
   3cf63:	test   BYTE PTR [r12+0x20],0x4
   3cf69:	jne    3cfc8 <__sprintf_chk@plt+0x32618>
   3cf6b:	mov    r8,QWORD PTR [r12+0x78]
   3cf70:	test   r8,r8
   3cf73:	je     3cfc8 <__sprintf_chk@plt+0x32618>
   3cf75:	mov    rdi,QWORD PTR [r8]
   3cf78:	test   rdi,rdi
   3cf7b:	je     3cf9f <__sprintf_chk@plt+0x325ef>
   3cf7d:	mov    ebx,0x8
   3cf82:	nop    WORD PTR [rax+rax*1+0x0]
   3cf88:	call   9ce0 <free@plt>
   3cf8d:	mov    r8,QWORD PTR [r12+0x78]
   3cf92:	mov    rdi,QWORD PTR [r8+rbx*1]
   3cf96:	add    rbx,0x8
   3cf9a:	test   rdi,rdi
   3cf9d:	jne    3cf88 <__sprintf_chk@plt+0x325d8>
   3cf9f:	mov    rdi,r8
   3cfa2:	call   9ce0 <free@plt>
   3cfa7:	mov    QWORD PTR [r12+0x88],0x0
   3cfb3:	mov    QWORD PTR [r12+0x80],0x0
   3cfbf:	mov    QWORD PTR [r12+0x78],0x0
   3cfc8:	pop    rbx
   3cfc9:	pop    rbp
   3cfca:	pop    r12
   3cfcc:	ret    
   3cfcd:	nop    DWORD PTR [rax]
   3cfd0:	push   r12
   3cfd2:	mov    r12,rdi
   3cfd5:	push   rbp
   3cfd6:	push   rbx
   3cfd7:	call   9e40 <__errno_location@plt>
   3cfdc:	mov    DWORD PTR [rax],0xc
   3cfe2:	mov    eax,DWORD PTR [r12+0x20]
   3cfe7:	mov    DWORD PTR [r12+0xc0],0x2
   3cff3:	test   al,0x80
   3cff5:	je     3d004 <__sprintf_chk@plt+0x32654>
   3cff7:	mov    rdi,r12
   3cffa:	call   QWORD PTR [r12+0x58]
   3cfff:	mov    eax,DWORD PTR [r12+0x20]
   3d004:	test   al,0x10
   3d006:	jne    3d078 <__sprintf_chk@plt+0x326c8>
   3d008:	test   al,0x8
   3d00a:	je     3d089 <__sprintf_chk@plt+0x326d9>
   3d00c:	mov    rbx,QWORD PTR [r12+0xd0]
   3d014:	test   rbx,rbx
   3d017:	jne    3d02d <__sprintf_chk@plt+0x3267d>
   3d019:	jmp    3d050 <__sprintf_chk@plt+0x326a0>
   3d01b:	nop    DWORD PTR [rax+rax*1+0x0]
   3d020:	mov    rdi,rbp
   3d023:	call   9ce0 <free@plt>
   3d028:	test   rbx,rbx
   3d02b:	je     3d050 <__sprintf_chk@plt+0x326a0>
   3d02d:	mov    rbp,rbx
   3d030:	mov    rbx,QWORD PTR [rbx+0x8]
   3d034:	test   BYTE PTR [rbp+0x10],0x2
   3d038:	je     3d020 <__sprintf_chk@plt+0x32670>
   3d03a:	mov    rdi,QWORD PTR [rbp+0x18]
   3d03e:	call   9ce0 <free@plt>
   3d043:	mov    rdi,rbp
   3d046:	call   9ce0 <free@plt>
   3d04b:	test   rbx,rbx
   3d04e:	jne    3d02d <__sprintf_chk@plt+0x3267d>
   3d050:	mov    eax,DWORD PTR [r12+0xc0]
   3d058:	pop    rbx
   3d059:	mov    QWORD PTR [r12+0xd8],0x0
   3d065:	mov    QWORD PTR [r12+0xd0],0x0
   3d071:	pop    rbp
   3d072:	pop    r12
   3d074:	ret    
   3d075:	nop    DWORD PTR [rax]
   3d078:	mov    rdi,r12
   3d07b:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   3d080:	mov    eax,DWORD PTR [r12+0x20]
   3d085:	test   al,0x8
   3d087:	jne    3d00c <__sprintf_chk@plt+0x3265c>
   3d089:	mov    rdi,r12
   3d08c:	call   3cee0 <__sprintf_chk@plt+0x32530>
   3d091:	jmp    3d00c <__sprintf_chk@plt+0x3265c>
   3d096:	cs nop WORD PTR [rax+rax*1+0x0]
   3d0a0:	push   r14
   3d0a2:	mov    r14,rdi
   3d0a5:	push   r13
   3d0a7:	mov    r13,rsi
   3d0aa:	push   r12
   3d0ac:	mov    r12,rdx
   3d0af:	push   rbp
   3d0b0:	mov    ebp,ecx
   3d0b2:	push   rbx
   3d0b3:	cmp    rdx,rsi
   3d0b6:	jne    3d0c1 <__sprintf_chk@plt+0x32711>
   3d0b8:	mov    eax,ecx
   3d0ba:	and    eax,0x100
   3d0bf:	je     3d10d <__sprintf_chk@plt+0x3275d>
   3d0c1:	mov    esi,0x28
   3d0c6:	mov    edi,0x1
   3d0cb:	call   a2f0 <calloc@plt>
   3d0d0:	mov    rbx,rax
   3d0d3:	test   rax,rax
   3d0d6:	je     3d129 <__sprintf_chk@plt+0x32779>
   3d0d8:	mov    rax,QWORD PTR [r14+0xd8]
   3d0df:	and    ebp,0xfffffefd
   3d0e5:	mov    QWORD PTR [rbx+0x18],r13
   3d0e9:	mov    DWORD PTR [rbx+0x10],ebp
   3d0ec:	mov    QWORD PTR [rbx+0x20],r12
   3d0f0:	mov    QWORD PTR [rbx+0x8],0x0
   3d0f8:	mov    QWORD PTR [rbx],rax
   3d0fb:	test   rax,rax
   3d0fe:	je     3d120 <__sprintf_chk@plt+0x32770>
   3d100:	mov    QWORD PTR [rax+0x8],rbx
   3d104:	mov    QWORD PTR [r14+0xd8],rbx
   3d10b:	xor    eax,eax
   3d10d:	pop    rbx
   3d10e:	pop    rbp
   3d10f:	pop    r12
   3d111:	pop    r13
   3d113:	pop    r14
   3d115:	ret    
   3d116:	cs nop WORD PTR [rax+rax*1+0x0]
   3d120:	mov    QWORD PTR [r14+0xd0],rbx
   3d127:	jmp    3d104 <__sprintf_chk@plt+0x32754>
   3d129:	mov    rdi,r14
   3d12c:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3d131:	test   eax,eax
   3d133:	jne    3d10d <__sprintf_chk@plt+0x3275d>
   3d135:	jmp    3d0d8 <__sprintf_chk@plt+0x32728>
   3d137:	nop    WORD PTR [rax+rax*1+0x0]
   3d140:	push   r15
   3d142:	push   r14
   3d144:	push   r13
   3d146:	push   r12
   3d148:	push   rbp
   3d149:	mov    rbp,rdi
   3d14c:	push   rbx
   3d14d:	sub    rsp,0x38
   3d151:	mov    r12,QWORD PTR [rdi+0xb0]
   3d158:	mov    rbx,QWORD PTR [rdi+0xa8]
   3d15f:	mov    DWORD PTR [rsp+0x8],edx
   3d163:	mov    r13,QWORD PTR [rdi+0x40]
   3d167:	mov    rax,QWORD PTR fs:0x28
   3d170:	mov    QWORD PTR [rsp+0x28],rax
   3d175:	xor    eax,eax
   3d177:	mov    rax,QWORD PTR [rdi+0xd8]
   3d17e:	mov    QWORD PTR [rsp+0x20],rsi
   3d183:	mov    QWORD PTR [rsp],rax
   3d187:	cmp    r12,rsi
   3d18a:	jbe    3d3c0 <__sprintf_chk@plt+0x32a10>
   3d190:	mov    edx,DWORD PTR [rdi+0x20]
   3d193:	mov    r14,rsi
   3d196:	test   dh,0x20
   3d199:	je     3d1a5 <__sprintf_chk@plt+0x327f5>
   3d19b:	cmp    BYTE PTR [rbx+rsi*1],0x73
   3d19f:	je     3d510 <__sprintf_chk@plt+0x32b60>
   3d1a5:	mov    edi,DWORD PTR [rsp+0x8]
   3d1a9:	mov    DWORD PTR [rsp+0xc],edx
   3d1ad:	test   edi,edi
   3d1af:	je     3d2c0 <__sprintf_chk@plt+0x32910>
   3d1b5:	mov    QWORD PTR [rsp+0x10],r14
   3d1ba:	mov    DWORD PTR [rsp+0xc],0x0
   3d1c2:	lea    rax,[rsp+0x20]
   3d1c7:	mov    QWORD PTR [rsp+0x18],rax
   3d1cc:	jmp    3d201 <__sprintf_chk@plt+0x32851>
   3d1ce:	xchg   ax,ax
   3d1d0:	mov    ecx,DWORD PTR [rsp+0x8]
   3d1d4:	test   ecx,ecx
   3d1d6:	jne    3d1ef <__sprintf_chk@plt+0x3283f>
   3d1d8:	movsx  esi,BYTE PTR [rbx+r15*1]
   3d1dd:	mov    rdi,QWORD PTR [rbp+0x38]
   3d1e1:	call   a0f0 <strchr@plt>
   3d1e6:	test   rax,rax
   3d1e9:	jne    3d385 <__sprintf_chk@plt+0x329d5>
   3d1ef:	lea    r14,[r15+0x1]
   3d1f3:	mov    QWORD PTR [rsp+0x20],r14
   3d1f8:	cmp    r12,r14
   3d1fb:	jbe    3d6c8 <__sprintf_chk@plt+0x32d18>
   3d201:	test   r13,r13
   3d204:	je     3d21c <__sprintf_chk@plt+0x3286c>
   3d206:	movsx  esi,BYTE PTR [rbx+r14*1]
   3d20b:	mov    rdi,r13
   3d20e:	call   a0f0 <strchr@plt>
   3d213:	test   rax,rax
   3d216:	jne    3d6ff <__sprintf_chk@plt+0x32d4f>
   3d21c:	mov    eax,DWORD PTR [rbp+0x20]
   3d21f:	test   ah,0x6
   3d222:	je     3d250 <__sprintf_chk@plt+0x328a0>
   3d224:	movzx  edx,BYTE PTR [rbx+r14*1]
   3d229:	cmp    dl,0x5c
   3d22c:	je     3d368 <__sprintf_chk@plt+0x329b8>
   3d232:	test   ah,0x2
   3d235:	je     3d240 <__sprintf_chk@plt+0x32890>
   3d237:	cmp    dl,0x27
   3d23a:	je     3d400 <__sprintf_chk@plt+0x32a50>
   3d240:	test   ah,0x4
   3d243:	je     3d250 <__sprintf_chk@plt+0x328a0>
   3d245:	cmp    dl,0x22
   3d248:	je     3d400 <__sprintf_chk@plt+0x32a50>
   3d24e:	xchg   ax,ax
   3d250:	mov    r15,QWORD PTR [rsp+0x20]
   3d255:	cmp    BYTE PTR [rbx+r15*1],0x24
   3d25a:	jne    3d1d0 <__sprintf_chk@plt+0x32820>
   3d260:	mov    r11d,DWORD PTR [rbp+0x20]
   3d264:	test   r11b,0x40
   3d268:	jne    3d276 <__sprintf_chk@plt+0x328c6>
   3d26a:	cmp    BYTE PTR [rbx+r15*1+0x1],0x7b
   3d270:	je     3d698 <__sprintf_chk@plt+0x32ce8>
   3d276:	and    r11d,0x4
   3d27a:	jne    3d1d0 <__sprintf_chk@plt+0x32820>
   3d280:	cmp    BYTE PTR [rbx+r15*1+0x1],0x28
   3d286:	jne    3d1d0 <__sprintf_chk@plt+0x32820>
   3d28c:	mov    rcx,QWORD PTR [rsp+0x18]
   3d291:	lea    rsi,[r15+0x2]
   3d295:	mov    rdx,r12
   3d298:	mov    rdi,rbx
   3d29b:	lea    r8,[rip+0x2ea5f]        # 6bd01 <_obstack_memory_used@@Base+0x1f081>
   3d2a2:	call   38100 <__sprintf_chk@plt+0x2d750>
   3d2a7:	mov    r15,QWORD PTR [rsp+0x20]
   3d2ac:	test   eax,eax
   3d2ae:	jne    3d1d0 <__sprintf_chk@plt+0x32820>
   3d2b4:	mov    r14,r15
   3d2b7:	jmp    3d1f8 <__sprintf_chk@plt+0x32848>
   3d2bc:	nop    DWORD PTR [rax+0x0]
   3d2c0:	movsx  esi,BYTE PTR [rbx+r14*1]
   3d2c5:	mov    rdi,QWORD PTR [rbp+0x38]
   3d2c9:	call   a0f0 <strchr@plt>
   3d2ce:	mov    edx,DWORD PTR [rsp+0xc]
   3d2d2:	test   rax,rax
   3d2d5:	je     3d680 <__sprintf_chk@plt+0x32cd0>
   3d2db:	movabs rax,0x8000001000
   3d2e5:	and    rax,QWORD PTR [rbp+0x20]
   3d2e9:	je     3d5b0 <__sprintf_chk@plt+0x32c00>
   3d2ef:	lea    r15,[r14+0x1]
   3d2f3:	mov    QWORD PTR [rsp+0x10],r14
   3d2f8:	mov    QWORD PTR [rsp+0x20],r15
   3d2fd:	mov    DWORD PTR [rsp+0xc],0x40
   3d305:	nop    DWORD PTR [rax]
   3d308:	mov    ecx,DWORD PTR [rsp+0xc]
   3d30c:	mov    rsi,QWORD PTR [rsp+0x10]
   3d311:	mov    rdx,r15
   3d314:	mov    rdi,rbp
   3d317:	call   3d0a0 <__sprintf_chk@plt+0x326f0>
   3d31c:	test   eax,eax
   3d31e:	jne    3d3f3 <__sprintf_chk@plt+0x32a43>
   3d324:	mov    QWORD PTR [rbp+0xb8],r15
   3d32b:	test   BYTE PTR [rbp+0x23],0x20
   3d32f:	jne    3d342 <__sprintf_chk@plt+0x32992>
   3d331:	mov    eax,DWORD PTR [rsp+0x8]
   3d335:	test   eax,eax
   3d337:	jne    3d4e0 <__sprintf_chk@plt+0x32b30>
   3d33d:	mov    eax,0x1
   3d342:	mov    rdx,QWORD PTR [rsp+0x28]
   3d347:	sub    rdx,QWORD PTR fs:0x28
   3d350:	jne    3d75b <__sprintf_chk@plt+0x32dab>
   3d356:	add    rsp,0x38
   3d35a:	pop    rbx
   3d35b:	pop    rbp
   3d35c:	pop    r12
   3d35e:	pop    r13
   3d360:	pop    r14
   3d362:	pop    r15
   3d364:	ret    
   3d365:	nop    DWORD PTR [rax]
   3d368:	lea    r15,[r14+0x1]
   3d36c:	cmp    r15,r12
   3d36f:	je     3d380 <__sprintf_chk@plt+0x329d0>
   3d371:	add    r14,0x2
   3d375:	mov    QWORD PTR [rsp+0x20],r14
   3d37a:	jmp    3d1f8 <__sprintf_chk@plt+0x32848>
   3d37f:	nop
   3d380:	mov    QWORD PTR [rsp+0x20],r12
   3d385:	mov    edx,DWORD PTR [rsp+0xc]
   3d389:	test   edx,edx
   3d38b:	je     3d308 <__sprintf_chk@plt+0x32958>
   3d391:	mov    DWORD PTR [rsp+0xc],0x0
   3d399:	cmp    QWORD PTR [rsp+0x10],r15
   3d39e:	jae    3d308 <__sprintf_chk@plt+0x32958>
   3d3a4:	mov    rax,QWORD PTR [rbp+0xd8]
   3d3ab:	test   rax,rax
   3d3ae:	je     3d308 <__sprintf_chk@plt+0x32958>
   3d3b4:	or     DWORD PTR [rax+0x10],0x10
   3d3b8:	jmp    3d308 <__sprintf_chk@plt+0x32958>
   3d3bd:	nop    DWORD PTR [rax]
   3d3c0:	mov    DWORD PTR [rdi+0xc0],0x0
   3d3ca:	xor    eax,eax
   3d3cc:	jmp    3d342 <__sprintf_chk@plt+0x32992>
   3d3d1:	nop    DWORD PTR [rax+0x0]
   3d3d8:	mov    QWORD PTR [rbp+0xb8],r14
   3d3df:	mov    DWORD PTR [rbp+0xc0],0x1
   3d3e9:	test   BYTE PTR [rbp+0x20],0x10
   3d3ed:	jne    3d6d0 <__sprintf_chk@plt+0x32d20>
   3d3f3:	mov    eax,0x2
   3d3f8:	jmp    3d342 <__sprintf_chk@plt+0x32992>
   3d3fd:	nop    DWORD PTR [rax]
   3d400:	mov    esi,DWORD PTR [rsp+0xc]
   3d404:	test   esi,esi
   3d406:	jne    3d4c0 <__sprintf_chk@plt+0x32b10>
   3d40c:	mov    rsi,QWORD PTR [rsp+0x10]
   3d411:	mov    ecx,0x10
   3d416:	mov    rdx,r14
   3d419:	mov    rdi,rbp
   3d41c:	call   3d0a0 <__sprintf_chk@plt+0x326f0>
   3d421:	test   eax,eax
   3d423:	jne    3d3f3 <__sprintf_chk@plt+0x32a43>
   3d425:	mov    rsi,QWORD PTR [rbp+0xa8]
   3d42c:	mov    rdi,QWORD PTR [rbp+0xb0]
   3d433:	lea    r11,[r14+0x1]
   3d437:	movzx  ecx,BYTE PTR [rsi+r14*1]
   3d43c:	cmp    rdi,r11
   3d43f:	jbe    3d3d8 <__sprintf_chk@plt+0x32a28>
   3d441:	mov    r15,r11
   3d444:	jmp    3d46d <__sprintf_chk@plt+0x32abd>
   3d446:	cs nop WORD PTR [rax+rax*1+0x0]
   3d450:	cmp    cl,0x22
   3d453:	jne    3d460 <__sprintf_chk@plt+0x32ab0>
   3d455:	cmp    al,0x5c
   3d457:	sete   al
   3d45a:	cmp    al,0x1
   3d45c:	sbb    r15,0xffffffffffffffff
   3d460:	add    r15,0x1
   3d464:	cmp    rdi,r15
   3d467:	jbe    3d3d8 <__sprintf_chk@plt+0x32a28>
   3d46d:	movzx  eax,BYTE PTR [rsi+r15*1]
   3d472:	cmp    cl,al
   3d474:	jne    3d450 <__sprintf_chk@plt+0x32aa0>
   3d476:	cmp    cl,0x27
   3d479:	mov    rdx,r15
   3d47c:	mov    rsi,r11
   3d47f:	mov    rdi,rbp
   3d482:	sete   cl
   3d485:	movzx  ecx,cl
   3d488:	lea    ecx,[rcx*8+0x104]
   3d48f:	call   3d0a0 <__sprintf_chk@plt+0x326f0>
   3d494:	test   eax,eax
   3d496:	jne    3d3f3 <__sprintf_chk@plt+0x32a43>
   3d49c:	lea    rax,[r15+0x1]
   3d4a0:	mov    QWORD PTR [rsp+0x20],r15
   3d4a5:	mov    QWORD PTR [rsp+0x10],rax
   3d4aa:	mov    DWORD PTR [rsp+0xc],0x1
   3d4b2:	jmp    3d255 <__sprintf_chk@plt+0x328a5>
   3d4b7:	nop    WORD PTR [rax+rax*1+0x0]
   3d4c0:	mov    rax,QWORD PTR [rbp+0xd8]
   3d4c7:	test   rax,rax
   3d4ca:	je     3d40c <__sprintf_chk@plt+0x32a5c>
   3d4d0:	or     DWORD PTR [rax+0x10],0x10
   3d4d4:	jmp    3d40c <__sprintf_chk@plt+0x32a5c>
   3d4d9:	nop    DWORD PTR [rax+0x0]
   3d4e0:	cmp    QWORD PTR [rsp],0x0
   3d4e5:	je     3d6e6 <__sprintf_chk@plt+0x32d36>
   3d4eb:	nop    DWORD PTR [rax+rax*1+0x0]
   3d4f0:	mov    rax,QWORD PTR [rsp]
   3d4f4:	or     DWORD PTR [rax+0x10],0x4
   3d4f8:	mov    rax,QWORD PTR [rax+0x8]
   3d4fc:	mov    QWORD PTR [rsp],rax
   3d500:	test   rax,rax
   3d503:	jne    3d4f0 <__sprintf_chk@plt+0x32b40>
   3d505:	jmp    3d33d <__sprintf_chk@plt+0x3298d>
   3d50a:	nop    WORD PTR [rax+rax*1+0x0]
   3d510:	lea    rax,[rsi+0x3]
   3d514:	cmp    rax,r12
   3d517:	jae    3d1a5 <__sprintf_chk@plt+0x327f5>
   3d51d:	movsx  esi,BYTE PTR [rbx+rsi*1+0x1]
   3d522:	lea    rdi,[rip+0x2e33f]        # 6b868 <_obstack_memory_used@@Base+0x1ebe8>
   3d529:	mov    DWORD PTR [rsp+0xc],edx
   3d52d:	mov    r15,r14
   3d530:	call   a0f0 <strchr@plt>
   3d535:	test   rax,rax
   3d538:	je     3d6dd <__sprintf_chk@plt+0x32d2d>
   3d53e:	xchg   ax,ax
   3d540:	lea    rax,[r15+0x3]
   3d544:	cmp    r12,rax
   3d547:	jbe    3d58f <__sprintf_chk@plt+0x32bdf>
   3d549:	movsx  esi,BYTE PTR [rbx+r15*1+0x1]
   3d54f:	lea    rdi,[rip+0x2e312]        # 6b868 <_obstack_memory_used@@Base+0x1ebe8>
   3d556:	mov    r13d,esi
   3d559:	call   a0f0 <strchr@plt>
   3d55e:	test   rax,rax
   3d561:	je     3d58f <__sprintf_chk@plt+0x32bdf>
   3d563:	add    r15,0x2
   3d567:	cmp    r12,r15
   3d56a:	jbe    3d58f <__sprintf_chk@plt+0x32bdf>
   3d56c:	mov    edx,0x1
   3d571:	nop    DWORD PTR [rax+0x0]
   3d578:	movzx  eax,BYTE PTR [rbx+r15*1]
   3d57d:	cmp    al,0x5c
   3d57f:	je     3d5d0 <__sprintf_chk@plt+0x32c20>
   3d581:	cmp    r13b,al
   3d584:	je     3d5e0 <__sprintf_chk@plt+0x32c30>
   3d586:	add    r15,0x1
   3d58a:	cmp    r12,r15
   3d58d:	ja     3d578 <__sprintf_chk@plt+0x32bc8>
   3d58f:	movsxd r15,r15d
   3d592:	mov    QWORD PTR [rsp+0x10],r14
   3d597:	mov    QWORD PTR [rsp+0x20],r15
   3d59c:	mov    DWORD PTR [rsp+0xc],0x20
   3d5a4:	jmp    3d308 <__sprintf_chk@plt+0x32958>
   3d5a9:	nop    DWORD PTR [rax+0x0]
   3d5b0:	mov    eax,edx
   3d5b2:	mov    QWORD PTR [rsp+0x10],r14
   3d5b7:	mov    r15,r14
   3d5ba:	shr    eax,0xb
   3d5bd:	xor    eax,0x1
   3d5c0:	and    eax,0x1
   3d5c3:	shl    eax,0x8
   3d5c6:	mov    DWORD PTR [rsp+0xc],eax
   3d5ca:	jmp    3d308 <__sprintf_chk@plt+0x32958>
   3d5cf:	nop
   3d5d0:	add    r15,0x1
   3d5d4:	jmp    3d586 <__sprintf_chk@plt+0x32bd6>
   3d5d6:	cs nop WORD PTR [rax+rax*1+0x0]
   3d5e0:	lea    rcx,[r15+0x1]
   3d5e4:	add    edx,0x1
   3d5e7:	cmp    r12,rcx
   3d5ea:	jbe    3d74b <__sprintf_chk@plt+0x32d9b>
   3d5f0:	cmp    edx,0x3
   3d5f3:	je     3d600 <__sprintf_chk@plt+0x32c50>
   3d5f5:	mov    r15,rcx
   3d5f8:	jmp    3d578 <__sprintf_chk@plt+0x32bc8>
   3d5fd:	nop    DWORD PTR [rax]
   3d600:	movzx  eax,BYTE PTR [rbx+rcx*1]
   3d604:	cmp    r13b,al
   3d607:	je     3d753 <__sprintf_chk@plt+0x32da3>
   3d60d:	add    r15,0x2
   3d611:	jmp    3d629 <__sprintf_chk@plt+0x32c79>
   3d613:	nop    DWORD PTR [rax+rax*1+0x0]
   3d618:	movzx  eax,BYTE PTR [rbx+r15*1]
   3d61d:	lea    rdx,[r15+0x1]
   3d621:	cmp    r13b,al
   3d624:	je     3d64e <__sprintf_chk@plt+0x32c9e>
   3d626:	mov    r15,rdx
   3d629:	mov    edx,eax
   3d62b:	lea    rcx,[r15-0x1]
   3d62f:	and    edx,0xffffffdf
   3d632:	sub    edx,0x41
   3d635:	cmp    dl,0x19
   3d638:	jbe    3d641 <__sprintf_chk@plt+0x32c91>
   3d63a:	sub    eax,0x30
   3d63d:	cmp    al,0x9
   3d63f:	ja     3d64b <__sprintf_chk@plt+0x32c9b>
   3d641:	cmp    r12,r15
   3d644:	ja     3d618 <__sprintf_chk@plt+0x32c68>
   3d646:	jmp    3d58f <__sprintf_chk@plt+0x32bdf>
   3d64b:	mov    r15,rcx
   3d64e:	cmp    r12,r15
   3d651:	jbe    3d58f <__sprintf_chk@plt+0x32bdf>
   3d657:	cmp    BYTE PTR [rbx+r15*1],0x3b
   3d65c:	jne    3d58f <__sprintf_chk@plt+0x32bdf>
   3d662:	add    r15,0x1
   3d666:	cmp    BYTE PTR [rbx+r15*1],0x73
   3d66b:	je     3d540 <__sprintf_chk@plt+0x32b90>
   3d671:	jmp    3d58f <__sprintf_chk@plt+0x32bdf>
   3d676:	cs nop WORD PTR [rax+rax*1+0x0]
   3d680:	mov    DWORD PTR [rsp+0xc],0x0
   3d688:	mov    QWORD PTR [rsp+0x10],r14
   3d68d:	jmp    3d1c2 <__sprintf_chk@plt+0x32812>
   3d692:	nop    WORD PTR [rax+rax*1+0x0]
   3d698:	mov    rcx,QWORD PTR [rsp+0x18]
   3d69d:	lea    rsi,[r15+0x2]
   3d6a1:	mov    rdx,r12
   3d6a4:	mov    rdi,rbx
   3d6a7:	lea    r8,[rip+0x2e650]        # 6bcfe <_obstack_memory_used@@Base+0x1f07e>
   3d6ae:	call   38100 <__sprintf_chk@plt+0x2d750>
   3d6b3:	mov    r15,QWORD PTR [rsp+0x20]
   3d6b8:	test   eax,eax
   3d6ba:	jne    3d276 <__sprintf_chk@plt+0x328c6>
   3d6c0:	jmp    3d2b4 <__sprintf_chk@plt+0x32904>
   3d6c5:	nop    DWORD PTR [rax]
   3d6c8:	mov    r15,r14
   3d6cb:	jmp    3d385 <__sprintf_chk@plt+0x329d5>
   3d6d0:	mov    rdi,rbp
   3d6d3:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   3d6d8:	jmp    3d3f3 <__sprintf_chk@plt+0x32a43>
   3d6dd:	mov    edx,DWORD PTR [rsp+0xc]
   3d6e1:	jmp    3d1a5 <__sprintf_chk@plt+0x327f5>
   3d6e6:	mov    rax,QWORD PTR [rbp+0xd0]
   3d6ed:	mov    QWORD PTR [rsp],rax
   3d6f1:	test   rax,rax
   3d6f4:	jne    3d4f0 <__sprintf_chk@plt+0x32b40>
   3d6fa:	jmp    3d33d <__sprintf_chk@plt+0x3298d>
   3d6ff:	lea    r13,[r14+0x1]
   3d703:	cmp    r12,r13
   3d706:	ja     3d719 <__sprintf_chk@plt+0x32d69>
   3d708:	jmp    3d720 <__sprintf_chk@plt+0x32d70>
   3d70a:	nop    WORD PTR [rax+rax*1+0x0]
   3d710:	add    r13,0x1
   3d714:	cmp    r12,r13
   3d717:	jbe    3d720 <__sprintf_chk@plt+0x32d70>
   3d719:	cmp    BYTE PTR [rbx+r13*1],0xa
   3d71e:	jne    3d710 <__sprintf_chk@plt+0x32d60>
   3d720:	mov    rsi,QWORD PTR [rsp+0x10]
   3d725:	xor    ecx,ecx
   3d727:	mov    rdx,r14
   3d72a:	mov    rdi,rbp
   3d72d:	call   3d0a0 <__sprintf_chk@plt+0x326f0>
   3d732:	test   eax,eax
   3d734:	jne    3d3f3 <__sprintf_chk@plt+0x32a43>
   3d73a:	mov    QWORD PTR [rbp+0xb8],r13
   3d741:	mov    eax,0x1
   3d746:	jmp    3d342 <__sprintf_chk@plt+0x32992>
   3d74b:	mov    r15,rcx
   3d74e:	jmp    3d58f <__sprintf_chk@plt+0x32bdf>
   3d753:	mov    r15,rcx
   3d756:	jmp    3d657 <__sprintf_chk@plt+0x32ca7>
   3d75b:	call   a0a0 <__stack_chk_fail@plt>
   3d760:	endbr64 
   3d764:	push   r15
   3d766:	push   r14
   3d768:	push   r13
   3d76a:	push   r12
   3d76c:	push   rbp
   3d76d:	push   rbx
   3d76e:	sub    rsp,0x58
   3d772:	mov    r14,QWORD PTR [rdi+0xd0]
   3d779:	mov    QWORD PTR [rsp+0x10],rdi
   3d77e:	test   r14,r14
   3d781:	je     3d905 <__sprintf_chk@plt+0x32f55>
   3d787:	nop    WORD PTR [rax+rax*1+0x0]
   3d790:	mov    ebp,DWORD PTR [r14+0x10]
   3d794:	lea    r13,[rip+0x2e3b5]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   3d79b:	xor    r12d,r12d
   3d79e:	test   bpl,0x1
   3d7a2:	jne    3d7c0 <__sprintf_chk@plt+0x32e10>
   3d7a4:	mov    rax,QWORD PTR [r14+0x18]
   3d7a8:	test   bpl,0x2
   3d7ac:	je     3d9e0 <__sprintf_chk@plt+0x33030>
   3d7b2:	mov    rdi,rax
   3d7b5:	mov    r13,rax
   3d7b8:	call   a060 <strlen@plt>
   3d7bd:	mov    r12,rax
   3d7c0:	mov    rax,QWORD PTR [rsp+0x10]
   3d7c5:	test   DWORD PTR [rax+0x20],0x600
   3d7cc:	je     3d8f8 <__sprintf_chk@plt+0x32f48>
   3d7d2:	test   bpl,0x8
   3d7d6:	jne    3d8f8 <__sprintf_chk@plt+0x32f48>
   3d7dc:	test   bpl,0x2
   3d7e0:	jne    3d817 <__sprintf_chk@plt+0x32e67>
   3d7e2:	lea    rdi,[r12+0x1]
   3d7e7:	call   a4a0 <malloc@plt>
   3d7ec:	test   rax,rax
   3d7ef:	je     3db64 <__sprintf_chk@plt+0x331b4>
   3d7f5:	mov    rdx,r12
   3d7f8:	mov    rsi,r13
   3d7fb:	mov    rdi,rax
   3d7fe:	call   a420 <memcpy@plt>
   3d803:	mov    BYTE PTR [rax+r12*1],0x0
   3d808:	mov    ebp,DWORD PTR [r14+0x10]
   3d80c:	mov    QWORD PTR [r14+0x18],rax
   3d810:	or     ebp,0x2
   3d813:	mov    DWORD PTR [r14+0x10],ebp
   3d817:	shr    ebp,0x2
   3d81a:	mov    rbx,QWORD PTR [r14+0x18]
   3d81e:	mov    edx,ebp
   3d820:	and    edx,0x1
   3d823:	test   r12,r12
   3d826:	je     3d8f5 <__sprintf_chk@plt+0x32f45>
   3d82c:	lea    ecx,[rdx*4+0x0]
   3d833:	mov    eax,0x40
   3d838:	movsxd rdx,edx
   3d83b:	xor    ebp,ebp
   3d83d:	shl    eax,cl
   3d83f:	lea    rdi,[rdx+0x8]
   3d843:	mov    QWORD PTR [rsp+0x28],r14
   3d848:	mov    r14,r13
   3d84b:	mov    DWORD PTR [rsp+0x18],eax
   3d84f:	mov    eax,0x20
   3d854:	shl    eax,cl
   3d856:	mov    QWORD PTR [rsp+0x20],rdi
   3d85b:	mov    DWORD PTR [rsp+0x1c],eax
   3d85f:	mov    eax,0x10
   3d864:	shl    eax,cl
   3d866:	mov    QWORD PTR [rsp+0x8],r12
   3d86b:	mov    DWORD PTR [rsp+0x40],eax
   3d86f:	xor    eax,eax
   3d871:	jmp    3d88b <__sprintf_chk@plt+0x32edb>
   3d873:	nop    DWORD PTR [rax+rax*1+0x0]
   3d878:	mov    BYTE PTR [rbx],al
   3d87a:	mov    ebp,r15d
   3d87d:	add    rbx,0x1
   3d881:	movsxd rax,ebp
   3d884:	cmp    QWORD PTR [rsp+0x8],rax
   3d889:	jbe    3d8f0 <__sprintf_chk@plt+0x32f40>
   3d88b:	movzx  eax,BYTE PTR [r14+rax*1]
   3d890:	lea    r15d,[rbp+0x1]
   3d894:	cmp    al,0x5c
   3d896:	jne    3d878 <__sprintf_chk@plt+0x32ec8>
   3d898:	mov    rdi,QWORD PTR [rsp+0x10]
   3d89d:	movsxd rax,r15d
   3d8a0:	lea    r12,[r14+rax*1]
   3d8a4:	mov    edi,DWORD PTR [rdi+0x24]
   3d8a7:	movzx  esi,BYTE PTR [r12]
   3d8ac:	test   DWORD PTR [rsp+0x18],edi
   3d8b0:	je     3d920 <__sprintf_chk@plt+0x32f70>
   3d8b2:	mov    r9d,esi
   3d8b5:	and    r9d,0xffffffdf
   3d8b9:	cmp    r9b,0x58
   3d8bd:	jne    3d920 <__sprintf_chk@plt+0x32f70>
   3d8bf:	mov    rsi,QWORD PTR [rsp+0x8]
   3d8c4:	sub    rsi,rax
   3d8c7:	cmp    rsi,0x1
   3d8cb:	ja     3da70 <__sprintf_chk@plt+0x330c0>
   3d8d1:	mov    BYTE PTR [rbx],0x5c
   3d8d4:	movzx  eax,BYTE PTR [r12]
   3d8d9:	add    ebp,0x2
   3d8dc:	add    rbx,0x2
   3d8e0:	mov    BYTE PTR [rbx-0x1],al
   3d8e3:	movsxd rax,ebp
   3d8e6:	cmp    QWORD PTR [rsp+0x8],rax
   3d8eb:	ja     3d88b <__sprintf_chk@plt+0x32edb>
   3d8ed:	nop    DWORD PTR [rax]
   3d8f0:	mov    r14,QWORD PTR [rsp+0x28]
   3d8f5:	mov    BYTE PTR [rbx],0x0
   3d8f8:	mov    r14,QWORD PTR [r14+0x8]
   3d8fc:	test   r14,r14
   3d8ff:	jne    3d790 <__sprintf_chk@plt+0x32de0>
   3d905:	add    rsp,0x58
   3d909:	xor    eax,eax
   3d90b:	pop    rbx
   3d90c:	pop    rbp
   3d90d:	pop    r12
   3d90f:	pop    r13
   3d911:	pop    r14
   3d913:	pop    r15
   3d915:	ret    
   3d916:	cs nop WORD PTR [rax+rax*1+0x0]
   3d920:	test   DWORD PTR [rsp+0x1c],edi
   3d924:	je     3da00 <__sprintf_chk@plt+0x33050>
   3d92a:	lea    r9d,[rsi-0x30]
   3d92e:	cmp    r9b,0x9
   3d932:	ja     3da00 <__sprintf_chk@plt+0x33050>
   3d938:	cmp    QWORD PTR [rsp+0x8],rax
   3d93d:	je     3d8d1 <__sprintf_chk@plt+0x32f21>
   3d93f:	xor    r13d,r13d
   3d942:	xor    r10d,r10d
   3d945:	mov    QWORD PTR [rsp+0x30],rbx
   3d94a:	mov    DWORD PTR [rsp+0x44],ebp
   3d94e:	mov    ebx,r10d
   3d951:	mov    rbp,r13
   3d954:	mov    QWORD PTR [rsp+0x38],r14
   3d959:	jmp    3d988 <__sprintf_chk@plt+0x32fd8>
   3d95b:	nop    DWORD PTR [rax+rax*1+0x0]
   3d960:	call   9d10 <__ctype_toupper_loc@plt>
   3d965:	movzx  ecx,r14b
   3d969:	mov    rax,QWORD PTR [rax]
   3d96c:	mov    eax,DWORD PTR [rax+rcx*4]
   3d96f:	sub    eax,0x37
   3d972:	cmp    eax,0x7
   3d975:	jg     3d9b1 <__sprintf_chk@plt+0x33001>
   3d977:	add    rbp,0x1
   3d97b:	lea    ebx,[rax+rbx*8]
   3d97e:	cmp    rbp,0x3
   3d982:	je     3db20 <__sprintf_chk@plt+0x33170>
   3d988:	movzx  esi,BYTE PTR [r12+rbp*1]
   3d98d:	mov    r13d,ebp
   3d990:	mov    r14d,esi
   3d993:	cmp    esi,0x7f
   3d996:	jg     3d9b1 <__sprintf_chk@plt+0x33001>
   3d998:	lea    eax,[rsi-0x30]
   3d99b:	cmp    eax,0x9
   3d99e:	jbe    3d972 <__sprintf_chk@plt+0x32fc2>
   3d9a0:	lea    rdi,[rip+0x2e35d]        # 6bd04 <_obstack_memory_used@@Base+0x1f084>
   3d9a7:	call   a0f0 <strchr@plt>
   3d9ac:	test   rax,rax
   3d9af:	jne    3d960 <__sprintf_chk@plt+0x32fb0>
   3d9b1:	mov    r10d,ebx
   3d9b4:	mov    ebp,DWORD PTR [rsp+0x44]
   3d9b8:	mov    r14,QWORD PTR [rsp+0x38]
   3d9bd:	mov    eax,r13d
   3d9c0:	mov    rbx,QWORD PTR [rsp+0x30]
   3d9c5:	test   r13d,r13d
   3d9c8:	je     3d8d1 <__sprintf_chk@plt+0x32f21>
   3d9ce:	mov    ebp,eax
   3d9d0:	mov    BYTE PTR [rbx],r10b
   3d9d3:	add    rbx,0x1
   3d9d7:	add    ebp,r15d
   3d9da:	jmp    3d881 <__sprintf_chk@plt+0x32ed1>
   3d9df:	nop
   3d9e0:	mov    rdi,QWORD PTR [rsp+0x10]
   3d9e5:	mov    r12,QWORD PTR [r14+0x20]
   3d9e9:	mov    r13,QWORD PTR [rdi+0xa8]
   3d9f0:	sub    r12,rax
   3d9f3:	add    r13,rax
   3d9f6:	jmp    3d7c0 <__sprintf_chk@plt+0x32e10>
   3d9fb:	nop    DWORD PTR [rax+rax*1+0x0]
   3da00:	mov    rax,QWORD PTR [rsp+0x10]
   3da05:	mov    rcx,QWORD PTR [rsp+0x20]
   3da0a:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   3da0f:	movzx  edx,BYTE PTR [rax]
   3da12:	test   dl,dl
   3da14:	jne    3da31 <__sprintf_chk@plt+0x33081>
   3da16:	jmp    3da3b <__sprintf_chk@plt+0x3308b>
   3da18:	nop    DWORD PTR [rax+rax*1+0x0]
   3da20:	cmp    sil,dl
   3da23:	je     3da60 <__sprintf_chk@plt+0x330b0>
   3da25:	movzx  edx,BYTE PTR [rax+0x2]
   3da29:	add    rax,0x2
   3da2d:	test   dl,dl
   3da2f:	je     3da3b <__sprintf_chk@plt+0x3308b>
   3da31:	movzx  r9d,BYTE PTR [rax+0x1]
   3da36:	test   r9b,r9b
   3da39:	jne    3da20 <__sprintf_chk@plt+0x33070>
   3da3b:	test   DWORD PTR [rsp+0x40],edi
   3da3f:	je     3da4d <__sprintf_chk@plt+0x3309d>
   3da41:	mov    BYTE PTR [rbx],0x5c
   3da44:	movzx  esi,BYTE PTR [r12]
   3da49:	add    rbx,0x1
   3da4d:	mov    BYTE PTR [rbx],sil
   3da50:	add    ebp,0x2
   3da53:	add    rbx,0x1
   3da57:	jmp    3d881 <__sprintf_chk@plt+0x32ed1>
   3da5c:	nop    DWORD PTR [rax+0x0]
   3da60:	mov    BYTE PTR [rbx],r9b
   3da63:	add    ebp,0x2
   3da66:	add    rbx,0x1
   3da6a:	jmp    3d881 <__sprintf_chk@plt+0x32ed1>
   3da6f:	nop
   3da70:	lea    rax,[r14+rax*1+0x1]
   3da75:	xor    r9d,r9d
   3da78:	xor    r13d,r13d
   3da7b:	mov    QWORD PTR [rsp+0x30],rbx
   3da80:	mov    DWORD PTR [rsp+0x44],ebp
   3da84:	mov    ebx,r13d
   3da87:	mov    rbp,rax
   3da8a:	mov    DWORD PTR [rsp+0x38],r15d
   3da8f:	mov    r15,r9
   3da92:	mov    QWORD PTR [rsp+0x48],r12
   3da97:	jmp    3dacd <__sprintf_chk@plt+0x3311d>
   3da99:	nop    DWORD PTR [rax+0x0]
   3daa0:	call   9d10 <__ctype_toupper_loc@plt>
   3daa5:	movzx  ecx,r13b
   3daa9:	mov    rax,QWORD PTR [rax]
   3daac:	mov    eax,DWORD PTR [rax+rcx*4]
   3daaf:	sub    eax,0x37
   3dab2:	cmp    eax,0xf
   3dab5:	jg     3daf7 <__sprintf_chk@plt+0x33147>
   3dab7:	shl    ebx,0x4
   3daba:	lea    ebx,[rax+rbx*1]
   3dabd:	cmp    r15,0x1
   3dac1:	je     3db43 <__sprintf_chk@plt+0x33193>
   3dac7:	mov    r15d,0x1
   3dacd:	movzx  esi,BYTE PTR [rbp+r15*1+0x0]
   3dad3:	mov    r12d,r15d
   3dad6:	mov    r13d,esi
   3dad9:	cmp    esi,0x7f
   3dadc:	jg     3daf7 <__sprintf_chk@plt+0x33147>
   3dade:	lea    eax,[rsi-0x30]
   3dae1:	cmp    eax,0x9
   3dae4:	jbe    3dab2 <__sprintf_chk@plt+0x33102>
   3dae6:	lea    rdi,[rip+0x2e217]        # 6bd04 <_obstack_memory_used@@Base+0x1f084>
   3daed:	call   a0f0 <strchr@plt>
   3daf2:	test   rax,rax
   3daf5:	jne    3daa0 <__sprintf_chk@plt+0x330f0>
   3daf7:	mov    eax,r12d
   3dafa:	mov    r13d,ebx
   3dafd:	mov    ebp,DWORD PTR [rsp+0x44]
   3db01:	mov    rbx,QWORD PTR [rsp+0x30]
   3db06:	mov    r15d,DWORD PTR [rsp+0x38]
   3db0b:	mov    r12,QWORD PTR [rsp+0x48]
   3db10:	test   eax,eax
   3db12:	je     3d8d1 <__sprintf_chk@plt+0x32f21>
   3db18:	mov    ebp,0x2
   3db1d:	jmp    3db55 <__sprintf_chk@plt+0x331a5>
   3db1f:	nop
   3db20:	mov    r10d,ebx
   3db23:	mov    eax,0x3
   3db28:	mov    rbx,QWORD PTR [rsp+0x30]
   3db2d:	mov    r14,QWORD PTR [rsp+0x38]
   3db32:	mov    ebp,eax
   3db34:	mov    BYTE PTR [rbx],r10b
   3db37:	add    ebp,r15d
   3db3a:	add    rbx,0x1
   3db3e:	jmp    3d881 <__sprintf_chk@plt+0x32ed1>
   3db43:	mov    r13d,ebx
   3db46:	mov    r15d,DWORD PTR [rsp+0x38]
   3db4b:	mov    rbx,QWORD PTR [rsp+0x30]
   3db50:	mov    ebp,0x3
   3db55:	mov    BYTE PTR [rbx],r13b
   3db58:	add    ebp,r15d
   3db5b:	add    rbx,0x1
   3db5f:	jmp    3d881 <__sprintf_chk@plt+0x32ed1>
   3db64:	mov    rdi,QWORD PTR [rsp+0x10]
   3db69:	add    rsp,0x58
   3db6d:	pop    rbx
   3db6e:	pop    rbp
   3db6f:	pop    r12
   3db71:	pop    r13
   3db73:	pop    r14
   3db75:	pop    r15
   3db77:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   3db7c:	nop    DWORD PTR [rax+0x0]
   3db80:	endbr64 
   3db84:	push   r15
   3db86:	push   r14
   3db88:	push   r13
   3db8a:	push   r12
   3db8c:	push   rbp
   3db8d:	push   rbx
   3db8e:	sub    rsp,0x38
   3db92:	mov    r15,QWORD PTR [rdi+0xd0]
   3db99:	mov    QWORD PTR [rsp+0x8],rdi
   3db9e:	test   r15,r15
   3dba1:	je     3dd67 <__sprintf_chk@plt+0x333b7>
   3dba7:	mov    QWORD PTR [rsp+0x10],0x0
   3dbb0:	xor    r12d,r12d
   3dbb3:	jmp    3dbc5 <__sprintf_chk@plt+0x33215>
   3dbb5:	nop    DWORD PTR [rax]
   3dbb8:	mov    r15,QWORD PTR [r15+0x8]
   3dbbc:	test   r15,r15
   3dbbf:	je     3dcf2 <__sprintf_chk@plt+0x33342>
   3dbc5:	mov    eax,DWORD PTR [r15+0x10]
   3dbc9:	test   al,0x5
   3dbcb:	jne    3dbb8 <__sprintf_chk@plt+0x33208>
   3dbcd:	mov    rdx,QWORD PTR [r15+0x18]
   3dbd1:	test   al,0x2
   3dbd3:	je     3dd10 <__sprintf_chk@plt+0x33360>
   3dbd9:	cmp    BYTE PTR [rdx],0x7e
   3dbdc:	mov    rbp,rdx
   3dbdf:	jne    3dbb8 <__sprintf_chk@plt+0x33208>
   3dbe1:	mov    rdi,rdx
   3dbe4:	call   a060 <strlen@plt>
   3dbe9:	mov    rbx,rax
   3dbec:	cmp    rbx,0x1
   3dbf0:	jbe    3dd47 <__sprintf_chk@plt+0x33397>
   3dbf6:	mov    r14d,0x1
   3dbfc:	jmp    3dc09 <__sprintf_chk@plt+0x33259>
   3dbfe:	xchg   ax,ax
   3dc00:	add    r14,0x1
   3dc04:	cmp    r14,rbx
   3dc07:	je     3dbb8 <__sprintf_chk@plt+0x33208>
   3dc09:	cmp    BYTE PTR [rbp+r14*1+0x0],0x2f
   3dc0f:	jne    3dc00 <__sprintf_chk@plt+0x33250>
   3dc11:	cmp    r14,0x1
   3dc15:	je     3dd50 <__sprintf_chk@plt+0x333a0>
   3dc1b:	cmp    r14,QWORD PTR [rsp+0x10]
   3dc20:	jbe    3dc3e <__sprintf_chk@plt+0x3328e>
   3dc22:	mov    rsi,r14
   3dc25:	mov    rdi,r12
   3dc28:	call   a570 <realloc@plt>
   3dc2d:	test   rax,rax
   3dc30:	je     3dd6c <__sprintf_chk@plt+0x333bc>
   3dc36:	mov    QWORD PTR [rsp+0x10],r14
   3dc3b:	mov    r12,rax
   3dc3e:	lea    r13,[r14-0x1]
   3dc42:	mov    rdi,r12
   3dc45:	lea    rsi,[rbp+0x1]
   3dc49:	mov    rdx,r13
   3dc4c:	call   a420 <memcpy@plt>
   3dc51:	mov    BYTE PTR [r12+r14*1-0x1],0x0
   3dc57:	mov    rdi,r12
   3dc5a:	call   a360 <getpwnam@plt>
   3dc5f:	test   rax,rax
   3dc62:	je     3dbb8 <__sprintf_chk@plt+0x33208>
   3dc68:	mov    rsi,QWORD PTR [rax+0x20]
   3dc6c:	sub    rbx,r13
   3dc6f:	mov    rdi,rsi
   3dc72:	mov    QWORD PTR [rsp+0x28],rsi
   3dc77:	call   a060 <strlen@plt>
   3dc7c:	mov    QWORD PTR [rsp+0x18],rbx
   3dc81:	mov    r14,rax
   3dc84:	lea    rax,[rbx+rax*1]
   3dc88:	mov    rdi,rax
   3dc8b:	mov    QWORD PTR [rsp+0x20],rax
   3dc90:	call   a4a0 <malloc@plt>
   3dc95:	mov    rsi,QWORD PTR [rsp+0x28]
   3dc9a:	test   rax,rax
   3dc9d:	mov    rbx,rax
   3dca0:	je     3dd6c <__sprintf_chk@plt+0x333bc>
   3dca6:	mov    rdx,r14
   3dca9:	mov    rdi,rax
   3dcac:	call   a420 <memcpy@plt>
   3dcb1:	mov    rdx,QWORD PTR [rsp+0x18]
   3dcb6:	lea    rdi,[rbx+r14*1]
   3dcba:	lea    rsi,[rbp+r13*1+0x1]
   3dcbf:	sub    rdx,0x1
   3dcc3:	call   a420 <memcpy@plt>
   3dcc8:	mov    rax,QWORD PTR [rsp+0x20]
   3dccd:	mov    BYTE PTR [rbx+rax*1-0x1],0x0
   3dcd2:	mov    eax,DWORD PTR [r15+0x10]
   3dcd6:	test   al,0x2
   3dcd8:	jne    3dd38 <__sprintf_chk@plt+0x33388>
   3dcda:	or     eax,0x2
   3dcdd:	mov    QWORD PTR [r15+0x18],rbx
   3dce1:	mov    DWORD PTR [r15+0x10],eax
   3dce5:	mov    r15,QWORD PTR [r15+0x8]
   3dce9:	test   r15,r15
   3dcec:	jne    3dbc5 <__sprintf_chk@plt+0x33215>
   3dcf2:	mov    rdi,r12
   3dcf5:	call   9ce0 <free@plt>
   3dcfa:	add    rsp,0x38
   3dcfe:	xor    eax,eax
   3dd00:	pop    rbx
   3dd01:	pop    rbp
   3dd02:	pop    r12
   3dd04:	pop    r13
   3dd06:	pop    r14
   3dd08:	pop    r15
   3dd0a:	ret    
   3dd0b:	nop    DWORD PTR [rax+rax*1+0x0]
   3dd10:	mov    rax,QWORD PTR [rsp+0x8]
   3dd15:	mov    rbp,QWORD PTR [rax+0xa8]
   3dd1c:	add    rbp,rdx
   3dd1f:	cmp    BYTE PTR [rbp+0x0],0x7e
   3dd23:	jne    3dbb8 <__sprintf_chk@plt+0x33208>
   3dd29:	mov    rbx,QWORD PTR [r15+0x20]
   3dd2d:	sub    rbx,rdx
   3dd30:	jmp    3dbec <__sprintf_chk@plt+0x3323c>
   3dd35:	nop    DWORD PTR [rax]
   3dd38:	mov    rdi,QWORD PTR [r15+0x18]
   3dd3c:	call   9ce0 <free@plt>
   3dd41:	mov    eax,DWORD PTR [r15+0x10]
   3dd45:	jmp    3dcda <__sprintf_chk@plt+0x3332a>
   3dd47:	je     3dbb8 <__sprintf_chk@plt+0x33208>
   3dd4d:	nop    DWORD PTR [rax]
   3dd50:	call   a0b0 <getuid@plt>
   3dd55:	mov    r13d,0x1
   3dd5b:	mov    edi,eax
   3dd5d:	call   a010 <getpwuid@plt>
   3dd62:	jmp    3dc5f <__sprintf_chk@plt+0x332af>
   3dd67:	xor    r12d,r12d
   3dd6a:	jmp    3dcf2 <__sprintf_chk@plt+0x33342>
   3dd6c:	mov    rdi,r12
   3dd6f:	call   9ce0 <free@plt>
   3dd74:	mov    rdi,QWORD PTR [rsp+0x8]
   3dd79:	add    rsp,0x38
   3dd7d:	pop    rbx
   3dd7e:	pop    rbp
   3dd7f:	pop    r12
   3dd81:	pop    r13
   3dd83:	pop    r14
   3dd85:	pop    r15
   3dd87:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   3dd8c:	nop    DWORD PTR [rax+0x0]
   3dd90:	endbr64 
   3dd94:	push   r15
   3dd96:	push   r14
   3dd98:	push   r13
   3dd9a:	push   r12
   3dd9c:	push   rbp
   3dd9d:	push   rbx
   3dd9e:	sub    rsp,0x108
   3dda5:	mov    r12,QWORD PTR [rdi+0xd0]
   3ddac:	mov    rax,QWORD PTR fs:0x28
   3ddb5:	mov    QWORD PTR [rsp+0xf8],rax
   3ddbd:	mov    eax,DWORD PTR [rdi+0x24]
   3ddc0:	shl    eax,0x5
   3ddc3:	and    eax,0x80
   3ddc8:	mov    DWORD PTR [rsp+0x1c],eax
   3ddcc:	test   r12,r12
   3ddcf:	je     3de4f <__sprintf_chk@plt+0x3349f>
   3ddd1:	lea    rax,[rsp+0x20]
   3ddd6:	mov    r15,rdi
   3ddd9:	lea    rbp,[rip+0x2df31]        # 6bd11 <_obstack_memory_used@@Base+0x1f091>
   3dde0:	mov    QWORD PTR [rsp+0x10],rax
   3dde5:	nop    DWORD PTR [rax]
   3dde8:	mov    r13,r12
   3ddeb:	mov    r12,QWORD PTR [r12+0x8]
   3ddf0:	mov    eax,DWORD PTR [r13+0x10]
   3ddf4:	test   al,0x4
   3ddf6:	jne    3de4a <__sprintf_chk@plt+0x3349a>
   3ddf8:	test   al,0x1
   3ddfa:	jne    3de88 <__sprintf_chk@plt+0x334d8>
   3de00:	mov    rdx,QWORD PTR [r13+0x18]
   3de04:	test   al,0x2
   3de06:	je     3df30 <__sprintf_chk@plt+0x33580>
   3de0c:	mov    rdi,rdx
   3de0f:	mov    QWORD PTR [rsp],rdx
   3de13:	call   a060 <strlen@plt>
   3de18:	mov    QWORD PTR [rsp+0x8],rax
   3de1d:	mov    ebx,eax
   3de1f:	mov    r14,QWORD PTR [rsp]
   3de23:	add    rbx,r14
   3de26:	jmp    3de45 <__sprintf_chk@plt+0x33495>
   3de28:	nop    DWORD PTR [rax+rax*1+0x0]
   3de30:	movsx  esi,BYTE PTR [r14]
   3de34:	mov    rdi,rbp
   3de37:	add    r14,0x1
   3de3b:	call   a0f0 <strchr@plt>
   3de40:	test   rax,rax
   3de43:	jne    3dea8 <__sprintf_chk@plt+0x334f8>
   3de45:	cmp    r14,rbx
   3de48:	jne    3de30 <__sprintf_chk@plt+0x33480>
   3de4a:	test   r12,r12
   3de4d:	jne    3dde8 <__sprintf_chk@plt+0x33438>
   3de4f:	xor    eax,eax
   3de51:	nop    DWORD PTR [rax+0x0]
   3de58:	mov    rdx,QWORD PTR [rsp+0xf8]
   3de60:	sub    rdx,QWORD PTR fs:0x28
   3de69:	jne    3e184 <__sprintf_chk@plt+0x337d4>
   3de6f:	add    rsp,0x108
   3de76:	pop    rbx
   3de77:	pop    rbp
   3de78:	pop    r12
   3de7a:	pop    r13
   3de7c:	pop    r14
   3de7e:	pop    r15
   3de80:	ret    
   3de81:	nop    DWORD PTR [rax+0x0]
   3de88:	lea    rax,[rip+0x2dcc1]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   3de8f:	xor    ebx,ebx
   3de91:	mov    QWORD PTR [rsp+0x8],0x0
   3de9a:	mov    QWORD PTR [rsp],rax
   3de9e:	jmp    3de1f <__sprintf_chk@plt+0x3346f>
   3dea3:	nop    DWORD PTR [rax+rax*1+0x0]
   3dea8:	mov    rax,QWORD PTR [rsp+0x8]
   3dead:	lea    rdi,[rax+0x1]
   3deb1:	call   a4a0 <malloc@plt>
   3deb6:	mov    rbx,rax
   3deb9:	test   rax,rax
   3debc:	je     3e1bf <__sprintf_chk@plt+0x3380f>
   3dec2:	mov    r14,QWORD PTR [rsp+0x8]
   3dec7:	mov    rsi,QWORD PTR [rsp]
   3decb:	mov    rdi,rbx
   3dece:	mov    rdx,r14
   3ded1:	call   a420 <memcpy@plt>
   3ded6:	mov    BYTE PTR [rbx+r14*1],0x0
   3dedb:	mov    esi,DWORD PTR [rsp+0x1c]
   3dedf:	xor    edx,edx
   3dee1:	mov    rcx,QWORD PTR [rsp+0x10]
   3dee6:	mov    rdi,rbx
   3dee9:	call   a810 <glob@plt>
   3deee:	cmp    eax,0x1
   3def1:	je     3e0bf <__sprintf_chk@plt+0x3370f>
   3def7:	cmp    eax,0x3
   3defa:	je     3e018 <__sprintf_chk@plt+0x33668>
   3df00:	mov    rdi,rbx
   3df03:	test   eax,eax
   3df05:	je     3df58 <__sprintf_chk@plt+0x335a8>
   3df07:	call   9ce0 <free@plt>
   3df0c:	mov    eax,0x8
   3df11:	mov    DWORD PTR [r15+0xc0],0x8
   3df1c:	test   BYTE PTR [r15+0x20],0x10
   3df21:	je     3de58 <__sprintf_chk@plt+0x334a8>
   3df27:	jmp    3e0ac <__sprintf_chk@plt+0x336fc>
   3df2c:	nop    DWORD PTR [rax+0x0]
   3df30:	mov    rax,QWORD PTR [r15+0xa8]
   3df37:	add    rax,rdx
   3df3a:	mov    QWORD PTR [rsp],rax
   3df3e:	mov    rax,QWORD PTR [r13+0x20]
   3df42:	sub    rax,rdx
   3df45:	mov    QWORD PTR [rsp+0x8],rax
   3df4a:	mov    ebx,eax
   3df4c:	jmp    3de1f <__sprintf_chk@plt+0x3346f>
   3df51:	nop    DWORD PTR [rax+0x0]
   3df58:	call   9ce0 <free@plt>
   3df5d:	xor    ebx,ebx
   3df5f:	cmp    QWORD PTR [rsp+0x20],0x0
   3df65:	mov    QWORD PTR [rsp],r13
   3df69:	jne    3df74 <__sprintf_chk@plt+0x335c4>
   3df6b:	jmp    3dfc9 <__sprintf_chk@plt+0x33619>
   3df6d:	nop    DWORD PTR [rax]
   3df70:	mov    QWORD PTR [rsp],r14
   3df74:	mov    esi,0x28
   3df79:	mov    edi,0x1
   3df7e:	call   a2f0 <calloc@plt>
   3df83:	mov    r14,rax
   3df86:	test   rax,rax
   3df89:	je     3e1a5 <__sprintf_chk@plt+0x337f5>
   3df8f:	mov    rax,QWORD PTR [rsp+0x28]
   3df94:	mov    rdi,QWORD PTR [rax+rbx*8]
   3df98:	call   a880 <strdup@plt>
   3df9d:	test   rax,rax
   3dfa0:	je     3e189 <__sprintf_chk@plt+0x337d9>
   3dfa6:	or     DWORD PTR [r14+0x10],0x6
   3dfab:	mov    rdx,QWORD PTR [rsp]
   3dfaf:	mov    rsi,r14
   3dfb2:	mov    rdi,r15
   3dfb5:	mov    QWORD PTR [r14+0x18],rax
   3dfb9:	add    rbx,0x1
   3dfbd:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3dfc2:	cmp    QWORD PTR [rsp+0x20],rbx
   3dfc7:	ja     3df70 <__sprintf_chk@plt+0x335c0>
   3dfc9:	mov    rdi,QWORD PTR [rsp+0x10]
   3dfce:	call   9d60 <globfree@plt>
   3dfd3:	mov    rax,QWORD PTR [r13+0x0]
   3dfd7:	test   rax,rax
   3dfda:	je     3e139 <__sprintf_chk@plt+0x33789>
   3dfe0:	mov    rdx,QWORD PTR [r13+0x8]
   3dfe4:	mov    QWORD PTR [rax+0x8],rdx
   3dfe8:	test   rdx,rdx
   3dfeb:	je     3e16a <__sprintf_chk@plt+0x337ba>
   3dff1:	mov    QWORD PTR [rdx],rax
   3dff4:	test   BYTE PTR [r13+0x10],0x2
   3dff9:	jne    3e12b <__sprintf_chk@plt+0x3377b>
   3dfff:	mov    rdi,r13
   3e002:	call   9ce0 <free@plt>
   3e007:	test   r12,r12
   3e00a:	jne    3dde8 <__sprintf_chk@plt+0x33438>
   3e010:	jmp    3de4f <__sprintf_chk@plt+0x3349f>
   3e015:	nop    DWORD PTR [rax]
   3e018:	mov    eax,DWORD PTR [r15+0x24]
   3e01c:	test   al,0x1
   3e01e:	jne    3e0d4 <__sprintf_chk@plt+0x33724>
   3e024:	test   al,0x2
   3e026:	je     3e100 <__sprintf_chk@plt+0x33750>
   3e02c:	cmp    DWORD PTR [r15+0xc0],0x9
   3e034:	je     3e159 <__sprintf_chk@plt+0x337a9>
   3e03a:	mov    edx,0x5
   3e03f:	lea    rsi,[rip+0x2dccf]        # 6bd15 <_obstack_memory_used@@Base+0x1f095>
   3e046:	xor    edi,edi
   3e048:	call   a040 <dcgettext@plt>
   3e04d:	lea    rbp,[rsp+0x70]
   3e052:	mov    r9,rbx
   3e055:	mov    ecx,0x80
   3e05a:	mov    r8,rax
   3e05d:	mov    edx,0x1
   3e062:	mov    esi,0x80
   3e067:	mov    rdi,rbp
   3e06a:	xor    eax,eax
   3e06c:	call   9d90 <__snprintf_chk@plt>
   3e071:	mov    rdi,rbx
   3e074:	call   9ce0 <free@plt>
   3e079:	mov    rdi,rbp
   3e07c:	call   a880 <strdup@plt>
   3e081:	mov    QWORD PTR [r15+0xc8],rax
   3e088:	test   rax,rax
   3e08b:	je     3e198 <__sprintf_chk@plt+0x337e8>
   3e091:	mov    DWORD PTR [r15+0xc0],0x9
   3e09c:	mov    eax,0x9
   3e0a1:	test   BYTE PTR [r15+0x20],0x10
   3e0a6:	je     3de58 <__sprintf_chk@plt+0x334a8>
   3e0ac:	mov    rdi,r15
   3e0af:	mov    DWORD PTR [rsp],eax
   3e0b2:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   3e0b7:	mov    eax,DWORD PTR [rsp]
   3e0ba:	jmp    3de58 <__sprintf_chk@plt+0x334a8>
   3e0bf:	mov    rdi,rbx
   3e0c2:	call   9ce0 <free@plt>
   3e0c7:	mov    rdi,r15
   3e0ca:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3e0cf:	jmp    3de58 <__sprintf_chk@plt+0x334a8>
   3e0d4:	mov    rax,QWORD PTR [r13+0x0]
   3e0d8:	mov    rdx,QWORD PTR [r13+0x8]
   3e0dc:	test   rax,rax
   3e0df:	je     3e116 <__sprintf_chk@plt+0x33766>
   3e0e1:	mov    QWORD PTR [rax+0x8],rdx
   3e0e5:	test   rdx,rdx
   3e0e8:	je     3e17e <__sprintf_chk@plt+0x337ce>
   3e0ee:	mov    QWORD PTR [rdx],rax
   3e0f1:	test   BYTE PTR [r13+0x10],0x2
   3e0f6:	jne    3e170 <__sprintf_chk@plt+0x337c0>
   3e0f8:	mov    rdi,r13
   3e0fb:	call   9ce0 <free@plt>
   3e100:	mov    rdi,rbx
   3e103:	call   9ce0 <free@plt>
   3e108:	test   r12,r12
   3e10b:	jne    3dde8 <__sprintf_chk@plt+0x33438>
   3e111:	jmp    3de4f <__sprintf_chk@plt+0x3349f>
   3e116:	mov    QWORD PTR [r15+0xd0],rdx
   3e11d:	test   rdx,rdx
   3e120:	jne    3e0ee <__sprintf_chk@plt+0x3373e>
   3e122:	mov    QWORD PTR [r15+0xd8],rax
   3e129:	jmp    3e0f1 <__sprintf_chk@plt+0x33741>
   3e12b:	mov    rdi,QWORD PTR [r13+0x18]
   3e12f:	call   9ce0 <free@plt>
   3e134:	jmp    3dfff <__sprintf_chk@plt+0x3364f>
   3e139:	mov    rdx,QWORD PTR [r13+0x8]
   3e13d:	mov    QWORD PTR [r15+0xd0],rdx
   3e144:	test   rdx,rdx
   3e147:	jne    3dff1 <__sprintf_chk@plt+0x33641>
   3e14d:	mov    QWORD PTR [r15+0xd8],rax
   3e154:	jmp    3dff4 <__sprintf_chk@plt+0x33644>
   3e159:	mov    rdi,QWORD PTR [r15+0xc8]
   3e160:	call   9ce0 <free@plt>
   3e165:	jmp    3e03a <__sprintf_chk@plt+0x3368a>
   3e16a:	and    DWORD PTR [rax+0x10],0xffffffef
   3e16e:	jmp    3e14d <__sprintf_chk@plt+0x3379d>
   3e170:	mov    rdi,QWORD PTR [r13+0x18]
   3e174:	call   9ce0 <free@plt>
   3e179:	jmp    3e0f8 <__sprintf_chk@plt+0x33748>
   3e17e:	and    DWORD PTR [rax+0x10],0xffffffef
   3e182:	jmp    3e122 <__sprintf_chk@plt+0x33772>
   3e184:	call   a0a0 <__stack_chk_fail@plt>
   3e189:	test   BYTE PTR [r14+0x10],0x2
   3e18e:	jne    3e1eb <__sprintf_chk@plt+0x3383b>
   3e190:	mov    rdi,r14
   3e193:	call   9ce0 <free@plt>
   3e198:	mov    rdi,r15
   3e19b:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3e1a0:	jmp    3de58 <__sprintf_chk@plt+0x334a8>
   3e1a5:	mov    rdi,r15
   3e1a8:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3e1ad:	test   eax,eax
   3e1af:	je     3df8f <__sprintf_chk@plt+0x335df>
   3e1b5:	mov    eax,0x1
   3e1ba:	jmp    3de58 <__sprintf_chk@plt+0x334a8>
   3e1bf:	mov    rax,QWORD PTR [rsp+0xf8]
   3e1c7:	sub    rax,QWORD PTR fs:0x28
   3e1d0:	jne    3e184 <__sprintf_chk@plt+0x337d4>
   3e1d2:	add    rsp,0x108
   3e1d9:	mov    rdi,r15
   3e1dc:	pop    rbx
   3e1dd:	pop    rbp
   3e1de:	pop    r12
   3e1e0:	pop    r13
   3e1e2:	pop    r14
   3e1e4:	pop    r15
   3e1e6:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   3e1eb:	mov    rdi,QWORD PTR [r14+0x18]
   3e1ef:	call   9ce0 <free@plt>
   3e1f4:	jmp    3e190 <__sprintf_chk@plt+0x337e0>
   3e1f6:	cs nop WORD PTR [rax+rax*1+0x0]
   3e200:	push   r15
   3e202:	push   r14
   3e204:	mov    r14,rdx
   3e207:	push   r13
   3e209:	mov    r13,rsi
   3e20c:	mov    esi,0x28
   3e211:	push   r12
   3e213:	mov    r12,rdi
   3e216:	mov    edi,0x1
   3e21b:	push   rbp
   3e21c:	mov    rbp,r8
   3e21f:	push   rbx
   3e220:	mov    ebx,r9d
   3e223:	sub    rsp,0x18
   3e227:	mov    QWORD PTR [rsp],rcx
   3e22b:	call   a2f0 <calloc@plt>
   3e230:	mov    r15,rax
   3e233:	test   rax,rax
   3e236:	je     3e2cd <__sprintf_chk@plt+0x3391d>
   3e23c:	mov    rdx,QWORD PTR [r13+0x0]
   3e240:	mov    rsi,r15
   3e243:	mov    rdi,r12
   3e246:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3e24b:	mov    eax,DWORD PTR [r14+0x10]
   3e24f:	test   al,0x2
   3e251:	jne    3e288 <__sprintf_chk@plt+0x338d8>
   3e253:	mov    r12,QWORD PTR [rsp]
   3e257:	add    r12,QWORD PTR [r14+0x18]
   3e25b:	add    rbp,r12
   3e25e:	mov    QWORD PTR [r15+0x18],r12
   3e262:	mov    eax,DWORD PTR [r15+0x10]
   3e266:	mov    QWORD PTR [r15+0x20],rbp
   3e26a:	or     ebx,eax
   3e26c:	mov    QWORD PTR [r13+0x0],r15
   3e270:	xor    eax,eax
   3e272:	mov    DWORD PTR [r15+0x10],ebx
   3e276:	add    rsp,0x18
   3e27a:	pop    rbx
   3e27b:	pop    rbp
   3e27c:	pop    r12
   3e27e:	pop    r13
   3e280:	pop    r14
   3e282:	pop    r15
   3e284:	ret    
   3e285:	nop    DWORD PTR [rax]
   3e288:	lea    rsi,[rip+0x2d8c1]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   3e28f:	test   al,0x1
   3e291:	jne    3e297 <__sprintf_chk@plt+0x338e7>
   3e293:	mov    rsi,QWORD PTR [r14+0x18]
   3e297:	lea    rdi,[rbp+0x1]
   3e29b:	mov    QWORD PTR [rsp+0x8],rsi
   3e2a0:	call   a4a0 <malloc@plt>
   3e2a5:	mov    rsi,QWORD PTR [rsp+0x8]
   3e2aa:	test   rax,rax
   3e2ad:	mov    rdi,rax
   3e2b0:	je     3e2e7 <__sprintf_chk@plt+0x33937>
   3e2b2:	add    rsi,QWORD PTR [rsp]
   3e2b6:	mov    rdx,rbp
   3e2b9:	call   a420 <memcpy@plt>
   3e2be:	mov    BYTE PTR [rax+rbp*1],0x0
   3e2c2:	mov    QWORD PTR [r15+0x18],rax
   3e2c6:	mov    eax,0x2
   3e2cb:	jmp    3e26a <__sprintf_chk@plt+0x338ba>
   3e2cd:	mov    rdi,r12
   3e2d0:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3e2d5:	mov    r8d,eax
   3e2d8:	mov    eax,0x1
   3e2dd:	test   r8d,r8d
   3e2e0:	jne    3e276 <__sprintf_chk@plt+0x338c6>
   3e2e2:	jmp    3e23c <__sprintf_chk@plt+0x3388c>
   3e2e7:	add    rsp,0x18
   3e2eb:	mov    rdi,r12
   3e2ee:	pop    rbx
   3e2ef:	pop    rbp
   3e2f0:	pop    r12
   3e2f2:	pop    r13
   3e2f4:	pop    r14
   3e2f6:	pop    r15
   3e2f8:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   3e2fd:	nop    DWORD PTR [rax]
   3e300:	push   r15
   3e302:	push   r14
   3e304:	push   r13
   3e306:	push   r12
   3e308:	push   rbp
   3e309:	push   rbx
   3e30a:	sub    rsp,0x48
   3e30e:	mov    QWORD PTR [rsp],rdx
   3e312:	mov    QWORD PTR [rsp+0x10],rcx
   3e317:	mov    rax,QWORD PTR fs:0x28
   3e320:	mov    QWORD PTR [rsp+0x38],rax
   3e325:	mov    eax,DWORD PTR [rsi+0x10]
   3e328:	test   al,0x1
   3e32a:	jne    3e4c6 <__sprintf_chk@plt+0x33b16>
   3e330:	mov    rdx,QWORD PTR [rsi+0x18]
   3e334:	mov    r14,rdi
   3e337:	mov    rbp,rsi
   3e33a:	mov    r8,rdx
   3e33d:	test   al,0x2
   3e33f:	jne    3e4f0 <__sprintf_chk@plt+0x33b40>
   3e345:	mov    rax,QWORD PTR [rsi+0x20]
   3e349:	add    r8,QWORD PTR [rdi+0xa8]
   3e350:	sub    rax,rdx
   3e353:	mov    QWORD PTR [rsp+0x8],rax
   3e358:	mov    rax,QWORD PTR [rsp+0x8]
   3e35d:	mov    QWORD PTR [rsp+0x28],rbp
   3e362:	mov    QWORD PTR [rsp+0x30],r8
   3e367:	lea    rbx,[r8+rax*1]
   3e36b:	cmp    rbx,r8
   3e36e:	jbe    3e4c6 <__sprintf_chk@plt+0x33b16>
   3e374:	mov    r12,r8
   3e377:	xor    r13d,r13d
   3e37a:	lea    r15,[rsp+0x28]
   3e37f:	jmp    3e39f <__sprintf_chk@plt+0x339ef>
   3e381:	nop    DWORD PTR [rax+0x0]
   3e388:	mov    rax,QWORD PTR [rsp+0x30]
   3e38d:	lea    r8,[rax+0x1]
   3e391:	mov    QWORD PTR [rsp+0x30],r8
   3e396:	cmp    rbx,r8
   3e399:	jbe    3e468 <__sprintf_chk@plt+0x33ab8>
   3e39f:	movzx  eax,BYTE PTR [r8]
   3e3a3:	cmp    al,0x5c
   3e3a5:	je     3e510 <__sprintf_chk@plt+0x33b60>
   3e3ab:	cmp    al,0x24
   3e3ad:	jne    3e388 <__sprintf_chk@plt+0x339d8>
   3e3af:	movsx  edi,BYTE PTR [r8+0x1]
   3e3b4:	mov    rax,QWORD PTR [rsp]
   3e3b8:	call   rax
   3e3ba:	test   eax,eax
   3e3bc:	je     3e388 <__sprintf_chk@plt+0x339d8>
   3e3be:	mov    rsi,QWORD PTR [rsp+0x30]
   3e3c3:	mov    rax,QWORD PTR [rsp+0x28]
   3e3c8:	mov    r8,rsi
   3e3cb:	sub    r8,r12
   3e3ce:	cmp    rax,rbp
   3e3d1:	je     3e3d7 <__sprintf_chk@plt+0x33a27>
   3e3d3:	or     DWORD PTR [rax+0x10],0x10
   3e3d7:	test   r8,r8
   3e3da:	je     3e40a <__sprintf_chk@plt+0x33a5a>
   3e3dc:	mov    r9d,0x10
   3e3e2:	mov    rcx,r13
   3e3e5:	mov    rdx,rbp
   3e3e8:	mov    rsi,r15
   3e3eb:	mov    rdi,r14
   3e3ee:	mov    QWORD PTR [rsp+0x18],r8
   3e3f3:	call   3e200 <__sprintf_chk@plt+0x33850>
   3e3f8:	mov    r8,QWORD PTR [rsp+0x18]
   3e3fd:	test   eax,eax
   3e3ff:	jne    3e590 <__sprintf_chk@plt+0x33be0>
   3e405:	mov    rsi,QWORD PTR [rsp+0x30]
   3e40a:	mov    rdx,QWORD PTR [rsp+0x8]
   3e40f:	mov    r9d,DWORD PTR [rbp+0x10]
   3e413:	add    rsi,0x1
   3e417:	mov    rcx,r15
   3e41a:	mov    QWORD PTR [rsp+0x30],rsi
   3e41f:	mov    rax,QWORD PTR [rsp+0x10]
   3e424:	mov    rdi,r14
   3e427:	sub    rdx,r8
   3e42a:	and    r9d,0x14
   3e42e:	lea    r8,[rsp+0x30]
   3e433:	call   rax
   3e435:	test   eax,eax
   3e437:	jne    3e590 <__sprintf_chk@plt+0x33be0>
   3e43d:	mov    rax,QWORD PTR [rsp+0x30]
   3e442:	mov    rdx,rax
   3e445:	sub    rdx,r12
   3e448:	lea    r12,[rax+0x1]
   3e44c:	mov    r8,r12
   3e44f:	lea    r13,[r13+rdx*1+0x1]
   3e454:	mov    QWORD PTR [rsp+0x30],r8
   3e459:	cmp    rbx,r8
   3e45c:	ja     3e39f <__sprintf_chk@plt+0x339ef>
   3e462:	nop    WORD PTR [rax+rax*1+0x0]
   3e468:	mov    rax,QWORD PTR [rsp+0x28]
   3e46d:	cmp    r12,r8
   3e470:	jae    3e542 <__sprintf_chk@plt+0x33b92>
   3e476:	sub    r8,r12
   3e479:	cmp    rax,rbp
   3e47c:	je     3e519 <__sprintf_chk@plt+0x33b69>
   3e482:	or     DWORD PTR [rax+0x10],0x10
   3e486:	mov    r9d,DWORD PTR [rbp+0x10]
   3e48a:	test   r8,r8
   3e48d:	jne    3e522 <__sprintf_chk@plt+0x33b72>
   3e493:	mov    rax,QWORD PTR [rbp+0x0]
   3e497:	mov    rdx,QWORD PTR [rbp+0x8]
   3e49b:	test   rax,rax
   3e49e:	je     3e55c <__sprintf_chk@plt+0x33bac>
   3e4a4:	mov    QWORD PTR [rax+0x8],rdx
   3e4a8:	test   rdx,rdx
   3e4ab:	je     3e59a <__sprintf_chk@plt+0x33bea>
   3e4b1:	mov    QWORD PTR [rdx],rax
   3e4b4:	test   BYTE PTR [rbp+0x10],0x2
   3e4b8:	jne    3e57d <__sprintf_chk@plt+0x33bcd>
   3e4be:	mov    rdi,rbp
   3e4c1:	call   9ce0 <free@plt>
   3e4c6:	xor    eax,eax
   3e4c8:	mov    rdx,QWORD PTR [rsp+0x38]
   3e4cd:	sub    rdx,QWORD PTR fs:0x28
   3e4d6:	jne    3e5a0 <__sprintf_chk@plt+0x33bf0>
   3e4dc:	add    rsp,0x48
   3e4e0:	pop    rbx
   3e4e1:	pop    rbp
   3e4e2:	pop    r12
   3e4e4:	pop    r13
   3e4e6:	pop    r14
   3e4e8:	pop    r15
   3e4ea:	ret    
   3e4eb:	nop    DWORD PTR [rax+rax*1+0x0]
   3e4f0:	mov    rdi,rdx
   3e4f3:	mov    QWORD PTR [rsp+0x18],rdx
   3e4f8:	call   a060 <strlen@plt>
   3e4fd:	mov    r8,QWORD PTR [rsp+0x18]
   3e502:	mov    QWORD PTR [rsp+0x8],rax
   3e507:	jmp    3e358 <__sprintf_chk@plt+0x339a8>
   3e50c:	nop    DWORD PTR [rax+0x0]
   3e510:	add    r8,0x2
   3e514:	jmp    3e391 <__sprintf_chk@plt+0x339e1>
   3e519:	mov    r9d,DWORD PTR [rbp+0x10]
   3e51d:	test   r8,r8
   3e520:	je     3e4c6 <__sprintf_chk@plt+0x33b16>
   3e522:	and    r9d,0x14
   3e526:	lea    rsi,[rsp+0x28]
   3e52b:	mov    rcx,r13
   3e52e:	mov    rdx,rbp
   3e531:	mov    rdi,r14
   3e534:	call   3e200 <__sprintf_chk@plt+0x33850>
   3e539:	test   eax,eax
   3e53b:	jne    3e590 <__sprintf_chk@plt+0x33be0>
   3e53d:	mov    rax,QWORD PTR [rsp+0x28]
   3e542:	cmp    rbp,rax
   3e545:	je     3e4c6 <__sprintf_chk@plt+0x33b16>
   3e54b:	mov    rax,QWORD PTR [rbp+0x0]
   3e54f:	mov    rdx,QWORD PTR [rbp+0x8]
   3e553:	test   rax,rax
   3e556:	jne    3e4a4 <__sprintf_chk@plt+0x33af4>
   3e55c:	mov    QWORD PTR [r14+0xd0],rdx
   3e563:	test   rdx,rdx
   3e566:	jne    3e4b1 <__sprintf_chk@plt+0x33b01>
   3e56c:	mov    QWORD PTR [r14+0xd8],rax
   3e573:	test   BYTE PTR [rbp+0x10],0x2
   3e577:	je     3e4be <__sprintf_chk@plt+0x33b0e>
   3e57d:	mov    rdi,QWORD PTR [rbp+0x18]
   3e581:	call   9ce0 <free@plt>
   3e586:	jmp    3e4be <__sprintf_chk@plt+0x33b0e>
   3e58b:	nop    DWORD PTR [rax+rax*1+0x0]
   3e590:	mov    eax,0x1
   3e595:	jmp    3e4c8 <__sprintf_chk@plt+0x33b18>
   3e59a:	and    DWORD PTR [rax+0x10],0xffffffef
   3e59e:	jmp    3e56c <__sprintf_chk@plt+0x33bbc>
   3e5a0:	call   a0a0 <__stack_chk_fail@plt>
   3e5a5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3e5b0:	endbr64 
   3e5b4:	push   r13
   3e5b6:	push   r12
   3e5b8:	push   rbp
   3e5b9:	mov    rbp,rdi
   3e5bc:	push   rbx
   3e5bd:	sub    rsp,0x8
   3e5c1:	mov    rbx,QWORD PTR [rdi+0xd0]
   3e5c8:	test   rbx,rbx
   3e5cb:	je     3e618 <__sprintf_chk@plt+0x33c68>
   3e5cd:	lea    r13,[rip+0xcdc]        # 3f2b0 <__sprintf_chk@plt+0x34900>
   3e5d4:	lea    r12,[rip+0xffffffffffff9bc5]        # 381a0 <__sprintf_chk@plt+0x2d7f0>
   3e5db:	jmp    3e5e5 <__sprintf_chk@plt+0x33c35>
   3e5dd:	nop    DWORD PTR [rax]
   3e5e0:	test   rbx,rbx
   3e5e3:	je     3e618 <__sprintf_chk@plt+0x33c68>
   3e5e5:	mov    rsi,rbx
   3e5e8:	mov    rbx,QWORD PTR [rbx+0x8]
   3e5ec:	test   BYTE PTR [rsi+0x10],0x48
   3e5f0:	jne    3e5e0 <__sprintf_chk@plt+0x33c30>
   3e5f2:	mov    rcx,r13
   3e5f5:	mov    rdx,r12
   3e5f8:	mov    rdi,rbp
   3e5fb:	call   3e300 <__sprintf_chk@plt+0x33950>
   3e600:	test   eax,eax
   3e602:	je     3e5e0 <__sprintf_chk@plt+0x33c30>
   3e604:	add    rsp,0x8
   3e608:	mov    eax,0x1
   3e60d:	pop    rbx
   3e60e:	pop    rbp
   3e60f:	pop    r12
   3e611:	pop    r13
   3e613:	ret    
   3e614:	nop    DWORD PTR [rax+0x0]
   3e618:	mov    rdi,rbp
   3e61b:	call   38330 <__sprintf_chk@plt+0x2d980>
   3e620:	add    rsp,0x8
   3e624:	xor    eax,eax
   3e626:	pop    rbx
   3e627:	pop    rbp
   3e628:	pop    r12
   3e62a:	pop    r13
   3e62c:	ret    
   3e62d:	nop    DWORD PTR [rax]
   3e630:	endbr64 
   3e634:	push   r13
   3e636:	push   r12
   3e638:	push   rbp
   3e639:	mov    rbp,rdi
   3e63c:	push   rbx
   3e63d:	sub    rsp,0x8
   3e641:	mov    rbx,QWORD PTR [rdi+0xd0]
   3e648:	test   rbx,rbx
   3e64b:	je     3e698 <__sprintf_chk@plt+0x33ce8>
   3e64d:	lea    r13,[rip+0x19cc]        # 40020 <__sprintf_chk@plt+0x35670>
   3e654:	lea    r12,[rip+0xffffffffffff9b75]        # 381d0 <__sprintf_chk@plt+0x2d820>
   3e65b:	jmp    3e665 <__sprintf_chk@plt+0x33cb5>
   3e65d:	nop    DWORD PTR [rax]
   3e660:	test   rbx,rbx
   3e663:	je     3e698 <__sprintf_chk@plt+0x33ce8>
   3e665:	mov    rsi,rbx
   3e668:	mov    rbx,QWORD PTR [rbx+0x8]
   3e66c:	test   BYTE PTR [rsi+0x10],0x8
   3e670:	jne    3e660 <__sprintf_chk@plt+0x33cb0>
   3e672:	mov    rcx,r13
   3e675:	mov    rdx,r12
   3e678:	mov    rdi,rbp
   3e67b:	call   3e300 <__sprintf_chk@plt+0x33950>
   3e680:	test   eax,eax
   3e682:	je     3e660 <__sprintf_chk@plt+0x33cb0>
   3e684:	add    rsp,0x8
   3e688:	mov    eax,0x1
   3e68d:	pop    rbx
   3e68e:	pop    rbp
   3e68f:	pop    r12
   3e691:	pop    r13
   3e693:	ret    
   3e694:	nop    DWORD PTR [rax+0x0]
   3e698:	mov    rdi,rbp
   3e69b:	call   38330 <__sprintf_chk@plt+0x2d980>
   3e6a0:	add    rsp,0x8
   3e6a4:	xor    eax,eax
   3e6a6:	pop    rbx
   3e6a7:	pop    rbp
   3e6a8:	pop    r12
   3e6aa:	pop    r13
   3e6ac:	ret    
   3e6ad:	nop    DWORD PTR [rax]
   3e6b0:	push   r15
   3e6b2:	mov    r15,rsi
   3e6b5:	push   r14
   3e6b7:	push   r13
   3e6b9:	mov    r13,rdi
   3e6bc:	mov    edi,0x1
   3e6c1:	push   r12
   3e6c3:	push   rbp
   3e6c4:	push   rbx
   3e6c5:	mov    rbx,rsi
   3e6c8:	sub    rsp,0x28
   3e6cc:	test   rsi,rsi
   3e6cf:	je     3e724 <__sprintf_chk@plt+0x33d74>
   3e6d1:	xor    ebp,ebp
   3e6d3:	jmp    3e6e9 <__sprintf_chk@plt+0x33d39>
   3e6d5:	nop    DWORD PTR [rax]
   3e6d8:	call   a060 <strlen@plt>
   3e6dd:	add    rbp,rax
   3e6e0:	mov    r15,QWORD PTR [r15+0x8]
   3e6e4:	test   r15,r15
   3e6e7:	je     3e720 <__sprintf_chk@plt+0x33d70>
   3e6e9:	mov    eax,DWORD PTR [r15+0x10]
   3e6ed:	mov    edx,eax
   3e6ef:	and    edx,0x1
   3e6f2:	test   al,0x10
   3e6f4:	je     3e8a0 <__sprintf_chk@plt+0x33ef0>
   3e6fa:	test   edx,edx
   3e6fc:	jne    3e6e0 <__sprintf_chk@plt+0x33d30>
   3e6fe:	mov    rdi,QWORD PTR [r15+0x18]
   3e702:	test   al,0x2
   3e704:	jne    3e6d8 <__sprintf_chk@plt+0x33d28>
   3e706:	add    rbp,QWORD PTR [r15+0x20]
   3e70a:	mov    r15,QWORD PTR [r15+0x8]
   3e70e:	sub    rbp,rdi
   3e711:	test   r15,r15
   3e714:	jne    3e6e9 <__sprintf_chk@plt+0x33d39>
   3e716:	cs nop WORD PTR [rax+rax*1+0x0]
   3e720:	lea    rdi,[rbp+0x1]
   3e724:	call   a4a0 <malloc@plt>
   3e729:	mov    QWORD PTR [rsp+0x18],rax
   3e72e:	test   rax,rax
   3e731:	je     3e8dc <__sprintf_chk@plt+0x33f2c>
   3e737:	mov    r14,rbx
   3e73a:	mov    r9,QWORD PTR [rsp+0x18]
   3e73f:	mov    eax,DWORD PTR [r14+0x10]
   3e743:	mov    r12,QWORD PTR [r14+0x8]
   3e747:	test   al,0x1
   3e749:	jne    3e7ea <__sprintf_chk@plt+0x33e3a>
   3e74f:	nop
   3e750:	mov    rdi,QWORD PTR [r14+0x18]
   3e754:	test   al,0x2
   3e756:	je     3e800 <__sprintf_chk@plt+0x33e50>
   3e75c:	mov    QWORD PTR [rsp+0x10],r9
   3e761:	mov    QWORD PTR [rsp+0x8],rdi
   3e766:	call   a060 <strlen@plt>
   3e76b:	mov    r9,QWORD PTR [rsp+0x10]
   3e770:	mov    rsi,QWORD PTR [rsp+0x8]
   3e775:	mov    rdx,rax
   3e778:	lea    rbp,[r9+rax*1]
   3e77c:	mov    rdi,r9
   3e77f:	call   a420 <memcpy@plt>
   3e784:	cmp    rbx,r14
   3e787:	je     3e7d4 <__sprintf_chk@plt+0x33e24>
   3e789:	mov    eax,DWORD PTR [r14+0x10]
   3e78d:	mov    rdx,QWORD PTR [r14]
   3e790:	and    eax,0x4
   3e793:	or     DWORD PTR [rbx+0x10],eax
   3e796:	mov    rax,QWORD PTR [r14+0x8]
   3e79a:	test   rdx,rdx
   3e79d:	je     3e880 <__sprintf_chk@plt+0x33ed0>
   3e7a3:	mov    QWORD PTR [rdx+0x8],rax
   3e7a7:	test   rax,rax
   3e7aa:	je     3e890 <__sprintf_chk@plt+0x33ee0>
   3e7b0:	mov    rax,QWORD PTR [r14+0x8]
   3e7b4:	test   rax,rax
   3e7b7:	je     3e870 <__sprintf_chk@plt+0x33ec0>
   3e7bd:	mov    QWORD PTR [rax],rdx
   3e7c0:	test   BYTE PTR [r14+0x10],0x2
   3e7c5:	jne    3e820 <__sprintf_chk@plt+0x33e70>
   3e7c7:	mov    rdi,r14
   3e7ca:	call   9ce0 <free@plt>
   3e7cf:	cmp    r14,r15
   3e7d2:	je     3e836 <__sprintf_chk@plt+0x33e86>
   3e7d4:	mov    r14,r12
   3e7d7:	mov    r9,rbp
   3e7da:	mov    eax,DWORD PTR [r14+0x10]
   3e7de:	mov    r12,QWORD PTR [r14+0x8]
   3e7e2:	test   al,0x1
   3e7e4:	je     3e750 <__sprintf_chk@plt+0x33da0>
   3e7ea:	mov    rbp,r9
   3e7ed:	lea    rsi,[rip+0x2d35c]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   3e7f4:	xor    edx,edx
   3e7f6:	jmp    3e77c <__sprintf_chk@plt+0x33dcc>
   3e7f8:	nop    DWORD PTR [rax+rax*1+0x0]
   3e800:	mov    rdx,QWORD PTR [r14+0x20]
   3e804:	mov    rsi,QWORD PTR [r13+0xa8]
   3e80b:	sub    rdx,rdi
   3e80e:	add    rsi,rdi
   3e811:	lea    rbp,[r9+rdx*1]
   3e815:	jmp    3e77c <__sprintf_chk@plt+0x33dcc>
   3e81a:	nop    WORD PTR [rax+rax*1+0x0]
   3e820:	mov    rdi,QWORD PTR [r14+0x18]
   3e824:	call   9ce0 <free@plt>
   3e829:	mov    rdi,r14
   3e82c:	call   9ce0 <free@plt>
   3e831:	cmp    r14,r15
   3e834:	jne    3e7d4 <__sprintf_chk@plt+0x33e24>
   3e836:	mov    edx,DWORD PTR [rbx+0x10]
   3e839:	mov    BYTE PTR [rbp+0x0],0x0
   3e83d:	mov    eax,edx
   3e83f:	and    eax,0xffffffef
   3e842:	and    edx,0x2
   3e845:	mov    DWORD PTR [rbx+0x10],eax
   3e848:	jne    3e8c0 <__sprintf_chk@plt+0x33f10>
   3e84a:	or     eax,0x2
   3e84d:	mov    DWORD PTR [rbx+0x10],eax
   3e850:	mov    rax,QWORD PTR [rsp+0x18]
   3e855:	mov    QWORD PTR [rbx+0x18],rax
   3e859:	add    rsp,0x28
   3e85d:	xor    eax,eax
   3e85f:	pop    rbx
   3e860:	pop    rbp
   3e861:	pop    r12
   3e863:	pop    r13
   3e865:	pop    r14
   3e867:	pop    r15
   3e869:	ret    
   3e86a:	nop    WORD PTR [rax+rax*1+0x0]
   3e870:	mov    QWORD PTR [r13+0xd8],rdx
   3e877:	jmp    3e7c0 <__sprintf_chk@plt+0x33e10>
   3e87c:	nop    DWORD PTR [rax+0x0]
   3e880:	mov    QWORD PTR [r13+0xd0],rax
   3e887:	jmp    3e7b4 <__sprintf_chk@plt+0x33e04>
   3e88c:	nop    DWORD PTR [rax+0x0]
   3e890:	and    DWORD PTR [rdx+0x10],0xffffffef
   3e894:	jmp    3e7b0 <__sprintf_chk@plt+0x33e00>
   3e899:	nop    DWORD PTR [rax+0x0]
   3e8a0:	test   edx,edx
   3e8a2:	jne    3e720 <__sprintf_chk@plt+0x33d70>
   3e8a8:	mov    rdi,QWORD PTR [r15+0x18]
   3e8ac:	test   al,0x2
   3e8ae:	je     3e8d0 <__sprintf_chk@plt+0x33f20>
   3e8b0:	call   a060 <strlen@plt>
   3e8b5:	add    rbp,rax
   3e8b8:	jmp    3e720 <__sprintf_chk@plt+0x33d70>
   3e8bd:	nop    DWORD PTR [rax]
   3e8c0:	mov    rdi,QWORD PTR [rbx+0x18]
   3e8c4:	call   9ce0 <free@plt>
   3e8c9:	jmp    3e850 <__sprintf_chk@plt+0x33ea0>
   3e8cb:	nop    DWORD PTR [rax+rax*1+0x0]
   3e8d0:	add    rbp,QWORD PTR [r15+0x20]
   3e8d4:	sub    rbp,rdi
   3e8d7:	jmp    3e720 <__sprintf_chk@plt+0x33d70>
   3e8dc:	add    rsp,0x28
   3e8e0:	mov    rdi,r13
   3e8e3:	pop    rbx
   3e8e4:	pop    rbp
   3e8e5:	pop    r12
   3e8e7:	pop    r13
   3e8e9:	pop    r14
   3e8eb:	pop    r15
   3e8ed:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   3e8f2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3e8fd:	nop    DWORD PTR [rax]
   3e900:	push   r15
   3e902:	push   r14
   3e904:	push   r13
   3e906:	push   r12
   3e908:	mov    r12,rdi
   3e90b:	push   rbp
   3e90c:	mov    rbp,rsi
   3e90f:	push   rbx
   3e910:	sub    rsp,0x8
   3e914:	mov    eax,DWORD PTR [rdi+0x20]
   3e917:	test   eax,0x200000
   3e91c:	jne    3eb60 <__sprintf_chk@plt+0x341b0>
   3e922:	test   eax,0x400000
   3e927:	jne    3eafc <__sprintf_chk@plt+0x3414c>
   3e92d:	test   BYTE PTR [r12+0x24],0x80
   3e933:	jne    3eae8 <__sprintf_chk@plt+0x34138>
   3e939:	movabs rbx,0x8000001000
   3e943:	jmp    3e960 <__sprintf_chk@plt+0x33fb0>
   3e945:	nop    DWORD PTR [rax]
   3e948:	mov    rax,QWORD PTR [r12+0x20]
   3e94d:	mov    rbp,QWORD PTR [r12+0xb8]
   3e955:	and    rax,rbx
   3e958:	cmp    rax,0x1
   3e95c:	adc    rbp,0x0
   3e960:	xor    edx,edx
   3e962:	mov    rsi,rbp
   3e965:	mov    rdi,r12
   3e968:	call   3d140 <__sprintf_chk@plt+0x32790>
   3e96d:	cmp    eax,0x1
   3e970:	je     3e948 <__sprintf_chk@plt+0x33f98>
   3e972:	mov    rdx,QWORD PTR [r12+0xd8]
   3e97a:	test   rdx,rdx
   3e97d:	je     3e983 <__sprintf_chk@plt+0x33fd3>
   3e97f:	and    DWORD PTR [rdx+0x10],0xffffffef
   3e983:	cmp    eax,0x2
   3e986:	je     3ea4e <__sprintf_chk@plt+0x3409e>
   3e98c:	test   BYTE PTR [r12+0x22],0x20
   3e992:	jne    3eb21 <__sprintf_chk@plt+0x34171>
   3e998:	cmp    QWORD PTR [rip+0x403c0],0x0        # 7ed60 <argp_err_exit_status@@Base+0xa0>
   3e9a0:	lea    rbp,[rip+0x403b9]        # 7ed60 <argp_err_exit_status@@Base+0xa0>
   3e9a7:	lea    r13,[rip+0x2d3a2]        # 6bd50 <_obstack_memory_used@@Base+0x1f0d0>
   3e9ae:	lea    r14,[rip+0x2d3a5]        # 6bd5a <_obstack_memory_used@@Base+0x1f0da>
   3e9b5:	jne    3e9f1 <__sprintf_chk@plt+0x34041>
   3e9b7:	jmp    3ea4e <__sprintf_chk@plt+0x3409e>
   3e9bc:	nop    DWORD PTR [rax+0x0]
   3e9c0:	test   edx,edx
   3e9c2:	jne    3e9e6 <__sprintf_chk@plt+0x34036>
   3e9c4:	test   al,0x4
   3e9c6:	jne    3ea18 <__sprintf_chk@plt+0x34068>
   3e9c8:	mov    rax,QWORD PTR [rbp+0x10]
   3e9cc:	test   rax,rax
   3e9cf:	je     3e9e6 <__sprintf_chk@plt+0x34036>
   3e9d1:	mov    rdi,r12
   3e9d4:	call   rax
   3e9d6:	test   eax,eax
   3e9d8:	jne    3ea4e <__sprintf_chk@plt+0x3409e>
   3e9da:	test   BYTE PTR [r12+0x22],0x20
   3e9e0:	jne    3eab0 <__sprintf_chk@plt+0x34100>
   3e9e6:	add    rbp,0x18
   3e9ea:	cmp    QWORD PTR [rbp+0x0],0x0
   3e9ef:	je     3ea4e <__sprintf_chk@plt+0x3409e>
   3e9f1:	mov    esi,DWORD PTR [r12+0x20]
   3e9f6:	mov    ecx,DWORD PTR [rbp+0x8]
   3e9f9:	mov    eax,DWORD PTR [rbp+0xc]
   3e9fc:	mov    edx,esi
   3e9fe:	and    edx,ecx
   3ea00:	test   al,0x2
   3ea02:	je     3ea0c <__sprintf_chk@plt+0x3405c>
   3ea04:	cmp    ecx,edx
   3ea06:	sete   dl
   3ea09:	movzx  edx,dl
   3ea0c:	test   al,0x1
   3ea0e:	jne    3e9c0 <__sprintf_chk@plt+0x34010>
   3ea10:	test   edx,edx
   3ea12:	je     3e9e6 <__sprintf_chk@plt+0x34036>
   3ea14:	test   al,0x4
   3ea16:	je     3e9c8 <__sprintf_chk@plt+0x34018>
   3ea18:	mov    rbx,QWORD PTR [r12+0xd0]
   3ea20:	test   rbx,rbx
   3ea23:	jne    3ea39 <__sprintf_chk@plt+0x34089>
   3ea25:	jmp    3ea6d <__sprintf_chk@plt+0x340bd>
   3ea27:	nop    WORD PTR [rax+rax*1+0x0]
   3ea30:	mov    rbx,QWORD PTR [rbx+0x8]
   3ea34:	test   rbx,rbx
   3ea37:	je     3ea68 <__sprintf_chk@plt+0x340b8>
   3ea39:	test   BYTE PTR [rbx+0x10],0x10
   3ea3d:	je     3ea30 <__sprintf_chk@plt+0x34080>
   3ea3f:	mov    rsi,rbx
   3ea42:	mov    rdi,r12
   3ea45:	call   3e6b0 <__sprintf_chk@plt+0x33d00>
   3ea4a:	test   eax,eax
   3ea4c:	je     3ea30 <__sprintf_chk@plt+0x34080>
   3ea4e:	mov    eax,DWORD PTR [r12+0xc0]
   3ea56:	add    rsp,0x8
   3ea5a:	pop    rbx
   3ea5b:	pop    rbp
   3ea5c:	pop    r12
   3ea5e:	pop    r13
   3ea60:	pop    r14
   3ea62:	pop    r15
   3ea64:	ret    
   3ea65:	nop    DWORD PTR [rax]
   3ea68:	mov    esi,DWORD PTR [r12+0x20]
   3ea6d:	and    esi,0x200000
   3ea73:	je     3e9c8 <__sprintf_chk@plt+0x34018>
   3ea79:	mov    rsi,r14
   3ea7c:	xor    edi,edi
   3ea7e:	mov    edx,0x5
   3ea83:	mov    rbx,QWORD PTR [r12+0x68]
   3ea88:	call   a040 <dcgettext@plt>
   3ea8d:	mov    rdi,r13
   3ea90:	mov    esi,DWORD PTR [r12+0xe0]
   3ea98:	mov    rdx,rax
   3ea9b:	xor    eax,eax
   3ea9d:	call   rbx
   3ea9f:	mov    rdi,r12
   3eaa2:	call   38030 <__sprintf_chk@plt+0x2d680>
   3eaa7:	jmp    3e9c8 <__sprintf_chk@plt+0x34018>
   3eaac:	nop    DWORD PTR [rax+0x0]
   3eab0:	mov    rsi,QWORD PTR [rbp+0x0]
   3eab4:	xor    edi,edi
   3eab6:	mov    edx,0x5
   3eabb:	mov    rbx,QWORD PTR [r12+0x68]
   3eac0:	call   a040 <dcgettext@plt>
   3eac5:	mov    rdi,r13
   3eac8:	mov    esi,DWORD PTR [r12+0xe0]
   3ead0:	mov    rdx,rax
   3ead3:	xor    eax,eax
   3ead5:	call   rbx
   3ead7:	mov    rdi,r12
   3eada:	call   38030 <__sprintf_chk@plt+0x2d680>
   3eadf:	jmp    3e9e6 <__sprintf_chk@plt+0x34036>
   3eae4:	nop    DWORD PTR [rax+0x0]
   3eae8:	mov    rax,QWORD PTR [r12+0x30]
   3eaed:	add    rax,0x1
   3eaf1:	cmp    rax,QWORD PTR [r12+0x28]
   3eaf6:	jne    3e939 <__sprintf_chk@plt+0x33f89>
   3eafc:	mov    edx,0x1
   3eb01:	mov    rsi,rbp
   3eb04:	mov    rdi,r12
   3eb07:	call   3d140 <__sprintf_chk@plt+0x32790>
   3eb0c:	cmp    eax,0x2
   3eb0f:	je     3ea4e <__sprintf_chk@plt+0x3409e>
   3eb15:	test   BYTE PTR [r12+0x22],0x20
   3eb1b:	je     3e998 <__sprintf_chk@plt+0x33fe8>
   3eb21:	xor    edi,edi
   3eb23:	mov    edx,0x5
   3eb28:	mov    rbx,QWORD PTR [r12+0x68]
   3eb2d:	lea    rsi,[rip+0x2d20e]        # 6bd42 <_obstack_memory_used@@Base+0x1f0c2>
   3eb34:	call   a040 <dcgettext@plt>
   3eb39:	mov    esi,DWORD PTR [r12+0xe0]
   3eb41:	lea    rdi,[rip+0x2d208]        # 6bd50 <_obstack_memory_used@@Base+0x1f0d0>
   3eb48:	mov    rdx,rax
   3eb4b:	xor    eax,eax
   3eb4d:	call   rbx
   3eb4f:	mov    rdi,r12
   3eb52:	call   38030 <__sprintf_chk@plt+0x2d680>
   3eb57:	jmp    3e998 <__sprintf_chk@plt+0x33fe8>
   3eb5c:	nop    DWORD PTR [rax+0x0]
   3eb60:	mov    rbx,QWORD PTR [rdi+0x68]
   3eb64:	mov    r15,QWORD PTR [rdi+0xa8]
   3eb6b:	mov    edx,0x5
   3eb70:	lea    rsi,[rip+0x2d1b8]        # 6bd2f <_obstack_memory_used@@Base+0x1f0af>
   3eb77:	mov    r14d,DWORD PTR [rdi+0xb0]
   3eb7e:	mov    r13d,DWORD PTR [rdi+0xe0]
   3eb85:	xor    edi,edi
   3eb87:	call   a040 <dcgettext@plt>
   3eb8c:	mov    rcx,r15
   3eb8f:	mov    rdi,rax
   3eb92:	mov    edx,r14d
   3eb95:	xor    eax,eax
   3eb97:	mov    esi,r13d
   3eb9a:	call   rbx
   3eb9c:	mov    eax,DWORD PTR [r12+0x20]
   3eba1:	jmp    3e922 <__sprintf_chk@plt+0x33f72>
   3eba6:	cs nop WORD PTR [rax+rax*1+0x0]
   3ebb0:	push   r15
   3ebb2:	push   r14
   3ebb4:	push   r13
   3ebb6:	mov    r13,rdi
   3ebb9:	push   r12
   3ebbb:	lea    r12,[rip+0x2d1a8]        # 6bd6a <_obstack_memory_used@@Base+0x1f0ea>
   3ebc2:	push   rbp
   3ebc3:	movabs rbp,0x8000001000
   3ebcd:	push   rbx
   3ebce:	sub    rsp,0x18
   3ebd2:	jmp    3ec88 <__sprintf_chk@plt+0x342d8>
   3ebd7:	nop    WORD PTR [rax+rax*1+0x0]
   3ebe0:	mov    ecx,DWORD PTR [r13+0x20]
   3ebe4:	test   ch,0x10
   3ebe7:	je     3ed00 <__sprintf_chk@plt+0x34350>
   3ebed:	test   ch,0x8
   3ebf0:	je     3ed50 <__sprintf_chk@plt+0x343a0>
   3ebf6:	test   dl,0x1
   3ebf9:	jne    3ed60 <__sprintf_chk@plt+0x343b0>
   3ebff:	mov    r8,QWORD PTR [rsi+0x18]
   3ec03:	and    edx,0x2
   3ec06:	mov    rdx,r8
   3ec09:	jne    3ec12 <__sprintf_chk@plt+0x34262>
   3ec0b:	add    rdx,QWORD PTR [r13+0xa8]
   3ec12:	movsx  edx,BYTE PTR [rdx]
   3ec15:	test   edi,edi
   3ec17:	je     3ed6a <__sprintf_chk@plt+0x343ba>
   3ec1d:	cmp    edi,edx
   3ec1f:	je     3ed0e <__sprintf_chk@plt+0x3435e>
   3ec25:	lea    rdx,[rbx+0x1]
   3ec29:	xor    edi,edi
   3ec2b:	nop    DWORD PTR [rax+rax*1+0x0]
   3ec30:	lea    rbx,[rdx+0x1]
   3ec34:	test   ecx,0x20000000
   3ec3a:	je     3eced <__sprintf_chk@plt+0x3433d>
   3ec40:	test   rbx,rbx
   3ec43:	jne    3ee50 <__sprintf_chk@plt+0x344a0>
   3ec49:	mov    rsi,QWORD PTR [r13+0xb8]
   3ec50:	cmp    rsi,QWORD PTR [r13+0xb0]
   3ec57:	jae    3efef <__sprintf_chk@plt+0x3463f>
   3ec5d:	and    ecx,0x200000
   3ec63:	jne    3edf8 <__sprintf_chk@plt+0x34448>
   3ec69:	mov    rax,QWORD PTR [r13+0x20]
   3ec6d:	mov    rdi,r13
   3ec70:	and    rax,rbp
   3ec73:	cmp    rax,0x1
   3ec77:	adc    rsi,0x0
   3ec7b:	call   3e900 <__sprintf_chk@plt+0x33f50>
   3ec80:	test   eax,eax
   3ec82:	jne    3edc1 <__sprintf_chk@plt+0x34411>
   3ec88:	mov    rax,QWORD PTR [r13+0xd0]
   3ec8f:	test   rax,rax
   3ec92:	je     3f008 <__sprintf_chk@plt+0x34658>
   3ec98:	xor    edi,edi
   3ec9a:	xor    ebx,ebx
   3ec9c:	nop    DWORD PTR [rax+0x0]
   3eca0:	mov    rsi,rax
   3eca3:	mov    rax,QWORD PTR [rax+0x8]
   3eca7:	mov    edx,DWORD PTR [rsi+0x10]
   3ecaa:	test   dl,0x40
   3ecad:	jne    3ebe0 <__sprintf_chk@plt+0x34230>
   3ecb3:	cmp    edi,0x1
   3ecb6:	sbb    rbx,0xffffffffffffffff
   3ecba:	test   BYTE PTR [r13+0x24],0x80
   3ecbf:	je     3ecd4 <__sprintf_chk@plt+0x34324>
   3ecc1:	mov    rcx,QWORD PTR [r13+0x30]
   3ecc5:	lea    rcx,[rbx+rcx*1+0x1]
   3ecca:	cmp    rcx,QWORD PTR [r13+0x28]
   3ecce:	je     3ed80 <__sprintf_chk@plt+0x343d0>
   3ecd4:	mov    ecx,DWORD PTR [r13+0x20]
   3ecd8:	mov    rdx,rbx
   3ecdb:	xor    edi,edi
   3ecdd:	lea    rbx,[rdx+0x1]
   3ece1:	test   ecx,0x20000000
   3ece7:	jne    3ec40 <__sprintf_chk@plt+0x34290>
   3eced:	test   rax,rax
   3ecf0:	jne    3eca0 <__sprintf_chk@plt+0x342f0>
   3ecf2:	jmp    3edd8 <__sprintf_chk@plt+0x34428>
   3ecf7:	nop    WORD PTR [rax+rax*1+0x0]
   3ed00:	mov    rdx,rbx
   3ed03:	test   BYTE PTR [r13+0x24],0x80
   3ed08:	je     3ec30 <__sprintf_chk@plt+0x34280>
   3ed0e:	mov    rdx,QWORD PTR [rsi]
   3ed11:	test   rdx,rdx
   3ed14:	je     3ee20 <__sprintf_chk@plt+0x34470>
   3ed1a:	mov    QWORD PTR [rdx+0x8],rax
   3ed1e:	test   rax,rax
   3ed21:	je     3ee40 <__sprintf_chk@plt+0x34490>
   3ed27:	mov    QWORD PTR [rax],rdx
   3ed2a:	mov    QWORD PTR [rsi],0x0
   3ed31:	mov    QWORD PTR [rsi+0x8],0x0
   3ed39:	test   rax,rax
   3ed3c:	jne    3eca0 <__sprintf_chk@plt+0x342f0>
   3ed42:	jmp    3edd8 <__sprintf_chk@plt+0x34428>
   3ed47:	nop    WORD PTR [rax+rax*1+0x0]
   3ed50:	mov    rdx,rbx
   3ed53:	jmp    3ec30 <__sprintf_chk@plt+0x34280>
   3ed58:	nop    DWORD PTR [rax+rax*1+0x0]
   3ed60:	xor    edx,edx
   3ed62:	test   edi,edi
   3ed64:	jne    3ec25 <__sprintf_chk@plt+0x34275>
   3ed6a:	mov    edi,edx
   3ed6c:	test   rax,rax
   3ed6f:	jne    3eca0 <__sprintf_chk@plt+0x342f0>
   3ed75:	jmp    3edd8 <__sprintf_chk@plt+0x34428>
   3ed77:	nop    WORD PTR [rax+rax*1+0x0]
   3ed80:	mov    rdi,rsi
   3ed83:	test   rax,rax
   3ed86:	jne    3ed99 <__sprintf_chk@plt+0x343e9>
   3ed88:	jmp    3edd0 <__sprintf_chk@plt+0x34420>
   3ed8a:	nop    WORD PTR [rax+rax*1+0x0]
   3ed90:	mov    edx,DWORD PTR [rax+0x10]
   3ed93:	mov    rdi,rax
   3ed96:	mov    rax,rcx
   3ed99:	mov    rcx,QWORD PTR [rax+0x8]
   3ed9d:	or     edx,0x10
   3eda0:	mov    DWORD PTR [rdi+0x10],edx
   3eda3:	test   rcx,rcx
   3eda6:	jne    3ed90 <__sprintf_chk@plt+0x343e0>
   3eda8:	test   BYTE PTR [rsi+0x10],0x10
   3edac:	je     3edd0 <__sprintf_chk@plt+0x34420>
   3edae:	mov    rdi,r13
   3edb1:	call   3e6b0 <__sprintf_chk@plt+0x33d00>
   3edb6:	test   eax,eax
   3edb8:	je     3edd0 <__sprintf_chk@plt+0x34420>
   3edba:	mov    eax,DWORD PTR [r13+0xc0]
   3edc1:	add    rsp,0x18
   3edc5:	pop    rbx
   3edc6:	pop    rbp
   3edc7:	pop    r12
   3edc9:	pop    r13
   3edcb:	pop    r14
   3edcd:	pop    r15
   3edcf:	ret    
   3edd0:	mov    ecx,DWORD PTR [r13+0x20]
   3edd4:	add    rbx,0x1
   3edd8:	test   rbx,rbx
   3eddb:	jne    3f04a <__sprintf_chk@plt+0x3469a>
   3ede1:	test   ecx,0x20000000
   3ede7:	jne    3ec49 <__sprintf_chk@plt+0x34299>
   3eded:	mov    ebx,0x1
   3edf2:	jmp    3ee54 <__sprintf_chk@plt+0x344a4>
   3edf4:	nop    DWORD PTR [rax+0x0]
   3edf8:	mov    rsi,r12
   3edfb:	mov    edx,0x5
   3ee00:	xor    edi,edi
   3ee02:	mov    rbx,QWORD PTR [r13+0x68]
   3ee06:	call   a040 <dcgettext@plt>
   3ee0b:	mov    rdi,rax
   3ee0e:	xor    eax,eax
   3ee10:	call   rbx
   3ee12:	mov    rsi,QWORD PTR [r13+0xb8]
   3ee19:	jmp    3ec69 <__sprintf_chk@plt+0x342b9>
   3ee1e:	xchg   ax,ax
   3ee20:	mov    QWORD PTR [r13+0xd0],rax
   3ee27:	test   rax,rax
   3ee2a:	jne    3ed27 <__sprintf_chk@plt+0x34377>
   3ee30:	mov    QWORD PTR [r13+0xd8],rdx
   3ee37:	jmp    3ed2a <__sprintf_chk@plt+0x3437a>
   3ee3c:	nop    DWORD PTR [rax+0x0]
   3ee40:	and    DWORD PTR [rdx+0x10],0xffffffef
   3ee44:	mov    QWORD PTR [r13+0xd8],rdx
   3ee4b:	jmp    3ed2a <__sprintf_chk@plt+0x3437a>
   3ee50:	lea    rbx,[rdx+0x2]
   3ee54:	xor    eax,eax
   3ee56:	and    ecx,0x2
   3ee59:	je     3ee5f <__sprintf_chk@plt+0x344af>
   3ee5b:	mov    rax,QWORD PTR [r13+0x10]
   3ee5f:	mov    rdi,QWORD PTR [r13+0x8]
   3ee63:	test   rdi,rdi
   3ee66:	je     3f011 <__sprintf_chk@plt+0x34661>
   3ee6c:	add    rax,QWORD PTR [r13+0x0]
   3ee70:	lea    rdx,[rax+rbx*1]
   3ee74:	cmp    QWORD PTR [r13+0x18],rdx
   3ee78:	jae    3ef8b <__sprintf_chk@plt+0x345db>
   3ee7e:	mov    edx,0x80
   3ee83:	cmp    rbx,rdx
   3ee86:	cmovae rdx,rbx
   3ee8a:	lea    rbx,[rdx+rax*1]
   3ee8e:	lea    rsi,[rbx*8+0x0]
   3ee96:	call   a570 <realloc@plt>
   3ee9b:	test   rax,rax
   3ee9e:	je     3f035 <__sprintf_chk@plt+0x34685>
   3eea4:	mov    QWORD PTR [r13+0x18],rbx
   3eea8:	mov    rbx,QWORD PTR [r13+0xd0]
   3eeaf:	mov    QWORD PTR [r13+0x8],rax
   3eeb3:	test   rbx,rbx
   3eeb6:	jne    3ef9b <__sprintf_chk@plt+0x345eb>
   3eebc:	mov    r8,QWORD PTR [r13+0x8]
   3eec0:	mov    r15,QWORD PTR [r13+0x10]
   3eec4:	mov    rbp,QWORD PTR [r13+0x0]
   3eec8:	add    r15,rbp
   3eecb:	xor    eax,eax
   3eecd:	mov    QWORD PTR [r8+r15*8],0x0
   3eed5:	add    rsp,0x18
   3eed9:	pop    rbx
   3eeda:	pop    rbp
   3eedb:	pop    r12
   3eedd:	pop    r13
   3eedf:	pop    r14
   3eee1:	pop    r15
   3eee3:	ret    
   3eee4:	nop    DWORD PTR [rax+0x0]
   3eee8:	mov    rdx,QWORD PTR [rbx+0x18]
   3eeec:	mov    r12,rdx
   3eeef:	test   al,0x2
   3eef1:	je     3efba <__sprintf_chk@plt+0x3460a>
   3eef7:	mov    rdi,rdx
   3eefa:	call   a060 <strlen@plt>
   3eeff:	mov    r14,rax
   3ef02:	lea    rdi,[rax+0x1]
   3ef06:	call   a4a0 <malloc@plt>
   3ef0b:	mov    r15,QWORD PTR [r13+0x10]
   3ef0f:	mov    rbp,QWORD PTR [r13+0x0]
   3ef13:	mov    r8,QWORD PTR [r13+0x8]
   3ef17:	mov    rcx,rax
   3ef1a:	lea    rax,[r15+rbp*1]
   3ef1e:	mov    QWORD PTR [r8+rax*8],rcx
   3ef22:	test   rcx,rcx
   3ef25:	je     3f058 <__sprintf_chk@plt+0x346a8>
   3ef2b:	mov    rdx,r14
   3ef2e:	mov    rsi,r12
   3ef31:	mov    rdi,rcx
   3ef34:	mov    QWORD PTR [rsp+0x8],r8
   3ef39:	call   a420 <memcpy@plt>
   3ef3e:	mov    r8,QWORD PTR [rsp+0x8]
   3ef43:	mov    BYTE PTR [rax+r14*1],0x0
   3ef48:	mov    rax,QWORD PTR [rbx]
   3ef4b:	mov    rdx,QWORD PTR [rbx+0x8]
   3ef4f:	test   rax,rax
   3ef52:	je     3efd1 <__sprintf_chk@plt+0x34621>
   3ef54:	mov    QWORD PTR [rax+0x8],rdx
   3ef58:	test   rdx,rdx
   3ef5b:	je     3efe9 <__sprintf_chk@plt+0x34639>
   3ef61:	mov    QWORD PTR [rdx],rax
   3ef64:	add    rbp,0x1
   3ef68:	mov    QWORD PTR [rbx],0x0
   3ef6f:	mov    QWORD PTR [rbx+0x8],0x0
   3ef77:	add    QWORD PTR [r13+0x30],0x1
   3ef7c:	mov    QWORD PTR [r13+0x0],rbp
   3ef80:	test   BYTE PTR [r13+0x23],0x20
   3ef85:	jne    3eec8 <__sprintf_chk@plt+0x34518>
   3ef8b:	mov    rbx,QWORD PTR [r13+0xd0]
   3ef92:	test   rbx,rbx
   3ef95:	je     3eebc <__sprintf_chk@plt+0x3450c>
   3ef9b:	mov    eax,DWORD PTR [rbx+0x10]
   3ef9e:	test   al,0x1
   3efa0:	je     3eee8 <__sprintf_chk@plt+0x34538>
   3efa6:	mov    edi,0x1
   3efab:	lea    r12,[rip+0x2cb9e]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   3efb2:	xor    r14d,r14d
   3efb5:	jmp    3ef06 <__sprintf_chk@plt+0x34556>
   3efba:	mov    r14,QWORD PTR [rbx+0x20]
   3efbe:	add    r12,QWORD PTR [r13+0xa8]
   3efc5:	sub    r14,rdx
   3efc8:	lea    rdi,[r14+0x1]
   3efcc:	jmp    3ef06 <__sprintf_chk@plt+0x34556>
   3efd1:	mov    QWORD PTR [r13+0xd0],rdx
   3efd8:	test   rdx,rdx
   3efdb:	jne    3ef61 <__sprintf_chk@plt+0x345b1>
   3efdd:	mov    QWORD PTR [r13+0xd8],rax
   3efe4:	jmp    3ef64 <__sprintf_chk@plt+0x345b4>
   3efe9:	and    DWORD PTR [rax+0x10],0xffffffef
   3efed:	jmp    3efdd <__sprintf_chk@plt+0x3462d>
   3efef:	mov    QWORD PTR [r13+0x60],0x0
   3eff7:	add    rsp,0x18
   3effb:	xor    eax,eax
   3effd:	pop    rbx
   3effe:	pop    rbp
   3efff:	pop    r12
   3f001:	pop    r13
   3f003:	pop    r14
   3f005:	pop    r15
   3f007:	ret    
   3f008:	mov    ecx,DWORD PTR [r13+0x20]
   3f00c:	jmp    3ede1 <__sprintf_chk@plt+0x34431>
   3f011:	add    rax,rbx
   3f014:	mov    esi,0x8
   3f019:	cmp    rax,0x80
   3f01f:	mov    eax,0x80
   3f024:	cmovbe rbx,rax
   3f028:	mov    rdi,rbx
   3f02b:	call   a2f0 <calloc@plt>
   3f030:	jmp    3ee9b <__sprintf_chk@plt+0x344eb>
   3f035:	mov    rdi,r13
   3f038:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3f03d:	test   eax,eax
   3f03f:	jne    3edba <__sprintf_chk@plt+0x3440a>
   3f045:	jmp    3ef8b <__sprintf_chk@plt+0x345db>
   3f04a:	add    rbx,0x1
   3f04e:	jmp    3ee54 <__sprintf_chk@plt+0x344a4>
   3f053:	nop    DWORD PTR [rax+rax*1+0x0]
   3f058:	add    rsp,0x18
   3f05c:	mov    rdi,r13
   3f05f:	pop    rbx
   3f060:	pop    rbp
   3f061:	pop    r12
   3f063:	pop    r13
   3f065:	pop    r14
   3f067:	pop    r15
   3f069:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   3f06e:	xchg   ax,ax
   3f070:	push   r13
   3f072:	push   r12
   3f074:	mov    r12d,r9d
   3f077:	push   rbp
   3f078:	mov    rbp,rdi
   3f07b:	push   rbx
   3f07c:	mov    rbx,rsi
   3f07f:	mov    rsi,rdx
   3f082:	movsxd rdx,ecx
   3f085:	sub    rsp,0x8
   3f089:	mov    rax,QWORD PTR [rdi+0x38]
   3f08d:	mov    ecx,DWORD PTR [rdi+0x20]
   3f090:	mov    QWORD PTR [rbx+0x38],rax
   3f094:	mov    rax,QWORD PTR [rdi+0x68]
   3f098:	mov    QWORD PTR [rbx+0x68],rax
   3f09c:	mov    rax,QWORD PTR [rdi+0x60]
   3f0a0:	mov    QWORD PTR [rbx+0x60],rax
   3f0a4:	mov    rax,QWORD PTR [rdi+0x58]
   3f0a8:	mov    QWORD PTR [rbx+0x58],rax
   3f0ac:	test   r8b,0x40
   3f0b0:	jne    3f0d2 <__sprintf_chk@plt+0x34722>
   3f0b2:	mov    rax,QWORD PTR [rdi+0x70]
   3f0b6:	mov    QWORD PTR [rbx+0x70],rax
   3f0ba:	mov    rax,QWORD PTR [rdi+0x90]
   3f0c1:	mov    QWORD PTR [rbx+0x90],rax
   3f0c8:	mov    eax,ecx
   3f0ca:	and    eax,0x8180000
   3f0cf:	or     r8d,eax
   3f0d2:	test   r8b,0x4
   3f0d6:	jne    3f0e6 <__sprintf_chk@plt+0x34736>
   3f0d8:	mov    rax,QWORD PTR [rbp+0xa0]
   3f0df:	mov    QWORD PTR [rbx+0xa0],rax
   3f0e6:	mov    eax,r8d
   3f0e9:	and    eax,0x44
   3f0ec:	cmp    eax,0x44
   3f0ef:	je     3f109 <__sprintf_chk@plt+0x34759>
   3f0f1:	mov    rax,QWORD PTR [rbp+0x98]
   3f0f8:	mov    QWORD PTR [rbx+0x98],rax
   3f0ff:	mov    eax,ecx
   3f101:	and    eax,0x4000000
   3f106:	or     r8d,eax
   3f109:	mov    eax,DWORD PTR [rbp+0x24]
   3f10c:	and    ecx,0x80200010
   3f112:	mov    rdi,rbx
   3f115:	or     ecx,r8d
   3f118:	mov    DWORD PTR [rbx+0x24],eax
   3f11b:	or     ecx,0x74000
   3f121:	call   38690 <__sprintf_chk@plt+0x2dce0>
   3f126:	mov    r13d,eax
   3f129:	test   eax,eax
   3f12b:	je     3f140 <__sprintf_chk@plt+0x34790>
   3f12d:	add    rsp,0x8
   3f131:	mov    eax,r13d
   3f134:	pop    rbx
   3f135:	pop    rbp
   3f136:	pop    r12
   3f138:	pop    r13
   3f13a:	ret    
   3f13b:	nop    DWORD PTR [rax+rax*1+0x0]
   3f140:	mov    eax,DWORD PTR [rbp+0xe0]
   3f146:	xor    esi,esi
   3f148:	mov    rdi,rbx
   3f14b:	add    eax,0x1
   3f14e:	mov    DWORD PTR [rbx+0xe0],eax
   3f154:	call   3e900 <__sprintf_chk@plt+0x33f50>
   3f159:	mov    r13d,eax
   3f15c:	test   eax,eax
   3f15e:	jne    3f1e0 <__sprintf_chk@plt+0x34830>
   3f164:	test   r12d,r12d
   3f167:	je     3f12d <__sprintf_chk@plt+0x3477d>
   3f169:	mov    rdi,rbx
   3f16c:	call   3ebb0 <__sprintf_chk@plt+0x34200>
   3f171:	mov    rbp,QWORD PTR [rbx+0xd0]
   3f178:	mov    r13d,eax
   3f17b:	test   rbp,rbp
   3f17e:	jne    3f195 <__sprintf_chk@plt+0x347e5>
   3f180:	jmp    3f1bb <__sprintf_chk@plt+0x3480b>
   3f182:	nop    WORD PTR [rax+rax*1+0x0]
   3f188:	mov    rdi,r12
   3f18b:	call   9ce0 <free@plt>
   3f190:	test   rbp,rbp
   3f193:	je     3f1bb <__sprintf_chk@plt+0x3480b>
   3f195:	mov    r12,rbp
   3f198:	mov    rbp,QWORD PTR [rbp+0x8]
   3f19c:	test   BYTE PTR [r12+0x10],0x2
   3f1a2:	je     3f188 <__sprintf_chk@plt+0x347d8>
   3f1a4:	mov    rdi,QWORD PTR [r12+0x18]
   3f1a9:	call   9ce0 <free@plt>
   3f1ae:	mov    rdi,r12
   3f1b1:	call   9ce0 <free@plt>
   3f1b6:	test   rbp,rbp
   3f1b9:	jne    3f195 <__sprintf_chk@plt+0x347e5>
   3f1bb:	mov    QWORD PTR [rbx+0xd8],0x0
   3f1c6:	mov    eax,r13d
   3f1c9:	mov    QWORD PTR [rbx+0xd0],0x0
   3f1d4:	add    rsp,0x8
   3f1d8:	pop    rbx
   3f1d9:	pop    rbp
   3f1da:	pop    r12
   3f1dc:	pop    r13
   3f1de:	ret    
   3f1df:	nop
   3f1e0:	mov    rbp,QWORD PTR [rbx+0xd0]
   3f1e7:	test   rbp,rbp
   3f1ea:	jne    3f1fd <__sprintf_chk@plt+0x3484d>
   3f1ec:	jmp    3f1bb <__sprintf_chk@plt+0x3480b>
   3f1ee:	xchg   ax,ax
   3f1f0:	mov    rdi,r12
   3f1f3:	call   9ce0 <free@plt>
   3f1f8:	test   rbp,rbp
   3f1fb:	je     3f1bb <__sprintf_chk@plt+0x3480b>
   3f1fd:	mov    r12,rbp
   3f200:	mov    rbp,QWORD PTR [rbp+0x8]
   3f204:	test   BYTE PTR [r12+0x10],0x2
   3f20a:	je     3f1f0 <__sprintf_chk@plt+0x34840>
   3f20c:	mov    rdi,QWORD PTR [r12+0x18]
   3f211:	call   9ce0 <free@plt>
   3f216:	jmp    3f1f0 <__sprintf_chk@plt+0x34840>
   3f218:	nop    DWORD PTR [rax+rax*1+0x0]
   3f220:	endbr64 
   3f224:	push   r13
   3f226:	push   r12
   3f228:	push   rbp
   3f229:	mov    rbp,rsi
   3f22c:	test   rdi,rdi
   3f22f:	je     3f280 <__sprintf_chk@plt+0x348d0>
   3f231:	mov    r12,rdi
   3f234:	mov    r13d,edx
   3f237:	call   a060 <strlen@plt>
   3f23c:	mov    ecx,r13d
   3f23f:	mov    rsi,r12
   3f242:	mov    rdi,rbp
   3f245:	mov    rdx,rax
   3f248:	call   38690 <__sprintf_chk@plt+0x2dce0>
   3f24d:	test   eax,eax
   3f24f:	jne    3f269 <__sprintf_chk@plt+0x348b9>
   3f251:	mov    DWORD PTR [rbp+0xe0],0x0
   3f25b:	xor    esi,esi
   3f25d:	mov    rdi,rbp
   3f260:	call   3e900 <__sprintf_chk@plt+0x33f50>
   3f265:	test   eax,eax
   3f267:	je     3f270 <__sprintf_chk@plt+0x348c0>
   3f269:	pop    rbp
   3f26a:	pop    r12
   3f26c:	pop    r13
   3f26e:	ret    
   3f26f:	nop
   3f270:	mov    rdi,rbp
   3f273:	pop    rbp
   3f274:	pop    r12
   3f276:	pop    r13
   3f278:	jmp    3ebb0 <__sprintf_chk@plt+0x34200>
   3f27d:	nop    DWORD PTR [rax]
   3f280:	mov    DWORD PTR [rsi+0xc0],0x3
   3f28a:	test   BYTE PTR [rsi+0x20],0x10
   3f28e:	jne    3f2a0 <__sprintf_chk@plt+0x348f0>
   3f290:	pop    rbp
   3f291:	mov    eax,0x3
   3f296:	pop    r12
   3f298:	pop    r13
   3f29a:	ret    
   3f29b:	nop    DWORD PTR [rax+rax*1+0x0]
   3f2a0:	mov    rdi,rbp
   3f2a3:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   3f2a8:	mov    eax,0x3
   3f2ad:	jmp    3f269 <__sprintf_chk@plt+0x348b9>
   3f2af:	nop
   3f2b0:	endbr64 
   3f2b4:	push   r15
   3f2b6:	mov    r15,rsi
   3f2b9:	push   r14
   3f2bb:	push   r13
   3f2bd:	mov    r13,rdi
   3f2c0:	push   r12
   3f2c2:	push   rbp
   3f2c3:	push   rbx
   3f2c4:	mov    rbx,rdx
   3f2c7:	sub    rsp,0x238
   3f2ce:	movzx  edx,BYTE PTR [rsi]
   3f2d1:	mov    QWORD PTR [rsp+0x18],rcx
   3f2d6:	mov    QWORD PTR [rsp+0x8],r8
   3f2db:	mov    DWORD PTR [rsp+0x14],r9d
   3f2e0:	mov    rax,QWORD PTR fs:0x28
   3f2e9:	mov    QWORD PTR [rsp+0x228],rax
   3f2f1:	xor    eax,eax
   3f2f3:	mov    eax,edx
   3f2f5:	and    eax,0xffffffdf
   3f2f8:	sub    eax,0x41
   3f2fb:	cmp    al,0x19
   3f2fd:	jbe    3f308 <__sprintf_chk@plt+0x34958>
   3f2ff:	cmp    dl,0x5f
   3f302:	jne    3f478 <__sprintf_chk@plt+0x34ac8>
   3f308:	cmp    rbx,0x1
   3f30c:	jbe    3fd0d <__sprintf_chk@plt+0x3535d>
   3f312:	mov    eax,0x1
   3f317:	nop    WORD PTR [rax+rax*1+0x0]
   3f320:	movzx  ecx,BYTE PTR [r15+rax*1]
   3f325:	lea    rsi,[r15+rax*1]
   3f329:	mov    edx,ecx
   3f32b:	and    edx,0xffffffdf
   3f32e:	sub    edx,0x41
   3f331:	cmp    dl,0x19
   3f334:	jbe    3f347 <__sprintf_chk@plt+0x34997>
   3f336:	lea    edx,[rcx-0x30]
   3f339:	cmp    dl,0x9
   3f33c:	jbe    3f347 <__sprintf_chk@plt+0x34997>
   3f33e:	cmp    cl,0x5f
   3f341:	jne    3f889 <__sprintf_chk@plt+0x34ed9>
   3f347:	add    rax,0x1
   3f34b:	cmp    rbx,rax
   3f34e:	jne    3f320 <__sprintf_chk@plt+0x34970>
   3f350:	mov    rax,QWORD PTR [rsp+0x8]
   3f355:	mov    QWORD PTR [rsp],0x0
   3f35d:	mov    r12,r15
   3f360:	mov    QWORD PTR [rax],rsi
   3f363:	mov    eax,DWORD PTR [r13+0x20]
   3f367:	mov    DWORD PTR [rsp+0x20],eax
   3f36b:	test   eax,0x80000
   3f370:	je     3f615 <__sprintf_chk@plt+0x34c65>
   3f376:	mov    rbp,QWORD PTR [r13+0x70]
   3f37a:	test   eax,0x8000000
   3f37f:	je     3f698 <__sprintf_chk@plt+0x34ce8>
   3f385:	mov    rdi,QWORD PTR [rbp+0x0]
   3f389:	test   rdi,rdi
   3f38c:	je     3f615 <__sprintf_chk@plt+0x34c65>
   3f392:	mov    QWORD PTR [rsp+0x28],r13
   3f397:	xor    r14d,r14d
   3f39a:	mov    r13,rdi
   3f39d:	jmp    3f3be <__sprintf_chk@plt+0x34a0e>
   3f39f:	nop
   3f3a0:	cmp    QWORD PTR [rbp+r14*8+0x8],0x0
   3f3a6:	je     3f610 <__sprintf_chk@plt+0x34c60>
   3f3ac:	add    r14,0x2
   3f3b0:	mov    r13,QWORD PTR [rbp+r14*8+0x0]
   3f3b5:	test   r13,r13
   3f3b8:	je     3f610 <__sprintf_chk@plt+0x34c60>
   3f3be:	mov    rdi,r13
   3f3c1:	call   a060 <strlen@plt>
   3f3c6:	cmp    rbx,rax
   3f3c9:	jne    3f3a0 <__sprintf_chk@plt+0x349f0>
   3f3cb:	mov    rdx,rbx
   3f3ce:	mov    rsi,r12
   3f3d1:	mov    rdi,r13
   3f3d4:	call   a2c0 <memcmp@plt>
   3f3d9:	test   eax,eax
   3f3db:	jne    3f3a0 <__sprintf_chk@plt+0x349f0>
   3f3dd:	mov    rdi,QWORD PTR [rbp+r14*8+0x8]
   3f3e2:	mov    r13,QWORD PTR [rsp+0x28]
   3f3e7:	test   rdi,rdi
   3f3ea:	jne    3f7a7 <__sprintf_chk@plt+0x34df7>
   3f3f0:	cmp    QWORD PTR [rsp],0x0
   3f3f5:	je     3f56a <__sprintf_chk@plt+0x34bba>
   3f3fb:	mov    rax,QWORD PTR [rsp]
   3f3ff:	movzx  eax,BYTE PTR [rax]
   3f402:	mov    edx,eax
   3f404:	and    edx,0xffffffef
   3f407:	cmp    dl,0x2d
   3f40a:	je     3f90b <__sprintf_chk@plt+0x34f5b>
   3f410:	cmp    al,0x3f
   3f412:	je     3fbbc <__sprintf_chk@plt+0x3520c>
   3f418:	mov    QWORD PTR [rsp+0x48],0x0
   3f421:	mov    eax,DWORD PTR [r13+0x20]
   3f425:	and    eax,0x800000
   3f42a:	test   eax,eax
   3f42c:	jne    3f595 <__sprintf_chk@plt+0x34be5>
   3f432:	mov    esi,0x28
   3f437:	mov    edi,0x1
   3f43c:	call   a2f0 <calloc@plt>
   3f441:	mov    rbx,rax
   3f444:	test   rax,rax
   3f447:	je     3ff8a <__sprintf_chk@plt+0x355da>
   3f44d:	mov    r14,QWORD PTR [rsp+0x18]
   3f452:	mov    rsi,rbx
   3f455:	mov    rdi,r13
   3f458:	mov    rdx,QWORD PTR [r14]
   3f45b:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3f460:	mov    QWORD PTR [r14],rbx
   3f463:	xor    eax,eax
   3f465:	mov    DWORD PTR [rbx+0x10],0x1
   3f46c:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3f471:	nop    DWORD PTR [rax+0x0]
   3f478:	cmp    dl,0x7b
   3f47b:	jne    3f6fa <__sprintf_chk@plt+0x34d4a>
   3f481:	lea    rax,[rbx-0x1]
   3f485:	lea    r12,[rsi+0x1]
   3f489:	mov    QWORD PTR [rsp+0x20],rax
   3f48e:	cmp    rax,0x1
   3f492:	jbe    3fd66 <__sprintf_chk@plt+0x353b6>
   3f498:	mov    ebx,0x1
   3f49d:	lea    r14,[rsi+0x2]
   3f4a1:	mov    QWORD PTR [rsp],r12
   3f4a5:	lea    rbp,[rip+0x2c8c9]        # 6bd75 <_obstack_memory_used@@Base+0x1f0f5>
   3f4ac:	mov    r15,rbx
   3f4af:	mov    QWORD PTR [rsp+0x28],rsi
   3f4b4:	mov    r12,r14
   3f4b7:	mov    rbx,rax
   3f4ba:	jmp    3f4ec <__sprintf_chk@plt+0x34b3c>
   3f4bc:	nop    DWORD PTR [rax+0x0]
   3f4c0:	cmp    sil,0x7d
   3f4c4:	je     3fc98 <__sprintf_chk@plt+0x352e8>
   3f4ca:	mov    rdi,rbp
   3f4cd:	call   a0f0 <strchr@plt>
   3f4d2:	test   rax,rax
   3f4d5:	jne    3fad2 <__sprintf_chk@plt+0x35122>
   3f4db:	add    r15,0x1
   3f4df:	add    r12,0x1
   3f4e3:	cmp    rbx,r15
   3f4e6:	je     3fb06 <__sprintf_chk@plt+0x35156>
   3f4ec:	movsx  esi,BYTE PTR [r12]
   3f4f1:	mov    r14,r12
   3f4f4:	cmp    sil,0x3a
   3f4f8:	jne    3f4c0 <__sprintf_chk@plt+0x34b10>
   3f4fa:	mov    r12,QWORD PTR [rsp]
   3f4fe:	mov    rbx,r15
   3f501:	mov    rdx,QWORD PTR [rsp+0x20]
   3f506:	lea    rcx,[rsp+0x48]
   3f50b:	lea    rsi,[rbx+0x1]
   3f50f:	lea    r8,[rip+0x2c7e8]        # 6bcfe <_obstack_memory_used@@Base+0x1f07e>
   3f516:	mov    r15,QWORD PTR [rsp+0x28]
   3f51b:	lea    rax,[r12+rsi*1]
   3f51f:	mov    rdi,r12
   3f522:	mov    QWORD PTR [rsp],rax
   3f526:	call   38100 <__sprintf_chk@plt+0x2d750>
   3f52b:	test   eax,eax
   3f52d:	jne    3fb06 <__sprintf_chk@plt+0x35156>
   3f533:	mov    rax,QWORD PTR [rsp+0x48]
   3f538:	mov    rsi,QWORD PTR [rsp+0x8]
   3f53d:	add    rax,r12
   3f540:	mov    QWORD PTR [rsi],rax
   3f543:	cmp    rbx,QWORD PTR [rsp+0x20]
   3f548:	je     3fb06 <__sprintf_chk@plt+0x35156>
   3f54e:	mov    rax,QWORD PTR [rsp]
   3f552:	lea    rdi,[rip+0x2c81c]        # 6bd75 <_obstack_memory_used@@Base+0x1f0f5>
   3f559:	movsx  esi,BYTE PTR [rax]
   3f55c:	call   a0f0 <strchr@plt>
   3f561:	test   rax,rax
   3f564:	jne    3f363 <__sprintf_chk@plt+0x349b3>
   3f56a:	mov    eax,DWORD PTR [r13+0x20]
   3f56e:	test   al,0x20
   3f570:	jne    3fab1 <__sprintf_chk@plt+0x35101>
   3f576:	test   eax,0x1000000
   3f57b:	jne    3fc5f <__sprintf_chk@plt+0x352af>
   3f581:	test   eax,0x800000
   3f586:	je     3f896 <__sprintf_chk@plt+0x34ee6>
   3f58c:	mov    QWORD PTR [rsp+0x48],0x0
   3f595:	mov    rax,QWORD PTR [rsp+0x8]
   3f59a:	mov    esi,0x28
   3f59f:	mov    edi,0x1
   3f5a4:	mov    rbp,QWORD PTR [rax]
   3f5a7:	call   a2f0 <calloc@plt>
   3f5ac:	mov    rbx,rax
   3f5af:	test   rax,rax
   3f5b2:	je     3ff9f <__sprintf_chk@plt+0x355ef>
   3f5b8:	mov    r14,QWORD PTR [rsp+0x18]
   3f5bd:	mov    rsi,rbx
   3f5c0:	mov    rdi,r13
   3f5c3:	sub    r15,0x1
   3f5c7:	sub    rbp,r15
   3f5ca:	mov    rdx,QWORD PTR [r14]
   3f5cd:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3f5d2:	mov    eax,DWORD PTR [rsp+0x14]
   3f5d6:	mov    QWORD PTR [r14],rbx
   3f5d9:	lea    rdi,[rbp+0x2]
   3f5dd:	or     eax,0xa
   3f5e0:	mov    DWORD PTR [rbx+0x10],eax
   3f5e3:	call   a4a0 <malloc@plt>
   3f5e8:	mov    QWORD PTR [rbx+0x18],rax
   3f5ec:	test   rax,rax
   3f5ef:	je     3f8b3 <__sprintf_chk@plt+0x34f03>
   3f5f5:	lea    rdx,[rbp+0x1]
   3f5f9:	mov    rsi,r15
   3f5fc:	mov    rdi,rax
   3f5ff:	call   a420 <memcpy@plt>
   3f604:	mov    BYTE PTR [rax+rbp*1+0x1],0x0
   3f609:	xor    eax,eax
   3f60b:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3f610:	mov    r13,QWORD PTR [rsp+0x28]
   3f615:	test   DWORD PTR [rsp+0x20],0x100000
   3f61d:	je     3f3f0 <__sprintf_chk@plt+0x34a40>
   3f623:	mov    rcx,QWORD PTR [r13+0x98]
   3f62a:	lea    rdi,[rsp+0x48]
   3f62f:	mov    rdx,rbx
   3f632:	mov    rsi,r12
   3f635:	call   QWORD PTR [r13+0x90]
   3f63c:	mov    ebp,eax
   3f63e:	test   eax,eax
   3f640:	jne    3fa66 <__sprintf_chk@plt+0x350b6>
   3f646:	mov    rax,QWORD PTR [rsp+0x48]
   3f64b:	test   rax,rax
   3f64e:	jne    3f7ba <__sprintf_chk@plt+0x34e0a>
   3f654:	cmp    QWORD PTR [rsp],0x0
   3f659:	je     3f684 <__sprintf_chk@plt+0x34cd4>
   3f65b:	mov    rsi,QWORD PTR [rsp]
   3f65f:	cmp    BYTE PTR [rsi-0x1],0x3a
   3f663:	je     3fd48 <__sprintf_chk@plt+0x35398>
   3f669:	mov    rax,QWORD PTR [rsp]
   3f66d:	cmp    BYTE PTR [rax],0x2b
   3f670:	je     3fb4b <__sprintf_chk@plt+0x3519b>
   3f676:	mov    r12,QWORD PTR [rsp+0x48]
   3f67b:	test   r12,r12
   3f67e:	jne    3f7d3 <__sprintf_chk@plt+0x34e23>
   3f684:	mov    eax,DWORD PTR [r13+0x20]
   3f688:	and    eax,0x800000
   3f68d:	jmp    3f42a <__sprintf_chk@plt+0x34a7a>
   3f692:	nop    WORD PTR [rax+rax*1+0x0]
   3f698:	test   rbp,rbp
   3f69b:	je     3f615 <__sprintf_chk@plt+0x34c65>
   3f6a1:	mov    rcx,QWORD PTR [rbp+0x0]
   3f6a5:	test   rcx,rcx
   3f6a8:	je     3f615 <__sprintf_chk@plt+0x34c65>
   3f6ae:	add    rbp,0x8
   3f6b2:	nop    WORD PTR [rax+rax*1+0x0]
   3f6b8:	xor    eax,eax
   3f6ba:	jmp    3f6d0 <__sprintf_chk@plt+0x34d20>
   3f6bc:	nop    DWORD PTR [rax+0x0]
   3f6c0:	lea    rdx,[rax+0x1]
   3f6c4:	cmp    rbx,rdx
   3f6c7:	je     3f798 <__sprintf_chk@plt+0x34de8>
   3f6cd:	mov    rax,rdx
   3f6d0:	movzx  edi,BYTE PTR [rcx+rax*1]
   3f6d4:	cmp    BYTE PTR [r12+rax*1],dil
   3f6d8:	je     3f6c0 <__sprintf_chk@plt+0x34d10>
   3f6da:	mov    rcx,QWORD PTR [rbp+0x0]
   3f6de:	add    rbp,0x8
   3f6e2:	test   rcx,rcx
   3f6e5:	jne    3f6b8 <__sprintf_chk@plt+0x34d08>
   3f6e7:	test   DWORD PTR [rsp+0x20],0x100000
   3f6ef:	je     3f3f0 <__sprintf_chk@plt+0x34a40>
   3f6f5:	jmp    3f623 <__sprintf_chk@plt+0x34c73>
   3f6fa:	mov    esi,0x28
   3f6ff:	mov    edi,0x1
   3f704:	call   a2f0 <calloc@plt>
   3f709:	mov    rbx,rax
   3f70c:	test   rax,rax
   3f70f:	je     40009 <__sprintf_chk@plt+0x35659>
   3f715:	mov    r14,QWORD PTR [rsp+0x18]
   3f71a:	mov    rsi,rbx
   3f71d:	mov    rdi,r13
   3f720:	mov    rdx,QWORD PTR [r14]
   3f723:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3f728:	mov    eax,DWORD PTR [rsp+0x14]
   3f72c:	mov    QWORD PTR [r14],rbx
   3f72f:	mov    edi,0x3
   3f734:	or     eax,0x2
   3f737:	mov    DWORD PTR [rbx+0x10],eax
   3f73a:	call   a4a0 <malloc@plt>
   3f73f:	mov    QWORD PTR [rbx+0x18],rax
   3f743:	test   rax,rax
   3f746:	je     3ffdd <__sprintf_chk@plt+0x3562d>
   3f74c:	movzx  edx,BYTE PTR [r15]
   3f750:	mov    BYTE PTR [rax],0x24
   3f753:	mov    BYTE PTR [rax+0x2],0x0
   3f757:	mov    BYTE PTR [rax+0x1],dl
   3f75a:	mov    rax,QWORD PTR [rsp+0x8]
   3f75f:	mov    QWORD PTR [rax],r15
   3f762:	xor    eax,eax
   3f764:	nop    DWORD PTR [rax+0x0]
   3f768:	mov    rdx,QWORD PTR [rsp+0x228]
   3f770:	sub    rdx,QWORD PTR fs:0x28
   3f779:	jne    3ffd8 <__sprintf_chk@plt+0x35628>
   3f77f:	add    rsp,0x238
   3f786:	pop    rbx
   3f787:	pop    rbp
   3f788:	pop    r12
   3f78a:	pop    r13
   3f78c:	pop    r14
   3f78e:	pop    r15
   3f790:	ret    
   3f791:	nop    DWORD PTR [rax+0x0]
   3f798:	cmp    BYTE PTR [rcx+rbx*1],0x3d
   3f79c:	jne    3f6da <__sprintf_chk@plt+0x34d2a>
   3f7a2:	lea    rdi,[rcx+rax*1+0x2]
   3f7a7:	call   a880 <strdup@plt>
   3f7ac:	mov    QWORD PTR [rsp+0x48],rax
   3f7b1:	test   rax,rax
   3f7b4:	je     3f8b3 <__sprintf_chk@plt+0x34f03>
   3f7ba:	cmp    BYTE PTR [rax],0x0
   3f7bd:	jne    3fb33 <__sprintf_chk@plt+0x35183>
   3f7c3:	cmp    QWORD PTR [rsp],0x0
   3f7c8:	jne    3f65b <__sprintf_chk@plt+0x34cab>
   3f7ce:	mov    r12,QWORD PTR [rsp+0x48]
   3f7d3:	test   BYTE PTR [rsp+0x14],0x4
   3f7d8:	jne    3f8c0 <__sprintf_chk@plt+0x34f10>
   3f7de:	cmp    BYTE PTR [r12],0x0
   3f7e3:	je     3fb26 <__sprintf_chk@plt+0x35176>
   3f7e9:	movabs rax,0x8000001000
   3f7f3:	and    rax,QWORD PTR [r13+0x20]
   3f7f7:	mov    rdi,r12
   3f7fa:	cmp    rax,0x1
   3f7fe:	lea    rbp,[rsp+0x140]
   3f806:	sbb    ebx,ebx
   3f808:	call   a060 <strlen@plt>
   3f80d:	xor    r9d,r9d
   3f810:	mov    rdx,r12
   3f813:	mov    rsi,rbp
   3f816:	and    ebx,0xfffff000
   3f81c:	mov    ecx,eax
   3f81e:	mov    rdi,r13
   3f821:	add    ebx,0x1644
   3f827:	mov    r8d,ebx
   3f82a:	call   3f070 <__sprintf_chk@plt+0x346c0>
   3f82f:	mov    rdi,QWORD PTR [rsp+0x48]
   3f834:	mov    DWORD PTR [rsp],eax
   3f837:	call   9ce0 <free@plt>
   3f83c:	mov    eax,DWORD PTR [rsp]
   3f83f:	test   eax,eax
   3f841:	jne    3fcc4 <__sprintf_chk@plt+0x35314>
   3f847:	mov    rbx,QWORD PTR [rsp+0x18]
   3f84c:	mov    rsi,QWORD PTR [rsp+0x210]
   3f854:	mov    rdi,r13
   3f857:	mov    DWORD PTR [rsp],eax
   3f85a:	mov    rdx,QWORD PTR [rbx]
   3f85d:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3f862:	mov    rdx,QWORD PTR [rsp+0x218]
   3f86a:	mov    rdi,rbp
   3f86d:	mov    QWORD PTR [rsp+0x210],0x0
   3f879:	mov    QWORD PTR [rbx],rdx
   3f87c:	call   3cee0 <__sprintf_chk@plt+0x32530>
   3f881:	mov    eax,DWORD PTR [rsp]
   3f884:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3f889:	lea    rsi,[r15+rax*1-0x1]
   3f88e:	mov    rbx,rax
   3f891:	jmp    3f350 <__sprintf_chk@plt+0x349a0>
   3f896:	lea    rdi,[rip+0x2c2b3]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   3f89d:	call   a880 <strdup@plt>
   3f8a2:	mov    QWORD PTR [rsp+0x48],rax
   3f8a7:	mov    r12,rax
   3f8aa:	test   rax,rax
   3f8ad:	jne    3f7d3 <__sprintf_chk@plt+0x34e23>
   3f8b3:	mov    rdi,r13
   3f8b6:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3f8bb:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3f8c0:	mov    esi,0x28
   3f8c5:	mov    edi,0x1
   3f8ca:	call   a2f0 <calloc@plt>
   3f8cf:	mov    rbx,rax
   3f8d2:	test   rax,rax
   3f8d5:	je     3ffb4 <__sprintf_chk@plt+0x35604>
   3f8db:	mov    r14,QWORD PTR [rsp+0x18]
   3f8e0:	mov    rsi,rbx
   3f8e3:	mov    rdi,r13
   3f8e6:	mov    rdx,QWORD PTR [r14]
   3f8e9:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   3f8ee:	mov    eax,DWORD PTR [rsp+0x14]
   3f8f2:	mov    QWORD PTR [r14],rbx
   3f8f5:	or     eax,0xa
   3f8f8:	mov    DWORD PTR [rbx+0x10],eax
   3f8fb:	mov    rax,QWORD PTR [rsp+0x48]
   3f900:	mov    QWORD PTR [rbx+0x18],rax
   3f904:	xor    eax,eax
   3f906:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3f90b:	mov    r14,QWORD PTR [rsp]
   3f90f:	mov    r8d,DWORD PTR [r13+0x20]
   3f913:	lea    rbp,[rsp+0x50]
   3f918:	mov    rdi,r13
   3f91b:	mov    rax,QWORD PTR [rsp+0x8]
   3f920:	mov    r9d,0x1
   3f926:	mov    rsi,rbp
   3f929:	and    r8d,0x44
   3f92d:	lea    rdx,[r14+0x1]
   3f931:	mov    rax,QWORD PTR [rax]
   3f934:	or     r8d,0x400700
   3f93b:	mov    QWORD PTR [rsp],rax
   3f93f:	mov    ecx,DWORD PTR [rsp]
   3f942:	sub    ecx,edx
   3f944:	call   3f070 <__sprintf_chk@plt+0x346c0>
   3f949:	test   eax,eax
   3f94b:	jne    3f768 <__sprintf_chk@plt+0x34db8>
   3f951:	mov    rax,QWORD PTR [rsp+0x58]
   3f956:	mov    rdi,rbp
   3f959:	mov    rdx,QWORD PTR [rax]
   3f95c:	mov    QWORD PTR [rsp+0x48],rdx
   3f961:	mov    QWORD PTR [rax],0x0
   3f968:	call   3cee0 <__sprintf_chk@plt+0x32530>
   3f96d:	cmp    BYTE PTR [r14],0x3d
   3f971:	jne    3f676 <__sprintf_chk@plt+0x34cc6>
   3f977:	mov    r14d,DWORD PTR [r13+0x20]
   3f97b:	mov    rbp,QWORD PTR [rsp+0x48]
   3f980:	mov    rdx,QWORD PTR [r13+0x80]
   3f987:	mov    rax,QWORD PTR [r13+0x88]
   3f98e:	mov    esi,r14d
   3f991:	and    esi,0x8000000
   3f997:	mov    DWORD PTR [rsp],esi
   3f99a:	je     3fd7e <__sprintf_chk@plt+0x353ce>
   3f9a0:	add    rdx,0x2
   3f9a4:	cmp    rdx,rax
   3f9a7:	jb     3f9fa <__sprintf_chk@plt+0x3504a>
   3f9a9:	mov    edx,0x2
   3f9ae:	mov    rdi,QWORD PTR [r13+0x78]
   3f9b2:	test   rdi,rdi
   3f9b5:	je     3fde6 <__sprintf_chk@plt+0x35436>
   3f9bb:	lea    rdx,[rax+rax*1]
   3f9bf:	shl    rax,0x4
   3f9c3:	mov    QWORD PTR [r13+0x88],rdx
   3f9ca:	mov    rsi,rax
   3f9cd:	call   a570 <realloc@plt>
   3f9d2:	test   rax,rax
   3f9d5:	je     3feba <__sprintf_chk@plt+0x3550a>
   3f9db:	mov    QWORD PTR [r13+0x78],rax
   3f9df:	mov    QWORD PTR [r13+0x70],rax
   3f9e3:	mov    eax,DWORD PTR [r13+0x20]
   3f9e7:	and    eax,0x8000000
   3f9ec:	mov    DWORD PTR [rsp],eax
   3f9ef:	mov    eax,DWORD PTR [rsp]
   3f9f2:	test   eax,eax
   3f9f4:	je     3fd90 <__sprintf_chk@plt+0x353e0>
   3f9fa:	lea    rdi,[rbx+0x1]
   3f9fe:	call   a4a0 <malloc@plt>
   3fa03:	mov    r14,rax
   3fa06:	test   rax,rax
   3fa09:	je     3feba <__sprintf_chk@plt+0x3550a>
   3fa0f:	mov    rdx,rbx
   3fa12:	mov    rsi,r12
   3fa15:	mov    rdi,rax
   3fa18:	call   a420 <memcpy@plt>
   3fa1d:	mov    BYTE PTR [r14+rbx*1],0x0
   3fa22:	mov    rdi,rbp
   3fa25:	call   a880 <strdup@plt>
   3fa2a:	mov    rdx,rax
   3fa2d:	test   rax,rax
   3fa30:	je     3feb2 <__sprintf_chk@plt+0x35502>
   3fa36:	mov    rsi,QWORD PTR [r13+0x80]
   3fa3d:	mov    rax,QWORD PTR [r13+0x70]
   3fa41:	mov    QWORD PTR [rax+rsi*8],r14
   3fa45:	lea    rcx,[rsi+0x2]
   3fa49:	mov    QWORD PTR [rax+rsi*8+0x8],rdx
   3fa4e:	lea    rdx,[rcx+0x1]
   3fa52:	mov    QWORD PTR [r13+0x80],rdx
   3fa59:	mov    QWORD PTR [rax+rcx*8],0x0
   3fa61:	jmp    3f676 <__sprintf_chk@plt+0x34cc6>
   3fa66:	cmp    eax,0x5
   3fa69:	je     3f3f0 <__sprintf_chk@plt+0x34a40>
   3fa6f:	cmp    eax,0x9
   3fa72:	je     3fa95 <__sprintf_chk@plt+0x350e5>
   3fa74:	cmp    eax,0x2
   3fa77:	je     3f8b3 <__sprintf_chk@plt+0x34f03>
   3fa7d:	mov    DWORD PTR [r13+0xc0],ebp
   3fa84:	test   BYTE PTR [r13+0x20],0x10
   3fa89:	jne    3fac0 <__sprintf_chk@plt+0x35110>
   3fa8b:	mov    eax,0x1
   3fa90:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3fa95:	cmp    DWORD PTR [r13+0xc0],0x9
   3fa9d:	je     3fd1a <__sprintf_chk@plt+0x3536a>
   3faa3:	mov    rax,QWORD PTR [rsp+0x48]
   3faa8:	mov    QWORD PTR [r13+0xc8],rax
   3faaf:	jmp    3fa7d <__sprintf_chk@plt+0x350cd>
   3fab1:	mov    DWORD PTR [r13+0xc0],0x5
   3fabc:	test   al,0x10
   3fabe:	je     3fa8b <__sprintf_chk@plt+0x350db>
   3fac0:	mov    rdi,r13
   3fac3:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   3fac8:	mov    eax,0x1
   3facd:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3fad2:	mov    r12,QWORD PTR [rsp]
   3fad6:	mov    rbx,r15
   3fad9:	mov    QWORD PTR [rsp],r14
   3fadd:	lea    rcx,[rsp+0x48]
   3fae2:	mov    rdx,QWORD PTR [rsp+0x20]
   3fae7:	lea    r8,[rip+0x2c210]        # 6bcfe <_obstack_memory_used@@Base+0x1f07e>
   3faee:	mov    rsi,rbx
   3faf1:	mov    r15,QWORD PTR [rsp+0x28]
   3faf6:	mov    rdi,r12
   3faf9:	call   38100 <__sprintf_chk@plt+0x2d750>
   3fafe:	test   eax,eax
   3fb00:	je     3f533 <__sprintf_chk@plt+0x34b83>
   3fb06:	mov    DWORD PTR [r13+0xc0],0x4
   3fb11:	test   BYTE PTR [r13+0x20],0x10
   3fb16:	jne    3fc8b <__sprintf_chk@plt+0x352db>
   3fb1c:	mov    eax,0x4
   3fb21:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3fb26:	mov    rdi,r12
   3fb29:	call   9ce0 <free@plt>
   3fb2e:	jmp    3f432 <__sprintf_chk@plt+0x34a82>
   3fb33:	cmp    QWORD PTR [rsp],0x0
   3fb38:	je     3f7ce <__sprintf_chk@plt+0x34e1e>
   3fb3e:	mov    rax,QWORD PTR [rsp]
   3fb42:	cmp    BYTE PTR [rax],0x2b
   3fb45:	jne    3f7ce <__sprintf_chk@plt+0x34e1e>
   3fb4b:	mov    rdx,QWORD PTR [rsp]
   3fb4f:	mov    r8d,DWORD PTR [r13+0x20]
   3fb53:	lea    rbp,[rsp+0x50]
   3fb58:	mov    rdi,r13
   3fb5b:	mov    rax,QWORD PTR [rsp+0x8]
   3fb60:	mov    r9d,0x1
   3fb66:	mov    rsi,rbp
   3fb69:	add    rdx,0x1
   3fb6d:	and    r8d,0x44
   3fb71:	mov    rax,QWORD PTR [rax]
   3fb74:	or     r8d,0x400700
   3fb7b:	mov    QWORD PTR [rsp],rax
   3fb7f:	mov    ecx,DWORD PTR [rsp]
   3fb82:	sub    ecx,edx
   3fb84:	call   3f070 <__sprintf_chk@plt+0x346c0>
   3fb89:	test   eax,eax
   3fb8b:	jne    3f768 <__sprintf_chk@plt+0x34db8>
   3fb91:	mov    rdi,QWORD PTR [rsp+0x48]
   3fb96:	call   9ce0 <free@plt>
   3fb9b:	mov    rax,QWORD PTR [rsp+0x58]
   3fba0:	mov    rdi,rbp
   3fba3:	mov    rdx,QWORD PTR [rax]
   3fba6:	mov    QWORD PTR [rsp+0x48],rdx
   3fbab:	mov    QWORD PTR [rax],0x0
   3fbb2:	call   3cee0 <__sprintf_chk@plt+0x32530>
   3fbb7:	jmp    3f676 <__sprintf_chk@plt+0x34cc6>
   3fbbc:	mov    rax,QWORD PTR [rsp+0x8]
   3fbc1:	mov    rdx,QWORD PTR [rsp]
   3fbc5:	mov    rax,QWORD PTR [rax]
   3fbc8:	add    rdx,0x1
   3fbcc:	mov    r14,rax
   3fbcf:	mov    QWORD PTR [rsp],rax
   3fbd3:	sub    r14,rdx
   3fbd6:	je     3fc37 <__sprintf_chk@plt+0x35287>
   3fbd8:	mov    r8d,DWORD PTR [r13+0x20]
   3fbdc:	lea    rbp,[rsp+0x50]
   3fbe1:	mov    ecx,r14d
   3fbe4:	mov    rdi,r13
   3fbe7:	mov    r9d,0x1
   3fbed:	mov    rsi,rbp
   3fbf0:	mov    QWORD PTR [rsp],rdx
   3fbf4:	and    r8d,0x44
   3fbf8:	or     r8d,0x400700
   3fbff:	call   3f070 <__sprintf_chk@plt+0x346c0>
   3fc04:	mov    rdx,QWORD PTR [rsp]
   3fc08:	test   eax,eax
   3fc0a:	jne    3fd2b <__sprintf_chk@plt+0x3537b>
   3fc10:	mov    rax,QWORD PTR [rsp+0x58]
   3fc15:	mov    rdx,r12
   3fc18:	mov    esi,ebx
   3fc1a:	lea    rdi,[rip+0x2c159]        # 6bd7a <_obstack_memory_used@@Base+0x1f0fa>
   3fc21:	mov    rcx,QWORD PTR [rax]
   3fc24:	xor    eax,eax
   3fc26:	call   QWORD PTR [r13+0x60]
   3fc2a:	mov    rdi,rbp
   3fc2d:	call   3cee0 <__sprintf_chk@plt+0x32530>
   3fc32:	jmp    3f418 <__sprintf_chk@plt+0x34a68>
   3fc37:	xor    edi,edi
   3fc39:	mov    edx,0x5
   3fc3e:	lea    rsi,[rip+0x2bc4b]        # 6b890 <_obstack_memory_used@@Base+0x1ec10>
   3fc45:	mov    rbp,QWORD PTR [r13+0x60]
   3fc49:	call   a040 <dcgettext@plt>
   3fc4e:	mov    rdx,r12
   3fc51:	mov    esi,ebx
   3fc53:	mov    rdi,rax
   3fc56:	xor    eax,eax
   3fc58:	call   rbp
   3fc5a:	jmp    3f418 <__sprintf_chk@plt+0x34a68>
   3fc5f:	mov    edx,0x5
   3fc64:	lea    rsi,[rip+0x2bc45]        # 6b8b0 <_obstack_memory_used@@Base+0x1ec30>
   3fc6b:	xor    edi,edi
   3fc6d:	mov    rbp,QWORD PTR [r13+0x60]
   3fc71:	call   a040 <dcgettext@plt>
   3fc76:	mov    rdx,r12
   3fc79:	mov    esi,ebx
   3fc7b:	mov    rdi,rax
   3fc7e:	xor    eax,eax
   3fc80:	call   rbp
   3fc82:	mov    eax,DWORD PTR [r13+0x20]
   3fc86:	jmp    3f581 <__sprintf_chk@plt+0x34bd1>
   3fc8b:	mov    rdi,r13
   3fc8e:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   3fc93:	jmp    3fb1c <__sprintf_chk@plt+0x3516c>
   3fc98:	mov    rax,QWORD PTR [rsp+0x8]
   3fc9d:	mov    r12,QWORD PTR [rsp]
   3fca1:	mov    rbx,r15
   3fca4:	mov    QWORD PTR [rsp],0x0
   3fcac:	mov    r15,QWORD PTR [rsp+0x28]
   3fcb1:	mov    QWORD PTR [rax],r14
   3fcb4:	cmp    rbx,QWORD PTR [rsp+0x20]
   3fcb9:	jne    3f363 <__sprintf_chk@plt+0x349b3>
   3fcbf:	jmp    3fb06 <__sprintf_chk@plt+0x35156>
   3fcc4:	cmp    DWORD PTR [r13+0xc0],0x9
   3fccc:	je     3fd55 <__sprintf_chk@plt+0x353a5>
   3fcd2:	mov    eax,DWORD PTR [rsp+0x200]
   3fcd9:	mov    DWORD PTR [r13+0xc0],eax
   3fce0:	cmp    eax,0x9
   3fce3:	jne    3fd00 <__sprintf_chk@plt+0x35350>
   3fce5:	mov    rax,QWORD PTR [rsp+0x208]
   3fced:	mov    QWORD PTR [rsp+0x208],0x0
   3fcf9:	mov    QWORD PTR [r13+0xc8],rax
   3fd00:	mov    rdi,rbp
   3fd03:	call   3cee0 <__sprintf_chk@plt+0x32530>
   3fd08:	jmp    3fa8b <__sprintf_chk@plt+0x350db>
   3fd0d:	mov    rsi,r15
   3fd10:	mov    ebx,0x1
   3fd15:	jmp    3f350 <__sprintf_chk@plt+0x349a0>
   3fd1a:	mov    rdi,QWORD PTR [r13+0xc8]
   3fd21:	call   9ce0 <free@plt>
   3fd26:	jmp    3faa3 <__sprintf_chk@plt+0x350f3>
   3fd2b:	mov    r8,rdx
   3fd2e:	mov    ecx,r14d
   3fd31:	mov    rdx,r12
   3fd34:	mov    esi,ebx
   3fd36:	lea    rdi,[rip+0x2c046]        # 6bd83 <_obstack_memory_used@@Base+0x1f103>
   3fd3d:	xor    eax,eax
   3fd3f:	call   QWORD PTR [r13+0x60]
   3fd43:	jmp    3fc2a <__sprintf_chk@plt+0x3527a>
   3fd48:	mov    rdi,rax
   3fd4b:	call   9ce0 <free@plt>
   3fd50:	jmp    3f3fb <__sprintf_chk@plt+0x34a4b>
   3fd55:	mov    rdi,QWORD PTR [r13+0xc8]
   3fd5c:	call   9ce0 <free@plt>
   3fd61:	jmp    3fcd2 <__sprintf_chk@plt+0x35322>
   3fd66:	je     3fb06 <__sprintf_chk@plt+0x35156>
   3fd6c:	mov    QWORD PTR [rsp],0x0
   3fd74:	mov    ebx,0x1
   3fd79:	jmp    3f363 <__sprintf_chk@plt+0x349b3>
   3fd7e:	lea    rcx,[rdx+0x1]
   3fd82:	mov    edx,0x1
   3fd87:	cmp    rcx,rax
   3fd8a:	jae    3f9ae <__sprintf_chk@plt+0x34ffe>
   3fd90:	mov    rdi,rbp
   3fd93:	call   a060 <strlen@plt>
   3fd98:	lea    rdi,[rbx+rax*1+0x2]
   3fd9d:	call   a4a0 <malloc@plt>
   3fda2:	mov    r14,rax
   3fda5:	test   rax,rax
   3fda8:	je     3feba <__sprintf_chk@plt+0x3550a>
   3fdae:	mov    rdx,rbx
   3fdb1:	mov    rsi,r12
   3fdb4:	mov    rdi,rax
   3fdb7:	call   a420 <memcpy@plt>
   3fdbc:	mov    BYTE PTR [r14+rbx*1],0x3d
   3fdc1:	lea    rdi,[r14+rbx*1+0x1]
   3fdc6:	mov    rsi,rbp
   3fdc9:	call   9e80 <strcpy@plt>
   3fdce:	mov    rdx,QWORD PTR [r13+0x80]
   3fdd5:	mov    rax,QWORD PTR [r13+0x70]
   3fdd9:	lea    rcx,[rdx+0x1]
   3fddd:	mov    QWORD PTR [rax+rdx*8],r14
   3fde1:	jmp    3fa4e <__sprintf_chk@plt+0x3509e>
   3fde6:	test   r14d,0x80000
   3fded:	je     3ff05 <__sprintf_chk@plt+0x35555>
   3fdf3:	mov    r8,QWORD PTR [r13+0x70]
   3fdf7:	test   r8,r8
   3fdfa:	je     3fec7 <__sprintf_chk@plt+0x35517>
   3fe00:	cmp    QWORD PTR [r8],0x0
   3fe04:	je     3fec7 <__sprintf_chk@plt+0x35517>
   3fe0a:	xor    eax,eax
   3fe0c:	mov    rcx,rax
   3fe0f:	lea    rax,[rax+0x1]
   3fe13:	cmp    QWORD PTR [r8+rcx*8+0x8],0x0
   3fe19:	jne    3fe0c <__sprintf_chk@plt+0x3545c>
   3fe1b:	lea    r14,[rcx+rdx*1+0x2]
   3fe20:	mov    esi,0x8
   3fe25:	mov    QWORD PTR [rsp+0x28],r8
   3fe2a:	mov    rdi,r14
   3fe2d:	mov    QWORD PTR [rsp+0x20],rcx
   3fe32:	call   a2f0 <calloc@plt>
   3fe37:	xor    esi,esi
   3fe39:	mov    rcx,QWORD PTR [rsp+0x20]
   3fe3e:	mov    r8,QWORD PTR [rsp+0x28]
   3fe43:	test   rax,rax
   3fe46:	je     3feba <__sprintf_chk@plt+0x3550a>
   3fe48:	mov    QWORD PTR [rsp+0x30],r14
   3fe4d:	mov    r14,rbp
   3fe50:	mov    rbp,r8
   3fe53:	mov    QWORD PTR [rsp+0x20],r13
   3fe58:	mov    r13,rcx
   3fe5b:	mov    QWORD PTR [rsp+0x28],r15
   3fe60:	mov    r15,r12
   3fe63:	mov    r12,rax
   3fe66:	mov    QWORD PTR [rsp+0x38],rbx
   3fe6b:	mov    rbx,rsi
   3fe6e:	jmp    3fe73 <__sprintf_chk@plt+0x354c3>
   3fe70:	mov    rbx,rax
   3fe73:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
   3fe78:	call   a880 <strdup@plt>
   3fe7d:	mov    QWORD PTR [r12+rbx*8],rax
   3fe81:	test   rax,rax
   3fe84:	je     3ff48 <__sprintf_chk@plt+0x35598>
   3fe8a:	lea    rax,[rbx+0x1]
   3fe8e:	cmp    r13,rbx
   3fe91:	jne    3fe70 <__sprintf_chk@plt+0x354c0>
   3fe93:	mov    rbp,r14
   3fe96:	mov    r9,r12
   3fe99:	mov    r14,QWORD PTR [rsp+0x30]
   3fe9e:	mov    r12,r15
   3fea1:	mov    r13,QWORD PTR [rsp+0x20]
   3fea6:	mov    r15,QWORD PTR [rsp+0x28]
   3feab:	mov    rbx,QWORD PTR [rsp+0x38]
   3feb0:	jmp    3fee2 <__sprintf_chk@plt+0x35532>
   3feb2:	mov    rdi,r14
   3feb5:	call   9ce0 <free@plt>
   3feba:	mov    rdi,r13
   3febd:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3fec2:	jmp    3f676 <__sprintf_chk@plt+0x34cc6>
   3fec7:	lea    r14,[rdx+0x1]
   3fecb:	mov    esi,0x8
   3fed0:	mov    rdi,r14
   3fed3:	call   a2f0 <calloc@plt>
   3fed8:	mov    r9,rax
   3fedb:	xor    eax,eax
   3fedd:	test   r9,r9
   3fee0:	je     3feba <__sprintf_chk@plt+0x3550a>
   3fee2:	mov    QWORD PTR [r9+rax*8],0x0
   3feea:	mov    QWORD PTR [r13+0x78],r9
   3feee:	mov    QWORD PTR [r13+0x80],rax
   3fef5:	mov    QWORD PTR [r13+0x88],r14
   3fefc:	mov    QWORD PTR [r13+0x70],r9
   3ff00:	jmp    3f9ef <__sprintf_chk@plt+0x3503f>
   3ff05:	mov    esi,0x8
   3ff0a:	mov    edi,0x10
   3ff0f:	call   a2f0 <calloc@plt>
   3ff14:	test   rax,rax
   3ff17:	je     3feba <__sprintf_chk@plt+0x3550a>
   3ff19:	mov    QWORD PTR [r13+0x78],rax
   3ff1d:	mov    QWORD PTR [r13+0x70],rax
   3ff21:	mov    eax,r14d
   3ff24:	mov    QWORD PTR [r13+0x80],0x0
   3ff2f:	or     eax,0x80000
   3ff34:	mov    QWORD PTR [r13+0x88],0x10
   3ff3f:	mov    DWORD PTR [r13+0x20],eax
   3ff43:	jmp    3f9ef <__sprintf_chk@plt+0x3503f>
   3ff48:	mov    r13,QWORD PTR [rsp+0x20]
   3ff4d:	mov    r15,QWORD PTR [rsp+0x28]
   3ff52:	mov    rbp,r12
   3ff55:	jmp    3ff60 <__sprintf_chk@plt+0x355b0>
   3ff57:	call   9ce0 <free@plt>
   3ff5c:	sub    rbx,0x1
   3ff60:	mov    rdi,QWORD PTR [rbp+rbx*8-0x8]
   3ff65:	cmp    rbx,0x1
   3ff69:	ja     3ff57 <__sprintf_chk@plt+0x355a7>
   3ff6b:	mov    QWORD PTR [rsp],rbp
   3ff6f:	call   9ce0 <free@plt>
   3ff74:	mov    rdi,QWORD PTR [rsp]
   3ff78:	call   9ce0 <free@plt>
   3ff7d:	mov    rdi,r13
   3ff80:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3ff85:	jmp    3f676 <__sprintf_chk@plt+0x34cc6>
   3ff8a:	mov    rdi,r13
   3ff8d:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3ff92:	test   eax,eax
   3ff94:	jne    3fa8b <__sprintf_chk@plt+0x350db>
   3ff9a:	jmp    3f44d <__sprintf_chk@plt+0x34a9d>
   3ff9f:	mov    rdi,r13
   3ffa2:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3ffa7:	test   eax,eax
   3ffa9:	jne    3fa8b <__sprintf_chk@plt+0x350db>
   3ffaf:	jmp    3f5b8 <__sprintf_chk@plt+0x34c08>
   3ffb4:	mov    rdi,r13
   3ffb7:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   3ffbc:	test   eax,eax
   3ffbe:	je     3f8db <__sprintf_chk@plt+0x34f2b>
   3ffc4:	mov    rdi,QWORD PTR [rsp+0x48]
   3ffc9:	call   9ce0 <free@plt>
   3ffce:	mov    eax,0x1
   3ffd3:	jmp    3f768 <__sprintf_chk@plt+0x34db8>
   3ffd8:	call   a0a0 <__stack_chk_fail@plt>
   3ffdd:	mov    rax,QWORD PTR [rsp+0x228]
   3ffe5:	sub    rax,QWORD PTR fs:0x28
   3ffee:	jne    3ffd8 <__sprintf_chk@plt+0x35628>
   3fff0:	add    rsp,0x238
   3fff7:	mov    rdi,r13
   3fffa:	pop    rbx
   3fffb:	pop    rbp
   3fffc:	pop    r12
   3fffe:	pop    r13
   40000:	pop    r14
   40002:	pop    r15
   40004:	jmp    3cfd0 <__sprintf_chk@plt+0x32620>
   40009:	mov    rdi,r13
   4000c:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   40011:	test   eax,eax
   40013:	jne    3fa8b <__sprintf_chk@plt+0x350db>
   40019:	jmp    3f715 <__sprintf_chk@plt+0x34d65>
   4001e:	xchg   ax,ax
   40020:	endbr64 
   40024:	push   r15
   40026:	mov    r11,r8
   40029:	sub    rdx,0x1
   4002d:	lea    r8,[rip+0x2bccd]        # 6bd01 <_obstack_memory_used@@Base+0x1f081>
   40034:	push   r14
   40036:	push   r13
   40038:	mov    r13,rcx
   4003b:	push   r12
   4003d:	lea    r12,[rsi+0x1]
   40041:	xor    esi,esi
   40043:	push   rbp
   40044:	mov    rbp,rdi
   40047:	mov    rdi,r12
   4004a:	push   rbx
   4004b:	mov    ebx,r9d
   4004e:	sub    rsp,0x108
   40055:	mov    rax,QWORD PTR fs:0x28
   4005e:	mov    QWORD PTR [rsp+0xf8],rax
   40066:	xor    eax,eax
   40068:	lea    rcx,[rsp+0x8]
   4006d:	call   38100 <__sprintf_chk@plt+0x2d750>
   40072:	test   eax,eax
   40074:	jne    401c8 <__sprintf_chk@plt+0x35818>
   4007a:	mov    r14,QWORD PTR [rsp+0x8]
   4007f:	lea    rax,[r12+r14*1]
   40083:	mov    QWORD PTR [r11],rax
   40086:	test   BYTE PTR [rbp+0x24],0x8
   4008a:	jne    40170 <__sprintf_chk@plt+0x357c0>
   40090:	mov    rsi,r12
   40093:	mov    r8,QWORD PTR [rbp+0x98]
   4009a:	mov    rdi,rsp
   4009d:	xor    ecx,ecx
   4009f:	mov    rdx,r14
   400a2:	call   QWORD PTR [rbp+0xa0]
   400a8:	mov    r12d,eax
   400ab:	cmp    r12d,0x2
   400af:	je     40310 <__sprintf_chk@plt+0x35960>
   400b5:	test   r12d,r12d
   400b8:	jne    402a0 <__sprintf_chk@plt+0x358f0>
   400be:	mov    r14,QWORD PTR [rsp]
   400c2:	test   r14,r14
   400c5:	je     402d8 <__sprintf_chk@plt+0x35928>
   400cb:	test   bl,0x4
   400ce:	jne    40210 <__sprintf_chk@plt+0x35860>
   400d4:	cmp    BYTE PTR [r14],0x0
   400d8:	je     402d0 <__sprintf_chk@plt+0x35920>
   400de:	movabs rax,0x8000001000
   400e8:	and    rax,QWORD PTR [rbp+0x20]
   400ec:	mov    rdi,r14
   400ef:	cmp    rax,0x1
   400f3:	lea    r15,[rsp+0x10]
   400f8:	sbb    ebx,ebx
   400fa:	call   a060 <strlen@plt>
   400ff:	xor    r9d,r9d
   40102:	mov    rdi,rbp
   40105:	mov    rdx,r14
   40108:	and    ebx,0xfffff000
   4010e:	mov    ecx,eax
   40110:	mov    rsi,r15
   40113:	add    ebx,0x1744
   40119:	mov    r8d,ebx
   4011c:	call   3f070 <__sprintf_chk@plt+0x346c0>
   40121:	mov    rdi,QWORD PTR [rsp]
   40125:	mov    r12d,eax
   40128:	call   9ce0 <free@plt>
   4012d:	test   r12d,r12d
   40130:	jne    40250 <__sprintf_chk@plt+0x358a0>
   40136:	mov    rdx,QWORD PTR [r13+0x0]
   4013a:	mov    rsi,QWORD PTR [rsp+0xe0]
   40142:	mov    rdi,rbp
   40145:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   4014a:	mov    rax,QWORD PTR [rsp+0xe8]
   40152:	mov    rdi,r15
   40155:	mov    QWORD PTR [rsp+0xe0],0x0
   40161:	mov    QWORD PTR [r13+0x0],rax
   40165:	call   3cee0 <__sprintf_chk@plt+0x32530>
   4016a:	jmp    401e2 <__sprintf_chk@plt+0x35832>
   4016c:	nop    DWORD PTR [rax+0x0]
   40170:	lea    r15,[rsp+0x10]
   40175:	mov    ecx,r14d
   40178:	mov    rdx,r12
   4017b:	mov    rdi,rbp
   4017e:	mov    r9d,0x1
   40184:	mov    r8d,0x700
   4018a:	mov    rsi,r15
   4018d:	call   3f070 <__sprintf_chk@plt+0x346c0>
   40192:	test   eax,eax
   40194:	jne    40250 <__sprintf_chk@plt+0x358a0>
   4019a:	mov    rdi,rsp
   4019d:	mov    rsi,r12
   401a0:	mov    r8,QWORD PTR [rbp+0x98]
   401a7:	mov    rdx,r14
   401aa:	mov    rcx,QWORD PTR [rsp+0x18]
   401af:	call   QWORD PTR [rbp+0xa0]
   401b5:	mov    rdi,r15
   401b8:	mov    r12d,eax
   401bb:	call   3cee0 <__sprintf_chk@plt+0x32530>
   401c0:	jmp    400ab <__sprintf_chk@plt+0x356fb>
   401c5:	nop    DWORD PTR [rax]
   401c8:	mov    DWORD PTR [rbp+0xc0],0x7
   401d2:	test   BYTE PTR [rbp+0x20],0x10
   401d6:	jne    402b7 <__sprintf_chk@plt+0x35907>
   401dc:	mov    r12d,0x1
   401e2:	mov    rax,QWORD PTR [rsp+0xf8]
   401ea:	sub    rax,QWORD PTR fs:0x28
   401f3:	jne    40366 <__sprintf_chk@plt+0x359b6>
   401f9:	add    rsp,0x108
   40200:	mov    eax,r12d
   40203:	pop    rbx
   40204:	pop    rbp
   40205:	pop    r12
   40207:	pop    r13
   40209:	pop    r14
   4020b:	pop    r15
   4020d:	ret    
   4020e:	xchg   ax,ax
   40210:	mov    esi,0x28
   40215:	mov    edi,0x1
   4021a:	call   a2f0 <calloc@plt>
   4021f:	mov    r15,rax
   40222:	test   rax,rax
   40225:	je     40380 <__sprintf_chk@plt+0x359d0>
   4022b:	mov    rdx,QWORD PTR [r13+0x0]
   4022f:	mov    rsi,r15
   40232:	mov    rdi,rbp
   40235:	or     ebx,0xa
   40238:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   4023d:	mov    QWORD PTR [r13+0x0],r15
   40241:	mov    DWORD PTR [r15+0x10],ebx
   40245:	mov    QWORD PTR [r15+0x18],r14
   40249:	jmp    401e2 <__sprintf_chk@plt+0x35832>
   4024b:	nop    DWORD PTR [rax+rax*1+0x0]
   40250:	cmp    DWORD PTR [rbp+0xc0],0x9
   40257:	je     40340 <__sprintf_chk@plt+0x35990>
   4025d:	mov    eax,DWORD PTR [rsp+0xd0]
   40264:	mov    DWORD PTR [rbp+0xc0],eax
   4026a:	cmp    eax,0x9
   4026d:	jne    4028a <__sprintf_chk@plt+0x358da>
   4026f:	mov    rax,QWORD PTR [rsp+0xd8]
   40277:	mov    QWORD PTR [rsp+0xd8],0x0
   40283:	mov    QWORD PTR [rbp+0xc8],rax
   4028a:	mov    rdi,r15
   4028d:	call   3cee0 <__sprintf_chk@plt+0x32530>
   40292:	jmp    401dc <__sprintf_chk@plt+0x3582c>
   40297:	nop    WORD PTR [rax+rax*1+0x0]
   402a0:	cmp    r12d,0x9
   402a4:	je     40320 <__sprintf_chk@plt+0x35970>
   402a6:	mov    DWORD PTR [rbp+0xc0],r12d
   402ad:	test   BYTE PTR [rbp+0x20],0x10
   402b1:	je     401dc <__sprintf_chk@plt+0x3582c>
   402b7:	mov    rdi,rbp
   402ba:	mov    r12d,0x1
   402c0:	call   385f0 <__sprintf_chk@plt+0x2dc40>
   402c5:	jmp    401e2 <__sprintf_chk@plt+0x35832>
   402ca:	nop    WORD PTR [rax+rax*1+0x0]
   402d0:	mov    rdi,r14
   402d3:	call   9ce0 <free@plt>
   402d8:	mov    esi,0x28
   402dd:	mov    edi,0x1
   402e2:	call   a2f0 <calloc@plt>
   402e7:	mov    r15,rax
   402ea:	test   rax,rax
   402ed:	je     4036b <__sprintf_chk@plt+0x359bb>
   402ef:	mov    rdx,QWORD PTR [r13+0x0]
   402f3:	mov    rsi,r15
   402f6:	mov    rdi,rbp
   402f9:	call   57dc0 <_obstack_memory_used@@Base+0xb140>
   402fe:	mov    QWORD PTR [r13+0x0],r15
   40302:	mov    DWORD PTR [r15+0x10],0x1
   4030a:	jmp    401e2 <__sprintf_chk@plt+0x35832>
   4030f:	nop
   40310:	mov    rdi,rbp
   40313:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   40318:	mov    r12d,eax
   4031b:	jmp    401e2 <__sprintf_chk@plt+0x35832>
   40320:	cmp    DWORD PTR [rbp+0xc0],0x9
   40327:	je     40358 <__sprintf_chk@plt+0x359a8>
   40329:	mov    rax,QWORD PTR [rsp]
   4032d:	mov    QWORD PTR [rbp+0xc8],rax
   40334:	jmp    402a6 <__sprintf_chk@plt+0x358f6>
   40339:	nop    DWORD PTR [rax+0x0]
   40340:	mov    rdi,QWORD PTR [rbp+0xc8]
   40347:	call   9ce0 <free@plt>
   4034c:	jmp    4025d <__sprintf_chk@plt+0x358ad>
   40351:	nop    DWORD PTR [rax+0x0]
   40358:	mov    rdi,QWORD PTR [rbp+0xc8]
   4035f:	call   9ce0 <free@plt>
   40364:	jmp    40329 <__sprintf_chk@plt+0x35979>
   40366:	call   a0a0 <__stack_chk_fail@plt>
   4036b:	mov    rdi,rbp
   4036e:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   40373:	test   eax,eax
   40375:	jne    401dc <__sprintf_chk@plt+0x3582c>
   4037b:	jmp    402ef <__sprintf_chk@plt+0x3593f>
   40380:	mov    rdi,rbp
   40383:	call   3cfd0 <__sprintf_chk@plt+0x32620>
   40388:	test   eax,eax
   4038a:	jne    401dc <__sprintf_chk@plt+0x3582c>
   40390:	mov    r14,QWORD PTR [rsp]
   40394:	jmp    4022b <__sprintf_chk@plt+0x3587b>
   40399:	nop    DWORD PTR [rax+0x0]
   403a0:	endbr64 
   403a4:	movsxd rax,DWORD PTR [rdi+0xc0]
   403ab:	cmp    eax,0x9
   403ae:	je     403d0 <__sprintf_chk@plt+0x35a20>
   403b0:	lea    r8,[rip+0x22ce1]        # 63098 <_obstack_memory_used@@Base+0x16418>
   403b7:	cmp    eax,0x8
   403ba:	jg     403c7 <__sprintf_chk@plt+0x35a17>
   403bc:	lea    rdx,[rip+0x39cdd]        # 7a0a0 <_obstack_memory_used@@Base+0x2d420>
   403c3:	mov    r8,QWORD PTR [rdx+rax*8]
   403c7:	mov    rax,r8
   403ca:	ret    
   403cb:	nop    DWORD PTR [rax+rax*1+0x0]
   403d0:	mov    r8,QWORD PTR [rdi+0xc8]
   403d7:	mov    rax,r8
   403da:	ret    
   403db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000403e0 <argp_failure@@Base>:
   403e0:	endbr64 
   403e4:	push   r14
   403e6:	mov    r14d,edx
   403e9:	push   r13
   403eb:	mov    r13d,esi
   403ee:	push   r12
   403f0:	mov    r12,rcx
   403f3:	push   rbp
   403f4:	push   rbx
   403f5:	mov    rbx,rdi
   403f8:	sub    rsp,0x180
   403ff:	mov    QWORD PTR [rsp+0xf0],r8
   40407:	mov    QWORD PTR [rsp+0xf8],r9
   4040f:	test   al,al
   40411:	je     40453 <argp_failure@@Base+0x73>
   40413:	movaps XMMWORD PTR [rsp+0x100],xmm0
   4041b:	movaps XMMWORD PTR [rsp+0x110],xmm1
   40423:	movaps XMMWORD PTR [rsp+0x120],xmm2
   4042b:	movaps XMMWORD PTR [rsp+0x130],xmm3
   40433:	movaps XMMWORD PTR [rsp+0x140],xmm4
   4043b:	movaps XMMWORD PTR [rsp+0x150],xmm5
   40443:	movaps XMMWORD PTR [rsp+0x160],xmm6
   4044b:	movaps XMMWORD PTR [rsp+0x170],xmm7
   40453:	mov    rax,QWORD PTR fs:0x28
   4045c:	mov    QWORD PTR [rsp+0xc8],rax
   40464:	xor    eax,eax
   40466:	test   rbx,rbx
   40469:	je     405c0 <argp_failure@@Base+0x1e0>
   4046f:	test   BYTE PTR [rbx+0x1c],0x2
   40473:	jne    40598 <argp_failure@@Base+0x1b8>
   40479:	mov    rbp,QWORD PTR [rbx+0x48]
   4047d:	test   rbp,rbp
   40480:	je     40598 <argp_failure@@Base+0x1b8>
   40486:	mov    rdi,rbp
   40489:	call   a220 <flockfile@plt>
   4048e:	mov    rdi,QWORD PTR [rbx+0x40]
   40492:	mov    rsi,rbp
   40495:	call   a2e0 <fputs_unlocked@plt>
   4049a:	test   r12,r12
   4049d:	je     4050d <argp_failure@@Base+0x12d>
   4049f:	lea    rax,[rsp+0x1b0]
   404a7:	mov    DWORD PTR [rsp],0x20
   404ae:	mov    QWORD PTR [rsp+0x8],rax
   404b3:	lea    rax,[rsp+0xd0]
   404bb:	mov    QWORD PTR [rsp+0x10],rax
   404c0:	mov    rax,QWORD PTR [rbp+0x28]
   404c4:	mov    DWORD PTR [rsp+0x4],0x30
   404cc:	cmp    rax,QWORD PTR [rbp+0x30]
   404d0:	jae    40658 <argp_failure@@Base+0x278>
   404d6:	lea    rdx,[rax+0x1]
   404da:	mov    QWORD PTR [rbp+0x28],rdx
   404de:	mov    BYTE PTR [rax],0x3a
   404e1:	mov    rax,QWORD PTR [rbp+0x28]
   404e5:	cmp    rax,QWORD PTR [rbp+0x30]
   404e9:	jae    40640 <argp_failure@@Base+0x260>
   404ef:	lea    rdx,[rax+0x1]
   404f3:	mov    QWORD PTR [rbp+0x28],rdx
   404f7:	mov    BYTE PTR [rax],0x20
   404fa:	mov    rcx,rsp
   404fd:	mov    rdx,r12
   40500:	mov    esi,0x1
   40505:	mov    rdi,rbp
   40508:	call   9e20 <__vfprintf_chk@plt>
   4050d:	test   r14d,r14d
   40510:	je     40568 <argp_failure@@Base+0x188>
   40512:	mov    rax,QWORD PTR [rbp+0x28]
   40516:	cmp    rax,QWORD PTR [rbp+0x30]
   4051a:	jae    40688 <argp_failure@@Base+0x2a8>
   40520:	lea    rdx,[rax+0x1]
   40524:	mov    QWORD PTR [rbp+0x28],rdx
   40528:	mov    BYTE PTR [rax],0x3a
   4052b:	mov    rax,QWORD PTR [rbp+0x28]
   4052f:	cmp    rax,QWORD PTR [rbp+0x30]
   40533:	jae    40670 <argp_failure@@Base+0x290>
   40539:	lea    rdx,[rax+0x1]
   4053d:	mov    QWORD PTR [rbp+0x28],rdx
   40541:	mov    BYTE PTR [rax],0x20
   40544:	mov    edi,r14d
   40547:	mov    rsi,rsp
   4054a:	mov    edx,0xc8
   4054f:	call   a480 <strerror_r@plt>
   40554:	mov    rdi,rax
   40557:	test   rax,rax
   4055a:	je     40608 <argp_failure@@Base+0x228>
   40560:	mov    rsi,rbp
   40563:	call   a2e0 <fputs_unlocked@plt>
   40568:	mov    rax,QWORD PTR [rbp+0x28]
   4056c:	cmp    rax,QWORD PTR [rbp+0x30]
   40570:	jae    405f0 <argp_failure@@Base+0x210>
   40572:	lea    rdx,[rax+0x1]
   40576:	mov    QWORD PTR [rbp+0x28],rdx
   4057a:	mov    BYTE PTR [rax],0xa
   4057d:	mov    rdi,rbp
   40580:	call   9df0 <funlockfile@plt>
   40585:	test   r13d,r13d
   40588:	je     40598 <argp_failure@@Base+0x1b8>
   4058a:	test   rbx,rbx
   4058d:	je     405e6 <argp_failure@@Base+0x206>
   4058f:	test   BYTE PTR [rbx+0x1c],0x20
   40593:	je     405e6 <argp_failure@@Base+0x206>
   40595:	nop    DWORD PTR [rax]
   40598:	mov    rax,QWORD PTR [rsp+0xc8]
   405a0:	sub    rax,QWORD PTR fs:0x28
   405a9:	jne    4069a <argp_failure@@Base+0x2ba>
   405af:	add    rsp,0x180
   405b6:	pop    rbx
   405b7:	pop    rbp
   405b8:	pop    r12
   405ba:	pop    r13
   405bc:	pop    r14
   405be:	ret    
   405bf:	nop
   405c0:	mov    rax,QWORD PTR [rip+0x3ba21]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   405c7:	mov    rbp,QWORD PTR [rax]
   405ca:	test   rbp,rbp
   405cd:	je     40598 <argp_failure@@Base+0x1b8>
   405cf:	mov    rdi,rbp
   405d2:	call   a220 <flockfile@plt>
   405d7:	mov    rax,QWORD PTR [rip+0x3b9fa]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   405de:	mov    rdi,QWORD PTR [rax]
   405e1:	jmp    40492 <argp_failure@@Base+0xb2>
   405e6:	mov    edi,r13d
   405e9:	call   a820 <exit@plt>
   405ee:	xchg   ax,ax
   405f0:	mov    esi,0xa
   405f5:	mov    rdi,rbp
   405f8:	call   a120 <__overflow@plt>
   405fd:	jmp    4057d <argp_failure@@Base+0x19d>
   40602:	nop    WORD PTR [rax+rax*1+0x0]
   40608:	mov    edi,r14d
   4060b:	call   a8d0 <strerror@plt>
   40610:	mov    rdi,rax
   40613:	test   rax,rax
   40616:	jne    40560 <argp_failure@@Base+0x180>
   4061c:	mov    rax,QWORD PTR [rbx]
   4061f:	mov    edx,0x5
   40624:	lea    rsi,[rip+0x2b763]        # 6bd8e <_obstack_memory_used@@Base+0x1f10e>
   4062b:	mov    rdi,QWORD PTR [rax+0x30]
   4062f:	call   a040 <dcgettext@plt>
   40634:	mov    rdi,rax
   40637:	jmp    40560 <argp_failure@@Base+0x180>
   4063c:	nop    DWORD PTR [rax+0x0]
   40640:	mov    esi,0x20
   40645:	mov    rdi,rbp
   40648:	call   a120 <__overflow@plt>
   4064d:	jmp    404fa <argp_failure@@Base+0x11a>
   40652:	nop    WORD PTR [rax+rax*1+0x0]
   40658:	mov    esi,0x3a
   4065d:	mov    rdi,rbp
   40660:	call   a120 <__overflow@plt>
   40665:	jmp    404e1 <argp_failure@@Base+0x101>
   4066a:	nop    WORD PTR [rax+rax*1+0x0]
   40670:	mov    esi,0x20
   40675:	mov    rdi,rbp
   40678:	call   a120 <__overflow@plt>
   4067d:	jmp    40544 <argp_failure@@Base+0x164>
   40682:	nop    WORD PTR [rax+rax*1+0x0]
   40688:	mov    esi,0x3a
   4068d:	mov    rdi,rbp
   40690:	call   a120 <__overflow@plt>
   40695:	jmp    4052b <argp_failure@@Base+0x14b>
   4069a:	call   a0a0 <__stack_chk_fail@plt>
   4069f:	nop
   406a0:	push   rbp
   406a1:	mov    rbp,rsp
   406a4:	push   r15
   406a6:	push   r14
   406a8:	push   r13
   406aa:	push   r12
   406ac:	push   rbx
   406ad:	sub    rsp,0xb8
   406b4:	mov    QWORD PTR [rbp-0xc8],rdi
   406bb:	mov    QWORD PTR [rbp-0x80],rsi
   406bf:	mov    QWORD PTR [rbp-0xb8],rdx
   406c6:	mov    DWORD PTR [rbp-0x84],ecx
   406cc:	mov    rax,QWORD PTR fs:0x28
   406d5:	mov    QWORD PTR [rbp-0x38],rax
   406d9:	xor    eax,eax
   406db:	test   rdx,rdx
   406de:	je     40c95 <argp_failure@@Base+0x8b5>
   406e4:	mov    rdi,rdx
   406e7:	mov    r15,r8
   406ea:	call   a220 <flockfile@plt>
   406ef:	mov    eax,DWORD PTR [rip+0x3e60f]        # 7ed04 <argp_err_exit_status@@Base+0x44>
   406f5:	test   eax,eax
   406f7:	je     40cc0 <argp_failure@@Base+0x8e0>
   406fd:	mov    edi,0x48
   40702:	movsxd rbx,DWORD PTR [rip+0x3e5f7]        # 7ed00 <argp_err_exit_status@@Base+0x40>
   40709:	call   a4a0 <malloc@plt>
   4070e:	mov    r14,rax
   40711:	test   rax,rax
   40714:	je     419a4 <argp_failure@@Base+0x15c4>
   4071a:	mov    rax,QWORD PTR [rbp-0xb8]
   40721:	mov    QWORD PTR [r14+0x8],0x0
   40729:	mov    edi,0xc8
   4072e:	mov    QWORD PTR [r14+0x10],rbx
   40732:	mov    QWORD PTR [r14],rax
   40735:	mov    QWORD PTR [r14+0x18],0x0
   4073d:	mov    QWORD PTR [r14+0x28],0x0
   40745:	mov    QWORD PTR [r14+0x20],0x0
   4074d:	call   a4a0 <malloc@plt>
   40752:	mov    QWORD PTR [r14+0x30],rax
   40756:	test   rax,rax
   40759:	je     4199c <argp_failure@@Base+0x15bc>
   4075f:	mov    QWORD PTR [r14+0x38],rax
   40763:	add    rax,0xc8
   40769:	mov    QWORD PTR [r14+0x40],rax
   4076d:	test   BYTE PTR [rbp-0x84],0xb
   40774:	jne    40dd8 <argp_failure@@Base+0x9f8>
   4077a:	mov    QWORD PTR [rbp-0x90],0x0
   40785:	xor    ebx,ebx
   40787:	test   BYTE PTR [rbp-0x84],0x3
   4078e:	jne    40e88 <argp_failure@@Base+0xaa8>
   40794:	test   BYTE PTR [rbp-0x84],0x10
   4079b:	jne    40f78 <argp_failure@@Base+0xb98>
   407a1:	mov    eax,DWORD PTR [rbp-0x84]
   407a7:	mov    r12d,eax
   407aa:	and    r12d,0x8
   407ae:	test   al,0x4
   407b0:	jne    40ed8 <argp_failure@@Base+0xaf8>
   407b6:	test   r12d,r12d
   407b9:	je     40bbd <argp_failure@@Base+0x7dd>
   407bf:	mov    rax,QWORD PTR [rbp-0x90]
   407c6:	mov    eax,DWORD PTR [rax+0x8]
   407c9:	test   eax,eax
   407cb:	je     40bbd <argp_failure@@Base+0x7dd>
   407d1:	test   ebx,ebx
   407d3:	jne    40f29 <argp_failure@@Base+0xb49>
   407d9:	mov    rsi,QWORD PTR [rbp-0x90]
   407e0:	mov    r12,QWORD PTR [rsi]
   407e3:	mov    QWORD PTR [rbp-0x70],0x0
   407eb:	mov    QWORD PTR [rbp-0x68],0x0
   407f3:	lea    rdx,[rax*8+0x0]
   407fb:	mov    r15,r14
   407fe:	sub    rdx,rax
   40801:	lea    rax,[r12+rdx*8]
   40805:	mov    QWORD PTR [rbp-0xd8],rax
   4080c:	lea    rax,[rbp-0x70]
   40810:	mov    QWORD PTR [rbp-0xe0],rax
   40817:	nop    WORD PTR [rax+rax*1+0x0]
   40820:	mov    r9,QWORD PTR [r15+0x20]
   40824:	mov    rsi,QWORD PTR [r15+0x38]
   40828:	sub    rsi,QWORD PTR [r15+0x30]
   4082c:	mov    rbx,QWORD PTR [r12]
   40830:	mov    r10,QWORD PTR [r12+0x10]
   40835:	cmp    rsi,r9
   40838:	ja     415e8 <argp_failure@@Base+0x1208>
   4083e:	mov    rax,QWORD PTR [r15+0x8]
   40842:	mov    edx,DWORD PTR [rbx+0x18]
   40845:	mov    QWORD PTR [rbp-0x60],r12
   40849:	mov    QWORD PTR [r15+0x8],0x0
   40851:	mov    QWORD PTR [rbp-0xa0],rax
   40858:	mov    rax,QWORD PTR [r15+0x18]
   4085c:	mov    edi,edx
   4085e:	mov    QWORD PTR [rbp-0x58],r15
   40862:	mov    QWORD PTR [rbp-0xa8],rax
   40869:	mov    rax,QWORD PTR [rbp-0xe0]
   40870:	mov    DWORD PTR [rbp-0x48],0x1
   40877:	mov    QWORD PTR [rbp-0x50],rax
   4087b:	mov    rax,QWORD PTR [rbp-0x80]
   4087f:	mov    DWORD PTR [rbp-0xb0],0x0
   40889:	mov    QWORD PTR [rbp-0x40],rax
   4088d:	and    edi,0x8
   40890:	jne    408d3 <argp_failure@@Base+0x4f3>
   40892:	mov    eax,DWORD PTR [r12+0x8]
   40897:	test   eax,eax
   40899:	je     408d3 <argp_failure@@Base+0x4f3>
   4089b:	lea    rcx,[rax+rax*2]
   4089f:	mov    rax,rbx
   408a2:	shl    rcx,0x4
   408a6:	add    rcx,rbx
   408a9:	nop    DWORD PTR [rax+0x0]
   408b0:	cmp    QWORD PTR [rax],0x0
   408b4:	je     408c0 <argp_failure@@Base+0x4e0>
   408b6:	test   BYTE PTR [rax+0x18],0x2
   408ba:	je     416b8 <argp_failure@@Base+0x12d8>
   408c0:	add    rax,0x30
   408c4:	cmp    rax,rcx
   408c7:	jne    408b0 <argp_failure@@Base+0x4d0>
   408c9:	mov    DWORD PTR [rbp-0xb0],0x0
   408d3:	movsxd r14,DWORD PTR [rip+0x3e40e]        # 7ece8 <argp_err_exit_status@@Base+0x28>
   408da:	cmp    rsi,r9
   408dd:	ja     415c8 <argp_failure@@Base+0x11e8>
   408e3:	mov    eax,DWORD PTR [r12+0x8]
   408e8:	mov    QWORD PTR [r15+0x18],r14
   408ec:	test   eax,eax
   408ee:	je     409a4 <argp_failure@@Base+0x5c4>
   408f4:	lea    r9,[rax+rax*2]
   408f8:	lea    rax,[rbp-0x60]
   408fc:	mov    QWORD PTR [rbp-0xc0],r12
   40903:	mov    r14,rbx
   40906:	shl    r9,0x4
   4090a:	mov    QWORD PTR [rbp-0x98],rbx
   40911:	mov    r12,r10
   40914:	lea    r13,[rbx+r9*1]
   40918:	mov    QWORD PTR [rbp-0xd0],rax
   4091f:	mov    rbx,r13
   40922:	mov    r13d,edx
   40925:	jmp    4093d <argp_failure@@Base+0x55d>
   40927:	nop    WORD PTR [rax+rax*1+0x0]
   40930:	add    r14,0x30
   40934:	cmp    r14,rbx
   40937:	je     40990 <argp_failure@@Base+0x5b0>
   40939:	mov    r13d,DWORD PTR [r14+0x18]
   4093d:	test   r13b,0x8
   40941:	jne    40930 <argp_failure@@Base+0x550>
   40943:	mov    edx,DWORD PTR [r14+0x8]
   40947:	lea    eax,[rdx-0x1]
   4094a:	mov    DWORD PTR [rbp-0x78],edx
   4094d:	cmp    eax,0xfe
   40952:	ja     40930 <argp_failure@@Base+0x550>
   40954:	call   a980 <__ctype_b_loc@plt>
   40959:	mov    r8,rax
   4095c:	movsxd rax,DWORD PTR [rbp-0x78]
   40960:	mov    rcx,QWORD PTR [r8]
   40963:	mov    rdx,rax
   40966:	test   BYTE PTR [rcx+rax*2+0x1],0x40
   4096b:	je     40930 <argp_failure@@Base+0x550>
   4096d:	movsx  eax,BYTE PTR [r12]
   40972:	cmp    eax,edx
   40974:	jne    40930 <argp_failure@@Base+0x550>
   40976:	and    r13d,0x2
   4097a:	je     413a0 <argp_failure@@Base+0xfc0>
   40980:	add    r14,0x30
   40984:	add    r12,0x1
   40988:	cmp    r14,rbx
   4098b:	jne    40939 <argp_failure@@Base+0x559>
   4098d:	nop    DWORD PTR [rax]
   40990:	mov    rbx,QWORD PTR [rbp-0x98]
   40997:	mov    r12,QWORD PTR [rbp-0xc0]
   4099e:	mov    edi,DWORD PTR [rbx+0x18]
   409a1:	and    edi,0x8
   409a4:	mov    rax,QWORD PTR [r15+0x38]
   409a8:	mov    rdx,QWORD PTR [r15+0x20]
   409ac:	sub    rax,QWORD PTR [r15+0x30]
   409b0:	test   edi,edi
   409b2:	je     41200 <argp_failure@@Base+0xe20>
   409b8:	movsxd r13,DWORD PTR [rip+0x3e331]        # 7ecf0 <argp_err_exit_status@@Base+0x30>
   409bf:	cmp    rax,rdx
   409c2:	ja     41720 <argp_failure@@Base+0x1340>
   409c8:	mov    eax,DWORD PTR [r12+0x8]
   409cd:	mov    QWORD PTR [r15+0x18],r13
   409d1:	test   eax,eax
   409d3:	je     40aae <argp_failure@@Base+0x6ce>
   409d9:	lea    r13,[rax+rax*2]
   409dd:	lea    rax,[rbp-0x60]
   409e1:	mov    QWORD PTR [rbp-0x98],r12
   409e8:	mov    r12,QWORD PTR [rbp-0x80]
   409ec:	shl    r13,0x4
   409f0:	mov    QWORD PTR [rbp-0x78],rax
   409f4:	mov    QWORD PTR [rbp-0xb0],rbx
   409fb:	add    r13,rbx
   409fe:	jmp    40a0d <argp_failure@@Base+0x62d>
   40a00:	add    rbx,0x30
   40a04:	cmp    rbx,r13
   40a07:	je     40aa0 <argp_failure@@Base+0x6c0>
   40a0d:	cmp    QWORD PTR [rbx],0x0
   40a11:	je     40a00 <argp_failure@@Base+0x620>
   40a13:	test   BYTE PTR [rbx+0x18],0x2
   40a17:	jne    40a00 <argp_failure@@Base+0x620>
   40a19:	mov    rsi,QWORD PTR [rbp-0x78]
   40a1d:	mov    edi,DWORD PTR [rip+0x3e2cd]        # 7ecf0 <argp_err_exit_status@@Base+0x30>
   40a23:	call   39ea0 <__sprintf_chk@plt+0x2f4f0>
   40a28:	mov    rsi,QWORD PTR [rbx]
   40a2b:	xor    edi,edi
   40a2d:	test   r12,r12
   40a30:	je     40a3a <argp_failure@@Base+0x65a>
   40a32:	mov    rax,QWORD PTR [r12]
   40a36:	mov    rdi,QWORD PTR [rax+0x30]
   40a3a:	mov    edx,0x5
   40a3f:	call   a040 <dcgettext@plt>
   40a44:	mov    rdi,rax
   40a47:	mov    r14,rax
   40a4a:	call   a060 <strlen@plt>
   40a4f:	mov    rdx,rax
   40a52:	test   rax,rax
   40a55:	je     40a00 <argp_failure@@Base+0x620>
   40a57:	mov    rdi,QWORD PTR [r15+0x38]
   40a5b:	mov    rax,QWORD PTR [r15+0x40]
   40a5f:	lea    rsi,[rdi+rdx*1]
   40a63:	cmp    rax,rsi
   40a66:	jae    40a74 <argp_failure@@Base+0x694>
   40a68:	sub    rax,rdi
   40a6b:	cmp    rdx,rax
   40a6e:	ja     41972 <argp_failure@@Base+0x1592>
   40a74:	mov    rsi,r14
   40a77:	add    rbx,0x30
   40a7b:	mov    QWORD PTR [rbp-0xc0],rdx
   40a82:	call   a420 <memcpy@plt>
   40a87:	mov    rdx,QWORD PTR [rbp-0xc0]
   40a8e:	add    QWORD PTR [r15+0x38],rdx
   40a92:	cmp    rbx,r13
   40a95:	jne    40a0d <argp_failure@@Base+0x62d>
   40a9b:	nop    DWORD PTR [rax+rax*1+0x0]
   40aa0:	mov    r12,QWORD PTR [rbp-0x98]
   40aa7:	mov    rbx,QWORD PTR [rbp-0xb0]
   40aae:	mov    rax,QWORD PTR [r15+0x38]
   40ab2:	sub    rax,QWORD PTR [r15+0x30]
   40ab6:	cmp    rax,QWORD PTR [r15+0x20]
   40aba:	ja     412ce <argp_failure@@Base+0xeee>
   40ac0:	mov    edi,DWORD PTR [rbp-0x48]
   40ac3:	mov    QWORD PTR [r15+0x8],0x0
   40acb:	test   edi,edi
   40acd:	je     41160 <argp_failure@@Base+0xd80>
   40ad3:	test   BYTE PTR [rbx+0x18],0x8
   40ad7:	jne    40b00 <argp_failure@@Base+0x720>
   40ad9:	movsxd r13,DWORD PTR [rbx+0x8]
   40add:	lea    eax,[r13-0x1]
   40ae1:	cmp    eax,0xfe
   40ae6:	ja     40b00 <argp_failure@@Base+0x720>
   40ae8:	call   a980 <__ctype_b_loc@plt>
   40aed:	mov    rax,QWORD PTR [rax]
   40af0:	test   BYTE PTR [rax+r13*2+0x1],0x40
   40af6:	jne    40b0a <argp_failure@@Base+0x72a>
   40af8:	nop    DWORD PTR [rax+rax*1+0x0]
   40b00:	cmp    QWORD PTR [rbx],0x0
   40b04:	je     41902 <argp_failure@@Base+0x1522>
   40b0a:	mov    rax,QWORD PTR [r15+0x38]
   40b0e:	movsxd rbx,DWORD PTR [rbp-0xa0]
   40b15:	sub    rax,QWORD PTR [r15+0x30]
   40b19:	cmp    rax,QWORD PTR [r15+0x20]
   40b1d:	ja     41610 <argp_failure@@Base+0x1230>
   40b23:	mov    QWORD PTR [r15+0x8],rbx
   40b27:	movsxd rax,DWORD PTR [rbp-0xa8]
   40b2e:	add    r12,0x38
   40b32:	mov    QWORD PTR [r15+0x18],rax
   40b36:	cmp    r12,QWORD PTR [rbp-0xd8]
   40b3d:	jne    40820 <argp_failure@@Base+0x440>
   40b43:	mov    ecx,DWORD PTR [rbp-0x64]
   40b46:	mov    r14,r15
   40b49:	test   ecx,ecx
   40b4b:	je     40bb8 <argp_failure@@Base+0x7d8>
   40b4d:	mov    edx,DWORD PTR [rip+0x3e191]        # 7ece4 <argp_err_exit_status@@Base+0x24>
   40b53:	test   edx,edx
   40b55:	je     40bb8 <argp_failure@@Base+0x7d8>
   40b57:	mov    r15,QWORD PTR [rbp-0x80]
   40b5b:	test   r15,r15
   40b5e:	je     41bc1 <argp_failure@@Base+0x17e1>
   40b64:	mov    rax,QWORD PTR [r15]
   40b67:	mov    edx,0x5
   40b6c:	lea    rsi,[rip+0x2ae2d]        # 6b9a0 <_obstack_memory_used@@Base+0x1ed20>
   40b73:	mov    rdi,QWORD PTR [rax+0x30]
   40b77:	call   a040 <dcgettext@plt>
   40b7c:	mov    rdx,QWORD PTR [r15]
   40b7f:	mov    rbx,rax
   40b82:	mov    rcx,QWORD PTR [rbp-0x80]
   40b86:	mov    esi,0x2000005
   40b8b:	mov    rdi,rbx
   40b8e:	call   381e0 <__sprintf_chk@plt+0x2d830>
   40b93:	mov    r13,rax
   40b96:	test   rax,rax
   40b99:	je     40bb8 <argp_failure@@Base+0x7d8>
   40b9b:	cmp    BYTE PTR [rax],0x0
   40b9e:	jne    41bfa <argp_failure@@Base+0x181a>
   40ba4:	cmp    r13,rbx
   40ba7:	je     40bb8 <argp_failure@@Base+0x7d8>
   40ba9:	mov    rdi,r13
   40bac:	call   9ce0 <free@plt>
   40bb1:	nop    DWORD PTR [rax+0x0]
   40bb8:	mov    ebx,0x1
   40bbd:	test   BYTE PTR [rbp-0x84],0x20
   40bc4:	jne    40fa0 <argp_failure@@Base+0xbc0>
   40bca:	test   BYTE PTR [rbp-0x84],0x40
   40bd1:	je     40c17 <argp_failure@@Base+0x837>
   40bd3:	lea    r13,[rip+0x3f0d6]        # 7fcb0 <argp_program_bug_address@@Base>
   40bda:	mov    r12,QWORD PTR [r13+0x0]
   40bde:	test   r12,r12
   40be1:	je     40c17 <argp_failure@@Base+0x837>
   40be3:	test   ebx,ebx
   40be5:	jne    40fc4 <argp_failure@@Base+0xbe4>
   40beb:	mov    rax,QWORD PTR [rbp-0xc8]
   40bf2:	mov    edx,0x5
   40bf7:	lea    rsi,[rip+0x2b208]        # 6be06 <_obstack_memory_used@@Base+0x1f186>
   40bfe:	mov    rdi,QWORD PTR [rax+0x30]
   40c02:	call   a040 <dcgettext@plt>
   40c07:	mov    rdx,r12
   40c0a:	mov    rdi,r14
   40c0d:	mov    rsi,rax
   40c10:	xor    eax,eax
   40c12:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   40c17:	mov    rdi,QWORD PTR [rbp-0xb8]
   40c1e:	call   9df0 <funlockfile@plt>
   40c23:	mov    rax,QWORD PTR [rbp-0x90]
   40c2a:	test   rax,rax
   40c2d:	je     40c6f <argp_failure@@Base+0x88f>
   40c2f:	mov    rbx,QWORD PTR [rax+0x18]
   40c33:	test   rbx,rbx
   40c36:	je     40c51 <argp_failure@@Base+0x871>
   40c38:	nop    DWORD PTR [rax+rax*1+0x0]
   40c40:	mov    rdi,rbx
   40c43:	mov    rbx,QWORD PTR [rbx+0x28]
   40c47:	call   9ce0 <free@plt>
   40c4c:	test   rbx,rbx
   40c4f:	jne    40c40 <argp_failure@@Base+0x860>
   40c51:	mov    rax,QWORD PTR [rbp-0x90]
   40c58:	mov    eax,DWORD PTR [rax+0x8]
   40c5b:	test   eax,eax
   40c5d:	jne    41919 <argp_failure@@Base+0x1539>
   40c63:	mov    rdi,QWORD PTR [rbp-0x90]
   40c6a:	call   9ce0 <free@plt>
   40c6f:	mov    rdi,r14
   40c72:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   40c77:	mov    rdx,QWORD PTR [r14+0x38]
   40c7b:	mov    rdi,QWORD PTR [r14+0x30]
   40c7f:	cmp    rdx,rdi
   40c82:	ja     41798 <argp_failure@@Base+0x13b8>
   40c88:	call   9ce0 <free@plt>
   40c8d:	mov    rdi,r14
   40c90:	call   9ce0 <free@plt>
   40c95:	mov    rax,QWORD PTR [rbp-0x38]
   40c99:	sub    rax,QWORD PTR fs:0x28
   40ca2:	jne    41d27 <argp_failure@@Base+0x1947>
   40ca8:	lea    rsp,[rbp-0x28]
   40cac:	pop    rbx
   40cad:	pop    r12
   40caf:	pop    r13
   40cb1:	pop    r14
   40cb3:	pop    r15
   40cb5:	pop    rbp
   40cb6:	ret    
   40cb7:	nop    WORD PTR [rax+rax*1+0x0]
   40cc0:	lea    rdi,[rip+0x2b0dc]        # 6bda3 <_obstack_memory_used@@Base+0x1f123>
   40cc7:	call   9d40 <getenv@plt>
   40ccc:	movdqa xmm0,XMMWORD PTR [rip+0x3e00c]        # 7ece0 <argp_err_exit_status@@Base+0x20>
   40cd4:	movdqa xmm1,XMMWORD PTR [rip+0x3e014]        # 7ecf0 <argp_err_exit_status@@Base+0x30>
   40cdc:	mov    r14,rax
   40cdf:	mov    rax,QWORD PTR [rip+0x3e01a]        # 7ed00 <argp_err_exit_status@@Base+0x40>
   40ce6:	movaps XMMWORD PTR [rbp-0x60],xmm0
   40cea:	mov    QWORD PTR [rbp-0x40],rax
   40cee:	movaps XMMWORD PTR [rbp-0x50],xmm1
   40cf2:	test   r14,r14
   40cf5:	je     406fd <argp_failure@@Base+0x31d>
   40cfb:	movzx  ecx,BYTE PTR [r14]
   40cff:	test   cl,cl
   40d01:	mov    BYTE PTR [rbp-0x78],cl
   40d04:	je     40d5a <argp_failure@@Base+0x97a>
   40d06:	call   a980 <__ctype_b_loc@plt>
   40d0b:	movzx  ecx,BYTE PTR [rbp-0x78]
   40d0f:	mov    QWORD PTR [rbp-0x78],r15
   40d13:	mov    r12,rax
   40d16:	cs nop WORD PTR [rax+rax*1+0x0]
   40d20:	mov    rsi,QWORD PTR [r12]
   40d24:	jmp    40d39 <argp_failure@@Base+0x959>
   40d26:	cs nop WORD PTR [rax+rax*1+0x0]
   40d30:	movzx  ecx,BYTE PTR [r14+0x1]
   40d35:	add    r14,0x1
   40d39:	movzx  eax,cl
   40d3c:	movzx  eax,WORD PTR [rsi+rax*2]
   40d40:	test   ah,0x20
   40d43:	jne    40d30 <argp_failure@@Base+0x950>
   40d45:	test   ah,0x4
   40d48:	jne    41430 <argp_failure@@Base+0x1050>
   40d4e:	mov    r15,QWORD PTR [rbp-0x78]
   40d52:	test   cl,cl
   40d54:	jne    419b5 <argp_failure@@Base+0x15d5>
   40d5a:	mov    ecx,DWORD PTR [rbp-0x40]
   40d5d:	lea    rax,[rip+0x2b41c]        # 6c180 <_obstack_memory_used@@Base+0x1f500>
   40d64:	nop    DWORD PTR [rax+0x0]
   40d68:	mov    rbx,rax
   40d6b:	lea    rsi,[rip+0x2b49e]        # 6c210 <_obstack_memory_used@@Base+0x1f590>
   40d72:	add    rax,0x10
   40d76:	cmp    rax,rsi
   40d79:	je     418d0 <argp_failure@@Base+0x14f0>
   40d7f:	cmp    BYTE PTR [rax+0xe],0x0
   40d83:	jne    40d68 <argp_failure@@Base+0x988>
   40d85:	movzx  edx,BYTE PTR [rax+0xf]
   40d89:	cmp    dl,0x20
   40d8c:	je     40d68 <argp_failure@@Base+0x988>
   40d8e:	cmp    DWORD PTR [rbp+rdx*1-0x60],ecx
   40d92:	jl     40d68 <argp_failure@@Base+0x988>
   40d94:	mov    r14,QWORD PTR [rbp-0x80]
   40d98:	mov    edx,0x5
   40d9d:	lea    rsi,[rip+0x2ab8c]        # 6b930 <_obstack_memory_used@@Base+0x1ecb0>
   40da4:	mov    rax,QWORD PTR [r14]
   40da7:	mov    rdi,QWORD PTR [rax+0x30]
   40dab:	call   a040 <dcgettext@plt>
   40db0:	lea    r9,[rbx+0x10]
   40db4:	xor    edx,edx
   40db6:	xor    esi,esi
   40db8:	mov    rcx,rax
   40dbb:	lea    r8,[rip+0x2b00c]        # 6bdce <_obstack_memory_used@@Base+0x1f14e>
   40dc2:	mov    rdi,r14
   40dc5:	xor    eax,eax
   40dc7:	call   403e0 <argp_failure@@Base>
   40dcc:	jmp    406fd <argp_failure@@Base+0x31d>
   40dd1:	nop    DWORD PTR [rax+0x0]
   40dd8:	mov    rdi,QWORD PTR [rbp-0xc8]
   40ddf:	xor    esi,esi
   40de1:	call   393f0 <__sprintf_chk@plt+0x2ea40>
   40de6:	lea    rdx,[rip+0x2afe9]        # 6bdd6 <_obstack_memory_used@@Base+0x1f156>
   40ded:	mov    r12,QWORD PTR [rax]
   40df0:	mov    ebx,DWORD PTR [rax+0x8]
   40df3:	mov    QWORD PTR [rbp-0x90],rax
   40dfa:	mov    r13,rax
   40dfd:	mov    esi,ebx
   40dff:	mov    rdi,r12
   40e02:	call   61720 <_obstack_memory_used@@Base+0x14aa0>
   40e07:	test   rax,rax
   40e0a:	je     40e17 <argp_failure@@Base+0xa37>
   40e0c:	mov    DWORD PTR [rax+0x18],0xffffffff
   40e13:	mov    ebx,DWORD PTR [r13+0x8]
   40e17:	lea    rdx,[rip+0x2b0f4]        # 6bf12 <_obstack_memory_used@@Base+0x1f292>
   40e1e:	mov    esi,ebx
   40e20:	mov    rdi,r12
   40e23:	call   61720 <_obstack_memory_used@@Base+0x14aa0>
   40e28:	test   rax,rax
   40e2b:	je     40e3e <argp_failure@@Base+0xa5e>
   40e2d:	mov    DWORD PTR [rax+0x18],0xffffffff
   40e34:	mov    rax,QWORD PTR [rbp-0x90]
   40e3b:	mov    ebx,DWORD PTR [rax+0x8]
   40e3e:	test   ebx,ebx
   40e40:	je     40785 <argp_failure@@Base+0x3a5>
   40e46:	mov    rdx,r12
   40e49:	xor    eax,eax
   40e4b:	nop    DWORD PTR [rax+rax*1+0x0]
   40e50:	mov    DWORD PTR [rdx+0x30],eax
   40e53:	add    eax,0x1
   40e56:	add    rdx,0x38
   40e5a:	cmp    eax,ebx
   40e5c:	jne    40e50 <argp_failure@@Base+0xa70>
   40e5e:	mov    esi,eax
   40e60:	lea    rcx,[rip+0xffffffffffff8149]        # 38fb0 <__sprintf_chk@plt+0x2e600>
   40e67:	mov    edx,0x38
   40e6c:	xor    ebx,ebx
   40e6e:	mov    rdi,r12
   40e71:	call   9f00 <qsort@plt>
   40e76:	test   BYTE PTR [rbp-0x84],0x3
   40e7d:	je     40794 <argp_failure@@Base+0x3b4>
   40e83:	nop    DWORD PTR [rax+rax*1+0x0]
   40e88:	mov    rax,QWORD PTR [rbp-0xc8]
   40e8f:	mov    rsi,QWORD PTR [rax+0x20]
   40e93:	mov    rdi,QWORD PTR [rax+0x10]
   40e97:	call   616c0 <_obstack_memory_used@@Base+0x14a40>
   40e9c:	mov    rcx,rsp
   40e9f:	lea    rdx,[rax+0x17]
   40ea3:	mov    r8,rax
   40ea6:	mov    rax,rdx
   40ea9:	and    rdx,0xfffffffffffff000
   40eb0:	and    rax,0xfffffffffffffff0
   40eb4:	sub    rcx,rdx
   40eb7:	cmp    rsp,rcx
   40eba:	je     40fe6 <argp_failure@@Base+0xc06>
   40ec0:	sub    rsp,0x1000
   40ec7:	or     QWORD PTR [rsp+0xff8],0x0
   40ed0:	jmp    40eb7 <argp_failure@@Base+0xad7>
   40ed2:	nop    WORD PTR [rax+rax*1+0x0]
   40ed8:	mov    rax,QWORD PTR [rbp-0xc8]
   40edf:	mov    edx,0x5
   40ee4:	mov    ebx,0x1
   40ee9:	lea    rsi,[rip+0x2aa78]        # 6b968 <_obstack_memory_used@@Base+0x1ece8>
   40ef0:	mov    rdi,QWORD PTR [rax+0x30]
   40ef4:	call   a040 <dcgettext@plt>
   40ef9:	mov    rcx,r15
   40efc:	mov    rdx,r15
   40eff:	mov    rdi,r14
   40f02:	mov    rsi,rax
   40f05:	xor    eax,eax
   40f07:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   40f0c:	test   r12d,r12d
   40f0f:	je     40bbd <argp_failure@@Base+0x7dd>
   40f15:	mov    rax,QWORD PTR [rbp-0x90]
   40f1c:	mov    r10d,DWORD PTR [rax+0x8]
   40f20:	test   r10d,r10d
   40f23:	je     40bbd <argp_failure@@Base+0x7dd>
   40f29:	mov    rax,QWORD PTR [r14+0x38]
   40f2d:	cmp    rax,QWORD PTR [r14+0x40]
   40f31:	je     41c41 <argp_failure@@Base+0x1861>
   40f37:	lea    rdx,[rax+0x1]
   40f3b:	mov    QWORD PTR [r14+0x38],rdx
   40f3f:	mov    BYTE PTR [rax],0xa
   40f42:	mov    rax,QWORD PTR [rbp-0x90]
   40f49:	mov    rsi,QWORD PTR [rbp-0x90]
   40f50:	mov    eax,DWORD PTR [rax+0x8]
   40f53:	mov    r12,QWORD PTR [rsi]
   40f56:	mov    QWORD PTR [rbp-0x70],0x0
   40f5e:	mov    QWORD PTR [rbp-0x68],0x0
   40f66:	test   eax,eax
   40f68:	jne    407f3 <argp_failure@@Base+0x413>
   40f6e:	jmp    40bb8 <argp_failure@@Base+0x7d8>
   40f73:	nop    DWORD PTR [rax+rax*1+0x0]
   40f78:	mov    rsi,QWORD PTR [rbp-0x80]
   40f7c:	mov    rdi,QWORD PTR [rbp-0xc8]
   40f83:	mov    r9,r14
   40f86:	xor    ecx,ecx
   40f88:	mov    r8d,0x1
   40f8e:	xor    edx,edx
   40f90:	call   3a710 <__sprintf_chk@plt+0x2fd60>
   40f95:	or     ebx,eax
   40f97:	jmp    407a1 <argp_failure@@Base+0x3c1>
   40f9c:	nop    DWORD PTR [rax+0x0]
   40fa0:	mov    rsi,QWORD PTR [rbp-0x80]
   40fa4:	mov    rdi,QWORD PTR [rbp-0xc8]
   40fab:	mov    ecx,ebx
   40fad:	mov    r9,r14
   40fb0:	xor    r8d,r8d
   40fb3:	mov    edx,0x1
   40fb8:	call   3a710 <__sprintf_chk@plt+0x2fd60>
   40fbd:	or     ebx,eax
   40fbf:	jmp    40bca <argp_failure@@Base+0x7ea>
   40fc4:	mov    rax,QWORD PTR [r14+0x38]
   40fc8:	cmp    rax,QWORD PTR [r14+0x40]
   40fcc:	je     41ba3 <argp_failure@@Base+0x17c3>
   40fd2:	lea    rdx,[rax+0x1]
   40fd6:	mov    QWORD PTR [r14+0x38],rdx
   40fda:	mov    BYTE PTR [rax],0xa
   40fdd:	mov    r12,QWORD PTR [r13+0x0]
   40fe1:	jmp    40beb <argp_failure@@Base+0x80b>
   40fe6:	and    eax,0xfff
   40feb:	sub    rsp,rax
   40fee:	test   rax,rax
   40ff1:	jne    41a26 <argp_failure@@Base+0x1646>
   40ff7:	lea    rax,[rsp+0xf]
   40ffc:	mov    rdx,r8
   40fff:	xor    esi,esi
   41001:	and    rax,0xfffffffffffffff0
   41005:	lea    r13,[rip+0x23f43]        # 64f4f <_obstack_memory_used@@Base+0x182cf>
   4100c:	mov    rdi,rax
   4100f:	mov    QWORD PTR [rbp-0x98],rax
   41016:	call   a1b0 <memset@plt>
   4101b:	lea    rax,[rbp-0x60]
   4101f:	mov    QWORD PTR [rbp-0x78],r15
   41023:	mov    ecx,0x1
   41028:	mov    r15,r14
   4102b:	mov    QWORD PTR [rbp-0xa0],rax
   41032:	mov    r14,QWORD PTR [rbp-0xc8]
   41039:	jmp    41128 <argp_failure@@Base+0xd48>
   4103e:	xchg   ax,ax
   41040:	mov    rax,QWORD PTR [rbp-0x98]
   41047:	mov    r12,QWORD PTR [r15+0x18]
   4104b:	mov    QWORD PTR [r15+0x18],rbx
   4104f:	mov    edx,0x5
   41054:	mov    rdi,QWORD PTR [r14+0x30]
   41058:	lea    rsi,[rip+0x2ad7c]        # 6bddb <_obstack_memory_used@@Base+0x1f15b>
   4105f:	mov    QWORD PTR [rbp-0x60],rax
   41063:	test   ecx,ecx
   41065:	jne    4106e <argp_failure@@Base+0xc8e>
   41067:	lea    rsi,[rip+0x2ad74]        # 6bde2 <_obstack_memory_used@@Base+0x1f162>
   4106e:	call   a040 <dcgettext@plt>
   41073:	mov    rcx,QWORD PTR [rbp-0x78]
   41077:	mov    rsi,r13
   4107a:	mov    rdi,r15
   4107d:	mov    rdx,rax
   41080:	xor    eax,eax
   41082:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   41087:	mov    rax,QWORD PTR [r15+0x38]
   4108b:	movsxd rdx,DWORD PTR [rip+0x3dc6a]        # 7ecfc <argp_err_exit_status@@Base+0x3c>
   41092:	sub    rax,QWORD PTR [r15+0x30]
   41096:	cmp    rax,QWORD PTR [r15+0x20]
   4109a:	ja     41380 <argp_failure@@Base+0xfa0>
   410a0:	mov    rbx,QWORD PTR [r15+0x8]
   410a4:	mov    QWORD PTR [r15+0x8],rdx
   410a8:	test   BYTE PTR [rbp-0x84],0x2
   410af:	je     41360 <argp_failure@@Base+0xf80>
   410b5:	mov    rax,QWORD PTR [rbp-0x90]
   410bc:	mov    r11d,DWORD PTR [rax+0x8]
   410c0:	test   r11d,r11d
   410c3:	jne    41640 <argp_failure@@Base+0x1260>
   410c9:	mov    rsi,QWORD PTR [rbp-0x80]
   410cd:	mov    ecx,0x1
   410d2:	mov    r8,r15
   410d5:	mov    rdi,r14
   410d8:	mov    rdx,QWORD PTR [rbp-0xa0]
   410df:	call   3a4b0 <__sprintf_chk@plt+0x2fb00>
   410e4:	mov    edx,eax
   410e6:	mov    rax,QWORD PTR [r15+0x38]
   410ea:	mov    rcx,rax
   410ed:	sub    rcx,QWORD PTR [r15+0x30]
   410f1:	cmp    rcx,QWORD PTR [r15+0x20]
   410f5:	ja     412e0 <argp_failure@@Base+0xf00>
   410fb:	movsxd r12,r12d
   410fe:	movsxd rbx,ebx
   41101:	mov    QWORD PTR [r15+0x18],r12
   41105:	mov    QWORD PTR [r15+0x8],rbx
   41109:	cmp    QWORD PTR [r15+0x40],rax
   4110d:	je     41333 <argp_failure@@Base+0xf53>
   41113:	lea    rcx,[rax+0x1]
   41117:	mov    QWORD PTR [r15+0x38],rcx
   4111b:	mov    BYTE PTR [rax],0xa
   4111e:	xor    ecx,ecx
   41120:	test   edx,edx
   41122:	je     41780 <argp_failure@@Base+0x13a0>
   41128:	mov    rax,QWORD PTR [r15+0x38]
   4112c:	movsxd rbx,DWORD PTR [rip+0x3dbc9]        # 7ecfc <argp_err_exit_status@@Base+0x3c>
   41133:	sub    rax,QWORD PTR [r15+0x30]
   41137:	cmp    rax,QWORD PTR [r15+0x20]
   4113b:	jbe    41040 <argp_failure@@Base+0xc60>
   41141:	mov    rdi,r15
   41144:	mov    DWORD PTR [rbp-0xa8],ecx
   4114a:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   4114f:	mov    ecx,DWORD PTR [rbp-0xa8]
   41155:	jmp    41040 <argp_failure@@Base+0xc60>
   4115a:	nop    WORD PTR [rax+rax*1+0x0]
   41160:	mov    r13,QWORD PTR [rbx+0x20]
   41164:	test   r13,r13
   41167:	je     4118b <argp_failure@@Base+0xdab>
   41169:	mov    rax,QWORD PTR [rbp-0x80]
   4116d:	xor    edi,edi
   4116f:	test   rax,rax
   41172:	je     4117b <argp_failure@@Base+0xd9b>
   41174:	mov    rax,QWORD PTR [rax]
   41177:	mov    rdi,QWORD PTR [rax+0x30]
   4117b:	mov    rsi,r13
   4117e:	mov    edx,0x5
   41183:	call   a040 <dcgettext@plt>
   41188:	mov    r13,rax
   4118b:	mov    rdx,QWORD PTR [r12+0x28]
   41190:	mov    esi,DWORD PTR [rbx+0x8]
   41193:	mov    rdi,r13
   41196:	mov    rcx,QWORD PTR [rbp-0x80]
   4119a:	call   381e0 <__sprintf_chk@plt+0x2d830>
   4119f:	mov    r14,rax
   411a2:	test   rax,rax
   411a5:	je     411bd <argp_failure@@Base+0xddd>
   411a7:	cmp    BYTE PTR [rax],0x0
   411aa:	jne    417b1 <argp_failure@@Base+0x13d1>
   411b0:	cmp    r13,r14
   411b3:	je     411bd <argp_failure@@Base+0xddd>
   411b5:	mov    rdi,r14
   411b8:	call   9ce0 <free@plt>
   411bd:	mov    rax,QWORD PTR [r15+0x38]
   411c1:	mov    rdx,rax
   411c4:	sub    rdx,QWORD PTR [r15+0x30]
   411c8:	cmp    rdx,QWORD PTR [r15+0x20]
   411cc:	ja     41730 <argp_failure@@Base+0x1350>
   411d2:	mov    QWORD PTR [r15+0x8],0x0
   411da:	cmp    QWORD PTR [r15+0x40],rax
   411de:	je     4174e <argp_failure@@Base+0x136e>
   411e4:	lea    rdx,[rax+0x1]
   411e8:	mov    QWORD PTR [r15+0x38],rdx
   411ec:	mov    BYTE PTR [rax],0xa
   411ef:	mov    QWORD PTR [rbp-0x70],r12
   411f3:	jmp    40b0a <argp_failure@@Base+0x72a>
   411f8:	nop    DWORD PTR [rax+rax*1+0x0]
   41200:	movsxd r13,DWORD PTR [rip+0x3dae5]        # 7ecec <argp_err_exit_status@@Base+0x2c>
   41207:	cmp    rax,rdx
   4120a:	ja     41770 <argp_failure@@Base+0x1390>
   41210:	mov    eax,DWORD PTR [r12+0x8]
   41215:	mov    QWORD PTR [r15+0x18],r13
   41219:	test   eax,eax
   4121b:	je     40aae <argp_failure@@Base+0x6ce>
   41221:	lea    r10,[rax+rax*2]
   41225:	lea    rax,[rbp-0x60]
   41229:	mov    QWORD PTR [rbp-0x98],r12
   41230:	mov    r13,QWORD PTR [rbp-0x80]
   41234:	shl    r10,0x4
   41238:	mov    QWORD PTR [rbp-0x78],rax
   4123c:	mov    r12,rbx
   4123f:	lea    r14,[rbx+r10*1]
   41243:	jmp    41251 <argp_failure@@Base+0xe71>
   41245:	nop    DWORD PTR [rax]
   41248:	add    r12,0x30
   4124c:	cmp    r12,r14
   4124f:	je     412b5 <argp_failure@@Base+0xed5>
   41251:	cmp    QWORD PTR [r12],0x0
   41256:	je     41248 <argp_failure@@Base+0xe68>
   41258:	test   BYTE PTR [r12+0x18],0x2
   4125e:	jne    41248 <argp_failure@@Base+0xe68>
   41260:	mov    rsi,QWORD PTR [rbp-0x78]
   41264:	mov    edi,DWORD PTR [rip+0x3da82]        # 7ecec <argp_err_exit_status@@Base+0x2c>
   4126a:	call   39ea0 <__sprintf_chk@plt+0x2f4f0>
   4126f:	mov    rdx,QWORD PTR [r12]
   41273:	mov    rdi,r15
   41276:	xor    eax,eax
   41278:	lea    rsi,[rip+0x2ab7c]        # 6bdfb <_obstack_memory_used@@Base+0x1f17b>
   4127f:	call   57a90 <_obstack_memory_used@@Base+0xae10>
   41284:	xor    ecx,ecx
   41286:	test   r13,r13
   41289:	je     41293 <argp_failure@@Base+0xeb3>
   4128b:	mov    rax,QWORD PTR [r13+0x0]
   4128f:	mov    rcx,QWORD PTR [rax+0x30]
   41293:	mov    r8,r15
   41296:	lea    rdx,[rip+0x2ab63]        # 6be00 <_obstack_memory_used@@Base+0x1f180>
   4129d:	mov    rdi,rbx
   412a0:	add    r12,0x30
   412a4:	lea    rsi,[rip+0x2bc13]        # 6cebe <_obstack_memory_used@@Base+0x2023e>
   412ab:	call   3a0e0 <__sprintf_chk@plt+0x2f730>
   412b0:	cmp    r12,r14
   412b3:	jne    41251 <argp_failure@@Base+0xe71>
   412b5:	mov    rax,QWORD PTR [r15+0x38]
   412b9:	mov    r12,QWORD PTR [rbp-0x98]
   412c0:	sub    rax,QWORD PTR [r15+0x30]
   412c4:	cmp    rax,QWORD PTR [r15+0x20]
   412c8:	jbe    40ac0 <argp_failure@@Base+0x6e0>
   412ce:	mov    rdi,r15
   412d1:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   412d6:	jmp    40ac0 <argp_failure@@Base+0x6e0>
   412db:	nop    DWORD PTR [rax+rax*1+0x0]
   412e0:	mov    rdi,r15
   412e3:	mov    DWORD PTR [rbp-0xa8],edx
   412e9:	movsxd r12,r12d
   412ec:	movsxd rbx,ebx
   412ef:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   412f4:	mov    rax,QWORD PTR [r15+0x38]
   412f8:	mov    QWORD PTR [r15+0x18],r12
   412fc:	mov    edx,DWORD PTR [rbp-0xa8]
   41302:	mov    rcx,rax
   41305:	sub    rcx,QWORD PTR [r15+0x30]
   41309:	cmp    QWORD PTR [r15+0x20],rcx
   4130d:	jae    41105 <argp_failure@@Base+0xd25>
   41313:	mov    rdi,r15
   41316:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   4131b:	mov    QWORD PTR [r15+0x8],rbx
   4131f:	mov    rax,QWORD PTR [r15+0x38]
   41323:	mov    edx,DWORD PTR [rbp-0xa8]
   41329:	cmp    QWORD PTR [r15+0x40],rax
   4132d:	jne    41113 <argp_failure@@Base+0xd33>
   41333:	mov    esi,0x1
   41338:	mov    rdi,r15
   4133b:	mov    DWORD PTR [rbp-0xa8],edx
   41341:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41346:	mov    edx,DWORD PTR [rbp-0xa8]
   4134c:	test   eax,eax
   4134e:	je     4111e <argp_failure@@Base+0xd3e>
   41354:	mov    rax,QWORD PTR [r15+0x38]
   41358:	jmp    41113 <argp_failure@@Base+0xd33>
   4135d:	nop    DWORD PTR [rax]
   41360:	mov    rdi,QWORD PTR [rbp-0x90]
   41367:	mov    rsi,r15
   4136a:	call   3a230 <__sprintf_chk@plt+0x2f880>
   4136f:	or     DWORD PTR [rbp-0x84],0x2
   41376:	jmp    410c9 <argp_failure@@Base+0xce9>
   4137b:	nop    DWORD PTR [rax+rax*1+0x0]
   41380:	mov    rdi,r15
   41383:	mov    QWORD PTR [rbp-0xa8],rdx
   4138a:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   4138f:	mov    rdx,QWORD PTR [rbp-0xa8]
   41396:	jmp    410a0 <argp_failure@@Base+0xcc0>
   4139b:	nop    DWORD PTR [rax+rax*1+0x0]
   413a0:	mov    rsi,QWORD PTR [rbp-0xd0]
   413a7:	mov    edi,DWORD PTR [rip+0x3d93b]        # 7ece8 <argp_err_exit_status@@Base+0x28>
   413ad:	call   39ea0 <__sprintf_chk@plt+0x2f4f0>
   413b2:	mov    rax,QWORD PTR [r15+0x38]
   413b6:	cmp    rax,QWORD PTR [r15+0x40]
   413ba:	je     41954 <argp_failure@@Base+0x1574>
   413c0:	lea    rdx,[rax+0x1]
   413c4:	mov    QWORD PTR [r15+0x38],rdx
   413c8:	mov    BYTE PTR [rax],0x2d
   413cb:	movzx  r13d,BYTE PTR [r12]
   413d0:	mov    rax,QWORD PTR [r15+0x38]
   413d4:	cmp    rax,QWORD PTR [r15+0x40]
   413d8:	je     41936 <argp_failure@@Base+0x1556>
   413de:	lea    rdx,[rax+0x1]
   413e2:	mov    QWORD PTR [r15+0x38],rdx
   413e6:	mov    BYTE PTR [rax],r13b
   413e9:	mov    r9d,DWORD PTR [rbp-0xb0]
   413f0:	test   r9d,r9d
   413f3:	je     41590 <argp_failure@@Base+0x11b0>
   413f9:	mov    r8d,DWORD PTR [rip+0x3d8e0]        # 7ece0 <argp_err_exit_status@@Base+0x20>
   41400:	test   r8d,r8d
   41403:	jne    41590 <argp_failure@@Base+0x11b0>
   41409:	mov    rax,QWORD PTR [rbp-0x98]
   41410:	cmp    QWORD PTR [rax+0x10],0x0
   41415:	je     40980 <argp_failure@@Base+0x5a0>
   4141b:	mov    DWORD PTR [rbp-0x64],0x1
   41422:	jmp    40980 <argp_failure@@Base+0x5a0>
   41427:	nop    WORD PTR [rax+rax*1+0x0]
   41430:	cmp    cl,0x2d
   41433:	sete   dl
   41436:	cmp    cl,0x5f
   41439:	sete   dil
   4143d:	or     dl,dil
   41440:	jne    4144a <argp_failure@@Base+0x106a>
   41442:	test   al,0x8
   41444:	je     41b97 <argp_failure@@Base+0x17b7>
   4144a:	mov    r13,r14
   4144d:	nop    DWORD PTR [rax]
   41450:	movzx  edx,BYTE PTR [r13+0x1]
   41455:	add    r13,0x1
   41459:	mov    rax,rdx
   4145c:	cmp    dl,0x5f
   4145f:	movzx  r8d,WORD PTR [rsi+rdx*2]
   41464:	sete   dl
   41467:	cmp    al,0x2d
   41469:	sete   dil
   4146d:	or     dl,dil
   41470:	jne    41450 <argp_failure@@Base+0x1070>
   41472:	test   r8b,0x8
   41476:	jne    41450 <argp_failure@@Base+0x1070>
   41478:	mov    rbx,r13
   4147b:	sub    rbx,r14
   4147e:	test   r8w,0x2000
   41484:	je     414a3 <argp_failure@@Base+0x10c3>
   41486:	cs nop WORD PTR [rax+rax*1+0x0]
   41490:	movzx  edx,BYTE PTR [r13+0x1]
   41495:	add    r13,0x1
   41499:	mov    rax,rdx
   4149c:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   414a1:	jne    41490 <argp_failure@@Base+0x10b0>
   414a3:	test   al,al
   414a5:	je     416d0 <argp_failure@@Base+0x12f0>
   414ab:	cmp    al,0x2c
   414ad:	je     416d0 <argp_failure@@Base+0x12f0>
   414b3:	cmp    al,0x3d
   414b5:	je     41ac5 <argp_failure@@Base+0x16e5>
   414bb:	movzx  eax,BYTE PTR [r13+0x0]
   414c0:	movzx  eax,WORD PTR [rsi+rax*2]
   414c4:	mov    DWORD PTR [rbp-0x90],0x0
   414ce:	mov    DWORD PTR [rbp-0x98],0x0
   414d8:	test   ah,0x8
   414db:	jne    41af9 <argp_failure@@Base+0x1719>
   414e1:	lea    r15,[rip+0x2ac98]        # 6c180 <_obstack_memory_used@@Base+0x1f500>
   414e8:	jmp    41504 <argp_failure@@Base+0x1124>
   414ea:	nop    WORD PTR [rax+rax*1+0x0]
   414f0:	add    r15,0x10
   414f4:	lea    rax,[rip+0x2ad15]        # 6c210 <_obstack_memory_used@@Base+0x1f590>
   414fb:	cmp    r15,rax
   414fe:	je     41868 <argp_failure@@Base+0x1488>
   41504:	mov    rdi,r15
   41507:	call   a060 <strlen@plt>
   4150c:	cmp    rax,rbx
   4150f:	jne    414f0 <argp_failure@@Base+0x1110>
   41511:	mov    rdx,rbx
   41514:	mov    rsi,r15
   41517:	mov    rdi,r14
   4151a:	call   9e50 <strncmp@plt>
   4151f:	test   eax,eax
   41521:	jne    414f0 <argp_failure@@Base+0x1110>
   41523:	mov    eax,DWORD PTR [rbp-0x90]
   41529:	test   eax,eax
   4152b:	je     41847 <argp_failure@@Base+0x1467>
   41531:	cmp    BYTE PTR [r15+0xe],0x0
   41536:	jne    41847 <argp_failure@@Base+0x1467>
   4153c:	mov    rax,QWORD PTR [rbp-0x80]
   41540:	mov    r8d,ebx
   41543:	xor    edi,edi
   41545:	test   rax,rax
   41548:	je     41551 <argp_failure@@Base+0x1171>
   4154a:	mov    rax,QWORD PTR [rax]
   4154d:	mov    rdi,QWORD PTR [rax+0x30]
   41551:	mov    edx,0x5
   41556:	lea    rsi,[rip+0x2a37b]        # 6b8d8 <_obstack_memory_used@@Base+0x1ec58>
   4155d:	mov    DWORD PTR [rbp-0x90],r8d
   41564:	call   a040 <dcgettext@plt>
   41569:	mov    r8d,DWORD PTR [rbp-0x90]
   41570:	xor    edx,edx
   41572:	xor    esi,esi
   41574:	mov    rdi,QWORD PTR [rbp-0x80]
   41578:	mov    rcx,rax
   4157b:	mov    r9,r14
   4157e:	xor    eax,eax
   41580:	call   403e0 <argp_failure@@Base>
   41585:	jmp    41856 <argp_failure@@Base+0x1476>
   4158a:	nop    WORD PTR [rax+rax*1+0x0]
   41590:	mov    rax,QWORD PTR [rbp-0x80]
   41594:	xor    ecx,ecx
   41596:	test   rax,rax
   41599:	je     415a2 <argp_failure@@Base+0x11c2>
   4159b:	mov    rax,QWORD PTR [rax]
   4159e:	mov    rcx,QWORD PTR [rax+0x30]
   415a2:	mov    rdi,QWORD PTR [rbp-0x98]
   415a9:	mov    r8,r15
   415ac:	lea    rdx,[rip+0x2a843]        # 6bdf6 <_obstack_memory_used@@Base+0x1f176>
   415b3:	lea    rsi,[rip+0x2a79c]        # 6bd56 <_obstack_memory_used@@Base+0x1f0d6>
   415ba:	call   3a0e0 <__sprintf_chk@plt+0x2f730>
   415bf:	jmp    40980 <argp_failure@@Base+0x5a0>
   415c4:	nop    DWORD PTR [rax+0x0]
   415c8:	mov    rdi,r15
   415cb:	mov    QWORD PTR [rbp-0x78],r10
   415cf:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   415d4:	mov    edx,DWORD PTR [rbx+0x18]
   415d7:	mov    r10,QWORD PTR [rbp-0x78]
   415db:	mov    edi,edx
   415dd:	and    edi,0x8
   415e0:	jmp    408e3 <argp_failure@@Base+0x503>
   415e5:	nop    DWORD PTR [rax]
   415e8:	mov    rdi,r15
   415eb:	mov    QWORD PTR [rbp-0x78],r10
   415ef:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   415f4:	mov    rsi,QWORD PTR [r15+0x38]
   415f8:	mov    r9,QWORD PTR [r15+0x20]
   415fc:	mov    r10,QWORD PTR [rbp-0x78]
   41600:	sub    rsi,QWORD PTR [r15+0x30]
   41604:	jmp    4083e <argp_failure@@Base+0x45e>
   41609:	nop    DWORD PTR [rax+0x0]
   41610:	mov    rdi,r15
   41613:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41618:	mov    rax,QWORD PTR [r15+0x38]
   4161c:	mov    QWORD PTR [r15+0x8],rbx
   41620:	sub    rax,QWORD PTR [r15+0x30]
   41624:	cmp    rax,QWORD PTR [r15+0x20]
   41628:	jbe    40b27 <argp_failure@@Base+0x747>
   4162e:	mov    rdi,r15
   41631:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41636:	jmp    40b27 <argp_failure@@Base+0x747>
   4163b:	nop    DWORD PTR [rax+rax*1+0x0]
   41640:	mov    rdi,QWORD PTR [r14+0x30]
   41644:	mov    edx,0x5
   41649:	lea    rsi,[rip+0x2a799]        # 6bde9 <_obstack_memory_used@@Base+0x1f169>
   41650:	call   a040 <dcgettext@plt>
   41655:	mov    rdi,rax
   41658:	mov    QWORD PTR [rbp-0xa8],rax
   4165f:	call   a060 <strlen@plt>
   41664:	mov    r9,QWORD PTR [rbp-0xa8]
   4166b:	test   rax,rax
   4166e:	mov    rdx,rax
   41671:	je     410c9 <argp_failure@@Base+0xce9>
   41677:	mov    rdi,QWORD PTR [r15+0x38]
   4167b:	mov    rax,QWORD PTR [r15+0x40]
   4167f:	lea    rcx,[rdi+rdx*1]
   41683:	cmp    rax,rcx
   41686:	jae    41694 <argp_failure@@Base+0x12b4>
   41688:	sub    rax,rdi
   4168b:	cmp    rdx,rax
   4168e:	ja     41b5f <argp_failure@@Base+0x177f>
   41694:	mov    rsi,r9
   41697:	mov    QWORD PTR [rbp-0xa8],rdx
   4169e:	call   a420 <memcpy@plt>
   416a3:	mov    rdx,QWORD PTR [rbp-0xa8]
   416aa:	add    QWORD PTR [r15+0x38],rdx
   416ae:	jmp    410c9 <argp_failure@@Base+0xce9>
   416b3:	nop    DWORD PTR [rax+rax*1+0x0]
   416b8:	mov    DWORD PTR [rbp-0xb0],0x1
   416c2:	jmp    408d3 <argp_failure@@Base+0x4f3>
   416c7:	nop    WORD PTR [rax+rax*1+0x0]
   416d0:	mov    DWORD PTR [rbp-0x90],0x1
   416da:	mov    DWORD PTR [rbp-0x98],0x1
   416e4:	cmp    cl,0x6e
   416e7:	jne    414e1 <argp_failure@@Base+0x1101>
   416ed:	cmp    BYTE PTR [r14+0x1],0x6f
   416f2:	jne    414e1 <argp_failure@@Base+0x1101>
   416f8:	cmp    BYTE PTR [r14+0x2],0x2d
   416fd:	jne    414e1 <argp_failure@@Base+0x1101>
   41703:	mov    DWORD PTR [rbp-0x98],0x0
   4170d:	add    r14,0x3
   41711:	sub    rbx,0x3
   41715:	jmp    414e1 <argp_failure@@Base+0x1101>
   4171a:	nop    WORD PTR [rax+rax*1+0x0]
   41720:	mov    rdi,r15
   41723:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41728:	jmp    409c8 <argp_failure@@Base+0x5e8>
   4172d:	nop    DWORD PTR [rax]
   41730:	mov    rdi,r15
   41733:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41738:	mov    QWORD PTR [r15+0x8],0x0
   41740:	mov    rax,QWORD PTR [r15+0x38]
   41744:	cmp    QWORD PTR [r15+0x40],rax
   41748:	jne    411e4 <argp_failure@@Base+0xe04>
   4174e:	mov    esi,0x1
   41753:	mov    rdi,r15
   41756:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   4175b:	test   eax,eax
   4175d:	je     411ef <argp_failure@@Base+0xe0f>
   41763:	mov    rax,QWORD PTR [r15+0x38]
   41767:	jmp    411e4 <argp_failure@@Base+0xe04>
   4176c:	nop    DWORD PTR [rax+0x0]
   41770:	mov    rdi,r15
   41773:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41778:	jmp    41210 <argp_failure@@Base+0xe30>
   4177d:	nop    DWORD PTR [rax]
   41780:	mov    r14,r15
   41783:	mov    ebx,0x1
   41788:	mov    r15,QWORD PTR [rbp-0x78]
   4178c:	jmp    40794 <argp_failure@@Base+0x3b4>
   41791:	nop    DWORD PTR [rax+0x0]
   41798:	mov    rcx,QWORD PTR [r14]
   4179b:	sub    rdx,rdi
   4179e:	mov    esi,0x1
   417a3:	call   a550 <fwrite_unlocked@plt>
   417a8:	mov    rdi,QWORD PTR [r14+0x30]
   417ac:	jmp    40c88 <argp_failure@@Base+0x8a8>
   417b1:	mov    rax,QWORD PTR [r15+0x38]
   417b5:	sub    rax,QWORD PTR [r15+0x30]
   417b9:	cmp    rax,QWORD PTR [r15+0x20]
   417bd:	ja     41a31 <argp_failure@@Base+0x1651>
   417c3:	mov    rbx,QWORD PTR [r15+0x28]
   417c7:	xor    eax,eax
   417c9:	test   rbx,rbx
   417cc:	cmovs  rbx,rax
   417d0:	movsxd rax,DWORD PTR [rip+0x3d51d]        # 7ecf4 <argp_err_exit_status@@Base+0x34>
   417d7:	mov    rsi,rax
   417da:	mov    QWORD PTR [r15+0x8],rax
   417de:	mov    ecx,esi
   417e0:	movsxd rax,ecx
   417e3:	mov    QWORD PTR [r15+0x18],rax
   417e7:	lea    eax,[rsi+0x3]
   417ea:	cmp    ebx,eax
   417ec:	ja     41aa7 <argp_failure@@Base+0x16c7>
   417f2:	cmp    ebx,esi
   417f4:	jae    419f2 <argp_failure@@Base+0x1612>
   417fa:	mov    rdi,r15
   417fd:	call   39af0 <__sprintf_chk@plt+0x2f140>
   41802:	mov    rdi,r14
   41805:	call   a060 <strlen@plt>
   4180a:	mov    rbx,rax
   4180d:	test   rax,rax
   41810:	je     411b0 <argp_failure@@Base+0xdd0>
   41816:	mov    rdi,QWORD PTR [r15+0x38]
   4181a:	mov    rax,QWORD PTR [r15+0x40]
   4181e:	lea    rdx,[rdi+rbx*1]
   41822:	cmp    rax,rdx
   41825:	jae    41833 <argp_failure@@Base+0x1453>
   41827:	sub    rax,rdi
   4182a:	cmp    rbx,rax
   4182d:	ja     41bde <argp_failure@@Base+0x17fe>
   41833:	mov    rdx,rbx
   41836:	mov    rsi,r14
   41839:	call   a420 <memcpy@plt>
   4183e:	add    QWORD PTR [r15+0x38],rbx
   41842:	jmp    411b0 <argp_failure@@Base+0xdd0>
   41847:	movzx  eax,BYTE PTR [r15+0xf]
   4184c:	mov    esi,DWORD PTR [rbp-0x98]
   41852:	mov    DWORD PTR [rbp+rax*1-0x60],esi
   41856:	lea    rax,[rip+0x2a9b3]        # 6c210 <_obstack_memory_used@@Base+0x1f590>
   4185d:	cmp    r15,rax
   41860:	jne    418a3 <argp_failure@@Base+0x14c3>
   41862:	nop    WORD PTR [rax+rax*1+0x0]
   41868:	mov    rax,QWORD PTR [rbp-0x80]
   4186c:	xor    edi,edi
   4186e:	test   rax,rax
   41871:	je     4187a <argp_failure@@Base+0x149a>
   41873:	mov    rax,QWORD PTR [rax]
   41876:	mov    rdi,QWORD PTR [rax+0x30]
   4187a:	mov    edx,0x5
   4187f:	lea    rsi,[rip+0x2a082]        # 6b908 <_obstack_memory_used@@Base+0x1ec88>
   41886:	call   a040 <dcgettext@plt>
   4188b:	mov    rdi,QWORD PTR [rbp-0x80]
   4188f:	mov    r9,r14
   41892:	mov    r8d,ebx
   41895:	mov    rcx,rax
   41898:	xor    edx,edx
   4189a:	xor    esi,esi
   4189c:	xor    eax,eax
   4189e:	call   403e0 <argp_failure@@Base>
   418a3:	movzx  ecx,BYTE PTR [r13+0x0]
   418a8:	mov    r14,r13
   418ab:	cmp    cl,0x2c
   418ae:	jne    418b9 <argp_failure@@Base+0x14d9>
   418b0:	movzx  ecx,BYTE PTR [r13+0x1]
   418b5:	add    r14,0x1
   418b9:	test   cl,cl
   418bb:	jne    40d20 <argp_failure@@Base+0x940>
   418c1:	mov    r15,QWORD PTR [rbp-0x78]
   418c5:	jmp    40d5a <argp_failure@@Base+0x97a>
   418ca:	nop    WORD PTR [rax+rax*1+0x0]
   418d0:	movdqa xmm2,XMMWORD PTR [rbp-0x60]
   418d5:	movdqa xmm3,XMMWORD PTR [rbp-0x50]
   418da:	mov    rax,QWORD PTR [rbp-0x40]
   418de:	movaps XMMWORD PTR [rip+0x3d3fb],xmm2        # 7ece0 <argp_err_exit_status@@Base+0x20>
   418e5:	mov    QWORD PTR [rip+0x3d414],rax        # 7ed00 <argp_err_exit_status@@Base+0x40>
   418ec:	movaps XMMWORD PTR [rip+0x3d3fd],xmm3        # 7ecf0 <argp_err_exit_status@@Base+0x30>
   418f3:	mov    DWORD PTR [rip+0x3d407],0x1        # 7ed04 <argp_err_exit_status@@Base+0x44>
   418fd:	jmp    406fd <argp_failure@@Base+0x31d>
   41902:	mov    rsi,QWORD PTR [r12+0x28]
   41907:	mov    rdi,QWORD PTR [rbx+0x20]
   4190b:	lea    rdx,[rbp-0x60]
   4190f:	call   39c30 <__sprintf_chk@plt+0x2f280>
   41914:	jmp    411ef <argp_failure@@Base+0xe0f>
   41919:	mov    rbx,QWORD PTR [rbp-0x90]
   41920:	mov    rdi,QWORD PTR [rbx]
   41923:	call   9ce0 <free@plt>
   41928:	mov    rdi,QWORD PTR [rbx+0x10]
   4192c:	call   9ce0 <free@plt>
   41931:	jmp    40c63 <argp_failure@@Base+0x883>
   41936:	mov    esi,0x1
   4193b:	mov    rdi,r15
   4193e:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41943:	test   eax,eax
   41945:	je     413e9 <argp_failure@@Base+0x1009>
   4194b:	mov    rax,QWORD PTR [r15+0x38]
   4194f:	jmp    413de <argp_failure@@Base+0xffe>
   41954:	mov    esi,0x1
   41959:	mov    rdi,r15
   4195c:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41961:	test   eax,eax
   41963:	je     413cb <argp_failure@@Base+0xfeb>
   41969:	mov    rax,QWORD PTR [r15+0x38]
   4196d:	jmp    413c0 <argp_failure@@Base+0xfe0>
   41972:	mov    rsi,rdx
   41975:	mov    rdi,r15
   41978:	mov    QWORD PTR [rbp-0xc0],rdx
   4197f:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41984:	mov    rdx,QWORD PTR [rbp-0xc0]
   4198b:	test   eax,eax
   4198d:	je     40a00 <argp_failure@@Base+0x620>
   41993:	mov    rdi,QWORD PTR [r15+0x38]
   41997:	jmp    40a74 <argp_failure@@Base+0x694>
   4199c:	mov    rdi,r14
   4199f:	call   9ce0 <free@plt>
   419a4:	mov    rdi,QWORD PTR [rbp-0xb8]
   419ab:	call   9df0 <funlockfile@plt>
   419b0:	jmp    40c95 <argp_failure@@Base+0x8b5>
   419b5:	mov    rax,QWORD PTR [rbp-0x80]
   419b9:	xor    edi,edi
   419bb:	test   rax,rax
   419be:	je     419c7 <argp_failure@@Base+0x15e7>
   419c0:	mov    rax,QWORD PTR [rax]
   419c3:	mov    rdi,QWORD PTR [rax+0x30]
   419c7:	mov    edx,0x5
   419cc:	lea    rsi,[rip+0x2a3de]        # 6bdb1 <_obstack_memory_used@@Base+0x1f131>
   419d3:	call   a040 <dcgettext@plt>
   419d8:	mov    rdi,QWORD PTR [rbp-0x80]
   419dc:	mov    r8,r14
   419df:	xor    edx,edx
   419e1:	mov    rcx,rax
   419e4:	xor    esi,esi
   419e6:	xor    eax,eax
   419e8:	call   403e0 <argp_failure@@Base>
   419ed:	jmp    40d5a <argp_failure@@Base+0x97a>
   419f2:	mov    rax,QWORD PTR [r15+0x38]
   419f6:	mov    rdx,QWORD PTR [r15+0x40]
   419fa:	lea    rcx,[rax+0x3]
   419fe:	cmp    rdx,rcx
   41a01:	jae    41a10 <argp_failure@@Base+0x1630>
   41a03:	sub    rdx,rax
   41a06:	cmp    rdx,0x2
   41a0a:	jbe    41cb1 <argp_failure@@Base+0x18d1>
   41a10:	mov    esi,0x2020
   41a15:	mov    BYTE PTR [rax+0x2],0x20
   41a19:	mov    WORD PTR [rax],si
   41a1c:	add    QWORD PTR [r15+0x38],0x3
   41a21:	jmp    41802 <argp_failure@@Base+0x1422>
   41a26:	or     QWORD PTR [rsp+rax*1-0x8],0x0
   41a2c:	jmp    40ff7 <argp_failure@@Base+0xc17>
   41a31:	mov    rdi,r15
   41a34:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41a39:	mov    rbx,QWORD PTR [r15+0x28]
   41a3d:	xor    eax,eax
   41a3f:	mov    rdx,QWORD PTR [r15+0x38]
   41a43:	test   rbx,rbx
   41a46:	cmovs  rbx,rax
   41a4a:	movsxd rax,DWORD PTR [rip+0x3d2a3]        # 7ecf4 <argp_err_exit_status@@Base+0x34>
   41a51:	sub    rdx,QWORD PTR [r15+0x30]
   41a55:	mov    rsi,rax
   41a58:	cmp    rdx,QWORD PTR [r15+0x20]
   41a5c:	jbe    417da <argp_failure@@Base+0x13fa>
   41a62:	mov    rdi,r15
   41a65:	mov    QWORD PTR [rbp-0x78],rax
   41a69:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41a6e:	mov    rax,QWORD PTR [rbp-0x78]
   41a72:	mov    rdx,QWORD PTR [r15+0x38]
   41a76:	mov    ecx,DWORD PTR [rip+0x3d278]        # 7ecf4 <argp_err_exit_status@@Base+0x34>
   41a7c:	sub    rdx,QWORD PTR [r15+0x30]
   41a80:	mov    QWORD PTR [r15+0x8],rax
   41a84:	cmp    rdx,QWORD PTR [r15+0x20]
   41a88:	jbe    41d2c <argp_failure@@Base+0x194c>
   41a8e:	mov    rdi,r15
   41a91:	mov    DWORD PTR [rbp-0x78],ecx
   41a94:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   41a99:	mov    esi,DWORD PTR [rip+0x3d255]        # 7ecf4 <argp_err_exit_status@@Base+0x34>
   41a9f:	mov    ecx,DWORD PTR [rbp-0x78]
   41aa2:	jmp    417e0 <argp_failure@@Base+0x1400>
   41aa7:	mov    rax,QWORD PTR [r15+0x38]
   41aab:	cmp    rax,QWORD PTR [r15+0x40]
   41aaf:	je     41c5f <argp_failure@@Base+0x187f>
   41ab5:	lea    rdx,[rax+0x1]
   41ab9:	mov    QWORD PTR [r15+0x38],rdx
   41abd:	mov    BYTE PTR [rax],0xa
   41ac0:	jmp    41802 <argp_failure@@Base+0x1422>
   41ac5:	movzx  eax,BYTE PTR [r13+0x1]
   41aca:	lea    rdx,[r13+0x1]
   41ace:	movzx  eax,WORD PTR [rsi+rax*2]
   41ad2:	test   ah,0x20
   41ad5:	je     41af1 <argp_failure@@Base+0x1711>
   41ad7:	nop    WORD PTR [rax+rax*1+0x0]
   41ae0:	movzx  eax,BYTE PTR [rdx+0x1]
   41ae4:	add    rdx,0x1
   41ae8:	movzx  eax,WORD PTR [rsi+rax*2]
   41aec:	test   ah,0x20
   41aef:	jne    41ae0 <argp_failure@@Base+0x1700>
   41af1:	mov    r13,rdx
   41af4:	jmp    414c4 <argp_failure@@Base+0x10e4>
   41af9:	mov    edx,0xa
   41afe:	xor    esi,esi
   41b00:	mov    rdi,r13
   41b03:	call   a410 <strtol@plt>
   41b08:	mov    rdx,QWORD PTR [r12]
   41b0c:	mov    DWORD PTR [rbp-0x98],eax
   41b12:	movzx  eax,BYTE PTR [r13+0x0]
   41b17:	movzx  eax,WORD PTR [rdx+rax*2]
   41b1b:	test   ah,0x8
   41b1e:	je     41b32 <argp_failure@@Base+0x1752>
   41b20:	movzx  eax,BYTE PTR [r13+0x1]
   41b25:	add    r13,0x1
   41b29:	movzx  eax,WORD PTR [rdx+rax*2]
   41b2d:	test   ah,0x8
   41b30:	jne    41b20 <argp_failure@@Base+0x1740>
   41b32:	test   ah,0x20
   41b35:	je     41b50 <argp_failure@@Base+0x1770>
   41b37:	nop    WORD PTR [rax+rax*1+0x0]
   41b40:	movzx  eax,BYTE PTR [r13+0x1]
   41b45:	add    r13,0x1
   41b49:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   41b4e:	jne    41b40 <argp_failure@@Base+0x1760>
   41b50:	mov    DWORD PTR [rbp-0x90],0x0
   41b5a:	jmp    414e1 <argp_failure@@Base+0x1101>
   41b5f:	mov    rsi,rdx
   41b62:	mov    rdi,r15
   41b65:	mov    QWORD PTR [rbp-0xb0],r9
   41b6c:	mov    QWORD PTR [rbp-0xa8],rdx
   41b73:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41b78:	mov    rdx,QWORD PTR [rbp-0xa8]
   41b7f:	mov    r9,QWORD PTR [rbp-0xb0]
   41b86:	test   eax,eax
   41b88:	je     410c9 <argp_failure@@Base+0xce9>
   41b8e:	mov    rdi,QWORD PTR [r15+0x38]
   41b92:	jmp    41694 <argp_failure@@Base+0x12b4>
   41b97:	mov    eax,ecx
   41b99:	mov    r13,r14
   41b9c:	xor    ebx,ebx
   41b9e:	jmp    414a3 <argp_failure@@Base+0x10c3>
   41ba3:	mov    esi,0x1
   41ba8:	mov    rdi,r14
   41bab:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41bb0:	test   eax,eax
   41bb2:	je     40fdd <argp_failure@@Base+0xbfd>
   41bb8:	mov    rax,QWORD PTR [r14+0x38]
   41bbc:	jmp    40fd2 <argp_failure@@Base+0xbf2>
   41bc1:	mov    edx,0x5
   41bc6:	lea    rsi,[rip+0x29dd3]        # 6b9a0 <_obstack_memory_used@@Base+0x1ed20>
   41bcd:	xor    edi,edi
   41bcf:	call   a040 <dcgettext@plt>
   41bd4:	xor    edx,edx
   41bd6:	mov    rbx,rax
   41bd9:	jmp    40b82 <argp_failure@@Base+0x7a2>
   41bde:	mov    rsi,rbx
   41be1:	mov    rdi,r15
   41be4:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41be9:	test   eax,eax
   41beb:	je     411b0 <argp_failure@@Base+0xdd0>
   41bf1:	mov    rdi,QWORD PTR [r15+0x38]
   41bf5:	jmp    41833 <argp_failure@@Base+0x1453>
   41bfa:	mov    rax,QWORD PTR [r14+0x38]
   41bfe:	cmp    rax,QWORD PTR [r14+0x40]
   41c02:	je     41ced <argp_failure@@Base+0x190d>
   41c08:	lea    rdx,[rax+0x1]
   41c0c:	mov    QWORD PTR [r14+0x38],rdx
   41c10:	mov    BYTE PTR [rax],0xa
   41c13:	mov    rdi,r13
   41c16:	call   a060 <strlen@plt>
   41c1b:	mov    r12,rax
   41c1e:	test   rax,rax
   41c21:	jne    41c7d <argp_failure@@Base+0x189d>
   41c23:	mov    rax,QWORD PTR [r14+0x38]
   41c27:	cmp    QWORD PTR [r14+0x40],rax
   41c2b:	je     41ccf <argp_failure@@Base+0x18ef>
   41c31:	lea    rdx,[rax+0x1]
   41c35:	mov    QWORD PTR [r14+0x38],rdx
   41c39:	mov    BYTE PTR [rax],0xa
   41c3c:	jmp    40ba4 <argp_failure@@Base+0x7c4>
   41c41:	mov    esi,0x1
   41c46:	mov    rdi,r14
   41c49:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41c4e:	test   eax,eax
   41c50:	je     40f42 <argp_failure@@Base+0xb62>
   41c56:	mov    rax,QWORD PTR [r14+0x38]
   41c5a:	jmp    40f37 <argp_failure@@Base+0xb57>
   41c5f:	mov    esi,0x1
   41c64:	mov    rdi,r15
   41c67:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41c6c:	test   eax,eax
   41c6e:	je     41802 <argp_failure@@Base+0x1422>
   41c74:	mov    rax,QWORD PTR [r15+0x38]
   41c78:	jmp    41ab5 <argp_failure@@Base+0x16d5>
   41c7d:	mov    rdi,QWORD PTR [r14+0x38]
   41c81:	mov    rax,QWORD PTR [r14+0x40]
   41c85:	lea    rdx,[rdi+r12*1]
   41c89:	cmp    rax,rdx
   41c8c:	jae    41c96 <argp_failure@@Base+0x18b6>
   41c8e:	sub    rax,rdi
   41c91:	cmp    r12,rax
   41c94:	ja     41d0b <argp_failure@@Base+0x192b>
   41c96:	mov    rdx,r12
   41c99:	mov    rsi,r13
   41c9c:	call   a420 <memcpy@plt>
   41ca1:	mov    rax,QWORD PTR [r14+0x38]
   41ca5:	add    rax,r12
   41ca8:	mov    QWORD PTR [r14+0x38],rax
   41cac:	jmp    41c27 <argp_failure@@Base+0x1847>
   41cb1:	mov    esi,0x3
   41cb6:	mov    rdi,r15
   41cb9:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41cbe:	test   eax,eax
   41cc0:	je     41802 <argp_failure@@Base+0x1422>
   41cc6:	mov    rax,QWORD PTR [r15+0x38]
   41cca:	jmp    41a10 <argp_failure@@Base+0x1630>
   41ccf:	mov    esi,0x1
   41cd4:	mov    rdi,r14
   41cd7:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41cdc:	test   eax,eax
   41cde:	je     40ba4 <argp_failure@@Base+0x7c4>
   41ce4:	mov    rax,QWORD PTR [r14+0x38]
   41ce8:	jmp    41c31 <argp_failure@@Base+0x1851>
   41ced:	mov    esi,0x1
   41cf2:	mov    rdi,r14
   41cf5:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41cfa:	test   eax,eax
   41cfc:	je     41c13 <argp_failure@@Base+0x1833>
   41d02:	mov    rax,QWORD PTR [r14+0x38]
   41d06:	jmp    41c08 <argp_failure@@Base+0x1828>
   41d0b:	mov    rsi,r12
   41d0e:	mov    rdi,r14
   41d11:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   41d16:	test   eax,eax
   41d18:	je     41c23 <argp_failure@@Base+0x1843>
   41d1e:	mov    rdi,QWORD PTR [r14+0x38]
   41d22:	jmp    41c96 <argp_failure@@Base+0x18b6>
   41d27:	call   a0a0 <__stack_chk_fail@plt>
   41d2c:	mov    esi,ecx
   41d2e:	jmp    417e0 <argp_failure@@Base+0x1400>
   41d33:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   41d3e:	xchg   ax,ax

0000000000041d40 <argp_help@@Base>:
   41d40:	endbr64 
   41d44:	mov    r8,rcx
   41d47:	mov    ecx,edx
   41d49:	mov    rdx,rsi
   41d4c:	xor    esi,esi
   41d4e:	jmp    406a0 <argp_failure@@Base+0x2c0>
   41d53:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   41d5e:	xchg   ax,ax

0000000000041d60 <argp_state_help@@Base>:
   41d60:	endbr64 
   41d64:	push   rbp
   41d65:	mov    ebp,edx
   41d67:	push   rbx
   41d68:	sub    rsp,0x8
   41d6c:	test   rdi,rdi
   41d6f:	je     41dc0 <argp_state_help@@Base+0x60>
   41d71:	mov    eax,DWORD PTR [rdi+0x1c]
   41d74:	mov    rbx,rdi
   41d77:	test   al,0x2
   41d79:	jne    41db2 <argp_state_help@@Base+0x52>
   41d7b:	test   rsi,rsi
   41d7e:	je     41db2 <argp_state_help@@Base+0x52>
   41d80:	or     dl,0x80
   41d83:	test   al,0x40
   41d85:	mov    r8,QWORD PTR [rdi+0x40]
   41d89:	cmovne ebp,edx
   41d8c:	mov    rdx,rsi
   41d8f:	mov    rsi,rdi
   41d92:	mov    rdi,QWORD PTR [rdi]
   41d95:	mov    ecx,ebp
   41d97:	call   406a0 <argp_failure@@Base+0x2c0>
   41d9c:	test   BYTE PTR [rbx+0x1c],0x20
   41da0:	jne    41db2 <argp_state_help@@Base+0x52>
   41da2:	test   ebp,0x100
   41da8:	jne    41de7 <argp_state_help@@Base+0x87>
   41daa:	and    ebp,0x200
   41db0:	jne    41de0 <argp_state_help@@Base+0x80>
   41db2:	add    rsp,0x8
   41db6:	pop    rbx
   41db7:	pop    rbp
   41db8:	ret    
   41db9:	nop    DWORD PTR [rax+0x0]
   41dc0:	test   rsi,rsi
   41dc3:	je     41db2 <argp_state_help@@Base+0x52>
   41dc5:	mov    rax,QWORD PTR [rip+0x3a20c]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   41dcc:	mov    rdx,rsi
   41dcf:	mov    ecx,ebp
   41dd1:	xor    esi,esi
   41dd3:	xor    edi,edi
   41dd5:	mov    r8,QWORD PTR [rax]
   41dd8:	call   406a0 <argp_failure@@Base+0x2c0>
   41ddd:	jmp    41da2 <argp_state_help@@Base+0x42>
   41ddf:	nop
   41de0:	xor    edi,edi
   41de2:	call   a820 <exit@plt>
   41de7:	lea    rax,[rip+0x3ced2]        # 7ecc0 <argp_err_exit_status@@Base>
   41dee:	mov    edi,DWORD PTR [rax]
   41df0:	call   a820 <exit@plt>
   41df5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000041e00 <argp_error@@Base>:
   41e00:	endbr64 
   41e04:	push   r13
   41e06:	mov    r13,rsi
   41e09:	push   r12
   41e0b:	mov    r12,rdi
   41e0e:	push   rbp
   41e0f:	sub    rsp,0xd0
   41e16:	mov    QWORD PTR [rsp+0x30],rdx
   41e1b:	mov    QWORD PTR [rsp+0x38],rcx
   41e20:	mov    QWORD PTR [rsp+0x40],r8
   41e25:	mov    QWORD PTR [rsp+0x48],r9
   41e2a:	test   al,al
   41e2c:	je     41e65 <argp_error@@Base+0x65>
   41e2e:	movaps XMMWORD PTR [rsp+0x50],xmm0
   41e33:	movaps XMMWORD PTR [rsp+0x60],xmm1
   41e38:	movaps XMMWORD PTR [rsp+0x70],xmm2
   41e3d:	movaps XMMWORD PTR [rsp+0x80],xmm3
   41e45:	movaps XMMWORD PTR [rsp+0x90],xmm4
   41e4d:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   41e55:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   41e5d:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   41e65:	mov    rax,QWORD PTR fs:0x28
   41e6e:	mov    QWORD PTR [rsp+0x18],rax
   41e73:	xor    eax,eax
   41e75:	test   r12,r12
   41e78:	je     41f70 <argp_error@@Base+0x170>
   41e7e:	test   BYTE PTR [r12+0x1c],0x2
   41e84:	jne    41f49 <argp_error@@Base+0x149>
   41e8a:	mov    rbp,QWORD PTR [r12+0x48]
   41e8f:	test   rbp,rbp
   41e92:	je     41f49 <argp_error@@Base+0x149>
   41e98:	mov    rdi,rbp
   41e9b:	call   a220 <flockfile@plt>
   41ea0:	lea    rax,[rsp+0xf0]
   41ea8:	mov    rdi,QWORD PTR [r12+0x40]
   41ead:	mov    DWORD PTR [rsp],0x10
   41eb4:	mov    QWORD PTR [rsp+0x8],rax
   41eb9:	lea    rax,[rsp+0x20]
   41ebe:	mov    DWORD PTR [rsp+0x4],0x30
   41ec6:	mov    QWORD PTR [rsp+0x10],rax
   41ecb:	mov    rsi,rbp
   41ece:	call   a2e0 <fputs_unlocked@plt>
   41ed3:	mov    rax,QWORD PTR [rbp+0x28]
   41ed7:	cmp    rax,QWORD PTR [rbp+0x30]
   41edb:	jae    41fd8 <argp_error@@Base+0x1d8>
   41ee1:	lea    rdx,[rax+0x1]
   41ee5:	mov    QWORD PTR [rbp+0x28],rdx
   41ee9:	mov    BYTE PTR [rax],0x3a
   41eec:	mov    rax,QWORD PTR [rbp+0x28]
   41ef0:	cmp    rax,QWORD PTR [rbp+0x30]
   41ef4:	jae    41ff0 <argp_error@@Base+0x1f0>
   41efa:	lea    rdx,[rax+0x1]
   41efe:	mov    QWORD PTR [rbp+0x28],rdx
   41f02:	mov    BYTE PTR [rax],0x20
   41f05:	mov    rcx,rsp
   41f08:	mov    rdx,r13
   41f0b:	mov    esi,0x1
   41f10:	mov    rdi,rbp
   41f13:	call   9e20 <__vfprintf_chk@plt>
   41f18:	mov    rax,QWORD PTR [rbp+0x28]
   41f1c:	cmp    rax,QWORD PTR [rbp+0x30]
   41f20:	jae    41fc0 <argp_error@@Base+0x1c0>
   41f26:	lea    rdx,[rax+0x1]
   41f2a:	mov    QWORD PTR [rbp+0x28],rdx
   41f2e:	mov    BYTE PTR [rax],0xa
   41f31:	mov    rdi,r12
   41f34:	mov    edx,0x104
   41f39:	mov    rsi,rbp
   41f3c:	call   41d60 <argp_state_help@@Base>
   41f41:	mov    rdi,rbp
   41f44:	call   9df0 <funlockfile@plt>
   41f49:	mov    rax,QWORD PTR [rsp+0x18]
   41f4e:	sub    rax,QWORD PTR fs:0x28
   41f57:	jne    42002 <argp_error@@Base+0x202>
   41f5d:	add    rsp,0xd0
   41f64:	pop    rbp
   41f65:	pop    r12
   41f67:	pop    r13
   41f69:	ret    
   41f6a:	nop    WORD PTR [rax+rax*1+0x0]
   41f70:	mov    rax,QWORD PTR [rip+0x3a071]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   41f77:	mov    rbp,QWORD PTR [rax]
   41f7a:	test   rbp,rbp
   41f7d:	je     41f49 <argp_error@@Base+0x149>
   41f7f:	mov    rdi,rbp
   41f82:	call   a220 <flockfile@plt>
   41f87:	lea    rax,[rsp+0xf0]
   41f8f:	mov    DWORD PTR [rsp],0x10
   41f96:	mov    QWORD PTR [rsp+0x8],rax
   41f9b:	lea    rax,[rsp+0x20]
   41fa0:	mov    QWORD PTR [rsp+0x10],rax
   41fa5:	mov    rax,QWORD PTR [rip+0x3a02c]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   41fac:	mov    DWORD PTR [rsp+0x4],0x30
   41fb4:	mov    rdi,QWORD PTR [rax]
   41fb7:	jmp    41ecb <argp_error@@Base+0xcb>
   41fbc:	nop    DWORD PTR [rax+0x0]
   41fc0:	mov    esi,0xa
   41fc5:	mov    rdi,rbp
   41fc8:	call   a120 <__overflow@plt>
   41fcd:	jmp    41f31 <argp_error@@Base+0x131>
   41fd2:	nop    WORD PTR [rax+rax*1+0x0]
   41fd8:	mov    esi,0x3a
   41fdd:	mov    rdi,rbp
   41fe0:	call   a120 <__overflow@plt>
   41fe5:	jmp    41eec <argp_error@@Base+0xec>
   41fea:	nop    WORD PTR [rax+rax*1+0x0]
   41ff0:	mov    esi,0x20
   41ff5:	mov    rdi,rbp
   41ff8:	call   a120 <__overflow@plt>
   41ffd:	jmp    41f05 <argp_error@@Base+0x105>
   42002:	call   a0a0 <__stack_chk_fail@plt>
   42007:	nop    WORD PTR [rax+rax*1+0x0]
   42010:	endbr64 
   42014:	cmp    edi,0x56
   42017:	je     42020 <argp_error@@Base+0x220>
   42019:	mov    eax,0x7
   4201e:	ret    
   4201f:	nop
   42020:	lea    rax,[rip+0x3dbb1]        # 7fbd8 <argp_program_version_hook@@Base>
   42027:	push   rbx
   42028:	mov    rbx,rdx
   4202b:	mov    rax,QWORD PTR [rax]
   4202e:	test   rax,rax
   42031:	je     42060 <argp_error@@Base+0x260>
   42033:	mov    rdi,QWORD PTR [rdx+0x50]
   42037:	mov    rsi,rdx
   4203a:	call   rax
   4203c:	xor    eax,eax
   4203e:	test   BYTE PTR [rbx+0x1c],0x20
   42042:	je     42050 <argp_error@@Base+0x250>
   42044:	pop    rbx
   42045:	ret    
   42046:	cs nop WORD PTR [rax+rax*1+0x0]
   42050:	xor    edi,edi
   42052:	call   a820 <exit@plt>
   42057:	nop    WORD PTR [rax+rax*1+0x0]
   42060:	lea    rax,[rip+0x3dc41]        # 7fca8 <argp_program_version@@Base>
   42067:	mov    rcx,QWORD PTR [rax]
   4206a:	test   rcx,rcx
   4206d:	je     42090 <argp_error@@Base+0x290>
   4206f:	mov    rdi,QWORD PTR [rdx+0x50]
   42073:	mov    esi,0x1
   42078:	xor    eax,eax
   4207a:	lea    rdx,[rip+0x2afae]        # 6d02f <_obstack_memory_used@@Base+0x203af>
   42081:	call   a840 <__fprintf_chk@plt>
   42086:	jmp    4203c <argp_error@@Base+0x23c>
   42088:	nop    DWORD PTR [rax+rax*1+0x0]
   42090:	mov    rax,QWORD PTR [rdx]
   42093:	lea    rsi,[rip+0x2997e]        # 6ba18 <_obstack_memory_used@@Base+0x1ed98>
   4209a:	mov    edx,0x5
   4209f:	mov    rdi,QWORD PTR [rax+0x30]
   420a3:	call   a040 <dcgettext@plt>
   420a8:	lea    rsi,[rip+0x29ca8]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   420af:	mov    rdi,rbx
   420b2:	mov    rdx,rax
   420b5:	xor    eax,eax
   420b7:	call   41e00 <argp_error@@Base>
   420bc:	jmp    4203c <argp_error@@Base+0x23c>
   420c1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   420cc:	nop    DWORD PTR [rax+0x0]
   420d0:	endbr64 
   420d4:	mov    eax,edi
   420d6:	mov    r9,rdx
   420d9:	mov    rdi,rsi
   420dc:	cmp    eax,0xfffffffe
   420df:	je     42150 <argp_error@@Base+0x350>
   420e1:	sub    rsp,0x8
   420e5:	cmp    eax,0xffffffff
   420e8:	jge    42120 <argp_error@@Base+0x320>
   420ea:	cmp    eax,0xfffffffc
   420ed:	je     421d0 <argp_error@@Base+0x3d0>
   420f3:	cmp    eax,0xfffffffd
   420f6:	jne    4222c <argp_error@@Base+0x42c>
   420fc:	mov    rsi,QWORD PTR [rdx+0x50]
   42100:	mov    rdi,r9
   42103:	mov    edx,0x201
   42108:	call   41d60 <argp_state_help@@Base>
   4210d:	xor    r8d,r8d
   42110:	mov    eax,r8d
   42113:	add    rsp,0x8
   42117:	ret    
   42118:	nop    DWORD PTR [rax+rax*1+0x0]
   42120:	mov    r8d,0x7
   42126:	cmp    eax,0x3f
   42129:	jne    42110 <argp_error@@Base+0x310>
   4212b:	mov    rsi,QWORD PTR [rdx+0x50]
   4212f:	mov    rdi,r9
   42132:	mov    edx,0x27a
   42137:	call   41d60 <argp_state_help@@Base>
   4213c:	xor    r8d,r8d
   4213f:	add    rsp,0x8
   42143:	mov    eax,r8d
   42146:	ret    
   42147:	nop    WORD PTR [rax+rax*1+0x0]
   42150:	mov    rax,QWORD PTR [rip+0x39e71]        # 7bfc8 <_obstack_memory_used@@Base+0x2f348>
   42157:	mov    rcx,rsi
   4215a:	mov    QWORD PTR [rax],rsi
   4215d:	movzx  eax,BYTE PTR [rsi]
   42160:	cmp    al,0x2f
   42162:	jne    42174 <argp_error@@Base+0x374>
   42164:	nop    DWORD PTR [rax+0x0]
   42168:	movzx  eax,BYTE PTR [rcx+0x1]
   4216c:	add    rcx,0x1
   42170:	cmp    al,0x2f
   42172:	je     42168 <argp_error@@Base+0x368>
   42174:	test   al,al
   42176:	je     421ac <argp_error@@Base+0x3ac>
   42178:	mov    r8,rcx
   4217b:	xor    edx,edx
   4217d:	jmp    42196 <argp_error@@Base+0x396>
   4217f:	nop
   42180:	test   dl,dl
   42182:	je     42189 <argp_error@@Base+0x389>
   42184:	mov    rcx,r8
   42187:	xor    edx,edx
   42189:	movzx  eax,BYTE PTR [r8+0x1]
   4218e:	add    r8,0x1
   42192:	test   al,al
   42194:	je     421ac <argp_error@@Base+0x3ac>
   42196:	cmp    al,0x2f
   42198:	jne    42180 <argp_error@@Base+0x380>
   4219a:	movzx  eax,BYTE PTR [r8+0x1]
   4219f:	add    r8,0x1
   421a3:	mov    edx,0x1
   421a8:	test   al,al
   421aa:	jne    42196 <argp_error@@Base+0x396>
   421ac:	mov    rax,QWORD PTR [rip+0x39e25]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   421b3:	mov    QWORD PTR [r9+0x40],rcx
   421b7:	mov    QWORD PTR [rax],rcx
   421ba:	mov    eax,DWORD PTR [r9+0x1c]
   421be:	and    eax,0x3
   421c1:	cmp    eax,0x1
   421c4:	je     42220 <argp_error@@Base+0x420>
   421c6:	xor    r8d,r8d
   421c9:	mov    eax,r8d
   421cc:	ret    
   421cd:	nop    DWORD PTR [rax]
   421d0:	test   rsi,rsi
   421d3:	lea    rax,[rip+0x29c40]        # 6be1a <_obstack_memory_used@@Base+0x1f19a>
   421da:	mov    edx,0xa
   421df:	cmove  rdi,rax
   421e3:	xor    esi,esi
   421e5:	call   a410 <strtol@plt>
   421ea:	mov    DWORD PTR [rip+0x3dacc],eax        # 7fcbc <argp_program_bug_address@@Base+0xc>
   421f0:	jmp    42202 <argp_error@@Base+0x402>
   421f2:	nop    WORD PTR [rax+rax*1+0x0]
   421f8:	mov    edi,0x1
   421fd:	call   a910 <sleep@plt>
   42202:	mov    eax,DWORD PTR [rip+0x3dab4]        # 7fcbc <argp_program_bug_address@@Base+0xc>
   42208:	lea    edx,[rax-0x1]
   4220b:	mov    DWORD PTR [rip+0x3daab],edx        # 7fcbc <argp_program_bug_address@@Base+0xc>
   42211:	test   eax,eax
   42213:	jg     421f8 <argp_error@@Base+0x3f8>
   42215:	xor    r8d,r8d
   42218:	add    rsp,0x8
   4221c:	mov    eax,r8d
   4221f:	ret    
   42220:	mov    rax,QWORD PTR [r9+0x10]
   42224:	xor    r8d,r8d
   42227:	mov    QWORD PTR [rax],rdi
   4222a:	jmp    421c9 <argp_error@@Base+0x3c9>
   4222c:	mov    r8d,0x7
   42232:	jmp    42110 <argp_error@@Base+0x310>
   42237:	nop    WORD PTR [rax+rax*1+0x0]

0000000000042240 <argp_parse@@Base>:
   42240:	endbr64 
   42244:	push   rbp
   42245:	mov    rbp,rsp
   42248:	push   r15
   4224a:	mov    r15d,ecx
   4224d:	push   r14
   4224f:	mov    r14,rdi
   42252:	push   r13
   42254:	mov    r13,rdx
   42257:	push   r12
   42259:	push   rbx
   4225a:	mov    ebx,esi
   4225c:	sub    rsp,0x158
   42263:	mov    QWORD PTR [rbp-0x180],r8
   4226a:	mov    QWORD PTR [rbp-0x170],r9
   42271:	mov    rax,QWORD PTR fs:0x28
   4227a:	mov    QWORD PTR [rbp-0x38],rax
   4227e:	xor    eax,eax
   42280:	and    ecx,0x1
   42283:	jne    422a7 <argp_parse@@Base+0x67>
   42285:	mov    rax,QWORD PTR [rip+0x39d3c]        # 7bfc8 <_obstack_memory_used@@Base+0x2f348>
   4228c:	cmp    QWORD PTR [rax],0x0
   42290:	je     42ea9 <argp_parse@@Base+0xc69>
   42296:	mov    rdi,QWORD PTR [rip+0x39d3b]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   4229d:	cmp    QWORD PTR [rdi],0x0
   422a1:	je     42ec0 <argp_parse@@Base+0xc80>
   422a7:	mov    eax,r15d
   422aa:	and    eax,0x4
   422ad:	sete   sil
   422b1:	mov    DWORD PTR [rbp-0x174],eax
   422b7:	movzx  esi,sil
   422bb:	test   r15b,0x10
   422bf:	je     42310 <argp_parse@@Base+0xd0>
   422c1:	mov    QWORD PTR [rbp-0x150],rsi
   422c8:	mov    QWORD PTR [rbp-0x148],0x0
   422d3:	mov    QWORD PTR [rbp-0x140],0x0
   422de:	mov    QWORD PTR [rbp-0x138],0x0
   422e9:	test   r14,r14
   422ec:	jne    4240c <argp_parse@@Base+0x1cc>
   422f2:	mov    r12d,0x68
   422f8:	mov    r8d,0x48
   422fe:	xor    r9d,r9d
   42301:	mov    ecx,0x48
   42306:	jmp    4245c <argp_parse@@Base+0x21c>
   4230b:	nop    DWORD PTR [rax+rax*1+0x0]
   42310:	mov    rax,rsp
   42313:	cmp    rsp,rax
   42316:	je     4232d <argp_parse@@Base+0xed>
   42318:	sub    rsp,0x1000
   4231f:	or     QWORD PTR [rsp+0xff8],0x0
   42328:	cmp    rsp,rax
   4232b:	jne    42318 <argp_parse@@Base+0xd8>
   4232d:	sub    rsp,0x90
   42334:	or     QWORD PTR [rsp+0x88],0x0
   4233d:	lea    rdx,[rsp+0xf]
   42342:	mov    rax,rsp
   42345:	and    rdx,0xfffffffffffffff0
   42349:	cmp    rsp,rax
   4234c:	je     42363 <argp_parse@@Base+0x123>
   4234e:	sub    rsp,0x1000
   42355:	or     QWORD PTR [rsp+0xff8],0x0
   4235e:	cmp    rsp,rax
   42361:	jne    4234e <argp_parse@@Base+0x10e>
   42363:	sub    rsp,0x40
   42367:	or     QWORD PTR [rsp+0x38],0x0
   4236d:	pxor   xmm0,xmm0
   42371:	xor    eax,eax
   42373:	mov    ecx,0x10
   42378:	lea    r8,[rsp+0xf]
   4237d:	mov    rdi,rdx
   42380:	rep stos QWORD PTR es:[rdi],rax
   42383:	and    r8,0xfffffffffffffff0
   42387:	mov    rax,rdx
   4238a:	movaps XMMWORD PTR [r8+0x20],xmm0
   4238f:	mov    QWORD PTR [r8+0x30],0x0
   42397:	mov    QWORD PTR [r8+0x20],rdx
   4239b:	movaps XMMWORD PTR [r8],xmm0
   4239f:	movaps XMMWORD PTR [r8+0x10],xmm0
   423a4:	test   r14,r14
   423a7:	je     423b0 <argp_parse@@Base+0x170>
   423a9:	mov    QWORD PTR [rdx],r14
   423ac:	add    rax,0x20
   423b0:	lea    rdx,[rip+0x3d8f1]        # 7fca8 <argp_program_version@@Base>
   423b7:	lea    rcx,[rip+0x38f42]        # 7b300 <_obstack_memory_used@@Base+0x2e680>
   423be:	mov    QWORD PTR [rax],rcx
   423c1:	cmp    QWORD PTR [rdx],0x0
   423c5:	je     432d0 <argp_parse@@Base+0x1090>
   423cb:	lea    rcx,[rip+0x38eee]        # 7b2c0 <_obstack_memory_used@@Base+0x2e640>
   423d2:	lea    rdx,[rax+0x40]
   423d6:	mov    QWORD PTR [rax+0x20],rcx
   423da:	mov    QWORD PTR [rdx],0x0
   423e1:	mov    r14,r8
   423e4:	mov    QWORD PTR [rbp-0x150],rsi
   423eb:	mov    QWORD PTR [rbp-0x148],0x0
   423f6:	mov    QWORD PTR [rbp-0x140],0x0
   42401:	mov    QWORD PTR [rbp-0x138],0x0
   4240c:	lea    rsi,[rbp-0x150]
   42413:	mov    rdi,r14
   42416:	call   38290 <__sprintf_chk@plt+0x2d8e0>
   4241b:	mov    rax,QWORD PTR [rbp-0x140]
   42422:	mov    rsi,QWORD PTR [rbp-0x150]
   42429:	lea    rdi,[rax+rax*8+0x9]
   4242e:	mov    rax,QWORD PTR [rbp-0x138]
   42435:	lea    rcx,[rdi*8+0x0]
   4243d:	lea    r9,[rax*8+0x0]
   42445:	mov    rax,QWORD PTR [rbp-0x148]
   4244c:	lea    r8,[rcx+r9*1]
   42450:	lea    rdx,[rax+0x1]
   42454:	shl    rdx,0x5
   42458:	lea    r12,[rdx+r8*1]
   4245c:	lea    rdi,[r12+rsi*1+0x1]
   42461:	mov    QWORD PTR [rbp-0x168],r9
   42468:	mov    QWORD PTR [rbp-0x160],r8
   4246f:	mov    QWORD PTR [rbp-0x158],rcx
   42476:	call   a4a0 <malloc@plt>
   4247b:	mov    rcx,QWORD PTR [rbp-0x158]
   42482:	mov    r8,QWORD PTR [rbp-0x160]
   42489:	test   rax,rax
   4248c:	mov    QWORD PTR [rbp-0x40],rax
   42490:	mov    r9,QWORD PTR [rbp-0x168]
   42497:	je     43336 <argp_parse@@Base+0x10f6>
   4249d:	add    r8,rax
   424a0:	lea    rdi,[rax+rcx*1]
   424a4:	add    r12,rax
   424a7:	mov    rdx,r9
   424aa:	mov    QWORD PTR [rbp-0xc0],rax
   424b1:	xor    esi,esi
   424b3:	movabs rax,0x100000001
   424bd:	mov    QWORD PTR [rbp-0x100],r8
   424c4:	mov    QWORD PTR [rbp-0x158],r8
   424cb:	mov    QWORD PTR [rbp-0xb0],rdi
   424d2:	mov    QWORD PTR [rbp-0x108],r12
   424d9:	mov    QWORD PTR [rbp-0xf8],rax
   424e0:	mov    DWORD PTR [rbp-0xf0],0x0
   424ea:	mov    QWORD PTR [rbp-0xe8],0x0
   424f5:	mov    DWORD PTR [rbp-0xe0],0x0
   424ff:	mov    QWORD PTR [rbp-0xd8],0x0
   4250a:	mov    QWORD PTR [rbp-0xd0],0x0
   42515:	mov    DWORD PTR [rbp-0xc8],0x0
   4251f:	call   a1b0 <memset@plt>
   42524:	mov    r8,QWORD PTR [rbp-0x158]
   4252b:	lea    r9,[rbp-0x110]
   42532:	mov    QWORD PTR [rbp-0x128],r12
   42539:	mov    QWORD PTR [rbp-0x130],r9
   42540:	mov    QWORD PTR [rbp-0x120],r8
   42547:	mov    QWORD PTR [rbp-0x118],rax
   4254e:	test   r15b,0x8
   42552:	jne    42968 <argp_parse@@Base+0x728>
   42558:	mov    edx,DWORD PTR [rbp-0x174]
   4255e:	mov    rax,r12
   42561:	test   edx,edx
   42563:	je     42575 <argp_parse@@Base+0x335>
   42565:	add    rax,0x1
   42569:	mov    BYTE PTR [r12],0x2b
   4256e:	mov    QWORD PTR [rbp-0x128],rax
   42575:	mov    BYTE PTR [rax],0x0
   42578:	mov    rax,QWORD PTR [rbp-0x120]
   4257f:	mov    QWORD PTR [rax],0x0
   42586:	mov    QWORD PTR [rbp-0x110],r14
   4258d:	test   r14,r14
   42590:	je     42bb0 <argp_parse@@Base+0x970>
   42596:	mov    rcx,QWORD PTR [rbp-0xc0]
   4259d:	xor    edx,edx
   4259f:	xor    esi,esi
   425a1:	mov    rdi,r14
   425a4:	lea    r8,[rbp-0x130]
   425ab:	mov    QWORD PTR [rbp-0x158],r9
   425b2:	call   38c90 <__sprintf_chk@plt+0x2e2e0>
   425b7:	mov    rcx,QWORD PTR [rbp-0x110]
   425be:	mov    r9,QWORD PTR [rbp-0x158]
   425c5:	pxor   xmm0,xmm0
   425c9:	mov    rdx,QWORD PTR [rbp-0xc0]
   425d0:	movups XMMWORD PTR [rbp-0x98],xmm0
   425d7:	mov    QWORD PTR [rbp-0xa0],rcx
   425de:	mov    rcx,QWORD PTR [rip+0x39a03]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   425e5:	movups XMMWORD PTR [rbp-0x88],xmm0
   425ec:	mov    rcx,QWORD PTR [rcx]
   425ef:	mov    QWORD PTR [rbp-0xb8],rax
   425f6:	mov    DWORD PTR [rbp-0x98],ebx
   425fc:	mov    QWORD PTR [rbp-0x58],rcx
   42600:	mov    rcx,QWORD PTR [rip+0x39999]        # 7bfa0 <_obstack_memory_used@@Base+0x2f320>
   42607:	mov    QWORD PTR [rbp-0x90],r13
   4260e:	mov    rcx,QWORD PTR [rcx]
   42611:	mov    QWORD PTR [rbp-0x48],r9
   42615:	mov    DWORD PTR [rbp-0x84],r15d
   4261c:	mov    QWORD PTR [rbp-0x50],rcx
   42620:	mov    DWORD PTR [rbp-0xa8],0x1
   4262a:	movups XMMWORD PTR [rbp-0x78],xmm0
   4262e:	movups XMMWORD PTR [rbp-0x68],xmm0
   42632:	cmp    rax,rdx
   42635:	jbe    42c21 <argp_parse@@Base+0x9e1>
   4263b:	mov    rax,QWORD PTR [rbp-0x170]
   42642:	lea    rbx,[rdx+0x48]
   42646:	lea    r12,[rbp-0xa0]
   4264d:	mov    QWORD PTR [rdx+0x30],rax
   42651:	jmp    426ad <argp_parse@@Base+0x46d>
   42653:	nop    DWORD PTR [rax+rax*1+0x0]
   42658:	mov    rdx,QWORD PTR [rbx-0x8]
   4265c:	xor    esi,esi
   4265e:	mov    edi,0x1000003
   42663:	mov    QWORD PTR [rbp-0x68],rdx
   42667:	mov    rdx,QWORD PTR [rbx-0x18]
   4266b:	mov    QWORD PTR [rbp-0x78],rdx
   4266f:	mov    rdx,QWORD PTR [rbx-0x10]
   42673:	mov    QWORD PTR [rbp-0x70],rdx
   42677:	mov    edx,DWORD PTR [rbx-0x30]
   4267a:	mov    DWORD PTR [rbp-0x80],edx
   4267d:	mov    rdx,r12
   42680:	call   rax
   42682:	mov    r15d,eax
   42685:	mov    rax,QWORD PTR [rbp-0x68]
   42689:	mov    QWORD PTR [rbx-0x8],rax
   4268d:	cmp    QWORD PTR [rbp-0xb8],rbx
   42694:	jbe    42ca0 <argp_parse@@Base+0xa60>
   4269a:	test   r15d,r15d
   4269d:	je     426a9 <argp_parse@@Base+0x469>
   4269f:	cmp    r15d,0x7
   426a3:	jne    4293d <argp_parse@@Base+0x6fd>
   426a9:	add    rbx,0x48
   426ad:	mov    rax,QWORD PTR [rbx-0x28]
   426b1:	test   rax,rax
   426b4:	je     426c5 <argp_parse@@Base+0x485>
   426b6:	mov    rax,QWORD PTR [rax+0x38]
   426ba:	mov    edx,DWORD PTR [rbx-0x20]
   426bd:	mov    rax,QWORD PTR [rax+rdx*8]
   426c1:	mov    QWORD PTR [rbx-0x18],rax
   426c5:	mov    rax,QWORD PTR [rbx-0x48]
   426c9:	test   rax,rax
   426cc:	jne    42658 <argp_parse@@Base+0x418>
   426ce:	mov    rax,QWORD PTR [rbx-0x40]
   426d2:	mov    rax,QWORD PTR [rax+0x20]
   426d6:	test   rax,rax
   426d9:	je     42700 <argp_parse@@Base+0x4c0>
   426db:	cmp    QWORD PTR [rax],0x0
   426df:	je     42700 <argp_parse@@Base+0x4c0>
   426e1:	mov    rax,QWORD PTR [rbx-0x10]
   426e5:	mov    rdx,QWORD PTR [rbx-0x18]
   426e9:	mov    QWORD PTR [rax],rdx
   426ec:	mov    rax,QWORD PTR [rbx-0x48]
   426f0:	test   rax,rax
   426f3:	jne    42658 <argp_parse@@Base+0x418>
   426f9:	nop    DWORD PTR [rax+0x0]
   42700:	cmp    rbx,QWORD PTR [rbp-0xb8]
   42707:	jb     426a9 <argp_parse@@Base+0x469>
   42709:	nop    DWORD PTR [rax+0x0]
   42710:	mov    r15d,DWORD PTR [rbp-0x84]
   42717:	mov    rax,QWORD PTR [rbp-0x90]
   4271e:	mov    ebx,DWORD PTR [rbp-0x98]
   42724:	test   r15b,0x2
   42728:	je     42c2e <argp_parse@@Base+0x9ee>
   4272e:	mov    DWORD PTR [rbp-0xf4],0x0
   42738:	and    r15d,0x1
   4273c:	jne    42e90 <argp_parse@@Base+0xc50>
   42742:	cmp    r13,rax
   42745:	je     42c41 <argp_parse@@Base+0xa01>
   4274b:	mov    rax,QWORD PTR [rip+0x39886]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   42752:	mov    rdx,QWORD PTR [rax]
   42755:	mov    eax,DWORD PTR [rbp-0x88]
   4275b:	mov    QWORD PTR [rbp-0x60],rdx
   4275f:	mov    edx,DWORD PTR [rbp-0xa8]
   42765:	mov    DWORD PTR [rbp-0x158],eax
   4276b:	mov    eax,DWORD PTR [rbp-0x7c]
   4276e:	test   eax,eax
   42770:	je     42781 <argp_parse@@Base+0x541>
   42772:	cmp    eax,DWORD PTR [rbp-0x158]
   42778:	jle    42789 <argp_parse@@Base+0x549>
   4277a:	mov    DWORD PTR [rbp-0x7c],0x0
   42781:	test   edx,edx
   42783:	jne    42a40 <argp_parse@@Base+0x800>
   42789:	movsxd rax,DWORD PTR [rbp-0x158]
   42790:	cmp    ebx,eax
   42792:	jle    42b00 <argp_parse@@Base+0x8c0>
   42798:	test   BYTE PTR [rbp-0x84],0x4
   4279f:	jne    42d10 <argp_parse@@Base+0xad0>
   427a5:	mov    rdx,QWORD PTR [rbp-0x90]
   427ac:	mov    r13,QWORD PTR [rdx+rax*8]
   427b0:	mov    QWORD PTR [rbp-0xe8],r13
   427b7:	mov    edx,DWORD PTR [rbp-0x158]
   427bd:	mov    r12,QWORD PTR [rbp-0xc0]
   427c4:	mov    DWORD PTR [rbp-0x88],edx
   427ca:	cmp    QWORD PTR [rbp-0xb8],r12
   427d1:	jbe    42ae7 <argp_parse@@Base+0x8a7>
   427d7:	lea    rbx,[rbp-0xa0]
   427de:	xchg   ax,ax
   427e0:	lea    eax,[rdx+0x1]
   427e3:	mov    DWORD PTR [rbp-0x88],eax
   427e9:	mov    rax,QWORD PTR [r12]
   427ed:	test   rax,rax
   427f0:	je     42ad0 <argp_parse@@Base+0x890>
   427f6:	mov    rdx,QWORD PTR [r12+0x40]
   427fb:	mov    rsi,r13
   427fe:	xor    edi,edi
   42800:	mov    QWORD PTR [rbp-0x68],rdx
   42804:	mov    rdx,QWORD PTR [r12+0x30]
   42809:	mov    QWORD PTR [rbp-0x78],rdx
   4280d:	mov    rdx,QWORD PTR [r12+0x38]
   42812:	mov    QWORD PTR [rbp-0x70],rdx
   42816:	mov    edx,DWORD PTR [r12+0x18]
   4281b:	mov    DWORD PTR [rbp-0x80],edx
   4281e:	mov    rdx,rbx
   42821:	call   rax
   42823:	mov    r15d,eax
   42826:	mov    rax,QWORD PTR [rbp-0x68]
   4282a:	mov    QWORD PTR [r12+0x40],rax
   4282f:	cmp    r15d,0x7
   42833:	je     42980 <argp_parse@@Base+0x740>
   42839:	lea    r14,[r12+0x48]
   4283e:	test   r15d,r15d
   42841:	je     42a08 <argp_parse@@Base+0x7c8>
   42847:	cmp    r15d,0x7
   4284b:	je     42f23 <argp_parse@@Base+0xce3>
   42851:	mov    rbx,QWORD PTR [rbp-0xb8]
   42858:	mov    r12,QWORD PTR [rbp-0xc0]
   4285f:	cmp    r12,rbx
   42862:	jae    428c8 <argp_parse@@Base+0x688>
   42864:	lea    r13,[rbp-0xa0]
   4286b:	nop    DWORD PTR [rax+rax*1+0x0]
   42870:	mov    rax,QWORD PTR [r12]
   42874:	test   rax,rax
   42877:	je     428b8 <argp_parse@@Base+0x678>
   42879:	mov    rdx,QWORD PTR [r12+0x40]
   4287e:	xor    esi,esi
   42880:	mov    edi,0x1000005
   42885:	mov    QWORD PTR [rbp-0x68],rdx
   42889:	mov    rdx,QWORD PTR [r12+0x30]
   4288e:	mov    QWORD PTR [rbp-0x78],rdx
   42892:	mov    rdx,QWORD PTR [r12+0x38]
   42897:	mov    QWORD PTR [rbp-0x70],rdx
   4289b:	mov    edx,DWORD PTR [r12+0x18]
   428a0:	mov    DWORD PTR [rbp-0x80],edx
   428a3:	mov    rdx,r13
   428a6:	call   rax
   428a8:	mov    rax,QWORD PTR [rbp-0x68]
   428ac:	mov    QWORD PTR [r12+0x40],rax
   428b1:	mov    rbx,QWORD PTR [rbp-0xb8]
   428b8:	add    r12,0x48
   428bc:	cmp    r12,rbx
   428bf:	jb     42870 <argp_parse@@Base+0x630>
   428c1:	mov    r12,QWORD PTR [rbp-0xc0]
   428c8:	sub    rbx,0x48
   428cc:	cmp    rbx,r12
   428cf:	jb     42927 <argp_parse@@Base+0x6e7>
   428d1:	lea    r12,[rbp-0xa0]
   428d8:	nop    DWORD PTR [rax+rax*1+0x0]
   428e0:	mov    rax,QWORD PTR [rbx]
   428e3:	test   rax,rax
   428e6:	je     4291a <argp_parse@@Base+0x6da>
   428e8:	mov    rdx,QWORD PTR [rbx+0x40]
   428ec:	xor    esi,esi
   428ee:	mov    edi,0x1000007
   428f3:	mov    QWORD PTR [rbp-0x68],rdx
   428f7:	mov    rdx,QWORD PTR [rbx+0x30]
   428fb:	mov    QWORD PTR [rbp-0x78],rdx
   428ff:	mov    rdx,QWORD PTR [rbx+0x38]
   42903:	mov    QWORD PTR [rbp-0x70],rdx
   42907:	mov    edx,DWORD PTR [rbx+0x18]
   4290a:	mov    DWORD PTR [rbp-0x80],edx
   4290d:	mov    rdx,r12
   42910:	call   rax
   42912:	mov    rax,QWORD PTR [rbp-0x68]
   42916:	mov    QWORD PTR [rbx+0x40],rax
   4291a:	sub    rbx,0x48
   4291e:	cmp    rbx,QWORD PTR [rbp-0xc0]
   42925:	jae    428e0 <argp_parse@@Base+0x6a0>
   42927:	cmp    r15d,0x7
   4292b:	mov    eax,0x16
   42930:	cmove  r15d,eax
   42934:	mov    rdi,QWORD PTR [rbp-0x40]
   42938:	call   9ce0 <free@plt>
   4293d:	mov    rax,QWORD PTR [rbp-0x38]
   42941:	sub    rax,QWORD PTR fs:0x28
   4294a:	jne    43341 <argp_parse@@Base+0x1101>
   42950:	lea    rsp,[rbp-0x28]
   42954:	mov    eax,r15d
   42957:	pop    rbx
   42958:	pop    r12
   4295a:	pop    r13
   4295c:	pop    r14
   4295e:	pop    r15
   42960:	pop    rbp
   42961:	ret    
   42962:	nop    WORD PTR [rax+rax*1+0x0]
   42968:	lea    rax,[r12+0x1]
   4296d:	mov    BYTE PTR [r12],0x2d
   42972:	mov    QWORD PTR [rbp-0x128],rax
   42979:	jmp    42575 <argp_parse@@Base+0x335>
   4297e:	xchg   ax,ax
   42980:	mov    eax,DWORD PTR [rbp-0x88]
   42986:	mov    r8,QWORD PTR [r12]
   4298a:	lea    r14,[r12+0x48]
   4298f:	lea    edx,[rax-0x1]
   42992:	mov    DWORD PTR [rbp-0x88],edx
   42998:	test   r8,r8
   4299b:	je     43346 <argp_parse@@Base+0x1106>
   429a1:	mov    rax,QWORD PTR [r12+0x40]
   429a6:	mov    rdx,rbx
   429a9:	xor    esi,esi
   429ab:	mov    edi,0x1000006
   429b0:	mov    QWORD PTR [rbp-0x68],rax
   429b4:	mov    rax,QWORD PTR [r12+0x30]
   429b9:	mov    QWORD PTR [rbp-0x78],rax
   429bd:	mov    rax,QWORD PTR [r12+0x38]
   429c2:	mov    QWORD PTR [rbp-0x70],rax
   429c6:	mov    eax,DWORD PTR [r12+0x18]
   429cb:	mov    DWORD PTR [rbp-0x80],eax
   429ce:	call   r8
   429d1:	mov    r15d,eax
   429d4:	mov    rax,QWORD PTR [rbp-0x68]
   429d8:	mov    QWORD PTR [r12+0x40],rax
   429dd:	cmp    QWORD PTR [rbp-0xb8],r14
   429e4:	jbe    4334e <argp_parse@@Base+0x110e>
   429ea:	cmp    r15d,0x7
   429ee:	jne    4334e <argp_parse@@Base+0x110e>
   429f4:	mov    edx,DWORD PTR [rbp-0x88]
   429fa:	mov    r12,r14
   429fd:	jmp    427e0 <argp_parse@@Base+0x5a0>
   42a02:	nop    WORD PTR [rax+rax*1+0x0]
   42a08:	mov    ebx,DWORD PTR [rbp-0x98]
   42a0e:	mov    eax,DWORD PTR [rbp-0x88]
   42a14:	mov    ecx,DWORD PTR [rbp-0x158]
   42a1a:	cmp    eax,ecx
   42a1c:	jle    42b70 <argp_parse@@Base+0x930>
   42a22:	mov    edx,eax
   42a24:	mov    DWORD PTR [rbp-0x158],eax
   42a2a:	sub    edx,ecx
   42a2c:	add    DWORD PTR [r14-0x30],edx
   42a30:	mov    edx,DWORD PTR [rbp-0xa8]
   42a36:	jmp    4276b <argp_parse@@Base+0x52b>
   42a3b:	nop    DWORD PTR [rax+rax*1+0x0]
   42a40:	mov    eax,DWORD PTR [rbp-0x158]
   42a46:	mov    rcx,QWORD PTR [rbp-0x100]
   42a4d:	mov    DWORD PTR [rbp-0xf0],0xffffffff
   42a57:	mov    rdx,QWORD PTR [rbp-0x108]
   42a5e:	mov    rsi,QWORD PTR [rbp-0x90]
   42a65:	mov    DWORD PTR [rbp-0xf8],eax
   42a6b:	test   BYTE PTR [rbp-0x84],0x40
   42a72:	je     42b90 <argp_parse@@Base+0x950>
   42a78:	mov    edi,ebx
   42a7a:	lea    r9,[rbp-0xf8]
   42a81:	mov    r8d,0x1
   42a87:	call   58d10 <_obstack_memory_used@@Base+0xc090>
   42a8c:	mov    ebx,eax
   42a8e:	mov    eax,DWORD PTR [rbp-0xf8]
   42a94:	mov    DWORD PTR [rbp-0x158],eax
   42a9a:	mov    DWORD PTR [rbp-0x88],eax
   42aa0:	cmp    ebx,0xffffffff
   42aa3:	je     42cc0 <argp_parse@@Base+0xa80>
   42aa9:	cmp    ebx,0x3f
   42aac:	je     42dd0 <argp_parse@@Base+0xb90>
   42ab2:	cmp    ebx,0x1
   42ab5:	jne    4301b <argp_parse@@Base+0xddb>
   42abb:	sub    DWORD PTR [rbp-0x158],0x1
   42ac2:	mov    r13,QWORD PTR [rbp-0xe8]
   42ac9:	jmp    427b7 <argp_parse@@Base+0x577>
   42ace:	xchg   ax,ax
   42ad0:	mov    DWORD PTR [rbp-0x88],edx
   42ad6:	add    r12,0x48
   42ada:	cmp    QWORD PTR [rbp-0xb8],r12
   42ae1:	ja     427e0 <argp_parse@@Base+0x5a0>
   42ae7:	mov    eax,DWORD PTR [rbp-0x88]
   42aed:	mov    ebx,DWORD PTR [rbp-0x98]
   42af3:	mov    DWORD PTR [rbp-0x158],eax
   42af9:	nop    DWORD PTR [rax+0x0]
   42b00:	cmp    DWORD PTR [rbp-0x158],ebx
   42b06:	jne    42d10 <argp_parse@@Base+0xad0>
   42b0c:	mov    r13,QWORD PTR [rbp-0xc0]
   42b13:	mov    rbx,QWORD PTR [rbp-0xb8]
   42b1a:	cmp    r13,rbx
   42b1d:	jae    432ea <argp_parse@@Base+0x10aa>
   42b23:	xor    r15d,r15d
   42b26:	lea    r12,[rbp-0xa0]
   42b2d:	nop    DWORD PTR [rax]
   42b30:	mov    eax,DWORD PTR [r13+0x18]
   42b34:	add    r13,0x48
   42b38:	test   eax,eax
   42b3a:	je     430e0 <argp_parse@@Base+0xea0>
   42b40:	cmp    rbx,r13
   42b43:	jbe    431c9 <argp_parse@@Base+0xf89>
   42b49:	test   r15d,r15d
   42b4c:	je     42b30 <argp_parse@@Base+0x8f0>
   42b4e:	cmp    r15d,0x7
   42b52:	je     42b30 <argp_parse@@Base+0x8f0>
   42b54:	cmp    QWORD PTR [rbp-0x180],0x0
   42b5c:	jne    43264 <argp_parse@@Base+0x1024>
   42b62:	jmp    42858 <argp_parse@@Base+0x618>
   42b67:	nop    WORD PTR [rax+rax*1+0x0]
   42b70:	mov    DWORD PTR [rbp-0xa8],0x1
   42b7a:	mov    edx,0x1
   42b7f:	mov    DWORD PTR [rbp-0x158],eax
   42b85:	jmp    4276b <argp_parse@@Base+0x52b>
   42b8a:	nop    WORD PTR [rax+rax*1+0x0]
   42b90:	mov    edi,ebx
   42b92:	lea    r9,[rbp-0xf8]
   42b99:	xor    r8d,r8d
   42b9c:	call   58d10 <_obstack_memory_used@@Base+0xc090>
   42ba1:	mov    ebx,eax
   42ba3:	jmp    42a8e <argp_parse@@Base+0x84e>
   42ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   42bb0:	mov    rax,QWORD PTR [rbp-0xc0]
   42bb7:	pxor   xmm0,xmm0
   42bbb:	mov    QWORD PTR [rbp-0x48],r9
   42bbf:	movups XMMWORD PTR [rbp-0x98],xmm0
   42bc6:	mov    QWORD PTR [rbp-0xb8],rax
   42bcd:	mov    rax,QWORD PTR [rip+0x39414]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   42bd4:	movups XMMWORD PTR [rbp-0x88],xmm0
   42bdb:	mov    rax,QWORD PTR [rax]
   42bde:	mov    DWORD PTR [rbp-0x98],ebx
   42be4:	mov    QWORD PTR [rbp-0xa0],0x0
   42bef:	mov    QWORD PTR [rbp-0x58],rax
   42bf3:	mov    rax,QWORD PTR [rip+0x393a6]        # 7bfa0 <_obstack_memory_used@@Base+0x2f320>
   42bfa:	mov    QWORD PTR [rbp-0x90],r13
   42c01:	mov    rax,QWORD PTR [rax]
   42c04:	mov    DWORD PTR [rbp-0x84],r15d
   42c0b:	mov    DWORD PTR [rbp-0xa8],0x1
   42c15:	mov    QWORD PTR [rbp-0x50],rax
   42c19:	movups XMMWORD PTR [rbp-0x78],xmm0
   42c1d:	movups XMMWORD PTR [rbp-0x68],xmm0
   42c21:	mov    rax,r13
   42c24:	test   r15b,0x2
   42c28:	jne    4272e <argp_parse@@Base+0x4ee>
   42c2e:	mov    DWORD PTR [rbp-0xf4],0x1
   42c38:	cmp    r13,rax
   42c3b:	jne    4274b <argp_parse@@Base+0x50b>
   42c41:	mov    rdx,QWORD PTR [r13+0x0]
   42c45:	test   rdx,rdx
   42c48:	je     4274b <argp_parse@@Base+0x50b>
   42c4e:	movzx  eax,BYTE PTR [rdx]
   42c51:	cmp    al,0x2f
   42c53:	jne    42c64 <argp_parse@@Base+0xa24>
   42c55:	nop    DWORD PTR [rax]
   42c58:	movzx  eax,BYTE PTR [rdx+0x1]
   42c5c:	add    rdx,0x1
   42c60:	cmp    al,0x2f
   42c62:	je     42c58 <argp_parse@@Base+0xa18>
   42c64:	test   al,al
   42c66:	je     42755 <argp_parse@@Base+0x515>
   42c6c:	mov    rcx,rdx
   42c6f:	xor    esi,esi
   42c71:	jmp    42c92 <argp_parse@@Base+0xa52>
   42c73:	nop    DWORD PTR [rax+rax*1+0x0]
   42c78:	test   sil,sil
   42c7b:	je     42c82 <argp_parse@@Base+0xa42>
   42c7d:	mov    rdx,rcx
   42c80:	xor    esi,esi
   42c82:	movzx  eax,BYTE PTR [rcx+0x1]
   42c86:	add    rcx,0x1
   42c8a:	test   al,al
   42c8c:	je     42755 <argp_parse@@Base+0x515>
   42c92:	cmp    al,0x2f
   42c94:	jne    42c78 <argp_parse@@Base+0xa38>
   42c96:	mov    esi,0x1
   42c9b:	jmp    42c82 <argp_parse@@Base+0xa42>
   42c9d:	nop    DWORD PTR [rax]
   42ca0:	cmp    r15d,0x7
   42ca4:	je     42710 <argp_parse@@Base+0x4d0>
   42caa:	test   r15d,r15d
   42cad:	je     42710 <argp_parse@@Base+0x4d0>
   42cb3:	jmp    4293d <argp_parse@@Base+0x6fd>
   42cb8:	nop    DWORD PTR [rax+rax*1+0x0]
   42cc0:	mov    DWORD PTR [rbp-0xa8],0x0
   42cca:	mov    ebx,DWORD PTR [rbp-0x98]
   42cd0:	mov    ecx,eax
   42cd2:	cmp    eax,0x1
   42cd5:	jle    42789 <argp_parse@@Base+0x549>
   42cdb:	mov    rdx,QWORD PTR [rbp-0x90]
   42ce2:	cdqe   
   42ce4:	mov    rax,QWORD PTR [rdx+rax*8-0x8]
   42ce9:	cmp    BYTE PTR [rax],0x2d
   42cec:	jne    42789 <argp_parse@@Base+0x549>
   42cf2:	cmp    BYTE PTR [rax+0x1],0x2d
   42cf6:	jne    42789 <argp_parse@@Base+0x549>
   42cfc:	cmp    BYTE PTR [rax+0x2],0x0
   42d00:	jne    42789 <argp_parse@@Base+0x549>
   42d06:	mov    DWORD PTR [rbp-0x7c],ecx
   42d09:	jmp    42789 <argp_parse@@Base+0x549>
   42d0e:	xchg   ax,ax
   42d10:	mov    rax,QWORD PTR [rbp-0x180]
   42d17:	test   rax,rax
   42d1a:	je     42f46 <argp_parse@@Base+0xd06>
   42d20:	mov    ecx,DWORD PTR [rbp-0x158]
   42d26:	mov    rbx,QWORD PTR [rbp-0xb8]
   42d2d:	mov    DWORD PTR [rax],ecx
   42d2f:	sub    rbx,0x48
   42d33:	lea    r12,[rbp-0xa0]
   42d3a:	cmp    rbx,QWORD PTR [rbp-0xc0]
   42d41:	jb     43013 <argp_parse@@Base+0xdd3>
   42d47:	nop    WORD PTR [rax+rax*1+0x0]
   42d50:	mov    rax,QWORD PTR [rbx]
   42d53:	test   rax,rax
   42d56:	je     42fe8 <argp_parse@@Base+0xda8>
   42d5c:	mov    rdx,QWORD PTR [rbx+0x40]
   42d60:	xor    esi,esi
   42d62:	mov    edi,0x1000004
   42d67:	sub    rbx,0x48
   42d6b:	mov    QWORD PTR [rbp-0x68],rdx
   42d6f:	mov    rdx,QWORD PTR [rbx+0x78]
   42d73:	mov    QWORD PTR [rbp-0x78],rdx
   42d77:	mov    rdx,QWORD PTR [rbx+0x80]
   42d7e:	mov    QWORD PTR [rbp-0x70],rdx
   42d82:	mov    edx,DWORD PTR [rbx+0x60]
   42d85:	mov    DWORD PTR [rbp-0x80],edx
   42d88:	mov    rdx,r12
   42d8b:	call   rax
   42d8d:	mov    r15d,eax
   42d90:	mov    rax,QWORD PTR [rbp-0x68]
   42d94:	mov    QWORD PTR [rbx+0x88],rax
   42d9b:	mov    rax,QWORD PTR [rbp-0xc0]
   42da2:	cmp    rbx,rax
   42da5:	jb     4312f <argp_parse@@Base+0xeef>
   42dab:	test   r15d,r15d
   42dae:	je     42d50 <argp_parse@@Base+0xb10>
   42db0:	cmp    r15d,0x7
   42db4:	je     42d50 <argp_parse@@Base+0xb10>
   42db6:	mov    rcx,QWORD PTR [rbp-0xb8]
   42dbd:	lea    rbx,[rcx-0x48]
   42dc1:	cmp    rbx,rax
   42dc4:	jae    428d1 <argp_parse@@Base+0x691>
   42dca:	jmp    42934 <argp_parse@@Base+0x6f4>
   42dcf:	nop
   42dd0:	cmp    DWORD PTR [rbp-0xf0],0xffffffff
   42dd7:	jne    42f23 <argp_parse@@Base+0xce3>
   42ddd:	mov    r14,QWORD PTR [rbp-0xe8]
   42de4:	mov    rdi,QWORD PTR [rbp-0x108]
   42deb:	mov    esi,ebx
   42ded:	call   a0f0 <strchr@plt>
   42df2:	test   rax,rax
   42df5:	je     42f9a <argp_parse@@Base+0xd5a>
   42dfb:	mov    r12,QWORD PTR [rbp-0xc0]
   42e02:	mov    rdx,QWORD PTR [rbp-0xb8]
   42e09:	cmp    r12,rdx
   42e0c:	jb     42e25 <argp_parse@@Base+0xbe5>
   42e0e:	jmp    42f9a <argp_parse@@Base+0xd5a>
   42e13:	nop    DWORD PTR [rax+rax*1+0x0]
   42e18:	add    r12,0x48
   42e1c:	cmp    r12,rdx
   42e1f:	jae    42f9a <argp_parse@@Base+0xd5a>
   42e25:	cmp    rax,QWORD PTR [r12+0x10]
   42e2a:	jae    42e18 <argp_parse@@Base+0xbd8>
   42e2c:	mov    rax,QWORD PTR [r12]
   42e30:	test   rax,rax
   42e33:	je     42f9a <argp_parse@@Base+0xd5a>
   42e39:	mov    rdx,QWORD PTR [r12+0x40]
   42e3e:	lea    r13,[rbp-0xa0]
   42e45:	mov    rsi,r14
   42e48:	mov    edi,ebx
   42e4a:	mov    QWORD PTR [rbp-0x68],rdx
   42e4e:	mov    rdx,QWORD PTR [r12+0x30]
   42e53:	mov    QWORD PTR [rbp-0x78],rdx
   42e57:	mov    rdx,QWORD PTR [r12+0x38]
   42e5c:	mov    QWORD PTR [rbp-0x70],rdx
   42e60:	mov    edx,DWORD PTR [r12+0x18]
   42e65:	mov    DWORD PTR [rbp-0x80],edx
   42e68:	mov    rdx,r13
   42e6b:	call   rax
   42e6d:	mov    r15d,eax
   42e70:	mov    rax,QWORD PTR [rbp-0x68]
   42e74:	mov    QWORD PTR [r12+0x40],rax
   42e79:	cmp    r15d,0x7
   42e7d:	jne    430b0 <argp_parse@@Base+0xe70>
   42e83:	jmp    42fa1 <argp_parse@@Base+0xd61>
   42e88:	nop    DWORD PTR [rax+rax*1+0x0]
   42e90:	sub    rax,0x8
   42e94:	add    ebx,0x1
   42e97:	mov    QWORD PTR [rbp-0x90],rax
   42e9e:	mov    DWORD PTR [rbp-0x98],ebx
   42ea4:	jmp    42742 <argp_parse@@Base+0x502>
   42ea9:	mov    rdi,QWORD PTR [rip+0x39128]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   42eb0:	mov    rdx,QWORD PTR [rdx]
   42eb3:	cmp    QWORD PTR [rdi],0x0
   42eb7:	mov    QWORD PTR [rax],rdx
   42eba:	jne    422a7 <argp_parse@@Base+0x67>
   42ec0:	mov    rdx,QWORD PTR [r13+0x0]
   42ec4:	movzx  eax,BYTE PTR [rdx]
   42ec7:	cmp    al,0x2f
   42ec9:	jne    42edc <argp_parse@@Base+0xc9c>
   42ecb:	nop    DWORD PTR [rax+rax*1+0x0]
   42ed0:	movzx  eax,BYTE PTR [rdx+0x1]
   42ed4:	add    rdx,0x1
   42ed8:	cmp    al,0x2f
   42eda:	je     42ed0 <argp_parse@@Base+0xc90>
   42edc:	test   al,al
   42ede:	je     42f1b <argp_parse@@Base+0xcdb>
   42ee0:	mov    rcx,rdx
   42ee3:	xor    esi,esi
   42ee5:	jmp    42f06 <argp_parse@@Base+0xcc6>
   42ee7:	nop    WORD PTR [rax+rax*1+0x0]
   42ef0:	test   sil,sil
   42ef3:	je     42efa <argp_parse@@Base+0xcba>
   42ef5:	mov    rdx,rcx
   42ef8:	xor    esi,esi
   42efa:	movzx  eax,BYTE PTR [rcx+0x1]
   42efe:	add    rcx,0x1
   42f02:	test   al,al
   42f04:	je     42f1b <argp_parse@@Base+0xcdb>
   42f06:	cmp    al,0x2f
   42f08:	jne    42ef0 <argp_parse@@Base+0xcb0>
   42f0a:	movzx  eax,BYTE PTR [rcx+0x1]
   42f0e:	add    rcx,0x1
   42f12:	mov    esi,0x1
   42f17:	test   al,al
   42f19:	jne    42f06 <argp_parse@@Base+0xcc6>
   42f1b:	mov    QWORD PTR [rdi],rdx
   42f1e:	jmp    422a7 <argp_parse@@Base+0x67>
   42f23:	mov    rsi,QWORD PTR [rbp-0x58]
   42f27:	lea    r13,[rbp-0xa0]
   42f2e:	mov    edx,0x104
   42f33:	mov    rdi,r13
   42f36:	mov    r15d,0x7
   42f3c:	call   41d60 <argp_state_help@@Base>
   42f41:	jmp    42851 <argp_parse@@Base+0x611>
   42f46:	mov    rsi,QWORD PTR [rbp-0x58]
   42f4a:	lea    r13,[rbp-0xa0]
   42f51:	test   BYTE PTR [rbp-0x84],0x2
   42f58:	jne    42f2e <argp_parse@@Base+0xcee>
   42f5a:	test   rsi,rsi
   42f5d:	je     42f2e <argp_parse@@Base+0xcee>
   42f5f:	mov    rax,QWORD PTR [rbp-0x110]
   42f66:	mov    r12,QWORD PTR [rbp-0x60]
   42f6a:	mov    edx,0x5
   42f6f:	lea    rsi,[rip+0x28ebe]        # 6be34 <_obstack_memory_used@@Base+0x1f1b4>
   42f76:	mov    rdi,QWORD PTR [rax+0x30]
   42f7a:	call   a040 <dcgettext@plt>
   42f7f:	mov    rdi,QWORD PTR [rbp-0x58]
   42f83:	mov    rcx,r12
   42f86:	mov    esi,0x1
   42f8b:	mov    rdx,rax
   42f8e:	xor    eax,eax
   42f90:	call   a840 <__fprintf_chk@plt>
   42f95:	jmp    431ac <argp_parse@@Base+0xf6c>
   42f9a:	lea    r13,[rbp-0xa0]
   42fa1:	mov    rax,QWORD PTR [rbp-0x110]
   42fa8:	mov    edx,0x5
   42fad:	lea    rsi,[rip+0x2918c]        # 6c140 <_obstack_memory_used@@Base+0x1f4c0>
   42fb4:	mov    rdi,QWORD PTR [rax+0x30]
   42fb8:	call   a040 <dcgettext@plt>
   42fbd:	mov    edx,ebx
   42fbf:	lea    rsi,[rip+0x28e5d]        # 6be23 <_obstack_memory_used@@Base+0x1f1a3>
   42fc6:	mov    rdi,r13
   42fc9:	mov    rcx,rax
   42fcc:	xor    eax,eax
   42fce:	call   41e00 <argp_error@@Base>
   42fd3:	cmp    ebx,0x1
   42fd6:	je     42ae7 <argp_parse@@Base+0x8a7>
   42fdc:	jmp    431ac <argp_parse@@Base+0xf6c>
   42fe1:	nop    DWORD PTR [rax+0x0]
   42fe8:	mov    rax,QWORD PTR [rbp-0xc0]
   42fef:	sub    rbx,0x48
   42ff3:	cmp    rbx,rax
   42ff6:	jae    42d50 <argp_parse@@Base+0xb10>
   42ffc:	mov    rcx,QWORD PTR [rbp-0xb8]
   43003:	xor    r15d,r15d
   43006:	lea    rbx,[rcx-0x48]
   4300a:	cmp    rbx,rax
   4300d:	jae    428d1 <argp_parse@@Base+0x691>
   43013:	xor    r15d,r15d
   43016:	jmp    42934 <argp_parse@@Base+0x6f4>
   4301b:	mov    eax,ebx
   4301d:	mov    r14,QWORD PTR [rbp-0xe8]
   43024:	sar    eax,0x18
   43027:	je     42de4 <argp_parse@@Base+0xba4>
   4302d:	mov    edx,ebx
   4302f:	mov    ecx,0xff000000
   43034:	cdqe   
   43036:	and    edx,0x800000
   4303c:	cmovne edx,ecx
   4303f:	mov    ecx,ebx
   43041:	and    ecx,0xffffff
   43047:	or     ecx,edx
   43049:	lea    rdx,[rax+rax*8]
   4304d:	mov    rax,QWORD PTR [rbp-0xc0]
   43054:	mov    edi,ecx
   43056:	lea    r12,[rax+rdx*8-0x48]
   4305b:	mov    rax,QWORD PTR [r12]
   4305f:	test   rax,rax
   43062:	je     4313e <argp_parse@@Base+0xefe>
   43068:	mov    rdx,QWORD PTR [r12+0x40]
   4306d:	lea    r13,[rbp-0xa0]
   43074:	mov    rsi,r14
   43077:	mov    QWORD PTR [rbp-0x68],rdx
   4307b:	mov    rdx,QWORD PTR [r12+0x30]
   43080:	mov    QWORD PTR [rbp-0x78],rdx
   43084:	mov    rdx,QWORD PTR [r12+0x38]
   43089:	mov    QWORD PTR [rbp-0x70],rdx
   4308d:	mov    edx,DWORD PTR [r12+0x18]
   43092:	mov    DWORD PTR [rbp-0x80],edx
   43095:	mov    rdx,r13
   43098:	call   rax
   4309a:	mov    r15d,eax
   4309d:	mov    rax,QWORD PTR [rbp-0x68]
   430a1:	mov    QWORD PTR [r12+0x40],rax
   430a6:	cmp    r15d,0x7
   430aa:	je     43145 <argp_parse@@Base+0xf05>
   430b0:	test   r15d,r15d
   430b3:	jne    42847 <argp_parse@@Base+0x607>
   430b9:	mov    eax,DWORD PTR [rbp-0x88]
   430bf:	mov    edx,DWORD PTR [rbp-0xa8]
   430c5:	mov    ebx,DWORD PTR [rbp-0x98]
   430cb:	mov    DWORD PTR [rbp-0x158],eax
   430d1:	jmp    4276b <argp_parse@@Base+0x52b>
   430d6:	cs nop WORD PTR [rax+rax*1+0x0]
   430e0:	mov    rax,QWORD PTR [r13-0x48]
   430e4:	test   rax,rax
   430e7:	je     431b5 <argp_parse@@Base+0xf75>
   430ed:	mov    rdx,QWORD PTR [r13-0x8]
   430f1:	xor    esi,esi
   430f3:	mov    edi,0x1000002
   430f8:	mov    QWORD PTR [rbp-0x68],rdx
   430fc:	mov    rdx,QWORD PTR [r13-0x18]
   43100:	mov    QWORD PTR [rbp-0x78],rdx
   43104:	mov    rdx,QWORD PTR [r13-0x10]
   43108:	mov    DWORD PTR [rbp-0x80],0x0
   4310f:	mov    QWORD PTR [rbp-0x70],rdx
   43113:	mov    rdx,r12
   43116:	call   rax
   43118:	mov    r15d,eax
   4311b:	mov    rax,QWORD PTR [rbp-0x68]
   4311f:	mov    QWORD PTR [r13-0x8],rax
   43123:	mov    rbx,QWORD PTR [rbp-0xb8]
   4312a:	jmp    42b40 <argp_parse@@Base+0x900>
   4312f:	cmp    r15d,0x7
   43133:	je     42ffc <argp_parse@@Base+0xdbc>
   43139:	jmp    42db6 <argp_parse@@Base+0xb76>
   4313e:	lea    r13,[rbp-0xa0]
   43145:	mov    r12,QWORD PTR [rbp-0x100]
   4314c:	cmp    ebx,DWORD PTR [r12+0x18]
   43151:	jne    43163 <argp_parse@@Base+0xf23>
   43153:	jmp    4316a <argp_parse@@Base+0xf2a>
   43155:	nop    DWORD PTR [rax]
   43158:	add    r12,0x20
   4315c:	cmp    ebx,DWORD PTR [r12+0x18]
   43161:	je     4316a <argp_parse@@Base+0xf2a>
   43163:	cmp    QWORD PTR [r12],0x0
   43168:	jne    43158 <argp_parse@@Base+0xf18>
   4316a:	mov    rax,QWORD PTR [rbp-0x110]
   43171:	mov    edx,0x5
   43176:	lea    rsi,[rip+0x28fc3]        # 6c140 <_obstack_memory_used@@Base+0x1f4c0>
   4317d:	mov    rdi,QWORD PTR [rax+0x30]
   43181:	call   a040 <dcgettext@plt>
   43186:	mov    rdx,QWORD PTR [r12]
   4318a:	lea    rsi,[rip+0x28c9a]        # 6be2b <_obstack_memory_used@@Base+0x1f1ab>
   43191:	mov    rdi,r13
   43194:	mov    rcx,rax
   43197:	lea    rax,[rip+0x28c81]        # 6be1f <_obstack_memory_used@@Base+0x1f19f>
   4319e:	test   rdx,rdx
   431a1:	cmove  rdx,rax
   431a5:	xor    eax,eax
   431a7:	call   41e00 <argp_error@@Base>
   431ac:	mov    rsi,QWORD PTR [rbp-0x58]
   431b0:	jmp    42f2e <argp_parse@@Base+0xcee>
   431b5:	cmp    r13,rbx
   431b8:	jae    43320 <argp_parse@@Base+0x10e0>
   431be:	mov    r15d,0x7
   431c4:	jmp    42b30 <argp_parse@@Base+0x8f0>
   431c9:	lea    r12,[rbx-0x48]
   431cd:	cmp    r12,QWORD PTR [rbp-0xc0]
   431d4:	jb     432bd <argp_parse@@Base+0x107d>
   431da:	cmp    r15d,0x7
   431de:	je     431e9 <argp_parse@@Base+0xfa9>
   431e0:	test   r15d,r15d
   431e3:	jne    42b54 <argp_parse@@Base+0x914>
   431e9:	lea    rbx,[rbp-0xa0]
   431f0:	mov    rax,QWORD PTR [r12]
   431f4:	test   rax,rax
   431f7:	je     43288 <argp_parse@@Base+0x1048>
   431fd:	mov    rdx,QWORD PTR [r12+0x40]
   43202:	xor    esi,esi
   43204:	mov    edi,0x1000001
   43209:	sub    r12,0x48
   4320d:	mov    QWORD PTR [rbp-0x68],rdx
   43211:	mov    rdx,QWORD PTR [r12+0x78]
   43216:	mov    QWORD PTR [rbp-0x78],rdx
   4321a:	mov    rdx,QWORD PTR [r12+0x80]
   43222:	mov    QWORD PTR [rbp-0x70],rdx
   43226:	mov    edx,DWORD PTR [r12+0x60]
   4322b:	mov    DWORD PTR [rbp-0x80],edx
   4322e:	mov    rdx,rbx
   43231:	call   rax
   43233:	mov    r15d,eax
   43236:	mov    rax,QWORD PTR [rbp-0x68]
   4323a:	mov    QWORD PTR [r12+0x88],rax
   43242:	cmp    r12,QWORD PTR [rbp-0xc0]
   43249:	jb     432bd <argp_parse@@Base+0x107d>
   4324b:	test   r15d,r15d
   4324e:	je     431f0 <argp_parse@@Base+0xfb0>
   43250:	cmp    r15d,0x7
   43254:	je     431f0 <argp_parse@@Base+0xfb0>
   43256:	cmp    QWORD PTR [rbp-0x180],0x0
   4325e:	je     42851 <argp_parse@@Base+0x611>
   43264:	mov    eax,DWORD PTR [rbp-0x88]
   4326a:	mov    rcx,QWORD PTR [rbp-0x180]
   43271:	mov    DWORD PTR [rcx],eax
   43273:	test   r15d,r15d
   43276:	jne    42847 <argp_parse@@Base+0x607>
   4327c:	mov    rbx,QWORD PTR [rbp-0xb8]
   43283:	jmp    42d2f <argp_parse@@Base+0xaef>
   43288:	sub    r12,0x48
   4328c:	cmp    r12,QWORD PTR [rbp-0xc0]
   43293:	jae    431f0 <argp_parse@@Base+0xfb0>
   43299:	mov    rbx,QWORD PTR [rbp-0xb8]
   432a0:	mov    rcx,QWORD PTR [rbp-0x180]
   432a7:	test   rcx,rcx
   432aa:	je     42d2f <argp_parse@@Base+0xaef>
   432b0:	mov    eax,DWORD PTR [rbp-0x88]
   432b6:	mov    DWORD PTR [rcx],eax
   432b8:	jmp    42d2f <argp_parse@@Base+0xaef>
   432bd:	cmp    r15d,0x7
   432c1:	je     43299 <argp_parse@@Base+0x1059>
   432c3:	cmp    QWORD PTR [rbp-0x180],0x0
   432cb:	je     43273 <argp_parse@@Base+0x1033>
   432cd:	jmp    43264 <argp_parse@@Base+0x1024>
   432cf:	nop
   432d0:	lea    rdx,[rip+0x3c901]        # 7fbd8 <argp_program_version_hook@@Base>
   432d7:	cmp    QWORD PTR [rdx],0x0
   432db:	jne    423cb <argp_parse@@Base+0x18b>
   432e1:	lea    rdx,[rax+0x20]
   432e5:	jmp    423da <argp_parse@@Base+0x19a>
   432ea:	lea    r12,[rbx-0x48]
   432ee:	cmp    r12,r13
   432f1:	jae    431e9 <argp_parse@@Base+0xfa9>
   432f7:	cmp    QWORD PTR [rbp-0x180],0x0
   432ff:	je     43013 <argp_parse@@Base+0xdd3>
   43305:	mov    eax,DWORD PTR [rbp-0x88]
   4330b:	mov    rcx,QWORD PTR [rbp-0x180]
   43312:	mov    DWORD PTR [rcx],eax
   43314:	jmp    42d2f <argp_parse@@Base+0xaef>
   43319:	nop    DWORD PTR [rax+0x0]
   43320:	lea    r12,[rbx-0x48]
   43324:	cmp    QWORD PTR [rbp-0xc0],r12
   4332b:	jbe    431e9 <argp_parse@@Base+0xfa9>
   43331:	jmp    432a0 <argp_parse@@Base+0x1060>
   43336:	mov    r15d,0xc
   4333c:	jmp    4293d <argp_parse@@Base+0x6fd>
   43341:	call   a0a0 <__stack_chk_fail@plt>
   43346:	mov    r12,r14
   43349:	jmp    42ada <argp_parse@@Base+0x89a>
   4334e:	test   r15d,r15d
   43351:	jne    43366 <argp_parse@@Base+0x1126>
   43353:	mov    eax,DWORD PTR [rbp-0x98]
   43359:	mov    DWORD PTR [rbp-0x88],eax
   4335f:	mov    ebx,eax
   43361:	jmp    42a14 <argp_parse@@Base+0x7d4>
   43366:	cmp    r15d,0x7
   4336a:	je     42ae7 <argp_parse@@Base+0x8a7>
   43370:	jmp    42851 <argp_parse@@Base+0x611>
   43375:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000043380 <argp_usage@@Base>:
   43380:	endbr64 
   43384:	mov    rax,QWORD PTR [rip+0x38c5d]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   4338b:	mov    edx,0x106
   43390:	mov    rsi,QWORD PTR [rax]
   43393:	jmp    41d60 <argp_state_help@@Base>
   43398:	nop    DWORD PTR [rax+rax*1+0x0]
   433a0:	endbr64 
   433a4:	push   r14
   433a6:	push   r13
   433a8:	push   r12
   433aa:	mov    r12d,esi
   433ad:	push   rbp
   433ae:	mov    rbp,rdx
   433b1:	push   rbx
   433b2:	mov    rbx,rdi
   433b5:	sub    rsp,0x30
   433b9:	mov    rax,QWORD PTR fs:0x28
   433c2:	mov    QWORD PTR [rsp+0x28],rax
   433c7:	mov    eax,DWORD PTR [rip+0x3c8eb]        # 7fcb8 <argp_program_bug_address@@Base+0x8>
   433cd:	test   eax,eax
   433cf:	je     43458 <argp_usage@@Base+0xd8>
   433d5:	test   eax,eax
   433d7:	js     4344d <argp_usage@@Base+0xcd>
   433d9:	mov    rdi,rbp
   433dc:	call   a060 <strlen@plt>
   433e1:	lea    rdi,[rax+0x1b]
   433e5:	cmp    rdi,0xfc0
   433ec:	ja     43440 <argp_usage@@Base+0xc0>
   433ee:	mov    r8d,r12d
   433f1:	lea    rcx,[rip+0x28a79]        # 6be71 <_obstack_memory_used@@Base+0x1f1f1>
   433f8:	mov    rdi,rbx
   433fb:	xor    eax,eax
   433fd:	mov    rdx,0xffffffffffffffff
   43404:	mov    esi,0x1
   43409:	call   a9b0 <__sprintf_chk@plt>
   4340e:	mov    rsi,rbp
   43411:	movsxd rdi,eax
   43414:	add    rdi,rbx
   43417:	call   9e80 <strcpy@plt>
   4341c:	mov    rax,rbx
   4341f:	mov    rdx,QWORD PTR [rsp+0x28]
   43424:	sub    rdx,QWORD PTR fs:0x28
   4342d:	jne    434cf <argp_usage@@Base+0x14f>
   43433:	add    rsp,0x30
   43437:	pop    rbx
   43438:	pop    rbp
   43439:	pop    r12
   4343b:	pop    r13
   4343d:	pop    r14
   4343f:	ret    
   43440:	call   a4a0 <malloc@plt>
   43445:	mov    rbx,rax
   43448:	test   rax,rax
   4344b:	jne    433ee <argp_usage@@Base+0x6e>
   4344d:	xor    eax,eax
   4344f:	jmp    4341f <argp_usage@@Base+0x9f>
   43451:	nop    DWORD PTR [rax+0x0]
   43458:	mov    esi,0x90900
   4345d:	lea    rdi,[rip+0x289e8]        # 6be4c <_obstack_memory_used@@Base+0x1f1cc>
   43464:	call   a690 <open@plt>
   43469:	mov    r13d,eax
   4346c:	test   eax,eax
   4346e:	jns    43480 <argp_usage@@Base+0x100>
   43470:	mov    DWORD PTR [rip+0x3c83e],0xffffffff        # 7fcb8 <argp_program_bug_address@@Base+0x8>
   4347a:	xor    eax,eax
   4347c:	jmp    4341f <argp_usage@@Base+0x9f>
   4347e:	xchg   ax,ax
   43480:	mov    r14,rsp
   43483:	mov    r8d,eax
   43486:	lea    rcx,[rip+0x289cd]        # 6be5a <_obstack_memory_used@@Base+0x1f1da>
   4348d:	xor    eax,eax
   4348f:	mov    edx,0x20
   43494:	mov    esi,0x1
   43499:	mov    rdi,r14
   4349c:	call   a9b0 <__sprintf_chk@plt>
   434a1:	xor    esi,esi
   434a3:	mov    rdi,r14
   434a6:	call   a6a0 <access@plt>
   434ab:	mov    edi,r13d
   434ae:	cmp    eax,0x1
   434b1:	sbb    eax,eax
   434b3:	and    eax,0x2
   434b6:	sub    eax,0x1
   434b9:	mov    DWORD PTR [rip+0x3c7f9],eax        # 7fcb8 <argp_program_bug_address@@Base+0x8>
   434bf:	call   a200 <close@plt>
   434c4:	mov    eax,DWORD PTR [rip+0x3c7ee]        # 7fcb8 <argp_program_bug_address@@Base+0x8>
   434ca:	jmp    433d5 <argp_usage@@Base+0x55>
   434cf:	call   a0a0 <__stack_chk_fail@plt>
   434d4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   434df:	nop
   434e0:	endbr64 
   434e4:	push   r15
   434e6:	push   r14
   434e8:	push   r13
   434ea:	mov    r13,rcx
   434ed:	push   r12
   434ef:	mov    r12d,edx
   434f2:	push   rbp
   434f3:	push   rbx
   434f4:	mov    rbx,rsi
   434f7:	sub    rsp,0xfe8
   434fe:	mov    rax,QWORD PTR fs:0x28
   43507:	mov    QWORD PTR [rsp+0xfd8],rax
   4350f:	xor    eax,eax
   43511:	cmp    edi,0xffffff9c
   43514:	je     43688 <argp_usage@@Base+0x308>
   4351a:	movzx  eax,BYTE PTR [rsi]
   4351d:	cmp    al,0x2f
   4351f:	je     43688 <argp_usage@@Base+0x308>
   43525:	mov    ebp,edi
   43527:	test   al,al
   43529:	je     436c0 <argp_usage@@Base+0x340>
   4352f:	lea    rcx,[rsp+0x10]
   43534:	mov    rdx,rsi
   43537:	mov    esi,edi
   43539:	mov    rdi,rcx
   4353c:	mov    QWORD PTR [rsp],rcx
   43540:	call   433a0 <argp_usage@@Base+0x20>
   43545:	mov    r15,rax
   43548:	test   rax,rax
   4354b:	je     435e8 <argp_usage@@Base+0x268>
   43551:	mov    rdx,r13
   43554:	mov    esi,r12d
   43557:	mov    rdi,rax
   4355a:	call   a300 <acl_set_file@plt>
   4355f:	mov    r14d,eax
   43562:	call   9e40 <__errno_location@plt>
   43567:	mov    rcx,QWORD PTR [rsp]
   4356b:	mov    rdx,rax
   4356e:	mov    eax,DWORD PTR [rax]
   43570:	cmp    r15,rcx
   43573:	je     4358d <argp_usage@@Base+0x20d>
   43575:	mov    rdi,r15
   43578:	mov    DWORD PTR [rsp+0xc],eax
   4357c:	mov    QWORD PTR [rsp],rdx
   43580:	call   9ce0 <free@plt>
   43585:	mov    eax,DWORD PTR [rsp+0xc]
   43589:	mov    rdx,QWORD PTR [rsp]
   4358d:	cmp    r14d,0xffffffff
   43591:	jne    435b8 <argp_usage@@Base+0x238>
   43593:	cmp    eax,0x14
   43596:	je     435e8 <argp_usage@@Base+0x268>
   43598:	cmp    eax,0x2
   4359b:	je     435e8 <argp_usage@@Base+0x268>
   4359d:	cmp    eax,0x1
   435a0:	je     435e8 <argp_usage@@Base+0x268>
   435a2:	cmp    eax,0xd
   435a5:	je     435e8 <argp_usage@@Base+0x268>
   435a7:	cmp    eax,0x26
   435aa:	je     435e8 <argp_usage@@Base+0x268>
   435ac:	cmp    eax,0x5f
   435af:	je     435e8 <argp_usage@@Base+0x268>
   435b1:	mov    DWORD PTR [rdx],eax
   435b3:	nop    DWORD PTR [rax+rax*1+0x0]
   435b8:	mov    rax,QWORD PTR [rsp+0xfd8]
   435c0:	sub    rax,QWORD PTR fs:0x28
   435c9:	jne    437af <argp_usage@@Base+0x42f>
   435cf:	add    rsp,0xfe8
   435d6:	mov    eax,r14d
   435d9:	pop    rbx
   435da:	pop    rbp
   435db:	pop    r12
   435dd:	pop    r13
   435df:	pop    r14
   435e1:	pop    r15
   435e3:	ret    
   435e4:	nop    DWORD PTR [rax+0x0]
   435e8:	mov    esi,0x80000
   435ed:	lea    rdi,[rip+0x24000]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   435f4:	xor    eax,eax
   435f6:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   435fb:	mov    QWORD PTR [rsp],0x0
   43603:	mov    r15d,eax
   43606:	test   eax,eax
   43608:	js     43760 <argp_usage@@Base+0x3e0>
   4360e:	test   ebp,ebp
   43610:	js     4361b <argp_usage@@Base+0x29b>
   43612:	cmp    ebp,r15d
   43615:	je     43788 <argp_usage@@Base+0x408>
   4361b:	mov    edi,ebp
   4361d:	call   a540 <fchdir@plt>
   43622:	mov    ebp,eax
   43624:	test   eax,eax
   43626:	jne    43728 <argp_usage@@Base+0x3a8>
   4362c:	mov    rdx,r13
   4362f:	mov    esi,r12d
   43632:	mov    rdi,rbx
   43635:	call   a300 <acl_set_file@plt>
   4363a:	mov    r14d,eax
   4363d:	cmp    eax,0xffffffff
   43640:	je     43718 <argp_usage@@Base+0x398>
   43646:	test   r15d,r15d
   43649:	js     436f0 <argp_usage@@Base+0x370>
   4364f:	mov    edi,r15d
   43652:	call   a540 <fchdir@plt>
   43657:	test   eax,eax
   43659:	jne    43708 <argp_usage@@Base+0x388>
   4365f:	mov    edi,r15d
   43662:	call   a200 <close@plt>
   43667:	mov    rdi,QWORD PTR [rsp]
   4366b:	call   9ce0 <free@plt>
   43670:	test   ebp,ebp
   43672:	je     435b8 <argp_usage@@Base+0x238>
   43678:	call   9e40 <__errno_location@plt>
   4367d:	mov    DWORD PTR [rax],ebp
   4367f:	jmp    435b8 <argp_usage@@Base+0x238>
   43684:	nop    DWORD PTR [rax+0x0]
   43688:	mov    rax,QWORD PTR [rsp+0xfd8]
   43690:	sub    rax,QWORD PTR fs:0x28
   43699:	jne    437af <argp_usage@@Base+0x42f>
   4369f:	add    rsp,0xfe8
   436a6:	mov    rdx,r13
   436a9:	mov    esi,r12d
   436ac:	mov    rdi,rbx
   436af:	pop    rbx
   436b0:	pop    rbp
   436b1:	pop    r12
   436b3:	pop    r13
   436b5:	pop    r14
   436b7:	pop    r15
   436b9:	jmp    a300 <acl_set_file@plt>
   436be:	xchg   ax,ax
   436c0:	mov    rdx,rcx
   436c3:	lea    rdi,[rsp+0x10]
   436c8:	mov    esi,r12d
   436cb:	mov    BYTE PTR [rsp+0x10],0x0
   436d0:	call   a300 <acl_set_file@plt>
   436d5:	mov    r14d,eax
   436d8:	call   9e40 <__errno_location@plt>
   436dd:	mov    rdx,rax
   436e0:	mov    eax,DWORD PTR [rax]
   436e2:	jmp    4358d <argp_usage@@Base+0x20d>
   436e7:	nop    WORD PTR [rax+rax*1+0x0]
   436f0:	mov    rdi,QWORD PTR [rsp]
   436f4:	call   4bd60 <argp_usage@@Base+0x89e0>
   436f9:	test   eax,eax
   436fb:	je     43667 <argp_usage@@Base+0x2e7>
   43701:	nop    DWORD PTR [rax+0x0]
   43708:	call   9e40 <__errno_location@plt>
   4370d:	mov    edi,DWORD PTR [rax]
   4370f:	call   495d0 <argp_usage@@Base+0x6250>
   43714:	nop    DWORD PTR [rax+0x0]
   43718:	call   9e40 <__errno_location@plt>
   4371d:	mov    ebp,DWORD PTR [rax]
   4371f:	jmp    43646 <argp_usage@@Base+0x2c6>
   43724:	nop    DWORD PTR [rax+0x0]
   43728:	call   9e40 <__errno_location@plt>
   4372d:	mov    r12d,DWORD PTR [rax]
   43730:	mov    rbp,rax
   43733:	test   r15d,r15d
   43736:	js     43740 <argp_usage@@Base+0x3c0>
   43738:	mov    edi,r15d
   4373b:	call   a200 <close@plt>
   43740:	mov    rdi,QWORD PTR [rsp]
   43744:	mov    r14d,0xffffffff
   4374a:	call   9ce0 <free@plt>
   4374f:	mov    DWORD PTR [rbp+0x0],r12d
   43753:	jmp    435b8 <argp_usage@@Base+0x238>
   43758:	nop    DWORD PTR [rax+rax*1+0x0]
   43760:	xor    esi,esi
   43762:	xor    edi,edi
   43764:	call   a1f0 <getcwd@plt>
   43769:	mov    QWORD PTR [rsp],rax
   4376d:	test   rax,rax
   43770:	jne    4360e <argp_usage@@Base+0x28e>
   43776:	call   9e40 <__errno_location@plt>
   4377b:	mov    edi,DWORD PTR [rax]
   4377d:	call   49590 <argp_usage@@Base+0x6210>
   43782:	nop    WORD PTR [rax+rax*1+0x0]
   43788:	mov    edi,r15d
   4378b:	mov    r14d,0xffffffff
   43791:	call   a200 <close@plt>
   43796:	mov    rdi,QWORD PTR [rsp]
   4379a:	call   9ce0 <free@plt>
   4379f:	call   9e40 <__errno_location@plt>
   437a4:	mov    DWORD PTR [rax],0x9
   437aa:	jmp    435b8 <argp_usage@@Base+0x238>
   437af:	call   a0a0 <__stack_chk_fail@plt>
   437b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   437bf:	nop
   437c0:	endbr64 
   437c4:	push   r15
   437c6:	push   r14
   437c8:	push   r13
   437ca:	mov    r13,rsi
   437cd:	push   r12
   437cf:	push   rbp
   437d0:	push   rbx
   437d1:	sub    rsp,0xfe8
   437d8:	mov    rax,QWORD PTR fs:0x28
   437e1:	mov    QWORD PTR [rsp+0xfd8],rax
   437e9:	xor    eax,eax
   437eb:	cmp    edi,0xffffff9c
   437ee:	je     43940 <argp_usage@@Base+0x5c0>
   437f4:	movzx  eax,BYTE PTR [rsi]
   437f7:	cmp    al,0x2f
   437f9:	je     43940 <argp_usage@@Base+0x5c0>
   437ff:	mov    ebp,edi
   43801:	test   al,al
   43803:	je     43970 <argp_usage@@Base+0x5f0>
   43809:	lea    rbx,[rsp+0x10]
   4380e:	mov    rdx,rsi
   43811:	mov    esi,edi
   43813:	mov    rdi,rbx
   43816:	call   433a0 <argp_usage@@Base+0x20>
   4381b:	mov    r12,rax
   4381e:	test   rax,rax
   43821:	je     438b0 <argp_usage@@Base+0x530>
   43827:	mov    rdi,rax
   4382a:	call   a070 <acl_delete_def_file@plt>
   4382f:	mov    r14d,eax
   43832:	call   9e40 <__errno_location@plt>
   43837:	mov    r15d,DWORD PTR [rax]
   4383a:	cmp    r12,rbx
   4383d:	je     43851 <argp_usage@@Base+0x4d1>
   4383f:	mov    rdi,r12
   43842:	mov    QWORD PTR [rsp+0x8],rax
   43847:	call   9ce0 <free@plt>
   4384c:	mov    rax,QWORD PTR [rsp+0x8]
   43851:	cmp    r14d,0xffffffff
   43855:	jne    43880 <argp_usage@@Base+0x500>
   43857:	cmp    r15d,0x14
   4385b:	je     438b0 <argp_usage@@Base+0x530>
   4385d:	cmp    r15d,0x2
   43861:	je     438b0 <argp_usage@@Base+0x530>
   43863:	cmp    r15d,0x1
   43867:	je     438b0 <argp_usage@@Base+0x530>
   43869:	cmp    r15d,0xd
   4386d:	je     438b0 <argp_usage@@Base+0x530>
   4386f:	cmp    r15d,0x26
   43873:	je     438b0 <argp_usage@@Base+0x530>
   43875:	cmp    r15d,0x5f
   43879:	je     438b0 <argp_usage@@Base+0x530>
   4387b:	mov    DWORD PTR [rax],r15d
   4387e:	xchg   ax,ax
   43880:	mov    rax,QWORD PTR [rsp+0xfd8]
   43888:	sub    rax,QWORD PTR fs:0x28
   43891:	jne    43a3e <argp_usage@@Base+0x6be>
   43897:	add    rsp,0xfe8
   4389e:	mov    eax,r14d
   438a1:	pop    rbx
   438a2:	pop    rbp
   438a3:	pop    r12
   438a5:	pop    r13
   438a7:	pop    r14
   438a9:	pop    r15
   438ab:	ret    
   438ac:	nop    DWORD PTR [rax+0x0]
   438b0:	mov    esi,0x80000
   438b5:	lea    rdi,[rip+0x23d38]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   438bc:	xor    eax,eax
   438be:	xor    r15d,r15d
   438c1:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   438c6:	mov    r12d,eax
   438c9:	test   eax,eax
   438cb:	js     439f0 <argp_usage@@Base+0x670>
   438d1:	test   ebp,ebp
   438d3:	js     438de <argp_usage@@Base+0x55e>
   438d5:	cmp    ebp,r12d
   438d8:	je     43a18 <argp_usage@@Base+0x698>
   438de:	mov    edi,ebp
   438e0:	call   a540 <fchdir@plt>
   438e5:	mov    ebp,eax
   438e7:	test   eax,eax
   438e9:	jne    439c0 <argp_usage@@Base+0x640>
   438ef:	mov    rdi,r13
   438f2:	call   a070 <acl_delete_def_file@plt>
   438f7:	mov    r14d,eax
   438fa:	cmp    eax,0xffffffff
   438fd:	je     439b0 <argp_usage@@Base+0x630>
   43903:	test   r12d,r12d
   43906:	js     43990 <argp_usage@@Base+0x610>
   4390c:	mov    edi,r12d
   4390f:	call   a540 <fchdir@plt>
   43914:	test   eax,eax
   43916:	jne    439a0 <argp_usage@@Base+0x620>
   4391c:	mov    edi,r12d
   4391f:	call   a200 <close@plt>
   43924:	mov    rdi,r15
   43927:	call   9ce0 <free@plt>
   4392c:	test   ebp,ebp
   4392e:	je     43880 <argp_usage@@Base+0x500>
   43934:	call   9e40 <__errno_location@plt>
   43939:	mov    DWORD PTR [rax],ebp
   4393b:	jmp    43880 <argp_usage@@Base+0x500>
   43940:	mov    rax,QWORD PTR [rsp+0xfd8]
   43948:	sub    rax,QWORD PTR fs:0x28
   43951:	jne    43a3e <argp_usage@@Base+0x6be>
   43957:	add    rsp,0xfe8
   4395e:	mov    rdi,r13
   43961:	pop    rbx
   43962:	pop    rbp
   43963:	pop    r12
   43965:	pop    r13
   43967:	pop    r14
   43969:	pop    r15
   4396b:	jmp    a070 <acl_delete_def_file@plt>
   43970:	lea    rdi,[rsp+0x10]
   43975:	mov    BYTE PTR [rsp+0x10],0x0
   4397a:	call   a070 <acl_delete_def_file@plt>
   4397f:	mov    r14d,eax
   43982:	call   9e40 <__errno_location@plt>
   43987:	mov    r15d,DWORD PTR [rax]
   4398a:	jmp    43851 <argp_usage@@Base+0x4d1>
   4398f:	nop
   43990:	mov    rdi,r15
   43993:	call   4bd60 <argp_usage@@Base+0x89e0>
   43998:	test   eax,eax
   4399a:	je     43924 <argp_usage@@Base+0x5a4>
   439a0:	call   9e40 <__errno_location@plt>
   439a5:	mov    edi,DWORD PTR [rax]
   439a7:	call   495d0 <argp_usage@@Base+0x6250>
   439ac:	nop    DWORD PTR [rax+0x0]
   439b0:	call   9e40 <__errno_location@plt>
   439b5:	mov    ebp,DWORD PTR [rax]
   439b7:	jmp    43903 <argp_usage@@Base+0x583>
   439bc:	nop    DWORD PTR [rax+0x0]
   439c0:	call   9e40 <__errno_location@plt>
   439c5:	mov    ebp,DWORD PTR [rax]
   439c7:	mov    rbx,rax
   439ca:	test   r12d,r12d
   439cd:	js     439d7 <argp_usage@@Base+0x657>
   439cf:	mov    edi,r12d
   439d2:	call   a200 <close@plt>
   439d7:	mov    rdi,r15
   439da:	mov    r14d,0xffffffff
   439e0:	call   9ce0 <free@plt>
   439e5:	mov    DWORD PTR [rbx],ebp
   439e7:	jmp    43880 <argp_usage@@Base+0x500>
   439ec:	nop    DWORD PTR [rax+0x0]
   439f0:	xor    esi,esi
   439f2:	xor    edi,edi
   439f4:	call   a1f0 <getcwd@plt>
   439f9:	mov    r15,rax
   439fc:	test   rax,rax
   439ff:	jne    438d1 <argp_usage@@Base+0x551>
   43a05:	call   9e40 <__errno_location@plt>
   43a0a:	mov    edi,DWORD PTR [rax]
   43a0c:	call   49590 <argp_usage@@Base+0x6210>
   43a11:	nop    DWORD PTR [rax+0x0]
   43a18:	mov    edi,r12d
   43a1b:	mov    r14d,0xffffffff
   43a21:	call   a200 <close@plt>
   43a26:	mov    rdi,r15
   43a29:	call   9ce0 <free@plt>
   43a2e:	call   9e40 <__errno_location@plt>
   43a33:	mov    DWORD PTR [rax],0x9
   43a39:	jmp    43880 <argp_usage@@Base+0x500>
   43a3e:	call   a0a0 <__stack_chk_fail@plt>
   43a43:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43a4e:	xchg   ax,ax
   43a50:	endbr64 
   43a54:	push   r15
   43a56:	push   r14
   43a58:	mov    r14,rdx
   43a5b:	push   r13
   43a5d:	mov    r13,rsi
   43a60:	push   r12
   43a62:	push   rbp
   43a63:	push   rbx
   43a64:	sub    rsp,0xfe8
   43a6b:	mov    rax,QWORD PTR fs:0x28
   43a74:	mov    QWORD PTR [rsp+0xfd8],rax
   43a7c:	xor    eax,eax
   43a7e:	cmp    edi,0xffffff9c
   43a81:	je     43be0 <argp_usage@@Base+0x860>
   43a87:	movzx  eax,BYTE PTR [rsi]
   43a8a:	cmp    al,0x2f
   43a8c:	je     43be0 <argp_usage@@Base+0x860>
   43a92:	mov    ebp,edi
   43a94:	test   al,al
   43a96:	je     43c18 <argp_usage@@Base+0x898>
   43a9c:	lea    rbx,[rsp+0x10]
   43aa1:	mov    rdx,rsi
   43aa4:	mov    esi,edi
   43aa6:	mov    rdi,rbx
   43aa9:	call   433a0 <argp_usage@@Base+0x20>
   43aae:	mov    r12,rax
   43ab1:	test   rax,rax
   43ab4:	je     43b48 <argp_usage@@Base+0x7c8>
   43aba:	mov    rsi,r14
   43abd:	mov    rdi,rax
   43ac0:	call   48a20 <argp_usage@@Base+0x56a0>
   43ac5:	mov    r15d,eax
   43ac8:	call   9e40 <__errno_location@plt>
   43acd:	mov    rdx,rax
   43ad0:	mov    eax,DWORD PTR [rax]
   43ad2:	cmp    r12,rbx
   43ad5:	je     43aef <argp_usage@@Base+0x76f>
   43ad7:	mov    rdi,r12
   43ada:	mov    DWORD PTR [rsp+0xc],eax
   43ade:	mov    QWORD PTR [rsp],rdx
   43ae2:	call   9ce0 <free@plt>
   43ae7:	mov    eax,DWORD PTR [rsp+0xc]
   43aeb:	mov    rdx,QWORD PTR [rsp]
   43aef:	cmp    r15d,0xffffffff
   43af3:	jne    43b18 <argp_usage@@Base+0x798>
   43af5:	cmp    eax,0x14
   43af8:	je     43b48 <argp_usage@@Base+0x7c8>
   43afa:	cmp    eax,0x2
   43afd:	je     43b48 <argp_usage@@Base+0x7c8>
   43aff:	cmp    eax,0x1
   43b02:	je     43b48 <argp_usage@@Base+0x7c8>
   43b04:	cmp    eax,0xd
   43b07:	je     43b48 <argp_usage@@Base+0x7c8>
   43b09:	cmp    eax,0x26
   43b0c:	je     43b48 <argp_usage@@Base+0x7c8>
   43b0e:	cmp    eax,0x5f
   43b11:	je     43b48 <argp_usage@@Base+0x7c8>
   43b13:	mov    DWORD PTR [rdx],eax
   43b15:	nop    DWORD PTR [rax]
   43b18:	mov    rax,QWORD PTR [rsp+0xfd8]
   43b20:	sub    rax,QWORD PTR fs:0x28
   43b29:	jne    43cee <argp_usage@@Base+0x96e>
   43b2f:	add    rsp,0xfe8
   43b36:	mov    eax,r15d
   43b39:	pop    rbx
   43b3a:	pop    rbp
   43b3b:	pop    r12
   43b3d:	pop    r13
   43b3f:	pop    r14
   43b41:	pop    r15
   43b43:	ret    
   43b44:	nop    DWORD PTR [rax+0x0]
   43b48:	mov    esi,0x80000
   43b4d:	lea    rdi,[rip+0x23aa0]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   43b54:	xor    eax,eax
   43b56:	xor    ebx,ebx
   43b58:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   43b5d:	mov    r12d,eax
   43b60:	test   eax,eax
   43b62:	js     43ca0 <argp_usage@@Base+0x920>
   43b68:	test   ebp,ebp
   43b6a:	js     43b75 <argp_usage@@Base+0x7f5>
   43b6c:	cmp    ebp,r12d
   43b6f:	je     43cc8 <argp_usage@@Base+0x948>
   43b75:	mov    edi,ebp
   43b77:	call   a540 <fchdir@plt>
   43b7c:	mov    ebp,eax
   43b7e:	test   eax,eax
   43b80:	jne    43c70 <argp_usage@@Base+0x8f0>
   43b86:	mov    rsi,r14
   43b89:	mov    rdi,r13
   43b8c:	call   48a20 <argp_usage@@Base+0x56a0>
   43b91:	mov    r15d,eax
   43b94:	cmp    eax,0xffffffff
   43b97:	je     43c60 <argp_usage@@Base+0x8e0>
   43b9d:	test   r12d,r12d
   43ba0:	js     43c40 <argp_usage@@Base+0x8c0>
   43ba6:	mov    edi,r12d
   43ba9:	call   a540 <fchdir@plt>
   43bae:	test   eax,eax
   43bb0:	jne    43c50 <argp_usage@@Base+0x8d0>
   43bb6:	mov    edi,r12d
   43bb9:	call   a200 <close@plt>
   43bbe:	mov    rdi,rbx
   43bc1:	call   9ce0 <free@plt>
   43bc6:	test   ebp,ebp
   43bc8:	je     43b18 <argp_usage@@Base+0x798>
   43bce:	call   9e40 <__errno_location@plt>
   43bd3:	mov    DWORD PTR [rax],ebp
   43bd5:	jmp    43b18 <argp_usage@@Base+0x798>
   43bda:	nop    WORD PTR [rax+rax*1+0x0]
   43be0:	mov    rax,QWORD PTR [rsp+0xfd8]
   43be8:	sub    rax,QWORD PTR fs:0x28
   43bf1:	jne    43cee <argp_usage@@Base+0x96e>
   43bf7:	add    rsp,0xfe8
   43bfe:	mov    rsi,r14
   43c01:	mov    rdi,r13
   43c04:	pop    rbx
   43c05:	pop    rbp
   43c06:	pop    r12
   43c08:	pop    r13
   43c0a:	pop    r14
   43c0c:	pop    r15
   43c0e:	jmp    48a20 <argp_usage@@Base+0x56a0>
   43c13:	nop    DWORD PTR [rax+rax*1+0x0]
   43c18:	mov    rsi,rdx
   43c1b:	lea    rdi,[rsp+0x10]
   43c20:	mov    BYTE PTR [rsp+0x10],0x0
   43c25:	call   48a20 <argp_usage@@Base+0x56a0>
   43c2a:	mov    r15d,eax
   43c2d:	call   9e40 <__errno_location@plt>
   43c32:	mov    rdx,rax
   43c35:	mov    eax,DWORD PTR [rax]
   43c37:	jmp    43aef <argp_usage@@Base+0x76f>
   43c3c:	nop    DWORD PTR [rax+0x0]
   43c40:	mov    rdi,rbx
   43c43:	call   4bd60 <argp_usage@@Base+0x89e0>
   43c48:	test   eax,eax
   43c4a:	je     43bbe <argp_usage@@Base+0x83e>
   43c50:	call   9e40 <__errno_location@plt>
   43c55:	mov    edi,DWORD PTR [rax]
   43c57:	call   495d0 <argp_usage@@Base+0x6250>
   43c5c:	nop    DWORD PTR [rax+0x0]
   43c60:	call   9e40 <__errno_location@plt>
   43c65:	mov    ebp,DWORD PTR [rax]
   43c67:	jmp    43b9d <argp_usage@@Base+0x81d>
   43c6c:	nop    DWORD PTR [rax+0x0]
   43c70:	call   9e40 <__errno_location@plt>
   43c75:	mov    r13d,DWORD PTR [rax]
   43c78:	mov    rbp,rax
   43c7b:	test   r12d,r12d
   43c7e:	js     43c88 <argp_usage@@Base+0x908>
   43c80:	mov    edi,r12d
   43c83:	call   a200 <close@plt>
   43c88:	mov    rdi,rbx
   43c8b:	mov    r15d,0xffffffff
   43c91:	call   9ce0 <free@plt>
   43c96:	mov    DWORD PTR [rbp+0x0],r13d
   43c9a:	jmp    43b18 <argp_usage@@Base+0x798>
   43c9f:	nop
   43ca0:	xor    esi,esi
   43ca2:	xor    edi,edi
   43ca4:	call   a1f0 <getcwd@plt>
   43ca9:	mov    rbx,rax
   43cac:	test   rax,rax
   43caf:	jne    43b68 <argp_usage@@Base+0x7e8>
   43cb5:	call   9e40 <__errno_location@plt>
   43cba:	mov    edi,DWORD PTR [rax]
   43cbc:	call   49590 <argp_usage@@Base+0x6210>
   43cc1:	nop    DWORD PTR [rax+0x0]
   43cc8:	mov    edi,r12d
   43ccb:	mov    r15d,0xffffffff
   43cd1:	call   a200 <close@plt>
   43cd6:	mov    rdi,rbx
   43cd9:	call   9ce0 <free@plt>
   43cde:	call   9e40 <__errno_location@plt>
   43ce3:	mov    DWORD PTR [rax],0x9
   43ce9:	jmp    43b18 <argp_usage@@Base+0x798>
   43cee:	call   a0a0 <__stack_chk_fail@plt>
   43cf3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43cfe:	xchg   ax,ax
   43d00:	push   r15
   43d02:	push   r14
   43d04:	mov    r14d,edx
   43d07:	push   r13
   43d09:	mov    r13,rsi
   43d0c:	push   r12
   43d0e:	push   rbp
   43d0f:	mov    ebp,edi
   43d11:	push   rbx
   43d12:	sub    rsp,0xfe8
   43d19:	mov    rax,QWORD PTR fs:0x28
   43d22:	mov    QWORD PTR [rsp+0xfd8],rax
   43d2a:	xor    eax,eax
   43d2c:	cmp    BYTE PTR [rsi],0x0
   43d2f:	je     43e60 <argp_usage@@Base+0xae0>
   43d35:	lea    rbx,[rsp+0x10]
   43d3a:	mov    rdx,rsi
   43d3d:	mov    esi,edi
   43d3f:	mov    rdi,rbx
   43d42:	call   433a0 <argp_usage@@Base+0x20>
   43d47:	mov    r15,rax
   43d4a:	test   rax,rax
   43d4d:	je     43dd0 <argp_usage@@Base+0xa50>
   43d53:	mov    esi,r14d
   43d56:	mov    rdi,rax
   43d59:	call   a4c0 <acl_get_file@plt>
   43d5e:	mov    r12,rax
   43d61:	call   9e40 <__errno_location@plt>
   43d66:	mov    rdx,rax
   43d69:	mov    eax,DWORD PTR [rax]
   43d6b:	cmp    r15,rbx
   43d6e:	je     43d88 <argp_usage@@Base+0xa08>
   43d70:	mov    rdi,r15
   43d73:	mov    DWORD PTR [rsp+0xc],eax
   43d77:	mov    QWORD PTR [rsp],rdx
   43d7b:	call   9ce0 <free@plt>
   43d80:	mov    eax,DWORD PTR [rsp+0xc]
   43d84:	mov    rdx,QWORD PTR [rsp]
   43d88:	test   r12,r12
   43d8b:	je     43dc0 <argp_usage@@Base+0xa40>
   43d8d:	mov    rax,QWORD PTR [rsp+0xfd8]
   43d95:	sub    rax,QWORD PTR fs:0x28
   43d9e:	jne    43f69 <argp_usage@@Base+0xbe9>
   43da4:	add    rsp,0xfe8
   43dab:	mov    rax,r12
   43dae:	pop    rbx
   43daf:	pop    rbp
   43db0:	pop    r12
   43db2:	pop    r13
   43db4:	pop    r14
   43db6:	pop    r15
   43db8:	ret    
   43db9:	nop    DWORD PTR [rax+0x0]
   43dc0:	cmp    eax,0x14
   43dc3:	je     43dd0 <argp_usage@@Base+0xa50>
   43dc5:	cmp    eax,0x2
   43dc8:	jne    43eb8 <argp_usage@@Base+0xb38>
   43dce:	xchg   ax,ax
   43dd0:	mov    esi,0x80000
   43dd5:	lea    rdi,[rip+0x23818]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   43ddc:	xor    eax,eax
   43dde:	xor    ebx,ebx
   43de0:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   43de5:	mov    r15d,eax
   43de8:	test   eax,eax
   43dea:	js     43f48 <argp_usage@@Base+0xbc8>
   43df0:	test   ebp,ebp
   43df2:	js     43dfd <argp_usage@@Base+0xa7d>
   43df4:	cmp    ebp,r15d
   43df7:	je     43f10 <argp_usage@@Base+0xb90>
   43dfd:	mov    edi,ebp
   43dff:	call   a540 <fchdir@plt>
   43e04:	mov    ebp,eax
   43e06:	test   eax,eax
   43e08:	jne    43e88 <argp_usage@@Base+0xb08>
   43e0a:	mov    esi,r14d
   43e0d:	mov    rdi,r13
   43e10:	call   a4c0 <acl_get_file@plt>
   43e15:	mov    r12,rax
   43e18:	test   rax,rax
   43e1b:	je     43f38 <argp_usage@@Base+0xbb8>
   43e21:	test   r15d,r15d
   43e24:	js     43ee8 <argp_usage@@Base+0xb68>
   43e2a:	mov    edi,r15d
   43e2d:	call   a540 <fchdir@plt>
   43e32:	test   eax,eax
   43e34:	jne    43f00 <argp_usage@@Base+0xb80>
   43e3a:	mov    edi,r15d
   43e3d:	call   a200 <close@plt>
   43e42:	mov    rdi,rbx
   43e45:	call   9ce0 <free@plt>
   43e4a:	test   ebp,ebp
   43e4c:	je     43d8d <argp_usage@@Base+0xa0d>
   43e52:	call   9e40 <__errno_location@plt>
   43e57:	mov    DWORD PTR [rax],ebp
   43e59:	jmp    43d8d <argp_usage@@Base+0xa0d>
   43e5e:	xchg   ax,ax
   43e60:	mov    esi,edx
   43e62:	lea    rdi,[rsp+0x10]
   43e67:	mov    BYTE PTR [rsp+0x10],0x0
   43e6c:	call   a4c0 <acl_get_file@plt>
   43e71:	mov    r12,rax
   43e74:	call   9e40 <__errno_location@plt>
   43e79:	mov    rdx,rax
   43e7c:	mov    eax,DWORD PTR [rax]
   43e7e:	jmp    43d88 <argp_usage@@Base+0xa08>
   43e83:	nop    DWORD PTR [rax+rax*1+0x0]
   43e88:	call   9e40 <__errno_location@plt>
   43e8d:	mov    r12d,DWORD PTR [rax]
   43e90:	mov    rbp,rax
   43e93:	test   r15d,r15d
   43e96:	js     43ea0 <argp_usage@@Base+0xb20>
   43e98:	mov    edi,r15d
   43e9b:	call   a200 <close@plt>
   43ea0:	mov    rdi,rbx
   43ea3:	call   9ce0 <free@plt>
   43ea8:	mov    DWORD PTR [rbp+0x0],r12d
   43eac:	xor    r12d,r12d
   43eaf:	jmp    43d8d <argp_usage@@Base+0xa0d>
   43eb4:	nop    DWORD PTR [rax+0x0]
   43eb8:	cmp    eax,0x1
   43ebb:	je     43dd0 <argp_usage@@Base+0xa50>
   43ec1:	cmp    eax,0xd
   43ec4:	je     43dd0 <argp_usage@@Base+0xa50>
   43eca:	cmp    eax,0x26
   43ecd:	je     43dd0 <argp_usage@@Base+0xa50>
   43ed3:	cmp    eax,0x5f
   43ed6:	je     43dd0 <argp_usage@@Base+0xa50>
   43edc:	mov    DWORD PTR [rdx],eax
   43ede:	jmp    43d8d <argp_usage@@Base+0xa0d>
   43ee3:	nop    DWORD PTR [rax+rax*1+0x0]
   43ee8:	mov    rdi,rbx
   43eeb:	call   4bd60 <argp_usage@@Base+0x89e0>
   43ef0:	test   eax,eax
   43ef2:	je     43e42 <argp_usage@@Base+0xac2>
   43ef8:	nop    DWORD PTR [rax+rax*1+0x0]
   43f00:	call   9e40 <__errno_location@plt>
   43f05:	mov    edi,DWORD PTR [rax]
   43f07:	call   495d0 <argp_usage@@Base+0x6250>
   43f0c:	nop    DWORD PTR [rax+0x0]
   43f10:	mov    edi,r15d
   43f13:	xor    r12d,r12d
   43f16:	call   a200 <close@plt>
   43f1b:	mov    rdi,rbx
   43f1e:	call   9ce0 <free@plt>
   43f23:	call   9e40 <__errno_location@plt>
   43f28:	mov    DWORD PTR [rax],0x9
   43f2e:	jmp    43d8d <argp_usage@@Base+0xa0d>
   43f33:	nop    DWORD PTR [rax+rax*1+0x0]
   43f38:	call   9e40 <__errno_location@plt>
   43f3d:	mov    ebp,DWORD PTR [rax]
   43f3f:	jmp    43e21 <argp_usage@@Base+0xaa1>
   43f44:	nop    DWORD PTR [rax+0x0]
   43f48:	xor    esi,esi
   43f4a:	xor    edi,edi
   43f4c:	call   a1f0 <getcwd@plt>
   43f51:	mov    rbx,rax
   43f54:	test   rax,rax
   43f57:	jne    43df0 <argp_usage@@Base+0xa70>
   43f5d:	call   9e40 <__errno_location@plt>
   43f62:	mov    edi,DWORD PTR [rax]
   43f64:	call   49590 <argp_usage@@Base+0x6210>
   43f69:	call   a0a0 <__stack_chk_fail@plt>
   43f6e:	xchg   ax,ax
   43f70:	endbr64 
   43f74:	push   r15
   43f76:	push   r14
   43f78:	mov    r14d,ecx
   43f7b:	push   r13
   43f7d:	mov    r13d,edi
   43f80:	push   r12
   43f82:	push   rbp
   43f83:	mov    rbp,rsi
   43f86:	push   rbx
   43f87:	mov    rbx,rdx
   43f8a:	sub    rsp,0x8
   43f8e:	cmp    edi,0xffffff9c
   43f91:	je     44030 <argp_usage@@Base+0xcb0>
   43f97:	cmp    BYTE PTR [rsi],0x2f
   43f9a:	je     44030 <argp_usage@@Base+0xcb0>
   43fa0:	mov    edx,0x8000
   43fa5:	call   43d00 <argp_usage@@Base+0x980>
   43faa:	mov    r12,rax
   43fad:	test   r12,r12
   43fb0:	je     44049 <argp_usage@@Base+0xcc9>
   43fb6:	xor    esi,esi
   43fb8:	mov    rdi,r12
   43fbb:	call   a3e0 <acl_to_text@plt>
   43fc0:	mov    rdi,r12
   43fc3:	mov    r15,rax
   43fc6:	call   a990 <acl_free@plt>
   43fcb:	test   r15,r15
   43fce:	je     44158 <argp_usage@@Base+0xdd8>
   43fd4:	mov    rdi,r15
   43fd7:	call   a060 <strlen@plt>
   43fdc:	lea    r12,[rax+0x1]
   43fe0:	mov    rdi,r12
   43fe3:	call   a4a0 <malloc@plt>
   43fe8:	mov    rdi,rax
   43feb:	test   rax,rax
   43fee:	je     4417c <argp_usage@@Base+0xdfc>
   43ff4:	mov    rdx,r12
   43ff7:	mov    rsi,r15
   43ffa:	call   a420 <memcpy@plt>
   43fff:	lea    rsi,[rbx+0x40]
   44003:	mov    QWORD PTR [rbx+0x38],rax
   44007:	mov    rdi,rax
   4400a:	call   38940 <__sprintf_chk@plt+0x2df90>
   4400f:	mov    rdi,r15
   44012:	call   a990 <acl_free@plt>
   44017:	test   r14d,r14d
   4401a:	je     44070 <argp_usage@@Base+0xcf0>
   4401c:	add    rsp,0x8
   44020:	pop    rbx
   44021:	pop    rbp
   44022:	pop    r12
   44024:	pop    r13
   44026:	pop    r14
   44028:	pop    r15
   4402a:	ret    
   4402b:	nop    DWORD PTR [rax+rax*1+0x0]
   44030:	mov    esi,0x8000
   44035:	mov    rdi,rbp
   44038:	call   a4c0 <acl_get_file@plt>
   4403d:	mov    r12,rax
   44040:	test   r12,r12
   44043:	jne    43fb6 <argp_usage@@Base+0xc36>
   44049:	call   9e40 <__errno_location@plt>
   4404e:	cmp    DWORD PTR [rax],0x5f
   44051:	je     44017 <argp_usage@@Base+0xc97>
   44053:	mov    rsi,rbp
   44056:	lea    rdi,[rip+0x27e26]        # 6be83 <_obstack_memory_used@@Base+0x1f203>
   4405d:	call   3c100 <__sprintf_chk@plt+0x31750>
   44062:	test   r14d,r14d
   44065:	jne    4401c <argp_usage@@Base+0xc9c>
   44067:	nop    WORD PTR [rax+rax*1+0x0]
   44070:	cmp    r13d,0xffffff9c
   44074:	je     44110 <argp_usage@@Base+0xd90>
   4407a:	cmp    BYTE PTR [rbp+0x0],0x2f
   4407e:	je     44110 <argp_usage@@Base+0xd90>
   44084:	mov    edx,0x4000
   44089:	mov    rsi,rbp
   4408c:	mov    edi,r13d
   4408f:	call   43d00 <argp_usage@@Base+0x980>
   44094:	mov    r12,rax
   44097:	test   r12,r12
   4409a:	je     44129 <argp_usage@@Base+0xda9>
   440a0:	xor    esi,esi
   440a2:	mov    rdi,r12
   440a5:	call   a3e0 <acl_to_text@plt>
   440aa:	mov    rdi,r12
   440ad:	mov    r13,rax
   440b0:	call   a990 <acl_free@plt>
   440b5:	test   r13,r13
   440b8:	je     44170 <argp_usage@@Base+0xdf0>
   440be:	mov    rdi,r13
   440c1:	call   a060 <strlen@plt>
   440c6:	lea    r12,[rax+0x1]
   440ca:	mov    rdi,r12
   440cd:	call   a4a0 <malloc@plt>
   440d2:	mov    rdi,rax
   440d5:	test   rax,rax
   440d8:	je     4417c <argp_usage@@Base+0xdfc>
   440de:	mov    rdx,r12
   440e1:	mov    rsi,r13
   440e4:	call   a420 <memcpy@plt>
   440e9:	lea    rsi,[rbx+0x50]
   440ed:	mov    QWORD PTR [rbx+0x48],rax
   440f1:	mov    rdi,rax
   440f4:	call   38940 <__sprintf_chk@plt+0x2df90>
   440f9:	add    rsp,0x8
   440fd:	mov    rdi,r13
   44100:	pop    rbx
   44101:	pop    rbp
   44102:	pop    r12
   44104:	pop    r13
   44106:	pop    r14
   44108:	pop    r15
   4410a:	jmp    a990 <acl_free@plt>
   4410f:	nop
   44110:	mov    esi,0x4000
   44115:	mov    rdi,rbp
   44118:	call   a4c0 <acl_get_file@plt>
   4411d:	mov    r12,rax
   44120:	test   r12,r12
   44123:	jne    440a0 <argp_usage@@Base+0xd20>
   44129:	call   9e40 <__errno_location@plt>
   4412e:	mov    rsi,rbp
   44131:	lea    rdi,[rip+0x27d4b]        # 6be83 <_obstack_memory_used@@Base+0x1f203>
   44138:	cmp    DWORD PTR [rax],0x5f
   4413b:	je     4401c <argp_usage@@Base+0xc9c>
   44141:	add    rsp,0x8
   44145:	pop    rbx
   44146:	pop    rbp
   44147:	pop    r12
   44149:	pop    r13
   4414b:	pop    r14
   4414d:	pop    r15
   4414f:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   44154:	nop    DWORD PTR [rax+0x0]
   44158:	mov    rsi,rbp
   4415b:	lea    rdi,[rip+0x27d31]        # 6be93 <_obstack_memory_used@@Base+0x1f213>
   44162:	call   3c100 <__sprintf_chk@plt+0x31750>
   44167:	jmp    44017 <argp_usage@@Base+0xc97>
   4416c:	nop    DWORD PTR [rax+0x0]
   44170:	mov    rsi,rbp
   44173:	lea    rdi,[rip+0x27d19]        # 6be93 <_obstack_memory_used@@Base+0x1f213>
   4417a:	jmp    44141 <argp_usage@@Base+0xdc1>
   4417c:	call   19130 <__sprintf_chk@plt+0xe780>
   44181:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4418c:	nop    DWORD PTR [rax+0x0]
   44190:	push   r15
   44192:	mov    r15,r8
   44195:	push   r14
   44197:	mov    r14,rcx
   4419a:	push   r13
   4419c:	mov    r13,rsi
   4419f:	push   r12
   441a1:	push   rbp
   441a2:	mov    ebp,edi
   441a4:	push   rbx
   441a5:	sub    rsp,0xff8
   441ac:	mov    QWORD PTR [rsp+0x8],rdx
   441b1:	mov    rax,QWORD PTR fs:0x28
   441ba:	mov    QWORD PTR [rsp+0xfe8],rax
   441c2:	xor    eax,eax
   441c4:	cmp    BYTE PTR [rsi],0x0
   441c7:	je     44338 <argp_usage@@Base+0xfb8>
   441cd:	lea    r8,[rsp+0x20]
   441d2:	mov    rdx,rsi
   441d5:	mov    esi,edi
   441d7:	mov    rdi,r8
   441da:	mov    QWORD PTR [rsp+0x10],r8
   441df:	call   433a0 <argp_usage@@Base+0x20>
   441e4:	mov    rbx,rax
   441e7:	test   rax,rax
   441ea:	je     44290 <argp_usage@@Base+0xf10>
   441f0:	mov    rsi,QWORD PTR [rsp+0x8]
   441f5:	mov    rdx,r14
   441f8:	mov    rcx,r15
   441fb:	mov    rdi,rax
   441fe:	call   a000 <lgetxattr@plt>
   44203:	mov    r12,rax
   44206:	call   9e40 <__errno_location@plt>
   4420b:	mov    r8,QWORD PTR [rsp+0x10]
   44210:	mov    edx,DWORD PTR [rax]
   44212:	cmp    rbx,r8
   44215:	je     44231 <argp_usage@@Base+0xeb1>
   44217:	mov    rdi,rbx
   4421a:	mov    DWORD PTR [rsp+0x1c],edx
   4421e:	mov    QWORD PTR [rsp+0x10],rax
   44223:	call   9ce0 <free@plt>
   44228:	mov    edx,DWORD PTR [rsp+0x1c]
   4422c:	mov    rax,QWORD PTR [rsp+0x10]
   44231:	cmp    r12,0xffffffffffffffff
   44235:	jne    44260 <argp_usage@@Base+0xee0>
   44237:	cmp    edx,0x14
   4423a:	je     44290 <argp_usage@@Base+0xf10>
   4423c:	cmp    edx,0x2
   4423f:	je     44290 <argp_usage@@Base+0xf10>
   44241:	cmp    edx,0x1
   44244:	je     44290 <argp_usage@@Base+0xf10>
   44246:	cmp    edx,0xd
   44249:	je     44290 <argp_usage@@Base+0xf10>
   4424b:	cmp    edx,0x26
   4424e:	je     44290 <argp_usage@@Base+0xf10>
   44250:	cmp    edx,0x5f
   44253:	je     44290 <argp_usage@@Base+0xf10>
   44255:	mov    DWORD PTR [rax],edx
   44257:	nop    WORD PTR [rax+rax*1+0x0]
   44260:	mov    rax,QWORD PTR [rsp+0xfe8]
   44268:	sub    rax,QWORD PTR fs:0x28
   44271:	jne    44413 <argp_usage@@Base+0x1093>
   44277:	add    rsp,0xff8
   4427e:	mov    rax,r12
   44281:	pop    rbx
   44282:	pop    rbp
   44283:	pop    r12
   44285:	pop    r13
   44287:	pop    r14
   44289:	pop    r15
   4428b:	ret    
   4428c:	nop    DWORD PTR [rax+0x0]
   44290:	mov    esi,0x80000
   44295:	lea    rdi,[rip+0x23358]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   4429c:	xor    eax,eax
   4429e:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   442a3:	mov    QWORD PTR [rsp+0x10],0x0
   442ac:	mov    ebx,eax
   442ae:	test   eax,eax
   442b0:	js     443f0 <argp_usage@@Base+0x1070>
   442b6:	test   ebp,ebp
   442b8:	js     442c2 <argp_usage@@Base+0xf42>
   442ba:	cmp    ebp,ebx
   442bc:	je     443c8 <argp_usage@@Base+0x1048>
   442c2:	mov    edi,ebp
   442c4:	call   a540 <fchdir@plt>
   442c9:	mov    ebp,eax
   442cb:	test   eax,eax
   442cd:	jne    44368 <argp_usage@@Base+0xfe8>
   442d3:	mov    rsi,QWORD PTR [rsp+0x8]
   442d8:	mov    rcx,r15
   442db:	mov    rdx,r14
   442de:	mov    rdi,r13
   442e1:	call   a000 <lgetxattr@plt>
   442e6:	mov    r12,rax
   442e9:	cmp    rax,0xffffffffffffffff
   442ed:	jne    442f6 <argp_usage@@Base+0xf76>
   442ef:	call   9e40 <__errno_location@plt>
   442f4:	mov    ebp,DWORD PTR [rax]
   442f6:	test   ebx,ebx
   442f8:	js     443a0 <argp_usage@@Base+0x1020>
   442fe:	mov    edi,ebx
   44300:	call   a540 <fchdir@plt>
   44305:	test   eax,eax
   44307:	jne    443b8 <argp_usage@@Base+0x1038>
   4430d:	mov    edi,ebx
   4430f:	call   a200 <close@plt>
   44314:	mov    rdi,QWORD PTR [rsp+0x10]
   44319:	call   9ce0 <free@plt>
   4431e:	test   ebp,ebp
   44320:	je     44260 <argp_usage@@Base+0xee0>
   44326:	call   9e40 <__errno_location@plt>
   4432b:	mov    DWORD PTR [rax],ebp
   4432d:	jmp    44260 <argp_usage@@Base+0xee0>
   44332:	nop    WORD PTR [rax+rax*1+0x0]
   44338:	mov    rsi,QWORD PTR [rsp+0x8]
   4433d:	mov    rdx,r14
   44340:	lea    rdi,[rsp+0x20]
   44345:	mov    rcx,r8
   44348:	mov    BYTE PTR [rsp+0x20],0x0
   4434d:	call   a000 <lgetxattr@plt>
   44352:	mov    r12,rax
   44355:	call   9e40 <__errno_location@plt>
   4435a:	mov    edx,DWORD PTR [rax]
   4435c:	jmp    44231 <argp_usage@@Base+0xeb1>
   44361:	nop    DWORD PTR [rax+0x0]
   44368:	call   9e40 <__errno_location@plt>
   4436d:	mov    r12d,DWORD PTR [rax]
   44370:	mov    rbp,rax
   44373:	test   ebx,ebx
   44375:	js     4437e <argp_usage@@Base+0xffe>
   44377:	mov    edi,ebx
   44379:	call   a200 <close@plt>
   4437e:	mov    rdi,QWORD PTR [rsp+0x10]
   44383:	call   9ce0 <free@plt>
   44388:	mov    DWORD PTR [rbp+0x0],r12d
   4438c:	mov    r12,0xffffffffffffffff
   44393:	jmp    44260 <argp_usage@@Base+0xee0>
   44398:	nop    DWORD PTR [rax+rax*1+0x0]
   443a0:	mov    rdi,QWORD PTR [rsp+0x10]
   443a5:	call   4bd60 <argp_usage@@Base+0x89e0>
   443aa:	test   eax,eax
   443ac:	je     44314 <argp_usage@@Base+0xf94>
   443b2:	nop    WORD PTR [rax+rax*1+0x0]
   443b8:	call   9e40 <__errno_location@plt>
   443bd:	mov    edi,DWORD PTR [rax]
   443bf:	call   495d0 <argp_usage@@Base+0x6250>
   443c4:	nop    DWORD PTR [rax+0x0]
   443c8:	mov    edi,ebx
   443ca:	mov    r12,0xffffffffffffffff
   443d1:	call   a200 <close@plt>
   443d6:	mov    rdi,QWORD PTR [rsp+0x10]
   443db:	call   9ce0 <free@plt>
   443e0:	call   9e40 <__errno_location@plt>
   443e5:	mov    DWORD PTR [rax],0x9
   443eb:	jmp    44260 <argp_usage@@Base+0xee0>
   443f0:	xor    esi,esi
   443f2:	xor    edi,edi
   443f4:	call   a1f0 <getcwd@plt>
   443f9:	mov    QWORD PTR [rsp+0x10],rax
   443fe:	test   rax,rax
   44401:	jne    442b6 <argp_usage@@Base+0xf36>
   44407:	call   9e40 <__errno_location@plt>
   4440c:	mov    edi,DWORD PTR [rax]
   4440e:	call   49590 <argp_usage@@Base+0x6210>
   44413:	call   a0a0 <__stack_chk_fail@plt>
   44418:	nop    DWORD PTR [rax+rax*1+0x0]
   44420:	push   r15
   44422:	mov    r15,rcx
   44425:	push   r14
   44427:	mov    r14,rdx
   4442a:	push   r13
   4442c:	mov    r13,rsi
   4442f:	push   r12
   44431:	push   rbp
   44432:	mov    ebp,edi
   44434:	push   rbx
   44435:	sub    rsp,0xfe8
   4443c:	mov    rax,QWORD PTR fs:0x28
   44445:	mov    QWORD PTR [rsp+0xfd8],rax
   4444d:	xor    eax,eax
   4444f:	cmp    BYTE PTR [rsi],0x0
   44452:	je     445b0 <argp_usage@@Base+0x1230>
   44458:	lea    rcx,[rsp+0x10]
   4445d:	mov    rdx,rsi
   44460:	mov    esi,edi
   44462:	mov    rdi,rcx
   44465:	mov    QWORD PTR [rsp],rcx
   44469:	call   433a0 <argp_usage@@Base+0x20>
   4446e:	mov    rbx,rax
   44471:	test   rax,rax
   44474:	je     44510 <argp_usage@@Base+0x1190>
   4447a:	mov    rdx,r15
   4447d:	mov    rsi,r14
   44480:	mov    rdi,rax
   44483:	call   9f40 <llistxattr@plt>
   44488:	mov    r12,rax
   4448b:	call   9e40 <__errno_location@plt>
   44490:	mov    rcx,QWORD PTR [rsp]
   44494:	mov    edx,DWORD PTR [rax]
   44496:	cmp    rbx,rcx
   44499:	je     444b3 <argp_usage@@Base+0x1133>
   4449b:	mov    rdi,rbx
   4449e:	mov    DWORD PTR [rsp+0xc],edx
   444a2:	mov    QWORD PTR [rsp],rax
   444a6:	call   9ce0 <free@plt>
   444ab:	mov    edx,DWORD PTR [rsp+0xc]
   444af:	mov    rax,QWORD PTR [rsp]
   444b3:	cmp    r12,0xffffffffffffffff
   444b7:	jne    444e0 <argp_usage@@Base+0x1160>
   444b9:	cmp    edx,0x14
   444bc:	je     44510 <argp_usage@@Base+0x1190>
   444be:	cmp    edx,0x2
   444c1:	je     44510 <argp_usage@@Base+0x1190>
   444c3:	cmp    edx,0x1
   444c6:	je     44510 <argp_usage@@Base+0x1190>
   444c8:	cmp    edx,0xd
   444cb:	je     44510 <argp_usage@@Base+0x1190>
   444cd:	cmp    edx,0x26
   444d0:	je     44510 <argp_usage@@Base+0x1190>
   444d2:	cmp    edx,0x5f
   444d5:	je     44510 <argp_usage@@Base+0x1190>
   444d7:	mov    DWORD PTR [rax],edx
   444d9:	nop    DWORD PTR [rax+0x0]
   444e0:	mov    rax,QWORD PTR [rsp+0xfd8]
   444e8:	sub    rax,QWORD PTR fs:0x28
   444f1:	jne    44682 <argp_usage@@Base+0x1302>
   444f7:	add    rsp,0xfe8
   444fe:	mov    rax,r12
   44501:	pop    rbx
   44502:	pop    rbp
   44503:	pop    r12
   44505:	pop    r13
   44507:	pop    r14
   44509:	pop    r15
   4450b:	ret    
   4450c:	nop    DWORD PTR [rax+0x0]
   44510:	mov    esi,0x80000
   44515:	lea    rdi,[rip+0x230d8]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   4451c:	xor    eax,eax
   4451e:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   44523:	mov    QWORD PTR [rsp],0x0
   4452b:	mov    ebx,eax
   4452d:	test   eax,eax
   4452f:	js     44660 <argp_usage@@Base+0x12e0>
   44535:	test   ebp,ebp
   44537:	js     44541 <argp_usage@@Base+0x11c1>
   44539:	cmp    ebp,ebx
   4453b:	je     44638 <argp_usage@@Base+0x12b8>
   44541:	mov    edi,ebp
   44543:	call   a540 <fchdir@plt>
   44548:	mov    ebp,eax
   4454a:	test   eax,eax
   4454c:	jne    445d8 <argp_usage@@Base+0x1258>
   44552:	mov    rdx,r15
   44555:	mov    rsi,r14
   44558:	mov    rdi,r13
   4455b:	call   9f40 <llistxattr@plt>
   44560:	mov    r12,rax
   44563:	cmp    rax,0xffffffffffffffff
   44567:	jne    44570 <argp_usage@@Base+0x11f0>
   44569:	call   9e40 <__errno_location@plt>
   4456e:	mov    ebp,DWORD PTR [rax]
   44570:	test   ebx,ebx
   44572:	js     44610 <argp_usage@@Base+0x1290>
   44578:	mov    edi,ebx
   4457a:	call   a540 <fchdir@plt>
   4457f:	test   eax,eax
   44581:	jne    44628 <argp_usage@@Base+0x12a8>
   44587:	mov    edi,ebx
   44589:	call   a200 <close@plt>
   4458e:	mov    rdi,QWORD PTR [rsp]
   44592:	call   9ce0 <free@plt>
   44597:	test   ebp,ebp
   44599:	je     444e0 <argp_usage@@Base+0x1160>
   4459f:	call   9e40 <__errno_location@plt>
   445a4:	mov    DWORD PTR [rax],ebp
   445a6:	jmp    444e0 <argp_usage@@Base+0x1160>
   445ab:	nop    DWORD PTR [rax+rax*1+0x0]
   445b0:	mov    rdx,rcx
   445b3:	lea    rdi,[rsp+0x10]
   445b8:	mov    rsi,r14
   445bb:	mov    BYTE PTR [rsp+0x10],0x0
   445c0:	call   9f40 <llistxattr@plt>
   445c5:	mov    r12,rax
   445c8:	call   9e40 <__errno_location@plt>
   445cd:	mov    edx,DWORD PTR [rax]
   445cf:	jmp    444b3 <argp_usage@@Base+0x1133>
   445d4:	nop    DWORD PTR [rax+0x0]
   445d8:	call   9e40 <__errno_location@plt>
   445dd:	mov    r12d,DWORD PTR [rax]
   445e0:	mov    rbp,rax
   445e3:	test   ebx,ebx
   445e5:	js     445ee <argp_usage@@Base+0x126e>
   445e7:	mov    edi,ebx
   445e9:	call   a200 <close@plt>
   445ee:	mov    rdi,QWORD PTR [rsp]
   445f2:	call   9ce0 <free@plt>
   445f7:	mov    DWORD PTR [rbp+0x0],r12d
   445fb:	mov    r12,0xffffffffffffffff
   44602:	jmp    444e0 <argp_usage@@Base+0x1160>
   44607:	nop    WORD PTR [rax+rax*1+0x0]
   44610:	mov    rdi,QWORD PTR [rsp]
   44614:	call   4bd60 <argp_usage@@Base+0x89e0>
   44619:	test   eax,eax
   4461b:	je     4458e <argp_usage@@Base+0x120e>
   44621:	nop    DWORD PTR [rax+0x0]
   44628:	call   9e40 <__errno_location@plt>
   4462d:	mov    edi,DWORD PTR [rax]
   4462f:	call   495d0 <argp_usage@@Base+0x6250>
   44634:	nop    DWORD PTR [rax+0x0]
   44638:	mov    edi,ebx
   4463a:	mov    r12,0xffffffffffffffff
   44641:	call   a200 <close@plt>
   44646:	mov    rdi,QWORD PTR [rsp]
   4464a:	call   9ce0 <free@plt>
   4464f:	call   9e40 <__errno_location@plt>
   44654:	mov    DWORD PTR [rax],0x9
   4465a:	jmp    444e0 <argp_usage@@Base+0x1160>
   4465f:	nop
   44660:	xor    esi,esi
   44662:	xor    edi,edi
   44664:	call   a1f0 <getcwd@plt>
   44669:	mov    QWORD PTR [rsp],rax
   4466d:	test   rax,rax
   44670:	jne    44535 <argp_usage@@Base+0x11b5>
   44676:	call   9e40 <__errno_location@plt>
   4467b:	mov    edi,DWORD PTR [rax]
   4467d:	call   49590 <argp_usage@@Base+0x6210>
   44682:	call   a0a0 <__stack_chk_fail@plt>
   44687:	nop    WORD PTR [rax+rax*1+0x0]
   44690:	endbr64 
   44694:	push   r15
   44696:	push   r14
   44698:	push   r13
   4469a:	push   r12
   4469c:	push   rbp
   4469d:	push   rbx
   4469e:	sub    rsp,0x28
   446a2:	mov    eax,DWORD PTR [rip+0x3a830]        # 7eed8 <obstack_alloc_failed_handler@@Base+0xa0>
   446a8:	mov    QWORD PTR [rsp+0x10],rdx
   446ad:	test   eax,eax
   446af:	jle    448d1 <argp_usage@@Base+0x1551>
   446b5:	mov    r12,QWORD PTR [rip+0x3b614]        # 7fcd0 <argp_program_bug_address@@Base+0x20>
   446bc:	mov    r14d,edi
   446bf:	mov    rbp,rsi
   446c2:	mov    ebx,ecx
   446c4:	mov    rdx,QWORD PTR [rip+0x3a665]        # 7ed30 <argp_err_exit_status@@Base+0x70>
   446cb:	test   r12,r12
   446ce:	je     44999 <argp_usage@@Base+0x1619>
   446d4:	movabs r15,0x5555555555555553
   446de:	jmp    44779 <argp_usage@@Base+0x13f9>
   446e3:	nop    DWORD PTR [rax+rax*1+0x0]
   446e8:	cmp    r14d,0xffffff9c
   446ec:	je     448f0 <argp_usage@@Base+0x1570>
   446f2:	cmp    BYTE PTR [rbp+0x0],0x2f
   446f6:	je     448f0 <argp_usage@@Base+0x1570>
   446fc:	mov    rcx,rdx
   446ff:	mov    rsi,rbp
   44702:	mov    rdx,r12
   44705:	mov    edi,r14d
   44708:	call   44420 <argp_usage@@Base+0x10a0>
   4470d:	mov    r13,rax
   44710:	cmp    r13,0xffffffffffffffff
   44714:	jne    44908 <argp_usage@@Base+0x1588>
   4471a:	call   9e40 <__errno_location@plt>
   4471f:	cmp    DWORD PTR [rax],0x22
   44722:	jne    449d7 <argp_usage@@Base+0x1657>
   44728:	mov    rdi,QWORD PTR [rip+0x3b5a1]        # 7fcd0 <argp_program_bug_address@@Base+0x20>
   4472f:	mov    rsi,QWORD PTR [rip+0x3a5fa]        # 7ed30 <argp_err_exit_status@@Base+0x70>
   44736:	test   rdi,rdi
   44739:	je     448e0 <argp_usage@@Base+0x1560>
   4473f:	cmp    rsi,r15
   44742:	ja     448eb <argp_usage@@Base+0x156b>
   44748:	mov    rax,rsi
   4474b:	shr    rax,1
   4474e:	lea    rsi,[rsi+rax*1+0x1]
   44753:	mov    QWORD PTR [rip+0x3a5d6],rsi        # 7ed30 <argp_err_exit_status@@Base+0x70>
   4475a:	call   a570 <realloc@plt>
   4475f:	mov    r12,rax
   44762:	test   rax,rax
   44765:	je     448eb <argp_usage@@Base+0x156b>
   4476b:	mov    QWORD PTR [rip+0x3b55e],r12        # 7fcd0 <argp_program_bug_address@@Base+0x20>
   44772:	mov    rdx,QWORD PTR [rip+0x3a5b7]        # 7ed30 <argp_err_exit_status@@Base+0x70>
   44779:	test   ebx,ebx
   4477b:	je     446e8 <argp_usage@@Base+0x1368>
   44781:	mov    rsi,r12
   44784:	mov    edi,ebx
   44786:	call   9ec0 <flistxattr@plt>
   4478b:	mov    r13,rax
   4478e:	cmp    rax,0xffffffffffffffff
   44792:	je     4471a <argp_usage@@Base+0x139a>
   44794:	cmp    QWORD PTR [rip+0x3b52c],0x0        # 7fcc8 <argp_program_bug_address@@Base+0x18>
   4479c:	je     44a01 <argp_usage@@Base+0x1681>
   447a2:	test   r13,r13
   447a5:	jle    448d1 <argp_usage@@Base+0x1551>
   447ab:	test   ebx,ebx
   447ad:	lea    rdx,[rip+0x27703]        # 6beb7 <_obstack_memory_used@@Base+0x1f237>
   447b4:	lea    rax,[rip+0x27708]        # 6bec3 <_obstack_memory_used@@Base+0x1f243>
   447bb:	movabs r15,0x5555555555555553
   447c5:	cmove  rax,rdx
   447c9:	mov    QWORD PTR [rsp+0x18],rax
   447ce:	xchg   ax,ax
   447d0:	mov    rdi,r12
   447d3:	call   a060 <strlen@plt>
   447d8:	mov    rdx,QWORD PTR [rip+0x3b4e9]        # 7fcc8 <argp_program_bug_address@@Base+0x18>
   447df:	mov    QWORD PTR [rsp],rax
   447e3:	jmp    44877 <argp_usage@@Base+0x14f7>
   447e8:	nop    DWORD PTR [rax+rax*1+0x0]
   447f0:	cmp    r14d,0xffffff9c
   447f4:	je     44938 <argp_usage@@Base+0x15b8>
   447fa:	cmp    BYTE PTR [rbp+0x0],0x2f
   447fe:	je     44938 <argp_usage@@Base+0x15b8>
   44804:	mov    r8,rcx
   44807:	mov    rsi,rbp
   4480a:	mov    rcx,rdx
   4480d:	mov    edi,r14d
   44810:	mov    rdx,r12
   44813:	call   44190 <argp_usage@@Base+0xe10>
   44818:	mov    rcx,rax
   4481b:	cmp    rcx,0xffffffffffffffff
   4481f:	jne    44899 <argp_usage@@Base+0x1519>
   44821:	call   9e40 <__errno_location@plt>
   44826:	mov    eax,DWORD PTR [rax]
   44828:	cmp    eax,0x22
   4482b:	jne    44960 <argp_usage@@Base+0x15e0>
   44831:	mov    rdi,QWORD PTR [rip+0x3b490]        # 7fcc8 <argp_program_bug_address@@Base+0x18>
   44838:	mov    rsi,QWORD PTR [rip+0x3a4e9]        # 7ed28 <argp_err_exit_status@@Base+0x68>
   4483f:	test   rdi,rdi
   44842:	je     44928 <argp_usage@@Base+0x15a8>
   44848:	cmp    rsi,r15
   4484b:	ja     448eb <argp_usage@@Base+0x156b>
   44851:	mov    rax,rsi
   44854:	shr    rax,1
   44857:	lea    rsi,[rsi+rax*1+0x1]
   4485c:	mov    QWORD PTR [rip+0x3a4c5],rsi        # 7ed28 <argp_err_exit_status@@Base+0x68>
   44863:	call   a570 <realloc@plt>
   44868:	mov    rdx,rax
   4486b:	test   rax,rax
   4486e:	je     448eb <argp_usage@@Base+0x156b>
   44870:	mov    QWORD PTR [rip+0x3b451],rdx        # 7fcc8 <argp_program_bug_address@@Base+0x18>
   44877:	mov    rcx,QWORD PTR [rip+0x3a4aa]        # 7ed28 <argp_err_exit_status@@Base+0x68>
   4487e:	test   ebx,ebx
   44880:	je     447f0 <argp_usage@@Base+0x1470>
   44886:	mov    rsi,r12
   44889:	mov    edi,ebx
   4488b:	call   a530 <fgetxattr@plt>
   44890:	mov    rcx,rax
   44893:	cmp    rax,0xffffffffffffffff
   44897:	je     44821 <argp_usage@@Base+0x14a1>
   44899:	mov    esi,0x1
   4489e:	mov    rdi,r12
   448a1:	mov    QWORD PTR [rsp+0x8],rcx
   448a6:	call   3b720 <__sprintf_chk@plt+0x30d70>
   448ab:	mov    rcx,QWORD PTR [rsp+0x8]
   448b0:	test   al,al
   448b2:	je     44980 <argp_usage@@Base+0x1600>
   448b8:	mov    rax,QWORD PTR [rsp]
   448bc:	sub    r13,rax
   448bf:	lea    r12,[r12+rax*1+0x1]
   448c4:	sub    r13,0x1
   448c8:	test   r13,r13
   448cb:	jg     447d0 <argp_usage@@Base+0x1450>
   448d1:	add    rsp,0x28
   448d5:	pop    rbx
   448d6:	pop    rbp
   448d7:	pop    r12
   448d9:	pop    r13
   448db:	pop    r14
   448dd:	pop    r15
   448df:	ret    
   448e0:	test   rsi,rsi
   448e3:	je     44918 <argp_usage@@Base+0x1598>
   448e5:	jns    44753 <argp_usage@@Base+0x13d3>
   448eb:	call   19130 <__sprintf_chk@plt+0xe780>
   448f0:	mov    rsi,r12
   448f3:	mov    rdi,rbp
   448f6:	call   9f40 <llistxattr@plt>
   448fb:	mov    r13,rax
   448fe:	cmp    r13,0xffffffffffffffff
   44902:	je     4471a <argp_usage@@Base+0x139a>
   44908:	mov    r12,QWORD PTR [rip+0x3b3c1]        # 7fcd0 <argp_program_bug_address@@Base+0x20>
   4490f:	jmp    44794 <argp_usage@@Base+0x1414>
   44914:	nop    DWORD PTR [rax+0x0]
   44918:	mov    esi,0x80
   4491d:	jmp    44753 <argp_usage@@Base+0x13d3>
   44922:	nop    WORD PTR [rax+rax*1+0x0]
   44928:	test   rsi,rsi
   4492b:	je     44950 <argp_usage@@Base+0x15d0>
   4492d:	jns    4485c <argp_usage@@Base+0x14dc>
   44933:	jmp    448eb <argp_usage@@Base+0x156b>
   44935:	nop    DWORD PTR [rax]
   44938:	mov    rsi,r12
   4493b:	mov    rdi,rbp
   4493e:	call   a000 <lgetxattr@plt>
   44943:	mov    rcx,rax
   44946:	jmp    4481b <argp_usage@@Base+0x149b>
   4494b:	nop    DWORD PTR [rax+rax*1+0x0]
   44950:	mov    esi,0x80
   44955:	jmp    4485c <argp_usage@@Base+0x14dc>
   4495a:	nop    WORD PTR [rax+rax*1+0x0]
   44960:	cmp    eax,0x3d
   44963:	je     448b8 <argp_usage@@Base+0x1538>
   44969:	mov    rdi,QWORD PTR [rsp+0x18]
   4496e:	mov    rsi,rbp
   44971:	call   3c100 <__sprintf_chk@plt+0x31750>
   44976:	jmp    448b8 <argp_usage@@Base+0x1538>
   4497b:	nop    DWORD PTR [rax+rax*1+0x0]
   44980:	mov    rdx,QWORD PTR [rip+0x3b341]        # 7fcc8 <argp_program_bug_address@@Base+0x18>
   44987:	mov    rdi,QWORD PTR [rsp+0x10]
   4498c:	mov    rsi,r12
   4498f:	call   1cb30 <__sprintf_chk@plt+0x12180>
   44994:	jmp    448b8 <argp_usage@@Base+0x1538>
   44999:	test   rdx,rdx
   4499c:	je     44a34 <argp_usage@@Base+0x16b4>
   449a2:	js     448eb <argp_usage@@Base+0x156b>
   449a8:	mov    rdi,rdx
   449ab:	mov    QWORD PTR [rip+0x3a37e],rdx        # 7ed30 <argp_err_exit_status@@Base+0x70>
   449b2:	mov    QWORD PTR [rsp],rdx
   449b6:	call   a4a0 <malloc@plt>
   449bb:	mov    r12,rax
   449be:	test   rax,rax
   449c1:	je     448eb <argp_usage@@Base+0x156b>
   449c7:	mov    QWORD PTR [rip+0x3b302],rax        # 7fcd0 <argp_program_bug_address@@Base+0x20>
   449ce:	mov    rdx,QWORD PTR [rsp]
   449d2:	jmp    446d4 <argp_usage@@Base+0x1354>
   449d7:	test   ebx,ebx
   449d9:	lea    rdi,[rip+0x274bf]        # 6be9f <_obstack_memory_used@@Base+0x1f21f>
   449e0:	lea    rax,[rip+0x274c5]        # 6beac <_obstack_memory_used@@Base+0x1f22c>
   449e7:	mov    rsi,rbp
   449ea:	cmovne rdi,rax
   449ee:	add    rsp,0x28
   449f2:	pop    rbx
   449f3:	pop    rbp
   449f4:	pop    r12
   449f6:	pop    r13
   449f8:	pop    r14
   449fa:	pop    r15
   449fc:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   44a01:	mov    rdi,QWORD PTR [rip+0x3a320]        # 7ed28 <argp_err_exit_status@@Base+0x68>
   44a08:	test   rdi,rdi
   44a0b:	je     44a3e <argp_usage@@Base+0x16be>
   44a0d:	js     448eb <argp_usage@@Base+0x156b>
   44a13:	mov    QWORD PTR [rip+0x3a30e],rdi        # 7ed28 <argp_err_exit_status@@Base+0x68>
   44a1a:	call   a4a0 <malloc@plt>
   44a1f:	test   rax,rax
   44a22:	je     448eb <argp_usage@@Base+0x156b>
   44a28:	mov    QWORD PTR [rip+0x3b299],rax        # 7fcc8 <argp_program_bug_address@@Base+0x18>
   44a2f:	jmp    447a2 <argp_usage@@Base+0x1422>
   44a34:	mov    edx,0x80
   44a39:	jmp    449a8 <argp_usage@@Base+0x1628>
   44a3e:	mov    edi,0x80
   44a43:	jmp    44a13 <argp_usage@@Base+0x1693>
   44a45:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   44a50:	endbr64 
   44a54:	push   r15
   44a56:	push   r14
   44a58:	push   r13
   44a5a:	push   r12
   44a5c:	push   rbp
   44a5d:	push   rbx
   44a5e:	mov    rbx,rdi
   44a61:	sub    rsp,0x18
   44a65:	mov    QWORD PTR [rsp+0x8],rdi
   44a6a:	call   3c160 <__sprintf_chk@plt+0x317b0>
   44a6f:	mov    rax,QWORD PTR [rbx+0x158]
   44a76:	mov    r12,QWORD PTR [rbx+0x160]
   44a7d:	test   rax,rax
   44a80:	je     44aaa <argp_usage@@Base+0x172a>
   44a82:	lea    rax,[rax+rax*2]
   44a86:	mov    rbx,r12
   44a89:	lea    rbp,[r12+rax*8]
   44a8d:	nop    DWORD PTR [rax]
   44a90:	mov    rdi,QWORD PTR [rbx]
   44a93:	add    rbx,0x18
   44a97:	call   9ce0 <free@plt>
   44a9c:	mov    rdi,QWORD PTR [rbx-0x10]
   44aa0:	call   9ce0 <free@plt>
   44aa5:	cmp    rbp,rbx
   44aa8:	jne    44a90 <argp_usage@@Base+0x1710>
   44aaa:	mov    rdi,r12
   44aad:	call   9ce0 <free@plt>
   44ab2:	mov    rbx,QWORD PTR [rsp+0x8]
   44ab7:	mov    rdi,QWORD PTR [rbx]
   44aba:	call   9ce0 <free@plt>
   44abf:	mov    rdi,QWORD PTR [rbx+0x8]
   44ac3:	call   9ce0 <free@plt>
   44ac8:	mov    rdi,QWORD PTR [rbx+0x18]
   44acc:	call   9ce0 <free@plt>
   44ad1:	mov    rdi,QWORD PTR [rbx+0x20]
   44ad5:	call   9ce0 <free@plt>
   44ada:	mov    rdi,QWORD PTR [rbx+0x28]
   44ade:	call   9ce0 <free@plt>
   44ae3:	mov    rdi,QWORD PTR [rbx+0x30]
   44ae7:	call   9ce0 <free@plt>
   44aec:	mov    rdi,QWORD PTR [rbx+0x38]
   44af0:	call   9ce0 <free@plt>
   44af5:	mov    rdi,QWORD PTR [rbx+0x48]
   44af9:	call   9ce0 <free@plt>
   44afe:	mov    rdi,QWORD PTR [rbx+0x140]
   44b05:	call   9ce0 <free@plt>
   44b0a:	mov    rdi,QWORD PTR [rbx+0x190]
   44b11:	call   9ce0 <free@plt>
   44b16:	mov    rdi,QWORD PTR [rbx+0x168]
   44b1d:	test   rdi,rdi
   44b20:	je     44cc7 <argp_usage@@Base+0x1947>
   44b26:	xor    esi,esi
   44b28:	call   4cbf0 <_obstack_free@@Base>
   44b2d:	mov    rbx,QWORD PTR [rsp+0x8]
   44b32:	mov    rdi,QWORD PTR [rbx+0x168]
   44b39:	call   9ce0 <free@plt>
   44b3e:	mov    QWORD PTR [rbx+0x168],0x0
   44b49:	mov    rax,QWORD PTR [rsp+0x8]
   44b4e:	mov    r12,QWORD PTR [rax+0x1b0]
   44b55:	mov    QWORD PTR [rax+0x178],0x0
   44b60:	mov    QWORD PTR [rax+0x170],0x0
   44b6b:	test   r12,r12
   44b6e:	je     44c86 <argp_usage@@Base+0x1906>
   44b74:	nop    DWORD PTR [rax+0x0]
   44b78:	mov    rax,r12
   44b7b:	mov    QWORD PTR [rsp],r12
   44b7f:	mov    r12,QWORD PTR [r12]
   44b83:	mov    r13,QWORD PTR [rax+0x18]
   44b87:	mov    rbp,QWORD PTR [r13+0x0]
   44b8b:	test   rbp,rbp
   44b8e:	je     44c3e <argp_usage@@Base+0x18be>
   44b94:	nop    DWORD PTR [rax+0x0]
   44b98:	mov    r14,rbp
   44b9b:	mov    rbp,QWORD PTR [rbp+0x0]
   44b9f:	mov    eax,DWORD PTR [r14+0x8]
   44ba3:	test   eax,eax
   44ba5:	je     44ca8 <argp_usage@@Base+0x1928>
   44bab:	cmp    eax,0x1
   44bae:	jne    44c2d <argp_usage@@Base+0x18ad>
   44bb0:	cmp    QWORD PTR [r14+0x20],0x0
   44bb5:	mov    rdi,QWORD PTR [r14+0x10]
   44bb9:	je     44c28 <argp_usage@@Base+0x18a8>
   44bbb:	xor    r15d,r15d
   44bbe:	jmp    44bca <argp_usage@@Base+0x184a>
   44bc0:	add    r15,0x1
   44bc4:	cmp    r15,QWORD PTR [r14+0x20]
   44bc8:	jae    44c28 <argp_usage@@Base+0x18a8>
   44bca:	lea    rdx,[r15+r15*8]
   44bce:	lea    rbx,[rdi+rdx*8]
   44bd2:	test   DWORD PTR [rbx],0x8000000
   44bd8:	je     44bc0 <argp_usage@@Base+0x1840>
   44bda:	mov    rdi,QWORD PTR [rbx+0x8]
   44bde:	test   rdi,rdi
   44be1:	je     44be8 <argp_usage@@Base+0x1868>
   44be3:	call   4e8a0 <_obstack_memory_used@@Base+0x1c20>
   44be8:	mov    QWORD PTR [rbx+0x8],0x0
   44bf0:	mov    rdi,QWORD PTR [rbx+0x28]
   44bf4:	add    r15,0x1
   44bf8:	mov    QWORD PTR [rbx+0x10],0x0
   44c00:	call   9ce0 <free@plt>
   44c05:	mov    QWORD PTR [rbx+0x28],0x0
   44c0d:	mov    rdi,QWORD PTR [rbx+0x30]
   44c11:	call   9ce0 <free@plt>
   44c16:	mov    QWORD PTR [rbx+0x30],0x0
   44c1e:	mov    rdi,QWORD PTR [r14+0x10]
   44c22:	cmp    r15,QWORD PTR [r14+0x20]
   44c26:	jb     44bca <argp_usage@@Base+0x184a>
   44c28:	call   9ce0 <free@plt>
   44c2d:	mov    rdi,r14
   44c30:	call   9ce0 <free@plt>
   44c35:	test   rbp,rbp
   44c38:	jne    44b98 <argp_usage@@Base+0x1818>
   44c3e:	mov    rbx,QWORD PTR [r13+0x8]
   44c42:	test   rbx,rbx
   44c45:	je     44c6c <argp_usage@@Base+0x18ec>
   44c47:	nop    WORD PTR [rax+rax*1+0x0]
   44c50:	mov    rbp,rbx
   44c53:	mov    rbx,QWORD PTR [rbx]
   44c56:	mov    rdi,QWORD PTR [rbp+0x8]
   44c5a:	call   9ce0 <free@plt>
   44c5f:	mov    rdi,rbp
   44c62:	call   9ce0 <free@plt>
   44c67:	test   rbx,rbx
   44c6a:	jne    44c50 <argp_usage@@Base+0x18d0>
   44c6c:	mov    rdi,r13
   44c6f:	call   9ce0 <free@plt>
   44c74:	mov    rdi,QWORD PTR [rsp]
   44c78:	call   9ce0 <free@plt>
   44c7d:	test   r12,r12
   44c80:	jne    44b78 <argp_usage@@Base+0x17f8>
   44c86:	mov    rdi,QWORD PTR [rsp+0x8]
   44c8b:	mov    ecx,0x37
   44c90:	xor    eax,eax
   44c92:	rep stos QWORD PTR es:[rdi],rax
   44c95:	add    rsp,0x18
   44c99:	pop    rbx
   44c9a:	pop    rbp
   44c9b:	pop    r12
   44c9d:	pop    r13
   44c9f:	pop    r14
   44ca1:	pop    r15
   44ca3:	ret    
   44ca4:	nop    DWORD PTR [rax+0x0]
   44ca8:	mov    rdi,QWORD PTR [r14+0x10]
   44cac:	call   48e30 <argp_usage@@Base+0x5ab0>
   44cb1:	mov    rdi,r14
   44cb4:	call   9ce0 <free@plt>
   44cb9:	test   rbp,rbp
   44cbc:	jne    44b98 <argp_usage@@Base+0x1818>
   44cc2:	jmp    44c3e <argp_usage@@Base+0x18be>
   44cc7:	mov    rax,QWORD PTR [rsp+0x8]
   44ccc:	mov    rdi,QWORD PTR [rax+0x178]
   44cd3:	call   9ce0 <free@plt>
   44cd8:	jmp    44b49 <argp_usage@@Base+0x17c9>
   44cdd:	nop    DWORD PTR [rax]
   44ce0:	endbr64 
   44ce4:	push   r15
   44ce6:	push   r14
   44ce8:	push   r13
   44cea:	push   r12
   44cec:	push   rbp
   44ced:	push   rbx
   44cee:	sub    rsp,0x218
   44cf5:	mov    rax,QWORD PTR fs:0x28
   44cfe:	mov    QWORD PTR [rsp+0x208],rax
   44d06:	xor    eax,eax
   44d08:	call   2c400 <__sprintf_chk@plt+0x21a50>
   44d0d:	mov    edi,0x2
   44d12:	call   10ec0 <__sprintf_chk@plt+0x6510>
   44d17:	cmp    QWORD PTR [rip+0x3aa99],0x0        # 7f7b8 <obstack_alloc_failed_handler@@Base+0x980>
   44d1f:	jne    45481 <argp_usage@@Base+0x2101>
   44d25:	lea    rax,[rsp+0x50]
   44d2a:	xor    r14d,r14d
   44d2d:	lea    rbp,[rip+0x3a5ec]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   44d34:	mov    QWORD PTR [rsp+0x8],rax
   44d39:	lea    r12,[rip+0x3a388]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   44d40:	lea    rbx,[rip+0x27391]        # 6c0d8 <_obstack_memory_used@@Base+0x1f458>
   44d47:	lea    r13,[rip+0x3a55a]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   44d4e:	xchg   ax,ax
   44d50:	xor    edx,edx
   44d52:	mov    rsi,rbp
   44d55:	mov    rdi,r12
   44d58:	call   2ab30 <__sprintf_chk@plt+0x20180>
   44d5d:	mov    r15d,eax
   44d60:	cmp    eax,0x5
   44d63:	ja     44fbf <argp_usage@@Base+0x1c3f>
   44d69:	mov    eax,eax
   44d6b:	movsxd rax,DWORD PTR [rbx+rax*4]
   44d6f:	add    rax,rbx
   44d72:	notrack jmp rax
   44d75:	mov    rdi,rbp
   44d78:	call   44a50 <argp_usage@@Base+0x16d0>
   44d7d:	cmp    BYTE PTR [rip+0x3a7b0],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   44d84:	jne    44e78 <argp_usage@@Base+0x1af8>
   44d8a:	mov    rax,QWORD PTR [rip+0x3a7af]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   44d91:	mov    BYTE PTR [rip+0x3a760],0x1        # 7f4f8 <obstack_alloc_failed_handler@@Base+0x6c0>
   44d98:	xor    ebx,ebx
   44d9a:	mov    QWORD PTR [rip+0x3a73f],rax        # 7f4e0 <obstack_alloc_failed_handler@@Base+0x6a8>
   44da1:	nop    DWORD PTR [rax+0x0]
   44da8:	call   32220 <__sprintf_chk@plt+0x27870>
   44dad:	test   rax,rax
   44db0:	je     44e19 <argp_usage@@Base+0x1a99>
   44db2:	mov    r12,QWORD PTR [rax+0x10]
   44db6:	mov    rax,QWORD PTR [rip+0x3aa2b]        # 7f7e8 <obstack_alloc_failed_handler@@Base+0x9b0>
   44dbd:	mov    rdi,QWORD PTR [rax]
   44dc0:	mov    rsi,r12
   44dc3:	call   61510 <_obstack_memory_used@@Base+0x14890>
   44dc8:	test   al,al
   44dca:	jne    44da8 <argp_usage@@Base+0x1a28>
   44dcc:	cmp    BYTE PTR [rip+0x3a9cd],0x0        # 7f7a0 <obstack_alloc_failed_handler@@Base+0x968>
   44dd3:	jne    44fcf <argp_usage@@Base+0x1c4f>
   44dd9:	cmp    DWORD PTR [rip+0x3a798],0x2        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   44de0:	je     44ff3 <argp_usage@@Base+0x1c73>
   44de6:	lea    rbp,[rsp+0x50]
   44deb:	mov    rax,rbx
   44dee:	mov    ecx,0x37
   44df3:	mov    rdx,r12
   44df6:	mov    rdi,rbp
   44df9:	mov    rsi,r12
   44dfc:	rep stos QWORD PTR es:[rdi],rax
   44dff:	mov    rdi,rbp
   44e02:	call   1d5e0 <__sprintf_chk@plt+0x12c30>
   44e07:	mov    rdi,rbp
   44e0a:	call   44a50 <argp_usage@@Base+0x16d0>
   44e0f:	call   32220 <__sprintf_chk@plt+0x27870>
   44e14:	test   rax,rax
   44e17:	jne    44db2 <argp_usage@@Base+0x1a32>
   44e19:	call   107c0 <__sprintf_chk@plt+0x5e10>
   44e1e:	call   14a80 <__sprintf_chk@plt+0xa0d0>
   44e23:	call   3be20 <__sprintf_chk@plt+0x31470>
   44e28:	mov    rax,QWORD PTR [rsp+0x208]
   44e30:	sub    rax,QWORD PTR fs:0x28
   44e39:	jne    45407 <argp_usage@@Base+0x2087>
   44e3f:	add    rsp,0x218
   44e46:	pop    rbx
   44e47:	pop    rbp
   44e48:	pop    r12
   44e4a:	pop    r13
   44e4c:	pop    r14
   44e4e:	pop    r15
   44e50:	jmp    2c7b0 <__sprintf_chk@plt+0x21e00>
   44e55:	mov    rax,QWORD PTR [rip+0x3a26c]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   44e5c:	mov    rdi,rbp
   44e5f:	mov    QWORD PTR [rip+0x3a6da],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   44e66:	call   44a50 <argp_usage@@Base+0x16d0>
   44e6b:	cmp    BYTE PTR [rip+0x3a6c2],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   44e72:	je     44d8a <argp_usage@@Base+0x1a0a>
   44e78:	movsxd rdx,DWORD PTR [rip+0x3a6b1]        # 7f530 <obstack_alloc_failed_handler@@Base+0x6f8>
   44e7f:	mov    rax,QWORD PTR [rip+0x3a702]        # 7f588 <obstack_alloc_failed_handler@@Base+0x750>
   44e86:	mov    BYTE PTR [rip+0x3a6a7],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   44e8d:	mov    DWORD PTR [rip+0x3a665],0x1        # 7f4fc <obstack_alloc_failed_handler@@Base+0x6c4>
   44e97:	shl    rdx,0x9
   44e9b:	mov    QWORD PTR [rip+0x3a69e],rax        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   44ea2:	add    rax,rdx
   44ea5:	mov    QWORD PTR [rip+0x3a6d4],rax        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   44eac:	jmp    44d8a <argp_usage@@Base+0x1a0a>
   44eb1:	mov    rax,QWORD PTR [rip+0x3a210]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   44eb8:	mov    rdx,QWORD PTR [rip+0x3a681]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   44ebf:	cmp    rax,rdx
   44ec2:	jb     44edc <argp_usage@@Base+0x1b5c>
   44ec4:	sub    rax,rdx
   44ec7:	and    rax,0xfffffffffffffe00
   44ecd:	lea    rdx,[rdx+rax*1+0x200]
   44ed5:	mov    QWORD PTR [rip+0x3a664],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   44edc:	cmp    QWORD PTR [rip+0x3a69d],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   44ee3:	jb     aab8 <__sprintf_chk@plt+0x108>
   44ee9:	cmp    r14d,0x1
   44eed:	je     44f24 <argp_usage@@Base+0x1ba4>
   44eef:	ja     45115 <argp_usage@@Base+0x1d95>
   44ef5:	mov    rax,QWORD PTR [rip+0x3a60c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   44efc:	test   rax,rax
   44eff:	je     44f03 <argp_usage@@Base+0x1b83>
   44f01:	call   rax
   44f03:	mov    edx,0x5
   44f08:	lea    rsi,[rip+0x1e9d9]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   44f0f:	xor    edi,edi
   44f11:	call   a040 <dcgettext@plt>
   44f16:	xor    esi,esi
   44f18:	xor    edi,edi
   44f1a:	mov    rdx,rax
   44f1d:	xor    eax,eax
   44f1f:	call   a640 <error@plt>
   44f24:	mov    rax,QWORD PTR [rip+0x3a5dd]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   44f2b:	test   rax,rax
   44f2e:	je     44f32 <argp_usage@@Base+0x1bb2>
   44f30:	call   rax
   44f32:	mov    edx,0x5
   44f37:	lea    rsi,[rip+0x20170]        # 650ae <_obstack_memory_used@@Base+0x1842e>
   44f3e:	xor    edi,edi
   44f40:	mov    r14d,r15d
   44f43:	call   a040 <dcgettext@plt>
   44f48:	xor    esi,esi
   44f4a:	xor    edi,edi
   44f4c:	mov    rdx,rax
   44f4f:	xor    eax,eax
   44f51:	call   a640 <error@plt>
   44f56:	mov    rdi,rbp
   44f59:	mov    DWORD PTR [rip+0x3a161],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   44f63:	call   44a50 <argp_usage@@Base+0x16d0>
   44f68:	jmp    44d50 <argp_usage@@Base+0x19d0>
   44f6d:	mov    rdi,QWORD PTR [rip+0x3a154]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   44f74:	xor    ecx,ecx
   44f76:	mov    rdx,r13
   44f79:	mov    rsi,rbp
   44f7c:	call   28710 <__sprintf_chk@plt+0x1dd60>
   44f81:	mov    rax,QWORD PTR [rip+0x3a140]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   44f88:	movsx  edi,BYTE PTR [rax+0x9c]
   44f8f:	cmp    edi,0x56
   44f92:	je     44f99 <argp_usage@@Base+0x1c19>
   44f94:	call   58610 <_obstack_memory_used@@Base+0xb990>
   44f99:	mov    eax,DWORD PTR [rip+0x3a309]        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   44f9f:	cmp    DWORD PTR [rip+0x3a5d2],0x8        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   44fa6:	mov    DWORD PTR [rip+0x3a2f8],eax        # 7f2a4 <obstack_alloc_failed_handler@@Base+0x46c>
   44fac:	je     451e8 <argp_usage@@Base+0x1e68>
   44fb2:	cmp    BYTE PTR [rip+0x3a4f0],0x0        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   44fb9:	je     451bf <argp_usage@@Base+0x1e3f>
   44fbf:	mov    rdi,rbp
   44fc2:	mov    r14d,r15d
   44fc5:	call   44a50 <argp_usage@@Base+0x16d0>
   44fca:	jmp    44d50 <argp_usage@@Base+0x19d0>
   44fcf:	mov    rsi,r12
   44fd2:	lea    rdi,[rip+0x1f36d]        # 64346 <_obstack_memory_used@@Base+0x176c6>
   44fd9:	call   33f00 <__sprintf_chk@plt+0x29550>
   44fde:	test   eax,eax
   44fe0:	je     44da8 <argp_usage@@Base+0x1a28>
   44fe6:	cmp    DWORD PTR [rip+0x3a58b],0x2        # 7f578 <obstack_alloc_failed_handler@@Base+0x740>
   44fed:	jne    44de6 <argp_usage@@Base+0x1a66>
   44ff3:	mov    edi,DWORD PTR [rip+0x37027]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   44ff9:	xor    edx,edx
   44ffb:	mov    rsi,r12
   44ffe:	xor    eax,eax
   45000:	call   a080 <openat@plt>
   45005:	mov    ebp,eax
   45007:	test   eax,eax
   45009:	js     451d4 <argp_usage@@Base+0x1e54>
   4500f:	lea    rsi,[rsp+0x50]
   45014:	mov    edi,eax
   45016:	call   a920 <fstat@plt>
   4501b:	test   eax,eax
   4501d:	jne    4518d <argp_usage@@Base+0x1e0d>
   45023:	mov    r15,QWORD PTR [rsp+0x80]
   4502b:	mov    rax,QWORD PTR [rip+0x3a54e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   45032:	jmp    450c1 <argp_usage@@Base+0x1d41>
   45037:	nop    WORD PTR [rax+rax*1+0x0]
   45040:	sub    rax,r13
   45043:	mov    r14,rax
   45046:	cmp    r15,rax
   45049:	jae    4505d <argp_usage@@Base+0x1cdd>
   4504b:	mov    rdx,r15
   4504e:	mov    r14,r15
   45051:	and    edx,0x1ff
   45057:	jne    45130 <argp_usage@@Base+0x1db0>
   4505d:	mov    rdx,r14
   45060:	mov    rsi,r13
   45063:	mov    edi,ebp
   45065:	call   4b7c0 <argp_usage@@Base+0x8440>
   4506a:	cmp    rax,0xffffffffffffffff
   4506e:	je     4540c <argp_usage@@Base+0x208c>
   45074:	test   rax,rax
   45077:	je     45388 <argp_usage@@Base+0x2008>
   4507d:	sub    r15,rax
   45080:	sub    rax,0x1
   45084:	mov    rdx,QWORD PTR [rip+0x3a4b5]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   4508b:	and    rax,0xfffffffffffffe00
   45091:	add    rax,r13
   45094:	cmp    rdx,rax
   45097:	ja     450b1 <argp_usage@@Base+0x1d31>
   45099:	sub    rax,rdx
   4509c:	and    rax,0xfffffffffffffe00
   450a2:	lea    rdx,[rdx+rax*1+0x200]
   450aa:	mov    QWORD PTR [rip+0x3a48f],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   450b1:	mov    rax,QWORD PTR [rip+0x3a4c8]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   450b8:	cmp    rax,rdx
   450bb:	jb     aab8 <__sprintf_chk@plt+0x108>
   450c1:	test   r15,r15
   450c4:	jle    4519c <argp_usage@@Base+0x1e1c>
   450ca:	mov    r13,QWORD PTR [rip+0x3a46f]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   450d1:	cmp    rax,r13
   450d4:	jne    45040 <argp_usage@@Base+0x1cc0>
   450da:	xor    r13d,r13d
   450dd:	cmp    BYTE PTR [rip+0x3a450],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   450e4:	jne    45040 <argp_usage@@Base+0x1cc0>
   450ea:	call   f170 <__sprintf_chk@plt+0x47c0>
   450ef:	mov    r13,QWORD PTR [rip+0x3a44a]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   450f6:	mov    rax,QWORD PTR [rip+0x3a483]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   450fd:	cmp    r13,rax
   45100:	jne    45040 <argp_usage@@Base+0x1cc0>
   45106:	mov    BYTE PTR [rip+0x3a427],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   4510d:	xor    r13d,r13d
   45110:	jmp    45040 <argp_usage@@Base+0x1cc0>
   45115:	cmp    r14d,0x3
   45119:	je     44f24 <argp_usage@@Base+0x1ba4>
   4511f:	cmp    r14d,0x4
   45123:	jne    44fbf <argp_usage@@Base+0x1c3f>
   45129:	jmp    aab8 <__sprintf_chk@plt+0x108>
   4512e:	xchg   ax,ax
   45130:	mov    eax,0x200
   45135:	sub    rax,rdx
   45138:	lea    rdx,[r13+r15*1+0x0]
   4513d:	cmp    eax,0x8
   45140:	jae    45161 <argp_usage@@Base+0x1de1>
   45142:	test   al,0x4
   45144:	jne    452b0 <argp_usage@@Base+0x1f30>
   4514a:	test   eax,eax
   4514c:	je     45159 <argp_usage@@Base+0x1dd9>
   4514e:	mov    BYTE PTR [rdx],0x0
   45151:	test   al,0x2
   45153:	jne    452c5 <argp_usage@@Base+0x1f45>
   45159:	mov    r14,r15
   4515c:	jmp    4505d <argp_usage@@Base+0x1cdd>
   45161:	lea    rdi,[rdx+0x8]
   45165:	mov    ecx,eax
   45167:	mov    QWORD PTR [rdx],0x0
   4516e:	mov    QWORD PTR [rdx+rcx*1-0x8],0x0
   45177:	and    rdi,0xfffffffffffffff8
   4517b:	sub    rdx,rdi
   4517e:	add    eax,edx
   45180:	shr    eax,0x3
   45183:	mov    ecx,eax
   45185:	mov    rax,rbx
   45188:	rep stos QWORD PTR es:[rdi],rax
   4518b:	jmp    45159 <argp_usage@@Base+0x1dd9>
   4518d:	mov    rsi,r12
   45190:	lea    rdi,[rip+0x1deac]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   45197:	call   3bad0 <__sprintf_chk@plt+0x31120>
   4519c:	mov    edi,ebp
   4519e:	call   a200 <close@plt>
   451a3:	test   eax,eax
   451a5:	je     44da8 <argp_usage@@Base+0x1a28>
   451ab:	mov    rsi,r12
   451ae:	lea    rdi,[rip+0x218a7]        # 66a5c <_obstack_memory_used@@Base+0x19ddc>
   451b5:	call   3bad0 <__sprintf_chk@plt+0x31120>
   451ba:	jmp    44da8 <argp_usage@@Base+0x1a28>
   451bf:	call   25260 <__sprintf_chk@plt+0x1a8b0>
   451c4:	mov    rdi,rbp
   451c7:	mov    r14d,r15d
   451ca:	call   44a50 <argp_usage@@Base+0x16d0>
   451cf:	jmp    44d50 <argp_usage@@Base+0x19d0>
   451d4:	mov    rsi,r12
   451d7:	lea    rdi,[rip+0x1dfe2]        # 631c0 <_obstack_memory_used@@Base+0x16540>
   451de:	call   3bad0 <__sprintf_chk@plt+0x31120>
   451e3:	jmp    44da8 <argp_usage@@Base+0x1a28>
   451e8:	mov    rdi,QWORD PTR [rip+0x3a139]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   451ef:	call   32190 <__sprintf_chk@plt+0x277e0>
   451f4:	mov    r14,rax
   451f7:	test   rax,rax
   451fa:	je     44fb2 <argp_usage@@Base+0x1c32>
   45200:	mov    edi,DWORD PTR [rax+0x28]
   45203:	cmp    edi,DWORD PTR [rip+0x3a5bf]        # 7f7c8 <obstack_alloc_failed_handler@@Base+0x990>
   45209:	je     45210 <argp_usage@@Base+0x1e90>
   4520b:	call   26d40 <__sprintf_chk@plt+0x1c390>
   45210:	mov    ecx,DWORD PTR [rip+0x39d5e]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   45216:	mov    rdx,QWORD PTR [rsp+0x8]
   4521b:	mov    rsi,QWORD PTR [rip+0x3a106]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   45222:	mov    edi,DWORD PTR [rip+0x36df8]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   45228:	call   a960 <fstatat@plt>
   4522d:	test   eax,eax
   4522f:	jne    44fb2 <argp_usage@@Base+0x1c32>
   45235:	mov    eax,DWORD PTR [rsp+0x68]
   45239:	and    eax,0xf000
   4523e:	cmp    eax,0x4000
   45243:	je     452d3 <argp_usage@@Base+0x1f53>
   45249:	mov    rcx,QWORD PTR [rip+0x3a1d0]        # 7f420 <obstack_alloc_failed_handler@@Base+0x5e8>
   45250:	xor    edx,edx
   45252:	mov    rax,QWORD PTR [rsp+0xb0]
   4525a:	cmp    DWORD PTR [rip+0x3a047],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   45261:	mov    rsi,QWORD PTR [rip+0x3a1b0]        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   45268:	cmovne rcx,rdx
   4526c:	cmovne rax,rdx
   45270:	xor    edx,edx
   45272:	cmp    QWORD PTR [rsp+0xa8],rsi
   4527a:	setl   sil
   4527e:	setg   dl
   45281:	movzx  esi,sil
   45285:	sub    edx,esi
   45287:	cmp    rcx,rax
   4528a:	setl   al
   4528d:	setg   cl
   45290:	movzx  eax,al
   45293:	movzx  ecx,cl
   45296:	sub    eax,ecx
   45298:	lea    eax,[rax+rdx*2]
   4529b:	test   eax,eax
   4529d:	jg     44fb2 <argp_usage@@Base+0x1c32>
   452a3:	mov    rdi,r14
   452a6:	call   29430 <__sprintf_chk@plt+0x1ea80>
   452ab:	jmp    44fb2 <argp_usage@@Base+0x1c32>
   452b0:	mov    eax,eax
   452b2:	mov    DWORD PTR [rdx],0x0
   452b8:	mov    DWORD PTR [rdx+rax*1-0x4],0x0
   452c0:	jmp    45159 <argp_usage@@Base+0x1dd9>
   452c5:	mov    eax,eax
   452c7:	mov    WORD PTR [rdx+rax*1-0x2],0x0
   452ce:	jmp    45159 <argp_usage@@Base+0x1dd9>
   452d3:	mov    rdi,QWORD PTR [r14+0x10]
   452d7:	mov    esi,0x1
   452dc:	call   26ae0 <__sprintf_chk@plt+0x1c130>
   452e1:	mov    QWORD PTR [rsp+0x10],rax
   452e6:	test   rax,rax
   452e9:	je     44fb2 <argp_usage@@Base+0x1c32>
   452ef:	mov    rdi,QWORD PTR [r14+0x10]
   452f3:	call   269a0 <__sprintf_chk@plt+0x1bff0>
   452f8:	mov    r10,QWORD PTR [rsp+0x10]
   452fd:	mov    r8,r14
   45300:	mov    DWORD PTR [rsp+0x18],r15d
   45305:	mov    r9,rax
   45308:	mov    r14,r10
   4530b:	jmp    4534c <argp_usage@@Base+0x1fcc>
   4530d:	mov    r15d,DWORD PTR [r8+0x28]
   45311:	mov    rdi,r9
   45314:	mov    rsi,r14
   45317:	mov    QWORD PTR [rsp+0x28],r8
   4531c:	mov    QWORD PTR [rsp+0x20],r9
   45321:	call   26a20 <__sprintf_chk@plt+0x1c070>
   45326:	xor    ecx,ecx
   45328:	xor    edx,edx
   4532a:	mov    esi,r15d
   4532d:	mov    rdi,rax
   45330:	call   29300 <__sprintf_chk@plt+0x1e950>
   45335:	mov    rdi,r14
   45338:	call   a060 <strlen@plt>
   4533d:	mov    r8,QWORD PTR [rsp+0x28]
   45342:	mov    r9,QWORD PTR [rsp+0x20]
   45347:	lea    r14,[r14+rax*1+0x1]
   4534c:	cmp    BYTE PTR [r14],0x0
   45350:	jne    4530d <argp_usage@@Base+0x1f8d>
   45352:	mov    rdi,QWORD PTR [r9]
   45355:	mov    r14,r8
   45358:	mov    r15d,DWORD PTR [rsp+0x18]
   4535d:	mov    QWORD PTR [rsp+0x18],r9
   45362:	call   9ce0 <free@plt>
   45367:	mov    rdi,QWORD PTR [rsp+0x18]
   4536c:	call   9ce0 <free@plt>
   45371:	mov    rdi,QWORD PTR [rsp+0x10]
   45376:	call   9ce0 <free@plt>
   4537b:	mov    rdi,r14
   4537e:	call   29430 <__sprintf_chk@plt+0x1ea80>
   45383:	jmp    44fb2 <argp_usage@@Base+0x1c32>
   45388:	mov    rax,QWORD PTR [rip+0x3a179]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   4538f:	test   rax,rax
   45392:	je     45396 <argp_usage@@Base+0x2016>
   45394:	call   rax
   45396:	mov    BYTE PTR [rsp+0x44],0x0
   4539b:	mov    rcx,r15
   4539e:	lea    rbx,[rsp+0x44]
   453a3:	mov    esi,0xa
   453a8:	mov    rax,rcx
   453ab:	xor    edx,edx
   453ad:	sub    rbx,0x1
   453b1:	div    rsi
   453b4:	add    edx,0x30
   453b7:	mov    BYTE PTR [rbx],dl
   453b9:	mov    rdx,rcx
   453bc:	mov    rcx,rax
   453bf:	cmp    rdx,0x9
   453c3:	ja     453a8 <argp_usage@@Base+0x2028>
   453c5:	mov    rdi,r12
   453c8:	call   4b670 <argp_usage@@Base+0x82f0>
   453cd:	mov    r8d,0x5
   453d3:	mov    rcx,r15
   453d6:	xor    edi,edi
   453d8:	lea    rdx,[rip+0x26aee]        # 6becd <_obstack_memory_used@@Base+0x1f24d>
   453df:	lea    rsi,[rip+0x26b03]        # 6bee9 <_obstack_memory_used@@Base+0x1f269>
   453e6:	mov    r12,rax
   453e9:	call   a6e0 <dcngettext@plt>
   453ee:	mov    r8,rbx
   453f1:	mov    rcx,r12
   453f4:	xor    esi,esi
   453f6:	mov    rdx,rax
   453f9:	xor    edi,edi
   453fb:	xor    eax,eax
   453fd:	call   a640 <error@plt>
   45402:	call   190e0 <__sprintf_chk@plt+0xe730>
   45407:	call   a0a0 <__stack_chk_fail@plt>
   4540c:	call   9e40 <__errno_location@plt>
   45411:	mov    r13,QWORD PTR [rsp+0x80]
   45419:	mov    ebp,DWORD PTR [rax]
   4541b:	mov    rax,QWORD PTR [rip+0x3a0e6]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   45422:	sub    r13,r15
   45425:	test   rax,rax
   45428:	je     4542c <argp_usage@@Base+0x20ac>
   4542a:	call   rax
   4542c:	lea    rsi,[rsp+0x30]
   45431:	mov    rdi,r13
   45434:	call   49530 <argp_usage@@Base+0x61b0>
   45439:	mov    rdi,r12
   4543c:	mov    rbx,rax
   4543f:	call   4b670 <argp_usage@@Base+0x82f0>
   45444:	mov    r8d,0x5
   4544a:	mov    rcx,r14
   4544d:	xor    edi,edi
   4544f:	lea    rdx,[rip+0x20142]        # 65598 <_obstack_memory_used@@Base+0x18918>
   45456:	lea    rsi,[rip+0x20173]        # 655d0 <_obstack_memory_used@@Base+0x18950>
   4545d:	mov    r12,rax
   45460:	call   a6e0 <dcngettext@plt>
   45465:	mov    r9,r14
   45468:	mov    r8,rbx
   4546b:	mov    rcx,r12
   4546e:	mov    rdx,rax
   45471:	mov    esi,ebp
   45473:	xor    edi,edi
   45475:	xor    eax,eax
   45477:	call   a640 <error@plt>
   4547c:	call   190e0 <__sprintf_chk@plt+0xe730>
   45481:	mov    rax,QWORD PTR [rip+0x3a080]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   45488:	test   rax,rax
   4548b:	je     4548f <argp_usage@@Base+0x210f>
   4548d:	call   rax
   4548f:	mov    edx,0x5
   45494:	lea    rsi,[rip+0x265a5]        # 6ba40 <_obstack_memory_used@@Base+0x1edc0>
   4549b:	xor    edi,edi
   4549d:	call   a040 <dcgettext@plt>
   454a2:	xor    esi,esi
   454a4:	xor    edi,edi
   454a6:	mov    rdx,rax
   454a9:	xor    eax,eax
   454ab:	call   a640 <error@plt>
   454b0:	call   5d3f0 <_obstack_memory_used@@Base+0x10770>
   454b5:	cs nop WORD PTR [rax+rax*1+0x0]
   454bf:	nop
   454c0:	endbr64 
   454c4:	movzx  ecx,BYTE PTR [rdi]
   454c7:	xor    edx,edx
   454c9:	test   cl,cl
   454cb:	je     454ed <argp_usage@@Base+0x216d>
   454cd:	nop    DWORD PTR [rax]
   454d0:	mov    rax,rdx
   454d3:	add    rdi,0x1
   454d7:	shl    rax,0x5
   454db:	sub    rax,rdx
   454de:	xor    edx,edx
   454e0:	add    rax,rcx
   454e3:	movzx  ecx,BYTE PTR [rdi]
   454e6:	div    rsi
   454e9:	test   cl,cl
   454eb:	jne    454d0 <argp_usage@@Base+0x2150>
   454ed:	mov    rax,rdx
   454f0:	ret    
   454f1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   454fc:	nop    DWORD PTR [rax+0x0]
   45500:	endbr64 
   45504:	jmp    QWORD PTR [rcx]
   45506:	cs nop WORD PTR [rax+rax*1+0x0]
   45510:	endbr64 
   45514:	mov    rax,rdi
   45517:	xor    edx,edx
   45519:	ror    rax,0x3
   4551d:	div    rsi
   45520:	mov    rax,rdx
   45523:	ret    
   45524:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4552f:	nop
   45530:	endbr64 
   45534:	cmp    rsi,rdi
   45537:	sete   al
   4553a:	ret    
   4553b:	nop    DWORD PTR [rax+rax*1+0x0]
   45540:	mov    rax,rdi
   45543:	mov    rdi,rsi
   45546:	movsx  esi,dl
   45549:	sub    esi,0x41
   4554c:	movzx  r8d,BYTE PTR [rax+0x7]
   45551:	cmp    esi,0x19
   45554:	ja     45610 <argp_usage@@Base+0x2290>
   4555a:	and    r8d,0xffffffdf
   4555e:	cmp    r8b,dl
   45561:	sete   sil
   45565:	test   sil,sil
   45568:	je     45578 <argp_usage@@Base+0x21f8>
   4556a:	mov    r8d,0x1
   45570:	test   dl,dl
   45572:	jne    45580 <argp_usage@@Base+0x2200>
   45574:	mov    eax,r8d
   45577:	ret    
   45578:	xor    r8d,r8d
   4557b:	mov    eax,r8d
   4557e:	ret    
   4557f:	nop
   45580:	movsx  edx,cl
   45583:	movzx  esi,BYTE PTR [rax+0x8]
   45587:	sub    edx,0x41
   4558a:	cmp    edx,0x19
   4558d:	ja     45620 <argp_usage@@Base+0x22a0>
   45593:	and    esi,0xffffffdf
   45596:	cmp    sil,cl
   45599:	sete   dl
   4559c:	test   dl,dl
   4559e:	je     45578 <argp_usage@@Base+0x21f8>
   455a0:	mov    r8d,0x1
   455a6:	test   cl,cl
   455a8:	je     45574 <argp_usage@@Base+0x21f4>
   455aa:	cmp    rax,rdi
   455ad:	je     45574 <argp_usage@@Base+0x21f4>
   455af:	mov    ecx,0x9
   455b4:	jmp    455c9 <argp_usage@@Base+0x2249>
   455b6:	cs nop WORD PTR [rax+rax*1+0x0]
   455c0:	add    rcx,0x1
   455c4:	cmp    dl,sil
   455c7:	jne    455fe <argp_usage@@Base+0x227e>
   455c9:	movzx  r9d,BYTE PTR [rax+rcx*1]
   455ce:	lea    esi,[r9-0x41]
   455d2:	mov    edx,r9d
   455d5:	cmp    esi,0x19
   455d8:	ja     455e1 <argp_usage@@Base+0x2261>
   455da:	add    r9d,0x20
   455de:	add    edx,0x20
   455e1:	movzx  r8d,BYTE PTR [rdi+rcx*1]
   455e6:	lea    r10d,[r8-0x41]
   455ea:	mov    esi,r8d
   455ed:	cmp    r10d,0x19
   455f1:	ja     455fa <argp_usage@@Base+0x227a>
   455f3:	add    r8d,0x20
   455f7:	add    esi,0x20
   455fa:	test   dl,dl
   455fc:	jne    455c0 <argp_usage@@Base+0x2240>
   455fe:	cmp    r9d,r8d
   45601:	sete   r8b
   45605:	movzx  r8d,r8b
   45609:	jmp    45574 <argp_usage@@Base+0x21f4>
   4560e:	xchg   ax,ax
   45610:	cmp    dl,r8b
   45613:	sete   sil
   45617:	jmp    45565 <argp_usage@@Base+0x21e5>
   4561c:	nop    DWORD PTR [rax+0x0]
   45620:	cmp    cl,sil
   45623:	sete   dl
   45626:	jmp    4559c <argp_usage@@Base+0x221c>
   4562b:	nop    DWORD PTR [rax+rax*1+0x0]
   45630:	endbr64 
   45634:	mov    rax,QWORD PTR [rsi+0x8]
   45638:	cmp    QWORD PTR [rdi+0x8],rax
   4563c:	seta   al
   4563f:	movzx  eax,al
   45642:	sbb    eax,0x0
   45645:	ret    
   45646:	cs nop WORD PTR [rax+rax*1+0x0]
   45650:	test   rdi,rdi
   45653:	sete   al
   45656:	test   rsi,rsi
   45659:	sete   dl
   4565c:	or     al,dl
   4565e:	jne    45690 <argp_usage@@Base+0x2310>
   45660:	mov    rdx,QWORD PTR [rdi+0x8]
   45664:	cmp    rdx,QWORD PTR [rsi+0x8]
   45668:	je     45682 <argp_usage@@Base+0x2302>
   4566a:	ret    
   4566b:	nop    DWORD PTR [rax+rax*1+0x0]
   45670:	mov    rcx,QWORD PTR [rsi+0x10]
   45674:	mov    r8,QWORD PTR [rdi+0x10]
   45678:	mov    rcx,QWORD PTR [rcx+rdx*8]
   4567c:	cmp    QWORD PTR [r8+rdx*8],rcx
   45680:	jne    4566a <argp_usage@@Base+0x22ea>
   45682:	sub    rdx,0x1
   45686:	jns    45670 <argp_usage@@Base+0x22f0>
   45688:	mov    eax,0x1
   4568d:	ret    
   4568e:	xchg   ax,ax
   45690:	xor    eax,eax
   45692:	ret    
   45693:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4569e:	xchg   ax,ax
   456a0:	endbr64 
   456a4:	sub    rsp,0x8
   456a8:	call   a4a0 <malloc@plt>
   456ad:	test   rax,rax
   456b0:	je     456b7 <argp_usage@@Base+0x2337>
   456b2:	add    rsp,0x8
   456b6:	ret    
   456b7:	call   19130 <__sprintf_chk@plt+0xe780>
   456bc:	nop    DWORD PTR [rax+0x0]
   456c0:	push   rax
   456c1:	pop    rax
   456c2:	lea    rcx,[rip+0x275f7]        # 6ccc0 <_obstack_memory_used@@Base+0x20040>
   456c9:	mov    edx,0x40
   456ce:	lea    rsi,[rip+0x26b56]        # 6c22b <_obstack_memory_used@@Base+0x1f5ab>
   456d5:	lea    rdi,[rip+0x26b5c]        # 6c238 <_obstack_memory_used@@Base+0x1f5b8>
   456dc:	sub    rsp,0x8
   456e0:	call   a190 <__assert_fail@plt>
   456e5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   456f0:	endbr64 
   456f4:	push   r15
   456f6:	push   r14
   456f8:	push   r13
   456fa:	push   r12
   456fc:	xor    r12d,r12d
   456ff:	push   rbp
   45700:	push   rbx
   45701:	mov    rbx,rsi
   45704:	sub    rsp,0x58
   45708:	mov    rax,QWORD PTR fs:0x28
   45711:	mov    QWORD PTR [rsp+0x48],rax
   45716:	xor    eax,eax
   45718:	mov    QWORD PTR [rsp+0x10],rdi
   4571d:	mov    BYTE PTR [rsp],0x0
   45721:	mov    QWORD PTR [rsp+0x4],0x0
   4572a:	jmp    45757 <argp_usage@@Base+0x23d7>
   4572c:	nop    DWORD PTR [rax+0x0]
   45730:	call   a700 <towlower@plt>
   45735:	movsxd rdx,eax
   45738:	mov    rax,r12
   4573b:	add    r13,QWORD PTR [rsp+0x18]
   45740:	shl    rax,0x5
   45744:	mov    QWORD PTR [rsp+0x10],r13
   45749:	sub    rax,r12
   4574c:	add    rax,rdx
   4574f:	xor    edx,edx
   45751:	div    rbx
   45754:	mov    r12,rdx
   45757:	cmp    BYTE PTR [rsp],0x0
   4575b:	mov    BYTE PTR [rsp+0xc],0x0
   45760:	lea    r14,[rsp+0x4]
   45765:	jne    457e9 <argp_usage@@Base+0x2469>
   4576b:	mov    r13,QWORD PTR [rsp+0x10]
   45770:	lea    rsi,[rip+0x275c9]        # 6cd40 <_obstack_memory_used@@Base+0x200c0>
   45777:	movzx  ecx,BYTE PTR [r13+0x0]
   4577c:	mov    eax,ecx
   4577e:	shr    al,0x5
   45781:	and    eax,0x7
   45784:	mov    eax,DWORD PTR [rsi+rax*4]
   45787:	shr    eax,cl
   45789:	test   al,0x1
   4578b:	je     457d0 <argp_usage@@Base+0x2450>
   4578d:	mov    QWORD PTR [rsp+0x18],0x1
   45796:	movsx  edi,BYTE PTR [r13+0x0]
   4579b:	mov    BYTE PTR [rsp+0x20],0x1
   457a0:	mov    DWORD PTR [rsp+0x24],edi
   457a4:	mov    BYTE PTR [rsp+0xc],0x1
   457a9:	test   edi,edi
   457ab:	je     458b3 <argp_usage@@Base+0x2533>
   457b1:	mov    r13,QWORD PTR [rsp+0x10]
   457b6:	cmp    BYTE PTR [rsp+0x20],0x0
   457bb:	jne    45730 <argp_usage@@Base+0x23b0>
   457c1:	movsx  rdx,BYTE PTR [r13+0x0]
   457c6:	jmp    45738 <argp_usage@@Base+0x23b8>
   457cb:	nop    DWORD PTR [rax+rax*1+0x0]
   457d0:	lea    r14,[rsp+0x4]
   457d5:	mov    rdi,r14
   457d8:	call   a890 <mbsinit@plt>
   457dd:	test   eax,eax
   457df:	je     45946 <argp_usage@@Base+0x25c6>
   457e5:	mov    BYTE PTR [rsp],0x1
   457e9:	call   a050 <__ctype_get_mb_cur_max@plt>
   457ee:	mov    rbp,QWORD PTR [rsp+0x10]
   457f3:	xor    esi,esi
   457f5:	mov    r13,rax
   457f8:	mov    rdx,rax
   457fb:	mov    rdi,rbp
   457fe:	call   a280 <memchr@plt>
   45803:	test   r13,r13
   45806:	setne  r15b
   4580a:	test   rax,rax
   4580d:	je     4581c <argp_usage@@Base+0x249c>
   4580f:	sub    rax,rbp
   45812:	mov    r15d,0x1
   45818:	lea    r13,[rax+0x1]
   4581c:	mov    rdx,r13
   4581f:	lea    rdi,[rsp+0x24]
   45824:	mov    rcx,r14
   45827:	mov    rsi,rbp
   4582a:	call   a0c0 <mbrtowc@plt>
   4582f:	mov    r13,rax
   45832:	cmp    rax,0xfffffffffffffffd
   45836:	jbe    4584a <argp_usage@@Base+0x24ca>
   45838:	test   r15b,r15b
   4583b:	je     4584a <argp_usage@@Base+0x24ca>
   4583d:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   45842:	test   al,al
   45844:	je     45930 <argp_usage@@Base+0x25b0>
   4584a:	mov    QWORD PTR [rsp+0x18],r13
   4584f:	cmp    r13,0xffffffffffffffff
   45853:	je     458e0 <argp_usage@@Base+0x2560>
   45859:	cmp    r13,0xfffffffffffffffe
   4585d:	je     45908 <argp_usage@@Base+0x2588>
   45863:	test   r13,r13
   45866:	jne    4588d <argp_usage@@Base+0x250d>
   45868:	mov    QWORD PTR [rsp+0x18],0x1
   45871:	mov    r13,QWORD PTR [rsp+0x10]
   45876:	cmp    BYTE PTR [r13+0x0],0x0
   4587b:	jne    45984 <argp_usage@@Base+0x2604>
   45881:	mov    eax,DWORD PTR [rsp+0x24]
   45885:	test   eax,eax
   45887:	jne    45965 <argp_usage@@Base+0x25e5>
   4588d:	mov    rdi,r14
   45890:	mov    BYTE PTR [rsp+0x20],0x1
   45895:	call   a890 <mbsinit@plt>
   4589a:	test   eax,eax
   4589c:	je     458a2 <argp_usage@@Base+0x2522>
   4589e:	mov    BYTE PTR [rsp],0x0
   458a2:	mov    edi,DWORD PTR [rsp+0x24]
   458a6:	mov    BYTE PTR [rsp+0xc],0x1
   458ab:	test   edi,edi
   458ad:	jne    457b1 <argp_usage@@Base+0x2431>
   458b3:	mov    rax,QWORD PTR [rsp+0x48]
   458b8:	sub    rax,QWORD PTR fs:0x28
   458c1:	jne    459a3 <argp_usage@@Base+0x2623>
   458c7:	add    rsp,0x58
   458cb:	mov    rax,r12
   458ce:	pop    rbx
   458cf:	pop    rbp
   458d0:	pop    r12
   458d2:	pop    r13
   458d4:	pop    r14
   458d6:	pop    r15
   458d8:	ret    
   458d9:	nop    DWORD PTR [rax+0x0]
   458e0:	mov    edi,DWORD PTR [rsp+0x24]
   458e4:	mov    r13,QWORD PTR [rsp+0x10]
   458e9:	mov    BYTE PTR [rsp+0x20],0x0
   458ee:	mov    QWORD PTR [rsp+0x18],0x1
   458f7:	mov    BYTE PTR [rsp+0xc],0x1
   458fc:	jmp    457b6 <argp_usage@@Base+0x2436>
   45901:	nop    DWORD PTR [rax+0x0]
   45908:	mov    r13,QWORD PTR [rsp+0x10]
   4590d:	mov    rdi,r13
   45910:	call   a060 <strlen@plt>
   45915:	mov    BYTE PTR [rsp+0x20],0x0
   4591a:	mov    edi,DWORD PTR [rsp+0x24]
   4591e:	mov    QWORD PTR [rsp+0x18],rax
   45923:	mov    BYTE PTR [rsp+0xc],0x1
   45928:	jmp    457b6 <argp_usage@@Base+0x2436>
   4592d:	nop    DWORD PTR [rax]
   45930:	movzx  eax,BYTE PTR [rbp+0x0]
   45934:	mov    QWORD PTR [rsp+0x18],0x1
   4593d:	mov    DWORD PTR [rsp+0x24],eax
   45941:	jmp    4588d <argp_usage@@Base+0x250d>
   45946:	lea    rcx,[rip+0x273d3]        # 6cd20 <_obstack_memory_used@@Base+0x200a0>
   4594d:	mov    edx,0x8f
   45952:	lea    rsi,[rip+0x268ec]        # 6c245 <_obstack_memory_used@@Base+0x1f5c5>
   45959:	lea    rdi,[rip+0x268ef]        # 6c24f <_obstack_memory_used@@Base+0x1f5cf>
   45960:	call   a190 <__assert_fail@plt>
   45965:	lea    rcx,[rip+0x273b4]        # 6cd20 <_obstack_memory_used@@Base+0x200a0>
   4596c:	mov    edx,0xac
   45971:	lea    rsi,[rip+0x268cd]        # 6c245 <_obstack_memory_used@@Base+0x1f5c5>
   45978:	lea    rdi,[rip+0x268fe]        # 6c27d <_obstack_memory_used@@Base+0x1f5fd>
   4597f:	call   a190 <__assert_fail@plt>
   45984:	lea    rcx,[rip+0x27395]        # 6cd20 <_obstack_memory_used@@Base+0x200a0>
   4598b:	mov    edx,0xab
   45990:	lea    rsi,[rip+0x268ae]        # 6c245 <_obstack_memory_used@@Base+0x1f5c5>
   45997:	lea    rdi,[rip+0x268c8]        # 6c266 <_obstack_memory_used@@Base+0x1f5e6>
   4599e:	call   a190 <__assert_fail@plt>
   459a3:	call   a0a0 <__stack_chk_fail@plt>
   459a8:	nop    DWORD PTR [rax+rax*1+0x0]
   459b0:	push   r15
   459b2:	push   r14
   459b4:	push   r13
   459b6:	push   r12
   459b8:	lea    r12,[rdi+0x4]
   459bc:	push   rbp
   459bd:	push   rbx
   459be:	mov    rbx,rdi
   459c1:	sub    rsp,0x8
   459c5:	cmp    BYTE PTR [rdi],0x0
   459c8:	jne    45a27 <argp_usage@@Base+0x26a7>
   459ca:	mov    rdx,QWORD PTR [rdi+0x10]
   459ce:	lea    rsi,[rip+0x2736b]        # 6cd40 <_obstack_memory_used@@Base+0x200c0>
   459d5:	movzx  ecx,BYTE PTR [rdx]
   459d8:	mov    eax,ecx
   459da:	shr    al,0x5
   459dd:	and    eax,0x7
   459e0:	mov    eax,DWORD PTR [rsi+rax*4]
   459e3:	shr    eax,cl
   459e5:	test   al,0x1
   459e7:	je     45a10 <argp_usage@@Base+0x2690>
   459e9:	mov    QWORD PTR [rdi+0x18],0x1
   459f1:	movsx  eax,BYTE PTR [rdx]
   459f4:	mov    BYTE PTR [rdi+0x20],0x1
   459f8:	mov    DWORD PTR [rdi+0x24],eax
   459fb:	mov    BYTE PTR [rbx+0xc],0x1
   459ff:	add    rsp,0x8
   45a03:	pop    rbx
   45a04:	pop    rbp
   45a05:	pop    r12
   45a07:	pop    r13
   45a09:	pop    r14
   45a0b:	pop    r15
   45a0d:	ret    
   45a0e:	xchg   ax,ax
   45a10:	lea    r12,[rdi+0x4]
   45a14:	mov    rdi,r12
   45a17:	call   a890 <mbsinit@plt>
   45a1c:	test   eax,eax
   45a1e:	je     45b54 <argp_usage@@Base+0x27d4>
   45a24:	mov    BYTE PTR [rbx],0x1
   45a27:	call   a050 <__ctype_get_mb_cur_max@plt>
   45a2c:	mov    r15,QWORD PTR [rbx+0x10]
   45a30:	xor    esi,esi
   45a32:	mov    r13,rax
   45a35:	mov    rdx,rax
   45a38:	mov    rdi,r15
   45a3b:	call   a280 <memchr@plt>
   45a40:	test   r13,r13
   45a43:	setne  r14b
   45a47:	test   rax,rax
   45a4a:	je     45a59 <argp_usage@@Base+0x26d9>
   45a4c:	sub    rax,r15
   45a4f:	mov    r14d,0x1
   45a55:	lea    r13,[rax+0x1]
   45a59:	lea    rdi,[rbx+0x24]
   45a5d:	mov    rcx,r12
   45a60:	mov    rdx,r13
   45a63:	mov    rsi,r15
   45a66:	call   a0c0 <mbrtowc@plt>
   45a6b:	mov    rbp,rax
   45a6e:	cmp    rax,0xfffffffffffffffd
   45a72:	jbe    45a82 <argp_usage@@Base+0x2702>
   45a74:	test   r14b,r14b
   45a77:	je     45a82 <argp_usage@@Base+0x2702>
   45a79:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   45a7e:	test   al,al
   45a80:	je     45ae8 <argp_usage@@Base+0x2768>
   45a82:	mov    QWORD PTR [rbx+0x18],rbp
   45a86:	cmp    rbp,0xffffffffffffffff
   45a8a:	je     45ad0 <argp_usage@@Base+0x2750>
   45a8c:	cmp    rbp,0xfffffffffffffffe
   45a90:	je     45b00 <argp_usage@@Base+0x2780>
   45a92:	test   rbp,rbp
   45a95:	jne    45ab3 <argp_usage@@Base+0x2733>
   45a97:	mov    rax,QWORD PTR [rbx+0x10]
   45a9b:	mov    QWORD PTR [rbx+0x18],0x1
   45aa3:	cmp    BYTE PTR [rax],0x0
   45aa6:	jne    45b35 <argp_usage@@Base+0x27b5>
   45aac:	mov    eax,DWORD PTR [rbx+0x24]
   45aaf:	test   eax,eax
   45ab1:	jne    45b16 <argp_usage@@Base+0x2796>
   45ab3:	mov    BYTE PTR [rbx+0x20],0x1
   45ab7:	mov    rdi,r12
   45aba:	call   a890 <mbsinit@plt>
   45abf:	test   eax,eax
   45ac1:	je     459fb <argp_usage@@Base+0x267b>
   45ac7:	mov    BYTE PTR [rbx],0x0
   45aca:	jmp    459fb <argp_usage@@Base+0x267b>
   45acf:	nop
   45ad0:	mov    QWORD PTR [rbx+0x18],0x1
   45ad8:	mov    BYTE PTR [rbx+0x20],0x0
   45adc:	jmp    459fb <argp_usage@@Base+0x267b>
   45ae1:	nop    DWORD PTR [rax+0x0]
   45ae8:	movzx  eax,BYTE PTR [r15]
   45aec:	mov    QWORD PTR [rbx+0x18],0x1
   45af4:	mov    DWORD PTR [rbx+0x24],eax
   45af7:	jmp    45ab3 <argp_usage@@Base+0x2733>
   45af9:	nop    DWORD PTR [rax+0x0]
   45b00:	mov    rdi,QWORD PTR [rbx+0x10]
   45b04:	call   a060 <strlen@plt>
   45b09:	mov    BYTE PTR [rbx+0x20],0x0
   45b0d:	mov    QWORD PTR [rbx+0x18],rax
   45b11:	jmp    459fb <argp_usage@@Base+0x267b>
   45b16:	lea    rcx,[rip+0x271c3]        # 6cce0 <_obstack_memory_used@@Base+0x20060>
   45b1d:	mov    edx,0xac
   45b22:	lea    rsi,[rip+0x2671c]        # 6c245 <_obstack_memory_used@@Base+0x1f5c5>
   45b29:	lea    rdi,[rip+0x2674d]        # 6c27d <_obstack_memory_used@@Base+0x1f5fd>
   45b30:	call   a190 <__assert_fail@plt>
   45b35:	lea    rcx,[rip+0x271a4]        # 6cce0 <_obstack_memory_used@@Base+0x20060>
   45b3c:	mov    edx,0xab
   45b41:	lea    rsi,[rip+0x266fd]        # 6c245 <_obstack_memory_used@@Base+0x1f5c5>
   45b48:	lea    rdi,[rip+0x26717]        # 6c266 <_obstack_memory_used@@Base+0x1f5e6>
   45b4f:	call   a190 <__assert_fail@plt>
   45b54:	lea    rcx,[rip+0x27185]        # 6cce0 <_obstack_memory_used@@Base+0x20060>
   45b5b:	mov    edx,0x8f
   45b60:	lea    rsi,[rip+0x266de]        # 6c245 <_obstack_memory_used@@Base+0x1f5c5>
   45b67:	lea    rdi,[rip+0x266e1]        # 6c24f <_obstack_memory_used@@Base+0x1f5cf>
   45b6e:	call   a190 <__assert_fail@plt>
   45b73:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   45b7e:	xchg   ax,ax
   45b80:	endbr64 
   45b84:	sub    rsp,0x8
   45b88:	call   a320 <strcmp@plt>
   45b8d:	test   eax,eax
   45b8f:	sete   al
   45b92:	add    rsp,0x8
   45b96:	ret    
   45b97:	nop    WORD PTR [rax+rax*1+0x0]
   45ba0:	endbr64 
   45ba4:	mov    rsi,QWORD PTR [rsi]
   45ba7:	mov    rdi,QWORD PTR [rdi]
   45baa:	jmp    a320 <strcmp@plt>
   45baf:	nop
   45bb0:	endbr64 
   45bb4:	jmp    9ce0 <free@plt>
   45bb9:	nop    DWORD PTR [rax+0x0]
   45bc0:	push   rbp
   45bc1:	mov    rbp,rdi
   45bc4:	mov    rdi,QWORD PTR [rdi+0x30]
   45bc8:	call   9ce0 <free@plt>
   45bcd:	mov    rdi,QWORD PTR [rbp+0x48]
   45bd1:	call   9ce0 <free@plt>
   45bd6:	mov    rax,QWORD PTR [rbp+0x50]
   45bda:	lea    rdx,[rbp+0x8]
   45bde:	cmp    rax,rdx
   45be1:	je     45bf5 <argp_usage@@Base+0x2875>
   45be3:	mov    rdi,QWORD PTR [rax+0x10]
   45be7:	call   9ce0 <free@plt>
   45bec:	mov    rdi,QWORD PTR [rbp+0x50]
   45bf0:	call   9ce0 <free@plt>
   45bf5:	mov    rdi,QWORD PTR [rbp+0x18]
   45bf9:	call   9ce0 <free@plt>
   45bfe:	mov    rdi,QWORD PTR [rbp+0x60]
   45c02:	call   9ce0 <free@plt>
   45c07:	mov    rdi,QWORD PTR [rbp+0x58]
   45c0b:	call   9ce0 <free@plt>
   45c10:	mov    rdi,rbp
   45c13:	pop    rbp
   45c14:	jmp    9ce0 <free@plt>
   45c19:	nop    DWORD PTR [rax+0x0]
   45c20:	mov    eax,DWORD PTR [rsi+0x30]
   45c23:	push   rbp
   45c24:	and    eax,0x400ff
   45c29:	cmp    eax,0x6
   45c2c:	je     45c40 <argp_usage@@Base+0x28c0>
   45c2e:	cmp    eax,0x3
   45c31:	je     45c78 <argp_usage@@Base+0x28f8>
   45c33:	xor    eax,eax
   45c35:	pop    rbp
   45c36:	ret    
   45c37:	nop    WORD PTR [rax+rax*1+0x0]
   45c40:	mov    rbp,QWORD PTR [rsi+0x28]
   45c44:	mov    rdi,QWORD PTR [rbp+0x0]
   45c48:	call   9ce0 <free@plt>
   45c4d:	mov    rdi,QWORD PTR [rbp+0x8]
   45c51:	call   9ce0 <free@plt>
   45c56:	mov    rdi,QWORD PTR [rbp+0x10]
   45c5a:	call   9ce0 <free@plt>
   45c5f:	mov    rdi,QWORD PTR [rbp+0x18]
   45c63:	call   9ce0 <free@plt>
   45c68:	mov    rdi,rbp
   45c6b:	call   9ce0 <free@plt>
   45c70:	xor    eax,eax
   45c72:	pop    rbp
   45c73:	ret    
   45c74:	nop    DWORD PTR [rax+0x0]
   45c78:	mov    rdi,QWORD PTR [rsi+0x28]
   45c7c:	call   9ce0 <free@plt>
   45c81:	xor    eax,eax
   45c83:	pop    rbp
   45c84:	ret    
   45c85:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   45c90:	push   rbp
   45c91:	mov    rbp,rsi
   45c94:	push   rbx
   45c95:	mov    rbx,rdi
   45c98:	sub    rsp,0x8
   45c9c:	mov    rdx,QWORD PTR [rdi+0x8]
   45ca0:	mov    rdi,QWORD PTR [rdi+0x10]
   45ca4:	cmp    QWORD PTR [rbx],rdx
   45ca7:	je     45cc8 <argp_usage@@Base+0x2948>
   45ca9:	lea    rax,[rdx+0x1]
   45cad:	mov    QWORD PTR [rbx+0x8],rax
   45cb1:	mov    eax,0x1
   45cb6:	mov    QWORD PTR [rdi+rdx*8],rbp
   45cba:	add    rsp,0x8
   45cbe:	pop    rbx
   45cbf:	pop    rbp
   45cc0:	ret    
   45cc1:	nop    DWORD PTR [rax+0x0]
   45cc8:	lea    rsi,[rdx+0x1]
   45ccc:	lea    rax,[rsi+rsi*1]
   45cd0:	shl    rsi,0x4
   45cd4:	mov    QWORD PTR [rbx],rax
   45cd7:	call   a570 <realloc@plt>
   45cdc:	mov    rdi,rax
   45cdf:	test   rax,rax
   45ce2:	je     45cf0 <argp_usage@@Base+0x2970>
   45ce4:	mov    QWORD PTR [rbx+0x10],rax
   45ce8:	mov    rdx,QWORD PTR [rbx+0x8]
   45cec:	jmp    45ca9 <argp_usage@@Base+0x2929>
   45cee:	xchg   ax,ax
   45cf0:	xor    eax,eax
   45cf2:	jmp    45cba <argp_usage@@Base+0x293a>
   45cf4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   45cff:	nop
   45d00:	push   r15
   45d02:	push   r14
   45d04:	mov    r14,rdi
   45d07:	push   r13
   45d09:	lea    r13,[rsi+0x20]
   45d0d:	push   r12
   45d0f:	mov    r12,rdx
   45d12:	push   rbp
   45d13:	mov    rbp,rsi
   45d16:	push   rbx
   45d17:	sub    rsp,0x8
   45d1b:	mov    r15,QWORD PTR [rsi+0x10]
   45d1f:	mov    QWORD PTR [rsi],rdx
   45d22:	mov    QWORD PTR [rsi+0x28],0x0
   45d2a:	mov    QWORD PTR [rsi+0x20],r15
   45d2e:	lea    rdi,[r15*8+0x0]
   45d36:	call   a4a0 <malloc@plt>
   45d3b:	mov    QWORD PTR [rbp+0x30],rax
   45d3f:	test   rax,rax
   45d42:	je     45d7e <argp_usage@@Base+0x29fe>
   45d44:	xor    ebx,ebx
   45d46:	test   r15,r15
   45d49:	jg     45d5a <argp_usage@@Base+0x29da>
   45d4b:	jmp    45d98 <argp_usage@@Base+0x2a18>
   45d4d:	nop    DWORD PTR [rax]
   45d50:	add    rbx,0x1
   45d54:	cmp    QWORD PTR [rbp+0x10],rbx
   45d58:	jle    45d98 <argp_usage@@Base+0x2a18>
   45d5a:	mov    rax,QWORD PTR [rbp+0x18]
   45d5e:	mov    rsi,QWORD PTR [rax+rbx*8]
   45d62:	mov    rax,rsi
   45d65:	shl    rax,0x4
   45d69:	add    rax,QWORD PTR [r14]
   45d6c:	test   BYTE PTR [rax+0x8],0x8
   45d70:	jne    45d50 <argp_usage@@Base+0x29d0>
   45d72:	mov    rdi,r13
   45d75:	call   45c90 <argp_usage@@Base+0x2910>
   45d7a:	test   al,al
   45d7c:	jne    45d50 <argp_usage@@Base+0x29d0>
   45d7e:	add    rsp,0x8
   45d82:	mov    eax,0xc
   45d87:	pop    rbx
   45d88:	pop    rbp
   45d89:	pop    r12
   45d8b:	pop    r13
   45d8d:	pop    r14
   45d8f:	pop    r15
   45d91:	ret    
   45d92:	nop    WORD PTR [rax+rax*1+0x0]
   45d98:	mov    rax,QWORD PTR [r14+0x40]
   45d9c:	and    r12,QWORD PTR [r14+0x88]
   45da3:	lea    rdx,[r12+r12*2]
   45da7:	lea    rbx,[rax+rdx*8]
   45dab:	mov    rdx,QWORD PTR [rbx]
   45dae:	mov    rdi,QWORD PTR [rbx+0x10]
   45db2:	cmp    QWORD PTR [rbx+0x8],rdx
   45db6:	jle    45dd4 <argp_usage@@Base+0x2a54>
   45db8:	lea    rax,[rdx+0x1]
   45dbc:	mov    QWORD PTR [rbx],rax
   45dbf:	xor    eax,eax
   45dc1:	mov    QWORD PTR [rdi+rdx*8],rbp
   45dc5:	add    rsp,0x8
   45dc9:	pop    rbx
   45dca:	pop    rbp
   45dcb:	pop    r12
   45dcd:	pop    r13
   45dcf:	pop    r14
   45dd1:	pop    r15
   45dd3:	ret    
   45dd4:	add    rdx,0x1
   45dd8:	lea    r12,[rdx+rdx*1]
   45ddc:	shl    rdx,0x4
   45de0:	mov    rsi,rdx
   45de3:	call   a570 <realloc@plt>
   45de8:	mov    rdi,rax
   45deb:	test   rax,rax
   45dee:	je     45d7e <argp_usage@@Base+0x29fe>
   45df0:	mov    QWORD PTR [rbx+0x10],rax
   45df4:	mov    rdx,QWORD PTR [rbx]
   45df7:	mov    QWORD PTR [rbx+0x8],r12
   45dfb:	jmp    45db8 <argp_usage@@Base+0x2a38>
   45dfd:	nop    DWORD PTR [rax]
   45e00:	push   r13
   45e02:	mov    r13,rcx
   45e05:	push   r12
   45e07:	mov    r12,rdx
   45e0a:	push   rbx
   45e0b:	mov    rbx,rdi
   45e0e:	sub    rsp,0x10
   45e12:	movsxd rdx,DWORD PTR [rdi+0x80]
   45e19:	cmp    edx,0xf
   45e1c:	je     45e98 <argp_usage@@Base+0x2b18>
   45e1e:	mov    r8,rdx
   45e21:	mov    rax,QWORD PTR [rdi+0x70]
   45e25:	lea    ecx,[rdx+0x1]
   45e28:	shl    r8,0x6
   45e2c:	add    r8,0x8
   45e30:	shl    rdx,0x6
   45e34:	add    r8,rax
   45e37:	mov    DWORD PTR [rbx+0x80],ecx
   45e3d:	add    rax,rdx
   45e40:	mov    QWORD PTR [rax+0x8],0x0
   45e48:	mov    QWORD PTR [rax+0x10],rsi
   45e4c:	mov    QWORD PTR [rax+0x18],r12
   45e50:	movdqu xmm0,XMMWORD PTR [r13+0x0]
   45e56:	mov    QWORD PTR [rax+0x20],0x0
   45e5e:	movups XMMWORD PTR [rax+0x30],xmm0
   45e62:	mov    QWORD PTR [rax+0x28],0x0
   45e6a:	and    BYTE PTR [rax+0x3a],0xf3
   45e6e:	mov    QWORD PTR [rax+0x40],0xffffffffffffffff
   45e76:	test   rsi,rsi
   45e79:	je     45e7e <argp_usage@@Base+0x2afe>
   45e7b:	mov    QWORD PTR [rsi],r8
   45e7e:	test   r12,r12
   45e81:	je     45e87 <argp_usage@@Base+0x2b07>
   45e83:	mov    QWORD PTR [r12],r8
   45e87:	add    rsp,0x10
   45e8b:	mov    rax,r8
   45e8e:	pop    rbx
   45e8f:	pop    r12
   45e91:	pop    r13
   45e93:	ret    
   45e94:	nop    DWORD PTR [rax+0x0]
   45e98:	mov    edi,0x3c8
   45e9d:	mov    QWORD PTR [rsp+0x8],rsi
   45ea2:	call   a4a0 <malloc@plt>
   45ea7:	test   rax,rax
   45eaa:	je     45ece <argp_usage@@Base+0x2b4e>
   45eac:	mov    rdx,QWORD PTR [rbx+0x70]
   45eb0:	mov    rsi,QWORD PTR [rsp+0x8]
   45eb5:	mov    QWORD PTR [rbx+0x70],rax
   45eb9:	mov    r8d,0x8
   45ebf:	mov    ecx,0x1
   45ec4:	mov    QWORD PTR [rax],rdx
   45ec7:	xor    edx,edx
   45ec9:	jmp    45e30 <argp_usage@@Base+0x2ab0>
   45ece:	xor    r8d,r8d
   45ed1:	jmp    45e87 <argp_usage@@Base+0x2b07>
   45ed3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   45ede:	xchg   ax,ax
   45ee0:	push   r15
   45ee2:	push   r14
   45ee4:	push   r13
   45ee6:	push   r12
   45ee8:	push   rbp
   45ee9:	push   rbx
   45eea:	mov    rbx,rdx
   45eed:	sub    rsp,0x38
   45ef1:	mov    r15,QWORD PTR [rsi]
   45ef4:	mov    r12,QWORD PTR [rdx+0x8]
   45ef8:	mov    QWORD PTR [rsp+0x8],rdi
   45efd:	mov    rax,QWORD PTR fs:0x28
   45f06:	mov    QWORD PTR [rsp+0x28],rax
   45f0b:	xor    eax,eax
   45f0d:	test   BYTE PTR [rsi+0x38],0x10
   45f11:	je     46098 <argp_usage@@Base+0x2d18>
   45f17:	test   r12,r12
   45f1a:	je     46048 <argp_usage@@Base+0x2cc8>
   45f20:	mov    rax,QWORD PTR [rdx+0x28]
   45f24:	cmp    rax,0x3f
   45f28:	jg     4601e <argp_usage@@Base+0x2c9e>
   45f2e:	mov    rdx,QWORD PTR [r15+0xa0]
   45f35:	bt     rdx,rax
   45f39:	jae    4601e <argp_usage@@Base+0x2c9e>
   45f3f:	lea    r13,[rsp+0x10]
   45f44:	pxor   xmm0,xmm0
   45f48:	xor    edx,edx
   45f4a:	xor    esi,esi
   45f4c:	mov    rcx,r13
   45f4f:	mov    rdi,r15
   45f52:	movaps XMMWORD PTR [rsp+0x10],xmm0
   45f57:	mov    BYTE PTR [rsp+0x18],0x8
   45f5c:	call   45e00 <argp_usage@@Base+0x2a80>
   45f61:	pxor   xmm0,xmm0
   45f65:	mov    rcx,r13
   45f68:	xor    edx,edx
   45f6a:	xor    esi,esi
   45f6c:	mov    rdi,r15
   45f6f:	movaps XMMWORD PTR [rsp+0x10],xmm0
   45f74:	mov    rbp,rax
   45f77:	mov    BYTE PTR [rsp+0x18],0x9
   45f7c:	call   45e00 <argp_usage@@Base+0x2a80>
   45f81:	mov    r14,rax
   45f84:	pxor   xmm0,xmm0
   45f88:	mov    rdx,r14
   45f8b:	mov    rcx,r13
   45f8e:	mov    rsi,r12
   45f91:	mov    rdi,r15
   45f94:	movaps XMMWORD PTR [rsp+0x10],xmm0
   45f99:	mov    BYTE PTR [rsp+0x18],0x10
   45f9e:	call   45e00 <argp_usage@@Base+0x2a80>
   45fa3:	mov    rdx,rax
   45fa6:	pxor   xmm0,xmm0
   45faa:	mov    rcx,r13
   45fad:	mov    rsi,rbp
   45fb0:	mov    rdi,r15
   45fb3:	movaps XMMWORD PTR [rsp+0x10],xmm0
   45fb8:	mov    QWORD PTR [rsp],rdx
   45fbc:	mov    BYTE PTR [rsp+0x18],0x10
   45fc1:	call   45e00 <argp_usage@@Base+0x2a80>
   45fc6:	mov    r12,rax
   45fc9:	test   rax,rax
   45fcc:	je     460f0 <argp_usage@@Base+0x2d70>
   45fd2:	mov    rdx,QWORD PTR [rsp]
   45fd6:	test   rdx,rdx
   45fd9:	je     460f0 <argp_usage@@Base+0x2d70>
   45fdf:	test   rbp,rbp
   45fe2:	je     460f0 <argp_usage@@Base+0x2d70>
   45fe8:	test   r14,r14
   45feb:	je     460f0 <argp_usage@@Base+0x2d70>
   45ff1:	mov    rax,QWORD PTR [rbx+0x28]
   45ff5:	movzx  edx,BYTE PTR [rbx+0x32]
   45ff9:	mov    QWORD PTR [r14+0x28],rax
   45ffd:	and    edx,0x8
   46000:	mov    QWORD PTR [rbp+0x28],rax
   46004:	movzx  eax,BYTE PTR [r14+0x32]
   46009:	and    eax,0xfffffff7
   4600c:	or     eax,edx
   4600e:	mov    BYTE PTR [r14+0x32],al
   46012:	movzx  eax,BYTE PTR [rbp+0x32]
   46016:	and    eax,0xfffffff7
   46019:	or     eax,edx
   4601b:	mov    BYTE PTR [rbp+0x32],al
   4601e:	mov    rax,QWORD PTR [rsp+0x28]
   46023:	sub    rax,QWORD PTR fs:0x28
   4602c:	jne    46103 <argp_usage@@Base+0x2d83>
   46032:	add    rsp,0x38
   46036:	mov    rax,r12
   46039:	pop    rbx
   4603a:	pop    rbp
   4603b:	pop    r12
   4603d:	pop    r13
   4603f:	pop    r14
   46041:	pop    r15
   46043:	ret    
   46044:	nop    DWORD PTR [rax+0x0]
   46048:	lea    r13,[rsp+0x10]
   4604d:	pxor   xmm0,xmm0
   46051:	xor    edx,edx
   46053:	xor    esi,esi
   46055:	mov    rcx,r13
   46058:	mov    rdi,r15
   4605b:	movaps XMMWORD PTR [rsp+0x10],xmm0
   46060:	mov    BYTE PTR [rsp+0x18],0x8
   46065:	call   45e00 <argp_usage@@Base+0x2a80>
   4606a:	pxor   xmm0,xmm0
   4606e:	xor    edx,edx
   46070:	mov    rcx,r13
   46073:	xor    esi,esi
   46075:	mov    rdi,r15
   46078:	movaps XMMWORD PTR [rsp+0x10],xmm0
   4607d:	mov    rbp,rax
   46080:	mov    BYTE PTR [rsp+0x18],0x9
   46085:	call   45e00 <argp_usage@@Base+0x2a80>
   4608a:	mov    rdx,rax
   4608d:	mov    r14,rax
   46090:	jmp    45fa6 <argp_usage@@Base+0x2c26>
   46095:	nop    DWORD PTR [rax]
   46098:	lea    r13,[rsp+0x10]
   4609d:	pxor   xmm0,xmm0
   460a1:	xor    edx,edx
   460a3:	xor    esi,esi
   460a5:	mov    rcx,r13
   460a8:	mov    rdi,r15
   460ab:	movaps XMMWORD PTR [rsp+0x10],xmm0
   460b0:	mov    BYTE PTR [rsp+0x18],0x8
   460b5:	call   45e00 <argp_usage@@Base+0x2a80>
   460ba:	pxor   xmm0,xmm0
   460be:	xor    edx,edx
   460c0:	mov    rcx,r13
   460c3:	xor    esi,esi
   460c5:	mov    rdi,r15
   460c8:	movaps XMMWORD PTR [rsp+0x10],xmm0
   460cd:	mov    rbp,rax
   460d0:	mov    BYTE PTR [rsp+0x18],0x9
   460d5:	call   45e00 <argp_usage@@Base+0x2a80>
   460da:	mov    r14,rax
   460dd:	mov    rdx,rax
   460e0:	test   r12,r12
   460e3:	jne    45f84 <argp_usage@@Base+0x2c04>
   460e9:	jmp    45fa6 <argp_usage@@Base+0x2c26>
   460ee:	xchg   ax,ax
   460f0:	mov    rax,QWORD PTR [rsp+0x8]
   460f5:	xor    r12d,r12d
   460f8:	mov    DWORD PTR [rax],0xc
   460fe:	jmp    4601e <argp_usage@@Base+0x2c9e>
   46103:	call   a0a0 <__stack_chk_fail@plt>
   46108:	nop    DWORD PTR [rax+rax*1+0x0]
   46110:	push   r13
   46112:	mov    r13,rsi
   46115:	push   r12
   46117:	push   rbp
   46118:	push   rbx
   46119:	mov    rbx,rdi
   4611c:	sub    rsp,0x18
   46120:	mov    rbp,QWORD PTR [rdi]
   46123:	movsxd rdx,DWORD PTR [rsi+0x80]
   4612a:	mov    rax,QWORD PTR fs:0x28
   46133:	mov    QWORD PTR [rsp+0x8],rax
   46138:	xor    eax,eax
   4613a:	mov    r12,rsp
   4613d:	jmp    4614a <argp_usage@@Base+0x2dca>
   4613f:	nop
   46140:	lea    r12,[rbp+0x8]
   46144:	mov    rbx,rax
   46147:	movsxd rdx,ecx
   4614a:	cmp    edx,0xf
   4614d:	je     46220 <argp_usage@@Base+0x2ea0>
   46153:	mov    rax,QWORD PTR [r13+0x70]
   46157:	lea    ecx,[rdx+0x1]
   4615a:	shl    rdx,0x6
   4615e:	mov    DWORD PTR [r13+0x80],ecx
   46165:	lea    r8,[rax+rdx*1+0x8]
   4616a:	add    rax,rdx
   4616d:	mov    QWORD PTR [rax+0x8],0x0
   46175:	mov    QWORD PTR [rax+0x10],0x0
   4617d:	mov    QWORD PTR [rax+0x18],0x0
   46185:	movdqu xmm0,XMMWORD PTR [rbx+0x28]
   4618a:	mov    QWORD PTR [rax+0x20],0x0
   46192:	movups XMMWORD PTR [rax+0x30],xmm0
   46196:	mov    QWORD PTR [rax+0x28],0x0
   4619e:	and    BYTE PTR [rax+0x3a],0xf3
   461a2:	mov    QWORD PTR [rax+0x40],0xffffffffffffffff
   461aa:	mov    QWORD PTR [r12],r8
   461ae:	test   r8,r8
   461b1:	je     461f8 <argp_usage@@Base+0x2e78>
   461b3:	mov    QWORD PTR [rax+0x8],rbp
   461b7:	mov    rbp,QWORD PTR [r12]
   461bb:	or     BYTE PTR [rbp+0x32],0x4
   461bf:	mov    rax,QWORD PTR [rbx+0x8]
   461c3:	test   rax,rax
   461c6:	jne    46140 <argp_usage@@Base+0x2dc0>
   461cc:	jmp    461d3 <argp_usage@@Base+0x2e53>
   461ce:	xchg   ax,ax
   461d0:	mov    rbx,rdx
   461d3:	mov    rdx,QWORD PTR [rbx+0x10]
   461d7:	test   rdx,rdx
   461da:	je     461e5 <argp_usage@@Base+0x2e65>
   461dc:	cmp    rdx,rax
   461df:	jne    46298 <argp_usage@@Base+0x2f18>
   461e5:	mov    rdx,QWORD PTR [rbx]
   461e8:	mov    rbp,QWORD PTR [rbp+0x0]
   461ec:	mov    rax,rbx
   461ef:	test   rdx,rdx
   461f2:	jne    461d0 <argp_usage@@Base+0x2e50>
   461f4:	mov    r8,QWORD PTR [rsp]
   461f8:	mov    rax,QWORD PTR [rsp+0x8]
   461fd:	sub    rax,QWORD PTR fs:0x28
   46206:	jne    462b4 <argp_usage@@Base+0x2f34>
   4620c:	add    rsp,0x18
   46210:	mov    rax,r8
   46213:	pop    rbx
   46214:	pop    rbp
   46215:	pop    r12
   46217:	pop    r13
   46219:	ret    
   4621a:	nop    WORD PTR [rax+rax*1+0x0]
   46220:	mov    edi,0x3c8
   46225:	call   a4a0 <malloc@plt>
   4622a:	test   rax,rax
   4622d:	je     462a4 <argp_usage@@Base+0x2f24>
   4622f:	mov    rdx,QWORD PTR [r13+0x70]
   46233:	mov    QWORD PTR [rax+0x8],0x0
   4623b:	mov    ecx,0x1
   46240:	mov    QWORD PTR [rax+0x10],0x0
   46248:	mov    QWORD PTR [rax+0x18],0x0
   46250:	movdqu xmm1,XMMWORD PTR [rbx+0x28]
   46255:	mov    QWORD PTR [rax],rdx
   46258:	lea    rdx,[rax+0x8]
   4625c:	movups XMMWORD PTR [rax+0x30],xmm1
   46260:	mov    QWORD PTR [r13+0x70],rax
   46264:	and    BYTE PTR [rax+0x3a],0xf3
   46268:	mov    DWORD PTR [r13+0x80],0x1
   46273:	mov    QWORD PTR [rax+0x20],0x0
   4627b:	mov    QWORD PTR [rax+0x28],0x0
   46283:	mov    QWORD PTR [rax+0x40],0xffffffffffffffff
   4628b:	mov    QWORD PTR [r12],rdx
   4628f:	jmp    461b3 <argp_usage@@Base+0x2e33>
   46294:	nop    DWORD PTR [rax+0x0]
   46298:	lea    r12,[rbp+0x10]
   4629c:	mov    rbx,rdx
   4629f:	jmp    46147 <argp_usage@@Base+0x2dc7>
   462a4:	mov    QWORD PTR [r12],0x0
   462ac:	xor    r8d,r8d
   462af:	jmp    461f8 <argp_usage@@Base+0x2e78>
   462b4:	call   a0a0 <__stack_chk_fail@plt>
   462b9:	nop    DWORD PTR [rax+0x0]
   462c0:	push   r15
   462c2:	push   r14
   462c4:	mov    r14,rdi
   462c7:	push   r13
   462c9:	push   r12
   462cb:	mov    r12d,edx
   462ce:	push   rbp
   462cf:	mov    rbp,rsi
   462d2:	push   rbx
   462d3:	sub    rsp,0x8
   462d7:	mov    rbx,QWORD PTR [rsi]
   462da:	cmp    rbx,QWORD PTR [rsi+0x8]
   462de:	jb     462f6 <argp_usage@@Base+0x2f76>
   462e0:	jmp    463e2 <argp_usage@@Base+0x3062>
   462e5:	nop    DWORD PTR [rax]
   462e8:	add    rbx,0x10
   462ec:	cmp    QWORD PTR [rbp+0x8],rbx
   462f0:	jbe    463e2 <argp_usage@@Base+0x3062>
   462f6:	mov    r15,QWORD PTR [rbx]
   462f9:	test   r15,r15
   462fc:	je     462e8 <argp_usage@@Base+0x2f68>
   462fe:	mov    r13,QWORD PTR [rbx+0x8]
   46302:	test   r13,r13
   46305:	je     46371 <argp_usage@@Base+0x2ff1>
   46307:	mov    rsi,QWORD PTR [r14+0x10]
   4630b:	jmp    46324 <argp_usage@@Base+0x2fa4>
   4630d:	nop    DWORD PTR [rax]
   46310:	mov    rcx,QWORD PTR [rax+0x8]
   46314:	mov    QWORD PTR [r13+0x8],rcx
   46318:	mov    QWORD PTR [rax+0x8],r13
   4631c:	test   rdx,rdx
   4631f:	je     4636e <argp_usage@@Base+0x2fee>
   46321:	mov    r13,rdx
   46324:	mov    r15,QWORD PTR [r13+0x0]
   46328:	mov    rdi,r15
   4632b:	call   QWORD PTR [r14+0x30]
   4632f:	mov    rsi,QWORD PTR [r14+0x10]
   46333:	cmp    rax,rsi
   46336:	jae    aabd <__sprintf_chk@plt+0x10d>
   4633c:	shl    rax,0x4
   46340:	add    rax,QWORD PTR [r14]
   46343:	mov    rdx,QWORD PTR [r13+0x8]
   46347:	cmp    QWORD PTR [rax],0x0
   4634b:	jne    46310 <argp_usage@@Base+0x2f90>
   4634d:	mov    QWORD PTR [rax],r15
   46350:	mov    rax,QWORD PTR [r14+0x48]
   46354:	add    QWORD PTR [r14+0x18],0x1
   46359:	mov    QWORD PTR [r13+0x0],0x0
   46361:	mov    QWORD PTR [r13+0x8],rax
   46365:	mov    QWORD PTR [r14+0x48],r13
   46369:	test   rdx,rdx
   4636c:	jne    46321 <argp_usage@@Base+0x2fa1>
   4636e:	mov    r15,QWORD PTR [rbx]
   46371:	mov    QWORD PTR [rbx+0x8],0x0
   46379:	test   r12b,r12b
   4637c:	jne    462e8 <argp_usage@@Base+0x2f68>
   46382:	mov    rsi,QWORD PTR [r14+0x10]
   46386:	mov    rdi,r15
   46389:	call   QWORD PTR [r14+0x30]
   4638d:	mov    r13,rax
   46390:	cmp    rax,QWORD PTR [r14+0x10]
   46394:	jae    aabd <__sprintf_chk@plt+0x10d>
   4639a:	shl    r13,0x4
   4639e:	add    r13,QWORD PTR [r14]
   463a1:	cmp    QWORD PTR [r13+0x0],0x0
   463a6:	je     46400 <argp_usage@@Base+0x3080>
   463a8:	mov    rax,QWORD PTR [r14+0x48]
   463ac:	test   rax,rax
   463af:	je     4640b <argp_usage@@Base+0x308b>
   463b1:	mov    rdx,QWORD PTR [rax+0x8]
   463b5:	mov    QWORD PTR [r14+0x48],rdx
   463b9:	mov    rdx,QWORD PTR [r13+0x8]
   463bd:	mov    QWORD PTR [rax],r15
   463c0:	mov    QWORD PTR [rax+0x8],rdx
   463c4:	mov    QWORD PTR [r13+0x8],rax
   463c8:	mov    QWORD PTR [rbx],0x0
   463cf:	add    rbx,0x10
   463d3:	sub    QWORD PTR [rbp+0x18],0x1
   463d8:	cmp    QWORD PTR [rbp+0x8],rbx
   463dc:	ja     462f6 <argp_usage@@Base+0x2f76>
   463e2:	add    rsp,0x8
   463e6:	mov    eax,0x1
   463eb:	pop    rbx
   463ec:	pop    rbp
   463ed:	pop    r12
   463ef:	pop    r13
   463f1:	pop    r14
   463f3:	pop    r15
   463f5:	ret    
   463f6:	cs nop WORD PTR [rax+rax*1+0x0]
   46400:	mov    QWORD PTR [r13+0x0],r15
   46404:	add    QWORD PTR [r14+0x18],0x1
   46409:	jmp    463c8 <argp_usage@@Base+0x3048>
   4640b:	mov    edi,0x10
   46410:	call   a4a0 <malloc@plt>
   46415:	test   rax,rax
   46418:	jne    463b9 <argp_usage@@Base+0x3039>
   4641a:	add    rsp,0x8
   4641e:	xor    eax,eax
   46420:	pop    rbx
   46421:	pop    rbp
   46422:	pop    r12
   46424:	pop    r13
   46426:	pop    r14
   46428:	pop    r15
   4642a:	ret    
   4642b:	nop    DWORD PTR [rax+rax*1+0x0]
   46430:	push   r14
   46432:	push   r13
   46434:	push   r12
   46436:	mov    r12,rsi
   46439:	push   rbp
   4643a:	mov    rbp,rdi
   4643d:	push   rbx
   4643e:	sub    rsp,0x90
   46445:	mov    rax,QWORD PTR fs:0x28
   4644e:	mov    QWORD PTR [rsp+0x88],rax
   46456:	xor    eax,eax
   46458:	call   a050 <__ctype_get_mb_cur_max@plt>
   4645d:	cmp    rax,0x1
   46461:	jbe    46590 <argp_usage@@Base+0x3210>
   46467:	mov    QWORD PTR [rsp+0x50],rbp
   4646c:	lea    rbp,[rsp+0x40]
   46471:	mov    QWORD PTR [rsp+0x10],r12
   46476:	mov    r12,rsp
   46479:	mov    BYTE PTR [rsp+0x40],0x0
   4647e:	mov    QWORD PTR [rsp+0x44],0x0
   46487:	mov    BYTE PTR [rsp+0x4c],0x0
   4648c:	mov    BYTE PTR [rsp],0x0
   46490:	mov    QWORD PTR [rsp+0x4],0x0
   46499:	jmp    464f5 <argp_usage@@Base+0x3175>
   4649b:	nop    DWORD PTR [rax+rax*1+0x0]
   464a0:	mov    r13d,DWORD PTR [rsp+0x24]
   464a5:	test   r13d,r13d
   464a8:	je     4666a <argp_usage@@Base+0x32ea>
   464ae:	cmp    BYTE PTR [rsp+0x60],0x0
   464b3:	je     46660 <argp_usage@@Base+0x32e0>
   464b9:	mov    edi,DWORD PTR [rsp+0x64]
   464bd:	call   a700 <towlower@plt>
   464c2:	mov    edi,r13d
   464c5:	mov    ebx,eax
   464c7:	call   a700 <towlower@plt>
   464cc:	mov    r8d,eax
   464cf:	mov    eax,ebx
   464d1:	sub    eax,r8d
   464d4:	test   eax,eax
   464d6:	jne    46568 <argp_usage@@Base+0x31e8>
   464dc:	mov    rax,QWORD PTR [rsp+0x58]
   464e1:	add    QWORD PTR [rsp+0x50],rax
   464e6:	mov    rax,QWORD PTR [rsp+0x18]
   464eb:	add    QWORD PTR [rsp+0x10],rax
   464f0:	mov    BYTE PTR [rsp+0x4c],0x0
   464f5:	mov    rdi,rbp
   464f8:	mov    BYTE PTR [rsp+0xc],0x0
   464fd:	call   459b0 <argp_usage@@Base+0x2630>
   46502:	cmp    BYTE PTR [rsp+0x60],0x0
   46507:	je     46515 <argp_usage@@Base+0x3195>
   46509:	mov    edx,DWORD PTR [rsp+0x64]
   4650d:	test   edx,edx
   4650f:	je     46600 <argp_usage@@Base+0x3280>
   46515:	cmp    BYTE PTR [rsp+0xc],0x0
   4651a:	jne    46524 <argp_usage@@Base+0x31a4>
   4651c:	mov    rdi,r12
   4651f:	call   459b0 <argp_usage@@Base+0x2630>
   46524:	cmp    BYTE PTR [rsp+0x20],0x0
   46529:	jne    464a0 <argp_usage@@Base+0x3120>
   4652f:	cmp    BYTE PTR [rsp+0x60],0x0
   46534:	jne    46638 <argp_usage@@Base+0x32b8>
   4653a:	mov    rdx,QWORD PTR [rsp+0x58]
   4653f:	mov    r8,QWORD PTR [rsp+0x18]
   46544:	mov    rsi,QWORD PTR [rsp+0x10]
   46549:	mov    rdi,QWORD PTR [rsp+0x50]
   4654e:	cmp    rdx,r8
   46551:	jne    46652 <argp_usage@@Base+0x32d2>
   46557:	call   a2c0 <memcmp@plt>
   4655c:	test   eax,eax
   4655e:	je     464dc <argp_usage@@Base+0x315c>
   46564:	nop    DWORD PTR [rax+0x0]
   46568:	mov    rdx,QWORD PTR [rsp+0x88]
   46570:	sub    rdx,QWORD PTR fs:0x28
   46579:	jne    4668e <argp_usage@@Base+0x330e>
   4657f:	add    rsp,0x90
   46586:	pop    rbx
   46587:	pop    rbp
   46588:	pop    r12
   4658a:	pop    r13
   4658c:	pop    r14
   4658e:	ret    
   4658f:	nop
   46590:	call   a980 <__ctype_b_loc@plt>
   46595:	mov    r14,QWORD PTR [rax]
   46598:	jmp    465b0 <argp_usage@@Base+0x3230>
   4659a:	nop    WORD PTR [rax+rax*1+0x0]
   465a0:	add    rbp,0x1
   465a4:	add    r12,0x1
   465a8:	cmp    bl,dl
   465aa:	jne    46648 <argp_usage@@Base+0x32c8>
   465b0:	movzx  r13d,BYTE PTR [rbp+0x0]
   465b5:	mov    rbx,r13
   465b8:	test   BYTE PTR [r14+r13*2+0x1],0x1
   465be:	je     465cd <argp_usage@@Base+0x324d>
   465c0:	call   a970 <__ctype_tolower_loc@plt>
   465c5:	mov    rax,QWORD PTR [rax]
   465c8:	movzx  ebx,BYTE PTR [rax+r13*4]
   465cd:	movzx  r13d,BYTE PTR [r12]
   465d2:	mov    rdx,r13
   465d5:	test   BYTE PTR [r14+r13*2+0x1],0x1
   465db:	je     465ea <argp_usage@@Base+0x326a>
   465dd:	call   a970 <__ctype_tolower_loc@plt>
   465e2:	mov    rax,QWORD PTR [rax]
   465e5:	movzx  edx,BYTE PTR [rax+r13*4]
   465ea:	test   bl,bl
   465ec:	jne    465a0 <argp_usage@@Base+0x3220>
   465ee:	xor    eax,eax
   465f0:	sub    eax,edx
   465f2:	jmp    46568 <argp_usage@@Base+0x31e8>
   465f7:	nop    WORD PTR [rax+rax*1+0x0]
   46600:	cmp    BYTE PTR [rsp+0x4c],0x0
   46605:	jne    4661e <argp_usage@@Base+0x329e>
   46607:	mov    rdi,rbp
   4660a:	call   459b0 <argp_usage@@Base+0x2630>
   4660f:	cmp    BYTE PTR [rsp+0x60],0x0
   46614:	je     46660 <argp_usage@@Base+0x32e0>
   46616:	mov    eax,DWORD PTR [rsp+0x64]
   4661a:	test   eax,eax
   4661c:	jne    46660 <argp_usage@@Base+0x32e0>
   4661e:	cmp    BYTE PTR [rsp+0xc],0x0
   46623:	jne    4662d <argp_usage@@Base+0x32ad>
   46625:	mov    rdi,rsp
   46628:	call   459b0 <argp_usage@@Base+0x2630>
   4662d:	cmp    BYTE PTR [rsp+0x20],0x0
   46632:	jne    46673 <argp_usage@@Base+0x32f3>
   46634:	nop    DWORD PTR [rax+0x0]
   46638:	mov    eax,0xffffffff
   4663d:	jmp    46568 <argp_usage@@Base+0x31e8>
   46642:	nop    WORD PTR [rax+rax*1+0x0]
   46648:	movzx  eax,bl
   4664b:	sub    eax,edx
   4664d:	jmp    46568 <argp_usage@@Base+0x31e8>
   46652:	jae    46680 <argp_usage@@Base+0x3300>
   46654:	call   a2c0 <memcmp@plt>
   46659:	test   eax,eax
   4665b:	jle    46638 <argp_usage@@Base+0x32b8>
   4665d:	nop    DWORD PTR [rax]
   46660:	mov    eax,0x1
   46665:	jmp    46568 <argp_usage@@Base+0x31e8>
   4666a:	cmp    BYTE PTR [rsp+0x4c],0x0
   4666f:	je     46607 <argp_usage@@Base+0x3287>
   46671:	jmp    4660f <argp_usage@@Base+0x328f>
   46673:	mov    eax,DWORD PTR [rsp+0x24]
   46677:	test   eax,eax
   46679:	jne    46638 <argp_usage@@Base+0x32b8>
   4667b:	jmp    46568 <argp_usage@@Base+0x31e8>
   46680:	mov    rdx,r8
   46683:	call   a2c0 <memcmp@plt>
   46688:	test   eax,eax
   4668a:	jns    46660 <argp_usage@@Base+0x32e0>
   4668c:	jmp    46638 <argp_usage@@Base+0x32b8>
   4668e:	call   a0a0 <__stack_chk_fail@plt>
   46693:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4669e:	xchg   ax,ax
   466a0:	endbr64 
   466a4:	cmp    rdi,rsi
   466a7:	je     466c0 <argp_usage@@Base+0x3340>
   466a9:	sub    rsp,0x8
   466ad:	call   46430 <argp_usage@@Base+0x30b0>
   466b2:	test   eax,eax
   466b4:	sete   al
   466b7:	add    rsp,0x8
   466bb:	ret    
   466bc:	nop    DWORD PTR [rax+0x0]
   466c0:	mov    eax,0x1
   466c5:	ret    
   466c6:	cs nop WORD PTR [rax+rax*1+0x0]
   466d0:	endbr64 
   466d4:	push   r13
   466d6:	mov    eax,edx
   466d8:	and    edx,0x10
   466db:	push   r12
   466dd:	mov    r12,rsi
   466e0:	push   rbp
   466e1:	mov    rbp,rdi
   466e4:	push   rbx
   466e5:	sub    rsp,0x18
   466e9:	and    eax,0x8
   466ec:	je     467c0 <argp_usage@@Base+0x3440>
   466f2:	test   edx,edx
   466f4:	jne    46730 <argp_usage@@Base+0x33b0>
   466f6:	call   a060 <strlen@plt>
   466fb:	mov    rsi,r12
   466fe:	mov    rdi,rbp
   46701:	mov    rdx,rax
   46704:	mov    rbx,rax
   46707:	call   9e50 <strncmp@plt>
   4670c:	test   eax,eax
   4670e:	jne    4671b <argp_usage@@Base+0x339b>
   46710:	movsx  edx,BYTE PTR [r12+rbx*1]
   46715:	cmp    edx,0x2f
   46718:	cmovne eax,edx
   4671b:	add    rsp,0x18
   4671f:	pop    rbx
   46720:	pop    rbp
   46721:	pop    r12
   46723:	pop    r13
   46725:	ret    
   46726:	cs nop WORD PTR [rax+rax*1+0x0]
   46730:	mov    rdi,rsi
   46733:	call   a060 <strlen@plt>
   46738:	lea    r13,[rax+0x1]
   4673c:	mov    rdi,r13
   4673f:	call   a4a0 <malloc@plt>
   46744:	mov    rdi,rax
   46747:	test   rax,rax
   4674a:	je     467fc <argp_usage@@Base+0x347c>
   46750:	mov    rsi,r12
   46753:	mov    rdx,r13
   46756:	call   a420 <memcpy@plt>
   4675b:	mov    r12,rax
   4675e:	mov    rdi,rax
   46761:	jmp    46786 <argp_usage@@Base+0x3406>
   46763:	nop    DWORD PTR [rax+rax*1+0x0]
   46768:	mov    BYTE PTR [rax],0x0
   4676b:	cmp    rbp,r12
   4676e:	je     4679d <argp_usage@@Base+0x341d>
   46770:	mov    rsi,r12
   46773:	mov    rdi,rbp
   46776:	call   46430 <argp_usage@@Base+0x30b0>
   4677b:	test   eax,eax
   4677d:	jle    4679f <argp_usage@@Base+0x341f>
   4677f:	mov    BYTE PTR [rbx],0x2f
   46782:	lea    rdi,[rbx+0x1]
   46786:	mov    esi,0x2f
   4678b:	call   a0f0 <strchr@plt>
   46790:	mov    rbx,rax
   46793:	test   rax,rax
   46796:	jne    46768 <argp_usage@@Base+0x33e8>
   46798:	cmp    rbp,r12
   4679b:	jne    467ef <argp_usage@@Base+0x346f>
   4679d:	xor    eax,eax
   4679f:	mov    rdi,r12
   467a2:	mov    DWORD PTR [rsp+0xc],eax
   467a6:	call   9ce0 <free@plt>
   467ab:	mov    eax,DWORD PTR [rsp+0xc]
   467af:	add    rsp,0x18
   467b3:	pop    rbx
   467b4:	pop    rbp
   467b5:	pop    r12
   467b7:	pop    r13
   467b9:	ret    
   467ba:	nop    WORD PTR [rax+rax*1+0x0]
   467c0:	test   edx,edx
   467c2:	je     467e0 <argp_usage@@Base+0x3460>
   467c4:	cmp    rsi,rdi
   467c7:	je     4671b <argp_usage@@Base+0x339b>
   467cd:	add    rsp,0x18
   467d1:	pop    rbx
   467d2:	pop    rbp
   467d3:	pop    r12
   467d5:	pop    r13
   467d7:	jmp    46430 <argp_usage@@Base+0x30b0>
   467dc:	nop    DWORD PTR [rax+0x0]
   467e0:	add    rsp,0x18
   467e4:	pop    rbx
   467e5:	pop    rbp
   467e6:	pop    r12
   467e8:	pop    r13
   467ea:	jmp    a320 <strcmp@plt>
   467ef:	mov    rsi,r12
   467f2:	mov    rdi,rbp
   467f5:	call   46430 <argp_usage@@Base+0x30b0>
   467fa:	jmp    4679f <argp_usage@@Base+0x341f>
   467fc:	call   19130 <__sprintf_chk@plt+0xe780>
   46801:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4680c:	nop    DWORD PTR [rax+0x0]
   46810:	push   rbp
   46811:	mov    ebp,esi
   46813:	push   rbx
   46814:	mov    rbx,rdi
   46817:	mov    edi,0xe
   4681c:	sub    rsp,0x8
   46820:	call   a4e0 <nl_langinfo@plt>
   46825:	test   rax,rax
   46828:	je     4688e <argp_usage@@Base+0x350e>
   4682a:	mov    rdi,rax
   4682d:	movzx  eax,BYTE PTR [rax]
   46830:	test   al,al
   46832:	je     4688e <argp_usage@@Base+0x350e>
   46834:	and    eax,0xffffffdf
   46837:	cmp    al,0x55
   46839:	jne    4687f <argp_usage@@Base+0x34ff>
   4683b:	movzx  eax,BYTE PTR [rdi+0x1]
   4683f:	and    eax,0xffffffdf
   46842:	cmp    al,0x54
   46844:	jne    4688e <argp_usage@@Base+0x350e>
   46846:	movzx  eax,BYTE PTR [rdi+0x2]
   4684a:	and    eax,0xffffffdf
   4684d:	cmp    al,0x46
   4684f:	jne    4688e <argp_usage@@Base+0x350e>
   46851:	cmp    BYTE PTR [rdi+0x3],0x2d
   46855:	jne    4688e <argp_usage@@Base+0x350e>
   46857:	cmp    BYTE PTR [rdi+0x4],0x38
   4685b:	jne    4688e <argp_usage@@Base+0x350e>
   4685d:	cmp    BYTE PTR [rdi+0x5],0x0
   46861:	jne    4688e <argp_usage@@Base+0x350e>
   46863:	cmp    BYTE PTR [rbx],0x60
   46866:	lea    rax,[rip+0x25a2d]        # 6c29a <_obstack_memory_used@@Base+0x1f61a>
   4686d:	lea    rdx,[rip+0x25a1b]        # 6c28f <_obstack_memory_used@@Base+0x1f60f>
   46874:	cmovne rax,rdx
   46878:	add    rsp,0x8
   4687c:	pop    rbx
   4687d:	pop    rbp
   4687e:	ret    
   4687f:	cmp    al,0x47
   46881:	jne    4688e <argp_usage@@Base+0x350e>
   46883:	movzx  eax,BYTE PTR [rdi+0x1]
   46887:	and    eax,0xffffffdf
   4688a:	cmp    al,0x42
   4688c:	je     468b0 <argp_usage@@Base+0x3530>
   4688e:	cmp    ebp,0x9
   46891:	lea    rax,[rip+0x252b4]        # 6bb4c <_obstack_memory_used@@Base+0x1eecc>
   46898:	lea    rdx,[rip+0x1d8cb]        # 6416a <_obstack_memory_used@@Base+0x174ea>
   4689f:	cmovne rax,rdx
   468a3:	add    rsp,0x8
   468a7:	pop    rbx
   468a8:	pop    rbp
   468a9:	ret    
   468aa:	nop    WORD PTR [rax+rax*1+0x0]
   468b0:	cmp    BYTE PTR [rdi+0x2],0x31
   468b4:	jne    4688e <argp_usage@@Base+0x350e>
   468b6:	cmp    BYTE PTR [rdi+0x3],0x38
   468ba:	jne    4688e <argp_usage@@Base+0x350e>
   468bc:	cmp    BYTE PTR [rdi+0x4],0x30
   468c0:	jne    4688e <argp_usage@@Base+0x350e>
   468c2:	cmp    BYTE PTR [rdi+0x5],0x33
   468c6:	jne    4688e <argp_usage@@Base+0x350e>
   468c8:	cmp    BYTE PTR [rdi+0x6],0x30
   468cc:	jne    4688e <argp_usage@@Base+0x350e>
   468ce:	xor    ecx,ecx
   468d0:	xor    edx,edx
   468d2:	lea    rsi,[rip+0x259c5]        # 6c29e <_obstack_memory_used@@Base+0x1f61e>
   468d9:	call   45540 <argp_usage@@Base+0x21c0>
   468de:	test   eax,eax
   468e0:	je     4688e <argp_usage@@Base+0x350e>
   468e2:	cmp    BYTE PTR [rbx],0x60
   468e5:	lea    rax,[rip+0x259aa]        # 6c296 <_obstack_memory_used@@Base+0x1f616>
   468ec:	lea    rdx,[rip+0x259a0]        # 6c293 <_obstack_memory_used@@Base+0x1f613>
   468f3:	cmovne rax,rdx
   468f7:	add    rsp,0x8
   468fb:	pop    rbx
   468fc:	pop    rbp
   468fd:	ret    
   468fe:	xchg   ax,ax
   46900:	endbr64 
   46904:	push   rax
   46905:	pop    rax
   46906:	mov    edx,0x5
   4690b:	lea    rsi,[rip+0x1cbb3]        # 634c5 <_obstack_memory_used@@Base+0x16845>
   46912:	xor    edi,edi
   46914:	sub    rsp,0x8
   46918:	call   a040 <dcgettext@plt>
   4691d:	lea    rdx,[rip+0x2670b]        # 6d02f <_obstack_memory_used@@Base+0x203af>
   46924:	mov    esi,0x1
   46929:	mov    rcx,rax
   4692c:	mov    rax,QWORD PTR [rip+0x356b5]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   46933:	mov    rdi,QWORD PTR [rax]
   46936:	xor    eax,eax
   46938:	call   a840 <__fprintf_chk@plt>
   4693d:	mov    edi,DWORD PTR [rip+0x3605d]        # 7c9a0 <_obstack_memory_used@@Base+0x2fd20>
   46943:	call   a820 <exit@plt>
   46948:	nop    DWORD PTR [rax+rax*1+0x0]
   46950:	push   r15
   46952:	push   r14
   46954:	push   r13
   46956:	push   r12
   46958:	push   rbp
   46959:	mov    rbp,rdi
   4695c:	push   rbx
   4695d:	sub    rsp,0x28
   46961:	mov    r13,QWORD PTR [rsi+0x48]
   46965:	mov    rax,QWORD PTR fs:0x28
   4696e:	mov    QWORD PTR [rsp+0x18],rax
   46973:	xor    eax,eax
   46975:	cmp    QWORD PTR [rsi+0x68],r13
   46979:	jle    46a88 <argp_usage@@Base+0x3708>
   4697f:	mov    r14,rdx
   46982:	mov    rdx,QWORD PTR [rsi+0x8]
   46986:	mov    eax,DWORD PTR [rsi+0x90]
   4698c:	mov    rbx,rsi
   4698f:	movzx  r12d,BYTE PTR [rdx+r13*1]
   46994:	and    BYTE PTR [rdi+0xa],0x9f
   46998:	mov    BYTE PTR [rdi],r12b
   4699b:	cmp    eax,0x1
   4699e:	jle    46a10 <argp_usage@@Base+0x3690>
   469a0:	cmp    r13,QWORD PTR [rsi+0x30]
   469a4:	je     469b5 <argp_usage@@Base+0x3635>
   469a6:	mov    rcx,QWORD PTR [rsi+0x10]
   469aa:	cmp    DWORD PTR [rcx+r13*4],0xffffffff
   469af:	je     46b00 <argp_usage@@Base+0x3780>
   469b5:	cmp    r12b,0x5c
   469b9:	je     46a70 <argp_usage@@Base+0x36f0>
   469bf:	mov    rax,QWORD PTR [rbx+0x10]
   469c3:	mov    BYTE PTR [rbp+0x8],0x1
   469c7:	mov    r15d,DWORD PTR [rax+r13*4]
   469cb:	mov    edi,r15d
   469ce:	call   a490 <iswalnum@plt>
   469d3:	test   eax,eax
   469d5:	setne  al
   469d8:	cmp    r15d,0x5f
   469dc:	sete   dl
   469df:	or     eax,edx
   469e1:	movzx  edx,BYTE PTR [rbp+0xa]
   469e5:	shl    eax,0x6
   469e8:	sub    r12d,0x24
   469ec:	and    edx,0xffffffbf
   469ef:	or     eax,edx
   469f1:	mov    BYTE PTR [rbp+0xa],al
   469f4:	cmp    r12b,0x59
   469f8:	ja     46a40 <argp_usage@@Base+0x36c0>
   469fa:	lea    rdx,[rip+0x25b5f]        # 6c560 <_obstack_memory_used@@Base+0x1f8e0>
   46a01:	movzx  r12d,r12b
   46a05:	movsxd rax,DWORD PTR [rdx+r12*4]
   46a09:	add    rax,rdx
   46a0c:	notrack jmp rax
   46a0f:	nop
   46a10:	cmp    r12b,0x5c
   46a14:	je     46a70 <argp_usage@@Base+0x36f0>
   46a16:	mov    BYTE PTR [rbp+0x8],0x1
   46a1a:	call   a980 <__ctype_b_loc@plt>
   46a1f:	mov    r8,rax
   46a22:	movzx  eax,r12b
   46a26:	mov    rdx,QWORD PTR [r8]
   46a29:	movzx  eax,WORD PTR [rdx+rax*2]
   46a2d:	shr    ax,0x3
   46a31:	and    eax,0x1
   46a34:	cmp    r12b,0x5f
   46a38:	sete   dl
   46a3b:	or     eax,edx
   46a3d:	jmp    469e1 <argp_usage@@Base+0x3661>
   46a3f:	nop
   46a40:	mov    eax,0x1
   46a45:	mov    rdx,QWORD PTR [rsp+0x18]
   46a4a:	sub    rdx,QWORD PTR fs:0x28
   46a53:	jne    46ee3 <argp_usage@@Base+0x3b63>
   46a59:	add    rsp,0x28
   46a5d:	pop    rbx
   46a5e:	pop    rbp
   46a5f:	pop    r12
   46a61:	pop    r13
   46a63:	pop    r14
   46a65:	pop    r15
   46a67:	ret    
   46a68:	nop    DWORD PTR [rax+rax*1+0x0]
   46a70:	lea    rcx,[r13+0x1]
   46a74:	cmp    rcx,QWORD PTR [rbx+0x58]
   46a78:	jl     46a90 <argp_usage@@Base+0x3710>
   46a7a:	mov    BYTE PTR [rbp+0x8],0x24
   46a7e:	mov    eax,0x1
   46a83:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46a85:	nop    DWORD PTR [rax]
   46a88:	mov    BYTE PTR [rdi+0x8],0x2
   46a8c:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46a8e:	xchg   ax,ax
   46a90:	cmp    BYTE PTR [rbx+0x8b],0x0
   46a97:	jne    46e60 <argp_usage@@Base+0x3ae0>
   46a9d:	movzx  r12d,BYTE PTR [rdx+r13*1+0x1]
   46aa3:	mov    r15d,r12d
   46aa6:	mov    BYTE PTR [rbp+0x0],r15b
   46aaa:	mov    BYTE PTR [rbp+0x8],0x1
   46aae:	cmp    eax,0x1
   46ab1:	jle    46b20 <argp_usage@@Base+0x37a0>
   46ab3:	mov    rax,QWORD PTR [rbx+0x10]
   46ab7:	lea    rsi,[rax+rcx*4]
   46abb:	mov    ebx,DWORD PTR [rsi]
   46abd:	mov    edi,ebx
   46abf:	call   a490 <iswalnum@plt>
   46ac4:	test   eax,eax
   46ac6:	setne  al
   46ac9:	cmp    ebx,0x5f
   46acc:	sete   dl
   46acf:	or     eax,edx
   46ad1:	movzx  edx,BYTE PTR [rbp+0xa]
   46ad5:	shl    eax,0x6
   46ad8:	sub    r15d,0x27
   46adc:	and    edx,0xffffffbf
   46adf:	or     eax,edx
   46ae1:	mov    BYTE PTR [rbp+0xa],al
   46ae4:	cmp    r15b,0x56
   46ae8:	ja     46b48 <argp_usage@@Base+0x37c8>
   46aea:	lea    rdx,[rip+0x25bd7]        # 6c6c8 <_obstack_memory_used@@Base+0x1fa48>
   46af1:	movzx  r15d,r15b
   46af5:	movsxd rax,DWORD PTR [rdx+r15*4]
   46af9:	add    rax,rdx
   46afc:	notrack jmp rax
   46aff:	nop
   46b00:	mov    eax,DWORD PTR [rdi+0x8]
   46b03:	and    eax,0xffdfff00
   46b08:	or     eax,0x200001
   46b0d:	mov    DWORD PTR [rdi+0x8],eax
   46b10:	mov    eax,0x1
   46b15:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46b1a:	nop    WORD PTR [rax+rax*1+0x0]
   46b20:	call   a980 <__ctype_b_loc@plt>
   46b25:	mov    r8,rax
   46b28:	movzx  eax,r15b
   46b2c:	mov    rdx,QWORD PTR [r8]
   46b2f:	movzx  eax,WORD PTR [rdx+rax*2]
   46b33:	shr    ax,0x3
   46b37:	and    eax,0x1
   46b3a:	cmp    r15b,0x5f
   46b3e:	sete   dl
   46b41:	or     eax,edx
   46b43:	jmp    46ad1 <argp_usage@@Base+0x3751>
   46b45:	nop    DWORD PTR [rax]
   46b48:	mov    eax,0x2
   46b4d:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46b52:	lea    eax,[r12-0x31]
   46b57:	mov    BYTE PTR [rbp+0x8],0x4
   46b5b:	cdqe   
   46b5d:	mov    QWORD PTR [rbp+0x0],rax
   46b61:	mov    eax,0x2
   46b66:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46b6b:	nop    DWORD PTR [rax+rax*1+0x0]
   46b70:	mov    BYTE PTR [rbp+0x8],0x5
   46b74:	mov    eax,0x1
   46b79:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46b7e:	mov    eax,0x1
   46b83:	test   r14d,0x402
   46b8a:	jne    46a45 <argp_usage@@Base+0x36c5>
   46b90:	mov    BYTE PTR [rbp+0x8],0x13
   46b94:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46b99:	mov    BYTE PTR [rbp+0x8],0x14
   46b9d:	mov    eax,0x1
   46ba2:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46ba7:	test   r14d,0x800008
   46bae:	jne    46bbe <argp_usage@@Base+0x383e>
   46bb0:	mov    eax,0x1
   46bb5:	test   r13,r13
   46bb8:	jne    46a45 <argp_usage@@Base+0x36c5>
   46bbe:	mov    BYTE PTR [rbp+0x8],0xc
   46bc2:	mov    eax,0x1
   46bc7:	mov    DWORD PTR [rbp+0x0],0x10
   46bce:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46bd3:	mov    eax,0x1
   46bd8:	test   r14d,0x402
   46bdf:	jne    46a45 <argp_usage@@Base+0x36c5>
   46be5:	mov    BYTE PTR [rbp+0x8],0x12
   46be9:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46bee:	mov    eax,0x1
   46bf3:	test   r14d,0x2000
   46bfa:	je     46a45 <argp_usage@@Base+0x36c5>
   46c00:	mov    BYTE PTR [rbp+0x8],0x8
   46c04:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46c09:	mov    eax,0x1
   46c0e:	test   r14d,0x2000
   46c15:	je     46a45 <argp_usage@@Base+0x36c5>
   46c1b:	mov    BYTE PTR [rbp+0x8],0x9
   46c1f:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46c24:	and    r14d,0x1200
   46c2b:	mov    eax,0x1
   46c30:	cmp    r14,0x1200
   46c37:	jne    46a45 <argp_usage@@Base+0x36c5>
   46c3d:	mov    BYTE PTR [rbp+0x8],0x17
   46c41:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46c46:	and    r14d,0x8400
   46c4d:	mov    eax,0x1
   46c52:	cmp    r14,0x8000
   46c59:	jne    46a45 <argp_usage@@Base+0x36c5>
   46c5f:	mov    BYTE PTR [rbp+0x8],0xa
   46c63:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46c68:	and    r14d,0x1200
   46c6f:	mov    eax,0x1
   46c74:	cmp    r14,0x1200
   46c7b:	jne    46a45 <argp_usage@@Base+0x36c5>
   46c81:	mov    BYTE PTR [rbp+0x8],0x18
   46c85:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46c8a:	test   r14b,0x8
   46c8e:	jne    46cd0 <argp_usage@@Base+0x3950>
   46c90:	add    r13,0x1
   46c94:	cmp    r13,QWORD PTR [rbx+0x58]
   46c98:	je     46cd0 <argp_usage@@Base+0x3950>
   46c9a:	mov    QWORD PTR [rbx+0x48],r13
   46c9e:	mov    rdx,r14
   46ca1:	mov    rdi,rsp
   46ca4:	mov    rsi,rbx
   46ca7:	call   46950 <argp_usage@@Base+0x35d0>
   46cac:	movzx  eax,BYTE PTR [rsp+0x8]
   46cb1:	sub    QWORD PTR [rbx+0x48],0x1
   46cb6:	lea    edx,[rax-0x9]
   46cb9:	mov    eax,0x1
   46cbe:	cmp    dl,0x1
   46cc1:	ja     46a45 <argp_usage@@Base+0x36c5>
   46cc7:	nop    WORD PTR [rax+rax*1+0x0]
   46cd0:	mov    BYTE PTR [rbp+0x8],0xc
   46cd4:	mov    eax,0x1
   46cd9:	mov    DWORD PTR [rbp+0x0],0x20
   46ce0:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46ce5:	mov    BYTE PTR [rbp+0x8],0xb
   46ce9:	mov    eax,0x1
   46cee:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46cf3:	and    r14d,0x1200
   46cfa:	mov    eax,0x2
   46cff:	cmp    r14,0x200
   46d06:	jne    46a45 <argp_usage@@Base+0x36c5>
   46d0c:	jmp    46c81 <argp_usage@@Base+0x3901>
   46d11:	mov    eax,0x2
   46d16:	test   r14d,0x8400
   46d1d:	jne    46a45 <argp_usage@@Base+0x36c5>
   46d23:	jmp    46c5f <argp_usage@@Base+0x38df>
   46d28:	and    r14d,0x1200
   46d2f:	mov    eax,0x2
   46d34:	cmp    r14,0x200
   46d3b:	jne    46a45 <argp_usage@@Base+0x36c5>
   46d41:	jmp    46c3d <argp_usage@@Base+0x38bd>
   46d46:	and    r14d,0x402
   46d4d:	mov    eax,0x2
   46d52:	cmp    r14,0x2
   46d56:	jne    46a45 <argp_usage@@Base+0x36c5>
   46d5c:	jmp    46b90 <argp_usage@@Base+0x3810>
   46d61:	and    r14d,0x402
   46d68:	mov    eax,0x2
   46d6d:	cmp    r14,0x2
   46d71:	jne    46a45 <argp_usage@@Base+0x36c5>
   46d77:	jmp    46be5 <argp_usage@@Base+0x3865>
   46d7c:	mov    eax,0x2
   46d81:	test   r14d,0x2000
   46d88:	jne    46a45 <argp_usage@@Base+0x36c5>
   46d8e:	jmp    46c1b <argp_usage@@Base+0x389b>
   46d93:	mov    eax,0x2
   46d98:	test   r14d,0x2000
   46d9f:	jne    46a45 <argp_usage@@Base+0x36c5>
   46da5:	jmp    46c00 <argp_usage@@Base+0x3880>
   46daa:	mov    BYTE PTR [rbp+0x8],0x20
   46dae:	mov    eax,0x2
   46db3:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46db8:	mov    BYTE PTR [rbp+0x8],0x22
   46dbc:	mov    eax,0x2
   46dc1:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46dc6:	mov    BYTE PTR [rbp+0x8],0xc
   46dca:	mov    eax,0x2
   46dcf:	mov    DWORD PTR [rbp+0x0],0x100
   46dd6:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46ddb:	mov    BYTE PTR [rbp+0x8],0xc
   46ddf:	mov    eax,0x2
   46de4:	mov    DWORD PTR [rbp+0x0],0x40
   46deb:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46df0:	mov    BYTE PTR [rbp+0x8],0x21
   46df4:	mov    eax,0x2
   46df9:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46dfe:	mov    BYTE PTR [rbp+0x8],0x23
   46e02:	mov    eax,0x2
   46e07:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46e0c:	mov    BYTE PTR [rbp+0x8],0xc
   46e10:	mov    eax,0x2
   46e15:	mov    DWORD PTR [rbp+0x0],0x80
   46e1c:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46e21:	mov    BYTE PTR [rbp+0x8],0xc
   46e25:	mov    eax,0x2
   46e2a:	mov    DWORD PTR [rbp+0x0],0x200
   46e31:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46e36:	mov    BYTE PTR [rbp+0x8],0xc
   46e3a:	mov    eax,0x2
   46e3f:	mov    DWORD PTR [rbp+0x0],0x9
   46e46:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46e4b:	mov    BYTE PTR [rbp+0x8],0xc
   46e4f:	mov    eax,0x2
   46e54:	mov    DWORD PTR [rbp+0x0],0x6
   46e5b:	jmp    46a45 <argp_usage@@Base+0x36c5>
   46e60:	cmp    eax,0x1
   46e63:	jle    46e8c <argp_usage@@Base+0x3b0c>
   46e65:	mov    r8,QWORD PTR [rbx+0x10]
   46e69:	lea    rdi,[rcx*4+0x0]
   46e71:	lea    rsi,[r8+rdi*1]
   46e75:	cmp    DWORD PTR [rsi],0xffffffff
   46e78:	je     46ecd <argp_usage@@Base+0x3b4d>
   46e7a:	lea    r9,[r13+0x2]
   46e7e:	cmp    QWORD PTR [rbx+0x30],r9
   46e82:	je     46e8c <argp_usage@@Base+0x3b0c>
   46e84:	cmp    DWORD PTR [r8+rdi*1+0x4],0xffffffff
   46e8a:	je     46ecd <argp_usage@@Base+0x3b4d>
   46e8c:	cmp    BYTE PTR [rbx+0x8c],0x0
   46e93:	mov    rsi,QWORD PTR [rbx]
   46e96:	mov    rdi,QWORD PTR [rbx+0x28]
   46e9a:	je     46ebd <argp_usage@@Base+0x3b3d>
   46e9c:	mov    r8,QWORD PTR [rbx+0x18]
   46ea0:	add    rsi,rdi
   46ea3:	add    rsi,QWORD PTR [r8+rcx*8]
   46ea7:	movzx  r12d,BYTE PTR [rsi]
   46eab:	mov    r15d,r12d
   46eae:	test   r12b,0x80
   46eb2:	je     46aa6 <argp_usage@@Base+0x3726>
   46eb8:	jmp    46a9d <argp_usage@@Base+0x371d>
   46ebd:	add    rsi,rcx
   46ec0:	movzx  r12d,BYTE PTR [rsi+rdi*1]
   46ec5:	mov    r15d,r12d
   46ec8:	jmp    46aa6 <argp_usage@@Base+0x3726>
   46ecd:	movzx  r12d,BYTE PTR [rdx+r13*1+0x1]
   46ed3:	mov    BYTE PTR [rbp+0x8],0x1
   46ed7:	mov    BYTE PTR [rbp+0x0],r12b
   46edb:	mov    r15d,r12d
   46ede:	jmp    46abb <argp_usage@@Base+0x373b>
   46ee3:	call   a0a0 <__stack_chk_fail@plt>
   46ee8:	nop    DWORD PTR [rax+rax*1+0x0]
   46ef0:	push   r13
   46ef2:	mov    r13,rdi
   46ef5:	push   r12
   46ef7:	mov    r12,0xffffffffffffffff
   46efe:	push   rbp
   46eff:	mov    rbp,rdx
   46f02:	push   rbx
   46f03:	mov    rbx,rsi
   46f06:	sub    rsp,0x8
   46f0a:	nop    WORD PTR [rax+rax*1+0x0]
   46f10:	mov    rdx,rbp
   46f13:	mov    rsi,r13
   46f16:	mov    rdi,rbx
   46f19:	call   46950 <argp_usage@@Base+0x35d0>
   46f1e:	movzx  edx,BYTE PTR [rbx]
   46f21:	cdqe   
   46f23:	add    QWORD PTR [r13+0x48],rax
   46f27:	movzx  eax,BYTE PTR [rbx+0x8]
   46f2b:	cmp    al,0x2
   46f2d:	je     46f78 <argp_usage@@Base+0x3bf8>
   46f2f:	cmp    dl,0x2c
   46f32:	je     46f7f <argp_usage@@Base+0x3bff>
   46f34:	cmp    al,0x18
   46f36:	je     46f7f <argp_usage@@Base+0x3bff>
   46f38:	cmp    al,0x1
   46f3a:	je     46f48 <argp_usage@@Base+0x3bc8>
   46f3c:	mov    r12,0xfffffffffffffffe
   46f43:	jmp    46f10 <argp_usage@@Base+0x3b90>
   46f45:	nop    DWORD PTR [rax]
   46f48:	lea    eax,[rdx-0x30]
   46f4b:	cmp    al,0x9
   46f4d:	ja     46f3c <argp_usage@@Base+0x3bbc>
   46f4f:	cmp    r12,0xfffffffffffffffe
   46f53:	je     46f3c <argp_usage@@Base+0x3bbc>
   46f55:	cmp    r12,0xffffffffffffffff
   46f59:	je     46f90 <argp_usage@@Base+0x3c10>
   46f5b:	lea    rax,[r12+r12*4]
   46f5f:	lea    r12,[rdx+rax*2]
   46f63:	mov    eax,0x8030
   46f68:	cmp    r12,rax
   46f6b:	cmovg  r12,rax
   46f6f:	sub    r12,0x30
   46f73:	jmp    46f10 <argp_usage@@Base+0x3b90>
   46f75:	nop    DWORD PTR [rax]
   46f78:	mov    r12,0xfffffffffffffffe
   46f7f:	add    rsp,0x8
   46f83:	mov    rax,r12
   46f86:	pop    rbx
   46f87:	pop    rbp
   46f88:	pop    r12
   46f8a:	pop    r13
   46f8c:	ret    
   46f8d:	nop    DWORD PTR [rax]
   46f90:	sub    edx,0x30
   46f93:	movsxd r12,edx
   46f96:	jmp    46f10 <argp_usage@@Base+0x3b90>
   46f9b:	nop    DWORD PTR [rax+rax*1+0x0]
   46fa0:	push   r12
   46fa2:	shl    rdx,0x4
   46fa6:	mov    r12,r8
   46fa9:	push   rbp
   46faa:	mov    rbp,rdi
   46fad:	mov    rdi,rcx
   46fb0:	mov    rax,QWORD PTR [rbp+0x0]
   46fb4:	push   rbx
   46fb5:	sub    rax,0x1
   46fb9:	mov    QWORD PTR [rbp+0x0],rax
   46fbd:	lea    rbx,[rax+rax*2]
   46fc1:	mov    rax,QWORD PTR [rbp+0x10]
   46fc5:	shl    rbx,0x4
   46fc9:	add    rax,rbx
   46fcc:	mov    rcx,QWORD PTR [rax]
   46fcf:	mov    QWORD PTR [rsi],rcx
   46fd2:	mov    rsi,QWORD PTR [rax+0x10]
   46fd6:	call   a420 <memcpy@plt>
   46fdb:	mov    rdi,QWORD PTR [r12+0x10]
   46fe0:	call   9ce0 <free@plt>
   46fe5:	mov    rax,QWORD PTR [rbp+0x10]
   46fe9:	mov    rdi,QWORD PTR [rax+rbx*1+0x10]
   46fee:	call   9ce0 <free@plt>
   46ff3:	add    rbx,QWORD PTR [rbp+0x10]
   46ff7:	movdqu xmm0,XMMWORD PTR [rbx+0x18]
   46ffc:	movups XMMWORD PTR [r12],xmm0
   47001:	mov    rax,QWORD PTR [rbx+0x28]
   47005:	mov    QWORD PTR [r12+0x10],rax
   4700a:	mov    rax,QWORD PTR [rbx+0x8]
   4700e:	pop    rbx
   4700f:	pop    rbp
   47010:	pop    r12
   47012:	ret    
   47013:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4701e:	xchg   ax,ax
   47020:	push   r15
   47022:	push   r14
   47024:	push   r13
   47026:	push   r12
   47028:	mov    r12,rsi
   4702b:	push   rbp
   4702c:	mov    rbp,rdx
   4702f:	push   rbx
   47030:	mov    rbx,rdi
   47033:	sub    rsp,0x18
   47037:	mov    rsi,QWORD PTR [rdi+0x10]
   4703b:	mov    r13,QWORD PTR [rdi+0x8]
   4703f:	cmp    rsi,r13
   47042:	jae    470f0 <argp_usage@@Base+0x3d70>
   47048:	mov    r14,QWORD PTR [rdi+0x18]
   4704c:	mov    r13,QWORD PTR [rdi+0x28]
   47050:	mov    rax,rsi
   47053:	mov    edx,ebp
   47055:	and    edx,0xfffc00ff
   4705b:	shl    rax,0x4
   4705f:	add    rax,QWORD PTR [rbx]
   47062:	cmp    bpl,0x6
   47066:	mov    QWORD PTR [rax+0x8],rbp
   4706a:	mov    QWORD PTR [rax],r12
   4706d:	mov    DWORD PTR [rax+0x8],edx
   47070:	sete   dl
   47073:	cmp    bpl,0x5
   47077:	jne    47083 <argp_usage@@Base+0x3d03>
   47079:	cmp    DWORD PTR [rbx+0xb4],0x1
   47080:	setg   dl
   47083:	mov    ecx,edx
   47085:	movzx  edx,BYTE PTR [rax+0xa]
   47089:	pxor   xmm0,xmm0
   4708d:	shl    ecx,0x4
   47090:	and    edx,0xffffffef
   47093:	or     edx,ecx
   47095:	mov    BYTE PTR [rax+0xa],dl
   47098:	mov    QWORD PTR [r14+rsi*8],0xffffffffffffffff
   470a0:	mov    rax,QWORD PTR [rbx+0x10]
   470a4:	lea    rax,[rax+rax*2]
   470a8:	lea    rax,[r13+rax*8+0x0]
   470ad:	mov    QWORD PTR [rax+0x10],0x0
   470b5:	movups XMMWORD PTR [rax],xmm0
   470b8:	mov    rax,QWORD PTR [rbx+0x10]
   470bc:	lea    rdx,[rax+rax*2]
   470c0:	mov    rax,QWORD PTR [rbx+0x30]
   470c4:	lea    rax,[rax+rdx*8]
   470c8:	mov    QWORD PTR [rax+0x10],0x0
   470d0:	movups XMMWORD PTR [rax],xmm0
   470d3:	mov    rax,QWORD PTR [rbx+0x10]
   470d7:	lea    rdx,[rax+0x1]
   470db:	mov    QWORD PTR [rbx+0x10],rdx
   470df:	add    rsp,0x18
   470e3:	pop    rbx
   470e4:	pop    rbp
   470e5:	pop    r12
   470e7:	pop    r13
   470e9:	pop    r14
   470eb:	pop    r15
   470ed:	ret    
   470ee:	xchg   ax,ax
   470f0:	movabs rax,0xaaaaaaaaaaaaaaa
   470fa:	lea    r15,[r13+r13*1+0x0]
   470ff:	cmp    r15,rax
   47102:	ja     471dc <argp_usage@@Base+0x3e5c>
   47108:	mov    rsi,r13
   4710b:	mov    rdi,QWORD PTR [rdi]
   4710e:	shl    rsi,0x5
   47112:	call   a570 <realloc@plt>
   47117:	test   rax,rax
   4711a:	je     471dc <argp_usage@@Base+0x3e5c>
   47120:	mov    QWORD PTR [rbx],rax
   47123:	mov    rdi,QWORD PTR [rbx+0x18]
   47127:	mov    rsi,r13
   4712a:	shl    rsi,0x4
   4712e:	mov    QWORD PTR [rsp],rsi
   47132:	call   a570 <realloc@plt>
   47137:	mov    rdi,QWORD PTR [rbx+0x20]
   4713b:	mov    rsi,QWORD PTR [rsp]
   4713f:	mov    r14,rax
   47142:	call   a570 <realloc@plt>
   47147:	mov    rdi,QWORD PTR [rbx+0x28]
   4714b:	lea    rsi,[r15+r13*1]
   4714f:	shl    rsi,0x4
   47153:	mov    QWORD PTR [rsp+0x8],rax
   47158:	mov    QWORD PTR [rsp],rsi
   4715c:	call   a570 <realloc@plt>
   47161:	mov    rdi,QWORD PTR [rbx+0x30]
   47165:	mov    rsi,QWORD PTR [rsp]
   47169:	mov    r13,rax
   4716c:	call   a570 <realloc@plt>
   47171:	test   r14,r14
   47174:	mov    r8,QWORD PTR [rsp+0x8]
   47179:	je     471b0 <argp_usage@@Base+0x3e30>
   4717b:	test   r8,r8
   4717e:	je     471b0 <argp_usage@@Base+0x3e30>
   47180:	test   r13,r13
   47183:	je     471b0 <argp_usage@@Base+0x3e30>
   47185:	test   rax,rax
   47188:	je     471b0 <argp_usage@@Base+0x3e30>
   4718a:	mov    QWORD PTR [rbx+0x18],r14
   4718e:	mov    rsi,QWORD PTR [rbx+0x10]
   47192:	mov    QWORD PTR [rbx+0x20],r8
   47196:	mov    QWORD PTR [rbx+0x28],r13
   4719a:	mov    QWORD PTR [rbx+0x30],rax
   4719e:	mov    QWORD PTR [rbx+0x8],r15
   471a2:	jmp    47050 <argp_usage@@Base+0x3cd0>
   471a7:	nop    WORD PTR [rax+rax*1+0x0]
   471b0:	mov    rdi,r14
   471b3:	mov    QWORD PTR [rsp+0x8],rax
   471b8:	mov    QWORD PTR [rsp],r8
   471bc:	call   9ce0 <free@plt>
   471c1:	mov    rdi,QWORD PTR [rsp]
   471c5:	call   9ce0 <free@plt>
   471ca:	mov    rdi,r13
   471cd:	call   9ce0 <free@plt>
   471d2:	mov    rdi,QWORD PTR [rsp+0x8]
   471d7:	call   9ce0 <free@plt>
   471dc:	mov    rax,0xffffffffffffffff
   471e3:	jmp    470df <argp_usage@@Base+0x3d5f>
   471e8:	nop    DWORD PTR [rax+rax*1+0x0]
   471f0:	push   r13
   471f2:	mov    r13,rsi
   471f5:	push   r12
   471f7:	shl    r13,0x4
   471fb:	mov    r12,rdi
   471fe:	push   rbp
   471ff:	mov    rbp,rsi
   47202:	push   rbx
   47203:	mov    ebx,edx
   47205:	sub    rsp,0x8
   47209:	mov    rax,QWORD PTR [rdi]
   4720c:	mov    rsi,QWORD PTR [rax+r13*1]
   47210:	mov    rdx,QWORD PTR [rax+r13*1+0x8]
   47215:	call   47020 <argp_usage@@Base+0x3ca0>
   4721a:	mov    r8,rax
   4721d:	cmp    rax,0xffffffffffffffff
   47221:	je     47271 <argp_usage@@Base+0x3ef1>
   47223:	mov    rsi,QWORD PTR [r12]
   47227:	mov    rdx,rax
   4722a:	mov    ecx,ebx
   4722c:	shl    rdx,0x4
   47230:	and    ecx,0x3ff
   47236:	add    rdx,rsi
   47239:	shl    ecx,0x8
   4723c:	mov    eax,DWORD PTR [rdx+0x8]
   4723f:	and    eax,0xfffc00ff
   47244:	or     eax,ecx
   47246:	mov    DWORD PTR [rdx+0x8],eax
   47249:	or     bx,WORD PTR [rsi+r13*1+0x9]
   4724f:	and    eax,0xfff800ff
   47254:	and    ebx,0x3ff
   4725a:	shl    ebx,0x8
   4725d:	or     ebx,0x40000
   47263:	or     ebx,eax
   47265:	mov    rax,QWORD PTR [r12+0x20]
   4726a:	mov    DWORD PTR [rdx+0x8],ebx
   4726d:	mov    QWORD PTR [rax+r8*8],rbp
   47271:	add    rsp,0x8
   47275:	mov    rax,r8
   47278:	pop    rbx
   47279:	pop    rbp
   4727a:	pop    r12
   4727c:	pop    r13
   4727e:	ret    
   4727f:	nop
   47280:	push   r15
   47282:	mov    r15,rdx
   47285:	push   r14
   47287:	push   r13
   47289:	push   r12
   4728b:	push   rbp
   4728c:	xor    ebp,ebp
   4728e:	push   rbx
   4728f:	sub    rsp,0x168
   47296:	mov    rbx,QWORD PTR [rdi]
   47299:	mov    QWORD PTR [rsp+0x20],rdi
   4729e:	mov    QWORD PTR [rsp+0x8],rsi
   472a3:	mov    rax,QWORD PTR fs:0x28
   472ac:	mov    QWORD PTR [rsp+0x158],rax
   472b4:	xor    eax,eax
   472b6:	cmp    DWORD PTR [rbx+0xb4],0x1
   472bd:	jne    472d4 <argp_usage@@Base+0x3f54>
   472bf:	mov    rax,QWORD PTR [rdi+0x18]
   472c3:	mov    r9,rax
   472c6:	mov    QWORD PTR [rsp],rax
   472ca:	shr    r9,0x16
   472ce:	mov    ebp,r9d
   472d1:	and    ebp,0x1
   472d4:	mov    rax,QWORD PTR [rsp+0x8]
   472d9:	mov    QWORD PTR [rsp],0x0
   472e1:	cmp    QWORD PTR [rax+0x10],0x0
   472e6:	jle    47388 <argp_usage@@Base+0x4008>
   472ec:	mov    rax,QWORD PTR [rsp+0x8]
   472f1:	mov    rsi,QWORD PTR [rsp]
   472f5:	mov    rdx,QWORD PTR [rbx]
   472f8:	mov    rax,QWORD PTR [rax+0x18]
   472fc:	mov    r13,QWORD PTR [rax+rsi*8]
   47300:	mov    rax,r13
   47303:	shl    rax,0x4
   47307:	lea    rcx,[rdx+rax*1]
   4730b:	mov    QWORD PTR [rsp+0x18],rax
   47310:	movzx  esi,BYTE PTR [rcx+0x8]
   47314:	cmp    sil,0x1
   47318:	je     47331 <argp_usage@@Base+0x3fb1>
   4731a:	cmp    sil,0x7
   4731e:	ja     47370 <argp_usage@@Base+0x3ff0>
   47320:	lea    rdi,[rip+0x254fd]        # 6c824 <_obstack_memory_used@@Base+0x1fba4>
   47327:	movsxd rax,DWORD PTR [rdi+rsi*4]
   4732b:	add    rax,rdi
   4732e:	notrack jmp rax
   47331:	movzx  edx,BYTE PTR [rcx]
   47334:	mov    BYTE PTR [r15+rdx*1],0x1
   47339:	mov    QWORD PTR [rsp+0x10],rdx
   4733e:	test   ebp,ebp
   47340:	je     47358 <argp_usage@@Base+0x3fd8>
   47342:	call   a970 <__ctype_tolower_loc@plt>
   47347:	mov    rdx,QWORD PTR [rsp+0x10]
   4734c:	mov    rax,QWORD PTR [rax]
   4734f:	movsxd rax,DWORD PTR [rax+rdx*4]
   47353:	mov    BYTE PTR [r15+rax*1],0x1
   47358:	mov    rax,QWORD PTR [rsp+0x20]
   4735d:	test   BYTE PTR [rax+0x1a],0x40
   47361:	je     47370 <argp_usage@@Base+0x3ff0>
   47363:	cmp    DWORD PTR [rbx+0xb4],0x1
   4736a:	jg     476d8 <argp_usage@@Base+0x4358>
   47370:	mov    rcx,QWORD PTR [rsp+0x8]
   47375:	add    QWORD PTR [rsp],0x1
   4737a:	mov    rax,QWORD PTR [rsp]
   4737e:	cmp    QWORD PTR [rcx+0x10],rax
   47382:	jg     472ec <argp_usage@@Base+0x3f6c>
   47388:	mov    rax,QWORD PTR [rsp+0x158]
   47390:	sub    rax,QWORD PTR fs:0x28
   47399:	jne    4781a <argp_usage@@Base+0x449a>
   4739f:	add    rsp,0x168
   473a6:	pop    rbx
   473a7:	pop    rbp
   473a8:	pop    r12
   473aa:	pop    r13
   473ac:	pop    r14
   473ae:	pop    r15
   473b0:	ret    
   473b1:	movdqa xmm0,XMMWORD PTR [rip+0x25a87]        # 6ce40 <_obstack_memory_used@@Base+0x201c0>
   473b9:	movups XMMWORD PTR [r15],xmm0
   473bd:	movups XMMWORD PTR [r15+0x10],xmm0
   473c2:	movups XMMWORD PTR [r15+0x20],xmm0
   473c7:	movups XMMWORD PTR [r15+0x30],xmm0
   473cc:	movups XMMWORD PTR [r15+0x40],xmm0
   473d1:	movups XMMWORD PTR [r15+0x50],xmm0
   473d6:	movups XMMWORD PTR [r15+0x60],xmm0
   473db:	movups XMMWORD PTR [r15+0x70],xmm0
   473e0:	movups XMMWORD PTR [r15+0x80],xmm0
   473e8:	movups XMMWORD PTR [r15+0x90],xmm0
   473f0:	movups XMMWORD PTR [r15+0xa0],xmm0
   473f8:	movups XMMWORD PTR [r15+0xb0],xmm0
   47400:	movups XMMWORD PTR [r15+0xc0],xmm0
   47408:	movups XMMWORD PTR [r15+0xd0],xmm0
   47410:	movups XMMWORD PTR [r15+0xe0],xmm0
   47418:	movups XMMWORD PTR [r15+0xf0],xmm0
   47420:	cmp    esi,0x2
   47423:	jne    47388 <argp_usage@@Base+0x4008>
   47429:	jmp    4749a <argp_usage@@Base+0x411a>
   4742b:	movdqa xmm0,XMMWORD PTR [rip+0x25a0d]        # 6ce40 <_obstack_memory_used@@Base+0x201c0>
   47433:	movups XMMWORD PTR [r15],xmm0
   47437:	movups XMMWORD PTR [r15+0x10],xmm0
   4743c:	movups XMMWORD PTR [r15+0x20],xmm0
   47441:	movups XMMWORD PTR [r15+0x30],xmm0
   47446:	movups XMMWORD PTR [r15+0x40],xmm0
   4744b:	movups XMMWORD PTR [r15+0x50],xmm0
   47450:	movups XMMWORD PTR [r15+0x60],xmm0
   47455:	movups XMMWORD PTR [r15+0x70],xmm0
   4745a:	movups XMMWORD PTR [r15+0x80],xmm0
   47462:	movups XMMWORD PTR [r15+0x90],xmm0
   4746a:	movups XMMWORD PTR [r15+0xa0],xmm0
   47472:	movups XMMWORD PTR [r15+0xb0],xmm0
   4747a:	movups XMMWORD PTR [r15+0xc0],xmm0
   47482:	movups XMMWORD PTR [r15+0xd0],xmm0
   4748a:	movups XMMWORD PTR [r15+0xe0],xmm0
   47492:	movups XMMWORD PTR [r15+0xf0],xmm0
   4749a:	mov    rax,QWORD PTR [rsp+0x20]
   4749f:	or     BYTE PTR [rax+0x38],0x1
   474a3:	jmp    47388 <argp_usage@@Base+0x4008>
   474a8:	cmp    DWORD PTR [rbx+0xb4],0x1
   474af:	mov    r10,QWORD PTR [rcx]
   474b2:	jle    474d5 <argp_usage@@Base+0x4155>
   474b4:	cmp    QWORD PTR [r10+0x48],0x0
   474b9:	jne    4765c <argp_usage@@Base+0x42dc>
   474bf:	test   BYTE PTR [r10+0x20],0x1
   474c4:	jne    4765c <argp_usage@@Base+0x42dc>
   474ca:	cmp    QWORD PTR [r10+0x40],0x0
   474cf:	jne    4765c <argp_usage@@Base+0x42dc>
   474d5:	xor    ecx,ecx
   474d7:	cmp    QWORD PTR [r10+0x28],0x0
   474dc:	lea    r13,[rsp+0x40]
   474e1:	lea    r14,[rsp+0x38]
   474e6:	jg     474fe <argp_usage@@Base+0x417e>
   474e8:	jmp    47370 <argp_usage@@Base+0x3ff0>
   474ed:	nop    DWORD PTR [rax]
   474f0:	add    rcx,0x1
   474f4:	cmp    QWORD PTR [r10+0x28],rcx
   474f8:	jle    47370 <argp_usage@@Base+0x3ff0>
   474fe:	lea    rax,[rcx*4+0x0]
   47506:	mov    QWORD PTR [r14],0x0
   4750d:	mov    rdx,r14
   47510:	mov    rdi,r13
   47513:	mov    r12,rax
   47516:	mov    rax,QWORD PTR [r10]
   47519:	mov    QWORD PTR [rsp+0x18],r10
   4751e:	mov    QWORD PTR [rsp+0x10],rcx
   47523:	mov    esi,DWORD PTR [rax+rcx*4]
   47526:	call   a4b0 <wcrtomb@plt>
   4752b:	mov    rcx,QWORD PTR [rsp+0x10]
   47530:	mov    r10,QWORD PTR [rsp+0x18]
   47535:	cmp    rax,0xffffffffffffffff
   47539:	je     47573 <argp_usage@@Base+0x41f3>
   4753b:	movzx  edx,BYTE PTR [rsp+0x40]
   47540:	mov    BYTE PTR [r15+rdx*1],0x1
   47545:	mov    QWORD PTR [rsp+0x10],rdx
   4754a:	test   ebp,ebp
   4754c:	je     47573 <argp_usage@@Base+0x41f3>
   4754e:	mov    QWORD PTR [rsp+0x28],rcx
   47553:	call   a970 <__ctype_tolower_loc@plt>
   47558:	mov    rdx,QWORD PTR [rsp+0x10]
   4755d:	mov    rcx,QWORD PTR [rsp+0x28]
   47562:	mov    rax,QWORD PTR [rax]
   47565:	mov    r10,QWORD PTR [rsp+0x18]
   4756a:	movsxd rax,DWORD PTR [rax+rdx*4]
   4756e:	mov    BYTE PTR [r15+rax*1],0x1
   47573:	mov    rax,QWORD PTR [rsp+0x20]
   47578:	test   BYTE PTR [rax+0x1a],0x40
   4757c:	je     474f0 <argp_usage@@Base+0x4170>
   47582:	cmp    DWORD PTR [rbx+0xb4],0x1
   47589:	jle    474f0 <argp_usage@@Base+0x4170>
   4758f:	mov    rax,QWORD PTR [r10]
   47592:	mov    QWORD PTR [rsp+0x18],rcx
   47597:	mov    QWORD PTR [rsp+0x10],r10
   4759c:	mov    edi,DWORD PTR [rax+r12*1]
   475a0:	call   a700 <towlower@plt>
   475a5:	mov    rdx,r14
   475a8:	mov    rdi,r13
   475ab:	mov    esi,eax
   475ad:	call   a4b0 <wcrtomb@plt>
   475b2:	mov    r10,QWORD PTR [rsp+0x10]
   475b7:	mov    rcx,QWORD PTR [rsp+0x18]
   475bc:	cmp    rax,0xffffffffffffffff
   475c0:	je     474f0 <argp_usage@@Base+0x4170>
   475c6:	movzx  eax,BYTE PTR [rsp+0x40]
   475cb:	mov    BYTE PTR [r15+rax*1],0x1
   475d0:	jmp    474f0 <argp_usage@@Base+0x4170>
   475d5:	mov    QWORD PTR [rsp+0x10],0x0
   475de:	mov    rax,QWORD PTR [rsp+0x18]
   475e3:	mov    rsi,QWORD PTR [rsp+0x10]
   475e8:	xor    r14d,r14d
   475eb:	mov    rax,QWORD PTR [rdx+rax*1]
   475ef:	lea    r13,[rsi*8+0x0]
   475f7:	mov    r12,QWORD PTR [rax+rsi*1]
   475fb:	nop    DWORD PTR [rax+rax*1+0x0]
   47600:	bt     r12,r14
   47604:	jae    47634 <argp_usage@@Base+0x42b4>
   47606:	mov    BYTE PTR [r15+r13*1],0x1
   4760b:	lea    rax,[r15+r13*1]
   4760f:	test   ebp,ebp
   47611:	je     47634 <argp_usage@@Base+0x42b4>
   47613:	lea    edi,[r13+0x80]
   4761a:	cmp    edi,0x17f
   47620:	ja     47631 <argp_usage@@Base+0x42b1>
   47622:	call   a970 <__ctype_tolower_loc@plt>
   47627:	mov    rax,QWORD PTR [rax]
   4762a:	movsxd rax,DWORD PTR [rax+r13*4]
   4762e:	add    rax,r15
   47631:	mov    BYTE PTR [rax],0x1
   47634:	add    r14d,0x1
   47638:	add    r13,0x1
   4763c:	cmp    r14d,0x40
   47640:	jne    47600 <argp_usage@@Base+0x4280>
   47642:	add    QWORD PTR [rsp+0x10],0x8
   47648:	mov    rax,QWORD PTR [rsp+0x10]
   4764d:	cmp    rax,0x20
   47651:	je     47370 <argp_usage@@Base+0x3ff0>
   47657:	mov    rdx,QWORD PTR [rbx]
   4765a:	jmp    475de <argp_usage@@Base+0x425e>
   4765c:	lea    rax,[rsp+0x33]
   47661:	mov    BYTE PTR [rsp+0x33],0x0
   47666:	lea    r13,[rsp+0x40]
   4766b:	lea    r14,[rsp+0x34]
   47670:	mov    r12,rax
   47673:	jmp    47687 <argp_usage@@Base+0x4307>
   47675:	nop    DWORD PTR [rax]
   47678:	add    eax,0x1
   4767b:	mov    BYTE PTR [rsp+0x33],al
   4767f:	test   al,al
   47681:	je     47370 <argp_usage@@Base+0x3ff0>
   47687:	mov    edx,0x1
   4768c:	mov    rcx,r13
   4768f:	mov    rsi,r12
   47692:	mov    rdi,r14
   47695:	mov    QWORD PTR [r13+0x0],0x0
   4769d:	call   a0c0 <mbrtowc@plt>
   476a2:	mov    rdx,rax
   476a5:	movzx  eax,BYTE PTR [rsp+0x33]
   476aa:	cmp    rdx,0xfffffffffffffffd
   476ae:	jbe    47678 <argp_usage@@Base+0x42f8>
   476b0:	mov    QWORD PTR [rsp+0x10],rdx
   476b5:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   476ba:	mov    rdx,QWORD PTR [rsp+0x10]
   476bf:	test   al,al
   476c1:	movzx  eax,BYTE PTR [rsp+0x33]
   476c6:	je     47678 <argp_usage@@Base+0x42f8>
   476c8:	cmp    rdx,0xfffffffffffffffe
   476cc:	jne    47678 <argp_usage@@Base+0x42f8>
   476ce:	movzx  edx,al
   476d1:	mov    BYTE PTR [r15+rdx*1],0x1
   476d6:	jmp    47678 <argp_usage@@Base+0x42f8>
   476d8:	mov    rax,QWORD PTR [rbx]
   476db:	mov    rcx,QWORD PTR [rsp+0x18]
   476e0:	add    r13,0x1
   476e4:	mov    r11d,0x1
   476ea:	mov    edx,0x1
   476ef:	lea    r10,[rsp+0x140]
   476f7:	movzx  eax,BYTE PTR [rax+rcx*1]
   476fb:	lea    rcx,[rsp+0x141]
   47703:	mov    BYTE PTR [rsp+0x140],al
   4770a:	cmp    r13,QWORD PTR [rbx+0x10]
   4770e:	jb     4772c <argp_usage@@Base+0x43ac>
   47710:	jmp    47759 <argp_usage@@Base+0x43d9>
   47712:	nop    WORD PTR [rax+rax*1+0x0]
   47718:	movzx  eax,BYTE PTR [rax]
   4771b:	add    rcx,0x1
   4771f:	add    r13,0x1
   47723:	mov    BYTE PTR [rcx-0x1],al
   47726:	cmp    QWORD PTR [rbx+0x10],r13
   4772a:	jbe    47747 <argp_usage@@Base+0x43c7>
   4772c:	mov    rax,r13
   4772f:	shl    rax,0x4
   47733:	add    rax,QWORD PTR [rbx]
   47736:	mov    edx,DWORD PTR [rax+0x8]
   47739:	and    edx,0x2000ff
   4773f:	cmp    edx,0x200001
   47745:	je     47718 <argp_usage@@Base+0x4398>
   47747:	lea    r10,[rsp+0x140]
   4774f:	sub    rcx,r10
   47752:	mov    rdx,rcx
   47755:	setne  r11b
   47759:	lea    r14,[rsp+0x34]
   4775e:	lea    r13,[rsp+0x40]
   47763:	mov    rsi,r10
   47766:	mov    QWORD PTR [rsp+0x18],rdx
   4776b:	mov    rdi,r14
   4776e:	mov    rcx,r13
   47771:	mov    QWORD PTR [rsp+0x10],r10
   47776:	mov    BYTE PTR [rsp+0x28],r11b
   4777b:	mov    QWORD PTR [rsp+0x40],0x0
   47784:	call   a0c0 <mbrtowc@plt>
   47789:	mov    r10,QWORD PTR [rsp+0x10]
   4778e:	mov    rdx,QWORD PTR [rsp+0x18]
   47793:	cmp    rax,0xfffffffffffffffd
   47797:	mov    r14,rax
   4779a:	jbe    477c4 <argp_usage@@Base+0x4444>
   4779c:	movzx  r11d,BYTE PTR [rsp+0x28]
   477a2:	test   r11b,r11b
   477a5:	je     477c4 <argp_usage@@Base+0x4444>
   477a7:	mov    QWORD PTR [rsp+0x18],r10
   477ac:	mov    QWORD PTR [rsp+0x10],rdx
   477b1:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   477b6:	mov    rdx,QWORD PTR [rsp+0x10]
   477bb:	mov    r10,QWORD PTR [rsp+0x18]
   477c0:	test   al,al
   477c2:	je     47806 <argp_usage@@Base+0x4486>
   477c4:	cmp    rdx,r14
   477c7:	jne    47370 <argp_usage@@Base+0x3ff0>
   477cd:	mov    edi,DWORD PTR [rsp+0x34]
   477d1:	mov    QWORD PTR [rsp+0x10],r10
   477d6:	call   a700 <towlower@plt>
   477db:	mov    rdi,QWORD PTR [rsp+0x10]
   477e0:	mov    rdx,r13
   477e3:	mov    esi,eax
   477e5:	call   a4b0 <wcrtomb@plt>
   477ea:	cmp    rax,0xffffffffffffffff
   477ee:	je     47370 <argp_usage@@Base+0x3ff0>
   477f4:	movzx  eax,BYTE PTR [rsp+0x140]
   477fc:	mov    BYTE PTR [r15+rax*1],0x1
   47801:	jmp    47370 <argp_usage@@Base+0x3ff0>
   47806:	movzx  eax,BYTE PTR [rsp+0x140]
   4780e:	mov    r14d,0x1
   47814:	mov    DWORD PTR [rsp+0x34],eax
   47818:	jmp    477c4 <argp_usage@@Base+0x4444>
   4781a:	call   a0a0 <__stack_chk_fail@plt>
   4781f:	nop
   47820:	push   r15
   47822:	push   r14
   47824:	mov    r14,rcx
   47827:	push   r13
   47829:	mov    r13,rdx
   4782c:	push   r12
   4782e:	mov    r12,r8
   47831:	push   rbp
   47832:	mov    rbp,rdi
   47835:	push   rbx
   47836:	mov    rbx,rsi
   47839:	sub    rsp,0x8
   4783d:	test   r9d,0x400000
   47844:	je     47864 <argp_usage@@Base+0x44e4>
   47846:	lea    rsi,[rip+0x24a5f]        # 6c2ac <_obstack_memory_used@@Base+0x1f62c>
   4784d:	mov    rdi,r8
   47850:	call   a320 <strcmp@plt>
   47855:	test   eax,eax
   47857:	jne    47946 <argp_usage@@Base+0x45c6>
   4785d:	lea    r12,[rip+0x24a42]        # 6c2a6 <_obstack_memory_used@@Base+0x1f626>
   47864:	mov    rdx,QWORD PTR [r13+0x48]
   47868:	mov    rdi,QWORD PTR [r13+0x18]
   4786c:	cmp    QWORD PTR [r14],rdx
   4786f:	je     47973 <argp_usage@@Base+0x45f3>
   47875:	lea    rax,[rdx+0x1]
   47879:	mov    QWORD PTR [r13+0x48],rax
   4787d:	lea    r13,[rdi+rdx*8]
   47881:	mov    rdi,r12
   47884:	call   a2d0 <wctype@plt>
   47889:	lea    rsi,[rip+0x24a28]        # 6c2b8 <_obstack_memory_used@@Base+0x1f638>
   47890:	mov    rdi,r12
   47893:	mov    QWORD PTR [r13+0x0],rax
   47897:	call   a320 <strcmp@plt>
   4789c:	test   eax,eax
   4789e:	je     47908 <argp_usage@@Base+0x4588>
   478a0:	lea    rsi,[rip+0x24a17]        # 6c2be <_obstack_memory_used@@Base+0x1f63e>
   478a7:	mov    rdi,r12
   478aa:	call   a320 <strcmp@plt>
   478af:	test   eax,eax
   478b1:	jne    479a1 <argp_usage@@Base+0x4621>
   478b7:	call   a980 <__ctype_b_loc@plt>
   478bc:	xor    ecx,ecx
   478be:	mov    edi,0x1
   478c3:	mov    rdx,QWORD PTR [rax]
   478c6:	test   rbp,rbp
   478c9:	jne    47b48 <argp_usage@@Base+0x47c8>
   478cf:	nop
   478d0:	test   BYTE PTR [rdx+rcx*2],0x2
   478d4:	je     478e7 <argp_usage@@Base+0x4567>
   478d6:	mov    rax,rcx
   478d9:	mov    rsi,rdi
   478dc:	sar    rax,0x6
   478e0:	shl    rsi,cl
   478e3:	or     QWORD PTR [rbx+rax*8],rsi
   478e7:	add    rcx,0x1
   478eb:	cmp    rcx,0x100
   478f2:	jne    478d0 <argp_usage@@Base+0x4550>
   478f4:	xor    eax,eax
   478f6:	add    rsp,0x8
   478fa:	pop    rbx
   478fb:	pop    rbp
   478fc:	pop    r12
   478fe:	pop    r13
   47900:	pop    r14
   47902:	pop    r15
   47904:	ret    
   47905:	nop    DWORD PTR [rax]
   47908:	call   a980 <__ctype_b_loc@plt>
   4790d:	xor    ecx,ecx
   4790f:	mov    edi,0x1
   47914:	mov    rdx,QWORD PTR [rax]
   47917:	test   rbp,rbp
   4791a:	jne    47b12 <argp_usage@@Base+0x4792>
   47920:	test   BYTE PTR [rdx+rcx*2],0x8
   47924:	je     47937 <argp_usage@@Base+0x45b7>
   47926:	mov    rax,rcx
   47929:	mov    rsi,rdi
   4792c:	sar    rax,0x6
   47930:	shl    rsi,cl
   47933:	or     QWORD PTR [rbx+rax*8],rsi
   47937:	add    rcx,0x1
   4793b:	cmp    rcx,0x100
   47942:	jne    47920 <argp_usage@@Base+0x45a0>
   47944:	jmp    478f4 <argp_usage@@Base+0x4574>
   47946:	mov    rdi,r12
   47949:	lea    rsi,[rip+0x24962]        # 6c2b2 <_obstack_memory_used@@Base+0x1f632>
   47950:	call   a320 <strcmp@plt>
   47955:	mov    rdx,QWORD PTR [r13+0x48]
   47959:	mov    rdi,QWORD PTR [r13+0x18]
   4795d:	test   eax,eax
   4795f:	lea    rax,[rip+0x24940]        # 6c2a6 <_obstack_memory_used@@Base+0x1f626>
   47966:	cmove  r12,rax
   4796a:	cmp    QWORD PTR [r14],rdx
   4796d:	jne    47875 <argp_usage@@Base+0x44f5>
   47973:	lea    r15,[rdx+rdx*1+0x1]
   47978:	lea    rsi,[r15*8+0x0]
   47980:	call   a570 <realloc@plt>
   47985:	mov    rdi,rax
   47988:	test   rax,rax
   4798b:	je     47c67 <argp_usage@@Base+0x48e7>
   47991:	mov    QWORD PTR [r13+0x18],rax
   47995:	mov    QWORD PTR [r14],r15
   47998:	mov    rdx,QWORD PTR [r13+0x48]
   4799c:	jmp    47875 <argp_usage@@Base+0x44f5>
   479a1:	lea    rsi,[rip+0x2490a]        # 6c2b2 <_obstack_memory_used@@Base+0x1f632>
   479a8:	mov    rdi,r12
   479ab:	call   a320 <strcmp@plt>
   479b0:	test   eax,eax
   479b2:	je     47a12 <argp_usage@@Base+0x4692>
   479b4:	lea    rsi,[rip+0x24909]        # 6c2c4 <_obstack_memory_used@@Base+0x1f644>
   479bb:	mov    rdi,r12
   479be:	call   a320 <strcmp@plt>
   479c3:	test   eax,eax
   479c5:	jne    47a5a <argp_usage@@Base+0x46da>
   479cb:	call   a980 <__ctype_b_loc@plt>
   479d0:	xor    ecx,ecx
   479d2:	mov    edi,0x1
   479d7:	mov    rdx,QWORD PTR [rax]
   479da:	test   rbp,rbp
   479dd:	jne    47cfc <argp_usage@@Base+0x497c>
   479e3:	nop    DWORD PTR [rax+rax*1+0x0]
   479e8:	test   BYTE PTR [rdx+rcx*2+0x1],0x20
   479ed:	je     47a00 <argp_usage@@Base+0x4680>
   479ef:	mov    rax,rcx
   479f2:	mov    rsi,rdi
   479f5:	sar    rax,0x6
   479f9:	shl    rsi,cl
   479fc:	or     QWORD PTR [rbx+rax*8],rsi
   47a00:	add    rcx,0x1
   47a04:	cmp    rcx,0x100
   47a0b:	jne    479e8 <argp_usage@@Base+0x4668>
   47a0d:	jmp    478f4 <argp_usage@@Base+0x4574>
   47a12:	call   a980 <__ctype_b_loc@plt>
   47a17:	xor    ecx,ecx
   47a19:	mov    edi,0x1
   47a1e:	mov    rdx,QWORD PTR [rax]
   47a21:	test   rbp,rbp
   47a24:	jne    47b80 <argp_usage@@Base+0x4800>
   47a2a:	nop    WORD PTR [rax+rax*1+0x0]
   47a30:	test   BYTE PTR [rdx+rcx*2+0x1],0x2
   47a35:	je     47a48 <argp_usage@@Base+0x46c8>
   47a37:	mov    rax,rcx
   47a3a:	mov    rsi,rdi
   47a3d:	sar    rax,0x6
   47a41:	shl    rsi,cl
   47a44:	or     QWORD PTR [rbx+rax*8],rsi
   47a48:	add    rcx,0x1
   47a4c:	cmp    rcx,0x100
   47a53:	jne    47a30 <argp_usage@@Base+0x46b0>
   47a55:	jmp    478f4 <argp_usage@@Base+0x4574>
   47a5a:	lea    rsi,[rip+0x24845]        # 6c2a6 <_obstack_memory_used@@Base+0x1f626>
   47a61:	mov    rdi,r12
   47a64:	call   a320 <strcmp@plt>
   47a69:	test   eax,eax
   47a6b:	je     47aca <argp_usage@@Base+0x474a>
   47a6d:	lea    rsi,[rip+0x2486f]        # 6c2e3 <_obstack_memory_used@@Base+0x1f663>
   47a74:	mov    rdi,r12
   47a77:	call   a320 <strcmp@plt>
   47a7c:	test   eax,eax
   47a7e:	jne    47bb9 <argp_usage@@Base+0x4839>
   47a84:	call   a980 <__ctype_b_loc@plt>
   47a89:	xor    ecx,ecx
   47a8b:	mov    edi,0x1
   47a90:	mov    rdx,QWORD PTR [rax]
   47a93:	test   rbp,rbp
   47a96:	jne    47d31 <argp_usage@@Base+0x49b1>
   47a9c:	nop    DWORD PTR [rax+0x0]
   47aa0:	test   BYTE PTR [rdx+rcx*2+0x1],0x8
   47aa5:	je     47ab8 <argp_usage@@Base+0x4738>
   47aa7:	mov    rax,rcx
   47aaa:	mov    rsi,rdi
   47aad:	sar    rax,0x6
   47ab1:	shl    rsi,cl
   47ab4:	or     QWORD PTR [rbx+rax*8],rsi
   47ab8:	add    rcx,0x1
   47abc:	cmp    rcx,0x100
   47ac3:	jne    47aa0 <argp_usage@@Base+0x4720>
   47ac5:	jmp    478f4 <argp_usage@@Base+0x4574>
   47aca:	call   a980 <__ctype_b_loc@plt>
   47acf:	xor    ecx,ecx
   47ad1:	mov    edi,0x1
   47ad6:	mov    rdx,QWORD PTR [rax]
   47ad9:	test   rbp,rbp
   47adc:	jne    47cc9 <argp_usage@@Base+0x4949>
   47ae2:	nop    WORD PTR [rax+rax*1+0x0]
   47ae8:	test   BYTE PTR [rdx+rcx*2+0x1],0x4
   47aed:	je     47b00 <argp_usage@@Base+0x4780>
   47aef:	mov    rax,rcx
   47af2:	mov    rsi,rdi
   47af5:	sar    rax,0x6
   47af9:	shl    rsi,cl
   47afc:	or     QWORD PTR [rbx+rax*8],rsi
   47b00:	add    rcx,0x1
   47b04:	cmp    rcx,0x100
   47b0b:	jne    47ae8 <argp_usage@@Base+0x4768>
   47b0d:	jmp    478f4 <argp_usage@@Base+0x4574>
   47b12:	xor    eax,eax
   47b14:	nop    DWORD PTR [rax+0x0]
   47b18:	test   BYTE PTR [rdx+rax*2],0x8
   47b1c:	je     47b37 <argp_usage@@Base+0x47b7>
   47b1e:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47b23:	mov    r10,rdi
   47b26:	mov    rsi,rcx
   47b29:	shl    r10,cl
   47b2c:	shr    rsi,0x3
   47b30:	and    esi,0x18
   47b33:	or     QWORD PTR [rbx+rsi*1],r10
   47b37:	add    rax,0x1
   47b3b:	cmp    rax,0x100
   47b41:	jne    47b18 <argp_usage@@Base+0x4798>
   47b43:	jmp    478f4 <argp_usage@@Base+0x4574>
   47b48:	xor    eax,eax
   47b4a:	nop    WORD PTR [rax+rax*1+0x0]
   47b50:	test   BYTE PTR [rdx+rax*2],0x2
   47b54:	je     47b6f <argp_usage@@Base+0x47ef>
   47b56:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47b5b:	mov    r11,rdi
   47b5e:	mov    rsi,rcx
   47b61:	shl    r11,cl
   47b64:	shr    rsi,0x3
   47b68:	and    esi,0x18
   47b6b:	or     QWORD PTR [rbx+rsi*1],r11
   47b6f:	add    rax,0x1
   47b73:	cmp    rax,0x100
   47b79:	jne    47b50 <argp_usage@@Base+0x47d0>
   47b7b:	jmp    478f4 <argp_usage@@Base+0x4574>
   47b80:	xor    eax,eax
   47b82:	nop    WORD PTR [rax+rax*1+0x0]
   47b88:	test   BYTE PTR [rdx+rax*2+0x1],0x2
   47b8d:	je     47ba8 <argp_usage@@Base+0x4828>
   47b8f:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47b94:	mov    r15,rdi
   47b97:	mov    rsi,rcx
   47b9a:	shl    r15,cl
   47b9d:	shr    rsi,0x3
   47ba1:	and    esi,0x18
   47ba4:	or     QWORD PTR [rbx+rsi*1],r15
   47ba8:	add    rax,0x1
   47bac:	cmp    rax,0x100
   47bb2:	jne    47b88 <argp_usage@@Base+0x4808>
   47bb4:	jmp    478f4 <argp_usage@@Base+0x4574>
   47bb9:	lea    rsi,[rip+0x2470a]        # 6c2ca <_obstack_memory_used@@Base+0x1f64a>
   47bc0:	mov    rdi,r12
   47bc3:	call   a320 <strcmp@plt>
   47bc8:	test   eax,eax
   47bca:	jne    47c12 <argp_usage@@Base+0x4892>
   47bcc:	call   a980 <__ctype_b_loc@plt>
   47bd1:	xor    ecx,ecx
   47bd3:	mov    edi,0x1
   47bd8:	mov    rdx,QWORD PTR [rax]
   47bdb:	test   rbp,rbp
   47bde:	jne    47f07 <argp_usage@@Base+0x4b87>
   47be4:	nop    DWORD PTR [rax+0x0]
   47be8:	test   BYTE PTR [rdx+rcx*2+0x1],0x40
   47bed:	je     47c00 <argp_usage@@Base+0x4880>
   47bef:	mov    rax,rcx
   47bf2:	mov    rsi,rdi
   47bf5:	sar    rax,0x6
   47bf9:	shl    rsi,cl
   47bfc:	or     QWORD PTR [rbx+rax*8],rsi
   47c00:	add    rcx,0x1
   47c04:	cmp    rcx,0x100
   47c0b:	jne    47be8 <argp_usage@@Base+0x4868>
   47c0d:	jmp    478f4 <argp_usage@@Base+0x4574>
   47c12:	lea    rsi,[rip+0x24693]        # 6c2ac <_obstack_memory_used@@Base+0x1f62c>
   47c19:	mov    rdi,r12
   47c1c:	call   a320 <strcmp@plt>
   47c21:	test   eax,eax
   47c23:	jne    47c71 <argp_usage@@Base+0x48f1>
   47c25:	call   a980 <__ctype_b_loc@plt>
   47c2a:	xor    ecx,ecx
   47c2c:	mov    edi,0x1
   47c31:	mov    rax,QWORD PTR [rax]
   47c34:	test   rbp,rbp
   47c37:	jne    47f71 <argp_usage@@Base+0x4bf1>
   47c3d:	test   BYTE PTR [rax+rcx*2+0x1],0x1
   47c42:	je     47c55 <argp_usage@@Base+0x48d5>
   47c44:	mov    rdx,rcx
   47c47:	mov    rsi,rdi
   47c4a:	sar    rdx,0x6
   47c4e:	shl    rsi,cl
   47c51:	or     QWORD PTR [rbx+rdx*8],rsi
   47c55:	add    rcx,0x1
   47c59:	cmp    rcx,0x100
   47c60:	jne    47c3d <argp_usage@@Base+0x48bd>
   47c62:	jmp    478f4 <argp_usage@@Base+0x4574>
   47c67:	mov    eax,0xc
   47c6c:	jmp    478f6 <argp_usage@@Base+0x4576>
   47c71:	lea    rsi,[rip+0x24658]        # 6c2d0 <_obstack_memory_used@@Base+0x1f650>
   47c78:	mov    rdi,r12
   47c7b:	call   a320 <strcmp@plt>
   47c80:	test   eax,eax
   47c82:	jne    47d64 <argp_usage@@Base+0x49e4>
   47c88:	call   a980 <__ctype_b_loc@plt>
   47c8d:	xor    ecx,ecx
   47c8f:	mov    esi,0x1
   47c94:	mov    rdx,QWORD PTR [rax]
   47c97:	test   rbp,rbp
   47c9a:	jne    47f3a <argp_usage@@Base+0x4bba>
   47ca0:	test   BYTE PTR [rdx+rcx*2],0x1
   47ca4:	je     47cb7 <argp_usage@@Base+0x4937>
   47ca6:	mov    rax,rcx
   47ca9:	mov    rdi,rsi
   47cac:	sar    rax,0x6
   47cb0:	shl    rdi,cl
   47cb3:	or     QWORD PTR [rbx+rax*8],rdi
   47cb7:	add    rcx,0x1
   47cbb:	cmp    rcx,0x100
   47cc2:	jne    47ca0 <argp_usage@@Base+0x4920>
   47cc4:	jmp    478f4 <argp_usage@@Base+0x4574>
   47cc9:	xor    eax,eax
   47ccb:	test   BYTE PTR [rdx+rax*2+0x1],0x4
   47cd0:	je     47ceb <argp_usage@@Base+0x496b>
   47cd2:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47cd7:	mov    r14,rdi
   47cda:	mov    rsi,rcx
   47cdd:	shl    r14,cl
   47ce0:	shr    rsi,0x3
   47ce4:	and    esi,0x18
   47ce7:	or     QWORD PTR [rbx+rsi*1],r14
   47ceb:	add    rax,0x1
   47cef:	cmp    rax,0x100
   47cf5:	jne    47ccb <argp_usage@@Base+0x494b>
   47cf7:	jmp    478f4 <argp_usage@@Base+0x4574>
   47cfc:	xor    eax,eax
   47cfe:	xchg   ax,ax
   47d00:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   47d05:	je     47d20 <argp_usage@@Base+0x49a0>
   47d07:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47d0c:	mov    r15,rdi
   47d0f:	mov    rsi,rcx
   47d12:	shl    r15,cl
   47d15:	shr    rsi,0x3
   47d19:	and    esi,0x18
   47d1c:	or     QWORD PTR [rbx+rsi*1],r15
   47d20:	add    rax,0x1
   47d24:	cmp    rax,0x100
   47d2a:	jne    47d00 <argp_usage@@Base+0x4980>
   47d2c:	jmp    478f4 <argp_usage@@Base+0x4574>
   47d31:	xor    eax,eax
   47d33:	test   BYTE PTR [rdx+rax*2+0x1],0x8
   47d38:	je     47d53 <argp_usage@@Base+0x49d3>
   47d3a:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47d3f:	mov    r14,rdi
   47d42:	mov    rsi,rcx
   47d45:	shl    r14,cl
   47d48:	shr    rsi,0x3
   47d4c:	and    esi,0x18
   47d4f:	or     QWORD PTR [rbx+rsi*1],r14
   47d53:	add    rax,0x1
   47d57:	cmp    rax,0x100
   47d5d:	jne    47d33 <argp_usage@@Base+0x49b3>
   47d5f:	jmp    478f4 <argp_usage@@Base+0x4574>
   47d64:	lea    rsi,[rip+0x2456b]        # 6c2d6 <_obstack_memory_used@@Base+0x1f656>
   47d6b:	mov    rdi,r12
   47d6e:	call   a320 <strcmp@plt>
   47d73:	test   eax,eax
   47d75:	jne    47ded <argp_usage@@Base+0x4a6d>
   47d77:	call   a980 <__ctype_b_loc@plt>
   47d7c:	xor    ecx,ecx
   47d7e:	mov    edx,0x1
   47d83:	mov    rsi,QWORD PTR [rax]
   47d86:	test   rbp,rbp
   47d89:	jne    47db5 <argp_usage@@Base+0x4a35>
   47d8b:	cmp    WORD PTR [rsi+rcx*2],0x0
   47d90:	jns    47da3 <argp_usage@@Base+0x4a23>
   47d92:	mov    rax,rcx
   47d95:	mov    rdi,rdx
   47d98:	sar    rax,0x6
   47d9c:	shl    rdi,cl
   47d9f:	or     QWORD PTR [rbx+rax*8],rdi
   47da3:	add    rcx,0x1
   47da7:	cmp    rcx,0x100
   47dae:	jne    47d8b <argp_usage@@Base+0x4a0b>
   47db0:	jmp    478f4 <argp_usage@@Base+0x4574>
   47db5:	xor    eax,eax
   47db7:	mov    edi,0x1
   47dbc:	cmp    WORD PTR [rsi+rax*2],0x0
   47dc1:	jns    47ddc <argp_usage@@Base+0x4a5c>
   47dc3:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47dc8:	mov    r14,rdi
   47dcb:	mov    rdx,rcx
   47dce:	shl    r14,cl
   47dd1:	shr    rdx,0x3
   47dd5:	and    edx,0x18
   47dd8:	or     QWORD PTR [rbx+rdx*1],r14
   47ddc:	add    rax,0x1
   47de0:	cmp    rax,0x100
   47de6:	jne    47dbc <argp_usage@@Base+0x4a3c>
   47de8:	jmp    478f4 <argp_usage@@Base+0x4574>
   47ded:	lea    rsi,[rip+0x244e8]        # 6c2dc <_obstack_memory_used@@Base+0x1f65c>
   47df4:	mov    rdi,r12
   47df7:	call   a320 <strcmp@plt>
   47dfc:	test   eax,eax
   47dfe:	jne    47e74 <argp_usage@@Base+0x4af4>
   47e00:	call   a980 <__ctype_b_loc@plt>
   47e05:	xor    ecx,ecx
   47e07:	mov    edx,0x1
   47e0c:	mov    rsi,QWORD PTR [rax]
   47e0f:	test   rbp,rbp
   47e12:	jne    47e3d <argp_usage@@Base+0x4abd>
   47e14:	test   BYTE PTR [rsi+rcx*2],0x4
   47e18:	je     47e2b <argp_usage@@Base+0x4aab>
   47e1a:	mov    rax,rcx
   47e1d:	mov    rdi,rdx
   47e20:	sar    rax,0x6
   47e24:	shl    rdi,cl
   47e27:	or     QWORD PTR [rbx+rax*8],rdi
   47e2b:	add    rcx,0x1
   47e2f:	cmp    rcx,0x100
   47e36:	jne    47e14 <argp_usage@@Base+0x4a94>
   47e38:	jmp    478f4 <argp_usage@@Base+0x4574>
   47e3d:	xor    eax,eax
   47e3f:	mov    edi,0x1
   47e44:	test   BYTE PTR [rsi+rax*2],0x4
   47e48:	je     47e63 <argp_usage@@Base+0x4ae3>
   47e4a:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47e4f:	mov    r8,rdi
   47e52:	mov    rdx,rcx
   47e55:	shl    r8,cl
   47e58:	shr    rdx,0x3
   47e5c:	and    edx,0x18
   47e5f:	or     QWORD PTR [rbx+rdx*1],r8
   47e63:	add    rax,0x1
   47e67:	cmp    rax,0x100
   47e6d:	jne    47e44 <argp_usage@@Base+0x4ac4>
   47e6f:	jmp    478f4 <argp_usage@@Base+0x4574>
   47e74:	lea    rsi,[rip+0x24467]        # 6c2e2 <_obstack_memory_used@@Base+0x1f662>
   47e7b:	mov    rdi,r12
   47e7e:	call   a320 <strcmp@plt>
   47e83:	test   eax,eax
   47e85:	jne    47efd <argp_usage@@Base+0x4b7d>
   47e87:	call   a980 <__ctype_b_loc@plt>
   47e8c:	xor    ecx,ecx
   47e8e:	mov    edx,0x1
   47e93:	mov    rsi,QWORD PTR [rax]
   47e96:	test   rbp,rbp
   47e99:	jne    47ec5 <argp_usage@@Base+0x4b45>
   47e9b:	test   BYTE PTR [rsi+rcx*2+0x1],0x10
   47ea0:	je     47eb3 <argp_usage@@Base+0x4b33>
   47ea2:	mov    rax,rcx
   47ea5:	mov    rdi,rdx
   47ea8:	sar    rax,0x6
   47eac:	shl    rdi,cl
   47eaf:	or     QWORD PTR [rbx+rax*8],rdi
   47eb3:	add    rcx,0x1
   47eb7:	cmp    rcx,0x100
   47ebe:	jne    47e9b <argp_usage@@Base+0x4b1b>
   47ec0:	jmp    478f4 <argp_usage@@Base+0x4574>
   47ec5:	xor    eax,eax
   47ec7:	mov    edi,0x1
   47ecc:	test   BYTE PTR [rsi+rax*2+0x1],0x10
   47ed1:	je     47eec <argp_usage@@Base+0x4b6c>
   47ed3:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47ed8:	mov    r9,rdi
   47edb:	mov    rdx,rcx
   47ede:	shl    r9,cl
   47ee1:	shr    rdx,0x3
   47ee5:	and    edx,0x18
   47ee8:	or     QWORD PTR [rbx+rdx*1],r9
   47eec:	add    rax,0x1
   47ef0:	cmp    rax,0x100
   47ef6:	jne    47ecc <argp_usage@@Base+0x4b4c>
   47ef8:	jmp    478f4 <argp_usage@@Base+0x4574>
   47efd:	mov    eax,0x4
   47f02:	jmp    478f6 <argp_usage@@Base+0x4576>
   47f07:	xor    eax,eax
   47f09:	test   BYTE PTR [rdx+rax*2+0x1],0x40
   47f0e:	je     47f29 <argp_usage@@Base+0x4ba9>
   47f10:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47f15:	mov    r14,rdi
   47f18:	mov    rsi,rcx
   47f1b:	shl    r14,cl
   47f1e:	shr    rsi,0x3
   47f22:	and    esi,0x18
   47f25:	or     QWORD PTR [rbx+rsi*1],r14
   47f29:	add    rax,0x1
   47f2d:	cmp    rax,0x100
   47f33:	jne    47f09 <argp_usage@@Base+0x4b89>
   47f35:	jmp    478f4 <argp_usage@@Base+0x4574>
   47f3a:	xor    eax,eax
   47f3c:	mov    edi,0x1
   47f41:	test   BYTE PTR [rdx+rax*2],0x1
   47f45:	je     47f60 <argp_usage@@Base+0x4be0>
   47f47:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   47f4c:	mov    r15,rdi
   47f4f:	mov    rsi,rcx
   47f52:	shl    r15,cl
   47f55:	shr    rsi,0x3
   47f59:	and    esi,0x18
   47f5c:	or     QWORD PTR [rbx+rsi*1],r15
   47f60:	add    rax,0x1
   47f64:	cmp    rax,0x100
   47f6a:	jne    47f41 <argp_usage@@Base+0x4bc1>
   47f6c:	jmp    478f4 <argp_usage@@Base+0x4574>
   47f71:	xor    edx,edx
   47f73:	test   BYTE PTR [rax+rdx*2+0x1],0x1
   47f78:	je     47f93 <argp_usage@@Base+0x4c13>
   47f7a:	movzx  ecx,BYTE PTR [rbp+rdx*1+0x0]
   47f7f:	mov    r14,rdi
   47f82:	mov    rsi,rcx
   47f85:	shl    r14,cl
   47f88:	shr    rsi,0x3
   47f8c:	and    esi,0x18
   47f8f:	or     QWORD PTR [rbx+rsi*1],r14
   47f93:	add    rdx,0x1
   47f97:	cmp    rdx,0x100
   47f9e:	jne    47f73 <argp_usage@@Base+0x4bf3>
   47fa0:	jmp    478f4 <argp_usage@@Base+0x4574>
   47fa5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   47fb0:	push   r15
   47fb2:	push   r14
   47fb4:	push   r13
   47fb6:	mov    r13,rsi
   47fb9:	mov    esi,0x1
   47fbe:	push   r12
   47fc0:	mov    r12d,r8d
   47fc3:	push   rbp
   47fc4:	mov    rbp,rdi
   47fc7:	mov    edi,0x20
   47fcc:	push   rbx
   47fcd:	mov    rbx,rcx
   47fd0:	sub    rsp,0x58
   47fd4:	mov    QWORD PTR [rsp],rdx
   47fd8:	mov    QWORD PTR [rsp+0x8],r9
   47fdd:	mov    rax,QWORD PTR fs:0x28
   47fe6:	mov    QWORD PTR [rsp+0x48],rax
   47feb:	xor    eax,eax
   47fed:	mov    QWORD PTR [rsp+0x18],0x0
   47ff6:	call   a2f0 <calloc@plt>
   47ffb:	test   rax,rax
   47ffe:	je     481e0 <argp_usage@@Base+0x4e60>
   48004:	mov    esi,0x1
   48009:	mov    edi,0x50
   4800e:	mov    r15,rax
   48011:	call   a2f0 <calloc@plt>
   48016:	mov    r14,rax
   48019:	test   rax,rax
   4801c:	je     481d8 <argp_usage@@Base+0x4e58>
   48022:	movzx  eax,BYTE PTR [rax+0x20]
   48026:	mov    edx,r12d
   48029:	mov    r8,QWORD PTR [rsp]
   4802d:	xor    r9d,r9d
   48030:	and    edx,0x1
   48033:	lea    rcx,[rsp+0x18]
   48038:	mov    rsi,r15
   4803b:	mov    rdi,r13
   4803e:	and    eax,0xfffffffe
   48041:	or     eax,edx
   48043:	mov    rdx,r14
   48046:	mov    BYTE PTR [r14+0x20],al
   4804a:	call   47820 <argp_usage@@Base+0x44a0>
   4804f:	test   eax,eax
   48051:	jne    48230 <argp_usage@@Base+0x4eb0>
   48057:	movzx  ecx,BYTE PTR [rbx]
   4805a:	mov    esi,0x1
   4805f:	test   cl,cl
   48061:	je     48090 <argp_usage@@Base+0x4d10>
   48063:	nop    DWORD PTR [rax+rax*1+0x0]
   48068:	movsx  rdx,cl
   4806c:	test   rdx,rdx
   4806f:	lea    rax,[rdx+0x3f]
   48073:	cmovns rax,rdx
   48077:	mov    rdx,rsi
   4807a:	add    rbx,0x1
   4807e:	shl    rdx,cl
   48081:	movzx  ecx,BYTE PTR [rbx]
   48084:	sar    rax,0x6
   48088:	or     QWORD PTR [r15+rax*8],rdx
   4808c:	test   cl,cl
   4808e:	jne    48068 <argp_usage@@Base+0x4ce8>
   48090:	test   r12b,r12b
   48093:	je     480a8 <argp_usage@@Base+0x4d28>
   48095:	mov    rax,r15
   48098:	lea    rdx,[r15+0x20]
   4809c:	not    QWORD PTR [rax]
   4809f:	add    rax,0x8
   480a3:	cmp    rdx,rax
   480a6:	jne    4809c <argp_usage@@Base+0x4d1c>
   480a8:	cmp    DWORD PTR [rbp+0xb4],0x1
   480af:	jg     48140 <argp_usage@@Base+0x4dc0>
   480b5:	xor    edx,edx
   480b7:	xor    esi,esi
   480b9:	lea    rcx,[rsp+0x20]
   480be:	mov    rdi,rbp
   480c1:	mov    QWORD PTR [rsp+0x20],r15
   480c6:	mov    QWORD PTR [rsp+0x28],0x3
   480cf:	call   45e00 <argp_usage@@Base+0x2a80>
   480d4:	test   rax,rax
   480d7:	jne    481f8 <argp_usage@@Base+0x4e78>
   480dd:	mov    rdi,r15
   480e0:	call   9ce0 <free@plt>
   480e5:	mov    rdi,QWORD PTR [r14]
   480e8:	call   9ce0 <free@plt>
   480ed:	mov    rdi,QWORD PTR [r14+0x8]
   480f1:	call   9ce0 <free@plt>
   480f6:	mov    rdi,QWORD PTR [r14+0x10]
   480fa:	call   9ce0 <free@plt>
   480ff:	mov    rdi,QWORD PTR [r14+0x18]
   48103:	call   9ce0 <free@plt>
   48108:	mov    rdi,r14
   4810b:	call   9ce0 <free@plt>
   48110:	mov    rax,QWORD PTR [rsp+0x8]
   48115:	mov    DWORD PTR [rax],0xc
   4811b:	xor    eax,eax
   4811d:	mov    rdx,QWORD PTR [rsp+0x48]
   48122:	sub    rdx,QWORD PTR fs:0x28
   4812b:	jne    48277 <argp_usage@@Base+0x4ef7>
   48131:	add    rsp,0x58
   48135:	pop    rbx
   48136:	pop    rbp
   48137:	pop    r12
   48139:	pop    r13
   4813b:	pop    r14
   4813d:	pop    r15
   4813f:	ret    
   48140:	mov    rcx,QWORD PTR [rbp+0x78]
   48144:	xor    eax,eax
   48146:	mov    rdx,QWORD PTR [rcx+rax*1]
   4814a:	and    QWORD PTR [r15+rax*1],rdx
   4814e:	add    rax,0x8
   48152:	cmp    rax,0x20
   48156:	jne    48146 <argp_usage@@Base+0x4dc6>
   48158:	lea    r13,[rsp+0x20]
   4815d:	xor    edx,edx
   4815f:	xor    esi,esi
   48161:	mov    rdi,rbp
   48164:	mov    rcx,r13
   48167:	mov    QWORD PTR [rsp+0x20],r15
   4816c:	mov    QWORD PTR [rsp+0x28],0x3
   48175:	call   45e00 <argp_usage@@Base+0x2a80>
   4817a:	mov    r12,rax
   4817d:	test   rax,rax
   48180:	je     480dd <argp_usage@@Base+0x4d5d>
   48186:	or     BYTE PTR [rbp+0xb0],0x2
   4818d:	xor    edx,edx
   4818f:	mov    rcx,r13
   48192:	xor    esi,esi
   48194:	mov    rdi,rbp
   48197:	mov    BYTE PTR [rsp+0x28],0x6
   4819c:	mov    QWORD PTR [rsp+0x20],r14
   481a1:	call   45e00 <argp_usage@@Base+0x2a80>
   481a6:	mov    rdx,rax
   481a9:	test   rax,rax
   481ac:	je     480dd <argp_usage@@Base+0x4d5d>
   481b2:	pxor   xmm0,xmm0
   481b6:	lea    rcx,[rsp+0x30]
   481bb:	mov    rsi,r12
   481be:	mov    rdi,rbp
   481c1:	movaps XMMWORD PTR [rsp+0x30],xmm0
   481c6:	mov    BYTE PTR [rsp+0x38],0xa
   481cb:	call   45e00 <argp_usage@@Base+0x2a80>
   481d0:	jmp    4811d <argp_usage@@Base+0x4d9d>
   481d5:	nop    DWORD PTR [rax]
   481d8:	mov    rdi,r15
   481db:	call   9ce0 <free@plt>
   481e0:	mov    rax,QWORD PTR [rsp+0x8]
   481e5:	mov    DWORD PTR [rax],0xc
   481eb:	xor    eax,eax
   481ed:	jmp    4811d <argp_usage@@Base+0x4d9d>
   481f2:	nop    WORD PTR [rax+rax*1+0x0]
   481f8:	mov    rdi,QWORD PTR [r14]
   481fb:	mov    QWORD PTR [rsp],rax
   481ff:	call   9ce0 <free@plt>
   48204:	mov    rdi,QWORD PTR [r14+0x8]
   48208:	call   9ce0 <free@plt>
   4820d:	mov    rdi,QWORD PTR [r14+0x10]
   48211:	call   9ce0 <free@plt>
   48216:	mov    rdi,QWORD PTR [r14+0x18]
   4821a:	call   9ce0 <free@plt>
   4821f:	mov    rdi,r14
   48222:	call   9ce0 <free@plt>
   48227:	mov    rax,QWORD PTR [rsp]
   4822b:	jmp    4811d <argp_usage@@Base+0x4d9d>
   48230:	mov    rdi,r15
   48233:	mov    DWORD PTR [rsp],eax
   48236:	call   9ce0 <free@plt>
   4823b:	mov    rdi,QWORD PTR [r14]
   4823e:	call   9ce0 <free@plt>
   48243:	mov    rdi,QWORD PTR [r14+0x8]
   48247:	call   9ce0 <free@plt>
   4824c:	mov    rdi,QWORD PTR [r14+0x10]
   48250:	call   9ce0 <free@plt>
   48255:	mov    rdi,QWORD PTR [r14+0x18]
   48259:	call   9ce0 <free@plt>
   4825e:	mov    rdi,r14
   48261:	call   9ce0 <free@plt>
   48266:	mov    eax,DWORD PTR [rsp]
   48269:	mov    rbx,QWORD PTR [rsp+0x8]
   4826e:	mov    DWORD PTR [rbx],eax
   48270:	xor    eax,eax
   48272:	jmp    4811d <argp_usage@@Base+0x4d9d>
   48277:	call   a0a0 <__stack_chk_fail@plt>
   4827c:	nop    DWORD PTR [rax+0x0]
   48280:	endbr64 
   48284:	mov    eax,0x2
   48289:	test   rsi,rsi
   4828c:	je     482b7 <argp_usage@@Base+0x4f37>
   4828e:	cmp    BYTE PTR [rsi],0x0
   48291:	jne    48294 <argp_usage@@Base+0x4f14>
   48293:	ret    
   48294:	push   rbx
   48295:	lea    rbx,[rip+0x24ac4]        # 6cd60 <_obstack_memory_used@@Base+0x200e0>
   4829c:	lea    r8,[rip+0xffffffffffff080d]        # 38ab0 <__sprintf_chk@plt+0x2e100>
   482a3:	mov    rcx,rbx
   482a6:	lea    rdx,[rip+0x33413]        # 7b6c0 <_obstack_memory_used@@Base+0x2ea40>
   482ad:	call   5afe0 <_obstack_memory_used@@Base+0xe360>
   482b2:	mov    eax,DWORD PTR [rbx+rax*4]
   482b5:	pop    rbx
   482b6:	ret    
   482b7:	ret    
   482b8:	nop    DWORD PTR [rax+rax*1+0x0]
   482c0:	endbr64 
   482c4:	push   rbp
   482c5:	mov    rbp,rdi
   482c8:	sub    rsp,0x10
   482cc:	movzx  eax,BYTE PTR [rdi]
   482cf:	cmp    al,0x2f
   482d1:	jne    482e4 <argp_usage@@Base+0x4f64>
   482d3:	nop    DWORD PTR [rax+rax*1+0x0]
   482d8:	movzx  eax,BYTE PTR [rbp+0x1]
   482dc:	add    rbp,0x1
   482e0:	cmp    al,0x2f
   482e2:	je     482d8 <argp_usage@@Base+0x4f58>
   482e4:	test   al,al
   482e6:	je     48360 <argp_usage@@Base+0x4fe0>
   482e8:	mov    rdx,rbp
   482eb:	xor    ecx,ecx
   482ed:	jmp    48305 <argp_usage@@Base+0x4f85>
   482ef:	nop
   482f0:	test   cl,cl
   482f2:	je     482f9 <argp_usage@@Base+0x4f79>
   482f4:	mov    rbp,rdx
   482f7:	xor    ecx,ecx
   482f9:	movzx  eax,BYTE PTR [rdx+0x1]
   482fd:	add    rdx,0x1
   48301:	test   al,al
   48303:	je     4831a <argp_usage@@Base+0x4f9a>
   48305:	cmp    al,0x2f
   48307:	jne    482f0 <argp_usage@@Base+0x4f70>
   48309:	movzx  eax,BYTE PTR [rdx+0x1]
   4830d:	add    rdx,0x1
   48311:	mov    ecx,0x1
   48316:	test   al,al
   48318:	jne    48305 <argp_usage@@Base+0x4f85>
   4831a:	cmp    BYTE PTR [rbp+0x0],0x0
   4831e:	je     48360 <argp_usage@@Base+0x4fe0>
   48320:	mov    rdi,rbp
   48323:	call   a060 <strlen@plt>
   48328:	mov    rsi,rax
   4832b:	cmp    rsi,0x1
   4832f:	jbe    4833c <argp_usage@@Base+0x4fbc>
   48331:	cmp    BYTE PTR [rbp+rsi*1-0x1],0x2f
   48336:	lea    rax,[rsi-0x1]
   4833a:	je     48390 <argp_usage@@Base+0x5010>
   4833c:	xor    eax,eax
   4833e:	cmp    BYTE PTR [rbp+rsi*1+0x0],0x2f
   48343:	mov    rdi,rbp
   48346:	sete   al
   48349:	add    rsi,rax
   4834c:	call   a2b0 <strndup@plt>
   48351:	test   rax,rax
   48354:	je     48395 <argp_usage@@Base+0x5015>
   48356:	add    rsp,0x10
   4835a:	pop    rbp
   4835b:	ret    
   4835c:	nop    DWORD PTR [rax+0x0]
   48360:	mov    QWORD PTR [rsp+0x8],rdi
   48365:	call   a060 <strlen@plt>
   4836a:	mov    rdi,QWORD PTR [rsp+0x8]
   4836f:	mov    rsi,rax
   48372:	cmp    rsi,0x1
   48376:	jbe    4834c <argp_usage@@Base+0x4fcc>
   48378:	cmp    BYTE PTR [rdi+rsi*1-0x1],0x2f
   4837d:	lea    rax,[rsi-0x1]
   48381:	jne    4834c <argp_usage@@Base+0x4fcc>
   48383:	mov    rsi,rax
   48386:	jmp    48372 <argp_usage@@Base+0x4ff2>
   48388:	nop    DWORD PTR [rax+rax*1+0x0]
   48390:	mov    rsi,rax
   48393:	jmp    4832b <argp_usage@@Base+0x4fab>
   48395:	call   19130 <__sprintf_chk@plt+0xe780>
   4839a:	nop    WORD PTR [rax+rax*1+0x0]
   483a0:	endbr64 
   483a4:	push   r12
   483a6:	xor    esi,esi
   483a8:	mov    r12,rdi
   483ab:	push   rbp
   483ac:	mov    rbp,rdi
   483af:	push   rbx
   483b0:	movzx  eax,BYTE PTR [rdi]
   483b3:	cmp    al,0x2f
   483b5:	sete   sil
   483b9:	jne    483ce <argp_usage@@Base+0x504e>
   483bb:	nop    DWORD PTR [rax+rax*1+0x0]
   483c0:	movzx  eax,BYTE PTR [r12+0x1]
   483c6:	add    r12,0x1
   483ca:	cmp    al,0x2f
   483cc:	je     483c0 <argp_usage@@Base+0x5040>
   483ce:	test   al,al
   483d0:	je     4840a <argp_usage@@Base+0x508a>
   483d2:	mov    rdx,r12
   483d5:	xor    ecx,ecx
   483d7:	jmp    483f5 <argp_usage@@Base+0x5075>
   483d9:	nop    DWORD PTR [rax+0x0]
   483e0:	test   cl,cl
   483e2:	je     483e9 <argp_usage@@Base+0x5069>
   483e4:	mov    r12,rdx
   483e7:	xor    ecx,ecx
   483e9:	movzx  eax,BYTE PTR [rdx+0x1]
   483ed:	add    rdx,0x1
   483f1:	test   al,al
   483f3:	je     4840a <argp_usage@@Base+0x508a>
   483f5:	cmp    al,0x2f
   483f7:	jne    483e0 <argp_usage@@Base+0x5060>
   483f9:	movzx  eax,BYTE PTR [rdx+0x1]
   483fd:	add    rdx,0x1
   48401:	mov    ecx,0x1
   48406:	test   al,al
   48408:	jne    483f5 <argp_usage@@Base+0x5075>
   4840a:	sub    r12,rbp
   4840d:	jmp    48420 <argp_usage@@Base+0x50a0>
   4840f:	nop
   48410:	cmp    BYTE PTR [rbp+r12*1-0x1],0x2f
   48416:	lea    rax,[r12-0x1]
   4841b:	jne    48470 <argp_usage@@Base+0x50f0>
   4841d:	mov    r12,rax
   48420:	cmp    r12,rsi
   48423:	ja     48410 <argp_usage@@Base+0x5090>
   48425:	mov    rax,r12
   48428:	xor    rax,0x1
   4842c:	mov    ebx,eax
   4842e:	lea    rdi,[r12+rax*1+0x1]
   48433:	and    ebx,0x1
   48436:	call   a4a0 <malloc@plt>
   4843b:	test   rax,rax
   4843e:	je     4849d <argp_usage@@Base+0x511d>
   48440:	mov    rdx,r12
   48443:	mov    rsi,rbp
   48446:	mov    rdi,rax
   48449:	call   a420 <memcpy@plt>
   4844e:	mov    r8,rax
   48451:	test   bl,bl
   48453:	je     48495 <argp_usage@@Base+0x5115>
   48455:	mov    BYTE PTR [rax],0x2e
   48458:	mov    r12d,0x1
   4845e:	mov    BYTE PTR [r8+r12*1],0x0
   48463:	pop    rbx
   48464:	mov    rax,r8
   48467:	pop    rbp
   48468:	pop    r12
   4846a:	ret    
   4846b:	nop    DWORD PTR [rax+rax*1+0x0]
   48470:	lea    rdi,[r12+0x1]
   48475:	call   a4a0 <malloc@plt>
   4847a:	mov    r8,rax
   4847d:	test   rax,rax
   48480:	je     4849d <argp_usage@@Base+0x511d>
   48482:	mov    rdi,r8
   48485:	mov    rdx,r12
   48488:	mov    rsi,rbp
   4848b:	call   a420 <memcpy@plt>
   48490:	mov    r8,rax
   48493:	jmp    4845e <argp_usage@@Base+0x50de>
   48495:	mov    r12d,0x1
   4849b:	jmp    4845e <argp_usage@@Base+0x50de>
   4849d:	xor    r8d,r8d
   484a0:	jmp    48463 <argp_usage@@Base+0x50e3>
   484a2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   484ad:	nop    DWORD PTR [rax]
   484b0:	endbr64 
   484b4:	push   rbx
   484b5:	movzx  eax,BYTE PTR [rdi]
   484b8:	mov    rbx,rdi
   484bb:	cmp    al,0x2f
   484bd:	jne    484cc <argp_usage@@Base+0x514c>
   484bf:	nop
   484c0:	movzx  eax,BYTE PTR [rbx+0x1]
   484c4:	add    rbx,0x1
   484c8:	cmp    al,0x2f
   484ca:	je     484c0 <argp_usage@@Base+0x5140>
   484cc:	test   al,al
   484ce:	je     48548 <argp_usage@@Base+0x51c8>
   484d0:	mov    rdx,rbx
   484d3:	xor    ecx,ecx
   484d5:	jmp    484f5 <argp_usage@@Base+0x5175>
   484d7:	nop    WORD PTR [rax+rax*1+0x0]
   484e0:	test   cl,cl
   484e2:	je     484e9 <argp_usage@@Base+0x5169>
   484e4:	mov    rbx,rdx
   484e7:	xor    ecx,ecx
   484e9:	movzx  eax,BYTE PTR [rdx+0x1]
   484ed:	add    rdx,0x1
   484f1:	test   al,al
   484f3:	je     4850a <argp_usage@@Base+0x518a>
   484f5:	cmp    al,0x2f
   484f7:	jne    484e0 <argp_usage@@Base+0x5160>
   484f9:	movzx  eax,BYTE PTR [rdx+0x1]
   484fd:	add    rdx,0x1
   48501:	mov    ecx,0x1
   48506:	test   al,al
   48508:	jne    484f5 <argp_usage@@Base+0x5175>
   4850a:	cmp    BYTE PTR [rbx],0x0
   4850d:	cmove  rbx,rdi
   48511:	mov    rdi,rbx
   48514:	call   a060 <strlen@plt>
   48519:	cmp    rax,0x1
   4851d:	jbe    4852a <argp_usage@@Base+0x51aa>
   4851f:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
   48524:	lea    rdx,[rax-0x1]
   48528:	je     48540 <argp_usage@@Base+0x51c0>
   4852a:	add    rbx,rax
   4852d:	cmp    BYTE PTR [rbx],0x0
   48530:	mov    BYTE PTR [rbx],0x0
   48533:	setne  al
   48536:	pop    rbx
   48537:	ret    
   48538:	nop    DWORD PTR [rax+rax*1+0x0]
   48540:	mov    rax,rdx
   48543:	jmp    48519 <argp_usage@@Base+0x5199>
   48545:	nop    DWORD PTR [rax]
   48548:	mov    rbx,rdi
   4854b:	jmp    48511 <argp_usage@@Base+0x5191>
   4854d:	nop    DWORD PTR [rax]
   48550:	endbr64 
   48554:	mov    r9d,esi
   48557:	mov    r10d,esi
   4855a:	mov    r8d,0x1
   48560:	and    esi,0x20
   48563:	and    r9d,0x8000000
   4856a:	and    r10d,0x2
   4856e:	movzx  ecx,BYTE PTR [rdi]
   48571:	lea    rdx,[rdi+0x1]
   48575:	cmp    cl,0x40
   48578:	jg     48590 <argp_usage@@Base+0x5210>
   4857a:	cmp    cl,0x20
   4857d:	jg     485b8 <argp_usage@@Base+0x5238>
   4857f:	test   cl,cl
   48581:	jne    485a2 <argp_usage@@Base+0x5222>
   48583:	xor    eax,eax
   48585:	ret    
   48586:	cs nop WORD PTR [rax+rax*1+0x0]
   48590:	cmp    cl,0x5c
   48593:	je     485f0 <argp_usage@@Base+0x5270>
   48595:	jle    485a7 <argp_usage@@Base+0x5227>
   48597:	sub    ecx,0x7b
   4859a:	and    ecx,0xfd
   485a0:	je     485e0 <argp_usage@@Base+0x5260>
   485a2:	mov    rdi,rdx
   485a5:	jmp    4856e <argp_usage@@Base+0x51ee>
   485a7:	cmp    cl,0x5b
   485aa:	jne    485a2 <argp_usage@@Base+0x5222>
   485ac:	mov    eax,0x1
   485b1:	ret    
   485b2:	nop    WORD PTR [rax+rax*1+0x0]
   485b8:	sub    ecx,0x21
   485bb:	mov    rax,r8
   485be:	shl    rax,cl
   485c1:	test   eax,0x80000401
   485c6:	jne    48610 <argp_usage@@Base+0x5290>
   485c8:	test   eax,0x2180
   485cd:	jne    485e0 <argp_usage@@Base+0x5260>
   485cf:	test   eax,0x40000200
   485d4:	je     485a2 <argp_usage@@Base+0x5222>
   485d6:	mov    eax,0x1
   485db:	ret    
   485dc:	nop    DWORD PTR [rax+0x0]
   485e0:	test   r9d,r9d
   485e3:	je     485a2 <argp_usage@@Base+0x5222>
   485e5:	jmp    485ac <argp_usage@@Base+0x522c>
   485e7:	nop    WORD PTR [rax+rax*1+0x0]
   485f0:	test   r9d,r9d
   485f3:	jne    485a2 <argp_usage@@Base+0x5222>
   485f5:	test   r10d,r10d
   485f8:	jne    485a2 <argp_usage@@Base+0x5222>
   485fa:	cmp    BYTE PTR [rdi+0x1],0x0
   485fe:	je     485a2 <argp_usage@@Base+0x5222>
   48600:	lea    rdx,[rdi+0x2]
   48604:	jmp    485a2 <argp_usage@@Base+0x5222>
   48606:	cs nop WORD PTR [rax+rax*1+0x0]
   48610:	test   esi,esi
   48612:	je     485a2 <argp_usage@@Base+0x5222>
   48614:	cmp    BYTE PTR [rdi+0x1],0x28
   48618:	jne    485a2 <argp_usage@@Base+0x5222>
   4861a:	jmp    485ac <argp_usage@@Base+0x522c>
   4861c:	nop    DWORD PTR [rax+0x0]
   48620:	endbr64 
   48624:	push   r12
   48626:	push   rbp
   48627:	mov    rbp,rdi
   4862a:	sub    rsp,0x8
   4862e:	call   a060 <strlen@plt>
   48633:	lea    r12,[rax+0x1]
   48637:	mov    rdi,r12
   4863a:	call   a4a0 <malloc@plt>
   4863f:	test   rax,rax
   48642:	je     48659 <argp_usage@@Base+0x52d9>
   48644:	add    rsp,0x8
   48648:	mov    rdx,r12
   4864b:	mov    rsi,rbp
   4864e:	mov    rdi,rax
   48651:	pop    rbp
   48652:	pop    r12
   48654:	jmp    a420 <memcpy@plt>
   48659:	call   19130 <__sprintf_chk@plt+0xe780>
   4865e:	xchg   ax,ax
   48660:	endbr64 
   48664:	push   r14
   48666:	mov    r14,rdi
   48669:	push   r13
   4866b:	lea    r13,[rip+0xffffffffffffe05e]        # 466d0 <argp_usage@@Base+0x3350>
   48672:	push   r12
   48674:	push   rbp
   48675:	mov    ebp,edx
   48677:	and    edx,0x10000000
   4867d:	push   rbx
   4867e:	mov    rbx,rsi
   48681:	je     4868a <argp_usage@@Base+0x530a>
   48683:	mov    r13,QWORD PTR [rip+0x33926]        # 7bfb0 <_obstack_memory_used@@Base+0x2f330>
   4868a:	mov    edx,ebp
   4868c:	mov    rsi,rbx
   4868f:	mov    rdi,r14
   48692:	call   r13
   48695:	test   eax,eax
   48697:	sete   r8b
   4869b:	test   ebp,0x40000000
   486a1:	jne    486c5 <argp_usage@@Base+0x5345>
   486a3:	movzx  ecx,BYTE PTR [rbx]
   486a6:	test   cl,cl
   486a8:	je     486c5 <argp_usage@@Base+0x5345>
   486aa:	test   eax,eax
   486ac:	je     48708 <argp_usage@@Base+0x5388>
   486ae:	mov    r12,rbx
   486b1:	mov    eax,ecx
   486b3:	add    rbx,0x1
   486b7:	movzx  ecx,BYTE PTR [rbx]
   486ba:	cmp    al,0x2f
   486bc:	je     486e3 <argp_usage@@Base+0x5363>
   486be:	test   cl,cl
   486c0:	jne    486ae <argp_usage@@Base+0x532e>
   486c2:	xor    r8d,r8d
   486c5:	pop    rbx
   486c6:	mov    eax,r8d
   486c9:	pop    rbp
   486ca:	pop    r12
   486cc:	pop    r13
   486ce:	pop    r14
   486d0:	ret    
   486d1:	nop    DWORD PTR [rax+0x0]
   486d8:	movzx  ecx,BYTE PTR [rbx+0x1]
   486dc:	mov    r12,rbx
   486df:	add    rbx,0x1
   486e3:	cmp    cl,0x2f
   486e6:	je     486d8 <argp_usage@@Base+0x5358>
   486e8:	mov    edx,ebp
   486ea:	mov    rsi,rbx
   486ed:	mov    rdi,r14
   486f0:	call   r13
   486f3:	movzx  ecx,BYTE PTR [r12+0x1]
   486f9:	test   cl,cl
   486fb:	jne    486aa <argp_usage@@Base+0x532a>
   486fd:	test   eax,eax
   486ff:	sete   r8b
   48703:	jmp    486c5 <argp_usage@@Base+0x5345>
   48705:	nop    DWORD PTR [rax]
   48708:	mov    r8d,0x1
   4870e:	pop    rbx
   4870f:	pop    rbp
   48710:	mov    eax,r8d
   48713:	pop    r12
   48715:	pop    r13
   48717:	pop    r14
   48719:	ret    
   4871a:	nop    WORD PTR [rax+rax*1+0x0]
   48720:	endbr64 
   48724:	push   r15
   48726:	xor    r15d,r15d
   48729:	push   r14
   4872b:	mov    r14,rdx
   4872e:	push   r13
   48730:	mov    r13,rsi
   48733:	push   r12
   48735:	mov    r12d,r8d
   48738:	push   rbp
   48739:	xor    ebp,ebp
   4873b:	push   rbx
   4873c:	xor    ebx,ebx
   4873e:	sub    rsp,0x38
   48742:	mov    QWORD PTR [rsp+0x10],rdi
   48747:	mov    DWORD PTR [rsp+0x1c],ecx
   4874b:	mov    DWORD PTR [rsp+0x28],r8d
   48750:	mov    QWORD PTR [rsp+0x20],r9
   48755:	jmp    48768 <argp_usage@@Base+0x53e8>
   48757:	nop    WORD PTR [rax+rax*1+0x0]
   48760:	mov    BYTE PTR [rbp+rbx*1+0x0],cl
   48764:	add    rbx,0x1
   48768:	mov    rax,QWORD PTR [r14+0x8]
   4876c:	cmp    rax,QWORD PTR [r14+0x10]
   48770:	jae    487d0 <argp_usage@@Base+0x5450>
   48772:	lea    rcx,[rax+0x1]
   48776:	mov    QWORD PTR [r14+0x8],rcx
   4877a:	movzx  ecx,BYTE PTR [rax]
   4877d:	cmp    rbx,r15
   48780:	jne    48760 <argp_usage@@Base+0x53e0>
   48782:	test   rbp,rbp
   48785:	je     48940 <argp_usage@@Base+0x55c0>
   4878b:	movabs rax,0x5555555555555553
   48795:	cmp    rbx,rax
   48798:	ja     48827 <argp_usage@@Base+0x54a7>
   4879e:	mov    rax,rbx
   487a1:	shr    rax,1
   487a4:	lea    r15,[rbx+rax*1+0x1]
   487a9:	mov    rdi,rbp
   487ac:	mov    rsi,r15
   487af:	mov    DWORD PTR [rsp+0x8],ecx
   487b3:	call   a570 <realloc@plt>
   487b8:	mov    ecx,DWORD PTR [rsp+0x8]
   487bc:	test   rax,rax
   487bf:	mov    rbp,rax
   487c2:	jne    48760 <argp_usage@@Base+0x53e0>
   487c4:	jmp    48827 <argp_usage@@Base+0x54a7>
   487c6:	cs nop WORD PTR [rax+rax*1+0x0]
   487d0:	mov    rdi,r14
   487d3:	call   9d30 <__uflow@plt>
   487d8:	mov    ecx,eax
   487da:	cmp    eax,0xffffffff
   487dd:	jne    4877d <argp_usage@@Base+0x53fd>
   487df:	mov    eax,DWORD PTR [r14]
   487e2:	and    eax,0x20
   487e5:	mov    DWORD PTR [rsp+0x2c],eax
   487e9:	jne    48900 <argp_usage@@Base+0x5580>
   487ef:	lea    r15,[rbx+0x1]
   487f3:	mov    rdi,rbp
   487f6:	mov    rsi,r15
   487f9:	call   a570 <realloc@plt>
   487fe:	mov    r14,rax
   48801:	test   rax,rax
   48804:	je     4882c <argp_usage@@Base+0x54ac>
   48806:	movzx  eax,BYTE PTR [rsp+0x28]
   4880b:	mov    BYTE PTR [r14+rbx*1],al
   4880f:	test   rbx,rbx
   48812:	jne    48848 <argp_usage@@Base+0x54c8>
   48814:	mov    edi,0x10
   48819:	call   a4a0 <malloc@plt>
   4881e:	test   rax,rax
   48821:	jne    48960 <argp_usage@@Base+0x55e0>
   48827:	call   19130 <__sprintf_chk@plt+0xe780>
   4882c:	test   r15,r15
   4882f:	jne    48827 <argp_usage@@Base+0x54a7>
   48831:	test   rbp,rbp
   48834:	je     48827 <argp_usage@@Base+0x54a7>
   48836:	movzx  eax,BYTE PTR [rsp+0x28]
   4883b:	mov    BYTE PTR ds:0xffffffffffffffff,al
   48842:	nop    WORD PTR [rax+rax*1+0x0]
   48848:	xor    ebp,ebp
   4884a:	mov    r15d,DWORD PTR [rsp+0x28]
   4884f:	cmp    BYTE PTR [r14+rbx*1-0x1],r15b
   48854:	mov    edi,0x10
   48859:	setne  bpl
   4885d:	add    rbp,rbx
   48860:	add    rbp,r14
   48863:	call   a4a0 <malloc@plt>
   48868:	test   rax,rax
   4886b:	je     48827 <argp_usage@@Base+0x54a7>
   4886d:	mov    rdx,QWORD PTR [r13+0x8]
   48871:	mov    QWORD PTR [rax+0x8],r14
   48875:	mov    QWORD PTR [r13+0x8],rax
   48879:	mov    QWORD PTR [rax],rdx
   4887c:	cmp    rbp,r14
   4887f:	jbe    488de <argp_usage@@Base+0x555e>
   48881:	movzx  ebx,r15b
   48885:	mov    rsi,r14
   48888:	add    rbx,rbx
   4888b:	jmp    48895 <argp_usage@@Base+0x5515>
   4888d:	nop    DWORD PTR [rax]
   48890:	cmp    rbp,r14
   48893:	je     488de <argp_usage@@Base+0x555e>
   48895:	movzx  eax,BYTE PTR [r14]
   48899:	mov    r15,r14
   4889c:	add    r14,0x1
   488a0:	cmp    al,r12b
   488a3:	jne    48890 <argp_usage@@Base+0x5510>
   488a5:	mov    QWORD PTR [rsp+0x8],rsi
   488aa:	call   a980 <__ctype_b_loc@plt>
   488af:	mov    rsi,QWORD PTR [rsp+0x8]
   488b4:	mov    rcx,QWORD PTR [rax]
   488b7:	test   WORD PTR [rcx+rbx*1],0x2000
   488bd:	jne    48910 <argp_usage@@Base+0x5590>
   488bf:	mov    rcx,QWORD PTR [rsp+0x20]
   488c4:	mov    edx,DWORD PTR [rsp+0x1c]
   488c8:	mov    BYTE PTR [r15],0x0
   488cc:	mov    rdi,r13
   488cf:	mov    rax,QWORD PTR [rsp+0x10]
   488d4:	call   rax
   488d6:	mov    rsi,r14
   488d9:	cmp    rbp,r14
   488dc:	jne    48895 <argp_usage@@Base+0x5515>
   488de:	call   9e40 <__errno_location@plt>
   488e3:	mov    edx,DWORD PTR [rsp+0x2c]
   488e7:	mov    DWORD PTR [rax],edx
   488e9:	neg    edx
   488eb:	sbb    eax,eax
   488ed:	add    rsp,0x38
   488f1:	pop    rbx
   488f2:	pop    rbp
   488f3:	pop    r12
   488f5:	pop    r13
   488f7:	pop    r14
   488f9:	pop    r15
   488fb:	ret    
   488fc:	nop    DWORD PTR [rax+0x0]
   48900:	call   9e40 <__errno_location@plt>
   48905:	mov    eax,DWORD PTR [rax]
   48907:	mov    DWORD PTR [rsp+0x2c],eax
   4890b:	jmp    487ef <argp_usage@@Base+0x546f>
   48910:	lea    rax,[r14-0x1]
   48914:	cmp    rsi,rax
   48917:	jne    48929 <argp_usage@@Base+0x55a9>
   48919:	jmp    488d6 <argp_usage@@Base+0x5556>
   4891b:	nop    DWORD PTR [rax+rax*1+0x0]
   48920:	sub    r15,0x1
   48924:	cmp    r15,rsi
   48927:	je     488d6 <argp_usage@@Base+0x5556>
   48929:	movzx  eax,BYTE PTR [r15-0x1]
   4892e:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   48933:	jne    48920 <argp_usage@@Base+0x55a0>
   48935:	jmp    488bf <argp_usage@@Base+0x553f>
   48937:	nop    WORD PTR [rax+rax*1+0x0]
   48940:	test   rbx,rbx
   48943:	je     48950 <argp_usage@@Base+0x55d0>
   48945:	jns    487a9 <argp_usage@@Base+0x5429>
   4894b:	jmp    48827 <argp_usage@@Base+0x54a7>
   48950:	mov    r15d,0x80
   48956:	jmp    487a9 <argp_usage@@Base+0x5429>
   4895b:	nop    DWORD PTR [rax+rax*1+0x0]
   48960:	mov    rdx,QWORD PTR [r13+0x8]
   48964:	mov    QWORD PTR [rax+0x8],r14
   48968:	mov    QWORD PTR [r13+0x8],rax
   4896c:	mov    QWORD PTR [rax],rdx
   4896f:	jmp    488de <argp_usage@@Base+0x555e>
   48974:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4897f:	nop
   48980:	endbr64 
   48984:	push   r14
   48986:	mov    r14d,r8d
   48989:	push   r13
   4898b:	mov    r13d,esi
   4898e:	push   r12
   48990:	mov    r12,rcx
   48993:	push   rbp
   48994:	mov    rbp,rdx
   48997:	sub    rsp,0x8
   4899b:	test   edi,edi
   4899d:	jns    489d0 <argp_usage@@Base+0x5650>
   4899f:	test   rdx,rdx
   489a2:	je     48a00 <argp_usage@@Base+0x5680>
   489a4:	mov    ecx,r14d
   489a7:	mov    rdx,r12
   489aa:	mov    rsi,rbp
   489ad:	mov    edi,r13d
   489b0:	call   9dd0 <utimensat@plt>
   489b5:	cmp    eax,0x1
   489b8:	je     48a00 <argp_usage@@Base+0x5680>
   489ba:	add    rsp,0x8
   489be:	pop    rbp
   489bf:	pop    r12
   489c1:	pop    r13
   489c3:	pop    r14
   489c5:	ret    
   489c6:	cs nop WORD PTR [rax+rax*1+0x0]
   489d0:	mov    rsi,rcx
   489d3:	call   a750 <futimens@plt>
   489d8:	cmp    eax,0xffffffff
   489db:	jne    489b5 <argp_usage@@Base+0x5635>
   489dd:	test   rbp,rbp
   489e0:	je     489b5 <argp_usage@@Base+0x5635>
   489e2:	call   9e40 <__errno_location@plt>
   489e7:	cmp    DWORD PTR [rax],0x26
   489ea:	je     489a4 <argp_usage@@Base+0x5624>
   489ec:	add    rsp,0x8
   489f0:	mov    eax,0xffffffff
   489f5:	pop    rbp
   489f6:	pop    r12
   489f8:	pop    r13
   489fa:	pop    r14
   489fc:	ret    
   489fd:	nop    DWORD PTR [rax]
   48a00:	call   9e40 <__errno_location@plt>
   48a05:	mov    DWORD PTR [rax],0x9
   48a0b:	add    rsp,0x8
   48a0f:	mov    eax,0xffffffff
   48a14:	pop    rbp
   48a15:	pop    r12
   48a17:	pop    r13
   48a19:	pop    r14
   48a1b:	ret    
   48a1c:	nop    DWORD PTR [rax+0x0]
   48a20:	endbr64 
   48a24:	mov    eax,DWORD PTR [rsi+0x18]
   48a27:	and    eax,0xf000
   48a2c:	cmp    eax,0xa000
   48a31:	jne    48a40 <argp_usage@@Base+0x56c0>
   48a33:	xor    eax,eax
   48a35:	ret    
   48a36:	cs nop WORD PTR [rax+rax*1+0x0]
   48a40:	push   rbp
   48a41:	xor    ecx,ecx
   48a43:	xor    edx,edx
   48a45:	mov    rbp,rdi
   48a48:	push   rbx
   48a49:	mov    rbx,rsi
   48a4c:	lea    rsi,[rip+0x23896]        # 6c2e9 <_obstack_memory_used@@Base+0x1f669>
   48a53:	sub    rsp,0x8
   48a57:	call   a7c0 <getxattr@plt>
   48a5c:	test   rax,rax
   48a5f:	js     48a70 <argp_usage@@Base+0x56f0>
   48a61:	je     48aa0 <argp_usage@@Base+0x5720>
   48a63:	mov    eax,0x1
   48a68:	add    rsp,0x8
   48a6c:	pop    rbx
   48a6d:	pop    rbp
   48a6e:	ret    
   48a6f:	nop
   48a70:	call   9e40 <__errno_location@plt>
   48a75:	mov    edx,DWORD PTR [rax]
   48a77:	cmp    edx,0x3d
   48a7a:	je     48aa0 <argp_usage@@Base+0x5720>
   48a7c:	cmp    edx,0x26
   48a7f:	je     48aaf <argp_usage@@Base+0x572f>
   48a81:	jg     48ac0 <argp_usage@@Base+0x5740>
   48a83:	xor    eax,eax
   48a85:	cmp    edx,0x10
   48a88:	je     48a68 <argp_usage@@Base+0x56e8>
   48a8a:	xor    eax,eax
   48a8c:	cmp    edx,0x16
   48a8f:	setne  al
   48a92:	add    rsp,0x8
   48a96:	neg    eax
   48a98:	pop    rbx
   48a99:	pop    rbp
   48a9a:	ret    
   48a9b:	nop    DWORD PTR [rax+rax*1+0x0]
   48aa0:	mov    eax,DWORD PTR [rbx+0x18]
   48aa3:	and    eax,0xf000
   48aa8:	cmp    eax,0x4000
   48aad:	je     48ad0 <argp_usage@@Base+0x5750>
   48aaf:	xor    eax,eax
   48ab1:	add    rsp,0x8
   48ab5:	pop    rbx
   48ab6:	pop    rbp
   48ab7:	ret    
   48ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   48ac0:	xor    eax,eax
   48ac2:	cmp    edx,0x5f
   48ac5:	setne  al
   48ac8:	neg    eax
   48aca:	jmp    48a68 <argp_usage@@Base+0x56e8>
   48acc:	nop    DWORD PTR [rax+0x0]
   48ad0:	xor    ecx,ecx
   48ad2:	xor    edx,edx
   48ad4:	lea    rsi,[rip+0x23826]        # 6c301 <_obstack_memory_used@@Base+0x1f681>
   48adb:	mov    rdi,rbp
   48ade:	call   a7c0 <getxattr@plt>
   48ae3:	test   rax,rax
   48ae6:	js     48af8 <argp_usage@@Base+0x5778>
   48ae8:	jne    48a63 <argp_usage@@Base+0x56e3>
   48aee:	xor    eax,eax
   48af0:	jmp    48ab1 <argp_usage@@Base+0x5731>
   48af2:	nop    WORD PTR [rax+rax*1+0x0]
   48af8:	call   9e40 <__errno_location@plt>
   48afd:	mov    edx,DWORD PTR [rax]
   48aff:	cmp    edx,0x3d
   48b02:	jne    48a7c <argp_usage@@Base+0x56fc>
   48b08:	xor    eax,eax
   48b0a:	jmp    48ab1 <argp_usage@@Base+0x5731>
   48b0c:	nop    DWORD PTR [rax+0x0]
   48b10:	endbr64 
   48b14:	push   r15
   48b16:	xor    r15d,r15d
   48b19:	push   r14
   48b1b:	mov    r14,rdx
   48b1e:	push   r13
   48b20:	mov    r13d,edi
   48b23:	push   r12
   48b25:	mov    r12,rsi
   48b28:	push   rbp
   48b29:	push   rbx
   48b2a:	sub    rsp,0x8
   48b2e:	test   rdx,rdx
   48b31:	je     48b91 <argp_usage@@Base+0x5811>
   48b33:	nop    DWORD PTR [rax+rax*1+0x0]
   48b38:	mov    rbp,r14
   48b3b:	nop    DWORD PTR [rax+rax*1+0x0]
   48b40:	mov    rdx,rbp
   48b43:	mov    rsi,r12
   48b46:	mov    edi,r13d
   48b49:	call   9f90 <write@plt>
   48b4e:	mov    rbx,rax
   48b51:	test   rax,rax
   48b54:	jns    48ba8 <argp_usage@@Base+0x5828>
   48b56:	call   9e40 <__errno_location@plt>
   48b5b:	mov    eax,DWORD PTR [rax]
   48b5d:	cmp    eax,0x4
   48b60:	je     48b40 <argp_usage@@Base+0x57c0>
   48b62:	cmp    eax,0x16
   48b65:	jne    48b80 <argp_usage@@Base+0x5800>
   48b67:	cmp    rbp,0x7ff00000
   48b6e:	jbe    48b80 <argp_usage@@Base+0x5800>
   48b70:	mov    ebp,0x7ff00000
   48b75:	jmp    48b40 <argp_usage@@Base+0x57c0>
   48b77:	nop    WORD PTR [rax+rax*1+0x0]
   48b80:	cmp    rbx,0xffffffffffffffff
   48b84:	je     48b91 <argp_usage@@Base+0x5811>
   48b86:	add    r15,rbx
   48b89:	add    r12,rbx
   48b8c:	sub    r14,rbx
   48b8f:	jne    48b38 <argp_usage@@Base+0x57b8>
   48b91:	add    rsp,0x8
   48b95:	mov    rax,r15
   48b98:	pop    rbx
   48b99:	pop    rbp
   48b9a:	pop    r12
   48b9c:	pop    r13
   48b9e:	pop    r14
   48ba0:	pop    r15
   48ba2:	ret    
   48ba3:	nop    DWORD PTR [rax+rax*1+0x0]
   48ba8:	jne    48b86 <argp_usage@@Base+0x5806>
   48baa:	call   9e40 <__errno_location@plt>
   48baf:	mov    DWORD PTR [rax],0x1c
   48bb5:	jmp    48b91 <argp_usage@@Base+0x5811>
   48bb7:	nop    WORD PTR [rax+rax*1+0x0]
   48bc0:	endbr64 
   48bc4:	push   r12
   48bc6:	mov    r12,rsi
   48bc9:	push   rbp
   48bca:	mov    rbp,rdi
   48bcd:	push   rbx
   48bce:	mov    rsi,QWORD PTR [rdi+0x10]
   48bd2:	mov    rdi,r12
   48bd5:	call   QWORD PTR [rbp+0x30]
   48bd8:	cmp    rax,QWORD PTR [rbp+0x10]
   48bdc:	jae    aac2 <__sprintf_chk@plt+0x112>
   48be2:	mov    rbx,rax
   48be5:	shl    rbx,0x4
   48be9:	add    rbx,QWORD PTR [rbp+0x0]
   48bed:	mov    rsi,QWORD PTR [rbx]
   48bf0:	test   rsi,rsi
   48bf3:	jne    48c03 <argp_usage@@Base+0x5883>
   48bf5:	jmp    48c1b <argp_usage@@Base+0x589b>
   48bf7:	nop    WORD PTR [rax+rax*1+0x0]
   48c00:	mov    rsi,QWORD PTR [rbx]
   48c03:	cmp    rsi,r12
   48c06:	je     48c2b <argp_usage@@Base+0x58ab>
   48c08:	mov    rdi,r12
   48c0b:	call   QWORD PTR [rbp+0x38]
   48c0e:	test   al,al
   48c10:	jne    48c28 <argp_usage@@Base+0x58a8>
   48c12:	mov    rbx,QWORD PTR [rbx+0x8]
   48c16:	test   rbx,rbx
   48c19:	jne    48c00 <argp_usage@@Base+0x5880>
   48c1b:	pop    rbx
   48c1c:	xor    eax,eax
   48c1e:	pop    rbp
   48c1f:	pop    r12
   48c21:	ret    
   48c22:	nop    WORD PTR [rax+rax*1+0x0]
   48c28:	mov    r12,QWORD PTR [rbx]
   48c2b:	mov    rax,r12
   48c2e:	pop    rbx
   48c2f:	pop    rbp
   48c30:	pop    r12
   48c32:	ret    
   48c33:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   48c3e:	xchg   ax,ax
   48c40:	endbr64 
   48c44:	movabs r9,0xaaaaaaaaaaaaaaab
   48c4e:	mov    eax,0xa
   48c53:	cmp    rdi,rax
   48c56:	cmovae rax,rdi
   48c5a:	mov    r8,rax
   48c5d:	or     r8,0x1
   48c61:	cmp    r8,0xffffffffffffffff
   48c65:	je     48cdc <argp_usage@@Base+0x595c>
   48c67:	nop    WORD PTR [rax+rax*1+0x0]
   48c70:	mov    rax,r8
   48c73:	mul    r9
   48c76:	mov    rax,rdx
   48c79:	and    rdx,0xfffffffffffffffe
   48c7d:	shr    rax,1
   48c80:	add    rdx,rax
   48c83:	mov    rax,r8
   48c86:	sub    rax,rdx
   48c89:	cmp    r8,0x9
   48c8d:	jbe    48ce0 <argp_usage@@Base+0x5960>
   48c8f:	test   rax,rax
   48c92:	je     48cd2 <argp_usage@@Base+0x5952>
   48c94:	mov    edi,0x10
   48c99:	mov    esi,0x9
   48c9e:	mov    ecx,0x3
   48ca3:	jmp    48cb1 <argp_usage@@Base+0x5931>
   48ca5:	nop    DWORD PTR [rax]
   48ca8:	add    rdi,0x8
   48cac:	test   rdx,rdx
   48caf:	je     48cd2 <argp_usage@@Base+0x5952>
   48cb1:	add    rcx,0x2
   48cb5:	mov    rax,r8
   48cb8:	xor    edx,edx
   48cba:	add    rsi,rdi
   48cbd:	div    rcx
   48cc0:	cmp    rsi,r8
   48cc3:	jb     48ca8 <argp_usage@@Base+0x5928>
   48cc5:	mov    rax,r8
   48cc8:	xor    edx,edx
   48cca:	div    rcx
   48ccd:	test   rdx,rdx
   48cd0:	jne    48cdc <argp_usage@@Base+0x595c>
   48cd2:	add    r8,0x2
   48cd6:	cmp    r8,0xffffffffffffffff
   48cda:	jne    48c70 <argp_usage@@Base+0x58f0>
   48cdc:	mov    rax,r8
   48cdf:	ret    
   48ce0:	mov    ecx,0x3
   48ce5:	jmp    48cc5 <argp_usage@@Base+0x5945>
   48ce7:	nop    WORD PTR [rax+rax*1+0x0]
   48cf0:	endbr64 
   48cf4:	mov    rax,QWORD PTR [rdi+0x28]
   48cf8:	lea    rdx,[rip+0x24001]        # 6cd00 <_obstack_memory_used@@Base+0x20080>
   48cff:	cmp    rax,rdx
   48d02:	je     48d70 <argp_usage@@Base+0x59f0>
   48d04:	movss  xmm0,DWORD PTR [rax+0x8]
   48d09:	comiss xmm0,DWORD PTR [rip+0x24140]        # 6ce50 <_obstack_memory_used@@Base+0x201d0>
   48d10:	jbe    48d63 <argp_usage@@Base+0x59e3>
   48d12:	movss  xmm1,DWORD PTR [rip+0x2413a]        # 6ce54 <_obstack_memory_used@@Base+0x201d4>
   48d1a:	comiss xmm1,xmm0
   48d1d:	jbe    48d63 <argp_usage@@Base+0x59e3>
   48d1f:	movss  xmm1,DWORD PTR [rax+0xc]
   48d24:	comiss xmm1,DWORD PTR [rip+0x2412d]        # 6ce58 <_obstack_memory_used@@Base+0x201d8>
   48d2b:	jbe    48d63 <argp_usage@@Base+0x59e3>
   48d2d:	movss  xmm1,DWORD PTR [rax]
   48d31:	comiss xmm1,DWORD PTR [rip+0x24124]        # 6ce5c <_obstack_memory_used@@Base+0x201dc>
   48d38:	jb     48d63 <argp_usage@@Base+0x59e3>
   48d3a:	addss  xmm1,DWORD PTR [rip+0x2410e]        # 6ce50 <_obstack_memory_used@@Base+0x201d0>
   48d42:	movss  xmm2,DWORD PTR [rax+0x4]
   48d47:	comiss xmm2,xmm1
   48d4a:	jbe    48d63 <argp_usage@@Base+0x59e3>
   48d4c:	movss  xmm3,DWORD PTR [rip+0x2410c]        # 6ce60 <_obstack_memory_used@@Base+0x201e0>
   48d54:	comiss xmm3,xmm2
   48d57:	jb     48d63 <argp_usage@@Base+0x59e3>
   48d59:	comiss xmm0,xmm1
   48d5c:	mov    eax,0x1
   48d61:	ja     48d75 <argp_usage@@Base+0x59f5>
   48d63:	mov    QWORD PTR [rdi+0x28],rdx
   48d67:	xor    eax,eax
   48d69:	ret    
   48d6a:	nop    WORD PTR [rax+rax*1+0x0]
   48d70:	mov    eax,0x1
   48d75:	ret    
   48d76:	cs nop WORD PTR [rax+rax*1+0x0]
   48d80:	endbr64 
   48d84:	push   r12
   48d86:	push   rbp
   48d87:	mov    rbp,rdi
   48d8a:	push   rbx
   48d8b:	mov    r12,QWORD PTR [rdi]
   48d8e:	cmp    r12,QWORD PTR [rdi+0x8]
   48d92:	jb     48daa <argp_usage@@Base+0x5a2a>
   48d94:	jmp    48e1b <argp_usage@@Base+0x5a9b>
   48d99:	nop    DWORD PTR [rax+0x0]
   48da0:	add    r12,0x10
   48da4:	cmp    QWORD PTR [rbp+0x8],r12
   48da8:	jbe    48e1b <argp_usage@@Base+0x5a9b>
   48daa:	cmp    QWORD PTR [r12],0x0
   48daf:	je     48da0 <argp_usage@@Base+0x5a20>
   48db1:	mov    rbx,QWORD PTR [r12+0x8]
   48db6:	mov    rdx,QWORD PTR [rbp+0x40]
   48dba:	test   rbx,rbx
   48dbd:	jne    48dcb <argp_usage@@Base+0x5a4b>
   48dbf:	jmp    48df5 <argp_usage@@Base+0x5a75>
   48dc1:	nop    DWORD PTR [rax+0x0]
   48dc8:	mov    rbx,rax
   48dcb:	test   rdx,rdx
   48dce:	je     48dd9 <argp_usage@@Base+0x5a59>
   48dd0:	mov    rdi,QWORD PTR [rbx]
   48dd3:	call   rdx
   48dd5:	mov    rdx,QWORD PTR [rbp+0x40]
   48dd9:	mov    rax,QWORD PTR [rbx+0x8]
   48ddd:	mov    rcx,QWORD PTR [rbp+0x48]
   48de1:	mov    QWORD PTR [rbx],0x0
   48de8:	mov    QWORD PTR [rbx+0x8],rcx
   48dec:	mov    QWORD PTR [rbp+0x48],rbx
   48df0:	test   rax,rax
   48df3:	jne    48dc8 <argp_usage@@Base+0x5a48>
   48df5:	test   rdx,rdx
   48df8:	je     48e00 <argp_usage@@Base+0x5a80>
   48dfa:	mov    rdi,QWORD PTR [r12]
   48dfe:	call   rdx
   48e00:	mov    QWORD PTR [r12],0x0
   48e08:	add    r12,0x10
   48e0c:	mov    QWORD PTR [r12-0x8],0x0
   48e15:	cmp    QWORD PTR [rbp+0x8],r12
   48e19:	ja     48daa <argp_usage@@Base+0x5a2a>
   48e1b:	pop    rbx
   48e1c:	mov    QWORD PTR [rbp+0x18],0x0
   48e24:	mov    QWORD PTR [rbp+0x20],0x0
   48e2c:	pop    rbp
   48e2d:	pop    r12
   48e2f:	ret    
   48e30:	endbr64 
   48e34:	push   r12
   48e36:	mov    r12,rdi
   48e39:	push   rbp
   48e3a:	push   rbx
   48e3b:	cmp    QWORD PTR [rdi+0x40],0x0
   48e40:	mov    rbp,QWORD PTR [rdi]
   48e43:	mov    rax,QWORD PTR [rdi+0x8]
   48e47:	je     48ea0 <argp_usage@@Base+0x5b20>
   48e49:	cmp    QWORD PTR [rdi+0x20],0x0
   48e4e:	je     48ea0 <argp_usage@@Base+0x5b20>
   48e50:	cmp    rbp,rax
   48e53:	jb     48e6e <argp_usage@@Base+0x5aee>
   48e55:	jmp    48edc <argp_usage@@Base+0x5b5c>
   48e5a:	nop    WORD PTR [rax+rax*1+0x0]
   48e60:	mov    rax,QWORD PTR [r12+0x8]
   48e65:	add    rbp,0x10
   48e69:	cmp    rax,rbp
   48e6c:	jbe    48ea0 <argp_usage@@Base+0x5b20>
   48e6e:	mov    rdi,QWORD PTR [rbp+0x0]
   48e72:	test   rdi,rdi
   48e75:	je     48e60 <argp_usage@@Base+0x5ae0>
   48e77:	mov    rbx,rbp
   48e7a:	jmp    48e83 <argp_usage@@Base+0x5b03>
   48e7c:	nop    DWORD PTR [rax+0x0]
   48e80:	mov    rdi,QWORD PTR [rbx]
   48e83:	call   QWORD PTR [r12+0x40]
   48e88:	mov    rbx,QWORD PTR [rbx+0x8]
   48e8c:	test   rbx,rbx
   48e8f:	jne    48e80 <argp_usage@@Base+0x5b00>
   48e91:	mov    rax,QWORD PTR [r12+0x8]
   48e96:	add    rbp,0x10
   48e9a:	cmp    rax,rbp
   48e9d:	ja     48e6e <argp_usage@@Base+0x5aee>
   48e9f:	nop
   48ea0:	mov    rbp,QWORD PTR [r12]
   48ea4:	cmp    rbp,rax
   48ea7:	jae    48edc <argp_usage@@Base+0x5b5c>
   48ea9:	nop    DWORD PTR [rax+0x0]
   48eb0:	mov    rbx,QWORD PTR [rbp+0x8]
   48eb4:	test   rbx,rbx
   48eb7:	je     48ed1 <argp_usage@@Base+0x5b51>
   48eb9:	nop    DWORD PTR [rax+0x0]
   48ec0:	mov    rdi,rbx
   48ec3:	mov    rbx,QWORD PTR [rbx+0x8]
   48ec7:	call   9ce0 <free@plt>
   48ecc:	test   rbx,rbx
   48ecf:	jne    48ec0 <argp_usage@@Base+0x5b40>
   48ed1:	add    rbp,0x10
   48ed5:	cmp    QWORD PTR [r12+0x8],rbp
   48eda:	ja     48eb0 <argp_usage@@Base+0x5b30>
   48edc:	mov    rbx,QWORD PTR [r12+0x48]
   48ee1:	test   rbx,rbx
   48ee4:	je     48f01 <argp_usage@@Base+0x5b81>
   48ee6:	cs nop WORD PTR [rax+rax*1+0x0]
   48ef0:	mov    rdi,rbx
   48ef3:	mov    rbx,QWORD PTR [rbx+0x8]
   48ef7:	call   9ce0 <free@plt>
   48efc:	test   rbx,rbx
   48eff:	jne    48ef0 <argp_usage@@Base+0x5b70>
   48f01:	mov    rdi,QWORD PTR [r12]
   48f05:	call   9ce0 <free@plt>
   48f0a:	pop    rbx
   48f0b:	mov    rdi,r12
   48f0e:	pop    rbp
   48f0f:	pop    r12
   48f11:	jmp    9ce0 <free@plt>
   48f16:	cs nop WORD PTR [rax+rax*1+0x0]
   48f20:	endbr64 
   48f24:	push   r14
   48f26:	mov    r14,rdx
   48f29:	push   r13
   48f2b:	mov    r13,rsi
   48f2e:	push   r12
   48f30:	mov    r12d,ecx
   48f33:	push   rbp
   48f34:	mov    rbp,rdi
   48f37:	push   rbx
   48f38:	mov    rsi,QWORD PTR [rdi+0x10]
   48f3c:	mov    rdi,r13
   48f3f:	call   QWORD PTR [rbp+0x30]
   48f42:	cmp    rax,QWORD PTR [rbp+0x10]
   48f46:	jae    aac7 <__sprintf_chk@plt+0x117>
   48f4c:	mov    rbx,rax
   48f4f:	shl    rbx,0x4
   48f53:	add    rbx,QWORD PTR [rbp+0x0]
   48f57:	mov    QWORD PTR [r14],rbx
   48f5a:	mov    rsi,QWORD PTR [rbx]
   48f5d:	test   rsi,rsi
   48f60:	je     48fcf <argp_usage@@Base+0x5c4f>
   48f62:	cmp    rsi,r13
   48f65:	je     49020 <argp_usage@@Base+0x5ca0>
   48f6b:	mov    rdi,r13
   48f6e:	call   QWORD PTR [rbp+0x38]
   48f71:	test   al,al
   48f73:	je     48fc6 <argp_usage@@Base+0x5c46>
   48f75:	mov    rax,QWORD PTR [rbx]
   48f78:	test   r12b,r12b
   48f7b:	je     48fd1 <argp_usage@@Base+0x5c51>
   48f7d:	mov    rdx,QWORD PTR [rbx+0x8]
   48f81:	test   rdx,rdx
   48f84:	je     49010 <argp_usage@@Base+0x5c90>
   48f8a:	movdqu xmm0,XMMWORD PTR [rdx]
   48f8e:	movups XMMWORD PTR [rbx],xmm0
   48f91:	mov    QWORD PTR [rdx],0x0
   48f98:	mov    rcx,QWORD PTR [rbp+0x48]
   48f9c:	mov    QWORD PTR [rdx+0x8],rcx
   48fa0:	pop    rbx
   48fa1:	mov    QWORD PTR [rbp+0x48],rdx
   48fa5:	pop    rbp
   48fa6:	pop    r12
   48fa8:	pop    r13
   48faa:	pop    r14
   48fac:	ret    
   48fad:	nop    DWORD PTR [rax]
   48fb0:	mov    rsi,QWORD PTR [rax]
   48fb3:	cmp    rsi,r13
   48fb6:	je     48fe0 <argp_usage@@Base+0x5c60>
   48fb8:	mov    rdi,r13
   48fbb:	call   QWORD PTR [rbp+0x38]
   48fbe:	test   al,al
   48fc0:	jne    48fe0 <argp_usage@@Base+0x5c60>
   48fc2:	mov    rbx,QWORD PTR [rbx+0x8]
   48fc6:	mov    rax,QWORD PTR [rbx+0x8]
   48fca:	test   rax,rax
   48fcd:	jne    48fb0 <argp_usage@@Base+0x5c30>
   48fcf:	xor    eax,eax
   48fd1:	pop    rbx
   48fd2:	pop    rbp
   48fd3:	pop    r12
   48fd5:	pop    r13
   48fd7:	pop    r14
   48fd9:	ret    
   48fda:	nop    WORD PTR [rax+rax*1+0x0]
   48fe0:	mov    rdx,QWORD PTR [rbx+0x8]
   48fe4:	mov    rax,QWORD PTR [rdx]
   48fe7:	test   r12b,r12b
   48fea:	je     48fd1 <argp_usage@@Base+0x5c51>
   48fec:	mov    rcx,QWORD PTR [rdx+0x8]
   48ff0:	mov    QWORD PTR [rbx+0x8],rcx
   48ff4:	mov    QWORD PTR [rdx],0x0
   48ffb:	mov    rcx,QWORD PTR [rbp+0x48]
   48fff:	mov    QWORD PTR [rdx+0x8],rcx
   49003:	pop    rbx
   49004:	mov    QWORD PTR [rbp+0x48],rdx
   49008:	pop    rbp
   49009:	pop    r12
   4900b:	pop    r13
   4900d:	pop    r14
   4900f:	ret    
   49010:	mov    QWORD PTR [rbx],0x0
   49017:	jmp    48fd1 <argp_usage@@Base+0x5c51>
   49019:	nop    DWORD PTR [rax+0x0]
   49020:	mov    rax,rsi
   49023:	jmp    48f78 <argp_usage@@Base+0x5bf8>
   49028:	nop    DWORD PTR [rax+rax*1+0x0]
   49030:	endbr64 
   49034:	push   r13
   49036:	push   r12
   49038:	push   rbp
   49039:	mov    rbp,rdi
   4903c:	mov    rdi,rsi
   4903f:	push   rbx
   49040:	sub    rsp,0x68
   49044:	mov    r12,QWORD PTR [rbp+0x28]
   49048:	mov    rax,QWORD PTR fs:0x28
   49051:	mov    QWORD PTR [rsp+0x58],rax
   49056:	xor    eax,eax
   49058:	cmp    BYTE PTR [r12+0x10],0x0
   4905e:	jne    490a8 <argp_usage@@Base+0x5d28>
   49060:	test   rsi,rsi
   49063:	js     491e0 <argp_usage@@Base+0x5e60>
   49069:	pxor   xmm0,xmm0
   4906d:	cvtsi2ss xmm0,rsi
   49072:	divss  xmm0,DWORD PTR [r12+0x8]
   49079:	comiss xmm0,DWORD PTR [rip+0x23de4]        # 6ce64 <_obstack_memory_used@@Base+0x201e4>
   49080:	jae    49210 <argp_usage@@Base+0x5e90>
   49086:	comiss xmm0,DWORD PTR [rip+0x1bd37]        # 64dc4 <_obstack_memory_used@@Base+0x18144>
   4908d:	jb     49218 <argp_usage@@Base+0x5e98>
   49093:	subss  xmm0,DWORD PTR [rip+0x1bd29]        # 64dc4 <_obstack_memory_used@@Base+0x18144>
   4909b:	cvttss2si rdi,xmm0
   490a0:	btc    rdi,0x3f
   490a5:	nop    DWORD PTR [rax]
   490a8:	call   48c40 <argp_usage@@Base+0x58c0>
   490ad:	lea    rdx,[rax*8+0x0]
   490b5:	mov    rbx,rax
   490b8:	shr    rax,0x3d
   490bc:	setne  al
   490bf:	test   rdx,rdx
   490c2:	mov    edx,0x1
   490c7:	movzx  eax,al
   490ca:	cmovs  rax,rdx
   490ce:	test   rbx,rbx
   490d1:	je     49210 <argp_usage@@Base+0x5e90>
   490d7:	test   rax,rax
   490da:	jne    49210 <argp_usage@@Base+0x5e90>
   490e0:	cmp    QWORD PTR [rbp+0x10],rbx
   490e4:	je     491d0 <argp_usage@@Base+0x5e50>
   490ea:	mov    esi,0x10
   490ef:	mov    rdi,rbx
   490f2:	call   a2f0 <calloc@plt>
   490f7:	mov    QWORD PTR [rsp],rax
   490fb:	test   rax,rax
   490fe:	je     49210 <argp_usage@@Base+0x5e90>
   49104:	mov    QWORD PTR [rsp+0x10],rbx
   49109:	shl    rbx,0x4
   4910d:	mov    r13,rsp
   49110:	xor    edx,edx
   49112:	add    rax,rbx
   49115:	mov    rsi,rbp
   49118:	mov    rdi,r13
   4911b:	mov    QWORD PTR [rsp+0x28],r12
   49120:	mov    QWORD PTR [rsp+0x8],rax
   49125:	mov    rax,QWORD PTR [rbp+0x30]
   49129:	mov    QWORD PTR [rsp+0x18],0x0
   49132:	mov    QWORD PTR [rsp+0x30],rax
   49137:	mov    rax,QWORD PTR [rbp+0x38]
   4913b:	mov    QWORD PTR [rsp+0x20],0x0
   49144:	mov    QWORD PTR [rsp+0x38],rax
   49149:	mov    rax,QWORD PTR [rbp+0x40]
   4914d:	mov    QWORD PTR [rsp+0x40],rax
   49152:	mov    rax,QWORD PTR [rbp+0x48]
   49156:	mov    QWORD PTR [rsp+0x48],rax
   4915b:	call   462c0 <argp_usage@@Base+0x2f40>
   49160:	mov    r12d,eax
   49163:	test   al,al
   49165:	jne    49228 <argp_usage@@Base+0x5ea8>
   4916b:	mov    rax,QWORD PTR [rsp+0x48]
   49170:	mov    edx,0x1
   49175:	mov    rsi,r13
   49178:	mov    rdi,rbp
   4917b:	mov    QWORD PTR [rbp+0x48],rax
   4917f:	call   462c0 <argp_usage@@Base+0x2f40>
   49184:	test   al,al
   49186:	je     aacc <__sprintf_chk@plt+0x11c>
   4918c:	xor    edx,edx
   4918e:	mov    rsi,r13
   49191:	mov    rdi,rbp
   49194:	call   462c0 <argp_usage@@Base+0x2f40>
   49199:	test   al,al
   4919b:	je     aacc <__sprintf_chk@plt+0x11c>
   491a1:	mov    rdi,QWORD PTR [rsp]
   491a5:	call   9ce0 <free@plt>
   491aa:	mov    rax,QWORD PTR [rsp+0x58]
   491af:	sub    rax,QWORD PTR fs:0x28
   491b8:	jne    49262 <argp_usage@@Base+0x5ee2>
   491be:	add    rsp,0x68
   491c2:	mov    eax,r12d
   491c5:	pop    rbx
   491c6:	pop    rbp
   491c7:	pop    r12
   491c9:	pop    r13
   491cb:	ret    
   491cc:	nop    DWORD PTR [rax+0x0]
   491d0:	mov    r12d,0x1
   491d6:	jmp    491aa <argp_usage@@Base+0x5e2a>
   491d8:	nop    DWORD PTR [rax+rax*1+0x0]
   491e0:	mov    rax,rsi
   491e3:	and    edi,0x1
   491e6:	pxor   xmm0,xmm0
   491ea:	shr    rax,1
   491ed:	or     rax,rdi
   491f0:	cvtsi2ss xmm0,rax
   491f5:	addss  xmm0,xmm0
   491f9:	divss  xmm0,DWORD PTR [r12+0x8]
   49200:	comiss xmm0,DWORD PTR [rip+0x23c5d]        # 6ce64 <_obstack_memory_used@@Base+0x201e4>
   49207:	jb     49086 <argp_usage@@Base+0x5d06>
   4920d:	nop    DWORD PTR [rax]
   49210:	xor    r12d,r12d
   49213:	jmp    491aa <argp_usage@@Base+0x5e2a>
   49215:	nop    DWORD PTR [rax]
   49218:	cvttss2si rdi,xmm0
   4921d:	jmp    490a8 <argp_usage@@Base+0x5d28>
   49222:	nop    WORD PTR [rax+rax*1+0x0]
   49228:	mov    rdi,QWORD PTR [rbp+0x0]
   4922c:	call   9ce0 <free@plt>
   49231:	mov    rax,QWORD PTR [rsp]
   49235:	mov    QWORD PTR [rbp+0x0],rax
   49239:	mov    rax,QWORD PTR [rsp+0x8]
   4923e:	mov    QWORD PTR [rbp+0x8],rax
   49242:	mov    rax,QWORD PTR [rsp+0x10]
   49247:	mov    QWORD PTR [rbp+0x10],rax
   4924b:	mov    rax,QWORD PTR [rsp+0x18]
   49250:	mov    QWORD PTR [rbp+0x18],rax
   49254:	mov    rax,QWORD PTR [rsp+0x48]
   49259:	mov    QWORD PTR [rbp+0x48],rax
   4925d:	jmp    491aa <argp_usage@@Base+0x5e2a>
   49262:	call   a0a0 <__stack_chk_fail@plt>
   49267:	nop    WORD PTR [rax+rax*1+0x0]
   49270:	endbr64 
   49274:	push   r13
   49276:	push   r12
   49278:	push   rbp
   49279:	push   rbx
   4927a:	sub    rsp,0x18
   4927e:	mov    rax,QWORD PTR fs:0x28
   49287:	mov    QWORD PTR [rsp+0x8],rax
   4928c:	xor    eax,eax
   4928e:	test   rsi,rsi
   49291:	je     aad1 <__sprintf_chk@plt+0x121>
   49297:	mov    r13,rsp
   4929a:	mov    r12,rdx
   4929d:	xor    ecx,ecx
   4929f:	mov    rbx,rdi
   492a2:	mov    rdx,r13
   492a5:	mov    rbp,rsi
   492a8:	call   48f20 <argp_usage@@Base+0x5ba0>
   492ad:	test   rax,rax
   492b0:	je     492e0 <argp_usage@@Base+0x5f60>
   492b2:	mov    QWORD PTR [r12],rax
   492b6:	xor    eax,eax
   492b8:	mov    rdx,QWORD PTR [rsp+0x8]
   492bd:	sub    rdx,QWORD PTR fs:0x28
   492c6:	jne    49484 <argp_usage@@Base+0x6104>
   492cc:	add    rsp,0x18
   492d0:	pop    rbx
   492d1:	pop    rbp
   492d2:	pop    r12
   492d4:	pop    r13
   492d6:	ret    
   492d7:	nop    WORD PTR [rax+rax*1+0x0]
   492e0:	mov    rax,QWORD PTR [rbx+0x18]
   492e4:	test   rax,rax
   492e7:	js     49368 <argp_usage@@Base+0x5fe8>
   492e9:	pxor   xmm5,xmm5
   492ed:	cvtsi2ss xmm5,rax
   492f2:	mov    rax,QWORD PTR [rbx+0x10]
   492f6:	test   rax,rax
   492f9:	js     4938e <argp_usage@@Base+0x600e>
   492ff:	pxor   xmm4,xmm4
   49303:	cvtsi2ss xmm4,rax
   49308:	mov    rax,QWORD PTR [rbx+0x28]
   4930c:	movss  xmm0,DWORD PTR [rax+0x8]
   49311:	mulss  xmm0,xmm4
   49315:	comiss xmm5,xmm0
   49318:	ja     493b0 <argp_usage@@Base+0x6030>
   4931e:	mov    r12,QWORD PTR [rsp]
   49322:	cmp    QWORD PTR [r12],0x0
   49327:	je     493f0 <argp_usage@@Base+0x6070>
   4932d:	mov    rax,QWORD PTR [rbx+0x48]
   49331:	test   rax,rax
   49334:	je     49410 <argp_usage@@Base+0x6090>
   4933a:	mov    rdx,QWORD PTR [rax+0x8]
   4933e:	mov    QWORD PTR [rbx+0x48],rdx
   49342:	mov    rdx,QWORD PTR [r12+0x8]
   49347:	mov    QWORD PTR [rax],rbp
   4934a:	mov    QWORD PTR [rax+0x8],rdx
   4934e:	mov    QWORD PTR [r12+0x8],rax
   49353:	mov    eax,0x1
   49358:	add    QWORD PTR [rbx+0x20],0x1
   4935d:	jmp    492b8 <argp_usage@@Base+0x5f38>
   49362:	nop    WORD PTR [rax+rax*1+0x0]
   49368:	mov    rdx,rax
   4936b:	and    eax,0x1
   4936e:	pxor   xmm5,xmm5
   49372:	shr    rdx,1
   49375:	or     rdx,rax
   49378:	mov    rax,QWORD PTR [rbx+0x10]
   4937c:	cvtsi2ss xmm5,rdx
   49381:	addss  xmm5,xmm5
   49385:	test   rax,rax
   49388:	jns    492ff <argp_usage@@Base+0x5f7f>
   4938e:	mov    rdx,rax
   49391:	and    eax,0x1
   49394:	pxor   xmm4,xmm4
   49398:	shr    rdx,1
   4939b:	or     rdx,rax
   4939e:	cvtsi2ss xmm4,rdx
   493a3:	addss  xmm4,xmm4
   493a7:	jmp    49308 <argp_usage@@Base+0x5f88>
   493ac:	nop    DWORD PTR [rax+0x0]
   493b0:	mov    rdi,rbx
   493b3:	call   48cf0 <argp_usage@@Base+0x5970>
   493b8:	mov    rax,QWORD PTR [rbx+0x28]
   493bc:	movaps xmm1,xmm4
   493bf:	movss  xmm0,DWORD PTR [rax+0x8]
   493c4:	mulss  xmm1,xmm0
   493c8:	comiss xmm5,xmm1
   493cb:	jbe    4931e <argp_usage@@Base+0x5f9e>
   493d1:	mulss  xmm4,DWORD PTR [rax+0xc]
   493d6:	cmp    BYTE PTR [rax+0x10],0x0
   493da:	je     49428 <argp_usage@@Base+0x60a8>
   493dc:	comiss xmm4,DWORD PTR [rip+0x23a81]        # 6ce64 <_obstack_memory_used@@Base+0x201e4>
   493e3:	jb     49430 <argp_usage@@Base+0x60b0>
   493e5:	mov    eax,0xffffffff
   493ea:	jmp    492b8 <argp_usage@@Base+0x5f38>
   493ef:	nop
   493f0:	mov    QWORD PTR [r12],rbp
   493f4:	mov    eax,0x1
   493f9:	add    QWORD PTR [rbx+0x20],0x1
   493fe:	add    QWORD PTR [rbx+0x18],0x1
   49403:	jmp    492b8 <argp_usage@@Base+0x5f38>
   49408:	nop    DWORD PTR [rax+rax*1+0x0]
   49410:	mov    edi,0x10
   49415:	call   a4a0 <malloc@plt>
   4941a:	test   rax,rax
   4941d:	je     493e5 <argp_usage@@Base+0x6065>
   4941f:	jmp    49342 <argp_usage@@Base+0x5fc2>
   49424:	nop    DWORD PTR [rax+0x0]
   49428:	mulss  xmm4,xmm0
   4942c:	jmp    493dc <argp_usage@@Base+0x605c>
   4942e:	xchg   ax,ax
   49430:	comiss xmm4,DWORD PTR [rip+0x1b98d]        # 64dc4 <_obstack_memory_used@@Base+0x18144>
   49437:	jae    49470 <argp_usage@@Base+0x60f0>
   49439:	cvttss2si rsi,xmm4
   4943e:	mov    rdi,rbx
   49441:	call   49030 <argp_usage@@Base+0x5cb0>
   49446:	test   al,al
   49448:	je     493e5 <argp_usage@@Base+0x6065>
   4944a:	xor    ecx,ecx
   4944c:	mov    rdx,r13
   4944f:	mov    rsi,rbp
   49452:	mov    rdi,rbx
   49455:	call   48f20 <argp_usage@@Base+0x5ba0>
   4945a:	test   rax,rax
   4945d:	je     4931e <argp_usage@@Base+0x5f9e>
   49463:	jmp    aad1 <__sprintf_chk@plt+0x121>
   49468:	nop    DWORD PTR [rax+rax*1+0x0]
   49470:	subss  xmm4,DWORD PTR [rip+0x1b94c]        # 64dc4 <_obstack_memory_used@@Base+0x18144>
   49478:	cvttss2si rsi,xmm4
   4947d:	btc    rsi,0x3f
   49482:	jmp    4943e <argp_usage@@Base+0x60be>
   49484:	call   a0a0 <__stack_chk_fail@plt>
   49489:	nop    DWORD PTR [rax+0x0]
   49490:	endbr64 
   49494:	mov    BYTE PTR [rsi+0x14],0x0
   49498:	lea    r8,[rsi+0x14]
   4949c:	mov    rcx,rdi
   4949f:	movabs rsi,0xcccccccccccccccd
   494a9:	test   rdi,rdi
   494ac:	js     494e0 <argp_usage@@Base+0x6160>
   494ae:	xchg   ax,ax
   494b0:	mov    rax,rcx
   494b3:	sub    r8,0x1
   494b7:	mul    rsi
   494ba:	shr    rdx,0x3
   494be:	lea    rax,[rdx+rdx*4]
   494c2:	add    rax,rax
   494c5:	sub    rcx,rax
   494c8:	add    ecx,0x30
   494cb:	mov    BYTE PTR [r8],cl
   494ce:	mov    rcx,rdx
   494d1:	test   rdx,rdx
   494d4:	jne    494b0 <argp_usage@@Base+0x6130>
   494d6:	mov    rax,r8
   494d9:	ret    
   494da:	nop    WORD PTR [rax+rax*1+0x0]
   494e0:	movabs r9,0x6666666666666667
   494ea:	mov    edi,0x30
   494ef:	nop
   494f0:	mov    rax,rcx
   494f3:	mov    rsi,r8
   494f6:	sub    r8,0x1
   494fa:	imul   r9
   494fd:	mov    rax,rcx
   49500:	sar    rax,0x3f
   49504:	sar    rdx,0x2
   49508:	sub    rdx,rax
   4950b:	lea    rax,[rdx+rdx*4]
   4950f:	lea    eax,[rdi+rax*2]
   49512:	sub    eax,ecx
   49514:	mov    rcx,rdx
   49517:	mov    BYTE PTR [r8],al
   4951a:	test   rdx,rdx
   4951d:	jne    494f0 <argp_usage@@Base+0x6170>
   4951f:	mov    BYTE PTR [r8-0x1],0x2d
   49524:	lea    r8,[rsi-0x2]
   49528:	mov    rax,r8
   4952b:	ret    
   4952c:	nop    DWORD PTR [rax+0x0]
   49530:	endbr64 
   49534:	mov    BYTE PTR [rsi+0x14],0x0
   49538:	mov    rcx,rdi
   4953b:	lea    r8,[rsi+0x14]
   4953f:	movabs rdi,0xcccccccccccccccd
   49549:	nop    DWORD PTR [rax+0x0]
   49550:	mov    rax,rcx
   49553:	sub    r8,0x1
   49557:	mul    rdi
   4955a:	mov    rax,rcx
   4955d:	shr    rdx,0x3
   49561:	lea    rsi,[rdx+rdx*4]
   49565:	add    rsi,rsi
   49568:	sub    rax,rsi
   4956b:	add    eax,0x30
   4956e:	mov    BYTE PTR [r8],al
   49571:	mov    rax,rcx
   49574:	mov    rcx,rdx
   49577:	cmp    rax,0x9
   4957b:	ja     49550 <argp_usage@@Base+0x61d0>
   4957d:	mov    rax,r8
   49580:	ret    
   49581:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4958c:	nop    DWORD PTR [rax+0x0]
   49590:	endbr64 
   49594:	push   rbp
   49595:	mov    edx,0x5
   4959a:	mov    ebp,edi
   4959c:	lea    rsi,[rip+0x237dd]        # 6cd80 <_obstack_memory_used@@Base+0x20100>
   495a3:	xor    edi,edi
   495a5:	call   a040 <dcgettext@plt>
   495aa:	mov    edi,DWORD PTR [rip+0x333f0]        # 7c9a0 <_obstack_memory_used@@Base+0x2fd20>
   495b0:	mov    esi,ebp
   495b2:	mov    rdx,rax
   495b5:	xor    eax,eax
   495b7:	call   a640 <error@plt>
   495bc:	call   9e30 <abort@plt>
   495c1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   495cc:	nop    DWORD PTR [rax+0x0]
   495d0:	endbr64 
   495d4:	push   rbp
   495d5:	mov    edx,0x5
   495da:	mov    ebp,edi
   495dc:	lea    rsi,[rip+0x237cd]        # 6cdb0 <_obstack_memory_used@@Base+0x20130>
   495e3:	xor    edi,edi
   495e5:	call   a040 <dcgettext@plt>
   495ea:	mov    edi,DWORD PTR [rip+0x333b0]        # 7c9a0 <_obstack_memory_used@@Base+0x2fd20>
   495f0:	mov    esi,ebp
   495f2:	mov    rdx,rax
   495f5:	xor    eax,eax
   495f7:	call   a640 <error@plt>
   495fc:	call   9e30 <abort@plt>
   49601:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4960c:	nop    DWORD PTR [rax+0x0]
   49610:	endbr64 
   49614:	push   r12
   49616:	mov    r12,rdi
   49619:	push   rbx
   4961a:	sub    rsp,0xd8
   49621:	mov    QWORD PTR [rsp+0x28],rsi
   49626:	mov    QWORD PTR [rsp+0x30],rdx
   4962b:	mov    QWORD PTR [rsp+0x38],rcx
   49630:	mov    QWORD PTR [rsp+0x40],r8
   49635:	mov    QWORD PTR [rsp+0x48],r9
   4963a:	test   al,al
   4963c:	je     49675 <argp_usage@@Base+0x62f5>
   4963e:	movaps XMMWORD PTR [rsp+0x50],xmm0
   49643:	movaps XMMWORD PTR [rsp+0x60],xmm1
   49648:	movaps XMMWORD PTR [rsp+0x70],xmm2
   4964d:	movaps XMMWORD PTR [rsp+0x80],xmm3
   49655:	movaps XMMWORD PTR [rsp+0x90],xmm4
   4965d:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   49665:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   4966d:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   49675:	mov    rbx,QWORD PTR [rip+0x3296c]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   4967c:	mov    edx,0x6
   49681:	mov    esi,0x1
   49686:	lea    rdi,[rip+0x22c8d]        # 6c31a <_obstack_memory_used@@Base+0x1f69a>
   4968d:	mov    rax,QWORD PTR fs:0x28
   49696:	mov    QWORD PTR [rsp+0x18],rax
   4969b:	xor    eax,eax
   4969d:	mov    rcx,QWORD PTR [rbx]
   496a0:	call   a830 <fwrite@plt>
   496a5:	mov    rdi,QWORD PTR [rbx]
   496a8:	mov    rcx,rsp
   496ab:	mov    rdx,r12
   496ae:	lea    rax,[rsp+0xf0]
   496b6:	mov    esi,0x1
   496bb:	mov    DWORD PTR [rsp],0x8
   496c2:	mov    QWORD PTR [rsp+0x8],rax
   496c7:	lea    rax,[rsp+0x20]
   496cc:	mov    DWORD PTR [rsp+0x4],0x30
   496d4:	mov    QWORD PTR [rsp+0x10],rax
   496d9:	call   9e20 <__vfprintf_chk@plt>
   496de:	mov    rax,QWORD PTR [rsp+0x18]
   496e3:	sub    rax,QWORD PTR fs:0x28
   496ec:	jne    496f9 <argp_usage@@Base+0x6379>
   496ee:	add    rsp,0xd8
   496f5:	pop    rbx
   496f6:	pop    r12
   496f8:	ret    
   496f9:	call   a0a0 <__stack_chk_fail@plt>
   496fe:	xchg   ax,ax
   49700:	endbr64 
   49704:	mov    rax,QWORD PTR [rdi+0xa8]
   4970b:	mov    r8,QWORD PTR [rsp+0x10]
   49710:	mov    rcx,rdi
   49713:	mov    r9,QWORD PTR [rsp+0x18]
   49718:	test   rax,rax
   4971b:	je     49760 <argp_usage@@Base+0x63e0>
   4971d:	cmp    QWORD PTR [rdi+0x30],0x0
   49722:	jne    49760 <argp_usage@@Base+0x63e0>
   49724:	cmp    BYTE PTR [rdi+0xa1],0x0
   4972b:	jne    49760 <argp_usage@@Base+0x63e0>
   4972d:	cmp    QWORD PTR [rdi+0xc8],0x0
   49735:	jne    49741 <argp_usage@@Base+0x63c1>
   49737:	cmp    r9,0x2
   4973b:	jle    49868 <argp_usage@@Base+0x64e8>
   49741:	movdqu xmm0,XMMWORD PTR [rsp+0x8]
   49747:	mov    rax,QWORD PTR [rsp+0x18]
   4974c:	mov    BYTE PTR [rcx+0xd8],0x1
   49753:	mov    QWORD PTR [rcx+0x30],rax
   49757:	movups XMMWORD PTR [rcx+0x20],xmm0
   4975b:	ret    
   4975c:	nop    DWORD PTR [rax+0x0]
   49760:	cmp    r9,0x4
   49764:	jle    49800 <argp_usage@@Base+0x6480>
   4976a:	add    rax,0x1
   4976e:	mov    r10,r8
   49771:	sub    r9,0x4
   49775:	movabs rdi,0xa3d70a3d70a3d70b
   4977f:	mov    QWORD PTR [rcx+0xa8],rax
   49786:	mov    rax,r8
   49789:	sar    r10,0x3f
   4978d:	imul   rdi
   49790:	mov    QWORD PTR [rcx+0x30],r9
   49794:	lea    rsi,[rdx+r8*1]
   49798:	mov    rdx,r8
   4979b:	sar    rsi,0x6
   4979f:	sub    rsi,r10
   497a2:	lea    rax,[rsi+rsi*4]
   497a6:	lea    rax,[rax+rax*4]
   497aa:	shl    rax,0x2
   497ae:	sub    rdx,rax
   497b1:	mov    rax,rsi
   497b4:	mov    QWORD PTR [rcx+0x40],rdx
   497b8:	imul   rdi
   497bb:	mov    rax,rsi
   497be:	sar    rax,0x3f
   497c2:	lea    rdi,[rdx+rsi*1]
   497c6:	movabs rdx,0x346dc5d63886594b
   497d0:	sar    rdi,0x6
   497d4:	sub    rdi,rax
   497d7:	lea    rax,[rdi+rdi*4]
   497db:	lea    rax,[rax+rax*4]
   497df:	shl    rax,0x2
   497e3:	sub    rsi,rax
   497e6:	mov    rax,r8
   497e9:	imul   rdx
   497ec:	mov    QWORD PTR [rcx+0x38],rsi
   497f0:	sar    rdx,0xb
   497f4:	sub    rdx,r10
   497f7:	mov    QWORD PTR [rcx+0x28],rdx
   497fb:	ret    
   497fc:	nop    DWORD PTR [rax+0x0]
   49800:	add    QWORD PTR [rcx+0xc8],0x1
   49808:	cmp    r9,0x2
   4980c:	jle    49878 <argp_usage@@Base+0x64f8>
   4980e:	movabs rdx,0xa3d70a3d70a3d70b
   49818:	mov    rax,r8
   4981b:	imul   rdx
   4981e:	mov    rax,r8
   49821:	sar    rax,0x3f
   49825:	add    rdx,r8
   49828:	sar    rdx,0x6
   4982c:	sub    rdx,rax
   4982f:	lea    rax,[rdx+rdx*4]
   49833:	lea    rsi,[rax+rax*4]
   49837:	mov    rax,r8
   4983a:	mov    r8,rdx
   4983d:	shl    rsi,0x2
   49841:	sub    rax,rsi
   49844:	mov    QWORD PTR [rcx+0x48],r8
   49848:	mov    QWORD PTR [rcx+0x50],rax
   4984c:	mov    QWORD PTR [rcx+0x58],0x0
   49854:	mov    QWORD PTR [rcx+0x60],0x0
   4985c:	mov    DWORD PTR [rcx+0x1c],0x2
   49863:	ret    
   49864:	nop    DWORD PTR [rax+0x0]
   49868:	mov    QWORD PTR [rdi+0xc8],0x1
   49873:	nop    DWORD PTR [rax+rax*1+0x0]
   49878:	xor    eax,eax
   4987a:	jmp    49844 <argp_usage@@Base+0x64c4>
   4987c:	nop    DWORD PTR [rax+0x0]
   49880:	endbr64 
   49884:	push   r12
   49886:	mov    r12,rsi
   49889:	lea    rcx,[rip+0x22a91]        # 6c321 <_obstack_memory_used@@Base+0x1f6a1>
   49890:	mov    esi,0x1
   49895:	push   rbp
   49896:	push   rbx
   49897:	movsxd rbx,edi
   4989a:	mov    rdi,r12
   4989d:	mov    rbp,rbx
   498a0:	mov    eax,ebx
   498a2:	imul   rbx,rbx,0xffffffff91a2b3c5
   498a9:	mov    edx,ebp
   498ab:	sar    eax,0x1f
   498ae:	sar    edx,0x1f
   498b1:	and    eax,0x2
   498b4:	lea    r8d,[rax+0x2b]
   498b8:	shr    rbx,0x20
   498bc:	add    ebx,ebp
   498be:	sar    ebx,0xb
   498c1:	sub    ebx,edx
   498c3:	mov    rdx,0xffffffffffffffff
   498ca:	mov    r9d,ebx
   498cd:	neg    r9d
   498d0:	cmovs  r9d,ebx
   498d4:	imul   ebx,ebx,0xe10
   498da:	xor    eax,eax
   498dc:	call   a9b0 <__sprintf_chk@plt>
   498e1:	sub    ebp,ebx
   498e3:	je     49936 <argp_usage@@Base+0x65b6>
   498e5:	cdqe   
   498e7:	mov    ecx,ebp
   498e9:	mov    esi,0x88888889
   498ee:	mov    r8d,0xcccccccd
   498f4:	add    rax,r12
   498f7:	neg    ecx
   498f9:	cmovs  ecx,ebp
   498fc:	mov    BYTE PTR [rax],0x3a
   498ff:	mov    edx,ecx
   49901:	imul   rdx,rsi
   49905:	shr    rdx,0x25
   49909:	mov    esi,edx
   4990b:	imul   edi,edx,0x3c
   4990e:	imul   rsi,r8
   49912:	shr    rsi,0x23
   49916:	lea    r9d,[rsi+0x30]
   4991a:	lea    esi,[rsi+rsi*4]
   4991d:	add    esi,esi
   4991f:	mov    BYTE PTR [rax+0x1],r9b
   49923:	sub    edx,esi
   49925:	lea    rsi,[rax+0x3]
   49929:	add    edx,0x30
   4992c:	sub    ecx,edi
   4992e:	mov    BYTE PTR [rax+0x2],dl
   49931:	jne    49940 <argp_usage@@Base+0x65c0>
   49933:	mov    BYTE PTR [rsi],0x0
   49936:	mov    rax,r12
   49939:	pop    rbx
   4993a:	pop    rbp
   4993b:	pop    r12
   4993d:	ret    
   4993e:	xchg   ax,ax
   49940:	mov    edx,ecx
   49942:	mov    BYTE PTR [rax+0x3],0x3a
   49946:	imul   rdx,r8
   4994a:	shr    rdx,0x23
   4994e:	lea    esi,[rdx+0x30]
   49951:	lea    edx,[rdx+rdx*4]
   49954:	add    edx,edx
   49956:	mov    BYTE PTR [rax+0x4],sil
   4995a:	lea    rsi,[rax+0x6]
   4995e:	sub    ecx,edx
   49960:	add    ecx,0x30
   49963:	mov    BYTE PTR [rax+0x5],cl
   49966:	jmp    49933 <argp_usage@@Base+0x65b3>
   49968:	nop    DWORD PTR [rax+rax*1+0x0]
   49970:	endbr64 
   49974:	movsxd rax,edi
   49977:	mov    edx,edi
   49979:	push   r12
   4997b:	mov    r12,rsi
   4997e:	imul   rax,rax,0x51eb851f
   49985:	sar    edx,0x1f
   49988:	lea    rsi,[rip+0x1cfd9]        # 66968 <_obstack_memory_used@@Base+0x19ce8>
   4998f:	sar    rax,0x25
   49993:	sub    eax,edx
   49995:	mov    edx,edi
   49997:	imul   ecx,eax,0x64
   4999a:	add    eax,0x13
   4999d:	mov    r8d,eax
   499a0:	sub    edx,ecx
   499a2:	xor    ecx,ecx
   499a4:	cmp    edi,0xfffff894
   499aa:	mov    rdi,r12
   499ad:	setge  cl
   499b0:	mov    r9d,edx
   499b3:	add    rcx,rsi
   499b6:	neg    r9d
   499b9:	mov    esi,0x1
   499be:	cmovs  r9d,edx
   499c2:	neg    r8d
   499c5:	mov    rdx,0xffffffffffffffff
   499cc:	cmovs  r8d,eax
   499d0:	xor    eax,eax
   499d2:	call   a9b0 <__sprintf_chk@plt>
   499d7:	mov    rax,r12
   499da:	pop    r12
   499dc:	ret    
   499dd:	nop    DWORD PTR [rax]
   499e0:	endbr64 
   499e4:	push   r12
   499e6:	lea    r12,[rip+0x31c93]        # 7b680 <_obstack_memory_used@@Base+0x2ea00>
   499ed:	push   rbp
   499ee:	mov    rbp,rdi
   499f1:	push   rbx
   499f2:	mov    rbx,rsi
   499f5:	lea    rsi,[rip+0x2292c]        # 6c328 <_obstack_memory_used@@Base+0x1f6a8>
   499fc:	jmp    49a0e <argp_usage@@Base+0x668e>
   499fe:	xchg   ax,ax
   49a00:	mov    rsi,QWORD PTR [r12+0x10]
   49a05:	add    r12,0x10
   49a09:	test   rsi,rsi
   49a0c:	je     49a28 <argp_usage@@Base+0x66a8>
   49a0e:	mov    rdi,rbx
   49a11:	call   a320 <strcmp@plt>
   49a16:	test   eax,eax
   49a18:	jne    49a00 <argp_usage@@Base+0x6680>
   49a1a:	mov    rax,r12
   49a1d:	pop    rbx
   49a1e:	pop    rbp
   49a1f:	pop    r12
   49a21:	ret    
   49a22:	nop    WORD PTR [rax+rax*1+0x0]
   49a28:	mov    rsi,QWORD PTR [rbp+0xe8]
   49a2f:	lea    r12,[rbp+0xe8]
   49a36:	test   rsi,rsi
   49a39:	jne    49a7e <argp_usage@@Base+0x66fe>
   49a3b:	nop    DWORD PTR [rax+rax*1+0x0]
   49a40:	lea    r12,[rip+0x31939]        # 7b380 <_obstack_memory_used@@Base+0x2e700>
   49a47:	lea    rsi,[rip+0x228de]        # 6c32c <_obstack_memory_used@@Base+0x1f6ac>
   49a4e:	jmp    49a5e <argp_usage@@Base+0x66de>
   49a50:	mov    rsi,QWORD PTR [r12+0x10]
   49a55:	add    r12,0x10
   49a59:	test   rsi,rsi
   49a5c:	je     49a98 <argp_usage@@Base+0x6718>
   49a5e:	mov    rdi,rbx
   49a61:	call   a320 <strcmp@plt>
   49a66:	test   eax,eax
   49a68:	jne    49a50 <argp_usage@@Base+0x66d0>
   49a6a:	jmp    49a1a <argp_usage@@Base+0x669a>
   49a6c:	nop    DWORD PTR [rax+0x0]
   49a70:	mov    rsi,QWORD PTR [r12+0x10]
   49a75:	add    r12,0x10
   49a79:	test   rsi,rsi
   49a7c:	je     49a40 <argp_usage@@Base+0x66c0>
   49a7e:	mov    rdi,rbx
   49a81:	call   a320 <strcmp@plt>
   49a86:	test   eax,eax
   49a88:	jne    49a70 <argp_usage@@Base+0x66f0>
   49a8a:	mov    rax,r12
   49a8d:	pop    rbx
   49a8e:	pop    rbp
   49a8f:	pop    r12
   49a91:	ret    
   49a92:	nop    WORD PTR [rax+rax*1+0x0]
   49a98:	xor    r12d,r12d
   49a9b:	pop    rbx
   49a9c:	pop    rbp
   49a9d:	mov    rax,r12
   49aa0:	pop    r12
   49aa2:	ret    
   49aa3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   49aae:	xchg   ax,ax
   49ab0:	endbr64 
   49ab4:	mov    rdx,rsi
   49ab7:	mov    esi,DWORD PTR [rsi+0x18]
   49aba:	xor    eax,eax
   49abc:	test   esi,esi
   49abe:	js     49aef <argp_usage@@Base+0x676f>
   49ac0:	mov    eax,DWORD PTR [rdi]
   49ac2:	mov    esi,DWORD PTR [rdi+0x4]
   49ac5:	xor    eax,DWORD PTR [rdx]
   49ac7:	xor    esi,DWORD PTR [rdx+0x4]
   49aca:	or     eax,esi
   49acc:	mov    esi,DWORD PTR [rdi+0x8]
   49acf:	xor    esi,DWORD PTR [rdx+0x8]
   49ad2:	or     eax,esi
   49ad4:	mov    esi,DWORD PTR [rdi+0xc]
   49ad7:	xor    esi,DWORD PTR [rdx+0xc]
   49ada:	or     eax,esi
   49adc:	mov    esi,DWORD PTR [rdi+0x10]
   49adf:	xor    esi,DWORD PTR [rdx+0x10]
   49ae2:	or     eax,esi
   49ae4:	mov    ecx,DWORD PTR [rdi+0x14]
   49ae7:	xor    ecx,DWORD PTR [rdx+0x14]
   49aea:	or     eax,ecx
   49aec:	sete   al
   49aef:	ret    
   49af0:	endbr64 
   49af4:	push   r14
   49af6:	mov    edx,0x5
   49afb:	push   r13
   49afd:	push   r12
   49aff:	push   rbp
   49b00:	mov    rbp,rdi
   49b03:	xor    edi,edi
   49b05:	push   rbx
   49b06:	mov    rbx,rsi
   49b09:	lea    rsi,[rip+0x2282c]        # 6c33c <_obstack_memory_used@@Base+0x1f6bc>
   49b10:	sub    rsp,0x70
   49b14:	mov    rax,QWORD PTR fs:0x28
   49b1d:	mov    QWORD PTR [rsp+0x68],rax
   49b22:	xor    eax,eax
   49b24:	call   a040 <dcgettext@plt>
   49b29:	mov    rsi,rbp
   49b2c:	mov    rdi,rax
   49b2f:	xor    eax,eax
   49b31:	call   49610 <argp_usage@@Base+0x6290>
   49b36:	cmp    QWORD PTR [rbx+0xa8],0x0
   49b3e:	je     49b4d <argp_usage@@Base+0x67cd>
   49b40:	cmp    BYTE PTR [rbx+0xda],0x0
   49b47:	je     49d60 <argp_usage@@Base+0x69e0>
   49b4d:	movzx  eax,BYTE PTR [rbx+0xdf]
   49b54:	xor    edx,edx
   49b56:	cmp    BYTE PTR [rbx+0xd8],al
   49b5c:	je     49ba4 <argp_usage@@Base+0x6824>
   49b5e:	mov    rbp,QWORD PTR [rip+0x32483]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49b65:	mov    r12,QWORD PTR [rbx+0x28]
   49b69:	mov    edx,0x5
   49b6e:	lea    rsi,[rip+0x227f2]        # 6c367 <_obstack_memory_used@@Base+0x1f6e7>
   49b75:	xor    edi,edi
   49b77:	call   a040 <dcgettext@plt>
   49b7c:	mov    rdi,QWORD PTR [rbp+0x0]
   49b80:	mov    esi,0x1
   49b85:	mov    rdx,rax
   49b88:	mov    rcx,r12
   49b8b:	xor    eax,eax
   49b8d:	call   a840 <__fprintf_chk@plt>
   49b92:	movzx  eax,BYTE PTR [rbx+0xd8]
   49b99:	mov    edx,0x1
   49b9e:	mov    BYTE PTR [rbx+0xdf],al
   49ba4:	cmp    QWORD PTR [rbx+0xc8],0x0
   49bac:	je     49bbb <argp_usage@@Base+0x683b>
   49bae:	cmp    BYTE PTR [rbx+0xdd],0x0
   49bb5:	je     49dc0 <argp_usage@@Base+0x6a40>
   49bbb:	cmp    QWORD PTR [rbx+0xb0],0x0
   49bc3:	je     49c2e <argp_usage@@Base+0x68ae>
   49bc5:	cmp    BYTE PTR [rbx+0xdb],0x0
   49bcc:	jne    49c2e <argp_usage@@Base+0x68ae>
   49bce:	mov    rbp,QWORD PTR [rip+0x32413]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49bd5:	test   dl,dl
   49bd7:	jne    49e33 <argp_usage@@Base+0x6ab3>
   49bdd:	mov    rsi,rsp
   49be0:	mov    rdi,rbx
   49be3:	mov    r14d,DWORD PTR [rbx+0x10]
   49be7:	mov    r13,QWORD PTR [rbx+0x8]
   49beb:	call   57e30 <_obstack_memory_used@@Base+0xb1b0>
   49bf0:	mov    edx,0x5
   49bf5:	lea    rsi,[rip+0x231e4]        # 6cde0 <_obstack_memory_used@@Base+0x20160>
   49bfc:	xor    edi,edi
   49bfe:	mov    r12,rax
   49c01:	call   a040 <dcgettext@plt>
   49c06:	mov    rdi,QWORD PTR [rbp+0x0]
   49c0a:	mov    r9d,r14d
   49c0d:	mov    r8,r13
   49c10:	mov    rdx,rax
   49c13:	mov    rcx,r12
   49c16:	mov    esi,0x1
   49c1b:	xor    eax,eax
   49c1d:	call   a840 <__fprintf_chk@plt>
   49c22:	mov    BYTE PTR [rbx+0xdb],0x1
   49c29:	mov    edx,0x1
   49c2e:	cmp    QWORD PTR [rbx+0xb8],0x0
   49c36:	je     49cd0 <argp_usage@@Base+0x6950>
   49c3c:	cmp    BYTE PTR [rbx+0xdc],0x0
   49c43:	jne    49cd0 <argp_usage@@Base+0x6950>
   49c49:	cmp    QWORD PTR [rbx+0xc0],0x0
   49c51:	mov    ecx,DWORD PTR [rbx+0x14]
   49c54:	mov    esi,0x1
   49c59:	lea    rax,[rip+0x21ef0]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   49c60:	mov    rbp,QWORD PTR [rip+0x32381]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49c67:	lea    r8,[rip+0x226c2]        # 6c330 <_obstack_memory_used@@Base+0x1f6b0>
   49c6e:	cmove  r8,rax
   49c72:	xor    edx,0x1
   49c75:	lea    rax,[rip+0x22710]        # 6c38c <_obstack_memory_used@@Base+0x1f70c>
   49c7c:	mov    rdi,QWORD PTR [rbp+0x0]
   49c80:	movzx  edx,dl
   49c83:	add    rdx,rax
   49c86:	xor    eax,eax
   49c88:	call   a840 <__fprintf_chk@plt>
   49c8d:	cmp    QWORD PTR [rbx+0xd0],0x0
   49c95:	mov    BYTE PTR [rbx+0xdc],0x1
   49c9c:	je     49cab <argp_usage@@Base+0x692b>
   49c9e:	cmp    BYTE PTR [rbx+0xde],0x0
   49ca5:	je     49ec8 <argp_usage@@Base+0x6b48>
   49cab:	cmp    BYTE PTR [rbx+0xa0],0x0
   49cb2:	je     49d28 <argp_usage@@Base+0x69a8>
   49cb4:	mov    r12,QWORD PTR [rbx+0x58]
   49cb8:	mov    rsi,QWORD PTR [rbp+0x0]
   49cbc:	mov    edi,0x20
   49cc1:	call   a260 <fputc@plt>
   49cc6:	jmp    49cff <argp_usage@@Base+0x697f>
   49cc8:	nop    DWORD PTR [rax+rax*1+0x0]
   49cd0:	cmp    QWORD PTR [rbx+0xd0],0x0
   49cd8:	je     49ce7 <argp_usage@@Base+0x6967>
   49cda:	cmp    BYTE PTR [rbx+0xde],0x0
   49ce1:	je     49e50 <argp_usage@@Base+0x6ad0>
   49ce7:	cmp    BYTE PTR [rbx+0xa0],0x0
   49cee:	je     49d28 <argp_usage@@Base+0x69a8>
   49cf0:	mov    r12,QWORD PTR [rbx+0x58]
   49cf4:	mov    rbp,QWORD PTR [rip+0x322ed]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49cfb:	test   dl,dl
   49cfd:	jne    49cb8 <argp_usage@@Base+0x6938>
   49cff:	mov    edx,0x5
   49d04:	lea    rsi,[rip+0x2268d]        # 6c398 <_obstack_memory_used@@Base+0x1f718>
   49d0b:	xor    edi,edi
   49d0d:	call   a040 <dcgettext@plt>
   49d12:	mov    rdi,QWORD PTR [rbp+0x0]
   49d16:	mov    rcx,r12
   49d19:	mov    esi,0x1
   49d1e:	mov    rdx,rax
   49d21:	xor    eax,eax
   49d23:	call   a840 <__fprintf_chk@plt>
   49d28:	mov    rax,QWORD PTR [rsp+0x68]
   49d2d:	sub    rax,QWORD PTR fs:0x28
   49d36:	jne    49ef7 <argp_usage@@Base+0x6b77>
   49d3c:	mov    rax,QWORD PTR [rip+0x322a5]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49d43:	mov    edi,0xa
   49d48:	mov    rsi,QWORD PTR [rax]
   49d4b:	add    rsp,0x70
   49d4f:	pop    rbx
   49d50:	pop    rbp
   49d51:	pop    r12
   49d53:	pop    r13
   49d55:	pop    r14
   49d57:	jmp    a260 <fputc@plt>
   49d5c:	nop    DWORD PTR [rax+0x0]
   49d60:	mov    rcx,QWORD PTR [rbx+0x28]
   49d64:	mov    r9,QWORD PTR [rbx+0x40]
   49d68:	mov    esi,0x1
   49d6d:	xor    eax,eax
   49d6f:	mov    rbp,QWORD PTR [rip+0x32272]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49d76:	mov    r8,QWORD PTR [rbx+0x38]
   49d7a:	lea    rdx,[rip+0x225cc]        # 6c34d <_obstack_memory_used@@Base+0x1f6cd>
   49d81:	mov    rdi,QWORD PTR [rbp+0x0]
   49d85:	call   a840 <__fprintf_chk@plt>
   49d8a:	mov    BYTE PTR [rbx+0xda],0x1
   49d91:	mov    edx,0x1
   49d96:	movzx  eax,BYTE PTR [rbx+0xdf]
   49d9d:	cmp    BYTE PTR [rbx+0xd8],al
   49da3:	je     49ba4 <argp_usage@@Base+0x6824>
   49da9:	mov    rsi,QWORD PTR [rbp+0x0]
   49dad:	mov    edi,0x20
   49db2:	call   a260 <fputc@plt>
   49db7:	jmp    49b65 <argp_usage@@Base+0x67e5>
   49dbc:	nop    DWORD PTR [rax+0x0]
   49dc0:	xor    edx,0x1
   49dc3:	mov    rcx,QWORD PTR [rbx+0x48]
   49dc7:	mov    r9,QWORD PTR [rbx+0x58]
   49dcb:	mov    esi,0x1
   49dd0:	mov    rbp,QWORD PTR [rip+0x32211]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49dd7:	lea    rax,[rip+0x22595]        # 6c373 <_obstack_memory_used@@Base+0x1f6f3>
   49dde:	mov    r8,QWORD PTR [rbx+0x50]
   49de2:	movzx  edx,dl
   49de5:	add    rdx,rax
   49de8:	xor    eax,eax
   49dea:	mov    rdi,QWORD PTR [rbp+0x0]
   49dee:	call   a840 <__fprintf_chk@plt>
   49df3:	mov    rcx,QWORD PTR [rbx+0x60]
   49df7:	test   rcx,rcx
   49dfa:	jne    49ea8 <argp_usage@@Base+0x6b28>
   49e00:	cmp    DWORD PTR [rbx+0x1c],0x1
   49e04:	je     49ed8 <argp_usage@@Base+0x6b58>
   49e0a:	cmp    QWORD PTR [rbx+0xb0],0x0
   49e12:	mov    BYTE PTR [rbx+0xdd],0x1
   49e19:	mov    edx,0x1
   49e1e:	je     49c2e <argp_usage@@Base+0x68ae>
   49e24:	movzx  edx,BYTE PTR [rbx+0xdb]
   49e2b:	test   dl,dl
   49e2d:	jne    49c2e <argp_usage@@Base+0x68ae>
   49e33:	mov    rsi,QWORD PTR [rbp+0x0]
   49e37:	mov    edi,0x20
   49e3c:	call   a260 <fputc@plt>
   49e41:	jmp    49bdd <argp_usage@@Base+0x685d>
   49e46:	cs nop WORD PTR [rax+rax*1+0x0]
   49e50:	xor    edx,0x1
   49e53:	lea    rax,[rip+0x224db]        # 6c335 <_obstack_memory_used@@Base+0x1f6b5>
   49e5a:	mov    rbp,QWORD PTR [rip+0x32187]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49e61:	movzx  r12d,dl
   49e65:	add    r12,rax
   49e68:	mov    edi,DWORD PTR [rbx+0x18]
   49e6b:	mov    rsi,rsp
   49e6e:	call   49880 <argp_usage@@Base+0x6500>
   49e73:	mov    rdi,QWORD PTR [rbp+0x0]
   49e77:	mov    rdx,r12
   49e7a:	mov    esi,0x1
   49e7f:	mov    rcx,rax
   49e82:	xor    eax,eax
   49e84:	call   a840 <__fprintf_chk@plt>
   49e89:	cmp    BYTE PTR [rbx+0xa0],0x0
   49e90:	mov    BYTE PTR [rbx+0xde],0x1
   49e97:	je     49d28 <argp_usage@@Base+0x69a8>
   49e9d:	jmp    49cb4 <argp_usage@@Base+0x6934>
   49ea2:	nop    WORD PTR [rax+rax*1+0x0]
   49ea8:	mov    rdi,QWORD PTR [rbp+0x0]
   49eac:	lea    rdx,[rip+0x224d3]        # 6c386 <_obstack_memory_used@@Base+0x1f706>
   49eb3:	mov    esi,0x1
   49eb8:	xor    eax,eax
   49eba:	call   a840 <__fprintf_chk@plt>
   49ebf:	jmp    49e00 <argp_usage@@Base+0x6a80>
   49ec4:	nop    DWORD PTR [rax+0x0]
   49ec8:	lea    r12,[rip+0x22466]        # 6c335 <_obstack_memory_used@@Base+0x1f6b5>
   49ecf:	jmp    49e68 <argp_usage@@Base+0x6ae8>
   49ed1:	nop    DWORD PTR [rax+0x0]
   49ed8:	mov    rcx,QWORD PTR [rbp+0x0]
   49edc:	mov    edx,0x2
   49ee1:	mov    esi,0x1
   49ee6:	lea    rdi,[rip+0x1c84b]        # 66738 <_obstack_memory_used@@Base+0x19ab8>
   49eed:	call   a830 <fwrite@plt>
   49ef2:	jmp    49e0a <argp_usage@@Base+0x6a8a>
   49ef7:	call   a0a0 <__stack_chk_fail@plt>
   49efc:	nop    DWORD PTR [rax+0x0]
   49f00:	endbr64 
   49f04:	push   r12
   49f06:	mov    edx,0x5
   49f0b:	push   rbp
   49f0c:	mov    rbp,rdi
   49f0f:	xor    edi,edi
   49f11:	push   rbx
   49f12:	mov    rbx,rsi
   49f15:	lea    rsi,[rip+0x22420]        # 6c33c <_obstack_memory_used@@Base+0x1f6bc>
   49f1c:	call   a040 <dcgettext@plt>
   49f21:	mov    rsi,rbp
   49f24:	mov    rdi,rax
   49f27:	xor    eax,eax
   49f29:	call   49610 <argp_usage@@Base+0x6290>
   49f2e:	mov    rcx,QWORD PTR [rbx+0x68]
   49f32:	test   rcx,rcx
   49f35:	jne    4a100 <argp_usage@@Base+0x6d80>
   49f3b:	mov    rbp,QWORD PTR [rip+0x320a6]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   49f42:	mov    rcx,QWORD PTR [rbx+0x70]
   49f46:	mov    r12,QWORD PTR [rbp+0x0]
   49f4a:	test   rcx,rcx
   49f4d:	je     4a090 <argp_usage@@Base+0x6d10>
   49f53:	lea    rdx,[rip+0x22456]        # 6c3b0 <_obstack_memory_used@@Base+0x1f730>
   49f5a:	mov    rdi,QWORD PTR [rbp+0x0]
   49f5e:	lea    r8,[rip+0x2246b]        # 6c3d0 <_obstack_memory_used@@Base+0x1f750>
   49f65:	mov    esi,0x1
   49f6a:	xor    eax,eax
   49f6c:	call   a840 <__fprintf_chk@plt>
   49f71:	mov    rcx,QWORD PTR [rbx+0x78]
   49f75:	mov    eax,0x1
   49f7a:	test   rcx,rcx
   49f7d:	je     49fa8 <argp_usage@@Base+0x6c28>
   49f7f:	cmp    al,0x1
   49f81:	mov    rdi,QWORD PTR [rbp+0x0]
   49f85:	lea    rdx,[rip+0x22423]        # 6c3af <_obstack_memory_used@@Base+0x1f72f>
   49f8c:	lea    r8,[rip+0x22446]        # 6c3d9 <_obstack_memory_used@@Base+0x1f759>
   49f93:	adc    rdx,0x0
   49f97:	mov    esi,0x1
   49f9c:	xor    eax,eax
   49f9e:	call   a840 <__fprintf_chk@plt>
   49fa3:	mov    eax,0x1
   49fa8:	mov    rcx,QWORD PTR [rbx+0x80]
   49faf:	test   rcx,rcx
   49fb2:	je     49fdd <argp_usage@@Base+0x6c5d>
   49fb4:	cmp    al,0x1
   49fb6:	mov    rdi,QWORD PTR [rbp+0x0]
   49fba:	lea    rdx,[rip+0x223ee]        # 6c3af <_obstack_memory_used@@Base+0x1f72f>
   49fc1:	lea    r8,[rip+0x22418]        # 6c3e0 <_obstack_memory_used@@Base+0x1f760>
   49fc8:	adc    rdx,0x0
   49fcc:	mov    esi,0x1
   49fd1:	xor    eax,eax
   49fd3:	call   a840 <__fprintf_chk@plt>
   49fd8:	mov    eax,0x1
   49fdd:	mov    rcx,QWORD PTR [rbx+0x88]
   49fe4:	test   rcx,rcx
   49fe7:	je     4a012 <argp_usage@@Base+0x6c92>
   49fe9:	cmp    al,0x1
   49feb:	mov    rdi,QWORD PTR [rbp+0x0]
   49fef:	lea    rdx,[rip+0x223b9]        # 6c3af <_obstack_memory_used@@Base+0x1f72f>
   49ff6:	lea    r8,[rip+0x223eb]        # 6c3e8 <_obstack_memory_used@@Base+0x1f768>
   49ffd:	adc    rdx,0x0
   4a001:	mov    esi,0x1
   4a006:	xor    eax,eax
   4a008:	call   a840 <__fprintf_chk@plt>
   4a00d:	mov    eax,0x1
   4a012:	mov    rcx,QWORD PTR [rbx+0x90]
   4a019:	test   rcx,rcx
   4a01c:	je     4a047 <argp_usage@@Base+0x6cc7>
   4a01e:	cmp    al,0x1
   4a020:	mov    rdi,QWORD PTR [rbp+0x0]
   4a024:	lea    rdx,[rip+0x22384]        # 6c3af <_obstack_memory_used@@Base+0x1f72f>
   4a02b:	lea    r8,[rip+0x1c755]        # 66787 <_obstack_memory_used@@Base+0x19b07>
   4a032:	adc    rdx,0x0
   4a036:	mov    esi,0x1
   4a03b:	xor    eax,eax
   4a03d:	call   a840 <__fprintf_chk@plt>
   4a042:	mov    eax,0x1
   4a047:	movsxd rcx,DWORD PTR [rbx+0x98]
   4a04e:	test   rcx,rcx
   4a051:	je     4a077 <argp_usage@@Base+0x6cf7>
   4a053:	cmp    al,0x1
   4a055:	mov    rdi,QWORD PTR [rbp+0x0]
   4a059:	lea    rdx,[rip+0x2234f]        # 6c3af <_obstack_memory_used@@Base+0x1f72f>
   4a060:	lea    r8,[rip+0x22389]        # 6c3f0 <_obstack_memory_used@@Base+0x1f770>
   4a067:	adc    rdx,0x0
   4a06b:	mov    esi,0x1
   4a070:	xor    eax,eax
   4a072:	call   a840 <__fprintf_chk@plt>
   4a077:	mov    rsi,QWORD PTR [rbp+0x0]
   4a07b:	pop    rbx
   4a07c:	mov    edi,0xa
   4a081:	pop    rbp
   4a082:	pop    r12
   4a084:	jmp    a260 <fputc@plt>
   4a089:	nop    DWORD PTR [rax+0x0]
   4a090:	mov    rcx,QWORD PTR [rbx+0x78]
   4a094:	xor    eax,eax
   4a096:	test   rcx,rcx
   4a099:	jne    49f7f <argp_usage@@Base+0x6bff>
   4a09f:	cmp    QWORD PTR [rbx+0x80],0x0
   4a0a7:	jne    49fa8 <argp_usage@@Base+0x6c28>
   4a0ad:	cmp    QWORD PTR [rbx+0x88],0x0
   4a0b5:	jne    49fa8 <argp_usage@@Base+0x6c28>
   4a0bb:	cmp    QWORD PTR [rbx+0x90],0x0
   4a0c3:	jne    49fa8 <argp_usage@@Base+0x6c28>
   4a0c9:	mov    edx,DWORD PTR [rbx+0x98]
   4a0cf:	test   edx,edx
   4a0d1:	jne    49fa8 <argp_usage@@Base+0x6c28>
   4a0d7:	lea    rsi,[rip+0x222da]        # 6c3b8 <_obstack_memory_used@@Base+0x1f738>
   4a0de:	xor    edi,edi
   4a0e0:	mov    edx,0x5
   4a0e5:	call   a040 <dcgettext@plt>
   4a0ea:	pop    rbx
   4a0eb:	mov    rsi,r12
   4a0ee:	pop    rbp
   4a0ef:	mov    rdi,rax
   4a0f2:	pop    r12
   4a0f4:	jmp    a1a0 <fputs@plt>
   4a0f9:	nop    DWORD PTR [rax+0x0]
   4a100:	mov    rbp,QWORD PTR [rip+0x31ee1]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   4a107:	lea    r8,[rip+0x222ba]        # 6c3c8 <_obstack_memory_used@@Base+0x1f748>
   4a10e:	lea    rdx,[rip+0x2229b]        # 6c3b0 <_obstack_memory_used@@Base+0x1f730>
   4a115:	xor    eax,eax
   4a117:	mov    esi,0x1
   4a11c:	mov    rdi,QWORD PTR [rbp+0x0]
   4a120:	call   a840 <__fprintf_chk@plt>
   4a125:	mov    rcx,QWORD PTR [rbx+0x70]
   4a129:	test   rcx,rcx
   4a12c:	je     49f71 <argp_usage@@Base+0x6bf1>
   4a132:	lea    rdx,[rip+0x22276]        # 6c3af <_obstack_memory_used@@Base+0x1f72f>
   4a139:	jmp    49f5a <argp_usage@@Base+0x6bda>
   4a13e:	xchg   ax,ax
   4a140:	endbr64 
   4a144:	push   r12
   4a146:	push   rbp
   4a147:	push   rbx
   4a148:	test   rdi,rdi
   4a14b:	je     4a1ca <argp_usage@@Base+0x6e4a>
   4a14d:	mov    esi,0x2f
   4a152:	mov    rbx,rdi
   4a155:	call   a130 <strrchr@plt>
   4a15a:	mov    rbp,rax
   4a15d:	test   rax,rax
   4a160:	je     4a1b4 <argp_usage@@Base+0x6e34>
   4a162:	lea    r12,[rax+0x1]
   4a166:	mov    rax,r12
   4a169:	sub    rax,rbx
   4a16c:	cmp    rax,0x6
   4a170:	jle    4a1b4 <argp_usage@@Base+0x6e34>
   4a172:	lea    rdi,[rbp-0x6]
   4a176:	mov    edx,0x7
   4a17b:	lea    rsi,[rip+0x2227a]        # 6c3fc <_obstack_memory_used@@Base+0x1f77c>
   4a182:	call   9e50 <strncmp@plt>
   4a187:	test   eax,eax
   4a189:	jne    4a1b4 <argp_usage@@Base+0x6e34>
   4a18b:	mov    edx,0x3
   4a190:	lea    rsi,[rip+0x2226d]        # 6c404 <_obstack_memory_used@@Base+0x1f784>
   4a197:	mov    rdi,r12
   4a19a:	mov    rbx,r12
   4a19d:	call   9e50 <strncmp@plt>
   4a1a2:	test   eax,eax
   4a1a4:	jne    4a1b4 <argp_usage@@Base+0x6e34>
   4a1a6:	mov    rax,QWORD PTR [rip+0x31e2b]        # 7bfd8 <_obstack_memory_used@@Base+0x2f358>
   4a1ad:	lea    rbx,[rbp+0x4]
   4a1b1:	mov    QWORD PTR [rax],rbx
   4a1b4:	mov    rax,QWORD PTR [rip+0x31e0d]        # 7bfc8 <_obstack_memory_used@@Base+0x2f348>
   4a1bb:	mov    QWORD PTR [rip+0x34dfe],rbx        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
   4a1c2:	mov    QWORD PTR [rax],rbx
   4a1c5:	pop    rbx
   4a1c6:	pop    rbp
   4a1c7:	pop    r12
   4a1c9:	ret    
   4a1ca:	mov    rax,QWORD PTR [rip+0x31e17]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   4a1d1:	mov    edx,0x37
   4a1d6:	mov    esi,0x1
   4a1db:	lea    rdi,[rip+0x22c1e]        # 6ce00 <_obstack_memory_used@@Base+0x20180>
   4a1e2:	mov    rcx,QWORD PTR [rax]
   4a1e5:	call   a830 <fwrite@plt>
   4a1ea:	call   9e30 <abort@plt>
   4a1ef:	nop
   4a1f0:	endbr64 
   4a1f4:	push   r15
   4a1f6:	mov    r11,rcx
   4a1f9:	push   r14
   4a1fb:	mov    r14,rdi
   4a1fe:	push   r13
   4a200:	mov    r13,rsi
   4a203:	push   r12
   4a205:	push   rbp
   4a206:	mov    ebp,r8d
   4a209:	push   rbx
   4a20a:	sub    rsp,0xc8
   4a211:	mov    rax,QWORD PTR [rsp+0x100]
   4a219:	mov    QWORD PTR [rsp+0x98],rdi
   4a221:	mov    QWORD PTR [rsp+0x18],rdx
   4a226:	mov    QWORD PTR [rsp+0x10],rax
   4a22b:	mov    rax,QWORD PTR [rsp+0x108]
   4a233:	mov    DWORD PTR [rsp+0x54],r9d
   4a238:	mov    QWORD PTR [rsp+0x90],rax
   4a240:	mov    rax,QWORD PTR [rsp+0x110]
   4a248:	mov    QWORD PTR [rsp+0x88],rax
   4a250:	mov    rax,QWORD PTR fs:0x28
   4a259:	mov    QWORD PTR [rsp+0xb8],rax
   4a261:	xor    eax,eax
   4a263:	nop    DWORD PTR [rax+rax*1+0x0]
   4a268:	mov    QWORD PTR [rsp],r11
   4a26c:	call   a050 <__ctype_get_mb_cur_max@plt>
   4a271:	mov    ebx,DWORD PTR [rsp+0x54]
   4a275:	mov    QWORD PTR [rsp+0x58],rax
   4a27a:	and    ebx,0x2
   4a27d:	cmp    ebp,0xa
   4a280:	ja     aad6 <__sprintf_chk@plt+0x126>
   4a286:	lea    rdx,[rip+0x225b7]        # 6c844 <_obstack_memory_used@@Base+0x1fbc4>
   4a28d:	mov    eax,ebp
   4a28f:	mov    r11,QWORD PTR [rsp]
   4a293:	movsxd rax,DWORD PTR [rdx+rax*4]
   4a297:	add    rax,rdx
   4a29a:	notrack jmp rax
   4a29d:	cmp    ebp,0xa
   4a2a0:	je     4a300 <argp_usage@@Base+0x6f80>
   4a2a2:	lea    r12,[rip+0x2215f]        # 6c408 <_obstack_memory_used@@Base+0x1f788>
   4a2a9:	xor    edi,edi
   4a2ab:	mov    edx,0x5
   4a2b0:	mov    QWORD PTR [rsp],r11
   4a2b4:	mov    rsi,r12
   4a2b7:	call   a040 <dcgettext@plt>
   4a2bc:	mov    r11,QWORD PTR [rsp]
   4a2c0:	cmp    rax,r12
   4a2c3:	mov    QWORD PTR [rsp+0x90],rax
   4a2cb:	je     4b4bb <argp_usage@@Base+0x813b>
   4a2d1:	lea    r12,[rip+0x19e92]        # 6416a <_obstack_memory_used@@Base+0x174ea>
   4a2d8:	xor    edi,edi
   4a2da:	mov    edx,0x5
   4a2df:	mov    QWORD PTR [rsp],r11
   4a2e3:	mov    rsi,r12
   4a2e6:	call   a040 <dcgettext@plt>
   4a2eb:	mov    r11,QWORD PTR [rsp]
   4a2ef:	cmp    rax,r12
   4a2f2:	mov    QWORD PTR [rsp+0x88],rax
   4a2fa:	je     4b4a0 <argp_usage@@Base+0x8120>
   4a300:	xor    r15d,r15d
   4a303:	test   ebx,ebx
   4a305:	je     4b323 <argp_usage@@Base+0x7fa3>
   4a30b:	test   ebx,ebx
   4a30d:	mov    rbx,QWORD PTR [rsp+0x88]
   4a315:	mov    QWORD PTR [rsp],r11
   4a319:	mov    r12d,0x1
   4a31f:	setne  BYTE PTR [rsp+0x51]
   4a324:	mov    rdi,rbx
   4a327:	call   a060 <strlen@plt>
   4a32c:	mov    QWORD PTR [rsp+0x40],rbx
   4a331:	mov    r11,QWORD PTR [rsp]
   4a335:	mov    QWORD PTR [rsp+0x20],rax
   4a33a:	mov    BYTE PTR [rsp],0x1
   4a33e:	xor    esi,esi
   4a340:	mov    BYTE PTR [rsp+0x53],0x0
   4a345:	mov    QWORD PTR [rsp+0x48],0x0
   4a34e:	mov    BYTE PTR [rsp+0x8],r12b
   4a353:	mov    r10,r13
   4a356:	mov    r12,r14
   4a359:	mov    r13d,esi
   4a35c:	mov    r14d,ebp
   4a35f:	xor    r9d,r9d
   4a362:	nop    WORD PTR [rax+rax*1+0x0]
   4a368:	cmp    r11,r9
   4a36b:	setne  bpl
   4a36f:	cmp    r11,0xffffffffffffffff
   4a373:	jne    4a383 <argp_usage@@Base+0x7003>
   4a375:	mov    rax,QWORD PTR [rsp+0x18]
   4a37a:	cmp    BYTE PTR [rax+r9*1],0x0
   4a37f:	setne  bpl
   4a383:	test   bpl,bpl
   4a386:	je     4affd <argp_usage@@Base+0x7c7d>
   4a38c:	cmp    r14d,0x2
   4a390:	mov    rdi,QWORD PTR [rsp+0x18]
   4a395:	setne  al
   4a398:	and    al,BYTE PTR [rsp+0x8]
   4a39c:	lea    rbx,[rdi+r9*1]
   4a3a0:	mov    r8d,eax
   4a3a3:	je     4a970 <argp_usage@@Base+0x75f0>
   4a3a9:	mov    rax,QWORD PTR [rsp+0x20]
   4a3ae:	test   rax,rax
   4a3b1:	je     4ade0 <argp_usage@@Base+0x7a60>
   4a3b7:	lea    rdx,[r9+rax*1]
   4a3bb:	cmp    r11,0xffffffffffffffff
   4a3bf:	jne    4a3f8 <argp_usage@@Base+0x7078>
   4a3c1:	cmp    rax,0x1
   4a3c5:	jbe    4a3f8 <argp_usage@@Base+0x7078>
   4a3c7:	mov    QWORD PTR [rsp+0x38],r10
   4a3cc:	mov    QWORD PTR [rsp+0x30],r9
   4a3d1:	mov    QWORD PTR [rsp+0x28],rdx
   4a3d6:	mov    BYTE PTR [rsp+0x52],r8b
   4a3db:	call   a060 <strlen@plt>
   4a3e0:	mov    r10,QWORD PTR [rsp+0x38]
   4a3e5:	mov    r9,QWORD PTR [rsp+0x30]
   4a3ea:	mov    rdx,QWORD PTR [rsp+0x28]
   4a3ef:	movzx  r8d,BYTE PTR [rsp+0x52]
   4a3f5:	mov    r11,rax
   4a3f8:	cmp    rdx,r11
   4a3fb:	ja     4ade0 <argp_usage@@Base+0x7a60>
   4a401:	mov    rdx,QWORD PTR [rsp+0x20]
   4a406:	mov    rsi,QWORD PTR [rsp+0x40]
   4a40b:	mov    rdi,rbx
   4a40e:	mov    QWORD PTR [rsp+0x38],r11
   4a413:	mov    QWORD PTR [rsp+0x30],r10
   4a418:	mov    QWORD PTR [rsp+0x28],r9
   4a41d:	mov    BYTE PTR [rsp+0x52],r8b
   4a422:	call   a2c0 <memcmp@plt>
   4a427:	movzx  r8d,BYTE PTR [rsp+0x52]
   4a42d:	mov    r9,QWORD PTR [rsp+0x28]
   4a432:	test   eax,eax
   4a434:	mov    r10,QWORD PTR [rsp+0x30]
   4a439:	mov    r11,QWORD PTR [rsp+0x38]
   4a43e:	jne    4ade0 <argp_usage@@Base+0x7a60>
   4a444:	cmp    BYTE PTR [rsp+0x51],0x0
   4a449:	jne    4b492 <argp_usage@@Base+0x8112>
   4a44f:	movzx  ebx,BYTE PTR [rbx]
   4a452:	cmp    bl,0x3f
   4a455:	jg     4af78 <argp_usage@@Base+0x7bf8>
   4a45b:	test   bl,bl
   4a45d:	js     4a593 <argp_usage@@Base+0x7213>
   4a463:	cmp    bl,0x3f
   4a466:	ja     4a593 <argp_usage@@Base+0x7213>
   4a46c:	lea    rdx,[rip+0x223fd]        # 6c870 <_obstack_memory_used@@Base+0x1fbf0>
   4a473:	movzx  eax,bl
   4a476:	movsxd rax,DWORD PTR [rdx+rax*4]
   4a47a:	add    rax,rdx
   4a47d:	notrack jmp rax
   4a480:	mov    ecx,r8d
   4a483:	nop    DWORD PTR [rax+rax*1+0x0]
   4a488:	mov    ebp,r8d
   4a48b:	xor    eax,eax
   4a48d:	mov    r8d,ecx
   4a490:	mov    ecx,ebx
   4a492:	nop    WORD PTR [rax+rax*1+0x0]
   4a498:	mov    rsi,QWORD PTR [rsp+0x10]
   4a49d:	test   rsi,rsi
   4a4a0:	je     4a4b4 <argp_usage@@Base+0x7134>
   4a4a2:	mov    edx,ecx
   4a4a4:	shr    dl,0x5
   4a4a7:	movzx  edx,dl
   4a4aa:	mov    edx,DWORD PTR [rsi+rdx*4]
   4a4ad:	shr    edx,cl
   4a4af:	and    edx,0x1
   4a4b2:	jne    4a4bd <argp_usage@@Base+0x713d>
   4a4b4:	test   r8b,r8b
   4a4b7:	je     4a629 <argp_usage@@Base+0x72a9>
   4a4bd:	cmp    r14d,0x2
   4a4c1:	sete   dl
   4a4c4:	cmp    BYTE PTR [rsp+0x51],0x0
   4a4c9:	mov    eax,edx
   4a4cb:	jne    4a7c0 <argp_usage@@Base+0x7440>
   4a4d1:	mov    eax,r13d
   4a4d4:	xor    eax,0x1
   4a4d7:	and    al,dl
   4a4d9:	je     4a50a <argp_usage@@Base+0x718a>
   4a4db:	cmp    r10,r15
   4a4de:	jbe    4a4e5 <argp_usage@@Base+0x7165>
   4a4e0:	mov    BYTE PTR [r12+r15*1],0x27
   4a4e5:	lea    rdx,[r15+0x1]
   4a4e9:	cmp    r10,rdx
   4a4ec:	jbe    4a4f4 <argp_usage@@Base+0x7174>
   4a4ee:	mov    BYTE PTR [r12+r15*1+0x1],0x24
   4a4f4:	lea    rdx,[r15+0x2]
   4a4f8:	cmp    r10,rdx
   4a4fb:	jbe    4a503 <argp_usage@@Base+0x7183>
   4a4fd:	mov    BYTE PTR [r12+r15*1+0x2],0x27
   4a503:	add    r15,0x3
   4a507:	mov    r13d,eax
   4a50a:	cmp    r15,r10
   4a50d:	jae    4a514 <argp_usage@@Base+0x7194>
   4a50f:	mov    BYTE PTR [r12+r15*1],0x5c
   4a514:	add    r15,0x1
   4a518:	add    r9,0x1
   4a51c:	cmp    r15,r10
   4a51f:	jae    4a525 <argp_usage@@Base+0x71a5>
   4a521:	mov    BYTE PTR [r12+r15*1],cl
   4a525:	movzx  eax,BYTE PTR [rsp]
   4a529:	add    r15,0x1
   4a52d:	mov    esi,0x0
   4a532:	test   bpl,bpl
   4a535:	cmove  eax,esi
   4a538:	mov    BYTE PTR [rsp],al
   4a53b:	jmp    4a368 <argp_usage@@Base+0x6fe8>
   4a540:	cmp    bl,0x7c
   4a543:	jne    4a593 <argp_usage@@Base+0x7213>
   4a545:	xor    ebp,ebp
   4a547:	cmp    r14d,0x2
   4a54b:	sete   al
   4a54e:	jne    4a5ff <argp_usage@@Base+0x727f>
   4a554:	cmp    BYTE PTR [rsp+0x51],0x0
   4a559:	je     4a5ff <argp_usage@@Base+0x727f>
   4a55f:	mov    r14,r12
   4a562:	movzx  r12d,BYTE PTR [rsp+0x8]
   4a568:	mov    r13,r10
   4a56b:	mov    ebp,0x2
   4a570:	mov    eax,r12d
   4a573:	test   al,al
   4a575:	jne    4a7da <argp_usage@@Base+0x745a>
   4a57b:	and    DWORD PTR [rsp+0x54],0xfffffffd
   4a580:	mov    QWORD PTR [rsp+0x10],0x0
   4a589:	jmp    4a268 <argp_usage@@Base+0x6ee8>
   4a58e:	xchg   ax,ax
   4a590:	xor    r8d,r8d
   4a593:	cmp    QWORD PTR [rsp+0x58],0x1
   4a599:	jne    4aae9 <argp_usage@@Base+0x7769>
   4a59f:	nop
   4a5a0:	mov    QWORD PTR [rsp+0x38],r11
   4a5a5:	mov    QWORD PTR [rsp+0x30],r10
   4a5aa:	mov    QWORD PTR [rsp+0x28],r9
   4a5af:	mov    BYTE PTR [rsp+0x52],r8b
   4a5b4:	call   a980 <__ctype_b_loc@plt>
   4a5b9:	movzx  r8d,BYTE PTR [rsp+0x52]
   4a5bf:	mov    r9,QWORD PTR [rsp+0x28]
   4a5c4:	mov    edi,0x1
   4a5c9:	mov    rdx,rax
   4a5cc:	movzx  eax,bl
   4a5cf:	mov    r10,QWORD PTR [rsp+0x30]
   4a5d4:	mov    r11,QWORD PTR [rsp+0x38]
   4a5d9:	mov    rdx,QWORD PTR [rdx]
   4a5dc:	test   BYTE PTR [rdx+rax*2+0x1],0x40
   4a5e1:	setne  bpl
   4a5e5:	sete   dl
   4a5e8:	and    dl,BYTE PTR [rsp+0x8]
   4a5ec:	test   dl,dl
   4a5ee:	jne    4b2b8 <argp_usage@@Base+0x7f38>
   4a5f4:	nop    DWORD PTR [rax+0x0]
   4a5f8:	cmp    r14d,0x2
   4a5fc:	sete   al
   4a5ff:	mov    ecx,ebx
   4a601:	movzx  edx,BYTE PTR [rsp+0x8]
   4a606:	xor    edx,0x1
   4a609:	or     al,dl
   4a60b:	je     4a498 <argp_usage@@Base+0x7118>
   4a611:	xor    eax,eax
   4a613:	cmp    BYTE PTR [rsp+0x51],0x0
   4a618:	jne    4a498 <argp_usage@@Base+0x7118>
   4a61e:	xchg   ax,ax
   4a620:	test   r8b,r8b
   4a623:	jne    4a4bd <argp_usage@@Base+0x713d>
   4a629:	xor    eax,0x1
   4a62c:	add    r9,0x1
   4a630:	and    eax,r13d
   4a633:	jmp    4aeb8 <argp_usage@@Base+0x7b38>
   4a638:	test   ebx,ebx
   4a63a:	jne    4b3f9 <argp_usage@@Base+0x8079>
   4a640:	lea    rax,[rip+0x21505]        # 6bb4c <_obstack_memory_used@@Base+0x1eecc>
   4a647:	mov    BYTE PTR [rsp],0x1
   4a64b:	mov    ebp,0x5
   4a650:	xor    esi,esi
   4a652:	mov    QWORD PTR [rsp+0x40],rax
   4a657:	mov    r15d,0x1
   4a65d:	mov    r12d,0x1
   4a663:	mov    QWORD PTR [rsp+0x20],0x1
   4a66c:	mov    BYTE PTR [rsp+0x51],0x0
   4a671:	mov    BYTE PTR [rsp+0x53],0x0
   4a676:	mov    QWORD PTR [rsp+0x48],0x0
   4a67f:	test   r13,r13
   4a682:	je     4a34e <argp_usage@@Base+0x6fce>
   4a688:	mov    BYTE PTR [r14],0x22
   4a68c:	jmp    4a34e <argp_usage@@Base+0x6fce>
   4a691:	mov    BYTE PTR [rsp+0x51],0x1
   4a696:	mov    r12d,0x1
   4a69c:	lea    rax,[rip+0x19ac7]        # 6416a <_obstack_memory_used@@Base+0x174ea>
   4a6a3:	xor    r15d,r15d
   4a6a6:	mov    ebp,0x2
   4a6ab:	mov    QWORD PTR [rsp+0x20],0x1
   4a6b4:	mov    QWORD PTR [rsp+0x40],rax
   4a6b9:	jmp    4a33a <argp_usage@@Base+0x6fba>
   4a6be:	mov    BYTE PTR [rsp+0x51],0x0
   4a6c3:	mov    r12d,0x1
   4a6c9:	xor    r15d,r15d
   4a6cc:	mov    QWORD PTR [rsp+0x20],0x0
   4a6d5:	mov    QWORD PTR [rsp+0x40],0x0
   4a6de:	jmp    4a33a <argp_usage@@Base+0x6fba>
   4a6e3:	mov    BYTE PTR [rsp+0x51],0x1
   4a6e8:	xor    r12d,r12d
   4a6eb:	jmp    4a69c <argp_usage@@Base+0x731c>
   4a6ed:	lea    rax,[rip+0x21458]        # 6bb4c <_obstack_memory_used@@Base+0x1eecc>
   4a6f4:	mov    BYTE PTR [rsp+0x51],0x1
   4a6f9:	xor    r15d,r15d
   4a6fc:	mov    r12d,0x1
   4a702:	mov    QWORD PTR [rsp+0x20],0x1
   4a70b:	mov    ebp,0x5
   4a710:	mov    QWORD PTR [rsp+0x40],rax
   4a715:	jmp    4a33a <argp_usage@@Base+0x6fba>
   4a71a:	mov    BYTE PTR [rsp+0x51],0x0
   4a71f:	xor    r12d,r12d
   4a722:	xor    r15d,r15d
   4a725:	mov    QWORD PTR [rsp+0x20],0x0
   4a72e:	mov    QWORD PTR [rsp+0x40],0x0
   4a737:	jmp    4a33a <argp_usage@@Base+0x6fba>
   4a73c:	xor    r8d,r8d
   4a73f:	cmp    r14d,0x2
   4a743:	je     4b100 <argp_usage@@Base+0x7d80>
   4a749:	cmp    r14d,0x5
   4a74d:	jne    4a770 <argp_usage@@Base+0x73f0>
   4a74f:	test   BYTE PTR [rsp+0x54],0x4
   4a754:	je     4a770 <argp_usage@@Base+0x73f0>
   4a756:	lea    rax,[r9+0x2]
   4a75a:	cmp    rax,r11
   4a75d:	jae    4a770 <argp_usage@@Base+0x73f0>
   4a75f:	mov    rsi,QWORD PTR [rsp+0x18]
   4a764:	cmp    BYTE PTR [rsi+r9*1+0x1],0x3f
   4a76a:	je     4b3ca <argp_usage@@Base+0x804a>
   4a770:	xor    eax,eax
   4a772:	xor    ebp,ebp
   4a774:	mov    ecx,0x3f
   4a779:	jmp    4a601 <argp_usage@@Base+0x7281>
   4a77e:	xor    r8d,r8d
   4a781:	cmp    r14d,0x2
   4a785:	je     4b0c0 <argp_usage@@Base+0x7d40>
   4a78b:	mov    BYTE PTR [rsp+0x53],bpl
   4a790:	xor    eax,eax
   4a792:	mov    ecx,0x27
   4a797:	jmp    4a601 <argp_usage@@Base+0x7281>
   4a79c:	mov    ecx,0x72
   4a7a1:	xor    ebp,ebp
   4a7a3:	cmp    r14d,0x2
   4a7a7:	sete   dl
   4a7aa:	cmp    BYTE PTR [rsp+0x51],0x0
   4a7af:	mov    eax,edx
   4a7b1:	je     4a4d1 <argp_usage@@Base+0x7151>
   4a7b7:	nop    WORD PTR [rax+rax*1+0x0]
   4a7c0:	mov    ebp,r14d
   4a7c3:	mov    r14,r12
   4a7c6:	movzx  r12d,BYTE PTR [rsp+0x8]
   4a7cc:	mov    r13,r10
   4a7cf:	and    eax,r12d
   4a7d2:	test   al,al
   4a7d4:	je     4a57b <argp_usage@@Base+0x71fb>
   4a7da:	mov    QWORD PTR [rsp],r11
   4a7de:	mov    r12d,0x1
   4a7e4:	and    DWORD PTR [rsp+0x54],0xfffffffd
   4a7e9:	call   a050 <__ctype_get_mb_cur_max@plt>
   4a7ee:	mov    r11,QWORD PTR [rsp]
   4a7f2:	mov    QWORD PTR [rsp+0x10],0x0
   4a7fb:	mov    QWORD PTR [rsp+0x58],rax
   4a800:	lea    rax,[rip+0x19963]        # 6416a <_obstack_memory_used@@Base+0x174ea>
   4a807:	mov    BYTE PTR [rsp],0x1
   4a80b:	mov    ebp,0x2
   4a810:	xor    esi,esi
   4a812:	mov    QWORD PTR [rsp+0x40],rax
   4a817:	mov    r15d,0x1
   4a81d:	mov    QWORD PTR [rsp+0x20],0x1
   4a826:	mov    BYTE PTR [rsp+0x51],0x0
   4a82b:	mov    BYTE PTR [rsp+0x53],0x0
   4a830:	test   r13,r13
   4a833:	jne    4b61f <argp_usage@@Base+0x829f>
   4a839:	mov    QWORD PTR [rsp+0x48],0x0
   4a842:	jmp    4a34e <argp_usage@@Base+0x6fce>
   4a847:	mov    ecx,0x66
   4a84c:	cmp    r14d,0x2
   4a850:	sete   al
   4a853:	cmp    BYTE PTR [rsp+0x51],0x0
   4a858:	jne    4a874 <argp_usage@@Base+0x74f4>
   4a85a:	xor    ebp,ebp
   4a85c:	jmp    4a50a <argp_usage@@Base+0x718a>
   4a861:	cmp    r14d,0x2
   4a865:	mov    ecx,0x62
   4a86a:	sete   al
   4a86d:	cmp    BYTE PTR [rsp+0x51],0x0
   4a872:	je     4a85a <argp_usage@@Base+0x74da>
   4a874:	mov    ebp,r14d
   4a877:	mov    r13,r10
   4a87a:	mov    r14,r12
   4a87d:	movzx  r12d,BYTE PTR [rsp+0x51]
   4a883:	jmp    4a7cf <argp_usage@@Base+0x744f>
   4a888:	mov    ecx,0x6e
   4a88d:	xor    ebp,ebp
   4a88f:	jmp    4a7a3 <argp_usage@@Base+0x7423>
   4a894:	mov    ecx,0x61
   4a899:	jmp    4a84c <argp_usage@@Base+0x74cc>
   4a89b:	cmp    BYTE PTR [rsp+0x51],0x0
   4a8a0:	jne    4b536 <argp_usage@@Base+0x81b6>
   4a8a6:	xor    r8d,r8d
   4a8a9:	cmp    r14d,0x2
   4a8ad:	mov    eax,r13d
   4a8b0:	sete   dl
   4a8b3:	xor    eax,0x1
   4a8b6:	and    al,dl
   4a8b8:	je     4b200 <argp_usage@@Base+0x7e80>
   4a8be:	cmp    r10,r15
   4a8c1:	jbe    4a8c8 <argp_usage@@Base+0x7548>
   4a8c3:	mov    BYTE PTR [r12+r15*1],0x27
   4a8c8:	lea    rcx,[r15+0x1]
   4a8cc:	cmp    r10,rcx
   4a8cf:	jbe    4a8d7 <argp_usage@@Base+0x7557>
   4a8d1:	mov    BYTE PTR [r12+r15*1+0x1],0x24
   4a8d7:	lea    rcx,[r15+0x2]
   4a8db:	cmp    r10,rcx
   4a8de:	jbe    4a8e6 <argp_usage@@Base+0x7566>
   4a8e0:	mov    BYTE PTR [r12+r15*1+0x2],0x27
   4a8e6:	lea    rsi,[r15+0x3]
   4a8ea:	cmp    r10,rsi
   4a8ed:	ja     4b20b <argp_usage@@Base+0x7e8b>
   4a8f3:	add    r15,0x4
   4a8f7:	mov    r13d,eax
   4a8fa:	xor    ebp,ebp
   4a8fc:	mov    ecx,0x30
   4a901:	jmp    4a4b4 <argp_usage@@Base+0x7134>
   4a906:	mov    ecx,0x23
   4a90b:	mov    edx,r8d
   4a90e:	test   r9,r9
   4a911:	jne    4af08 <argp_usage@@Base+0x7b88>
   4a917:	mov    ebx,ecx
   4a919:	jmp    4a547 <argp_usage@@Base+0x71c7>
   4a91e:	xchg   ax,ax
   4a920:	xor    r8d,r8d
   4a923:	mov    ecx,0x9
   4a928:	mov    ebx,0x74
   4a92d:	nop    DWORD PTR [rax]
   4a930:	cmp    BYTE PTR [rsp+0x8],0x0
   4a935:	jne    4b65f <argp_usage@@Base+0x82df>
   4a93b:	xor    ebp,ebp
   4a93d:	xor    eax,eax
   4a93f:	cmp    BYTE PTR [rsp+0x51],0x0
   4a944:	jne    4a498 <argp_usage@@Base+0x7118>
   4a94a:	jmp    4a620 <argp_usage@@Base+0x72a0>
   4a94f:	mov    ecx,0x76
   4a954:	xor    ebp,ebp
   4a956:	jmp    4a7a3 <argp_usage@@Base+0x7423>
   4a95b:	mov    ecx,r8d
   4a95e:	mov    ebx,0x20
   4a963:	jmp    4a488 <argp_usage@@Base+0x7108>
   4a968:	nop    DWORD PTR [rax+rax*1+0x0]
   4a970:	movzx  ebx,BYTE PTR [rbx]
   4a973:	cmp    bl,0x3f
   4a976:	jg     4aa48 <argp_usage@@Base+0x76c8>
   4a97c:	test   bl,bl
   4a97e:	js     4a593 <argp_usage@@Base+0x7213>
   4a984:	cmp    bl,0x3f
   4a987:	ja     4a593 <argp_usage@@Base+0x7213>
   4a98d:	lea    rdx,[rip+0x21fdc]        # 6c970 <_obstack_memory_used@@Base+0x1fcf0>
   4a994:	movzx  eax,bl
   4a997:	movsxd rax,DWORD PTR [rdx+rax*4]
   4a99b:	add    rax,rdx
   4a99e:	notrack jmp rax
   4a9a1:	mov    ecx,0xc
   4a9a6:	mov    ebx,0x66
   4a9ab:	jmp    4a930 <argp_usage@@Base+0x75b0>
   4a9ad:	mov    ecx,0x9
   4a9b2:	mov    ebx,0x74
   4a9b7:	cmp    r14d,0x2
   4a9bb:	sete   al
   4a9be:	and    al,BYTE PTR [rsp+0x51]
   4a9c2:	mov    r8d,eax
   4a9c5:	je     4a930 <argp_usage@@Base+0x75b0>
   4a9cb:	jmp    4a55f <argp_usage@@Base+0x71df>
   4a9d0:	mov    ecx,0x8
   4a9d5:	mov    ebx,0x62
   4a9da:	jmp    4a930 <argp_usage@@Base+0x75b0>
   4a9df:	cmp    BYTE PTR [rsp+0x8],0x0
   4a9e4:	jne    4a89b <argp_usage@@Base+0x751b>
   4a9ea:	xor    r8d,r8d
   4a9ed:	xor    ecx,ecx
   4a9ef:	test   BYTE PTR [rsp+0x54],0x1
   4a9f4:	je     4a93b <argp_usage@@Base+0x75bb>
   4a9fa:	add    r9,0x1
   4a9fe:	jmp    4a368 <argp_usage@@Base+0x6fe8>
   4aa03:	mov    ecx,0xb
   4aa08:	mov    ebx,0x76
   4aa0d:	jmp    4a930 <argp_usage@@Base+0x75b0>
   4aa12:	mov    ebx,0x20
   4aa17:	jmp    4a547 <argp_usage@@Base+0x71c7>
   4aa1c:	mov    ecx,0xd
   4aa21:	mov    ebx,0x72
   4aa26:	jmp    4a9b7 <argp_usage@@Base+0x7637>
   4aa28:	mov    ecx,0xa
   4aa2d:	mov    ebx,0x6e
   4aa32:	jmp    4a9b7 <argp_usage@@Base+0x7637>
   4aa34:	mov    ecx,0x7
   4aa39:	mov    ebx,0x61
   4aa3e:	jmp    4a930 <argp_usage@@Base+0x75b0>
   4aa43:	nop    DWORD PTR [rax+rax*1+0x0]
   4aa48:	cmp    bl,0x7a
   4aa4b:	jg     4aac0 <argp_usage@@Base+0x7740>
   4aa4d:	cmp    bl,0x40
   4aa50:	je     4a593 <argp_usage@@Base+0x7213>
   4aa56:	lea    ecx,[rbx-0x41]
   4aa59:	mov    eax,0x1
   4aa5e:	movabs rdx,0x3ffffff53ffffff
   4aa68:	shl    rax,cl
   4aa6b:	test   rax,rdx
   4aa6e:	jne    4a5f8 <argp_usage@@Base+0x7278>
   4aa74:	test   eax,0xa4000000
   4aa79:	jne    4a545 <argp_usage@@Base+0x71c5>
   4aa7f:	cmp    bl,0x5c
   4aa82:	jne    4a593 <argp_usage@@Base+0x7213>
   4aa88:	cmp    r14d,0x2
   4aa8c:	je     4b0a0 <argp_usage@@Base+0x7d20>
   4aa92:	movzx  edx,BYTE PTR [rsp+0x8]
   4aa97:	and    dl,BYTE PTR [rsp+0x51]
   4aa9b:	cmp    QWORD PTR [rsp+0x20],0x0
   4aaa1:	setne  al
   4aaa4:	and    dl,al
   4aaa6:	mov    r8d,edx
   4aaa9:	jne    4aea7 <argp_usage@@Base+0x7b27>
   4aaaf:	mov    ecx,0x5c
   4aab4:	jmp    4a930 <argp_usage@@Base+0x75b0>
   4aab9:	nop    DWORD PTR [rax+0x0]
   4aac0:	cmp    bl,0x7d
   4aac3:	je     4af40 <argp_usage@@Base+0x7bc0>
   4aac9:	jle    4ad9e <argp_usage@@Base+0x7a1e>
   4aacf:	mov    ecx,0x7e
   4aad4:	cmp    bl,0x7e
   4aad7:	je     4a90b <argp_usage@@Base+0x758b>
   4aadd:	cmp    QWORD PTR [rsp+0x58],0x1
   4aae3:	je     4a5a0 <argp_usage@@Base+0x7220>
   4aae9:	lea    rax,[rsp+0xb0]
   4aaf1:	mov    QWORD PTR [rsp+0xb0],0x0
   4aafd:	mov    QWORD PTR [rsp+0x60],rax
   4ab02:	cmp    r11,0xffffffffffffffff
   4ab06:	jne    4ab34 <argp_usage@@Base+0x77b4>
   4ab08:	mov    rdi,QWORD PTR [rsp+0x18]
   4ab0d:	mov    QWORD PTR [rsp+0x30],r10
   4ab12:	mov    QWORD PTR [rsp+0x28],r9
   4ab17:	mov    BYTE PTR [rsp+0x52],r8b
   4ab1c:	call   a060 <strlen@plt>
   4ab21:	mov    r10,QWORD PTR [rsp+0x30]
   4ab26:	mov    r9,QWORD PTR [rsp+0x28]
   4ab2b:	movzx  r8d,BYTE PTR [rsp+0x52]
   4ab31:	mov    r11,rax
   4ab34:	lea    rax,[rsp+0xac]
   4ab3c:	mov    BYTE PTR [rsp+0x7d],r8b
   4ab41:	xor    edi,edi
   4ab43:	mov    QWORD PTR [rsp+0x38],rax
   4ab48:	mov    QWORD PTR [rsp+0x30],r9
   4ab4d:	mov    BYTE PTR [rsp+0x7e],r13b
   4ab52:	mov    BYTE PTR [rsp+0x52],bpl
   4ab57:	mov    QWORD PTR [rsp+0x80],r15
   4ab5f:	mov    QWORD PTR [rsp+0x70],r10
   4ab64:	mov    QWORD PTR [rsp+0x28],r11
   4ab69:	mov    DWORD PTR [rsp+0x78],r14d
   4ab6e:	mov    QWORD PTR [rsp+0x68],r12
   4ab73:	mov    r12,QWORD PTR [rsp+0x60]
   4ab78:	mov    BYTE PTR [rsp+0x7f],bl
   4ab7c:	mov    rbx,rdi
   4ab7f:	mov    rax,QWORD PTR [rsp+0x30]
   4ab84:	mov    rbp,QWORD PTR [rsp+0x28]
   4ab89:	mov    rcx,r12
   4ab8c:	mov    rdi,QWORD PTR [rsp+0x38]
   4ab91:	lea    r13,[rax+rbx*1]
   4ab95:	mov    rax,QWORD PTR [rsp+0x18]
   4ab9a:	sub    rbp,r13
   4ab9d:	lea    r14,[rax+r13*1]
   4aba1:	mov    rdx,rbp
   4aba4:	mov    rsi,r14
   4aba7:	call   a0c0 <mbrtowc@plt>
   4abac:	mov    r15,rax
   4abaf:	cmp    rax,0xfffffffffffffffd
   4abb3:	jbe    4b118 <argp_usage@@Base+0x7d98>
   4abb9:	test   rbp,rbp
   4abbc:	je     4b118 <argp_usage@@Base+0x7d98>
   4abc2:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   4abc7:	test   al,al
   4abc9:	je     4b2d0 <argp_usage@@Base+0x7f50>
   4abcf:	cmp    r15,0xffffffffffffffff
   4abd3:	je     4b12b <argp_usage@@Base+0x7dab>
   4abd9:	cmp    r15,0xfffffffffffffffe
   4abdd:	je     4b35b <argp_usage@@Base+0x7fdb>
   4abe3:	cmp    DWORD PTR [rsp+0x78],0x2
   4abe8:	jne    4abf5 <argp_usage@@Base+0x7875>
   4abea:	cmp    BYTE PTR [rsp+0x51],0x0
   4abef:	jne    4b170 <argp_usage@@Base+0x7df0>
   4abf5:	mov    edi,DWORD PTR [rsp+0xac]
   4abfc:	call   a8f0 <iswprint@plt>
   4ac01:	mov    edi,0x0
   4ac06:	test   eax,eax
   4ac08:	movzx  eax,BYTE PTR [rsp+0x52]
   4ac0d:	cmove  eax,edi
   4ac10:	mov    rdi,r12
   4ac13:	add    rbx,r15
   4ac16:	mov    BYTE PTR [rsp+0x52],al
   4ac1a:	call   a890 <mbsinit@plt>
   4ac1f:	test   eax,eax
   4ac21:	je     4ab7f <argp_usage@@Base+0x77ff>
   4ac27:	movzx  ebp,BYTE PTR [rsp+0x52]
   4ac2c:	mov    rdi,rbx
   4ac2f:	mov    r9,QWORD PTR [rsp+0x30]
   4ac34:	movzx  r8d,BYTE PTR [rsp+0x7d]
   4ac3a:	movzx  r13d,BYTE PTR [rsp+0x7e]
   4ac40:	mov    edx,ebp
   4ac42:	movzx  ebx,BYTE PTR [rsp+0x7f]
   4ac47:	mov    r12,QWORD PTR [rsp+0x68]
   4ac4c:	mov    r15,QWORD PTR [rsp+0x80]
   4ac54:	mov    r10,QWORD PTR [rsp+0x70]
   4ac59:	xor    edx,0x1
   4ac5c:	mov    r11,QWORD PTR [rsp+0x28]
   4ac61:	mov    r14d,DWORD PTR [rsp+0x78]
   4ac66:	and    dl,BYTE PTR [rsp+0x8]
   4ac6a:	cmp    rdi,0x1
   4ac6e:	jbe    4a5ec <argp_usage@@Base+0x726c>
   4ac74:	mov    rcx,rdi
   4ac77:	mov    BYTE PTR [rsp+0x52],bpl
   4ac7c:	mov    rdi,QWORD PTR [rsp+0x18]
   4ac81:	xor    esi,esi
   4ac83:	movzx  ebp,BYTE PTR [rsp+0x51]
   4ac88:	add    rcx,r9
   4ac8b:	jmp    4ad41 <argp_usage@@Base+0x79c1>
   4ac90:	cmp    r14d,0x2
   4ac94:	sete   sil
   4ac98:	mov    eax,esi
   4ac9a:	test   bpl,bpl
   4ac9d:	jne    4b2aa <argp_usage@@Base+0x7f2a>
   4aca3:	mov    eax,r13d
   4aca6:	xor    eax,0x1
   4aca9:	and    al,sil
   4acac:	je     4acdd <argp_usage@@Base+0x795d>
   4acae:	cmp    r10,r15
   4acb1:	jbe    4acb8 <argp_usage@@Base+0x7938>
   4acb3:	mov    BYTE PTR [r12+r15*1],0x27
   4acb8:	lea    rsi,[r15+0x1]
   4acbc:	cmp    r10,rsi
   4acbf:	jbe    4acc7 <argp_usage@@Base+0x7947>
   4acc1:	mov    BYTE PTR [r12+r15*1+0x1],0x24
   4acc7:	lea    rsi,[r15+0x2]
   4accb:	cmp    r10,rsi
   4acce:	jbe    4acd6 <argp_usage@@Base+0x7956>
   4acd0:	mov    BYTE PTR [r12+r15*1+0x2],0x27
   4acd6:	add    r15,0x3
   4acda:	mov    r13d,eax
   4acdd:	cmp    r10,r15
   4ace0:	jbe    4ace7 <argp_usage@@Base+0x7967>
   4ace2:	mov    BYTE PTR [r12+r15*1],0x5c
   4ace7:	lea    rax,[r15+0x1]
   4aceb:	cmp    r10,rax
   4acee:	jbe    4acfd <argp_usage@@Base+0x797d>
   4acf0:	mov    eax,ebx
   4acf2:	shr    al,0x6
   4acf5:	add    eax,0x30
   4acf8:	mov    BYTE PTR [r12+r15*1+0x1],al
   4acfd:	lea    rax,[r15+0x2]
   4ad01:	cmp    r10,rax
   4ad04:	jbe    4ad16 <argp_usage@@Base+0x7996>
   4ad06:	mov    eax,ebx
   4ad08:	shr    al,0x3
   4ad0b:	and    eax,0x7
   4ad0e:	add    eax,0x30
   4ad11:	mov    BYTE PTR [r12+r15*1+0x2],al
   4ad16:	and    ebx,0x7
   4ad19:	add    r9,0x1
   4ad1d:	add    r15,0x3
   4ad21:	add    ebx,0x30
   4ad24:	cmp    r9,rcx
   4ad27:	jae    4b2c4 <argp_usage@@Base+0x7f44>
   4ad2d:	mov    esi,edx
   4ad2f:	cmp    r10,r15
   4ad32:	jbe    4ad38 <argp_usage@@Base+0x79b8>
   4ad34:	mov    BYTE PTR [r12+r15*1],bl
   4ad38:	movzx  ebx,BYTE PTR [rdi+r9*1]
   4ad3d:	add    r15,0x1
   4ad41:	test   dl,dl
   4ad43:	jne    4ac90 <argp_usage@@Base+0x7910>
   4ad49:	mov    eax,esi
   4ad4b:	xor    eax,0x1
   4ad4e:	and    eax,r13d
   4ad51:	test   r8b,r8b
   4ad54:	je     4ad64 <argp_usage@@Base+0x79e4>
   4ad56:	cmp    r10,r15
   4ad59:	jbe    4ad60 <argp_usage@@Base+0x79e0>
   4ad5b:	mov    BYTE PTR [r12+r15*1],0x5c
   4ad60:	add    r15,0x1
   4ad64:	add    r9,0x1
   4ad68:	cmp    r9,rcx
   4ad6b:	jae    4b29e <argp_usage@@Base+0x7f1e>
   4ad71:	test   al,al
   4ad73:	je     4b2e6 <argp_usage@@Base+0x7f66>
   4ad79:	cmp    r10,r15
   4ad7c:	jbe    4ad83 <argp_usage@@Base+0x7a03>
   4ad7e:	mov    BYTE PTR [r12+r15*1],0x27
   4ad83:	lea    rax,[r15+0x1]
   4ad87:	cmp    r10,rax
   4ad8a:	jbe    4ad92 <argp_usage@@Base+0x7a12>
   4ad8c:	mov    BYTE PTR [r12+r15*1+0x1],0x27
   4ad92:	add    r15,0x2
   4ad96:	xor    r8d,r8d
   4ad99:	xor    r13d,r13d
   4ad9c:	jmp    4ad2f <argp_usage@@Base+0x79af>
   4ad9e:	mov    ecx,0x7b
   4ada3:	cmp    bl,0x7b
   4ada6:	jne    4a540 <argp_usage@@Base+0x71c0>
   4adac:	cmp    r11,0xffffffffffffffff
   4adb0:	je     4af4f <argp_usage@@Base+0x7bcf>
   4adb6:	cs nop WORD PTR [rax+rax*1+0x0]
   4adc0:	cmp    r11,0x1
   4adc4:	je     4a90b <argp_usage@@Base+0x758b>
   4adca:	nop    WORD PTR [rax+rax*1+0x0]
   4add0:	cmp    r14d,0x2
   4add4:	sete   al
   4add7:	xor    ebp,ebp
   4add9:	jmp    4a601 <argp_usage@@Base+0x7281>
   4adde:	xchg   ax,ax
   4ade0:	movzx  ebx,BYTE PTR [rbx]
   4ade3:	cmp    bl,0x3f
   4ade6:	jg     4ae40 <argp_usage@@Base+0x7ac0>
   4ade8:	test   bl,bl
   4adea:	js     4a590 <argp_usage@@Base+0x7210>
   4adf0:	cmp    bl,0x3f
   4adf3:	ja     4a590 <argp_usage@@Base+0x7210>
   4adf9:	lea    rdx,[rip+0x21c70]        # 6ca70 <_obstack_memory_used@@Base+0x1fdf0>
   4ae00:	movzx  eax,bl
   4ae03:	movsxd rax,DWORD PTR [rdx+rax*4]
   4ae07:	add    rax,rdx
   4ae0a:	notrack jmp rax
   4ae0d:	nop    DWORD PTR [rax]
   4ae10:	xor    ecx,ecx
   4ae12:	jmp    4a488 <argp_usage@@Base+0x7108>
   4ae17:	nop    WORD PTR [rax+rax*1+0x0]
   4ae20:	xor    r8d,r8d
   4ae23:	xor    ebp,ebp
   4ae25:	jmp    4a547 <argp_usage@@Base+0x71c7>
   4ae2a:	mov    ecx,0x23
   4ae2f:	xor    r8d,r8d
   4ae32:	jmp    4a90b <argp_usage@@Base+0x758b>
   4ae37:	xor    ecx,ecx
   4ae39:	jmp    4a95e <argp_usage@@Base+0x75de>
   4ae3e:	xchg   ax,ax
   4ae40:	cmp    bl,0x7a
   4ae43:	jg     4aee8 <argp_usage@@Base+0x7b68>
   4ae49:	cmp    bl,0x40
   4ae4c:	je     4a590 <argp_usage@@Base+0x7210>
   4ae52:	lea    ecx,[rbx-0x41]
   4ae55:	mov    eax,0x1
   4ae5a:	movabs rdx,0x3ffffff53ffffff
   4ae64:	shl    rax,cl
   4ae67:	xor    ecx,ecx
   4ae69:	test   rax,rdx
   4ae6c:	jne    4a488 <argp_usage@@Base+0x7108>
   4ae72:	mov    ecx,ebx
   4ae74:	xor    r8d,r8d
   4ae77:	test   eax,0xa4000000
   4ae7c:	jne    4add0 <argp_usage@@Base+0x7a50>
   4ae82:	cmp    bl,0x5c
   4ae85:	jne    4a593 <argp_usage@@Base+0x7213>
   4ae8b:	movzx  edi,BYTE PTR [rsp+0x51]
   4ae90:	test   BYTE PTR [rsp+0x8],dil
   4ae95:	je     4b653 <argp_usage@@Base+0x82d3>
   4ae9b:	cmp    QWORD PTR [rsp+0x20],0x0
   4aea1:	je     4b653 <argp_usage@@Base+0x82d3>
   4aea7:	add    r9,0x1
   4aeab:	mov    eax,r13d
   4aeae:	xor    ebp,ebp
   4aeb0:	mov    ecx,0x5c
   4aeb5:	nop    DWORD PTR [rax]
   4aeb8:	test   al,al
   4aeba:	je     4a51c <argp_usage@@Base+0x719c>
   4aec0:	cmp    r10,r15
   4aec3:	jbe    4aeca <argp_usage@@Base+0x7b4a>
   4aec5:	mov    BYTE PTR [r12+r15*1],0x27
   4aeca:	lea    rax,[r15+0x1]
   4aece:	cmp    r10,rax
   4aed1:	jbe    4aed9 <argp_usage@@Base+0x7b59>
   4aed3:	mov    BYTE PTR [r12+r15*1+0x1],0x27
   4aed9:	add    r15,0x2
   4aedd:	xor    r13d,r13d
   4aee0:	jmp    4a51c <argp_usage@@Base+0x719c>
   4aee5:	nop    DWORD PTR [rax]
   4aee8:	cmp    bl,0x7d
   4aeeb:	je     4af68 <argp_usage@@Base+0x7be8>
   4aeed:	jle    4af19 <argp_usage@@Base+0x7b99>
   4aeef:	xor    edx,edx
   4aef1:	cmp    bl,0x7e
   4aef4:	jne    4a590 <argp_usage@@Base+0x7210>
   4aefa:	test   r9,r9
   4aefd:	je     4b62f <argp_usage@@Base+0x82af>
   4af03:	mov    ecx,0x7e
   4af08:	cmp    r14d,0x2
   4af0c:	mov    r8d,edx
   4af0f:	sete   al
   4af12:	xor    ebp,ebp
   4af14:	jmp    4a601 <argp_usage@@Base+0x7281>
   4af19:	mov    ecx,0x7b
   4af1e:	xor    r8d,r8d
   4af21:	cmp    bl,0x7b
   4af24:	je     4adac <argp_usage@@Base+0x7a2c>
   4af2a:	mov    ecx,0x7c
   4af2f:	cmp    bl,0x7c
   4af32:	je     4add0 <argp_usage@@Base+0x7a50>
   4af38:	jmp    4a593 <argp_usage@@Base+0x7213>
   4af3d:	nop    DWORD PTR [rax]
   4af40:	mov    ecx,0x7d
   4af45:	cmp    r11,0xffffffffffffffff
   4af49:	jne    4adc0 <argp_usage@@Base+0x7a40>
   4af4f:	mov    rax,QWORD PTR [rsp+0x18]
   4af54:	cmp    BYTE PTR [rax+0x1],0x0
   4af58:	jne    4add0 <argp_usage@@Base+0x7a50>
   4af5e:	jmp    4a90b <argp_usage@@Base+0x758b>
   4af63:	nop    DWORD PTR [rax+rax*1+0x0]
   4af68:	mov    ecx,0x7d
   4af6d:	xor    r8d,r8d
   4af70:	jmp    4adac <argp_usage@@Base+0x7a2c>
   4af75:	nop    DWORD PTR [rax]
   4af78:	cmp    bl,0x7a
   4af7b:	jg     4afc0 <argp_usage@@Base+0x7c40>
   4af7d:	cmp    bl,0x40
   4af80:	je     4a593 <argp_usage@@Base+0x7213>
   4af86:	lea    ecx,[rbx-0x41]
   4af89:	mov    eax,0x1
   4af8e:	movabs rdx,0x3ffffff53ffffff
   4af98:	shl    rax,cl
   4af9b:	mov    ecx,r8d
   4af9e:	test   rax,rdx
   4afa1:	jne    4a488 <argp_usage@@Base+0x7108>
   4afa7:	mov    ecx,ebx
   4afa9:	test   eax,0xa4000000
   4afae:	jne    4add0 <argp_usage@@Base+0x7a50>
   4afb4:	jmp    4ae82 <argp_usage@@Base+0x7b02>
   4afb9:	nop    DWORD PTR [rax+0x0]
   4afc0:	cmp    bl,0x7d
   4afc3:	je     4af40 <argp_usage@@Base+0x7bc0>
   4afc9:	jle    4afdc <argp_usage@@Base+0x7c5c>
   4afcb:	mov    edx,r8d
   4afce:	cmp    bl,0x7e
   4afd1:	je     4aefa <argp_usage@@Base+0x7b7a>
   4afd7:	jmp    4a593 <argp_usage@@Base+0x7213>
   4afdc:	mov    ecx,0x7b
   4afe1:	cmp    bl,0x7b
   4afe4:	je     4adac <argp_usage@@Base+0x7a2c>
   4afea:	mov    ecx,0x7c
   4afef:	cmp    bl,0x7c
   4aff2:	je     4add0 <argp_usage@@Base+0x7a50>
   4aff8:	jmp    4a593 <argp_usage@@Base+0x7213>
   4affd:	movzx  edi,BYTE PTR [rsp+0x51]
   4b002:	cmp    r14d,0x2
   4b006:	sete   al
   4b009:	test   r15,r15
   4b00c:	mov    edx,edi
   4b00e:	sete   cl
   4b011:	and    edx,eax
   4b013:	test   cl,dl
   4b015:	jne    4b59d <argp_usage@@Base+0x821d>
   4b01b:	xor    edi,0x1
   4b01e:	mov    edx,edi
   4b020:	and    al,dil
   4b023:	je     4b423 <argp_usage@@Base+0x80a3>
   4b029:	cmp    BYTE PTR [rsp+0x53],0x0
   4b02e:	je     4b421 <argp_usage@@Base+0x80a1>
   4b034:	cmp    BYTE PTR [rsp],0x0
   4b038:	jne    4b557 <argp_usage@@Base+0x81d7>
   4b03e:	test   r10,r10
   4b041:	mov    r14,r12
   4b044:	mov    esi,r13d
   4b047:	movzx  r12d,BYTE PTR [rsp+0x8]
   4b04d:	sete   al
   4b050:	cmp    QWORD PTR [rsp+0x48],0x0
   4b056:	setne  dl
   4b059:	and    al,dl
   4b05b:	je     4b54d <argp_usage@@Base+0x81cd>
   4b061:	mov    r13,QWORD PTR [rsp+0x48]
   4b066:	mov    BYTE PTR [rsp+0x53],al
   4b06a:	lea    rax,[rip+0x190f9]        # 6416a <_obstack_memory_used@@Base+0x174ea>
   4b071:	mov    r15d,0x1
   4b077:	mov    ebp,0x2
   4b07c:	mov    BYTE PTR [r14],0x27
   4b080:	mov    BYTE PTR [rsp+0x51],0x0
   4b085:	mov    QWORD PTR [rsp+0x20],0x1
   4b08e:	mov    QWORD PTR [rsp+0x40],rax
   4b093:	jmp    4a34e <argp_usage@@Base+0x6fce>
   4b098:	nop    DWORD PTR [rax+rax*1+0x0]
   4b0a0:	cmp    BYTE PTR [rsp+0x51],0x0
   4b0a5:	je     4aea7 <argp_usage@@Base+0x7b27>
   4b0ab:	mov    ebp,r14d
   4b0ae:	movzx  eax,BYTE PTR [rsp+0x8]
   4b0b3:	mov    r13,r10
   4b0b6:	mov    r14,r12
   4b0b9:	jmp    4a573 <argp_usage@@Base+0x71f3>
   4b0be:	xchg   ax,ax
   4b0c0:	cmp    BYTE PTR [rsp+0x51],0x0
   4b0c5:	jne    4b0ab <argp_usage@@Base+0x7d2b>
   4b0c7:	test   r10,r10
   4b0ca:	je     4b265 <argp_usage@@Base+0x7ee5>
   4b0d0:	xor    edx,edx
   4b0d2:	cmp    QWORD PTR [rsp+0x48],0x0
   4b0d8:	jne    4b265 <argp_usage@@Base+0x7ee5>
   4b0de:	mov    QWORD PTR [rsp+0x48],r10
   4b0e3:	add    r15,0x3
   4b0e7:	xor    eax,eax
   4b0e9:	xor    r13d,r13d
   4b0ec:	mov    BYTE PTR [rsp+0x53],bpl
   4b0f1:	mov    r10,rdx
   4b0f4:	mov    ecx,0x27
   4b0f9:	jmp    4a4b4 <argp_usage@@Base+0x7134>
   4b0fe:	xchg   ax,ax
   4b100:	cmp    BYTE PTR [rsp+0x51],0x0
   4b105:	jne    4b0ab <argp_usage@@Base+0x7d2b>
   4b107:	xor    ebp,ebp
   4b109:	xor    eax,eax
   4b10b:	mov    ecx,0x3f
   4b110:	jmp    4a4b4 <argp_usage@@Base+0x7134>
   4b115:	nop    DWORD PTR [rax]
   4b118:	test   r15,r15
   4b11b:	je     4ac27 <argp_usage@@Base+0x78a7>
   4b121:	cmp    r15,0xffffffffffffffff
   4b125:	jne    4abd9 <argp_usage@@Base+0x7859>
   4b12b:	mov    rdi,rbx
   4b12e:	movzx  r8d,BYTE PTR [rsp+0x7d]
   4b134:	mov    r9,QWORD PTR [rsp+0x30]
   4b139:	xor    ebp,ebp
   4b13b:	movzx  r13d,BYTE PTR [rsp+0x7e]
   4b141:	movzx  ebx,BYTE PTR [rsp+0x7f]
   4b146:	mov    r15,QWORD PTR [rsp+0x80]
   4b14e:	mov    r12,QWORD PTR [rsp+0x68]
   4b153:	mov    r10,QWORD PTR [rsp+0x70]
   4b158:	mov    r11,QWORD PTR [rsp+0x28]
   4b15d:	mov    r14d,DWORD PTR [rsp+0x78]
   4b162:	movzx  edx,BYTE PTR [rsp+0x8]
   4b167:	jmp    4ac6a <argp_usage@@Base+0x78ea>
   4b16c:	nop    DWORD PTR [rax+0x0]
   4b170:	cmp    r15,0x1
   4b174:	jbe    4abf5 <argp_usage@@Base+0x7875>
   4b17a:	mov    rax,QWORD PTR [rsp+0x18]
   4b17f:	lea    rsi,[rax+r15*1]
   4b183:	lea    rdx,[rax+r13*1+0x1]
   4b188:	add    rsi,r13
   4b18b:	jmp    4b19d <argp_usage@@Base+0x7e1d>
   4b18d:	nop    DWORD PTR [rax]
   4b190:	add    rdx,0x1
   4b194:	cmp    rsi,rdx
   4b197:	je     4abf5 <argp_usage@@Base+0x7875>
   4b19d:	movzx  eax,BYTE PTR [rdx]
   4b1a0:	sub    eax,0x5b
   4b1a3:	cmp    al,0x21
   4b1a5:	ja     4b190 <argp_usage@@Base+0x7e10>
   4b1a7:	movabs rdi,0x20000002b
   4b1b1:	bt     rdi,rax
   4b1b5:	jae    4b190 <argp_usage@@Base+0x7e10>
   4b1b7:	movzx  r12d,BYTE PTR [rsp+0x8]
   4b1bd:	mov    r14,QWORD PTR [rsp+0x68]
   4b1c2:	mov    r13,QWORD PTR [rsp+0x70]
   4b1c7:	mov    r11,QWORD PTR [rsp+0x28]
   4b1cc:	test   r12b,r12b
   4b1cf:	jne    4a7da <argp_usage@@Base+0x745a>
   4b1d5:	mov    QWORD PTR [rsp],r11
   4b1d9:	xor    r12d,r12d
   4b1dc:	and    DWORD PTR [rsp+0x54],0xfffffffd
   4b1e1:	call   a050 <__ctype_get_mb_cur_max@plt>
   4b1e6:	mov    r11,QWORD PTR [rsp]
   4b1ea:	mov    QWORD PTR [rsp+0x10],0x0
   4b1f3:	mov    QWORD PTR [rsp+0x58],rax
   4b1f8:	jmp    4a800 <argp_usage@@Base+0x7480>
   4b1fd:	nop    DWORD PTR [rax]
   4b200:	mov    rsi,r15
   4b203:	cmp    r10,r15
   4b206:	jbe    4b213 <argp_usage@@Base+0x7e93>
   4b208:	mov    eax,r13d
   4b20b:	mov    BYTE PTR [r12+rsi*1],0x5c
   4b210:	mov    r13d,eax
   4b213:	lea    r15,[rsi+0x1]
   4b217:	cmp    r14d,0x2
   4b21b:	je     4b2ee <argp_usage@@Base+0x7f6e>
   4b221:	lea    rax,[r9+0x1]
   4b225:	mov    ecx,0x30
   4b22a:	cmp    rax,r11
   4b22d:	jae    4b249 <argp_usage@@Base+0x7ec9>
   4b22f:	mov    rax,QWORD PTR [rsp+0x18]
   4b234:	movzx  eax,BYTE PTR [rax+r9*1+0x1]
   4b23a:	mov    BYTE PTR [rsp+0x52],al
   4b23e:	sub    eax,0x30
   4b241:	cmp    al,0x9
   4b243:	jbe    4b2fc <argp_usage@@Base+0x7f7c>
   4b249:	movzx  eax,BYTE PTR [rsp+0x8]
   4b24e:	xor    eax,0x1
   4b251:	or     al,dl
   4b253:	mov    eax,ebp
   4b255:	mov    ebp,0x0
   4b25a:	je     4a498 <argp_usage@@Base+0x7118>
   4b260:	jmp    4a4b4 <argp_usage@@Base+0x7134>
   4b265:	cmp    r10,r15
   4b268:	jbe    4b26f <argp_usage@@Base+0x7eef>
   4b26a:	mov    BYTE PTR [r12+r15*1],0x27
   4b26f:	lea    rax,[r15+0x1]
   4b273:	cmp    r10,rax
   4b276:	jbe    4b27e <argp_usage@@Base+0x7efe>
   4b278:	mov    BYTE PTR [r12+r15*1+0x1],0x5c
   4b27e:	lea    rax,[r15+0x2]
   4b282:	cmp    r10,rax
   4b285:	jbe    4b646 <argp_usage@@Base+0x82c6>
   4b28b:	mov    rdx,r10
   4b28e:	mov    BYTE PTR [r12+r15*1+0x2],0x27
   4b294:	mov    r10,QWORD PTR [rsp+0x48]
   4b299:	jmp    4b0de <argp_usage@@Base+0x7d5e>
   4b29e:	movzx  ebp,BYTE PTR [rsp+0x52]
   4b2a3:	mov    ecx,ebx
   4b2a5:	jmp    4aeb8 <argp_usage@@Base+0x7b38>
   4b2aa:	mov    ebp,r14d
   4b2ad:	mov    r13,r10
   4b2b0:	mov    r14,r12
   4b2b3:	jmp    4a573 <argp_usage@@Base+0x71f3>
   4b2b8:	movzx  edx,BYTE PTR [rsp+0x8]
   4b2bd:	xor    ebp,ebp
   4b2bf:	jmp    4ac74 <argp_usage@@Base+0x78f4>
   4b2c4:	movzx  ebp,BYTE PTR [rsp+0x52]
   4b2c9:	mov    ecx,ebx
   4b2cb:	jmp    4a51c <argp_usage@@Base+0x719c>
   4b2d0:	movzx  edi,BYTE PTR [r14]
   4b2d4:	mov    r15d,0x1
   4b2da:	mov    DWORD PTR [rsp+0xac],edi
   4b2e1:	jmp    4abfc <argp_usage@@Base+0x787c>
   4b2e6:	xor    r8d,r8d
   4b2e9:	jmp    4ad2f <argp_usage@@Base+0x79af>
   4b2ee:	mov    eax,ebp
   4b2f0:	mov    ecx,0x30
   4b2f5:	xor    ebp,ebp
   4b2f7:	jmp    4a4b4 <argp_usage@@Base+0x7134>
   4b2fc:	cmp    r10,r15
   4b2ff:	jbe    4b306 <argp_usage@@Base+0x7f86>
   4b301:	mov    BYTE PTR [r12+r15*1],0x30
   4b306:	lea    rax,[rsi+0x2]
   4b30a:	cmp    r10,rax
   4b30d:	jbe    4b315 <argp_usage@@Base+0x7f95>
   4b30f:	mov    BYTE PTR [r12+rsi*1+0x2],0x30
   4b315:	lea    r15,[rsi+0x3]
   4b319:	mov    ecx,0x30
   4b31e:	jmp    4b249 <argp_usage@@Base+0x7ec9>
   4b323:	mov    rdx,QWORD PTR [rsp+0x90]
   4b32b:	movzx  eax,BYTE PTR [rdx]
   4b32e:	test   al,al
   4b330:	je     4a30b <argp_usage@@Base+0x6f8b>
   4b336:	cs nop WORD PTR [rax+rax*1+0x0]
   4b340:	cmp    r13,r15
   4b343:	jbe    4b349 <argp_usage@@Base+0x7fc9>
   4b345:	mov    BYTE PTR [r14+r15*1],al
   4b349:	add    r15,0x1
   4b34d:	movzx  eax,BYTE PTR [rdx+r15*1]
   4b352:	test   al,al
   4b354:	jne    4b340 <argp_usage@@Base+0x7fc0>
   4b356:	jmp    4a30b <argp_usage@@Base+0x6f8b>
   4b35b:	mov    r11,QWORD PTR [rsp+0x28]
   4b360:	mov    rdi,rbx
   4b363:	mov    rax,r13
   4b366:	mov    r9,QWORD PTR [rsp+0x30]
   4b36b:	movzx  r8d,BYTE PTR [rsp+0x7d]
   4b371:	movzx  ebx,BYTE PTR [rsp+0x7f]
   4b376:	mov    rdx,rdi
   4b379:	movzx  r13d,BYTE PTR [rsp+0x7e]
   4b37f:	mov    r15,QWORD PTR [rsp+0x80]
   4b387:	mov    r12,QWORD PTR [rsp+0x68]
   4b38c:	mov    r10,QWORD PTR [rsp+0x70]
   4b391:	mov    r14d,DWORD PTR [rsp+0x78]
   4b396:	mov    rcx,QWORD PTR [rsp+0x18]
   4b39b:	cmp    rax,r11
   4b39e:	jb     4b3b5 <argp_usage@@Base+0x8035>
   4b3a0:	jmp    4b3be <argp_usage@@Base+0x803e>
   4b3a2:	nop    WORD PTR [rax+rax*1+0x0]
   4b3a8:	add    rdx,0x1
   4b3ac:	lea    rax,[r9+rdx*1]
   4b3b0:	cmp    r11,rax
   4b3b3:	jbe    4b3bb <argp_usage@@Base+0x803b>
   4b3b5:	cmp    BYTE PTR [rcx+rax*1],0x0
   4b3b9:	jne    4b3a8 <argp_usage@@Base+0x8028>
   4b3bb:	mov    rdi,rdx
   4b3be:	movzx  edx,BYTE PTR [rsp+0x8]
   4b3c3:	xor    ebp,ebp
   4b3c5:	jmp    4ac6a <argp_usage@@Base+0x78ea>
   4b3ca:	movzx  ecx,BYTE PTR [rsi+rax*1]
   4b3ce:	cmp    cl,0x3e
   4b3d1:	ja     4a770 <argp_usage@@Base+0x73f0>
   4b3d7:	movabs rbp,0x7000a38200000000
   4b3e1:	shr    rbp,cl
   4b3e4:	and    ebp,0x1
   4b3e7:	jne    4b4d6 <argp_usage@@Base+0x8156>
   4b3ed:	xor    eax,eax
   4b3ef:	mov    ecx,0x3f
   4b3f4:	jmp    4a601 <argp_usage@@Base+0x7281>
   4b3f9:	lea    rax,[rip+0x2074c]        # 6bb4c <_obstack_memory_used@@Base+0x1eecc>
   4b400:	mov    BYTE PTR [rsp+0x51],0x1
   4b405:	mov    r12d,0x1
   4b40b:	xor    r15d,r15d
   4b40e:	mov    QWORD PTR [rsp+0x20],0x1
   4b417:	mov    QWORD PTR [rsp+0x40],rax
   4b41c:	jmp    4a33a <argp_usage@@Base+0x6fba>
   4b421:	mov    edx,eax
   4b423:	mov    rax,QWORD PTR [rsp+0x40]
   4b428:	test   rax,rax
   4b42b:	je     4b45d <argp_usage@@Base+0x80dd>
   4b42d:	test   dl,dl
   4b42f:	je     4b45d <argp_usage@@Base+0x80dd>
   4b431:	movzx  ecx,BYTE PTR [rax]
   4b434:	test   cl,cl
   4b436:	je     4b45d <argp_usage@@Base+0x80dd>
   4b438:	mov    rsi,QWORD PTR [rsp+0x98]
   4b440:	mov    rdx,r15
   4b443:	sub    rax,r15
   4b446:	cmp    r10,rdx
   4b449:	jbe    4b44e <argp_usage@@Base+0x80ce>
   4b44b:	mov    BYTE PTR [rsi+rdx*1],cl
   4b44e:	add    rdx,0x1
   4b452:	movzx  ecx,BYTE PTR [rax+rdx*1]
   4b456:	test   cl,cl
   4b458:	jne    4b446 <argp_usage@@Base+0x80c6>
   4b45a:	mov    r15,rdx
   4b45d:	cmp    r10,r15
   4b460:	ja     4b524 <argp_usage@@Base+0x81a4>
   4b466:	mov    rax,QWORD PTR [rsp+0xb8]
   4b46e:	sub    rax,QWORD PTR fs:0x28
   4b477:	jne    4b61a <argp_usage@@Base+0x829a>
   4b47d:	add    rsp,0xc8
   4b484:	mov    rax,r15
   4b487:	pop    rbx
   4b488:	pop    rbp
   4b489:	pop    r12
   4b48b:	pop    r13
   4b48d:	pop    r14
   4b48f:	pop    r15
   4b491:	ret    
   4b492:	mov    ebp,r14d
   4b495:	mov    r13,r10
   4b498:	mov    r14,r12
   4b49b:	jmp    4a57b <argp_usage@@Base+0x71fb>
   4b4a0:	mov    esi,ebp
   4b4a2:	mov    rdi,rax
   4b4a5:	call   46810 <argp_usage@@Base+0x3490>
   4b4aa:	mov    r11,QWORD PTR [rsp]
   4b4ae:	mov    QWORD PTR [rsp+0x88],rax
   4b4b6:	jmp    4a300 <argp_usage@@Base+0x6f80>
   4b4bb:	mov    esi,ebp
   4b4bd:	mov    rdi,rax
   4b4c0:	call   46810 <argp_usage@@Base+0x3490>
   4b4c5:	mov    r11,QWORD PTR [rsp]
   4b4c9:	mov    QWORD PTR [rsp+0x90],rax
   4b4d1:	jmp    4a2d1 <argp_usage@@Base+0x6f51>
   4b4d6:	cmp    BYTE PTR [rsp+0x51],0x0
   4b4db:	jne    4b492 <argp_usage@@Base+0x8112>
   4b4dd:	cmp    r10,r15
   4b4e0:	jbe    4b4e7 <argp_usage@@Base+0x8167>
   4b4e2:	mov    BYTE PTR [r12+r15*1],0x3f
   4b4e7:	lea    rdx,[r15+0x1]
   4b4eb:	cmp    r10,rdx
   4b4ee:	jbe    4b4f6 <argp_usage@@Base+0x8176>
   4b4f0:	mov    BYTE PTR [r12+r15*1+0x1],0x22
   4b4f6:	lea    rdx,[r15+0x2]
   4b4fa:	cmp    r10,rdx
   4b4fd:	jbe    4b505 <argp_usage@@Base+0x8185>
   4b4ff:	mov    BYTE PTR [r12+r15*1+0x2],0x22
   4b505:	lea    rdx,[r15+0x3]
   4b509:	cmp    r10,rdx
   4b50c:	jbe    4b514 <argp_usage@@Base+0x8194>
   4b50e:	mov    BYTE PTR [r12+r15*1+0x3],0x3f
   4b514:	add    r15,0x4
   4b518:	xor    edx,edx
   4b51a:	xor    ebp,ebp
   4b51c:	mov    r9,rax
   4b51f:	jmp    4b249 <argp_usage@@Base+0x7ec9>
   4b524:	mov    rax,QWORD PTR [rsp+0x98]
   4b52c:	mov    BYTE PTR [rax+r15*1],0x0
   4b531:	jmp    4b466 <argp_usage@@Base+0x80e6>
   4b536:	mov    ebp,r14d
   4b539:	mov    r13,r10
   4b53c:	mov    r14,r12
   4b53f:	cmp    ebp,0x2
   4b542:	je     4a7da <argp_usage@@Base+0x745a>
   4b548:	jmp    4a57b <argp_usage@@Base+0x71fb>
   4b54d:	movzx  edx,BYTE PTR [rsp+0x53]
   4b552:	jmp    4b423 <argp_usage@@Base+0x80a3>
   4b557:	mov    QWORD PTR [rsp+0x8],r11
   4b55c:	xor    r15d,r15d
   4b55f:	mov    r14d,0x5
   4b565:	call   a050 <__ctype_get_mb_cur_max@plt>
   4b56a:	test   BYTE PTR [rsp+0x54],0x2
   4b56f:	mov    r11,QWORD PTR [rsp+0x8]
   4b574:	mov    QWORD PTR [rsp+0x20],0x1
   4b57d:	mov    QWORD PTR [rsp+0x58],rax
   4b582:	lea    rax,[rip+0x205c3]        # 6bb4c <_obstack_memory_used@@Base+0x1eecc>
   4b589:	mov    QWORD PTR [rsp+0x40],rax
   4b58e:	jne    4b5b7 <argp_usage@@Base+0x8237>
   4b590:	mov    r13,QWORD PTR [rsp+0x48]
   4b595:	mov    r14,r12
   4b598:	jmp    4a640 <argp_usage@@Base+0x72c0>
   4b59d:	mov    r14,r12
   4b5a0:	movzx  r12d,BYTE PTR [rsp+0x8]
   4b5a6:	mov    r13,r10
   4b5a9:	test   r12b,r12b
   4b5ac:	jne    4a7da <argp_usage@@Base+0x745a>
   4b5b2:	jmp    4b1d5 <argp_usage@@Base+0x7e55>
   4b5b7:	movzx  eax,BYTE PTR [rsp]
   4b5bb:	mov    r10,QWORD PTR [rsp+0x48]
   4b5c0:	mov    BYTE PTR [rsp+0x53],0x0
   4b5c5:	xor    r13d,r13d
   4b5c8:	mov    QWORD PTR [rsp+0x48],0x0
   4b5d1:	mov    BYTE PTR [rsp+0x51],al
   4b5d5:	mov    BYTE PTR [rsp+0x8],al
   4b5d9:	jmp    4a35f <argp_usage@@Base+0x6fdf>
   4b5de:	test   ebx,ebx
   4b5e0:	jne    4a6e3 <argp_usage@@Base+0x7363>
   4b5e6:	mov    r12d,0x1
   4b5ec:	jmp    4a800 <argp_usage@@Base+0x7480>
   4b5f1:	test   ebx,ebx
   4b5f3:	je     4b668 <argp_usage@@Base+0x82e8>
   4b5f5:	lea    rax,[rip+0x18b6e]        # 6416a <_obstack_memory_used@@Base+0x174ea>
   4b5fc:	mov    BYTE PTR [rsp+0x51],0x1
   4b601:	xor    r12d,r12d
   4b604:	xor    r15d,r15d
   4b607:	mov    QWORD PTR [rsp+0x20],0x1
   4b610:	mov    QWORD PTR [rsp+0x40],rax
   4b615:	jmp    4a33a <argp_usage@@Base+0x6fba>
   4b61a:	call   a0a0 <__stack_chk_fail@plt>
   4b61f:	mov    QWORD PTR [rsp+0x48],0x0
   4b628:	xor    eax,eax
   4b62a:	jmp    4b066 <argp_usage@@Base+0x7ce6>
   4b62f:	cmp    r14d,0x2
   4b633:	mov    ebp,r8d
   4b636:	mov    ecx,0x7e
   4b63b:	mov    r8d,edx
   4b63e:	sete   al
   4b641:	jmp    4a601 <argp_usage@@Base+0x7281>
   4b646:	mov    rdx,r10
   4b649:	mov    r10,QWORD PTR [rsp+0x48]
   4b64e:	jmp    4b0de <argp_usage@@Base+0x7d5e>
   4b653:	mov    ecx,0x5c
   4b658:	xor    ebp,ebp
   4b65a:	jmp    4a7a3 <argp_usage@@Base+0x7423>
   4b65f:	mov    ecx,ebx
   4b661:	xor    ebp,ebp
   4b663:	jmp    4a7a3 <argp_usage@@Base+0x7423>
   4b668:	xor    r12d,r12d
   4b66b:	jmp    4a800 <argp_usage@@Base+0x7480>
   4b670:	endbr64 
   4b674:	sub    rsp,0x48
   4b678:	movdqa xmm0,XMMWORD PTR [rip+0x33900]        # 7ef80 <obstack_alloc_failed_handler@@Base+0x148>
   4b680:	movdqa xmm1,XMMWORD PTR [rip+0x33908]        # 7ef90 <obstack_alloc_failed_handler@@Base+0x158>
   4b688:	mov    rsi,rdi
   4b68b:	mov    rax,QWORD PTR fs:0x28
   4b694:	mov    QWORD PTR [rsp+0x38],rax
   4b699:	xor    eax,eax
   4b69b:	mov    rax,QWORD PTR [rip+0x3390e]        # 7efb0 <obstack_alloc_failed_handler@@Base+0x178>
   4b6a2:	movdqa xmm2,XMMWORD PTR [rip+0x338f6]        # 7efa0 <obstack_alloc_failed_handler@@Base+0x168>
   4b6aa:	xor    edi,edi
   4b6ac:	movaps XMMWORD PTR [rsp],xmm0
   4b6b0:	mov    edx,DWORD PTR [rsp+0xc]
   4b6b4:	mov    QWORD PTR [rsp+0x30],rax
   4b6b9:	mov    eax,edx
   4b6bb:	movaps XMMWORD PTR [rsp+0x10],xmm1
   4b6c0:	not    eax
   4b6c2:	movaps XMMWORD PTR [rsp+0x20],xmm2
   4b6c7:	and    eax,0x4000000
   4b6cc:	xor    eax,edx
   4b6ce:	mov    rdx,rsp
   4b6d1:	mov    DWORD PTR [rsp+0xc],eax
   4b6d5:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   4b6da:	mov    rdx,QWORD PTR [rsp+0x38]
   4b6df:	sub    rdx,QWORD PTR fs:0x28
   4b6e8:	jne    4b6ef <argp_usage@@Base+0x836f>
   4b6ea:	add    rsp,0x48
   4b6ee:	ret    
   4b6ef:	call   a0a0 <__stack_chk_fail@plt>
   4b6f4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4b6ff:	nop
   4b700:	endbr64 
   4b704:	mov    rax,QWORD PTR [rip+0x30895]        # 7bfa0 <_obstack_memory_used@@Base+0x2f320>
   4b70b:	push   r12
   4b70d:	push   rbp
   4b70e:	push   rbx
   4b70f:	mov    rdi,QWORD PTR [rax]
   4b712:	call   57be0 <_obstack_memory_used@@Base+0xaf60>
   4b717:	test   eax,eax
   4b719:	je     4b770 <argp_usage@@Base+0x83f0>
   4b71b:	mov    edx,0x5
   4b720:	lea    rsi,[rip+0x20ce3]        # 6c40a <_obstack_memory_used@@Base+0x1f78a>
   4b727:	xor    edi,edi
   4b729:	call   a040 <dcgettext@plt>
   4b72e:	mov    rbp,QWORD PTR [rip+0x3448b]        # 7fbc0 <obstack_alloc_failed_handler@@Base+0xd88>
   4b735:	mov    r12,rax
   4b738:	call   9e40 <__errno_location@plt>
   4b73d:	mov    rbx,rax
   4b740:	test   rbp,rbp
   4b743:	je     4b788 <argp_usage@@Base+0x8408>
   4b745:	mov    rdi,rbp
   4b748:	call   4b670 <argp_usage@@Base+0x82f0>
   4b74d:	mov    esi,DWORD PTR [rbx]
   4b74f:	mov    r8,r12
   4b752:	xor    edi,edi
   4b754:	mov    rcx,rax
   4b757:	lea    rdx,[rip+0x21719]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   4b75e:	xor    eax,eax
   4b760:	call   a640 <error@plt>
   4b765:	mov    edi,DWORD PTR [rip+0x31235]        # 7c9a0 <_obstack_memory_used@@Base+0x2fd20>
   4b76b:	call   9e70 <_exit@plt>
   4b770:	mov    rax,QWORD PTR [rip+0x30871]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   4b777:	mov    rdi,QWORD PTR [rax]
   4b77a:	call   57be0 <_obstack_memory_used@@Base+0xaf60>
   4b77f:	test   eax,eax
   4b781:	jne    4b765 <argp_usage@@Base+0x83e5>
   4b783:	pop    rbx
   4b784:	pop    rbp
   4b785:	pop    r12
   4b787:	ret    
   4b788:	mov    esi,DWORD PTR [rax]
   4b78a:	mov    rcx,r12
   4b78d:	lea    rdx,[rip+0x205c3]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   4b794:	xor    edi,edi
   4b796:	xor    eax,eax
   4b798:	call   a640 <error@plt>
   4b79d:	jmp    4b765 <argp_usage@@Base+0x83e5>
   4b79f:	nop
   4b7a0:	endbr64 
   4b7a4:	mov    rsi,rdi
   4b7a7:	lea    rdx,[rip+0x30892]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   4b7ae:	xor    edi,edi
   4b7b0:	jmp    5ae20 <_obstack_memory_used@@Base+0xe1a0>
   4b7b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4b7c0:	endbr64 
   4b7c4:	push   r13
   4b7c6:	mov    r13d,edi
   4b7c9:	push   r12
   4b7cb:	push   rbp
   4b7cc:	mov    rbp,rsi
   4b7cf:	push   rbx
   4b7d0:	mov    rbx,rdx
   4b7d3:	sub    rsp,0x8
   4b7d7:	nop    WORD PTR [rax+rax*1+0x0]
   4b7e0:	mov    rdx,rbx
   4b7e3:	mov    rsi,rbp
   4b7e6:	mov    edi,r13d
   4b7e9:	call   a2a0 <read@plt>
   4b7ee:	mov    r12,rax
   4b7f1:	test   rax,rax
   4b7f4:	jns    4b820 <argp_usage@@Base+0x84a0>
   4b7f6:	call   9e40 <__errno_location@plt>
   4b7fb:	mov    eax,DWORD PTR [rax]
   4b7fd:	cmp    eax,0x4
   4b800:	je     4b7e0 <argp_usage@@Base+0x8460>
   4b802:	cmp    rbx,0x7ff00000
   4b809:	jbe    4b820 <argp_usage@@Base+0x84a0>
   4b80b:	cmp    eax,0x16
   4b80e:	jne    4b820 <argp_usage@@Base+0x84a0>
   4b810:	mov    ebx,0x7ff00000
   4b815:	jmp    4b7e0 <argp_usage@@Base+0x8460>
   4b817:	nop    WORD PTR [rax+rax*1+0x0]
   4b820:	add    rsp,0x8
   4b824:	mov    rax,r12
   4b827:	pop    rbx
   4b828:	pop    rbp
   4b829:	pop    r12
   4b82b:	pop    r13
   4b82d:	ret    
   4b82e:	xchg   ax,ax
   4b830:	endbr64 
   4b834:	push   r15
   4b836:	mov    esi,esi
   4b838:	lea    rax,[rip+0x2fb21]        # 7b360 <_obstack_memory_used@@Base+0x2e6e0>
   4b83f:	push   r14
   4b841:	push   r13
   4b843:	push   r12
   4b845:	push   rbp
   4b846:	push   rbx
   4b847:	sub    rsp,0x48
   4b84b:	mov    rax,QWORD PTR [rax+rsi*8]
   4b84f:	mov    QWORD PTR [rsp+0x8],rax
   4b854:	test   rdi,rdi
   4b857:	je     4bb7c <argp_usage@@Base+0x87fc>
   4b85d:	mov    rbx,rdi
   4b860:	xor    r13d,r13d
   4b863:	xor    r12d,r12d
   4b866:	call   9e40 <__errno_location@plt>
   4b86b:	mov    QWORD PTR [rsp],0x0
   4b873:	mov    QWORD PTR [rsp+0x28],0x0
   4b87c:	mov    rbp,rax
   4b87f:	mov    QWORD PTR [rsp+0x10],0x0
   4b888:	mov    QWORD PTR [rsp+0x20],0x0
   4b891:	jmp    4b89c <argp_usage@@Base+0x851c>
   4b893:	nop    DWORD PTR [rax+rax*1+0x0]
   4b898:	test   al,al
   4b89a:	jne    4b8d8 <argp_usage@@Base+0x8558>
   4b89c:	mov    DWORD PTR [rbp+0x0],0x0
   4b8a3:	mov    rdi,rbx
   4b8a6:	call   a470 <readdir@plt>
   4b8ab:	mov    r14,rax
   4b8ae:	test   rax,rax
   4b8b1:	je     4b960 <argp_usage@@Base+0x85e0>
   4b8b7:	lea    r15,[rax+0x13]
   4b8bb:	movzx  eax,BYTE PTR [rax+0x13]
   4b8bf:	cmp    al,0x2e
   4b8c1:	jne    4b898 <argp_usage@@Base+0x8518>
   4b8c3:	movzx  eax,BYTE PTR [r14+0x14]
   4b8c8:	cmp    al,0x2e
   4b8ca:	jne    4b898 <argp_usage@@Base+0x8518>
   4b8cc:	movzx  eax,BYTE PTR [r14+0x15]
   4b8d1:	test   al,al
   4b8d3:	je     4b89c <argp_usage@@Base+0x851c>
   4b8d5:	nop    DWORD PTR [rax]
   4b8d8:	mov    rdi,r15
   4b8db:	call   a060 <strlen@plt>
   4b8e0:	add    rax,0x1
   4b8e4:	cmp    QWORD PTR [rsp+0x8],0x0
   4b8ea:	mov    QWORD PTR [rsp+0x18],rax
   4b8ef:	je     4ba30 <argp_usage@@Base+0x86b0>
   4b8f5:	mov    rdx,rax
   4b8f8:	cmp    QWORD PTR [rsp+0x28],r13
   4b8fd:	je     4bafe <argp_usage@@Base+0x877e>
   4b903:	mov    rax,r13
   4b906:	mov    rdi,rdx
   4b909:	mov    QWORD PTR [rsp+0x38],rdx
   4b90e:	shl    rax,0x4
   4b912:	add    rax,QWORD PTR [rsp+0x10]
   4b917:	mov    QWORD PTR [rsp+0x30],rax
   4b91c:	call   a4a0 <malloc@plt>
   4b921:	mov    rdi,rax
   4b924:	test   rax,rax
   4b927:	je     4b997 <argp_usage@@Base+0x8617>
   4b929:	mov    rdx,QWORD PTR [rsp+0x38]
   4b92e:	mov    rsi,r15
   4b931:	add    r13,0x1
   4b935:	call   a420 <memcpy@plt>
   4b93a:	mov    rcx,QWORD PTR [rsp+0x30]
   4b93f:	mov    rdx,QWORD PTR [rsp+0x18]
   4b944:	add    QWORD PTR [rsp],rdx
   4b948:	mov    QWORD PTR [rcx],rax
   4b94b:	mov    rax,QWORD PTR [r14]
   4b94e:	mov    QWORD PTR [rcx+0x8],rax
   4b952:	jmp    4b89c <argp_usage@@Base+0x851c>
   4b957:	nop    WORD PTR [rax+rax*1+0x0]
   4b960:	mov    eax,DWORD PTR [rbp+0x0]
   4b963:	test   eax,eax
   4b965:	jne    4bb62 <argp_usage@@Base+0x87e2>
   4b96b:	cmp    QWORD PTR [rsp+0x8],0x0
   4b971:	je     4bac0 <argp_usage@@Base+0x8740>
   4b977:	mov    rbp,QWORD PTR [rsp]
   4b97b:	add    rbp,0x1
   4b97f:	test   r13,r13
   4b982:	jne    4b9a0 <argp_usage@@Base+0x8620>
   4b984:	mov    rdi,rbp
   4b987:	call   a4a0 <malloc@plt>
   4b98c:	mov    r12,rax
   4b98f:	mov    rbp,rax
   4b992:	test   rax,rax
   4b995:	jne    4ba06 <argp_usage@@Base+0x8686>
   4b997:	call   19130 <__sprintf_chk@plt+0xe780>
   4b99c:	nop    DWORD PTR [rax+0x0]
   4b9a0:	mov    rbx,QWORD PTR [rsp+0x10]
   4b9a5:	mov    rcx,QWORD PTR [rsp+0x8]
   4b9aa:	mov    edx,0x10
   4b9af:	mov    rsi,r13
   4b9b2:	mov    rdi,rbx
   4b9b5:	call   9f00 <qsort@plt>
   4b9ba:	mov    rdi,rbp
   4b9bd:	call   a4a0 <malloc@plt>
   4b9c2:	mov    r12,rax
   4b9c5:	test   rax,rax
   4b9c8:	je     4b997 <argp_usage@@Base+0x8617>
   4b9ca:	shl    r13,0x4
   4b9ce:	xor    ebp,ebp
   4b9d0:	add    r13,rbx
   4b9d3:	nop    DWORD PTR [rax+rax*1+0x0]
   4b9d8:	mov    r14,QWORD PTR [rbx]
   4b9db:	lea    r15,[r12+rbp*1]
   4b9df:	add    rbx,0x10
   4b9e3:	mov    rdi,r15
   4b9e6:	mov    rsi,r14
   4b9e9:	call   a030 <stpcpy@plt>
   4b9ee:	mov    rdi,r14
   4b9f1:	sub    rax,r15
   4b9f4:	lea    rbp,[rbp+rax*1+0x1]
   4b9f9:	call   9ce0 <free@plt>
   4b9fe:	cmp    r13,rbx
   4ba01:	jne    4b9d8 <argp_usage@@Base+0x8658>
   4ba03:	add    rbp,r12
   4ba06:	mov    rdi,QWORD PTR [rsp+0x10]
   4ba0b:	call   9ce0 <free@plt>
   4ba10:	mov    BYTE PTR [rbp+0x0],0x0
   4ba14:	add    rsp,0x48
   4ba18:	mov    rax,r12
   4ba1b:	pop    rbx
   4ba1c:	pop    rbp
   4ba1d:	pop    r12
   4ba1f:	pop    r13
   4ba21:	pop    r14
   4ba23:	pop    r15
   4ba25:	ret    
   4ba26:	cs nop WORD PTR [rax+rax*1+0x0]
   4ba30:	mov    rdx,QWORD PTR [rsp]
   4ba34:	mov    rax,QWORD PTR [rsp+0x20]
   4ba39:	mov    rcx,QWORD PTR [rsp+0x18]
   4ba3e:	sub    rax,rdx
   4ba41:	add    rdx,rcx
   4ba44:	mov    r14,rdx
   4ba47:	setb   dl
   4ba4a:	movzx  edx,dl
   4ba4d:	cmp    rax,rcx
   4ba50:	ja     4baa0 <argp_usage@@Base+0x8720>
   4ba52:	test   rdx,rdx
   4ba55:	jne    4b997 <argp_usage@@Base+0x8617>
   4ba5b:	test   r12,r12
   4ba5e:	je     4bb84 <argp_usage@@Base+0x8804>
   4ba64:	movabs rax,0x5555555555555553
   4ba6e:	cmp    r14,rax
   4ba71:	ja     4b997 <argp_usage@@Base+0x8617>
   4ba77:	mov    rax,r14
   4ba7a:	shr    rax,1
   4ba7d:	lea    rax,[r14+rax*1+0x1]
   4ba82:	mov    QWORD PTR [rsp+0x20],rax
   4ba87:	mov    rsi,QWORD PTR [rsp+0x20]
   4ba8c:	mov    rdi,r12
   4ba8f:	call   a570 <realloc@plt>
   4ba94:	mov    r12,rax
   4ba97:	test   rax,rax
   4ba9a:	je     4b997 <argp_usage@@Base+0x8617>
   4baa0:	mov    rdi,QWORD PTR [rsp]
   4baa4:	mov    rdx,QWORD PTR [rsp+0x18]
   4baa9:	mov    rsi,r15
   4baac:	add    rdi,r12
   4baaf:	call   a420 <memcpy@plt>
   4bab4:	mov    QWORD PTR [rsp],r14
   4bab8:	jmp    4b89c <argp_usage@@Base+0x851c>
   4babd:	nop    DWORD PTR [rax]
   4bac0:	mov    rax,QWORD PTR [rsp]
   4bac4:	lea    rbp,[r12+rax*1]
   4bac8:	cmp    QWORD PTR [rsp+0x20],rax
   4bacd:	jne    4ba10 <argp_usage@@Base+0x8690>
   4bad3:	mov    r15,QWORD PTR [rsp+0x20]
   4bad8:	mov    rdi,r12
   4badb:	lea    rbx,[r15+0x1]
   4badf:	mov    rsi,rbx
   4bae2:	call   a570 <realloc@plt>
   4bae7:	test   rax,rax
   4baea:	je     4bc01 <argp_usage@@Base+0x8881>
   4baf0:	add    r15,rax
   4baf3:	mov    r12,rax
   4baf6:	mov    rbp,r15
   4baf9:	jmp    4ba10 <argp_usage@@Base+0x8690>
   4bafe:	cmp    QWORD PTR [rsp+0x10],0x0
   4bb04:	je     4bba7 <argp_usage@@Base+0x8827>
   4bb0a:	movabs rax,0x555555555555554
   4bb14:	mov    rcx,QWORD PTR [rsp+0x28]
   4bb19:	cmp    rcx,rax
   4bb1c:	ja     4b997 <argp_usage@@Base+0x8617>
   4bb22:	mov    rax,rcx
   4bb25:	mov    rdi,QWORD PTR [rsp+0x10]
   4bb2a:	shr    rax,1
   4bb2d:	lea    rax,[rcx+rax*1+0x1]
   4bb32:	mov    rsi,rax
   4bb35:	mov    QWORD PTR [rsp+0x28],rax
   4bb3a:	shl    rsi,0x4
   4bb3e:	call   a570 <realloc@plt>
   4bb43:	mov    QWORD PTR [rsp+0x10],rax
   4bb48:	test   rax,rax
   4bb4b:	je     4b997 <argp_usage@@Base+0x8617>
   4bb51:	mov    rdi,r15
   4bb54:	call   a060 <strlen@plt>
   4bb59:	lea    rdx,[rax+0x1]
   4bb5d:	jmp    4b903 <argp_usage@@Base+0x8583>
   4bb62:	mov    rdi,QWORD PTR [rsp+0x10]
   4bb67:	call   9ce0 <free@plt>
   4bb6c:	mov    rdi,r12
   4bb6f:	xor    r12d,r12d
   4bb72:	call   9ce0 <free@plt>
   4bb77:	jmp    4ba14 <argp_usage@@Base+0x8694>
   4bb7c:	xor    r12d,r12d
   4bb7f:	jmp    4ba14 <argp_usage@@Base+0x8694>
   4bb84:	test   r14,r14
   4bb87:	je     4bb99 <argp_usage@@Base+0x8819>
   4bb89:	js     4b997 <argp_usage@@Base+0x8617>
   4bb8f:	mov    QWORD PTR [rsp+0x20],r14
   4bb94:	jmp    4ba87 <argp_usage@@Base+0x8707>
   4bb99:	mov    QWORD PTR [rsp+0x20],0x80
   4bba2:	jmp    4ba87 <argp_usage@@Base+0x8707>
   4bba7:	mov    rdx,QWORD PTR [rsp+0x28]
   4bbac:	test   rdx,rdx
   4bbaf:	je     4bbf1 <argp_usage@@Base+0x8871>
   4bbb1:	mov    rax,rdx
   4bbb4:	shr    rax,0x3c
   4bbb8:	setne  al
   4bbbb:	shl    rdx,0x4
   4bbbf:	movzx  eax,al
   4bbc2:	mov    rdi,rdx
   4bbc5:	js     4b997 <argp_usage@@Base+0x8617>
   4bbcb:	test   rax,rax
   4bbce:	jne    4b997 <argp_usage@@Base+0x8617>
   4bbd4:	call   a4a0 <malloc@plt>
   4bbd9:	mov    QWORD PTR [rsp+0x10],rax
   4bbde:	test   rax,rax
   4bbe1:	je     4b997 <argp_usage@@Base+0x8617>
   4bbe7:	mov    rdx,QWORD PTR [rsp+0x18]
   4bbec:	jmp    4b903 <argp_usage@@Base+0x8583>
   4bbf1:	mov    QWORD PTR [rsp+0x28],0x8
   4bbfa:	mov    edi,0x80
   4bbff:	jmp    4bbd4 <argp_usage@@Base+0x8854>
   4bc01:	test   rbx,rbx
   4bc04:	jne    4b997 <argp_usage@@Base+0x8617>
   4bc0a:	test   r12,r12
   4bc0d:	je     4b997 <argp_usage@@Base+0x8617>
   4bc13:	xor    r12d,r12d
   4bc16:	or     rbp,0xffffffffffffffff
   4bc1a:	jmp    4ba10 <argp_usage@@Base+0x8690>
   4bc1f:	nop
   4bc20:	endbr64 
   4bc24:	sub    rsp,0xe8
   4bc2b:	mov    r10,rdi
   4bc2e:	mov    QWORD PTR [rsp+0x38],rsi
   4bc33:	mov    QWORD PTR [rsp+0x40],rdx
   4bc38:	mov    QWORD PTR [rsp+0x48],rcx
   4bc3d:	mov    QWORD PTR [rsp+0x50],r8
   4bc42:	mov    QWORD PTR [rsp+0x58],r9
   4bc47:	test   al,al
   4bc49:	je     4bc85 <argp_usage@@Base+0x8905>
   4bc4b:	movaps XMMWORD PTR [rsp+0x60],xmm0
   4bc50:	movaps XMMWORD PTR [rsp+0x70],xmm1
   4bc55:	movaps XMMWORD PTR [rsp+0x80],xmm2
   4bc5d:	movaps XMMWORD PTR [rsp+0x90],xmm3
   4bc65:	movaps XMMWORD PTR [rsp+0xa0],xmm4
   4bc6d:	movaps XMMWORD PTR [rsp+0xb0],xmm5
   4bc75:	movaps XMMWORD PTR [rsp+0xc0],xmm6
   4bc7d:	movaps XMMWORD PTR [rsp+0xd0],xmm7
   4bc85:	mov    rax,QWORD PTR fs:0x28
   4bc8e:	mov    QWORD PTR [rsp+0x28],rax
   4bc93:	xor    eax,eax
   4bc95:	lea    rax,[rsp+0xf0]
   4bc9d:	xor    edi,edi
   4bc9f:	mov    DWORD PTR [rsp+0x10],0x8
   4bca7:	mov    QWORD PTR [rsp+0x18],rax
   4bcac:	lea    rax,[rsp+0x30]
   4bcb1:	mov    QWORD PTR [rsp+0x20],rax
   4bcb6:	movzx  eax,BYTE PTR [r10]
   4bcba:	mov    DWORD PTR [rsp+0x14],0x30
   4bcc2:	test   al,al
   4bcc4:	jne    4bce5 <argp_usage@@Base+0x8965>
   4bcc6:	jmp    4bd40 <argp_usage@@Base+0x89c0>
   4bcc8:	nop    DWORD PTR [rax+rax*1+0x0]
   4bcd0:	cmp    BYTE PTR [r10+rdi*2+0x1],0x73
   4bcd6:	jne    4bce9 <argp_usage@@Base+0x8969>
   4bcd8:	add    rdi,0x1
   4bcdc:	movzx  eax,BYTE PTR [r10+rdi*2]
   4bce1:	test   al,al
   4bce3:	je     4bd40 <argp_usage@@Base+0x89c0>
   4bce5:	cmp    al,0x25
   4bce7:	je     4bcd0 <argp_usage@@Base+0x8950>
   4bce9:	lea    rcx,[rsp+0x10]
   4bcee:	lea    rdi,[rsp+0x8]
   4bcf3:	mov    rdx,r10
   4bcf6:	mov    esi,0x1
   4bcfb:	call   a4f0 <__vasprintf_chk@plt>
   4bd00:	mov    r8d,eax
   4bd03:	mov    rax,QWORD PTR [rsp+0x8]
   4bd08:	test   r8d,r8d
   4bd0b:	js     4bd28 <argp_usage@@Base+0x89a8>
   4bd0d:	mov    rdx,QWORD PTR [rsp+0x28]
   4bd12:	sub    rdx,QWORD PTR fs:0x28
   4bd1b:	jne    4bd51 <argp_usage@@Base+0x89d1>
   4bd1d:	add    rsp,0xe8
   4bd24:	ret    
   4bd25:	nop    DWORD PTR [rax]
   4bd28:	call   9e40 <__errno_location@plt>
   4bd2d:	cmp    DWORD PTR [rax],0xc
   4bd30:	je     4bd4c <argp_usage@@Base+0x89cc>
   4bd32:	xor    eax,eax
   4bd34:	jmp    4bd0d <argp_usage@@Base+0x898d>
   4bd36:	cs nop WORD PTR [rax+rax*1+0x0]
   4bd40:	lea    rsi,[rsp+0x10]
   4bd45:	call   57c50 <_obstack_memory_used@@Base+0xafd0>
   4bd4a:	jmp    4bd0d <argp_usage@@Base+0x898d>
   4bd4c:	call   19130 <__sprintf_chk@plt+0xe780>
   4bd51:	call   a0a0 <__stack_chk_fail@plt>
   4bd56:	cs nop WORD PTR [rax+rax*1+0x0]
   4bd60:	endbr64 
   4bd64:	push   r15
   4bd66:	push   r14
   4bd68:	push   r13
   4bd6a:	push   r12
   4bd6c:	push   rbp
   4bd6d:	mov    rbp,rdi
   4bd70:	push   rbx
   4bd71:	sub    rsp,0x18
   4bd75:	call   a090 <chdir@plt>
   4bd7a:	mov    r12d,eax
   4bd7d:	test   eax,eax
   4bd7f:	je     4bed0 <argp_usage@@Base+0x8b50>
   4bd85:	call   9e40 <__errno_location@plt>
   4bd8a:	cmp    DWORD PTR [rax],0x24
   4bd8d:	mov    QWORD PTR [rsp+0x8],rax
   4bd92:	jne    4bed0 <argp_usage@@Base+0x8b50>
   4bd98:	mov    rdi,rbp
   4bd9b:	call   a060 <strlen@plt>
   4bda0:	mov    rbx,rax
   4bda3:	test   rax,rax
   4bda6:	je     4c083 <argp_usage@@Base+0x8d03>
   4bdac:	cmp    rax,0xfff
   4bdb2:	jbe    4c0a2 <argp_usage@@Base+0x8d22>
   4bdb8:	lea    r12,[rip+0x200c2]        # 6be81 <_obstack_memory_used@@Base+0x1f201>
   4bdbf:	mov    rdi,rbp
   4bdc2:	mov    rsi,r12
   4bdc5:	call   a240 <strspn@plt>
   4bdca:	mov    r15,rax
   4bdcd:	cmp    rax,0x2
   4bdd1:	je     4bf18 <argp_usage@@Base+0x8b98>
   4bdd7:	mov    r14,rbp
   4bdda:	mov    r13d,0xffffff9c
   4bde0:	test   rax,rax
   4bde3:	jne    4bee8 <argp_usage@@Base+0x8b68>
   4bde9:	cmp    BYTE PTR [r14],0x2f
   4bded:	je     4c0c1 <argp_usage@@Base+0x8d41>
   4bdf3:	add    rbp,rbx
   4bdf6:	cmp    r14,rbp
   4bdf9:	ja     4c0e0 <argp_usage@@Base+0x8d60>
   4bdff:	mov    rax,rbp
   4be02:	sub    rax,r14
   4be05:	cmp    rax,0xfff
   4be0b:	jg     4be43 <argp_usage@@Base+0x8ac3>
   4be0d:	jmp    4bf73 <argp_usage@@Base+0x8bf3>
   4be12:	nop    WORD PTR [rax+rax*1+0x0]
   4be18:	mov    BYTE PTR [rbx],0x2f
   4be1b:	add    rbx,0x1
   4be1f:	mov    rsi,r12
   4be22:	mov    rdi,rbx
   4be25:	call   a240 <strspn@plt>
   4be2a:	lea    r14,[rbx+rax*1]
   4be2e:	mov    rax,rbp
   4be31:	sub    rax,r14
   4be34:	cmp    rax,0xfff
   4be3a:	jle    4bf80 <argp_usage@@Base+0x8c00>
   4be40:	mov    r13d,r15d
   4be43:	mov    edx,0x1000
   4be48:	mov    esi,0x2f
   4be4d:	mov    rdi,r14
   4be50:	call   a670 <memrchr@plt>
   4be55:	mov    rbx,rax
   4be58:	test   rax,rax
   4be5b:	je     4bfd0 <argp_usage@@Base+0x8c50>
   4be61:	mov    BYTE PTR [rax],0x0
   4be64:	sub    rax,r14
   4be67:	cmp    rax,0xfff
   4be6d:	jg     4c05c <argp_usage@@Base+0x8cdc>
   4be73:	mov    edx,0x10900
   4be78:	mov    rsi,r14
   4be7b:	mov    edi,r13d
   4be7e:	xor    eax,eax
   4be80:	call   a080 <openat@plt>
   4be85:	mov    r15d,eax
   4be88:	test   eax,eax
   4be8a:	js     4beb0 <argp_usage@@Base+0x8b30>
   4be8c:	test   r13d,r13d
   4be8f:	js     4be18 <argp_usage@@Base+0x8a98>
   4be91:	mov    edi,r13d
   4be94:	call   a200 <close@plt>
   4be99:	test   eax,eax
   4be9b:	je     4be18 <argp_usage@@Base+0x8a98>
   4bea1:	call   456c0 <argp_usage@@Base+0x2340>
   4bea6:	cs nop WORD PTR [rax+rax*1+0x0]
   4beb0:	mov    BYTE PTR [rbx],0x2f
   4beb3:	mov    rax,QWORD PTR [rsp+0x8]
   4beb8:	mov    ebx,DWORD PTR [rax]
   4beba:	test   r13d,r13d
   4bebd:	jns    4c017 <argp_usage@@Base+0x8c97>
   4bec3:	mov    rax,QWORD PTR [rsp+0x8]
   4bec8:	mov    r12d,0xffffffff
   4bece:	mov    DWORD PTR [rax],ebx
   4bed0:	add    rsp,0x18
   4bed4:	mov    eax,r12d
   4bed7:	pop    rbx
   4bed8:	pop    rbp
   4bed9:	pop    r12
   4bedb:	pop    r13
   4bedd:	pop    r14
   4bedf:	pop    r15
   4bee1:	ret    
   4bee2:	nop    WORD PTR [rax+rax*1+0x0]
   4bee8:	mov    edx,0x10900
   4beed:	mov    rsi,r12
   4bef0:	mov    edi,0xffffff9c
   4bef5:	xor    eax,eax
   4bef7:	call   a080 <openat@plt>
   4befc:	mov    r13d,eax
   4beff:	test   eax,eax
   4bf01:	js     4c050 <argp_usage@@Base+0x8cd0>
   4bf07:	lea    r14,[rbp+r15*1+0x0]
   4bf0c:	jmp    4bde9 <argp_usage@@Base+0x8a69>
   4bf11:	nop    DWORD PTR [rax+0x0]
   4bf18:	lea    rdx,[rbx-0x3]
   4bf1c:	lea    rdi,[rbp+0x3]
   4bf20:	mov    esi,0x2f
   4bf25:	call   a280 <memchr@plt>
   4bf2a:	mov    r14,rax
   4bf2d:	test   rax,rax
   4bf30:	je     4c030 <argp_usage@@Base+0x8cb0>
   4bf36:	mov    BYTE PTR [rax],0x0
   4bf39:	mov    edx,0x10900
   4bf3e:	mov    rsi,rbp
   4bf41:	mov    edi,0xffffff9c
   4bf46:	xor    eax,eax
   4bf48:	call   a080 <openat@plt>
   4bf4d:	mov    BYTE PTR [r14],0x2f
   4bf51:	mov    r13d,eax
   4bf54:	test   eax,eax
   4bf56:	js     4c050 <argp_usage@@Base+0x8cd0>
   4bf5c:	add    r14,0x1
   4bf60:	mov    rsi,r12
   4bf63:	mov    rdi,r14
   4bf66:	call   a240 <strspn@plt>
   4bf6b:	add    r14,rax
   4bf6e:	jmp    4bde9 <argp_usage@@Base+0x8a69>
   4bf73:	mov    r15d,r13d
   4bf76:	cs nop WORD PTR [rax+rax*1+0x0]
   4bf80:	cmp    rbp,r14
   4bf83:	jbe    4bff0 <argp_usage@@Base+0x8c70>
   4bf85:	mov    edx,0x10900
   4bf8a:	mov    rsi,r14
   4bf8d:	mov    edi,r15d
   4bf90:	xor    eax,eax
   4bf92:	call   a080 <openat@plt>
   4bf97:	mov    r13d,eax
   4bf9a:	test   eax,eax
   4bf9c:	js     4c07b <argp_usage@@Base+0x8cfb>
   4bfa2:	test   r15d,r15d
   4bfa5:	jns    4c03b <argp_usage@@Base+0x8cbb>
   4bfab:	mov    edi,r13d
   4bfae:	call   a540 <fchdir@plt>
   4bfb3:	test   eax,eax
   4bfb5:	jne    4c010 <argp_usage@@Base+0x8c90>
   4bfb7:	mov    edi,r13d
   4bfba:	call   a200 <close@plt>
   4bfbf:	test   eax,eax
   4bfc1:	jne    4bea1 <argp_usage@@Base+0x8b21>
   4bfc7:	xor    r12d,r12d
   4bfca:	jmp    4bed0 <argp_usage@@Base+0x8b50>
   4bfcf:	nop
   4bfd0:	mov    rax,QWORD PTR [rsp+0x8]
   4bfd5:	mov    r12d,0xffffffff
   4bfdb:	mov    DWORD PTR [rax],0x24
   4bfe1:	jmp    4bed0 <argp_usage@@Base+0x8b50>
   4bfe6:	cs nop WORD PTR [rax+rax*1+0x0]
   4bff0:	mov    edi,r15d
   4bff3:	mov    r13d,r15d
   4bff6:	call   a540 <fchdir@plt>
   4bffb:	test   eax,eax
   4bffd:	jne    4beb3 <argp_usage@@Base+0x8b33>
   4c003:	test   r15d,r15d
   4c006:	js     4bfc7 <argp_usage@@Base+0x8c47>
   4c008:	jmp    4bfb7 <argp_usage@@Base+0x8c37>
   4c00a:	nop    WORD PTR [rax+rax*1+0x0]
   4c010:	mov    rax,QWORD PTR [rsp+0x8]
   4c015:	mov    ebx,DWORD PTR [rax]
   4c017:	mov    edi,r13d
   4c01a:	call   a200 <close@plt>
   4c01f:	test   eax,eax
   4c021:	je     4bec3 <argp_usage@@Base+0x8b43>
   4c027:	jmp    4bea1 <argp_usage@@Base+0x8b21>
   4c02c:	nop    DWORD PTR [rax+0x0]
   4c030:	mov    r12d,0xffffffff
   4c036:	jmp    4bed0 <argp_usage@@Base+0x8b50>
   4c03b:	mov    edi,r15d
   4c03e:	call   a200 <close@plt>
   4c043:	test   eax,eax
   4c045:	je     4bfab <argp_usage@@Base+0x8c2b>
   4c04b:	jmp    4bea1 <argp_usage@@Base+0x8b21>
   4c050:	mov    rax,QWORD PTR [rsp+0x8]
   4c055:	mov    ebx,DWORD PTR [rax]
   4c057:	jmp    4bec3 <argp_usage@@Base+0x8b43>
   4c05c:	lea    rcx,[rip+0x20c6d]        # 6ccd0 <_obstack_memory_used@@Base+0x20050>
   4c063:	mov    edx,0xb3
   4c068:	lea    rsi,[rip+0x201bc]        # 6c22b <_obstack_memory_used@@Base+0x1f5ab>
   4c06f:	lea    rdi,[rip+0x203cf]        # 6c445 <_obstack_memory_used@@Base+0x1f7c5>
   4c076:	call   a190 <__assert_fail@plt>
   4c07b:	mov    r13d,r15d
   4c07e:	jmp    4beb3 <argp_usage@@Base+0x8b33>
   4c083:	lea    rcx,[rip+0x20c46]        # 6ccd0 <_obstack_memory_used@@Base+0x20050>
   4c08a:	mov    edx,0x7e
   4c08f:	lea    rsi,[rip+0x20195]        # 6c22b <_obstack_memory_used@@Base+0x1f5ab>
   4c096:	lea    rdi,[rip+0x20379]        # 6c416 <_obstack_memory_used@@Base+0x1f796>
   4c09d:	call   a190 <__assert_fail@plt>
   4c0a2:	lea    rcx,[rip+0x20c27]        # 6ccd0 <_obstack_memory_used@@Base+0x20050>
   4c0a9:	mov    edx,0x7f
   4c0ae:	lea    rsi,[rip+0x20176]        # 6c22b <_obstack_memory_used@@Base+0x1f5ab>
   4c0b5:	lea    rdi,[rip+0x20362]        # 6c41e <_obstack_memory_used@@Base+0x1f79e>
   4c0bc:	call   a190 <__assert_fail@plt>
   4c0c1:	lea    rcx,[rip+0x20c08]        # 6ccd0 <_obstack_memory_used@@Base+0x20050>
   4c0c8:	mov    edx,0xa2
   4c0cd:	lea    rsi,[rip+0x20157]        # 6c22b <_obstack_memory_used@@Base+0x1f5ab>
   4c0d4:	lea    rdi,[rip+0x2034f]        # 6c42a <_obstack_memory_used@@Base+0x1f7aa>
   4c0db:	call   a190 <__assert_fail@plt>
   4c0e0:	lea    rcx,[rip+0x20be9]        # 6ccd0 <_obstack_memory_used@@Base+0x20050>
   4c0e7:	mov    edx,0xa3
   4c0ec:	lea    rsi,[rip+0x20138]        # 6c22b <_obstack_memory_used@@Base+0x1f5ab>
   4c0f3:	lea    rdi,[rip+0x2033c]        # 6c436 <_obstack_memory_used@@Base+0x1f7b6>
   4c0fa:	call   a190 <__assert_fail@plt>
   4c0ff:	nop
   4c100:	endbr64 
   4c104:	push   r15
   4c106:	push   r14
   4c108:	mov    r14,rdx
   4c10b:	push   r13
   4c10d:	mov    r13,rsi
   4c110:	push   r12
   4c112:	push   rbp
   4c113:	mov    ebp,edi
   4c115:	push   rbx
   4c116:	sub    rsp,0xfe8
   4c11d:	mov    rax,QWORD PTR fs:0x28
   4c126:	mov    QWORD PTR [rsp+0xfd8],rax
   4c12e:	xor    eax,eax
   4c130:	cmp    BYTE PTR [rsi],0x0
   4c133:	je     4c280 <argp_usage@@Base+0x8f00>
   4c139:	lea    rbx,[rsp+0x10]
   4c13e:	mov    rdx,rsi
   4c141:	mov    esi,edi
   4c143:	mov    rdi,rbx
   4c146:	call   433a0 <argp_usage@@Base+0x20>
   4c14b:	mov    r15,rax
   4c14e:	test   rax,rax
   4c151:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c157:	mov    rsi,r14
   4c15a:	mov    rdi,rax
   4c15d:	call   9d70 <setfilecon@plt>
   4c162:	mov    r12d,eax
   4c165:	call   9e40 <__errno_location@plt>
   4c16a:	mov    rdx,rax
   4c16d:	mov    eax,DWORD PTR [rax]
   4c16f:	cmp    r15,rbx
   4c172:	je     4c18c <argp_usage@@Base+0x8e0c>
   4c174:	mov    rdi,r15
   4c177:	mov    DWORD PTR [rsp+0xc],eax
   4c17b:	mov    QWORD PTR [rsp],rdx
   4c17f:	call   9ce0 <free@plt>
   4c184:	mov    eax,DWORD PTR [rsp+0xc]
   4c188:	mov    rdx,QWORD PTR [rsp]
   4c18c:	cmp    r12d,0xffffffff
   4c190:	jne    4c1b8 <argp_usage@@Base+0x8e38>
   4c192:	cmp    eax,0x14
   4c195:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c197:	cmp    eax,0x2
   4c19a:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c19c:	cmp    eax,0x1
   4c19f:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c1a1:	cmp    eax,0xd
   4c1a4:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c1a6:	cmp    eax,0x26
   4c1a9:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c1ab:	cmp    eax,0x5f
   4c1ae:	je     4c1e8 <argp_usage@@Base+0x8e68>
   4c1b0:	mov    DWORD PTR [rdx],eax
   4c1b2:	nop    WORD PTR [rax+rax*1+0x0]
   4c1b8:	mov    rax,QWORD PTR [rsp+0xfd8]
   4c1c0:	sub    rax,QWORD PTR fs:0x28
   4c1c9:	jne    4c351 <argp_usage@@Base+0x8fd1>
   4c1cf:	add    rsp,0xfe8
   4c1d6:	mov    eax,r12d
   4c1d9:	pop    rbx
   4c1da:	pop    rbp
   4c1db:	pop    r12
   4c1dd:	pop    r13
   4c1df:	pop    r14
   4c1e1:	pop    r15
   4c1e3:	ret    
   4c1e4:	nop    DWORD PTR [rax+0x0]
   4c1e8:	mov    esi,0x80000
   4c1ed:	lea    rdi,[rip+0x1b400]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   4c1f4:	xor    eax,eax
   4c1f6:	xor    ebx,ebx
   4c1f8:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   4c1fd:	mov    r15d,eax
   4c200:	test   eax,eax
   4c202:	js     4c330 <argp_usage@@Base+0x8fb0>
   4c208:	test   ebp,ebp
   4c20a:	js     4c215 <argp_usage@@Base+0x8e95>
   4c20c:	cmp    ebp,r15d
   4c20f:	je     4c300 <argp_usage@@Base+0x8f80>
   4c215:	mov    edi,ebp
   4c217:	call   a540 <fchdir@plt>
   4c21c:	mov    ebp,eax
   4c21e:	test   eax,eax
   4c220:	jne    4c2a8 <argp_usage@@Base+0x8f28>
   4c226:	mov    rsi,r14
   4c229:	mov    rdi,r13
   4c22c:	call   9d70 <setfilecon@plt>
   4c231:	mov    r12d,eax
   4c234:	cmp    eax,0xffffffff
   4c237:	jne    4c240 <argp_usage@@Base+0x8ec0>
   4c239:	call   9e40 <__errno_location@plt>
   4c23e:	mov    ebp,DWORD PTR [rax]
   4c240:	test   r15d,r15d
   4c243:	js     4c2e0 <argp_usage@@Base+0x8f60>
   4c249:	mov    edi,r15d
   4c24c:	call   a540 <fchdir@plt>
   4c251:	test   eax,eax
   4c253:	jne    4c2f0 <argp_usage@@Base+0x8f70>
   4c259:	mov    edi,r15d
   4c25c:	call   a200 <close@plt>
   4c261:	mov    rdi,rbx
   4c264:	call   9ce0 <free@plt>
   4c269:	test   ebp,ebp
   4c26b:	je     4c1b8 <argp_usage@@Base+0x8e38>
   4c271:	call   9e40 <__errno_location@plt>
   4c276:	mov    DWORD PTR [rax],ebp
   4c278:	jmp    4c1b8 <argp_usage@@Base+0x8e38>
   4c27d:	nop    DWORD PTR [rax]
   4c280:	mov    rsi,rdx
   4c283:	lea    rdi,[rsp+0x10]
   4c288:	mov    BYTE PTR [rsp+0x10],0x0
   4c28d:	call   9d70 <setfilecon@plt>
   4c292:	mov    r12d,eax
   4c295:	call   9e40 <__errno_location@plt>
   4c29a:	mov    rdx,rax
   4c29d:	mov    eax,DWORD PTR [rax]
   4c29f:	jmp    4c18c <argp_usage@@Base+0x8e0c>
   4c2a4:	nop    DWORD PTR [rax+0x0]
   4c2a8:	call   9e40 <__errno_location@plt>
   4c2ad:	mov    r12d,DWORD PTR [rax]
   4c2b0:	mov    rbp,rax
   4c2b3:	test   r15d,r15d
   4c2b6:	js     4c2c0 <argp_usage@@Base+0x8f40>
   4c2b8:	mov    edi,r15d
   4c2bb:	call   a200 <close@plt>
   4c2c0:	mov    rdi,rbx
   4c2c3:	call   9ce0 <free@plt>
   4c2c8:	mov    DWORD PTR [rbp+0x0],r12d
   4c2cc:	mov    r12d,0xffffffff
   4c2d2:	jmp    4c1b8 <argp_usage@@Base+0x8e38>
   4c2d7:	nop    WORD PTR [rax+rax*1+0x0]
   4c2e0:	mov    rdi,rbx
   4c2e3:	call   4bd60 <argp_usage@@Base+0x89e0>
   4c2e8:	test   eax,eax
   4c2ea:	je     4c261 <argp_usage@@Base+0x8ee1>
   4c2f0:	call   9e40 <__errno_location@plt>
   4c2f5:	mov    edi,DWORD PTR [rax]
   4c2f7:	call   495d0 <argp_usage@@Base+0x6250>
   4c2fc:	nop    DWORD PTR [rax+0x0]
   4c300:	mov    edi,r15d
   4c303:	mov    r12d,0xffffffff
   4c309:	call   a200 <close@plt>
   4c30e:	mov    rdi,rbx
   4c311:	call   9ce0 <free@plt>
   4c316:	call   9e40 <__errno_location@plt>
   4c31b:	mov    DWORD PTR [rax],0x9
   4c321:	jmp    4c1b8 <argp_usage@@Base+0x8e38>
   4c326:	cs nop WORD PTR [rax+rax*1+0x0]
   4c330:	xor    esi,esi
   4c332:	xor    edi,edi
   4c334:	call   a1f0 <getcwd@plt>
   4c339:	mov    rbx,rax
   4c33c:	test   rax,rax
   4c33f:	jne    4c208 <argp_usage@@Base+0x8e88>
   4c345:	call   9e40 <__errno_location@plt>
   4c34a:	mov    edi,DWORD PTR [rax]
   4c34c:	call   49590 <argp_usage@@Base+0x6210>
   4c351:	call   a0a0 <__stack_chk_fail@plt>
   4c356:	cs nop WORD PTR [rax+rax*1+0x0]
   4c360:	endbr64 
   4c364:	push   r15
   4c366:	push   r14
   4c368:	mov    r14,rdx
   4c36b:	push   r13
   4c36d:	mov    r13,rsi
   4c370:	push   r12
   4c372:	push   rbp
   4c373:	mov    ebp,edi
   4c375:	push   rbx
   4c376:	sub    rsp,0xfe8
   4c37d:	mov    rax,QWORD PTR fs:0x28
   4c386:	mov    QWORD PTR [rsp+0xfd8],rax
   4c38e:	xor    eax,eax
   4c390:	cmp    BYTE PTR [rsi],0x0
   4c393:	je     4c4e0 <argp_usage@@Base+0x9160>
   4c399:	lea    rbx,[rsp+0x10]
   4c39e:	mov    rdx,rsi
   4c3a1:	mov    esi,edi
   4c3a3:	mov    rdi,rbx
   4c3a6:	call   433a0 <argp_usage@@Base+0x20>
   4c3ab:	mov    r15,rax
   4c3ae:	test   rax,rax
   4c3b1:	je     4c448 <argp_usage@@Base+0x90c8>
   4c3b7:	mov    rsi,r14
   4c3ba:	mov    rdi,rax
   4c3bd:	call   a290 <lsetfilecon@plt>
   4c3c2:	mov    r12d,eax
   4c3c5:	call   9e40 <__errno_location@plt>
   4c3ca:	mov    rdx,rax
   4c3cd:	mov    eax,DWORD PTR [rax]
   4c3cf:	cmp    r15,rbx
   4c3d2:	je     4c3ec <argp_usage@@Base+0x906c>
   4c3d4:	mov    rdi,r15
   4c3d7:	mov    DWORD PTR [rsp+0xc],eax
   4c3db:	mov    QWORD PTR [rsp],rdx
   4c3df:	call   9ce0 <free@plt>
   4c3e4:	mov    eax,DWORD PTR [rsp+0xc]
   4c3e8:	mov    rdx,QWORD PTR [rsp]
   4c3ec:	cmp    r12d,0xffffffff
   4c3f0:	jne    4c418 <argp_usage@@Base+0x9098>
   4c3f2:	cmp    eax,0x14
   4c3f5:	je     4c448 <argp_usage@@Base+0x90c8>
   4c3f7:	cmp    eax,0x2
   4c3fa:	je     4c448 <argp_usage@@Base+0x90c8>
   4c3fc:	cmp    eax,0x1
   4c3ff:	je     4c448 <argp_usage@@Base+0x90c8>
   4c401:	cmp    eax,0xd
   4c404:	je     4c448 <argp_usage@@Base+0x90c8>
   4c406:	cmp    eax,0x26
   4c409:	je     4c448 <argp_usage@@Base+0x90c8>
   4c40b:	cmp    eax,0x5f
   4c40e:	je     4c448 <argp_usage@@Base+0x90c8>
   4c410:	mov    DWORD PTR [rdx],eax
   4c412:	nop    WORD PTR [rax+rax*1+0x0]
   4c418:	mov    rax,QWORD PTR [rsp+0xfd8]
   4c420:	sub    rax,QWORD PTR fs:0x28
   4c429:	jne    4c5b1 <argp_usage@@Base+0x9231>
   4c42f:	add    rsp,0xfe8
   4c436:	mov    eax,r12d
   4c439:	pop    rbx
   4c43a:	pop    rbp
   4c43b:	pop    r12
   4c43d:	pop    r13
   4c43f:	pop    r14
   4c441:	pop    r15
   4c443:	ret    
   4c444:	nop    DWORD PTR [rax+0x0]
   4c448:	mov    esi,0x80000
   4c44d:	lea    rdi,[rip+0x1b1a0]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   4c454:	xor    eax,eax
   4c456:	xor    ebx,ebx
   4c458:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   4c45d:	mov    r15d,eax
   4c460:	test   eax,eax
   4c462:	js     4c590 <argp_usage@@Base+0x9210>
   4c468:	test   ebp,ebp
   4c46a:	js     4c475 <argp_usage@@Base+0x90f5>
   4c46c:	cmp    ebp,r15d
   4c46f:	je     4c560 <argp_usage@@Base+0x91e0>
   4c475:	mov    edi,ebp
   4c477:	call   a540 <fchdir@plt>
   4c47c:	mov    ebp,eax
   4c47e:	test   eax,eax
   4c480:	jne    4c508 <argp_usage@@Base+0x9188>
   4c486:	mov    rsi,r14
   4c489:	mov    rdi,r13
   4c48c:	call   a290 <lsetfilecon@plt>
   4c491:	mov    r12d,eax
   4c494:	cmp    eax,0xffffffff
   4c497:	jne    4c4a0 <argp_usage@@Base+0x9120>
   4c499:	call   9e40 <__errno_location@plt>
   4c49e:	mov    ebp,DWORD PTR [rax]
   4c4a0:	test   r15d,r15d
   4c4a3:	js     4c540 <argp_usage@@Base+0x91c0>
   4c4a9:	mov    edi,r15d
   4c4ac:	call   a540 <fchdir@plt>
   4c4b1:	test   eax,eax
   4c4b3:	jne    4c550 <argp_usage@@Base+0x91d0>
   4c4b9:	mov    edi,r15d
   4c4bc:	call   a200 <close@plt>
   4c4c1:	mov    rdi,rbx
   4c4c4:	call   9ce0 <free@plt>
   4c4c9:	test   ebp,ebp
   4c4cb:	je     4c418 <argp_usage@@Base+0x9098>
   4c4d1:	call   9e40 <__errno_location@plt>
   4c4d6:	mov    DWORD PTR [rax],ebp
   4c4d8:	jmp    4c418 <argp_usage@@Base+0x9098>
   4c4dd:	nop    DWORD PTR [rax]
   4c4e0:	mov    rsi,rdx
   4c4e3:	lea    rdi,[rsp+0x10]
   4c4e8:	mov    BYTE PTR [rsp+0x10],0x0
   4c4ed:	call   a290 <lsetfilecon@plt>
   4c4f2:	mov    r12d,eax
   4c4f5:	call   9e40 <__errno_location@plt>
   4c4fa:	mov    rdx,rax
   4c4fd:	mov    eax,DWORD PTR [rax]
   4c4ff:	jmp    4c3ec <argp_usage@@Base+0x906c>
   4c504:	nop    DWORD PTR [rax+0x0]
   4c508:	call   9e40 <__errno_location@plt>
   4c50d:	mov    r12d,DWORD PTR [rax]
   4c510:	mov    rbp,rax
   4c513:	test   r15d,r15d
   4c516:	js     4c520 <argp_usage@@Base+0x91a0>
   4c518:	mov    edi,r15d
   4c51b:	call   a200 <close@plt>
   4c520:	mov    rdi,rbx
   4c523:	call   9ce0 <free@plt>
   4c528:	mov    DWORD PTR [rbp+0x0],r12d
   4c52c:	mov    r12d,0xffffffff
   4c532:	jmp    4c418 <argp_usage@@Base+0x9098>
   4c537:	nop    WORD PTR [rax+rax*1+0x0]
   4c540:	mov    rdi,rbx
   4c543:	call   4bd60 <argp_usage@@Base+0x89e0>
   4c548:	test   eax,eax
   4c54a:	je     4c4c1 <argp_usage@@Base+0x9141>
   4c550:	call   9e40 <__errno_location@plt>
   4c555:	mov    edi,DWORD PTR [rax]
   4c557:	call   495d0 <argp_usage@@Base+0x6250>
   4c55c:	nop    DWORD PTR [rax+0x0]
   4c560:	mov    edi,r15d
   4c563:	mov    r12d,0xffffffff
   4c569:	call   a200 <close@plt>
   4c56e:	mov    rdi,rbx
   4c571:	call   9ce0 <free@plt>
   4c576:	call   9e40 <__errno_location@plt>
   4c57b:	mov    DWORD PTR [rax],0x9
   4c581:	jmp    4c418 <argp_usage@@Base+0x9098>
   4c586:	cs nop WORD PTR [rax+rax*1+0x0]
   4c590:	xor    esi,esi
   4c592:	xor    edi,edi
   4c594:	call   a1f0 <getcwd@plt>
   4c599:	mov    rbx,rax
   4c59c:	test   rax,rax
   4c59f:	jne    4c468 <argp_usage@@Base+0x90e8>
   4c5a5:	call   9e40 <__errno_location@plt>
   4c5aa:	mov    edi,DWORD PTR [rax]
   4c5ac:	call   49590 <argp_usage@@Base+0x6210>
   4c5b1:	call   a0a0 <__stack_chk_fail@plt>
   4c5b6:	cs nop WORD PTR [rax+rax*1+0x0]
   4c5c0:	endbr64 
   4c5c4:	sub    rsp,0xd8
   4c5cb:	mov    QWORD PTR [rsp+0x30],rdx
   4c5d0:	mov    QWORD PTR [rsp+0x38],rcx
   4c5d5:	mov    QWORD PTR [rsp+0x40],r8
   4c5da:	mov    QWORD PTR [rsp+0x48],r9
   4c5df:	test   al,al
   4c5e1:	je     4c61a <argp_usage@@Base+0x929a>
   4c5e3:	movaps XMMWORD PTR [rsp+0x50],xmm0
   4c5e8:	movaps XMMWORD PTR [rsp+0x60],xmm1
   4c5ed:	movaps XMMWORD PTR [rsp+0x70],xmm2
   4c5f2:	movaps XMMWORD PTR [rsp+0x80],xmm3
   4c5fa:	movaps XMMWORD PTR [rsp+0x90],xmm4
   4c602:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   4c60a:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   4c612:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   4c61a:	mov    rax,QWORD PTR fs:0x28
   4c623:	mov    QWORD PTR [rsp+0x18],rax
   4c628:	xor    eax,eax
   4c62a:	lea    rax,[rsp+0xe0]
   4c632:	mov    DWORD PTR [rsp],0x10
   4c639:	mov    QWORD PTR [rsp+0x8],rax
   4c63e:	lea    rax,[rsp+0x20]
   4c643:	mov    DWORD PTR [rsp+0x4],0x30
   4c64b:	mov    QWORD PTR [rsp+0x10],rax
   4c650:	test   esi,esi
   4c652:	jne    4c680 <argp_usage@@Base+0x9300>
   4c654:	mov    edx,DWORD PTR [rax+0x10]
   4c657:	xor    eax,eax
   4c659:	call   9f60 <fcntl@plt>
   4c65e:	mov    rdx,QWORD PTR [rsp+0x18]
   4c663:	sub    rdx,QWORD PTR fs:0x28
   4c66c:	jne    4c69f <argp_usage@@Base+0x931f>
   4c66e:	add    rsp,0xd8
   4c675:	ret    
   4c676:	cs nop WORD PTR [rax+rax*1+0x0]
   4c680:	lea    eax,[rsi-0x2]
   4c683:	and    eax,0xfffffffd
   4c686:	je     4c698 <argp_usage@@Base+0x9318>
   4c688:	xor    eax,eax
   4c68a:	call   9f60 <fcntl@plt>
   4c68f:	jmp    4c65e <argp_usage@@Base+0x92de>
   4c691:	nop    DWORD PTR [rax+0x0]
   4c698:	mov    rax,QWORD PTR [rsp+0x10]
   4c69d:	jmp    4c654 <argp_usage@@Base+0x92d4>
   4c69f:	call   a0a0 <__stack_chk_fail@plt>
   4c6a4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4c6af:	nop
   4c6b0:	endbr64 
   4c6b4:	push   r12
   4c6b6:	push   rbp
   4c6b7:	push   rbx
   4c6b8:	test   edi,edi
   4c6ba:	je     4c710 <argp_usage@@Base+0x9390>
   4c6bc:	mov    r12d,edi
   4c6bf:	cmp    edi,0xa
   4c6c2:	je     4c6d0 <argp_usage@@Base+0x9350>
   4c6c4:	mov    eax,r12d
   4c6c7:	pop    rbx
   4c6c8:	pop    rbp
   4c6c9:	pop    r12
   4c6cb:	ret    
   4c6cc:	nop    DWORD PTR [rax+0x0]
   4c6d0:	mov    rbp,QWORD PTR [rsi]
   4c6d3:	mov    rbx,rsi
   4c6d6:	lea    rsi,[rip+0x1fd7b]        # 6c458 <_obstack_memory_used@@Base+0x1f7d8>
   4c6dd:	mov    rdi,rbp
   4c6e0:	call   a320 <strcmp@plt>
   4c6e5:	test   eax,eax
   4c6e7:	jne    4c6c4 <argp_usage@@Base+0x9344>
   4c6e9:	mov    rdi,rbp
   4c6ec:	mov    r12d,0xffffffff
   4c6f2:	call   a0e0 <freecon@plt>
   4c6f7:	mov    QWORD PTR [rbx],0x0
   4c6fe:	call   9e40 <__errno_location@plt>
   4c703:	mov    DWORD PTR [rax],0x3d
   4c709:	jmp    4c6c4 <argp_usage@@Base+0x9344>
   4c70b:	nop    DWORD PTR [rax+rax*1+0x0]
   4c710:	call   9e40 <__errno_location@plt>
   4c715:	mov    r12d,0xffffffff
   4c71b:	mov    DWORD PTR [rax],0x5f
   4c721:	jmp    4c6c4 <argp_usage@@Base+0x9344>
   4c723:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4c72e:	xchg   ax,ax
   4c730:	endbr64 
   4c734:	push   r15
   4c736:	push   r14
   4c738:	mov    r14,rsi
   4c73b:	push   r13
   4c73d:	mov    r13,rdx
   4c740:	push   r12
   4c742:	push   rbp
   4c743:	mov    ebp,edi
   4c745:	push   rbx
   4c746:	sub    rsp,0xfe8
   4c74d:	mov    rax,QWORD PTR fs:0x28
   4c756:	mov    QWORD PTR [rsp+0xfd8],rax
   4c75e:	xor    eax,eax
   4c760:	cmp    BYTE PTR [rsi],0x0
   4c763:	je     4c8c0 <argp_usage@@Base+0x9540>
   4c769:	lea    rbx,[rsp+0x10]
   4c76e:	mov    rdx,rsi
   4c771:	mov    esi,edi
   4c773:	mov    rdi,rbx
   4c776:	call   433a0 <argp_usage@@Base+0x20>
   4c77b:	mov    r15,rax
   4c77e:	test   rax,rax
   4c781:	je     4c820 <argp_usage@@Base+0x94a0>
   4c787:	mov    rsi,r13
   4c78a:	mov    rdi,rax
   4c78d:	call   a8a0 <lgetfilecon@plt>
   4c792:	mov    rsi,r13
   4c795:	mov    edi,eax
   4c797:	call   4c6b0 <argp_usage@@Base+0x9330>
   4c79c:	mov    r12d,eax
   4c79f:	call   9e40 <__errno_location@plt>
   4c7a4:	mov    rdx,rax
   4c7a7:	mov    eax,DWORD PTR [rax]
   4c7a9:	cmp    r15,rbx
   4c7ac:	je     4c7c6 <argp_usage@@Base+0x9446>
   4c7ae:	mov    rdi,r15
   4c7b1:	mov    DWORD PTR [rsp+0xc],eax
   4c7b5:	mov    QWORD PTR [rsp],rdx
   4c7b9:	call   9ce0 <free@plt>
   4c7be:	mov    eax,DWORD PTR [rsp+0xc]
   4c7c2:	mov    rdx,QWORD PTR [rsp]
   4c7c6:	cmp    r12d,0xffffffff
   4c7ca:	jne    4c7f0 <argp_usage@@Base+0x9470>
   4c7cc:	cmp    eax,0x14
   4c7cf:	je     4c820 <argp_usage@@Base+0x94a0>
   4c7d1:	cmp    eax,0x2
   4c7d4:	je     4c820 <argp_usage@@Base+0x94a0>
   4c7d6:	cmp    eax,0x1
   4c7d9:	je     4c820 <argp_usage@@Base+0x94a0>
   4c7db:	cmp    eax,0xd
   4c7de:	je     4c820 <argp_usage@@Base+0x94a0>
   4c7e0:	cmp    eax,0x26
   4c7e3:	je     4c820 <argp_usage@@Base+0x94a0>
   4c7e5:	cmp    eax,0x5f
   4c7e8:	je     4c820 <argp_usage@@Base+0x94a0>
   4c7ea:	mov    DWORD PTR [rdx],eax
   4c7ec:	nop    DWORD PTR [rax+0x0]
   4c7f0:	mov    rax,QWORD PTR [rsp+0xfd8]
   4c7f8:	sub    rax,QWORD PTR fs:0x28
   4c801:	jne    4c991 <argp_usage@@Base+0x9611>
   4c807:	add    rsp,0xfe8
   4c80e:	mov    eax,r12d
   4c811:	pop    rbx
   4c812:	pop    rbp
   4c813:	pop    r12
   4c815:	pop    r13
   4c817:	pop    r14
   4c819:	pop    r15
   4c81b:	ret    
   4c81c:	nop    DWORD PTR [rax+0x0]
   4c820:	mov    esi,0x80000
   4c825:	lea    rdi,[rip+0x1adc8]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   4c82c:	xor    eax,eax
   4c82e:	xor    ebx,ebx
   4c830:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   4c835:	mov    r15d,eax
   4c838:	test   eax,eax
   4c83a:	js     4c970 <argp_usage@@Base+0x95f0>
   4c840:	test   ebp,ebp
   4c842:	js     4c84d <argp_usage@@Base+0x94cd>
   4c844:	cmp    ebp,r15d
   4c847:	je     4c940 <argp_usage@@Base+0x95c0>
   4c84d:	mov    edi,ebp
   4c84f:	call   a540 <fchdir@plt>
   4c854:	mov    ebp,eax
   4c856:	test   eax,eax
   4c858:	jne    4c8f0 <argp_usage@@Base+0x9570>
   4c85e:	mov    rsi,r13
   4c861:	mov    rdi,r14
   4c864:	call   a8a0 <lgetfilecon@plt>
   4c869:	mov    rsi,r13
   4c86c:	mov    edi,eax
   4c86e:	call   4c6b0 <argp_usage@@Base+0x9330>
   4c873:	mov    r12d,eax
   4c876:	cmp    eax,0xffffffff
   4c879:	jne    4c882 <argp_usage@@Base+0x9502>
   4c87b:	call   9e40 <__errno_location@plt>
   4c880:	mov    ebp,DWORD PTR [rax]
   4c882:	test   r15d,r15d
   4c885:	js     4c920 <argp_usage@@Base+0x95a0>
   4c88b:	mov    edi,r15d
   4c88e:	call   a540 <fchdir@plt>
   4c893:	test   eax,eax
   4c895:	jne    4c930 <argp_usage@@Base+0x95b0>
   4c89b:	mov    edi,r15d
   4c89e:	call   a200 <close@plt>
   4c8a3:	mov    rdi,rbx
   4c8a6:	call   9ce0 <free@plt>
   4c8ab:	test   ebp,ebp
   4c8ad:	je     4c7f0 <argp_usage@@Base+0x9470>
   4c8b3:	call   9e40 <__errno_location@plt>
   4c8b8:	mov    DWORD PTR [rax],ebp
   4c8ba:	jmp    4c7f0 <argp_usage@@Base+0x9470>
   4c8bf:	nop
   4c8c0:	mov    rsi,rdx
   4c8c3:	lea    rdi,[rsp+0x10]
   4c8c8:	mov    BYTE PTR [rsp+0x10],0x0
   4c8cd:	call   a8a0 <lgetfilecon@plt>
   4c8d2:	mov    rsi,r13
   4c8d5:	mov    edi,eax
   4c8d7:	call   4c6b0 <argp_usage@@Base+0x9330>
   4c8dc:	mov    r12d,eax
   4c8df:	call   9e40 <__errno_location@plt>
   4c8e4:	mov    rdx,rax
   4c8e7:	mov    eax,DWORD PTR [rax]
   4c8e9:	jmp    4c7c6 <argp_usage@@Base+0x9446>
   4c8ee:	xchg   ax,ax
   4c8f0:	call   9e40 <__errno_location@plt>
   4c8f5:	mov    r12d,DWORD PTR [rax]
   4c8f8:	mov    rbp,rax
   4c8fb:	test   r15d,r15d
   4c8fe:	js     4c908 <argp_usage@@Base+0x9588>
   4c900:	mov    edi,r15d
   4c903:	call   a200 <close@plt>
   4c908:	mov    rdi,rbx
   4c90b:	call   9ce0 <free@plt>
   4c910:	mov    DWORD PTR [rbp+0x0],r12d
   4c914:	mov    r12d,0xffffffff
   4c91a:	jmp    4c7f0 <argp_usage@@Base+0x9470>
   4c91f:	nop
   4c920:	mov    rdi,rbx
   4c923:	call   4bd60 <argp_usage@@Base+0x89e0>
   4c928:	test   eax,eax
   4c92a:	je     4c8a3 <argp_usage@@Base+0x9523>
   4c930:	call   9e40 <__errno_location@plt>
   4c935:	mov    edi,DWORD PTR [rax]
   4c937:	call   495d0 <argp_usage@@Base+0x6250>
   4c93c:	nop    DWORD PTR [rax+0x0]
   4c940:	mov    edi,r15d
   4c943:	mov    r12d,0xffffffff
   4c949:	call   a200 <close@plt>
   4c94e:	mov    rdi,rbx
   4c951:	call   9ce0 <free@plt>
   4c956:	call   9e40 <__errno_location@plt>
   4c95b:	mov    DWORD PTR [rax],0x9
   4c961:	jmp    4c7f0 <argp_usage@@Base+0x9470>
   4c966:	cs nop WORD PTR [rax+rax*1+0x0]
   4c970:	xor    esi,esi
   4c972:	xor    edi,edi
   4c974:	call   a1f0 <getcwd@plt>
   4c979:	mov    rbx,rax
   4c97c:	test   rax,rax
   4c97f:	jne    4c840 <argp_usage@@Base+0x94c0>
   4c985:	call   9e40 <__errno_location@plt>
   4c98a:	mov    edi,DWORD PTR [rax]
   4c98c:	call   49590 <argp_usage@@Base+0x6210>
   4c991:	call   a0a0 <__stack_chk_fail@plt>
   4c996:	cs nop WORD PTR [rax+rax*1+0x0]
   4c9a0:	endbr64 
   4c9a4:	push   r12
   4c9a6:	push   rbp
   4c9a7:	push   rbx
   4c9a8:	mov    rbx,rdi
   4c9ab:	test   rdx,rdx
   4c9ae:	je     4ca20 <argp_usage@@Base+0x96a0>
   4c9b0:	mov    rbp,rdx
   4c9b3:	lea    r12,[rdx-0x1]
   4c9b7:	mov    eax,0xfe0
   4c9bc:	test   rsi,rsi
   4c9bf:	mov    QWORD PTR [rbx+0x30],r12
   4c9c3:	cmove  rsi,rax
   4c9c7:	mov    rax,QWORD PTR [rbx+0x38]
   4c9cb:	mov    QWORD PTR [rbx],rsi
   4c9ce:	test   BYTE PTR [rbx+0x50],0x1
   4c9d2:	je     4ca30 <argp_usage@@Base+0x96b0>
   4c9d4:	mov    rdi,QWORD PTR [rbx+0x48]
   4c9d8:	call   rax
   4c9da:	mov    QWORD PTR [rbx+0x8],rax
   4c9de:	test   rax,rax
   4c9e1:	je     4ca37 <argp_usage@@Base+0x96b7>
   4c9e3:	lea    rdx,[rax+r12*1+0x10]
   4c9e8:	neg    rbp
   4c9eb:	and    rdx,rbp
   4c9ee:	mov    QWORD PTR [rbx+0x10],rdx
   4c9f2:	mov    QWORD PTR [rbx+0x18],rdx
   4c9f6:	mov    rdx,QWORD PTR [rbx]
   4c9f9:	add    rdx,rax
   4c9fc:	mov    QWORD PTR [rax],rdx
   4c9ff:	mov    QWORD PTR [rbx+0x20],rdx
   4ca03:	mov    QWORD PTR [rax+0x8],0x0
   4ca0b:	mov    eax,0x1
   4ca10:	and    BYTE PTR [rbx+0x50],0xf9
   4ca14:	pop    rbx
   4ca15:	pop    rbp
   4ca16:	pop    r12
   4ca18:	ret    
   4ca19:	nop    DWORD PTR [rax+0x0]
   4ca20:	mov    r12d,0xf
   4ca26:	mov    ebp,0x10
   4ca2b:	jmp    4c9b7 <argp_usage@@Base+0x9637>
   4ca2d:	nop    DWORD PTR [rax]
   4ca30:	mov    rdi,rsi
   4ca33:	call   rax
   4ca35:	jmp    4c9da <argp_usage@@Base+0x965a>
   4ca37:	lea    rax,[rip+0x323fa]        # 7ee38 <obstack_alloc_failed_handler@@Base>
   4ca3e:	call   QWORD PTR [rax]

000000000004ca40 <_obstack_begin@@Base>:
   4ca40:	endbr64 
   4ca44:	and    BYTE PTR [rdi+0x50],0xfe
   4ca48:	mov    QWORD PTR [rdi+0x38],rcx
   4ca4c:	mov    QWORD PTR [rdi+0x40],r8
   4ca50:	jmp    4c9a0 <argp_usage@@Base+0x9620>
   4ca55:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000004ca60 <_obstack_begin_1@@Base>:
   4ca60:	endbr64 
   4ca64:	or     BYTE PTR [rdi+0x50],0x1
   4ca68:	mov    QWORD PTR [rdi+0x38],rcx
   4ca6c:	mov    QWORD PTR [rdi+0x40],r8
   4ca70:	mov    QWORD PTR [rdi+0x48],r9
   4ca74:	jmp    4c9a0 <argp_usage@@Base+0x9620>
   4ca79:	nop    DWORD PTR [rax+0x0]

000000000004ca80 <_obstack_newchunk@@Base>:
   4ca80:	endbr64 
   4ca84:	push   r14
   4ca86:	xor    ecx,ecx
   4ca88:	push   r13
   4ca8a:	push   r12
   4ca8c:	push   rbp
   4ca8d:	push   rbx
   4ca8e:	mov    rbx,rdi
   4ca91:	mov    r13,QWORD PTR [rdi+0x18]
   4ca95:	sub    r13,QWORD PTR [rdi+0x10]
   4ca99:	mov    rdx,QWORD PTR [rbx]
   4ca9c:	add    rsi,r13
   4ca9f:	mov    rax,r13
   4caa2:	mov    rbp,QWORD PTR [rdi+0x8]
   4caa6:	setb   cl
   4caa9:	add    rsi,QWORD PTR [rdi+0x30]
   4caad:	setb   dil
   4cab1:	shr    rax,0x3
   4cab5:	cmp    rsi,rdx
   4cab8:	lea    rax,[rsi+rax*1+0x64]
   4cabd:	cmovb  rsi,rdx
   4cac1:	cmp    rax,rsi
   4cac4:	cmovae rsi,rax
   4cac8:	test   rcx,rcx
   4cacb:	jne    4cb9f <_obstack_newchunk@@Base+0x11f>
   4cad1:	movzx  edi,dil
   4cad5:	test   rdi,rdi
   4cad8:	jne    4cb9f <_obstack_newchunk@@Base+0x11f>
   4cade:	mov    rax,QWORD PTR [rbx+0x38]
   4cae2:	mov    r14,rsi
   4cae5:	test   BYTE PTR [rbx+0x50],0x1
   4cae9:	jne    4cb68 <_obstack_newchunk@@Base+0xe8>
   4caeb:	mov    rdi,rsi
   4caee:	call   rax
   4caf0:	mov    r12,rax
   4caf3:	test   r12,r12
   4caf6:	je     4cb9f <_obstack_newchunk@@Base+0x11f>
   4cafc:	lea    rax,[r12+r14*1]
   4cb00:	mov    QWORD PTR [rbx+0x8],r12
   4cb04:	mov    rsi,QWORD PTR [rbx+0x10]
   4cb08:	mov    rdx,r13
   4cb0b:	mov    QWORD PTR [r12+0x8],rbp
   4cb10:	mov    QWORD PTR [rbx+0x20],rax
   4cb14:	mov    QWORD PTR [r12],rax
   4cb18:	mov    rax,QWORD PTR [rbx+0x30]
   4cb1c:	lea    r14,[r12+rax*1+0x10]
   4cb21:	not    rax
   4cb24:	and    r14,rax
   4cb27:	mov    rdi,r14
   4cb2a:	call   a420 <memcpy@plt>
   4cb2f:	movzx  edx,BYTE PTR [rbx+0x50]
   4cb33:	test   dl,0x2
   4cb36:	jne    4cb4d <_obstack_newchunk@@Base+0xcd>
   4cb38:	mov    rax,QWORD PTR [rbx+0x30]
   4cb3c:	lea    rcx,[rbp+rax*1+0x10]
   4cb41:	not    rax
   4cb44:	and    rax,rcx
   4cb47:	cmp    QWORD PTR [rbx+0x10],rax
   4cb4b:	je     4cb78 <_obstack_newchunk@@Base+0xf8>
   4cb4d:	mov    QWORD PTR [rbx+0x10],r14
   4cb51:	add    r14,r13
   4cb54:	mov    QWORD PTR [rbx+0x18],r14
   4cb58:	and    BYTE PTR [rbx+0x50],0xfd
   4cb5c:	pop    rbx
   4cb5d:	pop    rbp
   4cb5e:	pop    r12
   4cb60:	pop    r13
   4cb62:	pop    r14
   4cb64:	ret    
   4cb65:	nop    DWORD PTR [rax]
   4cb68:	mov    rdi,QWORD PTR [rbx+0x48]
   4cb6c:	call   rax
   4cb6e:	mov    r12,rax
   4cb71:	jmp    4caf3 <_obstack_newchunk@@Base+0x73>
   4cb73:	nop    DWORD PTR [rax+rax*1+0x0]
   4cb78:	mov    rax,QWORD PTR [rbp+0x8]
   4cb7c:	and    edx,0x1
   4cb7f:	mov    QWORD PTR [r12+0x8],rax
   4cb84:	mov    rax,QWORD PTR [rbx+0x40]
   4cb88:	je     4cb98 <_obstack_newchunk@@Base+0x118>
   4cb8a:	mov    rdi,QWORD PTR [rbx+0x48]
   4cb8e:	mov    rsi,rbp
   4cb91:	call   rax
   4cb93:	jmp    4cb4d <_obstack_newchunk@@Base+0xcd>
   4cb95:	nop    DWORD PTR [rax]
   4cb98:	mov    rdi,rbp
   4cb9b:	call   rax
   4cb9d:	jmp    4cb4d <_obstack_newchunk@@Base+0xcd>
   4cb9f:	lea    rax,[rip+0x32292]        # 7ee38 <obstack_alloc_failed_handler@@Base>
   4cba6:	call   QWORD PTR [rax]
   4cba8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000004cbb0 <_obstack_allocated_p@@Base>:
   4cbb0:	endbr64 
   4cbb4:	mov    rax,QWORD PTR [rdi+0x8]
   4cbb8:	test   rax,rax
   4cbbb:	je     4cbe6 <_obstack_allocated_p@@Base+0x36>
   4cbbd:	nop    DWORD PTR [rax]
   4cbc0:	cmp    rsi,rax
   4cbc3:	jbe    4cbca <_obstack_allocated_p@@Base+0x1a>
   4cbc5:	cmp    QWORD PTR [rax],rsi
   4cbc8:	jae    4cbe0 <_obstack_allocated_p@@Base+0x30>
   4cbca:	mov    rax,QWORD PTR [rax+0x8]
   4cbce:	test   rax,rax
   4cbd1:	jne    4cbc0 <_obstack_allocated_p@@Base+0x10>
   4cbd3:	xor    eax,eax
   4cbd5:	ret    
   4cbd6:	cs nop WORD PTR [rax+rax*1+0x0]
   4cbe0:	mov    eax,0x1
   4cbe5:	ret    
   4cbe6:	ret    
   4cbe7:	nop    WORD PTR [rax+rax*1+0x0]

000000000004cbf0 <_obstack_free@@Base>:
   4cbf0:	endbr64 
   4cbf4:	push   r12
   4cbf6:	mov    r12,rsi
   4cbf9:	push   rbp
   4cbfa:	push   rbx
   4cbfb:	mov    rsi,QWORD PTR [rdi+0x8]
   4cbff:	mov    rbx,rdi
   4cc02:	test   rsi,rsi
   4cc05:	jne    4cc22 <_obstack_free@@Base+0x32>
   4cc07:	jmp    4cc4b <_obstack_free@@Base+0x5b>
   4cc09:	nop    DWORD PTR [rax+0x0]
   4cc10:	mov    rdi,QWORD PTR [rbx+0x48]
   4cc14:	call   rax
   4cc16:	or     BYTE PTR [rbx+0x50],0x2
   4cc1a:	test   rbp,rbp
   4cc1d:	je     4cc4b <_obstack_free@@Base+0x5b>
   4cc1f:	mov    rsi,rbp
   4cc22:	cmp    rsi,r12
   4cc25:	jae    4cc2f <_obstack_free@@Base+0x3f>
   4cc27:	mov    rax,QWORD PTR [rsi]
   4cc2a:	cmp    rax,r12
   4cc2d:	jae    4cc60 <_obstack_free@@Base+0x70>
   4cc2f:	mov    rbp,QWORD PTR [rsi+0x8]
   4cc33:	mov    rax,QWORD PTR [rbx+0x40]
   4cc37:	test   BYTE PTR [rbx+0x50],0x1
   4cc3b:	jne    4cc10 <_obstack_free@@Base+0x20>
   4cc3d:	mov    rdi,rsi
   4cc40:	call   rax
   4cc42:	or     BYTE PTR [rbx+0x50],0x2
   4cc46:	test   rbp,rbp
   4cc49:	jne    4cc1f <_obstack_free@@Base+0x2f>
   4cc4b:	test   r12,r12
   4cc4e:	jne    aadb <__sprintf_chk@plt+0x12b>
   4cc54:	pop    rbx
   4cc55:	pop    rbp
   4cc56:	pop    r12
   4cc58:	ret    
   4cc59:	nop    DWORD PTR [rax+0x0]
   4cc60:	mov    QWORD PTR [rbx+0x18],r12
   4cc64:	mov    QWORD PTR [rbx+0x10],r12
   4cc68:	mov    QWORD PTR [rbx+0x20],rax
   4cc6c:	mov    QWORD PTR [rbx+0x8],rsi
   4cc70:	pop    rbx
   4cc71:	pop    rbp
   4cc72:	pop    r12
   4cc74:	ret    
   4cc75:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000004cc80 <_obstack_memory_used@@Base>:
   4cc80:	endbr64 
   4cc84:	mov    rax,QWORD PTR [rdi+0x8]
   4cc88:	xor    r8d,r8d
   4cc8b:	test   rax,rax
   4cc8e:	je     4cca2 <_obstack_memory_used@@Base+0x22>
   4cc90:	mov    rdx,QWORD PTR [rax]
   4cc93:	sub    rdx,rax
   4cc96:	mov    rax,QWORD PTR [rax+0x8]
   4cc9a:	add    r8,rdx
   4cc9d:	test   rax,rax
   4cca0:	jne    4cc90 <_obstack_memory_used@@Base+0x10>
   4cca2:	mov    rax,r8
   4cca5:	ret    
   4cca6:	cs nop WORD PTR [rax+rax*1+0x0]
   4ccb0:	endbr64 
   4ccb4:	push   rbp
   4ccb5:	mov    rbp,rsi
   4ccb8:	push   rbx
   4ccb9:	mov    rbx,rdi
   4ccbc:	sub    rsp,0x8
   4ccc0:	cmp    DWORD PTR [rdi+0x90],0x1
   4ccc7:	jle    4cd0b <_obstack_memory_used@@Base+0x8b>
   4ccc9:	mov    rax,rsi
   4cccc:	shr    rax,0x3d
   4ccd0:	jne    4cd40 <_obstack_memory_used@@Base+0xc0>
   4ccd2:	mov    rdi,QWORD PTR [rdi+0x10]
   4ccd6:	lea    rsi,[rsi*4+0x0]
   4ccde:	call   a570 <realloc@plt>
   4cce3:	test   rax,rax
   4cce6:	je     4cd40 <_obstack_memory_used@@Base+0xc0>
   4cce8:	mov    rdi,QWORD PTR [rbx+0x18]
   4ccec:	mov    QWORD PTR [rbx+0x10],rax
   4ccf0:	test   rdi,rdi
   4ccf3:	je     4cd0b <_obstack_memory_used@@Base+0x8b>
   4ccf5:	lea    rsi,[rbp*8+0x0]
   4ccfd:	call   a570 <realloc@plt>
   4cd02:	test   rax,rax
   4cd05:	je     4cd40 <_obstack_memory_used@@Base+0xc0>
   4cd07:	mov    QWORD PTR [rbx+0x18],rax
   4cd0b:	cmp    BYTE PTR [rbx+0x8b],0x0
   4cd12:	jne    4cd28 <_obstack_memory_used@@Base+0xa8>
   4cd14:	mov    QWORD PTR [rbx+0x40],rbp
   4cd18:	add    rsp,0x8
   4cd1c:	xor    eax,eax
   4cd1e:	pop    rbx
   4cd1f:	pop    rbp
   4cd20:	ret    
   4cd21:	nop    DWORD PTR [rax+0x0]
   4cd28:	mov    rdi,QWORD PTR [rbx+0x8]
   4cd2c:	mov    rsi,rbp
   4cd2f:	call   a570 <realloc@plt>
   4cd34:	test   rax,rax
   4cd37:	je     4cd40 <_obstack_memory_used@@Base+0xc0>
   4cd39:	mov    QWORD PTR [rbx+0x8],rax
   4cd3d:	jmp    4cd14 <_obstack_memory_used@@Base+0x94>
   4cd3f:	nop
   4cd40:	add    rsp,0x8
   4cd44:	mov    eax,0xc
   4cd49:	pop    rbx
   4cd4a:	pop    rbp
   4cd4b:	ret    
   4cd4c:	nop    DWORD PTR [rax+0x0]
   4cd50:	endbr64 
   4cd54:	push   r15
   4cd56:	push   r14
   4cd58:	push   r13
   4cd5a:	push   r12
   4cd5c:	push   rbp
   4cd5d:	push   rbx
   4cd5e:	mov    rbx,rdi
   4cd61:	sub    rsp,0x78
   4cd65:	mov    r12,QWORD PTR [rdi+0x40]
   4cd69:	mov    rbp,QWORD PTR [rdi+0x30]
   4cd6d:	mov    rax,QWORD PTR fs:0x28
   4cd76:	mov    QWORD PTR [rsp+0x68],rax
   4cd7b:	xor    eax,eax
   4cd7d:	mov    rax,QWORD PTR [rdi+0x58]
   4cd81:	cmp    r12,rax
   4cd84:	cmovg  r12,rax
   4cd88:	cmp    r12,rbp
   4cd8b:	jle    4ce72 <_obstack_memory_used@@Base+0x1f2>
   4cd91:	lea    r15,[rdi+0x20]
   4cd95:	lea    r14,[rsp+0x1c]
   4cd9a:	jmp    4cdf7 <_obstack_memory_used@@Base+0x177>
   4cd9c:	nop    DWORD PTR [rax+0x0]
   4cda0:	lea    rax,[rdx-0x1]
   4cda4:	cmp    rax,0xfffffffffffffffd
   4cda8:	ja     4cea0 <_obstack_memory_used@@Base+0x220>
   4cdae:	mov    ecx,DWORD PTR [rsp+0x1c]
   4cdb2:	cmp    rdx,0xfffffffffffffffe
   4cdb6:	je     4ce60 <_obstack_memory_used@@Base+0x1e0>
   4cdbc:	mov    rax,QWORD PTR [rbx+0x10]
   4cdc0:	lea    rsi,[rbp+0x1]
   4cdc4:	lea    rdi,[rbp*4+0x0]
   4cdcc:	mov    DWORD PTR [rax+rbp*4],ecx
   4cdcf:	add    rbp,rdx
   4cdd2:	cmp    rsi,rbp
   4cdd5:	jge    4cf38 <_obstack_memory_used@@Base+0x2b8>
   4cddb:	lea    rdx,[rdx*4-0x4]
   4cde3:	lea    rdi,[rax+rdi*1+0x4]
   4cde8:	mov    esi,0xff
   4cded:	call   a1b0 <memset@plt>
   4cdf2:	cmp    rbp,r12
   4cdf5:	jge    4ce72 <_obstack_memory_used@@Base+0x1f2>
   4cdf7:	mov    rax,QWORD PTR [rbx+0x20]
   4cdfb:	mov    rcx,QWORD PTR [rbx+0x78]
   4cdff:	mov    r8,r12
   4ce02:	sub    r8,rbp
   4ce05:	mov    QWORD PTR [rsp],rax
   4ce09:	test   rcx,rcx
   4ce0c:	jne    4ced0 <_obstack_memory_used@@Base+0x250>
   4ce12:	mov    rsi,QWORD PTR [rbx+0x28]
   4ce16:	add    rsi,rbp
   4ce19:	add    rsi,QWORD PTR [rbx]
   4ce1c:	mov    rdx,r8
   4ce1f:	mov    rcx,r15
   4ce22:	mov    rdi,r14
   4ce25:	mov    r13,rsi
   4ce28:	call   a0c0 <mbrtowc@plt>
   4ce2d:	mov    rdx,rax
   4ce30:	cmp    rax,0xfffffffffffffffd
   4ce34:	jbe    4cda0 <_obstack_memory_used@@Base+0x120>
   4ce3a:	mov    QWORD PTR [rsp+0x8],rax
   4ce3f:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   4ce44:	mov    rdx,QWORD PTR [rsp+0x8]
   4ce49:	test   al,al
   4ce4b:	jne    4cda0 <_obstack_memory_used@@Base+0x120>
   4ce51:	movzx  ecx,BYTE PTR [r13+0x0]
   4ce56:	mov    edx,0x1
   4ce5b:	jmp    4cdbc <_obstack_memory_used@@Base+0x13c>
   4ce60:	mov    rax,QWORD PTR [rbx+0x58]
   4ce64:	cmp    QWORD PTR [rbx+0x40],rax
   4ce68:	jge    4cea0 <_obstack_memory_used@@Base+0x220>
   4ce6a:	mov    rax,QWORD PTR [rsp]
   4ce6e:	mov    QWORD PTR [rbx+0x20],rax
   4ce72:	mov    QWORD PTR [rbx+0x30],rbp
   4ce76:	mov    QWORD PTR [rbx+0x38],rbp
   4ce7a:	mov    rax,QWORD PTR [rsp+0x68]
   4ce7f:	sub    rax,QWORD PTR fs:0x28
   4ce88:	jne    4cf49 <_obstack_memory_used@@Base+0x2c9>
   4ce8e:	add    rsp,0x78
   4ce92:	pop    rbx
   4ce93:	pop    rbp
   4ce94:	pop    r12
   4ce96:	pop    r13
   4ce98:	pop    r14
   4ce9a:	pop    r15
   4ce9c:	ret    
   4ce9d:	nop    DWORD PTR [rax]
   4cea0:	mov    rax,QWORD PTR [rbx]
   4cea3:	mov    rdx,QWORD PTR [rbx+0x78]
   4cea7:	add    rax,rbp
   4ceaa:	add    rax,QWORD PTR [rbx+0x28]
   4ceae:	movzx  ecx,BYTE PTR [rax]
   4ceb1:	mov    DWORD PTR [rsp+0x1c],ecx
   4ceb5:	test   rdx,rdx
   4ceb8:	jne    4cf40 <_obstack_memory_used@@Base+0x2c0>
   4cebe:	mov    rax,QWORD PTR [rsp]
   4cec2:	mov    edx,0x1
   4cec7:	mov    QWORD PTR [rbx+0x20],rax
   4cecb:	jmp    4cdbc <_obstack_memory_used@@Base+0x13c>
   4ced0:	mov    eax,DWORD PTR [rbx+0x90]
   4ced6:	lea    rsi,[rsp+0x20]
   4cedb:	test   eax,eax
   4cedd:	jle    4ce1c <_obstack_memory_used@@Base+0x19c>
   4cee3:	xor    eax,eax
   4cee5:	lea    rsi,[rsp+0x20]
   4ceea:	jmp    4cf01 <_obstack_memory_used@@Base+0x281>
   4ceec:	nop    DWORD PTR [rax+0x0]
   4cef0:	add    rax,0x1
   4cef4:	cmp    rax,r8
   4cef7:	je     4ce1c <_obstack_memory_used@@Base+0x19c>
   4cefd:	mov    rcx,QWORD PTR [rbx+0x78]
   4cf01:	mov    rdx,QWORD PTR [rbx]
   4cf04:	add    rdx,rax
   4cf07:	add    rdx,rbp
   4cf0a:	add    rdx,QWORD PTR [rbx+0x28]
   4cf0e:	movzx  edx,BYTE PTR [rdx]
   4cf11:	movzx  edx,BYTE PTR [rcx+rdx*1]
   4cf15:	mov    rcx,QWORD PTR [rbx+0x8]
   4cf19:	add    rcx,rax
   4cf1c:	mov    BYTE PTR [rcx+rbp*1],dl
   4cf1f:	mov    BYTE PTR [rsi+rax*1],dl
   4cf22:	lea    edx,[rax+0x1]
   4cf25:	cmp    DWORD PTR [rbx+0x90],edx
   4cf2b:	jg     4cef0 <_obstack_memory_used@@Base+0x270>
   4cf2d:	jmp    4ce1c <_obstack_memory_used@@Base+0x19c>
   4cf32:	nop    WORD PTR [rax+rax*1+0x0]
   4cf38:	mov    rbp,rsi
   4cf3b:	jmp    4cdf2 <_obstack_memory_used@@Base+0x172>
   4cf40:	movzx  ecx,BYTE PTR [rdx+rcx*1]
   4cf44:	jmp    4cebe <_obstack_memory_used@@Base+0x23e>
   4cf49:	call   a0a0 <__stack_chk_fail@plt>
   4cf4e:	xchg   ax,ax
   4cf50:	endbr64 
   4cf54:	push   r15
   4cf56:	push   r14
   4cf58:	push   r13
   4cf5a:	mov    r13,rdi
   4cf5d:	push   r12
   4cf5f:	push   rbp
   4cf60:	push   rbx
   4cf61:	sub    rsp,0x98
   4cf68:	mov    rbx,QWORD PTR [rdi+0x40]
   4cf6c:	mov    r14,QWORD PTR [rdi+0x30]
   4cf70:	mov    rax,QWORD PTR fs:0x28
   4cf79:	mov    QWORD PTR [rsp+0x88],rax
   4cf81:	xor    eax,eax
   4cf83:	mov    rax,QWORD PTR [rdi+0x58]
   4cf87:	cmp    rbx,rax
   4cf8a:	cmovg  rbx,rax
   4cf8e:	cmp    BYTE PTR [rdi+0x8a],0x0
   4cf95:	jne    4cfa2 <_obstack_memory_used@@Base+0x322>
   4cf97:	cmp    QWORD PTR [rdi+0x78],0x0
   4cf9c:	je     4d108 <_obstack_memory_used@@Base+0x488>
   4cfa2:	mov    r15,QWORD PTR [r13+0x38]
   4cfa6:	cmp    r14,rbx
   4cfa9:	jl     4cfe0 <_obstack_memory_used@@Base+0x360>
   4cfab:	mov    QWORD PTR [r13+0x30],r14
   4cfaf:	xor    eax,eax
   4cfb1:	mov    QWORD PTR [r13+0x38],r15
   4cfb5:	mov    rdx,QWORD PTR [rsp+0x88]
   4cfbd:	sub    rdx,QWORD PTR fs:0x28
   4cfc6:	jne    4d5ce <_obstack_memory_used@@Base+0x94e>
   4cfcc:	add    rsp,0x98
   4cfd3:	pop    rbx
   4cfd4:	pop    rbp
   4cfd5:	pop    r12
   4cfd7:	pop    r13
   4cfd9:	pop    r14
   4cfdb:	pop    r15
   4cfdd:	ret    
   4cfde:	xchg   ax,ax
   4cfe0:	lea    rax,[r13+0x20]
   4cfe4:	mov    QWORD PTR [rsp+0x28],rax
   4cfe9:	mov    rax,rbx
   4cfec:	sub    rax,r14
   4cfef:	mov    QWORD PTR [rsp+0x8],rax
   4cff4:	lea    rax,[rsp+0x34]
   4cff9:	mov    QWORD PTR [rsp+0x10],rax
   4cffe:	mov    rax,QWORD PTR [r13+0x20]
   4d002:	mov    rdx,QWORD PTR [r13+0x78]
   4d006:	mov    QWORD PTR [rsp+0x38],rax
   4d00b:	test   rdx,rdx
   4d00e:	jne    4d31b <_obstack_memory_used@@Base+0x69b>
   4d014:	mov    rbp,QWORD PTR [r13+0x28]
   4d018:	add    rbp,r15
   4d01b:	add    rbp,QWORD PTR [r13+0x0]
   4d01f:	mov    QWORD PTR [rsp],rbp
   4d023:	mov    rcx,QWORD PTR [rsp+0x28]
   4d028:	mov    rdx,QWORD PTR [rsp+0x8]
   4d02d:	mov    rsi,QWORD PTR [rsp]
   4d031:	mov    rdi,QWORD PTR [rsp+0x10]
   4d036:	call   a0c0 <mbrtowc@plt>
   4d03b:	mov    rbp,rax
   4d03e:	cmp    rax,0xfffffffffffffffd
   4d042:	ja     4d390 <_obstack_memory_used@@Base+0x710>
   4d048:	lea    rax,[rax-0x1]
   4d04c:	mov    QWORD PTR [rsp+0x8],rax
   4d051:	cmp    rax,0xfffffffffffffffc
   4d055:	ja     4d3a6 <_obstack_memory_used@@Base+0x726>
   4d05b:	mov    r12d,DWORD PTR [rsp+0x34]
   4d060:	mov    edi,r12d
   4d063:	call   a760 <towupper@plt>
   4d068:	mov    ecx,eax
   4d06a:	cmp    eax,r12d
   4d06d:	je     4d420 <_obstack_memory_used@@Base+0x7a0>
   4d073:	lea    r12,[rsp+0x40]
   4d078:	lea    rdx,[rsp+0x38]
   4d07d:	mov    esi,eax
   4d07f:	mov    DWORD PTR [rsp+0x10],eax
   4d083:	mov    rdi,r12
   4d086:	call   a4b0 <wcrtomb@plt>
   4d08b:	mov    ecx,DWORD PTR [rsp+0x10]
   4d08f:	cmp    rax,rbp
   4d092:	mov    rdx,rax
   4d095:	jne    4d496 <_obstack_memory_used@@Base+0x816>
   4d09b:	mov    rdi,QWORD PTR [r13+0x8]
   4d09f:	mov    rdx,rbp
   4d0a2:	mov    rsi,r12
   4d0a5:	mov    DWORD PTR [rsp],ecx
   4d0a8:	add    rdi,r14
   4d0ab:	call   a420 <memcpy@plt>
   4d0b0:	mov    ecx,DWORD PTR [rsp]
   4d0b3:	cmp    BYTE PTR [r13+0x8c],0x0
   4d0bb:	lea    rax,[rbp+r15*1+0x0]
   4d0c0:	jne    4d468 <_obstack_memory_used@@Base+0x7e8>
   4d0c6:	mov    r15,rax
   4d0c9:	mov    rax,QWORD PTR [r13+0x10]
   4d0cd:	lea    rdx,[r14+0x1]
   4d0d1:	lea    rsi,[r14*4+0x0]
   4d0d9:	mov    DWORD PTR [rax+r14*4],ecx
   4d0dd:	add    r14,rbp
   4d0e0:	cmp    rdx,r14
   4d0e3:	jge    4d460 <_obstack_memory_used@@Base+0x7e0>
   4d0e9:	lea    rdi,[rax+rsi*1+0x4]
   4d0ee:	lea    rdx,[rbp*4-0x4]
   4d0f6:	mov    esi,0xff
   4d0fb:	call   a1b0 <memset@plt>
   4d100:	jmp    4cfa6 <_obstack_memory_used@@Base+0x326>
   4d105:	nop    DWORD PTR [rax]
   4d108:	cmp    BYTE PTR [rdi+0x8c],0x0
   4d10f:	jne    4cfa2 <_obstack_memory_used@@Base+0x322>
   4d115:	cmp    r14,rbx
   4d118:	jge    4d381 <_obstack_memory_used@@Base+0x701>
   4d11e:	lea    rax,[rdi+0x20]
   4d122:	mov    QWORD PTR [rsp],rax
   4d126:	mov    QWORD PTR [rsp+0x28],rax
   4d12b:	jmp    4d1c5 <_obstack_memory_used@@Base+0x545>
   4d130:	lea    rax,[rax-0x1]
   4d134:	cmp    rax,0xfffffffffffffffc
   4d138:	ja     4d2fa <_obstack_memory_used@@Base+0x67a>
   4d13e:	mov    r12d,DWORD PTR [rsp+0x34]
   4d143:	mov    edi,r12d
   4d146:	call   a760 <towupper@plt>
   4d14b:	mov    ebp,eax
   4d14d:	cmp    eax,r12d
   4d150:	je     4d290 <_obstack_memory_used@@Base+0x610>
   4d156:	lea    r12,[rsp+0x40]
   4d15b:	lea    rdx,[rsp+0x38]
   4d160:	mov    esi,eax
   4d162:	mov    rdi,r12
   4d165:	call   a4b0 <wcrtomb@plt>
   4d16a:	cmp    r15,rax
   4d16d:	jne    4d370 <_obstack_memory_used@@Base+0x6f0>
   4d173:	mov    rdi,QWORD PTR [r13+0x8]
   4d177:	mov    rdx,r15
   4d17a:	mov    rsi,r12
   4d17d:	add    rdi,r14
   4d180:	call   a420 <memcpy@plt>
   4d185:	mov    rax,QWORD PTR [r13+0x10]
   4d189:	lea    rdx,[r14+0x1]
   4d18d:	lea    rsi,[r14*4+0x0]
   4d195:	mov    DWORD PTR [rax+r14*4],ebp
   4d199:	add    r14,r15
   4d19c:	cmp    rdx,r14
   4d19f:	jge    4d2e8 <_obstack_memory_used@@Base+0x668>
   4d1a5:	lea    rdi,[rax+rsi*1+0x4]
   4d1aa:	lea    rdx,[r15*4-0x4]
   4d1b2:	mov    esi,0xff
   4d1b7:	call   a1b0 <memset@plt>
   4d1bc:	cmp    r14,rbx
   4d1bf:	jge    4d381 <_obstack_memory_used@@Base+0x701>
   4d1c5:	mov    rbp,QWORD PTR [r13+0x28]
   4d1c9:	mov    QWORD PTR [rsp+0x18],r14
   4d1ce:	add    rbp,r14
   4d1d1:	add    rbp,QWORD PTR [r13+0x0]
   4d1d5:	movzx  r15d,BYTE PTR [rbp+0x0]
   4d1da:	mov    DWORD PTR [rsp+0x24],r15d
   4d1df:	mov    r12d,r15d
   4d1e2:	test   r15b,0x80
   4d1e6:	jne    4d208 <_obstack_memory_used@@Base+0x588>
   4d1e8:	mov    rdi,QWORD PTR [rsp]
   4d1ec:	call   a890 <mbsinit@plt>
   4d1f1:	test   eax,eax
   4d1f3:	je     4d208 <_obstack_memory_used@@Base+0x588>
   4d1f5:	mov    edi,r15d
   4d1f8:	call   a760 <towupper@plt>
   4d1fd:	test   eax,0xffffff80
   4d202:	je     4d2b0 <_obstack_memory_used@@Base+0x630>
   4d208:	mov    rax,QWORD PTR [r13+0x20]
   4d20c:	mov    rcx,QWORD PTR [rsp]
   4d210:	mov    rdx,rbx
   4d213:	mov    rsi,rbp
   4d216:	sub    rdx,r14
   4d219:	mov    QWORD PTR [rsp+0x38],rax
   4d21e:	lea    rax,[rsp+0x34]
   4d223:	mov    rdi,rax
   4d226:	mov    QWORD PTR [rsp+0x8],rdx
   4d22b:	mov    QWORD PTR [rsp+0x10],rax
   4d230:	call   a0c0 <mbrtowc@plt>
   4d235:	mov    r15,rax
   4d238:	cmp    rax,0xfffffffffffffffd
   4d23c:	jbe    4d130 <_obstack_memory_used@@Base+0x4b0>
   4d242:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   4d247:	test   al,al
   4d249:	je     4d2d0 <_obstack_memory_used@@Base+0x650>
   4d24f:	cmp    r15,0xfffffffffffffffe
   4d253:	je     4d2f0 <_obstack_memory_used@@Base+0x670>
   4d259:	mov    rax,QWORD PTR [r13+0x8]
   4d25d:	mov    rcx,QWORD PTR [rsp+0x18]
   4d262:	mov    esi,DWORD PTR [rsp+0x24]
   4d266:	mov    BYTE PTR [rax+r14*1],r12b
   4d26a:	mov    rax,QWORD PTR [r13+0x10]
   4d26e:	add    r14,0x1
   4d272:	mov    DWORD PTR [rax+rcx*4],esi
   4d275:	cmp    r15,0xffffffffffffffff
   4d279:	jne    4d1bc <_obstack_memory_used@@Base+0x53c>
   4d27f:	mov    rax,QWORD PTR [rsp+0x38]
   4d284:	mov    QWORD PTR [r13+0x20],rax
   4d288:	jmp    4d1bc <_obstack_memory_used@@Base+0x53c>
   4d28d:	nop    DWORD PTR [rax]
   4d290:	mov    rdi,QWORD PTR [r13+0x8]
   4d294:	mov    rsi,QWORD PTR [r13+0x28]
   4d298:	mov    rdx,r15
   4d29b:	add    rsi,r14
   4d29e:	add    rdi,r14
   4d2a1:	add    rsi,QWORD PTR [r13+0x0]
   4d2a5:	call   a420 <memcpy@plt>
   4d2aa:	jmp    4d185 <_obstack_memory_used@@Base+0x505>
   4d2af:	nop
   4d2b0:	mov    rdx,QWORD PTR [r13+0x8]
   4d2b4:	mov    BYTE PTR [rdx+r14*1],al
   4d2b8:	mov    rdx,QWORD PTR [r13+0x10]
   4d2bc:	mov    DWORD PTR [rdx+r14*4],eax
   4d2c0:	add    r14,0x1
   4d2c4:	jmp    4d1bc <_obstack_memory_used@@Base+0x53c>
   4d2c9:	nop    DWORD PTR [rax+0x0]
   4d2d0:	movzx  r12d,BYTE PTR [rbp+0x0]
   4d2d5:	mov    r15d,0x1
   4d2db:	mov    DWORD PTR [rsp+0x34],r12d
   4d2e0:	jmp    4d143 <_obstack_memory_used@@Base+0x4c3>
   4d2e5:	nop    DWORD PTR [rax]
   4d2e8:	mov    r14,rdx
   4d2eb:	jmp    4d1bc <_obstack_memory_used@@Base+0x53c>
   4d2f0:	mov    rax,QWORD PTR [r13+0x58]
   4d2f4:	cmp    QWORD PTR [r13+0x40],rax
   4d2f8:	jl     4d378 <_obstack_memory_used@@Base+0x6f8>
   4d2fa:	mov    rax,QWORD PTR [r13+0x8]
   4d2fe:	mov    BYTE PTR [rax+r14*1],r12b
   4d302:	mov    rax,QWORD PTR [r13+0x10]
   4d306:	add    r14,0x1
   4d30a:	mov    rcx,QWORD PTR [rsp+0x18]
   4d30f:	mov    esi,DWORD PTR [rsp+0x24]
   4d313:	mov    DWORD PTR [rax+rcx*4],esi
   4d316:	jmp    4d1bc <_obstack_memory_used@@Base+0x53c>
   4d31b:	mov    eax,DWORD PTR [r13+0x90]
   4d322:	test   eax,eax
   4d324:	jle    4d5c4 <_obstack_memory_used@@Base+0x944>
   4d32a:	mov    rsi,QWORD PTR [r13+0x28]
   4d32e:	lea    edi,[rax-0x1]
   4d331:	lea    r12,[rsp+0x40]
   4d336:	xor    eax,eax
   4d338:	add    rsi,r15
   4d33b:	add    rsi,QWORD PTR [r13+0x0]
   4d33f:	jmp    4d34c <_obstack_memory_used@@Base+0x6cc>
   4d341:	add    rax,0x1
   4d345:	cmp    QWORD PTR [rsp+0x8],rax
   4d34a:	je     4d35d <_obstack_memory_used@@Base+0x6dd>
   4d34c:	movzx  ecx,BYTE PTR [rsi+rax*1]
   4d350:	movzx  ecx,BYTE PTR [rdx+rcx*1]
   4d354:	mov    BYTE PTR [r12+rax*1],cl
   4d358:	cmp    rdi,rax
   4d35b:	jne    4d341 <_obstack_memory_used@@Base+0x6c1>
   4d35d:	mov    QWORD PTR [rsp],r12
   4d361:	jmp    4d023 <_obstack_memory_used@@Base+0x3a3>
   4d366:	cs nop WORD PTR [rax+rax*1+0x0]
   4d370:	mov    r15,r14
   4d373:	jmp    4cffe <_obstack_memory_used@@Base+0x37e>
   4d378:	mov    rax,QWORD PTR [rsp+0x38]
   4d37d:	mov    QWORD PTR [r13+0x20],rax
   4d381:	mov    QWORD PTR [r13+0x30],r14
   4d385:	xor    eax,eax
   4d387:	mov    QWORD PTR [r13+0x38],r14
   4d38b:	jmp    4cfb5 <_obstack_memory_used@@Base+0x335>
   4d390:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   4d395:	lea    rcx,[rbp-0x1]
   4d399:	mov    QWORD PTR [rsp+0x8],rcx
   4d39e:	test   al,al
   4d3a0:	je     4d440 <_obstack_memory_used@@Base+0x7c0>
   4d3a6:	cmp    QWORD PTR [rsp+0x8],0xfffffffffffffffd
   4d3ac:	jne    4d3c3 <_obstack_memory_used@@Base+0x743>
   4d3ae:	mov    rax,QWORD PTR [r13+0x58]
   4d3b2:	cmp    QWORD PTR [r13+0x40],rax
   4d3b6:	jl     4d488 <_obstack_memory_used@@Base+0x808>
   4d3bc:	mov    rbp,0xfffffffffffffffe
   4d3c3:	mov    rax,QWORD PTR [r13+0x0]
   4d3c7:	mov    rdx,QWORD PTR [r13+0x78]
   4d3cb:	add    rax,r15
   4d3ce:	add    rax,QWORD PTR [r13+0x28]
   4d3d2:	movzx  eax,BYTE PTR [rax]
   4d3d5:	test   rdx,rdx
   4d3d8:	jne    4d5bb <_obstack_memory_used@@Base+0x93b>
   4d3de:	mov    rdx,QWORD PTR [r13+0x8]
   4d3e2:	mov    rcx,r14
   4d3e5:	mov    BYTE PTR [rdx+r14*1],al
   4d3e9:	cmp    BYTE PTR [r13+0x8c],0x0
   4d3f1:	jne    4d5ae <_obstack_memory_used@@Base+0x92e>
   4d3f7:	mov    rdx,QWORD PTR [r13+0x10]
   4d3fb:	add    r15,0x1
   4d3ff:	add    r14,0x1
   4d403:	mov    DWORD PTR [rdx+rcx*4],eax
   4d406:	cmp    rbp,0xffffffffffffffff
   4d40a:	jne    4cfa6 <_obstack_memory_used@@Base+0x326>
   4d410:	mov    rax,QWORD PTR [rsp+0x38]
   4d415:	mov    QWORD PTR [r13+0x20],rax
   4d419:	jmp    4cfa6 <_obstack_memory_used@@Base+0x326>
   4d41e:	xchg   ax,ax
   4d420:	mov    rdi,QWORD PTR [r13+0x8]
   4d424:	mov    rsi,QWORD PTR [rsp]
   4d428:	mov    rdx,rbp
   4d42b:	mov    DWORD PTR [rsp+0x8],ecx
   4d42f:	add    rdi,r14
   4d432:	call   a420 <memcpy@plt>
   4d437:	mov    ecx,DWORD PTR [rsp+0x8]
   4d43b:	jmp    4d0b3 <_obstack_memory_used@@Base+0x433>
   4d440:	mov    rax,QWORD PTR [rsp]
   4d444:	mov    ebp,0x1
   4d449:	mov    QWORD PTR [rsp+0x8],0x0
   4d452:	movzx  r12d,BYTE PTR [rax]
   4d456:	mov    DWORD PTR [rsp+0x34],r12d
   4d45b:	jmp    4d060 <_obstack_memory_used@@Base+0x3e0>
   4d460:	mov    r14,rdx
   4d463:	jmp    4cfa6 <_obstack_memory_used@@Base+0x326>
   4d468:	mov    rdx,QWORD PTR [r13+0x18]
   4d46c:	mov    rsi,r14
   4d46f:	sub    rsi,r15
   4d472:	lea    rdx,[rdx+rsi*8]
   4d476:	mov    QWORD PTR [rdx+r15*8],r15
   4d47a:	add    r15,0x1
   4d47e:	cmp    rax,r15
   4d481:	jne    4d476 <_obstack_memory_used@@Base+0x7f6>
   4d483:	jmp    4d0c6 <_obstack_memory_used@@Base+0x446>
   4d488:	mov    rax,QWORD PTR [rsp+0x38]
   4d48d:	mov    QWORD PTR [r13+0x20],rax
   4d491:	jmp    4cfab <_obstack_memory_used@@Base+0x32b>
   4d496:	cmp    rax,0xffffffffffffffff
   4d49a:	je     4d420 <_obstack_memory_used@@Base+0x7a0>
   4d49c:	lea    rax,[rax+r14*1]
   4d4a0:	mov    QWORD PTR [rsp],rax
   4d4a4:	mov    rsi,rax
   4d4a7:	mov    rax,QWORD PTR [r13+0x40]
   4d4ab:	cmp    rsi,rax
   4d4ae:	ja     4d488 <_obstack_memory_used@@Base+0x808>
   4d4b0:	cmp    QWORD PTR [r13+0x18],0x0
   4d4b5:	je     4d578 <_obstack_memory_used@@Base+0x8f8>
   4d4bb:	cmp    BYTE PTR [r13+0x8c],0x0
   4d4c3:	jne    4d4e5 <_obstack_memory_used@@Base+0x865>
   4d4c5:	test   r14,r14
   4d4c8:	je     4d4dd <_obstack_memory_used@@Base+0x85d>
   4d4ca:	mov    rsi,QWORD PTR [r13+0x18]
   4d4ce:	xor    eax,eax
   4d4d0:	mov    QWORD PTR [rsi+rax*8],rax
   4d4d4:	add    rax,0x1
   4d4d8:	cmp    rax,r14
   4d4db:	jne    4d4d0 <_obstack_memory_used@@Base+0x850>
   4d4dd:	mov    BYTE PTR [r13+0x8c],0x1
   4d4e5:	mov    rdi,QWORD PTR [r13+0x8]
   4d4e9:	mov    rsi,r12
   4d4ec:	mov    DWORD PTR [rsp+0x18],ecx
   4d4f0:	mov    QWORD PTR [rsp+0x10],rdx
   4d4f5:	add    rdi,r14
   4d4f8:	call   a420 <memcpy@plt>
   4d4fd:	mov    rax,QWORD PTR [r13+0x10]
   4d501:	mov    ecx,DWORD PTR [rsp+0x18]
   4d505:	mov    rdx,QWORD PTR [rsp+0x10]
   4d50a:	lea    rdi,[rax+r14*4]
   4d50e:	mov    rax,QWORD PTR [r13+0x18]
   4d512:	mov    DWORD PTR [rdi],ecx
   4d514:	lea    rsi,[rax+r14*8]
   4d518:	mov    eax,0x1
   4d51d:	mov    QWORD PTR [rsi],r15
   4d520:	cmp    rdx,0x1
   4d524:	jbe    4d549 <_obstack_memory_used@@Base+0x8c9>
   4d526:	mov    rcx,QWORD PTR [rsp+0x8]
   4d52b:	cmp    rax,rbp
   4d52e:	cmovb  rcx,rax
   4d532:	add    rcx,r15
   4d535:	mov    QWORD PTR [rsi+rax*8],rcx
   4d539:	mov    DWORD PTR [rdi+rax*4],0xffffffff
   4d540:	add    rax,0x1
   4d544:	cmp    rax,rdx
   4d547:	jne    4d526 <_obstack_memory_used@@Base+0x8a6>
   4d549:	mov    rbx,QWORD PTR [r13+0x58]
   4d54d:	sub    rdx,rbp
   4d550:	add    rbx,rdx
   4d553:	mov    QWORD PTR [r13+0x58],rbx
   4d557:	cmp    QWORD PTR [r13+0x60],r15
   4d55b:	jle    4d561 <_obstack_memory_used@@Base+0x8e1>
   4d55d:	add    QWORD PTR [r13+0x68],rdx
   4d561:	mov    rax,QWORD PTR [r13+0x40]
   4d565:	mov    r14,QWORD PTR [rsp]
   4d569:	cmp    rbx,rax
   4d56c:	cmovg  rbx,rax
   4d570:	add    r15,rbp
   4d573:	jmp    4cfa6 <_obstack_memory_used@@Base+0x326>
   4d578:	lea    rdi,[rax*8+0x0]
   4d580:	mov    QWORD PTR [rsp+0x18],rdx
   4d585:	mov    DWORD PTR [rsp+0x10],ecx
   4d589:	call   a4a0 <malloc@plt>
   4d58e:	mov    ecx,DWORD PTR [rsp+0x10]
   4d592:	mov    rdx,QWORD PTR [rsp+0x18]
   4d597:	test   rax,rax
   4d59a:	mov    QWORD PTR [r13+0x18],rax
   4d59e:	jne    4d4bb <_obstack_memory_used@@Base+0x83b>
   4d5a4:	mov    eax,0xc
   4d5a9:	jmp    4cfb5 <_obstack_memory_used@@Base+0x335>
   4d5ae:	mov    rdx,QWORD PTR [r13+0x18]
   4d5b2:	mov    QWORD PTR [rdx+r14*8],r15
   4d5b6:	jmp    4d3f7 <_obstack_memory_used@@Base+0x777>
   4d5bb:	movzx  eax,BYTE PTR [rdx+rax*1]
   4d5bf:	jmp    4d3de <_obstack_memory_used@@Base+0x75e>
   4d5c4:	lea    r12,[rsp+0x40]
   4d5c9:	jmp    4d35d <_obstack_memory_used@@Base+0x6dd>
   4d5ce:	call   a0a0 <__stack_chk_fail@plt>
   4d5d3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4d5de:	xchg   ax,ax
   4d5e0:	endbr64 
   4d5e4:	push   r12
   4d5e6:	mov    rax,QWORD PTR [rdi+0x58]
   4d5ea:	mov    r12,QWORD PTR [rdi+0x40]
   4d5ee:	push   rbp
   4d5ef:	mov    rbp,rdi
   4d5f2:	push   rbx
   4d5f3:	mov    rbx,QWORD PTR [rdi+0x30]
   4d5f7:	cmp    r12,rax
   4d5fa:	cmovg  r12,rax
   4d5fe:	cmp    r12,rbx
   4d601:	jle    4d660 <_obstack_memory_used@@Base+0x9e0>
   4d603:	call   9d10 <__ctype_toupper_loc@plt>
   4d608:	nop    DWORD PTR [rax+rax*1+0x0]
   4d610:	mov    rdx,QWORD PTR [rbp+0x0]
   4d614:	mov    rcx,QWORD PTR [rbp+0x78]
   4d618:	add    rdx,rbx
   4d61b:	add    rdx,QWORD PTR [rbp+0x28]
   4d61f:	movzx  edx,BYTE PTR [rdx]
   4d622:	test   rcx,rcx
   4d625:	jne    4d650 <_obstack_memory_used@@Base+0x9d0>
   4d627:	mov    rsi,QWORD PTR [rax]
   4d62a:	mov    rcx,QWORD PTR [rbp+0x8]
   4d62e:	mov    edx,DWORD PTR [rsi+rdx*4]
   4d631:	mov    BYTE PTR [rcx+rbx*1],dl
   4d634:	add    rbx,0x1
   4d638:	cmp    r12,rbx
   4d63b:	jne    4d610 <_obstack_memory_used@@Base+0x990>
   4d63d:	mov    QWORD PTR [rbp+0x30],r12
   4d641:	pop    rbx
   4d642:	mov    QWORD PTR [rbp+0x38],r12
   4d646:	pop    rbp
   4d647:	pop    r12
   4d649:	ret    
   4d64a:	nop    WORD PTR [rax+rax*1+0x0]
   4d650:	movzx  edx,BYTE PTR [rcx+rdx*1]
   4d654:	jmp    4d627 <_obstack_memory_used@@Base+0x9a7>
   4d656:	cs nop WORD PTR [rax+rax*1+0x0]
   4d660:	mov    r12,rbx
   4d663:	pop    rbx
   4d664:	mov    QWORD PTR [rbp+0x30],r12
   4d668:	mov    QWORD PTR [rbp+0x38],r12
   4d66c:	pop    rbp
   4d66d:	pop    r12
   4d66f:	ret    
   4d670:	endbr64 
   4d674:	push   rbp
   4d675:	mov    rbp,rdi
   4d678:	push   rbx
   4d679:	sub    rsp,0x8
   4d67d:	test   rsi,rsi
   4d680:	js     4d710 <_obstack_memory_used@@Base+0xa90>
   4d686:	cmp    QWORD PTR [rdi+0x58],rsi
   4d68a:	je     4d720 <_obstack_memory_used@@Base+0xaa0>
   4d690:	cmp    DWORD PTR [rdi+0x90],0x1
   4d697:	jle    4d6c8 <_obstack_memory_used@@Base+0xa48>
   4d699:	mov    rax,QWORD PTR [rdi+0x10]
   4d69d:	jmp    4d6a6 <_obstack_memory_used@@Base+0xa26>
   4d69f:	nop
   4d6a0:	sub    rsi,0x1
   4d6a4:	jb     4d710 <_obstack_memory_used@@Base+0xa90>
   4d6a6:	mov    ebx,DWORD PTR [rax+rsi*4]
   4d6a9:	cmp    ebx,0xffffffff
   4d6ac:	je     4d6a0 <_obstack_memory_used@@Base+0xa20>
   4d6ae:	cmp    BYTE PTR [rbp+0x8e],0x0
   4d6b5:	jne    4d730 <_obstack_memory_used@@Base+0xab0>
   4d6b7:	xor    eax,eax
   4d6b9:	cmp    ebx,0xa
   4d6bc:	je     4d6f9 <_obstack_memory_used@@Base+0xa79>
   4d6be:	add    rsp,0x8
   4d6c2:	pop    rbx
   4d6c3:	pop    rbp
   4d6c4:	ret    
   4d6c5:	nop    DWORD PTR [rax]
   4d6c8:	mov    rax,QWORD PTR [rdi+0x8]
   4d6cc:	mov    rdx,QWORD PTR [rdi+0x80]
   4d6d3:	movzx  eax,BYTE PTR [rax+rsi*1]
   4d6d7:	mov    rcx,rax
   4d6da:	sar    rax,0x6
   4d6de:	mov    rax,QWORD PTR [rdx+rax*8]
   4d6e2:	shr    rax,cl
   4d6e5:	mov    rdx,rax
   4d6e8:	mov    eax,0x1
   4d6ed:	and    edx,0x1
   4d6f0:	jne    4d6be <_obstack_memory_used@@Base+0xa3e>
   4d6f2:	xor    eax,eax
   4d6f4:	cmp    cl,0xa
   4d6f7:	jne    4d6be <_obstack_memory_used@@Base+0xa3e>
   4d6f9:	xor    eax,eax
   4d6fb:	cmp    BYTE PTR [rbp+0x8d],0x0
   4d702:	setne  al
   4d705:	add    rsp,0x8
   4d709:	add    eax,eax
   4d70b:	pop    rbx
   4d70c:	pop    rbp
   4d70d:	ret    
   4d70e:	xchg   ax,ax
   4d710:	mov    eax,DWORD PTR [rbp+0x70]
   4d713:	add    rsp,0x8
   4d717:	pop    rbx
   4d718:	pop    rbp
   4d719:	ret    
   4d71a:	nop    WORD PTR [rax+rax*1+0x0]
   4d720:	and    edx,0x2
   4d723:	cmp    edx,0x1
   4d726:	sbb    eax,eax
   4d728:	and    eax,0x2
   4d72b:	add    eax,0x8
   4d72e:	jmp    4d6be <_obstack_memory_used@@Base+0xa3e>
   4d730:	mov    edi,ebx
   4d732:	call   a490 <iswalnum@plt>
   4d737:	test   eax,eax
   4d739:	jne    4d744 <_obstack_memory_used@@Base+0xac4>
   4d73b:	cmp    ebx,0x5f
   4d73e:	jne    4d6b7 <_obstack_memory_used@@Base+0xa37>
   4d744:	mov    eax,0x1
   4d749:	jmp    4d6be <_obstack_memory_used@@Base+0xa3e>
   4d74e:	xchg   ax,ax
   4d750:	endbr64 
   4d754:	push   r12
   4d756:	push   rbp
   4d757:	push   rbx
   4d758:	mov    rdx,QWORD PTR [rsi+0x8]
   4d75c:	mov    rbx,rdi
   4d75f:	mov    QWORD PTR [rdi+0x8],rdx
   4d763:	test   rdx,rdx
   4d766:	jle    4d7a0 <_obstack_memory_used@@Base+0xb20>
   4d768:	mov    QWORD PTR [rdi],rdx
   4d76b:	lea    r12,[rdx*8+0x0]
   4d773:	mov    rbp,rsi
   4d776:	mov    rdi,r12
   4d779:	call   a4a0 <malloc@plt>
   4d77e:	mov    QWORD PTR [rbx+0x10],rax
   4d782:	mov    rdi,rax
   4d785:	test   rax,rax
   4d788:	je     4d7c0 <_obstack_memory_used@@Base+0xb40>
   4d78a:	mov    rsi,QWORD PTR [rbp+0x10]
   4d78e:	mov    rdx,r12
   4d791:	call   a420 <memcpy@plt>
   4d796:	xor    eax,eax
   4d798:	pop    rbx
   4d799:	pop    rbp
   4d79a:	pop    r12
   4d79c:	ret    
   4d79d:	nop    DWORD PTR [rax]
   4d7a0:	pxor   xmm0,xmm0
   4d7a4:	mov    QWORD PTR [rdi+0x10],0x0
   4d7ac:	xor    eax,eax
   4d7ae:	movups XMMWORD PTR [rdi],xmm0
   4d7b1:	pop    rbx
   4d7b2:	pop    rbp
   4d7b3:	pop    r12
   4d7b5:	ret    
   4d7b6:	cs nop WORD PTR [rax+rax*1+0x0]
   4d7c0:	mov    QWORD PTR [rbx+0x8],0x0
   4d7c8:	mov    eax,0xc
   4d7cd:	mov    QWORD PTR [rbx],0x0
   4d7d4:	jmp    4d798 <_obstack_memory_used@@Base+0xb18>
   4d7d6:	cs nop WORD PTR [rax+rax*1+0x0]
   4d7e0:	endbr64 
   4d7e4:	mov    rcx,QWORD PTR [rsi+0x8]
   4d7e8:	xor    eax,eax
   4d7ea:	test   rcx,rcx
   4d7ed:	je     4d940 <_obstack_memory_used@@Base+0xcc0>
   4d7f3:	push   r13
   4d7f5:	push   r12
   4d7f7:	mov    r12,rdx
   4d7fa:	push   rbp
   4d7fb:	mov    rbp,rsi
   4d7fe:	push   rbx
   4d7ff:	sub    rsp,0x8
   4d803:	mov    rsi,QWORD PTR [rdx+0x8]
   4d807:	test   rsi,rsi
   4d80a:	je     4d8b8 <_obstack_memory_used@@Base+0xc38>
   4d810:	mov    rax,QWORD PTR [rdi+0x8]
   4d814:	mov    r8,QWORD PTR [rdi]
   4d817:	lea    rdx,[rcx+rsi*1]
   4d81b:	mov    rbx,rdi
   4d81e:	mov    rdi,QWORD PTR [rdi+0x10]
   4d822:	lea    r9,[rdx+rax*1]
   4d826:	cmp    r9,r8
   4d829:	jg     4d941 <_obstack_memory_used@@Base+0xcc1>
   4d82f:	lea    r9,[rax+rcx*1]
   4d833:	mov    r11,QWORD PTR [rbp+0x10]
   4d837:	sub    rcx,0x1
   4d83b:	sub    rax,0x1
   4d83f:	mov    r10,QWORD PTR [r12+0x10]
   4d844:	add    r9,rsi
   4d847:	sub    rsi,0x1
   4d84b:	mov    rdx,QWORD PTR [r11+rcx*8]
   4d84f:	mov    r8,QWORD PTR [r10+rsi*8]
   4d853:	nop    DWORD PTR [rax+rax*1+0x0]
   4d858:	cmp    rdx,r8
   4d85b:	je     4d86e <_obstack_memory_used@@Base+0xbee>
   4d85d:	jge    4d8c8 <_obstack_memory_used@@Base+0xc48>
   4d85f:	sub    rsi,0x1
   4d863:	js     4d8e0 <_obstack_memory_used@@Base+0xc60>
   4d865:	mov    r8,QWORD PTR [r10+rsi*8]
   4d869:	cmp    rdx,r8
   4d86c:	jne    4d85d <_obstack_memory_used@@Base+0xbdd>
   4d86e:	test   rax,rax
   4d871:	jns    4d87e <_obstack_memory_used@@Base+0xbfe>
   4d873:	jmp    4d886 <_obstack_memory_used@@Base+0xc06>
   4d875:	nop    DWORD PTR [rax]
   4d878:	sub    rax,0x1
   4d87c:	jb     4d886 <_obstack_memory_used@@Base+0xc06>
   4d87e:	cmp    QWORD PTR [rdi+rax*8],rdx
   4d882:	jg     4d878 <_obstack_memory_used@@Base+0xbf8>
   4d884:	je     4d88e <_obstack_memory_used@@Base+0xc0e>
   4d886:	sub    r9,0x1
   4d88a:	mov    QWORD PTR [rdi+r9*8],rdx
   4d88e:	sub    rcx,0x1
   4d892:	js     4d8e0 <_obstack_memory_used@@Base+0xc60>
   4d894:	sub    rsi,0x1
   4d898:	js     4d8e0 <_obstack_memory_used@@Base+0xc60>
   4d89a:	mov    rdx,QWORD PTR [r11+rcx*8]
   4d89e:	jmp    4d865 <_obstack_memory_used@@Base+0xbe5>
   4d8a0:	mov    QWORD PTR [r10],rcx
   4d8a3:	sub    rax,0x1
   4d8a7:	jae    4d910 <_obstack_memory_used@@Base+0xc90>
   4d8a9:	shl    rdx,0x3
   4d8ad:	lea    rsi,[rdi+r9*8]
   4d8b1:	call   a420 <memcpy@plt>
   4d8b6:	xor    eax,eax
   4d8b8:	add    rsp,0x8
   4d8bc:	pop    rbx
   4d8bd:	pop    rbp
   4d8be:	pop    r12
   4d8c0:	pop    r13
   4d8c2:	ret    
   4d8c3:	nop    DWORD PTR [rax+rax*1+0x0]
   4d8c8:	sub    rcx,0x1
   4d8cc:	js     4d8e0 <_obstack_memory_used@@Base+0xc60>
   4d8ce:	mov    rdx,QWORD PTR [r11+rcx*8]
   4d8d2:	jmp    4d858 <_obstack_memory_used@@Base+0xbd8>
   4d8d7:	nop    WORD PTR [rax+rax*1+0x0]
   4d8e0:	mov    rcx,QWORD PTR [rbx+0x8]
   4d8e4:	mov    rdx,QWORD PTR [rbp+0x8]
   4d8e8:	add    rdx,rcx
   4d8eb:	add    rdx,QWORD PTR [r12+0x8]
   4d8f0:	lea    rax,[rcx-0x1]
   4d8f4:	lea    r8,[rdx-0x1]
   4d8f8:	sub    rdx,r9
   4d8fb:	add    rcx,rdx
   4d8fe:	mov    QWORD PTR [rbx+0x8],rcx
   4d902:	test   rdx,rdx
   4d905:	jle    4d8a9 <_obstack_memory_used@@Base+0xc29>
   4d907:	test   rax,rax
   4d90a:	js     4d8a9 <_obstack_memory_used@@Base+0xc29>
   4d90c:	nop    DWORD PTR [rax+0x0]
   4d910:	mov    rsi,QWORD PTR [rdi+r8*8]
   4d914:	mov    rcx,QWORD PTR [rdi+rax*8]
   4d918:	lea    r10,[rax+rdx*1]
   4d91c:	lea    r10,[rdi+r10*8]
   4d920:	cmp    rsi,rcx
   4d923:	jle    4d8a0 <_obstack_memory_used@@Base+0xc20>
   4d929:	mov    QWORD PTR [r10],rsi
   4d92c:	sub    r8,0x1
   4d930:	sub    rdx,0x1
   4d934:	jne    4d910 <_obstack_memory_used@@Base+0xc90>
   4d936:	xor    edx,edx
   4d938:	jmp    4d8ad <_obstack_memory_used@@Base+0xc2d>
   4d93d:	nop    DWORD PTR [rax]
   4d940:	ret    
   4d941:	lea    r13,[rdx+r8*1]
   4d945:	lea    rsi,[r13*8+0x0]
   4d94d:	call   a570 <realloc@plt>
   4d952:	mov    rdi,rax
   4d955:	test   rax,rax
   4d958:	je     4d973 <_obstack_memory_used@@Base+0xcf3>
   4d95a:	mov    rcx,QWORD PTR [rbp+0x8]
   4d95e:	mov    rsi,QWORD PTR [r12+0x8]
   4d963:	mov    QWORD PTR [rbx+0x10],rax
   4d967:	mov    QWORD PTR [rbx],r13
   4d96a:	mov    rax,QWORD PTR [rbx+0x8]
   4d96e:	jmp    4d82f <_obstack_memory_used@@Base+0xbaf>
   4d973:	mov    eax,0xc
   4d978:	jmp    4d8b8 <_obstack_memory_used@@Base+0xc38>
   4d97d:	nop    DWORD PTR [rax]
   4d980:	endbr64 
   4d984:	push   r14
   4d986:	push   r13
   4d988:	mov    r13,rdi
   4d98b:	push   rbp
   4d98c:	push   rbx
   4d98d:	sub    rsp,0x18
   4d991:	test   rsi,rsi
   4d994:	je     4da45 <_obstack_memory_used@@Base+0xdc5>
   4d99a:	mov    rbx,QWORD PTR [rsi+0x8]
   4d99e:	test   rdx,rdx
   4d9a1:	je     4da40 <_obstack_memory_used@@Base+0xdc0>
   4d9a7:	test   rbx,rbx
   4d9aa:	jle    4da45 <_obstack_memory_used@@Base+0xdc5>
   4d9b0:	mov    r14,QWORD PTR [rdx+0x8]
   4d9b4:	mov    QWORD PTR [rsp],rdx
   4d9b8:	test   r14,r14
   4d9bb:	jle    4da73 <_obstack_memory_used@@Base+0xdf3>
   4d9c1:	lea    rdi,[rbx+r14*1]
   4d9c5:	mov    QWORD PTR [rsp+0x8],rsi
   4d9ca:	mov    QWORD PTR [r13+0x0],rdi
   4d9ce:	shl    rdi,0x3
   4d9d2:	call   a4a0 <malloc@plt>
   4d9d7:	mov    rsi,QWORD PTR [rsp+0x8]
   4d9dc:	mov    rdx,QWORD PTR [rsp]
   4d9e0:	test   rax,rax
   4d9e3:	mov    QWORD PTR [r13+0x10],rax
   4d9e7:	mov    rdi,rax
   4d9ea:	je     4dae0 <_obstack_memory_used@@Base+0xe60>
   4d9f0:	mov    r8,QWORD PTR [rdx+0x10]
   4d9f4:	mov    r9,QWORD PTR [rsi+0x10]
   4d9f8:	xor    ebp,ebp
   4d9fa:	xor    eax,eax
   4d9fc:	xor    edx,edx
   4d9fe:	jmp    4da22 <_obstack_memory_used@@Base+0xda2>
   4da00:	sete   sil
   4da04:	add    rdx,0x1
   4da08:	movzx  esi,sil
   4da0c:	add    rax,rsi
   4da0f:	mov    QWORD PTR [rdi+rbp*8-0x8],rcx
   4da14:	cmp    rbx,rdx
   4da17:	jle    4da88 <_obstack_memory_used@@Base+0xe08>
   4da19:	cmp    r14,rax
   4da1c:	jle    4dac0 <_obstack_memory_used@@Base+0xe40>
   4da22:	mov    rcx,QWORD PTR [r9+rdx*8]
   4da26:	mov    rsi,QWORD PTR [r8+rax*8]
   4da2a:	add    rbp,0x1
   4da2e:	cmp    rcx,rsi
   4da31:	jle    4da00 <_obstack_memory_used@@Base+0xd80>
   4da33:	add    rax,0x1
   4da37:	mov    rcx,rsi
   4da3a:	jmp    4da0f <_obstack_memory_used@@Base+0xd8f>
   4da3c:	nop    DWORD PTR [rax+0x0]
   4da40:	test   rbx,rbx
   4da43:	jg     4da73 <_obstack_memory_used@@Base+0xdf3>
   4da45:	test   rdx,rdx
   4da48:	je     4da51 <_obstack_memory_used@@Base+0xdd1>
   4da4a:	cmp    QWORD PTR [rdx+0x8],0x0
   4da4f:	jg     4da70 <_obstack_memory_used@@Base+0xdf0>
   4da51:	mov    QWORD PTR [r13+0x10],0x0
   4da59:	pxor   xmm0,xmm0
   4da5d:	xor    eax,eax
   4da5f:	movups XMMWORD PTR [r13+0x0],xmm0
   4da64:	add    rsp,0x18
   4da68:	pop    rbx
   4da69:	pop    rbp
   4da6a:	pop    r13
   4da6c:	pop    r14
   4da6e:	ret    
   4da6f:	nop
   4da70:	mov    rsi,rdx
   4da73:	add    rsp,0x18
   4da77:	mov    rdi,r13
   4da7a:	pop    rbx
   4da7b:	pop    rbp
   4da7c:	pop    r13
   4da7e:	pop    r14
   4da80:	jmp    4d750 <_obstack_memory_used@@Base+0xad0>
   4da85:	nop    DWORD PTR [rax]
   4da88:	cmp    r14,rax
   4da8b:	jg     4daa0 <_obstack_memory_used@@Base+0xe20>
   4da8d:	mov    QWORD PTR [r13+0x8],rbp
   4da91:	add    rsp,0x18
   4da95:	xor    eax,eax
   4da97:	pop    rbx
   4da98:	pop    rbp
   4da99:	pop    r13
   4da9b:	pop    r14
   4da9d:	ret    
   4da9e:	xchg   ax,ax
   4daa0:	sub    r14,rax
   4daa3:	lea    rdi,[rdi+rbp*8]
   4daa7:	lea    rsi,[r8+rax*8]
   4daab:	lea    rdx,[r14*8+0x0]
   4dab3:	add    rbp,r14
   4dab6:	call   a420 <memcpy@plt>
   4dabb:	jmp    4da8d <_obstack_memory_used@@Base+0xe0d>
   4dabd:	nop    DWORD PTR [rax]
   4dac0:	sub    rbx,rdx
   4dac3:	lea    rdi,[rdi+rbp*8]
   4dac7:	lea    rsi,[r9+rdx*8]
   4dacb:	lea    r8,[rbx*8+0x0]
   4dad3:	add    rbp,rbx
   4dad6:	mov    rdx,r8
   4dad9:	call   a420 <memcpy@plt>
   4dade:	jmp    4da8d <_obstack_memory_used@@Base+0xe0d>
   4dae0:	mov    eax,0xc
   4dae5:	jmp    4da64 <_obstack_memory_used@@Base+0xde4>
   4daea:	nop    WORD PTR [rax+rax*1+0x0]
   4daf0:	endbr64 
   4daf4:	test   rsi,rsi
   4daf7:	je     4dc98 <_obstack_memory_used@@Base+0x1018>
   4dafd:	push   r12
   4daff:	mov    r12,rsi
   4db02:	push   rbp
   4db03:	push   rbx
   4db04:	mov    rcx,QWORD PTR [rsi+0x8]
   4db08:	test   rcx,rcx
   4db0b:	je     4dc02 <_obstack_memory_used@@Base+0xf82>
   4db11:	mov    rax,QWORD PTR [rdi+0x8]
   4db15:	mov    rdx,QWORD PTR [rdi]
   4db18:	mov    rbp,rdi
   4db1b:	lea    rsi,[rax+rcx*2]
   4db1f:	cmp    rdx,rsi
   4db22:	jl     4dc40 <_obstack_memory_used@@Base+0xfc0>
   4db28:	test   rax,rax
   4db2b:	je     4dc74 <_obstack_memory_used@@Base+0xff4>
   4db31:	lea    rbx,[rax+rcx*2]
   4db35:	lea    rdx,[rcx-0x1]
   4db39:	sub    rax,0x1
   4db3d:	neg    rcx
   4db40:	jns    4db8c <_obstack_memory_used@@Base+0xf0c>
   4db42:	test   rax,rax
   4db45:	js     4db8c <_obstack_memory_used@@Base+0xf0c>
   4db47:	mov    rsi,QWORD PTR [rbp+0x10]
   4db4b:	mov    rdi,QWORD PTR [r12+0x10]
   4db50:	jmp    4db72 <_obstack_memory_used@@Base+0xef2>
   4db52:	nop    WORD PTR [rax+rax*1+0x0]
   4db58:	jge    4dc10 <_obstack_memory_used@@Base+0xf90>
   4db5e:	sub    rbx,0x1
   4db62:	sub    rdx,0x1
   4db66:	mov    QWORD PTR [rsi+rbx*8],rcx
   4db6a:	mov    rcx,rax
   4db6d:	or     rcx,rdx
   4db70:	js     4db8c <_obstack_memory_used@@Base+0xf0c>
   4db72:	mov    rcx,QWORD PTR [rdi+rdx*8]
   4db76:	cmp    QWORD PTR [rsi+rax*8],rcx
   4db7a:	jne    4db58 <_obstack_memory_used@@Base+0xed8>
   4db7c:	sub    rax,0x1
   4db80:	sub    rdx,0x1
   4db84:	mov    rcx,rax
   4db87:	or     rcx,rdx
   4db8a:	jns    4db72 <_obstack_memory_used@@Base+0xef2>
   4db8c:	test   rdx,rdx
   4db8f:	js     4dbae <_obstack_memory_used@@Base+0xf2e>
   4db91:	add    rdx,0x1
   4db95:	mov    rax,QWORD PTR [rbp+0x10]
   4db99:	mov    rsi,QWORD PTR [r12+0x10]
   4db9e:	sub    rbx,rdx
   4dba1:	shl    rdx,0x3
   4dba5:	lea    rdi,[rax+rbx*8]
   4dba9:	call   a420 <memcpy@plt>
   4dbae:	mov    rcx,QWORD PTR [rbp+0x8]
   4dbb2:	mov    rax,QWORD PTR [r12+0x8]
   4dbb7:	lea    r8,[rcx+rax*2-0x1]
   4dbbc:	mov    rdx,r8
   4dbbf:	sub    rdx,rbx
   4dbc2:	add    rdx,0x1
   4dbc6:	je     4dc02 <_obstack_memory_used@@Base+0xf82>
   4dbc8:	lea    rax,[rcx-0x1]
   4dbcc:	add    rcx,rdx
   4dbcf:	mov    rdi,QWORD PTR [rbp+0x10]
   4dbd3:	mov    QWORD PTR [rbp+0x8],rcx
   4dbd7:	nop    WORD PTR [rax+rax*1+0x0]
   4dbe0:	mov    rsi,QWORD PTR [rdi+r8*8]
   4dbe4:	mov    rcx,QWORD PTR [rdi+rax*8]
   4dbe8:	lea    r9,[rax+rdx*1]
   4dbec:	lea    r9,[rdi+r9*8]
   4dbf0:	cmp    rsi,rcx
   4dbf3:	jle    4dc20 <_obstack_memory_used@@Base+0xfa0>
   4dbf5:	mov    QWORD PTR [r9],rsi
   4dbf8:	sub    r8,0x1
   4dbfc:	sub    rdx,0x1
   4dc00:	jne    4dbe0 <_obstack_memory_used@@Base+0xf60>
   4dc02:	xor    eax,eax
   4dc04:	pop    rbx
   4dc05:	pop    rbp
   4dc06:	pop    r12
   4dc08:	ret    
   4dc09:	nop    DWORD PTR [rax+0x0]
   4dc10:	sub    rax,0x1
   4dc14:	jmp    4db6a <_obstack_memory_used@@Base+0xeea>
   4dc19:	nop    DWORD PTR [rax+0x0]
   4dc20:	mov    QWORD PTR [r9],rcx
   4dc23:	sub    rax,0x1
   4dc27:	jns    4dbe0 <_obstack_memory_used@@Base+0xf60>
   4dc29:	lea    rsi,[rdi+rbx*8]
   4dc2d:	shl    rdx,0x3
   4dc31:	call   a420 <memcpy@plt>
   4dc36:	pop    rbx
   4dc37:	xor    eax,eax
   4dc39:	pop    rbp
   4dc3a:	pop    r12
   4dc3c:	ret    
   4dc3d:	nop    DWORD PTR [rax]
   4dc40:	lea    rsi,[rcx+rdx*1]
   4dc44:	mov    rdi,QWORD PTR [rdi+0x10]
   4dc48:	lea    rbx,[rsi+rsi*1]
   4dc4c:	shl    rsi,0x4
   4dc50:	call   a570 <realloc@plt>
   4dc55:	test   rax,rax
   4dc58:	je     4dc9b <_obstack_memory_used@@Base+0x101b>
   4dc5a:	mov    QWORD PTR [rbp+0x10],rax
   4dc5e:	mov    rax,QWORD PTR [rbp+0x8]
   4dc62:	mov    QWORD PTR [rbp+0x0],rbx
   4dc66:	mov    rcx,QWORD PTR [r12+0x8]
   4dc6b:	test   rax,rax
   4dc6e:	jne    4db31 <_obstack_memory_used@@Base+0xeb1>
   4dc74:	mov    QWORD PTR [rbp+0x8],rcx
   4dc78:	mov    rdi,QWORD PTR [rbp+0x10]
   4dc7c:	lea    rdx,[rcx*8+0x0]
   4dc84:	mov    rsi,QWORD PTR [r12+0x10]
   4dc89:	call   a420 <memcpy@plt>
   4dc8e:	jmp    4dc02 <_obstack_memory_used@@Base+0xf82>
   4dc93:	nop    DWORD PTR [rax+rax*1+0x0]
   4dc98:	xor    eax,eax
   4dc9a:	ret    
   4dc9b:	mov    eax,0xc
   4dca0:	jmp    4dc04 <_obstack_memory_used@@Base+0xf84>
   4dca5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4dcb0:	endbr64 
   4dcb4:	push   r12
   4dcb6:	push   rbp
   4dcb7:	mov    rbp,rsi
   4dcba:	push   rbx
   4dcbb:	mov    rax,QWORD PTR [rdi]
   4dcbe:	mov    rbx,rdi
   4dcc1:	test   rax,rax
   4dcc4:	je     4dcf0 <_obstack_memory_used@@Base+0x1070>
   4dcc6:	mov    rsi,QWORD PTR [rdi+0x8]
   4dcca:	mov    r12,QWORD PTR [rdi+0x10]
   4dcce:	test   rsi,rsi
   4dcd1:	jne    4dd20 <_obstack_memory_used@@Base+0x10a0>
   4dcd3:	mov    QWORD PTR [r12],rbp
   4dcd7:	mov    eax,0x1
   4dcdc:	add    QWORD PTR [rdi+0x8],0x1
   4dce1:	pop    rbx
   4dce2:	pop    rbp
   4dce3:	pop    r12
   4dce5:	ret    
   4dce6:	cs nop WORD PTR [rax+rax*1+0x0]
   4dcf0:	mov    QWORD PTR [rdi],0x1
   4dcf7:	mov    QWORD PTR [rdi+0x8],0x1
   4dcff:	mov    edi,0x8
   4dd04:	call   a4a0 <malloc@plt>
   4dd09:	mov    QWORD PTR [rbx+0x10],rax
   4dd0d:	test   rax,rax
   4dd10:	je     4dd88 <_obstack_memory_used@@Base+0x1108>
   4dd12:	mov    QWORD PTR [rax],rbp
   4dd15:	mov    eax,0x1
   4dd1a:	pop    rbx
   4dd1b:	pop    rbp
   4dd1c:	pop    r12
   4dd1e:	ret    
   4dd1f:	nop
   4dd20:	cmp    rax,rsi
   4dd23:	je     4dda0 <_obstack_memory_used@@Base+0x1120>
   4dd25:	lea    rdx,[rsi*8+0x0]
   4dd2d:	cmp    QWORD PTR [r12],rbp
   4dd31:	jle    4dd60 <_obstack_memory_used@@Base+0x10e0>
   4dd33:	test   rsi,rsi
   4dd36:	jle    4dd47 <_obstack_memory_used@@Base+0x10c7>
   4dd38:	lea    rdi,[r12+0x8]
   4dd3d:	mov    rsi,r12
   4dd40:	call   a630 <memmove@plt>
   4dd45:	xor    edx,edx
   4dd47:	mov    QWORD PTR [r12+rdx*1],rbp
   4dd4b:	mov    eax,0x1
   4dd50:	add    QWORD PTR [rbx+0x8],0x1
   4dd55:	jmp    4dce1 <_obstack_memory_used@@Base+0x1061>
   4dd57:	nop    WORD PTR [rax+rax*1+0x0]
   4dd60:	mov    rax,QWORD PTR [r12+rdx*1-0x8]
   4dd65:	cmp    rbp,rax
   4dd68:	jge    4dd47 <_obstack_memory_used@@Base+0x10c7>
   4dd6a:	nop    WORD PTR [rax+rax*1+0x0]
   4dd70:	mov    QWORD PTR [r12+rdx*1],rax
   4dd74:	sub    rdx,0x8
   4dd78:	mov    rax,QWORD PTR [r12+rdx*1-0x8]
   4dd7d:	cmp    rax,rbp
   4dd80:	jg     4dd70 <_obstack_memory_used@@Base+0x10f0>
   4dd82:	jmp    4dd47 <_obstack_memory_used@@Base+0x10c7>
   4dd84:	nop    DWORD PTR [rax+0x0]
   4dd88:	mov    QWORD PTR [rbx+0x8],0x0
   4dd90:	mov    QWORD PTR [rbx],0x0
   4dd97:	jmp    4dce1 <_obstack_memory_used@@Base+0x1061>
   4dd9c:	nop    DWORD PTR [rax+0x0]
   4dda0:	lea    rax,[rsi+rsi*1]
   4dda4:	shl    rsi,0x4
   4dda8:	mov    QWORD PTR [rdi],rax
   4ddab:	mov    rdi,r12
   4ddae:	call   a570 <realloc@plt>
   4ddb3:	mov    r12,rax
   4ddb6:	test   rax,rax
   4ddb9:	je     4ddc8 <_obstack_memory_used@@Base+0x1148>
   4ddbb:	mov    QWORD PTR [rbx+0x10],rax
   4ddbf:	mov    rsi,QWORD PTR [rbx+0x8]
   4ddc3:	jmp    4dd25 <_obstack_memory_used@@Base+0x10a5>
   4ddc8:	xor    eax,eax
   4ddca:	jmp    4dce1 <_obstack_memory_used@@Base+0x1061>
   4ddcf:	nop
   4ddd0:	push   r15
   4ddd2:	mov    r9,rsi
   4ddd5:	push   r14
   4ddd7:	mov    r14,rdi
   4ddda:	push   r13
   4dddc:	push   r12
   4ddde:	mov    r12,rdx
   4dde1:	push   rbp
   4dde2:	mov    ebp,r8d
   4dde5:	push   rbx
   4dde6:	sub    rsp,0x18
   4ddea:	mov    QWORD PTR [rsp+0x8],rcx
   4ddef:	mov    rdi,QWORD PTR [r14]
   4ddf2:	mov    rax,r9
   4ddf5:	mov    r8,QWORD PTR [r14+0x28]
   4ddf9:	mov    r15,r12
   4ddfc:	shl    rax,0x4
   4de00:	add    rax,rdi
   4de03:	cmp    BYTE PTR [rax+0x8],0x4
   4de07:	je     4df70 <_obstack_memory_used@@Base+0x12f0>
   4de0d:	lea    r15,[r9+r9*2]
   4de11:	shl    r15,0x3
   4de15:	lea    rsi,[r8+r15*1]
   4de19:	mov    rcx,QWORD PTR [rsi+0x8]
   4de1d:	test   rcx,rcx
   4de20:	je     4e024 <_obstack_memory_used@@Base+0x13a4>
   4de26:	lea    rbx,[r12+r12*2]
   4de2a:	mov    rsi,QWORD PTR [rsi+0x10]
   4de2e:	shl    rbx,0x3
   4de32:	add    r8,rbx
   4de35:	mov    r13,QWORD PTR [rsi]
   4de38:	mov    QWORD PTR [r8+0x8],0x0
   4de40:	cmp    rcx,0x1
   4de44:	je     4df20 <_obstack_memory_used@@Base+0x12a0>
   4de4a:	mov    rdx,QWORD PTR [r14+0x10]
   4de4e:	lea    rsi,[rdx-0x1]
   4de52:	mov    rax,rsi
   4de55:	shl    rax,0x4
   4de59:	add    rax,rdi
   4de5c:	test   BYTE PTR [rax+0xa],0x4
   4de60:	je     4dfd0 <_obstack_memory_used@@Base+0x1350>
   4de66:	test   rsi,rsi
   4de69:	jle    4dfd0 <_obstack_memory_used@@Base+0x1350>
   4de6f:	shl    rdx,0x4
   4de73:	sub    rdi,rax
   4de76:	mov    rcx,QWORD PTR [r14+0x20]
   4de7a:	lea    rdi,[rdi+rdx*1-0x20]
   4de7f:	jmp    4dea2 <_obstack_memory_used@@Base+0x1222>
   4de81:	nop    DWORD PTR [rax+0x0]
   4de88:	add    rax,rdi
   4de8b:	sub    rsi,0x1
   4de8f:	test   BYTE PTR [rax+0xa],0x4
   4de93:	je     4dfd0 <_obstack_memory_used@@Base+0x1350>
   4de99:	test   rsi,rsi
   4de9c:	jle    4dfd0 <_obstack_memory_used@@Base+0x1350>
   4dea2:	cmp    QWORD PTR [rcx+rsi*8],r13
   4dea6:	jne    4de88 <_obstack_memory_used@@Base+0x1208>
   4dea8:	mov    edx,DWORD PTR [rax+0x8]
   4deab:	shr    edx,0x8
   4deae:	and    edx,0x3ff
   4deb4:	cmp    ebp,edx
   4deb6:	jne    4de88 <_obstack_memory_used@@Base+0x1208>
   4deb8:	mov    rdi,r8
   4debb:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4dec0:	test   al,al
   4dec2:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4dec4:	mov    rax,QWORD PTR [r14+0x28]
   4dec8:	mov    edx,ebp
   4deca:	mov    rdi,r14
   4decd:	mov    rax,QWORD PTR [rax+r15*1+0x10]
   4ded2:	mov    r9,QWORD PTR [rax+0x8]
   4ded6:	mov    rsi,r9
   4ded9:	mov    QWORD PTR [rsp],r9
   4dedd:	call   471f0 <argp_usage@@Base+0x3e70>
   4dee2:	mov    r12,rax
   4dee5:	cmp    rax,0xffffffffffffffff
   4dee9:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4deeb:	add    rbx,QWORD PTR [r14+0x28]
   4deef:	mov    rdi,rbx
   4def2:	mov    rsi,r12
   4def5:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4defa:	mov    r9,QWORD PTR [rsp]
   4defe:	test   al,al
   4df00:	jne    4ddef <_obstack_memory_used@@Base+0x116f>
   4df06:	mov    eax,0xc
   4df0b:	add    rsp,0x18
   4df0f:	pop    rbx
   4df10:	pop    rbp
   4df11:	pop    r12
   4df13:	pop    r13
   4df15:	pop    r14
   4df17:	pop    r15
   4df19:	ret    
   4df1a:	nop    WORD PTR [rax+rax*1+0x0]
   4df20:	cmp    r9,QWORD PTR [rsp+0x8]
   4df25:	jne    4df30 <_obstack_memory_used@@Base+0x12b0>
   4df27:	cmp    r9,r12
   4df2a:	jne    4e037 <_obstack_memory_used@@Base+0x13b7>
   4df30:	mov    eax,DWORD PTR [rax+0x8]
   4df33:	mov    rsi,r13
   4df36:	mov    rdi,r14
   4df39:	shr    eax,0x8
   4df3c:	and    eax,0x3ff
   4df41:	or     ebp,eax
   4df43:	mov    edx,ebp
   4df45:	call   471f0 <argp_usage@@Base+0x3e70>
   4df4a:	mov    r12,rax
   4df4d:	cmp    rax,0xffffffffffffffff
   4df51:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4df53:	add    rbx,QWORD PTR [r14+0x28]
   4df57:	mov    rsi,rax
   4df5a:	mov    rdi,rbx
   4df5d:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4df62:	test   al,al
   4df64:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4df66:	mov    r9,r13
   4df69:	jmp    4ddef <_obstack_memory_used@@Base+0x116f>
   4df6e:	xchg   ax,ax
   4df70:	mov    rax,QWORD PTR [r14+0x18]
   4df74:	lea    r13,[r12+r12*2]
   4df78:	mov    edx,ebp
   4df7a:	mov    rdi,r14
   4df7d:	shl    r13,0x3
   4df81:	lea    rbx,[r9*8+0x0]
   4df89:	mov    r9,QWORD PTR [rax+r9*8]
   4df8d:	mov    QWORD PTR [r8+r13*1+0x8],0x0
   4df96:	mov    rsi,r9
   4df99:	mov    QWORD PTR [rsp],r9
   4df9d:	call   471f0 <argp_usage@@Base+0x3e70>
   4dfa2:	mov    r9,QWORD PTR [rsp]
   4dfa6:	cmp    rax,0xffffffffffffffff
   4dfaa:	mov    r12,rax
   4dfad:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4dfb3:	mov    rax,QWORD PTR [r14+0x18]
   4dfb7:	mov    rdi,QWORD PTR [r14+0x28]
   4dfbb:	mov    QWORD PTR [rsp],r9
   4dfbf:	mov    rcx,QWORD PTR [rax+rbx*1]
   4dfc3:	add    rdi,r13
   4dfc6:	mov    QWORD PTR [rax+r15*8],rcx
   4dfca:	jmp    4def2 <_obstack_memory_used@@Base+0x1272>
   4dfcf:	nop
   4dfd0:	mov    edx,ebp
   4dfd2:	mov    rsi,r13
   4dfd5:	mov    rdi,r14
   4dfd8:	call   471f0 <argp_usage@@Base+0x3e70>
   4dfdd:	mov    r12,rax
   4dfe0:	cmp    rax,0xffffffffffffffff
   4dfe4:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4dfea:	mov    rdi,QWORD PTR [r14+0x28]
   4dfee:	mov    rsi,r12
   4dff1:	add    rdi,rbx
   4dff4:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4dff9:	test   al,al
   4dffb:	je     4df06 <_obstack_memory_used@@Base+0x1286>
   4e001:	mov    rcx,QWORD PTR [rsp+0x8]
   4e006:	mov    r8d,ebp
   4e009:	mov    rdx,r12
   4e00c:	mov    rsi,r13
   4e00f:	mov    rdi,r14
   4e012:	call   4ddd0 <_obstack_memory_used@@Base+0x1150>
   4e017:	test   eax,eax
   4e019:	je     4dec4 <_obstack_memory_used@@Base+0x1244>
   4e01f:	jmp    4df0b <_obstack_memory_used@@Base+0x128b>
   4e024:	mov    rax,QWORD PTR [r14+0x18]
   4e028:	mov    rcx,QWORD PTR [rax+r9*8]
   4e02c:	mov    QWORD PTR [rax+r12*8],rcx
   4e030:	xor    eax,eax
   4e032:	jmp    4df0b <_obstack_memory_used@@Base+0x128b>
   4e037:	mov    rdi,r8
   4e03a:	mov    rsi,r13
   4e03d:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4e042:	mov    r8d,eax
   4e045:	xor    eax,eax
   4e047:	test   r8b,r8b
   4e04a:	jne    4df0b <_obstack_memory_used@@Base+0x128b>
   4e050:	jmp    4df06 <_obstack_memory_used@@Base+0x1286>
   4e055:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4e060:	push   r15
   4e062:	push   r14
   4e064:	push   r13
   4e066:	push   r12
   4e068:	mov    r12,rdx
   4e06b:	push   rbp
   4e06c:	lea    rbp,[rdx+rdx*2]
   4e070:	push   rbx
   4e071:	shl    rbp,0x3
   4e075:	mov    rbx,rsi
   4e078:	sub    rsp,0x68
   4e07c:	mov    r15,QWORD PTR [rsi+0x28]
   4e080:	mov    QWORD PTR [rsp+0x10],rdi
   4e085:	mov    DWORD PTR [rsp+0x1c],ecx
   4e089:	add    r15,rbp
   4e08c:	mov    rax,QWORD PTR fs:0x28
   4e095:	mov    QWORD PTR [rsp+0x58],rax
   4e09a:	xor    eax,eax
   4e09c:	mov    rax,QWORD PTR [r15+0x8]
   4e0a0:	mov    QWORD PTR [rsp+0x28],0x0
   4e0a9:	lea    rdi,[rax+0x1]
   4e0ad:	mov    QWORD PTR [rsp+0x20],rdi
   4e0b2:	shl    rdi,0x3
   4e0b6:	call   a4a0 <malloc@plt>
   4e0bb:	mov    QWORD PTR [rsp+0x30],rax
   4e0c0:	test   rax,rax
   4e0c3:	je     4e2e8 <_obstack_memory_used@@Base+0x1668>
   4e0c9:	mov    rax,QWORD PTR [rbx+0x30]
   4e0cd:	mov    rdx,QWORD PTR [rbx]
   4e0d0:	mov    r14,r12
   4e0d3:	shl    r14,0x4
   4e0d7:	mov    QWORD PTR [rax+rbp*1+0x8],0xffffffffffffffff
   4e0e0:	lea    rax,[rdx+r14*1]
   4e0e4:	mov    r8d,DWORD PTR [rax+0x8]
   4e0e8:	test   r8d,0x3ff00
   4e0ef:	jne    4e258 <_obstack_memory_used@@Base+0x15d8>
   4e0f5:	test   BYTE PTR [rax+0x8],0x8
   4e0f9:	je     4e2a8 <_obstack_memory_used@@Base+0x1628>
   4e0ff:	mov    rsi,QWORD PTR [rbx+0x28]
   4e103:	lea    rax,[rsi+rbp*1]
   4e107:	cmp    QWORD PTR [rax+0x8],0x0
   4e10c:	jle    4e2a8 <_obstack_memory_used@@Base+0x1628>
   4e112:	xor    r15d,r15d
   4e115:	xor    r14d,r14d
   4e118:	jmp    4e16e <_obstack_memory_used@@Base+0x14ee>
   4e11a:	nop    WORD PTR [rax+rax*1+0x0]
   4e120:	movdqu xmm1,XMMWORD PTR [rax]
   4e124:	lea    r10,[rsp+0x40]
   4e129:	movaps XMMWORD PTR [rsp+0x40],xmm1
   4e12e:	mov    rax,QWORD PTR [rax+0x10]
   4e132:	mov    QWORD PTR [rsp+0x50],rax
   4e137:	lea    rdi,[rsp+0x20]
   4e13c:	mov    rsi,r10
   4e13f:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   4e144:	test   eax,eax
   4e146:	jne    4e1c0 <_obstack_memory_used@@Base+0x1540>
   4e148:	mov    rax,QWORD PTR [rbx+0x30]
   4e14c:	cmp    QWORD PTR [rax+r13*1+0x8],0x0
   4e152:	je     4e1e8 <_obstack_memory_used@@Base+0x1568>
   4e158:	mov    rsi,QWORD PTR [rbx+0x28]
   4e15c:	add    r14,0x1
   4e160:	lea    rax,[rsi+rbp*1]
   4e164:	cmp    QWORD PTR [rax+0x8],r14
   4e168:	jle    4e218 <_obstack_memory_used@@Base+0x1598>
   4e16e:	mov    rax,QWORD PTR [rax+0x10]
   4e172:	mov    rdx,QWORD PTR [rax+r14*8]
   4e176:	mov    rax,QWORD PTR [rbx+0x30]
   4e17a:	lea    r8,[rdx+rdx*2]
   4e17e:	lea    r13,[r8*8+0x0]
   4e186:	add    rax,r13
   4e189:	mov    rcx,QWORD PTR [rax+0x8]
   4e18d:	cmp    rcx,0xffffffffffffffff
   4e191:	je     4e200 <_obstack_memory_used@@Base+0x1580>
   4e193:	test   rcx,rcx
   4e196:	jne    4e120 <_obstack_memory_used@@Base+0x14a0>
   4e198:	lea    r10,[rsp+0x40]
   4e19d:	mov    rsi,rbx
   4e1a0:	mov    rdi,r10
   4e1a3:	mov    QWORD PTR [rsp+0x8],r10
   4e1a8:	call   4e060 <_obstack_memory_used@@Base+0x13e0>
   4e1ad:	mov    r10,QWORD PTR [rsp+0x8]
   4e1b2:	test   eax,eax
   4e1b4:	je     4e137 <_obstack_memory_used@@Base+0x14b7>
   4e1b6:	cs nop WORD PTR [rax+rax*1+0x0]
   4e1c0:	mov    rdx,QWORD PTR [rsp+0x58]
   4e1c5:	sub    rdx,QWORD PTR fs:0x28
   4e1ce:	jne    4e2f2 <_obstack_memory_used@@Base+0x1672>
   4e1d4:	add    rsp,0x68
   4e1d8:	pop    rbx
   4e1d9:	pop    rbp
   4e1da:	pop    r12
   4e1dc:	pop    r13
   4e1de:	pop    r14
   4e1e0:	pop    r15
   4e1e2:	ret    
   4e1e3:	nop    DWORD PTR [rax+rax*1+0x0]
   4e1e8:	mov    rdi,QWORD PTR [rsp+0x50]
   4e1ed:	mov    r15d,0x1
   4e1f3:	call   9ce0 <free@plt>
   4e1f8:	jmp    4e158 <_obstack_memory_used@@Base+0x14d8>
   4e1fd:	nop    DWORD PTR [rax]
   4e200:	lea    rax,[rsi+rbp*1]
   4e204:	mov    r15d,0x1
   4e20a:	add    r14,0x1
   4e20e:	cmp    QWORD PTR [rax+0x8],r14
   4e212:	jg     4e16e <_obstack_memory_used@@Base+0x14ee>
   4e218:	lea    rdi,[rsp+0x20]
   4e21d:	mov    rsi,r12
   4e220:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4e225:	test   al,al
   4e227:	je     4e2e8 <_obstack_memory_used@@Base+0x1668>
   4e22d:	mov    rax,QWORD PTR [rbx+0x30]
   4e231:	add    rax,rbp
   4e234:	cmp    BYTE PTR [rsp+0x1c],0x1
   4e239:	je     4e2b9 <_obstack_memory_used@@Base+0x1639>
   4e23b:	test   r15b,r15b
   4e23e:	je     4e2b9 <_obstack_memory_used@@Base+0x1639>
   4e240:	mov    QWORD PTR [rax+0x8],0x0
   4e248:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   4e24e:	mov    rax,QWORD PTR [rsp+0x30]
   4e253:	jmp    4e2d1 <_obstack_memory_used@@Base+0x1651>
   4e255:	nop    DWORD PTR [rax]
   4e258:	cmp    QWORD PTR [r15+0x8],0x0
   4e25d:	je     4e2a8 <_obstack_memory_used@@Base+0x1628>
   4e25f:	mov    rcx,QWORD PTR [r15+0x10]
   4e263:	mov    rcx,QWORD PTR [rcx]
   4e266:	shl    rcx,0x4
   4e26a:	test   BYTE PTR [rdx+rcx*1+0xa],0x4
   4e26f:	jne    4e0f5 <_obstack_memory_used@@Base+0x1475>
   4e275:	shr    r8d,0x8
   4e279:	mov    rcx,r12
   4e27c:	mov    rdx,r12
   4e27f:	mov    rsi,r12
   4e282:	and    r8d,0x3ff
   4e289:	mov    rdi,rbx
   4e28c:	call   4ddd0 <_obstack_memory_used@@Base+0x1150>
   4e291:	test   eax,eax
   4e293:	jne    4e1c0 <_obstack_memory_used@@Base+0x1540>
   4e299:	mov    rax,QWORD PTR [rbx]
   4e29c:	add    rax,r14
   4e29f:	jmp    4e0f5 <_obstack_memory_used@@Base+0x1475>
   4e2a4:	nop    DWORD PTR [rax+0x0]
   4e2a8:	lea    rdi,[rsp+0x20]
   4e2ad:	mov    rsi,r12
   4e2b0:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   4e2b5:	test   al,al
   4e2b7:	je     4e2e8 <_obstack_memory_used@@Base+0x1668>
   4e2b9:	mov    rdx,QWORD PTR [rbx+0x30]
   4e2bd:	mov    rax,QWORD PTR [rsp+0x30]
   4e2c2:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   4e2c8:	mov    QWORD PTR [rdx+rbp*1+0x10],rax
   4e2cd:	movups XMMWORD PTR [rdx+rbp*1],xmm0
   4e2d1:	mov    rsi,QWORD PTR [rsp+0x10]
   4e2d6:	mov    QWORD PTR [rsi+0x10],rax
   4e2da:	xor    eax,eax
   4e2dc:	movups XMMWORD PTR [rsi],xmm0
   4e2df:	jmp    4e1c0 <_obstack_memory_used@@Base+0x1540>
   4e2e4:	nop    DWORD PTR [rax+0x0]
   4e2e8:	mov    eax,0xc
   4e2ed:	jmp    4e1c0 <_obstack_memory_used@@Base+0x1540>
   4e2f2:	call   a0a0 <__stack_chk_fail@plt>
   4e2f7:	nop    WORD PTR [rax+rax*1+0x0]
   4e300:	endbr64 
   4e304:	mov    rdx,QWORD PTR [rdi+0x8]
   4e308:	xor    eax,eax
   4e30a:	test   rdx,rdx
   4e30d:	jle    4e33d <_obstack_memory_used@@Base+0x16bd>
   4e30f:	mov    rdi,QWORD PTR [rdi+0x10]
   4e313:	sub    rdx,0x1
   4e317:	xor    ecx,ecx
   4e319:	jmp    4e330 <_obstack_memory_used@@Base+0x16b0>
   4e31b:	nop    DWORD PTR [rax+rax*1+0x0]
   4e320:	lea    rax,[rcx+rdx*1]
   4e324:	shr    rax,1
   4e327:	cmp    QWORD PTR [rdi+rax*8],rsi
   4e32b:	jl     4e340 <_obstack_memory_used@@Base+0x16c0>
   4e32d:	mov    rdx,rax
   4e330:	cmp    rcx,rdx
   4e333:	jb     4e320 <_obstack_memory_used@@Base+0x16a0>
   4e335:	xor    eax,eax
   4e337:	cmp    QWORD PTR [rdi+rcx*8],rsi
   4e33b:	je     4e350 <_obstack_memory_used@@Base+0x16d0>
   4e33d:	ret    
   4e33e:	xchg   ax,ax
   4e340:	lea    rcx,[rax+0x1]
   4e344:	jmp    4e330 <_obstack_memory_used@@Base+0x16b0>
   4e346:	cs nop WORD PTR [rax+rax*1+0x0]
   4e350:	lea    rax,[rcx+0x1]
   4e354:	ret    
   4e355:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4e360:	endbr64 
   4e364:	push   r15
   4e366:	push   r14
   4e368:	push   r13
   4e36a:	push   r12
   4e36c:	push   rbp
   4e36d:	push   rbx
   4e36e:	mov    rbx,rdi
   4e371:	sub    rsp,0x8
   4e375:	mov    r13,QWORD PTR [rdx+0x8]
   4e379:	test   r13,r13
   4e37c:	je     4e54b <_obstack_memory_used@@Base+0x18cb>
   4e382:	mov    rbp,rsi
   4e385:	mov    r14,rdx
   4e388:	jle    4e3a4 <_obstack_memory_used@@Base+0x1724>
   4e38a:	mov    rax,QWORD PTR [rdx+0x10]
   4e38e:	lea    rdx,[rax+r13*8]
   4e392:	nop    WORD PTR [rax+rax*1+0x0]
   4e398:	add    r13,QWORD PTR [rax]
   4e39b:	add    rax,0x8
   4e39f:	cmp    rdx,rax
   4e3a2:	jne    4e398 <_obstack_memory_used@@Base+0x1718>
   4e3a4:	mov    rax,QWORD PTR [rbp+0x88]
   4e3ab:	and    rax,r13
   4e3ae:	lea    rdx,[rax+rax*2]
   4e3b2:	mov    rax,QWORD PTR [rbp+0x40]
   4e3b6:	lea    rax,[rax+rdx*8]
   4e3ba:	mov    r10,QWORD PTR [rax]
   4e3bd:	test   r10,r10
   4e3c0:	jle    4e3f8 <_obstack_memory_used@@Base+0x1778>
   4e3c2:	mov    r11,QWORD PTR [rax+0x10]
   4e3c6:	xor    r9d,r9d
   4e3c9:	nop    DWORD PTR [rax+0x0]
   4e3d0:	mov    r12,QWORD PTR [r11+r9*8]
   4e3d4:	cmp    QWORD PTR [r12],r13
   4e3d8:	jne    4e3ef <_obstack_memory_used@@Base+0x176f>
   4e3da:	lea    rdi,[r12+0x8]
   4e3df:	mov    rsi,r14
   4e3e2:	call   45650 <argp_usage@@Base+0x22d0>
   4e3e7:	test   al,al
   4e3e9:	jne    4e4fb <_obstack_memory_used@@Base+0x187b>
   4e3ef:	add    r9,0x1
   4e3f3:	cmp    r9,r10
   4e3f6:	jne    4e3d0 <_obstack_memory_used@@Base+0x1750>
   4e3f8:	mov    esi,0x1
   4e3fd:	mov    edi,0x70
   4e402:	call   a2f0 <calloc@plt>
   4e407:	mov    r12,rax
   4e40a:	test   rax,rax
   4e40d:	je     4e540 <_obstack_memory_used@@Base+0x18c0>
   4e413:	lea    r15,[rax+0x8]
   4e417:	mov    rsi,r14
   4e41a:	mov    rdi,r15
   4e41d:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   4e422:	test   eax,eax
   4e424:	jne    4e538 <_obstack_memory_used@@Base+0x18b8>
   4e42a:	mov    rax,QWORD PTR [r14+0x8]
   4e42e:	mov    QWORD PTR [r12+0x50],r15
   4e433:	test   rax,rax
   4e436:	jle    4e4e9 <_obstack_memory_used@@Base+0x1869>
   4e43c:	mov    rsi,QWORD PTR [r14+0x10]
   4e440:	mov    r9,QWORD PTR [rbp+0x0]
   4e444:	lea    r8,[rsi+rax*8]
   4e448:	jmp    4e49a <_obstack_memory_used@@Base+0x181a>
   4e44a:	nop    WORD PTR [rax+rax*1+0x0]
   4e450:	movzx  ecx,BYTE PTR [r12+0x68]
   4e456:	movzx  edx,BYTE PTR [rax+0xa]
   4e45a:	mov    r10d,ecx
   4e45d:	shr    dl,0x4
   4e460:	and    ecx,0xffffffdf
   4e463:	shr    r10b,0x5
   4e467:	or     edx,r10d
   4e46a:	and    edx,0x1
   4e46d:	shl    edx,0x5
   4e470:	or     ecx,edx
   4e472:	mov    BYTE PTR [r12+0x68],cl
   4e477:	cmp    edi,0x2
   4e47a:	je     4e510 <_obstack_memory_used@@Base+0x1890>
   4e480:	cmp    edi,0x4
   4e483:	jne    4e520 <_obstack_memory_used@@Base+0x18a0>
   4e489:	or     ecx,0x40
   4e48c:	mov    BYTE PTR [r12+0x68],cl
   4e491:	add    rsi,0x8
   4e495:	cmp    r8,rsi
   4e498:	je     4e4e9 <_obstack_memory_used@@Base+0x1869>
   4e49a:	mov    rax,QWORD PTR [rsi]
   4e49d:	shl    rax,0x4
   4e4a1:	add    rax,r9
   4e4a4:	movzx  edi,BYTE PTR [rax+0x8]
   4e4a8:	cmp    edi,0x1
   4e4ab:	jne    4e450 <_obstack_memory_used@@Base+0x17d0>
   4e4ad:	test   DWORD PTR [rax+0x8],0x3ff00
   4e4b4:	je     4e491 <_obstack_memory_used@@Base+0x1811>
   4e4b6:	movzx  edx,BYTE PTR [r12+0x68]
   4e4bc:	movzx  eax,BYTE PTR [rax+0xa]
   4e4c0:	mov    ecx,edx
   4e4c2:	shr    al,0x4
   4e4c5:	and    edx,0xffffffdf
   4e4c8:	shr    cl,0x5
   4e4cb:	or     eax,ecx
   4e4cd:	and    eax,0x1
   4e4d0:	shl    eax,0x5
   4e4d3:	or     edx,eax
   4e4d5:	mov    BYTE PTR [r12+0x68],dl
   4e4da:	add    rsi,0x8
   4e4de:	or     BYTE PTR [r12+0x68],0x80
   4e4e4:	cmp    r8,rsi
   4e4e7:	jne    4e49a <_obstack_memory_used@@Base+0x181a>
   4e4e9:	mov    rdx,r13
   4e4ec:	mov    rsi,r12
   4e4ef:	mov    rdi,rbp
   4e4f2:	call   45d00 <argp_usage@@Base+0x2980>
   4e4f7:	test   eax,eax
   4e4f9:	jne    4e556 <_obstack_memory_used@@Base+0x18d6>
   4e4fb:	add    rsp,0x8
   4e4ff:	mov    rax,r12
   4e502:	pop    rbx
   4e503:	pop    rbp
   4e504:	pop    r12
   4e506:	pop    r13
   4e508:	pop    r14
   4e50a:	pop    r15
   4e50c:	ret    
   4e50d:	nop    DWORD PTR [rax]
   4e510:	or     ecx,0x10
   4e513:	mov    BYTE PTR [r12+0x68],cl
   4e518:	jmp    4e491 <_obstack_memory_used@@Base+0x1811>
   4e51d:	nop    DWORD PTR [rax]
   4e520:	cmp    edi,0xc
   4e523:	je     4e4da <_obstack_memory_used@@Base+0x185a>
   4e525:	test   DWORD PTR [rax+0x8],0x3ff00
   4e52c:	je     4e491 <_obstack_memory_used@@Base+0x1811>
   4e532:	jmp    4e4da <_obstack_memory_used@@Base+0x185a>
   4e534:	nop    DWORD PTR [rax+0x0]
   4e538:	mov    rdi,r12
   4e53b:	call   9ce0 <free@plt>
   4e540:	mov    DWORD PTR [rbx],0xc
   4e546:	xor    r12d,r12d
   4e549:	jmp    4e4fb <_obstack_memory_used@@Base+0x187b>
   4e54b:	mov    DWORD PTR [rdi],0x0
   4e551:	xor    r12d,r12d
   4e554:	jmp    4e4fb <_obstack_memory_used@@Base+0x187b>
   4e556:	mov    rdi,r12
   4e559:	call   45bc0 <argp_usage@@Base+0x2840>
   4e55e:	jmp    4e540 <_obstack_memory_used@@Base+0x18c0>
   4e560:	endbr64 
   4e564:	push   r15
   4e566:	push   r14
   4e568:	push   r13
   4e56a:	mov    r13,rdx
   4e56d:	push   r12
   4e56f:	push   rbp
   4e570:	push   rbx
   4e571:	sub    rsp,0x28
   4e575:	mov    rdx,QWORD PTR [rdx+0x8]
   4e579:	mov    QWORD PTR [rsp+0x10],rdi
   4e57e:	test   rdx,rdx
   4e581:	je     4e878 <_obstack_memory_used@@Base+0x1bf8>
   4e587:	mov    r14d,ecx
   4e58a:	mov    rbp,rsi
   4e58d:	mov    r9d,ecx
   4e590:	add    r14,rdx
   4e593:	test   rdx,rdx
   4e596:	jle    4e5ac <_obstack_memory_used@@Base+0x192c>
   4e598:	mov    rax,QWORD PTR [r13+0x10]
   4e59c:	lea    rdx,[rax+rdx*8]
   4e5a0:	add    r14,QWORD PTR [rax]
   4e5a3:	add    rax,0x8
   4e5a7:	cmp    rdx,rax
   4e5aa:	jne    4e5a0 <_obstack_memory_used@@Base+0x1920>
   4e5ac:	mov    rax,QWORD PTR [rbp+0x88]
   4e5b3:	and    rax,r14
   4e5b6:	lea    rdx,[rax+rax*2]
   4e5ba:	mov    rax,QWORD PTR [rbp+0x40]
   4e5be:	lea    rax,[rax+rdx*8]
   4e5c2:	mov    r11,QWORD PTR [rax]
   4e5c5:	test   r11,r11
   4e5c8:	jle    4e620 <_obstack_memory_used@@Base+0x19a0>
   4e5ca:	mov    rbx,QWORD PTR [rax+0x10]
   4e5ce:	xor    r10d,r10d
   4e5d1:	jmp    4e5e1 <_obstack_memory_used@@Base+0x1961>
   4e5d3:	nop    DWORD PTR [rax+rax*1+0x0]
   4e5d8:	add    r10,0x1
   4e5dc:	cmp    r10,r11
   4e5df:	je     4e620 <_obstack_memory_used@@Base+0x19a0>
   4e5e1:	mov    r12,QWORD PTR [rbx+r10*8]
   4e5e5:	cmp    QWORD PTR [r12],r14
   4e5e9:	jne    4e5d8 <_obstack_memory_used@@Base+0x1958>
   4e5eb:	movzx  eax,BYTE PTR [r12+0x68]
   4e5f1:	and    eax,0xf
   4e5f4:	cmp    eax,r9d
   4e5f7:	jne    4e5d8 <_obstack_memory_used@@Base+0x1958>
   4e5f9:	mov    rdi,QWORD PTR [r12+0x50]
   4e5fe:	mov    rsi,r13
   4e601:	call   45650 <argp_usage@@Base+0x22d0>
   4e606:	test   al,al
   4e608:	je     4e5d8 <_obstack_memory_used@@Base+0x1958>
   4e60a:	add    rsp,0x28
   4e60e:	mov    rax,r12
   4e611:	pop    rbx
   4e612:	pop    rbp
   4e613:	pop    r12
   4e615:	pop    r13
   4e617:	pop    r14
   4e619:	pop    r15
   4e61b:	ret    
   4e61c:	nop    DWORD PTR [rax+0x0]
   4e620:	mov    esi,0x1
   4e625:	mov    edi,0x70
   4e62a:	mov    DWORD PTR [rsp+0x4],r9d
   4e62f:	call   a2f0 <calloc@plt>
   4e634:	mov    r12,rax
   4e637:	test   rax,rax
   4e63a:	je     4e7e1 <_obstack_memory_used@@Base+0x1b61>
   4e640:	lea    r10,[rax+0x8]
   4e644:	mov    rsi,r13
   4e647:	mov    rdi,r10
   4e64a:	mov    QWORD PTR [rsp+0x8],r10
   4e64f:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   4e654:	mov    r10,QWORD PTR [rsp+0x8]
   4e659:	mov    r9d,DWORD PTR [rsp+0x4]
   4e65e:	test   eax,eax
   4e660:	jne    4e886 <_obstack_memory_used@@Base+0x1c06>
   4e666:	movzx  eax,BYTE PTR [r12+0x68]
   4e66c:	mov    edx,r9d
   4e66f:	mov    QWORD PTR [r12+0x50],r10
   4e674:	and    edx,0xf
   4e677:	and    eax,0xfffffff0
   4e67a:	or     eax,edx
   4e67c:	cmp    QWORD PTR [r13+0x8],0x0
   4e681:	mov    BYTE PTR [r12+0x68],al
   4e686:	jle    4e7c3 <_obstack_memory_used@@Base+0x1b43>
   4e68c:	mov    eax,r9d
   4e68f:	mov    QWORD PTR [rsp+0x18],r14
   4e694:	xor    r11d,r11d
   4e697:	xor    ebx,ebx
   4e699:	and    eax,0x4
   4e69c:	mov    r15,r10
   4e69f:	mov    r14,r13
   4e6a2:	mov    DWORD PTR [rsp+0x8],eax
   4e6a6:	cs nop WORD PTR [rax+rax*1+0x0]
   4e6b0:	mov    rax,QWORD PTR [r14+0x10]
   4e6b4:	mov    rax,QWORD PTR [rax+rbx*8]
   4e6b8:	shl    rax,0x4
   4e6bc:	add    rax,QWORD PTR [rbp+0x0]
   4e6c0:	mov    edx,DWORD PTR [rax+0x8]
   4e6c3:	movzx  edi,BYTE PTR [rax+0x8]
   4e6c7:	shr    edx,0x8
   4e6ca:	mov    r13d,edx
   4e6cd:	and    edx,0x3ff
   4e6d3:	and    r13w,0x3ff
   4e6d9:	cmp    edi,0x1
   4e6dc:	jne    4e6e6 <_obstack_memory_used@@Base+0x1a66>
   4e6de:	test   edx,edx
   4e6e0:	je     4e7b0 <_obstack_memory_used@@Base+0x1b30>
   4e6e6:	movzx  ecx,BYTE PTR [r12+0x68]
   4e6ec:	movzx  eax,BYTE PTR [rax+0xa]
   4e6f0:	mov    r8d,ecx
   4e6f3:	shr    al,0x4
   4e6f6:	and    ecx,0xffffffdf
   4e6f9:	shr    r8b,0x5
   4e6fd:	or     eax,r8d
   4e700:	and    eax,0x1
   4e703:	shl    eax,0x5
   4e706:	or     ecx,eax
   4e708:	mov    BYTE PTR [r12+0x68],cl
   4e70d:	cmp    edi,0x2
   4e710:	je     4e7f8 <_obstack_memory_used@@Base+0x1b78>
   4e716:	cmp    edi,0x4
   4e719:	jne    4e723 <_obstack_memory_used@@Base+0x1aa3>
   4e71b:	or     ecx,0x40
   4e71e:	mov    BYTE PTR [r12+0x68],cl
   4e723:	test   edx,edx
   4e725:	je     4e7b0 <_obstack_memory_used@@Base+0x1b30>
   4e72b:	cmp    r15,QWORD PTR [r12+0x50]
   4e730:	je     4e828 <_obstack_memory_used@@Base+0x1ba8>
   4e736:	test   r13b,0x1
   4e73a:	je     4e808 <_obstack_memory_used@@Base+0x1b88>
   4e740:	test   r9b,0x1
   4e744:	je     4e770 <_obstack_memory_used@@Base+0x1af0>
   4e746:	test   r13b,0x2
   4e74a:	jne    4e770 <_obstack_memory_used@@Base+0x1af0>
   4e74c:	test   r13b,0x10
   4e750:	je     4e758 <_obstack_memory_used@@Base+0x1ad8>
   4e752:	test   r9b,0x2
   4e756:	je     4e770 <_obstack_memory_used@@Base+0x1af0>
   4e758:	and    r13d,0x40
   4e75c:	je     4e7b0 <_obstack_memory_used@@Base+0x1b30>
   4e75e:	mov    eax,DWORD PTR [rsp+0x8]
   4e762:	test   eax,eax
   4e764:	jne    4e7b0 <_obstack_memory_used@@Base+0x1b30>
   4e766:	cs nop WORD PTR [rax+rax*1+0x0]
   4e770:	mov    rax,rbx
   4e773:	sub    rax,r11
   4e776:	js     4e7ac <_obstack_memory_used@@Base+0x1b2c>
   4e778:	mov    rdx,QWORD PTR [r12+0x10]
   4e77d:	cmp    rax,rdx
   4e780:	jge    4e7ac <_obstack_memory_used@@Base+0x1b2c>
   4e782:	sub    rdx,0x1
   4e786:	mov    QWORD PTR [r12+0x10],rdx
   4e78b:	cmp    rax,rdx
   4e78e:	jge    4e7ac <_obstack_memory_used@@Base+0x1b2c>
   4e790:	mov    rdx,QWORD PTR [r12+0x18]
   4e795:	nop    DWORD PTR [rax]
   4e798:	mov    rcx,QWORD PTR [rdx+rax*8+0x8]
   4e79d:	mov    QWORD PTR [rdx+rax*8],rcx
   4e7a1:	add    rax,0x1
   4e7a5:	cmp    rax,QWORD PTR [r12+0x10]
   4e7aa:	jl     4e798 <_obstack_memory_used@@Base+0x1b18>
   4e7ac:	add    r11,0x1
   4e7b0:	add    rbx,0x1
   4e7b4:	cmp    rbx,QWORD PTR [r14+0x8]
   4e7b8:	jl     4e6b0 <_obstack_memory_used@@Base+0x1a30>
   4e7be:	mov    r14,QWORD PTR [rsp+0x18]
   4e7c3:	mov    rdx,r14
   4e7c6:	mov    rsi,r12
   4e7c9:	mov    rdi,rbp
   4e7cc:	call   45d00 <argp_usage@@Base+0x2980>
   4e7d1:	test   eax,eax
   4e7d3:	je     4e60a <_obstack_memory_used@@Base+0x198a>
   4e7d9:	mov    rdi,r12
   4e7dc:	call   45bc0 <argp_usage@@Base+0x2840>
   4e7e1:	mov    rax,QWORD PTR [rsp+0x10]
   4e7e6:	xor    r12d,r12d
   4e7e9:	mov    DWORD PTR [rax],0xc
   4e7ef:	jmp    4e60a <_obstack_memory_used@@Base+0x198a>
   4e7f4:	nop    DWORD PTR [rax+0x0]
   4e7f8:	or     ecx,0x10
   4e7fb:	mov    BYTE PTR [r12+0x68],cl
   4e800:	jmp    4e723 <_obstack_memory_used@@Base+0x1aa3>
   4e805:	nop    DWORD PTR [rax]
   4e808:	test   r13b,0x2
   4e80c:	je     4e74c <_obstack_memory_used@@Base+0x1acc>
   4e812:	test   r9b,0x1
   4e816:	je     4e74c <_obstack_memory_used@@Base+0x1acc>
   4e81c:	jmp    4e770 <_obstack_memory_used@@Base+0x1af0>
   4e821:	nop    DWORD PTR [rax+0x0]
   4e828:	mov    edi,0x18
   4e82d:	mov    DWORD PTR [rsp+0x4],r9d
   4e832:	call   a4a0 <malloc@plt>
   4e837:	mov    r9d,DWORD PTR [rsp+0x4]
   4e83c:	test   rax,rax
   4e83f:	mov    rdi,rax
   4e842:	je     4e7d9 <_obstack_memory_used@@Base+0x1b59>
   4e844:	mov    QWORD PTR [r12+0x50],rax
   4e849:	mov    rsi,r14
   4e84c:	mov    DWORD PTR [rsp+0x4],r9d
   4e851:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   4e856:	mov    r9d,DWORD PTR [rsp+0x4]
   4e85b:	test   eax,eax
   4e85d:	jne    4e7d9 <_obstack_memory_used@@Base+0x1b59>
   4e863:	or     BYTE PTR [r12+0x68],0x80
   4e869:	xor    r11d,r11d
   4e86c:	jmp    4e736 <_obstack_memory_used@@Base+0x1ab6>
   4e871:	nop    DWORD PTR [rax+0x0]
   4e878:	mov    DWORD PTR [rdi],0x0
   4e87e:	xor    r12d,r12d
   4e881:	jmp    4e60a <_obstack_memory_used@@Base+0x198a>
   4e886:	mov    rdi,r12
   4e889:	call   9ce0 <free@plt>
   4e88e:	jmp    4e7e1 <_obstack_memory_used@@Base+0x1b61>
   4e893:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4e89e:	xchg   ax,ax
   4e8a0:	endbr64 
   4e8a4:	push   r13
   4e8a6:	push   r12
   4e8a8:	mov    r12,rdi
   4e8ab:	push   rbp
   4e8ac:	push   rbx
   4e8ad:	sub    rsp,0x8
   4e8b1:	mov    rdx,QWORD PTR [rdi]
   4e8b4:	test   rdx,rdx
   4e8b7:	je     4e938 <_obstack_memory_used@@Base+0x1cb8>
   4e8b9:	cmp    QWORD PTR [rdi+0x10],0x0
   4e8be:	je     4e938 <_obstack_memory_used@@Base+0x1cb8>
   4e8c0:	xor    ebx,ebx
   4e8c2:	jmp    4e8e0 <_obstack_memory_used@@Base+0x1c60>
   4e8c4:	nop    DWORD PTR [rax+0x0]
   4e8c8:	cmp    eax,0x3
   4e8cb:	je     4ea60 <_obstack_memory_used@@Base+0x1de0>
   4e8d1:	add    rbx,0x1
   4e8d5:	cmp    QWORD PTR [r12+0x10],rbx
   4e8da:	jbe    4e938 <_obstack_memory_used@@Base+0x1cb8>
   4e8dc:	mov    rdx,QWORD PTR [r12]
   4e8e0:	mov    rax,rbx
   4e8e3:	shl    rax,0x4
   4e8e7:	add    rdx,rax
   4e8ea:	mov    eax,DWORD PTR [rdx+0x8]
   4e8ed:	and    eax,0x400ff
   4e8f2:	cmp    eax,0x6
   4e8f5:	jne    4e8c8 <_obstack_memory_used@@Base+0x1c48>
   4e8f7:	mov    rbp,QWORD PTR [rdx]
   4e8fa:	add    rbx,0x1
   4e8fe:	mov    rdi,QWORD PTR [rbp+0x0]
   4e902:	call   9ce0 <free@plt>
   4e907:	mov    rdi,QWORD PTR [rbp+0x8]
   4e90b:	call   9ce0 <free@plt>
   4e910:	mov    rdi,QWORD PTR [rbp+0x10]
   4e914:	call   9ce0 <free@plt>
   4e919:	mov    rdi,QWORD PTR [rbp+0x18]
   4e91d:	call   9ce0 <free@plt>
   4e922:	mov    rdi,rbp
   4e925:	call   9ce0 <free@plt>
   4e92a:	cmp    QWORD PTR [r12+0x10],rbx
   4e92f:	ja     4e8dc <_obstack_memory_used@@Base+0x1c5c>
   4e931:	nop    DWORD PTR [rax+0x0]
   4e938:	mov    rdi,QWORD PTR [r12+0x18]
   4e93d:	xor    ebx,ebx
   4e93f:	xor    ebp,ebp
   4e941:	call   9ce0 <free@plt>
   4e946:	cmp    QWORD PTR [r12+0x10],0x0
   4e94c:	je     4e99b <_obstack_memory_used@@Base+0x1d1b>
   4e94e:	xchg   ax,ax
   4e950:	mov    rax,QWORD PTR [r12+0x30]
   4e955:	test   rax,rax
   4e958:	je     4e964 <_obstack_memory_used@@Base+0x1ce4>
   4e95a:	mov    rdi,QWORD PTR [rax+rbx*1+0x10]
   4e95f:	call   9ce0 <free@plt>
   4e964:	mov    rax,QWORD PTR [r12+0x38]
   4e969:	test   rax,rax
   4e96c:	je     4e978 <_obstack_memory_used@@Base+0x1cf8>
   4e96e:	mov    rdi,QWORD PTR [rax+rbx*1+0x10]
   4e973:	call   9ce0 <free@plt>
   4e978:	mov    rax,QWORD PTR [r12+0x28]
   4e97d:	test   rax,rax
   4e980:	je     4e98c <_obstack_memory_used@@Base+0x1d0c>
   4e982:	mov    rdi,QWORD PTR [rax+rbx*1+0x10]
   4e987:	call   9ce0 <free@plt>
   4e98c:	add    rbp,0x1
   4e990:	add    rbx,0x18
   4e994:	cmp    QWORD PTR [r12+0x10],rbp
   4e999:	ja     4e950 <_obstack_memory_used@@Base+0x1cd0>
   4e99b:	mov    rdi,QWORD PTR [r12+0x28]
   4e9a0:	xor    r13d,r13d
   4e9a3:	call   9ce0 <free@plt>
   4e9a8:	mov    rdi,QWORD PTR [r12+0x30]
   4e9ad:	call   9ce0 <free@plt>
   4e9b2:	mov    rdi,QWORD PTR [r12+0x38]
   4e9b7:	call   9ce0 <free@plt>
   4e9bc:	mov    rdi,QWORD PTR [r12]
   4e9c0:	call   9ce0 <free@plt>
   4e9c5:	mov    rdi,QWORD PTR [r12+0x40]
   4e9ca:	test   rdi,rdi
   4e9cd:	je     4ea25 <_obstack_memory_used@@Base+0x1da5>
   4e9cf:	nop
   4e9d0:	lea    rax,[r13+r13*2+0x0]
   4e9d5:	xor    ebx,ebx
   4e9d7:	lea    rbp,[rdi+rax*8]
   4e9db:	cmp    QWORD PTR [rbp+0x0],0x0
   4e9e0:	jle    4e9ff <_obstack_memory_used@@Base+0x1d7f>
   4e9e2:	nop    WORD PTR [rax+rax*1+0x0]
   4e9e8:	mov    rax,QWORD PTR [rbp+0x10]
   4e9ec:	mov    rdi,QWORD PTR [rax+rbx*8]
   4e9f0:	add    rbx,0x1
   4e9f4:	call   45bc0 <argp_usage@@Base+0x2840>
   4e9f9:	cmp    QWORD PTR [rbp+0x0],rbx
   4e9fd:	jg     4e9e8 <_obstack_memory_used@@Base+0x1d68>
   4e9ff:	mov    rdi,QWORD PTR [rbp+0x10]
   4ea03:	add    r13,0x1
   4ea07:	call   9ce0 <free@plt>
   4ea0c:	cmp    QWORD PTR [r12+0x88],r13
   4ea14:	jb     4ea20 <_obstack_memory_used@@Base+0x1da0>
   4ea16:	mov    rdi,QWORD PTR [r12+0x40]
   4ea1b:	jmp    4e9d0 <_obstack_memory_used@@Base+0x1d50>
   4ea1d:	nop    DWORD PTR [rax]
   4ea20:	mov    rdi,QWORD PTR [r12+0x40]
   4ea25:	call   9ce0 <free@plt>
   4ea2a:	mov    rdi,QWORD PTR [r12+0x78]
   4ea2f:	lea    rax,[rip+0x1e26a]        # 6cca0 <_obstack_memory_used@@Base+0x20020>
   4ea36:	cmp    rdi,rax
   4ea39:	je     4ea40 <_obstack_memory_used@@Base+0x1dc0>
   4ea3b:	call   9ce0 <free@plt>
   4ea40:	mov    rdi,QWORD PTR [r12+0xe0]
   4ea48:	call   9ce0 <free@plt>
   4ea4d:	add    rsp,0x8
   4ea51:	mov    rdi,r12
   4ea54:	pop    rbx
   4ea55:	pop    rbp
   4ea56:	pop    r12
   4ea58:	pop    r13
   4ea5a:	jmp    9ce0 <free@plt>
   4ea5f:	nop
   4ea60:	mov    rdi,QWORD PTR [rdx]
   4ea63:	call   9ce0 <free@plt>
   4ea68:	jmp    4e8d1 <_obstack_memory_used@@Base+0x1c51>
   4ea6d:	nop    DWORD PTR [rax]
   4ea70:	endbr64 
   4ea74:	mov    rax,QWORD PTR [rsi+0x48]
   4ea78:	cmp    QWORD PTR [rsi+0x68],rax
   4ea7c:	jle    4eac8 <_obstack_memory_used@@Base+0x1e48>
   4ea7e:	mov    r8,QWORD PTR [rsi+0x8]
   4ea82:	cmp    DWORD PTR [rsi+0x90],0x1
   4ea89:	movzx  ecx,BYTE PTR [r8+rax*1]
   4ea8e:	mov    BYTE PTR [rdi],cl
   4ea90:	jle    4eaa3 <_obstack_memory_used@@Base+0x1e23>
   4ea92:	cmp    rax,QWORD PTR [rsi+0x30]
   4ea96:	je     4eaa3 <_obstack_memory_used@@Base+0x1e23>
   4ea98:	mov    r9,QWORD PTR [rsi+0x10]
   4ea9c:	cmp    DWORD PTR [r9+rax*4],0xffffffff
   4eaa1:	je     4eab7 <_obstack_memory_used@@Base+0x1e37>
   4eaa3:	cmp    cl,0x5b
   4eaa6:	je     4ead0 <_obstack_memory_used@@Base+0x1e50>
   4eaa8:	cmp    cl,0x5d
   4eaab:	je     4eb20 <_obstack_memory_used@@Base+0x1ea0>
   4eaad:	cmp    cl,0x5e
   4eab0:	je     4eb10 <_obstack_memory_used@@Base+0x1e90>
   4eab2:	cmp    cl,0x2d
   4eab5:	je     4eb00 <_obstack_memory_used@@Base+0x1e80>
   4eab7:	mov    BYTE PTR [rdi+0x8],0x1
   4eabb:	mov    eax,0x1
   4eac0:	ret    
   4eac1:	nop    DWORD PTR [rax+0x0]
   4eac8:	mov    BYTE PTR [rdi+0x8],0x2
   4eacc:	xor    eax,eax
   4eace:	ret    
   4eacf:	nop
   4ead0:	lea    rcx,[rax+0x1]
   4ead4:	cmp    rcx,QWORD PTR [rsi+0x58]
   4ead8:	jge    4eaee <_obstack_memory_used@@Base+0x1e6e>
   4eada:	movzx  eax,BYTE PTR [r8+rax*1+0x1]
   4eae0:	mov    BYTE PTR [rdi],al
   4eae2:	cmp    al,0x3a
   4eae4:	je     4eb50 <_obstack_memory_used@@Base+0x1ed0>
   4eae6:	cmp    al,0x3d
   4eae8:	je     4eb40 <_obstack_memory_used@@Base+0x1ec0>
   4eaea:	cmp    al,0x2e
   4eaec:	je     4eb30 <_obstack_memory_used@@Base+0x1eb0>
   4eaee:	mov    BYTE PTR [rdi+0x8],0x1
   4eaf2:	mov    eax,0x1
   4eaf7:	mov    BYTE PTR [rdi],0x5b
   4eafa:	ret    
   4eafb:	nop    DWORD PTR [rax+rax*1+0x0]
   4eb00:	mov    BYTE PTR [rdi+0x8],0x16
   4eb04:	mov    eax,0x1
   4eb09:	ret    
   4eb0a:	nop    WORD PTR [rax+rax*1+0x0]
   4eb10:	mov    BYTE PTR [rdi+0x8],0x19
   4eb14:	mov    eax,0x1
   4eb19:	ret    
   4eb1a:	nop    WORD PTR [rax+rax*1+0x0]
   4eb20:	mov    BYTE PTR [rdi+0x8],0x15
   4eb24:	mov    eax,0x1
   4eb29:	ret    
   4eb2a:	nop    WORD PTR [rax+rax*1+0x0]
   4eb30:	mov    BYTE PTR [rdi+0x8],0x1a
   4eb34:	mov    eax,0x2
   4eb39:	ret    
   4eb3a:	nop    WORD PTR [rax+rax*1+0x0]
   4eb40:	mov    BYTE PTR [rdi+0x8],0x1c
   4eb44:	mov    eax,0x2
   4eb49:	ret    
   4eb4a:	nop    WORD PTR [rax+rax*1+0x0]
   4eb50:	and    edx,0x4
   4eb53:	je     4eaee <_obstack_memory_used@@Base+0x1e6e>
   4eb55:	mov    BYTE PTR [rdi+0x8],0x1e
   4eb59:	mov    eax,0x2
   4eb5e:	ret    
   4eb5f:	nop
   4eb60:	push   r15
   4eb62:	push   r14
   4eb64:	push   r13
   4eb66:	mov    r13,r8
   4eb69:	push   r12
   4eb6b:	mov    r12,rsi
   4eb6e:	push   rbp
   4eb6f:	push   rbx
   4eb70:	lea    rbx,[rip+0x1dff9]        # 6cb70 <_obstack_memory_used@@Base+0x1fef0>
   4eb77:	sub    rsp,0x118
   4eb7e:	mov    rbp,QWORD PTR [rsi]
   4eb81:	mov    QWORD PTR [rsp+0x18],rcx
   4eb86:	and    ecx,0x1000000
   4eb8c:	mov    QWORD PTR [rsp+0x28],rdi
   4eb91:	mov    r14,rcx
   4eb94:	mov    QWORD PTR [rsp+0x8],rdx
   4eb99:	mov    QWORD PTR [rsp+0x30],r9
   4eb9e:	mov    rax,QWORD PTR fs:0x28
   4eba7:	mov    QWORD PTR [rsp+0x108],rax
   4ebaf:	xor    eax,eax
   4ebb1:	mov    rax,QWORD PTR [rsp+0x8]
   4ebb6:	movzx  eax,BYTE PTR [rax+0x8]
   4ebba:	mov    rdx,rax
   4ebbd:	movsxd rax,DWORD PTR [rbx+rax*4]
   4ebc1:	add    rax,rbx
   4ebc4:	notrack jmp rax
   4ebc7:	cmp    dl,0x9
   4ebca:	je     4f80a <_obstack_memory_used@@Base+0x2b8a>
   4ebd0:	mov    rax,QWORD PTR [rsp+0x8]
   4ebd5:	xor    edx,edx
   4ebd7:	xor    esi,esi
   4ebd9:	mov    rdi,rbp
   4ebdc:	mov    BYTE PTR [rax+0x8],0x1
   4ebe0:	mov    rcx,rax
   4ebe3:	call   45e00 <argp_usage@@Base+0x2a80>
   4ebe8:	mov    QWORD PTR [rsp+0x10],rax
   4ebed:	test   rax,rax
   4ebf0:	jne    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4ebf6:	mov    rax,QWORD PTR [rsp+0x30]
   4ebfb:	mov    DWORD PTR [rax],0xc
   4ec01:	nop    DWORD PTR [rax+0x0]
   4ec08:	mov    QWORD PTR [rsp+0x10],0x0
   4ec11:	nop    DWORD PTR [rax+0x0]
   4ec18:	mov    rax,QWORD PTR [rsp+0x108]
   4ec20:	sub    rax,QWORD PTR fs:0x28
   4ec29:	jne    50059 <_obstack_memory_used@@Base+0x33d9>
   4ec2f:	mov    rax,QWORD PTR [rsp+0x10]
   4ec34:	add    rsp,0x118
   4ec3b:	pop    rbx
   4ec3c:	pop    rbp
   4ec3d:	pop    r12
   4ec3f:	pop    r13
   4ec41:	pop    r14
   4ec43:	pop    r15
   4ec45:	ret    
   4ec46:	test   r14,r14
   4ec49:	jne    4f7d7 <_obstack_memory_used@@Base+0x2b57>
   4ec4f:	mov    rax,QWORD PTR [rsp+0x18]
   4ec54:	test   al,0x20
   4ec56:	jne    4f7d7 <_obstack_memory_used@@Base+0x2b57>
   4ec5c:	test   al,0x10
   4ec5e:	je     4ebc7 <_obstack_memory_used@@Base+0x1f47>
   4ec64:	mov    r15,QWORD PTR [rsp+0x28]
   4ec69:	mov    rdi,QWORD PTR [rsp+0x8]
   4ec6e:	mov    rdx,rax
   4ec71:	mov    rsi,r15
   4ec74:	call   46950 <argp_usage@@Base+0x35d0>
   4ec79:	cdqe   
   4ec7b:	add    QWORD PTR [r15+0x48],rax
   4ec7f:	jmp    4ebb1 <_obstack_memory_used@@Base+0x1f31>
   4ec84:	mov    rax,QWORD PTR [rsp+0x28]
   4ec89:	cmp    dl,0x21
   4ec8c:	mov    rbx,QWORD PTR [rsp+0x30]
   4ec91:	lea    rcx,[rip+0x1d7ca]        # 6c462 <_obstack_memory_used@@Base+0x1f7e2>
   4ec98:	sete   r8b
   4ec9c:	lea    rdx,[rip+0x1d615]        # 6c2b8 <_obstack_memory_used@@Base+0x1f638>
   4eca3:	mov    rsi,QWORD PTR [rax+0x78]
   4eca7:	mov    r9,rbx
   4ecaa:	movzx  r8d,r8b
   4ecae:	mov    rdi,rbp
   4ecb1:	call   47fb0 <argp_usage@@Base+0x4c30>
   4ecb6:	mov    esi,DWORD PTR [rbx]
   4ecb8:	mov    QWORD PTR [rsp+0x10],rax
   4ecbd:	test   esi,esi
   4ecbf:	je     4ecd0 <_obstack_memory_used@@Base+0x2050>
   4ecc1:	test   rax,rax
   4ecc4:	je     4ec08 <_obstack_memory_used@@Base+0x1f88>
   4ecca:	nop    WORD PTR [rax+rax*1+0x0]
   4ecd0:	mov    rbx,QWORD PTR [rsp+0x28]
   4ecd5:	mov    r15,QWORD PTR [rsp+0x8]
   4ecda:	mov    rdx,QWORD PTR [rsp+0x18]
   4ecdf:	mov    rsi,rbx
   4ece2:	mov    rdi,r15
   4ece5:	call   46950 <argp_usage@@Base+0x35d0>
   4ecea:	cdqe   
   4ecec:	add    QWORD PTR [rbx+0x48],rax
   4ecf0:	movzx  eax,BYTE PTR [r15+0x8]
   4ecf5:	cmp    al,0x17
   4ecf7:	ja     4ec18 <_obstack_memory_used@@Base+0x1f98>
   4ecfd:	cmp    al,0x12
   4ecff:	mov    rdx,0xffffffffff73f7ff
   4ed06:	sete   bl
   4ed09:	bt     rdx,rax
   4ed0d:	jb     4ec18 <_obstack_memory_used@@Base+0x1f98>
   4ed13:	lea    r13,[rsp+0xb0]
   4ed1b:	cmp    al,0x17
   4ed1d:	je     4eed0 <_obstack_memory_used@@Base+0x2250>
   4ed23:	nop    DWORD PTR [rax+rax*1+0x0]
   4ed28:	mov    r14,QWORD PTR [rsp+0x28]
   4ed2d:	mov    rdx,QWORD PTR [rsp+0x18]
   4ed32:	xor    r12d,r12d
   4ed35:	cmp    al,0x13
   4ed37:	mov    rdi,QWORD PTR [rsp+0x8]
   4ed3c:	sete   r12b
   4ed40:	mov    rsi,r14
   4ed43:	lea    r12,[r12+r12*1-0x1]
   4ed48:	call   46950 <argp_usage@@Base+0x35d0>
   4ed4d:	cdqe   
   4ed4f:	add    QWORD PTR [r14+0x48],rax
   4ed53:	cmp    QWORD PTR [rsp+0x10],0x0
   4ed59:	je     4f640 <_obstack_memory_used@@Base+0x29c0>
   4ed5f:	test   bl,bl
   4ed61:	jne    4f752 <_obstack_memory_used@@Base+0x2ad2>
   4ed67:	mov    QWORD PTR [rsp+0x20],0x0
   4ed70:	mov    r15,QWORD PTR [rsp+0x10]
   4ed75:	xor    ebx,ebx
   4ed77:	cmp    BYTE PTR [r15+0x30],0x11
   4ed7c:	je     4f5e8 <_obstack_memory_used@@Base+0x2968>
   4ed82:	cmp    r12,0xffffffffffffffff
   4ed86:	pxor   xmm0,xmm0
   4ed8a:	mov    rcx,r13
   4ed8d:	mov    rsi,r15
   4ed90:	sete   al
   4ed93:	mov    rdi,rbp
   4ed96:	xor    edx,edx
   4ed98:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4eda0:	add    eax,0xa
   4eda3:	mov    BYTE PTR [rsp+0xb8],al
   4edaa:	call   45e00 <argp_usage@@Base+0x2a80>
   4edaf:	mov    r14,rax
   4edb2:	test   rax,rax
   4edb5:	je     4f578 <_obstack_memory_used@@Base+0x28f8>
   4edbb:	add    rbx,0x2
   4edbf:	cmp    rbx,r12
   4edc2:	jg     4ee42 <_obstack_memory_used@@Base+0x21c2>
   4edc4:	mov    rdi,r15
   4edc7:	mov    rsi,rbp
   4edca:	call   46110 <argp_usage@@Base+0x2d90>
   4edcf:	pxor   xmm0,xmm0
   4edd3:	mov    rsi,r14
   4edd6:	mov    rcx,r13
   4edd9:	mov    rdx,rax
   4eddc:	mov    rdi,rbp
   4eddf:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4ede7:	mov    r15,rax
   4edea:	mov    BYTE PTR [rsp+0xb8],0x10
   4edf2:	call   45e00 <argp_usage@@Base+0x2a80>
   4edf7:	mov    rsi,rax
   4edfa:	test   r15,r15
   4edfd:	je     4f578 <_obstack_memory_used@@Base+0x28f8>
   4ee03:	test   rax,rax
   4ee06:	je     4f578 <_obstack_memory_used@@Base+0x28f8>
   4ee0c:	pxor   xmm0,xmm0
   4ee10:	mov    rcx,r13
   4ee13:	xor    edx,edx
   4ee15:	mov    rdi,rbp
   4ee18:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4ee20:	mov    BYTE PTR [rsp+0xb8],0xa
   4ee28:	call   45e00 <argp_usage@@Base+0x2a80>
   4ee2d:	mov    r14,rax
   4ee30:	test   rax,rax
   4ee33:	je     4f578 <_obstack_memory_used@@Base+0x28f8>
   4ee39:	add    rbx,0x1
   4ee3d:	cmp    rbx,r12
   4ee40:	jle    4edc4 <_obstack_memory_used@@Base+0x2144>
   4ee42:	mov    rsi,QWORD PTR [rsp+0x20]
   4ee47:	test   rsi,rsi
   4ee4a:	je     4f748 <_obstack_memory_used@@Base+0x2ac8>
   4ee50:	pxor   xmm0,xmm0
   4ee54:	mov    rdx,r14
   4ee57:	mov    rdi,rbp
   4ee5a:	mov    rcx,r13
   4ee5d:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4ee65:	mov    BYTE PTR [rsp+0xb8],0x10
   4ee6d:	call   45e00 <argp_usage@@Base+0x2a80>
   4ee72:	mov    rdi,QWORD PTR [rsp+0x30]
   4ee77:	mov    edx,DWORD PTR [rdi]
   4ee79:	test   edx,edx
   4ee7b:	jne    4f7f0 <_obstack_memory_used@@Base+0x2b70>
   4ee81:	mov    QWORD PTR [rsp+0x10],rax
   4ee86:	mov    rax,QWORD PTR [rsp+0x8]
   4ee8b:	movzx  eax,BYTE PTR [rax+0x8]
   4ee8f:	test   QWORD PTR [rsp+0x18],0x1000000
   4ee98:	je     4eeaa <_obstack_memory_used@@Base+0x222a>
   4ee9a:	cmp    al,0xb
   4ee9c:	je     4f788 <_obstack_memory_used@@Base+0x2b08>
   4eea2:	cmp    al,0x17
   4eea4:	je     4f788 <_obstack_memory_used@@Base+0x2b08>
   4eeaa:	cmp    al,0x17
   4eeac:	ja     4ec18 <_obstack_memory_used@@Base+0x1f98>
   4eeb2:	cmp    al,0x12
   4eeb4:	mov    rdx,0xffffffffff73f7ff
   4eebb:	sete   bl
   4eebe:	bt     rdx,rax
   4eec2:	jb     4ec18 <_obstack_memory_used@@Base+0x1f98>
   4eec8:	cmp    al,0x17
   4eeca:	jne    4ed28 <_obstack_memory_used@@Base+0x20a8>
   4eed0:	mov    rdx,QWORD PTR [rsp+0x18]
   4eed5:	mov    rsi,QWORD PTR [rsp+0x8]
   4eeda:	mov    rdi,QWORD PTR [rsp+0x28]
   4eedf:	call   46ef0 <argp_usage@@Base+0x3b70>
   4eee4:	mov    rbx,rax
   4eee7:	mov    rax,QWORD PTR [rsp+0x8]
   4eeec:	cmp    rbx,0xffffffffffffffff
   4eef0:	je     4f460 <_obstack_memory_used@@Base+0x27e0>
   4eef6:	movzx  eax,BYTE PTR [rax+0x8]
   4eefa:	cmp    rbx,0xfffffffffffffffe
   4eefe:	je     4ef10 <_obstack_memory_used@@Base+0x2290>
   4ef00:	cmp    al,0x18
   4ef02:	je     4f690 <_obstack_memory_used@@Base+0x2a10>
   4ef08:	cmp    al,0x1
   4ef0a:	je     4f65d <_obstack_memory_used@@Base+0x29dd>
   4ef10:	cmp    al,0x2
   4ef12:	jne    4f66b <_obstack_memory_used@@Base+0x29eb>
   4ef18:	mov    eax,0x9
   4ef1d:	jmp    4f670 <_obstack_memory_used@@Base+0x29f0>
   4ef22:	cmp    dl,0x23
   4ef25:	mov    rax,QWORD PTR [rsp+0x28]
   4ef2a:	mov    rbx,QWORD PTR [rsp+0x30]
   4ef2f:	lea    rcx,[rip+0x1cc1a]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   4ef36:	sete   r8b
   4ef3a:	lea    rdx,[rip+0x1d383]        # 6c2c4 <_obstack_memory_used@@Base+0x1f644>
   4ef41:	mov    rsi,QWORD PTR [rax+0x78]
   4ef45:	mov    r9,rbx
   4ef48:	movzx  r8d,r8b
   4ef4c:	jmp    4ecae <_obstack_memory_used@@Base+0x202e>
   4ef51:	mov    rcx,QWORD PTR [rsp+0x8]
   4ef56:	xor    edx,edx
   4ef58:	xor    esi,esi
   4ef5a:	mov    rdi,rbp
   4ef5d:	call   45e00 <argp_usage@@Base+0x2a80>
   4ef62:	mov    QWORD PTR [rsp+0x10],rax
   4ef67:	test   rax,rax
   4ef6a:	je     4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4ef70:	cmp    DWORD PTR [rbp+0xb4],0x1
   4ef77:	jle    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4ef7d:	or     BYTE PTR [rbp+0xb0],0x2
   4ef84:	jmp    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4ef89:	mov    esi,0x1
   4ef8e:	mov    edi,0x20
   4ef93:	mov    QWORD PTR [rsp+0x88],0x0
   4ef9f:	call   a2f0 <calloc@plt>
   4efa4:	mov    edi,0x50
   4efa9:	mov    esi,0x1
   4efae:	mov    rbx,rax
   4efb1:	call   a2f0 <calloc@plt>
   4efb6:	test   rbx,rbx
   4efb9:	mov    rdi,rax
   4efbc:	mov    QWORD PTR [rsp+0x38],rax
   4efc1:	sete   al
   4efc4:	test   rdi,rdi
   4efc7:	sete   dl
   4efca:	or     al,dl
   4efcc:	jne    4fcaf <_obstack_memory_used@@Base+0x302f>
   4efd2:	mov    rdi,QWORD PTR [rsp+0x8]
   4efd7:	mov    rdx,QWORD PTR [rsp+0x18]
   4efdc:	mov    rsi,QWORD PTR [rsp+0x28]
   4efe1:	call   4ea70 <_obstack_memory_used@@Base+0x1df0>
   4efe6:	mov    DWORD PTR [rsp+0x20],eax
   4efea:	movzx  eax,BYTE PTR [rdi+0x8]
   4efee:	cmp    al,0x2
   4eff0:	je     4fc9f <_obstack_memory_used@@Base+0x301f>
   4eff6:	mov    BYTE PTR [rsp+0x7b],0x0
   4effb:	cmp    al,0x19
   4effd:	je     4f9ba <_obstack_memory_used@@Base+0x2d3a>
   4f003:	cmp    al,0x15
   4f005:	je     4fa31 <_obstack_memory_used@@Base+0x2db1>
   4f00b:	mov    r14,QWORD PTR [rsp+0x18]
   4f010:	mov    QWORD PTR [rsp+0x10],rbp
   4f015:	lea    rax,[rsp+0xc0]
   4f01d:	mov    r9d,0x1
   4f023:	mov    r13,QWORD PTR [rsp+0x28]
   4f028:	mov    rbp,QWORD PTR [rsp+0x8]
   4f02d:	mov    QWORD PTR [rsp+0x48],rax
   4f032:	lea    rax,[rsp+0x90]
   4f03a:	mov    QWORD PTR [rsp+0x40],rax
   4f03f:	mov    rax,r14
   4f042:	mov    QWORD PTR [rsp+0x60],0x0
   4f04b:	shr    rax,0x10
   4f04f:	mov    QWORD PTR [rsp+0x50],0x0
   4f058:	mov    QWORD PTR [rsp+0x68],rax
   4f05d:	mov    rax,QWORD PTR [rsp+0x48]
   4f062:	mov    ecx,DWORD PTR [rsp+0x20]
   4f066:	and    r9d,0x1
   4f06a:	mov    r8,r14
   4f06d:	mov    rdi,QWORD PTR [rsp+0x40]
   4f072:	mov    rdx,rbp
   4f075:	mov    rsi,r13
   4f078:	mov    DWORD PTR [rsp+0x90],0x3
   4f083:	mov    QWORD PTR [rsp+0x98],rax
   4f08b:	call   59300 <_obstack_memory_used@@Base+0xc680>
   4f090:	test   eax,eax
   4f092:	jne    4fa7d <_obstack_memory_used@@Base+0x2dfd>
   4f098:	mov    rdx,r14
   4f09b:	mov    rsi,r13
   4f09e:	mov    rdi,rbp
   4f0a1:	call   4ea70 <_obstack_memory_used@@Base+0x1df0>
   4f0a6:	mov    r10d,DWORD PTR [rsp+0x90]
   4f0ae:	mov    DWORD PTR [rsp+0x20],eax
   4f0b2:	lea    eax,[r10-0x2]
   4f0b6:	and    eax,0xfffffffd
   4f0b9:	je     4f0cf <_obstack_memory_used@@Base+0x244f>
   4f0bb:	movzx  eax,BYTE PTR [rbp+0x8]
   4f0bf:	cmp    al,0x2
   4f0c1:	je     4fa68 <_obstack_memory_used@@Base+0x2de8>
   4f0c7:	cmp    al,0x16
   4f0c9:	je     4fa98 <_obstack_memory_used@@Base+0x2e18>
   4f0cf:	lea    rdi,[rip+0x1db2e]        # 6cc04 <_obstack_memory_used@@Base+0x1ff84>
   4f0d6:	movsxd rax,DWORD PTR [rdi+r10*4]
   4f0da:	add    rax,rdi
   4f0dd:	notrack jmp rax
   4f0e0:	mov    QWORD PTR [rsp+0x10],0x0
   4f0e9:	mov    rax,QWORD PTR [rsp+0x30]
   4f0ee:	mov    DWORD PTR [rax],0x5
   4f0f4:	jmp    4ec18 <_obstack_memory_used@@Base+0x1f98>
   4f0f9:	mov    rcx,QWORD PTR [rsp+0x8]
   4f0fe:	xor    edx,edx
   4f100:	xor    esi,esi
   4f102:	mov    rdi,rbp
   4f105:	call   45e00 <argp_usage@@Base+0x2a80>
   4f10a:	mov    QWORD PTR [rsp+0x10],rax
   4f10f:	test   rax,rax
   4f112:	je     4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f118:	cmp    DWORD PTR [rbp+0xb4],0x1
   4f11f:	jle    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4f125:	mov    rax,QWORD PTR [rsp+0x28]
   4f12a:	mov    r15,QWORD PTR [rsp+0x10]
   4f12f:	lea    r12,[rsp+0xb0]
   4f137:	mov    r14,QWORD PTR [rsp+0x8]
   4f13c:	mov    rbx,QWORD PTR [rax+0x68]
   4f140:	mov    r13,QWORD PTR [rax+0x48]
   4f144:	mov    QWORD PTR [rsp+0x20],rbx
   4f149:	mov    rbx,rax
   4f14c:	jmp    4f157 <_obstack_memory_used@@Base+0x24d7>
   4f14e:	test   rax,rax
   4f151:	je     4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f157:	cmp    QWORD PTR [rsp+0x20],r13
   4f15c:	jle    4fa8e <_obstack_memory_used@@Base+0x2e0e>
   4f162:	cmp    QWORD PTR [rbx+0x30],r13
   4f166:	je     4fa8e <_obstack_memory_used@@Base+0x2e0e>
   4f16c:	mov    rax,QWORD PTR [rbx+0x10]
   4f170:	cmp    DWORD PTR [rax+r13*4],0xffffffff
   4f175:	jne    4fa8e <_obstack_memory_used@@Base+0x2e0e>
   4f17b:	mov    rdx,QWORD PTR [rsp+0x18]
   4f180:	mov    rsi,rbx
   4f183:	mov    rdi,r14
   4f186:	call   46950 <argp_usage@@Base+0x35d0>
   4f18b:	mov    rcx,r14
   4f18e:	xor    edx,edx
   4f190:	xor    esi,esi
   4f192:	movsxd r13,eax
   4f195:	add    r13,QWORD PTR [rbx+0x48]
   4f199:	mov    rdi,rbp
   4f19c:	mov    QWORD PTR [rbx+0x48],r13
   4f1a0:	call   45e00 <argp_usage@@Base+0x2a80>
   4f1a5:	pxor   xmm0,xmm0
   4f1a9:	mov    rsi,r15
   4f1ac:	mov    rcx,r12
   4f1af:	mov    rdx,rax
   4f1b2:	mov    rdi,rbp
   4f1b5:	mov    QWORD PTR [rsp+0x10],rax
   4f1ba:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4f1c2:	mov    BYTE PTR [rsp+0xb8],0x10
   4f1ca:	call   45e00 <argp_usage@@Base+0x2a80>
   4f1cf:	mov    rdx,QWORD PTR [rsp+0x10]
   4f1d4:	mov    r15,rax
   4f1d7:	test   rdx,rdx
   4f1da:	jne    4f14e <_obstack_memory_used@@Base+0x24ce>
   4f1e0:	jmp    4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f1e5:	mov    rax,QWORD PTR [rsp+0x8]
   4f1ea:	mov    rcx,QWORD PTR [rax]
   4f1ed:	mov    eax,0x1
   4f1f2:	shl    eax,cl
   4f1f4:	cdqe   
   4f1f6:	mov    rdx,rax
   4f1f9:	and    rdx,QWORD PTR [rbp+0xa8]
   4f200:	je     4fc86 <_obstack_memory_used@@Base+0x3006>
   4f206:	or     QWORD PTR [rbp+0xa0],rax
   4f20d:	mov    rcx,QWORD PTR [rsp+0x8]
   4f212:	xor    edx,edx
   4f214:	xor    esi,esi
   4f216:	mov    rdi,rbp
   4f219:	call   45e00 <argp_usage@@Base+0x2a80>
   4f21e:	mov    QWORD PTR [rsp+0x10],rax
   4f223:	test   rax,rax
   4f226:	je     4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f22c:	add    QWORD PTR [rbp+0x98],0x1
   4f234:	or     BYTE PTR [rbp+0xb0],0x2
   4f23b:	jmp    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4f240:	mov    rax,QWORD PTR [rsp+0x8]
   4f245:	mov    r12d,DWORD PTR [rax]
   4f248:	test   r12d,0x30f
   4f24f:	je     4f2aa <_obstack_memory_used@@Base+0x262a>
   4f251:	movzx  eax,BYTE PTR [rbp+0xb0]
   4f258:	test   al,0x10
   4f25a:	jne    4f2aa <_obstack_memory_used@@Base+0x262a>
   4f25c:	or     eax,0x10
   4f25f:	mov    BYTE PTR [rbp+0xb0],al
   4f265:	test   al,0x8
   4f267:	jne    4ffde <_obstack_memory_used@@Base+0x335e>
   4f26d:	movabs rdi,0x3ff000000000000
   4f277:	mov    QWORD PTR [rbp+0xb8],rdi
   4f27e:	movabs rdi,0x7fffffe87fffffe
   4f288:	mov    QWORD PTR [rbp+0xc0],rdi
   4f28f:	test   al,0x4
   4f291:	je     4ff60 <_obstack_memory_used@@Base+0x32e0>
   4f297:	mov    rax,QWORD PTR [rsp+0x8]
   4f29c:	pxor   xmm0,xmm0
   4f2a0:	movups XMMWORD PTR [rbp+0xc8],xmm0
   4f2a7:	mov    r12d,DWORD PTR [rax]
   4f2aa:	lea    eax,[r12-0x100]
   4f2b2:	test   eax,0xfffffeff
   4f2b7:	jne    4fa3f <_obstack_memory_used@@Base+0x2dbf>
   4f2bd:	mov    rax,QWORD PTR [rsp+0x8]
   4f2c2:	cmp    r12d,0x100
   4f2c9:	je     4fa0f <_obstack_memory_used@@Base+0x2d8f>
   4f2cf:	mov    DWORD PTR [rax],0x5
   4f2d5:	mov    rcx,rax
   4f2d8:	xor    edx,edx
   4f2da:	xor    esi,esi
   4f2dc:	mov    rdi,rbp
   4f2df:	call   45e00 <argp_usage@@Base+0x2a80>
   4f2e4:	mov    rbx,rax
   4f2e7:	mov    eax,0xa
   4f2ec:	mov    rdi,QWORD PTR [rsp+0x8]
   4f2f1:	xor    edx,edx
   4f2f3:	xor    esi,esi
   4f2f5:	mov    DWORD PTR [rdi],eax
   4f2f7:	mov    rcx,rdi
   4f2fa:	mov    rdi,rbp
   4f2fd:	call   45e00 <argp_usage@@Base+0x2a80>
   4f302:	pxor   xmm0,xmm0
   4f306:	mov    rdi,rbp
   4f309:	mov    rsi,rbx
   4f30c:	mov    rdx,rax
   4f30f:	lea    rcx,[rsp+0xb0]
   4f317:	mov    r12,rax
   4f31a:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4f322:	mov    BYTE PTR [rsp+0xb8],0xa
   4f32a:	call   45e00 <argp_usage@@Base+0x2a80>
   4f32f:	test   rbx,rbx
   4f332:	mov    QWORD PTR [rsp+0x10],rax
   4f337:	mov    rdi,rax
   4f33a:	sete   al
   4f33d:	test   r12,r12
   4f340:	sete   dl
   4f343:	or     al,dl
   4f345:	jne    4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f34b:	test   rdi,rdi
   4f34e:	je     4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f354:	mov    rbx,QWORD PTR [rsp+0x28]
   4f359:	mov    rdx,QWORD PTR [rsp+0x18]
   4f35e:	mov    rdi,QWORD PTR [rsp+0x8]
   4f363:	mov    rsi,rbx
   4f366:	call   46950 <argp_usage@@Base+0x35d0>
   4f36b:	cdqe   
   4f36d:	add    QWORD PTR [rbx+0x48],rax
   4f371:	jmp    4ec18 <_obstack_memory_used@@Base+0x1f98>
   4f376:	mov    rbx,QWORD PTR [r12+0x30]
   4f37b:	mov    r15,QWORD PTR [rsp+0x18]
   4f380:	mov    r14,QWORD PTR [rsp+0x28]
   4f385:	mov    rdi,QWORD PTR [rsp+0x8]
   4f38a:	lea    rax,[rbx+0x1]
   4f38e:	mov    rdx,r15
   4f391:	mov    QWORD PTR [r12+0x30],rax
   4f396:	or     rdx,0x800000
   4f39d:	mov    rsi,r14
   4f3a0:	call   46950 <argp_usage@@Base+0x35d0>
   4f3a5:	mov    rdx,QWORD PTR [rsp+0x8]
   4f3aa:	xor    esi,esi
   4f3ac:	mov    r11,r14
   4f3af:	cdqe   
   4f3b1:	add    QWORD PTR [r14+0x48],rax
   4f3b5:	cmp    BYTE PTR [rdx+0x8],0x9
   4f3b9:	jne    4f832 <_obstack_memory_used@@Base+0x2bb2>
   4f3bf:	cmp    rbx,0x8
   4f3c3:	jbe    4f8c0 <_obstack_memory_used@@Base+0x2c40>
   4f3c9:	pxor   xmm0,xmm0
   4f3cd:	lea    rcx,[rsp+0xb0]
   4f3d5:	xor    edx,edx
   4f3d7:	mov    rdi,rbp
   4f3da:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4f3e2:	mov    BYTE PTR [rsp+0xb8],0x11
   4f3ea:	call   45e00 <argp_usage@@Base+0x2a80>
   4f3ef:	mov    QWORD PTR [rsp+0x10],rax
   4f3f4:	test   rax,rax
   4f3f7:	je     4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4f3fd:	mov    QWORD PTR [rax+0x28],rbx
   4f401:	jmp    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4f406:	mov    r15,QWORD PTR [rsp+0x98]
   4f40e:	mov    rdi,r15
   4f411:	call   a060 <strlen@plt>
   4f416:	cmp    rax,0x1
   4f41a:	jne    4fce5 <_obstack_memory_used@@Base+0x3065>
   4f420:	movzx  ecx,BYTE PTR [r15]
   4f424:	mov    rdx,rcx
   4f427:	shl    rax,cl
   4f42a:	shr    rdx,0x3
   4f42e:	and    edx,0x18
   4f431:	or     QWORD PTR [rbx+rdx*1],rax
   4f435:	mov    rax,QWORD PTR [rsp+0x30]
   4f43a:	mov    DWORD PTR [rax],0x0
   4f440:	movzx  eax,BYTE PTR [rbp+0x8]
   4f444:	cmp    al,0x2
   4f446:	je     4fa68 <_obstack_memory_used@@Base+0x2de8>
   4f44c:	cmp    al,0x15
   4f44e:	je     4fd33 <_obstack_memory_used@@Base+0x30b3>
   4f454:	xor    r9d,r9d
   4f457:	jmp    4f05d <_obstack_memory_used@@Base+0x23dd>
   4f45c:	nop    DWORD PTR [rax+0x0]
   4f460:	cmp    BYTE PTR [rax+0x8],0x1
   4f464:	jne    4f66b <_obstack_memory_used@@Base+0x29eb>
   4f46a:	mov    rax,QWORD PTR [rsp+0x8]
   4f46f:	cmp    BYTE PTR [rax],0x2c
   4f472:	jne    4f66b <_obstack_memory_used@@Base+0x29eb>
   4f478:	xor    ebx,ebx
   4f47a:	mov    rdx,QWORD PTR [rsp+0x18]
   4f47f:	mov    rsi,QWORD PTR [rsp+0x8]
   4f484:	mov    rdi,QWORD PTR [rsp+0x28]
   4f489:	call   46ef0 <argp_usage@@Base+0x3b70>
   4f48e:	mov    r12,rax
   4f491:	cmp    rax,0xfffffffffffffffe
   4f495:	je     4ff48 <_obstack_memory_used@@Base+0x32c8>
   4f49b:	cmp    rax,0xffffffffffffffff
   4f49f:	je     4f4aa <_obstack_memory_used@@Base+0x282a>
   4f4a1:	cmp    rax,rbx
   4f4a4:	jl     4f66b <_obstack_memory_used@@Base+0x29eb>
   4f4aa:	mov    rax,QWORD PTR [rsp+0x8]
   4f4af:	cmp    BYTE PTR [rax+0x8],0x18
   4f4b3:	jne    4f66b <_obstack_memory_used@@Base+0x29eb>
   4f4b9:	cmp    r12,0xffffffffffffffff
   4f4bd:	jne    4f693 <_obstack_memory_used@@Base+0x2a13>
   4f4c3:	cmp    rbx,0x7fff
   4f4ca:	jg     4f800 <_obstack_memory_used@@Base+0x2b80>
   4f4d0:	mov    r15,QWORD PTR [rsp+0x28]
   4f4d5:	mov    rdx,QWORD PTR [rsp+0x18]
   4f4da:	mov    rdi,QWORD PTR [rsp+0x8]
   4f4df:	mov    rsi,r15
   4f4e2:	call   46950 <argp_usage@@Base+0x35d0>
   4f4e7:	cdqe   
   4f4e9:	add    QWORD PTR [r15+0x48],rax
   4f4ed:	cmp    QWORD PTR [rsp+0x10],0x0
   4f4f3:	je     4f640 <_obstack_memory_used@@Base+0x29c0>
   4f4f9:	test   rbx,rbx
   4f4fc:	jle    4ff35 <_obstack_memory_used@@Base+0x32b5>
   4f502:	mov    r14,QWORD PTR [rsp+0x10]
   4f507:	mov    QWORD PTR [rsp+0x20],r14
   4f50c:	cmp    rbx,0x1
   4f510:	je     4f761 <_obstack_memory_used@@Base+0x2ae1>
   4f516:	mov    r15d,0x2
   4f51c:	jmp    4f532 <_obstack_memory_used@@Base+0x28b2>
   4f51e:	xchg   ax,ax
   4f520:	test   rax,rax
   4f523:	je     4f578 <_obstack_memory_used@@Base+0x28f8>
   4f525:	add    r15,0x1
   4f529:	cmp    r15,rbx
   4f52c:	jg     4f761 <_obstack_memory_used@@Base+0x2ae1>
   4f532:	mov    rdi,r14
   4f535:	mov    rsi,rbp
   4f538:	call   46110 <argp_usage@@Base+0x2d90>
   4f53d:	mov    rsi,QWORD PTR [rsp+0x20]
   4f542:	mov    rcx,r13
   4f545:	mov    rdi,rbp
   4f548:	pxor   xmm0,xmm0
   4f54c:	mov    rdx,rax
   4f54f:	mov    r14,rax
   4f552:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4f55a:	mov    BYTE PTR [rsp+0xb8],0x10
   4f562:	call   45e00 <argp_usage@@Base+0x2a80>
   4f567:	mov    QWORD PTR [rsp+0x20],rax
   4f56c:	test   r14,r14
   4f56f:	jne    4f520 <_obstack_memory_used@@Base+0x28a0>
   4f571:	nop    DWORD PTR [rax+0x0]
   4f578:	mov    rax,QWORD PTR [rsp+0x30]
   4f57d:	mov    DWORD PTR [rax],0xc
   4f583:	mov    rax,QWORD PTR [rsp+0x10]
   4f588:	mov    rbx,rax
   4f58b:	mov    rax,QWORD PTR [rax+0x8]
   4f58f:	mov    QWORD PTR [rsp+0x10],rax
   4f594:	test   rax,rax
   4f597:	jne    4f583 <_obstack_memory_used@@Base+0x2903>
   4f599:	mov    rax,QWORD PTR [rbx+0x10]
   4f59d:	mov    QWORD PTR [rsp+0x10],rax
   4f5a2:	test   rax,rax
   4f5a5:	jne    4f583 <_obstack_memory_used@@Base+0x2903>
   4f5a7:	jmp    4f5d2 <_obstack_memory_used@@Base+0x2952>
   4f5a9:	nop    DWORD PTR [rax+0x0]
   4f5b0:	mov    rax,QWORD PTR [rbx]
   4f5b3:	test   rax,rax
   4f5b6:	je     4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f5bc:	mov    rdi,QWORD PTR [rax+0x10]
   4f5c0:	mov    QWORD PTR [rsp+0x10],rdi
   4f5c5:	cmp    rbx,rdi
   4f5c8:	je     4f5cf <_obstack_memory_used@@Base+0x294f>
   4f5ca:	test   rdi,rdi
   4f5cd:	jne    4f583 <_obstack_memory_used@@Base+0x2903>
   4f5cf:	mov    rbx,rax
   4f5d2:	xor    edi,edi
   4f5d4:	mov    rsi,rbx
   4f5d7:	call   45c20 <argp_usage@@Base+0x28a0>
   4f5dc:	test   eax,eax
   4f5de:	je     4f5b0 <_obstack_memory_used@@Base+0x2930>
   4f5e0:	jmp    4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f5e5:	nop    DWORD PTR [rax]
   4f5e8:	mov    rsi,QWORD PTR [r15+0x28]
   4f5ec:	mov    rax,r15
   4f5ef:	nop
   4f5f0:	mov    rdx,rax
   4f5f3:	mov    rax,QWORD PTR [rax+0x8]
   4f5f7:	test   rax,rax
   4f5fa:	jne    4f5f0 <_obstack_memory_used@@Base+0x2970>
   4f5fc:	mov    rax,QWORD PTR [rdx+0x10]
   4f600:	test   rax,rax
   4f603:	jne    4f5f0 <_obstack_memory_used@@Base+0x2970>
   4f605:	jmp    4f62d <_obstack_memory_used@@Base+0x29ad>
   4f607:	nop    WORD PTR [rax+rax*1+0x0]
   4f610:	mov    rcx,QWORD PTR [rdx]
   4f613:	test   rcx,rcx
   4f616:	je     4ed82 <_obstack_memory_used@@Base+0x2102>
   4f61c:	mov    rax,QWORD PTR [rcx+0x10]
   4f620:	cmp    rdx,rax
   4f623:	je     4f62a <_obstack_memory_used@@Base+0x29aa>
   4f625:	test   rax,rax
   4f628:	jne    4f5f0 <_obstack_memory_used@@Base+0x2970>
   4f62a:	mov    rdx,rcx
   4f62d:	cmp    BYTE PTR [rdx+0x30],0x11
   4f631:	jne    4f610 <_obstack_memory_used@@Base+0x2990>
   4f633:	cmp    rsi,QWORD PTR [rdx+0x28]
   4f637:	jne    4f610 <_obstack_memory_used@@Base+0x2990>
   4f639:	or     BYTE PTR [rdx+0x32],0x8
   4f63d:	jmp    4f610 <_obstack_memory_used@@Base+0x2990>
   4f63f:	nop
   4f640:	mov    rax,QWORD PTR [rsp+0x30]
   4f645:	mov    ecx,DWORD PTR [rax]
   4f647:	test   ecx,ecx
   4f649:	jne    4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f64f:	mov    QWORD PTR [rsp+0x10],0x0
   4f658:	jmp    4ee86 <_obstack_memory_used@@Base+0x2206>
   4f65d:	mov    rax,QWORD PTR [rsp+0x8]
   4f662:	cmp    BYTE PTR [rax],0x2c
   4f665:	je     4f47a <_obstack_memory_used@@Base+0x27fa>
   4f66b:	mov    eax,0xa
   4f670:	mov    rdi,QWORD PTR [rsp+0x30]
   4f675:	cmp    QWORD PTR [rsp+0x10],0x0
   4f67b:	mov    DWORD PTR [rdi],eax
   4f67d:	je     4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f683:	jmp    4f583 <_obstack_memory_used@@Base+0x2903>
   4f688:	nop    DWORD PTR [rax+rax*1+0x0]
   4f690:	mov    r12,rbx
   4f693:	cmp    r12,0x7fff
   4f69a:	jg     4f800 <_obstack_memory_used@@Base+0x2b80>
   4f6a0:	mov    r15,QWORD PTR [rsp+0x28]
   4f6a5:	mov    rdx,QWORD PTR [rsp+0x18]
   4f6aa:	mov    rdi,QWORD PTR [rsp+0x8]
   4f6af:	mov    rsi,r15
   4f6b2:	call   46950 <argp_usage@@Base+0x35d0>
   4f6b7:	cdqe   
   4f6b9:	add    QWORD PTR [r15+0x48],rax
   4f6bd:	cmp    QWORD PTR [rsp+0x10],0x0
   4f6c3:	je     4f640 <_obstack_memory_used@@Base+0x29c0>
   4f6c9:	mov    rax,r12
   4f6cc:	or     rax,rbx
   4f6cf:	jne    4f4f9 <_obstack_memory_used@@Base+0x2879>
   4f6d5:	mov    rax,QWORD PTR [rsp+0x10]
   4f6da:	nop    WORD PTR [rax+rax*1+0x0]
   4f6e0:	mov    rbx,rax
   4f6e3:	mov    rax,QWORD PTR [rax+0x8]
   4f6e7:	test   rax,rax
   4f6ea:	jne    4f6e0 <_obstack_memory_used@@Base+0x2a60>
   4f6ec:	mov    rax,QWORD PTR [rbx+0x10]
   4f6f0:	test   rax,rax
   4f6f3:	jne    4f6e0 <_obstack_memory_used@@Base+0x2a60>
   4f6f5:	jmp    4f719 <_obstack_memory_used@@Base+0x2a99>
   4f6f7:	nop    WORD PTR [rax+rax*1+0x0]
   4f700:	mov    rdx,QWORD PTR [rbx]
   4f703:	test   rdx,rdx
   4f706:	je     4f727 <_obstack_memory_used@@Base+0x2aa7>
   4f708:	mov    rax,QWORD PTR [rdx+0x10]
   4f70c:	cmp    rbx,rax
   4f70f:	je     4f716 <_obstack_memory_used@@Base+0x2a96>
   4f711:	test   rax,rax
   4f714:	jne    4f6e0 <_obstack_memory_used@@Base+0x2a60>
   4f716:	mov    rbx,rdx
   4f719:	xor    edi,edi
   4f71b:	mov    rsi,rbx
   4f71e:	call   45c20 <argp_usage@@Base+0x28a0>
   4f723:	test   eax,eax
   4f725:	je     4f700 <_obstack_memory_used@@Base+0x2a80>
   4f727:	mov    rax,QWORD PTR [rsp+0x30]
   4f72c:	mov    eax,DWORD PTR [rax]
   4f72e:	test   eax,eax
   4f730:	je     4f64f <_obstack_memory_used@@Base+0x29cf>
   4f736:	jmp    4f583 <_obstack_memory_used@@Base+0x2903>
   4f73b:	nop    DWORD PTR [rax+rax*1+0x0]
   4f740:	mov    r14,QWORD PTR [rsp+0x20]
   4f745:	nop    DWORD PTR [rax]
   4f748:	mov    QWORD PTR [rsp+0x10],r14
   4f74d:	jmp    4ee86 <_obstack_memory_used@@Base+0x2206>
   4f752:	mov    r14,QWORD PTR [rsp+0x10]
   4f757:	mov    ebx,0x1
   4f75c:	mov    QWORD PTR [rsp+0x20],r14
   4f761:	cmp    rbx,r12
   4f764:	je     4f740 <_obstack_memory_used@@Base+0x2ac0>
   4f766:	mov    rsi,rbp
   4f769:	mov    rdi,r14
   4f76c:	call   46110 <argp_usage@@Base+0x2d90>
   4f771:	mov    r15,rax
   4f774:	test   rax,rax
   4f777:	jne    4ed77 <_obstack_memory_used@@Base+0x20f7>
   4f77d:	jmp    4f578 <_obstack_memory_used@@Base+0x28f8>
   4f782:	nop    WORD PTR [rax+rax*1+0x0]
   4f788:	mov    rax,QWORD PTR [rsp+0x10]
   4f78d:	test   rax,rax
   4f790:	je     4f7d7 <_obstack_memory_used@@Base+0x2b57>
   4f792:	nop    WORD PTR [rax+rax*1+0x0]
   4f798:	mov    rbx,rax
   4f79b:	mov    rax,QWORD PTR [rax+0x8]
   4f79f:	test   rax,rax
   4f7a2:	jne    4f798 <_obstack_memory_used@@Base+0x2b18>
   4f7a4:	mov    rax,QWORD PTR [rbx+0x10]
   4f7a8:	test   rax,rax
   4f7ab:	jne    4f798 <_obstack_memory_used@@Base+0x2b18>
   4f7ad:	jmp    4f7c9 <_obstack_memory_used@@Base+0x2b49>
   4f7af:	nop
   4f7b0:	mov    rdx,QWORD PTR [rbx]
   4f7b3:	test   rdx,rdx
   4f7b6:	je     4f7d7 <_obstack_memory_used@@Base+0x2b57>
   4f7b8:	mov    rax,QWORD PTR [rdx+0x10]
   4f7bc:	test   rax,rax
   4f7bf:	je     4f7c6 <_obstack_memory_used@@Base+0x2b46>
   4f7c1:	cmp    rbx,rax
   4f7c4:	jne    4f798 <_obstack_memory_used@@Base+0x2b18>
   4f7c6:	mov    rbx,rdx
   4f7c9:	xor    edi,edi
   4f7cb:	mov    rsi,rbx
   4f7ce:	call   45c20 <argp_usage@@Base+0x28a0>
   4f7d3:	test   eax,eax
   4f7d5:	je     4f7b0 <_obstack_memory_used@@Base+0x2b30>
   4f7d7:	mov    QWORD PTR [rsp+0x10],0x0
   4f7e0:	mov    rax,QWORD PTR [rsp+0x30]
   4f7e5:	mov    DWORD PTR [rax],0xd
   4f7eb:	jmp    4ec18 <_obstack_memory_used@@Base+0x1f98>
   4f7f0:	test   rax,rax
   4f7f3:	jne    4ee81 <_obstack_memory_used@@Base+0x2201>
   4f7f9:	jmp    4f583 <_obstack_memory_used@@Base+0x2903>
   4f7fe:	xchg   ax,ax
   4f800:	mov    eax,0xf
   4f805:	jmp    4f670 <_obstack_memory_used@@Base+0x29f0>
   4f80a:	test   QWORD PTR [rsp+0x18],0x20000
   4f813:	jne    4ebd0 <_obstack_memory_used@@Base+0x1f50>
   4f819:	mov    QWORD PTR [rsp+0x10],0x0
   4f822:	mov    rax,QWORD PTR [rsp+0x30]
   4f827:	mov    DWORD PTR [rax],0x10
   4f82d:	jmp    4ec18 <_obstack_memory_used@@Base+0x1f98>
   4f832:	mov    r14,QWORD PTR [rsp+0x30]
   4f837:	lea    r8,[r13+0x1]
   4f83b:	mov    rsi,r12
   4f83e:	mov    rcx,r15
   4f841:	mov    rdi,r11
   4f844:	mov    r9,r14
   4f847:	call   503e0 <_obstack_memory_used@@Base+0x3760>
   4f84c:	mov    r8d,DWORD PTR [r14]
   4f84f:	mov    rsi,rax
   4f852:	test   r8d,r8d
   4f855:	jne    4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f85b:	mov    rax,QWORD PTR [rsp+0x8]
   4f860:	cmp    BYTE PTR [rax+0x8],0x9
   4f864:	je     4f3bf <_obstack_memory_used@@Base+0x273f>
   4f86a:	test   rsi,rsi
   4f86d:	je     4f8ad <_obstack_memory_used@@Base+0x2c2d>
   4f86f:	mov    rbx,rsi
   4f872:	mov    rsi,QWORD PTR [rsi+0x8]
   4f876:	test   rsi,rsi
   4f879:	jne    4f86f <_obstack_memory_used@@Base+0x2bef>
   4f87b:	mov    rsi,QWORD PTR [rbx+0x10]
   4f87f:	test   rsi,rsi
   4f882:	jne    4f86f <_obstack_memory_used@@Base+0x2bef>
   4f884:	jmp    4f89f <_obstack_memory_used@@Base+0x2c1f>
   4f886:	mov    rax,QWORD PTR [rbx]
   4f889:	test   rax,rax
   4f88c:	je     4f8ad <_obstack_memory_used@@Base+0x2c2d>
   4f88e:	mov    rsi,QWORD PTR [rax+0x10]
   4f892:	test   rsi,rsi
   4f895:	je     4f89c <_obstack_memory_used@@Base+0x2c1c>
   4f897:	cmp    rbx,rsi
   4f89a:	jne    4f86f <_obstack_memory_used@@Base+0x2bef>
   4f89c:	mov    rbx,rax
   4f89f:	xor    edi,edi
   4f8a1:	mov    rsi,rbx
   4f8a4:	call   45c20 <argp_usage@@Base+0x28a0>
   4f8a9:	test   eax,eax
   4f8ab:	je     4f886 <_obstack_memory_used@@Base+0x2c06>
   4f8ad:	mov    rax,QWORD PTR [rsp+0x30]
   4f8b2:	mov    DWORD PTR [rax],0x8
   4f8b8:	jmp    4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f8bd:	nop    DWORD PTR [rax]
   4f8c0:	mov    eax,0x1
   4f8c5:	mov    ecx,ebx
   4f8c7:	shl    eax,cl
   4f8c9:	cdqe   
   4f8cb:	or     QWORD PTR [rbp+0xa8],rax
   4f8d2:	jmp    4f3c9 <_obstack_memory_used@@Base+0x2749>
   4f8d7:	mov    rdi,QWORD PTR [rsp+0x38]
   4f8dc:	mov    rax,QWORD PTR [rdi+0x28]
   4f8e0:	mov    rdi,QWORD PTR [rdi]
   4f8e3:	cmp    rax,QWORD PTR [rsp+0x50]
   4f8e8:	je     4fcfa <_obstack_memory_used@@Base+0x307a>
   4f8ee:	mov    rcx,QWORD PTR [rsp+0x38]
   4f8f3:	lea    rdx,[rax+0x1]
   4f8f7:	mov    QWORD PTR [rcx+0x28],rdx
   4f8fb:	mov    edx,DWORD PTR [rsp+0x98]
   4f902:	mov    DWORD PTR [rdi+rax*4],edx
   4f905:	jmp    4f440 <_obstack_memory_used@@Base+0x27c0>
   4f90a:	movzx  ecx,BYTE PTR [rsp+0x98]
   4f912:	mov    edx,0x1
   4f917:	mov    rax,rcx
   4f91a:	shl    rdx,cl
   4f91d:	shr    rax,0x3
   4f921:	and    eax,0x18
   4f924:	or     QWORD PTR [rbx+rax*1],rdx
   4f928:	jmp    4f440 <_obstack_memory_used@@Base+0x27c0>
   4f92d:	mov    rdi,QWORD PTR [r13+0x78]
   4f931:	mov    rdx,QWORD PTR [rsp+0x38]
   4f936:	mov    r9,r14
   4f939:	mov    rsi,rbx
   4f93c:	mov    r8,QWORD PTR [rsp+0x98]
   4f944:	lea    rcx,[rsp+0x88]
   4f94c:	call   47820 <argp_usage@@Base+0x44a0>
   4f951:	mov    rdi,QWORD PTR [rsp+0x30]
   4f956:	mov    DWORD PTR [rdi],eax
   4f958:	test   eax,eax
   4f95a:	je     4f440 <_obstack_memory_used@@Base+0x27c0>
   4f960:	mov    rbp,QWORD PTR [rsp+0x10]
   4f965:	mov    rdi,rbx
   4f968:	call   9ce0 <free@plt>
   4f96d:	mov    rbx,QWORD PTR [rsp+0x38]
   4f972:	mov    rdi,QWORD PTR [rbx]
   4f975:	call   9ce0 <free@plt>
   4f97a:	mov    rdi,QWORD PTR [rbx+0x8]
   4f97e:	call   9ce0 <free@plt>
   4f983:	mov    rdi,QWORD PTR [rbx+0x10]
   4f987:	call   9ce0 <free@plt>
   4f98c:	mov    rdi,QWORD PTR [rbx+0x18]
   4f990:	call   9ce0 <free@plt>
   4f995:	mov    rdi,rbx
   4f998:	call   9ce0 <free@plt>
   4f99d:	mov    rax,QWORD PTR [rsp+0x30]
   4f9a2:	mov    edi,DWORD PTR [rax]
   4f9a4:	test   edi,edi
   4f9a6:	jne    4ec08 <_obstack_memory_used@@Base+0x1f88>
   4f9ac:	mov    QWORD PTR [rsp+0x10],0x0
   4f9b5:	jmp    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4f9ba:	mov    rax,QWORD PTR [rsp+0x38]
   4f9bf:	or     BYTE PTR [rax+0x20],0x1
   4f9c3:	test   QWORD PTR [rsp+0x18],0x100
   4f9cc:	je     4f9d5 <_obstack_memory_used@@Base+0x2d55>
   4f9ce:	or     QWORD PTR [rbx],0x400
   4f9d5:	mov    rdi,QWORD PTR [rsp+0x28]
   4f9da:	movsxd rax,DWORD PTR [rsp+0x20]
   4f9df:	mov    rdx,QWORD PTR [rsp+0x18]
   4f9e4:	add    QWORD PTR [rdi+0x48],rax
   4f9e8:	mov    rsi,rdi
   4f9eb:	mov    rdi,QWORD PTR [rsp+0x8]
   4f9f0:	call   4ea70 <_obstack_memory_used@@Base+0x1df0>
   4f9f5:	mov    DWORD PTR [rsp+0x20],eax
   4f9f9:	movzx  eax,BYTE PTR [rdi+0x8]
   4f9fd:	cmp    al,0x2
   4f9ff:	je     4fc9f <_obstack_memory_used@@Base+0x301f>
   4fa05:	mov    BYTE PTR [rsp+0x7b],0x1
   4fa0a:	jmp    4f003 <_obstack_memory_used@@Base+0x2383>
   4fa0f:	mov    DWORD PTR [rax],0x6
   4fa15:	mov    rcx,rax
   4fa18:	xor    edx,edx
   4fa1a:	xor    esi,esi
   4fa1c:	mov    rdi,rbp
   4fa1f:	call   45e00 <argp_usage@@Base+0x2a80>
   4fa24:	mov    rbx,rax
   4fa27:	mov    eax,0x9
   4fa2c:	jmp    4f2ec <_obstack_memory_used@@Base+0x266c>
   4fa31:	mov    rax,QWORD PTR [rsp+0x8]
   4fa36:	mov    BYTE PTR [rax+0x8],0x1
   4fa3a:	jmp    4f00b <_obstack_memory_used@@Base+0x238b>
   4fa3f:	mov    rcx,QWORD PTR [rsp+0x8]
   4fa44:	xor    edx,edx
   4fa46:	xor    esi,esi
   4fa48:	mov    rdi,rbp
   4fa4b:	call   45e00 <argp_usage@@Base+0x2a80>
   4fa50:	mov    QWORD PTR [rsp+0x10],rax
   4fa55:	test   rax,rax
   4fa58:	jne    4f354 <_obstack_memory_used@@Base+0x26d4>
   4fa5e:	jmp    4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4fa63:	nop    DWORD PTR [rax+rax*1+0x0]
   4fa68:	mov    rax,QWORD PTR [rsp+0x30]
   4fa6d:	mov    rbp,QWORD PTR [rsp+0x10]
   4fa72:	mov    DWORD PTR [rax],0x7
   4fa78:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   4fa7d:	mov    rdi,QWORD PTR [rsp+0x30]
   4fa82:	mov    rbp,QWORD PTR [rsp+0x10]
   4fa87:	mov    DWORD PTR [rdi],eax
   4fa89:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   4fa8e:	mov    QWORD PTR [rsp+0x10],r15
   4fa93:	jmp    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4fa98:	movsxd r11,DWORD PTR [rsp+0x20]
   4fa9d:	add    r11,QWORD PTR [r13+0x48]
   4faa1:	lea    r15,[rsp+0xb0]
   4faa9:	mov    rdx,r14
   4faac:	mov    QWORD PTR [r13+0x48],r11
   4fab0:	mov    rdi,r15
   4fab3:	call   4ea70 <_obstack_memory_used@@Base+0x1df0>
   4fab8:	mov    ecx,eax
   4faba:	movzx  eax,BYTE PTR [rsp+0xb8]
   4fac2:	cmp    al,0x2
   4fac4:	je     4fa68 <_obstack_memory_used@@Base+0x2de8>
   4fac6:	cmp    al,0x15
   4fac8:	je     4fc6e <_obstack_memory_used@@Base+0x2fee>
   4face:	lea    rax,[rsp+0xe0]
   4fad6:	mov    r9d,0x1
   4fadc:	mov    r8,r14
   4fadf:	mov    rdx,r15
   4fae2:	lea    rdi,[rsp+0xa0]
   4faea:	mov    QWORD PTR [rsp+0xa8],rax
   4faf2:	mov    DWORD PTR [rsp+0xa0],0x3
   4fafd:	call   59300 <_obstack_memory_used@@Base+0xc680>
   4fb02:	test   eax,eax
   4fb04:	jne    4fa7d <_obstack_memory_used@@Base+0x2dfd>
   4fb0a:	mov    rdx,r14
   4fb0d:	mov    rsi,r13
   4fb10:	mov    rdi,rbp
   4fb13:	call   4ea70 <_obstack_memory_used@@Base+0x1df0>
   4fb18:	mov    r15d,DWORD PTR [rsp+0x90]
   4fb20:	xor    edx,edx
   4fb22:	mov    DWORD PTR [rsp+0x20],eax
   4fb26:	mov    rax,QWORD PTR [rsp+0x10]
   4fb2b:	cmp    DWORD PTR [rax+0xb4],0x2
   4fb32:	lea    eax,[r15-0x2]
   4fb36:	cmovge rdx,QWORD PTR [rsp+0x38]
   4fb3c:	and    eax,0xfffffffd
   4fb3f:	mov    r12,rdx
   4fb42:	je     50044 <_obstack_memory_used@@Base+0x33c4>
   4fb48:	mov    ecx,DWORD PTR [rsp+0xa0]
   4fb4f:	lea    eax,[rcx-0x2]
   4fb52:	and    eax,0xfffffffd
   4fb55:	je     50044 <_obstack_memory_used@@Base+0x33c4>
   4fb5b:	cmp    r15d,0x3
   4fb5f:	sete   BYTE PTR [rsp+0x58]
   4fb64:	je     4ffe5 <_obstack_memory_used@@Base+0x3365>
   4fb6a:	cmp    ecx,0x3
   4fb6d:	je     5010e <_obstack_memory_used@@Base+0x348e>
   4fb73:	test   r15d,r15d
   4fb76:	jne    4fe31 <_obstack_memory_used@@Base+0x31b1>
   4fb7c:	movzx  r10d,BYTE PTR [rsp+0x98]
   4fb85:	test   r15d,r15d
   4fb88:	sete   al
   4fb8b:	or     al,BYTE PTR [rsp+0x58]
   4fb8f:	test   ecx,ecx
   4fb91:	je     4fe41 <_obstack_memory_used@@Base+0x31c1>
   4fb97:	cmp    ecx,0x3
   4fb9a:	jne    4ff20 <_obstack_memory_used@@Base+0x32a0>
   4fba0:	mov    rdi,QWORD PTR [rsp+0xa8]
   4fba8:	movzx  r15d,BYTE PTR [rdi]
   4fbac:	test   al,al
   4fbae:	je     50068 <_obstack_memory_used@@Base+0x33e8>
   4fbb4:	test   r12,r12
   4fbb7:	je     50023 <_obstack_memory_used@@Base+0x33a3>
   4fbbd:	mov    edi,r10d
   4fbc0:	call   a610 <btowc@plt>
   4fbc5:	mov    r10d,eax
   4fbc8:	mov    eax,DWORD PTR [rsp+0xa0]
   4fbcf:	test   eax,eax
   4fbd1:	je     50079 <_obstack_memory_used@@Base+0x33f9>
   4fbd7:	cmp    eax,0x3
   4fbda:	je     50079 <_obstack_memory_used@@Base+0x33f9>
   4fbe0:	mov    r15d,DWORD PTR [rsp+0xa8]
   4fbe8:	cmp    r10d,0xffffffff
   4fbec:	je     4fce5 <_obstack_memory_used@@Base+0x3065>
   4fbf2:	cmp    r15d,0xffffffff
   4fbf6:	je     4fce5 <_obstack_memory_used@@Base+0x3065>
   4fbfc:	test   BYTE PTR [rsp+0x68],0x1
   4fc01:	je     4fc0c <_obstack_memory_used@@Base+0x2f8c>
   4fc03:	cmp    r15d,r10d
   4fc06:	jb     50044 <_obstack_memory_used@@Base+0x33c4>
   4fc0c:	test   r12,r12
   4fc0f:	je     4fc3c <_obstack_memory_used@@Base+0x2fbc>
   4fc11:	mov    rax,QWORD PTR [r12+0x40]
   4fc16:	mov    rdi,QWORD PTR [r12+0x8]
   4fc1b:	cmp    rax,QWORD PTR [rsp+0x60]
   4fc20:	je     50093 <_obstack_memory_used@@Base+0x3413>
   4fc26:	mov    rcx,QWORD PTR [r12+0x10]
   4fc2b:	lea    rsi,[rax+0x1]
   4fc2f:	mov    DWORD PTR [rdi+rax*4],r10d
   4fc33:	mov    QWORD PTR [r12+0x40],rsi
   4fc38:	mov    DWORD PTR [rcx+rax*4],r15d
   4fc3c:	xor    eax,eax
   4fc3e:	mov    ecx,eax
   4fc40:	cmp    r10d,eax
   4fc43:	ja     4fc5d <_obstack_memory_used@@Base+0x2fdd>
   4fc45:	cmp    r15d,eax
   4fc48:	jb     4fc5d <_obstack_memory_used@@Base+0x2fdd>
   4fc4a:	mov    rdx,rax
   4fc4d:	mov    edi,0x1
   4fc52:	sar    rdx,0x6
   4fc56:	shl    rdi,cl
   4fc59:	or     QWORD PTR [rbx+rdx*8],rdi
   4fc5d:	add    rax,0x1
   4fc61:	cmp    rax,0x100
   4fc67:	jne    4fc3e <_obstack_memory_used@@Base+0x2fbe>
   4fc69:	jmp    4f435 <_obstack_memory_used@@Base+0x27b5>
   4fc6e:	mov    eax,DWORD PTR [rsp+0x20]
   4fc72:	neg    eax
   4fc74:	cdqe   
   4fc76:	add    rax,r11
   4fc79:	mov    QWORD PTR [r13+0x48],rax
   4fc7d:	mov    BYTE PTR [rbp+0x8],0x1
   4fc81:	jmp    4f0cf <_obstack_memory_used@@Base+0x244f>
   4fc86:	mov    QWORD PTR [rsp+0x10],0x0
   4fc8f:	mov    rax,QWORD PTR [rsp+0x30]
   4fc94:	mov    DWORD PTR [rax],0x6
   4fc9a:	jmp    4ec18 <_obstack_memory_used@@Base+0x1f98>
   4fc9f:	mov    rax,QWORD PTR [rsp+0x30]
   4fca4:	mov    DWORD PTR [rax],0x2
   4fcaa:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   4fcaf:	mov    rdi,rbx
   4fcb2:	call   9ce0 <free@plt>
   4fcb7:	mov    rdi,QWORD PTR [rsp+0x38]
   4fcbc:	call   9ce0 <free@plt>
   4fcc1:	jmp    4ebf6 <_obstack_memory_used@@Base+0x1f76>
   4fcc6:	mov    rdi,QWORD PTR [rsp+0xa8]
   4fcce:	mov    DWORD PTR [rsp+0x7c],ecx
   4fcd2:	call   a060 <strlen@plt>
   4fcd7:	mov    ecx,DWORD PTR [rsp+0x7c]
   4fcdb:	cmp    rax,0x1
   4fcdf:	jbe    50015 <_obstack_memory_used@@Base+0x3395>
   4fce5:	mov    rax,QWORD PTR [rsp+0x30]
   4fcea:	mov    rbp,QWORD PTR [rsp+0x10]
   4fcef:	mov    DWORD PTR [rax],0x3
   4fcf5:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   4fcfa:	mov    rax,QWORD PTR [rsp+0x50]
   4fcff:	lea    rax,[rax+rax*1+0x1]
   4fd04:	lea    rsi,[rax*4+0x0]
   4fd0c:	mov    QWORD PTR [rsp+0x50],rax
   4fd11:	call   a570 <realloc@plt>
   4fd16:	mov    rdi,rax
   4fd19:	test   rax,rax
   4fd1c:	je     5005e <_obstack_memory_used@@Base+0x33de>
   4fd22:	mov    rax,QWORD PTR [rsp+0x38]
   4fd27:	mov    QWORD PTR [rax],rdi
   4fd2a:	mov    rax,QWORD PTR [rax+0x28]
   4fd2e:	jmp    4f8ee <_obstack_memory_used@@Base+0x2c6e>
   4fd33:	mov    rdi,QWORD PTR [rsp+0x28]
   4fd38:	movsxd rax,DWORD PTR [rsp+0x20]
   4fd3d:	mov    rbp,QWORD PTR [rsp+0x10]
   4fd42:	add    QWORD PTR [rdi+0x48],rax
   4fd46:	cmp    BYTE PTR [rsp+0x7b],0x0
   4fd4b:	je     4fd60 <_obstack_memory_used@@Base+0x30e0>
   4fd4d:	mov    rax,rbx
   4fd50:	lea    rdx,[rbx+0x20]
   4fd54:	not    QWORD PTR [rax]
   4fd57:	add    rax,0x8
   4fd5b:	cmp    rdx,rax
   4fd5e:	jne    4fd54 <_obstack_memory_used@@Base+0x30d4>
   4fd60:	mov    edx,DWORD PTR [rbp+0xb4]
   4fd66:	cmp    edx,0x1
   4fd69:	jg     4ff03 <_obstack_memory_used@@Base+0x3283>
   4fd6f:	mov    rax,QWORD PTR [rsp+0x38]
   4fd74:	cmp    QWORD PTR [rax+0x28],0x0
   4fd79:	jne    4fe4f <_obstack_memory_used@@Base+0x31cf>
   4fd7f:	mov    rax,QWORD PTR [rsp+0x38]
   4fd84:	cmp    QWORD PTR [rax+0x30],0x0
   4fd89:	jne    4fe4f <_obstack_memory_used@@Base+0x31cf>
   4fd8f:	cmp    QWORD PTR [rax+0x38],0x0
   4fd94:	jne    4fe4f <_obstack_memory_used@@Base+0x31cf>
   4fd9a:	cmp    QWORD PTR [rax+0x40],0x0
   4fd9f:	jne    4fe4f <_obstack_memory_used@@Base+0x31cf>
   4fda5:	sub    edx,0x1
   4fda8:	jle    4fdbf <_obstack_memory_used@@Base+0x313f>
   4fdaa:	cmp    QWORD PTR [rax+0x48],0x0
   4fdaf:	jne    4fe4f <_obstack_memory_used@@Base+0x31cf>
   4fdb5:	test   BYTE PTR [rax+0x20],0x1
   4fdb9:	jne    4fe4f <_obstack_memory_used@@Base+0x31cf>
   4fdbf:	mov    r15,QWORD PTR [rsp+0x38]
   4fdc4:	mov    rdi,QWORD PTR [r15]
   4fdc7:	call   9ce0 <free@plt>
   4fdcc:	mov    rdi,QWORD PTR [r15+0x8]
   4fdd0:	call   9ce0 <free@plt>
   4fdd5:	mov    rdi,QWORD PTR [r15+0x10]
   4fdd9:	call   9ce0 <free@plt>
   4fdde:	mov    rdi,QWORD PTR [r15+0x18]
   4fde2:	call   9ce0 <free@plt>
   4fde7:	mov    rdi,r15
   4fdea:	call   9ce0 <free@plt>
   4fdef:	mov    BYTE PTR [rsp+0xa8],0x3
   4fdf7:	xor    edx,edx
   4fdf9:	xor    esi,esi
   4fdfb:	mov    QWORD PTR [rsp+0xa0],rbx
   4fe03:	lea    rcx,[rsp+0xa0]
   4fe0b:	mov    rdi,rbp
   4fe0e:	call   45e00 <argp_usage@@Base+0x2a80>
   4fe13:	mov    QWORD PTR [rsp+0x10],rax
   4fe18:	test   rax,rax
   4fe1b:	jne    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4fe21:	mov    rax,QWORD PTR [rsp+0x30]
   4fe26:	mov    DWORD PTR [rax],0xc
   4fe2c:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   4fe31:	movzx  eax,BYTE PTR [rsp+0x58]
   4fe36:	xor    r10d,r10d
   4fe39:	test   ecx,ecx
   4fe3b:	jne    4ff20 <_obstack_memory_used@@Base+0x32a0>
   4fe41:	movzx  r15d,BYTE PTR [rsp+0xa8]
   4fe4a:	jmp    4fbac <_obstack_memory_used@@Base+0x2f2c>
   4fe4f:	or     BYTE PTR [rbp+0xb0],0x2
   4fe56:	mov    rax,QWORD PTR [rsp+0x38]
   4fe5b:	xor    edx,edx
   4fe5d:	xor    esi,esi
   4fe5f:	lea    r12,[rsp+0xa0]
   4fe67:	mov    rdi,rbp
   4fe6a:	mov    BYTE PTR [rsp+0xa8],0x6
   4fe72:	mov    rcx,r12
   4fe75:	mov    QWORD PTR [rsp+0xa0],rax
   4fe7d:	call   45e00 <argp_usage@@Base+0x2a80>
   4fe82:	lea    rdx,[rbx+0x20]
   4fe86:	mov    rdi,rax
   4fe89:	mov    QWORD PTR [rsp+0x10],rax
   4fe8e:	mov    rax,rbx
   4fe91:	test   rdi,rdi
   4fe94:	je     4fe21 <_obstack_memory_used@@Base+0x31a1>
   4fe96:	cmp    QWORD PTR [rax],0x0
   4fe9a:	jne    4feb2 <_obstack_memory_used@@Base+0x3232>
   4fe9c:	add    rax,0x8
   4fea0:	cmp    rdx,rax
   4fea3:	jne    4fe96 <_obstack_memory_used@@Base+0x3216>
   4fea5:	mov    rdi,rbx
   4fea8:	call   9ce0 <free@plt>
   4fead:	jmp    4ecd0 <_obstack_memory_used@@Base+0x2050>
   4feb2:	xor    esi,esi
   4feb4:	mov    rcx,r12
   4feb7:	xor    edx,edx
   4feb9:	mov    rdi,rbp
   4febc:	mov    BYTE PTR [rsp+0xa8],0x3
   4fec4:	mov    QWORD PTR [rsp+0xa0],rbx
   4fecc:	call   45e00 <argp_usage@@Base+0x2a80>
   4fed1:	mov    rsi,rax
   4fed4:	test   rax,rax
   4fed7:	je     4fe21 <_obstack_memory_used@@Base+0x31a1>
   4fedd:	pxor   xmm0,xmm0
   4fee1:	mov    rdx,QWORD PTR [rsp+0x10]
   4fee6:	lea    rcx,[rsp+0xb0]
   4feee:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   4fef6:	mov    BYTE PTR [rsp+0xb8],0xa
   4fefe:	jmp    4fe0b <_obstack_memory_used@@Base+0x318b>
   4ff03:	mov    rcx,QWORD PTR [rbp+0x78]
   4ff07:	xor    eax,eax
   4ff09:	mov    rsi,QWORD PTR [rcx+rax*1]
   4ff0d:	and    QWORD PTR [rbx+rax*1],rsi
   4ff11:	add    rax,0x8
   4ff15:	cmp    rax,0x20
   4ff19:	jne    4ff09 <_obstack_memory_used@@Base+0x3289>
   4ff1b:	jmp    4fd6f <_obstack_memory_used@@Base+0x30ef>
   4ff20:	test   al,al
   4ff22:	jne    500fd <_obstack_memory_used@@Base+0x347d>
   4ff28:	mov    r10d,DWORD PTR [rsp+0x98]
   4ff30:	jmp    4fbe0 <_obstack_memory_used@@Base+0x2f60>
   4ff35:	mov    QWORD PTR [rsp+0x20],0x0
   4ff3e:	mov    r15,QWORD PTR [rsp+0x10]
   4ff43:	jmp    4ed77 <_obstack_memory_used@@Base+0x20f7>
   4ff48:	mov    rax,QWORD PTR [rsp+0x8]
   4ff4d:	movzx  eax,BYTE PTR [rax+0x8]
   4ff51:	jmp    4ef10 <_obstack_memory_used@@Base+0x2290>
   4ff56:	cs nop WORD PTR [rax+rax*1+0x0]
   4ff60:	mov    ebx,0x80
   4ff65:	mov    r13d,0x2
   4ff6b:	call   a980 <__ctype_b_loc@plt>
   4ff70:	lea    r9d,[rbx+0x100]
   4ff77:	mov    r8,rax
   4ff7a:	movsxd rax,ebx
   4ff7d:	mov    rdx,QWORD PTR [r8]
   4ff80:	mov    r8d,0x1
   4ff86:	lea    rdi,[rdx+rax*2]
   4ff8a:	movsxd rax,r13d
   4ff8d:	shl    r13d,0x6
   4ff91:	lea    rsi,[rbp+rax*8+0x0]
   4ff96:	sub    r9d,r13d
   4ff99:	xor    eax,eax
   4ff9b:	jmp    4ffaa <_obstack_memory_used@@Base+0x332a>
   4ff9d:	nop    DWORD PTR [rax]
   4ffa0:	add    rax,0x1
   4ffa4:	cmp    rax,0x40
   4ffa8:	je     4ffc9 <_obstack_memory_used@@Base+0x3349>
   4ffaa:	mov    ecx,eax
   4ffac:	test   BYTE PTR [rdi+rax*2],0x8
   4ffb0:	jne    4ffba <_obstack_memory_used@@Base+0x333a>
   4ffb2:	lea    edx,[rbx+rax*1]
   4ffb5:	cmp    edx,0x5f
   4ffb8:	jne    4ffa0 <_obstack_memory_used@@Base+0x3320>
   4ffba:	mov    rdx,r8
   4ffbd:	shl    rdx,cl
   4ffc0:	or     QWORD PTR [rsi+0xb8],rdx
   4ffc7:	jmp    4ffa0 <_obstack_memory_used@@Base+0x3320>
   4ffc9:	add    ebx,0x40
   4ffcc:	sub    rdi,0xffffffffffffff80
   4ffd0:	add    rsi,0x8
   4ffd4:	cmp    r9d,ebx
   4ffd7:	jne    4ff99 <_obstack_memory_used@@Base+0x3319>
   4ffd9:	jmp    4f2aa <_obstack_memory_used@@Base+0x262a>
   4ffde:	xor    ebx,ebx
   4ffe0:	xor    r13d,r13d
   4ffe3:	jmp    4ff6b <_obstack_memory_used@@Base+0x32eb>
   4ffe5:	mov    rax,QWORD PTR [rsp+0x98]
   4ffed:	mov    DWORD PTR [rsp+0x7c],ecx
   4fff1:	mov    rdi,rax
   4fff4:	mov    QWORD PTR [rsp+0x70],rax
   4fff9:	call   a060 <strlen@plt>
   4fffe:	mov    ecx,DWORD PTR [rsp+0x7c]
   50002:	cmp    rax,0x1
   50006:	ja     4fce5 <_obstack_memory_used@@Base+0x3065>
   5000c:	cmp    ecx,0x3
   5000f:	je     4fcc6 <_obstack_memory_used@@Base+0x3046>
   50015:	mov    rax,QWORD PTR [rsp+0x70]
   5001a:	movzx  r10d,BYTE PTR [rax]
   5001e:	jmp    4fb85 <_obstack_memory_used@@Base+0x2f05>
   50023:	test   ecx,ecx
   50025:	je     50030 <_obstack_memory_used@@Base+0x33b0>
   50027:	cmp    ecx,0x3
   5002a:	jne    4fbe0 <_obstack_memory_used@@Base+0x2f60>
   50030:	test   BYTE PTR [rsp+0x68],0x1
   50035:	je     4fc3c <_obstack_memory_used@@Base+0x2fbc>
   5003b:	cmp    r15d,r10d
   5003e:	jae    4fc3c <_obstack_memory_used@@Base+0x2fbc>
   50044:	mov    rax,QWORD PTR [rsp+0x30]
   50049:	mov    rbp,QWORD PTR [rsp+0x10]
   5004e:	mov    DWORD PTR [rax],0xb
   50054:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   50059:	call   a0a0 <__stack_chk_fail@plt>
   5005e:	mov    rbp,QWORD PTR [rsp+0x10]
   50063:	jmp    4fe21 <_obstack_memory_used@@Base+0x31a1>
   50068:	mov    r10d,DWORD PTR [rsp+0x98]
   50070:	test   r12,r12
   50073:	je     4fbe8 <_obstack_memory_used@@Base+0x2f68>
   50079:	mov    edi,r15d
   5007c:	mov    DWORD PTR [rsp+0x58],r10d
   50081:	call   a610 <btowc@plt>
   50086:	mov    r10d,DWORD PTR [rsp+0x58]
   5008b:	mov    r15d,eax
   5008e:	jmp    4fbe8 <_obstack_memory_used@@Base+0x2f68>
   50093:	mov    rax,QWORD PTR [rsp+0x60]
   50098:	mov    DWORD PTR [rsp+0x7c],r10d
   5009d:	add    rax,rax
   500a0:	add    rax,0x1
   500a4:	lea    rsi,[rax*4+0x0]
   500ac:	mov    QWORD PTR [rsp+0x60],rax
   500b1:	mov    QWORD PTR [rsp+0x70],rsi
   500b6:	call   a570 <realloc@plt>
   500bb:	mov    rdi,QWORD PTR [r12+0x10]
   500c0:	mov    rsi,QWORD PTR [rsp+0x70]
   500c5:	mov    QWORD PTR [rsp+0x58],rax
   500ca:	call   a570 <realloc@plt>
   500cf:	mov    r9,QWORD PTR [rsp+0x58]
   500d4:	mov    r8,rax
   500d7:	test   r9,r9
   500da:	je     5014d <_obstack_memory_used@@Base+0x34cd>
   500dc:	test   rax,rax
   500df:	mov    r10d,DWORD PTR [rsp+0x7c]
   500e4:	je     5014d <_obstack_memory_used@@Base+0x34cd>
   500e6:	mov    QWORD PTR [r12+0x10],rax
   500eb:	mov    rdi,r9
   500ee:	mov    rax,QWORD PTR [r12+0x40]
   500f3:	mov    QWORD PTR [r12+0x8],r9
   500f8:	jmp    4fc26 <_obstack_memory_used@@Base+0x2fa6>
   500fd:	test   r12,r12
   50100:	je     4fbe0 <_obstack_memory_used@@Base+0x2f60>
   50106:	xor    r15d,r15d
   50109:	jmp    4fbbd <_obstack_memory_used@@Base+0x2f3d>
   5010e:	mov    rdi,QWORD PTR [rsp+0xa8]
   50116:	mov    DWORD PTR [rsp+0x7c],ecx
   5011a:	mov    QWORD PTR [rsp+0x70],rdi
   5011f:	call   a060 <strlen@plt>
   50124:	cmp    rax,0x1
   50128:	ja     4fce5 <_obstack_memory_used@@Base+0x3065>
   5012e:	xor    r10d,r10d
   50131:	test   r15d,r15d
   50134:	movzx  eax,BYTE PTR [rsp+0x58]
   50139:	mov    ecx,DWORD PTR [rsp+0x7c]
   5013d:	mov    rdi,QWORD PTR [rsp+0x70]
   50142:	jne    4fba8 <_obstack_memory_used@@Base+0x2f28>
   50148:	jmp    4fb7c <_obstack_memory_used@@Base+0x2efc>
   5014d:	mov    rdi,r9
   50150:	mov    QWORD PTR [rsp+0x20],r8
   50155:	mov    rbp,QWORD PTR [rsp+0x10]
   5015a:	call   9ce0 <free@plt>
   5015f:	mov    rdi,QWORD PTR [rsp+0x20]
   50164:	call   9ce0 <free@plt>
   50169:	mov    rax,QWORD PTR [rsp+0x30]
   5016e:	mov    DWORD PTR [rax],0xc
   50174:	jmp    4f965 <_obstack_memory_used@@Base+0x2ce5>
   50179:	nop    DWORD PTR [rax+0x0]
   50180:	push   r15
   50182:	push   r14
   50184:	mov    r14,r9
   50187:	push   r13
   50189:	mov    r13,rcx
   5018c:	push   r12
   5018e:	mov    r12,rdx
   50191:	push   rbp
   50192:	mov    rbp,r8
   50195:	push   rbx
   50196:	mov    rbx,rsi
   50199:	sub    rsp,0x58
   5019d:	mov    QWORD PTR [rsp+0x8],rdi
   501a2:	mov    rax,QWORD PTR fs:0x28
   501ab:	mov    QWORD PTR [rsp+0x48],rax
   501b0:	mov    rax,QWORD PTR [rsi]
   501b3:	mov    QWORD PTR [rsp+0x20],rax
   501b8:	call   4eb60 <_obstack_memory_used@@Base+0x1ee0>
   501bd:	mov    edx,DWORD PTR [r14]
   501c0:	mov    r15,rax
   501c3:	test   edx,edx
   501c5:	je     501d0 <_obstack_memory_used@@Base+0x3550>
   501c7:	test   rax,rax
   501ca:	je     50327 <_obstack_memory_used@@Base+0x36a7>
   501d0:	movzx  eax,BYTE PTR [r12+0x8]
   501d6:	mov    edx,eax
   501d8:	and    edx,0xfffffff7
   501db:	cmp    dl,0x2
   501de:	je     502b2 <_obstack_memory_used@@Base+0x3632>
   501e4:	lea    rcx,[rsp+0x30]
   501e9:	test   rbp,rbp
   501ec:	mov    QWORD PTR [rsp+0x28],rcx
   501f1:	mov    rcx,r14
   501f4:	mov    r14,r15
   501f7:	mov    r15,r12
   501fa:	sete   BYTE PTR [rsp+0x1f]
   501ff:	mov    r12,rbp
   50202:	mov    rbp,rbx
   50205:	mov    rbx,rcx
   50208:	jmp    5025e <_obstack_memory_used@@Base+0x35de>
   5020a:	nop    WORD PTR [rax+rax*1+0x0]
   50210:	test   rdx,rdx
   50213:	je     50299 <_obstack_memory_used@@Base+0x3619>
   50219:	mov    rcx,QWORD PTR [rsp+0x28]
   5021e:	mov    rdi,QWORD PTR [rsp+0x20]
   50223:	pxor   xmm0,xmm0
   50227:	mov    rsi,r14
   5022a:	mov    QWORD PTR [rsp+0x10],rdx
   5022f:	movaps XMMWORD PTR [rsp+0x30],xmm0
   50234:	mov    BYTE PTR [rsp+0x38],0x10
   50239:	call   45e00 <argp_usage@@Base+0x2a80>
   5023e:	mov    rdx,QWORD PTR [rsp+0x10]
   50243:	test   rax,rax
   50246:	je     5032c <_obstack_memory_used@@Base+0x36ac>
   5024c:	mov    r14,rax
   5024f:	movzx  eax,BYTE PTR [r15+0x8]
   50254:	mov    edx,eax
   50256:	and    edx,0xfffffff7
   50259:	cmp    dl,0x2
   5025c:	je     502af <_obstack_memory_used@@Base+0x362f>
   5025e:	cmp    al,0x9
   50260:	jne    50269 <_obstack_memory_used@@Base+0x35e9>
   50262:	cmp    BYTE PTR [rsp+0x1f],0x0
   50267:	je     502af <_obstack_memory_used@@Base+0x362f>
   50269:	mov    rdi,QWORD PTR [rsp+0x8]
   5026e:	mov    rdx,r15
   50271:	mov    r9,rbx
   50274:	mov    r8,r12
   50277:	mov    rcx,r13
   5027a:	mov    rsi,rbp
   5027d:	call   4eb60 <_obstack_memory_used@@Base+0x1ee0>
   50282:	mov    rdx,rax
   50285:	mov    eax,DWORD PTR [rbx]
   50287:	test   eax,eax
   50289:	je     50290 <_obstack_memory_used@@Base+0x3610>
   5028b:	test   rdx,rdx
   5028e:	je     502d8 <_obstack_memory_used@@Base+0x3658>
   50290:	test   r14,r14
   50293:	jne    50210 <_obstack_memory_used@@Base+0x3590>
   50299:	movzx  eax,BYTE PTR [r15+0x8]
   5029e:	test   r14,r14
   502a1:	cmove  r14,rdx
   502a5:	mov    edx,eax
   502a7:	and    edx,0xfffffff7
   502aa:	cmp    dl,0x2
   502ad:	jne    5025e <_obstack_memory_used@@Base+0x35de>
   502af:	mov    r15,r14
   502b2:	mov    rax,QWORD PTR [rsp+0x48]
   502b7:	sub    rax,QWORD PTR fs:0x28
   502c0:	jne    503d8 <_obstack_memory_used@@Base+0x3758>
   502c6:	add    rsp,0x58
   502ca:	mov    rax,r15
   502cd:	pop    rbx
   502ce:	pop    rbp
   502cf:	pop    r12
   502d1:	pop    r13
   502d3:	pop    r14
   502d5:	pop    r15
   502d7:	ret    
   502d8:	mov    r15,r14
   502db:	test   r14,r14
   502de:	je     50327 <_obstack_memory_used@@Base+0x36a7>
   502e0:	mov    rbx,r15
   502e3:	mov    r15,QWORD PTR [r15+0x8]
   502e7:	test   r15,r15
   502ea:	jne    502e0 <_obstack_memory_used@@Base+0x3660>
   502ec:	mov    r15,QWORD PTR [rbx+0x10]
   502f0:	test   r15,r15
   502f3:	jne    502e0 <_obstack_memory_used@@Base+0x3660>
   502f5:	jmp    50319 <_obstack_memory_used@@Base+0x3699>
   502f7:	nop    WORD PTR [rax+rax*1+0x0]
   50300:	mov    rax,QWORD PTR [rbx]
   50303:	test   rax,rax
   50306:	je     50327 <_obstack_memory_used@@Base+0x36a7>
   50308:	mov    r15,QWORD PTR [rax+0x10]
   5030c:	test   r15,r15
   5030f:	je     50316 <_obstack_memory_used@@Base+0x3696>
   50311:	cmp    rbx,r15
   50314:	jne    502e0 <_obstack_memory_used@@Base+0x3660>
   50316:	mov    rbx,rax
   50319:	xor    edi,edi
   5031b:	mov    rsi,rbx
   5031e:	call   45c20 <argp_usage@@Base+0x28a0>
   50323:	test   eax,eax
   50325:	je     50300 <_obstack_memory_used@@Base+0x3680>
   50327:	xor    r15d,r15d
   5032a:	jmp    502b2 <_obstack_memory_used@@Base+0x3632>
   5032c:	mov    r15,r14
   5032f:	mov    r14,rbx
   50332:	nop    WORD PTR [rax+rax*1+0x0]
   50338:	mov    rbx,rdx
   5033b:	mov    rdx,QWORD PTR [rdx+0x8]
   5033f:	test   rdx,rdx
   50342:	jne    50338 <_obstack_memory_used@@Base+0x36b8>
   50344:	mov    rdx,QWORD PTR [rbx+0x10]
   50348:	test   rdx,rdx
   5034b:	jne    50338 <_obstack_memory_used@@Base+0x36b8>
   5034d:	jmp    50369 <_obstack_memory_used@@Base+0x36e9>
   5034f:	nop
   50350:	mov    rax,QWORD PTR [rbx]
   50353:	test   rax,rax
   50356:	je     50380 <_obstack_memory_used@@Base+0x3700>
   50358:	mov    rdx,QWORD PTR [rax+0x10]
   5035c:	test   rdx,rdx
   5035f:	je     50366 <_obstack_memory_used@@Base+0x36e6>
   50361:	cmp    rbx,rdx
   50364:	jne    50338 <_obstack_memory_used@@Base+0x36b8>
   50366:	mov    rbx,rax
   50369:	xor    edi,edi
   5036b:	mov    rsi,rbx
   5036e:	call   45c20 <argp_usage@@Base+0x28a0>
   50373:	test   eax,eax
   50375:	je     50350 <_obstack_memory_used@@Base+0x36d0>
   50377:	nop    WORD PTR [rax+rax*1+0x0]
   50380:	mov    rbx,r15
   50383:	mov    r15,QWORD PTR [r15+0x8]
   50387:	test   r15,r15
   5038a:	jne    50380 <_obstack_memory_used@@Base+0x3700>
   5038c:	mov    r15,QWORD PTR [rbx+0x10]
   50390:	test   r15,r15
   50393:	jne    50380 <_obstack_memory_used@@Base+0x3700>
   50395:	jmp    503b9 <_obstack_memory_used@@Base+0x3739>
   50397:	nop    WORD PTR [rax+rax*1+0x0]
   503a0:	mov    rax,QWORD PTR [rbx]
   503a3:	test   rax,rax
   503a6:	je     503c7 <_obstack_memory_used@@Base+0x3747>
   503a8:	mov    rdx,QWORD PTR [rax+0x10]
   503ac:	test   rdx,rdx
   503af:	je     503b6 <_obstack_memory_used@@Base+0x3736>
   503b1:	cmp    rbx,rdx
   503b4:	jne    503d3 <_obstack_memory_used@@Base+0x3753>
   503b6:	mov    rbx,rax
   503b9:	xor    edi,edi
   503bb:	mov    rsi,rbx
   503be:	call   45c20 <argp_usage@@Base+0x28a0>
   503c3:	test   eax,eax
   503c5:	je     503a0 <_obstack_memory_used@@Base+0x3720>
   503c7:	mov    DWORD PTR [r14],0xc
   503ce:	jmp    502b2 <_obstack_memory_used@@Base+0x3632>
   503d3:	mov    r15,rdx
   503d6:	jmp    50380 <_obstack_memory_used@@Base+0x3700>
   503d8:	call   a0a0 <__stack_chk_fail@plt>
   503dd:	nop    DWORD PTR [rax]
   503e0:	push   r15
   503e2:	push   r14
   503e4:	push   r13
   503e6:	mov    r13,r9
   503e9:	push   r12
   503eb:	push   rbp
   503ec:	mov    rbp,rdi
   503ef:	push   rbx
   503f0:	mov    rbx,rdx
   503f3:	sub    rsp,0x58
   503f7:	mov    r12,QWORD PTR [rsi]
   503fa:	mov    QWORD PTR [rsp+0x28],rsi
   503ff:	mov    QWORD PTR [rsp+0x18],rcx
   50404:	mov    QWORD PTR [rsp+0x8],r8
   50409:	mov    rax,QWORD PTR fs:0x28
   50412:	mov    QWORD PTR [rsp+0x48],rax
   50417:	xor    eax,eax
   50419:	mov    rax,QWORD PTR [r12+0xa8]
   50421:	mov    QWORD PTR [rsp+0x20],rax
   50426:	call   50180 <_obstack_memory_used@@Base+0x3500>
   5042b:	mov    edx,DWORD PTR [r13+0x0]
   5042f:	mov    r15,rax
   50432:	test   edx,edx
   50434:	je     5043f <_obstack_memory_used@@Base+0x37bf>
   50436:	test   rax,rax
   50439:	je     505a7 <_obstack_memory_used@@Base+0x3927>
   5043f:	mov    r14,QWORD PTR [rsp+0x18]
   50444:	or     r14,0x800000
   5044b:	mov    rax,r14
   5044e:	mov    r14,r15
   50451:	mov    r15,rax
   50454:	jmp    504ee <_obstack_memory_used@@Base+0x386e>
   50459:	nop    DWORD PTR [rax+0x0]
   50460:	cmp    al,0x9
   50462:	jne    50470 <_obstack_memory_used@@Base+0x37f0>
   50464:	cmp    QWORD PTR [rsp+0x8],0x0
   5046a:	jne    5051a <_obstack_memory_used@@Base+0x389a>
   50470:	mov    r8,QWORD PTR [rsp+0x8]
   50475:	mov    rcx,QWORD PTR [rsp+0x18]
   5047a:	mov    rdx,rbx
   5047d:	mov    r9,r13
   50480:	mov    rax,QWORD PTR [r12+0xa8]
   50488:	mov    rsi,QWORD PTR [rsp+0x28]
   5048d:	mov    rdi,rbp
   50490:	mov    QWORD PTR [rsp+0x10],rax
   50495:	mov    rax,QWORD PTR [rsp+0x20]
   5049a:	mov    QWORD PTR [r12+0xa8],rax
   504a2:	call   50180 <_obstack_memory_used@@Base+0x3500>
   504a7:	mov    rdx,rax
   504aa:	mov    eax,DWORD PTR [r13+0x0]
   504ae:	test   eax,eax
   504b0:	je     504bb <_obstack_memory_used@@Base+0x383b>
   504b2:	test   rdx,rdx
   504b5:	je     50555 <_obstack_memory_used@@Base+0x38d5>
   504bb:	mov    rax,QWORD PTR [rsp+0x10]
   504c0:	or     QWORD PTR [r12+0xa8],rax
   504c8:	pxor   xmm0,xmm0
   504cc:	mov    rsi,r14
   504cf:	lea    rcx,[rsp+0x30]
   504d4:	mov    rdi,r12
   504d7:	movaps XMMWORD PTR [rsp+0x30],xmm0
   504dc:	mov    BYTE PTR [rsp+0x38],0xa
   504e1:	call   45e00 <argp_usage@@Base+0x2a80>
   504e6:	mov    r14,rax
   504e9:	test   rax,rax
   504ec:	je     50520 <_obstack_memory_used@@Base+0x38a0>
   504ee:	cmp    BYTE PTR [rbx+0x8],0xa
   504f2:	jne    50550 <_obstack_memory_used@@Base+0x38d0>
   504f4:	mov    rdx,r15
   504f7:	mov    rsi,rbp
   504fa:	mov    rdi,rbx
   504fd:	call   46950 <argp_usage@@Base+0x35d0>
   50502:	cdqe   
   50504:	add    QWORD PTR [rbp+0x48],rax
   50508:	movzx  eax,BYTE PTR [rbx+0x8]
   5050c:	mov    edx,eax
   5050e:	and    edx,0xfffffff7
   50511:	cmp    dl,0x2
   50514:	jne    50460 <_obstack_memory_used@@Base+0x37e0>
   5051a:	xor    edx,edx
   5051c:	jmp    504c8 <_obstack_memory_used@@Base+0x3848>
   5051e:	xchg   ax,ax
   50520:	mov    DWORD PTR [r13+0x0],0xc
   50528:	mov    r15,rax
   5052b:	mov    rax,QWORD PTR [rsp+0x48]
   50530:	sub    rax,QWORD PTR fs:0x28
   50539:	jne    505af <_obstack_memory_used@@Base+0x392f>
   5053b:	add    rsp,0x58
   5053f:	mov    rax,r15
   50542:	pop    rbx
   50543:	pop    rbp
   50544:	pop    r12
   50546:	pop    r13
   50548:	pop    r14
   5054a:	pop    r15
   5054c:	ret    
   5054d:	nop    DWORD PTR [rax]
   50550:	mov    r15,r14
   50553:	jmp    5052b <_obstack_memory_used@@Base+0x38ab>
   50555:	mov    r15,r14
   50558:	test   r14,r14
   5055b:	je     505a7 <_obstack_memory_used@@Base+0x3927>
   5055d:	nop    DWORD PTR [rax]
   50560:	mov    rbx,r15
   50563:	mov    r15,QWORD PTR [r15+0x8]
   50567:	test   r15,r15
   5056a:	jne    50560 <_obstack_memory_used@@Base+0x38e0>
   5056c:	mov    r15,QWORD PTR [rbx+0x10]
   50570:	test   r15,r15
   50573:	jne    50560 <_obstack_memory_used@@Base+0x38e0>
   50575:	jmp    50599 <_obstack_memory_used@@Base+0x3919>
   50577:	nop    WORD PTR [rax+rax*1+0x0]
   50580:	mov    rax,QWORD PTR [rbx]
   50583:	test   rax,rax
   50586:	je     505a7 <_obstack_memory_used@@Base+0x3927>
   50588:	mov    r15,QWORD PTR [rax+0x10]
   5058c:	cmp    rbx,r15
   5058f:	je     50596 <_obstack_memory_used@@Base+0x3916>
   50591:	test   r15,r15
   50594:	jne    50560 <_obstack_memory_used@@Base+0x38e0>
   50596:	mov    rbx,rax
   50599:	xor    edi,edi
   5059b:	mov    rsi,rbx
   5059e:	call   45c20 <argp_usage@@Base+0x28a0>
   505a3:	test   eax,eax
   505a5:	je     50580 <_obstack_memory_used@@Base+0x3900>
   505a7:	xor    r15d,r15d
   505aa:	jmp    5052b <_obstack_memory_used@@Base+0x38ab>
   505af:	call   a0a0 <__stack_chk_fail@plt>
   505b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   505bf:	nop
   505c0:	endbr64 
   505c4:	push   r15
   505c6:	mov    r15,rsi
   505c9:	push   r14
   505cb:	push   r13
   505cd:	push   r12
   505cf:	mov    r12,rdi
   505d2:	push   rbp
   505d3:	push   rbx
   505d4:	mov    ebx,edx
   505d6:	sub    rsp,0x118
   505dd:	mov    QWORD PTR [rsp+0x10],rsi
   505e2:	mov    rax,QWORD PTR fs:0x28
   505eb:	mov    QWORD PTR [rsp+0x108],rax
   505f3:	mov    eax,edx
   505f5:	mov    QWORD PTR [rdi],0x0
   505fc:	mov    QWORD PTR [rdi+0x8],0x0
   50604:	mov    QWORD PTR [rdi+0x10],0x0
   5060c:	mov    edi,0x100
   50611:	and    eax,0x1
   50614:	cmp    eax,0x1
   50617:	sbb    rbp,rbp
   5061a:	call   a4a0 <malloc@plt>
   5061f:	and    ebp,0xfd4fca
   50625:	mov    QWORD PTR [r12+0x20],rax
   5062a:	add    rbp,0x3b2fc
   50631:	test   rax,rax
   50634:	je     51806 <_obstack_memory_used@@Base+0x4b86>
   5063a:	mov    rax,rbx
   5063d:	shr    ebx,0x3
   50640:	mov    rdi,r15
   50643:	shl    rax,0x15
   50647:	and    ebx,0x1
   5064a:	and    eax,0x400000
   5064f:	shl    ebx,0x4
   50652:	or     rax,rbp
   50655:	mov    r14,rax
   50658:	mov    QWORD PTR [rsp+0x18],rax
   5065d:	call   a060 <strlen@plt>
   50662:	mov    QWORD PTR [r12+0x18],r14
   50667:	mov    esi,0x1
   5066c:	mov    edi,0xe8
   50671:	mov    QWORD PTR [r12+0x28],0x0
   5067a:	mov    QWORD PTR [r12+0x30],0x0
   50683:	mov    BYTE PTR [r12+0x38],bl
   50688:	mov    QWORD PTR [rsp+0x8],rax
   5068d:	mov    DWORD PTR [rsp+0x3c],0x0
   50695:	call   a2f0 <calloc@plt>
   5069a:	mov    rbp,rax
   5069d:	test   rax,rax
   506a0:	je     519c5 <_obstack_memory_used@@Base+0x4d45>
   506a6:	mov    QWORD PTR [r12],rax
   506aa:	mov    DWORD PTR [rax+0x80],0xf
   506b4:	movabs rax,0x555555555555554
   506be:	mov    QWORD PTR [r12+0x8],0xe8
   506c7:	mov    QWORD PTR [r12+0x10],0xe8
   506d0:	cmp    QWORD PTR [rsp+0x8],rax
   506d5:	ja     50dba <_obstack_memory_used@@Base+0x413a>
   506db:	mov    rbx,QWORD PTR [rsp+0x8]
   506e0:	lea    rax,[rbx+0x1]
   506e4:	mov    QWORD PTR [rbp+0x8],rax
   506e8:	mov    rdi,rax
   506eb:	shl    rdi,0x4
   506ef:	mov    QWORD PTR [rsp+0x28],rax
   506f4:	call   a4a0 <malloc@plt>
   506f9:	mov    QWORD PTR [rbp+0x0],rax
   506fd:	test   rbx,rbx
   50700:	je     51810 <_obstack_memory_used@@Base+0x4b90>
   50706:	mov    esi,0x1
   5070b:	nop    DWORD PTR [rax+rax*1+0x0]
   50710:	add    rsi,rsi
   50713:	cmp    QWORD PTR [rsp+0x8],rsi
   50718:	jae    50710 <_obstack_memory_used@@Base+0x3a90>
   5071a:	lea    rbx,[rsi-0x1]
   5071e:	mov    edi,0x18
   50723:	call   a2f0 <calloc@plt>
   50728:	mov    QWORD PTR [rbp+0x88],rbx
   5072f:	mov    QWORD PTR [rbp+0x40],rax
   50733:	call   a050 <__ctype_get_mb_cur_max@plt>
   50738:	mov    edi,0xe
   5073d:	mov    DWORD PTR [rbp+0xb4],eax
   50743:	call   a4e0 <nl_langinfo@plt>
   50748:	movzx  edx,BYTE PTR [rax]
   5074b:	and    edx,0xffffffdf
   5074e:	cmp    dl,0x55
   50751:	jne    50790 <_obstack_memory_used@@Base+0x3b10>
   50753:	movzx  edx,BYTE PTR [rax+0x1]
   50757:	and    edx,0xffffffdf
   5075a:	cmp    dl,0x54
   5075d:	jne    50790 <_obstack_memory_used@@Base+0x3b10>
   5075f:	movzx  edx,BYTE PTR [rax+0x2]
   50763:	and    edx,0xffffffdf
   50766:	cmp    dl,0x46
   50769:	jne    50790 <_obstack_memory_used@@Base+0x3b10>
   5076b:	xor    edx,edx
   5076d:	cmp    BYTE PTR [rax+0x3],0x2d
   50771:	sete   dl
   50774:	lea    rax,[rax+rdx*1+0x3]
   50779:	cmp    BYTE PTR [rax],0x38
   5077c:	jne    50790 <_obstack_memory_used@@Base+0x3b10>
   5077e:	cmp    BYTE PTR [rax+0x1],0x0
   50782:	jne    50790 <_obstack_memory_used@@Base+0x3b10>
   50784:	or     BYTE PTR [rbp+0xb0],0x4
   5078b:	nop    DWORD PTR [rax+rax*1+0x0]
   50790:	movzx  eax,BYTE PTR [rbp+0xb0]
   50797:	mov    edx,eax
   50799:	and    edx,0xfffffff7
   5079c:	cmp    DWORD PTR [rbp+0xb4],0x1
   507a3:	mov    BYTE PTR [rbp+0xb0],dl
   507a9:	jle    507be <_obstack_memory_used@@Base+0x3b3e>
   507ab:	test   al,0x4
   507ad:	je     5161b <_obstack_memory_used@@Base+0x499b>
   507b3:	lea    rax,[rip+0x1c4e6]        # 6cca0 <_obstack_memory_used@@Base+0x20020>
   507ba:	mov    QWORD PTR [rbp+0x78],rax
   507be:	cmp    QWORD PTR [rbp+0x0],0x0
   507c3:	je     50dba <_obstack_memory_used@@Base+0x413a>
   507c9:	cmp    QWORD PTR [rbp+0x40],0x0
   507ce:	je     50dba <_obstack_memory_used@@Base+0x413a>
   507d4:	lea    rsi,[rsp+0x78]
   507d9:	xor    eax,eax
   507db:	mov    ecx,0x12
   507e0:	mov    rdx,QWORD PTR [r12+0x28]
   507e5:	mov    rdi,rsi
   507e8:	mov    r10,QWORD PTR [rsp+0x8]
   507ed:	lea    r13,[rsp+0x70]
   507f2:	mov    DWORD PTR [rsp+0x3c],0x0
   507fa:	rep stos QWORD PTR es:[rdi],rax
   507fd:	mov    rax,QWORD PTR [rsp+0x10]
   50802:	mov    rbx,rdx
   50805:	mov    edi,DWORD PTR [rbp+0xb4]
   5080b:	mov    QWORD PTR [rsp+0xc8],r10
   50813:	mov    QWORD PTR [rsp+0x70],rax
   50818:	mov    rax,QWORD PTR [rsp+0x18]
   5081d:	mov    QWORD PTR [rsp+0xc0],r10
   50825:	and    eax,0x400000
   5082a:	mov    QWORD PTR [rsp+0xe8],rdx
   50832:	mov    QWORD PTR [rsp+0x20],rax
   50837:	setne  BYTE PTR [rsp+0xf8]
   5083f:	or     rbx,rax
   50842:	movzx  eax,BYTE PTR [rbp+0xb0]
   50849:	setne  sil
   5084d:	mov    DWORD PTR [rsp+0x100],edi
   50854:	mov    ecx,eax
   50856:	shr    al,0x3
   50859:	mov    BYTE PTR [rsp+0xfb],sil
   50861:	shr    cl,0x2
   50864:	and    eax,0x1
   50867:	mov    QWORD PTR [rsp+0xd8],r10
   5086f:	and    ecx,0x1
   50872:	mov    BYTE PTR [rsp+0xfa],al
   50879:	mov    BYTE PTR [rsp+0xf9],cl
   50880:	mov    QWORD PTR [rsp+0xd0],r10
   50888:	test   r10,r10
   5088b:	jne    50d6a <_obstack_memory_used@@Base+0x40ea>
   50891:	mov    rax,QWORD PTR [rsp+0x10]
   50896:	test   sil,sil
   50899:	cmovne rax,QWORD PTR [rsp+0x78]
   5089f:	cmp    QWORD PTR [rsp+0x20],0x0
   508a5:	mov    QWORD PTR [rsp+0x10],rax
   508aa:	mov    QWORD PTR [rsp+0x78],rax
   508af:	je     50998 <_obstack_memory_used@@Base+0x3d18>
   508b5:	cmp    edi,0x1
   508b8:	jle    517ed <_obstack_memory_used@@Base+0x4b6d>
   508be:	mov    rdi,r13
   508c1:	call   4cf50 <_obstack_memory_used@@Base+0x2d0>
   508c6:	test   eax,eax
   508c8:	jne    5090c <_obstack_memory_used@@Base+0x3c8c>
   508ca:	mov    rax,QWORD PTR [rsp+0x8]
   508cf:	cmp    rax,QWORD PTR [rsp+0xa8]
   508d7:	jle    50a1a <_obstack_memory_used@@Base+0x3d9a>
   508dd:	mov    rsi,QWORD PTR [rsp+0xb0]
   508e5:	movsxd rax,DWORD PTR [rbp+0xb4]
   508ec:	add    rax,QWORD PTR [rsp+0xa0]
   508f4:	cmp    rsi,rax
   508f7:	jg     50a1a <_obstack_memory_used@@Base+0x3d9a>
   508fd:	add    rsi,rsi
   50900:	mov    rdi,r13
   50903:	call   4ccb0 <_obstack_memory_used@@Base+0x30>
   50908:	test   eax,eax
   5090a:	je     508be <_obstack_memory_used@@Base+0x3c3e>
   5090c:	mov    DWORD PTR [rsp+0x3c],eax
   50910:	mov    r13,QWORD PTR [r12]
   50914:	mov    rbx,QWORD PTR [r13+0x70]
   50918:	test   rbx,rbx
   5091b:	je     50930 <_obstack_memory_used@@Base+0x3cb0>
   5091d:	nop    DWORD PTR [rax]
   50920:	mov    rdi,rbx
   50923:	mov    rbx,QWORD PTR [rbx]
   50926:	call   9ce0 <free@plt>
   5092b:	test   rbx,rbx
   5092e:	jne    50920 <_obstack_memory_used@@Base+0x3ca0>
   50930:	mov    QWORD PTR [r13+0x70],0x0
   50938:	mov    rdi,QWORD PTR [r13+0x20]
   5093c:	mov    DWORD PTR [r13+0x80],0xf
   50947:	mov    QWORD PTR [r13+0x68],0x0
   5094f:	call   9ce0 <free@plt>
   50954:	mov    QWORD PTR [r13+0x20],0x0
   5095c:	mov    rdi,QWORD PTR [rsp+0x80]
   50964:	call   9ce0 <free@plt>
   50969:	mov    rdi,QWORD PTR [rsp+0x88]
   50971:	call   9ce0 <free@plt>
   50976:	cmp    BYTE PTR [rsp+0xfb],0x0
   5097e:	je     50dc2 <_obstack_memory_used@@Base+0x4142>
   50984:	mov    rdi,QWORD PTR [rsp+0x78]
   50989:	call   9ce0 <free@plt>
   5098e:	jmp    50dc2 <_obstack_memory_used@@Base+0x4142>
   50993:	nop    DWORD PTR [rax+rax*1+0x0]
   50998:	cmp    edi,0x1
   5099b:	jg     5160e <_obstack_memory_used@@Base+0x498e>
   509a1:	mov    rcx,QWORD PTR [rsp+0xb0]
   509a9:	test   rbx,rbx
   509ac:	je     50a0a <_obstack_memory_used@@Base+0x3d8a>
   509ae:	mov    rax,QWORD PTR [rsp+0xc8]
   509b6:	cmp    rcx,rax
   509b9:	cmovg  rcx,rax
   509bd:	mov    rax,QWORD PTR [rsp+0xa0]
   509c5:	cmp    rcx,rax
   509c8:	jg     509da <_obstack_memory_used@@Base+0x3d5a>
   509ca:	jmp    51958 <_obstack_memory_used@@Base+0x4cd8>
   509cf:	nop
   509d0:	mov    rbx,QWORD PTR [rsp+0x78]
   509d5:	mov    QWORD PTR [rsp+0x10],rbx
   509da:	mov    rdx,QWORD PTR [rsp+0x70]
   509df:	mov    rsi,QWORD PTR [rsp+0xe8]
   509e7:	mov    rbx,QWORD PTR [rsp+0x10]
   509ec:	add    rdx,rax
   509ef:	add    rdx,QWORD PTR [rsp+0x98]
   509f7:	movzx  edx,BYTE PTR [rdx]
   509fa:	movzx  edx,BYTE PTR [rsi+rdx*1]
   509fe:	mov    BYTE PTR [rbx+rax*1],dl
   50a01:	add    rax,0x1
   50a05:	cmp    rcx,rax
   50a08:	jne    509d0 <_obstack_memory_used@@Base+0x3d50>
   50a0a:	mov    QWORD PTR [rsp+0xa0],rcx
   50a12:	mov    QWORD PTR [rsp+0xa8],rcx
   50a1a:	mov    rbx,QWORD PTR [rsp+0x18]
   50a1f:	mov    r15,QWORD PTR [r12]
   50a23:	mov    rsi,r13
   50a26:	mov    QWORD PTR [r12+0x30],0x0
   50a2f:	lea    r14,[rsp+0x40]
   50a34:	mov    DWORD PTR [rsp+0x3c],0x0
   50a3c:	mov    QWORD PTR [r15+0xd8],rbx
   50a43:	mov    rdx,rbx
   50a46:	mov    rdi,r14
   50a49:	or     rdx,0x800000
   50a50:	call   46950 <argp_usage@@Base+0x35d0>
   50a55:	mov    rcx,rbx
   50a58:	lea    r9,[rsp+0x3c]
   50a5d:	xor    r8d,r8d
   50a60:	mov    rdx,r14
   50a63:	mov    rsi,r12
   50a66:	mov    rdi,r13
   50a69:	cdqe   
   50a6b:	add    QWORD PTR [rsp+0xb8],rax
   50a73:	call   503e0 <_obstack_memory_used@@Base+0x3760>
   50a78:	mov    ecx,DWORD PTR [rsp+0x3c]
   50a7c:	test   ecx,ecx
   50a7e:	jne    51831 <_obstack_memory_used@@Base+0x4bb1>
   50a84:	lea    r13,[rsp+0x50]
   50a89:	pxor   xmm0,xmm0
   50a8d:	xor    edx,edx
   50a8f:	xor    esi,esi
   50a91:	mov    rcx,r13
   50a94:	mov    rdi,r15
   50a97:	movaps XMMWORD PTR [rsp+0x50],xmm0
   50a9c:	mov    QWORD PTR [rsp+0x8],rax
   50aa1:	mov    BYTE PTR [rsp+0x58],0x2
   50aa6:	call   45e00 <argp_usage@@Base+0x2a80>
   50aab:	mov    r8,QWORD PTR [rsp+0x8]
   50ab0:	mov    rdx,rax
   50ab3:	test   r8,r8
   50ab6:	je     50ae4 <_obstack_memory_used@@Base+0x3e64>
   50ab8:	pxor   xmm0,xmm0
   50abc:	mov    rsi,r8
   50abf:	mov    rcx,r13
   50ac2:	mov    rdi,r15
   50ac5:	mov    QWORD PTR [rsp+0x8],rdx
   50aca:	movaps XMMWORD PTR [rsp+0x50],xmm0
   50acf:	mov    BYTE PTR [rsp+0x58],0x10
   50ad4:	call   45e00 <argp_usage@@Base+0x2a80>
   50ad9:	mov    r8,rax
   50adc:	mov    rax,QWORD PTR [rsp+0x8]
   50ae1:	mov    rdx,r8
   50ae4:	test   rax,rax
   50ae7:	sete   al
   50aea:	test   rdx,rdx
   50aed:	sete   cl
   50af0:	or     al,cl
   50af2:	jne    5181c <_obstack_memory_used@@Base+0x4b9c>
   50af8:	mov    rbx,QWORD PTR [r12]
   50afc:	mov    QWORD PTR [rbp+0x68],rdx
   50b00:	mov    rcx,QWORD PTR [rbx+0x8]
   50b04:	lea    rdi,[rcx*8+0x0]
   50b0c:	mov    QWORD PTR [rsp+0x10],rcx
   50b11:	mov    QWORD PTR [rsp+0x8],rdi
   50b16:	call   a4a0 <malloc@plt>
   50b1b:	mov    rdi,QWORD PTR [rsp+0x8]
   50b20:	mov    QWORD PTR [rbx+0x18],rax
   50b24:	mov    r15,rax
   50b27:	call   a4a0 <malloc@plt>
   50b2c:	mov    rcx,QWORD PTR [rsp+0x10]
   50b31:	mov    QWORD PTR [rbx+0x20],rax
   50b35:	lea    rdi,[rcx+rcx*2]
   50b39:	mov    QWORD PTR [rsp+0x18],rax
   50b3e:	shl    rdi,0x3
   50b42:	mov    QWORD PTR [rsp+0x10],rdi
   50b47:	call   a4a0 <malloc@plt>
   50b4c:	mov    rdi,QWORD PTR [rsp+0x10]
   50b51:	mov    QWORD PTR [rbx+0x28],rax
   50b55:	mov    QWORD PTR [rsp+0x8],rax
   50b5a:	call   a4a0 <malloc@plt>
   50b5f:	test   r15,r15
   50b62:	mov    rcx,QWORD PTR [rsp+0x8]
   50b67:	mov    rdx,QWORD PTR [rsp+0x18]
   50b6c:	mov    QWORD PTR [rbx+0x30],rax
   50b70:	je     50e39 <_obstack_memory_used@@Base+0x41b9>
   50b76:	test   rdx,rdx
   50b79:	je     50e39 <_obstack_memory_used@@Base+0x41b9>
   50b7f:	test   rcx,rcx
   50b82:	je     50e39 <_obstack_memory_used@@Base+0x41b9>
   50b88:	test   rax,rax
   50b8b:	je     50e39 <_obstack_memory_used@@Base+0x41b9>
   50b91:	mov    rsi,QWORD PTR [r12+0x30]
   50b96:	lea    rdi,[rsi*8+0x0]
   50b9e:	mov    QWORD PTR [rsp+0x8],rsi
   50ba3:	call   a4a0 <malloc@plt>
   50ba8:	mov    rsi,QWORD PTR [rsp+0x8]
   50bad:	test   rax,rax
   50bb0:	mov    QWORD PTR [rbx+0xe0],rax
   50bb7:	mov    rdi,rax
   50bba:	je     50c8f <_obstack_memory_used@@Base+0x400f>
   50bc0:	xor    eax,eax
   50bc2:	test   rsi,rsi
   50bc5:	je     50bdd <_obstack_memory_used@@Base+0x3f5d>
   50bc7:	nop    WORD PTR [rax+rax*1+0x0]
   50bd0:	mov    QWORD PTR [rdi+rax*8],rax
   50bd4:	add    rax,0x1
   50bd8:	cmp    rax,rsi
   50bdb:	jne    50bd0 <_obstack_memory_used@@Base+0x3f50>
   50bdd:	mov    r15,QWORD PTR [rbx+0x68]
   50be1:	mov    r10d,0x1
   50be7:	mov    r9d,0x1
   50bed:	movzx  ecx,BYTE PTR [r15+0x30]
   50bf2:	mov    rax,r15
   50bf5:	mov    rdx,QWORD PTR [rax+0x8]
   50bf9:	cmp    cl,0x4
   50bfc:	je     50c1c <_obstack_memory_used@@Base+0x3f9c>
   50bfe:	cmp    cl,0x11
   50c01:	je     50d98 <_obstack_memory_used@@Base+0x4118>
   50c07:	test   rdx,rdx
   50c0a:	je     50c3d <_obstack_memory_used@@Base+0x3fbd>
   50c0c:	movzx  ecx,BYTE PTR [rdx+0x30]
   50c10:	mov    rax,rdx
   50c13:	mov    rdx,QWORD PTR [rax+0x8]
   50c17:	cmp    cl,0x4
   50c1a:	jne    50bfe <_obstack_memory_used@@Base+0x3f7e>
   50c1c:	movsxd rcx,DWORD PTR [rax+0x28]
   50c20:	mov    r11d,r9d
   50c23:	mov    rcx,QWORD PTR [rdi+rcx*8]
   50c27:	shl    r11d,cl
   50c2a:	mov    QWORD PTR [rax+0x28],rcx
   50c2e:	movsxd rcx,r11d
   50c31:	or     QWORD PTR [rbx+0xa0],rcx
   50c38:	test   rdx,rdx
   50c3b:	jne    50c0c <_obstack_memory_used@@Base+0x3f8c>
   50c3d:	xor    ecx,ecx
   50c3f:	jmp    50c4b <_obstack_memory_used@@Base+0x3fcb>
   50c41:	nop    DWORD PTR [rax+0x0]
   50c48:	mov    rax,rdx
   50c4b:	mov    rdx,QWORD PTR [rax+0x10]
   50c4f:	test   rdx,rdx
   50c52:	je     50c59 <_obstack_memory_used@@Base+0x3fd9>
   50c54:	cmp    rdx,rcx
   50c57:	jne    50c0c <_obstack_memory_used@@Base+0x3f8c>
   50c59:	mov    rdx,QWORD PTR [rax]
   50c5c:	mov    rcx,rax
   50c5f:	test   rdx,rdx
   50c62:	jne    50c48 <_obstack_memory_used@@Base+0x3fc8>
   50c64:	xor    eax,eax
   50c66:	test   rsi,rsi
   50c69:	je     50c7f <_obstack_memory_used@@Base+0x3fff>
   50c6b:	nop    DWORD PTR [rax+rax*1+0x0]
   50c70:	cmp    QWORD PTR [rdi+rax*8],rax
   50c74:	jne    50c93 <_obstack_memory_used@@Base+0x4013>
   50c76:	add    rax,0x1
   50c7a:	cmp    rax,rsi
   50c7d:	jne    50c70 <_obstack_memory_used@@Base+0x3ff0>
   50c7f:	call   9ce0 <free@plt>
   50c84:	mov    QWORD PTR [rbx+0xe0],0x0
   50c8f:	mov    r15,QWORD PTR [rbx+0x68]
   50c93:	mov    rdx,r15
   50c96:	cs nop WORD PTR [rax+rax*1+0x0]
   50ca0:	mov    rcx,rdx
   50ca3:	mov    rdx,QWORD PTR [rdx+0x8]
   50ca7:	test   rdx,rdx
   50caa:	jne    50ca0 <_obstack_memory_used@@Base+0x4020>
   50cac:	mov    rdx,QWORD PTR [rcx+0x10]
   50cb0:	test   rdx,rdx
   50cb3:	jne    50ca0 <_obstack_memory_used@@Base+0x4020>
   50cb5:	jmp    50cfc <_obstack_memory_used@@Base+0x407c>
   50cb7:	nop    WORD PTR [rax+rax*1+0x0]
   50cc0:	mov    rdx,QWORD PTR [rcx+0x10]
   50cc4:	test   rdx,rdx
   50cc7:	je     50cdb <_obstack_memory_used@@Base+0x405b>
   50cc9:	cmp    BYTE PTR [rdx+0x30],0x11
   50ccd:	je     50d40 <_obstack_memory_used@@Base+0x40c0>
   50ccf:	mov    eax,DWORD PTR [rsp+0x50]
   50cd3:	test   eax,eax
   50cd5:	jne    5090c <_obstack_memory_used@@Base+0x3c8c>
   50cdb:	mov    rax,QWORD PTR [rcx]
   50cde:	test   rax,rax
   50ce1:	je     50e60 <_obstack_memory_used@@Base+0x41e0>
   50ce7:	mov    rdx,QWORD PTR [rax+0x10]
   50ceb:	test   rdx,rdx
   50cee:	je     50cf5 <_obstack_memory_used@@Base+0x4075>
   50cf0:	cmp    rcx,rdx
   50cf3:	jne    50ca0 <_obstack_memory_used@@Base+0x4020>
   50cf5:	mov    rdx,QWORD PTR [rax+0x8]
   50cf9:	mov    rcx,rax
   50cfc:	mov    DWORD PTR [rsp+0x50],0x0
   50d04:	test   rdx,rdx
   50d07:	je     50cc0 <_obstack_memory_used@@Base+0x4040>
   50d09:	cmp    BYTE PTR [rdx+0x30],0x11
   50d0d:	jne    50cc0 <_obstack_memory_used@@Base+0x4040>
   50d0f:	mov    rsi,r12
   50d12:	mov    rdi,r13
   50d15:	mov    QWORD PTR [rsp+0x8],rcx
   50d1a:	call   45ee0 <argp_usage@@Base+0x2b60>
   50d1f:	mov    rcx,QWORD PTR [rsp+0x8]
   50d24:	mov    QWORD PTR [rcx+0x8],rax
   50d28:	test   rax,rax
   50d2b:	je     50d30 <_obstack_memory_used@@Base+0x40b0>
   50d2d:	mov    QWORD PTR [rax],rcx
   50d30:	mov    rdx,QWORD PTR [rcx+0x10]
   50d34:	test   rdx,rdx
   50d37:	je     50ccf <_obstack_memory_used@@Base+0x404f>
   50d39:	cmp    BYTE PTR [rdx+0x30],0x11
   50d3d:	jne    50ccf <_obstack_memory_used@@Base+0x404f>
   50d3f:	nop
   50d40:	mov    rsi,r12
   50d43:	mov    rdi,r13
   50d46:	mov    QWORD PTR [rsp+0x8],rcx
   50d4b:	call   45ee0 <argp_usage@@Base+0x2b60>
   50d50:	mov    rcx,QWORD PTR [rsp+0x8]
   50d55:	mov    QWORD PTR [rcx+0x10],rax
   50d59:	test   rax,rax
   50d5c:	je     50ccf <_obstack_memory_used@@Base+0x404f>
   50d62:	mov    QWORD PTR [rax],rcx
   50d65:	jmp    50ccf <_obstack_memory_used@@Base+0x404f>
   50d6a:	mov    rsi,QWORD PTR [rsp+0x28]
   50d6f:	mov    rdi,r13
   50d72:	call   4ccb0 <_obstack_memory_used@@Base+0x30>
   50d77:	test   eax,eax
   50d79:	jne    5090c <_obstack_memory_used@@Base+0x3c8c>
   50d7f:	movzx  esi,BYTE PTR [rsp+0xfb]
   50d87:	mov    edi,DWORD PTR [rbp+0xb4]
   50d8d:	jmp    50891 <_obstack_memory_used@@Base+0x3c11>
   50d92:	nop    WORD PTR [rax+rax*1+0x0]
   50d98:	test   rdx,rdx
   50d9b:	je     50c3d <_obstack_memory_used@@Base+0x3fbd>
   50da1:	movzx  ecx,BYTE PTR [rdx+0x30]
   50da5:	mov    r11,QWORD PTR [rdx+0x8]
   50da9:	cmp    cl,0x11
   50dac:	je     516bf <_obstack_memory_used@@Base+0x4a3f>
   50db2:	mov    rax,rdx
   50db5:	jmp    50bf5 <_obstack_memory_used@@Base+0x3f75>
   50dba:	mov    DWORD PTR [rsp+0x3c],0xc
   50dc2:	mov    rdi,rbp
   50dc5:	call   4e8a0 <_obstack_memory_used@@Base+0x1c20>
   50dca:	mov    rdi,QWORD PTR [r12+0x20]
   50dcf:	mov    eax,DWORD PTR [rsp+0x3c]
   50dd3:	mov    QWORD PTR [r12],0x0
   50ddb:	mov    QWORD PTR [r12+0x8],0x0
   50de4:	mov    r13,rdi
   50de7:	cmp    eax,0x10
   50dea:	jne    5186e <_obstack_memory_used@@Base+0x4bee>
   50df0:	mov    eax,0x8
   50df5:	mov    DWORD PTR [rsp+0x8],eax
   50df9:	call   9ce0 <free@plt>
   50dfe:	mov    eax,DWORD PTR [rsp+0x8]
   50e02:	mov    QWORD PTR [r12+0x20],0x0
   50e0b:	nop    DWORD PTR [rax+rax*1+0x0]
   50e10:	mov    rdx,QWORD PTR [rsp+0x108]
   50e18:	sub    rdx,QWORD PTR fs:0x28
   50e21:	jne    519c0 <_obstack_memory_used@@Base+0x4d40>
   50e27:	add    rsp,0x118
   50e2e:	pop    rbx
   50e2f:	pop    rbp
   50e30:	pop    r12
   50e32:	pop    r13
   50e34:	pop    r14
   50e36:	pop    r15
   50e38:	ret    
   50e39:	mov    DWORD PTR [rsp+0x3c],0xc
   50e41:	mov    r13,QWORD PTR [r12]
   50e45:	mov    rbx,QWORD PTR [r13+0x70]
   50e49:	test   rbx,rbx
   50e4c:	jne    50920 <_obstack_memory_used@@Base+0x3ca0>
   50e52:	jmp    50930 <_obstack_memory_used@@Base+0x3cb0>
   50e57:	nop    WORD PTR [rax+rax*1+0x0]
   50e60:	mov    rcx,r15
   50e63:	mov    r15,QWORD PTR [r15+0x8]
   50e67:	test   r15,r15
   50e6a:	jne    50e60 <_obstack_memory_used@@Base+0x41e0>
   50e6c:	mov    r15,QWORD PTR [rcx+0x10]
   50e70:	test   r15,r15
   50e73:	jne    50e60 <_obstack_memory_used@@Base+0x41e0>
   50e75:	jmp    50ead <_obstack_memory_used@@Base+0x422d>
   50e77:	nop    WORD PTR [rax+rax*1+0x0]
   50e80:	mov    rax,QWORD PTR [rcx+0x8]
   50e84:	mov    rdx,QWORD PTR [rax+0x18]
   50e88:	mov    rax,QWORD PTR [rax+0x38]
   50e8c:	mov    QWORD PTR [rcx+0x18],rdx
   50e90:	mov    QWORD PTR [rcx+0x38],rax
   50e94:	mov    rax,QWORD PTR [rcx]
   50e97:	test   rax,rax
   50e9a:	je     50f08 <_obstack_memory_used@@Base+0x4288>
   50e9c:	mov    r15,QWORD PTR [rax+0x10]
   50ea0:	test   r15,r15
   50ea3:	je     50eaa <_obstack_memory_used@@Base+0x422a>
   50ea5:	cmp    rcx,r15
   50ea8:	jne    50e60 <_obstack_memory_used@@Base+0x41e0>
   50eaa:	mov    rcx,rax
   50ead:	cmp    BYTE PTR [rcx+0x30],0x10
   50eb1:	je     50e80 <_obstack_memory_used@@Base+0x4200>
   50eb3:	mov    rsi,QWORD PTR [rcx+0x28]
   50eb7:	mov    rdx,QWORD PTR [rcx+0x30]
   50ebb:	mov    QWORD PTR [rcx+0x18],rcx
   50ebf:	mov    rdi,rbx
   50ec2:	mov    QWORD PTR [rsp+0x8],rcx
   50ec7:	call   47020 <argp_usage@@Base+0x3ca0>
   50ecc:	mov    rcx,QWORD PTR [rsp+0x8]
   50ed1:	mov    QWORD PTR [rcx+0x38],rax
   50ed5:	cmp    rax,0xffffffffffffffff
   50ed9:	je     51349 <_obstack_memory_used@@Base+0x46c9>
   50edf:	cmp    BYTE PTR [rcx+0x30],0xc
   50ee3:	jne    50e94 <_obstack_memory_used@@Base+0x4214>
   50ee5:	mov    esi,DWORD PTR [rcx+0x28]
   50ee8:	shl    rax,0x4
   50eec:	add    rax,QWORD PTR [rbx]
   50eef:	mov    edx,DWORD PTR [rax+0x8]
   50ef2:	and    esi,0x3ff
   50ef8:	shl    esi,0x8
   50efb:	and    edx,0xfffc00ff
   50f01:	or     edx,esi
   50f03:	mov    DWORD PTR [rax+0x8],edx
   50f06:	jmp    50e94 <_obstack_memory_used@@Base+0x4214>
   50f08:	mov    rdx,QWORD PTR [rbx+0x68]
   50f0c:	mov    rax,rdx
   50f0f:	jmp    50f3e <_obstack_memory_used@@Base+0x42be>
   50f11:	nop    DWORD PTR [rax+0x0]
   50f18:	test   rcx,rcx
   50f1b:	je     50f25 <_obstack_memory_used@@Base+0x42a5>
   50f1d:	mov    rsi,QWORD PTR [rax+0x20]
   50f21:	mov    QWORD PTR [rcx+0x20],rsi
   50f25:	mov    rdi,QWORD PTR [rax+0x10]
   50f29:	test   rdi,rdi
   50f2c:	je     50f36 <_obstack_memory_used@@Base+0x42b6>
   50f2e:	mov    rsi,QWORD PTR [rax+0x20]
   50f32:	mov    QWORD PTR [rdi+0x20],rsi
   50f36:	test   rcx,rcx
   50f39:	je     50f7a <_obstack_memory_used@@Base+0x42fa>
   50f3b:	mov    rax,rcx
   50f3e:	movzx  esi,BYTE PTR [rax+0x30]
   50f42:	mov    rcx,QWORD PTR [rax+0x8]
   50f46:	cmp    sil,0xb
   50f4a:	je     51218 <_obstack_memory_used@@Base+0x4598>
   50f50:	cmp    sil,0x10
   50f54:	jne    50f18 <_obstack_memory_used@@Base+0x4298>
   50f56:	mov    rsi,QWORD PTR [rax+0x10]
   50f5a:	mov    rdi,QWORD PTR [rsi+0x18]
   50f5e:	mov    QWORD PTR [rcx+0x20],rdi
   50f62:	mov    rax,QWORD PTR [rax+0x20]
   50f66:	mov    QWORD PTR [rsi+0x20],rax
   50f6a:	jmp    50f3b <_obstack_memory_used@@Base+0x42bb>
   50f6c:	nop    DWORD PTR [rax+0x0]
   50f70:	mov    rdi,QWORD PTR [rsi+0x10]
   50f74:	mov    rcx,rax
   50f77:	mov    rax,rsi
   50f7a:	cmp    rcx,rdi
   50f7d:	je     50f88 <_obstack_memory_used@@Base+0x4308>
   50f7f:	test   rdi,rdi
   50f82:	jne    517b3 <_obstack_memory_used@@Base+0x4b33>
   50f88:	mov    rsi,QWORD PTR [rax]
   50f8b:	test   rsi,rsi
   50f8e:	jne    50f70 <_obstack_memory_used@@Base+0x42f0>
   50f90:	lea    r9,[rip+0x1bc81]        # 6cc18 <_obstack_memory_used@@Base+0x1ff98>
   50f97:	nop    WORD PTR [rax+rax*1+0x0]
   50fa0:	cmp    BYTE PTR [rdx+0x30],0x10
   50fa4:	mov    rcx,QWORD PTR [rdx+0x38]
   50fa8:	ja     50fc0 <_obstack_memory_used@@Base+0x4340>
   50faa:	movzx  eax,BYTE PTR [rdx+0x30]
   50fae:	movsxd rax,DWORD PTR [r9+rax*4]
   50fb2:	add    rax,r9
   50fb5:	notrack jmp rax
   50fb8:	nop    DWORD PTR [rax+rax*1+0x0]
   50fc0:	mov    rax,QWORD PTR [rdx+0x20]
   50fc4:	mov    rsi,QWORD PTR [rax+0x38]
   50fc8:	mov    rax,QWORD PTR [rbx+0x18]
   50fcc:	mov    QWORD PTR [rax+rcx*8],rsi
   50fd0:	mov    r15,QWORD PTR [rdx+0x8]
   50fd4:	test   r15,r15
   50fd7:	je     50fe3 <_obstack_memory_used@@Base+0x4363>
   50fd9:	mov    rdx,r15
   50fdc:	jmp    50fa0 <_obstack_memory_used@@Base+0x4320>
   50fde:	xchg   ax,ax
   50fe0:	mov    rdx,rax
   50fe3:	mov    rax,QWORD PTR [rdx+0x10]
   50fe7:	test   rax,rax
   50fea:	sete   sil
   50fee:	cmp    rax,r15
   50ff1:	sete   cl
   50ff4:	or     sil,cl
   50ff7:	mov    BYTE PTR [rsp+0x18],sil
   50ffc:	je     517bb <_obstack_memory_used@@Base+0x4b3b>
   51002:	mov    rax,QWORD PTR [rdx]
   51005:	mov    r15,rdx
   51008:	test   rax,rax
   5100b:	jne    50fe0 <_obstack_memory_used@@Base+0x4360>
   5100d:	mov    BYTE PTR [rsp+0x10],0x0
   51012:	mov    rax,QWORD PTR [rbx+0x30]
   51016:	xor    r15d,r15d
   51019:	nop    DWORD PTR [rax+0x0]
   51020:	lea    r9,[r15+r15*2]
   51024:	shl    r9,0x3
   51028:	mov    rcx,QWORD PTR [rax+r9*1+0x8]
   5102d:	test   rcx,rcx
   51030:	jne    51067 <_obstack_memory_used@@Base+0x43e7>
   51032:	mov    ecx,0x1
   51037:	mov    rdx,r15
   5103a:	mov    rsi,rbx
   5103d:	mov    rdi,r13
   51040:	mov    QWORD PTR [rsp+0x8],r9
   51045:	call   4e060 <_obstack_memory_used@@Base+0x13e0>
   5104a:	test   eax,eax
   5104c:	jne    5090c <_obstack_memory_used@@Base+0x3c8c>
   51052:	mov    rax,QWORD PTR [rbx+0x30]
   51056:	mov    r9,QWORD PTR [rsp+0x8]
   5105b:	cmp    QWORD PTR [rax+r9*1+0x8],0x0
   51061:	je     51228 <_obstack_memory_used@@Base+0x45a8>
   51067:	add    r15,0x1
   5106b:	cmp    QWORD PTR [rbx+0x10],r15
   5106f:	jne    51020 <_obstack_memory_used@@Base+0x43a0>
   51071:	cmp    BYTE PTR [rsp+0x10],0x0
   51076:	je     5125f <_obstack_memory_used@@Base+0x45df>
   5107c:	mov    BYTE PTR [rsp+0x10],0x0
   51081:	xor    r15d,r15d
   51084:	jmp    51020 <_obstack_memory_used@@Base+0x43a0>
   51086:	cs nop WORD PTR [rax+rax*1+0x0]
   51090:	mov    rax,QWORD PTR [rdx+0x20]
   51094:	lea    rcx,[rcx+rcx*2]
   51098:	mov    edi,0x8
   5109d:	mov    QWORD PTR [rsp+0x8],rdx
   510a2:	mov    rax,QWORD PTR [rax+0x38]
   510a6:	mov    QWORD PTR [rsp+0x10],rax
   510ab:	mov    rax,QWORD PTR [rbx+0x28]
   510af:	lea    r15,[rax+rcx*8]
   510b3:	mov    QWORD PTR [r15],0x1
   510ba:	mov    QWORD PTR [r15+0x8],0x1
   510c2:	call   a4a0 <malloc@plt>
   510c7:	mov    rdx,QWORD PTR [rsp+0x8]
   510cc:	lea    r9,[rip+0x1bb45]        # 6cc18 <_obstack_memory_used@@Base+0x1ff98>
   510d3:	test   rax,rax
   510d6:	mov    QWORD PTR [r15+0x10],rax
   510da:	je     51926 <_obstack_memory_used@@Base+0x4ca6>
   510e0:	mov    rcx,QWORD PTR [rsp+0x10]
   510e5:	mov    r15,QWORD PTR [rdx+0x8]
   510e9:	mov    QWORD PTR [rax],rcx
   510ec:	jmp    50fd4 <_obstack_memory_used@@Base+0x4354>
   510f1:	or     BYTE PTR [rbx+0xb0],0x1
   510f8:	mov    r15,QWORD PTR [rdx+0x8]
   510fc:	test   r15,r15
   510ff:	je     517e0 <_obstack_memory_used@@Base+0x4b60>
   51105:	mov    rax,QWORD PTR [r15+0x18]
   51109:	mov    rsi,QWORD PTR [rax+0x38]
   5110d:	mov    rax,QWORD PTR [rdx+0x10]
   51111:	test   rax,rax
   51114:	je     517d3 <_obstack_memory_used@@Base+0x4b53>
   5111a:	mov    rax,QWORD PTR [rax+0x18]
   5111e:	mov    r10,QWORD PTR [rax+0x38]
   51122:	mov    rax,QWORD PTR [rbx+0x28]
   51126:	lea    rcx,[rcx+rcx*2]
   5112a:	mov    edi,0x10
   5112f:	mov    QWORD PTR [rsp+0x28],r10
   51134:	mov    QWORD PTR [rsp+0x18],rsi
   51139:	lea    rcx,[rax+rcx*8]
   5113d:	mov    QWORD PTR [rsp+0x10],rdx
   51142:	mov    QWORD PTR [rcx],0x2
   51149:	mov    QWORD PTR [rsp+0x8],rcx
   5114e:	call   a4a0 <malloc@plt>
   51153:	mov    rcx,QWORD PTR [rsp+0x8]
   51158:	mov    QWORD PTR [rcx+0x10],rax
   5115c:	test   rax,rax
   5115f:	je     51349 <_obstack_memory_used@@Base+0x46c9>
   51165:	mov    rsi,QWORD PTR [rsp+0x18]
   5116a:	mov    r10,QWORD PTR [rsp+0x28]
   5116f:	lea    r9,[rip+0x1baa2]        # 6cc18 <_obstack_memory_used@@Base+0x1ff98>
   51176:	mov    rdx,QWORD PTR [rsp+0x10]
   5117b:	cmp    rsi,r10
   5117e:	je     517c3 <_obstack_memory_used@@Base+0x4b43>
   51184:	mov    QWORD PTR [rcx+0x8],0x2
   5118c:	jge    517fa <_obstack_memory_used@@Base+0x4b7a>
   51192:	mov    QWORD PTR [rax],rsi
   51195:	mov    QWORD PTR [rax+0x8],r10
   51199:	jmp    50fd4 <_obstack_memory_used@@Base+0x4354>
   5119e:	mov    rax,QWORD PTR [rdx+0x20]
   511a2:	mov    r15,QWORD PTR [rax+0x38]
   511a6:	mov    rax,QWORD PTR [rbx+0x18]
   511aa:	mov    QWORD PTR [rax+rcx*8],r15
   511ae:	cmp    BYTE PTR [rdx+0x30],0x4
   511b2:	jne    50fd0 <_obstack_memory_used@@Base+0x4350>
   511b8:	mov    rax,QWORD PTR [rbx+0x28]
   511bc:	lea    rcx,[rcx+rcx*2]
   511c0:	mov    edi,0x8
   511c5:	mov    QWORD PTR [rsp+0x10],rdx
   511ca:	lea    rcx,[rax+rcx*8]
   511ce:	mov    QWORD PTR [rcx],0x1
   511d5:	mov    QWORD PTR [rcx+0x8],0x1
   511dd:	mov    QWORD PTR [rsp+0x8],rcx
   511e2:	call   a4a0 <malloc@plt>
   511e7:	mov    rcx,QWORD PTR [rsp+0x8]
   511ec:	mov    rdx,QWORD PTR [rsp+0x10]
   511f1:	lea    r9,[rip+0x1ba20]        # 6cc18 <_obstack_memory_used@@Base+0x1ff98>
   511f8:	test   rax,rax
   511fb:	mov    QWORD PTR [rcx+0x10],rax
   511ff:	je     5196d <_obstack_memory_used@@Base+0x4ced>
   51205:	mov    QWORD PTR [rax],r15
   51208:	mov    r15,QWORD PTR [rdx+0x8]
   5120c:	jmp    50fd4 <_obstack_memory_used@@Base+0x4354>
   51211:	nop    DWORD PTR [rax+0x0]
   51218:	mov    QWORD PTR [rcx+0x20],rax
   5121c:	jmp    50f3b <_obstack_memory_used@@Base+0x42bb>
   51221:	nop    DWORD PTR [rax+0x0]
   51228:	mov    rdi,QWORD PTR [rsp+0x60]
   5122d:	add    r15,0x1
   51231:	call   9ce0 <free@plt>
   51236:	cmp    QWORD PTR [rbx+0x10],r15
   5123a:	je     515ef <_obstack_memory_used@@Base+0x496f>
   51240:	movzx  eax,BYTE PTR [rsp+0x18]
   51245:	lea    r9,[r15+r15*2]
   51249:	shl    r9,0x3
   5124d:	mov    BYTE PTR [rsp+0x10],al
   51251:	mov    rax,QWORD PTR [rbx+0x30]
   51255:	mov    rcx,QWORD PTR [rax+r9*1+0x8]
   5125a:	jmp    5102d <_obstack_memory_used@@Base+0x43ad>
   5125f:	test   BYTE PTR [r12+0x38],0x10
   51265:	jne    51278 <_obstack_memory_used@@Base+0x45f8>
   51267:	cmp    QWORD PTR [r12+0x30],0x0
   5126d:	je     51278 <_obstack_memory_used@@Base+0x45f8>
   5126f:	test   BYTE PTR [rbx+0xb0],0x1
   51276:	jne    51286 <_obstack_memory_used@@Base+0x4606>
   51278:	cmp    QWORD PTR [rbx+0x98],0x0
   51280:	je     51365 <_obstack_memory_used@@Base+0x46e5>
   51286:	lea    rdi,[r15+r15*2]
   5128a:	shl    rdi,0x3
   5128e:	call   a4a0 <malloc@plt>
   51293:	mov    QWORD PTR [rbx+0x38],rax
   51297:	test   rax,rax
   5129a:	je     50e39 <_obstack_memory_used@@Base+0x41b9>
   512a0:	xor    edx,edx
   512a2:	jmp    512ac <_obstack_memory_used@@Base+0x462c>
   512a4:	nop    DWORD PTR [rax+0x0]
   512a8:	mov    rax,QWORD PTR [rbx+0x38]
   512ac:	lea    rcx,[rdx+rdx*2]
   512b0:	pxor   xmm0,xmm0
   512b4:	add    rdx,0x1
   512b8:	lea    rax,[rax+rcx*8]
   512bc:	mov    QWORD PTR [rax+0x10],0x0
   512c4:	movups XMMWORD PTR [rax],xmm0
   512c7:	mov    rax,QWORD PTR [rbx+0x10]
   512cb:	cmp    rax,rdx
   512ce:	ja     512a8 <_obstack_memory_used@@Base+0x4628>
   512d0:	test   rax,rax
   512d3:	je     51365 <_obstack_memory_used@@Base+0x46e5>
   512d9:	mov    rax,QWORD PTR [rbx+0x30]
   512dd:	xor    esi,esi
   512df:	lea    rdx,[rsi+rsi*2]
   512e3:	xor    r15d,r15d
   512e6:	lea    rcx,[rdx*8+0x0]
   512ee:	lea    rdi,[rax+rcx*1]
   512f2:	mov    QWORD PTR [rsp+0x28],rcx
   512f7:	cmp    QWORD PTR [rdi+0x8],0x0
   512fc:	mov    rcx,QWORD PTR [rdi+0x10]
   51300:	jg     51326 <_obstack_memory_used@@Base+0x46a6>
   51302:	jmp    51357 <_obstack_memory_used@@Base+0x46d7>
   51304:	nop    DWORD PTR [rax+0x0]
   51308:	mov    rcx,QWORD PTR [rsp+0x28]
   5130d:	mov    rax,QWORD PTR [rbx+0x30]
   51311:	add    r15,0x1
   51315:	mov    rsi,QWORD PTR [rsp+0x8]
   5131a:	cmp    r15,QWORD PTR [rax+rcx*1+0x8]
   5131f:	mov    rcx,QWORD PTR [rsp+0x18]
   51324:	jge    51357 <_obstack_memory_used@@Base+0x46d7>
   51326:	mov    rax,QWORD PTR [rcx+r15*8]
   5132a:	mov    QWORD PTR [rsp+0x18],rcx
   5132f:	mov    QWORD PTR [rsp+0x8],rsi
   51334:	lea    rdi,[rax+rax*2]
   51338:	mov    rax,QWORD PTR [rbx+0x38]
   5133c:	lea    rdi,[rax+rdi*8]
   51340:	call   45c90 <argp_usage@@Base+0x2910>
   51345:	test   al,al
   51347:	jne    51308 <_obstack_memory_used@@Base+0x4688>
   51349:	mov    eax,0xc
   5134e:	mov    DWORD PTR [rsp+0x3c],eax
   51352:	jmp    50910 <_obstack_memory_used@@Base+0x3c90>
   51357:	add    rsi,0x1
   5135b:	cmp    QWORD PTR [rbx+0x10],rsi
   5135f:	ja     512df <_obstack_memory_used@@Base+0x465f>
   51365:	movzx  eax,BYTE PTR [rbp+0xb0]
   5136c:	mov    DWORD PTR [rsp+0x3c],0x0
   51374:	shr    al,0x2
   51377:	cmp    QWORD PTR [rsp+0x20],0x0
   5137d:	sete   dl
   51380:	and    al,dl
   51382:	jne    51700 <_obstack_memory_used@@Base+0x4a80>
   51388:	mov    rax,QWORD PTR [rbp+0x68]
   5138c:	mov    rdi,r13
   5138f:	mov    rax,QWORD PTR [rax+0x18]
   51393:	mov    rax,QWORD PTR [rax+0x38]
   51397:	lea    rdx,[rax+rax*2]
   5139b:	mov    QWORD PTR [rbp+0x90],rax
   513a2:	mov    rax,QWORD PTR [rbp+0x30]
   513a6:	lea    rsi,[rax+rdx*8]
   513aa:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   513af:	mov    DWORD PTR [rsp+0x40],eax
   513b3:	mov    ebx,eax
   513b5:	test   eax,eax
   513b7:	jne    514c5 <_obstack_memory_used@@Base+0x4845>
   513bd:	cmp    QWORD PTR [rbp+0x98],0x0
   513c5:	jle    51488 <_obstack_memory_used@@Base+0x4808>
   513cb:	mov    r8,QWORD PTR [rsp+0x58]
   513d0:	test   r8,r8
   513d3:	jle    51488 <_obstack_memory_used@@Base+0x4808>
   513d9:	xor    r9d,r9d
   513dc:	jmp    513ed <_obstack_memory_used@@Base+0x476d>
   513de:	xchg   ax,ax
   513e0:	add    r9,0x1
   513e4:	cmp    r8,r9
   513e7:	jle    51488 <_obstack_memory_used@@Base+0x4808>
   513ed:	mov    rcx,QWORD PTR [rsp+0x60]
   513f2:	mov    rsi,QWORD PTR [rbp+0x0]
   513f6:	mov    r10,QWORD PTR [rcx+r9*8]
   513fa:	mov    rdi,r10
   513fd:	shl    rdi,0x4
   51401:	add    rdi,rsi
   51404:	cmp    BYTE PTR [rdi+0x8],0x4
   51408:	jne    513e0 <_obstack_memory_used@@Base+0x4760>
   5140a:	xor    edx,edx
   5140c:	jmp    51419 <_obstack_memory_used@@Base+0x4799>
   5140e:	xchg   ax,ax
   51410:	add    rdx,0x1
   51414:	cmp    rdx,r8
   51417:	je     513e0 <_obstack_memory_used@@Base+0x4760>
   51419:	mov    rax,QWORD PTR [rcx+rdx*8]
   5141d:	shl    rax,0x4
   51421:	add    rax,rsi
   51424:	cmp    BYTE PTR [rax+0x8],0x9
   51428:	jne    51410 <_obstack_memory_used@@Base+0x4790>
   5142a:	mov    r11,QWORD PTR [rdi]
   5142d:	cmp    QWORD PTR [rax],r11
   51430:	jne    51410 <_obstack_memory_used@@Base+0x4790>
   51432:	mov    rdx,QWORD PTR [rbp+0x28]
   51436:	lea    rax,[r10+r10*2]
   5143a:	mov    rdi,r13
   5143d:	lea    rax,[rdx+rax*8]
   51441:	mov    rax,QWORD PTR [rax+0x10]
   51445:	mov    rsi,QWORD PTR [rax]
   51448:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   5144d:	test   rax,rax
   51450:	jne    513e0 <_obstack_memory_used@@Base+0x4760>
   51452:	mov    rax,QWORD PTR [rbp+0x30]
   51456:	lea    rdx,[rsi+rsi*2]
   5145a:	mov    rdi,r13
   5145d:	lea    rsi,[rax+rdx*8]
   51461:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   51466:	test   eax,eax
   51468:	jne    5193a <_obstack_memory_used@@Base+0x4cba>
   5146e:	mov    r8,QWORD PTR [rsp+0x58]
   51473:	mov    r9d,0x1
   51479:	cmp    r8,r9
   5147c:	jg     513ed <_obstack_memory_used@@Base+0x476d>
   51482:	nop    WORD PTR [rax+rax*1+0x0]
   51488:	xor    ecx,ecx
   5148a:	mov    rdx,r13
   5148d:	mov    rsi,rbp
   51490:	mov    rdi,r14
   51493:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   51498:	mov    QWORD PTR [rbp+0x48],rax
   5149c:	test   rax,rax
   5149f:	je     517aa <_obstack_memory_used@@Base+0x4b2a>
   514a5:	cmp    BYTE PTR [rax+0x68],0x0
   514a9:	js     5174e <_obstack_memory_used@@Base+0x4ace>
   514af:	mov    QWORD PTR [rbp+0x60],rax
   514b3:	mov    QWORD PTR [rbp+0x58],rax
   514b7:	mov    QWORD PTR [rbp+0x50],rax
   514bb:	mov    rdi,QWORD PTR [rsp+0x60]
   514c0:	call   9ce0 <free@plt>
   514c5:	mov    r13,QWORD PTR [r12]
   514c9:	mov    DWORD PTR [rsp+0x3c],ebx
   514cd:	mov    rbx,QWORD PTR [r13+0x70]
   514d1:	test   rbx,rbx
   514d4:	je     514f0 <_obstack_memory_used@@Base+0x4870>
   514d6:	cs nop WORD PTR [rax+rax*1+0x0]
   514e0:	mov    rdi,rbx
   514e3:	mov    rbx,QWORD PTR [rbx]
   514e6:	call   9ce0 <free@plt>
   514eb:	test   rbx,rbx
   514ee:	jne    514e0 <_obstack_memory_used@@Base+0x4860>
   514f0:	mov    QWORD PTR [r13+0x70],0x0
   514f8:	mov    rdi,QWORD PTR [r13+0x20]
   514fc:	mov    DWORD PTR [r13+0x80],0xf
   51507:	mov    QWORD PTR [r13+0x68],0x0
   5150f:	call   9ce0 <free@plt>
   51514:	mov    QWORD PTR [r13+0x20],0x0
   5151c:	mov    rdi,QWORD PTR [rsp+0x80]
   51524:	call   9ce0 <free@plt>
   51529:	mov    rdi,QWORD PTR [rsp+0x88]
   51531:	call   9ce0 <free@plt>
   51536:	cmp    BYTE PTR [rsp+0xfb],0x0
   5153e:	jne    515ff <_obstack_memory_used@@Base+0x497f>
   51544:	mov    eax,DWORD PTR [rsp+0x3c]
   51548:	test   eax,eax
   5154a:	jne    50dc2 <_obstack_memory_used@@Base+0x4142>
   51550:	mov    r13,QWORD PTR [r12+0x20]
   51555:	lea    rdi,[r13+0x8]
   51559:	mov    rcx,r13
   5155c:	xor    eax,eax
   5155e:	mov    rbx,QWORD PTR [r12]
   51562:	and    rdi,0xfffffffffffffff8
   51566:	mov    QWORD PTR [r13+0x0],0x0
   5156e:	mov    rdx,r13
   51571:	mov    QWORD PTR [r13+0xf8],0x0
   5157c:	sub    rcx,rdi
   5157f:	add    ecx,0x100
   51585:	shr    ecx,0x3
   51588:	rep stos QWORD PTR es:[rdi],rax
   5158b:	mov    rdi,r12
   5158e:	mov    rsi,QWORD PTR [rbx+0x48]
   51592:	call   47280 <argp_usage@@Base+0x3f00>
   51597:	mov    rsi,QWORD PTR [rbx+0x50]
   5159b:	cmp    QWORD PTR [rbx+0x48],rsi
   5159f:	je     515b0 <_obstack_memory_used@@Base+0x4930>
   515a1:	mov    rdx,r13
   515a4:	mov    rdi,r12
   515a7:	call   47280 <argp_usage@@Base+0x3f00>
   515ac:	mov    rsi,QWORD PTR [rbx+0x48]
   515b0:	mov    r8,QWORD PTR [rbx+0x58]
   515b4:	cmp    r8,rsi
   515b7:	je     515cb <_obstack_memory_used@@Base+0x494b>
   515b9:	mov    rsi,r8
   515bc:	mov    rdx,r13
   515bf:	mov    rdi,r12
   515c2:	call   47280 <argp_usage@@Base+0x3f00>
   515c7:	mov    rsi,QWORD PTR [rbx+0x48]
   515cb:	mov    r8,QWORD PTR [rbx+0x60]
   515cf:	cmp    r8,rsi
   515d2:	je     515e2 <_obstack_memory_used@@Base+0x4962>
   515d4:	mov    rdx,r13
   515d7:	mov    rsi,r8
   515da:	mov    rdi,r12
   515dd:	call   47280 <argp_usage@@Base+0x3f00>
   515e2:	or     BYTE PTR [r12+0x38],0x8
   515e8:	xor    eax,eax
   515ea:	jmp    50e10 <_obstack_memory_used@@Base+0x4190>
   515ef:	mov    BYTE PTR [rsp+0x10],0x0
   515f4:	xor    r15d,r15d
   515f7:	xor    r9d,r9d
   515fa:	jmp    51251 <_obstack_memory_used@@Base+0x45d1>
   515ff:	mov    rdi,QWORD PTR [rsp+0x78]
   51604:	call   9ce0 <free@plt>
   51609:	jmp    51544 <_obstack_memory_used@@Base+0x48c4>
   5160e:	mov    rdi,r13
   51611:	call   4cd50 <_obstack_memory_used@@Base+0xd0>
   51616:	jmp    50a1a <_obstack_memory_used@@Base+0x3d9a>
   5161b:	mov    esi,0x1
   51620:	mov    edi,0x20
   51625:	call   a2f0 <calloc@plt>
   5162a:	mov    QWORD PTR [rbp+0x78],rax
   5162e:	test   rax,rax
   51631:	je     50dba <_obstack_memory_used@@Base+0x413a>
   51637:	xor    ebx,ebx
   51639:	mov    r13d,0x1
   5163f:	lea    r14d,[rbx*8+0x0]
   51647:	xor    r15d,r15d
   5164a:	jmp    51669 <_obstack_memory_used@@Base+0x49e9>
   5164c:	nop    DWORD PTR [rax+0x0]
   51650:	test   esi,esi
   51652:	jne    5165b <_obstack_memory_used@@Base+0x49db>
   51654:	or     BYTE PTR [rbp+0xb0],0x8
   5165b:	add    r15d,0x1
   5165f:	add    r14d,0x1
   51663:	cmp    r15d,0x40
   51667:	je     516b0 <_obstack_memory_used@@Base+0x4a30>
   51669:	mov    edi,r14d
   5166c:	call   a610 <btowc@plt>
   51671:	mov    esi,r14d
   51674:	and    esi,0xffffff80
   51677:	cmp    eax,0xffffffff
   5167a:	je     51650 <_obstack_memory_used@@Base+0x49d0>
   5167c:	mov    rdi,QWORD PTR [rbp+0x78]
   51680:	mov    r8,r13
   51683:	mov    ecx,r15d
   51686:	shl    r8,cl
   51689:	add    rdi,rbx
   5168c:	or     QWORD PTR [rdi],r8
   5168f:	test   esi,esi
   51691:	jne    5165b <_obstack_memory_used@@Base+0x49db>
   51693:	cmp    eax,r14d
   51696:	jne    51654 <_obstack_memory_used@@Base+0x49d4>
   51698:	add    r15d,0x1
   5169c:	add    r14d,0x1
   516a0:	cmp    r15d,0x40
   516a4:	jne    51669 <_obstack_memory_used@@Base+0x49e9>
   516a6:	cs nop WORD PTR [rax+rax*1+0x0]
   516b0:	add    rbx,0x8
   516b4:	cmp    rbx,0x20
   516b8:	jne    5163f <_obstack_memory_used@@Base+0x49bf>
   516ba:	jmp    507be <_obstack_memory_used@@Base+0x3b3e>
   516bf:	mov    rcx,QWORD PTR [rdx+0x28]
   516c3:	mov    QWORD PTR [rax+0x8],r11
   516c7:	test   r11,r11
   516ca:	je     516cf <_obstack_memory_used@@Base+0x4a4f>
   516cc:	mov    QWORD PTR [r11],rax
   516cf:	mov    rdx,QWORD PTR [rax+0x28]
   516d3:	mov    rdx,QWORD PTR [rdi+rdx*8]
   516d7:	mov    QWORD PTR [rdi+rcx*8],rdx
   516db:	mov    rdx,r11
   516de:	cmp    rcx,0x3f
   516e2:	jg     50c07 <_obstack_memory_used@@Base+0x3f87>
   516e8:	mov    r11,r10
   516eb:	shl    r11,cl
   516ee:	mov    rcx,r11
   516f1:	not    rcx
   516f4:	and    QWORD PTR [rbx+0xa0],rcx
   516fb:	jmp    50c07 <_obstack_memory_used@@Base+0x3f87>
   51700:	cmp    QWORD PTR [r12+0x28],0x0
   51706:	jne    51388 <_obstack_memory_used@@Base+0x4708>
   5170c:	mov    r10,QWORD PTR [rbp+0x10]
   51710:	test   r10,r10
   51713:	je     5198b <_obstack_memory_used@@Base+0x4d0b>
   51719:	mov    rdi,QWORD PTR [rbp+0x0]
   5171d:	xor    r9d,r9d
   51720:	xor    ecx,ecx
   51722:	lea    r8,[rip+0x1b533]        # 6cc5c <_obstack_memory_used@@Base+0x1ffdc>
   51729:	movabs r11,0x1000000010001
   51733:	mov    rdx,rdi
   51736:	cmp    BYTE PTR [rdx+0x8],0xc
   5173a:	ja     aae0 <__sprintf_chk@plt+0x130>
   51740:	movzx  esi,BYTE PTR [rdx+0x8]
   51744:	movsxd rsi,DWORD PTR [r8+rsi*4]
   51748:	add    rsi,r8
   5174b:	notrack jmp rsi
   5174e:	mov    ecx,0x1
   51753:	mov    rdx,r13
   51756:	mov    rsi,rbp
   51759:	mov    rdi,r14
   5175c:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   51761:	mov    ecx,0x2
   51766:	mov    rdx,r13
   51769:	mov    rsi,rbp
   5176c:	mov    QWORD PTR [rbp+0x50],rax
   51770:	mov    rdi,r14
   51773:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   51778:	mov    ecx,0x6
   5177d:	mov    rdx,r13
   51780:	mov    rsi,rbp
   51783:	mov    QWORD PTR [rbp+0x58],rax
   51787:	mov    rdi,r14
   5178a:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   5178f:	cmp    QWORD PTR [rbp+0x50],0x0
   51794:	mov    QWORD PTR [rbp+0x60],rax
   51798:	je     517aa <_obstack_memory_used@@Base+0x4b2a>
   5179a:	cmp    QWORD PTR [rbp+0x58],0x0
   5179f:	je     517aa <_obstack_memory_used@@Base+0x4b2a>
   517a1:	test   rax,rax
   517a4:	jne    514bb <_obstack_memory_used@@Base+0x483b>
   517aa:	mov    ebx,DWORD PTR [rsp+0x40]
   517ae:	jmp    514c5 <_obstack_memory_used@@Base+0x4845>
   517b3:	mov    rcx,rdi
   517b6:	jmp    50f3b <_obstack_memory_used@@Base+0x42bb>
   517bb:	mov    r15,rax
   517be:	jmp    50fd9 <_obstack_memory_used@@Base+0x4359>
   517c3:	mov    QWORD PTR [rcx+0x8],0x1
   517cb:	mov    QWORD PTR [rax],rsi
   517ce:	jmp    50fd4 <_obstack_memory_used@@Base+0x4354>
   517d3:	mov    rax,QWORD PTR [rdx+0x20]
   517d7:	mov    r10,QWORD PTR [rax+0x38]
   517db:	jmp    51122 <_obstack_memory_used@@Base+0x44a2>
   517e0:	mov    rax,QWORD PTR [rdx+0x20]
   517e4:	mov    rsi,QWORD PTR [rax+0x38]
   517e8:	jmp    5110d <_obstack_memory_used@@Base+0x448d>
   517ed:	mov    rdi,r13
   517f0:	call   4d5e0 <_obstack_memory_used@@Base+0x960>
   517f5:	jmp    50a1a <_obstack_memory_used@@Base+0x3d9a>
   517fa:	mov    QWORD PTR [rax],r10
   517fd:	mov    QWORD PTR [rax+0x8],rsi
   51801:	jmp    50fd4 <_obstack_memory_used@@Base+0x4354>
   51806:	mov    eax,0xc
   5180b:	jmp    50e10 <_obstack_memory_used@@Base+0x4190>
   51810:	xor    ebx,ebx
   51812:	mov    esi,0x1
   51817:	jmp    5071e <_obstack_memory_used@@Base+0x3a9e>
   5181c:	mov    DWORD PTR [rsp+0x3c],0xc
   51824:	mov    QWORD PTR [rbp+0x68],0x0
   5182c:	jmp    50e41 <_obstack_memory_used@@Base+0x41c1>
   51831:	test   rax,rax
   51834:	je     51960 <_obstack_memory_used@@Base+0x4ce0>
   5183a:	lea    r13,[rsp+0x50]
   5183f:	pxor   xmm0,xmm0
   51843:	xor    edx,edx
   51845:	xor    esi,esi
   51847:	mov    rcx,r13
   5184a:	mov    rdi,r15
   5184d:	movaps XMMWORD PTR [rsp+0x50],xmm0
   51852:	mov    QWORD PTR [rsp+0x8],rax
   51857:	mov    BYTE PTR [rsp+0x58],0x2
   5185c:	call   45e00 <argp_usage@@Base+0x2a80>
   51861:	mov    r8,QWORD PTR [rsp+0x8]
   51866:	mov    rdx,rax
   51869:	jmp    50ab8 <_obstack_memory_used@@Base+0x3e38>
   5186e:	test   eax,eax
   51870:	je     51555 <_obstack_memory_used@@Base+0x48d5>
   51876:	jmp    50df5 <_obstack_memory_used@@Base+0x4175>
   5187b:	movzx  ebx,BYTE PTR [rsp+0x10]
   51880:	cmp    BYTE PTR [rdx],0x0
   51883:	cmovs  ebx,eax
   51886:	mov    BYTE PTR [rsp+0x10],bl
   5188a:	add    rcx,0x1
   5188e:	add    rdx,0x10
   51892:	cmp    rcx,r10
   51895:	jne    51736 <_obstack_memory_used@@Base+0x4ab6>
   5189b:	mov    rax,rcx
   5189e:	shl    rax,0x4
   518a2:	add    rax,rdi
   518a5:	or     BYTE PTR [rsp+0x10],r9b
   518aa:	jne    518c7 <_obstack_memory_used@@Base+0x4c47>
   518ac:	jmp    5198b <_obstack_memory_used@@Base+0x4d0b>
   518b1:	cmp    dl,0x5
   518b4:	jne    518ba <_obstack_memory_used@@Base+0x4c3a>
   518b6:	mov    BYTE PTR [rdi+0x8],0x7
   518ba:	add    rdi,0x10
   518be:	cmp    rax,rdi
   518c1:	je     51986 <_obstack_memory_used@@Base+0x4d06>
   518c7:	movzx  edx,BYTE PTR [rdi+0x8]
   518cb:	cmp    dl,0x1
   518ce:	jne    518b1 <_obstack_memory_used@@Base+0x4c31>
   518d0:	cmp    BYTE PTR [rdi],0x0
   518d3:	jns    518ba <_obstack_memory_used@@Base+0x4c3a>
   518d5:	and    BYTE PTR [rdi+0xa],0xdf
   518d9:	jmp    518ba <_obstack_memory_used@@Base+0x4c3a>
   518db:	nop    DWORD PTR [rax+rax*1+0x0]
   518e0:	mov    esi,DWORD PTR [rdx]
   518e2:	cmp    esi,0x40
   518e5:	ja     51941 <_obstack_memory_used@@Base+0x4cc1>
   518e7:	cmp    esi,0xf
   518ea:	jbe    51388 <_obstack_memory_used@@Base+0x4708>
   518f0:	sub    esi,0x10
   518f3:	bt     r11,rsi
   518f7:	jae    51388 <_obstack_memory_used@@Base+0x4708>
   518fd:	jmp    5188a <_obstack_memory_used@@Base+0x4c0a>
   518ff:	nop
   51900:	mov    rsi,QWORD PTR [rdx]
   51903:	cmp    QWORD PTR [rsi+0x10],0x0
   51908:	jne    51388 <_obstack_memory_used@@Base+0x4708>
   5190e:	cmp    QWORD PTR [rsi+0x18],0x0
   51913:	je     5188a <_obstack_memory_used@@Base+0x4c0a>
   51919:	jmp    51388 <_obstack_memory_used@@Base+0x4708>
   5191e:	mov    r9d,eax
   51921:	jmp    5188a <_obstack_memory_used@@Base+0x4c0a>
   51926:	mov    QWORD PTR [r15+0x8],0x0
   5192e:	mov    QWORD PTR [r15],0x0
   51935:	jmp    51349 <_obstack_memory_used@@Base+0x46c9>
   5193a:	mov    ebx,eax
   5193c:	jmp    514c5 <_obstack_memory_used@@Base+0x4845>
   51941:	cmp    esi,0x80
   51947:	je     5188a <_obstack_memory_used@@Base+0x4c0a>
   5194d:	jmp    51388 <_obstack_memory_used@@Base+0x4708>
   51952:	nop    WORD PTR [rax+rax*1+0x0]
   51958:	mov    rcx,rax
   5195b:	jmp    50a0a <_obstack_memory_used@@Base+0x3d8a>
   51960:	mov    QWORD PTR [rbp+0x68],0x0
   51968:	jmp    50e41 <_obstack_memory_used@@Base+0x41c1>
   5196d:	mov    QWORD PTR [rcx+0x8],0x0
   51975:	mov    eax,0xc
   5197a:	mov    QWORD PTR [rcx],0x0
   51981:	jmp    5090c <_obstack_memory_used@@Base+0x3c8c>
   51986:	mov    BYTE PTR [rsp+0x10],r9b
   5198b:	cmp    QWORD PTR [rbp+0x98],0x0
   51993:	movzx  edx,BYTE PTR [rbp+0xb0]
   5199a:	mov    DWORD PTR [rbp+0xb4],0x1
   519a4:	setg   al
   519a7:	or     al,BYTE PTR [rsp+0x10]
   519ab:	add    eax,eax
   519ad:	and    edx,0xfffffff9
   519b0:	and    eax,0x6
   519b3:	or     eax,edx
   519b5:	mov    BYTE PTR [rbp+0xb0],al
   519bb:	jmp    51388 <_obstack_memory_used@@Base+0x4708>
   519c0:	call   a0a0 <__stack_chk_fail@plt>
   519c5:	mov    rdi,QWORD PTR [r12+0x20]
   519ca:	mov    eax,0xc
   519cf:	jmp    50df5 <_obstack_memory_used@@Base+0x4175>
   519d4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   519df:	nop
   519e0:	endbr64 
   519e4:	push   r15
   519e6:	push   r14
   519e8:	push   r13
   519ea:	mov    r13,rdi
   519ed:	push   r12
   519ef:	mov    r12,rsi
   519f2:	push   rbp
   519f3:	push   rbx
   519f4:	mov    ebx,edx
   519f6:	sub    rsp,0x18
   519fa:	mov    rax,QWORD PTR fs:0x28
   51a03:	mov    QWORD PTR [rsp+0x8],rax
   51a08:	xor    eax,eax
   51a0a:	and    edx,0x18000000
   51a10:	je     51b08 <_obstack_memory_used@@Base+0x4e88>
   51a16:	mov    esi,ebx
   51a18:	mov    rdi,r12
   51a1b:	call   48550 <argp_usage@@Base+0x51d0>
   51a20:	test   al,al
   51a22:	je     51b08 <_obstack_memory_used@@Base+0x4e88>
   51a28:	mov    r14,QWORD PTR [r13+0x0]
   51a2c:	test   r14,r14
   51a2f:	je     51a3c <_obstack_memory_used@@Base+0x4dbc>
   51a31:	cmp    DWORD PTR [r14+0x8],0x1
   51a36:	je     51c48 <_obstack_memory_used@@Base+0x4fc8>
   51a3c:	mov    esi,0x1
   51a41:	mov    edi,0x28
   51a46:	call   a2f0 <calloc@plt>
   51a4b:	mov    rbp,rax
   51a4e:	test   rax,rax
   51a51:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51a57:	mov    DWORD PTR [rax+0x8],0x1
   51a5e:	mov    DWORD PTR [rax+0xc],ebx
   51a61:	mov    QWORD PTR [rax],r14
   51a64:	mov    QWORD PTR [r13+0x0],rax
   51a68:	mov    r14,QWORD PTR [rbp+0x20]
   51a6c:	mov    rdi,QWORD PTR [rbp+0x10]
   51a70:	cmp    r14,QWORD PTR [rbp+0x18]
   51a74:	je     51c68 <_obstack_memory_used@@Base+0x4fe8>
   51a7a:	lea    rax,[r14+0x1]
   51a7e:	mov    QWORD PTR [rbp+0x20],rax
   51a82:	lea    rax,[r14+r14*8]
   51a86:	lea    r15,[rdi+rax*8]
   51a8a:	mov    DWORD PTR [r15],ebx
   51a8d:	test   ebx,0x8000000
   51a93:	je     51c30 <_obstack_memory_used@@Base+0x4fb0>
   51a99:	mov    r13d,ebx
   51a9c:	sar    r13d,0x3
   51aa0:	and    r13d,0x2
   51aa4:	or     r13d,0x9
   51aa8:	and    ebx,0x8
   51aab:	je     51d50 <_obstack_memory_used@@Base+0x50d0>
   51ab1:	mov    rdi,r12
   51ab4:	call   a060 <strlen@plt>
   51ab9:	mov    rbx,rax
   51abc:	jmp    51ad3 <_obstack_memory_used@@Base+0x4e53>
   51abe:	xchg   ax,ax
   51ac0:	cmp    BYTE PTR [r12+rbx*1-0x1],0x2f
   51ac6:	lea    rax,[rbx-0x1]
   51aca:	jne    51dd0 <_obstack_memory_used@@Base+0x5150>
   51ad0:	mov    rbx,rax
   51ad3:	test   rbx,rbx
   51ad6:	jne    51ac0 <_obstack_memory_used@@Base+0x4e40>
   51ad8:	mov    QWORD PTR [rbp+0x20],r14
   51adc:	nop    DWORD PTR [rax+0x0]
   51ae0:	mov    rax,QWORD PTR [rsp+0x8]
   51ae5:	sub    rax,QWORD PTR fs:0x28
   51aee:	jne    51e27 <_obstack_memory_used@@Base+0x51a7>
   51af4:	add    rsp,0x18
   51af8:	pop    rbx
   51af9:	pop    rbp
   51afa:	pop    r12
   51afc:	pop    r13
   51afe:	pop    r14
   51b00:	pop    r15
   51b02:	ret    
   51b03:	nop    DWORD PTR [rax+rax*1+0x0]
   51b08:	mov    rbp,QWORD PTR [r13+0x0]
   51b0c:	test   rbp,rbp
   51b0f:	je     51b1c <_obstack_memory_used@@Base+0x4e9c>
   51b11:	mov    eax,DWORD PTR [rbp+0x8]
   51b14:	test   eax,eax
   51b16:	je     51c18 <_obstack_memory_used@@Base+0x4f98>
   51b1c:	mov    esi,0x1
   51b21:	mov    edi,0x28
   51b26:	call   a2f0 <calloc@plt>
   51b2b:	mov    rbp,rax
   51b2e:	test   rax,rax
   51b31:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51b37:	test   bl,0x10
   51b3a:	mov    DWORD PTR [rax+0xc],ebx
   51b3d:	lea    rcx,[rip+0xffffffffffff4b5c]        # 466a0 <argp_usage@@Base+0x3320>
   51b44:	lea    rax,[rip+0xffffffffffff4035]        # 45b80 <argp_usage@@Base+0x2800>
   51b4b:	cmove  rcx,rax
   51b4f:	lea    rdx,[rip+0xffffffffffff3b9a]        # 456f0 <argp_usage@@Base+0x2370>
   51b56:	lea    rax,[rip+0xffffffffffff3963]        # 454c0 <argp_usage@@Base+0x2140>
   51b5d:	cmove  rdx,rax
   51b61:	lea    r8,[rip+0xffffffffffff4048]        # 45bb0 <argp_usage@@Base+0x2830>
   51b68:	xor    esi,esi
   51b6a:	xor    edi,edi
   51b6c:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   51b71:	mov    QWORD PTR [rbp+0x10],rax
   51b75:	mov    rax,QWORD PTR [r13+0x0]
   51b79:	mov    QWORD PTR [r13+0x0],rbp
   51b7d:	mov    QWORD PTR [rbp+0x0],rax
   51b81:	mov    rdi,r12
   51b84:	call   a060 <strlen@plt>
   51b89:	lea    r13,[rax+0x1]
   51b8d:	mov    rdi,r13
   51b90:	call   a4a0 <malloc@plt>
   51b95:	mov    rdi,rax
   51b98:	test   rax,rax
   51b9b:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51ba1:	mov    rsi,r12
   51ba4:	mov    rdx,r13
   51ba7:	and    ebx,0x10000002
   51bad:	call   a420 <memcpy@plt>
   51bb2:	mov    r12,rax
   51bb5:	cmp    ebx,0x10000000
   51bbb:	je     51cc0 <_obstack_memory_used@@Base+0x5040>
   51bc1:	mov    rdi,QWORD PTR [rbp+0x10]
   51bc5:	mov    rdx,rsp
   51bc8:	mov    rsi,r12
   51bcb:	call   49270 <argp_usage@@Base+0x5ef0>
   51bd0:	cmp    eax,0xffffffff
   51bd3:	je     51be7 <_obstack_memory_used@@Base+0x4f67>
   51bd5:	test   eax,eax
   51bd7:	jne    51ae0 <_obstack_memory_used@@Base+0x4e60>
   51bdd:	cmp    QWORD PTR [rsp],r12
   51be1:	je     51ae0 <_obstack_memory_used@@Base+0x4e60>
   51be7:	mov    rax,QWORD PTR [rsp+0x8]
   51bec:	sub    rax,QWORD PTR fs:0x28
   51bf5:	jne    51e27 <_obstack_memory_used@@Base+0x51a7>
   51bfb:	add    rsp,0x18
   51bff:	mov    rdi,r12
   51c02:	pop    rbx
   51c03:	pop    rbp
   51c04:	pop    r12
   51c06:	pop    r13
   51c08:	pop    r14
   51c0a:	pop    r15
   51c0c:	jmp    9ce0 <free@plt>
   51c11:	nop    DWORD PTR [rax+0x0]
   51c18:	mov    eax,DWORD PTR [rbp+0xc]
   51c1b:	xor    eax,ebx
   51c1d:	test   eax,0x60000018
   51c22:	je     51b81 <_obstack_memory_used@@Base+0x4f01>
   51c28:	jmp    51b1c <_obstack_memory_used@@Base+0x4e9c>
   51c2d:	nop    DWORD PTR [rax]
   51c30:	and    ebx,0x4000000
   51c36:	jne    51d80 <_obstack_memory_used@@Base+0x5100>
   51c3c:	mov    QWORD PTR [r15+0x8],r12
   51c40:	jmp    51ae0 <_obstack_memory_used@@Base+0x4e60>
   51c45:	nop    DWORD PTR [rax]
   51c48:	mov    eax,DWORD PTR [r14+0xc]
   51c4c:	xor    eax,ebx
   51c4e:	test   eax,0x20000000
   51c53:	jne    51a3c <_obstack_memory_used@@Base+0x4dbc>
   51c59:	mov    rbp,r14
   51c5c:	jmp    51a68 <_obstack_memory_used@@Base+0x4de8>
   51c61:	nop    DWORD PTR [rax+0x0]
   51c68:	test   rdi,rdi
   51c6b:	je     51d08 <_obstack_memory_used@@Base+0x5088>
   51c71:	movabs rax,0x12f684bda12f683
   51c7b:	cmp    r14,rax
   51c7e:	ja     51d49 <_obstack_memory_used@@Base+0x50c9>
   51c84:	mov    rax,r14
   51c87:	shr    rax,1
   51c8a:	lea    rax,[r14+rax*1+0x1]
   51c8f:	mov    QWORD PTR [rbp+0x18],rax
   51c93:	lea    rsi,[rax+rax*8]
   51c97:	shl    rsi,0x3
   51c9b:	call   a570 <realloc@plt>
   51ca0:	mov    rdi,rax
   51ca3:	test   rax,rax
   51ca6:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51cac:	mov    r14,QWORD PTR [rbp+0x20]
   51cb0:	mov    QWORD PTR [rbp+0x10],rdi
   51cb4:	jmp    51a7a <_obstack_memory_used@@Base+0x4dfa>
   51cb9:	nop    DWORD PTR [rax+0x0]
   51cc0:	mov    rdx,rax
   51cc3:	mov    rcx,rax
   51cc6:	movzx  eax,BYTE PTR [rdx]
   51cc9:	cmp    al,0x5c
   51ccb:	je     51ce7 <_obstack_memory_used@@Base+0x5067>
   51ccd:	add    rcx,0x1
   51cd1:	add    rdx,0x1
   51cd5:	mov    BYTE PTR [rcx-0x1],al
   51cd8:	test   al,al
   51cda:	je     51bc1 <_obstack_memory_used@@Base+0x4f41>
   51ce0:	movzx  eax,BYTE PTR [rdx]
   51ce3:	cmp    al,0x5c
   51ce5:	jne    51ccd <_obstack_memory_used@@Base+0x504d>
   51ce7:	movzx  esi,BYTE PTR [rdx+0x1]
   51ceb:	test   sil,sil
   51cee:	je     51cf6 <_obstack_memory_used@@Base+0x5076>
   51cf0:	add    rdx,0x1
   51cf4:	mov    eax,esi
   51cf6:	add    rcx,0x1
   51cfa:	add    rdx,0x1
   51cfe:	mov    BYTE PTR [rcx-0x1],al
   51d01:	jmp    51cc6 <_obstack_memory_used@@Base+0x5046>
   51d03:	nop    DWORD PTR [rax+rax*1+0x0]
   51d08:	test   r14,r14
   51d0b:	mov    ecx,0x1
   51d10:	mov    eax,0x48
   51d15:	cmovne rcx,r14
   51d19:	mul    rcx
   51d1c:	seto   dl
   51d1f:	movzx  edx,dl
   51d22:	test   rax,rax
   51d25:	js     51d49 <_obstack_memory_used@@Base+0x50c9>
   51d27:	test   rdx,rdx
   51d2a:	jne    51d49 <_obstack_memory_used@@Base+0x50c9>
   51d2c:	mov    QWORD PTR [rbp+0x18],rcx
   51d30:	lea    rdi,[rcx+rcx*8]
   51d34:	shl    rdi,0x3
   51d38:	call   a4a0 <malloc@plt>
   51d3d:	mov    rdi,rax
   51d40:	test   rax,rax
   51d43:	jne    51cb0 <_obstack_memory_used@@Base+0x5030>
   51d49:	call   19130 <__sprintf_chk@plt+0xe780>
   51d4e:	xchg   ax,ax
   51d50:	lea    rdi,[r15+0x8]
   51d54:	mov    edx,r13d
   51d57:	mov    rsi,r12
   51d5a:	call   505c0 <_obstack_memory_used@@Base+0x3940>
   51d5f:	mov    ebx,eax
   51d61:	test   ebx,ebx
   51d63:	je     51ae0 <_obstack_memory_used@@Base+0x4e60>
   51d69:	mov    rax,QWORD PTR [rbp+0x20]
   51d6d:	lea    r14,[rax-0x1]
   51d71:	jmp    51ad8 <_obstack_memory_used@@Base+0x4e58>
   51d76:	cs nop WORD PTR [rax+rax*1+0x0]
   51d80:	mov    rdi,r12
   51d83:	call   a060 <strlen@plt>
   51d88:	lea    r14,[rax+0x1]
   51d8c:	mov    rdi,r14
   51d8f:	call   a4a0 <malloc@plt>
   51d94:	mov    rdi,rax
   51d97:	test   rax,rax
   51d9a:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51d9c:	mov    rsi,r12
   51d9f:	mov    rdx,r14
   51da2:	call   a420 <memcpy@plt>
   51da7:	mov    edi,0x10
   51dac:	mov    r12,rax
   51daf:	call   a4a0 <malloc@plt>
   51db4:	test   rax,rax
   51db7:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51db9:	mov    rdx,QWORD PTR [r13+0x8]
   51dbd:	mov    QWORD PTR [rax+0x8],r12
   51dc1:	mov    QWORD PTR [r13+0x8],rax
   51dc5:	mov    QWORD PTR [rax],rdx
   51dc8:	jmp    51c3c <_obstack_memory_used@@Base+0x4fbc>
   51dcd:	nop    DWORD PTR [rax]
   51dd0:	lea    rdi,[rbx+0x7]
   51dd4:	call   a4a0 <malloc@plt>
   51dd9:	mov    r14,rax
   51ddc:	test   rax,rax
   51ddf:	je     51d49 <_obstack_memory_used@@Base+0x50c9>
   51de5:	mov    rdx,rbx
   51de8:	mov    rsi,r12
   51deb:	mov    rdi,r14
   51dee:	add    rbx,r14
   51df1:	call   a420 <memcpy@plt>
   51df6:	mov    BYTE PTR [rbx+0x6],0x0
   51dfa:	lea    rdi,[r15+0x8]
   51dfe:	mov    rsi,r14
   51e01:	mov    edx,0x3f29
   51e06:	mov    DWORD PTR [rbx],0x2a2e2f28
   51e0c:	mov    WORD PTR [rbx+0x4],dx
   51e10:	mov    edx,r13d
   51e13:	call   505c0 <_obstack_memory_used@@Base+0x3940>
   51e18:	mov    rdi,r14
   51e1b:	mov    ebx,eax
   51e1d:	call   9ce0 <free@plt>
   51e22:	jmp    51d61 <_obstack_memory_used@@Base+0x50e1>
   51e27:	call   a0a0 <__stack_chk_fail@plt>
   51e2c:	nop    DWORD PTR [rax+0x0]
   51e30:	endbr64 
   51e34:	push   rbp
   51e35:	mov    rbp,rsi
   51e38:	mov    rsi,rdx
   51e3b:	push   rbx
   51e3c:	mov    rbx,rdi
   51e3f:	sub    rsp,0x8
   51e43:	mov    edx,DWORD PTR [rdi+0xa0]
   51e49:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   51e4e:	mov    r8,QWORD PTR [rbp+0x10]
   51e52:	test   r8,r8
   51e55:	jle    51ef1 <_obstack_memory_used@@Base+0x5271>
   51e5b:	mov    rdx,QWORD PTR [rbx+0x98]
   51e62:	mov    r11d,eax
   51e65:	mov    ebx,eax
   51e67:	mov    r9,QWORD PTR [rbp+0x18]
   51e6b:	and    eax,0x1
   51e6e:	xor    ecx,ecx
   51e70:	and    ebx,0x8
   51e73:	and    r11d,0x2
   51e77:	mov    rsi,QWORD PTR [rdx]
   51e7a:	mov    edi,eax
   51e7c:	nop    DWORD PTR [rax+0x0]
   51e80:	mov    rax,QWORD PTR [r9+rcx*8]
   51e84:	mov    rdx,rax
   51e87:	shl    rdx,0x4
   51e8b:	add    rdx,rsi
   51e8e:	cmp    BYTE PTR [rdx+0x8],0x2
   51e92:	jne    51ee8 <_obstack_memory_used@@Base+0x5268>
   51e94:	mov    edx,DWORD PTR [rdx+0x8]
   51e97:	shr    edx,0x8
   51e9a:	mov    r10d,edx
   51e9d:	and    r10w,0x3ff
   51ea3:	je     51ecb <_obstack_memory_used@@Base+0x524b>
   51ea5:	test   dl,0x4
   51ea8:	je     51ed8 <_obstack_memory_used@@Base+0x5258>
   51eaa:	test   edi,edi
   51eac:	je     51ee8 <_obstack_memory_used@@Base+0x5268>
   51eae:	and    edx,0x8
   51eb1:	jne    51ee8 <_obstack_memory_used@@Base+0x5268>
   51eb3:	test   r10b,0x20
   51eb7:	je     51ebe <_obstack_memory_used@@Base+0x523e>
   51eb9:	test   r11d,r11d
   51ebc:	je     51ee8 <_obstack_memory_used@@Base+0x5268>
   51ebe:	and    r10d,0x80
   51ec5:	je     51ecb <_obstack_memory_used@@Base+0x524b>
   51ec7:	test   ebx,ebx
   51ec9:	je     51ee8 <_obstack_memory_used@@Base+0x5268>
   51ecb:	add    rsp,0x8
   51ecf:	pop    rbx
   51ed0:	pop    rbp
   51ed1:	ret    
   51ed2:	nop    WORD PTR [rax+rax*1+0x0]
   51ed8:	and    edx,0x8
   51edb:	je     51eb3 <_obstack_memory_used@@Base+0x5233>
   51edd:	test   edi,edi
   51edf:	je     51eb3 <_obstack_memory_used@@Base+0x5233>
   51ee1:	nop    DWORD PTR [rax+0x0]
   51ee8:	add    rcx,0x1
   51eec:	cmp    rcx,r8
   51eef:	jne    51e80 <_obstack_memory_used@@Base+0x5200>
   51ef1:	add    rsp,0x8
   51ef5:	xor    eax,eax
   51ef7:	pop    rbx
   51ef8:	pop    rbp
   51ef9:	ret    
   51efa:	nop    WORD PTR [rax+rax*1+0x0]
   51f00:	endbr64 
   51f04:	push   rbp
   51f05:	mov    rbp,rsp
   51f08:	push   r15
   51f0a:	push   r14
   51f0c:	push   r13
   51f0e:	push   r12
   51f10:	mov    r12,rsi
   51f13:	push   rbx
   51f14:	sub    rsp,0xa8
   51f1b:	mov    QWORD PTR [rbp-0x90],rdx
   51f22:	mov    QWORD PTR [rbp-0x88],rcx
   51f29:	mov    rax,QWORD PTR fs:0x28
   51f32:	mov    QWORD PTR [rbp-0x38],rax
   51f36:	mov    rax,QWORD PTR [rdi]
   51f39:	mov    QWORD PTR [rbp-0x70],0x0
   51f41:	mov    QWORD PTR [rbp-0x68],0x2
   51f49:	mov    QWORD PTR [rbp-0x60],0x0
   51f51:	mov    QWORD PTR [rbp-0x98],rax
   51f58:	test   r8b,r8b
   51f5b:	je     52759 <_obstack_memory_used@@Base+0x5ad9>
   51f61:	mov    edi,0x60
   51f66:	call   a4a0 <malloc@plt>
   51f6b:	mov    QWORD PTR [rbp-0x60],rax
   51f6f:	test   rax,rax
   51f72:	je     527ea <_obstack_memory_used@@Base+0x5b6a>
   51f78:	lea    r13,[rbp-0x70]
   51f7c:	mov    rax,QWORD PTR [rbp-0x98]
   51f83:	pxor   xmm0,xmm0
   51f87:	mov    QWORD PTR [rbp-0x40],0x0
   51f8f:	movaps XMMWORD PTR [rbp-0x50],xmm0
   51f93:	mov    r15,QWORD PTR [rax+0x90]
   51f9a:	mov    rax,QWORD PTR [rbp-0x90]
   51fa1:	shl    rax,0x4
   51fa5:	mov    QWORD PTR [rbp-0xb0],rax
   51fac:	cmp    rax,0xfbf
   51fb2:	ja     52761 <_obstack_memory_used@@Base+0x5ae1>
   51fb8:	add    rax,0x10
   51fbc:	mov    rdx,rsp
   51fbf:	mov    rcx,rax
   51fc2:	and    rcx,0xfffffffffffff000
   51fc9:	sub    rdx,rcx
   51fcc:	cmp    rsp,rdx
   51fcf:	je     51fe6 <_obstack_memory_used@@Base+0x5366>
   51fd1:	sub    rsp,0x1000
   51fd8:	or     QWORD PTR [rsp+0xff8],0x0
   51fe1:	cmp    rsp,rdx
   51fe4:	jne    51fd1 <_obstack_memory_used@@Base+0x5351>
   51fe6:	and    eax,0xfff
   51feb:	sub    rsp,rax
   51fee:	test   rax,rax
   51ff1:	jne    52796 <_obstack_memory_used@@Base+0x5b16>
   51ff7:	lea    rax,[rsp+0xf]
   51ffc:	mov    BYTE PTR [rbp-0xc1],0x0
   52003:	and    rax,0xfffffffffffffff0
   52007:	mov    QWORD PTR [rbp-0xb8],rax
   5200e:	mov    rbx,QWORD PTR [rbp-0x88]
   52015:	mov    rdx,QWORD PTR [rbp-0xb0]
   5201c:	mov    rdi,QWORD PTR [rbp-0xb8]
   52023:	mov    rsi,rbx
   52026:	call   a420 <memcpy@plt>
   5202b:	mov    rcx,QWORD PTR [rbx]
   5202e:	lea    rax,[rbp-0x50]
   52032:	mov    QWORD PTR [rbp-0xa8],rax
   52039:	mov    QWORD PTR [rbp-0x78],rcx
   5203d:	jmp    52114 <_obstack_memory_used@@Base+0x5494>
   52042:	nop    WORD PTR [rax+rax*1+0x0]
   52048:	cmp    edx,0x9
   5204b:	je     52318 <_obstack_memory_used@@Base+0x5698>
   52051:	cmp    rax,rcx
   52054:	jne    52064 <_obstack_memory_used@@Base+0x53e4>
   52056:	cmp    QWORD PTR [r12+0xb0],r15
   5205e:	je     524b0 <_obstack_memory_used@@Base+0x5830>
   52064:	mov    r14,QWORD PTR [r12+0x98]
   5206c:	mov    rsi,QWORD PTR [r14]
   5206f:	add    rsi,r10
   52072:	movzx  eax,BYTE PTR [rsi+0x8]
   52076:	test   al,0x8
   52078:	jne    52188 <_obstack_memory_used@@Base+0x5508>
   5207e:	test   BYTE PTR [rsi+0xa],0x10
   52082:	jne    523a0 <_obstack_memory_used@@Base+0x5720>
   52088:	cmp    al,0x4
   5208a:	je     523e0 <_obstack_memory_used@@Base+0x5760>
   52090:	mov    rdx,QWORD PTR [rbp-0x78]
   52094:	mov    rdi,r12
   52097:	mov    QWORD PTR [rbp-0xa0],rdx
   5209e:	call   55000 <_obstack_memory_used@@Base+0x8380>
   520a3:	test   al,al
   520a5:	je     5247a <_obstack_memory_used@@Base+0x57fa>
   520ab:	mov    rax,QWORD PTR [r14+0x18]
   520af:	mov    rdx,QWORD PTR [rbp-0xa0]
   520b6:	mov    r15,QWORD PTR [rax+rbx*8]
   520ba:	lea    rax,[rdx+0x1]
   520be:	mov    QWORD PTR [rbp-0x78],rax
   520c2:	test   r13,r13
   520c5:	je     520ff <_obstack_memory_used@@Base+0x547f>
   520c7:	cmp    rax,QWORD PTR [r12+0xa8]
   520cf:	jg     52483 <_obstack_memory_used@@Base+0x5803>
   520d5:	mov    rdx,QWORD PTR [r12+0xb8]
   520dd:	mov    rdi,QWORD PTR [rdx+rax*8]
   520e1:	test   rdi,rdi
   520e4:	je     52483 <_obstack_memory_used@@Base+0x5803>
   520ea:	add    rdi,0x8
   520ee:	mov    rsi,r15
   520f1:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   520f6:	test   rax,rax
   520f9:	je     52483 <_obstack_memory_used@@Base+0x5803>
   520ff:	mov    QWORD PTR [rbp-0x48],0x0
   52107:	test   r15,r15
   5210a:	js     52470 <_obstack_memory_used@@Base+0x57f0>
   52110:	mov    rcx,QWORD PTR [rbp-0x78]
   52114:	mov    rax,QWORD PTR [rbp-0x88]
   5211b:	mov    rax,QWORD PTR [rax+0x8]
   5211f:	cmp    rax,rcx
   52122:	jl     526b6 <_obstack_memory_used@@Base+0x5a36>
   52128:	mov    rdi,QWORD PTR [rbp-0x98]
   5212f:	mov    r10,r15
   52132:	mov    rbx,r15
   52135:	shl    r10,0x4
   52139:	mov    rsi,QWORD PTR [rdi]
   5213c:	add    rsi,r10
   5213f:	movzx  edx,BYTE PTR [rsi+0x8]
   52143:	cmp    edx,0x8
   52146:	jne    52048 <_obstack_memory_used@@Base+0x53c8>
   5214c:	mov    rdx,QWORD PTR [rsi]
   5214f:	add    rdx,0x1
   52153:	cmp    QWORD PTR [rbp-0x90],rdx
   5215a:	jle    52051 <_obstack_memory_used@@Base+0x53d1>
   52160:	mov    rax,QWORD PTR [rbp-0x88]
   52167:	shl    rdx,0x4
   5216b:	add    rdx,rax
   5216e:	mov    QWORD PTR [rdx+0x8],0xffffffffffffffff
   52176:	mov    rax,QWORD PTR [rax+0x8]
   5217a:	mov    QWORD PTR [rdx],rcx
   5217d:	jmp    52051 <_obstack_memory_used@@Base+0x53d1>
   52182:	nop    WORD PTR [rax+rax*1+0x0]
   52188:	mov    rax,QWORD PTR [r12+0xb8]
   52190:	mov    rdx,QWORD PTR [rbp-0x78]
   52194:	mov    rsi,r15
   52197:	mov    rdi,QWORD PTR [rbp-0xa8]
   5219e:	mov    rbx,QWORD PTR [rax+rdx*8]
   521a2:	mov    rax,QWORD PTR [r14+0x28]
   521a6:	lea    rdx,[r15+r15*2]
   521aa:	add    rbx,0x8
   521ae:	lea    r14,[rax+rdx*8]
   521b2:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   521b7:	test   al,al
   521b9:	je     522a0 <_obstack_memory_used@@Base+0x5620>
   521bf:	mov    r10,QWORD PTR [r14+0x8]
   521c3:	test   r10,r10
   521c6:	jle    5247a <_obstack_memory_used@@Base+0x57fa>
   521cc:	mov    r11,QWORD PTR [r14+0x10]
   521d0:	mov    r15,0xffffffffffffffff
   521d7:	xor    r8d,r8d
   521da:	jmp    521f0 <_obstack_memory_used@@Base+0x5570>
   521dc:	nop    DWORD PTR [rax+0x0]
   521e0:	mov    r15,r14
   521e3:	add    r8,0x1
   521e7:	cmp    r10,r8
   521ea:	je     52107 <_obstack_memory_used@@Base+0x5487>
   521f0:	mov    r14,QWORD PTR [r11+r8*8]
   521f4:	mov    rdi,rbx
   521f7:	mov    rsi,r14
   521fa:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   521ff:	test   rax,rax
   52202:	je     521e3 <_obstack_memory_used@@Base+0x5563>
   52204:	cmp    r15,0xffffffffffffffff
   52208:	je     521e0 <_obstack_memory_used@@Base+0x5560>
   5220a:	mov    rdi,QWORD PTR [rbp-0xa8]
   52211:	mov    rsi,r15
   52214:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   52219:	test   rax,rax
   5221c:	jne    52660 <_obstack_memory_used@@Base+0x59e0>
   52222:	test   r13,r13
   52225:	je     52107 <_obstack_memory_used@@Base+0x5487>
   5222b:	mov    rbx,QWORD PTR [r13+0x0]
   5222f:	mov    r8,QWORD PTR [rbp-0x78]
   52233:	lea    rax,[rbx+0x1]
   52237:	mov    QWORD PTR [r13+0x0],rax
   5223b:	cmp    rax,QWORD PTR [r13+0x8]
   5223f:	je     52724 <_obstack_memory_used@@Base+0x5aa4>
   52245:	mov    rax,QWORD PTR [r13+0x10]
   52249:	lea    rcx,[rbx+rbx*2]
   5224d:	shl    rcx,0x4
   52251:	lea    rbx,[rax+rcx*1]
   52255:	mov    QWORD PTR [rbx+0x8],r14
   52259:	mov    r14,QWORD PTR [rbp-0xb0]
   52260:	mov    QWORD PTR [rbx],r8
   52263:	mov    rdi,r14
   52266:	call   a4a0 <malloc@plt>
   5226b:	mov    QWORD PTR [rbx+0x10],rax
   5226f:	mov    rdi,rax
   52272:	test   rax,rax
   52275:	je     522a0 <_obstack_memory_used@@Base+0x5620>
   52277:	mov    rsi,QWORD PTR [rbp-0x88]
   5227e:	mov    rdx,r14
   52281:	call   a420 <memcpy@plt>
   52286:	mov    rsi,QWORD PTR [rbp-0xa8]
   5228d:	lea    rdi,[rbx+0x18]
   52291:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   52296:	test   eax,eax
   52298:	je     52107 <_obstack_memory_used@@Base+0x5487>
   5229e:	xchg   ax,ax
   522a0:	mov    rdi,QWORD PTR [rbp-0x40]
   522a4:	call   9ce0 <free@plt>
   522a9:	cmp    BYTE PTR [rbp-0xc1],0x0
   522b0:	jne    527a1 <_obstack_memory_used@@Base+0x5b21>
   522b6:	test   r13,r13
   522b9:	je     527ea <_obstack_memory_used@@Base+0x5b6a>
   522bf:	xor    ebx,ebx
   522c1:	cmp    QWORD PTR [r13+0x0],0x0
   522c6:	jle    522fe <_obstack_memory_used@@Base+0x567e>
   522c8:	nop    DWORD PTR [rax+rax*1+0x0]
   522d0:	mov    rax,QWORD PTR [r13+0x10]
   522d4:	lea    r12,[rbx+rbx*2]
   522d8:	add    rbx,0x1
   522dc:	shl    r12,0x4
   522e0:	mov    rdi,QWORD PTR [rax+r12*1+0x28]
   522e5:	call   9ce0 <free@plt>
   522ea:	mov    rax,QWORD PTR [r13+0x10]
   522ee:	mov    rdi,QWORD PTR [rax+r12*1+0x10]
   522f3:	call   9ce0 <free@plt>
   522f8:	cmp    rbx,QWORD PTR [r13+0x0]
   522fc:	jl     522d0 <_obstack_memory_used@@Base+0x5650>
   522fe:	mov    rdi,QWORD PTR [r13+0x10]
   52302:	call   9ce0 <free@plt>
   52307:	mov    eax,0xc
   5230c:	jmp    52546 <_obstack_memory_used@@Base+0x58c6>
   52311:	nop    DWORD PTR [rax+0x0]
   52318:	mov    rdi,QWORD PTR [rsi]
   5231b:	lea    rdx,[rdi+0x1]
   5231f:	cmp    QWORD PTR [rbp-0x90],rdx
   52326:	jle    52051 <_obstack_memory_used@@Base+0x53d1>
   5232c:	mov    rax,QWORD PTR [rbp-0x88]
   52333:	shl    rdx,0x4
   52337:	add    rax,rdx
   5233a:	cmp    QWORD PTR [rax],rcx
   5233d:	jl     52670 <_obstack_memory_used@@Base+0x59f0>
   52343:	test   BYTE PTR [rsi+0xa],0x8
   52347:	je     52648 <_obstack_memory_used@@Base+0x59c8>
   5234d:	mov    rsi,QWORD PTR [rbp-0xb8]
   52354:	cmp    QWORD PTR [rsi+rdx*1],0xffffffffffffffff
   52359:	je     52648 <_obstack_memory_used@@Base+0x59c8>
   5235f:	mov    r14,QWORD PTR [rbp-0x88]
   52366:	mov    rdx,QWORD PTR [rbp-0xb0]
   5236d:	mov    QWORD PTR [rbp-0xc0],rcx
   52374:	mov    QWORD PTR [rbp-0xa0],r10
   5237b:	mov    rdi,r14
   5237e:	call   a420 <memcpy@plt>
   52383:	mov    rax,QWORD PTR [r14+0x8]
   52387:	mov    r10,QWORD PTR [rbp-0xa0]
   5238e:	mov    rcx,QWORD PTR [rbp-0xc0]
   52395:	jmp    52051 <_obstack_memory_used@@Base+0x53d1>
   5239a:	nop    WORD PTR [rax+rax*1+0x0]
   523a0:	mov    rcx,QWORD PTR [rbp-0x78]
   523a4:	mov    rdx,r12
   523a7:	mov    rsi,r15
   523aa:	mov    rdi,r14
   523ad:	mov    QWORD PTR [rbp-0xa0],r10
   523b4:	call   54d30 <_obstack_memory_used@@Base+0x80b0>
   523b9:	movsxd rdx,eax
   523bc:	test   rdx,rdx
   523bf:	jne    52638 <_obstack_memory_used@@Base+0x59b8>
   523c5:	mov    rsi,QWORD PTR [rbp-0xa0]
   523cc:	mov    rdx,QWORD PTR [rbp-0x78]
   523d0:	add    rsi,QWORD PTR [r14]
   523d3:	jmp    52094 <_obstack_memory_used@@Base+0x5414>
   523d8:	nop    DWORD PTR [rax+rax*1+0x0]
   523e0:	mov    rax,QWORD PTR [rsi]
   523e3:	add    rax,0x1
   523e7:	cmp    QWORD PTR [rbp-0x90],rax
   523ee:	jle    525b0 <_obstack_memory_used@@Base+0x5930>
   523f4:	shl    rax,0x4
   523f8:	add    rax,QWORD PTR [rbp-0x88]
   523ff:	mov    rcx,QWORD PTR [rax+0x8]
   52403:	mov    rax,QWORD PTR [rax]
   52406:	mov    rdx,rcx
   52409:	sub    rdx,rax
   5240c:	test   r13,r13
   5240f:	je     5262c <_obstack_memory_used@@Base+0x59ac>
   52415:	cmp    rax,0xffffffffffffffff
   52419:	je     52483 <_obstack_memory_used@@Base+0x5803>
   5241b:	cmp    rcx,0xffffffffffffffff
   5241f:	je     52483 <_obstack_memory_used@@Base+0x5803>
   52421:	test   rdx,rdx
   52424:	je     525b9 <_obstack_memory_used@@Base+0x5939>
   5242a:	mov    rbx,QWORD PTR [rbp-0x78]
   5242e:	mov    rsi,QWORD PTR [r12+0x30]
   52433:	mov    rcx,QWORD PTR [r12+0x8]
   52438:	sub    rsi,rbx
   5243b:	cmp    rdx,rsi
   5243e:	jg     52483 <_obstack_memory_used@@Base+0x5803>
   52440:	lea    rsi,[rcx+rbx*1]
   52444:	lea    rdi,[rcx+rax*1]
   52448:	mov    QWORD PTR [rbp-0xa0],rdx
   5244f:	call   a2c0 <memcmp@plt>
   52454:	mov    rdx,QWORD PTR [rbp-0xa0]
   5245b:	test   eax,eax
   5245d:	jne    52483 <_obstack_memory_used@@Base+0x5803>
   5245f:	mov    rax,QWORD PTR [r14+0x18]
   52463:	mov    r15,QWORD PTR [rax+r15*8]
   52467:	lea    rax,[rbx+rdx*1]
   5246b:	jmp    520be <_obstack_memory_used@@Base+0x543e>
   52470:	cmp    r15,0xfffffffffffffffe
   52474:	je     522a0 <_obstack_memory_used@@Base+0x5620>
   5247a:	test   r13,r13
   5247d:	je     5281d <_obstack_memory_used@@Base+0x5b9d>
   52483:	mov    r8,QWORD PTR [rbp-0xa8]
   5248a:	mov    rcx,QWORD PTR [rbp-0x88]
   52491:	lea    rsi,[rbp-0x78]
   52495:	mov    rdi,r13
   52498:	mov    rdx,QWORD PTR [rbp-0x90]
   5249f:	call   46fa0 <argp_usage@@Base+0x3c20>
   524a4:	mov    r15,rax
   524a7:	jmp    52110 <_obstack_memory_used@@Base+0x5490>
   524ac:	nop    DWORD PTR [rax+0x0]
   524b0:	test   r13,r13
   524b3:	je     527f4 <_obstack_memory_used@@Base+0x5b74>
   524b9:	mov    rax,QWORD PTR [rbp-0x88]
   524c0:	mov    rcx,QWORD PTR [rbp-0x90]
   524c7:	xor    edx,edx
   524c9:	nop    DWORD PTR [rax+0x0]
   524d0:	cmp    QWORD PTR [rax],0x0
   524d4:	js     524e1 <_obstack_memory_used@@Base+0x5861>
   524d6:	cmp    QWORD PTR [rax+0x8],0xffffffffffffffff
   524db:	je     52568 <_obstack_memory_used@@Base+0x58e8>
   524e1:	add    rdx,0x1
   524e5:	add    rax,0x10
   524e9:	cmp    rcx,rdx
   524ec:	jne    524d0 <_obstack_memory_used@@Base+0x5850>
   524ee:	mov    rdi,QWORD PTR [rbp-0x40]
   524f2:	call   9ce0 <free@plt>
   524f7:	cmp    BYTE PTR [rbp-0xc1],0x0
   524fe:	jne    52855 <_obstack_memory_used@@Base+0x5bd5>
   52504:	xor    ebx,ebx
   52506:	cmp    QWORD PTR [r13+0x0],0x0
   5250b:	jle    5253b <_obstack_memory_used@@Base+0x58bb>
   5250d:	mov    rax,QWORD PTR [r13+0x10]
   52511:	lea    r12,[rbx+rbx*2]
   52515:	add    rbx,0x1
   52519:	shl    r12,0x4
   5251d:	mov    rdi,QWORD PTR [rax+r12*1+0x28]
   52522:	call   9ce0 <free@plt>
   52527:	mov    rax,QWORD PTR [r13+0x10]
   5252b:	mov    rdi,QWORD PTR [rax+r12*1+0x10]
   52530:	call   9ce0 <free@plt>
   52535:	cmp    rbx,QWORD PTR [r13+0x0]
   52539:	jl     5250d <_obstack_memory_used@@Base+0x588d>
   5253b:	mov    rdi,QWORD PTR [r13+0x10]
   5253f:	call   9ce0 <free@plt>
   52544:	xor    eax,eax
   52546:	mov    rdx,QWORD PTR [rbp-0x38]
   5254a:	sub    rdx,QWORD PTR fs:0x28
   52553:	jne    52866 <_obstack_memory_used@@Base+0x5be6>
   52559:	lea    rsp,[rbp-0x28]
   5255d:	pop    rbx
   5255e:	pop    r12
   52560:	pop    r13
   52562:	pop    r14
   52564:	pop    r15
   52566:	pop    rbp
   52567:	ret    
   52568:	cmp    QWORD PTR [rbp-0x90],rdx
   5256f:	je     524ee <_obstack_memory_used@@Base+0x586e>
   52575:	mov    r8,QWORD PTR [rbp-0xa8]
   5257c:	mov    rcx,QWORD PTR [rbp-0x88]
   52583:	lea    rsi,[rbp-0x78]
   52587:	mov    rdi,r13
   5258a:	mov    rdx,QWORD PTR [rbp-0x90]
   52591:	call   46fa0 <argp_usage@@Base+0x3c20>
   52596:	mov    r10,rax
   52599:	mov    r15,rax
   5259c:	mov    rbx,rax
   5259f:	shl    r10,0x4
   525a3:	jmp    52064 <_obstack_memory_used@@Base+0x53e4>
   525a8:	nop    DWORD PTR [rax+rax*1+0x0]
   525b0:	test   r13,r13
   525b3:	jne    52483 <_obstack_memory_used@@Base+0x5803>
   525b9:	mov    rdi,QWORD PTR [rbp-0xa8]
   525c0:	mov    rsi,r15
   525c3:	mov    QWORD PTR [rbp-0xa0],r10
   525ca:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   525cf:	test   al,al
   525d1:	je     522a0 <_obstack_memory_used@@Base+0x5620>
   525d7:	mov    rdx,QWORD PTR [r14+0x28]
   525db:	lea    rax,[r15+r15*2]
   525df:	lea    rax,[rdx+rax*8]
   525e3:	mov    rdx,QWORD PTR [rbp-0x78]
   525e7:	mov    rax,QWORD PTR [rax+0x10]
   525eb:	mov    QWORD PTR [rbp-0xc0],rdx
   525f2:	mov    r15,QWORD PTR [rax]
   525f5:	mov    rax,QWORD PTR [r12+0xb8]
   525fd:	mov    rdi,QWORD PTR [rax+rdx*8]
   52601:	mov    rsi,r15
   52604:	add    rdi,0x8
   52608:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   5260d:	test   rax,rax
   52610:	jne    52107 <_obstack_memory_used@@Base+0x5487>
   52616:	mov    rsi,QWORD PTR [rbp-0xa0]
   5261d:	mov    rdx,QWORD PTR [rbp-0xc0]
   52624:	add    rsi,QWORD PTR [r14]
   52627:	jmp    52094 <_obstack_memory_used@@Base+0x5414>
   5262c:	test   rdx,rdx
   5262f:	je     525b9 <_obstack_memory_used@@Base+0x5939>
   52631:	nop    DWORD PTR [rax+0x0]
   52638:	mov    rbx,QWORD PTR [rbp-0x78]
   5263c:	jmp    5245f <_obstack_memory_used@@Base+0x57df>
   52641:	nop    DWORD PTR [rax+0x0]
   52648:	mov    QWORD PTR [rax+0x8],rcx
   5264c:	mov    rax,QWORD PTR [rbp-0x88]
   52653:	mov    rax,QWORD PTR [rax+0x8]
   52657:	jmp    52051 <_obstack_memory_used@@Base+0x53d1>
   5265c:	nop    DWORD PTR [rax+0x0]
   52660:	mov    r15,r14
   52663:	jmp    52107 <_obstack_memory_used@@Base+0x5487>
   52668:	nop    DWORD PTR [rax+rax*1+0x0]
   52670:	mov    r14,QWORD PTR [rbp-0x88]
   52677:	mov    QWORD PTR [rax+0x8],rcx
   5267b:	mov    rdx,QWORD PTR [rbp-0xb0]
   52682:	mov    rdi,QWORD PTR [rbp-0xb8]
   52689:	mov    QWORD PTR [rbp-0xc0],r10
   52690:	mov    rsi,r14
   52693:	mov    QWORD PTR [rbp-0xa0],rcx
   5269a:	call   a420 <memcpy@plt>
   5269f:	mov    rax,QWORD PTR [r14+0x8]
   526a3:	mov    rcx,QWORD PTR [rbp-0xa0]
   526aa:	mov    r10,QWORD PTR [rbp-0xc0]
   526b1:	jmp    52051 <_obstack_memory_used@@Base+0x53d1>
   526b6:	mov    rdi,QWORD PTR [rbp-0x40]
   526ba:	call   9ce0 <free@plt>
   526bf:	cmp    BYTE PTR [rbp-0xc1],0x0
   526c6:	jne    52785 <_obstack_memory_used@@Base+0x5b05>
   526cc:	test   r13,r13
   526cf:	je     52544 <_obstack_memory_used@@Base+0x58c4>
   526d5:	xor    ebx,ebx
   526d7:	cmp    QWORD PTR [r13+0x0],0x0
   526dc:	jle    5253b <_obstack_memory_used@@Base+0x58bb>
   526e2:	nop    WORD PTR [rax+rax*1+0x0]
   526e8:	mov    rax,QWORD PTR [r13+0x10]
   526ec:	lea    r12,[rbx+rbx*2]
   526f0:	add    rbx,0x1
   526f4:	shl    r12,0x4
   526f8:	mov    rdi,QWORD PTR [rax+r12*1+0x28]
   526fd:	call   9ce0 <free@plt>
   52702:	mov    rax,QWORD PTR [r13+0x10]
   52706:	mov    rdi,QWORD PTR [rax+r12*1+0x10]
   5270b:	call   9ce0 <free@plt>
   52710:	cmp    rbx,QWORD PTR [r13+0x0]
   52714:	jl     526e8 <_obstack_memory_used@@Base+0x5a68>
   52716:	mov    rdi,QWORD PTR [r13+0x10]
   5271a:	call   9ce0 <free@plt>
   5271f:	jmp    52544 <_obstack_memory_used@@Base+0x58c4>
   52724:	lea    rsi,[rax+rax*2]
   52728:	mov    rdi,QWORD PTR [r13+0x10]
   5272c:	mov    QWORD PTR [rbp-0xa0],r8
   52733:	shl    rsi,0x5
   52737:	call   a570 <realloc@plt>
   5273c:	test   rax,rax
   5273f:	je     522a0 <_obstack_memory_used@@Base+0x5620>
   52745:	mov    QWORD PTR [r13+0x10],rax
   52749:	mov    r8,QWORD PTR [rbp-0xa0]
   52750:	shl    QWORD PTR [r13+0x8],1
   52754:	jmp    52249 <_obstack_memory_used@@Base+0x55c9>
   52759:	xor    r13d,r13d
   5275c:	jmp    51f7c <_obstack_memory_used@@Base+0x52fc>
   52761:	mov    rdi,QWORD PTR [rbp-0xb0]
   52768:	call   a4a0 <malloc@plt>
   5276d:	mov    QWORD PTR [rbp-0xb8],rax
   52774:	test   rax,rax
   52777:	je     527b2 <_obstack_memory_used@@Base+0x5b32>
   52779:	mov    BYTE PTR [rbp-0xc1],0x1
   52780:	jmp    5200e <_obstack_memory_used@@Base+0x538e>
   52785:	mov    rdi,QWORD PTR [rbp-0xb8]
   5278c:	call   9ce0 <free@plt>
   52791:	jmp    526cc <_obstack_memory_used@@Base+0x5a4c>
   52796:	or     QWORD PTR [rsp+rax*1-0x8],0x0
   5279c:	jmp    51ff7 <_obstack_memory_used@@Base+0x5377>
   527a1:	mov    rdi,QWORD PTR [rbp-0xb8]
   527a8:	call   9ce0 <free@plt>
   527ad:	jmp    522b6 <_obstack_memory_used@@Base+0x5636>
   527b2:	xor    ebx,ebx
   527b4:	test   r13,r13
   527b7:	jne    527db <_obstack_memory_used@@Base+0x5b5b>
   527b9:	jmp    527ea <_obstack_memory_used@@Base+0x5b6a>
   527bb:	imul   r12,rbx,0x30
   527bf:	add    rbx,0x1
   527c3:	mov    rdi,QWORD PTR [rdi+r12*1+0x28]
   527c8:	call   9ce0 <free@plt>
   527cd:	mov    rax,QWORD PTR [r13+0x10]
   527d1:	mov    rdi,QWORD PTR [rax+r12*1+0x10]
   527d6:	call   9ce0 <free@plt>
   527db:	mov    rdi,QWORD PTR [r13+0x10]
   527df:	cmp    rbx,QWORD PTR [r13+0x0]
   527e3:	jl     527bb <_obstack_memory_used@@Base+0x5b3b>
   527e5:	call   9ce0 <free@plt>
   527ea:	mov    eax,0xc
   527ef:	jmp    52546 <_obstack_memory_used@@Base+0x58c6>
   527f4:	mov    rdi,QWORD PTR [rbp-0x40]
   527f8:	call   9ce0 <free@plt>
   527fd:	cmp    BYTE PTR [rbp-0xc1],0x0
   52804:	je     52544 <_obstack_memory_used@@Base+0x58c4>
   5280a:	mov    rdi,QWORD PTR [rbp-0xb8]
   52811:	call   9ce0 <free@plt>
   52816:	xor    eax,eax
   52818:	jmp    52546 <_obstack_memory_used@@Base+0x58c6>
   5281d:	mov    rdi,QWORD PTR [rbp-0x40]
   52821:	call   9ce0 <free@plt>
   52826:	cmp    BYTE PTR [rbp-0xc1],0x0
   5282d:	mov    eax,0x1
   52832:	je     52546 <_obstack_memory_used@@Base+0x58c6>
   52838:	mov    rdi,QWORD PTR [rbp-0xb8]
   5283f:	mov    DWORD PTR [rbp-0x88],eax
   52845:	call   9ce0 <free@plt>
   5284a:	mov    eax,DWORD PTR [rbp-0x88]
   52850:	jmp    52546 <_obstack_memory_used@@Base+0x58c6>
   52855:	mov    rdi,QWORD PTR [rbp-0xb8]
   5285c:	call   9ce0 <free@plt>
   52861:	jmp    52504 <_obstack_memory_used@@Base+0x5884>
   52866:	call   a0a0 <__stack_chk_fail@plt>
   5286b:	nop    DWORD PTR [rax+rax*1+0x0]
   52870:	push   r15
   52872:	mov    r9,rcx
   52875:	lea    rcx,[rcx+rcx*2]
   52879:	push   r14
   5287b:	push   r13
   5287d:	push   r12
   5287f:	push   rbp
   52880:	push   rbx
   52881:	sub    rsp,0x68
   52885:	mov    r10,QWORD PTR [rdi+0x98]
   5288c:	mov    rax,QWORD PTR [r10+0x30]
   52890:	lea    rax,[rax+rcx*8]
   52894:	mov    r13,QWORD PTR [rax+0x8]
   52898:	test   r13,r13
   5289b:	jle    52a6d <_obstack_memory_used@@Base+0x5ded>
   528a1:	lea    rcx,[r8+r8*2]
   528a5:	mov    r11d,0x1
   528ab:	mov    r15,QWORD PTR [rax+0x10]
   528af:	mov    eax,esi
   528b1:	shl    rcx,0x4
   528b5:	and    eax,0x1
   528b8:	mov    QWORD PTR [rsp+0x8],r9
   528bd:	mov    r14,QWORD PTR [r10]
   528c0:	mov    QWORD PTR [rsp+0x38],rcx
   528c5:	mov    ecx,edx
   528c7:	xor    ebx,ebx
   528c9:	shl    r11,cl
   528cc:	mov    DWORD PTR [rsp+0x30],eax
   528d0:	mov    QWORD PTR [rsp+0x10],r11
   528d5:	not    r11
   528d8:	mov    QWORD PTR [rsp+0x18],r11
   528dd:	mov    r11d,esi
   528e0:	and    r11d,0x2
   528e4:	jmp    52902 <_obstack_memory_used@@Base+0x5c82>
   528e6:	cs nop WORD PTR [rax+rax*1+0x0]
   528f0:	cmp    cl,0x4
   528f3:	je     52968 <_obstack_memory_used@@Base+0x5ce8>
   528f5:	add    rbx,0x1
   528f9:	cmp    rbx,r13
   528fc:	je     52a6d <_obstack_memory_used@@Base+0x5ded>
   52902:	mov    rbp,QWORD PTR [r15+rbx*8]
   52906:	mov    rax,rbp
   52909:	shl    rax,0x4
   5290d:	add    rax,r14
   52910:	movzx  ecx,BYTE PTR [rax+0x8]
   52914:	cmp    cl,0x8
   52917:	je     52940 <_obstack_memory_used@@Base+0x5cc0>
   52919:	cmp    cl,0x9
   5291c:	jne    528f0 <_obstack_memory_used@@Base+0x5c70>
   5291e:	test   r11d,r11d
   52921:	je     528f5 <_obstack_memory_used@@Base+0x5c75>
   52923:	cmp    QWORD PTR [rax],rdx
   52926:	jne    528f5 <_obstack_memory_used@@Base+0x5c75>
   52928:	add    rsp,0x68
   5292c:	xor    eax,eax
   5292e:	pop    rbx
   5292f:	pop    rbp
   52930:	pop    r12
   52932:	pop    r13
   52934:	pop    r14
   52936:	pop    r15
   52938:	ret    
   52939:	nop    DWORD PTR [rax+0x0]
   52940:	mov    ecx,DWORD PTR [rsp+0x30]
   52944:	test   ecx,ecx
   52946:	je     528f5 <_obstack_memory_used@@Base+0x5c75>
   52948:	cmp    QWORD PTR [rax],rdx
   5294b:	jne    528f5 <_obstack_memory_used@@Base+0x5c75>
   5294d:	add    rsp,0x68
   52951:	mov    eax,0xffffffff
   52956:	pop    rbx
   52957:	pop    rbp
   52958:	pop    r12
   5295a:	pop    r13
   5295c:	pop    r14
   5295e:	pop    r15
   52960:	ret    
   52961:	nop    DWORD PTR [rax+0x0]
   52968:	cmp    r8,0xffffffffffffffff
   5296c:	je     528f5 <_obstack_memory_used@@Base+0x5c75>
   5296e:	lea    r9,[rbp+rbp*2+0x0]
   52973:	mov    QWORD PTR [rsp+0x40],rbx
   52978:	mov    r12,QWORD PTR [rsp+0x38]
   5297d:	mov    rbx,rdx
   52980:	mov    QWORD PTR [rsp+0x48],r13
   52985:	shl    r9,0x3
   52989:	mov    r13,r10
   5298c:	add    r12,QWORD PTR [rdi+0xd8]
   52993:	mov    QWORD PTR [rsp+0x50],r15
   52998:	mov    r15d,esi
   5299b:	mov    QWORD PTR [rsp+0x58],r14
   529a0:	mov    r14,rdi
   529a3:	nop    DWORD PTR [rax+rax*1+0x0]
   529a8:	cmp    QWORD PTR [r12],rbp
   529ac:	jne    52a30 <_obstack_memory_used@@Base+0x5db0>
   529b2:	cmp    rbx,0x3f
   529b6:	jg     529c4 <_obstack_memory_used@@Base+0x5d44>
   529b8:	mov    rax,QWORD PTR [rsp+0x10]
   529bd:	and    rax,QWORD PTR [r12+0x20]
   529c2:	je     52a30 <_obstack_memory_used@@Base+0x5db0>
   529c4:	mov    rax,QWORD PTR [r13+0x28]
   529c8:	mov    rax,QWORD PTR [rax+r9*1+0x10]
   529cd:	mov    rcx,QWORD PTR [rax]
   529d0:	cmp    QWORD PTR [rsp+0x8],rcx
   529d5:	je     52a80 <_obstack_memory_used@@Base+0x5e00>
   529db:	mov    rdx,rbx
   529de:	mov    esi,r15d
   529e1:	mov    rdi,r14
   529e4:	mov    DWORD PTR [rsp+0x34],r11d
   529e9:	mov    QWORD PTR [rsp+0x28],r9
   529ee:	mov    QWORD PTR [rsp+0x20],r8
   529f3:	call   52870 <_obstack_memory_used@@Base+0x5bf0>
   529f8:	mov    r8,QWORD PTR [rsp+0x20]
   529fd:	mov    r9,QWORD PTR [rsp+0x28]
   52a02:	cmp    eax,0xffffffff
   52a05:	mov    r11d,DWORD PTR [rsp+0x34]
   52a0a:	je     5294d <_obstack_memory_used@@Base+0x5ccd>
   52a10:	test   eax,eax
   52a12:	jne    52a1d <_obstack_memory_used@@Base+0x5d9d>
   52a14:	test   r11d,r11d
   52a17:	jne    52928 <_obstack_memory_used@@Base+0x5ca8>
   52a1d:	cmp    rbx,0x3f
   52a21:	jg     52a30 <_obstack_memory_used@@Base+0x5db0>
   52a23:	mov    rax,QWORD PTR [rsp+0x18]
   52a28:	and    QWORD PTR [r12+0x20],rax
   52a2d:	nop    DWORD PTR [rax]
   52a30:	add    r12,0x30
   52a34:	cmp    BYTE PTR [r12-0x8],0x0
   52a3a:	jne    529a8 <_obstack_memory_used@@Base+0x5d28>
   52a40:	mov    rdx,rbx
   52a43:	mov    rbx,QWORD PTR [rsp+0x40]
   52a48:	mov    r10,r13
   52a4b:	mov    r13,QWORD PTR [rsp+0x48]
   52a50:	mov    rdi,r14
   52a53:	mov    esi,r15d
   52a56:	mov    r14,QWORD PTR [rsp+0x58]
   52a5b:	mov    r15,QWORD PTR [rsp+0x50]
   52a60:	add    rbx,0x1
   52a64:	cmp    rbx,r13
   52a67:	jne    52902 <_obstack_memory_used@@Base+0x5c82>
   52a6d:	add    rsp,0x68
   52a71:	mov    eax,esi
   52a73:	pop    rbx
   52a74:	sar    eax,1
   52a76:	pop    rbp
   52a77:	pop    r12
   52a79:	pop    r13
   52a7b:	pop    r14
   52a7d:	pop    r15
   52a7f:	ret    
   52a80:	mov    esi,r15d
   52a83:	add    rsp,0x68
   52a87:	and    esi,0x1
   52a8a:	pop    rbx
   52a8b:	pop    rbp
   52a8c:	mov    eax,esi
   52a8e:	pop    r12
   52a90:	pop    r13
   52a92:	neg    eax
   52a94:	pop    r14
   52a96:	pop    r15
   52a98:	ret    
   52a99:	nop    DWORD PTR [rax+0x0]
   52aa0:	mov    r9,QWORD PTR [rdi+0xc8]
   52aa7:	xor    r8d,r8d
   52aaa:	mov    rdx,r9
   52aad:	jmp    52ad5 <_obstack_memory_used@@Base+0x5e55>
   52aaf:	nop
   52ab0:	lea    rax,[rdx+r8*1]
   52ab4:	mov    rcx,rax
   52ab7:	and    rax,0xfffffffffffffffe
   52abb:	sar    rcx,1
   52abe:	add    rax,rcx
   52ac1:	shl    rax,0x4
   52ac5:	add    rax,QWORD PTR [rdi+0xd8]
   52acc:	cmp    QWORD PTR [rax+0x8],rsi
   52ad0:	jl     52b08 <_obstack_memory_used@@Base+0x5e88>
   52ad2:	mov    rdx,rcx
   52ad5:	cmp    rdx,r8
   52ad8:	jg     52ab0 <_obstack_memory_used@@Base+0x5e30>
   52ada:	cmp    r9,r8
   52add:	jle    52b0e <_obstack_memory_used@@Base+0x5e8e>
   52adf:	lea    rax,[r8+r8*2]
   52ae3:	shl    rax,0x4
   52ae7:	add    rax,QWORD PTR [rdi+0xd8]
   52aee:	cmp    QWORD PTR [rax+0x8],rsi
   52af2:	mov    rax,0xffffffffffffffff
   52af9:	cmovne r8,rax
   52afd:	mov    rax,r8
   52b00:	ret    
   52b01:	nop    DWORD PTR [rax+0x0]
   52b08:	lea    r8,[rcx+0x1]
   52b0c:	jmp    52ad5 <_obstack_memory_used@@Base+0x5e55>
   52b0e:	mov    r8,0xffffffffffffffff
   52b15:	jmp    52afd <_obstack_memory_used@@Base+0x5e7d>
   52b17:	nop    WORD PTR [rax+rax*1+0x0]
   52b20:	push   r15
   52b22:	push   r14
   52b24:	push   r13
   52b26:	mov    r13,rsi
   52b29:	mov    rsi,rcx
   52b2c:	push   r12
   52b2e:	mov    r12,r9
   52b31:	push   rbp
   52b32:	push   rbx
   52b33:	mov    rbx,rcx
   52b36:	sub    rsp,0x48
   52b3a:	mov    r11,QWORD PTR [rdi+0x98]
   52b41:	mov    QWORD PTR [rsp+0x10],rdx
   52b46:	mov    QWORD PTR [rsp+0x18],r8
   52b4b:	call   52aa0 <_obstack_memory_used@@Base+0x5e20>
   52b50:	mov    rsi,r12
   52b53:	mov    QWORD PTR [rsp],rax
   52b57:	call   52aa0 <_obstack_memory_used@@Base+0x5e20>
   52b5c:	cmp    QWORD PTR [r13+0x8],0x0
   52b61:	mov    QWORD PTR [rsp+0x8],rax
   52b66:	jle    52cfd <_obstack_memory_used@@Base+0x607d>
   52b6c:	mov    r9,QWORD PTR [r13+0x10]
   52b70:	mov    r11,QWORD PTR [r11]
   52b73:	mov    QWORD PTR [rsp+0x20],r13
   52b78:	xor    r14d,r14d
   52b7b:	mov    r10,QWORD PTR [rdi+0xd8]
   52b82:	mov    r15,r10
   52b85:	mov    rax,QWORD PTR [r9+r14*8]
   52b89:	lea    rax,[rax+rax*2]
   52b8d:	shl    rax,0x4
   52b91:	add    rax,r15
   52b94:	mov    rdx,QWORD PTR [rax]
   52b97:	shl    rdx,0x4
   52b9b:	mov    r13,QWORD PTR [r11+rdx*1]
   52b9f:	mov    rdx,QWORD PTR [rax+0x10]
   52ba3:	cmp    rbx,rdx
   52ba6:	jl     52c78 <_obstack_memory_used@@Base+0x5ff8>
   52bac:	mov    rax,QWORD PTR [rax+0x18]
   52bb0:	cmp    rbx,rax
   52bb3:	jg     52d08 <_obstack_memory_used@@Base+0x6088>
   52bb9:	xor    ecx,ecx
   52bbb:	cmp    rbx,rdx
   52bbe:	sete   cl
   52bc1:	xor    ebp,ebp
   52bc3:	cmp    rbx,rax
   52bc6:	sete   bpl
   52bca:	add    ebp,ebp
   52bcc:	or     ebp,ecx
   52bce:	jne    52c20 <_obstack_memory_used@@Base+0x5fa0>
   52bd0:	cmp    r12,rdx
   52bd3:	jl     52c03 <_obstack_memory_used@@Base+0x5f83>
   52bd5:	mov    esi,0x1
   52bda:	cmp    r12,rax
   52bdd:	jg     52bfb <_obstack_memory_used@@Base+0x5f7b>
   52bdf:	cmp    r12,rdx
   52be2:	sete   dl
   52be5:	xor    esi,esi
   52be7:	cmp    r12,rax
   52bea:	sete   sil
   52bee:	movzx  edx,dl
   52bf1:	add    esi,esi
   52bf3:	or     esi,edx
   52bf5:	jne    52cb0 <_obstack_memory_used@@Base+0x6030>
   52bfb:	cmp    esi,ebp
   52bfd:	je     52cea <_obstack_memory_used@@Base+0x606a>
   52c03:	mov    eax,0x1
   52c08:	add    rsp,0x48
   52c0c:	pop    rbx
   52c0d:	pop    rbp
   52c0e:	pop    r12
   52c10:	pop    r13
   52c12:	pop    r14
   52c14:	pop    r15
   52c16:	ret    
   52c17:	nop    WORD PTR [rax+rax*1+0x0]
   52c20:	mov    r8,QWORD PTR [rsp]
   52c24:	mov    rcx,QWORD PTR [rsp+0x10]
   52c29:	mov    rdx,r13
   52c2c:	mov    esi,ebp
   52c2e:	mov    QWORD PTR [rsp+0x38],r11
   52c33:	mov    QWORD PTR [rsp+0x30],r9
   52c38:	mov    QWORD PTR [rsp+0x28],rdi
   52c3d:	call   52870 <_obstack_memory_used@@Base+0x5bf0>
   52c42:	mov    r9,QWORD PTR [rsp+0x30]
   52c47:	mov    rdi,QWORD PTR [rsp+0x28]
   52c4c:	mov    ebp,eax
   52c4e:	mov    r11,QWORD PTR [rsp+0x38]
   52c53:	mov    rax,QWORD PTR [r9+r14*8]
   52c57:	lea    rax,[rax+rax*2]
   52c5b:	shl    rax,0x4
   52c5f:	add    rax,r15
   52c62:	mov    rdx,QWORD PTR [rax+0x10]
   52c66:	cmp    r12,rdx
   52c69:	jl     52d12 <_obstack_memory_used@@Base+0x6092>
   52c6f:	mov    rax,QWORD PTR [rax+0x18]
   52c73:	jmp    52bd5 <_obstack_memory_used@@Base+0x5f55>
   52c78:	cmp    r12,rdx
   52c7b:	jl     52cea <_obstack_memory_used@@Base+0x606a>
   52c7d:	mov    rax,QWORD PTR [rax+0x18]
   52c81:	cmp    rax,r12
   52c84:	jl     52c03 <_obstack_memory_used@@Base+0x5f83>
   52c8a:	cmp    r12,rdx
   52c8d:	sete   dl
   52c90:	xor    esi,esi
   52c92:	cmp    rax,r12
   52c95:	sete   sil
   52c99:	movzx  edx,dl
   52c9c:	add    esi,esi
   52c9e:	or     esi,edx
   52ca0:	je     52c03 <_obstack_memory_used@@Base+0x5f83>
   52ca6:	mov    ebp,0xffffffff
   52cab:	nop    DWORD PTR [rax+rax*1+0x0]
   52cb0:	mov    r8,QWORD PTR [rsp+0x8]
   52cb5:	mov    rcx,QWORD PTR [rsp+0x18]
   52cba:	mov    rdx,r13
   52cbd:	mov    QWORD PTR [rsp+0x38],r11
   52cc2:	mov    QWORD PTR [rsp+0x30],r9
   52cc7:	mov    QWORD PTR [rsp+0x28],rdi
   52ccc:	call   52870 <_obstack_memory_used@@Base+0x5bf0>
   52cd1:	mov    rdi,QWORD PTR [rsp+0x28]
   52cd6:	mov    r9,QWORD PTR [rsp+0x30]
   52cdb:	mov    esi,eax
   52cdd:	mov    r11,QWORD PTR [rsp+0x38]
   52ce2:	cmp    esi,ebp
   52ce4:	jne    52c03 <_obstack_memory_used@@Base+0x5f83>
   52cea:	mov    rax,QWORD PTR [rsp+0x20]
   52cef:	add    r14,0x1
   52cf3:	cmp    QWORD PTR [rax+0x8],r14
   52cf7:	jg     52b85 <_obstack_memory_used@@Base+0x5f05>
   52cfd:	xor    eax,eax
   52cff:	jmp    52c08 <_obstack_memory_used@@Base+0x5f88>
   52d04:	nop    DWORD PTR [rax+0x0]
   52d08:	mov    ebp,0x1
   52d0d:	jmp    52bd0 <_obstack_memory_used@@Base+0x5f50>
   52d12:	mov    esi,0xffffffff
   52d17:	jmp    52bfb <_obstack_memory_used@@Base+0x5f7b>
   52d1c:	nop    DWORD PTR [rax+0x0]
   52d20:	mov    r11,rsi
   52d23:	push   r15
   52d25:	push   r14
   52d27:	push   r13
   52d29:	push   r12
   52d2b:	push   rbp
   52d2c:	push   rbx
   52d2d:	mov    ebx,DWORD PTR [r11]
   52d30:	mov    r12d,DWORD PTR [rsi+0x2c]
   52d34:	mov    esi,DWORD PTR [rsi+0x30]
   52d37:	cmp    esi,ebx
   52d39:	jge    52da3 <_obstack_memory_used@@Base+0x6123>
   52d3b:	mov    r9,rdi
   52d3e:	mov    r8d,ebx
   52d41:	mov    edi,r12d
   52d44:	movsxd rbp,esi
   52d47:	lea    r10,[r9+0x8]
   52d4b:	cmp    r12d,esi
   52d4e:	jge    52da3 <_obstack_memory_used@@Base+0x6123>
   52d50:	mov    r14d,r8d
   52d53:	mov    edx,esi
   52d55:	sub    r14d,esi
   52d58:	sub    edx,edi
   52d5a:	cmp    r14d,edx
   52d5d:	jg     52dc0 <_obstack_memory_used@@Base+0x6140>
   52d5f:	test   r14d,r14d
   52d62:	jle    52d97 <_obstack_memory_used@@Base+0x6117>
   52d64:	movsxd rcx,edi
   52d67:	lea    edx,[r14-0x1]
   52d6b:	add    rdx,rcx
   52d6e:	lea    rax,[r9+rcx*8]
   52d72:	lea    r13,[r10+rdx*8]
   52d76:	mov    rdx,rbp
   52d79:	sub    rdx,rcx
   52d7c:	nop    DWORD PTR [rax+0x0]
   52d80:	mov    rcx,QWORD PTR [rax]
   52d83:	mov    r15,QWORD PTR [rax+rdx*8]
   52d87:	mov    QWORD PTR [rax],r15
   52d8a:	mov    QWORD PTR [rax+rdx*8],rcx
   52d8e:	add    rax,0x8
   52d92:	cmp    rax,r13
   52d95:	jne    52d80 <_obstack_memory_used@@Base+0x6100>
   52d97:	add    edi,r14d
   52d9a:	cmp    r8d,esi
   52d9d:	jle    52da3 <_obstack_memory_used@@Base+0x6123>
   52d9f:	cmp    edi,esi
   52da1:	jl     52d50 <_obstack_memory_used@@Base+0x60d0>
   52da3:	mov    eax,ebx
   52da5:	mov    DWORD PTR [r11+0x30],ebx
   52da9:	pop    rbx
   52daa:	sub    eax,esi
   52dac:	pop    rbp
   52dad:	add    eax,r12d
   52db0:	pop    r12
   52db2:	pop    r13
   52db4:	mov    DWORD PTR [r11+0x2c],eax
   52db8:	pop    r14
   52dba:	pop    r15
   52dbc:	ret    
   52dbd:	nop    DWORD PTR [rax]
   52dc0:	movsxd rcx,edi
   52dc3:	sub    r8d,edx
   52dc6:	sub    edx,0x1
   52dc9:	add    rdx,rcx
   52dcc:	lea    rax,[r9+rcx*8]
   52dd0:	lea    r13,[r10+rdx*8]
   52dd4:	movsxd rdx,r8d
   52dd7:	sub    rdx,rcx
   52dda:	nop    WORD PTR [rax+rax*1+0x0]
   52de0:	mov    rcx,QWORD PTR [rax]
   52de3:	mov    r14,QWORD PTR [rax+rdx*8]
   52de7:	mov    QWORD PTR [rax],r14
   52dea:	mov    QWORD PTR [rax+rdx*8],rcx
   52dee:	add    rax,0x8
   52df2:	cmp    rax,r13
   52df5:	jne    52de0 <_obstack_memory_used@@Base+0x6160>
   52df7:	jmp    52d9a <_obstack_memory_used@@Base+0x611a>
   52df9:	nop    DWORD PTR [rax+0x0]
   52e00:	push   r14
   52e02:	mov    r14,rdi
   52e05:	push   r13
   52e07:	push   r12
   52e09:	push   rbp
   52e0a:	push   rbx
   52e0b:	cmp    QWORD PTR [rdi+0xe8],0x0
   52e13:	jle    52e99 <_obstack_memory_used@@Base+0x6219>
   52e19:	xor    r13d,r13d
   52e1c:	nop    DWORD PTR [rax+0x0]
   52e20:	mov    rax,QWORD PTR [r14+0xf8]
   52e27:	mov    r12,QWORD PTR [rax+r13*8]
   52e2b:	cmp    QWORD PTR [r12+0x20],0x0
   52e31:	jle    52e5d <_obstack_memory_used@@Base+0x61dd>
   52e33:	xor    ebx,ebx
   52e35:	nop    DWORD PTR [rax]
   52e38:	mov    rax,QWORD PTR [r12+0x28]
   52e3d:	mov    rbp,QWORD PTR [rax+rbx*8]
   52e41:	add    rbx,0x1
   52e45:	mov    rdi,QWORD PTR [rbp+0x20]
   52e49:	call   9ce0 <free@plt>
   52e4e:	mov    rdi,rbp
   52e51:	call   9ce0 <free@plt>
   52e56:	cmp    QWORD PTR [r12+0x20],rbx
   52e5b:	jg     52e38 <_obstack_memory_used@@Base+0x61b8>
   52e5d:	mov    rdi,QWORD PTR [r12+0x28]
   52e62:	call   9ce0 <free@plt>
   52e67:	mov    rax,QWORD PTR [r12+0x10]
   52e6c:	test   rax,rax
   52e6f:	je     52e84 <_obstack_memory_used@@Base+0x6204>
   52e71:	mov    rdi,QWORD PTR [rax+0x10]
   52e75:	call   9ce0 <free@plt>
   52e7a:	mov    rdi,QWORD PTR [r12+0x10]
   52e7f:	call   9ce0 <free@plt>
   52e84:	mov    rdi,r12
   52e87:	add    r13,0x1
   52e8b:	call   9ce0 <free@plt>
   52e90:	cmp    QWORD PTR [r14+0xe8],r13
   52e97:	jg     52e20 <_obstack_memory_used@@Base+0x61a0>
   52e99:	mov    QWORD PTR [r14+0xe8],0x0
   52ea4:	pop    rbx
   52ea5:	mov    QWORD PTR [r14+0xc8],0x0
   52eb0:	pop    rbp
   52eb1:	pop    r12
   52eb3:	pop    r13
   52eb5:	pop    r14
   52eb7:	ret    
   52eb8:	nop    DWORD PTR [rax+rax*1+0x0]
   52ec0:	push   r14
   52ec2:	mov    r14,rsi
   52ec5:	push   r13
   52ec7:	mov    r13,rcx
   52eca:	push   r12
   52ecc:	mov    r12d,r8d
   52ecf:	push   rbp
   52ed0:	mov    rbp,rdx
   52ed3:	push   rbx
   52ed4:	mov    rsi,rbp
   52ed7:	mov    rbx,rdi
   52eda:	mov    rdi,r14
   52edd:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   52ee2:	test   rax,rax
   52ee5:	jne    52f50 <_obstack_memory_used@@Base+0x62d0>
   52ee7:	mov    rax,rbp
   52eea:	shl    rax,0x4
   52eee:	add    rax,QWORD PTR [rbx]
   52ef1:	movzx  edx,BYTE PTR [rax+0x8]
   52ef5:	cmp    edx,r12d
   52ef8:	jne    52f03 <_obstack_memory_used@@Base+0x6283>
   52efa:	cmp    QWORD PTR [rax],r13
   52efd:	je     52f88 <_obstack_memory_used@@Base+0x6308>
   52f03:	mov    rsi,rbp
   52f06:	mov    rdi,r14
   52f09:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   52f0e:	test   al,al
   52f10:	je     52f9d <_obstack_memory_used@@Base+0x631d>
   52f16:	mov    rax,QWORD PTR [rbx+0x28]
   52f1a:	lea    rbp,[rbp+rbp*2+0x0]
   52f1f:	shl    rbp,0x3
   52f23:	add    rax,rbp
   52f26:	mov    rdx,QWORD PTR [rax+0x8]
   52f2a:	test   rdx,rdx
   52f2d:	je     52f50 <_obstack_memory_used@@Base+0x62d0>
   52f2f:	mov    rcx,QWORD PTR [rax+0x10]
   52f33:	cmp    rdx,0x2
   52f37:	je     52f60 <_obstack_memory_used@@Base+0x62e0>
   52f39:	mov    rax,QWORD PTR [rax+0x10]
   52f3d:	mov    rdi,r14
   52f40:	mov    rbp,QWORD PTR [rax]
   52f43:	mov    rsi,rbp
   52f46:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   52f4b:	test   rax,rax
   52f4e:	je     52ee7 <_obstack_memory_used@@Base+0x6267>
   52f50:	xor    eax,eax
   52f52:	pop    rbx
   52f53:	pop    rbp
   52f54:	pop    r12
   52f56:	pop    r13
   52f58:	pop    r14
   52f5a:	ret    
   52f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   52f60:	mov    rdx,QWORD PTR [rcx+0x8]
   52f64:	mov    r8d,r12d
   52f67:	mov    rcx,r13
   52f6a:	mov    rsi,r14
   52f6d:	mov    rdi,rbx
   52f70:	call   52ec0 <_obstack_memory_used@@Base+0x6240>
   52f75:	test   eax,eax
   52f77:	jne    52f52 <_obstack_memory_used@@Base+0x62d2>
   52f79:	mov    rax,QWORD PTR [rbx+0x28]
   52f7d:	add    rax,rbp
   52f80:	jmp    52f39 <_obstack_memory_used@@Base+0x62b9>
   52f82:	nop    WORD PTR [rax+rax*1+0x0]
   52f88:	cmp    r12d,0x9
   52f8c:	jne    52f50 <_obstack_memory_used@@Base+0x62d0>
   52f8e:	mov    rsi,rbp
   52f91:	mov    rdi,r14
   52f94:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   52f99:	test   al,al
   52f9b:	jne    52f50 <_obstack_memory_used@@Base+0x62d0>
   52f9d:	pop    rbx
   52f9e:	mov    eax,0xc
   52fa3:	pop    rbp
   52fa4:	pop    r12
   52fa6:	pop    r13
   52fa8:	pop    r14
   52faa:	ret    
   52fab:	nop    DWORD PTR [rax+rax*1+0x0]
   52fb0:	push   r15
   52fb2:	push   r14
   52fb4:	push   r13
   52fb6:	push   r12
   52fb8:	push   rbp
   52fb9:	push   rbx
   52fba:	sub    rsp,0x38
   52fbe:	mov    rax,QWORD PTR fs:0x28
   52fc7:	mov    QWORD PTR [rsp+0x28],rax
   52fcc:	xor    eax,eax
   52fce:	test   rcx,rcx
   52fd1:	jle    5305a <_obstack_memory_used@@Base+0x63da>
   52fd7:	mov    r15,rdi
   52fda:	mov    rbp,rsi
   52fdd:	mov    r13,rdx
   52fe0:	mov    r12,rcx
   52fe3:	xor    ebx,ebx
   52fe5:	lea    r14,[rsp+0x10]
   52fea:	jmp    5303d <_obstack_memory_used@@Base+0x63bd>
   52fec:	nop    DWORD PTR [rax+0x0]
   52ff0:	test   rdx,rdx
   52ff3:	je     53034 <_obstack_memory_used@@Base+0x63b4>
   52ff5:	add    rdx,0x8
   52ff9:	add    rsi,0x8
   52ffd:	mov    rdi,r14
   53000:	call   4d980 <_obstack_memory_used@@Base+0xd00>
   53005:	mov    DWORD PTR [rsp+0xc],eax
   53009:	test   eax,eax
   5300b:	jne    5305c <_obstack_memory_used@@Base+0x63dc>
   5300d:	lea    rdi,[rsp+0xc]
   53012:	mov    rdx,r14
   53015:	mov    rsi,r15
   53018:	call   4e360 <_obstack_memory_used@@Base+0x16e0>
   5301d:	mov    rdi,QWORD PTR [rsp+0x20]
   53022:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
   53027:	call   9ce0 <free@plt>
   5302c:	mov    eax,DWORD PTR [rsp+0xc]
   53030:	test   eax,eax
   53032:	jne    5305c <_obstack_memory_used@@Base+0x63dc>
   53034:	add    rbx,0x1
   53038:	cmp    r12,rbx
   5303b:	je     5305a <_obstack_memory_used@@Base+0x63da>
   5303d:	mov    rsi,QWORD PTR [rbp+rbx*8+0x0]
   53042:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   53047:	test   rsi,rsi
   5304a:	jne    52ff0 <_obstack_memory_used@@Base+0x6370>
   5304c:	mov    QWORD PTR [rbp+rbx*8+0x0],rdx
   53051:	add    rbx,0x1
   53055:	cmp    r12,rbx
   53058:	jne    5303d <_obstack_memory_used@@Base+0x63bd>
   5305a:	xor    eax,eax
   5305c:	mov    rdx,QWORD PTR [rsp+0x28]
   53061:	sub    rdx,QWORD PTR fs:0x28
   5306a:	jne    5307b <_obstack_memory_used@@Base+0x63fb>
   5306c:	add    rsp,0x38
   53070:	pop    rbx
   53071:	pop    rbp
   53072:	pop    r12
   53074:	pop    r13
   53076:	pop    r14
   53078:	pop    r15
   5307a:	ret    
   5307b:	call   a0a0 <__stack_chk_fail@plt>
   53080:	push   r15
   53082:	mov    r15d,ecx
   53085:	push   r14
   53087:	mov    r14,rsi
   5308a:	push   r13
   5308c:	mov    r13,rdi
   5308f:	push   r12
   53091:	push   rbp
   53092:	push   rbx
   53093:	mov    rbx,rdx
   53096:	sub    rsp,0x38
   5309a:	mov    rbp,QWORD PTR [rsi+0x8]
   5309e:	mov    rax,QWORD PTR fs:0x28
   530a7:	mov    QWORD PTR [rsp+0x28],rax
   530ac:	xor    eax,eax
   530ae:	mov    QWORD PTR [rsp+0x18],0x0
   530b7:	lea    rdi,[rbp*8+0x0]
   530bf:	mov    QWORD PTR [rsp+0x10],rbp
   530c4:	call   a4a0 <malloc@plt>
   530c9:	mov    QWORD PTR [rsp+0x20],rax
   530ce:	test   rax,rax
   530d1:	je     531d0 <_obstack_memory_used@@Base+0x6550>
   530d7:	test   rbp,rbp
   530da:	jle    5316e <_obstack_memory_used@@Base+0x64ee>
   530e0:	xor    r12d,r12d
   530e3:	lea    rbp,[rsp+0x10]
   530e8:	nop    DWORD PTR [rax+rax*1+0x0]
   530f0:	mov    rax,QWORD PTR [r14+0x10]
   530f4:	mov    r9,QWORD PTR [rax+r12*8]
   530f8:	mov    rax,QWORD PTR [r13+0x30]
   530fc:	lea    rdx,[r9+r9*2]
   53100:	lea    r10,[rax+rdx*8]
   53104:	mov    rsi,QWORD PTR [r10+0x8]
   53108:	test   rsi,rsi
   5310b:	jle    53190 <_obstack_memory_used@@Base+0x6510>
   53111:	mov    r8,QWORD PTR [r10+0x10]
   53115:	mov    rdi,QWORD PTR [r13+0x0]
   53119:	xor    edx,edx
   5311b:	jmp    53129 <_obstack_memory_used@@Base+0x64a9>
   5311d:	nop    DWORD PTR [rax]
   53120:	add    rdx,0x1
   53124:	cmp    rsi,rdx
   53127:	je     53190 <_obstack_memory_used@@Base+0x6510>
   53129:	mov    rcx,QWORD PTR [r8+rdx*8]
   5312d:	mov    rax,rcx
   53130:	shl    rax,0x4
   53134:	add    rax,rdi
   53137:	movzx  r11d,BYTE PTR [rax+0x8]
   5313c:	cmp    r15d,r11d
   5313f:	jne    53120 <_obstack_memory_used@@Base+0x64a0>
   53141:	cmp    rbx,QWORD PTR [rax]
   53144:	jne    53120 <_obstack_memory_used@@Base+0x64a0>
   53146:	cmp    rcx,0xffffffffffffffff
   5314a:	je     53190 <_obstack_memory_used@@Base+0x6510>
   5314c:	mov    r8d,r15d
   5314f:	mov    rcx,rbx
   53152:	mov    rdx,r9
   53155:	mov    rsi,rbp
   53158:	mov    rdi,r13
   5315b:	call   52ec0 <_obstack_memory_used@@Base+0x6240>
   53160:	test   eax,eax
   53162:	jne    5319f <_obstack_memory_used@@Base+0x651f>
   53164:	add    r12,0x1
   53168:	cmp    QWORD PTR [r14+0x8],r12
   5316c:	jg     530f0 <_obstack_memory_used@@Base+0x6470>
   5316e:	mov    rdi,QWORD PTR [r14+0x10]
   53172:	call   9ce0 <free@plt>
   53177:	mov    rax,QWORD PTR [rsp+0x20]
   5317c:	movdqa xmm0,XMMWORD PTR [rsp+0x10]
   53182:	mov    QWORD PTR [r14+0x10],rax
   53186:	xor    eax,eax
   53188:	movups XMMWORD PTR [r14],xmm0
   5318c:	jmp    531b1 <_obstack_memory_used@@Base+0x6531>
   5318e:	xchg   ax,ax
   53190:	mov    rsi,r10
   53193:	mov    rdi,rbp
   53196:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   5319b:	test   eax,eax
   5319d:	je     53164 <_obstack_memory_used@@Base+0x64e4>
   5319f:	mov    rdi,QWORD PTR [rsp+0x20]
   531a4:	mov    DWORD PTR [rsp+0xc],eax
   531a8:	call   9ce0 <free@plt>
   531ad:	mov    eax,DWORD PTR [rsp+0xc]
   531b1:	mov    rdx,QWORD PTR [rsp+0x28]
   531b6:	sub    rdx,QWORD PTR fs:0x28
   531bf:	jne    531d7 <_obstack_memory_used@@Base+0x6557>
   531c1:	add    rsp,0x38
   531c5:	pop    rbx
   531c6:	pop    rbp
   531c7:	pop    r12
   531c9:	pop    r13
   531cb:	pop    r14
   531cd:	pop    r15
   531cf:	ret    
   531d0:	mov    eax,0xc
   531d5:	jmp    531b1 <_obstack_memory_used@@Base+0x6531>
   531d7:	call   a0a0 <__stack_chk_fail@plt>
   531dc:	nop    DWORD PTR [rax+0x0]
   531e0:	push   r15
   531e2:	push   r14
   531e4:	push   r13
   531e6:	push   r12
   531e8:	push   rbp
   531e9:	mov    rbp,rsi
   531ec:	mov    rsi,rdx
   531ef:	push   rbx
   531f0:	sub    rsp,0x78
   531f4:	mov    r13,QWORD PTR [rdi+0x98]
   531fb:	mov    QWORD PTR [rsp],rdx
   531ff:	mov    QWORD PTR [rsp+0x30],rcx
   53204:	mov    DWORD PTR [rsp+0x3c],r8d
   53209:	mov    rax,QWORD PTR fs:0x28
   53212:	mov    QWORD PTR [rsp+0x68],rax
   53217:	xor    eax,eax
   53219:	call   52aa0 <_obstack_memory_used@@Base+0x5e20>
   5321e:	cmp    rax,0xffffffffffffffff
   53222:	je     53470 <_obstack_memory_used@@Base+0x67f0>
   53228:	lea    rax,[rax+rax*2]
   5322c:	mov    r12,rdi
   5322f:	shl    rax,0x4
   53233:	mov    QWORD PTR [rsp+0x28],rax
   53238:	lea    rax,[rsp+0x4c]
   5323d:	mov    QWORD PTR [rsp+0x20],rax
   53242:	mov    rbx,QWORD PTR [rsp+0x28]
   53247:	add    rbx,QWORD PTR [r12+0xd8]
   5324f:	jmp    5333f <_obstack_memory_used@@Base+0x66bf>
   53254:	nop    DWORD PTR [rax+0x0]
   53258:	mov    rax,QWORD PTR [r13+0x18]
   5325c:	mov    r11,QWORD PTR [r12+0xb8]
   53264:	mov    r14,QWORD PTR [rax+r14*8]
   53268:	lea    rax,[r8*8+0x0]
   53270:	add    r11,rax
   53273:	mov    QWORD PTR [rsp+0x8],rax
   53278:	mov    rax,QWORD PTR [r11]
   5327b:	test   rax,rax
   5327e:	je     53418 <_obstack_memory_used@@Base+0x6798>
   53284:	lea    r11,[rax+0x8]
   53288:	mov    rsi,r14
   5328b:	mov    QWORD PTR [rsp+0x18],r8
   53290:	mov    rdi,r11
   53293:	mov    QWORD PTR [rsp+0x10],r11
   53298:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   5329d:	test   rax,rax
   532a0:	jne    53331 <_obstack_memory_used@@Base+0x66b1>
   532a6:	mov    rsi,QWORD PTR [rsp+0x10]
   532ab:	lea    r15,[rsp+0x50]
   532b0:	mov    rdi,r15
   532b3:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   532b8:	mov    rsi,r14
   532bb:	mov    rdi,r15
   532be:	mov    DWORD PTR [rsp+0x4c],eax
   532c2:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   532c7:	mov    edx,DWORD PTR [rsp+0x4c]
   532cb:	test   edx,edx
   532cd:	jne    534b0 <_obstack_memory_used@@Base+0x6830>
   532d3:	cmp    al,0x1
   532d5:	jne    534b0 <_obstack_memory_used@@Base+0x6830>
   532db:	mov    r8,QWORD PTR [rsp+0x18]
   532e0:	mov    r11,QWORD PTR [rsp+0x8]
   532e5:	add    r11,QWORD PTR [r12+0xb8]
   532ed:	mov    rdi,QWORD PTR [rsp+0x20]
   532f2:	mov    rdx,r15
   532f5:	mov    rsi,r13
   532f8:	mov    QWORD PTR [rsp+0x10],r8
   532fd:	mov    QWORD PTR [rsp+0x8],r11
   53302:	call   4e360 <_obstack_memory_used@@Base+0x16e0>
   53307:	mov    r11,QWORD PTR [rsp+0x8]
   5330c:	mov    rdi,QWORD PTR [rsp+0x60]
   53311:	mov    QWORD PTR [r11],rax
   53314:	call   9ce0 <free@plt>
   53319:	mov    rax,QWORD PTR [r12+0xb8]
   53321:	mov    r8,QWORD PTR [rsp+0x10]
   53326:	cmp    QWORD PTR [rax+r8*8],0x0
   5332b:	je     53498 <_obstack_memory_used@@Base+0x6818>
   53331:	add    rbx,0x30
   53335:	cmp    BYTE PTR [rbx-0x8],0x0
   53339:	je     53470 <_obstack_memory_used@@Base+0x67f0>
   5333f:	mov    r14,QWORD PTR [rbx]
   53342:	mov    rdi,rbp
   53345:	mov    rsi,r14
   53348:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   5334d:	test   rax,rax
   53350:	je     53331 <_obstack_memory_used@@Base+0x66b1>
   53352:	mov    rax,QWORD PTR [rsp]
   53356:	mov    r8,QWORD PTR [rbx+0x18]
   5335a:	add    r8,rax
   5335d:	sub    r8,QWORD PTR [rbx+0x10]
   53361:	cmp    rax,r8
   53364:	jne    53258 <_obstack_memory_used@@Base+0x65d8>
   5336a:	mov    rcx,QWORD PTR [r13+0x28]
   5336e:	lea    rax,[r14+r14*2]
   53372:	mov    rdi,rbp
   53375:	lea    rax,[rcx+rax*8]
   53379:	mov    rax,QWORD PTR [rax+0x10]
   5337d:	mov    r14,QWORD PTR [rax]
   53380:	mov    rsi,r14
   53383:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   53388:	test   rax,rax
   5338b:	jne    53331 <_obstack_memory_used@@Base+0x66b1>
   5338d:	mov    QWORD PTR [rsp+0x50],0x1
   53396:	mov    edi,0x8
   5339b:	mov    QWORD PTR [rsp+0x58],0x1
   533a4:	call   a4a0 <malloc@plt>
   533a9:	mov    QWORD PTR [rsp+0x60],rax
   533ae:	test   rax,rax
   533b1:	je     534d0 <_obstack_memory_used@@Base+0x6850>
   533b7:	mov    QWORD PTR [rax],r14
   533ba:	xor    eax,eax
   533bc:	mov    rdx,QWORD PTR [rsp+0x30]
   533c1:	mov    ecx,DWORD PTR [rsp+0x3c]
   533c5:	mov    rdi,r13
   533c8:	mov    DWORD PTR [rsp+0x4c],eax
   533cc:	lea    r15,[rsp+0x50]
   533d1:	mov    rsi,r15
   533d4:	call   53080 <_obstack_memory_used@@Base+0x6400>
   533d9:	mov    rsi,r15
   533dc:	mov    rdi,rbp
   533df:	mov    r14d,eax
   533e2:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   533e7:	mov    rdi,QWORD PTR [rsp+0x60]
   533ec:	mov    ebx,eax
   533ee:	call   9ce0 <free@plt>
   533f3:	mov    eax,DWORD PTR [rsp+0x4c]
   533f7:	mov    edx,ebx
   533f9:	or     edx,r14d
   533fc:	or     edx,eax
   533fe:	je     53242 <_obstack_memory_used@@Base+0x65c2>
   53404:	test   eax,eax
   53406:	jne    53472 <_obstack_memory_used@@Base+0x67f2>
   53408:	test   r14d,r14d
   5340b:	mov    eax,ebx
   5340d:	cmovne eax,r14d
   53411:	jmp    53472 <_obstack_memory_used@@Base+0x67f2>
   53413:	nop    DWORD PTR [rax+rax*1+0x0]
   53418:	mov    edi,0x8
   5341d:	mov    QWORD PTR [rsp+0x10],r8
   53422:	mov    QWORD PTR [rsp+0x8],r11
   53427:	mov    QWORD PTR [rsp+0x50],0x1
   53430:	mov    QWORD PTR [rsp+0x58],0x1
   53439:	call   a4a0 <malloc@plt>
   5343e:	mov    QWORD PTR [rsp+0x60],rax
   53443:	test   rax,rax
   53446:	je     534c2 <_obstack_memory_used@@Base+0x6842>
   53448:	mov    QWORD PTR [rax],r14
   5344b:	mov    r8,QWORD PTR [rsp+0x10]
   53450:	lea    r15,[rsp+0x50]
   53455:	mov    DWORD PTR [rsp+0x4c],0x0
   5345d:	mov    r11,QWORD PTR [rsp+0x8]
   53462:	jmp    532ed <_obstack_memory_used@@Base+0x666d>
   53467:	nop    WORD PTR [rax+rax*1+0x0]
   53470:	xor    eax,eax
   53472:	mov    rdx,QWORD PTR [rsp+0x68]
   53477:	sub    rdx,QWORD PTR fs:0x28
   53480:	jne    534ec <_obstack_memory_used@@Base+0x686c>
   53482:	add    rsp,0x78
   53486:	pop    rbx
   53487:	pop    rbp
   53488:	pop    r12
   5348a:	pop    r13
   5348c:	pop    r14
   5348e:	pop    r15
   53490:	ret    
   53491:	nop    DWORD PTR [rax+0x0]
   53498:	mov    eax,DWORD PTR [rsp+0x4c]
   5349c:	test   eax,eax
   5349e:	je     53331 <_obstack_memory_used@@Base+0x66b1>
   534a4:	jmp    53472 <_obstack_memory_used@@Base+0x67f2>
   534a6:	cs nop WORD PTR [rax+rax*1+0x0]
   534b0:	mov    rdi,QWORD PTR [rsp+0x60]
   534b5:	call   9ce0 <free@plt>
   534ba:	mov    eax,DWORD PTR [rsp+0x4c]
   534be:	test   eax,eax
   534c0:	jne    53472 <_obstack_memory_used@@Base+0x67f2>
   534c2:	mov    eax,0xc
   534c7:	jmp    53472 <_obstack_memory_used@@Base+0x67f2>
   534c9:	nop    DWORD PTR [rax+0x0]
   534d0:	mov    QWORD PTR [rsp+0x58],0x0
   534d9:	mov    eax,0xc
   534de:	mov    QWORD PTR [rsp+0x50],0x0
   534e7:	jmp    533bc <_obstack_memory_used@@Base+0x673c>
   534ec:	call   a0a0 <__stack_chk_fail@plt>
   534f1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   534fc:	nop    DWORD PTR [rax+0x0]
   53500:	push   r15
   53502:	pxor   xmm0,xmm0
   53506:	push   r14
   53508:	push   r13
   5350a:	push   r12
   5350c:	mov    r12,rdx
   5350f:	lea    rdx,[rsi+rsi*2]
   53513:	push   rbp
   53514:	push   rbx
   53515:	sub    rsp,0x58
   53519:	mov    QWORD PTR [rsp+0x8],rsi
   5351e:	mov    QWORD PTR [rsp+0x20],rcx
   53523:	mov    rax,QWORD PTR fs:0x28
   5352c:	mov    QWORD PTR [rsp+0x48],rax
   53531:	xor    eax,eax
   53533:	mov    rax,QWORD PTR [rdi+0x38]
   53537:	movaps XMMWORD PTR [rsp+0x30],xmm0
   5353c:	mov    QWORD PTR [rsp+0x40],0x0
   53545:	lea    r13,[rax+rdx*8]
   53549:	cmp    QWORD PTR [r13+0x8],0x0
   5354e:	jle    53744 <_obstack_memory_used@@Base+0x6ac4>
   53554:	lea    rax,[rsp+0x30]
   53559:	mov    rbp,rdi
   5355c:	xor    r15d,r15d
   5355f:	mov    QWORD PTR [rsp+0x28],rax
   53564:	jmp    535c1 <_obstack_memory_used@@Base+0x6941>
   53566:	cs nop WORD PTR [rax+rax*1+0x0]
   53570:	test   rax,rax
   53573:	jne    53638 <_obstack_memory_used@@Base+0x69b8>
   53579:	mov    rdi,r12
   5357c:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   53581:	test   rax,rax
   53584:	je     53638 <_obstack_memory_used@@Base+0x69b8>
   5358a:	add    rbx,QWORD PTR [rbp+0x38]
   5358e:	mov    rsi,QWORD PTR [rsp+0x20]
   53593:	mov    rdi,QWORD PTR [rsp+0x28]
   53598:	mov    rdx,rbx
   5359b:	call   4d7e0 <_obstack_memory_used@@Base+0xb60>
   535a0:	test   eax,eax
   535a2:	jne    53730 <_obstack_memory_used@@Base+0x6ab0>
   535a8:	nop    DWORD PTR [rax+rax*1+0x0]
   535b0:	mov    rax,QWORD PTR [r13+0x8]
   535b4:	add    r15,0x1
   535b8:	cmp    rax,r15
   535bb:	jle    53660 <_obstack_memory_used@@Base+0x69e0>
   535c1:	mov    rax,QWORD PTR [r13+0x10]
   535c5:	mov    rax,QWORD PTR [rax+r15*8]
   535c9:	cmp    QWORD PTR [rsp+0x8],rax
   535ce:	je     535b0 <_obstack_memory_used@@Base+0x6930>
   535d0:	mov    rdx,rax
   535d3:	shl    rdx,0x4
   535d7:	add    rdx,QWORD PTR [rbp+0x0]
   535db:	test   BYTE PTR [rdx+0x8],0x8
   535df:	je     535b0 <_obstack_memory_used@@Base+0x6930>
   535e1:	lea    rbx,[rax+rax*2]
   535e5:	mov    rdx,QWORD PTR [rbp+0x28]
   535e9:	mov    rdi,r13
   535ec:	shl    rbx,0x3
   535f0:	add    rdx,rbx
   535f3:	mov    r14,QWORD PTR [rdx+0x10]
   535f7:	mov    QWORD PTR [rsp+0x18],rdx
   535fc:	mov    rsi,QWORD PTR [r14]
   535ff:	mov    QWORD PTR [rsp+0x10],rsi
   53604:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   53609:	mov    rdx,QWORD PTR [rsp+0x18]
   5360e:	mov    rsi,QWORD PTR [rsp+0x10]
   53613:	cmp    QWORD PTR [rdx+0x8],0x1
   53618:	jg     53570 <_obstack_memory_used@@Base+0x68f0>
   5361e:	test   rax,rax
   53621:	jne    535b0 <_obstack_memory_used@@Base+0x6930>
   53623:	mov    rdi,r12
   53626:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   5362b:	test   rax,rax
   5362e:	je     535b0 <_obstack_memory_used@@Base+0x6930>
   53630:	jmp    5358a <_obstack_memory_used@@Base+0x690a>
   53635:	nop    DWORD PTR [rax]
   53638:	mov    r14,QWORD PTR [r14+0x8]
   5363c:	test   r14,r14
   5363f:	jle    535b0 <_obstack_memory_used@@Base+0x6930>
   53645:	mov    rsi,r14
   53648:	mov    rdi,r13
   5364b:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   53650:	test   rax,rax
   53653:	jne    535b0 <_obstack_memory_used@@Base+0x6930>
   53659:	mov    rsi,r14
   5365c:	jmp    53623 <_obstack_memory_used@@Base+0x69a3>
   5365e:	xchg   ax,ax
   53660:	mov    rbp,QWORD PTR [rsp+0x40]
   53665:	test   rax,rax
   53668:	jle    53700 <_obstack_memory_used@@Base+0x6a80>
   5366e:	mov    rax,QWORD PTR [r13+0x10]
   53672:	xor    r14d,r14d
   53675:	lea    rbx,[rsp+0x30]
   5367a:	mov    QWORD PTR [rsp+0x8],rax
   5367f:	jmp    53692 <_obstack_memory_used@@Base+0x6a12>
   53681:	nop    DWORD PTR [rax+0x0]
   53688:	add    r14,0x1
   5368c:	cmp    QWORD PTR [r13+0x8],r14
   53690:	jle    53700 <_obstack_memory_used@@Base+0x6a80>
   53692:	mov    rax,QWORD PTR [rsp+0x8]
   53697:	mov    rdi,rbx
   5369a:	mov    r15,QWORD PTR [rax+r14*8]
   5369e:	mov    rsi,r15
   536a1:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   536a6:	test   rax,rax
   536a9:	jne    53688 <_obstack_memory_used@@Base+0x6a08>
   536ab:	mov    rsi,r15
   536ae:	mov    rdi,r12
   536b1:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   536b6:	mov    rdx,rax
   536b9:	sub    rdx,0x1
   536bd:	js     53688 <_obstack_memory_used@@Base+0x6a08>
   536bf:	mov    rcx,QWORD PTR [r12+0x8]
   536c4:	cmp    rdx,rcx
   536c7:	jge    53688 <_obstack_memory_used@@Base+0x6a08>
   536c9:	lea    rsi,[rcx-0x1]
   536cd:	mov    QWORD PTR [r12+0x8],rsi
   536d2:	cmp    rax,rcx
   536d5:	jge    53688 <_obstack_memory_used@@Base+0x6a08>
   536d7:	mov    rax,QWORD PTR [r12+0x10]
   536dc:	nop    DWORD PTR [rax+0x0]
   536e0:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
   536e5:	mov    QWORD PTR [rax+rdx*8],rcx
   536e9:	add    rdx,0x1
   536ed:	cmp    rdx,QWORD PTR [r12+0x8]
   536f2:	jl     536e0 <_obstack_memory_used@@Base+0x6a60>
   536f4:	add    r14,0x1
   536f8:	cmp    QWORD PTR [r13+0x8],r14
   536fc:	jg     53692 <_obstack_memory_used@@Base+0x6a12>
   536fe:	xchg   ax,ax
   53700:	mov    rdi,rbp
   53703:	call   9ce0 <free@plt>
   53708:	xor    eax,eax
   5370a:	mov    rdx,QWORD PTR [rsp+0x48]
   5370f:	sub    rdx,QWORD PTR fs:0x28
   53718:	jne    53748 <_obstack_memory_used@@Base+0x6ac8>
   5371a:	add    rsp,0x58
   5371e:	pop    rbx
   5371f:	pop    rbp
   53720:	pop    r12
   53722:	pop    r13
   53724:	pop    r14
   53726:	pop    r15
   53728:	ret    
   53729:	nop    DWORD PTR [rax+0x0]
   53730:	mov    rdi,QWORD PTR [rsp+0x40]
   53735:	mov    DWORD PTR [rsp+0x8],eax
   53739:	call   9ce0 <free@plt>
   5373e:	mov    eax,DWORD PTR [rsp+0x8]
   53742:	jmp    5370a <_obstack_memory_used@@Base+0x6a8a>
   53744:	xor    ebp,ebp
   53746:	jmp    53700 <_obstack_memory_used@@Base+0x6a80>
   53748:	call   a0a0 <__stack_chk_fail@plt>
   5374d:	nop    DWORD PTR [rax]
   53750:	push   r15
   53752:	push   r14
   53754:	push   r13
   53756:	push   r12
   53758:	push   rbp
   53759:	push   rbx
   5375a:	sub    rsp,0x18
   5375e:	cmp    QWORD PTR [rsi+0x8],0x0
   53763:	mov    r14,QWORD PTR [rdi+0x98]
   5376a:	jle    53820 <_obstack_memory_used@@Base+0x6ba0>
   53770:	mov    r15,rdi
   53773:	mov    rbp,rsi
   53776:	mov    r13,rdx
   53779:	xor    ebx,ebx
   5377b:	jmp    5378e <_obstack_memory_used@@Base+0x6b0e>
   5377d:	nop    DWORD PTR [rax]
   53780:	add    rbx,0x1
   53784:	cmp    QWORD PTR [rbp+0x8],rbx
   53788:	jle    53820 <_obstack_memory_used@@Base+0x6ba0>
   5378e:	mov    rax,QWORD PTR [rbp+0x10]
   53792:	mov    r12,QWORD PTR [rax+rbx*8]
   53796:	mov    rax,r12
   53799:	shl    rax,0x4
   5379d:	add    rax,QWORD PTR [r14]
   537a0:	cmp    BYTE PTR [rax+0x8],0x8
   537a4:	jne    53780 <_obstack_memory_used@@Base+0x6b00>
   537a6:	mov    rax,QWORD PTR [rax]
   537a9:	cmp    rax,0x3f
   537ad:	jg     53780 <_obstack_memory_used@@Base+0x6b00>
   537af:	mov    rdx,QWORD PTR [r14+0xa0]
   537b6:	bt     rdx,rax
   537ba:	jae    53780 <_obstack_memory_used@@Base+0x6b00>
   537bc:	mov    r8,QWORD PTR [r15+0xf8]
   537c3:	mov    rdx,QWORD PTR [r15+0xe8]
   537ca:	cmp    QWORD PTR [r15+0xf0],rdx
   537d1:	je     53838 <_obstack_memory_used@@Base+0x6bb8>
   537d3:	mov    esi,0x30
   537d8:	mov    edi,0x1
   537dd:	mov    QWORD PTR [rsp+0x8],rdx
   537e2:	mov    QWORD PTR [rsp],r8
   537e6:	call   a2f0 <calloc@plt>
   537eb:	mov    r8,QWORD PTR [rsp]
   537ef:	mov    rdx,QWORD PTR [rsp+0x8]
   537f4:	mov    QWORD PTR [r8+rdx*8],rax
   537f8:	test   rax,rax
   537fb:	je     53831 <_obstack_memory_used@@Base+0x6bb1>
   537fd:	add    rdx,0x1
   53801:	mov    QWORD PTR [rax+0x8],r12
   53805:	add    rbx,0x1
   53809:	mov    QWORD PTR [r15+0xe8],rdx
   53810:	mov    QWORD PTR [rax],r13
   53813:	cmp    QWORD PTR [rbp+0x8],rbx
   53817:	jg     5378e <_obstack_memory_used@@Base+0x6b0e>
   5381d:	nop    DWORD PTR [rax]
   53820:	xor    eax,eax
   53822:	add    rsp,0x18
   53826:	pop    rbx
   53827:	pop    rbp
   53828:	pop    r12
   5382a:	pop    r13
   5382c:	pop    r14
   5382e:	pop    r15
   53830:	ret    
   53831:	mov    eax,0xc
   53836:	jmp    53822 <_obstack_memory_used@@Base+0x6ba2>
   53838:	mov    rsi,rdx
   5383b:	lea    rax,[rdx+rdx*1]
   5383f:	mov    rdi,r8
   53842:	shl    rsi,0x4
   53846:	mov    QWORD PTR [rsp],rax
   5384a:	call   a570 <realloc@plt>
   5384f:	mov    r8,rax
   53852:	test   rax,rax
   53855:	je     53831 <_obstack_memory_used@@Base+0x6bb1>
   53857:	mov    QWORD PTR [r15+0xf8],rax
   5385e:	mov    rax,QWORD PTR [rsp]
   53862:	mov    rdx,QWORD PTR [r15+0xe8]
   53869:	mov    QWORD PTR [r15+0xf0],rax
   53870:	jmp    537d3 <_obstack_memory_used@@Base+0x6b53>
   53875:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   53880:	push   r15
   53882:	push   r14
   53884:	push   r13
   53886:	mov    r13,rdi
   53889:	mov    edi,0x3800
   5388e:	push   r12
   53890:	push   rbp
   53891:	push   rbx
   53892:	sub    rsp,0xf8
   53899:	mov    QWORD PTR [rsp+0x40],rsi
   5389e:	mov    rax,QWORD PTR fs:0x28
   538a7:	mov    QWORD PTR [rsp+0xe8],rax
   538af:	xor    eax,eax
   538b1:	call   a4a0 <malloc@plt>
   538b6:	mov    QWORD PTR [rsp+0x20],rax
   538bb:	test   rax,rax
   538be:	je     53c6b <_obstack_memory_used@@Base+0x6feb>
   538c4:	mov    r10,QWORD PTR [rsp+0x40]
   538c9:	mov    rax,QWORD PTR [rsp+0x20]
   538ce:	pxor   xmm0,xmm0
   538d2:	movaps XMMWORD PTR [rsp+0x80],xmm0
   538da:	add    rax,0x1800
   538e0:	cmp    QWORD PTR [r10+0x10],0x0
   538e5:	mov    QWORD PTR [r10+0x58],0x0
   538ed:	mov    QWORD PTR [rsp+0x8],rax
   538f2:	mov    QWORD PTR [r10+0x60],0x0
   538fa:	movaps XMMWORD PTR [rsp+0x90],xmm0
   53902:	jle    542a7 <_obstack_memory_used@@Base+0x7627>
   53908:	mov    QWORD PTR [rsp+0x10],0x0
   53911:	xor    r15d,r15d
   53914:	mov    r9,r13
   53917:	mov    r8,r15
   5391a:	mov    rdi,QWORD PTR [rsp+0x10]
   5391f:	lea    rax,[rdi*8+0x0]
   53927:	mov    QWORD PTR [rsp+0x30],rax
   5392c:	mov    rax,QWORD PTR [r10+0x18]
   53930:	mov    r13,QWORD PTR [rax+rdi*8]
   53934:	shl    r13,0x4
   53938:	add    r13,QWORD PTR [r9]
   5393b:	mov    eax,DWORD PTR [r13+0x8]
   5393f:	movzx  r15d,BYTE PTR [r13+0x8]
   53944:	shr    eax,0x8
   53947:	and    ax,0x3ff
   5394b:	cmp    r15d,0x1
   5394f:	je     53ca0 <_obstack_memory_used@@Base+0x7020>
   53955:	cmp    r15d,0x3
   53959:	je     54133 <_obstack_memory_used@@Base+0x74b3>
   5395f:	cmp    r15d,0x5
   53963:	je     54030 <_obstack_memory_used@@Base+0x73b0>
   53969:	cmp    r15d,0x7
   5396d:	je     54162 <_obstack_memory_used@@Base+0x74e2>
   53973:	add    QWORD PTR [rsp+0x10],0x1
   53979:	mov    rax,QWORD PTR [rsp+0x10]
   5397e:	cmp    rax,QWORD PTR [r10+0x10]
   53982:	jl     5391a <_obstack_memory_used@@Base+0x6c9a>
   53984:	mov    r15,r8
   53987:	mov    r13,r9
   5398a:	test   r8,r8
   5398d:	jle    5430e <_obstack_memory_used@@Base+0x768e>
   53993:	mov    QWORD PTR [rsp+0x68],0x0
   5399c:	lea    rbx,[r8+0x1]
   539a0:	mov    QWORD PTR [rsp+0x60],rbx
   539a5:	shl    rbx,0x3
   539a9:	mov    rdi,rbx
   539ac:	call   a4a0 <malloc@plt>
   539b1:	mov    QWORD PTR [rsp+0x70],rax
   539b6:	mov    rbp,rax
   539b9:	test   rax,rax
   539bc:	je     53c35 <_obstack_memory_used@@Base+0x6fb5>
   539c2:	lea    rax,[r15+r15*2]
   539c6:	mov    DWORD PTR [rsp+0x5c],0x0
   539ce:	shl    rax,0x3
   539d2:	mov    rdi,rax
   539d5:	mov    QWORD PTR [rsp+0x48],rax
   539da:	call   a4a0 <malloc@plt>
   539df:	mov    QWORD PTR [rsp+0x10],rax
   539e4:	test   rax,rax
   539e7:	je     53c35 <_obstack_memory_used@@Base+0x6fb5>
   539ed:	mov    rax,QWORD PTR [rsp+0x10]
   539f2:	sub    rbx,0x8
   539f6:	mov    BYTE PTR [rsp+0x38],0x0
   539fb:	xor    ebp,ebp
   539fd:	pxor   xmm0,xmm0
   53a01:	add    rax,rbx
   53a04:	movaps XMMWORD PTR [rsp+0xc0],xmm0
   53a0c:	add    rbx,rax
   53a0f:	mov    QWORD PTR [rsp+0x28],rax
   53a14:	mov    rax,QWORD PTR [rsp+0x20]
   53a19:	mov    QWORD PTR [rsp+0x30],rbx
   53a1e:	lea    rbx,[rsp+0x60]
   53a23:	lea    r14,[rax+0x8]
   53a27:	lea    rax,[rsp+0x5c]
   53a2c:	movaps XMMWORD PTR [rsp+0xd0],xmm0
   53a34:	mov    QWORD PTR [rsp+0x18],rax
   53a39:	mov    QWORD PTR [rsp+0x68],0x0
   53a42:	xor    r12d,r12d
   53a45:	cmp    QWORD PTR [r14],0x0
   53a49:	jle    53a8f <_obstack_memory_used@@Base+0x6e0f>
   53a4b:	nop    DWORD PTR [rax+rax*1+0x0]
   53a50:	mov    rax,QWORD PTR [r14+0x8]
   53a54:	mov    rdx,QWORD PTR [rax+r12*8]
   53a58:	mov    rax,QWORD PTR [r13+0x18]
   53a5c:	mov    rax,QWORD PTR [rax+rdx*8]
   53a60:	cmp    rax,0xffffffffffffffff
   53a64:	je     53a86 <_obstack_memory_used@@Base+0x6e06>
   53a66:	lea    rdx,[rax+rax*2]
   53a6a:	mov    rax,QWORD PTR [r13+0x30]
   53a6e:	mov    rdi,rbx
   53a71:	lea    rsi,[rax+rdx*8]
   53a75:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   53a7a:	mov    DWORD PTR [rsp+0x5c],eax
   53a7e:	test   eax,eax
   53a80:	jne    53c26 <_obstack_memory_used@@Base+0x6fa6>
   53a86:	add    r12,0x1
   53a8a:	cmp    QWORD PTR [r14],r12
   53a8d:	jg     53a50 <_obstack_memory_used@@Base+0x6dd0>
   53a8f:	mov    rdi,QWORD PTR [rsp+0x18]
   53a94:	xor    ecx,ecx
   53a96:	mov    rdx,rbx
   53a99:	mov    rsi,r13
   53a9c:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   53aa1:	mov    rdi,QWORD PTR [rsp+0x10]
   53aa6:	mov    QWORD PTR [rdi+rbp*8],rax
   53aaa:	test   rax,rax
   53aad:	je     53c1a <_obstack_memory_used@@Base+0x6f9a>
   53ab3:	cmp    BYTE PTR [rax+0x68],0x0
   53ab7:	js     541a7 <_obstack_memory_used@@Base+0x7527>
   53abd:	mov    rdi,QWORD PTR [rsp+0x28]
   53ac2:	mov    QWORD PTR [rdi+rbp*8],rax
   53ac6:	mov    rdi,QWORD PTR [rsp+0x30]
   53acb:	mov    QWORD PTR [rdi+rbp*8],rax
   53acf:	lea    rdx,[rsp+0xc0]
   53ad7:	mov    rcx,QWORD PTR [rsp+0x8]
   53adc:	lea    rdi,[rsp+0xe0]
   53ae4:	mov    rax,rdx
   53ae7:	mov    rsi,QWORD PTR [rcx]
   53aea:	or     QWORD PTR [rax],rsi
   53aed:	add    rax,0x8
   53af1:	add    rcx,0x8
   53af5:	cmp    rdi,rax
   53af8:	jne    53ae7 <_obstack_memory_used@@Base+0x6e67>
   53afa:	add    rbp,0x1
   53afe:	add    QWORD PTR [rsp+0x8],0x20
   53b04:	add    r14,0x18
   53b08:	cmp    rbp,r15
   53b0b:	jne    53a39 <_obstack_memory_used@@Base+0x6db9>
   53b11:	cmp    BYTE PTR [rsp+0x38],0x0
   53b16:	mov    QWORD PTR [rsp+0x8],rdx
   53b1b:	jne    54328 <_obstack_memory_used@@Base+0x76a8>
   53b21:	mov    edi,0x8
   53b26:	mov    esi,0x100
   53b2b:	call   a2f0 <calloc@plt>
   53b30:	mov    rdi,QWORD PTR [rsp+0x40]
   53b35:	mov    QWORD PTR [rdi+0x58],rax
   53b39:	test   rax,rax
   53b3c:	je     53c26 <_obstack_memory_used@@Base+0x6fa6>
   53b42:	mov    rdi,QWORD PTR [rsp+0x20]
   53b47:	mov    r11,QWORD PTR [rsp+0x10]
   53b4c:	xor    ebx,ebx
   53b4e:	mov    r12,QWORD PTR [rsp+0x28]
   53b53:	mov    rdx,QWORD PTR [rsp+0x8]
   53b58:	lea    rbp,[rdi+0x1820]
   53b5f:	mov    rdi,rbx
   53b62:	mov    rcx,QWORD PTR [rdx+rbx*8]
   53b66:	mov    esi,0x1
   53b6b:	shl    rdi,0x9
   53b6f:	add    rdi,rax
   53b72:	test   rcx,rcx
   53b75:	je     53b95 <_obstack_memory_used@@Base+0x6f15>
   53b77:	nop    WORD PTR [rax+rax*1+0x0]
   53b80:	test   cl,0x1
   53b83:	jne    54258 <_obstack_memory_used@@Base+0x75d8>
   53b89:	add    rsi,rsi
   53b8c:	add    rdi,0x8
   53b90:	shr    rcx,1
   53b93:	jne    53b80 <_obstack_memory_used@@Base+0x6f00>
   53b95:	add    rbx,0x1
   53b99:	add    rbp,0x8
   53b9d:	cmp    rbx,0x4
   53ba1:	jne    53b5f <_obstack_memory_used@@Base+0x6edf>
   53ba3:	test   BYTE PTR [rsp+0xc1],0x4
   53bab:	je     53bd2 <_obstack_memory_used@@Base+0x6f52>
   53bad:	xor    edx,edx
   53baf:	mov    rcx,rdx
   53bb2:	mov    rdi,QWORD PTR [rsp+0x20]
   53bb7:	shl    rcx,0x5
   53bbb:	test   BYTE PTR [rdi+rcx*1+0x1801],0x4
   53bc3:	jne    542ea <_obstack_memory_used@@Base+0x766a>
   53bc9:	add    rdx,0x1
   53bcd:	cmp    rdx,r15
   53bd0:	jne    53baf <_obstack_memory_used@@Base+0x6f2f>
   53bd2:	mov    rdi,QWORD PTR [rsp+0x10]
   53bd7:	call   9ce0 <free@plt>
   53bdc:	mov    rdi,QWORD PTR [rsp+0x70]
   53be1:	call   9ce0 <free@plt>
   53be6:	mov    rax,QWORD PTR [rsp+0x20]
   53beb:	mov    rbx,QWORD PTR [rsp+0x48]
   53bf0:	lea    rbp,[rax+0x10]
   53bf4:	add    rbx,rbp
   53bf7:	mov    rdi,QWORD PTR [rbp+0x0]
   53bfb:	add    rbp,0x18
   53bff:	call   9ce0 <free@plt>
   53c04:	cmp    rbx,rbp
   53c07:	jne    53bf7 <_obstack_memory_used@@Base+0x6f77>
   53c09:	mov    rdi,QWORD PTR [rsp+0x20]
   53c0e:	call   9ce0 <free@plt>
   53c13:	mov    eax,0x1
   53c18:	jmp    53c6d <_obstack_memory_used@@Base+0x6fed>
   53c1a:	mov    ecx,DWORD PTR [rsp+0x5c]
   53c1e:	test   ecx,ecx
   53c20:	je     53ab3 <_obstack_memory_used@@Base+0x6e33>
   53c26:	mov    rdi,QWORD PTR [rsp+0x10]
   53c2b:	call   9ce0 <free@plt>
   53c30:	mov    rbp,QWORD PTR [rsp+0x70]
   53c35:	mov    rdi,rbp
   53c38:	call   9ce0 <free@plt>
   53c3d:	mov    rax,QWORD PTR [rsp+0x20]
   53c42:	lea    rbx,[rax+0x10]
   53c46:	lea    rax,[r15+r15*2]
   53c4a:	lea    rbp,[rbx+rax*8]
   53c4e:	xchg   ax,ax
   53c50:	mov    rdi,QWORD PTR [rbx]
   53c53:	add    rbx,0x18
   53c57:	call   9ce0 <free@plt>
   53c5c:	cmp    rbx,rbp
   53c5f:	jne    53c50 <_obstack_memory_used@@Base+0x6fd0>
   53c61:	mov    rdi,QWORD PTR [rsp+0x20]
   53c66:	call   9ce0 <free@plt>
   53c6b:	xor    eax,eax
   53c6d:	mov    rdx,QWORD PTR [rsp+0xe8]
   53c75:	sub    rdx,QWORD PTR fs:0x28
   53c7e:	jne    543e1 <_obstack_memory_used@@Base+0x7761>
   53c84:	add    rsp,0xf8
   53c8b:	pop    rbx
   53c8c:	pop    rbp
   53c8d:	pop    r12
   53c8f:	pop    r13
   53c91:	pop    r14
   53c93:	pop    r15
   53c95:	ret    
   53c96:	cs nop WORD PTR [rax+rax*1+0x0]
   53ca0:	movzx  ecx,BYTE PTR [r13+0x0]
   53ca5:	lea    rbp,[rsp+0x80]
   53cad:	mov    edi,0x1
   53cb2:	mov    rdx,rcx
   53cb5:	shl    rdi,cl
   53cb8:	shr    rdx,0x3
   53cbc:	and    edx,0x18
   53cbf:	or     QWORD PTR [rbp+rdx*1+0x0],rdi
   53cc4:	test   ax,ax
   53cc7:	je     53d88 <_obstack_memory_used@@Base+0x7108>
   53ccd:	test   al,0x20
   53ccf:	jne    54000 <_obstack_memory_used@@Base+0x7380>
   53cd5:	test   al,0x80
   53cd7:	jne    53fad <_obstack_memory_used@@Base+0x732d>
   53cdd:	test   al,0x4
   53cdf:	je     53d30 <_obstack_memory_used@@Base+0x70b0>
   53ce1:	cmp    r15d,0x1
   53ce5:	je     54118 <_obstack_memory_used@@Base+0x7498>
   53ceb:	cmp    DWORD PTR [r9+0xb4],0x1
   53cf3:	jle    540ce <_obstack_memory_used@@Base+0x744e>
   53cf9:	mov    rdi,QWORD PTR [r9+0x78]
   53cfd:	xor    esi,esi
   53cff:	xor    ecx,ecx
   53d01:	mov    rdx,QWORD PTR [rdi+rcx*8]
   53d05:	not    rdx
   53d08:	or     rdx,QWORD PTR [r9+rcx*8+0xb8]
   53d10:	and    rdx,QWORD PTR [rbp+rcx*8+0x0]
   53d15:	mov    QWORD PTR [rbp+rcx*8+0x0],rdx
   53d1a:	add    rcx,0x1
   53d1e:	or     rsi,rdx
   53d21:	cmp    rcx,0x4
   53d25:	jne    53d01 <_obstack_memory_used@@Base+0x7081>
   53d27:	test   rsi,rsi
   53d2a:	je     53973 <_obstack_memory_used@@Base+0x6cf3>
   53d30:	test   al,0x8
   53d32:	je     53d88 <_obstack_memory_used@@Base+0x7108>
   53d34:	cmp    r15d,0x1
   53d38:	je     54197 <_obstack_memory_used@@Base+0x7517>
   53d3e:	cmp    DWORD PTR [r9+0xb4],0x1
   53d46:	jle    5409a <_obstack_memory_used@@Base+0x741a>
   53d4c:	mov    rsi,QWORD PTR [r9+0x78]
   53d50:	xor    ecx,ecx
   53d52:	xor    edx,edx
   53d54:	mov    rax,QWORD PTR [r9+rdx*8+0xb8]
   53d5c:	and    rax,QWORD PTR [rsi+rdx*8]
   53d60:	not    rax
   53d63:	and    rax,QWORD PTR [rbp+rdx*8+0x0]
   53d68:	mov    QWORD PTR [rbp+rdx*8+0x0],rax
   53d6d:	add    rdx,0x1
   53d71:	or     rcx,rax
   53d74:	cmp    rdx,0x4
   53d78:	jne    53d54 <_obstack_memory_used@@Base+0x70d4>
   53d7a:	test   rcx,rcx
   53d7d:	je     53973 <_obstack_memory_used@@Base+0x6cf3>
   53d83:	nop    DWORD PTR [rax+rax*1+0x0]
   53d88:	mov    rbx,QWORD PTR [rsp+0x8]
   53d8d:	mov    r14,QWORD PTR [rsp+0x20]
   53d92:	xor    r12d,r12d
   53d95:	test   r8,r8
   53d98:	jle    53f17 <_obstack_memory_used@@Base+0x7297>
   53d9e:	mov    QWORD PTR [rsp+0x18],r13
   53da3:	mov    r13,r14
   53da6:	mov    r14,r8
   53da9:	mov    QWORD PTR [rsp+0x48],r9
   53dae:	mov    QWORD PTR [rsp+0x38],r10
   53db3:	jmp    53def <_obstack_memory_used@@Base+0x716f>
   53db5:	nop    DWORD PTR [rax]
   53db8:	mov    rax,QWORD PTR [rsp+0x18]
   53dbd:	movzx  ecx,BYTE PTR [rax]
   53dc0:	mov    rax,rcx
   53dc3:	shr    rax,0x3
   53dc7:	and    eax,0x18
   53dca:	add    rax,QWORD PTR [rsp+0x8]
   53dcf:	mov    rax,QWORD PTR [rax+rdx*1]
   53dd3:	shr    rax,cl
   53dd6:	test   al,0x1
   53dd8:	jne    53dfc <_obstack_memory_used@@Base+0x717c>
   53dda:	add    r12,0x1
   53dde:	add    rbx,0x20
   53de2:	add    r13,0x18
   53de6:	cmp    r12,r14
   53de9:	jge    53f0a <_obstack_memory_used@@Base+0x728a>
   53def:	mov    rdx,r12
   53df2:	shl    rdx,0x5
   53df6:	cmp    r15d,0x1
   53dfa:	je     53db8 <_obstack_memory_used@@Base+0x7138>
   53dfc:	xor    ecx,ecx
   53dfe:	xor    eax,eax
   53e00:	lea    rsi,[rsp+0xa0]
   53e08:	mov    rdx,QWORD PTR [rbp+rax*8+0x0]
   53e0d:	and    rdx,QWORD PTR [rbx+rax*8]
   53e11:	mov    QWORD PTR [rsi+rax*8],rdx
   53e15:	add    rax,0x1
   53e19:	or     rcx,rdx
   53e1c:	cmp    rax,0x4
   53e20:	jne    53e08 <_obstack_memory_used@@Base+0x7188>
   53e22:	test   rcx,rcx
   53e25:	je     53dda <_obstack_memory_used@@Base+0x715a>
   53e27:	xor    ecx,ecx
   53e29:	xor    edi,edi
   53e2b:	lea    r11,[rsp+0xc0]
   53e33:	xor    eax,eax
   53e35:	mov    rsi,QWORD PTR [rbp+rax*8+0x0]
   53e3a:	mov    rdx,rsi
   53e3d:	not    rdx
   53e40:	and    rdx,QWORD PTR [rbx+rax*8]
   53e44:	mov    QWORD PTR [r11+rax*8],rdx
   53e48:	or     rdi,rdx
   53e4b:	mov    rdx,QWORD PTR [rbx+rax*8]
   53e4f:	not    rdx
   53e52:	and    rdx,rsi
   53e55:	mov    QWORD PTR [rbp+rax*8+0x0],rdx
   53e5a:	add    rax,0x1
   53e5e:	or     rcx,rdx
   53e61:	cmp    rax,0x4
   53e65:	jne    53e35 <_obstack_memory_used@@Base+0x71b5>
   53e67:	test   rdi,rdi
   53e6a:	je     53ed5 <_obstack_memory_used@@Base+0x7255>
   53e6c:	mov    rax,r14
   53e6f:	mov    rdi,QWORD PTR [rsp+0x20]
   53e74:	mov    rsi,r13
   53e77:	mov    QWORD PTR [rsp+0x28],rcx
   53e7c:	movdqa xmm1,XMMWORD PTR [rsp+0xc0]
   53e85:	shl    rax,0x5
   53e89:	add    rax,QWORD PTR [rsp+0x8]
   53e8e:	movups XMMWORD PTR [rax],xmm1
   53e91:	movdqa xmm2,XMMWORD PTR [rsp+0xd0]
   53e9a:	movups XMMWORD PTR [rax+0x10],xmm2
   53e9e:	lea    rax,[r14+r14*2]
   53ea2:	movdqa xmm3,XMMWORD PTR [rsp+0xa0]
   53eab:	lea    rdi,[rdi+rax*8]
   53eaf:	movups XMMWORD PTR [rbx],xmm3
   53eb2:	movdqa xmm4,XMMWORD PTR [rsp+0xb0]
   53ebb:	movups XMMWORD PTR [rbx+0x10],xmm4
   53ebf:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   53ec4:	test   eax,eax
   53ec6:	jne    53fc0 <_obstack_memory_used@@Base+0x7340>
   53ecc:	mov    rcx,QWORD PTR [rsp+0x28]
   53ed1:	add    r14,0x1
   53ed5:	mov    rax,QWORD PTR [rsp+0x38]
   53eda:	mov    rdi,QWORD PTR [rsp+0x30]
   53edf:	mov    QWORD PTR [rsp+0x28],rcx
   53ee4:	mov    rax,QWORD PTR [rax+0x18]
   53ee8:	mov    rsi,QWORD PTR [rax+rdi*1]
   53eec:	mov    rdi,r13
   53eef:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   53ef4:	test   al,al
   53ef6:	je     53fc0 <_obstack_memory_used@@Base+0x7340>
   53efc:	mov    rcx,QWORD PTR [rsp+0x28]
   53f01:	test   rcx,rcx
   53f04:	jne    53dda <_obstack_memory_used@@Base+0x715a>
   53f0a:	mov    r9,QWORD PTR [rsp+0x48]
   53f0f:	mov    r10,QWORD PTR [rsp+0x38]
   53f14:	mov    r8,r14
   53f17:	cmp    r8,r12
   53f1a:	jne    53973 <_obstack_memory_used@@Base+0x6cf3>
   53f20:	mov    rax,r8
   53f23:	mov    rdi,QWORD PTR [rsp+0x30]
   53f28:	mov    QWORD PTR [rsp+0x38],r9
   53f2d:	movdqa xmm5,XMMWORD PTR [rsp+0x80]
   53f36:	shl    rax,0x5
   53f3a:	add    rax,QWORD PTR [rsp+0x8]
   53f3f:	mov    QWORD PTR [rsp+0x28],r10
   53f44:	mov    QWORD PTR [rsp+0x18],r8
   53f49:	movups XMMWORD PTR [rax],xmm5
   53f4c:	movdqa xmm6,XMMWORD PTR [rsp+0x90]
   53f55:	movups XMMWORD PTR [rax+0x10],xmm6
   53f59:	mov    rax,QWORD PTR [r10+0x18]
   53f5d:	mov    rbx,QWORD PTR [rax+rdi*1]
   53f61:	mov    rdi,QWORD PTR [rsp+0x20]
   53f66:	lea    rax,[r8+r8*2]
   53f6a:	lea    r12,[rdi+rax*8]
   53f6e:	mov    edi,0x8
   53f73:	mov    QWORD PTR [r12],0x1
   53f7b:	mov    QWORD PTR [r12+0x8],0x1
   53f84:	call   a4a0 <malloc@plt>
   53f89:	mov    r8,QWORD PTR [rsp+0x18]
   53f8e:	mov    r10,QWORD PTR [rsp+0x28]
   53f93:	test   rax,rax
   53f96:	mov    QWORD PTR [r12+0x10],rax
   53f9b:	mov    r9,QWORD PTR [rsp+0x38]
   53fa0:	je     54230 <_obstack_memory_used@@Base+0x75b0>
   53fa6:	mov    QWORD PTR [rax],rbx
   53fa9:	add    r8,0x1
   53fad:	pxor   xmm0,xmm0
   53fb1:	movaps XMMWORD PTR [rbp+0x0],xmm0
   53fb5:	movaps XMMWORD PTR [rbp+0x10],xmm0
   53fb9:	jmp    53973 <_obstack_memory_used@@Base+0x6cf3>
   53fbe:	xchg   ax,ax
   53fc0:	mov    r15,r14
   53fc3:	mov    rax,QWORD PTR [rsp+0x20]
   53fc8:	lea    rbx,[rax+0x10]
   53fcc:	lea    rax,[r15+r15*2]
   53fd0:	lea    rbp,[rbx+rax*8]
   53fd4:	nop    DWORD PTR [rax+0x0]
   53fd8:	mov    rdi,QWORD PTR [rbx]
   53fdb:	add    rbx,0x18
   53fdf:	call   9ce0 <free@plt>
   53fe4:	cmp    rbp,rbx
   53fe7:	jne    53fd8 <_obstack_memory_used@@Base+0x7358>
   53fe9:	mov    rdi,QWORD PTR [rsp+0x20]
   53fee:	call   9ce0 <free@plt>
   53ff3:	jmp    53c6b <_obstack_memory_used@@Base+0x6feb>
   53ff8:	nop    DWORD PTR [rax+rax*1+0x0]
   54000:	mov    rdx,QWORD PTR [rsp+0x80]
   54008:	pxor   xmm0,xmm0
   5400c:	movaps XMMWORD PTR [rbp+0x0],xmm0
   54010:	movaps XMMWORD PTR [rbp+0x10],xmm0
   54014:	and    dh,0x4
   54017:	je     53973 <_obstack_memory_used@@Base+0x6cf3>
   5401d:	mov    QWORD PTR [rsp+0x80],0x400
   54029:	jmp    53cd5 <_obstack_memory_used@@Base+0x7055>
   5402e:	xchg   ax,ax
   54030:	cmp    DWORD PTR [r9+0xb4],0x1
   54038:	lea    rbp,[rsp+0x80]
   54040:	jle    540ff <_obstack_memory_used@@Base+0x747f>
   54046:	mov    rcx,QWORD PTR [r9+0x78]
   5404a:	mov    rdx,rbp
   5404d:	lea    rsi,[rsp+0xa0]
   54055:	mov    rdi,QWORD PTR [rcx]
   54058:	or     QWORD PTR [rdx],rdi
   5405b:	add    rdx,0x8
   5405f:	add    rcx,0x8
   54063:	cmp    rdx,rsi
   54066:	jne    54055 <_obstack_memory_used@@Base+0x73d5>
   54068:	mov    rdx,QWORD PTR [r9+0xd8]
   5406f:	test   dl,0x40
   54072:	jne    54080 <_obstack_memory_used@@Base+0x7400>
   54074:	and    QWORD PTR [rsp+0x80],0xfffffffffffffbff
   54080:	and    edx,0x80
   54086:	je     53cc4 <_obstack_memory_used@@Base+0x7044>
   5408c:	and    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   54095:	jmp    53cc4 <_obstack_memory_used@@Base+0x7044>
   5409a:	xor    ecx,ecx
   5409c:	xor    edx,edx
   5409e:	mov    rax,QWORD PTR [r9+rdx*8+0xb8]
   540a6:	not    rax
   540a9:	and    rax,QWORD PTR [rbp+rdx*8+0x0]
   540ae:	mov    QWORD PTR [rbp+rdx*8+0x0],rax
   540b3:	add    rdx,0x1
   540b7:	or     rcx,rax
   540ba:	cmp    rdx,0x4
   540be:	jne    5409e <_obstack_memory_used@@Base+0x741e>
   540c0:	test   rcx,rcx
   540c3:	je     53973 <_obstack_memory_used@@Base+0x6cf3>
   540c9:	jmp    53d88 <_obstack_memory_used@@Base+0x7108>
   540ce:	xor    esi,esi
   540d0:	xor    edx,edx
   540d2:	mov    rcx,QWORD PTR [rbp+rdx*8+0x0]
   540d7:	and    rcx,QWORD PTR [r9+rdx*8+0xb8]
   540df:	mov    QWORD PTR [rbp+rdx*8+0x0],rcx
   540e4:	add    rdx,0x1
   540e8:	or     rsi,rcx
   540eb:	cmp    rdx,0x4
   540ef:	jne    540d2 <_obstack_memory_used@@Base+0x7452>
   540f1:	test   rsi,rsi
   540f4:	jne    53d30 <_obstack_memory_used@@Base+0x70b0>
   540fa:	jmp    53973 <_obstack_memory_used@@Base+0x6cf3>
   540ff:	pcmpeqd xmm0,xmm0
   54103:	movaps XMMWORD PTR [rsp+0x80],xmm0
   5410b:	movaps XMMWORD PTR [rsp+0x90],xmm0
   54113:	jmp    54068 <_obstack_memory_used@@Base+0x73e8>
   54118:	test   BYTE PTR [r13+0xa],0x40
   5411d:	je     53fad <_obstack_memory_used@@Base+0x732d>
   54123:	cmp    DWORD PTR [r9+0xb4],0x1
   5412b:	jg     53cf9 <_obstack_memory_used@@Base+0x7079>
   54131:	jmp    540ce <_obstack_memory_used@@Base+0x744e>
   54133:	lea    rbp,[rsp+0x80]
   5413b:	mov    rcx,QWORD PTR [r13+0x0]
   5413f:	lea    rsi,[rsp+0xa0]
   54147:	mov    rdx,rbp
   5414a:	mov    rdi,QWORD PTR [rcx]
   5414d:	or     QWORD PTR [rdx],rdi
   54150:	add    rdx,0x8
   54154:	add    rcx,0x8
   54158:	cmp    rsi,rdx
   5415b:	jne    5414a <_obstack_memory_used@@Base+0x74ca>
   5415d:	jmp    53cc4 <_obstack_memory_used@@Base+0x7044>
   54162:	mov    rdx,QWORD PTR [r9+0xd8]
   54169:	pcmpeqd xmm0,xmm0
   5416d:	lea    rbp,[rsp+0x80]
   54175:	movaps XMMWORD PTR [rsp+0x80],xmm0
   5417d:	test   dl,0x40
   54180:	jne    54080 <_obstack_memory_used@@Base+0x7400>
   54186:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffbff
   54192:	jmp    54080 <_obstack_memory_used@@Base+0x7400>
   54197:	test   BYTE PTR [r13+0xa],0x40
   5419c:	je     53d3e <_obstack_memory_used@@Base+0x70be>
   541a2:	jmp    53fad <_obstack_memory_used@@Base+0x732d>
   541a7:	mov    rdi,QWORD PTR [rsp+0x18]
   541ac:	mov    ecx,0x1
   541b1:	mov    rdx,rbx
   541b4:	mov    rsi,r13
   541b7:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   541bc:	mov    rdi,QWORD PTR [rsp+0x28]
   541c1:	mov    QWORD PTR [rdi+rbp*8],rax
   541c5:	test   rax,rax
   541c8:	je     542d4 <_obstack_memory_used@@Base+0x7654>
   541ce:	mov    rdi,QWORD PTR [rsp+0x10]
   541d3:	cmp    rax,QWORD PTR [rdi+rbp*8]
   541d7:	je     541f3 <_obstack_memory_used@@Base+0x7573>
   541d9:	movzx  edi,BYTE PTR [rsp+0x38]
   541de:	cmp    DWORD PTR [r13+0xb4],0x2
   541e6:	mov    eax,0x1
   541eb:	cmovge edi,eax
   541ee:	mov    BYTE PTR [rsp+0x38],dil
   541f3:	mov    rdi,QWORD PTR [rsp+0x18]
   541f8:	mov    ecx,0x2
   541fd:	mov    rdx,rbx
   54200:	mov    rsi,r13
   54203:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   54208:	mov    rdi,QWORD PTR [rsp+0x30]
   5420d:	mov    QWORD PTR [rdi+rbp*8],rax
   54211:	test   rax,rax
   54214:	jne    53acf <_obstack_memory_used@@Base+0x6e4f>
   5421a:	mov    eax,DWORD PTR [rsp+0x5c]
   5421e:	test   eax,eax
   54220:	je     53acf <_obstack_memory_used@@Base+0x6e4f>
   54226:	jmp    53c26 <_obstack_memory_used@@Base+0x6fa6>
   5422b:	nop    DWORD PTR [rax+rax*1+0x0]
   54230:	mov    QWORD PTR [r12+0x8],0x0
   54239:	mov    r15,r8
   5423c:	mov    QWORD PTR [r12],0x0
   54244:	test   r8,r8
   54247:	je     53c61 <_obstack_memory_used@@Base+0x6fe1>
   5424d:	jmp    53fc3 <_obstack_memory_used@@Base+0x7343>
   54252:	nop    WORD PTR [rax+rax*1+0x0]
   54258:	mov    r8,rsi
   5425b:	and    r8,QWORD PTR [rbp-0x20]
   5425f:	jne    542e5 <_obstack_memory_used@@Base+0x7665>
   54265:	mov    r8,rbp
   54268:	xor    r9d,r9d
   5426b:	mov    r10,QWORD PTR [r8]
   5426e:	add    r9,0x1
   54272:	add    r8,0x20
   54276:	and    r10,rsi
   54279:	test   r10,r10
   5427c:	je     5426b <_obstack_memory_used@@Base+0x75eb>
   5427e:	shl    r9,0x3
   54282:	mov    r8,rsi
   54285:	and    r8,QWORD PTR [r13+rbx*8+0xb8]
   5428d:	je     5429b <_obstack_memory_used@@Base+0x761b>
   5428f:	mov    r8,QWORD PTR [r12+r9*1]
   54293:	mov    QWORD PTR [rdi],r8
   54296:	jmp    53b89 <_obstack_memory_used@@Base+0x6f09>
   5429b:	mov    r8,QWORD PTR [r11+r9*1]
   5429f:	mov    QWORD PTR [rdi],r8
   542a2:	jmp    53b89 <_obstack_memory_used@@Base+0x6f09>
   542a7:	mov    rdi,QWORD PTR [rsp+0x20]
   542ac:	call   9ce0 <free@plt>
   542b1:	mov    edi,0x8
   542b6:	mov    esi,0x100
   542bb:	call   a2f0 <calloc@plt>
   542c0:	mov    rdi,QWORD PTR [rsp+0x40]
   542c5:	test   rax,rax
   542c8:	mov    QWORD PTR [rdi+0x58],rax
   542cc:	setne  al
   542cf:	jmp    53c6d <_obstack_memory_used@@Base+0x6fed>
   542d4:	mov    edx,DWORD PTR [rsp+0x5c]
   542d8:	test   edx,edx
   542da:	je     541ce <_obstack_memory_used@@Base+0x754e>
   542e0:	jmp    53c26 <_obstack_memory_used@@Base+0x6fa6>
   542e5:	xor    r9d,r9d
   542e8:	jmp    54282 <_obstack_memory_used@@Base+0x7602>
   542ea:	mov    rdi,QWORD PTR [rsp+0x30]
   542ef:	cmp    BYTE PTR [rsp+0x38],0x0
   542f4:	mov    rdx,QWORD PTR [rdi+rdx*8]
   542f8:	mov    QWORD PTR [rax+0x50],rdx
   542fc:	je     53bd2 <_obstack_memory_used@@Base+0x6f52>
   54302:	mov    QWORD PTR [rax+0x850],rdx
   54309:	jmp    53bd2 <_obstack_memory_used@@Base+0x6f52>
   5430e:	mov    rdi,QWORD PTR [rsp+0x20]
   54313:	call   9ce0 <free@plt>
   54318:	test   r15,r15
   5431b:	je     542b1 <_obstack_memory_used@@Base+0x7631>
   5431d:	jmp    53c6b <_obstack_memory_used@@Base+0x6feb>
   54322:	nop    WORD PTR [rax+rax*1+0x0]
   54328:	mov    edi,0x8
   5432d:	mov    esi,0x200
   54332:	call   a2f0 <calloc@plt>
   54337:	mov    rdi,QWORD PTR [rsp+0x40]
   5433c:	mov    QWORD PTR [rdi+0x60],rax
   54340:	test   rax,rax
   54343:	je     53c26 <_obstack_memory_used@@Base+0x6fa6>
   54349:	mov    rdi,QWORD PTR [rsp+0x20]
   5434e:	mov    rbx,QWORD PTR [rsp+0x10]
   54353:	xor    esi,esi
   54355:	mov    r12,QWORD PTR [rsp+0x28]
   5435a:	mov    rdx,QWORD PTR [rsp+0x8]
   5435f:	lea    rbp,[rdi+0x1820]
   54366:	mov    rcx,rsi
   54369:	mov    r11,QWORD PTR [rdx+rsi*8]
   5436d:	mov    edi,0x1
   54372:	shl    rcx,0x9
   54376:	add    rcx,rax
   54379:	test   r11,r11
   5437c:	je     54390 <_obstack_memory_used@@Base+0x7710>
   5437e:	test   r11b,0x1
   54382:	jne    543a3 <_obstack_memory_used@@Base+0x7723>
   54384:	add    rdi,rdi
   54387:	add    rcx,0x8
   5438b:	shr    r11,1
   5438e:	jne    5437e <_obstack_memory_used@@Base+0x76fe>
   54390:	add    rsi,0x1
   54394:	add    rbp,0x8
   54398:	cmp    rsi,0x4
   5439c:	jne    54366 <_obstack_memory_used@@Base+0x76e6>
   5439e:	jmp    53ba3 <_obstack_memory_used@@Base+0x6f23>
   543a3:	mov    r8,rdi
   543a6:	and    r8,QWORD PTR [rbp-0x20]
   543aa:	jne    543dc <_obstack_memory_used@@Base+0x775c>
   543ac:	mov    r10,rbp
   543af:	xor    r9d,r9d
   543b2:	mov    r13,QWORD PTR [r10]
   543b5:	add    r9,0x1
   543b9:	add    r10,0x20
   543bd:	mov    r8,r9
   543c0:	and    r13,rdi
   543c3:	test   r13,r13
   543c6:	je     543b2 <_obstack_memory_used@@Base+0x7732>
   543c8:	mov    r9,QWORD PTR [rbx+r8*8]
   543cc:	mov    QWORD PTR [rcx],r9
   543cf:	mov    r8,QWORD PTR [r12+r8*8]
   543d3:	mov    QWORD PTR [rcx+0x800],r8
   543da:	jmp    54384 <_obstack_memory_used@@Base+0x7704>
   543dc:	xor    r8d,r8d
   543df:	jmp    543c8 <_obstack_memory_used@@Base+0x7748>
   543e1:	call   a0a0 <__stack_chk_fail@plt>
   543e6:	cs nop WORD PTR [rax+rax*1+0x0]
   543f0:	movabs rdx,0xffffffffffffffe
   543fa:	push   r12
   543fc:	push   rbp
   543fd:	sub    rsp,0x8
   54401:	mov    rax,QWORD PTR [rdi+0x40]
   54405:	cmp    rax,rdx
   54408:	ja     54520 <_obstack_memory_used@@Base+0x78a0>
   5440e:	mov    rdx,QWORD PTR [rdi+0x58]
   54412:	add    rax,rax
   54415:	movsxd rsi,esi
   54418:	mov    rbp,rdi
   5441b:	cmp    rax,rdx
   5441e:	cmovg  rax,rdx
   54422:	cmp    rax,rsi
   54425:	cmovge rsi,rax
   54429:	call   4ccb0 <_obstack_memory_used@@Base+0x30>
   5442e:	mov    r12d,eax
   54431:	test   eax,eax
   54433:	jne    54498 <_obstack_memory_used@@Base+0x7818>
   54435:	mov    rdi,QWORD PTR [rbp+0xb8]
   5443c:	test   rdi,rdi
   5443f:	je     54462 <_obstack_memory_used@@Base+0x77e2>
   54441:	mov    rax,QWORD PTR [rbp+0x40]
   54445:	lea    rsi,[rax*8+0x8]
   5444d:	call   a570 <realloc@plt>
   54452:	test   rax,rax
   54455:	je     54520 <_obstack_memory_used@@Base+0x78a0>
   5445b:	mov    QWORD PTR [rbp+0xb8],rax
   54462:	cmp    BYTE PTR [rbp+0x88],0x0
   54469:	mov    eax,DWORD PTR [rbp+0x90]
   5446f:	je     544a8 <_obstack_memory_used@@Base+0x7828>
   54471:	mov    rdi,rbp
   54474:	cmp    eax,0x1
   54477:	jle    54510 <_obstack_memory_used@@Base+0x7890>
   5447d:	add    rsp,0x8
   54481:	pop    rbp
   54482:	pop    r12
   54484:	jmp    4cf50 <_obstack_memory_used@@Base+0x2d0>
   54489:	nop    DWORD PTR [rax+0x0]
   54490:	mov    rdi,rbp
   54493:	call   4cd50 <_obstack_memory_used@@Base+0xd0>
   54498:	add    rsp,0x8
   5449c:	mov    eax,r12d
   5449f:	pop    rbp
   544a0:	pop    r12
   544a2:	ret    
   544a3:	nop    DWORD PTR [rax+rax*1+0x0]
   544a8:	cmp    eax,0x1
   544ab:	jg     54490 <_obstack_memory_used@@Base+0x7810>
   544ad:	mov    rcx,QWORD PTR [rbp+0x78]
   544b1:	test   rcx,rcx
   544b4:	je     54498 <_obstack_memory_used@@Base+0x7818>
   544b6:	mov    rax,QWORD PTR [rbp+0x58]
   544ba:	mov    rsi,QWORD PTR [rbp+0x40]
   544be:	cmp    rsi,rax
   544c1:	cmovg  rsi,rax
   544c5:	mov    rax,QWORD PTR [rbp+0x30]
   544c9:	cmp    rsi,rax
   544cc:	jg     544d4 <_obstack_memory_used@@Base+0x7854>
   544ce:	jmp    54538 <_obstack_memory_used@@Base+0x78b8>
   544d0:	mov    rcx,QWORD PTR [rbp+0x78]
   544d4:	mov    rdx,QWORD PTR [rbp+0x0]
   544d8:	add    rdx,rax
   544db:	add    rdx,QWORD PTR [rbp+0x28]
   544df:	movzx  edx,BYTE PTR [rdx]
   544e2:	movzx  ecx,BYTE PTR [rcx+rdx*1]
   544e6:	mov    rdx,QWORD PTR [rbp+0x8]
   544ea:	mov    BYTE PTR [rdx+rax*1],cl
   544ed:	add    rax,0x1
   544f1:	cmp    rsi,rax
   544f4:	jne    544d0 <_obstack_memory_used@@Base+0x7850>
   544f6:	mov    QWORD PTR [rbp+0x30],rsi
   544fa:	mov    eax,r12d
   544fd:	mov    QWORD PTR [rbp+0x38],rsi
   54501:	add    rsp,0x8
   54505:	pop    rbp
   54506:	pop    r12
   54508:	ret    
   54509:	nop    DWORD PTR [rax+0x0]
   54510:	call   4d5e0 <_obstack_memory_used@@Base+0x960>
   54515:	add    rsp,0x8
   54519:	mov    eax,r12d
   5451c:	pop    rbp
   5451d:	pop    r12
   5451f:	ret    
   54520:	mov    r12d,0xc
   54526:	add    rsp,0x8
   5452a:	mov    eax,r12d
   5452d:	pop    rbp
   5452e:	pop    r12
   54530:	ret    
   54531:	nop    DWORD PTR [rax+0x0]
   54538:	mov    rsi,rax
   5453b:	jmp    544f6 <_obstack_memory_used@@Base+0x7876>
   5453d:	nop    DWORD PTR [rax]
   54540:	push   r12
   54542:	push   rbp
   54543:	mov    rbp,rsi
   54546:	push   rbx
   54547:	mov    rax,QWORD PTR [rdi+0x40]
   5454b:	mov    rbx,rdi
   5454e:	mov    r12,QWORD PTR [rdi+0xc0]
   54555:	cmp    rax,rsi
   54558:	jg     54580 <_obstack_memory_used@@Base+0x7900>
   5455a:	cmp    rax,QWORD PTR [rdi+0x58]
   5455e:	jge    54580 <_obstack_memory_used@@Base+0x7900>
   54560:	lea    esi,[rbp+0x1]
   54563:	mov    rdi,rbx
   54566:	call   543f0 <_obstack_memory_used@@Base+0x7770>
   5456b:	test   eax,eax
   5456d:	jne    54576 <_obstack_memory_used@@Base+0x78f6>
   5456f:	cmp    r12,rbp
   54572:	jl     545a0 <_obstack_memory_used@@Base+0x7920>
   54574:	xor    eax,eax
   54576:	pop    rbx
   54577:	pop    rbp
   54578:	pop    r12
   5457a:	ret    
   5457b:	nop    DWORD PTR [rax+rax*1+0x0]
   54580:	mov    rax,QWORD PTR [rbx+0x30]
   54584:	cmp    rax,rbp
   54587:	jg     5456f <_obstack_memory_used@@Base+0x78ef>
   54589:	cmp    rax,QWORD PTR [rbx+0x58]
   5458d:	jge    5456f <_obstack_memory_used@@Base+0x78ef>
   5458f:	lea    esi,[rbp+0x1]
   54592:	mov    rdi,rbx
   54595:	call   543f0 <_obstack_memory_used@@Base+0x7770>
   5459a:	test   eax,eax
   5459c:	je     5456f <_obstack_memory_used@@Base+0x78ef>
   5459e:	jmp    54576 <_obstack_memory_used@@Base+0x78f6>
   545a0:	mov    rax,QWORD PTR [rbx+0xb8]
   545a7:	mov    rdx,rbp
   545aa:	xor    esi,esi
   545ac:	sub    rdx,r12
   545af:	shl    rdx,0x3
   545b3:	lea    rdi,[rax+r12*8+0x8]
   545b8:	call   a1b0 <memset@plt>
   545bd:	mov    QWORD PTR [rbx+0xc0],rbp
   545c4:	jmp    54574 <_obstack_memory_used@@Base+0x78f4>
   545c6:	cs nop WORD PTR [rax+rax*1+0x0]
   545d0:	push   r13
   545d2:	push   r12
   545d4:	push   rbp
   545d5:	push   rbx
   545d6:	mov    rbx,rdi
   545d9:	sub    rsp,0x8
   545dd:	call   9e40 <__errno_location@plt>
   545e2:	cmp    BYTE PTR [rbx+0x8],0x0
   545e6:	mov    r12d,DWORD PTR [rax]
   545e9:	mov    rbp,rax
   545ec:	jne    54630 <_obstack_memory_used@@Base+0x79b0>
   545ee:	lea    rdi,[rip+0x12166]        # 6675b <_obstack_memory_used@@Base+0x19adb>
   545f5:	call   a740 <unsetenv@plt>
   545fa:	test   eax,eax
   545fc:	je     54649 <_obstack_memory_used@@Base+0x79c9>
   545fe:	mov    r12d,DWORD PTR [rbp+0x0]
   54602:	xor    r13d,r13d
   54605:	nop    DWORD PTR [rax]
   54608:	mov    rdi,rbx
   5460b:	mov    rbx,QWORD PTR [rbx]
   5460e:	call   9ce0 <free@plt>
   54613:	test   rbx,rbx
   54616:	jne    54608 <_obstack_memory_used@@Base+0x7988>
   54618:	mov    DWORD PTR [rbp+0x0],r12d
   5461c:	add    rsp,0x8
   54620:	mov    eax,r13d
   54623:	pop    rbx
   54624:	pop    rbp
   54625:	pop    r12
   54627:	pop    r13
   54629:	ret    
   5462a:	nop    WORD PTR [rax+rax*1+0x0]
   54630:	lea    rsi,[rbx+0x9]
   54634:	mov    edx,0x1
   54639:	lea    rdi,[rip+0x1211b]        # 6675b <_obstack_memory_used@@Base+0x19adb>
   54640:	call   9f80 <setenv@plt>
   54645:	test   eax,eax
   54647:	jne    545fe <_obstack_memory_used@@Base+0x797e>
   54649:	call   a440 <tzset@plt>
   5464e:	mov    r13d,0x1
   54654:	jmp    54608 <_obstack_memory_used@@Base+0x7988>
   54656:	cs nop WORD PTR [rax+rax*1+0x0]
   54660:	push   r15
   54662:	mov    r15,rdx
   54665:	push   r14
   54667:	mov    r14d,r8d
   5466a:	push   r13
   5466c:	mov    r13,rcx
   5466f:	push   r12
   54671:	mov    r12,rdi
   54674:	push   rbp
   54675:	mov    rbp,rsi
   54678:	push   rbx
   54679:	sub    rsp,0x18
   5467d:	mov    rax,QWORD PTR fs:0x28
   54686:	mov    QWORD PTR [rsp+0x8],rax
   5468b:	xor    eax,eax
   5468d:	call   9e40 <__errno_location@plt>
   54692:	mov    edx,0xa
   54697:	mov    rsi,rsp
   5469a:	mov    rdi,rbp
   5469d:	mov    DWORD PTR [rax],0x0
   546a3:	mov    rbx,rax
   546a6:	call   a710 <strtoumax@plt>
   546ab:	mov    rdx,QWORD PTR [rsp]
   546af:	cmp    BYTE PTR [rdx],0x0
   546b2:	jne    546f0 <_obstack_memory_used@@Base+0x7a70>
   546b4:	mov    r8d,DWORD PTR [rbx]
   546b7:	test   r8d,r8d
   546ba:	jne    546f0 <_obstack_memory_used@@Base+0x7a70>
   546bc:	mov    rbx,rax
   546bf:	shr    rbx,0x20
   546c3:	jne    54729 <_obstack_memory_used@@Base+0x7aa9>
   546c5:	mov    QWORD PTR [r12],rax
   546c9:	mov    rax,QWORD PTR [rsp+0x8]
   546ce:	sub    rax,QWORD PTR fs:0x28
   546d7:	jne    54737 <_obstack_memory_used@@Base+0x7ab7>
   546d9:	add    rsp,0x18
   546dd:	mov    eax,r8d
   546e0:	pop    rbx
   546e1:	pop    rbp
   546e2:	pop    r12
   546e4:	pop    r13
   546e6:	pop    r14
   546e8:	pop    r15
   546ea:	ret    
   546eb:	nop    DWORD PTR [rax+rax*1+0x0]
   546f0:	mov    edx,0x5
   546f5:	lea    rsi,[rip+0x1876c]        # 6ce68 <_obstack_memory_used@@Base+0x201e8>
   546fc:	xor    edi,edi
   546fe:	call   a040 <dcgettext@plt>
   54703:	sub    rsp,0x8
   54707:	mov    r8d,r14d
   5470a:	mov    r9,r15
   5470d:	push   rbp
   5470e:	mov    rdx,rax
   54711:	mov    rcx,r13
   54714:	xor    eax,eax
   54716:	xor    esi,esi
   54718:	xor    edi,edi
   5471a:	call   a640 <error@plt>
   5471f:	pop    rax
   54720:	mov    r8d,0xffffffff
   54726:	pop    rdx
   54727:	jmp    546c9 <_obstack_memory_used@@Base+0x7a49>
   54729:	mov    edx,0x5
   5472e:	lea    rsi,[rip+0x18749]        # 6ce7e <_obstack_memory_used@@Base+0x201fe>
   54735:	jmp    546fc <_obstack_memory_used@@Base+0x7a7c>
   54737:	call   a0a0 <__stack_chk_fail@plt>
   5473c:	nop    DWORD PTR [rax+0x0]
   54740:	push   r15
   54742:	push   r14
   54744:	push   r13
   54746:	push   r12
   54748:	push   rbp
   54749:	push   rbx
   5474a:	sub    rsp,0x58
   5474e:	mov    r14,QWORD PTR [r9+0x20]
   54752:	mov    DWORD PTR [rsp+0x38],edi
   54756:	movzx  eax,BYTE PTR [r14]
   5475a:	mov    QWORD PTR [rsp+0x20],rsi
   5475f:	mov    rbp,r14
   54762:	mov    QWORD PTR [rsp+0x28],rdx
   54767:	mov    QWORD PTR [rsp],rcx
   5476b:	mov    DWORD PTR [rsp+0x14],r8d
   54770:	mov    QWORD PTR [rsp+0x8],r9
   54775:	mov    BYTE PTR [rsp+0x37],al
   54779:	test   al,al
   5477b:	je     54b27 <_obstack_memory_used@@Base+0x7ea7>
   54781:	cmp    al,0x3d
   54783:	je     54b27 <_obstack_memory_used@@Base+0x7ea7>
   54789:	nop    DWORD PTR [rax+0x0]
   54790:	movzx  eax,BYTE PTR [rbp+0x1]
   54794:	add    rbp,0x1
   54798:	test   al,al
   5479a:	je     547a0 <_obstack_memory_used@@Base+0x7b20>
   5479c:	cmp    al,0x3d
   5479e:	jne    54790 <_obstack_memory_used@@Base+0x7b10>
   547a0:	mov    r13,rbp
   547a3:	sub    r13,r14
   547a6:	mov    rbx,QWORD PTR [rsp]
   547aa:	xor    r12d,r12d
   547ad:	mov    rax,QWORD PTR [rbx]
   547b0:	mov    QWORD PTR [rsp+0x18],rax
   547b5:	mov    r15,rax
   547b8:	test   rax,rax
   547bb:	jne    547cb <_obstack_memory_used@@Base+0x7b4b>
   547bd:	jmp    548ca <_obstack_memory_used@@Base+0x7c4a>
   547c2:	nop    WORD PTR [rax+rax*1+0x0]
   547c8:	mov    r12d,ecx
   547cb:	mov    rdx,r13
   547ce:	mov    rsi,r14
   547d1:	mov    rdi,r15
   547d4:	call   9e50 <strncmp@plt>
   547d9:	test   eax,eax
   547db:	jne    547ee <_obstack_memory_used@@Base+0x7b6e>
   547dd:	mov    rdi,r15
   547e0:	call   a060 <strlen@plt>
   547e5:	cmp    rax,r13
   547e8:	je     54940 <_obstack_memory_used@@Base+0x7cc0>
   547ee:	mov    r15,QWORD PTR [rbx+0x20]
   547f2:	add    rbx,0x20
   547f6:	lea    ecx,[r12+0x1]
   547fb:	test   r15,r15
   547fe:	jne    547c8 <_obstack_memory_used@@Base+0x7b48>
   54800:	mov    r8,QWORD PTR [rsp]
   54804:	mov    DWORD PTR [rsp+0x4c],ecx
   54808:	xor    r9d,r9d
   5480b:	xor    ebx,ebx
   5480d:	mov    DWORD PTR [rsp+0x48],0x0
   54815:	mov    rdi,QWORD PTR [rsp+0x18]
   5481a:	mov    DWORD PTR [rsp+0x3c],0xffffffff
   54822:	mov    DWORD PTR [rsp+0x30],0x0
   5482a:	mov    QWORD PTR [rsp+0x40],rbp
   5482f:	mov    rbp,r14
   54832:	mov    r14,r8
   54835:	mov    DWORD PTR [rsp+0x18],r12d
   5483a:	mov    r12,r9
   5483d:	mov    rdx,r13
   54840:	mov    rsi,rbp
   54843:	call   9e50 <strncmp@plt>
   54848:	test   eax,eax
   5484a:	jne    54890 <_obstack_memory_used@@Base+0x7c10>
   5484c:	test   rbx,rbx
   5484f:	je     549d0 <_obstack_memory_used@@Base+0x7d50>
   54855:	mov    eax,DWORD PTR [rsp+0x14]
   54859:	test   eax,eax
   5485b:	je     54988 <_obstack_memory_used@@Base+0x7d08>
   54861:	mov    r11d,DWORD PTR [rsp+0x30]
   54866:	test   r11d,r11d
   54869:	jne    54890 <_obstack_memory_used@@Base+0x7c10>
   5486b:	mov    r10d,DWORD PTR [rsp+0x90]
   54873:	test   r10d,r10d
   54876:	je     549f8 <_obstack_memory_used@@Base+0x7d78>
   5487c:	test   r15,r15
   5487f:	je     54b4f <_obstack_memory_used@@Base+0x7ecf>
   54885:	mov    BYTE PTR [r15+r12*1],0x1
   5488a:	nop    WORD PTR [rax+rax*1+0x0]
   54890:	mov    rdi,QWORD PTR [r14+0x20]
   54894:	add    r14,0x20
   54898:	add    r12,0x1
   5489c:	test   rdi,rdi
   5489f:	jne    5483d <_obstack_memory_used@@Base+0x7bbd>
   548a1:	mov    r14,rbp
   548a4:	movsxd r12,DWORD PTR [rsp+0x18]
   548a9:	mov    rbp,QWORD PTR [rsp+0x40]
   548ae:	test   r15,r15
   548b1:	jne    54a6a <_obstack_memory_used@@Base+0x7dea>
   548b7:	mov    r9d,DWORD PTR [rsp+0x30]
   548bc:	test   r9d,r9d
   548bf:	jne    54a6a <_obstack_memory_used@@Base+0x7dea>
   548c5:	test   rbx,rbx
   548c8:	jne    54940 <_obstack_memory_used@@Base+0x7cc0>
   548ca:	mov    eax,DWORD PTR [rsp+0x14]
   548ce:	test   eax,eax
   548d0:	je     54901 <_obstack_memory_used@@Base+0x7c81>
   548d2:	mov    rax,QWORD PTR [rsp+0x8]
   548d7:	mov    rdx,QWORD PTR [rsp+0x20]
   548dc:	movsxd rax,DWORD PTR [rax]
   548df:	mov    rax,QWORD PTR [rdx+rax*8]
   548e3:	cmp    BYTE PTR [rax+0x1],0x2d
   548e7:	je     54901 <_obstack_memory_used@@Base+0x7c81>
   548e9:	movsx  esi,BYTE PTR [rsp+0x37]
   548ee:	mov    rdi,QWORD PTR [rsp+0x28]
   548f3:	call   a0f0 <strchr@plt>
   548f8:	test   rax,rax
   548fb:	jne    54bd8 <_obstack_memory_used@@Base+0x7f58>
   54901:	mov    ecx,DWORD PTR [rsp+0x90]
   54908:	test   ecx,ecx
   5490a:	jne    54a23 <_obstack_memory_used@@Base+0x7da3>
   54910:	mov    rax,QWORD PTR [rsp+0x8]
   54915:	add    DWORD PTR [rax],0x1
   54918:	mov    QWORD PTR [rax+0x20],0x0
   54920:	mov    DWORD PTR [rax+0x8],0x0
   54927:	add    rsp,0x58
   5492b:	mov    eax,0x3f
   54930:	pop    rbx
   54931:	pop    rbp
   54932:	pop    r12
   54934:	pop    r13
   54936:	pop    r14
   54938:	pop    r15
   5493a:	ret    
   5493b:	nop    DWORD PTR [rax+rax*1+0x0]
   54940:	mov    rsi,QWORD PTR [rsp+0x8]
   54945:	mov    ecx,DWORD PTR [rbx+0x8]
   54948:	mov    edx,DWORD PTR [rsi]
   5494a:	mov    QWORD PTR [rsi+0x20],0x0
   54952:	lea    eax,[rdx+0x1]
   54955:	mov    DWORD PTR [rsi],eax
   54957:	cmp    BYTE PTR [rbp+0x0],0x0
   5495b:	jne    549b8 <_obstack_memory_used@@Base+0x7d38>
   5495d:	cmp    ecx,0x1
   54960:	je     54aff <_obstack_memory_used@@Base+0x7e7f>
   54966:	mov    rdx,QWORD PTR [rbx+0x10]
   5496a:	mov    eax,DWORD PTR [rbx+0x18]
   5496d:	test   rdx,rdx
   54970:	je     54976 <_obstack_memory_used@@Base+0x7cf6>
   54972:	mov    DWORD PTR [rdx],eax
   54974:	xor    eax,eax
   54976:	add    rsp,0x58
   5497a:	pop    rbx
   5497b:	pop    rbp
   5497c:	pop    r12
   5497e:	pop    r13
   54980:	pop    r14
   54982:	pop    r15
   54984:	ret    
   54985:	nop    DWORD PTR [rax]
   54988:	mov    eax,DWORD PTR [r14+0x8]
   5498c:	cmp    DWORD PTR [rbx+0x8],eax
   5498f:	jne    54861 <_obstack_memory_used@@Base+0x7be1>
   54995:	mov    rax,QWORD PTR [r14+0x10]
   54999:	cmp    QWORD PTR [rbx+0x10],rax
   5499d:	jne    54861 <_obstack_memory_used@@Base+0x7be1>
   549a3:	mov    eax,DWORD PTR [r14+0x18]
   549a7:	cmp    DWORD PTR [rbx+0x18],eax
   549aa:	jne    54861 <_obstack_memory_used@@Base+0x7be1>
   549b0:	jmp    54890 <_obstack_memory_used@@Base+0x7c10>
   549b5:	nop    DWORD PTR [rax]
   549b8:	test   ecx,ecx
   549ba:	je     54b2f <_obstack_memory_used@@Base+0x7eaf>
   549c0:	add    rbp,0x1
   549c4:	mov    QWORD PTR [rsi+0x10],rbp
   549c8:	jmp    54966 <_obstack_memory_used@@Base+0x7ce6>
   549ca:	nop    WORD PTR [rax+rax*1+0x0]
   549d0:	mov    rbx,r14
   549d3:	mov    rdi,QWORD PTR [r14+0x20]
   549d7:	mov    DWORD PTR [rsp+0x3c],r12d
   549dc:	add    r14,0x20
   549e0:	add    r12,0x1
   549e4:	test   rdi,rdi
   549e7:	jne    5483d <_obstack_memory_used@@Base+0x7bbd>
   549ed:	jmp    548a1 <_obstack_memory_used@@Base+0x7c21>
   549f2:	nop    WORD PTR [rax+rax*1+0x0]
   549f8:	mov    DWORD PTR [rsp+0x30],0x1
   54a00:	test   r15,r15
   54a03:	jne    54885 <_obstack_memory_used@@Base+0x7c05>
   54a09:	mov    rdi,QWORD PTR [r14+0x20]
   54a0d:	add    r14,0x20
   54a11:	add    r12,0x1
   54a15:	test   rdi,rdi
   54a18:	jne    5483d <_obstack_memory_used@@Base+0x7bbd>
   54a1e:	jmp    548a1 <_obstack_memory_used@@Base+0x7c21>
   54a23:	mov    rax,QWORD PTR [rsp+0x20]
   54a28:	xor    edi,edi
   54a2a:	mov    edx,0x5
   54a2f:	lea    rsi,[rip+0x18652]        # 6d088 <_obstack_memory_used@@Base+0x20408>
   54a36:	mov    r12,QWORD PTR [rax]
   54a39:	call   a040 <dcgettext@plt>
   54a3e:	mov    r8,QWORD PTR [rsp+0x98]
   54a46:	mov    r9,r14
   54a49:	mov    esi,0x1
   54a4e:	mov    rdx,rax
   54a51:	mov    rax,QWORD PTR [rip+0x27590]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   54a58:	mov    rcx,r12
   54a5b:	mov    rdi,QWORD PTR [rax]
   54a5e:	xor    eax,eax
   54a60:	call   a840 <__fprintf_chk@plt>
   54a65:	jmp    54910 <_obstack_memory_used@@Base+0x7c90>
   54a6a:	mov    r8d,DWORD PTR [rsp+0x90]
   54a72:	test   r8d,r8d
   54a75:	je     54ac5 <_obstack_memory_used@@Base+0x7e45>
   54a77:	mov    edi,DWORD PTR [rsp+0x30]
   54a7b:	test   edi,edi
   54a7d:	je     54c13 <_obstack_memory_used@@Base+0x7f93>
   54a83:	mov    rax,QWORD PTR [rsp+0x20]
   54a88:	mov    edx,0x5
   54a8d:	lea    rsi,[rip+0x185a4]        # 6d038 <_obstack_memory_used@@Base+0x203b8>
   54a94:	xor    edi,edi
   54a96:	mov    r12,QWORD PTR [rax]
   54a99:	call   a040 <dcgettext@plt>
   54a9e:	mov    r8,QWORD PTR [rsp+0x98]
   54aa6:	mov    r9,r14
   54aa9:	mov    esi,0x1
   54aae:	mov    rdx,rax
   54ab1:	mov    rax,QWORD PTR [rip+0x27530]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   54ab8:	mov    rcx,r12
   54abb:	mov    rdi,QWORD PTR [rax]
   54abe:	xor    eax,eax
   54ac0:	call   a840 <__fprintf_chk@plt>
   54ac5:	mov    esi,DWORD PTR [rsp+0x48]
   54ac9:	test   esi,esi
   54acb:	jne    54bcb <_obstack_memory_used@@Base+0x7f4b>
   54ad1:	mov    r14,QWORD PTR [rsp+0x8]
   54ad6:	mov    rbx,QWORD PTR [r14+0x20]
   54ada:	mov    rdi,rbx
   54add:	call   a060 <strlen@plt>
   54ae2:	add    DWORD PTR [r14],0x1
   54ae6:	add    rbx,rax
   54ae9:	mov    DWORD PTR [r14+0x8],0x0
   54af1:	mov    eax,0x3f
   54af6:	mov    QWORD PTR [r14+0x20],rbx
   54afa:	jmp    54976 <_obstack_memory_used@@Base+0x7cf6>
   54aff:	cmp    eax,DWORD PTR [rsp+0x38]
   54b03:	jge    54be2 <_obstack_memory_used@@Base+0x7f62>
   54b09:	mov    rcx,QWORD PTR [rsp+0x8]
   54b0e:	add    edx,0x2
   54b11:	cdqe   
   54b13:	mov    DWORD PTR [rcx],edx
   54b15:	mov    rdx,QWORD PTR [rsp+0x20]
   54b1a:	mov    rax,QWORD PTR [rdx+rax*8]
   54b1e:	mov    QWORD PTR [rcx+0x10],rax
   54b22:	jmp    54966 <_obstack_memory_used@@Base+0x7ce6>
   54b27:	xor    r13d,r13d
   54b2a:	jmp    547a6 <_obstack_memory_used@@Base+0x7b26>
   54b2f:	mov    edx,DWORD PTR [rsp+0x90]
   54b36:	test   edx,edx
   54b38:	jne    54b81 <_obstack_memory_used@@Base+0x7f01>
   54b3a:	mov    eax,DWORD PTR [rbx+0x18]
   54b3d:	mov    rdx,QWORD PTR [rsp+0x8]
   54b42:	mov    DWORD PTR [rdx+0x8],eax
   54b45:	mov    eax,0x3f
   54b4a:	jmp    54976 <_obstack_memory_used@@Base+0x7cf6>
   54b4f:	movsxd rdi,DWORD PTR [rsp+0x4c]
   54b54:	mov    esi,0x1
   54b59:	call   a2f0 <calloc@plt>
   54b5e:	mov    r15,rax
   54b61:	test   rax,rax
   54b64:	je     54d17 <_obstack_memory_used@@Base+0x8097>
   54b6a:	movsxd rax,DWORD PTR [rsp+0x3c]
   54b6f:	mov    DWORD PTR [rsp+0x48],0x1
   54b77:	mov    BYTE PTR [r15+rax*1],0x1
   54b7c:	jmp    54885 <_obstack_memory_used@@Base+0x7c05>
   54b81:	mov    rax,QWORD PTR [rsp+0x20]
   54b86:	xor    edi,edi
   54b88:	mov    edx,0x5
   54b8d:	mov    rbp,QWORD PTR [rbx]
   54b90:	lea    rsi,[rip+0x18511]        # 6d0a8 <_obstack_memory_used@@Base+0x20428>
   54b97:	mov    r12,QWORD PTR [rax]
   54b9a:	call   a040 <dcgettext@plt>
   54b9f:	mov    r8,QWORD PTR [rsp+0x98]
   54ba7:	mov    r9,rbp
   54baa:	mov    esi,0x1
   54baf:	mov    rdx,rax
   54bb2:	mov    rax,QWORD PTR [rip+0x2742f]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   54bb9:	mov    rcx,r12
   54bbc:	mov    rdi,QWORD PTR [rax]
   54bbf:	xor    eax,eax
   54bc1:	call   a840 <__fprintf_chk@plt>
   54bc6:	jmp    54b3a <_obstack_memory_used@@Base+0x7eba>
   54bcb:	mov    rdi,r15
   54bce:	call   9ce0 <free@plt>
   54bd3:	jmp    54ad1 <_obstack_memory_used@@Base+0x7e51>
   54bd8:	mov    eax,0xffffffff
   54bdd:	jmp    54976 <_obstack_memory_used@@Base+0x7cf6>
   54be2:	mov    eax,DWORD PTR [rsp+0x90]
   54be9:	test   eax,eax
   54beb:	jne    54ccd <_obstack_memory_used@@Base+0x804d>
   54bf1:	mov    eax,DWORD PTR [rbx+0x18]
   54bf4:	mov    rdx,QWORD PTR [rsp+0x8]
   54bf9:	mov    DWORD PTR [rdx+0x8],eax
   54bfc:	mov    rax,QWORD PTR [rsp+0x28]
   54c01:	cmp    BYTE PTR [rax],0x3a
   54c04:	setne  al
   54c07:	movzx  eax,al
   54c0a:	lea    eax,[rax+rax*4+0x3a]
   54c0e:	jmp    54976 <_obstack_memory_used@@Base+0x7cf6>
   54c13:	mov    rbx,QWORD PTR [rip+0x273ce]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   54c1a:	lea    r12,[r15+r12*1+0x1]
   54c1f:	lea    r14,[rip+0x18273]        # 6ce99 <_obstack_memory_used@@Base+0x20219>
   54c26:	mov    rdi,QWORD PTR [rbx]
   54c29:	call   a220 <flockfile@plt>
   54c2e:	mov    rax,QWORD PTR [rsp+0x8]
   54c33:	mov    edx,0x5
   54c38:	xor    edi,edi
   54c3a:	lea    rsi,[rip+0x18417]        # 6d058 <_obstack_memory_used@@Base+0x203d8>
   54c41:	mov    rbp,QWORD PTR [rax+0x20]
   54c45:	mov    rax,QWORD PTR [rsp+0x20]
   54c4a:	mov    r13,QWORD PTR [rax]
   54c4d:	call   a040 <dcgettext@plt>
   54c52:	mov    rdi,QWORD PTR [rbx]
   54c55:	mov    r9,rbp
   54c58:	mov    esi,0x1
   54c5d:	mov    r8,QWORD PTR [rsp+0x98]
   54c65:	mov    rdx,rax
   54c68:	mov    rcx,r13
   54c6b:	xor    eax,eax
   54c6d:	mov    rbp,r15
   54c70:	call   a840 <__fprintf_chk@plt>
   54c75:	mov    r13,QWORD PTR [rsp]
   54c79:	jmp    54c8d <_obstack_memory_used@@Base+0x800d>
   54c7b:	nop    DWORD PTR [rax+rax*1+0x0]
   54c80:	add    rbp,0x1
   54c84:	add    r13,0x20
   54c88:	cmp    r12,rbp
   54c8b:	je     54cb3 <_obstack_memory_used@@Base+0x8033>
   54c8d:	cmp    BYTE PTR [rbp+0x0],0x0
   54c91:	je     54c80 <_obstack_memory_used@@Base+0x8000>
   54c93:	mov    r8,QWORD PTR [r13+0x0]
   54c97:	mov    rdi,QWORD PTR [rbx]
   54c9a:	mov    rdx,r14
   54c9d:	mov    esi,0x1
   54ca2:	mov    rcx,QWORD PTR [rsp+0x98]
   54caa:	xor    eax,eax
   54cac:	call   a840 <__fprintf_chk@plt>
   54cb1:	jmp    54c80 <_obstack_memory_used@@Base+0x8000>
   54cb3:	mov    rsi,QWORD PTR [rbx]
   54cb6:	mov    edi,0xa
   54cbb:	call   a260 <fputc@plt>
   54cc0:	mov    rdi,QWORD PTR [rbx]
   54cc3:	call   9df0 <funlockfile@plt>
   54cc8:	jmp    54ac5 <_obstack_memory_used@@Base+0x7e45>
   54ccd:	mov    rax,QWORD PTR [rsp+0x20]
   54cd2:	xor    edi,edi
   54cd4:	mov    edx,0x5
   54cd9:	mov    rbp,QWORD PTR [rbx]
   54cdc:	lea    rsi,[rip+0x183f5]        # 6d0d8 <_obstack_memory_used@@Base+0x20458>
   54ce3:	mov    r12,QWORD PTR [rax]
   54ce6:	call   a040 <dcgettext@plt>
   54ceb:	mov    r8,QWORD PTR [rsp+0x98]
   54cf3:	mov    r9,rbp
   54cf6:	mov    esi,0x1
   54cfb:	mov    rdx,rax
   54cfe:	mov    rax,QWORD PTR [rip+0x272e3]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   54d05:	mov    rcx,r12
   54d08:	mov    rdi,QWORD PTR [rax]
   54d0b:	xor    eax,eax
   54d0d:	call   a840 <__fprintf_chk@plt>
   54d12:	jmp    54bf1 <_obstack_memory_used@@Base+0x7f71>
   54d17:	mov    DWORD PTR [rsp+0x30],0x1
   54d1f:	jmp    54890 <_obstack_memory_used@@Base+0x7c10>
   54d24:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   54d2f:	nop
   54d30:	endbr64 
   54d34:	push   r13
   54d36:	mov    r9,rdi
   54d39:	shl    rsi,0x4
   54d3d:	mov    rdi,rdx
   54d40:	push   r12
   54d42:	mov    r10,rcx
   54d45:	push   rbp
   54d46:	push   rbx
   54d47:	sub    rsp,0x8
   54d4b:	add    rsi,QWORD PTR [r9]
   54d4e:	movzx  r8d,BYTE PTR [rsi+0x8]
   54d53:	cmp    r8b,0x7
   54d57:	je     54e78 <_obstack_memory_used@@Base+0x81f8>
   54d5d:	cmp    DWORD PTR [rdx+0x90],0x1
   54d64:	je     54e10 <_obstack_memory_used@@Base+0x8190>
   54d6a:	mov    rcx,QWORD PTR [rdx+0x10]
   54d6e:	mov    rdx,QWORD PTR [rdx+0x30]
   54d72:	lea    rax,[r10+0x1]
   54d76:	cmp    rax,rdx
   54d79:	jge    54e10 <_obstack_memory_used@@Base+0x8190>
   54d7f:	mov    r12d,0x1
   54d85:	jmp    54da1 <_obstack_memory_used@@Base+0x8121>
   54d87:	nop    WORD PTR [rax+rax*1+0x0]
   54d90:	add    rax,0x1
   54d94:	add    r12d,0x1
   54d98:	cmp    rax,rdx
   54d9b:	je     54e28 <_obstack_memory_used@@Base+0x81a8>
   54da1:	cmp    DWORD PTR [rcx+rax*4],0xffffffff
   54da5:	je     54d90 <_obstack_memory_used@@Base+0x8110>
   54da7:	cmp    r8b,0x5
   54dab:	je     54e60 <_obstack_memory_used@@Base+0x81e0>
   54db1:	cmp    r8b,0x6
   54db5:	jne    54e10 <_obstack_memory_used@@Base+0x8190>
   54db7:	cmp    r12d,0x1
   54dbb:	je     54e10 <_obstack_memory_used@@Base+0x8190>
   54dbd:	mov    r13,QWORD PTR [rsi]
   54dc0:	mov    rsi,QWORD PTR [r13+0x40]
   54dc4:	mov    rdx,QWORD PTR [r13+0x28]
   54dc8:	test   rsi,rsi
   54dcb:	jne    54dda <_obstack_memory_used@@Base+0x815a>
   54dcd:	mov    rax,rdx
   54dd0:	or     rax,QWORD PTR [r13+0x48]
   54dd4:	je     54f63 <_obstack_memory_used@@Base+0x82e3>
   54dda:	mov    ebp,DWORD PTR [rcx+r10*4]
   54dde:	test   rdx,rdx
   54de1:	jle    54f00 <_obstack_memory_used@@Base+0x8280>
   54de7:	mov    rcx,QWORD PTR [r13+0x0]
   54deb:	xor    eax,eax
   54ded:	jmp    54dfd <_obstack_memory_used@@Base+0x817d>
   54def:	nop
   54df0:	add    rax,0x1
   54df4:	cmp    rax,rdx
   54df7:	je     54f00 <_obstack_memory_used@@Base+0x8280>
   54dfd:	cmp    DWORD PTR [rcx+rax*4],ebp
   54e00:	jne    54df0 <_obstack_memory_used@@Base+0x8170>
   54e02:	test   BYTE PTR [r13+0x20],0x1
   54e07:	je     54e13 <_obstack_memory_used@@Base+0x8193>
   54e09:	nop    DWORD PTR [rax+0x0]
   54e10:	xor    r12d,r12d
   54e13:	add    rsp,0x8
   54e17:	mov    eax,r12d
   54e1a:	pop    rbx
   54e1b:	pop    rbp
   54e1c:	pop    r12
   54e1e:	pop    r13
   54e20:	ret    
   54e21:	nop    DWORD PTR [rax+0x0]
   54e28:	cmp    r8b,0x5
   54e2c:	jne    54db1 <_obstack_memory_used@@Base+0x8131>
   54e32:	mov    rax,QWORD PTR [r9+0xd8]
   54e39:	test   al,0x40
   54e3b:	jne    54e48 <_obstack_memory_used@@Base+0x81c8>
   54e3d:	mov    rdx,QWORD PTR [rdi+0x8]
   54e41:	cmp    BYTE PTR [rdx+r10*1],0xa
   54e46:	je     54e10 <_obstack_memory_used@@Base+0x8190>
   54e48:	test   al,0x80
   54e4a:	je     54e13 <_obstack_memory_used@@Base+0x8193>
   54e4c:	mov    rax,QWORD PTR [rdi+0x8]
   54e50:	cmp    BYTE PTR [rax+r10*1],0x0
   54e55:	je     54e10 <_obstack_memory_used@@Base+0x8190>
   54e57:	jmp    54e13 <_obstack_memory_used@@Base+0x8193>
   54e59:	nop    DWORD PTR [rax+0x0]
   54e60:	cmp    r12d,0x1
   54e64:	je     54e10 <_obstack_memory_used@@Base+0x8190>
   54e66:	mov    rax,QWORD PTR [r9+0xd8]
   54e6d:	test   al,0x40
   54e6f:	jne    54e48 <_obstack_memory_used@@Base+0x81c8>
   54e71:	jmp    54e3d <_obstack_memory_used@@Base+0x81bd>
   54e73:	nop    DWORD PTR [rax+rax*1+0x0]
   54e78:	mov    rdx,QWORD PTR [rdx+0x8]
   54e7c:	movzx  eax,BYTE PTR [rdx+rcx*1]
   54e80:	cmp    al,0xc1
   54e82:	jbe    54e10 <_obstack_memory_used@@Base+0x8190>
   54e84:	mov    rdi,QWORD PTR [rdi+0x58]
   54e88:	lea    rcx,[rcx+0x1]
   54e8c:	cmp    rcx,rdi
   54e8f:	jge    54e10 <_obstack_memory_used@@Base+0x8190>
   54e95:	add    rcx,rdx
   54e98:	movzx  esi,BYTE PTR [rcx]
   54e9b:	cmp    al,0xdf
   54e9d:	jbe    54f9a <_obstack_memory_used@@Base+0x831a>
   54ea3:	cmp    al,0xef
   54ea5:	ja     54f78 <_obstack_memory_used@@Base+0x82f8>
   54eab:	cmp    al,0xe0
   54ead:	jne    54eb9 <_obstack_memory_used@@Base+0x8239>
   54eaf:	cmp    sil,0x9f
   54eb3:	jbe    54e10 <_obstack_memory_used@@Base+0x8190>
   54eb9:	mov    esi,0x3
   54ebe:	mov    r12d,0x3
   54ec4:	lea    rax,[r10+rsi*1]
   54ec8:	cmp    rdi,rax
   54ecb:	jl     54e10 <_obstack_memory_used@@Base+0x8190>
   54ed1:	lea    rax,[rdx+r10*1]
   54ed5:	add    rax,rsi
   54ed8:	jmp    54ee7 <_obstack_memory_used@@Base+0x8267>
   54eda:	add    rcx,0x1
   54ede:	cmp    rax,rcx
   54ee1:	je     54e13 <_obstack_memory_used@@Base+0x8193>
   54ee7:	movzx  ebx,BYTE PTR [rcx]
   54eea:	lea    edx,[rbx-0x80]
   54eed:	cmp    dl,0x3f
   54ef0:	jbe    54eda <_obstack_memory_used@@Base+0x825a>
   54ef2:	jmp    54e10 <_obstack_memory_used@@Base+0x8190>
   54ef7:	nop    WORD PTR [rax+rax*1+0x0]
   54f00:	mov    rax,QWORD PTR [r13+0x48]
   54f04:	test   rax,rax
   54f07:	jle    54f36 <_obstack_memory_used@@Base+0x82b6>
   54f09:	xor    ebx,ebx
   54f0b:	jmp    54f1a <_obstack_memory_used@@Base+0x829a>
   54f0d:	nop    DWORD PTR [rax]
   54f10:	add    rbx,0x1
   54f14:	cmp    QWORD PTR [r13+0x48],rbx
   54f18:	jle    54f32 <_obstack_memory_used@@Base+0x82b2>
   54f1a:	mov    rax,QWORD PTR [r13+0x18]
   54f1e:	mov    edi,ebp
   54f20:	mov    rsi,QWORD PTR [rax+rbx*8]
   54f24:	call   9fd0 <iswctype@plt>
   54f29:	test   eax,eax
   54f2b:	je     54f10 <_obstack_memory_used@@Base+0x8290>
   54f2d:	jmp    54e02 <_obstack_memory_used@@Base+0x8182>
   54f32:	mov    rsi,QWORD PTR [r13+0x40]
   54f36:	test   rsi,rsi
   54f39:	jle    54f63 <_obstack_memory_used@@Base+0x82e3>
   54f3b:	mov    rdx,QWORD PTR [r13+0x8]
   54f3f:	xor    eax,eax
   54f41:	nop    DWORD PTR [rax+0x0]
   54f48:	cmp    DWORD PTR [rdx+rax*4],ebp
   54f4b:	jg     54f5a <_obstack_memory_used@@Base+0x82da>
   54f4d:	mov    rcx,QWORD PTR [r13+0x10]
   54f51:	cmp    DWORD PTR [rcx+rax*4],ebp
   54f54:	jge    54e02 <_obstack_memory_used@@Base+0x8182>
   54f5a:	add    rax,0x1
   54f5e:	cmp    rax,rsi
   54f61:	jne    54f48 <_obstack_memory_used@@Base+0x82c8>
   54f63:	test   BYTE PTR [r13+0x20],0x1
   54f68:	jne    54e13 <_obstack_memory_used@@Base+0x8193>
   54f6e:	jmp    54e10 <_obstack_memory_used@@Base+0x8190>
   54f73:	nop    DWORD PTR [rax+rax*1+0x0]
   54f78:	cmp    al,0xf7
   54f7a:	ja     54fb0 <_obstack_memory_used@@Base+0x8330>
   54f7c:	cmp    al,0xf0
   54f7e:	jne    54f8a <_obstack_memory_used@@Base+0x830a>
   54f80:	cmp    sil,0x8f
   54f84:	jbe    54e10 <_obstack_memory_used@@Base+0x8190>
   54f8a:	mov    esi,0x4
   54f8f:	mov    r12d,0x4
   54f95:	jmp    54ec4 <_obstack_memory_used@@Base+0x8244>
   54f9a:	add    esi,0xffffff80
   54f9d:	xor    r12d,r12d
   54fa0:	cmp    sil,0x3f
   54fa4:	setbe  r12b
   54fa8:	add    r12d,r12d
   54fab:	jmp    54e13 <_obstack_memory_used@@Base+0x8193>
   54fb0:	cmp    al,0xfb
   54fb2:	ja     54fd2 <_obstack_memory_used@@Base+0x8352>
   54fb4:	cmp    al,0xf8
   54fb6:	jne    54fc2 <_obstack_memory_used@@Base+0x8342>
   54fb8:	cmp    sil,0x87
   54fbc:	jbe    54e10 <_obstack_memory_used@@Base+0x8190>
   54fc2:	mov    esi,0x5
   54fc7:	mov    r12d,0x5
   54fcd:	jmp    54ec4 <_obstack_memory_used@@Base+0x8244>
   54fd2:	cmp    al,0xfd
   54fd4:	ja     54e10 <_obstack_memory_used@@Base+0x8190>
   54fda:	cmp    al,0xfc
   54fdc:	jne    54fe8 <_obstack_memory_used@@Base+0x8368>
   54fde:	cmp    sil,0x83
   54fe2:	jbe    54e10 <_obstack_memory_used@@Base+0x8190>
   54fe8:	mov    esi,0x6
   54fed:	mov    r12d,0x6
   54ff3:	jmp    54ec4 <_obstack_memory_used@@Base+0x8244>
   54ff8:	nop    DWORD PTR [rax+rax*1+0x0]
   55000:	endbr64 
   55004:	mov    rax,QWORD PTR [rdi+0x8]
   55008:	mov    r8,rdx
   5500b:	movzx  ecx,BYTE PTR [rax+rdx*1]
   5500f:	movzx  eax,BYTE PTR [rsi+0x8]
   55013:	cmp    al,0x5
   55015:	je     550bd <_obstack_memory_used@@Base+0x843d>
   5501b:	ja     550b0 <_obstack_memory_used@@Base+0x8430>
   55021:	cmp    al,0x1
   55023:	je     550e8 <_obstack_memory_used@@Base+0x8468>
   55029:	cmp    al,0x3
   5502b:	jne    55133 <_obstack_memory_used@@Base+0x84b3>
   55031:	mov    rdx,QWORD PTR [rsi]
   55034:	movzx  eax,cl
   55037:	sar    rax,0x6
   5503b:	mov    rax,QWORD PTR [rdx+rax*8]
   5503f:	shr    rax,cl
   55042:	and    eax,0x1
   55045:	je     55110 <_obstack_memory_used@@Base+0x8490>
   5504b:	push   rbx
   5504c:	mov    ebx,DWORD PTR [rsi+0x8]
   5504f:	mov    eax,0x1
   55054:	test   ebx,0x3ff00
   5505a:	je     550a8 <_obstack_memory_used@@Base+0x8428>
   5505c:	mov    edx,DWORD PTR [rdi+0xa0]
   55062:	mov    rsi,r8
   55065:	shr    ebx,0x8
   55068:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5506d:	mov    ecx,ebx
   5506f:	mov    edx,eax
   55071:	and    cx,0x3ff
   55076:	test   bl,0x4
   55079:	jne    550f8 <_obstack_memory_used@@Base+0x8478>
   5507b:	and    ebx,0x8
   5507e:	je     55088 <_obstack_memory_used@@Base+0x8408>
   55080:	test   al,0x1
   55082:	jne    5512f <_obstack_memory_used@@Base+0x84af>
   55088:	test   cl,0x20
   5508b:	je     55094 <_obstack_memory_used@@Base+0x8414>
   5508d:	xor    eax,eax
   5508f:	test   dl,0x2
   55092:	je     550a8 <_obstack_memory_used@@Base+0x8428>
   55094:	shr    edx,0x3
   55097:	mov    eax,0x1
   5509c:	and    edx,0x1
   5509f:	and    ecx,0x80
   550a5:	cmovne eax,edx
   550a8:	pop    rbx
   550a9:	ret    
   550aa:	nop    WORD PTR [rax+rax*1+0x0]
   550b0:	cmp    al,0x7
   550b2:	mov    eax,0x0
   550b7:	jne    550e0 <_obstack_memory_used@@Base+0x8460>
   550b9:	test   cl,cl
   550bb:	js     550dc <_obstack_memory_used@@Base+0x845c>
   550bd:	cmp    cl,0xa
   550c0:	je     55118 <_obstack_memory_used@@Base+0x8498>
   550c2:	test   cl,cl
   550c4:	jne    5504b <_obstack_memory_used@@Base+0x83cb>
   550c6:	mov    rdx,QWORD PTR [rdi+0x98]
   550cd:	xor    eax,eax
   550cf:	test   BYTE PTR [rdx+0xd8],0x80
   550d6:	je     5504b <_obstack_memory_used@@Base+0x83cb>
   550dc:	ret    
   550dd:	nop    DWORD PTR [rax]
   550e0:	ret    
   550e1:	nop    DWORD PTR [rax+0x0]
   550e8:	xor    eax,eax
   550ea:	cmp    BYTE PTR [rsi],cl
   550ec:	je     5504b <_obstack_memory_used@@Base+0x83cb>
   550f2:	ret    
   550f3:	nop    DWORD PTR [rax+rax*1+0x0]
   550f8:	xor    eax,eax
   550fa:	test   dl,0x1
   550fd:	je     550a8 <_obstack_memory_used@@Base+0x8428>
   550ff:	and    ebx,0x8
   55102:	je     55088 <_obstack_memory_used@@Base+0x8408>
   55104:	pop    rbx
   55105:	ret    
   55106:	cs nop WORD PTR [rax+rax*1+0x0]
   55110:	ret    
   55111:	nop    DWORD PTR [rax+0x0]
   55118:	mov    rdx,QWORD PTR [rdi+0x98]
   5511f:	xor    eax,eax
   55121:	test   BYTE PTR [rdx+0xd8],0x40
   55128:	jne    5504b <_obstack_memory_used@@Base+0x83cb>
   5512e:	ret    
   5512f:	xor    eax,eax
   55131:	pop    rbx
   55132:	ret    
   55133:	xor    eax,eax
   55135:	ret    
   55136:	cs nop WORD PTR [rax+rax*1+0x0]
   55140:	push   r15
   55142:	mov    r15,rsi
   55145:	push   r14
   55147:	push   r13
   55149:	push   r12
   5514b:	mov    r12,rdi
   5514e:	mov    edi,0x8
   55153:	push   rbp
   55154:	push   rbx
   55155:	sub    rsp,0x68
   55159:	mov    rbp,QWORD PTR [rsi+0x18]
   5515d:	mov    rbx,QWORD PTR [rsi+0x10]
   55161:	mov    rax,QWORD PTR fs:0x28
   5516a:	mov    QWORD PTR [rsp+0x58],rax
   5516f:	xor    eax,eax
   55171:	mov    QWORD PTR [rsp+0x40],0x1
   5517a:	mov    QWORD PTR [rsp+0x48],0x1
   55183:	call   a4a0 <malloc@plt>
   55188:	mov    QWORD PTR [rsp+0x50],rax
   5518d:	test   rax,rax
   55190:	je     5544f <_obstack_memory_used@@Base+0x87cf>
   55196:	mov    QWORD PTR [rax],rbx
   55199:	lea    rcx,[rsp+0x40]
   5519e:	mov    rdx,rbp
   551a1:	mov    rsi,r15
   551a4:	mov    rdi,r12
   551a7:	mov    QWORD PTR [rsp+0x8],rcx
   551ac:	call   55460 <_obstack_memory_used@@Base+0x87e0>
   551b1:	test   eax,eax
   551b3:	jne    553d4 <_obstack_memory_used@@Base+0x8754>
   551b9:	lea    rax,[r15+0x20]
   551bd:	mov    DWORD PTR [rsp+0x3c],0x0
   551c5:	mov    QWORD PTR [rsp+0x30],rax
   551ca:	mov    QWORD PTR [rsp],r15
   551ce:	test   rbp,rbp
   551d1:	jle    5544a <_obstack_memory_used@@Base+0x87ca>
   551d7:	mov    rax,QWORD PTR [rsp]
   551db:	mov    rdi,QWORD PTR [rax]
   551de:	lea    rax,[rbp*8+0x0]
   551e6:	mov    QWORD PTR [rsp+0x10],rax
   551eb:	cmp    QWORD PTR [rdi+rbp*8],0x0
   551f0:	je     55418 <_obstack_memory_used@@Base+0x8798>
   551f6:	mov    DWORD PTR [rsp+0x3c],0x0
   551fe:	mov    eax,DWORD PTR [rsp+0x3c]
   55202:	cmp    DWORD PTR [r12+0xe0],eax
   5520a:	jl     5542f <_obstack_memory_used@@Base+0x87af>
   55210:	mov    rax,QWORD PTR [r12+0xb8]
   55218:	mov    rbx,QWORD PTR [rsp+0x10]
   5521d:	sub    rbp,0x1
   55221:	mov    QWORD PTR [rsp+0x48],0x0
   5522a:	mov    r13,QWORD PTR [rax+rbx*1-0x8]
   5522f:	test   r13,r13
   55232:	je     553b8 <_obstack_memory_used@@Base+0x8738>
   55238:	cmp    QWORD PTR [r13+0x28],0x0
   5523d:	mov    r14,QWORD PTR [r12+0x98]
   55245:	jle    553b8 <_obstack_memory_used@@Base+0x8738>
   5524b:	xor    ebx,ebx
   5524d:	jmp    552e7 <_obstack_memory_used@@Base+0x8667>
   55252:	nop    WORD PTR [rax+rax*1+0x0]
   55258:	mov    rdx,rbp
   5525b:	mov    rdi,r12
   5525e:	call   55000 <_obstack_memory_used@@Base+0x8380>
   55263:	test   al,al
   55265:	je     552d9 <_obstack_memory_used@@Base+0x8659>
   55267:	mov    rax,QWORD PTR [rsp]
   5526b:	mov    rdx,QWORD PTR [rsp+0x10]
   55270:	mov    rax,QWORD PTR [rax]
   55273:	mov    rdi,QWORD PTR [rax+rdx*1]
   55277:	test   rdi,rdi
   5527a:	je     552d9 <_obstack_memory_used@@Base+0x8659>
   5527c:	mov    rax,QWORD PTR [r14+0x18]
   55280:	add    rdi,0x8
   55284:	mov    rsi,QWORD PTR [rax+r15*8]
   55288:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   5528d:	test   rax,rax
   55290:	je     552d9 <_obstack_memory_used@@Base+0x8659>
   55292:	mov    ecx,0x1
   55297:	mov    rax,QWORD PTR [rsp]
   5529b:	cmp    QWORD PTR [rax+0x28],0x0
   552a0:	je     552c4 <_obstack_memory_used@@Base+0x8644>
   552a2:	mov    rax,QWORD PTR [r14+0x18]
   552a6:	mov    rsi,QWORD PTR [rsp+0x30]
   552ab:	add    rcx,rbp
   552ae:	mov    r9,rbp
   552b1:	mov    r8,r15
   552b4:	mov    rdi,r12
   552b7:	mov    rdx,QWORD PTR [rax+r15*8]
   552bb:	call   52b20 <_obstack_memory_used@@Base+0x5ea0>
   552c0:	test   al,al
   552c2:	jne    552d9 <_obstack_memory_used@@Base+0x8659>
   552c4:	mov    rdi,QWORD PTR [rsp+0x8]
   552c9:	mov    rsi,r15
   552cc:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   552d1:	test   al,al
   552d3:	je     553e0 <_obstack_memory_used@@Base+0x8760>
   552d9:	add    rbx,0x1
   552dd:	cmp    rbx,QWORD PTR [r13+0x28]
   552e1:	jge    553b8 <_obstack_memory_used@@Base+0x8738>
   552e7:	mov    rax,QWORD PTR [r13+0x30]
   552eb:	mov    rsi,QWORD PTR [r14]
   552ee:	mov    r15,QWORD PTR [rax+rbx*8]
   552f2:	mov    r9,r15
   552f5:	shl    r9,0x4
   552f9:	add    rsi,r9
   552fc:	test   BYTE PTR [rsi+0xa],0x10
   55300:	je     55258 <_obstack_memory_used@@Base+0x85d8>
   55306:	mov    rax,QWORD PTR [rsp]
   5530a:	mov    rdx,r12
   5530d:	mov    rsi,r15
   55310:	mov    QWORD PTR [rsp+0x18],r9
   55315:	mov    r10,QWORD PTR [r12+0x98]
   5531d:	mov    rcx,QWORD PTR [rax+0x18]
   55321:	mov    rdi,r10
   55324:	mov    QWORD PTR [rsp+0x28],r10
   55329:	mov    QWORD PTR [rsp+0x20],rcx
   5532e:	mov    rcx,rbp
   55331:	call   54d30 <_obstack_memory_used@@Base+0x80b0>
   55336:	mov    r9,QWORD PTR [rsp+0x18]
   5533b:	movsxd rcx,eax
   5533e:	test   ecx,ecx
   55340:	jle    553a0 <_obstack_memory_used@@Base+0x8720>
   55342:	movsxd rax,ecx
   55345:	add    rax,rbp
   55348:	cmp    QWORD PTR [rsp+0x20],rax
   5534d:	jl     55297 <_obstack_memory_used@@Base+0x8617>
   55353:	mov    rdx,QWORD PTR [rsp]
   55357:	mov    r10,QWORD PTR [rsp+0x28]
   5535c:	mov    rdx,QWORD PTR [rdx]
   5535f:	mov    rdi,QWORD PTR [rdx+rax*8]
   55363:	test   rdi,rdi
   55366:	je     553a6 <_obstack_memory_used@@Base+0x8726>
   55368:	mov    rax,QWORD PTR [r10+0x18]
   5536c:	add    rdi,0x8
   55370:	mov    DWORD PTR [rsp+0x18],ecx
   55374:	mov    QWORD PTR [rsp+0x20],r9
   55379:	mov    rsi,QWORD PTR [rax+r15*8]
   5537d:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   55382:	movsxd rcx,DWORD PTR [rsp+0x18]
   55387:	test   rax,rax
   5538a:	jne    55297 <_obstack_memory_used@@Base+0x8617>
   55390:	mov    rsi,QWORD PTR [rsp+0x20]
   55395:	add    rsi,QWORD PTR [r14]
   55398:	jmp    55258 <_obstack_memory_used@@Base+0x85d8>
   5539d:	nop    DWORD PTR [rax]
   553a0:	jne    55297 <_obstack_memory_used@@Base+0x8617>
   553a6:	mov    rsi,QWORD PTR [r14]
   553a9:	add    rsi,r9
   553ac:	jmp    55258 <_obstack_memory_used@@Base+0x85d8>
   553b1:	nop    DWORD PTR [rax+0x0]
   553b8:	mov    rcx,QWORD PTR [rsp+0x8]
   553bd:	mov    rsi,QWORD PTR [rsp]
   553c1:	mov    rdx,rbp
   553c4:	mov    rdi,r12
   553c7:	call   55460 <_obstack_memory_used@@Base+0x87e0>
   553cc:	test   eax,eax
   553ce:	je     551ce <_obstack_memory_used@@Base+0x854e>
   553d4:	mov    r13d,eax
   553d7:	jmp    553e6 <_obstack_memory_used@@Base+0x8766>
   553d9:	nop    DWORD PTR [rax+0x0]
   553e0:	mov    r13d,0xc
   553e6:	mov    rdi,QWORD PTR [rsp+0x50]
   553eb:	call   9ce0 <free@plt>
   553f0:	mov    rax,QWORD PTR [rsp+0x58]
   553f5:	sub    rax,QWORD PTR fs:0x28
   553fe:	jne    55457 <_obstack_memory_used@@Base+0x87d7>
   55400:	add    rsp,0x68
   55404:	mov    eax,r13d
   55407:	pop    rbx
   55408:	pop    rbp
   55409:	pop    r12
   5540b:	pop    r13
   5540d:	pop    r14
   5540f:	pop    r15
   55411:	ret    
   55412:	nop    WORD PTR [rax+rax*1+0x0]
   55418:	add    DWORD PTR [rsp+0x3c],0x1
   5541d:	mov    eax,DWORD PTR [rsp+0x3c]
   55421:	cmp    DWORD PTR [r12+0xe0],eax
   55429:	jge    55210 <_obstack_memory_used@@Base+0x8590>
   5542f:	mov    rdx,QWORD PTR [rsp+0x10]
   55434:	xor    esi,esi
   55436:	xor    r13d,r13d
   55439:	call   a1b0 <memset@plt>
   5543e:	mov    rdi,QWORD PTR [rsp+0x50]
   55443:	call   9ce0 <free@plt>
   55448:	jmp    553f0 <_obstack_memory_used@@Base+0x8770>
   5544a:	xor    r13d,r13d
   5544d:	jmp    553e6 <_obstack_memory_used@@Base+0x8766>
   5544f:	mov    r13d,0xc
   55455:	jmp    553f0 <_obstack_memory_used@@Base+0x8770>
   55457:	call   a0a0 <__stack_chk_fail@plt>
   5545c:	nop    DWORD PTR [rax+0x0]
   55460:	push   r15
   55462:	push   r14
   55464:	push   r13
   55466:	push   r12
   55468:	mov    r12,rcx
   5546b:	lea    rcx,[rdx*8+0x0]
   55473:	push   rbp
   55474:	push   rbx
   55475:	mov    rbx,rsi
   55478:	sub    rsp,0xb8
   5547f:	mov    rbp,QWORD PTR [rdi+0x98]
   55486:	mov    QWORD PTR [rsp],rdx
   5548a:	mov    rdx,QWORD PTR [r12+0x8]
   5548f:	mov    QWORD PTR [rsp+0x10],rdi
   55494:	mov    rax,QWORD PTR fs:0x28
   5549d:	mov    QWORD PTR [rsp+0xa8],rax
   554a5:	xor    eax,eax
   554a7:	mov    QWORD PTR [rsp+0x20],rcx
   554ac:	add    rcx,QWORD PTR [rdi+0xb8]
   554b3:	mov    rsi,QWORD PTR [rcx]
   554b6:	mov    DWORD PTR [rsp+0x6c],0x0
   554be:	mov    QWORD PTR [rsp+0x18],rsi
   554c3:	test   rsi,rsi
   554c6:	je     55910 <_obstack_memory_used@@Base+0x8c90>
   554cc:	test   rdx,rdx
   554cf:	jne    55528 <_obstack_memory_used@@Base+0x88a8>
   554d1:	mov    rdx,QWORD PTR [rbx]
   554d4:	mov    rsi,QWORD PTR [rsp]
   554d8:	mov    rax,rcx
   554db:	mov    QWORD PTR [rdx+rsi*8],0x0
   554e3:	mov    rdx,QWORD PTR [rax]
   554e6:	xor    eax,eax
   554e8:	test   BYTE PTR [rdx+0x68],0x40
   554ec:	jne    5564b <_obstack_memory_used@@Base+0x89cb>
   554f2:	nop    WORD PTR [rax+rax*1+0x0]
   554f8:	mov    rdx,QWORD PTR [rsp+0xa8]
   55500:	sub    rdx,QWORD PTR fs:0x28
   55509:	jne    55c53 <_obstack_memory_used@@Base+0x8fd3>
   5550f:	add    rsp,0xb8
   55516:	pop    rbx
   55517:	pop    rbp
   55518:	pop    r12
   5551a:	pop    r13
   5551c:	pop    r14
   5551e:	pop    r15
   55520:	ret    
   55521:	nop    DWORD PTR [rax+0x0]
   55528:	lea    rdi,[rsp+0x70]
   5552d:	mov    rdx,r12
   55530:	mov    rsi,rbp
   55533:	mov    DWORD PTR [rsp+0x70],0x0
   5553b:	call   4e360 <_obstack_memory_used@@Base+0x16e0>
   55540:	mov    r15,rax
   55543:	mov    eax,DWORD PTR [rsp+0x70]
   55547:	test   eax,eax
   55549:	jne    554f8 <_obstack_memory_used@@Base+0x8878>
   5554b:	mov    r13,QWORD PTR [r15+0x38]
   5554f:	lea    r14,[r15+0x38]
   55553:	test   r13,r13
   55556:	jne    555d0 <_obstack_memory_used@@Base+0x8950>
   55558:	mov    rdi,QWORD PTR [r12+0x8]
   5555d:	mov    QWORD PTR [r15+0x40],0x0
   55565:	mov    QWORD PTR [r15+0x38],rdi
   55569:	shl    rdi,0x3
   5556d:	call   a4a0 <malloc@plt>
   55572:	mov    QWORD PTR [r15+0x48],rax
   55576:	test   rax,rax
   55579:	je     555c0 <_obstack_memory_used@@Base+0x8940>
   5557b:	cmp    QWORD PTR [r12+0x8],0x0
   55581:	mov    DWORD PTR [rsp+0x70],0x0
   55589:	jg     5559b <_obstack_memory_used@@Base+0x891b>
   5558b:	jmp    555d0 <_obstack_memory_used@@Base+0x8950>
   5558d:	nop    DWORD PTR [rax]
   55590:	add    r13,0x1
   55594:	cmp    r13,QWORD PTR [r12+0x8]
   55599:	jge    555d0 <_obstack_memory_used@@Base+0x8950>
   5559b:	mov    rax,QWORD PTR [r12+0x10]
   555a0:	mov    rdi,r14
   555a3:	mov    rax,QWORD PTR [rax+r13*8]
   555a7:	lea    rdx,[rax+rax*2]
   555ab:	mov    rax,QWORD PTR [rbp+0x38]
   555af:	lea    rsi,[rax+rdx*8]
   555b3:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   555b8:	mov    DWORD PTR [rsp+0x70],eax
   555bc:	test   eax,eax
   555be:	je     55590 <_obstack_memory_used@@Base+0x8910>
   555c0:	mov    eax,0xc
   555c5:	jmp    554f8 <_obstack_memory_used@@Base+0x8878>
   555ca:	nop    WORD PTR [rax+rax*1+0x0]
   555d0:	mov    rax,QWORD PTR [rsp+0x18]
   555d5:	mov    rdx,r14
   555d8:	mov    rdi,r12
   555db:	add    rax,0x8
   555df:	mov    rsi,rax
   555e2:	mov    QWORD PTR [rsp+0x28],rax
   555e7:	call   4d7e0 <_obstack_memory_used@@Base+0xb60>
   555ec:	mov    DWORD PTR [rsp+0x6c],eax
   555f0:	test   eax,eax
   555f2:	jne    554f8 <_obstack_memory_used@@Base+0x8878>
   555f8:	cmp    QWORD PTR [rbx+0x28],0x0
   555fd:	jne    559f8 <_obstack_memory_used@@Base+0x8d78>
   55603:	lea    rdi,[rsp+0x6c]
   55608:	mov    rdx,r12
   5560b:	mov    rsi,rbp
   5560e:	mov    r13,QWORD PTR [rsp+0x20]
   55613:	add    r13,QWORD PTR [rbx]
   55616:	call   4e360 <_obstack_memory_used@@Base+0x16e0>
   5561b:	mov    QWORD PTR [r13+0x0],rax
   5561f:	mov    eax,DWORD PTR [rsp+0x6c]
   55623:	test   eax,eax
   55625:	jne    554f8 <_obstack_memory_used@@Base+0x8878>
   5562b:	mov    rsi,QWORD PTR [rsp+0x10]
   55630:	mov    rax,QWORD PTR [rsp+0x20]
   55635:	add    rax,QWORD PTR [rsi+0xb8]
   5563c:	mov    rdx,QWORD PTR [rax]
   5563f:	xor    eax,eax
   55641:	test   BYTE PTR [rdx+0x68],0x40
   55645:	je     554f8 <_obstack_memory_used@@Base+0x8878>
   5564b:	mov    rdi,QWORD PTR [rsp+0x10]
   55650:	mov    rsi,QWORD PTR [rsp]
   55654:	call   52aa0 <_obstack_memory_used@@Base+0x5e20>
   55659:	mov    r15,QWORD PTR [rdi+0x98]
   55660:	mov    QWORD PTR [rsp+0x50],rax
   55665:	cmp    rax,0xffffffffffffffff
   55669:	je     55958 <_obstack_memory_used@@Base+0x8cd8>
   5566f:	mov    QWORD PTR [rsp+0x70],0x0
   55678:	mov    rax,QWORD PTR [rsp+0x18]
   5567d:	cmp    QWORD PTR [rax+0x10],0x0
   55682:	jle    55958 <_obstack_memory_used@@Base+0x8cd8>
   55688:	mov    rax,QWORD PTR [rsp+0x50]
   5568d:	mov    r13,rbx
   55690:	mov    QWORD PTR [rsp+0x48],0x0
   55699:	mov    QWORD PTR [rsp+0x8],0x0
   556a2:	lea    rax,[rax+rax*2]
   556a6:	shl    rax,0x4
   556aa:	mov    QWORD PTR [rsp+0x58],rax
   556af:	lea    rax,[rbx+0x20]
   556b3:	mov    QWORD PTR [rsp+0x40],rax
   556b8:	jmp    556de <_obstack_memory_used@@Base+0x8a5e>
   556ba:	nop    WORD PTR [rax+rax*1+0x0]
   556c0:	cmp    al,0x4
   556c2:	je     55712 <_obstack_memory_used@@Base+0x8a92>
   556c4:	mov    rbx,QWORD PTR [rsp+0x18]
   556c9:	add    QWORD PTR [rsp+0x8],0x1
   556cf:	mov    rax,QWORD PTR [rsp+0x8]
   556d4:	cmp    rax,QWORD PTR [rbx+0x10]
   556d8:	jge    5594c <_obstack_memory_used@@Base+0x8ccc>
   556de:	mov    rax,QWORD PTR [rsp+0x18]
   556e3:	mov    rbx,QWORD PTR [rsp+0x8]
   556e8:	mov    rax,QWORD PTR [rax+0x18]
   556ec:	mov    r12,QWORD PTR [rax+rbx*8]
   556f0:	mov    rax,r12
   556f3:	shl    rax,0x4
   556f7:	add    rax,QWORD PTR [r15]
   556fa:	movzx  eax,BYTE PTR [rax+0x8]
   556fe:	cmp    r12,QWORD PTR [r13+0x10]
   55702:	jne    556c0 <_obstack_memory_used@@Base+0x8a40>
   55704:	mov    rbx,QWORD PTR [rsp]
   55708:	cmp    rbx,QWORD PTR [r13+0x18]
   5570c:	je     556c4 <_obstack_memory_used@@Base+0x8a44>
   5570e:	cmp    al,0x4
   55710:	jne    556c4 <_obstack_memory_used@@Base+0x8a44>
   55712:	mov    rax,QWORD PTR [rsp+0x10]
   55717:	mov    rbx,QWORD PTR [rsp+0x58]
   5571c:	mov    r14,r13
   5571f:	add    rbx,QWORD PTR [rax+0xd8]
   55726:	lea    rax,[r12+r12*2]
   5572a:	shl    rax,0x3
   5572e:	mov    rbp,rbx
   55731:	mov    QWORD PTR [rsp+0x38],rax
   55736:	lea    rax,[r12*8+0x0]
   5573e:	mov    QWORD PTR [rsp+0x30],rax
   55743:	mov    rax,QWORD PTR [rsp+0x50]
   55748:	mov    rbx,rax
   5574b:	nop    DWORD PTR [rax+rax*1+0x0]
   55750:	cmp    r12,QWORD PTR [rbp+0x0]
   55754:	jne    55960 <_obstack_memory_used@@Base+0x8ce0>
   5575a:	mov    rcx,QWORD PTR [rsp]
   5575e:	mov    rax,QWORD PTR [rbp+0x18]
   55762:	sub    rax,QWORD PTR [rbp+0x10]
   55766:	lea    r13,[rcx+rax*1]
   5576a:	je     55968 <_obstack_memory_used@@Base+0x8ce8>
   55770:	mov    rax,QWORD PTR [r15+0x18]
   55774:	mov    rcx,QWORD PTR [rsp+0x30]
   55779:	mov    r8,QWORD PTR [rax+rcx*1]
   5577d:	cmp    r13,QWORD PTR [r14+0x18]
   55781:	jg     55960 <_obstack_memory_used@@Base+0x8ce0>
   55787:	mov    rax,QWORD PTR [r14]
   5578a:	mov    rdi,QWORD PTR [rax+r13*8]
   5578e:	test   rdi,rdi
   55791:	je     55960 <_obstack_memory_used@@Base+0x8ce0>
   55797:	add    rdi,0x8
   5579b:	mov    rsi,r8
   5579e:	mov    QWORD PTR [rsp+0x28],r8
   557a3:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   557a8:	test   rax,rax
   557ab:	je     55960 <_obstack_memory_used@@Base+0x8ce0>
   557b1:	mov    r8,QWORD PTR [rsp+0x28]
   557b6:	mov    rcx,QWORD PTR [rsp]
   557ba:	mov    r9,r13
   557bd:	mov    rdx,r12
   557c0:	mov    rsi,QWORD PTR [rsp+0x40]
   557c5:	mov    rdi,QWORD PTR [rsp+0x10]
   557ca:	call   52b20 <_obstack_memory_used@@Base+0x5ea0>
   557cf:	test   al,al
   557d1:	jne    55960 <_obstack_memory_used@@Base+0x8ce0>
   557d7:	cmp    QWORD PTR [rsp+0x48],0x0
   557dd:	je     55980 <_obstack_memory_used@@Base+0x8d00>
   557e3:	lea    rbp,[rsp+0x90]
   557eb:	mov    rax,QWORD PTR [rsp]
   557ef:	mov    rsi,rbx
   557f2:	mov    rdi,rbp
   557f5:	lea    r13,[rsp+0x70]
   557fa:	mov    QWORD PTR [rsp+0x80],r12
   55802:	mov    QWORD PTR [rsp+0x88],rax
   5580a:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   5580f:	test   al,al
   55811:	je     55c3a <_obstack_memory_used@@Base+0x8fba>
   55817:	mov    rsi,QWORD PTR [rsp+0x20]
   5581c:	mov    rax,QWORD PTR [rsp+0x70]
   55821:	mov    rdi,QWORD PTR [rsp+0x10]
   55826:	mov    rax,QWORD PTR [rax+rsi*1]
   5582a:	mov    rsi,r13
   5582d:	mov    QWORD PTR [rsp+0x28],rax
   55832:	call   55140 <_obstack_memory_used@@Base+0x84c0>
   55837:	test   eax,eax
   55839:	jne    559d0 <_obstack_memory_used@@Base+0x8d50>
   5583f:	mov    rsi,QWORD PTR [r14+0x8]
   55843:	mov    rdx,QWORD PTR [rsp+0x70]
   55848:	test   rsi,rsi
   5584b:	je     55865 <_obstack_memory_used@@Base+0x8be5>
   5584d:	mov    rax,QWORD PTR [rsp]
   55851:	mov    rdi,r15
   55854:	lea    rcx,[rax+0x1]
   55858:	call   52fb0 <_obstack_memory_used@@Base+0x6330>
   5585d:	test   eax,eax
   5585f:	jne    559d0 <_obstack_memory_used@@Base+0x8d50>
   55865:	mov    rax,QWORD PTR [rsp+0x70]
   5586a:	mov    rcx,QWORD PTR [rsp+0x20]
   5586f:	mov    rdi,rbp
   55872:	mov    rsi,QWORD PTR [rsp+0x28]
   55877:	mov    QWORD PTR [rsp+0x48],rax
   5587c:	mov    QWORD PTR [rax+rcx*1],rsi
   55880:	mov    rsi,rbx
   55883:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   55888:	mov    rdx,rax
   5588b:	sub    rdx,0x1
   5588f:	js     558d7 <_obstack_memory_used@@Base+0x8c57>
   55891:	mov    rcx,QWORD PTR [rsp+0x98]
   55899:	cmp    rdx,rcx
   5589c:	jge    558d7 <_obstack_memory_used@@Base+0x8c57>
   5589e:	lea    rsi,[rcx-0x1]
   558a2:	mov    QWORD PTR [rsp+0x98],rsi
   558aa:	cmp    rax,rcx
   558ad:	jge    558d7 <_obstack_memory_used@@Base+0x8c57>
   558af:	mov    rax,QWORD PTR [rsp+0xa0]
   558b7:	nop    WORD PTR [rax+rax*1+0x0]
   558c0:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
   558c5:	mov    QWORD PTR [rax+rdx*8],rcx
   558c9:	add    rdx,0x1
   558cd:	cmp    rdx,QWORD PTR [rsp+0x98]
   558d5:	jl     558c0 <_obstack_memory_used@@Base+0x8c40>
   558d7:	mov    rcx,QWORD PTR [rsp+0x10]
   558dc:	lea    rax,[rbx+rbx*2]
   558e0:	shl    rax,0x4
   558e4:	add    rax,QWORD PTR [rcx+0xd8]
   558eb:	nop    DWORD PTR [rax+rax*1+0x0]
   558f0:	add    rbx,0x1
   558f4:	cmp    BYTE PTR [rax+0x28],0x0
   558f8:	lea    rbp,[rax+0x30]
   558fc:	jne    55750 <_obstack_memory_used@@Base+0x8ad0>
   55902:	mov    r13,r14
   55905:	jmp    556c4 <_obstack_memory_used@@Base+0x8a44>
   5590a:	nop    WORD PTR [rax+rax*1+0x0]
   55910:	mov    rax,QWORD PTR [rsp+0x20]
   55915:	add    rax,QWORD PTR [rbx]
   55918:	mov    rbx,rax
   5591b:	test   rdx,rdx
   5591e:	jne    55930 <_obstack_memory_used@@Base+0x8cb0>
   55920:	mov    QWORD PTR [rax],0x0
   55927:	xor    eax,eax
   55929:	jmp    554f8 <_obstack_memory_used@@Base+0x8878>
   5592e:	xchg   ax,ax
   55930:	lea    rdi,[rsp+0x6c]
   55935:	mov    rdx,r12
   55938:	mov    rsi,rbp
   5593b:	call   4e360 <_obstack_memory_used@@Base+0x16e0>
   55940:	mov    QWORD PTR [rbx],rax
   55943:	mov    eax,DWORD PTR [rsp+0x6c]
   55947:	jmp    554f8 <_obstack_memory_used@@Base+0x8878>
   5594c:	cmp    QWORD PTR [rsp+0x48],0x0
   55952:	jne    55c58 <_obstack_memory_used@@Base+0x8fd8>
   55958:	xor    eax,eax
   5595a:	jmp    554f8 <_obstack_memory_used@@Base+0x8878>
   5595f:	nop
   55960:	mov    rax,rbp
   55963:	jmp    558f0 <_obstack_memory_used@@Base+0x8c70>
   55965:	nop    DWORD PTR [rax]
   55968:	mov    rax,QWORD PTR [r15+0x28]
   5596c:	mov    rcx,QWORD PTR [rsp+0x38]
   55971:	mov    rax,QWORD PTR [rax+rcx*1+0x10]
   55976:	mov    r8,QWORD PTR [rax]
   55979:	jmp    5577d <_obstack_memory_used@@Base+0x8afd>
   5597e:	xchg   ax,ax
   55980:	movdqu xmm0,XMMWORD PTR [r14]
   55985:	mov    rax,QWORD PTR [r14+0x30]
   55989:	lea    rbp,[rsp+0x90]
   55991:	movdqu xmm1,XMMWORD PTR [r14+0x10]
   55997:	movdqu xmm2,XMMWORD PTR [r14+0x20]
   5599d:	mov    rdi,rbp
   559a0:	mov    rsi,QWORD PTR [rsp+0x40]
   559a5:	mov    QWORD PTR [rsp+0xa0],rax
   559ad:	movaps XMMWORD PTR [rsp+0x70],xmm0
   559b2:	movaps XMMWORD PTR [rsp+0x80],xmm1
   559ba:	movaps XMMWORD PTR [rsp+0x90],xmm2
   559c2:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   559c7:	test   eax,eax
   559c9:	je     557eb <_obstack_memory_used@@Base+0x8b6b>
   559cf:	nop
   559d0:	cmp    QWORD PTR [rsp+0x70],0x0
   559d6:	je     554f8 <_obstack_memory_used@@Base+0x8878>
   559dc:	mov    rdi,QWORD PTR [rsp+0xa0]
   559e4:	mov    DWORD PTR [rsp],eax
   559e7:	call   9ce0 <free@plt>
   559ec:	mov    eax,DWORD PTR [rsp]
   559ef:	jmp    554f8 <_obstack_memory_used@@Base+0x8878>
   559f4:	nop    DWORD PTR [rax+0x0]
   559f8:	mov    rax,QWORD PTR [rsp+0x10]
   559fd:	mov    rax,QWORD PTR [rax+0xd8]
   55a04:	mov    QWORD PTR [rsp+0x8],rax
   55a09:	jle    55af1 <_obstack_memory_used@@Base+0x8e71>
   55a0f:	xor    r14d,r14d
   55a12:	nop    WORD PTR [rax+rax*1+0x0]
   55a18:	mov    rax,QWORD PTR [rbx+0x30]
   55a1c:	mov    rdi,QWORD PTR [rsp]
   55a20:	mov    rax,QWORD PTR [rax+r14*8]
   55a24:	lea    rdx,[rax+rax*2]
   55a28:	shl    rdx,0x4
   55a2c:	add    rdx,QWORD PTR [rsp+0x8]
   55a31:	cmp    rdi,QWORD PTR [rdx+0x10]
   55a35:	jle    55ae3 <_obstack_memory_used@@Base+0x8e63>
   55a3b:	cmp    rdi,QWORD PTR [rdx+0x8]
   55a3f:	jg     55ae3 <_obstack_memory_used@@Base+0x8e63>
   55a45:	mov    rcx,QWORD PTR [rdx]
   55a48:	mov    rax,QWORD PTR [rbp+0x0]
   55a4c:	mov    rsi,QWORD PTR [r12+0x8]
   55a51:	shl    rcx,0x4
   55a55:	mov    r15,QWORD PTR [rax+rcx*1]
   55a59:	cmp    rdi,QWORD PTR [rdx+0x18]
   55a5d:	je     55b00 <_obstack_memory_used@@Base+0x8e80>
   55a63:	xor    r13d,r13d
   55a66:	test   rsi,rsi
   55a69:	jle    55ae3 <_obstack_memory_used@@Base+0x8e63>
   55a6b:	mov    rcx,r13
   55a6e:	mov    r13,rbp
   55a71:	mov    rbp,r15
   55a74:	mov    r15,rcx
   55a77:	jmp    55a8f <_obstack_memory_used@@Base+0x8e0f>
   55a79:	nop    DWORD PTR [rax+0x0]
   55a80:	add    r15,0x1
   55a84:	cmp    r15,QWORD PTR [r12+0x8]
   55a89:	jge    55ae0 <_obstack_memory_used@@Base+0x8e60>
   55a8b:	mov    rax,QWORD PTR [r13+0x0]
   55a8f:	mov    rdx,QWORD PTR [r12+0x10]
   55a94:	mov    rsi,QWORD PTR [rdx+r15*8]
   55a98:	mov    rdx,rsi
   55a9b:	shl    rdx,0x4
   55a9f:	add    rax,rdx
   55aa2:	movzx  edx,BYTE PTR [rax+0x8]
   55aa6:	sub    edx,0x8
   55aa9:	cmp    edx,0x1
   55aac:	ja     55a80 <_obstack_memory_used@@Base+0x8e00>
   55aae:	cmp    rbp,QWORD PTR [rax]
   55ab1:	jne    55a80 <_obstack_memory_used@@Base+0x8e00>
   55ab3:	mov    rcx,QWORD PTR [rsp+0x28]
   55ab8:	mov    rdx,r12
   55abb:	mov    rdi,r13
   55abe:	call   53500 <_obstack_memory_used@@Base+0x6880>
   55ac3:	test   eax,eax
   55ac5:	jne    554f8 <_obstack_memory_used@@Base+0x8878>
   55acb:	add    r15,0x1
   55acf:	cmp    r15,QWORD PTR [r12+0x8]
   55ad4:	jl     55a8b <_obstack_memory_used@@Base+0x8e0b>
   55ad6:	cs nop WORD PTR [rax+rax*1+0x0]
   55ae0:	mov    rbp,r13
   55ae3:	add    r14,0x1
   55ae7:	cmp    r14,QWORD PTR [rbx+0x28]
   55aeb:	jl     55a18 <_obstack_memory_used@@Base+0x8d98>
   55af1:	mov    DWORD PTR [rsp+0x6c],0x0
   55af9:	jmp    55603 <_obstack_memory_used@@Base+0x8983>
   55afe:	xchg   ax,ax
   55b00:	test   rsi,rsi
   55b03:	jle    55ae3 <_obstack_memory_used@@Base+0x8e63>
   55b05:	mov    r10,QWORD PTR [r12+0x10]
   55b0a:	mov    r13,0xffffffffffffffff
   55b11:	mov    r9,0xffffffffffffffff
   55b18:	mov    rcx,r10
   55b1b:	lea    r11,[r10+rsi*8]
   55b1f:	jmp    55b3d <_obstack_memory_used@@Base+0x8ebd>
   55b21:	nop    DWORD PTR [rax+0x0]
   55b28:	cmp    esi,0x9
   55b2b:	jne    55b34 <_obstack_memory_used@@Base+0x8eb4>
   55b2d:	cmp    r15,QWORD PTR [rdx]
   55b30:	cmove  r13,rdi
   55b34:	add    rcx,0x8
   55b38:	cmp    r11,rcx
   55b3b:	je     55b63 <_obstack_memory_used@@Base+0x8ee3>
   55b3d:	mov    rdi,QWORD PTR [rcx]
   55b40:	mov    rdx,rdi
   55b43:	shl    rdx,0x4
   55b47:	add    rdx,rax
   55b4a:	movzx  esi,BYTE PTR [rdx+0x8]
   55b4e:	cmp    esi,0x8
   55b51:	jne    55b28 <_obstack_memory_used@@Base+0x8ea8>
   55b53:	cmp    r15,QWORD PTR [rdx]
   55b56:	cmove  r9,rdi
   55b5a:	add    rcx,0x8
   55b5e:	cmp    r11,rcx
   55b61:	jne    55b3d <_obstack_memory_used@@Base+0x8ebd>
   55b63:	test   r9,r9
   55b66:	jns    55c00 <_obstack_memory_used@@Base+0x8f80>
   55b6c:	test   r13,r13
   55b6f:	js     55ae3 <_obstack_memory_used@@Base+0x8e63>
   55b75:	xor    r15d,r15d
   55b78:	mov    QWORD PTR [rsp+0x38],rbx
   55b7d:	mov    QWORD PTR [rsp+0x30],r14
   55b82:	mov    rbx,r15
   55b85:	jmp    55ba4 <_obstack_memory_used@@Base+0x8f24>
   55b87:	nop    WORD PTR [rax+rax*1+0x0]
   55b90:	add    rbx,0x1
   55b94:	cmp    QWORD PTR [r12+0x8],rbx
   55b99:	jle    55c44 <_obstack_memory_used@@Base+0x8fc4>
   55b9f:	mov    r10,QWORD PTR [r12+0x10]
   55ba4:	mov    r14,QWORD PTR [r10+rbx*8]
   55ba8:	mov    rdi,QWORD PTR [rbp+0x38]
   55bac:	mov    rsi,r13
   55baf:	lea    rdx,[r14+r14*2]
   55bb3:	lea    r15,[rdx*8+0x0]
   55bbb:	add    rdi,r15
   55bbe:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   55bc3:	test   rax,rax
   55bc6:	jne    55b90 <_obstack_memory_used@@Base+0x8f10>
   55bc8:	mov    rdi,QWORD PTR [rbp+0x30]
   55bcc:	mov    rsi,r13
   55bcf:	add    rdi,r15
   55bd2:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   55bd7:	test   rax,rax
   55bda:	jne    55b90 <_obstack_memory_used@@Base+0x8f10>
   55bdc:	mov    rcx,QWORD PTR [rsp+0x28]
   55be1:	mov    rdx,r12
   55be4:	mov    rsi,r14
   55be7:	mov    rdi,rbp
   55bea:	call   53500 <_obstack_memory_used@@Base+0x6880>
   55bef:	test   eax,eax
   55bf1:	je     55b94 <_obstack_memory_used@@Base+0x8f14>
   55bf3:	jmp    554f8 <_obstack_memory_used@@Base+0x8878>
   55bf8:	nop    DWORD PTR [rax+rax*1+0x0]
   55c00:	mov    rcx,QWORD PTR [rsp+0x28]
   55c05:	mov    rdx,r12
   55c08:	mov    rsi,r9
   55c0b:	mov    rdi,rbp
   55c0e:	call   53500 <_obstack_memory_used@@Base+0x6880>
   55c13:	test   eax,eax
   55c15:	jne    554f8 <_obstack_memory_used@@Base+0x8878>
   55c1b:	test   r13,r13
   55c1e:	js     55ae3 <_obstack_memory_used@@Base+0x8e63>
   55c24:	cmp    QWORD PTR [r12+0x8],0x0
   55c2a:	jle    55ae3 <_obstack_memory_used@@Base+0x8e63>
   55c30:	mov    r10,QWORD PTR [r12+0x10]
   55c35:	jmp    55b75 <_obstack_memory_used@@Base+0x8ef5>
   55c3a:	mov    eax,0xc
   55c3f:	jmp    559d0 <_obstack_memory_used@@Base+0x8d50>
   55c44:	mov    r14,QWORD PTR [rsp+0x30]
   55c49:	mov    rbx,QWORD PTR [rsp+0x38]
   55c4e:	jmp    55ae3 <_obstack_memory_used@@Base+0x8e63>
   55c53:	call   a0a0 <__stack_chk_fail@plt>
   55c58:	xor    eax,eax
   55c5a:	jmp    559dc <_obstack_memory_used@@Base+0x8d5c>
   55c5f:	nop
   55c60:	push   r15
   55c62:	push   r14
   55c64:	mov    r14,rdx
   55c67:	push   r13
   55c69:	push   r12
   55c6b:	push   rbp
   55c6c:	mov    rbp,rdi
   55c6f:	push   rbx
   55c70:	mov    rbx,rcx
   55c73:	sub    rsp,0xd8
   55c7a:	mov    rcx,QWORD PTR [rdi+0x98]
   55c81:	mov    r13,QWORD PTR [rsi+0x8]
   55c85:	mov    QWORD PTR [rsp+0x60],rsi
   55c8a:	mov    QWORD PTR [rsp+0x78],r8
   55c8f:	mov    QWORD PTR [rsp+0x50],r9
   55c94:	mov    rax,QWORD PTR fs:0x28
   55c9d:	mov    QWORD PTR [rsp+0xc8],rax
   55ca5:	xor    eax,eax
   55ca7:	mov    rax,rdx
   55caa:	mov    QWORD PTR [rsp+0x38],rcx
   55caf:	mov    DWORD PTR [rsp+0x88],0x0
   55cba:	shl    rax,0x4
   55cbe:	add    rax,QWORD PTR [rcx]
   55cc1:	mov    rax,QWORD PTR [rax]
   55cc4:	mov    QWORD PTR [rsp+0x58],rax
   55cc9:	movsxd rax,DWORD PTR [rdi+0xe0]
   55cd0:	add    rax,r9
   55cd3:	cmp    rax,r13
   55cd6:	jge    56314 <_obstack_memory_used@@Base+0x9694>
   55cdc:	mov    rdi,QWORD PTR [rbp+0xb8]
   55ce3:	mov    rax,QWORD PTR [rsp+0x60]
   55ce8:	mov    edx,DWORD PTR [rbp+0xa0]
   55cee:	mov    r15,QWORD PTR [rax]
   55cf1:	mov    r13,QWORD PTR [rax+0x10]
   55cf5:	mov    QWORD PTR [rsp+0x68],rdi
   55cfa:	mov    rdi,QWORD PTR [rbp+0x48]
   55cfe:	mov    QWORD PTR [rbp+0xb8],r13
   55d05:	mov    QWORD PTR [rsp+0x70],rdi
   55d0a:	test   r15,r15
   55d0d:	je     56288 <_obstack_memory_used@@Base+0x9608>
   55d13:	mov    QWORD PTR [rbp+0x48],r15
   55d17:	lea    rsi,[r15-0x1]
   55d1b:	mov    rdi,rbp
   55d1e:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   55d23:	mov    r12d,eax
   55d26:	cmp    r15,rbx
   55d29:	je     5629b <_obstack_memory_used@@Base+0x961b>
   55d2f:	mov    r14,QWORD PTR [r13+r15*8+0x0]
   55d34:	test   r14,r14
   55d37:	je     55d44 <_obstack_memory_used@@Base+0x90c4>
   55d39:	test   BYTE PTR [r14+0x68],0x40
   55d3e:	jne    56138 <_obstack_memory_used@@Base+0x94b8>
   55d44:	mov    QWORD PTR [rsp+0xa0],0x0
   55d50:	pxor   xmm0,xmm0
   55d54:	movaps XMMWORD PTR [rsp+0x90],xmm0
   55d5c:	cmp    r15,QWORD PTR [rsp+0x50]
   55d61:	jge    560aa <_obstack_memory_used@@Base+0x942a>
   55d67:	mov    QWORD PTR [rsp+0x28],0x0
   55d70:	lea    rax,[r15+0x1]
   55d74:	mov    QWORD PTR [rsp+0x8],rax
   55d79:	lea    rax,[rsp+0x90]
   55d81:	mov    QWORD PTR [rsp],rax
   55d85:	mov    rax,QWORD PTR [rsp+0x8]
   55d8a:	sub    rax,0x1
   55d8e:	mov    QWORD PTR [rsp+0x20],rax
   55d93:	movsxd rax,DWORD PTR [rbp+0xe0]
   55d9a:	cmp    QWORD PTR [rsp+0x28],rax
   55d9f:	jg     56378 <_obstack_memory_used@@Base+0x96f8>
   55da5:	mov    rdx,QWORD PTR [rsp+0x8]
   55daa:	mov    QWORD PTR [rsp+0x98],0x0
   55db6:	lea    rax,[rdx*8+0x0]
   55dbe:	mov    QWORD PTR [rsp+0x30],rax
   55dc3:	mov    rax,QWORD PTR [rbp+0xb8]
   55dca:	mov    rsi,QWORD PTR [rax+rdx*8]
   55dce:	test   rsi,rsi
   55dd1:	je     561e8 <_obstack_memory_used@@Base+0x9568>
   55dd7:	mov    rdi,QWORD PTR [rsp]
   55ddb:	add    rsi,0x8
   55ddf:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   55de4:	mov    DWORD PTR [rsp+0x88],eax
   55deb:	test   eax,eax
   55ded:	jne    56218 <_obstack_memory_used@@Base+0x9598>
   55df3:	test   r14,r14
   55df6:	je     55fe0 <_obstack_memory_used@@Base+0x9360>
   55dfc:	pxor   xmm0,xmm0
   55e00:	cmp    QWORD PTR [r14+0x28],0x0
   55e05:	lea    rax,[rsp+0xb0]
   55e0d:	mov    DWORD PTR [rsp+0x8c],0x0
   55e18:	mov    QWORD PTR [rsp+0x18],rax
   55e1d:	mov    r13,QWORD PTR [rbp+0x98]
   55e24:	mov    QWORD PTR [rsp+0xc0],0x0
   55e30:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   55e38:	jle    563c7 <_obstack_memory_used@@Base+0x9747>
   55e3e:	mov    r15,QWORD PTR [rsp+0x20]
   55e43:	xor    ebx,ebx
   55e45:	jmp    55e8e <_obstack_memory_used@@Base+0x920e>
   55e47:	nop    WORD PTR [rax+rax*1+0x0]
   55e50:	mov    rdx,r15
   55e53:	mov    rdi,rbp
   55e56:	call   55000 <_obstack_memory_used@@Base+0x8380>
   55e5b:	test   al,al
   55e5d:	je     55e80 <_obstack_memory_used@@Base+0x9200>
   55e5f:	lea    rcx,[r12*8+0x0]
   55e67:	mov    rax,QWORD PTR [r13+0x18]
   55e6b:	mov    rdi,QWORD PTR [rsp]
   55e6f:	mov    rsi,QWORD PTR [rax+rcx*1]
   55e73:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   55e78:	test   al,al
   55e7a:	je     56200 <_obstack_memory_used@@Base+0x9580>
   55e80:	add    rbx,0x1
   55e84:	cmp    rbx,QWORD PTR [r14+0x28]
   55e88:	jge    56238 <_obstack_memory_used@@Base+0x95b8>
   55e8e:	mov    rax,QWORD PTR [r14+0x30]
   55e92:	mov    rsi,QWORD PTR [r13+0x0]
   55e96:	mov    r12,QWORD PTR [rax+rbx*8]
   55e9a:	mov    r8,r12
   55e9d:	shl    r8,0x4
   55ea1:	add    rsi,r8
   55ea4:	test   BYTE PTR [rsi+0xa],0x10
   55ea8:	je     55e50 <_obstack_memory_used@@Base+0x91d0>
   55eaa:	mov    rcx,r15
   55ead:	mov    rdx,rbp
   55eb0:	mov    rsi,r12
   55eb3:	mov    rdi,r13
   55eb6:	mov    QWORD PTR [rsp+0x10],r8
   55ebb:	call   54d30 <_obstack_memory_used@@Base+0x80b0>
   55ec0:	mov    r8,QWORD PTR [rsp+0x10]
   55ec5:	cmp    eax,0x1
   55ec8:	jle    561d0 <_obstack_memory_used@@Base+0x9550>
   55ece:	mov    rdx,QWORD PTR [r13+0x18]
   55ed2:	cdqe   
   55ed4:	lea    rcx,[r12*8+0x0]
   55edc:	mov    r8,QWORD PTR [rdx+r12*8]
   55ee0:	lea    r12,[rax+r15*1]
   55ee4:	lea    rax,[r12*8+0x0]
   55eec:	mov    QWORD PTR [rsp+0x40],rax
   55ef1:	mov    rax,QWORD PTR [rbp+0xb8]
   55ef8:	mov    rsi,QWORD PTR [rax+r12*8]
   55efc:	mov    QWORD PTR [rsp+0xb8],0x0
   55f08:	test   rsi,rsi
   55f0b:	je     55f3a <_obstack_memory_used@@Base+0x92ba>
   55f0d:	mov    rdi,QWORD PTR [rsp+0x18]
   55f12:	add    rsi,0x8
   55f16:	mov    QWORD PTR [rsp+0x48],rcx
   55f1b:	mov    QWORD PTR [rsp+0x10],r8
   55f20:	call   4daf0 <_obstack_memory_used@@Base+0xe70>
   55f25:	mov    r8,QWORD PTR [rsp+0x10]
   55f2a:	mov    rcx,QWORD PTR [rsp+0x48]
   55f2f:	test   eax,eax
   55f31:	mov    DWORD PTR [rsp+0x8c],eax
   55f38:	jne    55fb8 <_obstack_memory_used@@Base+0x9338>
   55f3a:	mov    rdi,QWORD PTR [rsp+0x18]
   55f3f:	mov    rsi,r8
   55f42:	mov    QWORD PTR [rsp+0x10],rcx
   55f47:	call   4dcb0 <_obstack_memory_used@@Base+0x1030>
   55f4c:	mov    rcx,QWORD PTR [rsp+0x10]
   55f51:	test   al,al
   55f53:	je     56200 <_obstack_memory_used@@Base+0x9580>
   55f59:	mov    rdx,QWORD PTR [rsp+0x18]
   55f5e:	mov    r8,QWORD PTR [rsp+0x40]
   55f63:	mov    rsi,r13
   55f66:	mov    QWORD PTR [rsp+0x48],rcx
   55f6b:	add    r8,QWORD PTR [rbp+0xb8]
   55f72:	lea    rdi,[rsp+0x8c]
   55f7a:	mov    QWORD PTR [rsp+0x10],r8
   55f7f:	call   4e360 <_obstack_memory_used@@Base+0x16e0>
   55f84:	mov    r8,QWORD PTR [rsp+0x10]
   55f89:	mov    rcx,QWORD PTR [rsp+0x48]
   55f8e:	mov    QWORD PTR [r8],rax
   55f91:	mov    rax,QWORD PTR [rbp+0xb8]
   55f98:	cmp    QWORD PTR [rax+r12*8],0x0
   55f9d:	jne    55e67 <_obstack_memory_used@@Base+0x91e7>
   55fa3:	mov    edx,DWORD PTR [rsp+0x8c]
   55faa:	test   edx,edx
   55fac:	je     55e67 <_obstack_memory_used@@Base+0x91e7>
   55fb2:	nop    WORD PTR [rax+rax*1+0x0]
   55fb8:	mov    rdi,QWORD PTR [rsp+0xc0]
   55fc0:	call   9ce0 <free@plt>
   55fc5:	mov    eax,DWORD PTR [rsp+0x8c]
   55fcc:	mov    DWORD PTR [rsp+0x88],eax
   55fd3:	test   eax,eax
   55fd5:	jne    56218 <_obstack_memory_used@@Base+0x9598>
   55fdb:	nop    DWORD PTR [rax+rax*1+0x0]
   55fe0:	cmp    QWORD PTR [rsp+0x98],0x0
   55fe9:	mov    rbx,QWORD PTR [rsp+0x8]
   55fee:	je     56046 <_obstack_memory_used@@Base+0x93c6>
   55ff0:	mov    ecx,DWORD PTR [rsp+0x110]
   55ff7:	mov    rdx,QWORD PTR [rsp+0x58]
   55ffc:	mov    rsi,QWORD PTR [rsp]
   56000:	mov    rdi,QWORD PTR [rsp+0x38]
   56005:	call   53080 <_obstack_memory_used@@Base+0x6400>
   5600a:	mov    DWORD PTR [rsp+0x88],eax
   56011:	test   eax,eax
   56013:	jne    56218 <_obstack_memory_used@@Base+0x9598>
   56019:	mov    r8d,DWORD PTR [rsp+0x110]
   56021:	mov    rcx,QWORD PTR [rsp+0x58]
   56026:	mov    rdi,rbp
   56029:	mov    rdx,QWORD PTR [rsp+0x8]
   5602e:	mov    rsi,QWORD PTR [rsp]
   56032:	call   531e0 <_obstack_memory_used@@Base+0x6560>
   56037:	mov    DWORD PTR [rsp+0x88],eax
   5603e:	test   eax,eax
   56040:	jne    56218 <_obstack_memory_used@@Base+0x9598>
   56046:	mov    edx,DWORD PTR [rbp+0xa0]
   5604c:	mov    rsi,QWORD PTR [rsp+0x20]
   56051:	mov    rdi,rbp
   56054:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   56059:	mov    rdx,QWORD PTR [rsp]
   5605d:	mov    rsi,QWORD PTR [rsp+0x38]
   56062:	lea    rdi,[rsp+0x88]
   5606a:	mov    ecx,eax
   5606c:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   56071:	mov    r14,rax
   56074:	test   rax,rax
   56077:	je     56258 <_obstack_memory_used@@Base+0x95d8>
   5607d:	mov    rax,QWORD PTR [rbp+0xb8]
   56084:	mov    rcx,QWORD PTR [rsp+0x30]
   56089:	mov    QWORD PTR [rsp+0x28],0x0
   56092:	mov    QWORD PTR [rax+rcx*1],r14
   56096:	add    QWORD PTR [rsp+0x8],0x1
   5609c:	cmp    rbx,QWORD PTR [rsp+0x50]
   560a1:	jl     55d85 <_obstack_memory_used@@Base+0x9105>
   560a7:	mov    r15,rbx
   560aa:	mov    rdi,QWORD PTR [rsp+0xa0]
   560b2:	call   9ce0 <free@plt>
   560b7:	mov    rax,QWORD PTR [rbp+0xb8]
   560be:	mov    rbx,QWORD PTR [rsp+0x50]
   560c3:	mov    rax,QWORD PTR [rax+rbx*8]
   560c7:	test   rax,rax
   560ca:	je     563a0 <_obstack_memory_used@@Base+0x9720>
   560d0:	mov    rbx,QWORD PTR [rsp+0x60]
   560d5:	mov    rsi,QWORD PTR [rsp+0x78]
   560da:	lea    rdi,[rax+0x8]
   560de:	mov    QWORD PTR [rbx],r15
   560e1:	mov    rbx,QWORD PTR [rsp+0x68]
   560e6:	mov    QWORD PTR [rbp+0xb8],rbx
   560ed:	mov    rbx,QWORD PTR [rsp+0x70]
   560f2:	mov    QWORD PTR [rbp+0x48],rbx
   560f6:	call   4e300 <_obstack_memory_used@@Base+0x1680>
   560fb:	test   rax,rax
   560fe:	sete   al
   56101:	movzx  eax,al
   56104:	nop    DWORD PTR [rax+0x0]
   56108:	mov    rdx,QWORD PTR [rsp+0xc8]
   56110:	sub    rdx,QWORD PTR fs:0x28
   56119:	jne    563ce <_obstack_memory_used@@Base+0x974e>
   5611f:	add    rsp,0xd8
   56126:	pop    rbx
   56127:	pop    rbp
   56128:	pop    r12
   5612a:	pop    r13
   5612c:	pop    r14
   5612e:	pop    r15
   56130:	ret    
   56131:	nop    DWORD PTR [rax+0x0]
   56138:	lea    r13,[rsp+0x90]
   56140:	lea    rsi,[r14+0x8]
   56144:	mov    rdi,r13
   56147:	call   4d750 <_obstack_memory_used@@Base+0xad0>
   5614c:	mov    DWORD PTR [rsp+0x88],eax
   56153:	test   eax,eax
   56155:	jne    56108 <_obstack_memory_used@@Base+0x9488>
   56157:	test   BYTE PTR [r14+0x68],0x40
   5615c:	je     55d5c <_obstack_memory_used@@Base+0x90dc>
   56162:	cmp    QWORD PTR [rsp+0x98],0x0
   5616b:	je     56197 <_obstack_memory_used@@Base+0x9517>
   5616d:	mov    rcx,QWORD PTR [rsp+0x58]
   56172:	mov    rdx,r15
   56175:	mov    rsi,r13
   56178:	mov    rdi,rbp
   5617b:	mov    r8d,DWORD PTR [rsp+0x110]
   56183:	call   531e0 <_obstack_memory_used@@Base+0x6560>
   56188:	mov    DWORD PTR [rsp+0x88],eax
   5618f:	test   eax,eax
   56191:	jne    56218 <_obstack_memory_used@@Base+0x9598>
   56197:	mov    rsi,QWORD PTR [rsp+0x38]
   5619c:	lea    rdi,[rsp+0x88]
   561a4:	mov    ecx,r12d
   561a7:	mov    rdx,r13
   561aa:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   561af:	mov    r14,rax
   561b2:	test   rax,rax
   561b5:	je     56382 <_obstack_memory_used@@Base+0x9702>
   561bb:	mov    rax,QWORD PTR [rbp+0xb8]
   561c2:	mov    QWORD PTR [rax+r15*8],r14
   561c6:	jmp    55d5c <_obstack_memory_used@@Base+0x90dc>
   561cb:	nop    DWORD PTR [rax+rax*1+0x0]
   561d0:	test   eax,eax
   561d2:	jne    55e5f <_obstack_memory_used@@Base+0x91df>
   561d8:	mov    rsi,QWORD PTR [r13+0x0]
   561dc:	add    rsi,r8
   561df:	jmp    55e50 <_obstack_memory_used@@Base+0x91d0>
   561e4:	nop    DWORD PTR [rax+0x0]
   561e8:	test   r14,r14
   561eb:	jne    55dfc <_obstack_memory_used@@Base+0x917c>
   561f1:	mov    rbx,QWORD PTR [rsp+0x8]
   561f6:	jmp    56046 <_obstack_memory_used@@Base+0x93c6>
   561fb:	nop    DWORD PTR [rax+rax*1+0x0]
   56200:	mov    rdi,QWORD PTR [rsp+0xc0]
   56208:	call   9ce0 <free@plt>
   5620d:	mov    DWORD PTR [rsp+0x88],0xc
   56218:	mov    rdi,QWORD PTR [rsp+0xa0]
   56220:	call   9ce0 <free@plt>
   56225:	mov    eax,DWORD PTR [rsp+0x88]
   5622c:	jmp    56108 <_obstack_memory_used@@Base+0x9488>
   56231:	nop    DWORD PTR [rax+0x0]
   56238:	mov    rdi,QWORD PTR [rsp+0xc0]
   56240:	call   9ce0 <free@plt>
   56245:	mov    DWORD PTR [rsp+0x88],0x0
   56250:	jmp    55fe0 <_obstack_memory_used@@Base+0x9360>
   56255:	nop    DWORD PTR [rax]
   56258:	mov    eax,DWORD PTR [rsp+0x88]
   5625f:	test   eax,eax
   56261:	jne    56218 <_obstack_memory_used@@Base+0x9598>
   56263:	mov    rax,QWORD PTR [rbp+0xb8]
   5626a:	mov    rdi,QWORD PTR [rsp+0x30]
   5626f:	add    QWORD PTR [rsp+0x28],0x1
   56275:	mov    QWORD PTR [rax+rdi*1],0x0
   5627d:	jmp    56096 <_obstack_memory_used@@Base+0x9416>
   56282:	nop    WORD PTR [rax+rax*1+0x0]
   56288:	mov    QWORD PTR [rbp+0x48],rbx
   5628c:	lea    rsi,[rbx-0x1]
   56290:	mov    rdi,rbp
   56293:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   56298:	mov    r12d,eax
   5629b:	mov    edi,0x8
   562a0:	mov    QWORD PTR [rsp+0x90],0x1
   562ac:	mov    QWORD PTR [rsp+0x98],0x1
   562b8:	call   a4a0 <malloc@plt>
   562bd:	mov    QWORD PTR [rsp+0xa0],rax
   562c5:	test   rax,rax
   562c8:	je     56396 <_obstack_memory_used@@Base+0x9716>
   562ce:	mov    rdx,QWORD PTR [rsp+0x58]
   562d3:	mov    rdi,QWORD PTR [rsp+0x38]
   562d8:	mov    QWORD PTR [rax],r14
   562db:	mov    r15,rbx
   562de:	mov    ecx,DWORD PTR [rsp+0x110]
   562e5:	lea    r13,[rsp+0x90]
   562ed:	mov    DWORD PTR [rsp+0x88],0x0
   562f8:	mov    rsi,r13
   562fb:	call   53080 <_obstack_memory_used@@Base+0x6400>
   56300:	mov    DWORD PTR [rsp+0x88],eax
   56307:	test   eax,eax
   56309:	je     56162 <_obstack_memory_used@@Base+0x94e2>
   5630f:	jmp    56218 <_obstack_memory_used@@Base+0x9598>
   56314:	lea    r12,[rax+0x1]
   56318:	movabs rax,0x7fffffffffffffff
   56322:	sub    rax,r13
   56325:	cmp    rax,r12
   56328:	jl     56396 <_obstack_memory_used@@Base+0x9716>
   5632a:	lea    r15,[r13+r12*1+0x0]
   5632f:	mov    rax,r15
   56332:	shr    rax,0x3d
   56336:	jne    56396 <_obstack_memory_used@@Base+0x9716>
   56338:	mov    rax,QWORD PTR [rsp+0x60]
   5633d:	lea    rsi,[r15*8+0x0]
   56345:	mov    rdi,QWORD PTR [rax+0x10]
   56349:	call   a570 <realloc@plt>
   5634e:	test   rax,rax
   56351:	je     56396 <_obstack_memory_used@@Base+0x9716>
   56353:	mov    rdi,QWORD PTR [rsp+0x60]
   56358:	lea    rdx,[r12*8+0x0]
   56360:	xor    esi,esi
   56362:	mov    QWORD PTR [rdi+0x8],r15
   56366:	mov    QWORD PTR [rdi+0x10],rax
   5636a:	lea    rdi,[rax+r13*8]
   5636e:	call   a1b0 <memset@plt>
   56373:	jmp    55cdc <_obstack_memory_used@@Base+0x905c>
   56378:	mov    r15,QWORD PTR [rsp+0x20]
   5637d:	jmp    560aa <_obstack_memory_used@@Base+0x942a>
   56382:	mov    ecx,DWORD PTR [rsp+0x88]
   56389:	test   ecx,ecx
   5638b:	je     561bb <_obstack_memory_used@@Base+0x953b>
   56391:	jmp    56218 <_obstack_memory_used@@Base+0x9598>
   56396:	mov    eax,0xc
   5639b:	jmp    56108 <_obstack_memory_used@@Base+0x9488>
   563a0:	mov    rax,QWORD PTR [rsp+0x60]
   563a5:	mov    QWORD PTR [rax],r15
   563a8:	mov    rax,QWORD PTR [rsp+0x68]
   563ad:	mov    QWORD PTR [rbp+0xb8],rax
   563b4:	mov    rax,QWORD PTR [rsp+0x70]
   563b9:	mov    QWORD PTR [rbp+0x48],rax
   563bd:	mov    eax,0x1
   563c2:	jmp    56108 <_obstack_memory_used@@Base+0x9488>
   563c7:	xor    edi,edi
   563c9:	jmp    56240 <_obstack_memory_used@@Base+0x95c0>
   563ce:	call   a0a0 <__stack_chk_fail@plt>
   563d3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   563de:	xchg   ax,ax
   563e0:	push   r15
   563e2:	mov    r9,r8
   563e5:	push   r14
   563e7:	mov    r14,rcx
   563ea:	push   r13
   563ec:	mov    r13,rsi
   563ef:	lea    rsi,[rdx+0x10]
   563f3:	push   r12
   563f5:	mov    r12,rdx
   563f8:	push   rbp
   563f9:	mov    rbp,rdi
   563fc:	push   rbx
   563fd:	mov    rbx,r8
   56400:	mov    r8,r14
   56403:	sub    rsp,0x20
   56407:	mov    rcx,QWORD PTR [rdx+0x8]
   5640b:	push   0x8
   5640d:	mov    rdx,QWORD PTR [rdx]
   56410:	call   55c60 <_obstack_memory_used@@Base+0x8fe0>
   56415:	pop    rdx
   56416:	pop    rcx
   56417:	test   eax,eax
   56419:	je     56430 <_obstack_memory_used@@Base+0x97b0>
   5641b:	add    rsp,0x18
   5641f:	pop    rbx
   56420:	pop    rbp
   56421:	pop    r12
   56423:	pop    r13
   56425:	pop    r14
   56427:	pop    r15
   56429:	ret    
   5642a:	nop    WORD PTR [rax+rax*1+0x0]
   56430:	mov    r15,QWORD PTR [r12+0x8]
   56435:	mov    rcx,QWORD PTR [r13+0x0]
   56439:	mov    rdx,QWORD PTR [rbp+0xc8]
   56440:	mov    rax,QWORD PTR [rbp+0xd0]
   56447:	mov    rdi,QWORD PTR [rbp+0xd8]
   5644e:	mov    r8,rcx
   56451:	mov    rsi,r15
   56454:	cmp    rdx,rax
   56457:	jge    564f0 <_obstack_memory_used@@Base+0x9870>
   5645d:	lea    rax,[rdx+rdx*2]
   56461:	shl    rax,0x4
   56465:	test   rdx,rdx
   56468:	jle    56475 <_obstack_memory_used@@Base+0x97f5>
   5646a:	lea    r9,[rdi+rax*1-0x30]
   5646f:	cmp    rbx,QWORD PTR [r9+0x8]
   56473:	je     564e0 <_obstack_memory_used@@Base+0x9860>
   56475:	add    rax,rdi
   56478:	xor    edi,edi
   5647a:	cmp    r15,rcx
   5647d:	sete   dil
   56481:	add    rdx,0x1
   56485:	mov    QWORD PTR [rax],r14
   56488:	neg    rdi
   5648b:	mov    QWORD PTR [rax+0x8],rbx
   5648f:	mov    QWORD PTR [rax+0x10],rcx
   56493:	mov    QWORD PTR [rax+0x18],r15
   56497:	mov    QWORD PTR [rax+0x20],rdi
   5649b:	mov    QWORD PTR [rbp+0xc8],rdx
   564a2:	mov    BYTE PTR [rax+0x28],0x0
   564a6:	mov    rax,r15
   564a9:	movsxd rdx,DWORD PTR [rbp+0xe0]
   564b0:	sub    rax,rcx
   564b3:	cmp    rdx,rax
   564b6:	jge    564c2 <_obstack_memory_used@@Base+0x9842>
   564b8:	sub    r15d,ecx
   564bb:	mov    DWORD PTR [rbp+0xe0],r15d
   564c2:	add    rsp,0x18
   564c6:	add    rsi,rbx
   564c9:	mov    rdi,rbp
   564cc:	pop    rbx
   564cd:	sub    rsi,r8
   564d0:	pop    rbp
   564d1:	pop    r12
   564d3:	pop    r13
   564d5:	pop    r14
   564d7:	pop    r15
   564d9:	jmp    54540 <_obstack_memory_used@@Base+0x78c0>
   564de:	xchg   ax,ax
   564e0:	mov    BYTE PTR [r9+0x28],0x1
   564e5:	jmp    56475 <_obstack_memory_used@@Base+0x97f5>
   564e7:	nop    WORD PTR [rax+rax*1+0x0]
   564f0:	lea    rsi,[rax+rax*2]
   564f4:	mov    QWORD PTR [rsp+0x8],rcx
   564f9:	shl    rsi,0x5
   564fd:	call   a570 <realloc@plt>
   56502:	mov    rcx,QWORD PTR [rsp+0x8]
   56507:	test   rax,rax
   5650a:	je     56570 <_obstack_memory_used@@Base+0x98f0>
   5650c:	mov    rsi,QWORD PTR [rbp+0xc8]
   56513:	mov    rdx,QWORD PTR [rbp+0xd0]
   5651a:	mov    QWORD PTR [rsp+0x8],rcx
   5651f:	mov    QWORD PTR [rbp+0xd8],rax
   56526:	lea    rsi,[rsi+rsi*2]
   5652a:	lea    rdx,[rdx+rdx*2]
   5652e:	shl    rsi,0x4
   56532:	shl    rdx,0x4
   56536:	lea    rdi,[rax+rsi*1]
   5653a:	xor    esi,esi
   5653c:	call   a1b0 <memset@plt>
   56541:	mov    rsi,QWORD PTR [r12+0x8]
   56546:	mov    r8,QWORD PTR [r13+0x0]
   5654a:	shl    QWORD PTR [rbp+0xd0],1
   56551:	mov    rdx,QWORD PTR [rbp+0xc8]
   56558:	mov    rdi,QWORD PTR [rbp+0xd8]
   5655f:	mov    rcx,QWORD PTR [rsp+0x8]
   56564:	jmp    5645d <_obstack_memory_used@@Base+0x97dd>
   56569:	nop    DWORD PTR [rax+0x0]
   56570:	mov    rdi,QWORD PTR [rbp+0xd8]
   56577:	call   9ce0 <free@plt>
   5657c:	mov    eax,0xc
   56581:	jmp    5641b <_obstack_memory_used@@Base+0x979b>
   56586:	cs nop WORD PTR [rax+rax*1+0x0]
   56590:	push   r15
   56592:	push   r14
   56594:	mov    r14,rdi
   56597:	push   r13
   56599:	push   r12
   5659b:	push   rbp
   5659c:	push   rbx
   5659d:	sub    rsp,0xa8
   565a4:	mov    r15,QWORD PTR [rdi+0x48]
   565a8:	mov    QWORD PTR [rsp+0x10],rsi
   565ad:	mov    rax,QWORD PTR fs:0x28
   565b6:	mov    QWORD PTR [rsp+0x98],rax
   565be:	mov    rax,QWORD PTR [rdi+0x98]
   565c5:	cmp    QWORD PTR [rsi+0x8],0x0
   565ca:	mov    QWORD PTR [rsp+0x8],0x0
   565d3:	mov    QWORD PTR [rsp+0x38],rax
   565d8:	lea    rax,[r15*8+0x0]
   565e0:	mov    QWORD PTR [rsp+0x50],rax
   565e5:	jg     5663a <_obstack_memory_used@@Base+0x99ba>
   565e7:	jmp    56b20 <_obstack_memory_used@@Base+0x9ea0>
   565ec:	nop    DWORD PTR [rax+0x0]
   565f0:	test   al,0x1
   565f2:	je     56620 <_obstack_memory_used@@Base+0x99a0>
   565f4:	and    edx,0x8
   565f7:	jne    56620 <_obstack_memory_used@@Base+0x99a0>
   565f9:	test   cl,0x20
   565fc:	je     56602 <_obstack_memory_used@@Base+0x9982>
   565fe:	test   al,0x2
   56600:	je     56620 <_obstack_memory_used@@Base+0x99a0>
   56602:	and    ecx,0x80
   56608:	je     566b0 <_obstack_memory_used@@Base+0x9a30>
   5660e:	test   al,0x8
   56610:	jne    566b0 <_obstack_memory_used@@Base+0x9a30>
   56616:	cs nop WORD PTR [rax+rax*1+0x0]
   56620:	mov    rdi,QWORD PTR [rsp+0x10]
   56625:	add    QWORD PTR [rsp+0x8],0x1
   5662b:	mov    rax,QWORD PTR [rsp+0x8]
   56630:	cmp    QWORD PTR [rdi+0x8],rax
   56634:	jle    56b20 <_obstack_memory_used@@Base+0x9ea0>
   5663a:	mov    rax,QWORD PTR [rsp+0x10]
   5663f:	mov    rdi,QWORD PTR [rsp+0x8]
   56644:	mov    rsi,QWORD PTR [rsp+0x38]
   56649:	mov    rax,QWORD PTR [rax+0x10]
   5664d:	mov    r13,QWORD PTR [rax+rdi*8]
   56651:	mov    rax,QWORD PTR [rsi]
   56654:	mov    rbp,r13
   56657:	shl    rbp,0x4
   5665b:	add    rax,rbp
   5665e:	cmp    BYTE PTR [rax+0x8],0x4
   56662:	jne    56620 <_obstack_memory_used@@Base+0x99a0>
   56664:	mov    ebx,DWORD PTR [rax+0x8]
   56667:	test   ebx,0x3ff00
   5666d:	je     566b0 <_obstack_memory_used@@Base+0x9a30>
   5666f:	mov    edx,DWORD PTR [r14+0xa0]
   56676:	shr    ebx,0x8
   56679:	mov    rsi,r15
   5667c:	mov    rdi,r14
   5667f:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   56684:	mov    ecx,ebx
   56686:	mov    edx,ebx
   56688:	and    cx,0x3ff
   5668d:	test   bl,0x4
   56690:	jne    565f0 <_obstack_memory_used@@Base+0x9970>
   56696:	and    edx,0x8
   56699:	je     565f9 <_obstack_memory_used@@Base+0x9979>
   5669f:	test   al,0x1
   566a1:	je     565f9 <_obstack_memory_used@@Base+0x9979>
   566a7:	jmp    56620 <_obstack_memory_used@@Base+0x99a0>
   566ac:	nop    DWORD PTR [rax+0x0]
   566b0:	mov    rax,QWORD PTR [r14+0x98]
   566b7:	mov    rsi,r15
   566ba:	mov    rdi,r14
   566bd:	mov    rbx,QWORD PTR [r14+0xc8]
   566c4:	mov    r10,QWORD PTR [r14+0x8]
   566c8:	mov    QWORD PTR [rsp+0x58],rax
   566cd:	call   52aa0 <_obstack_memory_used@@Base+0x5e20>
   566d2:	cmp    rax,0xffffffffffffffff
   566d6:	je     56940 <_obstack_memory_used@@Base+0x9cc0>
   566dc:	lea    rax,[rax+rax*2]
   566e0:	shl    rax,0x4
   566e4:	add    rax,QWORD PTR [r14+0xd8]
   566eb:	jmp    566fe <_obstack_memory_used@@Base+0x9a7e>
   566ed:	nop    DWORD PTR [rax]
   566f0:	add    rax,0x30
   566f4:	cmp    BYTE PTR [rax-0x8],0x0
   566f8:	je     56940 <_obstack_memory_used@@Base+0x9cc0>
   566fe:	cmp    r13,QWORD PTR [rax]
   56701:	jne    566f0 <_obstack_memory_used@@Base+0x9a70>
   56703:	lea    rax,[r13*8+0x0]
   5670b:	mov    DWORD PTR [rsp+0x7c],0x0
   56713:	mov    r12,QWORD PTR [rsp+0x38]
   56718:	mov    QWORD PTR [rsp+0x58],rax
   5671d:	lea    rax,[r13+r13*2+0x0]
   56722:	shl    rax,0x3
   56726:	mov    QWORD PTR [rsp+0x60],rax
   5672b:	cmp    rbx,QWORD PTR [r14+0xc8]
   56732:	jl     56871 <_obstack_memory_used@@Base+0x9bf1>
   56738:	jmp    56620 <_obstack_memory_used@@Base+0x99a0>
   5673d:	nop    DWORD PTR [rax]
   56740:	mov    rsi,QWORD PTR [rsp+0x60]
   56745:	mov    rcx,QWORD PTR [r12+0x28]
   5674a:	mov    rcx,QWORD PTR [rcx+rsi*1+0x10]
   5674f:	mov    rcx,QWORD PTR [rcx]
   56752:	lea    rcx,[rcx+rcx*2]
   56756:	lea    rsi,[rdx+rcx*8]
   5675a:	mov    QWORD PTR [rsp+0x20],rsi
   5675f:	add    rbp,r15
   56762:	mov    edx,DWORD PTR [r14+0xa0]
   56769:	mov    rdi,r14
   5676c:	sub    rbp,rax
   5676f:	lea    rsi,[rbp-0x1]
   56773:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   56778:	mov    rdi,QWORD PTR [rsp+0x50]
   5677d:	lea    r11,[rbp*8+0x0]
   56785:	mov    QWORD PTR [rsp+0x18],0x0
   5678e:	mov    ecx,eax
   56790:	mov    rax,QWORD PTR [r14+0xb8]
   56797:	lea    r10,[rax+r11*1]
   5679b:	mov    rax,QWORD PTR [rax+rdi*1]
   5679f:	mov    rdx,QWORD PTR [r10]
   567a2:	test   rax,rax
   567a5:	je     567b0 <_obstack_memory_used@@Base+0x9b30>
   567a7:	mov    rax,QWORD PTR [rax+0x10]
   567ab:	mov    QWORD PTR [rsp+0x18],rax
   567b0:	test   rdx,rdx
   567b3:	je     568d0 <_obstack_memory_used@@Base+0x9c50>
   567b9:	lea    r10,[rsp+0x80]
   567c1:	mov    rsi,QWORD PTR [rdx+0x50]
   567c5:	mov    rdx,QWORD PTR [rsp+0x20]
   567ca:	mov    DWORD PTR [rsp+0x48],ecx
   567ce:	mov    rdi,r10
   567d1:	mov    QWORD PTR [rsp+0x40],r11
   567d6:	mov    QWORD PTR [rsp+0x30],r10
   567db:	call   4d980 <_obstack_memory_used@@Base+0xd00>
   567e0:	mov    r10,QWORD PTR [rsp+0x30]
   567e5:	mov    r11,QWORD PTR [rsp+0x40]
   567ea:	test   eax,eax
   567ec:	mov    DWORD PTR [rsp+0x7c],eax
   567f0:	mov    ecx,DWORD PTR [rsp+0x48]
   567f4:	jne    56b00 <_obstack_memory_used@@Base+0x9e80>
   567fa:	add    r11,QWORD PTR [r14+0xb8]
   56801:	mov    rdx,r10
   56804:	lea    rdi,[rsp+0x7c]
   56809:	mov    rsi,r12
   5680c:	mov    QWORD PTR [rsp+0x30],r11
   56811:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   56816:	mov    r11,QWORD PTR [rsp+0x30]
   5681b:	mov    rdi,QWORD PTR [rsp+0x90]
   56823:	mov    QWORD PTR [r11],rax
   56826:	call   9ce0 <free@plt>
   5682b:	mov    rdx,QWORD PTR [r14+0xb8]
   56832:	cmp    QWORD PTR [rdx+rbp*8],0x0
   56837:	je     56901 <_obstack_memory_used@@Base+0x9c81>
   5683d:	cmp    QWORD PTR [rsp+0x28],0x0
   56843:	jne    56860 <_obstack_memory_used@@Base+0x9be0>
   56845:	mov    rax,QWORD PTR [rsp+0x50]
   5684a:	mov    rdi,QWORD PTR [rsp+0x18]
   5684f:	mov    rax,QWORD PTR [rdx+rax*1]
   56853:	cmp    QWORD PTR [rax+0x10],rdi
   56857:	jg     56a78 <_obstack_memory_used@@Base+0x9df8>
   5685d:	nop    DWORD PTR [rax]
   56860:	add    rbx,0x1
   56864:	cmp    QWORD PTR [r14+0xc8],rbx
   5686b:	jle    56620 <_obstack_memory_used@@Base+0x99a0>
   56871:	lea    rax,[rbx+rbx*2]
   56875:	shl    rax,0x4
   56879:	add    rax,QWORD PTR [r14+0xd8]
   56880:	cmp    QWORD PTR [rax],r13
   56883:	jne    56860 <_obstack_memory_used@@Base+0x9be0>
   56885:	cmp    QWORD PTR [rax+0x8],r15
   56889:	jne    56860 <_obstack_memory_used@@Base+0x9be0>
   5688b:	mov    rbp,QWORD PTR [rax+0x18]
   5688f:	mov    rax,QWORD PTR [rax+0x10]
   56893:	mov    rdx,QWORD PTR [r12+0x30]
   56898:	mov    rsi,rbp
   5689b:	sub    rsi,rax
   5689e:	mov    QWORD PTR [rsp+0x28],rsi
   568a3:	je     56740 <_obstack_memory_used@@Base+0x9ac0>
   568a9:	mov    rcx,QWORD PTR [r12+0x18]
   568ae:	mov    rdi,QWORD PTR [rsp+0x58]
   568b3:	mov    rcx,QWORD PTR [rcx+rdi*1]
   568b7:	lea    rcx,[rcx+rcx*2]
   568bb:	lea    rsi,[rdx+rcx*8]
   568bf:	mov    QWORD PTR [rsp+0x20],rsi
   568c4:	jmp    5675f <_obstack_memory_used@@Base+0x9adf>
   568c9:	nop    DWORD PTR [rax+0x0]
   568d0:	mov    rdx,QWORD PTR [rsp+0x20]
   568d5:	lea    rdi,[rsp+0x7c]
   568da:	mov    rsi,r12
   568dd:	mov    QWORD PTR [rsp+0x30],r10
   568e2:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   568e7:	mov    r10,QWORD PTR [rsp+0x30]
   568ec:	mov    rdx,QWORD PTR [r14+0xb8]
   568f3:	mov    QWORD PTR [r10],rax
   568f6:	cmp    QWORD PTR [rdx+rbp*8],0x0
   568fb:	jne    5683d <_obstack_memory_used@@Base+0x9bbd>
   56901:	mov    eax,DWORD PTR [rsp+0x7c]
   56905:	test   eax,eax
   56907:	je     5683d <_obstack_memory_used@@Base+0x9bbd>
   5690d:	nop    DWORD PTR [rax]
   56910:	mov    rdx,QWORD PTR [rsp+0x98]
   56918:	sub    rdx,QWORD PTR fs:0x28
   56921:	jne    56d8f <_obstack_memory_used@@Base+0xa10f>
   56927:	add    rsp,0xa8
   5692e:	pop    rbx
   5692f:	pop    rbp
   56930:	pop    r12
   56932:	pop    r13
   56934:	pop    r14
   56936:	pop    r15
   56938:	ret    
   56939:	nop    DWORD PTR [rax+0x0]
   56940:	mov    rax,QWORD PTR [rsp+0x58]
   56945:	cmp    QWORD PTR [r14+0xe8],0x0
   5694d:	mov    rdx,QWORD PTR [rax]
   56950:	mov    rax,QWORD PTR [rdx+rbp*1]
   56954:	mov    QWORD PTR [rsp+0x60],rax
   56959:	jle    56703 <_obstack_memory_used@@Base+0x9a83>
   5695f:	mov    QWORD PTR [rsp+0x18],0x0
   56968:	mov    QWORD PTR [rsp+0x68],rbx
   5696d:	mov    QWORD PTR [rsp+0x40],r15
   56972:	mov    QWORD PTR [rsp+0x48],r13
   56977:	mov    rax,QWORD PTR [r14+0xf8]
   5697e:	mov    rsi,QWORD PTR [rsp+0x18]
   56983:	mov    rdi,QWORD PTR [rsp+0x60]
   56988:	mov    rbx,QWORD PTR [rax+rsi*8]
   5698c:	mov    rax,QWORD PTR [rbx+0x8]
   56990:	shl    rax,0x4
   56994:	cmp    rdi,QWORD PTR [rdx+rax*1]
   56998:	je     569c0 <_obstack_memory_used@@Base+0x9d40>
   5699a:	add    QWORD PTR [rsp+0x18],0x1
   569a0:	mov    rax,QWORD PTR [rsp+0x18]
   569a5:	cmp    rax,QWORD PTR [r14+0xe8]
   569ac:	jge    56d10 <_obstack_memory_used@@Base+0xa090>
   569b2:	mov    rax,QWORD PTR [rsp+0x58]
   569b7:	mov    rdx,QWORD PTR [rax]
   569ba:	jmp    56977 <_obstack_memory_used@@Base+0x9cf7>
   569bc:	nop    DWORD PTR [rax+0x0]
   569c0:	cmp    QWORD PTR [rbx+0x20],0x0
   569c5:	mov    r15,QWORD PTR [rbx]
   569c8:	jle    56d82 <_obstack_memory_used@@Base+0xa102>
   569ce:	mov    rbp,QWORD PTR [rsp+0x40]
   569d3:	xor    r12d,r12d
   569d6:	mov    r9,r10
   569d9:	jmp    569ee <_obstack_memory_used@@Base+0x9d6e>
   569db:	nop    DWORD PTR [rax+rax*1+0x0]
   569e0:	add    r12,0x1
   569e4:	cmp    r12,QWORD PTR [rbx+0x20]
   569e8:	jge    56b27 <_obstack_memory_used@@Base+0x9ea7>
   569ee:	mov    rax,QWORD PTR [rbx+0x28]
   569f2:	mov    rcx,r15
   569f5:	mov    r8,rbp
   569f8:	mov    r13,QWORD PTR [rax+r12*8]
   569fc:	mov    r15,QWORD PTR [r13+0x8]
   56a00:	mov    rdx,r15
   56a03:	sub    rdx,rcx
   56a06:	add    rbp,rdx
   56a09:	test   rdx,rdx
   56a0c:	jle    56a4b <_obstack_memory_used@@Base+0x9dcb>
   56a0e:	cmp    QWORD PTR [r14+0x30],rbp
   56a12:	jl     56ab8 <_obstack_memory_used@@Base+0x9e38>
   56a18:	lea    rsi,[r9+rcx*1]
   56a1c:	lea    rdi,[r9+r8*1]
   56a20:	mov    QWORD PTR [rsp+0x30],rcx
   56a25:	mov    QWORD PTR [rsp+0x28],r8
   56a2a:	mov    QWORD PTR [rsp+0x20],r9
   56a2f:	call   a2c0 <memcmp@plt>
   56a34:	mov    r9,QWORD PTR [rsp+0x20]
   56a39:	mov    r8,QWORD PTR [rsp+0x28]
   56a3e:	test   eax,eax
   56a40:	mov    rcx,QWORD PTR [rsp+0x30]
   56a45:	jne    56ce0 <_obstack_memory_used@@Base+0xa060>
   56a4b:	mov    r8,QWORD PTR [rsp+0x40]
   56a50:	mov    rcx,QWORD PTR [rsp+0x48]
   56a55:	mov    rdx,r13
   56a58:	mov    rsi,rbx
   56a5b:	mov    rdi,r14
   56a5e:	call   563e0 <_obstack_memory_used@@Base+0x9760>
   56a63:	mov    r9,QWORD PTR [r14+0x8]
   56a67:	cmp    eax,0x1
   56a6a:	jbe    569e0 <_obstack_memory_used@@Base+0x9d60>
   56a70:	jmp    56910 <_obstack_memory_used@@Base+0x9c90>
   56a75:	nop    DWORD PTR [rax]
   56a78:	mov    rbp,QWORD PTR [rsp+0x20]
   56a7d:	mov    rdx,r15
   56a80:	mov    rdi,r14
   56a83:	mov    rsi,rbp
   56a86:	call   53750 <_obstack_memory_used@@Base+0x6ad0>
   56a8b:	mov    DWORD PTR [rsp+0x7c],eax
   56a8f:	test   eax,eax
   56a91:	jne    56910 <_obstack_memory_used@@Base+0x9c90>
   56a97:	mov    rsi,rbp
   56a9a:	mov    rdi,r14
   56a9d:	call   56590 <_obstack_memory_used@@Base+0x9910>
   56aa2:	mov    DWORD PTR [rsp+0x7c],eax
   56aa6:	test   eax,eax
   56aa8:	je     56860 <_obstack_memory_used@@Base+0x9be0>
   56aae:	jmp    56910 <_obstack_memory_used@@Base+0x9c90>
   56ab3:	nop    DWORD PTR [rax+rax*1+0x0]
   56ab8:	mov    QWORD PTR [rsp+0x20],rdx
   56abd:	cmp    QWORD PTR [r14+0x58],rbp
   56ac1:	jl     56ce0 <_obstack_memory_used@@Base+0xa060>
   56ac7:	mov    rsi,rbp
   56aca:	mov    rdi,r14
   56acd:	mov    QWORD PTR [rsp+0x30],r8
   56ad2:	mov    QWORD PTR [rsp+0x28],rcx
   56ad7:	call   54540 <_obstack_memory_used@@Base+0x78c0>
   56adc:	test   eax,eax
   56ade:	jne    56910 <_obstack_memory_used@@Base+0x9c90>
   56ae4:	mov    r9,QWORD PTR [r14+0x8]
   56ae8:	mov    rdx,QWORD PTR [rsp+0x20]
   56aed:	mov    r8,QWORD PTR [rsp+0x30]
   56af2:	mov    rcx,QWORD PTR [rsp+0x28]
   56af7:	jmp    56a18 <_obstack_memory_used@@Base+0x9d98>
   56afc:	nop    DWORD PTR [rax+0x0]
   56b00:	mov    rdi,QWORD PTR [rsp+0x90]
   56b08:	call   9ce0 <free@plt>
   56b0d:	mov    eax,DWORD PTR [rsp+0x7c]
   56b11:	jmp    56910 <_obstack_memory_used@@Base+0x9c90>
   56b16:	cs nop WORD PTR [rax+rax*1+0x0]
   56b20:	xor    eax,eax
   56b22:	jmp    56910 <_obstack_memory_used@@Base+0x9c90>
   56b27:	mov    r10,r9
   56b2a:	lea    r13,[r15+0x1]
   56b2e:	mov    r11,rbp
   56b31:	cmp    QWORD PTR [rsp+0x40],r13
   56b36:	jl     5699a <_obstack_memory_used@@Base+0x9d1a>
   56b3c:	mov    rbp,QWORD PTR [rsp+0x60]
   56b41:	mov    r12,r11
   56b44:	mov    r15,r14
   56b47:	nop    WORD PTR [rax+rax*1+0x0]
   56b50:	cmp    r13,QWORD PTR [rbx]
   56b53:	jle    56b77 <_obstack_memory_used@@Base+0x9ef7>
   56b55:	cmp    QWORD PTR [r15+0x30],r12
   56b59:	jle    56d24 <_obstack_memory_used@@Base+0xa0a4>
   56b5f:	movzx  ecx,BYTE PTR [r10+r13*1-0x1]
   56b65:	lea    rax,[r12+0x1]
   56b6a:	cmp    BYTE PTR [r10+r12*1],cl
   56b6e:	jne    56c96 <_obstack_memory_used@@Base+0xa016>
   56b74:	mov    r12,rax
   56b77:	mov    rax,QWORD PTR [r15+0xb8]
   56b7e:	mov    rax,QWORD PTR [rax+r13*8]
   56b82:	test   rax,rax
   56b85:	je     56c87 <_obstack_memory_used@@Base+0xa007>
   56b8b:	mov    rcx,QWORD PTR [rax+0x10]
   56b8f:	test   rcx,rcx
   56b92:	jle    56c87 <_obstack_memory_used@@Base+0xa007>
   56b98:	mov    rdi,QWORD PTR [rax+0x18]
   56b9c:	mov    rax,QWORD PTR [rsp+0x58]
   56ba1:	xor    edx,edx
   56ba3:	mov    rsi,QWORD PTR [rax]
   56ba6:	jmp    56bbd <_obstack_memory_used@@Base+0x9f3d>
   56ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   56bb0:	add    rdx,0x1
   56bb4:	cmp    rcx,rdx
   56bb7:	je     56c87 <_obstack_memory_used@@Base+0xa007>
   56bbd:	mov    r14,QWORD PTR [rdi+rdx*8]
   56bc1:	mov    rax,r14
   56bc4:	shl    rax,0x4
   56bc8:	add    rax,rsi
   56bcb:	cmp    BYTE PTR [rax+0x8],0x9
   56bcf:	jne    56bb0 <_obstack_memory_used@@Base+0x9f30>
   56bd1:	cmp    rbp,QWORD PTR [rax]
   56bd4:	jne    56bb0 <_obstack_memory_used@@Base+0x9f30>
   56bd6:	cmp    r14,0xffffffffffffffff
   56bda:	je     56c87 <_obstack_memory_used@@Base+0xa007>
   56be0:	mov    rsi,QWORD PTR [rbx+0x10]
   56be4:	mov    rcx,QWORD PTR [rbx]
   56be7:	test   rsi,rsi
   56bea:	je     56c9e <_obstack_memory_used@@Base+0xa01e>
   56bf0:	mov    QWORD PTR [rsp+0x20],r10
   56bf5:	sub    rsp,0x8
   56bf9:	mov    rdx,QWORD PTR [rbx+0x8]
   56bfd:	mov    r9,r13
   56c00:	push   0x9
   56c02:	mov    r8,r14
   56c05:	mov    rdi,r15
   56c08:	call   55c60 <_obstack_memory_used@@Base+0x8fe0>
   56c0d:	pop    rdx
   56c0e:	pop    rcx
   56c0f:	cmp    eax,0x1
   56c12:	mov    r10,QWORD PTR [rsp+0x20]
   56c17:	je     56c87 <_obstack_memory_used@@Base+0xa007>
   56c19:	test   eax,eax
   56c1b:	jne    56910 <_obstack_memory_used@@Base+0x9c90>
   56c21:	mov    rax,QWORD PTR [rbx+0x18]
   56c25:	cmp    QWORD PTR [rbx+0x20],rax
   56c29:	je     56d4c <_obstack_memory_used@@Base+0xa0cc>
   56c2f:	mov    esi,0x28
   56c34:	mov    edi,0x1
   56c39:	call   a2f0 <calloc@plt>
   56c3e:	mov    rdx,rax
   56c41:	test   rax,rax
   56c44:	je     56cd6 <_obstack_memory_used@@Base+0xa056>
   56c4a:	mov    rax,QWORD PTR [rbx+0x20]
   56c4e:	mov    rcx,QWORD PTR [rbx+0x28]
   56c52:	mov    rsi,rbx
   56c55:	mov    rdi,r15
   56c58:	mov    r8,QWORD PTR [rsp+0x40]
   56c5d:	mov    QWORD PTR [rcx+rax*8],rdx
   56c61:	add    rax,0x1
   56c65:	mov    rcx,QWORD PTR [rsp+0x48]
   56c6a:	mov    QWORD PTR [rdx],r14
   56c6d:	mov    QWORD PTR [rdx+0x8],r13
   56c71:	mov    QWORD PTR [rbx+0x20],rax
   56c75:	call   563e0 <_obstack_memory_used@@Base+0x9760>
   56c7a:	mov    r10,QWORD PTR [r15+0x8]
   56c7e:	cmp    eax,0x1
   56c81:	ja     56910 <_obstack_memory_used@@Base+0x9c90>
   56c87:	add    r13,0x1
   56c8b:	cmp    QWORD PTR [rsp+0x40],r13
   56c90:	jge    56b50 <_obstack_memory_used@@Base+0x9ed0>
   56c96:	mov    r14,r15
   56c99:	jmp    5699a <_obstack_memory_used@@Base+0x9d1a>
   56c9e:	mov    rsi,r13
   56ca1:	mov    edi,0x18
   56ca6:	mov    QWORD PTR [rsp+0x28],r10
   56cab:	sub    rsi,rcx
   56cae:	mov    QWORD PTR [rsp+0x20],rcx
   56cb3:	add    rsi,0x1
   56cb7:	call   a2f0 <calloc@plt>
   56cbc:	mov    rcx,QWORD PTR [rsp+0x20]
   56cc1:	mov    r10,QWORD PTR [rsp+0x28]
   56cc6:	test   rax,rax
   56cc9:	mov    QWORD PTR [rbx+0x10],rax
   56ccd:	mov    rsi,rax
   56cd0:	jne    56bf0 <_obstack_memory_used@@Base+0x9f70>
   56cd6:	mov    eax,0xc
   56cdb:	jmp    56910 <_obstack_memory_used@@Base+0x9c90>
   56ce0:	mov    r10,r9
   56ce3:	mov    r13,rcx
   56ce6:	mov    r11,r8
   56ce9:	cmp    r12,QWORD PTR [rbx+0x20]
   56ced:	jl     5699a <_obstack_memory_used@@Base+0x9d1a>
   56cf3:	test   r12,r12
   56cf6:	je     56b31 <_obstack_memory_used@@Base+0x9eb1>
   56cfc:	mov    r15,rcx
   56cff:	mov    rbp,r8
   56d02:	jmp    56b2a <_obstack_memory_used@@Base+0x9eaa>
   56d07:	nop    WORD PTR [rax+rax*1+0x0]
   56d10:	mov    rbx,QWORD PTR [rsp+0x68]
   56d15:	mov    r15,QWORD PTR [rsp+0x40]
   56d1a:	mov    r13,QWORD PTR [rsp+0x48]
   56d1f:	jmp    56703 <_obstack_memory_used@@Base+0x9a83>
   56d24:	cmp    QWORD PTR [r15+0x58],r12
   56d28:	jle    56c96 <_obstack_memory_used@@Base+0xa016>
   56d2e:	lea    esi,[r12+0x1]
   56d33:	mov    rdi,r15
   56d36:	call   543f0 <_obstack_memory_used@@Base+0x7770>
   56d3b:	test   eax,eax
   56d3d:	jne    56910 <_obstack_memory_used@@Base+0x9c90>
   56d43:	mov    r10,QWORD PTR [r15+0x8]
   56d47:	jmp    56b5f <_obstack_memory_used@@Base+0x9edf>
   56d4c:	lea    rdx,[rax+rax*1+0x1]
   56d51:	mov    rdi,QWORD PTR [rbx+0x28]
   56d55:	lea    rsi,[rdx*8+0x0]
   56d5d:	mov    QWORD PTR [rsp+0x20],rdx
   56d62:	call   a570 <realloc@plt>
   56d67:	test   rax,rax
   56d6a:	je     56cd6 <_obstack_memory_used@@Base+0xa056>
   56d70:	mov    rdx,QWORD PTR [rsp+0x20]
   56d75:	mov    QWORD PTR [rbx+0x28],rax
   56d79:	mov    QWORD PTR [rbx+0x18],rdx
   56d7d:	jmp    56c2f <_obstack_memory_used@@Base+0x9faf>
   56d82:	mov    r11,QWORD PTR [rsp+0x40]
   56d87:	mov    r13,r15
   56d8a:	jmp    56b31 <_obstack_memory_used@@Base+0x9eb1>
   56d8f:	call   a0a0 <__stack_chk_fail@plt>
   56d94:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   56d9f:	nop
   56da0:	push   r15
   56da2:	push   r14
   56da4:	push   r13
   56da6:	mov    r13,rdi
   56da9:	push   r12
   56dab:	push   rbp
   56dac:	push   rbx
   56dad:	mov    rbx,rsi
   56db0:	sub    rsp,0x38
   56db4:	mov    rbp,QWORD PTR [rsi+0x48]
   56db8:	mov    r14,QWORD PTR [rsi+0xb8]
   56dbf:	mov    rax,QWORD PTR fs:0x28
   56dc8:	mov    QWORD PTR [rsp+0x28],rax
   56dcd:	xor    eax,eax
   56dcf:	mov    r15,QWORD PTR [rsi+0x98]
   56dd6:	lea    r12,[rbp*8+0x0]
   56dde:	add    r14,r12
   56de1:	cmp    QWORD PTR [rsi+0xc0],rbp
   56de8:	jge    56e30 <_obstack_memory_used@@Base+0xa1b0>
   56dea:	mov    QWORD PTR [r14],rdx
   56ded:	mov    r12,rdx
   56df0:	mov    QWORD PTR [rsi+0xc0],rbp
   56df7:	cmp    QWORD PTR [r15+0x98],0x0
   56dff:	jne    56f28 <_obstack_memory_used@@Base+0xa2a8>
   56e05:	mov    rax,QWORD PTR [rsp+0x28]
   56e0a:	sub    rax,QWORD PTR fs:0x28
   56e13:	jne    56f88 <_obstack_memory_used@@Base+0xa308>
   56e19:	add    rsp,0x38
   56e1d:	mov    rax,r12
   56e20:	pop    rbx
   56e21:	pop    rbp
   56e22:	pop    r12
   56e24:	pop    r13
   56e26:	pop    r14
   56e28:	pop    r15
   56e2a:	ret    
   56e2b:	nop    DWORD PTR [rax+rax*1+0x0]
   56e30:	mov    rax,QWORD PTR [r14]
   56e33:	test   rax,rax
   56e36:	je     56f18 <_obstack_memory_used@@Base+0xa298>
   56e3c:	mov    r10,QWORD PTR [rax+0x50]
   56e40:	test   rdx,rdx
   56e43:	je     56ed0 <_obstack_memory_used@@Base+0xa250>
   56e49:	mov    rax,QWORD PTR [rdx+0x50]
   56e4d:	lea    r14,[rsp+0x10]
   56e52:	mov    rdx,r10
   56e55:	mov    rdi,r14
   56e58:	mov    rsi,rax
   56e5b:	mov    QWORD PTR [rsp],rax
   56e5f:	call   4d980 <_obstack_memory_used@@Base+0xd00>
   56e64:	mov    DWORD PTR [r13+0x0],eax
   56e68:	test   eax,eax
   56e6a:	jne    56f80 <_obstack_memory_used@@Base+0xa300>
   56e70:	mov    rax,QWORD PTR [rbx+0x48]
   56e74:	mov    edx,DWORD PTR [rbx+0xa0]
   56e7a:	mov    rdi,rbx
   56e7d:	lea    rsi,[rax-0x1]
   56e81:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   56e86:	mov    rdx,r14
   56e89:	mov    rsi,r15
   56e8c:	mov    rdi,r13
   56e8f:	mov    r8,QWORD PTR [rbx+0xb8]
   56e96:	mov    ecx,eax
   56e98:	add    r8,r12
   56e9b:	mov    QWORD PTR [rsp+0x8],r8
   56ea0:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   56ea5:	mov    r8,QWORD PTR [rsp+0x8]
   56eaa:	cmp    QWORD PTR [rsp],0x0
   56eaf:	mov    r12,rax
   56eb2:	mov    QWORD PTR [r8],rax
   56eb5:	je     56df7 <_obstack_memory_used@@Base+0xa177>
   56ebb:	mov    rdi,QWORD PTR [rsp+0x20]
   56ec0:	call   9ce0 <free@plt>
   56ec5:	jmp    56df7 <_obstack_memory_used@@Base+0xa177>
   56eca:	nop    WORD PTR [rax+rax*1+0x0]
   56ed0:	movdqu xmm0,XMMWORD PTR [r10]
   56ed5:	mov    edx,DWORD PTR [rsi+0xa0]
   56edb:	mov    rdi,rbx
   56ede:	lea    rsi,[rbp-0x1]
   56ee2:	movaps XMMWORD PTR [rsp+0x10],xmm0
   56ee7:	mov    rax,QWORD PTR [r10+0x10]
   56eeb:	mov    QWORD PTR [rsp+0x20],rax
   56ef0:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   56ef5:	lea    rdx,[rsp+0x10]
   56efa:	mov    rsi,r15
   56efd:	mov    rdi,r13
   56f00:	mov    ecx,eax
   56f02:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   56f07:	mov    QWORD PTR [r14],rax
   56f0a:	mov    r12,rax
   56f0d:	jmp    56df7 <_obstack_memory_used@@Base+0xa177>
   56f12:	nop    WORD PTR [rax+rax*1+0x0]
   56f18:	mov    QWORD PTR [r14],rdx
   56f1b:	mov    r12,rdx
   56f1e:	jmp    56df7 <_obstack_memory_used@@Base+0xa177>
   56f23:	nop    DWORD PTR [rax+rax*1+0x0]
   56f28:	test   r12,r12
   56f2b:	je     56f80 <_obstack_memory_used@@Base+0xa300>
   56f2d:	lea    r14,[r12+0x8]
   56f32:	mov    rdx,rbp
   56f35:	mov    rdi,rbx
   56f38:	mov    rsi,r14
   56f3b:	call   53750 <_obstack_memory_used@@Base+0x6ad0>
   56f40:	mov    DWORD PTR [r13+0x0],eax
   56f44:	test   eax,eax
   56f46:	jne    56f80 <_obstack_memory_used@@Base+0xa300>
   56f48:	test   BYTE PTR [r12+0x68],0x40
   56f4e:	je     56e05 <_obstack_memory_used@@Base+0xa185>
   56f54:	mov    rsi,r14
   56f57:	mov    rdi,rbx
   56f5a:	call   56590 <_obstack_memory_used@@Base+0x9910>
   56f5f:	mov    DWORD PTR [r13+0x0],eax
   56f63:	test   eax,eax
   56f65:	jne    56f80 <_obstack_memory_used@@Base+0xa300>
   56f67:	mov    rax,QWORD PTR [rbx+0xb8]
   56f6e:	mov    r12,QWORD PTR [rax+rbp*8]
   56f72:	jmp    56e05 <_obstack_memory_used@@Base+0xa185>
   56f77:	nop    WORD PTR [rax+rax*1+0x0]
   56f80:	xor    r12d,r12d
   56f83:	jmp    56e05 <_obstack_memory_used@@Base+0xa185>
   56f88:	call   a0a0 <__stack_chk_fail@plt>
   56f8d:	nop    DWORD PTR [rax]
   56f90:	endbr64 
   56f94:	push   r12
   56f96:	push   rbp
   56f97:	push   rbx
   56f98:	test   rdi,rdi
   56f9b:	je     57000 <_obstack_memory_used@@Base+0xa380>
   56f9d:	mov    rbp,rdi
   56fa0:	call   a060 <strlen@plt>
   56fa5:	lea    rbx,[rax+0x1]
   56fa9:	mov    eax,0x76
   56fae:	cmp    rbx,rax
   56fb1:	cmovae rax,rbx
   56fb5:	mov    rdi,rax
   56fb8:	add    rdi,0x11
   56fbc:	and    rdi,0xfffffffffffffff8
   56fc0:	call   a4a0 <malloc@plt>
   56fc5:	mov    r12,rax
   56fc8:	test   rax,rax
   56fcb:	je     56ff5 <_obstack_memory_used@@Base+0xa375>
   56fcd:	mov    QWORD PTR [rax],0x0
   56fd4:	mov    eax,0x1
   56fd9:	lea    rdi,[r12+0x9]
   56fde:	mov    rdx,rbx
   56fe1:	mov    WORD PTR [r12+0x8],ax
   56fe7:	mov    rsi,rbp
   56fea:	call   a420 <memcpy@plt>
   56fef:	mov    BYTE PTR [r12+rbx*1+0x9],0x0
   56ff5:	mov    rax,r12
   56ff8:	pop    rbx
   56ff9:	pop    rbp
   56ffa:	pop    r12
   56ffc:	ret    
   56ffd:	nop    DWORD PTR [rax]
   57000:	mov    edi,0x80
   57005:	call   a4a0 <malloc@plt>
   5700a:	mov    r12,rax
   5700d:	test   rax,rax
   57010:	je     56ff5 <_obstack_memory_used@@Base+0xa375>
   57012:	xor    edx,edx
   57014:	mov    QWORD PTR [r12],0x0
   5701c:	mov    rax,r12
   5701f:	mov    WORD PTR [r12+0x8],dx
   57025:	pop    rbx
   57026:	pop    rbp
   57027:	pop    r12
   57029:	ret    
   5702a:	nop    WORD PTR [rax+rax*1+0x0]
   57030:	push   r14
   57032:	push   r13
   57034:	push   r12
   57036:	push   rbp
   57037:	push   rbx
   57038:	mov    r12,QWORD PTR [rsi+0x30]
   5703c:	test   r12,r12
   5703f:	je     570f0 <_obstack_memory_used@@Base+0xa470>
   57045:	mov    rbp,rdi
   57048:	mov    r13,rsi
   5704b:	cmp    rsi,r12
   5704e:	ja     5705e <_obstack_memory_used@@Base+0xa3de>
   57050:	lea    rdx,[rsi+0x38]
   57054:	mov    eax,0x1
   57059:	cmp    r12,rdx
   5705c:	jb     570d1 <_obstack_memory_used@@Base+0xa451>
   5705e:	cmp    BYTE PTR [r12],0x0
   57063:	lea    rbx,[rbp+0x9]
   57067:	je     570e0 <_obstack_memory_used@@Base+0xa460>
   57069:	nop    DWORD PTR [rax+0x0]
   57070:	mov    rsi,r12
   57073:	mov    rdi,rbx
   57076:	call   a320 <strcmp@plt>
   5707b:	test   eax,eax
   5707d:	je     570c8 <_obstack_memory_used@@Base+0xa448>
   5707f:	cmp    BYTE PTR [rbx],0x0
   57082:	jne    57093 <_obstack_memory_used@@Base+0xa413>
   57084:	lea    rax,[rbp+0x9]
   57088:	cmp    rbx,rax
   5708b:	jne    57100 <_obstack_memory_used@@Base+0xa480>
   5708d:	cmp    BYTE PTR [rbp+0x8],0x0
   57091:	je     57100 <_obstack_memory_used@@Base+0xa480>
   57093:	mov    rdi,rbx
   57096:	call   a060 <strlen@plt>
   5709b:	lea    rbx,[rbx+rax*1+0x1]
   570a0:	cmp    BYTE PTR [rbx],0x0
   570a3:	jne    57070 <_obstack_memory_used@@Base+0xa3f0>
   570a5:	mov    rax,QWORD PTR [rbp+0x0]
   570a9:	test   rax,rax
   570ac:	je     57070 <_obstack_memory_used@@Base+0xa3f0>
   570ae:	lea    rbx,[rax+0x9]
   570b2:	mov    rsi,r12
   570b5:	mov    rbp,rax
   570b8:	mov    rdi,rbx
   570bb:	call   a320 <strcmp@plt>
   570c0:	test   eax,eax
   570c2:	jne    5707f <_obstack_memory_used@@Base+0xa3ff>
   570c4:	nop    DWORD PTR [rax+0x0]
   570c8:	mov    QWORD PTR [r13+0x30],rbx
   570cc:	mov    eax,0x1
   570d1:	pop    rbx
   570d2:	pop    rbp
   570d3:	pop    r12
   570d5:	pop    r13
   570d7:	pop    r14
   570d9:	ret    
   570da:	nop    WORD PTR [rax+rax*1+0x0]
   570e0:	lea    rbx,[rip+0x14a69]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   570e7:	jmp    570c8 <_obstack_memory_used@@Base+0xa448>
   570e9:	nop    DWORD PTR [rax+0x0]
   570f0:	pop    rbx
   570f1:	mov    eax,0x1
   570f6:	pop    rbp
   570f7:	pop    r12
   570f9:	pop    r13
   570fb:	pop    r14
   570fd:	ret    
   570fe:	xchg   ax,ax
   57100:	mov    rdi,r12
   57103:	call   a060 <strlen@plt>
   57108:	mov    r14,rax
   5710b:	lea    rdx,[rax+0x1]
   5710f:	lea    rax,[rbp+0x80]
   57116:	sub    rax,rbx
   57119:	cmp    rax,rdx
   5711c:	jle    57138 <_obstack_memory_used@@Base+0xa4b8>
   5711e:	mov    rsi,r12
   57121:	mov    rdi,rbx
   57124:	call   a420 <memcpy@plt>
   57129:	mov    BYTE PTR [rbx+r14*1+0x1],0x0
   5712f:	jmp    570c8 <_obstack_memory_used@@Base+0xa448>
   57131:	nop    DWORD PTR [rax+0x0]
   57138:	mov    rdi,r12
   5713b:	call   56f90 <_obstack_memory_used@@Base+0xa310>
   57140:	mov    QWORD PTR [rbp+0x0],rax
   57144:	test   rax,rax
   57147:	je     57156 <_obstack_memory_used@@Base+0xa4d6>
   57149:	mov    BYTE PTR [rax+0x8],0x0
   5714d:	lea    rbx,[rax+0x9]
   57151:	jmp    570c8 <_obstack_memory_used@@Base+0xa448>
   57156:	xor    eax,eax
   57158:	jmp    570d1 <_obstack_memory_used@@Base+0xa451>
   5715d:	nop    DWORD PTR [rax]
   57160:	push   r13
   57162:	lea    r13,[rip+0xf5f2]        # 6675b <_obstack_memory_used@@Base+0x19adb>
   57169:	push   r12
   5716b:	push   rbp
   5716c:	push   rbx
   5716d:	mov    rbx,rdi
   57170:	mov    rdi,r13
   57173:	sub    rsp,0x8
   57177:	call   9d40 <getenv@plt>
   5717c:	mov    rbp,rax
   5717f:	test   rax,rax
   57182:	je     571e8 <_obstack_memory_used@@Base+0xa568>
   57184:	cmp    BYTE PTR [rbx+0x8],0x0
   57188:	jne    571c0 <_obstack_memory_used@@Base+0xa540>
   5718a:	mov    rdi,rbp
   5718d:	call   56f90 <_obstack_memory_used@@Base+0xa310>
   57192:	mov    r12,rax
   57195:	test   rax,rax
   57198:	je     571b1 <_obstack_memory_used@@Base+0xa531>
   5719a:	cmp    BYTE PTR [rbx+0x8],0x0
   5719e:	jne    57208 <_obstack_memory_used@@Base+0xa588>
   571a0:	mov    rdi,r13
   571a3:	call   a740 <unsetenv@plt>
   571a8:	test   eax,eax
   571aa:	jne    5721d <_obstack_memory_used@@Base+0xa59d>
   571ac:	call   a440 <tzset@plt>
   571b1:	add    rsp,0x8
   571b5:	mov    rax,r12
   571b8:	pop    rbx
   571b9:	pop    rbp
   571ba:	pop    r12
   571bc:	pop    r13
   571be:	ret    
   571bf:	nop
   571c0:	lea    rdi,[rbx+0x9]
   571c4:	mov    rsi,rax
   571c7:	mov    r12d,0x1
   571cd:	call   a320 <strcmp@plt>
   571d2:	test   eax,eax
   571d4:	jne    5718a <_obstack_memory_used@@Base+0xa50a>
   571d6:	add    rsp,0x8
   571da:	mov    rax,r12
   571dd:	pop    rbx
   571de:	pop    rbp
   571df:	pop    r12
   571e1:	pop    r13
   571e3:	ret    
   571e4:	nop    DWORD PTR [rax+0x0]
   571e8:	cmp    BYTE PTR [rbx+0x8],0x0
   571ec:	mov    r12d,0x1
   571f2:	jne    5718a <_obstack_memory_used@@Base+0xa50a>
   571f4:	add    rsp,0x8
   571f8:	mov    rax,r12
   571fb:	pop    rbx
   571fc:	pop    rbp
   571fd:	pop    r12
   571ff:	pop    r13
   57201:	ret    
   57202:	nop    WORD PTR [rax+rax*1+0x0]
   57208:	lea    rsi,[rbx+0x9]
   5720c:	mov    edx,0x1
   57211:	mov    rdi,r13
   57214:	call   9f80 <setenv@plt>
   57219:	test   eax,eax
   5721b:	je     571ac <_obstack_memory_used@@Base+0xa52c>
   5721d:	call   9e40 <__errno_location@plt>
   57222:	mov    ebx,DWORD PTR [rax]
   57224:	mov    rbp,rax
   57227:	cmp    r12,0x1
   5722b:	je     5723e <_obstack_memory_used@@Base+0xa5be>
   5722d:	mov    rdi,r12
   57230:	mov    r12,QWORD PTR [r12]
   57234:	call   9ce0 <free@plt>
   57239:	test   r12,r12
   5723c:	jne    5722d <_obstack_memory_used@@Base+0xa5ad>
   5723e:	mov    DWORD PTR [rbp+0x0],ebx
   57241:	xor    r12d,r12d
   57244:	add    rsp,0x8
   57248:	pop    rbx
   57249:	mov    rax,r12
   5724c:	pop    rbp
   5724d:	pop    r12
   5724f:	pop    r13
   57251:	ret    
   57252:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5725d:	nop    DWORD PTR [rax]
   57260:	endbr64 
   57264:	push   r14
   57266:	mov    r14,rsi
   57269:	push   r13
   5726b:	push   r12
   5726d:	push   rbp
   5726e:	mov    rbp,rdx
   57271:	sub    rsp,0x8
   57275:	test   rdi,rdi
   57278:	je     572f0 <_obstack_memory_used@@Base+0xa670>
   5727a:	mov    r12,rdi
   5727d:	call   57160 <_obstack_memory_used@@Base+0xa4e0>
   57282:	mov    r13,rax
   57285:	test   rax,rax
   57288:	je     572ce <_obstack_memory_used@@Base+0xa64e>
   5728a:	mov    rsi,rbp
   5728d:	mov    rdi,r14
   57290:	call   9e60 <localtime_r@plt>
   57295:	test   rax,rax
   57298:	je     572c0 <_obstack_memory_used@@Base+0xa640>
   5729a:	mov    rsi,rbp
   5729d:	mov    rdi,r12
   572a0:	call   57030 <_obstack_memory_used@@Base+0xa3b0>
   572a5:	test   al,al
   572a7:	je     572c0 <_obstack_memory_used@@Base+0xa640>
   572a9:	cmp    r13,0x1
   572ad:	jne    572e0 <_obstack_memory_used@@Base+0xa660>
   572af:	add    rsp,0x8
   572b3:	mov    rax,rbp
   572b6:	pop    rbp
   572b7:	pop    r12
   572b9:	pop    r13
   572bb:	pop    r14
   572bd:	ret    
   572be:	xchg   ax,ax
   572c0:	cmp    r13,0x1
   572c4:	je     572ce <_obstack_memory_used@@Base+0xa64e>
   572c6:	mov    rdi,r13
   572c9:	call   545d0 <_obstack_memory_used@@Base+0x7950>
   572ce:	add    rsp,0x8
   572d2:	xor    eax,eax
   572d4:	pop    rbp
   572d5:	pop    r12
   572d7:	pop    r13
   572d9:	pop    r14
   572db:	ret    
   572dc:	nop    DWORD PTR [rax+0x0]
   572e0:	mov    rdi,r13
   572e3:	call   545d0 <_obstack_memory_used@@Base+0x7950>
   572e8:	test   al,al
   572ea:	jne    572af <_obstack_memory_used@@Base+0xa62f>
   572ec:	jmp    572ce <_obstack_memory_used@@Base+0xa64e>
   572ee:	xchg   ax,ax
   572f0:	add    rsp,0x8
   572f4:	mov    rdi,r14
   572f7:	mov    rsi,rdx
   572fa:	pop    rbp
   572fb:	pop    r12
   572fd:	pop    r13
   572ff:	pop    r14
   57301:	jmp    a150 <gmtime_r@plt>
   57306:	cs nop WORD PTR [rax+rax*1+0x0]
   57310:	endbr64 
   57314:	push   r15
   57316:	push   r14
   57318:	push   r13
   5731a:	push   r12
   5731c:	push   rbp
   5731d:	mov    rbp,rsi
   57320:	sub    rsp,0x40
   57324:	mov    rax,QWORD PTR fs:0x28
   5732d:	mov    QWORD PTR [rsp+0x38],rax
   57332:	xor    eax,eax
   57334:	test   rdi,rdi
   57337:	je     57430 <_obstack_memory_used@@Base+0xa7b0>
   5733d:	mov    r14,rdi
   57340:	call   57160 <_obstack_memory_used@@Base+0xa4e0>
   57345:	mov    r12,rax
   57348:	test   rax,rax
   5734b:	je     573a0 <_obstack_memory_used@@Base+0xa720>
   5734d:	mov    rax,QWORD PTR [rbp+0x0]
   57351:	mov    r15,rsp
   57354:	mov    DWORD PTR [rsp+0x1c],0xffffffff
   5735c:	mov    rdi,r15
   5735f:	mov    QWORD PTR [rsp],rax
   57363:	mov    rax,QWORD PTR [rbp+0x8]
   57367:	mov    QWORD PTR [rsp+0x8],rax
   5736c:	mov    rax,QWORD PTR [rbp+0x10]
   57370:	mov    QWORD PTR [rsp+0x10],rax
   57375:	mov    eax,DWORD PTR [rbp+0x20]
   57378:	mov    DWORD PTR [rsp+0x20],eax
   5737c:	call   a520 <mktime@plt>
   57381:	mov    r13,rax
   57384:	mov    eax,DWORD PTR [rsp+0x1c]
   57388:	test   eax,eax
   5738a:	jns    573d8 <_obstack_memory_used@@Base+0xa758>
   5738c:	cmp    r12,0x1
   57390:	je     573a0 <_obstack_memory_used@@Base+0xa720>
   57392:	mov    rdi,r12
   57395:	call   545d0 <_obstack_memory_used@@Base+0x7950>
   5739a:	nop    WORD PTR [rax+rax*1+0x0]
   573a0:	mov    r13,0xffffffffffffffff
   573a7:	nop    WORD PTR [rax+rax*1+0x0]
   573b0:	mov    rax,QWORD PTR [rsp+0x38]
   573b5:	sub    rax,QWORD PTR fs:0x28
   573be:	jne    57455 <_obstack_memory_used@@Base+0xa7d5>
   573c4:	add    rsp,0x40
   573c8:	mov    rax,r13
   573cb:	pop    rbp
   573cc:	pop    r12
   573ce:	pop    r13
   573d0:	pop    r14
   573d2:	pop    r15
   573d4:	ret    
   573d5:	nop    DWORD PTR [rax]
   573d8:	mov    rsi,r15
   573db:	mov    rdi,r14
   573de:	call   57030 <_obstack_memory_used@@Base+0xa3b0>
   573e3:	test   al,al
   573e5:	je     5738c <_obstack_memory_used@@Base+0xa70c>
   573e7:	cmp    r12,0x1
   573eb:	jne    57415 <_obstack_memory_used@@Base+0xa795>
   573ed:	movdqa xmm0,XMMWORD PTR [rsp]
   573f2:	movdqa xmm1,XMMWORD PTR [rsp+0x10]
   573f8:	movdqa xmm2,XMMWORD PTR [rsp+0x20]
   573fe:	mov    rax,QWORD PTR [rsp+0x30]
   57403:	movups XMMWORD PTR [rbp+0x0],xmm0
   57407:	mov    QWORD PTR [rbp+0x30],rax
   5740b:	movups XMMWORD PTR [rbp+0x10],xmm1
   5740f:	movups XMMWORD PTR [rbp+0x20],xmm2
   57413:	jmp    573b0 <_obstack_memory_used@@Base+0xa730>
   57415:	mov    rdi,r12
   57418:	call   545d0 <_obstack_memory_used@@Base+0x7950>
   5741d:	test   al,al
   5741f:	jne    573ed <_obstack_memory_used@@Base+0xa76d>
   57421:	jmp    573a0 <_obstack_memory_used@@Base+0xa720>
   57426:	cs nop WORD PTR [rax+rax*1+0x0]
   57430:	mov    rax,QWORD PTR [rsp+0x38]
   57435:	sub    rax,QWORD PTR fs:0x28
   5743e:	jne    57455 <_obstack_memory_used@@Base+0xa7d5>
   57440:	add    rsp,0x40
   57444:	mov    rdi,rsi
   57447:	pop    rbp
   57448:	pop    r12
   5744a:	pop    r13
   5744c:	pop    r14
   5744e:	pop    r15
   57450:	jmp    a5e0 <timegm@plt>
   57455:	call   a0a0 <__stack_chk_fail@plt>
   5745a:	nop    WORD PTR [rax+rax*1+0x0]
   57460:	endbr64 
   57464:	push   r15
   57466:	push   r14
   57468:	push   r13
   5746a:	push   r12
   5746c:	push   rbp
   5746d:	push   rbx
   5746e:	mov    rbx,rdi
   57471:	sub    rsp,0x18
   57475:	mov    rax,QWORD PTR [rdi+0x30]
   57479:	mov    r12,QWORD PTR [rdi+0x20]
   5747d:	mov    r13,QWORD PTR [rdi+0x38]
   57481:	add    r12,rax
   57484:	cmp    r12,r13
   57487:	jb     57516 <_obstack_memory_used@@Base+0xa896>
   5748d:	jmp    57749 <_obstack_memory_used@@Base+0xaac9>
   57492:	nop    WORD PTR [rax+rax*1+0x0]
   57498:	mov    rax,r14
   5749b:	sub    rax,r12
   5749e:	add    rax,rbp
   574a1:	cmp    rax,r8
   574a4:	jl     57730 <_obstack_memory_used@@Base+0xaab0>
   574aa:	mov    rsi,QWORD PTR [rbx+0x18]
   574ae:	mov    QWORD PTR [rsp+0x8],r8
   574b3:	lea    rcx,[r8-0x1]
   574b7:	test   rsi,rsi
   574ba:	jns    575d4 <_obstack_memory_used@@Base+0xa954>
   574c0:	cmp    r13,r14
   574c3:	jbe    5794b <_obstack_memory_used@@Base+0xaccb>
   574c9:	mov    rdi,rcx
   574cc:	mov    rdx,r13
   574cf:	mov    rsi,r14
   574d2:	mov    QWORD PTR [rsp],rcx
   574d6:	sub    rdi,rbp
   574d9:	sub    rdx,r14
   574dc:	add    rdi,r12
   574df:	call   a630 <memmove@plt>
   574e4:	add    r14,QWORD PTR [rbx+0x38]
   574e8:	mov    rcx,QWORD PTR [rsp]
   574ec:	sub    rcx,QWORD PTR [rbx+0x28]
   574f0:	mov    r13,r14
   574f3:	mov    r8,QWORD PTR [rsp+0x8]
   574f8:	mov    QWORD PTR [rbx+0x28],0x0
   57500:	add    rcx,r12
   57503:	sub    r13,rcx
   57506:	add    r12,r8
   57509:	mov    QWORD PTR [rbx+0x38],r13
   5750d:	cmp    r12,r13
   57510:	jae    57745 <_obstack_memory_used@@Base+0xaac5>
   57516:	mov    rbp,QWORD PTR [rbx+0x28]
   5751a:	mov    rcx,rbp
   5751d:	test   rbp,rbp
   57520:	jne    57571 <_obstack_memory_used@@Base+0xa8f1>
   57522:	mov    r14,QWORD PTR [rbx+0x8]
   57526:	test   r14,r14
   57529:	je     57760 <_obstack_memory_used@@Base+0xaae0>
   5752f:	lea    rax,[r13+r14*1+0x0]
   57534:	cmp    QWORD PTR [rbx+0x40],rax
   57538:	jbe    578e8 <_obstack_memory_used@@Base+0xac68>
   5753e:	lea    rbp,[r12+r14*1]
   57542:	mov    rdx,r13
   57545:	mov    rsi,r12
   57548:	sub    rdx,r12
   5754b:	mov    rdi,rbp
   5754e:	call   a630 <memmove@plt>
   57553:	add    QWORD PTR [rbx+0x38],r14
   57557:	mov    rdi,r12
   5755a:	mov    rdx,r14
   5755d:	mov    esi,0x20
   57562:	mov    r12,rbp
   57565:	call   a1b0 <memset@plt>
   5756a:	mov    QWORD PTR [rbx+0x28],r14
   5756e:	mov    rcx,r14
   57571:	mov    r13,QWORD PTR [rbx+0x38]
   57575:	mov    esi,0xa
   5757a:	mov    rdi,r12
   5757d:	mov    QWORD PTR [rsp],rcx
   57581:	mov    r15,r13
   57584:	sub    r15,r12
   57587:	mov    rdx,r15
   5758a:	call   a280 <memchr@plt>
   5758f:	mov    rbp,QWORD PTR [rsp]
   57593:	mov    r14,rax
   57596:	test   rbp,rbp
   57599:	jns    575a5 <_obstack_memory_used@@Base+0xa925>
   5759b:	mov    QWORD PTR [rbx+0x28],0x0
   575a3:	xor    ebp,ebp
   575a5:	mov    r8,QWORD PTR [rbx+0x10]
   575a9:	test   r14,r14
   575ac:	jne    57498 <_obstack_memory_used@@Base+0xa818>
   575b2:	lea    rax,[rbp+r15*1+0x0]
   575b7:	cmp    rax,r8
   575ba:	jb     579b7 <_obstack_memory_used@@Base+0xad37>
   575c0:	mov    rsi,QWORD PTR [rbx+0x18]
   575c4:	lea    rcx,[r8-0x1]
   575c8:	test   rsi,rsi
   575cb:	js     57950 <_obstack_memory_used@@Base+0xacd0>
   575d1:	mov    r14,r13
   575d4:	mov    rax,r12
   575d7:	sub    rax,rbp
   575da:	lea    rcx,[rax+rcx*1+0x1]
   575df:	cmp    r12,rcx
   575e2:	ja     57837 <_obstack_memory_used@@Base+0xabb7>
   575e8:	mov    QWORD PTR [rsp+0x8],rsi
   575ed:	mov    QWORD PTR [rsp],rcx
   575f1:	call   a980 <__ctype_b_loc@plt>
   575f6:	mov    rcx,QWORD PTR [rsp]
   575fa:	mov    rsi,QWORD PTR [rsp+0x8]
   575ff:	mov    rdx,QWORD PTR [rax]
   57602:	mov    rbp,rcx
   57605:	jmp    57620 <_obstack_memory_used@@Base+0xa9a0>
   57607:	nop    WORD PTR [rax+rax*1+0x0]
   57610:	lea    rax,[rbp-0x1]
   57614:	cmp    r12,rax
   57617:	ja     57840 <_obstack_memory_used@@Base+0xabc0>
   5761d:	mov    rbp,rax
   57620:	movzx  eax,BYTE PTR [rbp+0x0]
   57624:	test   BYTE PTR [rdx+rax*2],0x1
   57628:	je     57610 <_obstack_memory_used@@Base+0xa990>
   5762a:	lea    rdi,[rbp+0x1]
   5762e:	cmp    r12,rdi
   57631:	jae    57850 <_obstack_memory_used@@Base+0xabd0>
   57637:	cmp    r12,rbp
   5763a:	jbe    57652 <_obstack_memory_used@@Base+0xa9d2>
   5763c:	jmp    57940 <_obstack_memory_used@@Base+0xacc0>
   57641:	nop    DWORD PTR [rax+0x0]
   57648:	movzx  eax,BYTE PTR [rbp+0x0]
   5764c:	test   BYTE PTR [rdx+rax*2],0x1
   57650:	je     5765e <_obstack_memory_used@@Base+0xa9de>
   57652:	mov    rcx,rbp
   57655:	sub    rbp,0x1
   57659:	cmp    r12,rbp
   5765c:	jbe    57648 <_obstack_memory_used@@Base+0xa9c8>
   5765e:	mov    rbp,rdi
   57661:	nop    DWORD PTR [rax+0x0]
   57668:	lea    rax,[r12+r15*1+0x1]
   5766d:	cmp    rbp,rax
   57670:	je     57788 <_obstack_memory_used@@Base+0xab08>
   57676:	lea    rax,[rcx+0x1]
   5767a:	mov    rdx,rbp
   5767d:	sub    rdx,rax
   57680:	cmp    rdx,rsi
   57683:	jge    577a2 <_obstack_memory_used@@Base+0xab22>
   57689:	cmp    r13,rbp
   5768c:	jbe    57798 <_obstack_memory_used@@Base+0xab18>
   57692:	mov    rax,QWORD PTR [rbx+0x40]
   57696:	add    rsi,0x1
   5769a:	sub    rax,r13
   5769d:	cmp    rax,rsi
   576a0:	jg     57967 <_obstack_memory_used@@Base+0xace7>
   576a6:	mov    rdi,QWORD PTR [rbx+0x30]
   576aa:	cmp    rdi,rcx
   576ad:	jae    576c2 <_obstack_memory_used@@Base+0xaa42>
   576af:	sub    rcx,rdi
   576b2:	mov    esi,0x1
   576b7:	mov    rdx,rcx
   576ba:	mov    rcx,QWORD PTR [rbx]
   576bd:	call   a550 <fwrite_unlocked@plt>
   576c2:	mov    rdi,QWORD PTR [rbx]
   576c5:	mov    rax,QWORD PTR [rdi+0x28]
   576c9:	cmp    rax,QWORD PTR [rdi+0x30]
   576cd:	jae    579a8 <_obstack_memory_used@@Base+0xad28>
   576d3:	lea    rdx,[rax+0x1]
   576d7:	mov    QWORD PTR [rdi+0x28],rdx
   576db:	mov    BYTE PTR [rax],0xa
   576de:	mov    r13,QWORD PTR [rbx+0x30]
   576e2:	mov    rdx,rbp
   576e5:	sub    r12,r13
   576e8:	sub    rdx,r13
   576eb:	add    r15,r12
   576ee:	mov    r14,rdx
   576f1:	mov    r12,r13
   576f4:	jmp    577b1 <_obstack_memory_used@@Base+0xab31>
   576f9:	nop    DWORD PTR [rax+0x0]
   57700:	call   a980 <__ctype_b_loc@plt>
   57705:	mov    rcx,QWORD PTR [rsp]
   57709:	mov    rsi,QWORD PTR [rsp+0x8]
   5770e:	mov    rdx,QWORD PTR [rax]
   57711:	movzx  eax,BYTE PTR [rcx]
   57714:	test   BYTE PTR [rdx+rax*2],0x1
   57718:	jne    57879 <_obstack_memory_used@@Base+0xabf9>
   5771e:	add    rcx,0x1
   57722:	mov    QWORD PTR [rsp+0x8],rsi
   57727:	cmp    rcx,r14
   5772a:	mov    QWORD PTR [rsp],rcx
   5772e:	jne    57700 <_obstack_memory_used@@Base+0xaa80>
   57730:	lea    r12,[r14+0x1]
   57734:	mov    QWORD PTR [rbx+0x28],0x0
   5773c:	cmp    r12,r13
   5773f:	jb     57516 <_obstack_memory_used@@Base+0xa896>
   57745:	mov    rax,QWORD PTR [rbx+0x30]
   57749:	sub    r13,rax
   5774c:	mov    QWORD PTR [rbx+0x20],r13
   57750:	add    rsp,0x18
   57754:	pop    rbx
   57755:	pop    rbp
   57756:	pop    r12
   57758:	pop    r13
   5775a:	pop    r14
   5775c:	pop    r15
   5775e:	ret    
   5775f:	nop
   57760:	mov    r13,QWORD PTR [rbx+0x38]
   57764:	mov    esi,0xa
   57769:	mov    rdi,r12
   5776c:	mov    r15,r13
   5776f:	sub    r15,r12
   57772:	mov    rdx,r15
   57775:	call   a280 <memchr@plt>
   5777a:	mov    r14,rax
   5777d:	jmp    575a5 <_obstack_memory_used@@Base+0xa925>
   57782:	nop    WORD PTR [rax+rax*1+0x0]
   57788:	mov    rax,QWORD PTR [rbx+0x40]
   5778c:	sub    rax,rcx
   5778f:	cmp    rax,rsi
   57792:	jle    57689 <_obstack_memory_used@@Base+0xaa09>
   57798:	lea    rax,[rcx+0x1]
   5779c:	mov    rdx,rbp
   5779f:	sub    rdx,rax
   577a2:	mov    BYTE PTR [rcx],0xa
   577a5:	mov    r14,rbp
   577a8:	mov    r13,r12
   577ab:	sub    r14,r12
   577ae:	mov    r12,rax
   577b1:	mov    rax,QWORD PTR [rbx+0x18]
   577b5:	cmp    rax,rdx
   577b8:	jle    577d8 <_obstack_memory_used@@Base+0xab58>
   577ba:	lea    rdx,[r13+r15*1+0x1]
   577bf:	cmp    rbp,rdx
   577c2:	jne    57898 <_obstack_memory_used@@Base+0xac18>
   577c8:	mov    rdx,QWORD PTR [rbx+0x40]
   577cc:	sub    rdx,rbp
   577cf:	cmp    rax,rdx
   577d2:	jg     57898 <_obstack_memory_used@@Base+0xac18>
   577d8:	test   rax,rax
   577db:	jle    57806 <_obstack_memory_used@@Base+0xab86>
   577dd:	lea    rax,[r12+0x1]
   577e2:	nop    WORD PTR [rax+rax*1+0x0]
   577e8:	mov    BYTE PTR [rax-0x1],0x20
   577ec:	mov    rcx,rax
   577ef:	add    rax,0x1
   577f3:	mov    rdx,rax
   577f6:	sub    rdx,r12
   577f9:	sub    rdx,0x1
   577fd:	cmp    QWORD PTR [rbx+0x18],rdx
   57801:	jg     577e8 <_obstack_memory_used@@Base+0xab68>
   57803:	mov    r12,rcx
   57806:	cmp    r12,rbp
   57809:	jb     57928 <_obstack_memory_used@@Base+0xaca8>
   5780f:	mov    rax,QWORD PTR [rbx+0x18]
   57813:	sub    r15,r14
   57816:	mov    rdx,0xffffffffffffffff
   5781d:	mov    r13,r15
   57820:	add    r13,r12
   57823:	test   rax,rax
   57826:	cmove  rax,rdx
   5782a:	mov    QWORD PTR [rbx+0x38],r13
   5782e:	mov    QWORD PTR [rbx+0x28],rax
   57832:	jmp    5750d <_obstack_memory_used@@Base+0xa88d>
   57837:	lea    rbp,[rcx+0x1]
   5783b:	nop    DWORD PTR [rax+rax*1+0x0]
   57840:	cmp    r12,rbp
   57843:	jae    57850 <_obstack_memory_used@@Base+0xabd0>
   57845:	mov    rcx,rbp
   57848:	jmp    57668 <_obstack_memory_used@@Base+0xa9e8>
   5784d:	nop    DWORD PTR [rax]
   57850:	cmp    rcx,r14
   57853:	jb     5771e <_obstack_memory_used@@Base+0xaa9e>
   57859:	mov    QWORD PTR [rsp+0x8],rsi
   5785e:	mov    QWORD PTR [rsp],rcx
   57862:	je     57730 <_obstack_memory_used@@Base+0xaab0>
   57868:	call   a980 <__ctype_b_loc@plt>
   5786d:	mov    rcx,QWORD PTR [rsp]
   57871:	mov    rsi,QWORD PTR [rsp+0x8]
   57876:	mov    rdx,QWORD PTR [rax]
   57879:	mov    rbp,rcx
   5787c:	nop    DWORD PTR [rax+0x0]
   57880:	movzx  eax,BYTE PTR [rbp+0x1]
   57884:	add    rbp,0x1
   57888:	test   BYTE PTR [rdx+rax*2],0x1
   5788c:	jne    57880 <_obstack_memory_used@@Base+0xac00>
   5788e:	jmp    57668 <_obstack_memory_used@@Base+0xa9e8>
   57893:	nop    DWORD PTR [rax+rax*1+0x0]
   57898:	xor    edx,edx
   5789a:	test   rax,rax
   5789d:	jg     578c1 <_obstack_memory_used@@Base+0xac41>
   5789f:	jmp    57806 <_obstack_memory_used@@Base+0xab86>
   578a4:	nop    DWORD PTR [rax+0x0]
   578a8:	lea    rcx,[rax+0x1]
   578ac:	mov    QWORD PTR [rdi+0x28],rcx
   578b0:	mov    BYTE PTR [rax],0x20
   578b3:	add    rdx,0x1
   578b7:	cmp    QWORD PTR [rbx+0x18],rdx
   578bb:	jle    57806 <_obstack_memory_used@@Base+0xab86>
   578c1:	mov    rdi,QWORD PTR [rbx]
   578c4:	mov    rax,QWORD PTR [rdi+0x28]
   578c8:	cmp    rax,QWORD PTR [rdi+0x30]
   578cc:	jb     578a8 <_obstack_memory_used@@Base+0xac28>
   578ce:	mov    esi,0x20
   578d3:	mov    QWORD PTR [rsp],rdx
   578d7:	call   a120 <__overflow@plt>
   578dc:	mov    rdx,QWORD PTR [rsp]
   578e0:	jmp    578b3 <_obstack_memory_used@@Base+0xac33>
   578e2:	nop    WORD PTR [rax+rax*1+0x0]
   578e8:	xor    ebp,ebp
   578ea:	jmp    57908 <_obstack_memory_used@@Base+0xac88>
   578ec:	nop    DWORD PTR [rax+0x0]
   578f0:	lea    rdx,[rax+0x1]
   578f4:	mov    QWORD PTR [rdi+0x28],rdx
   578f8:	mov    BYTE PTR [rax],0x20
   578fb:	add    rbp,0x1
   578ff:	cmp    r14,rbp
   57902:	je     5756a <_obstack_memory_used@@Base+0xa8ea>
   57908:	mov    rdi,QWORD PTR [rbx]
   5790b:	mov    rax,QWORD PTR [rdi+0x28]
   5790f:	cmp    rax,QWORD PTR [rdi+0x30]
   57913:	jb     578f0 <_obstack_memory_used@@Base+0xac70>
   57915:	mov    esi,0x20
   5791a:	call   a120 <__overflow@plt>
   5791f:	jmp    578fb <_obstack_memory_used@@Base+0xac7b>
   57921:	nop    DWORD PTR [rax+0x0]
   57928:	lea    rdx,[r13+r15*1+0x0]
   5792d:	mov    rsi,rbp
   57930:	mov    rdi,r12
   57933:	sub    rdx,rbp
   57936:	call   a630 <memmove@plt>
   5793b:	jmp    5780f <_obstack_memory_used@@Base+0xab8f>
   57940:	mov    rcx,rdi
   57943:	mov    rbp,rdi
   57946:	jmp    57668 <_obstack_memory_used@@Base+0xa9e8>
   5794b:	lea    rax,[rbp+r15*1+0x0]
   57950:	sub    rcx,rax
   57953:	mov    QWORD PTR [rbx+0x28],rax
   57957:	mov    rax,QWORD PTR [rbx+0x30]
   5795b:	add    r13,rcx
   5795e:	mov    QWORD PTR [rbx+0x38],r13
   57962:	jmp    57749 <_obstack_memory_used@@Base+0xaac9>
   57967:	sub    r13,rbp
   5796a:	lea    rdi,[rcx+rsi*1]
   5796e:	mov    rsi,rbp
   57971:	mov    QWORD PTR [rsp],rcx
   57975:	mov    rdx,r13
   57978:	call   a630 <memmove@plt>
   5797d:	mov    rcx,QWORD PTR [rsp]
   57981:	mov    rdx,QWORD PTR [rbx+0x18]
   57985:	lea    rbp,[rcx+rdx*1+0x1]
   5798a:	mov    BYTE PTR [rcx],0xa
   5798d:	add    r13,rbp
   57990:	mov    r14,rbp
   57993:	mov    r15,r13
   57996:	sub    r14,r12
   57999:	mov    r13,r12
   5799c:	sub    r15,r12
   5799f:	lea    r12,[rcx+0x1]
   579a3:	jmp    577b1 <_obstack_memory_used@@Base+0xab31>
   579a8:	mov    esi,0xa
   579ad:	call   a120 <__overflow@plt>
   579b2:	jmp    576de <_obstack_memory_used@@Base+0xaa5e>
   579b7:	mov    QWORD PTR [rbx+0x28],rax
   579bb:	mov    rax,QWORD PTR [rbx+0x30]
   579bf:	jmp    57749 <_obstack_memory_used@@Base+0xaac9>
   579c4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   579cf:	nop
   579d0:	endbr64 
   579d4:	push   rbp
   579d5:	mov    rbp,rsi
   579d8:	push   rbx
   579d9:	mov    rbx,rdi
   579dc:	sub    rsp,0x8
   579e0:	call   57460 <_obstack_memory_used@@Base+0xa7e0>
   579e5:	mov    rdi,QWORD PTR [rbx+0x30]
   579e9:	mov    rdx,QWORD PTR [rbx+0x38]
   579ed:	mov    esi,0x1
   579f2:	mov    rcx,QWORD PTR [rbx]
   579f5:	sub    rdx,rdi
   579f8:	call   a550 <fwrite_unlocked@plt>
   579fd:	mov    rdx,QWORD PTR [rbx+0x38]
   57a01:	mov    rdi,QWORD PTR [rbx+0x30]
   57a05:	mov    rcx,rdx
   57a08:	sub    rcx,rdi
   57a0b:	cmp    rax,rcx
   57a0e:	jne    57a58 <_obstack_memory_used@@Base+0xadd8>
   57a10:	mov    rax,QWORD PTR [rbx+0x40]
   57a14:	mov    QWORD PTR [rbx+0x38],rdi
   57a18:	mov    QWORD PTR [rbx+0x20],0x0
   57a20:	sub    rax,rdi
   57a23:	cmp    rax,rbp
   57a26:	jae    57a49 <_obstack_memory_used@@Base+0xadc9>
   57a28:	add    rbp,rax
   57a2b:	jb     57a78 <_obstack_memory_used@@Base+0xadf8>
   57a2d:	mov    rsi,rbp
   57a30:	call   a570 <realloc@plt>
   57a35:	test   rax,rax
   57a38:	je     57a78 <_obstack_memory_used@@Base+0xadf8>
   57a3a:	add    rbp,rax
   57a3d:	mov    QWORD PTR [rbx+0x30],rax
   57a41:	mov    QWORD PTR [rbx+0x40],rbp
   57a45:	mov    QWORD PTR [rbx+0x38],rax
   57a49:	add    rsp,0x8
   57a4d:	mov    eax,0x1
   57a52:	pop    rbx
   57a53:	pop    rbp
   57a54:	ret    
   57a55:	nop    DWORD PTR [rax]
   57a58:	sub    rdx,rax
   57a5b:	sub    QWORD PTR [rbx+0x20],rax
   57a5f:	lea    rsi,[rdi+rax*1]
   57a63:	mov    QWORD PTR [rbx+0x38],rdx
   57a67:	sub    rdx,rdi
   57a6a:	call   a630 <memmove@plt>
   57a6f:	add    rsp,0x8
   57a73:	xor    eax,eax
   57a75:	pop    rbx
   57a76:	pop    rbp
   57a77:	ret    
   57a78:	call   9e40 <__errno_location@plt>
   57a7d:	mov    DWORD PTR [rax],0xc
   57a83:	add    rsp,0x8
   57a87:	xor    eax,eax
   57a89:	pop    rbx
   57a8a:	pop    rbp
   57a8b:	ret    
   57a8c:	nop    DWORD PTR [rax+0x0]
   57a90:	endbr64 
   57a94:	push   r13
   57a96:	push   r12
   57a98:	mov    r12,rdi
   57a9b:	push   rbp
   57a9c:	push   rbx
   57a9d:	mov    rbx,rsi
   57aa0:	sub    rsp,0xd8
   57aa7:	mov    QWORD PTR [rsp+0x30],rdx
   57aac:	mov    QWORD PTR [rsp+0x38],rcx
   57ab1:	mov    QWORD PTR [rsp+0x40],r8
   57ab6:	mov    QWORD PTR [rsp+0x48],r9
   57abb:	test   al,al
   57abd:	je     57af6 <_obstack_memory_used@@Base+0xae76>
   57abf:	movaps XMMWORD PTR [rsp+0x50],xmm0
   57ac4:	movaps XMMWORD PTR [rsp+0x60],xmm1
   57ac9:	movaps XMMWORD PTR [rsp+0x70],xmm2
   57ace:	movaps XMMWORD PTR [rsp+0x80],xmm3
   57ad6:	movaps XMMWORD PTR [rsp+0x90],xmm4
   57ade:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   57ae6:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   57aee:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   57af6:	mov    rax,QWORD PTR fs:0x28
   57aff:	mov    QWORD PTR [rsp+0x18],rax
   57b04:	xor    eax,eax
   57b06:	mov    esi,0x96
   57b0b:	mov    rbp,rsp
   57b0e:	xchg   ax,ax
   57b10:	mov    rax,QWORD PTR [r12+0x40]
   57b15:	mov    rdx,rax
   57b18:	sub    rdx,QWORD PTR [r12+0x38]
   57b1d:	cmp    rsi,rdx
   57b20:	ja     57bb0 <_obstack_memory_used@@Base+0xaf30>
   57b26:	mov    rdi,QWORD PTR [r12+0x38]
   57b2b:	mov    edx,0x1
   57b30:	mov    r9,rbp
   57b33:	mov    r8,rbx
   57b36:	lea    rcx,[rsp+0x100]
   57b3e:	mov    DWORD PTR [rsp],0x10
   57b45:	sub    rax,rdi
   57b48:	mov    QWORD PTR [rsp+0x8],rcx
   57b4d:	lea    rcx,[rsp+0x20]
   57b52:	mov    QWORD PTR [rsp+0x10],rcx
   57b57:	mov    rsi,rax
   57b5a:	mov    rcx,0xffffffffffffffff
   57b61:	mov    r13,rax
   57b64:	mov    DWORD PTR [rsp+0x4],0x30
   57b6c:	call   a560 <__vsnprintf_chk@plt>
   57b71:	movsxd rdx,eax
   57b74:	cmp    rdx,r13
   57b77:	jae    57ba0 <_obstack_memory_used@@Base+0xaf20>
   57b79:	add    QWORD PTR [r12+0x38],rdx
   57b7e:	mov    rax,rdx
   57b81:	mov    rdx,QWORD PTR [rsp+0x18]
   57b86:	sub    rdx,QWORD PTR fs:0x28
   57b8f:	jne    57bd9 <_obstack_memory_used@@Base+0xaf59>
   57b91:	add    rsp,0xd8
   57b98:	pop    rbx
   57b99:	pop    rbp
   57b9a:	pop    r12
   57b9c:	pop    r13
   57b9e:	ret    
   57b9f:	nop
   57ba0:	add    eax,0x1
   57ba3:	movsxd rsi,eax
   57ba6:	jmp    57b10 <_obstack_memory_used@@Base+0xae90>
   57bab:	nop    DWORD PTR [rax+rax*1+0x0]
   57bb0:	mov    rdi,r12
   57bb3:	call   579d0 <_obstack_memory_used@@Base+0xad50>
   57bb8:	test   eax,eax
   57bba:	je     57bd0 <_obstack_memory_used@@Base+0xaf50>
   57bbc:	mov    rax,QWORD PTR [r12+0x40]
   57bc1:	jmp    57b26 <_obstack_memory_used@@Base+0xaea6>
   57bc6:	cs nop WORD PTR [rax+rax*1+0x0]
   57bd0:	mov    rax,0xffffffffffffffff
   57bd7:	jmp    57b81 <_obstack_memory_used@@Base+0xaf01>
   57bd9:	call   a0a0 <__stack_chk_fail@plt>
   57bde:	xchg   ax,ax
   57be0:	endbr64 
   57be4:	push   r12
   57be6:	push   rbp
   57be7:	mov    rbp,rdi
   57bea:	push   rbx
   57beb:	call   9eb0 <__fpending@plt>
   57bf0:	mov    ebx,DWORD PTR [rbp+0x0]
   57bf3:	mov    rdi,rbp
   57bf6:	mov    r12,rax
   57bf9:	and    ebx,0x20
   57bfc:	call   9ff0 <fclose@plt>
   57c01:	test   ebx,ebx
   57c03:	jne    57c28 <_obstack_memory_used@@Base+0xafa8>
   57c05:	test   eax,eax
   57c07:	je     57c1e <_obstack_memory_used@@Base+0xaf9e>
   57c09:	test   r12,r12
   57c0c:	jne    57c3e <_obstack_memory_used@@Base+0xafbe>
   57c0e:	call   9e40 <__errno_location@plt>
   57c13:	cmp    DWORD PTR [rax],0x9
   57c16:	setne  al
   57c19:	movzx  eax,al
   57c1c:	neg    eax
   57c1e:	pop    rbx
   57c1f:	pop    rbp
   57c20:	pop    r12
   57c22:	ret    
   57c23:	nop    DWORD PTR [rax+rax*1+0x0]
   57c28:	test   eax,eax
   57c2a:	jne    57c3e <_obstack_memory_used@@Base+0xafbe>
   57c2c:	call   9e40 <__errno_location@plt>
   57c31:	mov    DWORD PTR [rax],0x0
   57c37:	mov    eax,0xffffffff
   57c3c:	jmp    57c1e <_obstack_memory_used@@Base+0xaf9e>
   57c3e:	mov    eax,0xffffffff
   57c43:	jmp    57c1e <_obstack_memory_used@@Base+0xaf9e>
   57c45:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   57c50:	endbr64 
   57c54:	push   r15
   57c56:	push   r14
   57c58:	push   r13
   57c5a:	push   r12
   57c5c:	push   rbp
   57c5d:	push   rbx
   57c5e:	sub    rsp,0x28
   57c62:	mov    rax,QWORD PTR fs:0x28
   57c6b:	mov    QWORD PTR [rsp+0x18],rax
   57c70:	xor    eax,eax
   57c72:	movdqu xmm0,XMMWORD PTR [rsi]
   57c76:	movups XMMWORD PTR [rsp],xmm0
   57c7a:	mov    r15,QWORD PTR [rsi+0x10]
   57c7e:	mov    QWORD PTR [rsp+0x10],r15
   57c83:	test   rdi,rdi
   57c86:	je     57d60 <_obstack_memory_used@@Base+0xb0e0>
   57c8c:	mov    r13,rdi
   57c8f:	mov    r12,rsi
   57c92:	mov    rbp,rdi
   57c95:	xor    ebx,ebx
   57c97:	mov    r14,0xffffffffffffffff
   57c9e:	jmp    57cc0 <_obstack_memory_used@@Base+0xb040>
   57ca0:	mov    edx,eax
   57ca2:	add    eax,0x8
   57ca5:	mov    DWORD PTR [rsp],eax
   57ca8:	add    rdx,r15
   57cab:	mov    rdi,QWORD PTR [rdx]
   57cae:	call   a060 <strlen@plt>
   57cb3:	add    rbx,rax
   57cb6:	cmovb  rbx,r14
   57cba:	sub    rbp,0x1
   57cbe:	je     57ce0 <_obstack_memory_used@@Base+0xb060>
   57cc0:	mov    eax,DWORD PTR [rsp]
   57cc3:	cmp    eax,0x2f
   57cc6:	jbe    57ca0 <_obstack_memory_used@@Base+0xb020>
   57cc8:	mov    rdx,QWORD PTR [rsp+0x8]
   57ccd:	lea    rax,[rdx+0x8]
   57cd1:	mov    QWORD PTR [rsp+0x8],rax
   57cd6:	jmp    57cab <_obstack_memory_used@@Base+0xb02b>
   57cd8:	nop    DWORD PTR [rax+rax*1+0x0]
   57ce0:	cmp    rbx,0x7fffffff
   57ce7:	ja     57da0 <_obstack_memory_used@@Base+0xb120>
   57ced:	lea    rdi,[rbx+0x1]
   57cf1:	call   a4a0 <malloc@plt>
   57cf6:	mov    r14,rax
   57cf9:	test   rax,rax
   57cfc:	je     57db0 <_obstack_memory_used@@Base+0xb130>
   57d02:	mov    rbp,rax
   57d05:	jmp    57d43 <_obstack_memory_used@@Base+0xb0c3>
   57d07:	nop    WORD PTR [rax+rax*1+0x0]
   57d10:	mov    edx,eax
   57d12:	add    eax,0x8
   57d15:	add    rdx,QWORD PTR [r12+0x10]
   57d1a:	mov    DWORD PTR [r12],eax
   57d1e:	mov    r15,QWORD PTR [rdx]
   57d21:	mov    rdi,r15
   57d24:	call   a060 <strlen@plt>
   57d29:	mov    rdi,rbp
   57d2c:	mov    rsi,r15
   57d2f:	mov    rbx,rax
   57d32:	mov    rdx,rax
   57d35:	call   a420 <memcpy@plt>
   57d3a:	add    rbp,rbx
   57d3d:	sub    r13,0x1
   57d41:	je     57d78 <_obstack_memory_used@@Base+0xb0f8>
   57d43:	mov    eax,DWORD PTR [r12]
   57d47:	cmp    eax,0x2f
   57d4a:	jbe    57d10 <_obstack_memory_used@@Base+0xb090>
   57d4c:	mov    rdx,QWORD PTR [r12+0x8]
   57d51:	lea    rax,[rdx+0x8]
   57d55:	mov    QWORD PTR [r12+0x8],rax
   57d5a:	jmp    57d1e <_obstack_memory_used@@Base+0xb09e>
   57d5c:	nop    DWORD PTR [rax+0x0]
   57d60:	mov    edi,0x1
   57d65:	call   a4a0 <malloc@plt>
   57d6a:	mov    rbp,rax
   57d6d:	mov    r14,rax
   57d70:	test   rax,rax
   57d73:	je     57db0 <_obstack_memory_used@@Base+0xb130>
   57d75:	nop    DWORD PTR [rax]
   57d78:	mov    BYTE PTR [rbp+0x0],0x0
   57d7c:	mov    rax,QWORD PTR [rsp+0x18]
   57d81:	sub    rax,QWORD PTR fs:0x28
   57d8a:	jne    57db5 <_obstack_memory_used@@Base+0xb135>
   57d8c:	add    rsp,0x28
   57d90:	mov    rax,r14
   57d93:	pop    rbx
   57d94:	pop    rbp
   57d95:	pop    r12
   57d97:	pop    r13
   57d99:	pop    r14
   57d9b:	pop    r15
   57d9d:	ret    
   57d9e:	xchg   ax,ax
   57da0:	call   9e40 <__errno_location@plt>
   57da5:	xor    r14d,r14d
   57da8:	mov    DWORD PTR [rax],0x4b
   57dae:	jmp    57d7c <_obstack_memory_used@@Base+0xb0fc>
   57db0:	call   19130 <__sprintf_chk@plt+0xe780>
   57db5:	call   a0a0 <__stack_chk_fail@plt>
   57dba:	nop    WORD PTR [rax+rax*1+0x0]
   57dc0:	endbr64 
   57dc4:	cmp    QWORD PTR [rdi+0xd0],0x0
   57dcc:	mov    rax,rsi
   57dcf:	je     57dfc <_obstack_memory_used@@Base+0xb17c>
   57dd1:	test   rax,rax
   57dd4:	je     57de4 <_obstack_memory_used@@Base+0xb164>
   57dd6:	mov    rcx,QWORD PTR [rax+0x8]
   57dda:	test   rcx,rcx
   57ddd:	je     57de4 <_obstack_memory_used@@Base+0xb164>
   57ddf:	mov    rax,rcx
   57de2:	jmp    57dd1 <_obstack_memory_used@@Base+0xb151>
   57de4:	mov    rcx,QWORD PTR [rdx+0x8]
   57de8:	test   rcx,rcx
   57deb:	je     57e1a <_obstack_memory_used@@Base+0xb19a>
   57ded:	mov    QWORD PTR [rcx],rax
   57df0:	mov    QWORD PTR [rax+0x8],rcx
   57df4:	mov    QWORD PTR [rsi],rdx
   57df7:	mov    QWORD PTR [rdx+0x8],rsi
   57dfb:	ret    
   57dfc:	mov    QWORD PTR [rsi],0x0
   57e03:	mov    QWORD PTR [rsi+0x8],0x0
   57e0b:	mov    QWORD PTR [rdi+0xd8],rsi
   57e12:	mov    QWORD PTR [rdi+0xd0],rsi
   57e19:	ret    
   57e1a:	mov    QWORD PTR [rdi+0xd8],rax
   57e21:	jmp    57df0 <_obstack_memory_used@@Base+0xb170>
   57e23:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   57e2e:	xchg   ax,ax
   57e30:	endbr64 
   57e34:	push   r12
   57e36:	mov    r12,rsi
   57e39:	push   rbx
   57e3a:	mov    rbx,rdi
   57e3d:	sub    rsp,0x8
   57e41:	cmp    BYTE PTR [rdi+0xe0],0x0
   57e48:	je     57ea0 <_obstack_memory_used@@Base+0xb220>
   57e4a:	mov    r9,QWORD PTR [rdi+0x8]
   57e4e:	lea    rax,[r9+0x1]
   57e52:	cmp    rax,0xd
   57e56:	jbe    57ef0 <_obstack_memory_used@@Base+0xb270>
   57e5c:	mov    edx,0x1
   57e61:	mov    esi,0x64
   57e66:	mov    rdi,r12
   57e69:	xor    eax,eax
   57e6b:	lea    r8,[rip+0x14539]        # 6c3ab <_obstack_memory_used@@Base+0x1f72b>
   57e72:	mov    rcx,0xffffffffffffffff
   57e79:	call   9d90 <__snprintf_chk@plt>
   57e7e:	movsxd rdx,DWORD PTR [rbx+0x10]
   57e82:	cmp    edx,0x6
   57e85:	ja     57e90 <_obstack_memory_used@@Base+0xb210>
   57e87:	cmp    eax,0x63
   57e8a:	jbe    57f1d <_obstack_memory_used@@Base+0xb29d>
   57e90:	add    rsp,0x8
   57e94:	mov    rax,r12
   57e97:	pop    rbx
   57e98:	pop    r12
   57e9a:	ret    
   57e9b:	nop    DWORD PTR [rax+rax*1+0x0]
   57ea0:	mov    BYTE PTR [rsi],0x0
   57ea3:	movsxd rdx,DWORD PTR [rdi+0x10]
   57ea7:	cmp    edx,0x6
   57eaa:	ja     57e90 <_obstack_memory_used@@Base+0xb210>
   57eac:	mov    rdi,rsi
   57eaf:	mov    ecx,0x1
   57eb4:	mov    esi,0x64
   57eb9:	lea    rax,[rip+0x154e0]        # 6d3a0 <_obstack_memory_used@@Base+0x20720>
   57ec0:	lea    r9,[rax+rdx*4]
   57ec4:	lea    rax,[rip+0x13e8b]        # 6bd56 <_obstack_memory_used@@Base+0x1f0d6>
   57ecb:	mov    edx,0x1
   57ed0:	lea    r8,[rax+rcx*1]
   57ed4:	mov    rcx,0xffffffffffffffff
   57edb:	xor    eax,eax
   57edd:	call   9d90 <__snprintf_chk@plt>
   57ee2:	add    rsp,0x8
   57ee6:	mov    rax,r12
   57ee9:	pop    rbx
   57eea:	pop    r12
   57eec:	ret    
   57eed:	nop    DWORD PTR [rax]
   57ef0:	lea    rdx,[rax+rax*4]
   57ef4:	mov    esi,0x64
   57ef9:	mov    rdi,r12
   57efc:	lea    rcx,[rax+rdx*2]
   57f00:	lea    rax,[rip+0x154b9]        # 6d3c0 <_obstack_memory_used@@Base+0x20740>
   57f07:	add    rcx,rax
   57f0a:	lea    rdx,[rip+0x13e46]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   57f11:	xor    eax,eax
   57f13:	call   a110 <snprintf@plt>
   57f18:	jmp    57e7e <_obstack_memory_used@@Base+0xb1fe>
   57f1d:	xor    ecx,ecx
   57f1f:	mov    esi,0x64
   57f24:	test   eax,eax
   57f26:	sete   cl
   57f29:	sub    esi,eax
   57f2b:	cdqe   
   57f2d:	movsxd rsi,esi
   57f30:	lea    rdi,[r12+rax*1]
   57f34:	jmp    57eb9 <_obstack_memory_used@@Base+0xb239>
   57f36:	cs nop WORD PTR [rax+rax*1+0x0]
   57f40:	endbr64 
   57f44:	push   r12
   57f46:	mov    r12,rdx
   57f49:	mov    rcx,rdi
   57f4c:	lea    rdx,[rip+0x14f4e]        # 6cea1 <_obstack_memory_used@@Base+0x20221>
   57f53:	push   rbp
   57f54:	xor    r9d,r9d
   57f57:	mov    rbp,rsi
   57f5a:	xor    r8d,r8d
   57f5d:	push   rbx
   57f5e:	mov    esi,0x64
   57f63:	mov    rdi,r12
   57f66:	sub    rsp,0x38
   57f6a:	mov    rax,QWORD PTR fs:0x28
   57f73:	mov    QWORD PTR [rsp+0x30],rax
   57f78:	xor    eax,eax
   57f7a:	push   0xffffffffffffffff
   57f7c:	call   5f800 <_obstack_memory_used@@Base+0x12b80>
   57f81:	pop    rdx
   57f82:	pop    rcx
   57f83:	test   rbp,rbp
   57f86:	je     57f9a <_obstack_memory_used@@Base+0xb31a>
   57f88:	mov    rbx,rax
   57f8b:	cmp    eax,0x63
   57f8e:	jg     57f9a <_obstack_memory_used@@Base+0xb31a>
   57f90:	cmp    QWORD PTR [rbp+0xd0],0x0
   57f98:	jne    57fc0 <_obstack_memory_used@@Base+0xb340>
   57f9a:	mov    rax,QWORD PTR [rsp+0x28]
   57f9f:	sub    rax,QWORD PTR fs:0x28
   57fa8:	jne    57ffa <_obstack_memory_used@@Base+0xb37a>
   57faa:	add    rsp,0x30
   57fae:	mov    rax,r12
   57fb1:	pop    rbx
   57fb2:	pop    rbp
   57fb3:	pop    r12
   57fb5:	ret    
   57fb6:	cs nop WORD PTR [rax+rax*1+0x0]
   57fc0:	mov    edi,DWORD PTR [rbp+0x18]
   57fc3:	mov    rsi,rsp
   57fc6:	call   49880 <argp_usage@@Base+0x6500>
   57fcb:	mov    esi,0x64
   57fd0:	movsxd rdi,ebx
   57fd3:	lea    r8,[rip+0x14ee1]        # 6cebb <_obstack_memory_used@@Base+0x2023b>
   57fda:	sub    esi,ebx
   57fdc:	mov    r9,rax
   57fdf:	add    rdi,r12
   57fe2:	mov    rcx,0xffffffffffffffff
   57fe9:	movsxd rsi,esi
   57fec:	mov    edx,0x1
   57ff1:	xor    eax,eax
   57ff3:	call   9d90 <__snprintf_chk@plt>
   57ff8:	jmp    57f9a <_obstack_memory_used@@Base+0xb31a>
   57ffa:	call   a0a0 <__stack_chk_fail@plt>
   57fff:	nop
   58000:	endbr64 
   58004:	push   r15
   58006:	mov    r15,rsi
   58009:	push   r14
   5800b:	mov    r14,rcx
   5800e:	push   r13
   58010:	mov    r13,rdx
   58013:	push   r12
   58015:	push   rbp
   58016:	mov    rbp,rdi
   58019:	push   rbx
   5801a:	sub    rsp,0x38
   5801e:	mov    rax,QWORD PTR fs:0x28
   58027:	mov    QWORD PTR [rsp+0x28],rax
   5802c:	xor    eax,eax
   5802e:	test   rsi,rsi
   58031:	lea    rax,[rsp+0x20]
   58036:	cmove  r15,rax
   5803a:	call   9e40 <__errno_location@plt>
   5803f:	mov    DWORD PTR [rax],0x0
   58045:	mov    r12,rax
   58048:	movzx  ebx,BYTE PTR [rbp+0x0]
   5804c:	call   a980 <__ctype_b_loc@plt>
   58051:	mov    rcx,QWORD PTR [rax]
   58054:	mov    rax,rbp
   58057:	jmp    58068 <_obstack_memory_used@@Base+0xb3e8>
   58059:	nop    DWORD PTR [rax+0x0]
   58060:	movzx  ebx,BYTE PTR [rax+0x1]
   58064:	add    rax,0x1
   58068:	movzx  edx,bl
   5806b:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   58070:	jne    58060 <_obstack_memory_used@@Base+0xb3e0>
   58072:	cmp    bl,0x2d
   58075:	je     580e3 <_obstack_memory_used@@Base+0xb463>
   58077:	mov    edx,0xa
   5807c:	mov    rsi,r15
   5807f:	mov    rdi,rbp
   58082:	call   a710 <strtoumax@plt>
   58087:	mov    rcx,QWORD PTR [r15]
   5808a:	mov    rbx,rax
   5808d:	cmp    rbp,rcx
   58090:	je     580f0 <_obstack_memory_used@@Base+0xb470>
   58092:	mov    eax,DWORD PTR [r12]
   58096:	test   eax,eax
   58098:	jne    580d8 <_obstack_memory_used@@Base+0xb458>
   5809a:	xor    r12d,r12d
   5809d:	movzx  ebp,BYTE PTR [rcx]
   580a0:	test   bpl,bpl
   580a3:	jne    58170 <_obstack_memory_used@@Base+0xb4f0>
   580a9:	mov    QWORD PTR [r13+0x0],rbx
   580ad:	mov    rax,QWORD PTR [rsp+0x28]
   580b2:	sub    rax,QWORD PTR fs:0x28
   580bb:	jne    5849a <_obstack_memory_used@@Base+0xb81a>
   580c1:	add    rsp,0x38
   580c5:	mov    eax,r12d
   580c8:	pop    rbx
   580c9:	pop    rbp
   580ca:	pop    r12
   580cc:	pop    r13
   580ce:	pop    r14
   580d0:	pop    r15
   580d2:	ret    
   580d3:	nop    DWORD PTR [rax+rax*1+0x0]
   580d8:	mov    r12d,0x1
   580de:	cmp    eax,0x22
   580e1:	je     5809d <_obstack_memory_used@@Base+0xb41d>
   580e3:	mov    r12d,0x4
   580e9:	jmp    580ad <_obstack_memory_used@@Base+0xb42d>
   580eb:	nop    DWORD PTR [rax+rax*1+0x0]
   580f0:	movzx  ebp,BYTE PTR [rcx]
   580f3:	mov    QWORD PTR [rsp+0x8],rcx
   580f8:	test   bpl,bpl
   580fb:	je     580e3 <_obstack_memory_used@@Base+0xb463>
   580fd:	movsx  esi,bpl
   58101:	mov    rdi,r14
   58104:	xor    r12d,r12d
   58107:	mov    ebx,0x1
   5810c:	call   a0f0 <strchr@plt>
   58111:	mov    rcx,QWORD PTR [rsp+0x8]
   58116:	test   rax,rax
   58119:	je     580e3 <_obstack_memory_used@@Base+0xb463>
   5811b:	lea    eax,[rbp-0x45]
   5811e:	cmp    al,0x2f
   58120:	ja     58440 <_obstack_memory_used@@Base+0xb7c0>
   58126:	movzx  edi,al
   58129:	mov    r9d,0x1
   5812f:	movabs rsi,0x814400308945
   58139:	mov    r8d,0x400
   5813f:	bt     rsi,rax
   58143:	mov    QWORD PTR [rsp+0x18],rdi
   58148:	jb     58198 <_obstack_memory_used@@Base+0xb518>
   5814a:	lea    edx,[rbp-0x42]
   5814d:	cmp    dl,0x35
   58150:	ja     5818b <_obstack_memory_used@@Base+0xb50b>
   58152:	lea    rsi,[rip+0x150a7]        # 6d200 <_obstack_memory_used@@Base+0x20580>
   58159:	movzx  edx,dl
   5815c:	movsxd rax,DWORD PTR [rsi+rdx*4]
   58160:	add    rax,rsi
   58163:	notrack jmp rax
   58166:	cs nop WORD PTR [rax+rax*1+0x0]
   58170:	movsx  esi,bpl
   58174:	mov    rdi,r14
   58177:	mov    QWORD PTR [rsp+0x8],rcx
   5817c:	call   a0f0 <strchr@plt>
   58181:	mov    rcx,QWORD PTR [rsp+0x8]
   58186:	test   rax,rax
   58189:	jne    5811b <_obstack_memory_used@@Base+0xb49b>
   5818b:	mov    QWORD PTR [r13+0x0],rbx
   5818f:	or     r12d,0x2
   58193:	jmp    580ad <_obstack_memory_used@@Base+0xb42d>
   58198:	mov    esi,0x30
   5819d:	mov    rdi,r14
   581a0:	mov    DWORD PTR [rsp+0x14],r9d
   581a5:	mov    DWORD PTR [rsp+0x10],r8d
   581aa:	mov    QWORD PTR [rsp+0x8],rcx
   581af:	call   a0f0 <strchr@plt>
   581b4:	mov    rcx,QWORD PTR [rsp+0x8]
   581b9:	mov    r8d,0x400
   581bf:	mov    r9d,0x1
   581c5:	test   rax,rax
   581c8:	je     5814a <_obstack_memory_used@@Base+0xb4ca>
   581ca:	movzx  eax,BYTE PTR [rcx+0x1]
   581ce:	cmp    al,0x44
   581d0:	je     58451 <_obstack_memory_used@@Base+0xb7d1>
   581d6:	cmp    al,0x69
   581d8:	je     581f8 <_obstack_memory_used@@Base+0xb578>
   581da:	cmp    al,0x42
   581dc:	je     58451 <_obstack_memory_used@@Base+0xb7d1>
   581e2:	mov    rax,QWORD PTR [rsp+0x18]
   581e7:	lea    rdx,[rip+0x150ea]        # 6d2d8 <_obstack_memory_used@@Base+0x20658>
   581ee:	movsxd rax,DWORD PTR [rdx+rax*4]
   581f2:	add    rax,rdx
   581f5:	notrack jmp rax
   581f8:	xor    r9d,r9d
   581fb:	cmp    BYTE PTR [rcx+0x2],0x42
   581ff:	sete   r9b
   58203:	lea    r9d,[r9+r9*1+0x1]
   58208:	jmp    5814a <_obstack_memory_used@@Base+0xb4ca>
   5820d:	movsxd rbp,r8d
   58210:	movsxd r9,r9d
   58213:	mov    esi,0x4
   58218:	xor    edi,edi
   5821a:	nop    WORD PTR [rax+rax*1+0x0]
   58220:	mov    rax,rbx
   58223:	mul    rbp
   58226:	mov    rbx,rax
   58229:	jo     58470 <_obstack_memory_used@@Base+0xb7f0>
   5822f:	sub    esi,0x1
   58232:	jne    58220 <_obstack_memory_used@@Base+0xb5a0>
   58234:	or     r12d,edi
   58237:	add    r9,rcx
   5823a:	mov    eax,r12d
   5823d:	or     eax,0x2
   58240:	mov    QWORD PTR [r15],r9
   58243:	cmp    BYTE PTR [r9],0x0
   58247:	cmovne r12d,eax
   5824b:	jmp    580a9 <_obstack_memory_used@@Base+0xb429>
   58250:	movsxd rbp,r8d
   58253:	movsxd r9,r9d
   58256:	mov    rax,rbx
   58259:	mul    rbp
   5825c:	jo     58279 <_obstack_memory_used@@Base+0xb5f9>
   5825e:	mul    rbp
   58261:	jo     58279 <_obstack_memory_used@@Base+0xb5f9>
   58263:	mov    rbx,rax
   58266:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   58268:	movsxd rbp,r8d
   5826b:	movsxd r9,r9d
   5826e:	mov    rax,rbx
   58271:	mul    rbp
   58274:	mov    rbx,rax
   58277:	jno    58237 <_obstack_memory_used@@Base+0xb5b7>
   58279:	mov    r12d,0x1
   5827f:	or     rbx,0xffffffffffffffff
   58283:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   58285:	nop    DWORD PTR [rax]
   58288:	movsxd rbp,r8d
   5828b:	movsxd r9,r9d
   5828e:	mov    rax,rbx
   58291:	mul    rbp
   58294:	jo     5849f <_obstack_memory_used@@Base+0xb81f>
   5829a:	mul    rbp
   5829d:	jo     5849f <_obstack_memory_used@@Base+0xb81f>
   582a3:	mul    rbp
   582a6:	jo     5849f <_obstack_memory_used@@Base+0xb81f>
   582ac:	mov    rbx,rax
   582af:	xor    eax,eax
   582b1:	or     r12d,eax
   582b4:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   582b6:	mov    rax,rbx
   582b9:	movsxd r9,r9d
   582bc:	shr    rax,0x36
   582c0:	jne    58279 <_obstack_memory_used@@Base+0xb5f9>
   582c2:	shl    rbx,0xa
   582c6:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   582cb:	movsxd r9,r9d
   582ce:	test   rbx,rbx
   582d1:	js     58279 <_obstack_memory_used@@Base+0xb5f9>
   582d3:	add    rbx,rbx
   582d6:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   582db:	movsxd r9,r9d
   582de:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   582e3:	movsxd rbp,r8d
   582e6:	movsxd r9,r9d
   582e9:	mov    esi,0x6
   582ee:	xor    edi,edi
   582f0:	mov    rax,rbx
   582f3:	mul    rbp
   582f6:	mov    rbx,rax
   582f9:	jo     584ad <_obstack_memory_used@@Base+0xb82d>
   582ff:	sub    esi,0x1
   58302:	jne    582f0 <_obstack_memory_used@@Base+0xb670>
   58304:	jmp    58234 <_obstack_memory_used@@Base+0xb5b4>
   58309:	movsxd r9,r9d
   5830c:	mov    rax,rbx
   5830f:	shr    rax,0x37
   58313:	jne    58279 <_obstack_memory_used@@Base+0xb5f9>
   58319:	shl    rbx,0x9
   5831d:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   58322:	movsxd rbp,r8d
   58325:	movsxd r9,r9d
   58328:	mov    esi,0x7
   5832d:	xor    edi,edi
   5832f:	nop
   58330:	mov    rax,rbx
   58333:	mul    rbp
   58336:	mov    rbx,rax
   58339:	jo     5847e <_obstack_memory_used@@Base+0xb7fe>
   5833f:	sub    esi,0x1
   58342:	jne    58330 <_obstack_memory_used@@Base+0xb6b0>
   58344:	jmp    58234 <_obstack_memory_used@@Base+0xb5b4>
   58349:	movsxd rbp,r8d
   5834c:	movsxd r9,r9d
   5834f:	mov    esi,0x5
   58354:	xor    edi,edi
   58356:	cs nop WORD PTR [rax+rax*1+0x0]
   58360:	mov    rax,rbx
   58363:	mul    rbp
   58366:	mov    rbx,rax
   58369:	jo     58462 <_obstack_memory_used@@Base+0xb7e2>
   5836f:	sub    esi,0x1
   58372:	jne    58360 <_obstack_memory_used@@Base+0xb6e0>
   58374:	jmp    58234 <_obstack_memory_used@@Base+0xb5b4>
   58379:	movsxd rbp,r8d
   5837c:	movsxd r9,r9d
   5837f:	mov    esi,0x8
   58384:	xor    edi,edi
   58386:	cs nop WORD PTR [rax+rax*1+0x0]
   58390:	mov    rax,rbx
   58393:	mul    rbp
   58396:	mov    rbx,rax
   58399:	jo     5848c <_obstack_memory_used@@Base+0xb80c>
   5839f:	sub    esi,0x1
   583a2:	jne    58390 <_obstack_memory_used@@Base+0xb710>
   583a4:	jmp    58234 <_obstack_memory_used@@Base+0xb5b4>
   583a9:	mov    r9d,0x1
   583af:	mov    ebp,0x400
   583b4:	jmp    58213 <_obstack_memory_used@@Base+0xb593>
   583b9:	mov    r9d,0x1
   583bf:	mov    ebp,0x400
   583c4:	jmp    5826e <_obstack_memory_used@@Base+0xb5ee>
   583c9:	mov    r9d,0x1
   583cf:	mov    ebp,0x400
   583d4:	jmp    5828e <_obstack_memory_used@@Base+0xb60e>
   583d9:	mov    r9d,0x1
   583df:	mov    ebp,0x400
   583e4:	jmp    58256 <_obstack_memory_used@@Base+0xb5d6>
   583e9:	mov    r9d,0x1
   583ef:	mov    ebp,0x400
   583f4:	jmp    5834f <_obstack_memory_used@@Base+0xb6cf>
   583f9:	mov    r9d,0x1
   583ff:	mov    ebp,0x400
   58404:	jmp    5837f <_obstack_memory_used@@Base+0xb6ff>
   58409:	mov    r9d,0x1
   5840f:	mov    ebp,0x400
   58414:	jmp    582e9 <_obstack_memory_used@@Base+0xb669>
   58419:	mov    r9d,0x1
   5841f:	jmp    58237 <_obstack_memory_used@@Base+0xb5b7>
   58424:	mov    r9d,0x1
   5842a:	jmp    5830c <_obstack_memory_used@@Base+0xb68c>
   5842f:	mov    r9d,0x1
   58435:	mov    ebp,0x400
   5843a:	jmp    58328 <_obstack_memory_used@@Base+0xb6a8>
   5843f:	nop
   58440:	mov    r9d,0x1
   58446:	mov    r8d,0x400
   5844c:	jmp    5814a <_obstack_memory_used@@Base+0xb4ca>
   58451:	mov    r9d,0x2
   58457:	mov    r8d,0x3e8
   5845d:	jmp    5814a <_obstack_memory_used@@Base+0xb4ca>
   58462:	mov    edi,0x1
   58467:	or     rbx,0xffffffffffffffff
   5846b:	jmp    5836f <_obstack_memory_used@@Base+0xb6ef>
   58470:	mov    edi,0x1
   58475:	or     rbx,0xffffffffffffffff
   58479:	jmp    5822f <_obstack_memory_used@@Base+0xb5af>
   5847e:	mov    edi,0x1
   58483:	or     rbx,0xffffffffffffffff
   58487:	jmp    5833f <_obstack_memory_used@@Base+0xb6bf>
   5848c:	mov    edi,0x1
   58491:	or     rbx,0xffffffffffffffff
   58495:	jmp    5839f <_obstack_memory_used@@Base+0xb71f>
   5849a:	call   a0a0 <__stack_chk_fail@plt>
   5849f:	mov    eax,0x1
   584a4:	or     rbx,0xffffffffffffffff
   584a8:	jmp    582b1 <_obstack_memory_used@@Base+0xb631>
   584ad:	mov    edi,0x1
   584b2:	or     rbx,0xffffffffffffffff
   584b6:	jmp    582ff <_obstack_memory_used@@Base+0xb67f>
   584bb:	nop    DWORD PTR [rax+rax*1+0x0]
   584c0:	endbr64 
   584c4:	push   r13
   584c6:	push   r12
   584c8:	push   rbp
   584c9:	mov    rbp,rsi
   584cc:	mov    esi,0x3a
   584d1:	push   rbx
   584d2:	mov    rbx,rdi
   584d5:	sub    rsp,0x28
   584d9:	mov    rax,QWORD PTR fs:0x28
   584e2:	mov    QWORD PTR [rsp+0x18],rax
   584e7:	xor    eax,eax
   584e9:	mov    QWORD PTR [rsp],0xffffffffffffffff
   584f1:	call   a0f0 <strchr@plt>
   584f6:	test   rax,rax
   584f9:	je     585b0 <_obstack_memory_used@@Base+0xb930>
   584ff:	mov    BYTE PTR [rax],0x0
   58502:	lea    r13,[rax+0x1]
   58506:	mov    rdx,rsp
   58509:	xor    eax,eax
   5850b:	lea    rsi,[rsp+0x8]
   58510:	cmp    BYTE PTR [rbx],0x0
   58513:	lea    rcx,[rip+0x13636]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   5851a:	mov    rdi,r13
   5851d:	cmove  rbx,rax
   58521:	call   58000 <_obstack_memory_used@@Base+0xb380>
   58526:	test   eax,eax
   58528:	je     58578 <_obstack_memory_used@@Base+0xb8f8>
   5852a:	mov    rax,QWORD PTR [rip+0x26fd7]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   58531:	test   rax,rax
   58534:	je     58538 <_obstack_memory_used@@Base+0xb8b8>
   58536:	call   rax
   58538:	mov    edx,0x5
   5853d:	lea    rsi,[rip+0x1497e]        # 6cec2 <_obstack_memory_used@@Base+0x20242>
   58544:	xor    edi,edi
   58546:	call   a040 <dcgettext@plt>
   5854b:	mov    rdi,r13
   5854e:	mov    rbx,rax
   58551:	call   4b670 <argp_usage@@Base+0x82f0>
   58556:	mov    r8,rbx
   58559:	xor    esi,esi
   5855b:	xor    edi,edi
   5855d:	mov    rcx,rax
   58560:	lea    rdx,[rip+0x14910]        # 6ce77 <_obstack_memory_used@@Base+0x201f7>
   58567:	xor    eax,eax
   58569:	call   a640 <error@plt>
   5856e:	call   190e0 <__sprintf_chk@plt+0xe730>
   58573:	nop    DWORD PTR [rax+rax*1+0x0]
   58578:	mov    r12,QWORD PTR [rsp]
   5857c:	mov    rax,r12
   5857f:	shr    rax,0x20
   58583:	jne    5852a <_obstack_memory_used@@Base+0xb8aa>
   58585:	test   rbx,rbx
   58588:	je     5858e <_obstack_memory_used@@Base+0xb90e>
   5858a:	mov    QWORD PTR [rbp+0x0],rbx
   5858e:	mov    rax,QWORD PTR [rsp+0x18]
   58593:	sub    rax,QWORD PTR fs:0x28
   5859c:	jne    58600 <_obstack_memory_used@@Base+0xb980>
   5859e:	add    rsp,0x28
   585a2:	mov    rax,r12
   585a5:	pop    rbx
   585a6:	pop    rbp
   585a7:	pop    r12
   585a9:	pop    r13
   585ab:	ret    
   585ac:	nop    DWORD PTR [rax+0x0]
   585b0:	movzx  eax,BYTE PTR [rbx]
   585b3:	mov    r12,0xffffffffffffffff
   585ba:	sub    eax,0x30
   585bd:	cmp    al,0x9
   585bf:	ja     5858a <_obstack_memory_used@@Base+0xb90a>
   585c1:	lea    rdx,[rsp+0x10]
   585c6:	lea    rsi,[rsp+0x8]
   585cb:	mov    rdi,rbx
   585ce:	lea    rcx,[rip+0x1357b]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   585d5:	call   58000 <_obstack_memory_used@@Base+0xb380>
   585da:	test   eax,eax
   585dc:	je     585f0 <_obstack_memory_used@@Base+0xb970>
   585de:	cmp    eax,0x1
   585e1:	jne    5858a <_obstack_memory_used@@Base+0xb90a>
   585e3:	mov    r13,rbx
   585e6:	jmp    5852a <_obstack_memory_used@@Base+0xb8aa>
   585eb:	nop    DWORD PTR [rax+rax*1+0x0]
   585f0:	mov    r12,QWORD PTR [rsp+0x10]
   585f5:	mov    rax,r12
   585f8:	shr    rax,0x20
   585fc:	je     5858e <_obstack_memory_used@@Base+0xb90e>
   585fe:	jmp    585e3 <_obstack_memory_used@@Base+0xb963>
   58600:	call   a0a0 <__stack_chk_fail@plt>
   58605:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   58610:	endbr64 
   58614:	push   r14
   58616:	mov    esi,0x1
   5861b:	push   r13
   5861d:	push   r12
   5861f:	lea    r12,[rip+0xfffffffffffcaaca]        # 230f0 <__sprintf_chk@plt+0x18740>
   58626:	push   rbp
   58627:	mov    rdx,r12
   5862a:	push   rbx
   5862b:	mov    ebx,edi
   5862d:	lea    rdi,[rip+0x26cf4]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   58634:	sub    rsp,0x10
   58638:	mov    rax,QWORD PTR fs:0x28
   58641:	mov    QWORD PTR [rsp+0x8],rax
   58646:	xor    eax,eax
   58648:	lea    r13,[rsp+0x4]
   5864d:	mov    DWORD PTR [rsp+0x4],0x1
   58655:	mov    rcx,r13
   58658:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   5865d:	cmp    ebx,0x31
   58660:	je     586b0 <_obstack_memory_used@@Base+0xba30>
   58662:	cmp    ebx,0x32
   58665:	jne    58686 <_obstack_memory_used@@Base+0xba06>
   58667:	mov    rcx,r13
   5866a:	mov    rdx,r12
   5866d:	mov    esi,0x4
   58672:	mov    DWORD PTR [rsp+0x4],0x4
   5867a:	lea    rdi,[rip+0x26cb7]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   58681:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   58686:	cmp    BYTE PTR [rip+0x2758b],0x0        # 7fc18 <argp_program_version_hook@@Base+0x40>
   5868d:	jne    586d8 <_obstack_memory_used@@Base+0xba58>
   5868f:	mov    rax,QWORD PTR [rsp+0x8]
   58694:	sub    rax,QWORD PTR fs:0x28
   5869d:	jne    587a8 <_obstack_memory_used@@Base+0xbb28>
   586a3:	add    rsp,0x10
   586a7:	pop    rbx
   586a8:	pop    rbp
   586a9:	pop    r12
   586ab:	pop    r13
   586ad:	pop    r14
   586af:	ret    
   586b0:	mov    rcx,r13
   586b3:	mov    rdx,r12
   586b6:	mov    esi,0x2
   586bb:	mov    DWORD PTR [rsp+0x4],0x2
   586c3:	lea    rdi,[rip+0x26c6e]        # 7f338 <obstack_alloc_failed_handler@@Base+0x500>
   586ca:	call   61d00 <_obstack_memory_used@@Base+0x15080>
   586cf:	cmp    BYTE PTR [rip+0x27542],0x0        # 7fc18 <argp_program_version_hook@@Base+0x40>
   586d6:	je     5868f <_obstack_memory_used@@Base+0xba0f>
   586d8:	mov    r12,QWORD PTR [rip+0x26c49]        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   586df:	movzx  ebp,BYTE PTR [r12]
   586e4:	mov    rbx,r12
   586e7:	lea    eax,[rbp-0x2e]
   586ea:	cmp    al,0x1
   586ec:	ja     586ff <_obstack_memory_used@@Base+0xba7f>
   586ee:	xchg   ax,ax
   586f0:	movzx  ebp,BYTE PTR [rbx+0x1]
   586f4:	add    rbx,0x1
   586f8:	lea    eax,[rbp-0x2e]
   586fb:	cmp    al,0x1
   586fd:	jbe    586f0 <_obstack_memory_used@@Base+0xba70>
   586ff:	mov    r14,QWORD PTR [rip+0x2750a]        # 7fc10 <argp_program_version_hook@@Base+0x38>
   58706:	mov    rdi,r14
   58709:	call   a060 <strlen@plt>
   5870e:	test   bpl,bpl
   58711:	je     58780 <_obstack_memory_used@@Base+0xbb00>
   58713:	movsxd rbp,eax
   58716:	mov    rsi,r14
   58719:	mov    rdi,rbx
   5871c:	mov    rdx,rbp
   5871f:	call   9e50 <strncmp@plt>
   58724:	test   eax,eax
   58726:	jne    5873c <_obstack_memory_used@@Base+0xbabc>
   58728:	movzx  eax,BYTE PTR [rbx+rbp*1]
   5872c:	cmp    al,0x2f
   5872e:	je     5868f <_obstack_memory_used@@Base+0xba0f>
   58734:	test   al,al
   58736:	je     5868f <_obstack_memory_used@@Base+0xba0f>
   5873c:	mov    rdi,r14
   5873f:	mov    rsi,r12
   58742:	call   322b0 <__sprintf_chk@plt+0x27900>
   58747:	mov    rdi,rax
   5874a:	mov    QWORD PTR [rip+0x26bd7],rax        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   58751:	call   254c0 <__sprintf_chk@plt+0x1ab10>
   58756:	mov    rax,QWORD PTR [rsp+0x8]
   5875b:	sub    rax,QWORD PTR fs:0x28
   58764:	jne    587a8 <_obstack_memory_used@@Base+0xbb28>
   58766:	add    rsp,0x10
   5876a:	mov    rdi,r12
   5876d:	pop    rbx
   5876e:	pop    rbp
   5876f:	pop    r12
   58771:	pop    r13
   58773:	pop    r14
   58775:	jmp    9ce0 <free@plt>
   5877a:	nop    WORD PTR [rax+rax*1+0x0]
   58780:	lea    r13,[rax+0x1]
   58784:	mov    rdi,r13
   58787:	call   a4a0 <malloc@plt>
   5878c:	mov    rdi,rax
   5878f:	test   rax,rax
   58792:	je     587ad <_obstack_memory_used@@Base+0xbb2d>
   58794:	mov    rdx,r13
   58797:	mov    rsi,r14
   5879a:	call   a420 <memcpy@plt>
   5879f:	mov    QWORD PTR [rip+0x26b82],rax        # 7f328 <obstack_alloc_failed_handler@@Base+0x4f0>
   587a6:	jmp    58756 <_obstack_memory_used@@Base+0xbad6>
   587a8:	call   a0a0 <__stack_chk_fail@plt>
   587ad:	call   19130 <__sprintf_chk@plt+0xe780>
   587b2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   587bd:	nop    DWORD PTR [rax]
   587c0:	endbr64 
   587c4:	push   r14
   587c6:	push   r13
   587c8:	mov    r13,rcx
   587cb:	mov    rcx,rdx
   587ce:	push   r12
   587d0:	mov    r12,rdx
   587d3:	xor    edx,edx
   587d5:	push   rbp
   587d6:	mov    rbp,rsi
   587d9:	push   rbx
   587da:	mov    rbx,rdi
   587dd:	mov    rdi,rbp
   587e0:	sub    rsp,0x10
   587e4:	mov    rax,QWORD PTR fs:0x28
   587ed:	mov    QWORD PTR [rsp+0x8],rax
   587f2:	xor    eax,eax
   587f4:	mov    rsi,rsp
   587f7:	call   234d0 <__sprintf_chk@plt+0x18b20>
   587fc:	mov    r14,rax
   587ff:	call   9e40 <__errno_location@plt>
   58804:	mov    eax,DWORD PTR [rax]
   58806:	cmp    eax,0x16
   58809:	je     58840 <_obstack_memory_used@@Base+0xbbc0>
   5880b:	mov    rdx,QWORD PTR [rsp]
   5880f:	cmp    BYTE PTR [rdx],0x0
   58812:	jne    58840 <_obstack_memory_used@@Base+0xbbc0>
   58814:	cmp    eax,0x22
   58817:	je     58888 <_obstack_memory_used@@Base+0xbc08>
   58819:	mov    QWORD PTR [rbx],r14
   5881c:	mov    eax,0x1
   58821:	mov    rdx,QWORD PTR [rsp+0x8]
   58826:	sub    rdx,QWORD PTR fs:0x28
   5882f:	jne    5889c <_obstack_memory_used@@Base+0xbc1c>
   58831:	add    rsp,0x10
   58835:	pop    rbx
   58836:	pop    rbp
   58837:	pop    r12
   58839:	pop    r13
   5883b:	pop    r14
   5883d:	ret    
   5883e:	xchg   ax,ax
   58840:	mov    rax,QWORD PTR [rip+0x26cc1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   58847:	test   rax,rax
   5884a:	je     5884e <_obstack_memory_used@@Base+0xbbce>
   5884c:	call   rax
   5884e:	mov    edx,0x5
   58853:	lea    rsi,[rip+0xc016]        # 64870 <_obstack_memory_used@@Base+0x17bf0>
   5885a:	xor    edi,edi
   5885c:	call   a040 <dcgettext@plt>
   58861:	mov    r8,rbp
   58864:	mov    rcx,r13
   58867:	xor    esi,esi
   58869:	mov    rdx,rax
   5886c:	xor    edi,edi
   5886e:	xor    eax,eax
   58870:	call   a640 <error@plt>
   58875:	xor    eax,eax
   58877:	mov    DWORD PTR [rip+0x26843],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   58881:	jmp    58821 <_obstack_memory_used@@Base+0xbba1>
   58883:	nop    DWORD PTR [rax+rax*1+0x0]
   58888:	mov    rcx,r12
   5888b:	xor    edx,edx
   5888d:	mov    rsi,rbp
   58890:	mov    rdi,r13
   58893:	call   1cf80 <__sprintf_chk@plt+0x125d0>
   58898:	xor    eax,eax
   5889a:	jmp    58821 <_obstack_memory_used@@Base+0xbba1>
   5889c:	call   a0a0 <__stack_chk_fail@plt>
   588a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   588ac:	nop    DWORD PTR [rax+0x0]
   588b0:	endbr64 
   588b4:	push   r15
   588b6:	push   r14
   588b8:	push   r13
   588ba:	push   r12
   588bc:	push   rbp
   588bd:	push   rbx
   588be:	sub    rsp,0x58
   588c2:	mov    QWORD PTR [rsp+0x8],rsi
   588c7:	mov    DWORD PTR [rsp+0x1c],edx
   588cb:	mov    QWORD PTR [rsp+0x10],rcx
   588d0:	mov    rax,QWORD PTR fs:0x28
   588d9:	mov    QWORD PTR [rsp+0x48],rax
   588de:	xor    eax,eax
   588e0:	test   rcx,rcx
   588e3:	je     58a90 <_obstack_memory_used@@Base+0xbe10>
   588e9:	mov    r14,QWORD PTR [rsp+0x10]
   588ee:	lea    rbp,[rip+0x145e7]        # 6cedc <_obstack_memory_used@@Base+0x2025c>
   588f5:	lea    r15,[rip+0x145e4]        # 6cee0 <_obstack_memory_used@@Base+0x20260>
   588fc:	mov    rbx,r14
   588ff:	movzx  eax,BYTE PTR [r14]
   58903:	jmp    5897a <_obstack_memory_used@@Base+0xbcfa>
   58905:	nop    DWORD PTR [rax]
   58908:	add    r12,0x1
   5890c:	mov    rsi,rbp
   5890f:	mov    rdi,r12
   58912:	call   a270 <strcspn@plt>
   58917:	add    r12,rax
   5891a:	cmp    BYTE PTR [r12],0x3a
   5891f:	jne    58998 <_obstack_memory_used@@Base+0xbd18>
   58921:	add    r12,0x1
   58925:	mov    rsi,rbp
   58928:	mov    rdi,r12
   5892b:	call   a270 <strcspn@plt>
   58930:	add    r12,rax
   58933:	mov    r13,r12
   58936:	sub    r13,r14
   58939:	cmp    r14,rbx
   5893c:	je     589d0 <_obstack_memory_used@@Base+0xbd50>
   58942:	mov    rsi,r14
   58945:	mov    rdx,r13
   58948:	mov    rdi,rbx
   5894b:	mov    r14,r12
   5894e:	call   a630 <memmove@plt>
   58953:	movzx  eax,BYTE PTR [r12]
   58958:	add    rbx,r13
   5895b:	cmp    al,0x3a
   5895d:	jne    58972 <_obstack_memory_used@@Base+0xbcf2>
   5895f:	mov    rsi,r15
   58962:	mov    rdi,r12
   58965:	call   a270 <strcspn@plt>
   5896a:	lea    r14,[r12+rax*1]
   5896e:	movzx  eax,BYTE PTR [r14]
   58972:	cmp    al,0xa
   58974:	je     589b8 <_obstack_memory_used@@Base+0xbd38>
   58976:	cmp    al,0x2c
   58978:	je     589b8 <_obstack_memory_used@@Base+0xbd38>
   5897a:	test   al,al
   5897c:	je     589e0 <_obstack_memory_used@@Base+0xbd60>
   5897e:	mov    rsi,rbp
   58981:	mov    rdi,r14
   58984:	call   a270 <strcspn@plt>
   58989:	lea    r12,[r14+rax*1]
   5898d:	cmp    BYTE PTR [r12],0x3a
   58992:	je     58908 <_obstack_memory_used@@Base+0xbc88>
   58998:	mov    r13,r12
   5899b:	sub    r13,r14
   5899e:	cmp    r14,rbx
   589a1:	jne    58942 <_obstack_memory_used@@Base+0xbcc2>
   589a3:	movzx  eax,BYTE PTR [r12]
   589a8:	lea    rbx,[r14+r13*1]
   589ac:	mov    r14,r12
   589af:	cmp    al,0xa
   589b1:	jne    58976 <_obstack_memory_used@@Base+0xbcf6>
   589b3:	nop    DWORD PTR [rax+rax*1+0x0]
   589b8:	mov    BYTE PTR [rbx],al
   589ba:	add    r14,0x1
   589be:	add    rbx,0x1
   589c2:	jmp    588ff <_obstack_memory_used@@Base+0xbc7f>
   589c7:	nop    WORD PTR [rax+rax*1+0x0]
   589d0:	mov    r14,r12
   589d3:	jmp    58953 <_obstack_memory_used@@Base+0xbcd3>
   589d8:	nop    DWORD PTR [rax+rax*1+0x0]
   589e0:	cmp    r14,rbx
   589e3:	je     589e8 <_obstack_memory_used@@Base+0xbd68>
   589e5:	mov    BYTE PTR [rbx],0x0
   589e8:	mov    rdi,QWORD PTR [rsp+0x10]
   589ed:	call   a800 <acl_from_text@plt>
   589f2:	mov    rbp,rax
   589f5:	test   rbp,rbp
   589f8:	je     58b1e <_obstack_memory_used@@Base+0xbe9e>
   589fe:	mov    edx,DWORD PTR [rsp+0x1c]
   58a02:	mov    rsi,QWORD PTR [rsp+0x8]
   58a07:	mov    rcx,rbp
   58a0a:	mov    edi,DWORD PTR [rip+0x23610]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   58a10:	call   434e0 <argp_usage@@Base+0x160>
   58a15:	cmp    eax,0xffffffff
   58a18:	je     58a48 <_obstack_memory_used@@Base+0xbdc8>
   58a1a:	mov    rax,QWORD PTR [rsp+0x48]
   58a1f:	sub    rax,QWORD PTR fs:0x28
   58a28:	jne    58bef <_obstack_memory_used@@Base+0xbf6f>
   58a2e:	add    rsp,0x58
   58a32:	mov    rdi,rbp
   58a35:	pop    rbx
   58a36:	pop    rbp
   58a37:	pop    r12
   58a39:	pop    r13
   58a3b:	pop    r14
   58a3d:	pop    r15
   58a3f:	jmp    a990 <acl_free@plt>
   58a44:	nop    DWORD PTR [rax+0x0]
   58a48:	test   BYTE PTR [rip+0x2362f],0x20        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   58a4f:	je     58a1a <_obstack_memory_used@@Base+0xbd9a>
   58a51:	mov    rax,QWORD PTR [rip+0x26ab0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   58a58:	test   rax,rax
   58a5b:	je     58a5f <_obstack_memory_used@@Base+0xbddf>
   58a5d:	call   rax
   58a5f:	xor    edi,edi
   58a61:	mov    edx,0x5
   58a66:	lea    rsi,[rip+0x146db]        # 6d148 <_obstack_memory_used@@Base+0x204c8>
   58a6d:	call   a040 <dcgettext@plt>
   58a72:	mov    r12,rax
   58a75:	call   9e40 <__errno_location@plt>
   58a7a:	mov    rcx,QWORD PTR [rsp+0x8]
   58a7f:	mov    rdx,r12
   58a82:	xor    edi,edi
   58a84:	mov    esi,DWORD PTR [rax]
   58a86:	xor    eax,eax
   58a88:	call   a640 <error@plt>
   58a8d:	jmp    58a1a <_obstack_memory_used@@Base+0xbd9a>
   58a8f:	nop
   58a90:	test   r8b,r8b
   58a93:	jne    58b58 <_obstack_memory_used@@Base+0xbed8>
   58a99:	movdqa xmm0,XMMWORD PTR [rip+0x149bf]        # 6d460 <_obstack_memory_used@@Base+0x207e0>
   58aa1:	mov    eax,DWORD PTR [rdi+0x70]
   58aa4:	movaps XMMWORD PTR [rsp+0x20],xmm0
   58aa9:	movdqa xmm0,XMMWORD PTR [rip+0x149bf]        # 6d470 <_obstack_memory_used@@Base+0x207f0>
   58ab1:	movaps XMMWORD PTR [rsp+0x30],xmm0
   58ab6:	test   ah,0x1
   58ab9:	je     58ac0 <_obstack_memory_used@@Base+0xbe40>
   58abb:	mov    BYTE PTR [rsp+0x26],0x72
   58ac0:	test   al,0x80
   58ac2:	je     58ac9 <_obstack_memory_used@@Base+0xbe49>
   58ac4:	mov    BYTE PTR [rsp+0x27],0x77
   58ac9:	test   al,0x40
   58acb:	je     58ad2 <_obstack_memory_used@@Base+0xbe52>
   58acd:	mov    BYTE PTR [rsp+0x28],0x78
   58ad2:	test   al,0x20
   58ad4:	je     58adb <_obstack_memory_used@@Base+0xbe5b>
   58ad6:	mov    BYTE PTR [rsp+0x31],0x72
   58adb:	test   al,0x10
   58add:	je     58ae4 <_obstack_memory_used@@Base+0xbe64>
   58adf:	mov    BYTE PTR [rsp+0x32],0x77
   58ae4:	test   al,0x8
   58ae6:	je     58aed <_obstack_memory_used@@Base+0xbe6d>
   58ae8:	mov    BYTE PTR [rsp+0x33],0x78
   58aed:	test   al,0x4
   58aef:	je     58af6 <_obstack_memory_used@@Base+0xbe76>
   58af1:	mov    BYTE PTR [rsp+0x3c],0x72
   58af6:	test   al,0x2
   58af8:	je     58aff <_obstack_memory_used@@Base+0xbe7f>
   58afa:	mov    BYTE PTR [rsp+0x3d],0x77
   58aff:	test   al,0x1
   58b01:	je     58b08 <_obstack_memory_used@@Base+0xbe88>
   58b03:	mov    BYTE PTR [rsp+0x3e],0x78
   58b08:	lea    rdi,[rsp+0x20]
   58b0d:	call   a800 <acl_from_text@plt>
   58b12:	mov    rbp,rax
   58b15:	test   rbp,rbp
   58b18:	jne    589fe <_obstack_memory_used@@Base+0xbd7e>
   58b1e:	mov    rax,QWORD PTR [rsp+0x48]
   58b23:	sub    rax,QWORD PTR fs:0x28
   58b2c:	jne    58bef <_obstack_memory_used@@Base+0xbf6f>
   58b32:	mov    rsi,QWORD PTR [rsp+0x8]
   58b37:	add    rsp,0x58
   58b3b:	lea    rdi,[rip+0x143a1]        # 6cee3 <_obstack_memory_used@@Base+0x20263>
   58b42:	pop    rbx
   58b43:	pop    rbp
   58b44:	pop    r12
   58b46:	pop    r13
   58b48:	pop    r14
   58b4a:	pop    r15
   58b4c:	jmp    3c100 <__sprintf_chk@plt+0x31750>
   58b51:	nop    DWORD PTR [rax+0x0]
   58b58:	mov    rsi,QWORD PTR [rsp+0x8]
   58b5d:	mov    edi,DWORD PTR [rip+0x234bd]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   58b63:	call   437c0 <argp_usage@@Base+0x440>
   58b68:	test   eax,eax
   58b6a:	je     58bd0 <_obstack_memory_used@@Base+0xbf50>
   58b6c:	test   BYTE PTR [rip+0x2350b],0x20        # 7c07e <_obstack_memory_used@@Base+0x2f3fe>
   58b73:	je     58bd0 <_obstack_memory_used@@Base+0xbf50>
   58b75:	mov    rax,QWORD PTR [rip+0x2698c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   58b7c:	test   rax,rax
   58b7f:	je     58b83 <_obstack_memory_used@@Base+0xbf03>
   58b81:	call   rax
   58b83:	mov    edx,0x5
   58b88:	xor    edi,edi
   58b8a:	lea    rsi,[rip+0x1456f]        # 6d100 <_obstack_memory_used@@Base+0x20480>
   58b91:	call   a040 <dcgettext@plt>
   58b96:	mov    r12,rax
   58b99:	call   9e40 <__errno_location@plt>
   58b9e:	mov    rdx,QWORD PTR [rsp+0x48]
   58ba3:	sub    rdx,QWORD PTR fs:0x28
   58bac:	jne    58bef <_obstack_memory_used@@Base+0xbf6f>
   58bae:	mov    esi,DWORD PTR [rax]
   58bb0:	mov    rcx,QWORD PTR [rsp+0x8]
   58bb5:	add    rsp,0x58
   58bb9:	mov    rdx,r12
   58bbc:	pop    rbx
   58bbd:	xor    edi,edi
   58bbf:	pop    rbp
   58bc0:	xor    eax,eax
   58bc2:	pop    r12
   58bc4:	pop    r13
   58bc6:	pop    r14
   58bc8:	pop    r15
   58bca:	jmp    a640 <error@plt>
   58bcf:	nop
   58bd0:	mov    rax,QWORD PTR [rsp+0x48]
   58bd5:	sub    rax,QWORD PTR fs:0x28
   58bde:	jne    58bef <_obstack_memory_used@@Base+0xbf6f>
   58be0:	add    rsp,0x58
   58be4:	pop    rbx
   58be5:	pop    rbp
   58be6:	pop    r12
   58be8:	pop    r13
   58bea:	pop    r14
   58bec:	pop    r15
   58bee:	ret    
   58bef:	call   a0a0 <__stack_chk_fail@plt>
   58bf4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   58bff:	nop
   58c00:	endbr64 
   58c04:	push   rbp
   58c05:	push   rbx
   58c06:	sub    rsp,0xa8
   58c0d:	mov    rax,QWORD PTR fs:0x28
   58c16:	mov    QWORD PTR [rsp+0x98],rax
   58c1e:	xor    eax,eax
   58c20:	test   rsi,rsi
   58c23:	je     58cb0 <_obstack_memory_used@@Base+0xc030>
   58c29:	mov    eax,DWORD PTR [rsi+0x18]
   58c2c:	xor    r8d,r8d
   58c2f:	and    eax,0xf000
   58c34:	cmp    eax,0x4000
   58c39:	jne    58c60 <_obstack_memory_used@@Base+0xbfe0>
   58c3b:	mov    rax,QWORD PTR [rsp+0x98]
   58c43:	sub    rax,QWORD PTR fs:0x28
   58c4c:	jne    58d08 <_obstack_memory_used@@Base+0xc088>
   58c52:	add    rsp,0xa8
   58c59:	mov    eax,r8d
   58c5c:	pop    rbx
   58c5d:	pop    rbp
   58c5e:	ret    
   58c5f:	nop
   58c60:	xor    edx,edx
   58c62:	cmp    DWORD PTR [rip+0x2663f],0x4        # 7f2a8 <obstack_alloc_failed_handler@@Base+0x470>
   58c69:	mov    rcx,QWORD PTR [rsi+0x58]
   58c6d:	mov    rax,QWORD PTR [rip+0x267a4]        # 7f418 <obstack_alloc_failed_handler@@Base+0x5e0>
   58c74:	mov    rsi,QWORD PTR [rsi+0x60]
   58c78:	mov    rdi,QWORD PTR [rip+0x267a1]        # 7f420 <obstack_alloc_failed_handler@@Base+0x5e8>
   58c7f:	jne    58c93 <_obstack_memory_used@@Base+0xc013>
   58c81:	xor    edx,edx
   58c83:	cmp    rdi,rsi
   58c86:	setl   sil
   58c8a:	setg   dl
   58c8d:	movzx  esi,sil
   58c91:	sub    edx,esi
   58c93:	cmp    rcx,rax
   58c96:	setl   al
   58c99:	setg   cl
   58c9c:	movzx  eax,al
   58c9f:	movzx  ecx,cl
   58ca2:	sub    eax,ecx
   58ca4:	lea    eax,[rdx+rax*2]
   58ca7:	test   eax,eax
   58ca9:	setle  r8b
   58cad:	jmp    58c3b <_obstack_memory_used@@Base+0xbfbb>
   58caf:	nop
   58cb0:	mov    rbp,rdi
   58cb3:	mov    rbx,rsp
   58cb6:	mov    rsi,rdi
   58cb9:	mov    ecx,DWORD PTR [rip+0x262b5]        # 7ef74 <obstack_alloc_failed_handler@@Base+0x13c>
   58cbf:	mov    edi,DWORD PTR [rip+0x2335b]        # 7c020 <_obstack_memory_used@@Base+0x2f3a0>
   58cc5:	mov    rdx,rbx
   58cc8:	call   a960 <fstatat@plt>
   58ccd:	test   eax,eax
   58ccf:	je     58d00 <_obstack_memory_used@@Base+0xc080>
   58cd1:	call   9e40 <__errno_location@plt>
   58cd6:	xor    r8d,r8d
   58cd9:	cmp    DWORD PTR [rax],0x2
   58cdc:	je     58c3b <_obstack_memory_used@@Base+0xbfbb>
   58ce2:	mov    rsi,rbp
   58ce5:	lea    rdi,[rip+0xa357]        # 63043 <_obstack_memory_used@@Base+0x163c3>
   58cec:	call   3c100 <__sprintf_chk@plt+0x31750>
   58cf1:	mov    r8d,0x1
   58cf7:	jmp    58c3b <_obstack_memory_used@@Base+0xbfbb>
   58cfc:	nop    DWORD PTR [rax+0x0]
   58d00:	mov    rsi,rbx
   58d03:	jmp    58c29 <_obstack_memory_used@@Base+0xbfa9>
   58d08:	call   a0a0 <__stack_chk_fail@plt>
   58d0d:	nop    DWORD PTR [rax]
   58d10:	endbr64 
   58d14:	push   r15
   58d16:	push   r14
   58d18:	push   r13
   58d1a:	push   r12
   58d1c:	push   rbp
   58d1d:	push   rbx
   58d1e:	sub    rsp,0x28
   58d22:	mov    r14d,DWORD PTR [r9+0x4]
   58d26:	mov    QWORD PTR [rsp],rcx
   58d2a:	test   edi,edi
   58d2c:	jle    58f67 <_obstack_memory_used@@Base+0xc2e7>
   58d32:	mov    eax,DWORD PTR [r9]
   58d35:	mov    r12d,edi
   58d38:	mov    r13,rsi
   58d3b:	mov    r15,rdx
   58d3e:	mov    QWORD PTR [r9+0x10],0x0
   58d46:	mov    rbp,r9
   58d49:	test   eax,eax
   58d4b:	je     58f40 <_obstack_memory_used@@Base+0xc2c0>
   58d51:	mov    edi,DWORD PTR [r9+0x18]
   58d55:	test   edi,edi
   58d57:	jne    58e50 <_obstack_memory_used@@Base+0xc1d0>
   58d5d:	mov    DWORD PTR [rbp+0x30],eax
   58d60:	mov    DWORD PTR [rbp+0x2c],eax
   58d63:	mov    QWORD PTR [rbp+0x20],0x0
   58d6b:	movzx  eax,BYTE PTR [r15]
   58d6f:	cmp    al,0x2d
   58d71:	je     58f00 <_obstack_memory_used@@Base+0xc280>
   58d77:	cmp    al,0x2b
   58d79:	je     59150 <_obstack_memory_used@@Base+0xc4d0>
   58d7f:	lea    rdi,[rip+0xdfea]        # 66d70 <_obstack_memory_used@@Base+0x1a0f0>
   58d86:	mov    DWORD PTR [rsp+0x8],r8d
   58d8b:	call   9d40 <getenv@plt>
   58d90:	mov    r8d,DWORD PTR [rsp+0x8]
   58d95:	test   rax,rax
   58d98:	je     59180 <_obstack_memory_used@@Base+0xc500>
   58d9e:	mov    DWORD PTR [rbp+0x28],0x0
   58da5:	mov    rbx,QWORD PTR [rbp+0x20]
   58da9:	mov    DWORD PTR [rbp+0x18],0x1
   58db0:	movzx  eax,BYTE PTR [r15]
   58db4:	cmp    al,0x3a
   58db6:	mov    eax,0x0
   58dbb:	cmove  r14d,eax
   58dbf:	test   rbx,rbx
   58dc2:	je     58e88 <_obstack_memory_used@@Base+0xc208>
   58dc8:	cmp    BYTE PTR [rbx],0x0
   58dcb:	je     58e88 <_obstack_memory_used@@Base+0xc208>
   58dd1:	lea    rcx,[rbx+0x1]
   58dd5:	mov    rdi,r15
   58dd8:	mov    QWORD PTR [rbp+0x20],rcx
   58ddc:	movsx  r8d,BYTE PTR [rbx]
   58de0:	mov    QWORD PTR [rsp+0x18],rcx
   58de5:	mov    esi,r8d
   58de8:	mov    BYTE PTR [rsp+0x14],r8b
   58ded:	mov    DWORD PTR [rsp+0x8],r8d
   58df2:	call   a0f0 <strchr@plt>
   58df7:	cmp    BYTE PTR [rbx+0x1],0x0
   58dfb:	mov    r8d,DWORD PTR [rsp+0x8]
   58e00:	movzx  edx,BYTE PTR [rsp+0x14]
   58e05:	mov    rcx,QWORD PTR [rsp+0x18]
   58e0a:	jne    58e10 <_obstack_memory_used@@Base+0xc190>
   58e0c:	add    DWORD PTR [rbp+0x0],0x1
   58e10:	sub    edx,0x3a
   58e13:	cmp    dl,0x1
   58e16:	jbe    59168 <_obstack_memory_used@@Base+0xc4e8>
   58e1c:	test   rax,rax
   58e1f:	je     59168 <_obstack_memory_used@@Base+0xc4e8>
   58e25:	cmp    BYTE PTR [rax],0x57
   58e28:	movzx  edx,BYTE PTR [rax+0x1]
   58e2c:	je     59088 <_obstack_memory_used@@Base+0xc408>
   58e32:	cmp    dl,0x3a
   58e35:	je     590f0 <_obstack_memory_used@@Base+0xc470>
   58e3b:	add    rsp,0x28
   58e3f:	mov    eax,r8d
   58e42:	pop    rbx
   58e43:	pop    rbp
   58e44:	pop    r12
   58e46:	pop    r13
   58e48:	pop    r14
   58e4a:	pop    r15
   58e4c:	ret    
   58e4d:	nop    DWORD PTR [rax]
   58e50:	movzx  eax,BYTE PTR [rdx]
   58e53:	mov    rbx,QWORD PTR [r9+0x20]
   58e57:	lea    edx,[rax-0x2b]
   58e5a:	and    edx,0xfd
   58e60:	jne    58db4 <_obstack_memory_used@@Base+0xc134>
   58e66:	movzx  eax,BYTE PTR [r15+0x1]
   58e6b:	add    r15,0x1
   58e6f:	cmp    al,0x3a
   58e71:	mov    eax,0x0
   58e76:	cmove  r14d,eax
   58e7a:	test   rbx,rbx
   58e7d:	jne    58dc8 <_obstack_memory_used@@Base+0xc148>
   58e83:	nop    DWORD PTR [rax+rax*1+0x0]
   58e88:	mov    ebx,DWORD PTR [rbp+0x0]
   58e8b:	cmp    DWORD PTR [rbp+0x30],ebx
   58e8e:	jle    58e93 <_obstack_memory_used@@Base+0xc213>
   58e90:	mov    DWORD PTR [rbp+0x30],ebx
   58e93:	cmp    ebx,DWORD PTR [rbp+0x2c]
   58e96:	jge    58e9b <_obstack_memory_used@@Base+0xc21b>
   58e98:	mov    DWORD PTR [rbp+0x2c],ebx
   58e9b:	mov    r9d,DWORD PTR [rbp+0x28]
   58e9f:	cmp    r9d,0x1
   58ea3:	je     58f78 <_obstack_memory_used@@Base+0xc2f8>
   58ea9:	cmp    r12d,ebx
   58eac:	je     58f58 <_obstack_memory_used@@Base+0xc2d8>
   58eb2:	movsxd rax,ebx
   58eb5:	mov    rdx,QWORD PTR [r13+rax*8+0x0]
   58eba:	cmp    BYTE PTR [rdx],0x2d
   58ebd:	jne    58f18 <_obstack_memory_used@@Base+0xc298>
   58ebf:	cmp    BYTE PTR [rdx+0x1],0x2d
   58ec3:	jne    58f18 <_obstack_memory_used@@Base+0xc298>
   58ec5:	cmp    BYTE PTR [rdx+0x2],0x0
   58ec9:	jne    58f18 <_obstack_memory_used@@Base+0xc298>
   58ecb:	mov    edx,DWORD PTR [rbp+0x2c]
   58ece:	mov    ecx,DWORD PTR [rbp+0x30]
   58ed1:	lea    eax,[rbx+0x1]
   58ed4:	mov    DWORD PTR [rbp+0x0],eax
   58ed7:	cmp    edx,ecx
   58ed9:	je     591a0 <_obstack_memory_used@@Base+0xc520>
   58edf:	cmp    eax,ecx
   58ee1:	je     58ef1 <_obstack_memory_used@@Base+0xc271>
   58ee3:	mov    rsi,rbp
   58ee6:	mov    rdi,r13
   58ee9:	call   52d20 <_obstack_memory_used@@Base+0x60a0>
   58eee:	mov    edx,DWORD PTR [rbp+0x2c]
   58ef1:	mov    DWORD PTR [rbp+0x30],r12d
   58ef5:	mov    DWORD PTR [rbp+0x0],r12d
   58ef9:	jmp    58f5f <_obstack_memory_used@@Base+0xc2df>
   58efb:	nop    DWORD PTR [rax+rax*1+0x0]
   58f00:	mov    DWORD PTR [rbp+0x28],0x2
   58f07:	add    r15,0x1
   58f0b:	xor    ebx,ebx
   58f0d:	jmp    58da9 <_obstack_memory_used@@Base+0xc129>
   58f12:	nop    WORD PTR [rax+rax*1+0x0]
   58f18:	cmp    BYTE PTR [rdx],0x2d
   58f1b:	je     58ff0 <_obstack_memory_used@@Base+0xc370>
   58f21:	test   r9d,r9d
   58f24:	je     58f67 <_obstack_memory_used@@Base+0xc2e7>
   58f26:	lea    eax,[rbx+0x1]
   58f29:	mov    QWORD PTR [rbp+0x10],rdx
   58f2d:	mov    r8d,0x1
   58f33:	mov    DWORD PTR [rbp+0x0],eax
   58f36:	jmp    58e3b <_obstack_memory_used@@Base+0xc1bb>
   58f3b:	nop    DWORD PTR [rax+rax*1+0x0]
   58f40:	mov    DWORD PTR [r9],0x1
   58f47:	mov    eax,0x1
   58f4c:	jmp    58d5d <_obstack_memory_used@@Base+0xc0dd>
   58f51:	nop    DWORD PTR [rax+0x0]
   58f58:	mov    edx,DWORD PTR [rbp+0x2c]
   58f5b:	mov    r12d,DWORD PTR [rbp+0x30]
   58f5f:	cmp    r12d,edx
   58f62:	je     58f67 <_obstack_memory_used@@Base+0xc2e7>
   58f64:	mov    DWORD PTR [rbp+0x0],edx
   58f67:	mov    r8d,0xffffffff
   58f6d:	jmp    58e3b <_obstack_memory_used@@Base+0xc1bb>
   58f72:	nop    WORD PTR [rax+rax*1+0x0]
   58f78:	mov    eax,DWORD PTR [rbp+0x30]
   58f7b:	cmp    DWORD PTR [rbp+0x2c],eax
   58f7e:	je     59130 <_obstack_memory_used@@Base+0xc4b0>
   58f84:	cmp    ebx,eax
   58f86:	je     58fa7 <_obstack_memory_used@@Base+0xc327>
   58f88:	mov    rsi,rbp
   58f8b:	mov    rdi,r13
   58f8e:	mov    DWORD PTR [rsp+0x14],r8d
   58f93:	mov    DWORD PTR [rsp+0x8],r9d
   58f98:	call   52d20 <_obstack_memory_used@@Base+0x60a0>
   58f9d:	mov    r8d,DWORD PTR [rsp+0x14]
   58fa2:	mov    r9d,DWORD PTR [rsp+0x8]
   58fa7:	cmp    r12d,ebx
   58faa:	jle    59216 <_obstack_memory_used@@Base+0xc596>
   58fb0:	movsxd rax,ebx
   58fb3:	jmp    58fcb <_obstack_memory_used@@Base+0xc34b>
   58fb5:	nop    DWORD PTR [rax]
   58fb8:	lea    edx,[rsi+0x1]
   58fbb:	add    rax,0x1
   58fbf:	mov    DWORD PTR [rbp+0x0],edx
   58fc2:	cmp    r12d,eax
   58fc5:	jle    59140 <_obstack_memory_used@@Base+0xc4c0>
   58fcb:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   58fd0:	mov    esi,eax
   58fd2:	mov    edx,eax
   58fd4:	cmp    BYTE PTR [rcx],0x2d
   58fd7:	jne    58fb8 <_obstack_memory_used@@Base+0xc338>
   58fd9:	cmp    BYTE PTR [rcx+0x1],0x0
   58fdd:	je     58fb8 <_obstack_memory_used@@Base+0xc338>
   58fdf:	mov    ebx,DWORD PTR [rbp+0x0]
   58fe2:	mov    DWORD PTR [rbp+0x30],edx
   58fe5:	jmp    58ea9 <_obstack_memory_used@@Base+0xc229>
   58fea:	nop    WORD PTR [rax+rax*1+0x0]
   58ff0:	movzx  eax,BYTE PTR [rdx+0x1]
   58ff4:	test   al,al
   58ff6:	je     58f21 <_obstack_memory_used@@Base+0xc2a1>
   58ffc:	cmp    QWORD PTR [rsp],0x0
   59001:	je     59078 <_obstack_memory_used@@Base+0xc3f8>
   59003:	cmp    al,0x2d
   59005:	je     5923b <_obstack_memory_used@@Base+0xc5bb>
   5900b:	test   r8d,r8d
   5900e:	je     59078 <_obstack_memory_used@@Base+0xc3f8>
   59010:	cmp    BYTE PTR [rdx+0x2],0x0
   59014:	jne    59030 <_obstack_memory_used@@Base+0xc3b0>
   59016:	movsx  esi,al
   59019:	mov    rdi,r15
   5901c:	mov    QWORD PTR [rsp+0x8],rdx
   59021:	call   a0f0 <strchr@plt>
   59026:	mov    rdx,QWORD PTR [rsp+0x8]
   5902b:	test   rax,rax
   5902e:	jne    59078 <_obstack_memory_used@@Base+0xc3f8>
   59030:	add    rdx,0x1
   59034:	mov    r8d,0x1
   5903a:	mov    rsi,r13
   5903d:	mov    r9,rbp
   59040:	lea    rax,[rip+0xd6f7]        # 6673e <_obstack_memory_used@@Base+0x19abe>
   59047:	mov    QWORD PTR [rbp+0x20],rdx
   5904b:	mov    edi,r12d
   5904e:	mov    rdx,r15
   59051:	push   rax
   59052:	push   r14
   59054:	mov    rcx,QWORD PTR [rsp+0x10]
   59059:	call   54740 <_obstack_memory_used@@Base+0x7ac0>
   5905e:	pop    rcx
   5905f:	pop    rsi
   59060:	mov    r8d,eax
   59063:	cmp    eax,0xffffffff
   59066:	jne    58e3b <_obstack_memory_used@@Base+0xc1bb>
   5906c:	movsxd rax,DWORD PTR [rbp+0x0]
   59070:	mov    rdx,QWORD PTR [r13+rax*8+0x0]
   59075:	nop    DWORD PTR [rax]
   59078:	lea    rbx,[rdx+0x1]
   5907c:	jmp    58dd1 <_obstack_memory_used@@Base+0xc151>
   59081:	nop    DWORD PTR [rax+0x0]
   59088:	cmp    dl,0x3b
   5908b:	jne    58e32 <_obstack_memory_used@@Base+0xc1b2>
   59091:	cmp    QWORD PTR [rsp],0x0
   59096:	je     58e32 <_obstack_memory_used@@Base+0xc1b2>
   5909c:	cmp    BYTE PTR [rbx+0x1],0x0
   590a0:	jne    590b4 <_obstack_memory_used@@Base+0xc434>
   590a2:	movsxd rax,DWORD PTR [rbp+0x0]
   590a6:	cmp    r12d,eax
   590a9:	je     59255 <_obstack_memory_used@@Base+0xc5d5>
   590af:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   590b4:	lea    rax,[rip+0x13e52]        # 6cf0d <_obstack_memory_used@@Base+0x2028d>
   590bb:	mov    QWORD PTR [rbp+0x20],rcx
   590bf:	mov    r9,rbp
   590c2:	xor    r8d,r8d
   590c5:	mov    QWORD PTR [rbp+0x10],0x0
   590cd:	push   rax
   590ce:	push   r14
   590d0:	mov    rcx,QWORD PTR [rsp+0x10]
   590d5:	mov    rdx,r15
   590d8:	mov    rsi,r13
   590db:	mov    edi,r12d
   590de:	call   54740 <_obstack_memory_used@@Base+0x7ac0>
   590e3:	mov    r8d,eax
   590e6:	pop    rax
   590e7:	pop    rdx
   590e8:	jmp    58e3b <_obstack_memory_used@@Base+0xc1bb>
   590ed:	nop    DWORD PTR [rax]
   590f0:	cmp    BYTE PTR [rax+0x2],0x3a
   590f4:	movzx  edx,BYTE PTR [rbx+0x1]
   590f8:	je     591f8 <_obstack_memory_used@@Base+0xc578>
   590fe:	movsxd rax,DWORD PTR [rbp+0x0]
   59102:	test   dl,dl
   59104:	jne    59190 <_obstack_memory_used@@Base+0xc510>
   5910a:	cmp    r12d,eax
   5910d:	je     5921d <_obstack_memory_used@@Base+0xc59d>
   59113:	lea    edx,[rax+0x1]
   59116:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   5911b:	mov    DWORD PTR [rbp+0x0],edx
   5911e:	mov    QWORD PTR [rbp+0x10],rax
   59122:	mov    QWORD PTR [rbp+0x20],0x0
   5912a:	jmp    58e3b <_obstack_memory_used@@Base+0xc1bb>
   5912f:	nop
   59130:	cmp    ebx,eax
   59132:	je     58fa7 <_obstack_memory_used@@Base+0xc327>
   59138:	mov    DWORD PTR [rbp+0x2c],ebx
   5913b:	jmp    58fa7 <_obstack_memory_used@@Base+0xc327>
   59140:	mov    ebx,edx
   59142:	jmp    58fe2 <_obstack_memory_used@@Base+0xc362>
   59147:	nop    WORD PTR [rax+rax*1+0x0]
   59150:	mov    DWORD PTR [rbp+0x28],0x0
   59157:	add    r15,0x1
   5915b:	xor    ebx,ebx
   5915d:	jmp    58da9 <_obstack_memory_used@@Base+0xc129>
   59162:	nop    WORD PTR [rax+rax*1+0x0]
   59168:	test   r14d,r14d
   5916b:	jne    591b0 <_obstack_memory_used@@Base+0xc530>
   5916d:	mov    DWORD PTR [rbp+0x8],r8d
   59171:	mov    r8d,0x3f
   59177:	jmp    58e3b <_obstack_memory_used@@Base+0xc1bb>
   5917c:	nop    DWORD PTR [rax+0x0]
   59180:	mov    DWORD PTR [rbp+0x28],0x1
   59187:	mov    rbx,QWORD PTR [rbp+0x20]
   5918b:	jmp    58da9 <_obstack_memory_used@@Base+0xc129>
   59190:	add    eax,0x1
   59193:	mov    QWORD PTR [rbp+0x10],rcx
   59197:	mov    DWORD PTR [rbp+0x0],eax
   5919a:	jmp    59122 <_obstack_memory_used@@Base+0xc4a2>
   5919f:	nop
   591a0:	mov    DWORD PTR [rbp+0x2c],eax
   591a3:	mov    edx,eax
   591a5:	jmp    58ef1 <_obstack_memory_used@@Base+0xc271>
   591aa:	nop    WORD PTR [rax+rax*1+0x0]
   591b0:	mov    edx,0x5
   591b5:	xor    edi,edi
   591b7:	mov    DWORD PTR [rsp],r8d
   591bb:	mov    r12,QWORD PTR [r13+0x0]
   591bf:	lea    rsi,[rip+0x13d2b]        # 6cef1 <_obstack_memory_used@@Base+0x20271>
   591c6:	call   a040 <dcgettext@plt>
   591cb:	mov    r8d,DWORD PTR [rsp]
   591cf:	mov    rcx,r12
   591d2:	mov    esi,0x1
   591d7:	mov    rdx,rax
   591da:	mov    rax,QWORD PTR [rip+0x22e07]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   591e1:	mov    rdi,QWORD PTR [rax]
   591e4:	xor    eax,eax
   591e6:	call   a840 <__fprintf_chk@plt>
   591eb:	mov    r8d,DWORD PTR [rsp]
   591ef:	jmp    5916d <_obstack_memory_used@@Base+0xc4ed>
   591f4:	nop    DWORD PTR [rax+0x0]
   591f8:	test   dl,dl
   591fa:	je     59209 <_obstack_memory_used@@Base+0xc589>
   591fc:	add    DWORD PTR [rbp+0x0],0x1
   59200:	mov    QWORD PTR [rbp+0x10],rcx
   59204:	jmp    59122 <_obstack_memory_used@@Base+0xc4a2>
   59209:	mov    QWORD PTR [rbp+0x10],0x0
   59211:	jmp    59122 <_obstack_memory_used@@Base+0xc4a2>
   59216:	mov    edx,ebx
   59218:	jmp    58fe2 <_obstack_memory_used@@Base+0xc362>
   5921d:	test   r14d,r14d
   59220:	jne    59273 <_obstack_memory_used@@Base+0xc5f3>
   59222:	mov    DWORD PTR [rbp+0x8],r8d
   59226:	xor    r8d,r8d
   59229:	cmp    BYTE PTR [r15],0x3a
   5922d:	setne  r8b
   59231:	lea    r8d,[r8+r8*4+0x3a]
   59236:	jmp    59122 <_obstack_memory_used@@Base+0xc4a2>
   5923b:	add    rdx,0x2
   5923f:	lea    rax,[rip+0xd4f7]        # 6673d <_obstack_memory_used@@Base+0x19abd>
   59246:	mov    r9,rbp
   59249:	mov    QWORD PTR [rbp+0x20],rdx
   5924d:	push   rax
   5924e:	push   r14
   59250:	jmp    590d0 <_obstack_memory_used@@Base+0xc450>
   59255:	test   r14d,r14d
   59258:	jne    592b7 <_obstack_memory_used@@Base+0xc637>
   5925a:	mov    DWORD PTR [rbp+0x8],r8d
   5925e:	xor    r8d,r8d
   59261:	cmp    BYTE PTR [r15],0x3a
   59265:	setne  r8b
   59269:	lea    r8d,[r8+r8*4+0x3a]
   5926e:	jmp    58e3b <_obstack_memory_used@@Base+0xc1bb>
   59273:	mov    edx,0x5
   59278:	xor    edi,edi
   5927a:	mov    DWORD PTR [rsp],r8d
   5927e:	mov    r12,QWORD PTR [r13+0x0]
   59282:	lea    rsi,[rip+0x13ef7]        # 6d180 <_obstack_memory_used@@Base+0x20500>
   59289:	call   a040 <dcgettext@plt>
   5928e:	mov    r8d,DWORD PTR [rsp]
   59292:	mov    rcx,r12
   59295:	mov    esi,0x1
   5929a:	mov    rdx,rax
   5929d:	mov    rax,QWORD PTR [rip+0x22d44]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   592a4:	mov    rdi,QWORD PTR [rax]
   592a7:	xor    eax,eax
   592a9:	call   a840 <__fprintf_chk@plt>
   592ae:	mov    r8d,DWORD PTR [rsp]
   592b2:	jmp    59222 <_obstack_memory_used@@Base+0xc5a2>
   592b7:	mov    edx,0x5
   592bc:	xor    edi,edi
   592be:	mov    DWORD PTR [rsp],r8d
   592c2:	mov    r12,QWORD PTR [r13+0x0]
   592c6:	lea    rsi,[rip+0x13eb3]        # 6d180 <_obstack_memory_used@@Base+0x20500>
   592cd:	call   a040 <dcgettext@plt>
   592d2:	mov    r8d,DWORD PTR [rsp]
   592d6:	mov    rcx,r12
   592d9:	mov    esi,0x1
   592de:	mov    rdx,rax
   592e1:	mov    rax,QWORD PTR [rip+0x22d00]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   592e8:	mov    rdi,QWORD PTR [rax]
   592eb:	xor    eax,eax
   592ed:	call   a840 <__fprintf_chk@plt>
   592f2:	mov    r8d,DWORD PTR [rsp]
   592f6:	jmp    5925a <_obstack_memory_used@@Base+0xc5da>
   592fb:	nop    DWORD PTR [rax+rax*1+0x0]
   59300:	endbr64 
   59304:	push   r13
   59306:	push   r12
   59308:	push   rbp
   59309:	mov    rbp,rdx
   5930c:	movsxd rdx,ecx
   5930f:	push   rbx
   59310:	mov    rbx,rdi
   59313:	sub    rsp,0x28
   59317:	mov    rcx,QWORD PTR [rsi+0x48]
   5931b:	mov    rax,QWORD PTR fs:0x28
   59324:	mov    QWORD PTR [rsp+0x18],rax
   59329:	xor    eax,eax
   5932b:	cmp    DWORD PTR [rsi+0x90],0x1
   59332:	je     59374 <_obstack_memory_used@@Base+0xc6f4>
   59334:	mov    rdi,QWORD PTR [rsi+0x30]
   59338:	lea    rax,[rcx+0x1]
   5933c:	mov    r10,QWORD PTR [rsi+0x10]
   59340:	cmp    rdi,rax
   59343:	jg     5935d <_obstack_memory_used@@Base+0xc6dd>
   59345:	jmp    59374 <_obstack_memory_used@@Base+0xc6f4>
   59347:	nop    WORD PTR [rax+rax*1+0x0]
   59350:	add    rax,0x1
   59354:	cmp    rdi,rax
   59357:	je     594d0 <_obstack_memory_used@@Base+0xc850>
   5935d:	mov    r11d,eax
   59360:	sub    r11d,ecx
   59363:	cmp    DWORD PTR [r10+rax*4],0xffffffff
   59368:	je     59350 <_obstack_memory_used@@Base+0xc6d0>
   5936a:	cmp    r11d,0x1
   5936e:	jne    594d0 <_obstack_memory_used@@Base+0xc850>
   59374:	movzx  edi,BYTE PTR [rbp+0x8]
   59378:	add    rdx,rcx
   5937b:	mov    QWORD PTR [rsi+0x48],rdx
   5937f:	mov    eax,edi
   59381:	and    eax,0xfffffffb
   59384:	cmp    al,0x1a
   59386:	je     593d0 <_obstack_memory_used@@Base+0xc750>
   59388:	cmp    dil,0x1c
   5938c:	je     593d0 <_obstack_memory_used@@Base+0xc750>
   5938e:	cmp    dil,0x16
   59392:	jne    5939d <_obstack_memory_used@@Base+0xc71d>
   59394:	test   r9b,r9b
   59397:	je     59530 <_obstack_memory_used@@Base+0xc8b0>
   5939d:	movzx  eax,BYTE PTR [rbp+0x0]
   593a1:	mov    DWORD PTR [rbx],0x0
   593a7:	mov    BYTE PTR [rbx+0x8],al
   593aa:	xor    eax,eax
   593ac:	mov    rdx,QWORD PTR [rsp+0x18]
   593b1:	sub    rdx,QWORD PTR fs:0x28
   593ba:	jne    5956a <_obstack_memory_used@@Base+0xc8ea>
   593c0:	add    rsp,0x28
   593c4:	pop    rbx
   593c5:	pop    rbp
   593c6:	pop    r12
   593c8:	pop    r13
   593ca:	ret    
   593cb:	nop    DWORD PTR [rax+rax*1+0x0]
   593d0:	mov    r8,QWORD PTR [rsi+0x68]
   593d4:	movzx  r9d,BYTE PTR [rbp+0x0]
   593d9:	xor    eax,eax
   593db:	cmp    rdx,r8
   593de:	jl     5941c <_obstack_memory_used@@Base+0xc79c>
   593e0:	mov    eax,0x7
   593e5:	jmp    593ac <_obstack_memory_used@@Base+0xc72c>
   593e7:	nop    WORD PTR [rax+rax*1+0x0]
   593f0:	mov    rdx,QWORD PTR [rsi+0x8]
   593f4:	cmp    BYTE PTR [rdx+rcx*1],0x5d
   593f8:	je     594e8 <_obstack_memory_used@@Base+0xc868>
   593fe:	mov    rdx,QWORD PTR [rbx+0x8]
   59402:	mov    BYTE PTR [rdx+rax*1],dil
   59406:	add    rax,0x1
   5940a:	cmp    rax,0x20
   5940e:	je     593e0 <_obstack_memory_used@@Base+0xc760>
   59410:	movzx  edi,BYTE PTR [rbp+0x8]
   59414:	mov    rdx,QWORD PTR [rsi+0x48]
   59418:	mov    r8,QWORD PTR [rsi+0x68]
   5941c:	movsxd r10,eax
   5941f:	lea    rcx,[rdx+0x1]
   59423:	cmp    dil,0x1e
   59427:	je     59448 <_obstack_memory_used@@Base+0xc7c8>
   59429:	mov    rdi,QWORD PTR [rsi+0x8]
   5942d:	mov    QWORD PTR [rsi+0x48],rcx
   59431:	movzx  edi,BYTE PTR [rdi+rdx*1]
   59435:	cmp    r8,rcx
   59438:	jle    593e0 <_obstack_memory_used@@Base+0xc760>
   5943a:	cmp    r9b,dil
   5943d:	jne    593fe <_obstack_memory_used@@Base+0xc77e>
   5943f:	jmp    593f0 <_obstack_memory_used@@Base+0xc770>
   59441:	nop    DWORD PTR [rax+0x0]
   59448:	cmp    BYTE PTR [rsi+0x8b],0x0
   5944f:	je     59429 <_obstack_memory_used@@Base+0xc7a9>
   59451:	cmp    BYTE PTR [rsi+0x8c],0x0
   59458:	je     5951d <_obstack_memory_used@@Base+0xc89d>
   5945e:	mov    r11,QWORD PTR [rsi+0x30]
   59462:	cmp    r11,rdx
   59465:	je     59471 <_obstack_memory_used@@Base+0xc7f1>
   59467:	mov    rdi,QWORD PTR [rsi+0x10]
   5946b:	cmp    DWORD PTR [rdi+rdx*4],0xffffffff
   5946f:	je     59429 <_obstack_memory_used@@Base+0xc7a9>
   59471:	mov    rdi,QWORD PTR [rsi+0x18]
   59475:	mov    rdi,QWORD PTR [rdi+rdx*8]
   59479:	add    rdi,QWORD PTR [rsi]
   5947c:	add    rdi,QWORD PTR [rsi+0x28]
   59480:	movzx  edi,BYTE PTR [rdi]
   59483:	test   dil,0x80
   59487:	jne    59429 <_obstack_memory_used@@Base+0xc7a9>
   59489:	cmp    DWORD PTR [rsi+0x90],0x1
   59490:	je     594be <_obstack_memory_used@@Base+0xc83e>
   59492:	mov    r13,QWORD PTR [rsi+0x10]
   59496:	cmp    r11,rcx
   59499:	jg     594a9 <_obstack_memory_used@@Base+0xc829>
   5949b:	jmp    594be <_obstack_memory_used@@Base+0xc83e>
   5949d:	nop    DWORD PTR [rax]
   594a0:	add    rcx,0x1
   594a4:	cmp    rcx,r11
   594a7:	je     594be <_obstack_memory_used@@Base+0xc83e>
   594a9:	mov    r12d,ecx
   594ac:	sub    r12d,edx
   594af:	cmp    DWORD PTR [r13+rcx*4+0x0],0xffffffff
   594b5:	je     594a0 <_obstack_memory_used@@Base+0xc820>
   594b7:	movsxd r12,r12d
   594ba:	lea    rcx,[r12+rdx*1]
   594be:	mov    QWORD PTR [rsi+0x48],rcx
   594c2:	jmp    59435 <_obstack_memory_used@@Base+0xc7b5>
   594c7:	nop    WORD PTR [rax+rax*1+0x0]
   594d0:	mov    DWORD PTR [rbx],0x1
   594d6:	mov    edx,DWORD PTR [r10+rcx*4]
   594da:	mov    DWORD PTR [rbx+0x8],edx
   594dd:	mov    QWORD PTR [rsi+0x48],rax
   594e1:	xor    eax,eax
   594e3:	jmp    593ac <_obstack_memory_used@@Base+0xc72c>
   594e8:	mov    rax,QWORD PTR [rbx+0x8]
   594ec:	add    rcx,0x1
   594f0:	mov    QWORD PTR [rsi+0x48],rcx
   594f4:	mov    BYTE PTR [rax+r10*1],0x0
   594f9:	movzx  edx,BYTE PTR [rbp+0x8]
   594fd:	cmp    dl,0x1c
   59500:	je     5955d <_obstack_memory_used@@Base+0xc8dd>
   59502:	cmp    dl,0x1e
   59505:	je     59550 <_obstack_memory_used@@Base+0xc8d0>
   59507:	xor    eax,eax
   59509:	cmp    dl,0x1a
   5950c:	jne    593ac <_obstack_memory_used@@Base+0xc72c>
   59512:	mov    DWORD PTR [rbx],0x3
   59518:	jmp    593ac <_obstack_memory_used@@Base+0xc72c>
   5951d:	add    rdx,QWORD PTR [rsi]
   59520:	add    rdx,QWORD PTR [rsi+0x28]
   59524:	mov    QWORD PTR [rsi+0x48],rcx
   59528:	movzx  edi,BYTE PTR [rdx]
   5952b:	jmp    59435 <_obstack_memory_used@@Base+0xc7b5>
   59530:	mov    rdi,rsp
   59533:	mov    rdx,r8
   59536:	call   4ea70 <_obstack_memory_used@@Base+0x1df0>
   5953b:	cmp    BYTE PTR [rsp+0x8],0x15
   59540:	mov    eax,0xb
   59545:	je     5939d <_obstack_memory_used@@Base+0xc71d>
   5954b:	jmp    593ac <_obstack_memory_used@@Base+0xc72c>
   59550:	mov    DWORD PTR [rbx],0x4
   59556:	xor    eax,eax
   59558:	jmp    593ac <_obstack_memory_used@@Base+0xc72c>
   5955d:	mov    DWORD PTR [rbx],0x2
   59563:	xor    eax,eax
   59565:	jmp    593ac <_obstack_memory_used@@Base+0xc72c>
   5956a:	call   a0a0 <__stack_chk_fail@plt>
   5956f:	nop
   59570:	endbr64 
   59574:	push   r13
   59576:	xor    edx,edx
   59578:	mov    esi,0x80000
   5957d:	lea    rdi,[rip+0xe070]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   59584:	push   r12
   59586:	xor    eax,eax
   59588:	push   rbp
   59589:	push   rbx
   5958a:	sub    rsp,0x8
   5958e:	call   a690 <open@plt>
   59593:	mov    r12d,eax
   59596:	cmp    eax,0x2
   59599:	jbe    595b0 <_obstack_memory_used@@Base+0xc930>
   5959b:	add    rsp,0x8
   5959f:	mov    eax,r12d
   595a2:	pop    rbx
   595a3:	pop    rbp
   595a4:	pop    r12
   595a6:	pop    r13
   595a8:	ret    
   595a9:	nop    DWORD PTR [rax+0x0]
   595b0:	mov    edi,eax
   595b2:	mov    edx,0x3
   595b7:	xor    esi,esi
   595b9:	xor    eax,eax
   595bb:	call   4c5c0 <argp_usage@@Base+0x9240>
   595c0:	mov    ebp,eax
   595c2:	call   9e40 <__errno_location@plt>
   595c7:	mov    edi,r12d
   595ca:	mov    r12d,ebp
   595cd:	mov    r13d,DWORD PTR [rax]
   595d0:	mov    rbx,rax
   595d3:	call   a200 <close@plt>
   595d8:	mov    eax,r12d
   595db:	mov    DWORD PTR [rbx],r13d
   595de:	add    rsp,0x8
   595e2:	pop    rbx
   595e3:	pop    rbp
   595e4:	pop    r12
   595e6:	pop    r13
   595e8:	ret    
   595e9:	nop    DWORD PTR [rax+0x0]
   595f0:	endbr64 
   595f4:	push   r15
   595f6:	mov    r15,r8
   595f9:	push   r14
   595fb:	mov    r14,rcx
   595fe:	push   r13
   59600:	mov    r13,rsi
   59603:	push   r12
   59605:	push   rbp
   59606:	mov    ebp,edi
   59608:	push   rbx
   59609:	sub    rsp,0xff8
   59610:	mov    QWORD PTR [rsp+0x8],rdx
   59615:	mov    rax,QWORD PTR fs:0x28
   5961e:	mov    QWORD PTR [rsp+0xfe8],rax
   59626:	xor    eax,eax
   59628:	cmp    BYTE PTR [rsi],0x0
   5962b:	je     59798 <_obstack_memory_used@@Base+0xcb18>
   59631:	lea    r9,[rsp+0x20]
   59636:	mov    rdx,rsi
   59639:	mov    esi,edi
   5963b:	mov    rdi,r9
   5963e:	mov    QWORD PTR [rsp+0x10],r9
   59643:	call   433a0 <argp_usage@@Base+0x20>
   59648:	mov    rbx,rax
   5964b:	test   rax,rax
   5964e:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   59654:	mov    rsi,QWORD PTR [rsp+0x8]
   59659:	mov    rdx,r14
   5965c:	xor    r8d,r8d
   5965f:	mov    rcx,r15
   59662:	mov    rdi,rax
   59665:	call   a850 <setxattr@plt>
   5966a:	mov    r12d,eax
   5966d:	call   9e40 <__errno_location@plt>
   59672:	mov    r9,QWORD PTR [rsp+0x10]
   59677:	mov    edx,DWORD PTR [rax]
   59679:	cmp    rbx,r9
   5967c:	je     59698 <_obstack_memory_used@@Base+0xca18>
   5967e:	mov    rdi,rbx
   59681:	mov    DWORD PTR [rsp+0x1c],edx
   59685:	mov    QWORD PTR [rsp+0x10],rax
   5968a:	call   9ce0 <free@plt>
   5968f:	mov    edx,DWORD PTR [rsp+0x1c]
   59693:	mov    rax,QWORD PTR [rsp+0x10]
   59698:	cmp    r12d,0xffffffff
   5969c:	jne    596c0 <_obstack_memory_used@@Base+0xca40>
   5969e:	cmp    edx,0x14
   596a1:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   596a3:	cmp    edx,0x2
   596a6:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   596a8:	cmp    edx,0x1
   596ab:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   596ad:	cmp    edx,0xd
   596b0:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   596b2:	cmp    edx,0x26
   596b5:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   596b7:	cmp    edx,0x5f
   596ba:	je     596f0 <_obstack_memory_used@@Base+0xca70>
   596bc:	mov    DWORD PTR [rax],edx
   596be:	xchg   ax,ax
   596c0:	mov    rax,QWORD PTR [rsp+0xfe8]
   596c8:	sub    rax,QWORD PTR fs:0x28
   596d1:	jne    59873 <_obstack_memory_used@@Base+0xcbf3>
   596d7:	add    rsp,0xff8
   596de:	mov    eax,r12d
   596e1:	pop    rbx
   596e2:	pop    rbp
   596e3:	pop    r12
   596e5:	pop    r13
   596e7:	pop    r14
   596e9:	pop    r15
   596eb:	ret    
   596ec:	nop    DWORD PTR [rax+0x0]
   596f0:	mov    esi,0x80000
   596f5:	lea    rdi,[rip+0xdef8]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   596fc:	xor    eax,eax
   596fe:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   59703:	mov    QWORD PTR [rsp+0x10],0x0
   5970c:	mov    ebx,eax
   5970e:	test   eax,eax
   59710:	js     59850 <_obstack_memory_used@@Base+0xcbd0>
   59716:	test   ebp,ebp
   59718:	js     59722 <_obstack_memory_used@@Base+0xcaa2>
   5971a:	cmp    ebp,ebx
   5971c:	je     59828 <_obstack_memory_used@@Base+0xcba8>
   59722:	mov    edi,ebp
   59724:	call   a540 <fchdir@plt>
   59729:	mov    ebp,eax
   5972b:	test   eax,eax
   5972d:	jne    597c8 <_obstack_memory_used@@Base+0xcb48>
   59733:	mov    rsi,QWORD PTR [rsp+0x8]
   59738:	xor    r8d,r8d
   5973b:	mov    rcx,r15
   5973e:	mov    rdx,r14
   59741:	mov    rdi,r13
   59744:	call   a850 <setxattr@plt>
   59749:	mov    r12d,eax
   5974c:	cmp    eax,0xffffffff
   5974f:	jne    59758 <_obstack_memory_used@@Base+0xcad8>
   59751:	call   9e40 <__errno_location@plt>
   59756:	mov    ebp,DWORD PTR [rax]
   59758:	test   ebx,ebx
   5975a:	js     59800 <_obstack_memory_used@@Base+0xcb80>
   59760:	mov    edi,ebx
   59762:	call   a540 <fchdir@plt>
   59767:	test   eax,eax
   59769:	jne    59818 <_obstack_memory_used@@Base+0xcb98>
   5976f:	mov    edi,ebx
   59771:	call   a200 <close@plt>
   59776:	mov    rdi,QWORD PTR [rsp+0x10]
   5977b:	call   9ce0 <free@plt>
   59780:	test   ebp,ebp
   59782:	je     596c0 <_obstack_memory_used@@Base+0xca40>
   59788:	call   9e40 <__errno_location@plt>
   5978d:	mov    DWORD PTR [rax],ebp
   5978f:	jmp    596c0 <_obstack_memory_used@@Base+0xca40>
   59794:	nop    DWORD PTR [rax+0x0]
   59798:	mov    rsi,QWORD PTR [rsp+0x8]
   5979d:	mov    rdx,r14
   597a0:	lea    rdi,[rsp+0x20]
   597a5:	xor    r8d,r8d
   597a8:	mov    rcx,r15
   597ab:	mov    BYTE PTR [rsp+0x20],0x0
   597b0:	call   a850 <setxattr@plt>
   597b5:	mov    r12d,eax
   597b8:	call   9e40 <__errno_location@plt>
   597bd:	mov    edx,DWORD PTR [rax]
   597bf:	jmp    59698 <_obstack_memory_used@@Base+0xca18>
   597c4:	nop    DWORD PTR [rax+0x0]
   597c8:	call   9e40 <__errno_location@plt>
   597cd:	mov    r12d,DWORD PTR [rax]
   597d0:	mov    rbp,rax
   597d3:	test   ebx,ebx
   597d5:	js     597de <_obstack_memory_used@@Base+0xcb5e>
   597d7:	mov    edi,ebx
   597d9:	call   a200 <close@plt>
   597de:	mov    rdi,QWORD PTR [rsp+0x10]
   597e3:	call   9ce0 <free@plt>
   597e8:	mov    DWORD PTR [rbp+0x0],r12d
   597ec:	mov    r12d,0xffffffff
   597f2:	jmp    596c0 <_obstack_memory_used@@Base+0xca40>
   597f7:	nop    WORD PTR [rax+rax*1+0x0]
   59800:	mov    rdi,QWORD PTR [rsp+0x10]
   59805:	call   4bd60 <argp_usage@@Base+0x89e0>
   5980a:	test   eax,eax
   5980c:	je     59776 <_obstack_memory_used@@Base+0xcaf6>
   59812:	nop    WORD PTR [rax+rax*1+0x0]
   59818:	call   9e40 <__errno_location@plt>
   5981d:	mov    edi,DWORD PTR [rax]
   5981f:	call   495d0 <argp_usage@@Base+0x6250>
   59824:	nop    DWORD PTR [rax+0x0]
   59828:	mov    edi,ebx
   5982a:	mov    r12d,0xffffffff
   59830:	call   a200 <close@plt>
   59835:	mov    rdi,QWORD PTR [rsp+0x10]
   5983a:	call   9ce0 <free@plt>
   5983f:	call   9e40 <__errno_location@plt>
   59844:	mov    DWORD PTR [rax],0x9
   5984a:	jmp    596c0 <_obstack_memory_used@@Base+0xca40>
   5984f:	nop
   59850:	xor    esi,esi
   59852:	xor    edi,edi
   59854:	call   a1f0 <getcwd@plt>
   59859:	mov    QWORD PTR [rsp+0x10],rax
   5985e:	test   rax,rax
   59861:	jne    59716 <_obstack_memory_used@@Base+0xca96>
   59867:	call   9e40 <__errno_location@plt>
   5986c:	mov    edi,DWORD PTR [rax]
   5986e:	call   49590 <argp_usage@@Base+0x6210>
   59873:	call   a0a0 <__stack_chk_fail@plt>
   59878:	nop    DWORD PTR [rax+rax*1+0x0]
   59880:	endbr64 
   59884:	push   r15
   59886:	mov    r15,r8
   59889:	push   r14
   5988b:	mov    r14,rcx
   5988e:	push   r13
   59890:	mov    r13,rsi
   59893:	push   r12
   59895:	push   rbp
   59896:	mov    ebp,edi
   59898:	push   rbx
   59899:	sub    rsp,0xff8
   598a0:	mov    QWORD PTR [rsp+0x8],rdx
   598a5:	mov    rax,QWORD PTR fs:0x28
   598ae:	mov    QWORD PTR [rsp+0xfe8],rax
   598b6:	xor    eax,eax
   598b8:	cmp    BYTE PTR [rsi],0x0
   598bb:	je     59a28 <_obstack_memory_used@@Base+0xcda8>
   598c1:	lea    r9,[rsp+0x20]
   598c6:	mov    rdx,rsi
   598c9:	mov    esi,edi
   598cb:	mov    rdi,r9
   598ce:	mov    QWORD PTR [rsp+0x10],r9
   598d3:	call   433a0 <argp_usage@@Base+0x20>
   598d8:	mov    rbx,rax
   598db:	test   rax,rax
   598de:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   598e4:	mov    rsi,QWORD PTR [rsp+0x8]
   598e9:	mov    rdx,r14
   598ec:	xor    r8d,r8d
   598ef:	mov    rcx,r15
   598f2:	mov    rdi,rax
   598f5:	call   a500 <lsetxattr@plt>
   598fa:	mov    r12d,eax
   598fd:	call   9e40 <__errno_location@plt>
   59902:	mov    r9,QWORD PTR [rsp+0x10]
   59907:	mov    edx,DWORD PTR [rax]
   59909:	cmp    rbx,r9
   5990c:	je     59928 <_obstack_memory_used@@Base+0xcca8>
   5990e:	mov    rdi,rbx
   59911:	mov    DWORD PTR [rsp+0x1c],edx
   59915:	mov    QWORD PTR [rsp+0x10],rax
   5991a:	call   9ce0 <free@plt>
   5991f:	mov    edx,DWORD PTR [rsp+0x1c]
   59923:	mov    rax,QWORD PTR [rsp+0x10]
   59928:	cmp    r12d,0xffffffff
   5992c:	jne    59950 <_obstack_memory_used@@Base+0xccd0>
   5992e:	cmp    edx,0x14
   59931:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   59933:	cmp    edx,0x2
   59936:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   59938:	cmp    edx,0x1
   5993b:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   5993d:	cmp    edx,0xd
   59940:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   59942:	cmp    edx,0x26
   59945:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   59947:	cmp    edx,0x5f
   5994a:	je     59980 <_obstack_memory_used@@Base+0xcd00>
   5994c:	mov    DWORD PTR [rax],edx
   5994e:	xchg   ax,ax
   59950:	mov    rax,QWORD PTR [rsp+0xfe8]
   59958:	sub    rax,QWORD PTR fs:0x28
   59961:	jne    59b03 <_obstack_memory_used@@Base+0xce83>
   59967:	add    rsp,0xff8
   5996e:	mov    eax,r12d
   59971:	pop    rbx
   59972:	pop    rbp
   59973:	pop    r12
   59975:	pop    r13
   59977:	pop    r14
   59979:	pop    r15
   5997b:	ret    
   5997c:	nop    DWORD PTR [rax+0x0]
   59980:	mov    esi,0x80000
   59985:	lea    rdi,[rip+0xdc68]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   5998c:	xor    eax,eax
   5998e:	call   59570 <_obstack_memory_used@@Base+0xc8f0>
   59993:	mov    QWORD PTR [rsp+0x10],0x0
   5999c:	mov    ebx,eax
   5999e:	test   eax,eax
   599a0:	js     59ae0 <_obstack_memory_used@@Base+0xce60>
   599a6:	test   ebp,ebp
   599a8:	js     599b2 <_obstack_memory_used@@Base+0xcd32>
   599aa:	cmp    ebp,ebx
   599ac:	je     59ab8 <_obstack_memory_used@@Base+0xce38>
   599b2:	mov    edi,ebp
   599b4:	call   a540 <fchdir@plt>
   599b9:	mov    ebp,eax
   599bb:	test   eax,eax
   599bd:	jne    59a58 <_obstack_memory_used@@Base+0xcdd8>
   599c3:	mov    rsi,QWORD PTR [rsp+0x8]
   599c8:	xor    r8d,r8d
   599cb:	mov    rcx,r15
   599ce:	mov    rdx,r14
   599d1:	mov    rdi,r13
   599d4:	call   a500 <lsetxattr@plt>
   599d9:	mov    r12d,eax
   599dc:	cmp    eax,0xffffffff
   599df:	jne    599e8 <_obstack_memory_used@@Base+0xcd68>
   599e1:	call   9e40 <__errno_location@plt>
   599e6:	mov    ebp,DWORD PTR [rax]
   599e8:	test   ebx,ebx
   599ea:	js     59a90 <_obstack_memory_used@@Base+0xce10>
   599f0:	mov    edi,ebx
   599f2:	call   a540 <fchdir@plt>
   599f7:	test   eax,eax
   599f9:	jne    59aa8 <_obstack_memory_used@@Base+0xce28>
   599ff:	mov    edi,ebx
   59a01:	call   a200 <close@plt>
   59a06:	mov    rdi,QWORD PTR [rsp+0x10]
   59a0b:	call   9ce0 <free@plt>
   59a10:	test   ebp,ebp
   59a12:	je     59950 <_obstack_memory_used@@Base+0xccd0>
   59a18:	call   9e40 <__errno_location@plt>
   59a1d:	mov    DWORD PTR [rax],ebp
   59a1f:	jmp    59950 <_obstack_memory_used@@Base+0xccd0>
   59a24:	nop    DWORD PTR [rax+0x0]
   59a28:	mov    rsi,QWORD PTR [rsp+0x8]
   59a2d:	mov    rdx,r14
   59a30:	lea    rdi,[rsp+0x20]
   59a35:	xor    r8d,r8d
   59a38:	mov    rcx,r15
   59a3b:	mov    BYTE PTR [rsp+0x20],0x0
   59a40:	call   a500 <lsetxattr@plt>
   59a45:	mov    r12d,eax
   59a48:	call   9e40 <__errno_location@plt>
   59a4d:	mov    edx,DWORD PTR [rax]
   59a4f:	jmp    59928 <_obstack_memory_used@@Base+0xcca8>
   59a54:	nop    DWORD PTR [rax+0x0]
   59a58:	call   9e40 <__errno_location@plt>
   59a5d:	mov    r12d,DWORD PTR [rax]
   59a60:	mov    rbp,rax
   59a63:	test   ebx,ebx
   59a65:	js     59a6e <_obstack_memory_used@@Base+0xcdee>
   59a67:	mov    edi,ebx
   59a69:	call   a200 <close@plt>
   59a6e:	mov    rdi,QWORD PTR [rsp+0x10]
   59a73:	call   9ce0 <free@plt>
   59a78:	mov    DWORD PTR [rbp+0x0],r12d
   59a7c:	mov    r12d,0xffffffff
   59a82:	jmp    59950 <_obstack_memory_used@@Base+0xccd0>
   59a87:	nop    WORD PTR [rax+rax*1+0x0]
   59a90:	mov    rdi,QWORD PTR [rsp+0x10]
   59a95:	call   4bd60 <argp_usage@@Base+0x89e0>
   59a9a:	test   eax,eax
   59a9c:	je     59a06 <_obstack_memory_used@@Base+0xcd86>
   59aa2:	nop    WORD PTR [rax+rax*1+0x0]
   59aa8:	call   9e40 <__errno_location@plt>
   59aad:	mov    edi,DWORD PTR [rax]
   59aaf:	call   495d0 <argp_usage@@Base+0x6250>
   59ab4:	nop    DWORD PTR [rax+0x0]
   59ab8:	mov    edi,ebx
   59aba:	mov    r12d,0xffffffff
   59ac0:	call   a200 <close@plt>
   59ac5:	mov    rdi,QWORD PTR [rsp+0x10]
   59aca:	call   9ce0 <free@plt>
   59acf:	call   9e40 <__errno_location@plt>
   59ad4:	mov    DWORD PTR [rax],0x9
   59ada:	jmp    59950 <_obstack_memory_used@@Base+0xccd0>
   59adf:	nop
   59ae0:	xor    esi,esi
   59ae2:	xor    edi,edi
   59ae4:	call   a1f0 <getcwd@plt>
   59ae9:	mov    QWORD PTR [rsp+0x10],rax
   59aee:	test   rax,rax
   59af1:	jne    599a6 <_obstack_memory_used@@Base+0xcd26>
   59af7:	call   9e40 <__errno_location@plt>
   59afc:	mov    edi,DWORD PTR [rax]
   59afe:	call   49590 <argp_usage@@Base+0x6210>
   59b03:	call   a0a0 <__stack_chk_fail@plt>
   59b08:	nop    DWORD PTR [rax+rax*1+0x0]
   59b10:	endbr64 
   59b14:	movzx  eax,BYTE PTR [rip+0x2598d]        # 7f4a8 <obstack_alloc_failed_handler@@Base+0x670>
   59b1b:	test   al,al
   59b1d:	je     59b29 <_obstack_memory_used@@Base+0xcea9>
   59b1f:	cmp    QWORD PTR [rip+0x25989],0x0        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   59b27:	je     59b30 <_obstack_memory_used@@Base+0xceb0>
   59b29:	ret    
   59b2a:	nop    WORD PTR [rax+rax*1+0x0]
   59b30:	push   r15
   59b32:	push   r14
   59b34:	push   r13
   59b36:	push   r12
   59b38:	push   rbp
   59b39:	push   rbx
   59b3a:	sub    rsp,0x18
   59b3e:	mov    rbx,QWORD PTR [rip+0x25863]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   59b45:	mov    rdi,rbx
   59b48:	mov    r14,rbx
   59b4b:	call   a4a0 <malloc@plt>
   59b50:	mov    QWORD PTR [rsp+0x8],rax
   59b55:	test   rax,rax
   59b58:	je     59d05 <_obstack_memory_used@@Base+0xd085>
   59b5e:	mov    rax,QWORD PTR [rip+0x25563]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   59b65:	mov    rdx,QWORD PTR [rip+0x259d4]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59b6c:	cmp    rax,rdx
   59b6f:	jb     59b89 <_obstack_memory_used@@Base+0xcf09>
   59b71:	sub    rax,rdx
   59b74:	and    rax,0xfffffffffffffe00
   59b7a:	lea    rdx,[rdx+rax*1+0x200]
   59b82:	mov    QWORD PTR [rip+0x259b7],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59b89:	cmp    QWORD PTR [rip+0x259f0],rdx        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59b90:	jb     aae5 <__sprintf_chk@plt+0x135>
   59b96:	cmp    BYTE PTR [rip+0x25a13],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   59b9d:	jne    59cee <_obstack_memory_used@@Base+0xd06e>
   59ba3:	mov    r15,QWORD PTR [rip+0x259d6]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59baa:	mov    rbp,QWORD PTR [rsp+0x8]
   59baf:	test   rbx,rbx
   59bb2:	jne    59c25 <_obstack_memory_used@@Base+0xcfa5>
   59bb4:	jmp    59cc0 <_obstack_memory_used@@Base+0xd040>
   59bb9:	nop    DWORD PTR [rax+0x0]
   59bc0:	test   r12,r12
   59bc3:	je     59c70 <_obstack_memory_used@@Base+0xcff0>
   59bc9:	mov    rbx,r12
   59bcc:	mov    r15,QWORD PTR [rip+0x259ad]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59bd3:	mov    rdi,rbp
   59bd6:	mov    rsi,r12
   59bd9:	mov    r13,r15
   59bdc:	sub    r13,r12
   59bdf:	cmp    r13,r14
   59be2:	cmova  r13,r14
   59be6:	mov    rdx,r13
   59be9:	add    rbp,r13
   59bec:	call   a420 <memcpy@plt>
   59bf1:	lea    rax,[r12+r13*1-0x1]
   59bf6:	cmp    rax,rbx
   59bf9:	jb     59c13 <_obstack_memory_used@@Base+0xcf93>
   59bfb:	sub    rax,rbx
   59bfe:	and    rax,0xfffffffffffffe00
   59c04:	lea    rbx,[rbx+rax*1+0x200]
   59c0c:	mov    QWORD PTR [rip+0x2592d],rbx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59c13:	cmp    rbx,r15
   59c16:	ja     aae5 <__sprintf_chk@plt+0x135>
   59c1c:	sub    r14,r13
   59c1f:	je     59cc0 <_obstack_memory_used@@Base+0xd040>
   59c25:	mov    rax,QWORD PTR [rip+0x2597c]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   59c2c:	test   rax,rax
   59c2f:	je     59c35 <_obstack_memory_used@@Base+0xcfb5>
   59c31:	mov    QWORD PTR [rax+0x20],r14
   59c35:	mov    r12,QWORD PTR [rip+0x25904]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59c3c:	cmp    r12,r15
   59c3f:	jne    59bc0 <_obstack_memory_used@@Base+0xcf40>
   59c45:	cmp    BYTE PTR [rip+0x258e8],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   59c4c:	jne    59c70 <_obstack_memory_used@@Base+0xcff0>
   59c4e:	call   f170 <__sprintf_chk@plt+0x47c0>
   59c53:	mov    r12,QWORD PTR [rip+0x258e6]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59c5a:	cmp    r12,QWORD PTR [rip+0x2591f]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59c61:	jne    59bc0 <_obstack_memory_used@@Base+0xcf40>
   59c67:	mov    BYTE PTR [rip+0x258c6],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   59c6e:	xchg   ax,ax
   59c70:	mov    rax,QWORD PTR [rip+0x25891]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   59c77:	test   rax,rax
   59c7a:	je     59c7e <_obstack_memory_used@@Base+0xcffe>
   59c7c:	call   rax
   59c7e:	mov    edx,0x5
   59c83:	lea    rsi,[rip+0x9736]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   59c8a:	xor    edi,edi
   59c8c:	xor    r12d,r12d
   59c8f:	call   a040 <dcgettext@plt>
   59c94:	xor    esi,esi
   59c96:	mov    edi,0x1
   59c9b:	mov    rdx,rax
   59c9e:	xor    eax,eax
   59ca0:	call   a640 <error@plt>
   59ca5:	mov    rbx,QWORD PTR [rip+0x25894]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59cac:	mov    DWORD PTR [rip+0x2540e],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   59cb6:	jmp    59bcc <_obstack_memory_used@@Base+0xcf4c>
   59cbb:	nop    DWORD PTR [rax+rax*1+0x0]
   59cc0:	call   db80 <__sprintf_chk@plt+0x31d0>
   59cc5:	mov    rax,QWORD PTR [rsp+0x8]
   59cca:	mov    BYTE PTR [rip+0x257d8],0x1        # 7f4a9 <obstack_alloc_failed_handler@@Base+0x671>
   59cd1:	mov    QWORD PTR [rip+0x257d8],rax        # 7f4b0 <obstack_alloc_failed_handler@@Base+0x678>
   59cd8:	movzx  eax,BYTE PTR [rip+0x257c9]        # 7f4a8 <obstack_alloc_failed_handler@@Base+0x670>
   59cdf:	add    rsp,0x18
   59ce3:	pop    rbx
   59ce4:	pop    rbp
   59ce5:	pop    r12
   59ce7:	pop    r13
   59ce9:	pop    r14
   59ceb:	pop    r15
   59ced:	ret    
   59cee:	mov    rdi,QWORD PTR [rip+0x2562b]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   59cf5:	mov    rdx,rbx
   59cf8:	mov    rsi,rbx
   59cfb:	call   fa40 <__sprintf_chk@plt+0x5090>
   59d00:	jmp    59ba3 <_obstack_memory_used@@Base+0xcf23>
   59d05:	call   19130 <__sprintf_chk@plt+0xe780>
   59d0a:	nop    WORD PTR [rax+rax*1+0x0]
   59d10:	endbr64 
   59d14:	cmp    BYTE PTR [rip+0x25895],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   59d1b:	push   r14
   59d1d:	mov    r14,rdi
   59d20:	push   r13
   59d22:	mov    rdi,QWORD PTR [rip+0x255f7]        # 7f320 <obstack_alloc_failed_handler@@Base+0x4e8>
   59d29:	push   r12
   59d2b:	mov    r13,QWORD PTR [rip+0x25676]        # 7f3a8 <obstack_alloc_failed_handler@@Base+0x570>
   59d32:	push   rbp
   59d33:	push   rbx
   59d34:	jne    59e62 <_obstack_memory_used@@Base+0xd1e2>
   59d3a:	test   r13,r13
   59d3d:	je     59e59 <_obstack_memory_used@@Base+0xd1d9>
   59d43:	mov    rax,QWORD PTR [rip+0x25836]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59d4a:	lea    rbp,[rip+0xfffffffffffb31af]        # cf00 <__sprintf_chk@plt+0x2550>
   59d51:	jmp    59dde <_obstack_memory_used@@Base+0xd15e>
   59d56:	cs nop WORD PTR [rax+rax*1+0x0]
   59d60:	test   r12,r12
   59d63:	je     59e20 <_obstack_memory_used@@Base+0xd1a0>
   59d69:	mov    rbx,QWORD PTR [rip+0x25810]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59d70:	mov    rsi,r12
   59d73:	sub    rbx,r12
   59d76:	cmp    rbx,r13
   59d79:	cmova  rbx,r13
   59d7d:	mov    rdi,rbx
   59d80:	call   r14
   59d83:	mov    rdx,QWORD PTR [rip+0x257b6]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59d8a:	test   eax,eax
   59d8c:	lea    rax,[r12+rbx*1-0x1]
   59d91:	cmove  r14,rbp
   59d95:	cmp    rax,rdx
   59d98:	jb     59db2 <_obstack_memory_used@@Base+0xd132>
   59d9a:	sub    rax,rdx
   59d9d:	and    rax,0xfffffffffffffe00
   59da3:	lea    rdx,[rdx+rax*1+0x200]
   59dab:	mov    QWORD PTR [rip+0x2578e],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59db2:	mov    rax,QWORD PTR [rip+0x257c7]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59db9:	cmp    rax,rdx
   59dbc:	jb     aaea <__sprintf_chk@plt+0x13a>
   59dc2:	mov    rdx,QWORD PTR [rip+0x257df]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   59dc9:	sub    r13,rbx
   59dcc:	test   rdx,rdx
   59dcf:	je     59dd5 <_obstack_memory_used@@Base+0xd155>
   59dd1:	mov    QWORD PTR [rdx+0x20],r13
   59dd5:	test   r13,r13
   59dd8:	je     59e76 <_obstack_memory_used@@Base+0xd1f6>
   59dde:	mov    r12,QWORD PTR [rip+0x2575b]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59de5:	cmp    rax,r12
   59de8:	jne    59d60 <_obstack_memory_used@@Base+0xd0e0>
   59dee:	cmp    BYTE PTR [rip+0x2573f],0x0        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   59df5:	jne    59e20 <_obstack_memory_used@@Base+0xd1a0>
   59df7:	call   f170 <__sprintf_chk@plt+0x47c0>
   59dfc:	mov    r12,QWORD PTR [rip+0x2573d]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   59e03:	cmp    r12,QWORD PTR [rip+0x25776]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   59e0a:	jne    59d60 <_obstack_memory_used@@Base+0xd0e0>
   59e10:	mov    BYTE PTR [rip+0x2571d],0x1        # 7f534 <obstack_alloc_failed_handler@@Base+0x6fc>
   59e17:	nop    WORD PTR [rax+rax*1+0x0]
   59e20:	mov    rax,QWORD PTR [rip+0x256e1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   59e27:	test   rax,rax
   59e2a:	je     59e2e <_obstack_memory_used@@Base+0xd1ae>
   59e2c:	call   rax
   59e2e:	mov    edx,0x5
   59e33:	lea    rsi,[rip+0x9586]        # 633c0 <_obstack_memory_used@@Base+0x16740>
   59e3a:	xor    edi,edi
   59e3c:	call   a040 <dcgettext@plt>
   59e41:	xor    esi,esi
   59e43:	xor    edi,edi
   59e45:	mov    rdx,rax
   59e48:	xor    eax,eax
   59e4a:	call   a640 <error@plt>
   59e4f:	mov    DWORD PTR [rip+0x2526b],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   59e59:	pop    rbx
   59e5a:	pop    rbp
   59e5b:	pop    r12
   59e5d:	pop    r13
   59e5f:	pop    r14
   59e61:	ret    
   59e62:	mov    rdx,r13
   59e65:	mov    rsi,r13
   59e68:	call   fa40 <__sprintf_chk@plt+0x5090>
   59e6d:	test   r13,r13
   59e70:	jne    59d43 <_obstack_memory_used@@Base+0xd0c3>
   59e76:	cmp    BYTE PTR [rip+0x25733],0x0        # 7f5b0 <obstack_alloc_failed_handler@@Base+0x778>
   59e7d:	je     59e59 <_obstack_memory_used@@Base+0xd1d9>
   59e7f:	mov    rbx,QWORD PTR [rip+0x25722]        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   59e86:	test   rbx,rbx
   59e89:	je     59eac <_obstack_memory_used@@Base+0xd22c>
   59e8b:	nop    DWORD PTR [rax+rax*1+0x0]
   59e90:	mov    rbp,rbx
   59e93:	mov    rbx,QWORD PTR [rbx]
   59e96:	mov    rdi,QWORD PTR [rbp+0x10]
   59e9a:	call   9ce0 <free@plt>
   59e9f:	mov    rdi,rbp
   59ea2:	call   9ce0 <free@plt>
   59ea7:	test   rbx,rbx
   59eaa:	jne    59e90 <_obstack_memory_used@@Base+0xd210>
   59eac:	mov    QWORD PTR [rip+0x256f1],0x0        # 7f5a8 <obstack_alloc_failed_handler@@Base+0x770>
   59eb7:	pop    rbx
   59eb8:	mov    QWORD PTR [rip+0x256dd],0x0        # 7f5a0 <obstack_alloc_failed_handler@@Base+0x768>
   59ec3:	pop    rbp
   59ec4:	pop    r12
   59ec6:	pop    r13
   59ec8:	pop    r14
   59eca:	ret    
   59ecb:	nop    DWORD PTR [rax+rax*1+0x0]
   59ed0:	endbr64 
   59ed4:	push   r13
   59ed6:	xor    ecx,ecx
   59ed8:	mov    edx,0x90900
   59edd:	xor    eax,eax
   59edf:	push   r12
   59ee1:	push   rbp
   59ee2:	push   rbx
   59ee3:	sub    rsp,0x8
   59ee7:	call   a080 <openat@plt>
   59eec:	mov    r12d,eax
   59eef:	cmp    eax,0x2
   59ef2:	jbe    59f08 <_obstack_memory_used@@Base+0xd288>
   59ef4:	add    rsp,0x8
   59ef8:	mov    eax,r12d
   59efb:	pop    rbx
   59efc:	pop    rbp
   59efd:	pop    r12
   59eff:	pop    r13
   59f01:	ret    
   59f02:	nop    WORD PTR [rax+rax*1+0x0]
   59f08:	mov    edi,eax
   59f0a:	mov    edx,0x3
   59f0f:	xor    esi,esi
   59f11:	xor    eax,eax
   59f13:	call   4c5c0 <argp_usage@@Base+0x9240>
   59f18:	mov    ebp,eax
   59f1a:	call   9e40 <__errno_location@plt>
   59f1f:	mov    edi,r12d
   59f22:	mov    r12d,ebp
   59f25:	mov    r13d,DWORD PTR [rax]
   59f28:	mov    rbx,rax
   59f2b:	call   a200 <close@plt>
   59f30:	mov    eax,r12d
   59f33:	mov    DWORD PTR [rbx],r13d
   59f36:	add    rsp,0x8
   59f3a:	pop    rbx
   59f3b:	pop    rbp
   59f3c:	pop    r12
   59f3e:	pop    r13
   59f40:	ret    
   59f41:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   59f4c:	nop    DWORD PTR [rax+0x0]
   59f50:	endbr64 
   59f54:	push   r15
   59f56:	push   r14
   59f58:	mov    r14,rdi
   59f5b:	push   r13
   59f5d:	push   r12
   59f5f:	push   rbp
   59f60:	push   rbx
   59f61:	lea    rbx,[rip+0x22ad8]        # 7ca40 <_obstack_memory_used@@Base+0x2fdc0>
   59f68:	sub    rsp,0xa8
   59f6f:	mov    QWORD PTR [rsp+0x18],rdx
   59f74:	lea    rdx,[rip+0x22ae9]        # 7ca64 <_obstack_memory_used@@Base+0x2fde4>
   59f7b:	mov    DWORD PTR [rsp+0x14],esi
   59f7f:	mov    rax,QWORD PTR fs:0x28
   59f88:	mov    QWORD PTR [rsp+0x98],rax
   59f90:	xor    eax,eax
   59f92:	cmp    DWORD PTR [rbx+rax*8],0xffffffff
   59f96:	mov    ebp,eax
   59f98:	je     59fc0 <_obstack_memory_used@@Base+0xd340>
   59f9a:	add    rax,0x1
   59f9e:	cmp    rax,0x4
   59fa2:	jne    59f92 <_obstack_memory_used@@Base+0xd312>
   59fa4:	call   9e40 <__errno_location@plt>
   59fa9:	mov    r12d,0xffffffff
   59faf:	mov    DWORD PTR [rax],0x18
   59fb5:	jmp    5a29b <_obstack_memory_used@@Base+0xd61b>
   59fba:	nop    WORD PTR [rax+rax*1+0x0]
   59fc0:	mov    r12d,DWORD PTR [rdx+rax*8]
   59fc4:	cmp    r12d,0xffffffff
   59fc8:	jne    59f9a <_obstack_memory_used@@Base+0xd31a>
   59fca:	mov    rdi,r14
   59fcd:	call   a060 <strlen@plt>
   59fd2:	lea    r15,[rax+0x1]
   59fd6:	mov    rdi,r15
   59fd9:	call   a4a0 <malloc@plt>
   59fde:	mov    rdi,rax
   59fe1:	test   rax,rax
   59fe4:	je     5a736 <_obstack_memory_used@@Base+0xdab6>
   59fea:	mov    rdx,r15
   59fed:	mov    rsi,r14
   59ff0:	call   a420 <memcpy@plt>
   59ff5:	mov    r15,rax
   59ff8:	movzx  eax,BYTE PTR [rax]
   59ffb:	test   al,al
   59ffd:	je     5a5f8 <_obstack_memory_used@@Base+0xd978>
   5a003:	mov    QWORD PTR [rsp+0x8],r15
   5a008:	lea    rdx,[r15+0x1]
   5a00c:	xor    r14d,r14d
   5a00f:	xor    r13d,r13d
   5a012:	cmp    al,0x3a
   5a014:	je     5a270 <_obstack_memory_used@@Base+0xd5f0>
   5a01a:	cmp    al,0x40
   5a01c:	je     5a2d0 <_obstack_memory_used@@Base+0xd650>
   5a022:	cmp    al,0xa
   5a024:	je     5a288 <_obstack_memory_used@@Base+0xd608>
   5a02a:	movzx  eax,BYTE PTR [rdx]
   5a02d:	add    rdx,0x1
   5a031:	test   al,al
   5a033:	jne    5a012 <_obstack_memory_used@@Base+0xd392>
   5a035:	mov    rdi,QWORD PTR [rsp+0x8]
   5a03a:	call   a370 <gethostbyname@plt>
   5a03f:	test   rax,rax
   5a042:	je     5a687 <_obstack_memory_used@@Base+0xda07>
   5a048:	test   r13,r13
   5a04b:	je     5a058 <_obstack_memory_used@@Base+0xd3d8>
   5a04d:	xor    eax,eax
   5a04f:	cmp    BYTE PTR [r13+0x0],0x0
   5a054:	cmove  r13,rax
   5a058:	mov    r11,QWORD PTR [rsp+0x18]
   5a05d:	test   r11,r11
   5a060:	je     5a5d8 <_obstack_memory_used@@Base+0xd958>
   5a066:	movzx  eax,BYTE PTR [r11]
   5a06a:	cmp    al,0x2f
   5a06c:	jne    5a6b5 <_obstack_memory_used@@Base+0xda35>
   5a072:	nop    WORD PTR [rax+rax*1+0x0]
   5a078:	movzx  eax,BYTE PTR [r11+0x1]
   5a07d:	add    r11,0x1
   5a081:	cmp    al,0x2f
   5a083:	je     5a078 <_obstack_memory_used@@Base+0xd3f8>
   5a085:	test   al,al
   5a087:	je     5a0ba <_obstack_memory_used@@Base+0xd43a>
   5a089:	mov    rdx,r11
   5a08c:	xor    ecx,ecx
   5a08e:	jmp    5a0a5 <_obstack_memory_used@@Base+0xd425>
   5a090:	test   cl,cl
   5a092:	je     5a099 <_obstack_memory_used@@Base+0xd419>
   5a094:	mov    r11,rdx
   5a097:	xor    ecx,ecx
   5a099:	movzx  eax,BYTE PTR [rdx+0x1]
   5a09d:	add    rdx,0x1
   5a0a1:	test   al,al
   5a0a3:	je     5a0ba <_obstack_memory_used@@Base+0xd43a>
   5a0a5:	cmp    al,0x2f
   5a0a7:	jne    5a090 <_obstack_memory_used@@Base+0xd410>
   5a0a9:	movzx  eax,BYTE PTR [rdx+0x1]
   5a0ad:	add    rdx,0x1
   5a0b1:	mov    ecx,0x1
   5a0b6:	test   al,al
   5a0b8:	jne    5a0a5 <_obstack_memory_used@@Base+0xd425>
   5a0ba:	movsxd rax,ebp
   5a0bd:	mov    QWORD PTR [rsp+0x30],r11
   5a0c2:	lea    rdx,[rax*8+0x0]
   5a0ca:	mov    QWORD PTR [rsp+0x20],rax
   5a0cf:	lea    rax,[rip+0x2298a]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   5a0d6:	lea    rdi,[rax+rdx*1]
   5a0da:	mov    QWORD PTR [rsp+0x28],rdx
   5a0df:	call   a210 <pipe@plt>
   5a0e4:	mov    rdx,QWORD PTR [rsp+0x28]
   5a0e9:	mov    r11,QWORD PTR [rsp+0x30]
   5a0ee:	cmp    eax,0xffffffff
   5a0f1:	je     5a729 <_obstack_memory_used@@Base+0xdaa9>
   5a0f7:	lea    rdi,[rbx+rdx*1]
   5a0fb:	mov    QWORD PTR [rsp+0x28],r11
   5a100:	call   a210 <pipe@plt>
   5a105:	cmp    eax,0xffffffff
   5a108:	je     5a729 <_obstack_memory_used@@Base+0xdaa9>
   5a10e:	call   a950 <fork@plt>
   5a113:	mov    r11,QWORD PTR [rsp+0x28]
   5a118:	cmp    eax,0xffffffff
   5a11b:	je     5a73b <_obstack_memory_used@@Base+0xdabb>
   5a121:	test   eax,eax
   5a123:	je     5a348 <_obstack_memory_used@@Base+0xd6c8>
   5a129:	mov    r13,QWORD PTR [rsp+0x20]
   5a12e:	mov    edi,DWORD PTR [rbx+r13*8+0x4]
   5a133:	call   a200 <close@plt>
   5a138:	lea    rax,[rip+0x22921]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   5a13f:	mov    edi,DWORD PTR [rax+r13*8]
   5a143:	call   a200 <close@plt>
   5a148:	mov    rdi,r14
   5a14b:	call   a060 <strlen@plt>
   5a150:	lea    rdi,[rax+0x3e8]
   5a157:	mov    QWORD PTR [rsp+0x8],rax
   5a15c:	call   a4a0 <malloc@plt>
   5a161:	mov    r13,rax
   5a164:	test   rax,rax
   5a167:	je     5a736 <_obstack_memory_used@@Base+0xdab6>
   5a16d:	mov    r8,r14
   5a170:	mov    rdi,rax
   5a173:	xor    eax,eax
   5a175:	mov    rdx,0xffffffffffffffff
   5a17c:	lea    rcx,[rip+0x12dd7]        # 6cf5a <_obstack_memory_used@@Base+0x202da>
   5a183:	mov    esi,0x1
   5a188:	call   a9b0 <__sprintf_chk@plt>
   5a18d:	mov    rax,QWORD PTR [rsp+0x8]
   5a192:	mov    r8d,DWORD PTR [rsp+0x14]
   5a197:	lea    rcx,[rip+0x12dc1]        # 6cf5f <_obstack_memory_used@@Base+0x202df>
   5a19e:	mov    rdx,0xffffffffffffffff
   5a1a5:	mov    esi,0x1
   5a1aa:	lea    r14,[r13+rax*1+0x2]
   5a1af:	xor    eax,eax
   5a1b1:	mov    rdi,r14
   5a1b4:	call   a9b0 <__sprintf_chk@plt>
   5a1b9:	mov    eax,DWORD PTR [rsp+0x14]
   5a1bd:	and    eax,0x3
   5a1c0:	cmp    eax,0x1
   5a1c3:	je     5a320 <_obstack_memory_used@@Base+0xd6a0>
   5a1c9:	cmp    eax,0x2
   5a1cc:	jne    5a2f0 <_obstack_memory_used@@Base+0xd670>
   5a1d2:	mov    rdi,r14
   5a1d5:	call   a060 <strlen@plt>
   5a1da:	mov    ecx,0x5257
   5a1df:	add    rax,r14
   5a1e2:	mov    DWORD PTR [rax],0x44525f4f
   5a1e8:	mov    WORD PTR [rax+0x4],cx
   5a1ec:	mov    BYTE PTR [rax+0x6],0x0
   5a1f0:	test   BYTE PTR [rsp+0x14],0x40
   5a1f5:	jne    5a5b0 <_obstack_memory_used@@Base+0xd930>
   5a1fb:	mov    rdi,r13
   5a1fe:	call   a060 <strlen@plt>
   5a203:	mov    edx,0xa
   5a208:	mov    rsi,r13
   5a20b:	mov    edi,ebp
   5a20d:	mov    WORD PTR [r13+rax*1+0x0],dx
   5a213:	call   3c8b0 <__sprintf_chk@plt+0x31f00>
   5a218:	cmp    eax,0xffffffff
   5a21b:	je     5a71c <_obstack_memory_used@@Base+0xda9c>
   5a221:	mov    edi,ebp
   5a223:	lea    rsi,[rsp+0x50]
   5a228:	call   3c960 <__sprintf_chk@plt+0x31fb0>
   5a22d:	mov    rdi,rax
   5a230:	test   rax,rax
   5a233:	je     5a71c <_obstack_memory_used@@Base+0xda9c>
   5a239:	xor    esi,esi
   5a23b:	mov    edx,0xa
   5a240:	call   a410 <strtol@plt>
   5a245:	test   rax,rax
   5a248:	js     5a6bf <_obstack_memory_used@@Base+0xda3f>
   5a24e:	mov    rdi,r13
   5a251:	lea    r12d,[rbp+0x40000000]
   5a258:	call   9ce0 <free@plt>
   5a25d:	mov    rdi,r15
   5a260:	call   9ce0 <free@plt>
   5a265:	jmp    5a29b <_obstack_memory_used@@Base+0xd61b>
   5a267:	nop    WORD PTR [rax+rax*1+0x0]
   5a270:	test   r14,r14
   5a273:	jne    5a02a <_obstack_memory_used@@Base+0xd3aa>
   5a279:	mov    BYTE PTR [rdx-0x1],0x0
   5a27d:	mov    r14,rdx
   5a280:	jmp    5a02a <_obstack_memory_used@@Base+0xd3aa>
   5a285:	nop    DWORD PTR [rax]
   5a288:	mov    rdi,r15
   5a28b:	call   9ce0 <free@plt>
   5a290:	call   9e40 <__errno_location@plt>
   5a295:	mov    DWORD PTR [rax],0x2
   5a29b:	mov    rax,QWORD PTR [rsp+0x98]
   5a2a3:	sub    rax,QWORD PTR fs:0x28
   5a2ac:	jne    5a74c <_obstack_memory_used@@Base+0xdacc>
   5a2b2:	add    rsp,0xa8
   5a2b9:	mov    eax,r12d
   5a2bc:	pop    rbx
   5a2bd:	pop    rbp
   5a2be:	pop    r12
   5a2c0:	pop    r13
   5a2c2:	pop    r14
   5a2c4:	pop    r15
   5a2c6:	ret    
   5a2c7:	nop    WORD PTR [rax+rax*1+0x0]
   5a2d0:	test   r13,r13
   5a2d3:	jne    5a02a <_obstack_memory_used@@Base+0xd3aa>
   5a2d9:	mov    r13,QWORD PTR [rsp+0x8]
   5a2de:	mov    BYTE PTR [rdx-0x1],0x0
   5a2e2:	mov    QWORD PTR [rsp+0x8],rdx
   5a2e7:	jmp    5a02a <_obstack_memory_used@@Base+0xd3aa>
   5a2ec:	nop    DWORD PTR [rax+0x0]
   5a2f0:	test   eax,eax
   5a2f2:	jne    aaef <__sprintf_chk@plt+0x13f>
   5a2f8:	mov    rdi,r14
   5a2fb:	call   a060 <strlen@plt>
   5a300:	movabs rcx,0x594c4e4f44525f4f
   5a30a:	add    rax,r14
   5a30d:	mov    QWORD PTR [rax],rcx
   5a310:	mov    BYTE PTR [rax+0x8],0x0
   5a314:	jmp    5a1f0 <_obstack_memory_used@@Base+0xd570>
   5a319:	nop    DWORD PTR [rax+0x0]
   5a320:	mov    rdi,r14
   5a323:	call   a060 <strlen@plt>
   5a328:	movabs rcx,0x594c4e4f52575f4f
   5a332:	add    rax,r14
   5a335:	mov    QWORD PTR [rax],rcx
   5a338:	mov    BYTE PTR [rax+0x8],0x0
   5a33c:	jmp    5a1f0 <_obstack_memory_used@@Base+0xd570>
   5a341:	nop    DWORD PTR [rax+0x0]
   5a348:	mov    rcx,QWORD PTR [rsp+0x20]
   5a34d:	lea    rax,[rip+0x2270c]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   5a354:	xor    esi,esi
   5a356:	mov    QWORD PTR [rsp+0x28],r11
   5a35b:	mov    edi,DWORD PTR [rax+rcx*8]
   5a35e:	call   a0d0 <dup2@plt>
   5a363:	mov    r11,QWORD PTR [rsp+0x28]
   5a368:	test   eax,eax
   5a36a:	js     5a430 <_obstack_memory_used@@Base+0xd7b0>
   5a370:	mov    rcx,QWORD PTR [rsp+0x20]
   5a375:	lea    rax,[rip+0x226e4]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   5a37c:	mov    edi,DWORD PTR [rax+rcx*8]
   5a37f:	test   edi,edi
   5a381:	jne    5a416 <_obstack_memory_used@@Base+0xd796>
   5a387:	mov    rcx,QWORD PTR [rsp+0x20]
   5a38c:	lea    rax,[rip+0x226cd]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   5a393:	mov    edi,DWORD PTR [rax+rcx*8+0x4]
   5a397:	test   edi,edi
   5a399:	je     5a3b2 <_obstack_memory_used@@Base+0xd732>
   5a39b:	mov    QWORD PTR [rsp+0x28],r11
   5a3a0:	call   a200 <close@plt>
   5a3a5:	mov    r11,QWORD PTR [rsp+0x28]
   5a3aa:	test   eax,eax
   5a3ac:	jne    5a430 <_obstack_memory_used@@Base+0xd7b0>
   5a3b2:	mov    rax,QWORD PTR [rsp+0x20]
   5a3b7:	mov    esi,0x1
   5a3bc:	mov    QWORD PTR [rsp+0x28],r11
   5a3c1:	mov    edi,DWORD PTR [rbx+rax*8+0x4]
   5a3c5:	call   a0d0 <dup2@plt>
   5a3ca:	mov    r11,QWORD PTR [rsp+0x28]
   5a3cf:	test   eax,eax
   5a3d1:	js     5a430 <_obstack_memory_used@@Base+0xd7b0>
   5a3d3:	mov    rax,QWORD PTR [rsp+0x20]
   5a3d8:	mov    QWORD PTR [rsp+0x28],r11
   5a3dd:	mov    edi,DWORD PTR [rbx+rax*8]
   5a3e0:	call   a200 <close@plt>
   5a3e5:	mov    r11,QWORD PTR [rsp+0x28]
   5a3ea:	test   eax,eax
   5a3ec:	jne    5a430 <_obstack_memory_used@@Base+0xd7b0>
   5a3ee:	mov    rax,QWORD PTR [rsp+0x20]
   5a3f3:	mov    edi,DWORD PTR [rbx+rax*8+0x4]
   5a3f7:	call   a200 <close@plt>
   5a3fc:	mov    r11,QWORD PTR [rsp+0x28]
   5a401:	test   eax,eax
   5a403:	jne    5a430 <_obstack_memory_used@@Base+0xd7b0>
   5a405:	call   9e40 <__errno_location@plt>
   5a40a:	mov    r11,QWORD PTR [rsp+0x28]
   5a40f:	mov    QWORD PTR [rsp+0x30],rax
   5a414:	jmp    5a46f <_obstack_memory_used@@Base+0xd7ef>
   5a416:	mov    QWORD PTR [rsp+0x28],r11
   5a41b:	call   a200 <close@plt>
   5a420:	mov    r11,QWORD PTR [rsp+0x28]
   5a425:	test   eax,eax
   5a427:	je     5a387 <_obstack_memory_used@@Base+0xd707>
   5a42d:	nop    DWORD PTR [rax]
   5a430:	mov    edx,0x5
   5a435:	lea    rsi,[rip+0x12d9c]        # 6d1d8 <_obstack_memory_used@@Base+0x20558>
   5a43c:	xor    edi,edi
   5a43e:	mov    QWORD PTR [rsp+0x38],r11
   5a443:	call   a040 <dcgettext@plt>
   5a448:	mov    QWORD PTR [rsp+0x28],rax
   5a44d:	call   9e40 <__errno_location@plt>
   5a452:	mov    rdx,QWORD PTR [rsp+0x28]
   5a457:	mov    edi,0x80
   5a45c:	mov    esi,DWORD PTR [rax]
   5a45e:	mov    QWORD PTR [rsp+0x30],rax
   5a463:	xor    eax,eax
   5a465:	call   a640 <error@plt>
   5a46a:	mov    r11,QWORD PTR [rsp+0x38]
   5a46f:	mov    QWORD PTR [rsp+0x40],r11
   5a474:	call   a0b0 <getuid@plt>
   5a479:	mov    DWORD PTR [rsp+0x28],eax
   5a47d:	call   a460 <getgid@plt>
   5a482:	mov    edi,DWORD PTR [rsp+0x28]
   5a486:	mov    DWORD PTR [rsp+0x38],eax
   5a48a:	call   a010 <getpwuid@plt>
   5a48f:	mov    r11,QWORD PTR [rsp+0x40]
   5a494:	test   rax,rax
   5a497:	je     5a751 <_obstack_memory_used@@Base+0xdad1>
   5a49d:	mov    QWORD PTR [rsp+0x40],r11
   5a4a2:	mov    QWORD PTR [rsp+0x48],rax
   5a4a7:	call   a460 <getgid@plt>
   5a4ac:	mov    rdx,QWORD PTR [rsp+0x48]
   5a4b1:	mov    esi,eax
   5a4b3:	mov    rdi,QWORD PTR [rdx]
   5a4b6:	call   a900 <initgroups@plt>
   5a4bb:	mov    r11,QWORD PTR [rsp+0x40]
   5a4c0:	test   eax,eax
   5a4c2:	jne    5a787 <_obstack_memory_used@@Base+0xdb07>
   5a4c8:	mov    QWORD PTR [rsp+0x40],r11
   5a4cd:	call   a510 <getegid@plt>
   5a4d2:	mov    edi,DWORD PTR [rsp+0x38]
   5a4d6:	mov    r11,QWORD PTR [rsp+0x40]
   5a4db:	cmp    edi,eax
   5a4dd:	je     5a530 <_obstack_memory_used@@Base+0xd8b0>
   5a4df:	mov    QWORD PTR [rsp+0x38],r11
   5a4e4:	call   a660 <setgid@plt>
   5a4e9:	mov    r11,QWORD PTR [rsp+0x38]
   5a4ee:	test   eax,eax
   5a4f0:	je     5a530 <_obstack_memory_used@@Base+0xd8b0>
   5a4f2:	mov    rax,QWORD PTR [rsp+0x30]
   5a4f7:	cmp    DWORD PTR [rax],0x1
   5a4fa:	je     5a530 <_obstack_memory_used@@Base+0xd8b0>
   5a4fc:	mov    rax,QWORD PTR [rip+0x25005]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5a503:	test   rax,rax
   5a506:	je     5a50a <_obstack_memory_used@@Base+0xd88a>
   5a508:	call   rax
   5a50a:	lea    rcx,[rip+0x12a1c]        # 6cf2d <_obstack_memory_used@@Base+0x202ad>
   5a511:	mov    rax,QWORD PTR [rsp+0x30]
   5a516:	lea    rdx,[rip+0x1183a]        # 6bd57 <_obstack_memory_used@@Base+0x1f0d7>
   5a51d:	xor    edi,edi
   5a51f:	mov    esi,DWORD PTR [rax]
   5a521:	xor    eax,eax
   5a523:	call   a640 <error@plt>
   5a528:	call   190e0 <__sprintf_chk@plt+0xe730>
   5a52d:	nop    DWORD PTR [rax]
   5a530:	mov    QWORD PTR [rsp+0x38],r11
   5a535:	call   a1c0 <geteuid@plt>
   5a53a:	mov    edi,DWORD PTR [rsp+0x28]
   5a53e:	mov    r11,QWORD PTR [rsp+0x38]
   5a543:	cmp    edi,eax
   5a545:	jne    5a618 <_obstack_memory_used@@Base+0xd998>
   5a54b:	mov    r9,QWORD PTR [rip+0x24586]        # 7ead8 <_obstack_memory_used@@Base+0x31e58>
   5a552:	test   r13,r13
   5a555:	je     5a660 <_obstack_memory_used@@Base+0xd9e0>
   5a55b:	sub    rsp,0x8
   5a55f:	mov    rsi,r11
   5a562:	mov    r8,r13
   5a565:	xor    eax,eax
   5a567:	push   0x0
   5a569:	mov    rdx,QWORD PTR [rsp+0x18]
   5a56e:	lea    rcx,[rip+0x129c6]        # 6cf3b <_obstack_memory_used@@Base+0x202bb>
   5a575:	mov    rdi,QWORD PTR [rsp+0x28]
   5a57a:	call   a8e0 <execl@plt>
   5a57f:	pop    rsi
   5a580:	pop    rdi
   5a581:	xor    edi,edi
   5a583:	mov    edx,0x5
   5a588:	lea    rsi,[rip+0x129af]        # 6cf3e <_obstack_memory_used@@Base+0x202be>
   5a58f:	call   a040 <dcgettext@plt>
   5a594:	mov    edi,0x80
   5a599:	mov    rdx,rax
   5a59c:	mov    rax,QWORD PTR [rsp+0x30]
   5a5a1:	mov    esi,DWORD PTR [rax]
   5a5a3:	xor    eax,eax
   5a5a5:	call   a640 <error@plt>
   5a5aa:	jmp    5a129 <_obstack_memory_used@@Base+0xd4a9>
   5a5af:	nop
   5a5b0:	mov    rdi,r14
   5a5b3:	call   a060 <strlen@plt>
   5a5b8:	add    r14,rax
   5a5bb:	movabs rax,0x54414552435f4f7c
   5a5c5:	mov    QWORD PTR [r14],rax
   5a5c8:	mov    BYTE PTR [r14+0x8],0x0
   5a5cd:	jmp    5a1fb <_obstack_memory_used@@Base+0xd57b>
   5a5d2:	nop    WORD PTR [rax+rax*1+0x0]
   5a5d8:	lea    rcx,[rip+0xc133]        # 66712 <_obstack_memory_used@@Base+0x19a92>
   5a5df:	mov    eax,0x75
   5a5e4:	mov    QWORD PTR [rsp+0x18],rcx
   5a5e9:	lea    r11,[rcx+0x1]
   5a5ed:	jmp    5a089 <_obstack_memory_used@@Base+0xd409>
   5a5f2:	nop    WORD PTR [rax+rax*1+0x0]
   5a5f8:	mov    rdi,r15
   5a5fb:	call   a370 <gethostbyname@plt>
   5a600:	mov    r14,rax
   5a603:	test   rax,rax
   5a606:	je     5a67f <_obstack_memory_used@@Base+0xd9ff>
   5a608:	mov    QWORD PTR [rsp+0x8],r15
   5a60d:	xor    r14d,r14d
   5a610:	xor    r13d,r13d
   5a613:	jmp    5a058 <_obstack_memory_used@@Base+0xd3d8>
   5a618:	mov    QWORD PTR [rsp+0x28],r11
   5a61d:	call   a860 <setuid@plt>
   5a622:	mov    r11,QWORD PTR [rsp+0x28]
   5a627:	test   eax,eax
   5a629:	je     5a54b <_obstack_memory_used@@Base+0xd8cb>
   5a62f:	mov    rax,QWORD PTR [rsp+0x30]
   5a634:	cmp    DWORD PTR [rax],0x1
   5a637:	je     5a54b <_obstack_memory_used@@Base+0xd8cb>
   5a63d:	mov    rax,QWORD PTR [rip+0x24ec4]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5a644:	test   rax,rax
   5a647:	je     5a64b <_obstack_memory_used@@Base+0xd9cb>
   5a649:	call   rax
   5a64b:	lea    rcx,[rip+0x128e2]        # 6cf34 <_obstack_memory_used@@Base+0x202b4>
   5a652:	jmp    5a511 <_obstack_memory_used@@Base+0xd891>
   5a657:	nop    WORD PTR [rax+rax*1+0x0]
   5a660:	mov    rdx,QWORD PTR [rsp+0x8]
   5a665:	mov    rdi,QWORD PTR [rsp+0x18]
   5a66a:	xor    r8d,r8d
   5a66d:	mov    rcx,r9
   5a670:	mov    rsi,r11
   5a673:	xor    eax,eax
   5a675:	call   a8e0 <execl@plt>
   5a67a:	jmp    5a581 <_obstack_memory_used@@Base+0xd901>
   5a67f:	mov    QWORD PTR [rsp+0x8],r15
   5a684:	xor    r13d,r13d
   5a687:	xor    edi,edi
   5a689:	mov    edx,0x5
   5a68e:	lea    rsi,[rip+0x12b1b]        # 6d1b0 <_obstack_memory_used@@Base+0x20530>
   5a695:	call   a040 <dcgettext@plt>
   5a69a:	mov    rcx,QWORD PTR [rsp+0x8]
   5a69f:	xor    esi,esi
   5a6a1:	mov    edi,0x80
   5a6a6:	mov    rdx,rax
   5a6a9:	xor    eax,eax
   5a6ab:	call   a640 <error@plt>
   5a6b0:	jmp    5a048 <_obstack_memory_used@@Base+0xd3c8>
   5a6b5:	mov    r11,QWORD PTR [rsp+0x18]
   5a6ba:	jmp    5a085 <_obstack_memory_used@@Base+0xd405>
   5a6bf:	call   9e40 <__errno_location@plt>
   5a6c4:	mov    r14d,0x5
   5a6ca:	mov    DWORD PTR [rax],0x5
   5a6d0:	mov    rbp,rax
   5a6d3:	mov    rdi,r13
   5a6d6:	lea    r13,[rip+0x22383]        # 7ca60 <_obstack_memory_used@@Base+0x2fde0>
   5a6dd:	call   9ce0 <free@plt>
   5a6e2:	mov    rdi,r15
   5a6e5:	call   9ce0 <free@plt>
   5a6ea:	mov    r15,QWORD PTR [rsp+0x20]
   5a6ef:	mov    edi,DWORD PTR [rbx+r15*8]
   5a6f3:	call   a200 <close@plt>
   5a6f8:	mov    edi,DWORD PTR [r13+r15*8+0x4]
   5a6fd:	call   a200 <close@plt>
   5a702:	mov    DWORD PTR [rbx+r15*8],0xffffffff
   5a70a:	mov    DWORD PTR [r13+r15*8+0x4],0xffffffff
   5a713:	mov    DWORD PTR [rbp+0x0],r14d
   5a717:	jmp    5a29b <_obstack_memory_used@@Base+0xd61b>
   5a71c:	call   9e40 <__errno_location@plt>
   5a721:	mov    r14d,DWORD PTR [rax]
   5a724:	mov    rbp,rax
   5a727:	jmp    5a6d3 <_obstack_memory_used@@Base+0xda53>
   5a729:	mov    rdi,r15
   5a72c:	call   9ce0 <free@plt>
   5a731:	jmp    5a29b <_obstack_memory_used@@Base+0xd61b>
   5a736:	call   19130 <__sprintf_chk@plt+0xe780>
   5a73b:	mov    rdi,r15
   5a73e:	or     r12d,0xffffffff
   5a742:	call   9ce0 <free@plt>
   5a747:	jmp    5a29b <_obstack_memory_used@@Base+0xd61b>
   5a74c:	call   a0a0 <__stack_chk_fail@plt>
   5a751:	mov    rax,QWORD PTR [rip+0x24db0]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5a758:	test   rax,rax
   5a75b:	je     5a75f <_obstack_memory_used@@Base+0xdadf>
   5a75d:	call   rax
   5a75f:	mov    rax,QWORD PTR [rsp+0x30]
   5a764:	mov    r8d,DWORD PTR [rsp+0x28]
   5a769:	lea    rcx,[rip+0x127a1]        # 6cf11 <_obstack_memory_used@@Base+0x20291>
   5a770:	xor    edi,edi
   5a772:	lea    rdx,[rip+0x127a1]        # 6cf1a <_obstack_memory_used@@Base+0x2029a>
   5a779:	mov    esi,DWORD PTR [rax]
   5a77b:	xor    eax,eax
   5a77d:	call   a640 <error@plt>
   5a782:	call   190e0 <__sprintf_chk@plt+0xe730>
   5a787:	mov    rax,QWORD PTR [rip+0x24d7a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5a78e:	test   rax,rax
   5a791:	je     5a795 <_obstack_memory_used@@Base+0xdb15>
   5a793:	call   rax
   5a795:	lea    rcx,[rip+0x12786]        # 6cf22 <_obstack_memory_used@@Base+0x202a2>
   5a79c:	jmp    5a511 <_obstack_memory_used@@Base+0xd891>
   5a7a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5a7ac:	nop    DWORD PTR [rax+0x0]
   5a7b0:	endbr64 
   5a7b4:	lea    rsi,[rip+0x24925]        # 7f0e0 <obstack_alloc_failed_handler@@Base+0x2a8>
   5a7bb:	xor    eax,eax
   5a7bd:	mov    ecx,0x37
   5a7c2:	xor    edx,edx
   5a7c4:	mov    rdi,rsi
   5a7c7:	sub    rsp,0x8
   5a7cb:	rep stos QWORD PTR es:[rdi],rax
   5a7ce:	lea    rdi,[rip+0x248f3]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   5a7d5:	call   2ab30 <__sprintf_chk@plt+0x20180>
   5a7da:	cmp    eax,0x1
   5a7dd:	je     5a820 <_obstack_memory_used@@Base+0xdba0>
   5a7df:	mov    rax,QWORD PTR [rip+0x24d22]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5a7e6:	test   rax,rax
   5a7e9:	je     5a7ed <_obstack_memory_used@@Base+0xdb6d>
   5a7eb:	call   rax
   5a7ed:	mov    edx,0x5
   5a7f2:	lea    rsi,[rip+0x90ef]        # 638e8 <_obstack_memory_used@@Base+0x16c68>
   5a7f9:	xor    edi,edi
   5a7fb:	call   a040 <dcgettext@plt>
   5a800:	xor    esi,esi
   5a802:	xor    edi,edi
   5a804:	mov    rdx,rax
   5a807:	xor    eax,eax
   5a809:	call   a640 <error@plt>
   5a80e:	xor    eax,eax
   5a810:	mov    DWORD PTR [rip+0x248aa],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   5a81a:	add    rsp,0x8
   5a81e:	ret    
   5a81f:	nop
   5a820:	mov    rax,QWORD PTR [rip+0x248a1]        # 7f0c8 <obstack_alloc_failed_handler@@Base+0x290>
   5a827:	mov    rdx,QWORD PTR [rip+0x24d12]        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   5a82e:	cmp    rax,rdx
   5a831:	jb     5a84b <_obstack_memory_used@@Base+0xdbcb>
   5a833:	sub    rax,rdx
   5a836:	and    rax,0xfffffffffffffe00
   5a83c:	lea    rdx,[rdx+rax*1+0x200]
   5a844:	mov    QWORD PTR [rip+0x24cf5],rdx        # 7f540 <obstack_alloc_failed_handler@@Base+0x708>
   5a84b:	cmp    rdx,QWORD PTR [rip+0x24d2e]        # 7f580 <obstack_alloc_failed_handler@@Base+0x748>
   5a852:	ja     aaf4 <__sprintf_chk@plt+0x144>
   5a858:	mov    eax,0x1
   5a85d:	add    rsp,0x8
   5a861:	ret    
   5a862:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5a86d:	nop    DWORD PTR [rax]
   5a870:	endbr64 
   5a874:	push   r14
   5a876:	mov    edi,0x50
   5a87b:	mov    r14,rdx
   5a87e:	push   r13
   5a880:	mov    r13,rcx
   5a883:	push   r12
   5a885:	push   rbp
   5a886:	mov    rbp,r8
   5a889:	push   rbx
   5a88a:	call   a4a0 <malloc@plt>
   5a88f:	mov    r12,rax
   5a892:	test   rax,rax
   5a895:	je     5a92d <_obstack_memory_used@@Base+0xdcad>
   5a89b:	lea    rax,[rip+0x1245e]        # 6cd00 <_obstack_memory_used@@Base+0x20080>
   5a8a2:	mov    rdi,r12
   5a8a5:	mov    QWORD PTR [r12+0x28],rax
   5a8aa:	call   48cf0 <argp_usage@@Base+0x5970>
   5a8af:	test   al,al
   5a8b1:	je     5a940 <_obstack_memory_used@@Base+0xdcc0>
   5a8b7:	xor    edi,edi
   5a8b9:	call   48c40 <argp_usage@@Base+0x58c0>
   5a8be:	mov    rbx,rax
   5a8c1:	shr    rax,0x3d
   5a8c5:	setne  al
   5a8c8:	bt     rbx,0x3c
   5a8cd:	movzx  eax,al
   5a8d0:	jb     5a940 <_obstack_memory_used@@Base+0xdcc0>
   5a8d2:	test   rax,rax
   5a8d5:	jne    5a940 <_obstack_memory_used@@Base+0xdcc0>
   5a8d7:	mov    QWORD PTR [r12+0x10],rbx
   5a8dc:	test   rbx,rbx
   5a8df:	je     5a940 <_obstack_memory_used@@Base+0xdcc0>
   5a8e1:	mov    esi,0x10
   5a8e6:	mov    rdi,rbx
   5a8e9:	call   a2f0 <calloc@plt>
   5a8ee:	mov    QWORD PTR [r12],rax
   5a8f2:	test   rax,rax
   5a8f5:	je     5a940 <_obstack_memory_used@@Base+0xdcc0>
   5a8f7:	shl    rbx,0x4
   5a8fb:	mov    QWORD PTR [r12+0x30],r14
   5a900:	add    rax,rbx
   5a903:	mov    QWORD PTR [r12+0x38],r13
   5a908:	mov    QWORD PTR [r12+0x8],rax
   5a90d:	mov    QWORD PTR [r12+0x18],0x0
   5a916:	mov    QWORD PTR [r12+0x20],0x0
   5a91f:	mov    QWORD PTR [r12+0x40],rbp
   5a924:	mov    QWORD PTR [r12+0x48],0x0
   5a92d:	pop    rbx
   5a92e:	mov    rax,r12
   5a931:	pop    rbp
   5a932:	pop    r12
   5a934:	pop    r13
   5a936:	pop    r14
   5a938:	ret    
   5a939:	nop    DWORD PTR [rax+0x0]
   5a940:	mov    rdi,r12
   5a943:	xor    r12d,r12d
   5a946:	call   9ce0 <free@plt>
   5a94b:	pop    rbx
   5a94c:	mov    rax,r12
   5a94f:	pop    rbp
   5a950:	pop    r12
   5a952:	pop    r13
   5a954:	pop    r14
   5a956:	ret    
   5a957:	nop    WORD PTR [rax+rax*1+0x0]
   5a960:	endbr64 
   5a964:	push   r15
   5a966:	push   r14
   5a968:	push   r13
   5a96a:	push   r12
   5a96c:	push   rbp
   5a96d:	push   rbx
   5a96e:	sub    rsp,0x158
   5a975:	mov    QWORD PTR [rsp+0x18],rdi
   5a97a:	mov    rdi,rsi
   5a97d:	mov    QWORD PTR [rsp],rsi
   5a981:	lea    rsi,[rip+0xc10a]        # 66a92 <_obstack_memory_used@@Base+0x19e12>
   5a988:	mov    QWORD PTR [rsp+0x20],rdx
   5a98d:	mov    QWORD PTR [rsp+0x8],rcx
   5a992:	mov    rax,QWORD PTR fs:0x28
   5a99b:	mov    QWORD PTR [rsp+0x148],rax
   5a9a3:	xor    eax,eax
   5a9a5:	mov    QWORD PTR [rsp+0x38],0x0
   5a9ae:	mov    QWORD PTR [rsp+0x40],0x0
   5a9b7:	call   a6d0 <fopen@plt>
   5a9bc:	test   rax,rax
   5a9bf:	je     5ae0b <_obstack_memory_used@@Base+0xe18b>
   5a9c5:	mov    rbp,rax
   5a9c8:	xor    ebx,ebx
   5a9ca:	lea    r13,[rsp+0x40]
   5a9cf:	mov    r15d,0x8e44
   5a9d5:	lea    rax,[rip+0xa770]        # 6514c <_obstack_memory_used@@Base+0x184cc>
   5a9dc:	mov    DWORD PTR [rsp+0x14],0x0
   5a9e4:	lea    r12,[rsp+0x38]
   5a9e9:	mov    QWORD PTR [rsp+0xa0],rax
   5a9f1:	jmp    5aae6 <_obstack_memory_used@@Base+0xde66>
   5a9f6:	cs nop WORD PTR [rax+rax*1+0x0]
   5aa00:	mov    rax,QWORD PTR [rsp+0x68]
   5aa05:	mov    rdi,QWORD PTR [rax]
   5aa08:	cmp    BYTE PTR [rdi],0x2b
   5aa0b:	je     5ac50 <_obstack_memory_used@@Base+0xdfd0>
   5aa11:	mov    rax,QWORD PTR [rsp+0x20]
   5aa16:	call   rax
   5aa18:	mov    QWORD PTR [rsp+0x48],rax
   5aa1d:	cmp    rax,0xffffffffffffffff
   5aa21:	je     5ab70 <_obstack_memory_used@@Base+0xdef0>
   5aa27:	mov    rax,QWORD PTR [rsp+0x68]
   5aa2c:	mov    esi,0x3a
   5aa31:	mov    r14,QWORD PTR [rax+0x8]
   5aa35:	mov    rdi,r14
   5aa38:	call   a0f0 <strchr@plt>
   5aa3d:	test   rax,rax
   5aa40:	je     5abc0 <_obstack_memory_used@@Base+0xdf40>
   5aa46:	xor    edx,edx
   5aa48:	mov    BYTE PTR [rax],0x0
   5aa4b:	cmp    r14,rax
   5aa4e:	mov    rcx,QWORD PTR [rsp]
   5aa52:	cmovae r14,rdx
   5aa56:	mov    rdx,QWORD PTR [rsp+0x8]
   5aa5b:	lea    rsi,[rax+0x1]
   5aa5f:	mov    r8d,ebx
   5aa62:	lea    rdi,[rsp+0x50]
   5aa67:	call   54660 <_obstack_memory_used@@Base+0x79e0>
   5aa6c:	test   eax,eax
   5aa6e:	jne    5abae <_obstack_memory_used@@Base+0xdf2e>
   5aa74:	mov    edi,0x18
   5aa79:	call   a4a0 <malloc@plt>
   5aa7e:	mov    r15,rax
   5aa81:	test   rax,rax
   5aa84:	je     5acb0 <_obstack_memory_used@@Base+0xe030>
   5aa8a:	mov    rax,QWORD PTR [rsp+0x48]
   5aa8f:	mov    QWORD PTR [r15],rax
   5aa92:	mov    rax,QWORD PTR [rsp+0x50]
   5aa97:	mov    QWORD PTR [r15+0x8],rax
   5aa9b:	test   r14,r14
   5aa9e:	jne    5ac0f <_obstack_memory_used@@Base+0xdf8f>
   5aaa4:	mov    rax,QWORD PTR [rsp+0x18]
   5aaa9:	mov    QWORD PTR [r15+0x10],r14
   5aaad:	mov    rdi,QWORD PTR [rax]
   5aab0:	test   rdi,rdi
   5aab3:	je     5ac80 <_obstack_memory_used@@Base+0xe000>
   5aab9:	lea    rdx,[rsp+0x58]
   5aabe:	mov    rsi,r15
   5aac1:	call   49270 <argp_usage@@Base+0x5ef0>
   5aac6:	cmp    eax,0xffffffff
   5aac9:	je     5acb0 <_obstack_memory_used@@Base+0xe030>
   5aacf:	test   eax,eax
   5aad1:	jne    5aae0 <_obstack_memory_used@@Base+0xde60>
   5aad3:	cmp    QWORD PTR [rsp+0x58],0x0
   5aad9:	je     5acb0 <_obstack_memory_used@@Base+0xe030>
   5aadf:	nop
   5aae0:	mov    r15d,0x8e4c
   5aae6:	mov    rcx,rbp
   5aae9:	mov    edx,0xa
   5aaee:	mov    rsi,r13
   5aaf1:	mov    rdi,r12
   5aaf4:	call   a310 <__getdelim@plt>
   5aaf9:	test   rax,rax
   5aafc:	jle    5acb8 <_obstack_memory_used@@Base+0xe038>
   5ab02:	mov    rdi,QWORD PTR [rsp+0x38]
   5ab07:	lea    rsi,[rsp+0x60]
   5ab0c:	mov    edx,r15d
   5ab0f:	add    ebx,0x1
   5ab12:	call   3f220 <__sprintf_chk@plt+0x34870>
   5ab17:	test   eax,eax
   5ab19:	jne    5ad6d <_obstack_memory_used@@Base+0xe0ed>
   5ab1f:	mov    rax,QWORD PTR [rsp+0x60]
   5ab24:	test   rax,rax
   5ab27:	je     5aae0 <_obstack_memory_used@@Base+0xde60>
   5ab29:	cmp    rax,0x2
   5ab2d:	je     5aa00 <_obstack_memory_used@@Base+0xdd80>
   5ab33:	mov    edx,0x5
   5ab38:	lea    rsi,[rip+0x12441]        # 6cf80 <_obstack_memory_used@@Base+0x20300>
   5ab3f:	xor    edi,edi
   5ab41:	call   a040 <dcgettext@plt>
   5ab46:	mov    rcx,QWORD PTR [rsp]
   5ab4a:	mov    r8d,ebx
   5ab4d:	xor    esi,esi
   5ab4f:	mov    rdx,rax
   5ab52:	xor    edi,edi
   5ab54:	xor    eax,eax
   5ab56:	call   a640 <error@plt>
   5ab5b:	mov    DWORD PTR [rsp+0x14],0x1
   5ab63:	jmp    5aae0 <_obstack_memory_used@@Base+0xde60>
   5ab68:	nop    DWORD PTR [rax+rax*1+0x0]
   5ab70:	mov    rax,QWORD PTR [rsp+0x68]
   5ab75:	mov    r14,QWORD PTR [rax]
   5ab78:	mov    edx,0x5
   5ab7d:	lea    rsi,[rip+0x12412]        # 6cf96 <_obstack_memory_used@@Base+0x20316>
   5ab84:	xor    edi,edi
   5ab86:	call   a040 <dcgettext@plt>
   5ab8b:	sub    rsp,0x8
   5ab8f:	mov    r8d,ebx
   5ab92:	xor    esi,esi
   5ab94:	push   r14
   5ab96:	mov    r9,QWORD PTR [rsp+0x18]
   5ab9b:	mov    rdx,rax
   5ab9e:	xor    edi,edi
   5aba0:	mov    rcx,QWORD PTR [rsp+0x10]
   5aba5:	xor    eax,eax
   5aba7:	call   a640 <error@plt>
   5abac:	pop    rdx
   5abad:	pop    rcx
   5abae:	mov    DWORD PTR [rsp+0x14],0x1
   5abb6:	jmp    5aae0 <_obstack_memory_used@@Base+0xde60>
   5abbb:	nop    DWORD PTR [rax+rax*1+0x0]
   5abc0:	cmp    BYTE PTR [r14],0x2b
   5abc4:	je     5ad00 <_obstack_memory_used@@Base+0xe080>
   5abca:	mov    rax,QWORD PTR [rsp+0x20]
   5abcf:	mov    rdi,r14
   5abd2:	call   rax
   5abd4:	mov    QWORD PTR [rsp+0x50],rax
   5abd9:	cmp    rax,0xffffffffffffffff
   5abdd:	je     5ad50 <_obstack_memory_used@@Base+0xe0d0>
   5abe3:	mov    edi,0x18
   5abe8:	mov    QWORD PTR [rsp+0x28],rax
   5abed:	call   a4a0 <malloc@plt>
   5abf2:	mov    rdx,QWORD PTR [rsp+0x28]
   5abf7:	test   rax,rax
   5abfa:	mov    r15,rax
   5abfd:	je     5acb0 <_obstack_memory_used@@Base+0xe030>
   5ac03:	mov    rax,QWORD PTR [rsp+0x48]
   5ac08:	mov    QWORD PTR [r15+0x8],rdx
   5ac0c:	mov    QWORD PTR [r15],rax
   5ac0f:	mov    rdi,r14
   5ac12:	call   a060 <strlen@plt>
   5ac17:	lea    rdx,[rax+0x1]
   5ac1b:	mov    rdi,rdx
   5ac1e:	mov    QWORD PTR [rsp+0x28],rdx
   5ac23:	call   a4a0 <malloc@plt>
   5ac28:	mov    rdi,rax
   5ac2b:	test   rax,rax
   5ac2e:	je     5acb0 <_obstack_memory_used@@Base+0xe030>
   5ac34:	mov    rdx,QWORD PTR [rsp+0x28]
   5ac39:	mov    rsi,r14
   5ac3c:	call   a420 <memcpy@plt>
   5ac41:	mov    r14,rax
   5ac44:	jmp    5aaa4 <_obstack_memory_used@@Base+0xde24>
   5ac49:	nop    DWORD PTR [rax+0x0]
   5ac50:	mov    rcx,QWORD PTR [rsp]
   5ac54:	mov    rdx,QWORD PTR [rsp+0x8]
   5ac59:	lea    rsi,[rdi+0x1]
   5ac5d:	mov    r8d,ebx
   5ac60:	lea    rdi,[rsp+0x48]
   5ac65:	call   54660 <_obstack_memory_used@@Base+0x79e0>
   5ac6a:	test   eax,eax
   5ac6c:	je     5aa27 <_obstack_memory_used@@Base+0xdda7>
   5ac72:	mov    DWORD PTR [rsp+0x14],0x1
   5ac7a:	jmp    5aae0 <_obstack_memory_used@@Base+0xde60>
   5ac7f:	nop
   5ac80:	xor    r8d,r8d
   5ac83:	lea    rcx,[rip+0xfffffffffffc81b6]        # 22e40 <__sprintf_chk@plt+0x18490>
   5ac8a:	lea    rdx,[rip+0xfffffffffffc819f]        # 22e30 <__sprintf_chk@plt+0x18480>
   5ac91:	xor    esi,esi
   5ac93:	call   5a870 <_obstack_memory_used@@Base+0xdbf0>
   5ac98:	mov    rdi,rax
   5ac9b:	mov    rax,QWORD PTR [rsp+0x18]
   5aca0:	mov    QWORD PTR [rax],rdi
   5aca3:	test   rdi,rdi
   5aca6:	jne    5aab9 <_obstack_memory_used@@Base+0xde39>
   5acac:	nop    DWORD PTR [rax+0x0]
   5acb0:	call   19130 <__sprintf_chk@plt+0xe780>
   5acb5:	nop    DWORD PTR [rax]
   5acb8:	and    r15d,0x8
   5acbc:	jne    5ad5e <_obstack_memory_used@@Base+0xe0de>
   5acc2:	mov    rdi,rbp
   5acc5:	call   9ff0 <fclose@plt>
   5acca:	mov    eax,DWORD PTR [rsp+0x14]
   5acce:	test   eax,eax
   5acd0:	jne    5add7 <_obstack_memory_used@@Base+0xe157>
   5acd6:	mov    rax,QWORD PTR [rsp+0x148]
   5acde:	sub    rax,QWORD PTR fs:0x28
   5ace7:	jne    5ae14 <_obstack_memory_used@@Base+0xe194>
   5aced:	add    rsp,0x158
   5acf4:	pop    rbx
   5acf5:	pop    rbp
   5acf6:	pop    r12
   5acf8:	pop    r13
   5acfa:	pop    r14
   5acfc:	pop    r15
   5acfe:	ret    
   5acff:	nop
   5ad00:	mov    rcx,QWORD PTR [rsp]
   5ad04:	mov    rdx,QWORD PTR [rsp+0x8]
   5ad09:	mov    r8d,ebx
   5ad0c:	mov    rsi,r14
   5ad0f:	lea    rdi,[rsp+0x50]
   5ad14:	call   54660 <_obstack_memory_used@@Base+0x79e0>
   5ad19:	test   eax,eax
   5ad1b:	jne    5abae <_obstack_memory_used@@Base+0xdf2e>
   5ad21:	mov    edi,0x18
   5ad26:	call   a4a0 <malloc@plt>
   5ad2b:	mov    r15,rax
   5ad2e:	test   rax,rax
   5ad31:	je     5acb0 <_obstack_memory_used@@Base+0xe030>
   5ad37:	mov    rax,QWORD PTR [rsp+0x48]
   5ad3c:	xor    r14d,r14d
   5ad3f:	mov    QWORD PTR [r15],rax
   5ad42:	mov    rax,QWORD PTR [rsp+0x50]
   5ad47:	mov    QWORD PTR [r15+0x8],rax
   5ad4b:	jmp    5aaa4 <_obstack_memory_used@@Base+0xde24>
   5ad50:	mov    rax,QWORD PTR [rsp+0x68]
   5ad55:	mov    r14,QWORD PTR [rax+0x8]
   5ad59:	jmp    5ab78 <_obstack_memory_used@@Base+0xdef8>
   5ad5e:	lea    rdi,[rsp+0x60]
   5ad63:	call   3cee0 <__sprintf_chk@plt+0x32530>
   5ad68:	jmp    5acc2 <_obstack_memory_used@@Base+0xe042>
   5ad6d:	mov    rax,QWORD PTR [rip+0x24794]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5ad74:	test   rax,rax
   5ad77:	je     5ad7b <_obstack_memory_used@@Base+0xe0fb>
   5ad79:	call   rax
   5ad7b:	movsxd rax,DWORD PTR [rsp+0x120]
   5ad83:	mov    rbp,QWORD PTR [rsp+0x128]
   5ad8b:	cmp    eax,0x9
   5ad8e:	je     5ada7 <_obstack_memory_used@@Base+0xe127>
   5ad90:	lea    rbp,[rip+0x8301]        # 63098 <_obstack_memory_used@@Base+0x16418>
   5ad97:	cmp    eax,0x8
   5ad9a:	jg     5ada7 <_obstack_memory_used@@Base+0xe127>
   5ad9c:	lea    rdx,[rip+0x1f2fd]        # 7a0a0 <_obstack_memory_used@@Base+0x2d420>
   5ada3:	mov    rbp,QWORD PTR [rdx+rax*8]
   5ada7:	mov    edx,0x5
   5adac:	lea    rsi,[rip+0x121b0]        # 6cf63 <_obstack_memory_used@@Base+0x202e3>
   5adb3:	xor    edi,edi
   5adb5:	call   a040 <dcgettext@plt>
   5adba:	mov    rcx,QWORD PTR [rsp]
   5adbe:	mov    r9,rbp
   5adc1:	mov    r8d,ebx
   5adc4:	mov    rdx,rax
   5adc7:	xor    esi,esi
   5adc9:	xor    edi,edi
   5adcb:	xor    eax,eax
   5adcd:	call   a640 <error@plt>
   5add2:	call   190e0 <__sprintf_chk@plt+0xe730>
   5add7:	mov    rax,QWORD PTR [rip+0x2472a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   5adde:	test   rax,rax
   5ade1:	je     5ade5 <_obstack_memory_used@@Base+0xe165>
   5ade3:	call   rax
   5ade5:	mov    edx,0x5
   5adea:	lea    rsi,[rip+0x121c2]        # 6cfb3 <_obstack_memory_used@@Base+0x20333>
   5adf1:	xor    edi,edi
   5adf3:	call   a040 <dcgettext@plt>
   5adf8:	xor    esi,esi
   5adfa:	xor    edi,edi
   5adfc:	mov    rdx,rax
   5adff:	xor    eax,eax
   5ae01:	call   a640 <error@plt>
   5ae06:	call   190e0 <__sprintf_chk@plt+0xe730>
   5ae0b:	mov    rdi,QWORD PTR [rsp]
   5ae0f:	call   3c420 <__sprintf_chk@plt+0x31a70>
   5ae14:	call   a0a0 <__stack_chk_fail@plt>
   5ae19:	nop    DWORD PTR [rax+0x0]
   5ae20:	endbr64 
   5ae24:	push   r15
   5ae26:	push   r14
   5ae28:	mov    r14,rsi
   5ae2b:	push   r13
   5ae2d:	push   r12
   5ae2f:	mov    r12,rdx
   5ae32:	push   rbp
   5ae33:	movsxd rbp,edi
   5ae36:	push   rbx
   5ae37:	sub    rsp,0x28
   5ae3b:	call   9e40 <__errno_location@plt>
   5ae40:	mov    ecx,DWORD PTR [rip+0x23ffa]        # 7ee40 <obstack_alloc_failed_handler@@Base+0x8>
   5ae46:	mov    r15,QWORD PTR [rip+0x24013]        # 7ee60 <obstack_alloc_failed_handler@@Base+0x28>
   5ae4d:	mov    r13,rax
   5ae50:	mov    eax,DWORD PTR [rax]
   5ae52:	mov    DWORD PTR [rsp+0x14],eax
   5ae56:	cmp    ebp,ecx
   5ae58:	jl     5aebd <_obstack_memory_used@@Base+0xe23d>
   5ae5a:	lea    ebx,[rbp+0x1]
   5ae5d:	lea    rax,[rip+0x23fec]        # 7ee50 <obstack_alloc_failed_handler@@Base+0x18>
   5ae64:	mov    DWORD PTR [rsp+0x8],ecx
   5ae68:	movsxd rsi,ebx
   5ae6b:	shl    rsi,0x4
   5ae6f:	cmp    r15,rax
   5ae72:	je     5afb0 <_obstack_memory_used@@Base+0xe330>
   5ae78:	mov    rdi,r15
   5ae7b:	call   a570 <realloc@plt>
   5ae80:	mov    ecx,DWORD PTR [rsp+0x8]
   5ae84:	test   rax,rax
   5ae87:	mov    r15,rax
   5ae8a:	je     5afdb <_obstack_memory_used@@Base+0xe35b>
   5ae90:	mov    QWORD PTR [rip+0x23fc9],rax        # 7ee60 <obstack_alloc_failed_handler@@Base+0x28>
   5ae97:	movsxd rdi,ecx
   5ae9a:	mov    edx,ebx
   5ae9c:	xor    esi,esi
   5ae9e:	sub    edx,ecx
   5aea0:	mov    rcx,rdi
   5aea3:	shl    rcx,0x4
   5aea7:	movsxd rdx,edx
   5aeaa:	shl    rdx,0x4
   5aeae:	lea    rdi,[r15+rcx*1]
   5aeb2:	call   a1b0 <memset@plt>
   5aeb7:	mov    DWORD PTR [rip+0x23f83],ebx        # 7ee40 <obstack_alloc_failed_handler@@Base+0x8>
   5aebd:	lea    rax,[r12+0x8]
   5aec2:	shl    rbp,0x4
   5aec6:	sub    rsp,0x8
   5aeca:	mov    rdx,r14
   5aecd:	lea    rbx,[r15+rbp*1]
   5aed1:	mov    ebp,DWORD PTR [r12+0x4]
   5aed6:	mov    QWORD PTR [rsp+0x20],rax
   5aedb:	mov    rcx,0xffffffffffffffff
   5aee2:	mov    rsi,QWORD PTR [rbx]
   5aee5:	mov    r15,QWORD PTR [rbx+0x8]
   5aee9:	push   QWORD PTR [r12+0x30]
   5aeee:	mov    r8d,DWORD PTR [r12]
   5aef2:	push   QWORD PTR [r12+0x28]
   5aef7:	or     ebp,0x1
   5aefa:	push   rax
   5aefb:	mov    r9d,ebp
   5aefe:	mov    rdi,r15
   5af01:	mov    QWORD PTR [rsp+0x28],rsi
   5af06:	call   4a1f0 <argp_usage@@Base+0x6e70>
   5af0b:	mov    rsi,QWORD PTR [rsp+0x28]
   5af10:	add    rsp,0x20
   5af14:	cmp    rsi,rax
   5af17:	ja     5af8f <_obstack_memory_used@@Base+0xe30f>
   5af19:	lea    rsi,[rax+0x1]
   5af1d:	lea    rax,[rip+0x24dfc]        # 7fd20 <argp_program_bug_address@@Base+0x70>
   5af24:	mov    QWORD PTR [rbx],rsi
   5af27:	cmp    r15,rax
   5af2a:	je     5af3e <_obstack_memory_used@@Base+0xe2be>
   5af2c:	mov    rdi,r15
   5af2f:	mov    QWORD PTR [rsp+0x8],rsi
   5af34:	call   9ce0 <free@plt>
   5af39:	mov    rsi,QWORD PTR [rsp+0x8]
   5af3e:	mov    rdi,rsi
   5af41:	mov    QWORD PTR [rsp+0x8],rsi
   5af46:	call   a4a0 <malloc@plt>
   5af4b:	mov    r15,rax
   5af4e:	test   rax,rax
   5af51:	je     5afdb <_obstack_memory_used@@Base+0xe35b>
   5af57:	sub    rsp,0x8
   5af5b:	mov    QWORD PTR [rbx+0x8],rax
   5af5f:	mov    r8d,DWORD PTR [r12]
   5af63:	mov    r9d,ebp
   5af66:	push   QWORD PTR [r12+0x30]
   5af6b:	mov    rcx,0xffffffffffffffff
   5af72:	mov    rdx,r14
   5af75:	mov    rdi,rax
   5af78:	push   QWORD PTR [r12+0x28]
   5af7d:	push   QWORD PTR [rsp+0x30]
   5af81:	mov    rsi,QWORD PTR [rsp+0x28]
   5af86:	call   4a1f0 <argp_usage@@Base+0x6e70>
   5af8b:	add    rsp,0x20
   5af8f:	mov    eax,DWORD PTR [rsp+0x14]
   5af93:	mov    DWORD PTR [r13+0x0],eax
   5af97:	add    rsp,0x28
   5af9b:	mov    rax,r15
   5af9e:	pop    rbx
   5af9f:	pop    rbp
   5afa0:	pop    r12
   5afa2:	pop    r13
   5afa4:	pop    r14
   5afa6:	pop    r15
   5afa8:	ret    
   5afa9:	nop    DWORD PTR [rax+0x0]
   5afb0:	mov    rdi,rsi
   5afb3:	call   a4a0 <malloc@plt>
   5afb8:	mov    r15,rax
   5afbb:	test   rax,rax
   5afbe:	je     5afdb <_obstack_memory_used@@Base+0xe35b>
   5afc0:	movdqa xmm0,XMMWORD PTR [rip+0x23e88]        # 7ee50 <obstack_alloc_failed_handler@@Base+0x18>
   5afc8:	mov    ecx,DWORD PTR [rsp+0x8]
   5afcc:	mov    QWORD PTR [rip+0x23e8d],rax        # 7ee60 <obstack_alloc_failed_handler@@Base+0x28>
   5afd3:	movups XMMWORD PTR [rax],xmm0
   5afd6:	jmp    5ae97 <_obstack_memory_used@@Base+0xe217>
   5afdb:	call   19130 <__sprintf_chk@plt+0xe780>
   5afe0:	endbr64 
   5afe4:	push   r15
   5afe6:	push   r14
   5afe8:	push   r13
   5afea:	push   r12
   5afec:	mov    r12,rdx
   5afef:	push   rbp
   5aff0:	mov    rbp,rsi
   5aff3:	push   rbx
   5aff4:	sub    rsp,0x68
   5aff8:	mov    QWORD PTR [rsp+0x10],rdi
   5affd:	mov    rdi,rsi
   5b000:	mov    QWORD PTR [rsp+0x8],rcx
   5b005:	mov    QWORD PTR [rsp+0x18],r8
   5b00a:	mov    rax,QWORD PTR fs:0x28
   5b013:	mov    QWORD PTR [rsp+0x58],rax
   5b018:	xor    eax,eax
   5b01a:	call   a060 <strlen@plt>
   5b01f:	mov    r15,QWORD PTR [r12]
   5b023:	test   r15,r15
   5b026:	je     5b25b <_obstack_memory_used@@Base+0xe5db>
   5b02c:	mov    BYTE PTR [rsp],0x0
   5b030:	mov    rbx,rax
   5b033:	xor    r14d,r14d
   5b036:	mov    r13,0xffffffffffffffff
   5b03d:	jmp    5b069 <_obstack_memory_used@@Base+0xe3e9>
   5b03f:	nop
   5b040:	mov    rax,QWORD PTR [rsp+0x8]
   5b045:	mov    ecx,DWORD PTR [rax+r14*4]
   5b049:	cmp    DWORD PTR [rax+r13*4],ecx
   5b04d:	mov    ecx,0x1
   5b052:	movzx  eax,BYTE PTR [rsp]
   5b056:	cmovne eax,ecx
   5b059:	mov    BYTE PTR [rsp],al
   5b05c:	add    r14,0x1
   5b060:	mov    r15,QWORD PTR [r12+r14*8]
   5b064:	test   r15,r15
   5b067:	je     5b0a0 <_obstack_memory_used@@Base+0xe420>
   5b069:	mov    rdx,rbx
   5b06c:	mov    rsi,rbp
   5b06f:	mov    rdi,r15
   5b072:	call   9e50 <strncmp@plt>
   5b077:	test   eax,eax
   5b079:	jne    5b05c <_obstack_memory_used@@Base+0xe3dc>
   5b07b:	mov    rdi,r15
   5b07e:	call   a060 <strlen@plt>
   5b083:	cmp    rbx,rax
   5b086:	je     5b0e0 <_obstack_memory_used@@Base+0xe460>
   5b088:	cmp    r13,0xffffffffffffffff
   5b08c:	jne    5b040 <_obstack_memory_used@@Base+0xe3c0>
   5b08e:	mov    r13,r14
   5b091:	add    r14,0x1
   5b095:	mov    r15,QWORD PTR [r12+r14*8]
   5b099:	test   r15,r15
   5b09c:	jne    5b069 <_obstack_memory_used@@Base+0xe3e9>
   5b09e:	xchg   ax,ax
   5b0a0:	cmp    BYTE PTR [rsp],0x0
   5b0a4:	jne    5b0e5 <_obstack_memory_used@@Base+0xe465>
   5b0a6:	cmp    r13,0xffffffffffffffff
   5b0aa:	je     5b25b <_obstack_memory_used@@Base+0xe5db>
   5b0b0:	mov    rax,QWORD PTR [rsp+0x58]
   5b0b5:	sub    rax,QWORD PTR fs:0x28
   5b0be:	jne    5b282 <_obstack_memory_used@@Base+0xe602>
   5b0c4:	add    rsp,0x68
   5b0c8:	mov    rax,r13
   5b0cb:	pop    rbx
   5b0cc:	pop    rbp
   5b0cd:	pop    r12
   5b0cf:	pop    r13
   5b0d1:	pop    r14
   5b0d3:	pop    r15
   5b0d5:	ret    
   5b0d6:	cs nop WORD PTR [rax+rax*1+0x0]
   5b0e0:	mov    r13,r14
   5b0e3:	jmp    5b0b0 <_obstack_memory_used@@Base+0xe430>
   5b0e5:	mov    edx,0x5
   5b0ea:	lea    rsi,[rip+0x11f17]        # 6d008 <_obstack_memory_used@@Base+0x20388>
   5b0f1:	xor    edi,edi
   5b0f3:	call   a040 <dcgettext@plt>
   5b0f8:	mov    r13,rax
   5b0fb:	mov    rsi,QWORD PTR [rsp+0x10]
   5b100:	lea    rbx,[rip+0x20f39]        # 7c040 <_obstack_memory_used@@Base+0x2f3c0>
   5b107:	mov    edi,0x1
   5b10c:	xor    r14d,r14d
   5b10f:	mov    rdx,rbx
   5b112:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   5b117:	mov    rsi,rbp
   5b11a:	lea    rdx,[rsp+0x20]
   5b11f:	xor    edi,edi
   5b121:	mov    QWORD PTR [rsp+0x20],0x8
   5b12a:	mov    r15,rax
   5b12d:	mov    QWORD PTR [rsp+0x28],0x0
   5b136:	mov    QWORD PTR [rsp+0x30],0x0
   5b13f:	mov    QWORD PTR [rsp+0x38],0x0
   5b148:	mov    QWORD PTR [rsp+0x40],0x0
   5b151:	mov    QWORD PTR [rsp+0x48],0x0
   5b15a:	mov    QWORD PTR [rsp+0x50],0x0
   5b163:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   5b168:	mov    r8,r15
   5b16b:	mov    rdx,r13
   5b16e:	xor    esi,esi
   5b170:	mov    rcx,rax
   5b173:	xor    edi,edi
   5b175:	xor    eax,eax
   5b177:	call   a640 <error@plt>
   5b17c:	mov    rbp,QWORD PTR [rip+0x20e65]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   5b183:	mov    edx,0x5
   5b188:	xor    edi,edi
   5b18a:	lea    rsi,[rip+0x11e3a]        # 6cfcb <_obstack_memory_used@@Base+0x2034b>
   5b191:	mov    r13,QWORD PTR [rbp+0x0]
   5b195:	call   a040 <dcgettext@plt>
   5b19a:	mov    rdi,rax
   5b19d:	mov    rsi,r13
   5b1a0:	lea    r13,[rip+0x11e39]        # 6cfe0 <_obstack_memory_used@@Base+0x20360>
   5b1a7:	call   a2e0 <fputs_unlocked@plt>
   5b1ac:	mov    rsi,QWORD PTR [r12]
   5b1b0:	mov    r15,QWORD PTR [rsp+0x8]
   5b1b5:	xor    r9d,r9d
   5b1b8:	test   rsi,rsi
   5b1bb:	jne    5b1f4 <_obstack_memory_used@@Base+0xe574>
   5b1bd:	jmp    5b22f <_obstack_memory_used@@Base+0xe5af>
   5b1bf:	nop
   5b1c0:	mov    rdx,rbx
   5b1c3:	xor    edi,edi
   5b1c5:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   5b1ca:	mov    rdi,QWORD PTR [rbp+0x0]
   5b1ce:	mov    rdx,r13
   5b1d1:	mov    esi,0x1
   5b1d6:	mov    rcx,rax
   5b1d9:	xor    eax,eax
   5b1db:	call   a840 <__fprintf_chk@plt>
   5b1e0:	mov    r9,r15
   5b1e3:	add    r14,0x1
   5b1e7:	add    r15,0x4
   5b1eb:	mov    rsi,QWORD PTR [r12+r14*8]
   5b1ef:	test   rsi,rsi
   5b1f2:	je     5b22f <_obstack_memory_used@@Base+0xe5af>
   5b1f4:	test   r14,r14
   5b1f7:	je     5b1c0 <_obstack_memory_used@@Base+0xe540>
   5b1f9:	mov    eax,DWORD PTR [r9]
   5b1fc:	cmp    DWORD PTR [r15],eax
   5b1ff:	jne    5b1c0 <_obstack_memory_used@@Base+0xe540>
   5b201:	mov    rdx,rbx
   5b204:	xor    edi,edi
   5b206:	mov    QWORD PTR [rsp],r9
   5b20a:	call   5ae20 <_obstack_memory_used@@Base+0xe1a0>
   5b20f:	mov    rdi,QWORD PTR [rbp+0x0]
   5b213:	mov    esi,0x1
   5b218:	lea    rdx,[rip+0x11dc9]        # 6cfe8 <_obstack_memory_used@@Base+0x20368>
   5b21f:	mov    rcx,rax
   5b222:	xor    eax,eax
   5b224:	call   a840 <__fprintf_chk@plt>
   5b229:	mov    r9,QWORD PTR [rsp]
   5b22d:	jmp    5b1e3 <_obstack_memory_used@@Base+0xe563>
   5b22f:	mov    rdi,QWORD PTR [rbp+0x0]
   5b233:	mov    rax,QWORD PTR [rdi+0x28]
   5b237:	cmp    rax,QWORD PTR [rdi+0x30]
   5b23b:	jae    5b276 <_obstack_memory_used@@Base+0xe5f6>
   5b23d:	lea    rdx,[rax+0x1]
   5b241:	mov    QWORD PTR [rdi+0x28],rdx
   5b245:	mov    BYTE PTR [rax],0xa
   5b248:	mov    rax,QWORD PTR [rsp+0x18]
   5b24d:	mov    r13,0xffffffffffffffff
   5b254:	call   rax
   5b256:	jmp    5b0b0 <_obstack_memory_used@@Base+0xe430>
   5b25b:	mov    edx,0x5
   5b260:	lea    rsi,[rip+0x11d86]        # 6cfed <_obstack_memory_used@@Base+0x2036d>
   5b267:	xor    edi,edi
   5b269:	call   a040 <dcgettext@plt>
   5b26e:	mov    r13,rax
   5b271:	jmp    5b0fb <_obstack_memory_used@@Base+0xe47b>
   5b276:	mov    esi,0xa
   5b27b:	call   a120 <__overflow@plt>
   5b280:	jmp    5b248 <_obstack_memory_used@@Base+0xe5c8>
   5b282:	call   a0a0 <__stack_chk_fail@plt>
   5b287:	nop    WORD PTR [rax+rax*1+0x0]
   5b290:	endbr64 
   5b294:	push   r12
   5b296:	xor    esi,esi
   5b298:	xor    edi,edi
   5b29a:	push   rbp
   5b29b:	sub    rsp,0x118
   5b2a2:	mov    rax,QWORD PTR fs:0x28
   5b2ab:	mov    QWORD PTR [rsp+0x108],rax
   5b2b3:	xor    eax,eax
   5b2b5:	call   a5c0 <setlocale@plt>
   5b2ba:	test   rax,rax
   5b2bd:	je     5b348 <_obstack_memory_used@@Base+0xe6c8>
   5b2c3:	mov    rdi,rax
   5b2c6:	mov    rbp,rax
   5b2c9:	xor    r12d,r12d
   5b2cc:	call   a060 <strlen@plt>
   5b2d1:	cmp    rax,0x100
   5b2d7:	jbe    5b300 <_obstack_memory_used@@Base+0xe680>
   5b2d9:	mov    rax,QWORD PTR [rsp+0x108]
   5b2e1:	sub    rax,QWORD PTR fs:0x28
   5b2ea:	jne    5b34d <_obstack_memory_used@@Base+0xe6cd>
   5b2ec:	add    rsp,0x118
   5b2f3:	mov    eax,r12d
   5b2f6:	pop    rbp
   5b2f7:	pop    r12
   5b2f9:	ret    
   5b2fa:	nop    WORD PTR [rax+rax*1+0x0]
   5b300:	mov    rdi,rsp
   5b303:	lea    rdx,[rax+0x1]
   5b307:	mov    ecx,0x101
   5b30c:	mov    rsi,rbp
   5b30f:	call   a390 <__memcpy_chk@plt>
   5b314:	cmp    BYTE PTR [rsp],0x43
   5b318:	mov    rdi,rax
   5b31b:	je     5b338 <_obstack_memory_used@@Base+0xe6b8>
   5b31d:	lea    rsi,[rip+0x11d01]        # 6d025 <_obstack_memory_used@@Base+0x203a5>
   5b324:	call   a320 <strcmp@plt>
   5b329:	test   eax,eax
   5b32b:	setne  r12b
   5b32f:	jmp    5b2d9 <_obstack_memory_used@@Base+0xe659>
   5b331:	nop    DWORD PTR [rax+0x0]
   5b338:	cmp    BYTE PTR [rsp+0x1],0x0
   5b33d:	je     5b2d9 <_obstack_memory_used@@Base+0xe659>
   5b33f:	jmp    5b31d <_obstack_memory_used@@Base+0xe69d>
   5b341:	nop    DWORD PTR [rax+0x0]
   5b348:	xor    r12d,r12d
   5b34b:	jmp    5b2d9 <_obstack_memory_used@@Base+0xe659>
   5b34d:	call   a0a0 <__stack_chk_fail@plt>
   5b352:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5b35d:	nop    DWORD PTR [rax]
   5b360:	push   r15
   5b362:	mov    r15,rsi
   5b365:	push   r14
   5b367:	push   r13
   5b369:	push   r12
   5b36b:	push   rbp
   5b36c:	mov    rbp,rsi
   5b36f:	push   rbx
   5b370:	mov    rbx,rdi
   5b373:	sub    rsp,0x58
   5b377:	mov    rax,QWORD PTR fs:0x28
   5b380:	mov    QWORD PTR [rsp+0x48],rax
   5b385:	mov    rax,QWORD PTR [rdi+0x28]
   5b389:	sub    rbp,rax
   5b38c:	cmp    rax,rsi
   5b38f:	jle    5b3e8 <_obstack_memory_used@@Base+0xe768>
   5b391:	cmp    DWORD PTR [rdi+0x90],0x1
   5b398:	jle    5b3a2 <_obstack_memory_used@@Base+0xe722>
   5b39a:	mov    QWORD PTR [rdi+0x20],0x0
   5b3a2:	mov    rax,QWORD PTR [rbx+0x50]
   5b3a6:	cmp    BYTE PTR [rbx+0x8b],0x0
   5b3ad:	mov    QWORD PTR [rbx+0x30],0x0
   5b3b5:	mov    rbp,r15
   5b3b8:	mov    QWORD PTR [rbx+0x28],0x0
   5b3c0:	mov    QWORD PTR [rbx+0x58],rax
   5b3c4:	mov    rax,QWORD PTR [rbx+0x60]
   5b3c8:	mov    QWORD PTR [rbx+0x38],0x0
   5b3d0:	mov    QWORD PTR [rbx+0x68],rax
   5b3d4:	mov    BYTE PTR [rbx+0x8c],0x0
   5b3db:	mov    DWORD PTR [rbx+0x70],0x6
   5b3e2:	je     5b4b0 <_obstack_memory_used@@Base+0xe830>
   5b3e8:	test   rbp,rbp
   5b3eb:	je     5b449 <_obstack_memory_used@@Base+0xe7c9>
   5b3ed:	mov    rax,QWORD PTR [rbx+0x38]
   5b3f1:	movzx  edx,BYTE PTR [rbx+0x8c]
   5b3f8:	cmp    rbp,rax
   5b3fb:	jge    5b510 <_obstack_memory_used@@Base+0xe890>
   5b401:	test   dl,dl
   5b403:	jne    5b618 <_obstack_memory_used@@Base+0xe998>
   5b409:	xor    edx,edx
   5b40b:	lea    rsi,[rbp-0x1]
   5b40f:	mov    rdi,rbx
   5b412:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5b417:	cmp    DWORD PTR [rbx+0x90],0x1
   5b41e:	mov    DWORD PTR [rbx+0x70],eax
   5b421:	jg     5b4c0 <_obstack_memory_used@@Base+0xe840>
   5b427:	cmp    BYTE PTR [rbx+0x8b],0x0
   5b42e:	jne    5b668 <_obstack_memory_used@@Base+0xe9e8>
   5b434:	sub    QWORD PTR [rbx+0x30],rbp
   5b438:	sub    QWORD PTR [rbx+0x38],rbp
   5b43c:	cmp    BYTE PTR [rbx+0x8b],0x0
   5b443:	jne    5b449 <_obstack_memory_used@@Base+0xe7c9>
   5b445:	add    QWORD PTR [rbx+0x8],rbp
   5b449:	mov    rax,QWORD PTR [rbx+0x58]
   5b44d:	sub    QWORD PTR [rbx+0x68],rbp
   5b451:	mov    QWORD PTR [rbx+0x28],r15
   5b455:	sub    rax,rbp
   5b458:	cmp    DWORD PTR [rbx+0x90],0x1
   5b45f:	mov    QWORD PTR [rbx+0x58],rax
   5b463:	jle    5b4f0 <_obstack_memory_used@@Base+0xe870>
   5b469:	cmp    BYTE PTR [rbx+0x88],0x0
   5b470:	mov    rdi,rbx
   5b473:	je     5b4e0 <_obstack_memory_used@@Base+0xe860>
   5b475:	call   4cf50 <_obstack_memory_used@@Base+0x2d0>
   5b47a:	test   eax,eax
   5b47c:	jne    5b488 <_obstack_memory_used@@Base+0xe808>
   5b47e:	mov    QWORD PTR [rbx+0x48],0x0
   5b486:	xor    eax,eax
   5b488:	mov    rdx,QWORD PTR [rsp+0x48]
   5b48d:	sub    rdx,QWORD PTR fs:0x28
   5b496:	jne    5bb51 <_obstack_memory_used@@Base+0xeed1>
   5b49c:	add    rsp,0x58
   5b4a0:	pop    rbx
   5b4a1:	pop    rbp
   5b4a2:	pop    r12
   5b4a4:	pop    r13
   5b4a6:	pop    r14
   5b4a8:	pop    r15
   5b4aa:	ret    
   5b4ab:	nop    DWORD PTR [rax+rax*1+0x0]
   5b4b0:	mov    rax,QWORD PTR [rbx]
   5b4b3:	mov    QWORD PTR [rbx+0x8],rax
   5b4b7:	jmp    5b3e8 <_obstack_memory_used@@Base+0xe768>
   5b4bc:	nop    DWORD PTR [rax+0x0]
   5b4c0:	mov    rdx,QWORD PTR [rbx+0x30]
   5b4c4:	mov    rdi,QWORD PTR [rbx+0x10]
   5b4c8:	sub    rdx,rbp
   5b4cb:	lea    rsi,[rdi+rbp*4]
   5b4cf:	shl    rdx,0x2
   5b4d3:	call   a630 <memmove@plt>
   5b4d8:	jmp    5b427 <_obstack_memory_used@@Base+0xe7a7>
   5b4dd:	nop    DWORD PTR [rax]
   5b4e0:	call   4cd50 <_obstack_memory_used@@Base+0xd0>
   5b4e5:	jmp    5b47e <_obstack_memory_used@@Base+0xe7fe>
   5b4e7:	nop    WORD PTR [rax+rax*1+0x0]
   5b4f0:	cmp    BYTE PTR [rbx+0x8b],0x0
   5b4f7:	jne    5b8c0 <_obstack_memory_used@@Base+0xec40>
   5b4fd:	mov    QWORD PTR [rbx+0x30],rax
   5b501:	jmp    5b47e <_obstack_memory_used@@Base+0xe7fe>
   5b506:	cs nop WORD PTR [rax+rax*1+0x0]
   5b510:	mov    rcx,QWORD PTR [rbx+0x30]
   5b514:	mov    QWORD PTR [rsp+0x8],rcx
   5b519:	test   dl,dl
   5b51b:	jne    5ba6d <_obstack_memory_used@@Base+0xeded>
   5b521:	movsxd rdx,DWORD PTR [rbx+0x90]
   5b528:	mov    rsi,QWORD PTR [rbx+0x28]
   5b52c:	mov    QWORD PTR [rbx+0x30],0x0
   5b534:	cmp    edx,0x1
   5b537:	jle    5b930 <_obstack_memory_used@@Base+0xecb0>
   5b53d:	cmp    BYTE PTR [rbx+0x89],0x0
   5b544:	jne    5b7d8 <_obstack_memory_used@@Base+0xeb58>
   5b54a:	lea    r12,[rax+rsi*1]
   5b54e:	cmp    r15,r12
   5b551:	jle    5ba47 <_obstack_memory_used@@Base+0xedc7>
   5b557:	lea    rax,[rbx+0x20]
   5b55b:	mov    QWORD PTR [rsp+0x10],rax
   5b560:	lea    rax,[rsp+0x34]
   5b565:	mov    QWORD PTR [rsp+0x18],rax
   5b56a:	jmp    5b5cc <_obstack_memory_used@@Base+0xe94c>
   5b56c:	nop    DWORD PTR [rax+0x0]
   5b570:	test   r14,r14
   5b573:	je     5b604 <_obstack_memory_used@@Base+0xe984>
   5b579:	mov    QWORD PTR [rsp+0x28],rax
   5b57e:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   5b583:	mov    rdx,QWORD PTR [rsp+0x28]
   5b588:	test   al,al
   5b58a:	je     5b9cd <_obstack_memory_used@@Base+0xed4d>
   5b590:	test   rdx,rdx
   5b593:	je     5ba66 <_obstack_memory_used@@Base+0xede6>
   5b599:	test   r14,r14
   5b59c:	je     5ba66 <_obstack_memory_used@@Base+0xede6>
   5b5a2:	mov    rax,QWORD PTR [rbx]
   5b5a5:	movzx  ecx,BYTE PTR [rax+r12*1]
   5b5aa:	mov    rax,QWORD PTR [rsp+0x20]
   5b5af:	mov    edx,0x1
   5b5b4:	mov    QWORD PTR [rbx+0x20],rax
   5b5b8:	nop    DWORD PTR [rax+rax*1+0x0]
   5b5c0:	add    r12,rdx
   5b5c3:	cmp    r15,r12
   5b5c6:	jle    5b9dc <_obstack_memory_used@@Base+0xed5c>
   5b5cc:	mov    r14,QWORD PTR [rbx+0x50]
   5b5d0:	mov    r13,QWORD PTR [rbx]
   5b5d3:	mov    rax,QWORD PTR [rbx+0x20]
   5b5d7:	mov    rcx,QWORD PTR [rsp+0x10]
   5b5dc:	mov    rdi,QWORD PTR [rsp+0x18]
   5b5e1:	sub    r14,r12
   5b5e4:	add    r13,r12
   5b5e7:	mov    rdx,r14
   5b5ea:	mov    rsi,r13
   5b5ed:	mov    QWORD PTR [rsp+0x20],rax
   5b5f2:	call   a0c0 <mbrtowc@plt>
   5b5f7:	mov    rdx,rax
   5b5fa:	cmp    rax,0xfffffffffffffffd
   5b5fe:	ja     5b570 <_obstack_memory_used@@Base+0xe8f0>
   5b604:	lea    rax,[rdx-0x1]
   5b608:	cmp    rax,0xfffffffffffffffc
   5b60c:	ja     5b590 <_obstack_memory_used@@Base+0xe910>
   5b60e:	mov    ecx,DWORD PTR [rsp+0x34]
   5b612:	jmp    5b5c0 <_obstack_memory_used@@Base+0xe940>
   5b614:	nop    DWORD PTR [rax+0x0]
   5b618:	mov    r14,QWORD PTR [rbx+0x30]
   5b61c:	mov    r13,QWORD PTR [rbx+0x18]
   5b620:	xor    esi,esi
   5b622:	mov    rcx,r14
   5b625:	jmp    5b63f <_obstack_memory_used@@Base+0xe9bf>
   5b627:	nop    WORD PTR [rax+rax*1+0x0]
   5b630:	jle    5b990 <_obstack_memory_used@@Base+0xed10>
   5b636:	lea    rsi,[rax+0x1]
   5b63a:	cmp    rsi,rcx
   5b63d:	jge    5b688 <_obstack_memory_used@@Base+0xea08>
   5b63f:	lea    rdx,[rsi+rcx*1]
   5b643:	mov    rax,rdx
   5b646:	shr    rax,0x3f
   5b64a:	add    rax,rdx
   5b64d:	sar    rax,1
   5b650:	mov    rdx,QWORD PTR [r13+rax*8+0x0]
   5b655:	mov    r9,rax
   5b658:	cmp    rbp,rdx
   5b65b:	jge    5b630 <_obstack_memory_used@@Base+0xe9b0>
   5b65d:	mov    rcx,rax
   5b660:	jmp    5b63a <_obstack_memory_used@@Base+0xe9ba>
   5b662:	nop    WORD PTR [rax+rax*1+0x0]
   5b668:	mov    rdi,QWORD PTR [rbx+0x8]
   5b66c:	mov    rdx,QWORD PTR [rbx+0x30]
   5b670:	lea    rsi,[rdi+rbp*1]
   5b674:	sub    rdx,rbp
   5b677:	call   a630 <memmove@plt>
   5b67c:	jmp    5b434 <_obstack_memory_used@@Base+0xe7b4>
   5b681:	nop    DWORD PTR [rax+0x0]
   5b688:	lea    r12,[rax+0x1]
   5b68c:	cmp    rbp,rdx
   5b68f:	jle    5b8b0 <_obstack_memory_used@@Base+0xec30>
   5b695:	xor    edx,edx
   5b697:	mov    rsi,r9
   5b69a:	mov    rdi,rbx
   5b69d:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5b6a2:	mov    DWORD PTR [rbx+0x70],eax
   5b6a5:	cmp    rbp,r12
   5b6a8:	jne    5b728 <_obstack_memory_used@@Base+0xeaa8>
   5b6aa:	cmp    rbp,r14
   5b6ad:	jge    5b728 <_obstack_memory_used@@Base+0xeaa8>
   5b6af:	cmp    rbp,QWORD PTR [r13+r12*8+0x0]
   5b6b4:	jne    5b728 <_obstack_memory_used@@Base+0xeaa8>
   5b6b6:	mov    rdi,QWORD PTR [rbx+0x10]
   5b6ba:	sub    r14,rbp
   5b6bd:	lea    rdx,[r14*4+0x0]
   5b6c5:	lea    rsi,[rdi+rbp*4]
   5b6c9:	call   a630 <memmove@plt>
   5b6ce:	mov    rdi,QWORD PTR [rbx+0x8]
   5b6d2:	mov    rdx,QWORD PTR [rbx+0x30]
   5b6d6:	lea    rsi,[rdi+rbp*1]
   5b6da:	sub    rdx,rbp
   5b6dd:	call   a630 <memmove@plt>
   5b6e2:	mov    rax,QWORD PTR [rbx+0x30]
   5b6e6:	sub    QWORD PTR [rbx+0x38],rbp
   5b6ea:	sub    rax,rbp
   5b6ed:	mov    QWORD PTR [rbx+0x30],rax
   5b6f1:	test   rax,rax
   5b6f4:	jle    5b43c <_obstack_memory_used@@Base+0xe7bc>
   5b6fa:	mov    rcx,QWORD PTR [rbx+0x18]
   5b6fe:	xor    eax,eax
   5b700:	lea    rsi,[rcx+rbp*8]
   5b704:	nop    DWORD PTR [rax+0x0]
   5b708:	mov    rdx,QWORD PTR [rsi+rax*8]
   5b70c:	sub    rdx,rbp
   5b70f:	mov    QWORD PTR [rcx+rax*8],rdx
   5b713:	add    rax,0x1
   5b717:	cmp    rax,QWORD PTR [rbx+0x30]
   5b71b:	jl     5b708 <_obstack_memory_used@@Base+0xea88>
   5b71d:	jmp    5b43c <_obstack_memory_used@@Base+0xe7bc>
   5b722:	nop    WORD PTR [rax+rax*1+0x0]
   5b728:	mov    rax,QWORD PTR [rbx+0x50]
   5b72c:	mov    BYTE PTR [rbx+0x8c],0x0
   5b733:	add    rax,rbp
   5b736:	sub    rax,r15
   5b739:	mov    QWORD PTR [rbx+0x58],rax
   5b73d:	mov    rax,QWORD PTR [rbx+0x60]
   5b741:	add    rax,rbp
   5b744:	sub    rax,r15
   5b747:	mov    QWORD PTR [rbx+0x68],rax
   5b74b:	test   r12,r12
   5b74e:	jg     5b75e <_obstack_memory_used@@Base+0xeade>
   5b750:	jmp    5b765 <_obstack_memory_used@@Base+0xeae5>
   5b752:	nop    WORD PTR [rax+rax*1+0x0]
   5b758:	sub    r12,0x1
   5b75c:	je     5b765 <_obstack_memory_used@@Base+0xeae5>
   5b75e:	cmp    rbp,QWORD PTR [r13+r12*8-0x8]
   5b763:	je     5b758 <_obstack_memory_used@@Base+0xead8>
   5b765:	cmp    r14,r12
   5b768:	jle    5b99c <_obstack_memory_used@@Base+0xed1c>
   5b76e:	mov    rax,QWORD PTR [rbx+0x10]
   5b772:	jmp    5b785 <_obstack_memory_used@@Base+0xeb05>
   5b774:	nop    DWORD PTR [rax+0x0]
   5b778:	add    r12,0x1
   5b77c:	cmp    r14,r12
   5b77f:	je     5b9a8 <_obstack_memory_used@@Base+0xed28>
   5b785:	cmp    DWORD PTR [rax+r12*4],0xffffffff
   5b78a:	je     5b778 <_obstack_memory_used@@Base+0xeaf8>
   5b78c:	mov    r12,QWORD PTR [r13+r12*8+0x0]
   5b791:	sub    r12,rbp
   5b794:	mov    QWORD PTR [rbx+0x30],r12
   5b798:	test   r12,r12
   5b79b:	je     5b7ca <_obstack_memory_used@@Base+0xeb4a>
   5b79d:	jle    5b7b5 <_obstack_memory_used@@Base+0xeb35>
   5b79f:	mov    rdi,QWORD PTR [rbx+0x10]
   5b7a3:	lea    rdx,[r12*4+0x0]
   5b7ab:	mov    esi,0xff
   5b7b0:	call   a1b0 <memset@plt>
   5b7b5:	mov    rdi,QWORD PTR [rbx+0x8]
   5b7b9:	mov    rdx,r12
   5b7bc:	mov    esi,0xff
   5b7c1:	call   a1b0 <memset@plt>
   5b7c6:	mov    r12,QWORD PTR [rbx+0x30]
   5b7ca:	mov    QWORD PTR [rbx+0x38],r12
   5b7ce:	jmp    5b43c <_obstack_memory_used@@Base+0xe7bc>
   5b7d3:	nop    DWORD PTR [rax+rax*1+0x0]
   5b7d8:	mov    rcx,QWORD PTR [rbx]
   5b7db:	mov    rdi,rbp
   5b7de:	sub    rdi,rdx
   5b7e1:	lea    r8,[rcx+rsi*1]
   5b7e5:	lea    rdx,[r8+rdi*1]
   5b7e9:	lea    r14,[r8+rbp*1-0x1]
   5b7ee:	cmp    rcx,rdx
   5b7f1:	cmovb  rcx,rdx
   5b7f5:	cmp    rcx,r14
   5b7f8:	jbe    5b80d <_obstack_memory_used@@Base+0xeb8d>
   5b7fa:	jmp    5b54a <_obstack_memory_used@@Base+0xe8ca>
   5b7ff:	nop
   5b800:	sub    r14,0x1
   5b804:	cmp    rcx,r14
   5b807:	ja     5b54a <_obstack_memory_used@@Base+0xe8ca>
   5b80d:	movzx  edx,BYTE PTR [r14]
   5b811:	and    edx,0xffffffc0
   5b814:	cmp    dl,0x80
   5b817:	je     5b800 <_obstack_memory_used@@Base+0xeb80>
   5b819:	mov    rdx,QWORD PTR [rbx+0x58]
   5b81d:	mov    rcx,QWORD PTR [rbx+0x78]
   5b821:	mov    r12,r14
   5b824:	add    rdx,r8
   5b827:	sub    rdx,r14
   5b82a:	test   rcx,rcx
   5b82d:	jne    5bb19 <_obstack_memory_used@@Base+0xee99>
   5b833:	lea    rcx,[rsp+0x38]
   5b838:	lea    rdi,[rsp+0x34]
   5b83d:	mov    rsi,r12
   5b840:	mov    QWORD PTR [rsp+0x10],r8
   5b845:	mov    QWORD PTR [rsp+0x38],0x0
   5b84e:	mov    QWORD PTR [rsp+0x18],rdx
   5b853:	call   a0c0 <mbrtowc@plt>
   5b858:	mov    r8,QWORD PTR [rsp+0x10]
   5b85d:	mov    r13,rax
   5b860:	lea    rax,[r8+rbp*1]
   5b864:	sub    rax,r14
   5b867:	mov    rcx,rax
   5b86a:	cmp    r13,0xfffffffffffffffd
   5b86e:	jbe    5ba95 <_obstack_memory_used@@Base+0xee15>
   5b874:	mov    rdx,QWORD PTR [rsp+0x18]
   5b879:	test   rdx,rdx
   5b87c:	je     5ba95 <_obstack_memory_used@@Base+0xee15>
   5b882:	mov    QWORD PTR [rsp+0x10],rax
   5b887:	call   5b290 <_obstack_memory_used@@Base+0xe610>
   5b88c:	mov    rcx,QWORD PTR [rsp+0x10]
   5b891:	test   al,al
   5b893:	je     5bafe <_obstack_memory_used@@Base+0xee7e>
   5b899:	mov    rsi,QWORD PTR [rbx+0x28]
   5b89d:	mov    rax,QWORD PTR [rbx+0x38]
   5b8a1:	jmp    5b54a <_obstack_memory_used@@Base+0xe8ca>
   5b8a6:	cs nop WORD PTR [rax+rax*1+0x0]
   5b8b0:	mov    r12,rax
   5b8b3:	lea    r9,[rax-0x1]
   5b8b7:	jmp    5b695 <_obstack_memory_used@@Base+0xea15>
   5b8bc:	nop    DWORD PTR [rax+0x0]
   5b8c0:	cmp    BYTE PTR [rbx+0x88],0x0
   5b8c7:	jne    5b9c0 <_obstack_memory_used@@Base+0xed40>
   5b8cd:	mov    rcx,QWORD PTR [rbx+0x78]
   5b8d1:	test   rcx,rcx
   5b8d4:	je     5b47e <_obstack_memory_used@@Base+0xe7fe>
   5b8da:	mov    rdx,QWORD PTR [rbx+0x40]
   5b8de:	cmp    rax,rdx
   5b8e1:	cmovg  rax,rdx
   5b8e5:	mov    rdx,QWORD PTR [rbx+0x30]
   5b8e9:	cmp    rax,rdx
   5b8ec:	jg     5b900 <_obstack_memory_used@@Base+0xec80>
   5b8ee:	jmp    5baf6 <_obstack_memory_used@@Base+0xee76>
   5b8f3:	nop    DWORD PTR [rax+rax*1+0x0]
   5b8f8:	mov    r15,QWORD PTR [rbx+0x28]
   5b8fc:	mov    rcx,QWORD PTR [rbx+0x78]
   5b900:	mov    rsi,QWORD PTR [rbx]
   5b903:	add    rsi,rdx
   5b906:	movzx  esi,BYTE PTR [rsi+r15*1]
   5b90b:	movzx  esi,BYTE PTR [rcx+rsi*1]
   5b90f:	mov    rcx,QWORD PTR [rbx+0x8]
   5b913:	mov    BYTE PTR [rcx+rdx*1],sil
   5b917:	add    rdx,0x1
   5b91b:	cmp    rax,rdx
   5b91e:	jne    5b8f8 <_obstack_memory_used@@Base+0xec78>
   5b920:	mov    QWORD PTR [rbx+0x30],rax
   5b924:	mov    QWORD PTR [rbx+0x38],rax
   5b928:	jmp    5b47e <_obstack_memory_used@@Base+0xe7fe>
   5b92d:	nop    DWORD PTR [rax]
   5b930:	mov    rax,QWORD PTR [rbx]
   5b933:	add    rax,rbp
   5b936:	movzx  ecx,BYTE PTR [rsi+rax*1-0x1]
   5b93b:	mov    rax,QWORD PTR [rbx+0x78]
   5b93f:	mov    QWORD PTR [rbx+0x38],0x0
   5b947:	test   rax,rax
   5b94a:	je     5b950 <_obstack_memory_used@@Base+0xecd0>
   5b94c:	movzx  ecx,BYTE PTR [rax+rcx*1]
   5b950:	mov    rdx,QWORD PTR [rbx+0x80]
   5b957:	movzx  eax,cl
   5b95a:	sar    rax,0x6
   5b95e:	mov    rax,QWORD PTR [rdx+rax*8]
   5b962:	mov    edx,0x1
   5b967:	shr    rax,cl
   5b96a:	test   al,0x1
   5b96c:	jne    5b988 <_obstack_memory_used@@Base+0xed08>
   5b96e:	xor    edx,edx
   5b970:	cmp    cl,0xa
   5b973:	jne    5b988 <_obstack_memory_used@@Base+0xed08>
   5b975:	xor    edx,edx
   5b977:	cmp    BYTE PTR [rbx+0x8d],0x0
   5b97e:	setne  dl
   5b981:	add    edx,edx
   5b983:	nop    DWORD PTR [rax+rax*1+0x0]
   5b988:	mov    DWORD PTR [rbx+0x70],edx
   5b98b:	jmp    5b43c <_obstack_memory_used@@Base+0xe7bc>
   5b990:	mov    r12,rax
   5b993:	sub    r9,0x1
   5b997:	jmp    5b695 <_obstack_memory_used@@Base+0xea15>
   5b99c:	jne    5b78c <_obstack_memory_used@@Base+0xeb0c>
   5b9a2:	nop    WORD PTR [rax+rax*1+0x0]
   5b9a8:	mov    QWORD PTR [rbx+0x30],0x0
   5b9b0:	xor    r12d,r12d
   5b9b3:	jmp    5b7ca <_obstack_memory_used@@Base+0xeb4a>
   5b9b8:	nop    DWORD PTR [rax+rax*1+0x0]
   5b9c0:	mov    rdi,rbx
   5b9c3:	call   4d5e0 <_obstack_memory_used@@Base+0x960>
   5b9c8:	jmp    5b47e <_obstack_memory_used@@Base+0xe7fe>
   5b9cd:	movzx  ecx,BYTE PTR [r13+0x0]
   5b9d2:	mov    edx,0x1
   5b9d7:	jmp    5b5c0 <_obstack_memory_used@@Base+0xe940>
   5b9dc:	mov    rax,r12
   5b9df:	sub    rax,r15
   5b9e2:	mov    QWORD PTR [rbx+0x30],rax
   5b9e6:	cmp    ecx,0xffffffff
   5b9e9:	je     5ba51 <_obstack_memory_used@@Base+0xedd1>
   5b9eb:	cmp    BYTE PTR [rbx+0x8e],0x0
   5b9f2:	jne    5bad0 <_obstack_memory_used@@Base+0xee50>
   5b9f8:	xor    eax,eax
   5b9fa:	cmp    ecx,0xa
   5b9fd:	jne    5ba0d <_obstack_memory_used@@Base+0xed8d>
   5b9ff:	xor    eax,eax
   5ba01:	cmp    BYTE PTR [rbx+0x8d],0x0
   5ba08:	setne  al
   5ba0b:	add    eax,eax
   5ba0d:	mov    r12,QWORD PTR [rbx+0x30]
   5ba11:	mov    DWORD PTR [rbx+0x70],eax
   5ba14:	test   r12,r12
   5ba17:	je     5b7ca <_obstack_memory_used@@Base+0xeb4a>
   5ba1d:	jle    5ba35 <_obstack_memory_used@@Base+0xedb5>
   5ba1f:	mov    rdi,QWORD PTR [rbx+0x10]
   5ba23:	lea    rdx,[r12*4+0x0]
   5ba2b:	mov    esi,0xff
   5ba30:	call   a1b0 <memset@plt>
   5ba35:	cmp    BYTE PTR [rbx+0x8b],0x0
   5ba3c:	je     5b7ca <_obstack_memory_used@@Base+0xeb4a>
   5ba42:	jmp    5b7b5 <_obstack_memory_used@@Base+0xeb35>
   5ba47:	mov    rax,r12
   5ba4a:	sub    rax,r15
   5ba4d:	mov    QWORD PTR [rbx+0x30],rax
   5ba51:	mov    rsi,QWORD PTR [rsp+0x8]
   5ba56:	xor    edx,edx
   5ba58:	mov    rdi,rbx
   5ba5b:	sub    rsi,0x1
   5ba5f:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5ba64:	jmp    5ba0d <_obstack_memory_used@@Base+0xed8d>
   5ba66:	xor    ecx,ecx
   5ba68:	jmp    5b5aa <_obstack_memory_used@@Base+0xe92a>
   5ba6d:	mov    rdx,QWORD PTR [rbx+0x50]
   5ba71:	mov    BYTE PTR [rbx+0x8c],0x0
   5ba78:	add    rdx,rbp
   5ba7b:	sub    rdx,r15
   5ba7e:	mov    QWORD PTR [rbx+0x58],rdx
   5ba82:	mov    rdx,QWORD PTR [rbx+0x60]
   5ba86:	add    rdx,rbp
   5ba89:	sub    rdx,r15
   5ba8c:	mov    QWORD PTR [rbx+0x68],rdx
   5ba90:	jmp    5b521 <_obstack_memory_used@@Base+0xe8a1>
   5ba95:	cmp    r13,rcx
   5ba98:	jb     5b899 <_obstack_memory_used@@Base+0xec19>
   5ba9e:	cmp    r13,0xfffffffffffffffd
   5baa2:	ja     5b899 <_obstack_memory_used@@Base+0xec19>
   5baa8:	sub    r13,rcx
   5baab:	mov    ecx,DWORD PTR [rsp+0x34]
   5baaf:	mov    QWORD PTR [rbx+0x20],0x0
   5bab7:	mov    QWORD PTR [rbx+0x30],r13
   5babb:	cmp    ecx,0xffffffff
   5babe:	jne    5b9eb <_obstack_memory_used@@Base+0xed6b>
   5bac4:	jmp    5b899 <_obstack_memory_used@@Base+0xec19>
   5bac9:	nop    DWORD PTR [rax+0x0]
   5bad0:	mov    edi,ecx
   5bad2:	mov    DWORD PTR [rsp+0x8],ecx
   5bad6:	call   a490 <iswalnum@plt>
   5badb:	test   eax,eax
   5badd:	jne    5baec <_obstack_memory_used@@Base+0xee6c>
   5badf:	mov    ecx,DWORD PTR [rsp+0x8]
   5bae3:	cmp    ecx,0x5f
   5bae6:	jne    5b9f8 <_obstack_memory_used@@Base+0xed78>
   5baec:	mov    eax,0x1
   5baf1:	jmp    5ba0d <_obstack_memory_used@@Base+0xed8d>
   5baf6:	mov    rax,rdx
   5baf9:	jmp    5b920 <_obstack_memory_used@@Base+0xeca0>
   5bafe:	movzx  eax,BYTE PTR [r12]
   5bb03:	mov    DWORD PTR [rsp+0x34],eax
   5bb07:	cmp    rcx,0x1
   5bb0b:	ja     5b899 <_obstack_memory_used@@Base+0xec19>
   5bb11:	mov    r13d,0x1
   5bb17:	jmp    5baa8 <_obstack_memory_used@@Base+0xee28>
   5bb19:	mov    eax,0x6
   5bb1e:	lea    rsi,[rsp+0x42]
   5bb23:	cmp    rdx,rax
   5bb26:	cmovle rax,rdx
   5bb2a:	lea    edi,[rax-0x1]
   5bb2d:	movsxd rax,edi
   5bb30:	test   edi,edi
   5bb32:	js     5bb49 <_obstack_memory_used@@Base+0xeec9>
   5bb34:	movzx  edi,BYTE PTR [r14+rax*1]
   5bb39:	movzx  edi,BYTE PTR [rcx+rdi*1]
   5bb3d:	mov    BYTE PTR [rsi+rax*1],dil
   5bb41:	sub    rax,0x1
   5bb45:	test   eax,eax
   5bb47:	jns    5bb34 <_obstack_memory_used@@Base+0xeeb4>
   5bb49:	mov    r12,rsi
   5bb4c:	jmp    5b833 <_obstack_memory_used@@Base+0xebb3>
   5bb51:	call   a0a0 <__stack_chk_fail@plt>
   5bb56:	cs nop WORD PTR [rax+rax*1+0x0]
   5bb60:	push   r15
   5bb62:	push   r14
   5bb64:	push   r13
   5bb66:	push   r12
   5bb68:	mov    r12,r9
   5bb6b:	push   rbp
   5bb6c:	mov    rbp,r8
   5bb6f:	push   rbx
   5bb70:	mov    rbx,rcx
   5bb73:	mov    ecx,0x20
   5bb78:	sub    rsp,0x238
   5bb7f:	mov    rax,QWORD PTR [rsp+0x278]
   5bb87:	mov    QWORD PTR [rsp+0x38],rdi
   5bb8c:	lea    r14,[rsp+0x120]
   5bb94:	mov    QWORD PTR [rsp+0x80],rsi
   5bb9c:	mov    rsi,rdi
   5bb9f:	mov    QWORD PTR [rsp+0x68],rdx
   5bba4:	mov    QWORD PTR [rsp+0xa0],rax
   5bbac:	mov    rax,QWORD PTR fs:0x28
   5bbb5:	mov    QWORD PTR [rsp+0x228],rax
   5bbbd:	xor    eax,eax
   5bbbf:	mov    rax,QWORD PTR [rdi]
   5bbc2:	mov    rdi,r14
   5bbc5:	mov    rdx,rax
   5bbc8:	mov    QWORD PTR [rsp+0x30],rax
   5bbcd:	xor    eax,eax
   5bbcf:	rep stos QWORD PTR es:[rdi],rax
   5bbd2:	mov    rcx,QWORD PTR [rsi+0x20]
   5bbd6:	mov    QWORD PTR [rsp+0x1b8],rdx
   5bbde:	mov    QWORD PTR [rsp+0x58],rcx
   5bbe3:	test   rcx,rcx
   5bbe6:	je     5bc0a <_obstack_memory_used@@Base+0xef8a>
   5bbe8:	movzx  edx,BYTE PTR [rsi+0x38]
   5bbec:	test   dl,0x8
   5bbef:	je     5c108 <_obstack_memory_used@@Base+0xf488>
   5bbf5:	cmp    rbx,r8
   5bbf8:	je     5c108 <_obstack_memory_used@@Base+0xf488>
   5bbfe:	and    edx,0x1
   5bc01:	cmove  rax,rcx
   5bc05:	mov    QWORD PTR [rsp+0x58],rax
   5bc0a:	mov    rax,QWORD PTR [rsp+0x38]
   5bc0f:	mov    QWORD PTR [rsp+0x90],0x0
   5bc1b:	mov    rdi,QWORD PTR [rax+0x28]
   5bc1f:	mov    rax,QWORD PTR [rax+0x30]
   5bc23:	mov    QWORD PTR [rsp+0x78],rdi
   5bc28:	cmp    rax,QWORD PTR [rsp+0x270]
   5bc30:	jae    5bc57 <_obstack_memory_used@@Base+0xefd7>
   5bc32:	mov    rsi,QWORD PTR [rsp+0x270]
   5bc3a:	lea    rdx,[rsi-0x1]
   5bc3e:	mov    rcx,rdx
   5bc41:	sub    rcx,rax
   5bc44:	sub    rax,rdx
   5bc47:	add    QWORD PTR [rsp+0x270],rax
   5bc4f:	mov    QWORD PTR [rsp+0x90],rcx
   5bc57:	mov    rsi,QWORD PTR [rsp+0x38]
   5bc5c:	cmp    QWORD PTR [rsi+0x10],0x0
   5bc61:	je     5cd50 <_obstack_memory_used@@Base+0x100d0>
   5bc67:	mov    rdi,QWORD PTR [rsp+0x30]
   5bc6c:	mov    rax,QWORD PTR [rdi+0x48]
   5bc70:	test   rax,rax
   5bc73:	je     5cd50 <_obstack_memory_used@@Base+0x100d0>
   5bc79:	mov    rdx,QWORD PTR [rdi+0x50]
   5bc7d:	test   rdx,rdx
   5bc80:	je     5cd50 <_obstack_memory_used@@Base+0x100d0>
   5bc86:	mov    rcx,QWORD PTR [rdi+0x58]
   5bc8a:	test   rcx,rcx
   5bc8d:	je     5cd50 <_obstack_memory_used@@Base+0x100d0>
   5bc93:	cmp    QWORD PTR [rdi+0x60],0x0
   5bc98:	je     5cd50 <_obstack_memory_used@@Base+0x100d0>
   5bc9e:	cmp    QWORD PTR [rax+0x10],0x0
   5bca3:	jne    5bcd8 <_obstack_memory_used@@Base+0xf058>
   5bca5:	cmp    QWORD PTR [rdx+0x10],0x0
   5bcaa:	jne    5bcd8 <_obstack_memory_used@@Base+0xf058>
   5bcac:	cmp    QWORD PTR [rcx+0x10],0x0
   5bcb1:	je     5bcb9 <_obstack_memory_used@@Base+0xf039>
   5bcb3:	cmp    BYTE PTR [rsi+0x38],0x0
   5bcb7:	js     5bcd8 <_obstack_memory_used@@Base+0xf058>
   5bcb9:	test   rbx,rbx
   5bcbc:	je     5bccf <_obstack_memory_used@@Base+0xf04f>
   5bcbe:	mov    DWORD PTR [rsp+0x54],0x1
   5bcc6:	test   rbp,rbp
   5bcc9:	jne    5cd58 <_obstack_memory_used@@Base+0x100d8>
   5bccf:	xor    ebp,ebp
   5bcd1:	xor    ebx,ebx
   5bcd3:	nop    DWORD PTR [rax+rax*1+0x0]
   5bcd8:	cmp    QWORD PTR [rsp+0x270],0x0
   5bce1:	mov    DWORD PTR [rsp+0x50],0x1
   5bce9:	je     5c0e7 <_obstack_memory_used@@Base+0xf467>
   5bcef:	mov    rax,QWORD PTR [rsp+0x38]
   5bcf4:	mov    r11,QWORD PTR [rsp+0x30]
   5bcf9:	mov    rdi,QWORD PTR [rsp+0x68]
   5bcfe:	mov    rax,QWORD PTR [rax+0x18]
   5bd02:	movsxd rcx,DWORD PTR [r11+0xb4]
   5bd09:	mov    QWORD PTR [rsp],rax
   5bd0d:	mov    rax,QWORD PTR [r11+0x10]
   5bd11:	mov    rdx,rcx
   5bd14:	mov    QWORD PTR [rsp+0x178],rdi
   5bd1c:	mov    QWORD PTR [rsp+0x8],rax
   5bd21:	add    rax,0x1
   5bd25:	cmp    rax,rcx
   5bd28:	mov    QWORD PTR [rsp+0x170],rdi
   5bd30:	cmovl  rax,rcx
   5bd34:	lea    rcx,[rdi+0x1]
   5bd38:	mov    DWORD PTR [rsp+0x1b0],edx
   5bd3f:	cmp    rax,rcx
   5bd42:	cmovle rcx,rax
   5bd46:	mov    rax,QWORD PTR [rsp+0x80]
   5bd4e:	mov    QWORD PTR [rsp+0x120],rax
   5bd56:	mov    rax,QWORD PTR [rsp]
   5bd5a:	mov    rsi,rcx
   5bd5d:	mov    rcx,rdi
   5bd60:	mov    rdi,QWORD PTR [rsp+0x78]
   5bd65:	mov    QWORD PTR [rsp+0x188],rcx
   5bd6d:	and    eax,0x400000
   5bd72:	mov    QWORD PTR [rsp+0x180],rcx
   5bd7a:	setne  BYTE PTR [rsp+0x1a8]
   5bd82:	or     rax,rdi
   5bd85:	movzx  eax,BYTE PTR [r11+0xb0]
   5bd8d:	setne  BYTE PTR [rsp+0x1ab]
   5bd95:	mov    edx,eax
   5bd97:	shr    al,0x3
   5bd9a:	mov    QWORD PTR [rsp+0x198],rdi
   5bda2:	mov    rdi,r14
   5bda5:	shr    dl,0x2
   5bda8:	and    eax,0x1
   5bdab:	and    edx,0x1
   5bdae:	mov    BYTE PTR [rsp+0x1aa],al
   5bdb5:	mov    BYTE PTR [rsp+0x1a9],dl
   5bdbc:	call   4ccb0 <_obstack_memory_used@@Base+0x30>
   5bdc1:	mov    DWORD PTR [rsp+0x54],eax
   5bdc5:	test   eax,eax
   5bdc7:	jne    5cfb4 <_obstack_memory_used@@Base+0x10334>
   5bdcd:	mov    rcx,QWORD PTR [rsp+0x30]
   5bdd2:	lea    rax,[rcx+0xb8]
   5bdd9:	mov    QWORD PTR [rsp+0x1a0],rax
   5bde1:	movzx  eax,BYTE PTR [rcx+0xb0]
   5bde8:	mov    BYTE PTR [rsp],al
   5bdeb:	shr    al,0x4
   5bdee:	and    eax,0x1
   5bdf1:	cmp    BYTE PTR [rsp+0x1ab],0x0
   5bdf9:	mov    BYTE PTR [rsp+0x1ae],al
   5be00:	jne    5be25 <_obstack_memory_used@@Base+0xf1a5>
   5be02:	mov    rsi,QWORD PTR [rsp+0x30]
   5be07:	mov    rax,QWORD PTR [rsp+0x80]
   5be0f:	cmp    DWORD PTR [rsi+0xb4],0x1
   5be16:	mov    QWORD PTR [rsp+0x128],rax
   5be1e:	mov    rax,QWORD PTR [rsp+0x68]
   5be23:	jle    5be27 <_obstack_memory_used@@Base+0xf1a7>
   5be25:	xor    eax,eax
   5be27:	mov    QWORD PTR [rsp+0x150],rax
   5be2f:	mov    QWORD PTR [rsp+0x158],rax
   5be37:	mov    rax,QWORD PTR [rsp+0x38]
   5be3c:	mov    QWORD PTR [rsp+0x188],r12
   5be44:	movzx  eax,BYTE PTR [rax+0x38]
   5be48:	mov    QWORD PTR [rsp+0x180],r12
   5be50:	mov    BYTE PTR [rsp],al
   5be53:	shr    al,0x7
   5be56:	mov    BYTE PTR [rsp+0x1ad],al
   5be5d:	mov    rax,QWORD PTR [rsp+0x30]
   5be62:	mov    r13,QWORD PTR [rax+0x98]
   5be69:	mov    DWORD PTR [rsp+0x1c0],0x0
   5be74:	mov    QWORD PTR [rsp+0x1c8],0xffffffffffffffff
   5be80:	lea    r12,[r13+r13*1+0x0]
   5be85:	test   r12,r12
   5be88:	jle    5bedb <_obstack_memory_used@@Base+0xf25b>
   5be8a:	movabs rax,0x555555555555555
   5be94:	cmp    r12,rax
   5be97:	jg     5ce4c <_obstack_memory_used@@Base+0x101cc>
   5be9d:	lea    rdi,[r12+r13*4]
   5bea1:	shl    rdi,0x4
   5bea5:	call   a4a0 <malloc@plt>
   5beaa:	mov    rdi,r13
   5bead:	shl    rdi,0x4
   5beb1:	mov    QWORD PTR [rsp+0x1f8],rax
   5beb9:	mov    r15,rax
   5bebc:	call   a4a0 <malloc@plt>
   5bec1:	mov    QWORD PTR [rsp+0x218],rax
   5bec9:	test   r15,r15
   5becc:	je     5ce4c <_obstack_memory_used@@Base+0x101cc>
   5bed2:	test   rax,rax
   5bed5:	je     5ce4c <_obstack_memory_used@@Base+0x101cc>
   5bedb:	cmp    QWORD PTR [rsp+0x270],0x1
   5bee4:	mov    QWORD PTR [rsp+0x1f0],r12
   5beec:	mov    DWORD PTR [rsp+0x200],0x1
   5bef7:	mov    QWORD PTR [rsp+0x210],r12
   5beff:	jbe    5cfc1 <_obstack_memory_used@@Base+0x10341>
   5bf05:	mov    rax,QWORD PTR [rsp+0x160]
   5bf0d:	movabs rdx,0x1ffffffffffffffe
   5bf17:	cmp    rax,rdx
   5bf1a:	ja     5ce4c <_obstack_memory_used@@Base+0x101cc>
   5bf20:	lea    rdi,[rax*8+0x8]
   5bf28:	call   a4a0 <malloc@plt>
   5bf2d:	mov    QWORD PTR [rsp+0x1d8],rax
   5bf35:	mov    r15,rax
   5bf38:	test   rax,rax
   5bf3b:	je     5cdb6 <_obstack_memory_used@@Base+0x10136>
   5bf41:	xor    eax,eax
   5bf43:	cmp    rbx,rbp
   5bf46:	mov    QWORD PTR [rsp+0xd8],rbx
   5bf4e:	mov    DWORD PTR [rsp+0x190],0x6
   5bf59:	setle  al
   5bf5c:	mov    DWORD PTR [rsp+0x88],0x8
   5bf67:	lea    eax,[rax+rax*1-0x1]
   5bf6b:	mov    DWORD PTR [rsp+0x8c],eax
   5bf72:	mov    rax,rbp
   5bf75:	cmovle rax,rbx
   5bf79:	mov    QWORD PTR [rsp+0x70],rax
   5bf7e:	mov    rax,rbp
   5bf81:	cmovge rax,rbx
   5bf85:	cmp    QWORD PTR [rsp+0x58],0x0
   5bf8b:	mov    QWORD PTR [rsp+0x60],rax
   5bf90:	mov    rax,QWORD PTR [rsp+0x30]
   5bf95:	mov    eax,DWORD PTR [rax+0xb4]
   5bf9b:	mov    DWORD PTR [rsp+0xb0],eax
   5bfa2:	je     5bff2 <_obstack_memory_used@@Base+0xf372>
   5bfa4:	cmp    DWORD PTR [rsp+0xb0],0x1
   5bfac:	mov    edx,0x4
   5bfb1:	je     5bfd2 <_obstack_memory_used@@Base+0xf352>
   5bfb3:	mov    rax,QWORD PTR [rsp+0x38]
   5bfb8:	xor    edx,edx
   5bfba:	mov    rax,QWORD PTR [rax+0x18]
   5bfbe:	mov    QWORD PTR [rsp],rax
   5bfc2:	and    eax,0x400000
   5bfc7:	or     rax,QWORD PTR [rsp+0x78]
   5bfcc:	sete   dl
   5bfcf:	shl    edx,0x2
   5bfd2:	xor    eax,eax
   5bfd4:	cmp    rbx,rbp
   5bfd7:	setle  al
   5bfda:	xor    ecx,ecx
   5bfdc:	add    eax,eax
   5bfde:	cmp    QWORD PTR [rsp+0x78],0x0
   5bfe4:	setne  cl
   5bfe7:	or     eax,ecx
   5bfe9:	or     eax,edx
   5bfeb:	mov    DWORD PTR [rsp+0x88],eax
   5bff2:	xor    eax,eax
   5bff4:	lea    rdx,[rsp+0xd8]
   5bffc:	cmp    rbx,rbp
   5bfff:	cmovle rax,rdx
   5c003:	test   rax,rax
   5c006:	mov    QWORD PTR [rsp+0xa8],rax
   5c00e:	mov    eax,DWORD PTR [rsp+0x88]
   5c015:	setne  BYTE PTR [rsp+0xb7]
   5c01d:	cmp    eax,0x7
   5c020:	je     5cca2 <_obstack_memory_used@@Base+0x10022>
   5c026:	cmp    eax,0x8
   5c029:	je     5c1f4 <_obstack_memory_used@@Base+0xf574>
   5c02f:	cmp    eax,0x5
   5c032:	jg     5c120 <_obstack_memory_used@@Base+0xf4a0>
   5c038:	cmp    eax,0x3
   5c03b:	jg     5ce68 <_obstack_memory_used@@Base+0x101e8>
   5c041:	mov    rcx,r14
   5c044:	mov    rbp,QWORD PTR [rsp+0x58]
   5c049:	mov    r13,QWORD PTR [rsp+0x70]
   5c04e:	mov    r15d,DWORD PTR [rsp+0x8c]
   5c056:	mov    r12,QWORD PTR [rsp+0x68]
   5c05b:	mov    r14,QWORD PTR [rsp+0x60]
   5c060:	jmp    5c0a8 <_obstack_memory_used@@Base+0xf428>
   5c062:	nop    WORD PTR [rax+rax*1+0x0]
   5c068:	mov    rax,rbp
   5c06b:	cmp    r12,rbx
   5c06e:	jle    5c07f <_obstack_memory_used@@Base+0xf3ff>
   5c070:	mov    rax,QWORD PTR [rsp+0x128]
   5c078:	movzx  eax,BYTE PTR [rax+rdx*1]
   5c07c:	add    rax,rbp
   5c07f:	cmp    BYTE PTR [rax],0x0
   5c082:	jne    5d034 <_obstack_memory_used@@Base+0x103b4>
   5c088:	movsxd rax,r15d
   5c08b:	add    rbx,rax
   5c08e:	mov    QWORD PTR [rsp+0xd8],rbx
   5c096:	cmp    r13,rbx
   5c099:	jg     5d03c <_obstack_memory_used@@Base+0x103bc>
   5c09f:	cmp    r14,rbx
   5c0a2:	jl     5d03c <_obstack_memory_used@@Base+0x103bc>
   5c0a8:	mov    rdx,rbx
   5c0ab:	sub    rdx,QWORD PTR [rsp+0x148]
   5c0b3:	cmp    rdx,QWORD PTR [rsp+0x158]
   5c0bb:	jb     5c068 <_obstack_memory_used@@Base+0xf3e8>
   5c0bd:	xor    edx,edx
   5c0bf:	mov    rdi,rcx
   5c0c2:	mov    rsi,rbx
   5c0c5:	mov    QWORD PTR [rsp],rcx
   5c0c9:	call   5b360 <_obstack_memory_used@@Base+0xe6e0>
   5c0ce:	mov    rcx,QWORD PTR [rsp]
   5c0d2:	test   eax,eax
   5c0d4:	jne    5cfad <_obstack_memory_used@@Base+0x1032d>
   5c0da:	mov    rdx,rbx
   5c0dd:	sub    rdx,QWORD PTR [rsp+0x148]
   5c0e5:	jmp    5c068 <_obstack_memory_used@@Base+0xf3e8>
   5c0e7:	mov    rax,QWORD PTR [rsp+0x30]
   5c0ec:	cmp    QWORD PTR [rax+0x98],0x0
   5c0f4:	setne  al
   5c0f7:	movzx  eax,al
   5c0fa:	mov    DWORD PTR [rsp+0x50],eax
   5c0fe:	jmp    5bcef <_obstack_memory_used@@Base+0xf06f>
   5c103:	nop    DWORD PTR [rax+rax*1+0x0]
   5c108:	mov    QWORD PTR [rsp+0x58],0x0
   5c111:	jmp    5bc0a <_obstack_memory_used@@Base+0xef8a>
   5c116:	cs nop WORD PTR [rax+rax*1+0x0]
   5c120:	cmp    DWORD PTR [rsp+0x88],0x6
   5c128:	jne    5c041 <_obstack_memory_used@@Base+0xf3c1>
   5c12e:	mov    rax,rbx
   5c131:	xor    ecx,ecx
   5c133:	cmp    QWORD PTR [rsp+0x60],rbx
   5c138:	jle    5c1ed <_obstack_memory_used@@Base+0xf56d>
   5c13e:	mov    rsi,QWORD PTR [rsp+0x58]
   5c143:	mov    r9,QWORD PTR [rsp+0xb8]
   5c14b:	mov    r8,QWORD PTR [rsp+0x60]
   5c150:	mov    rdi,QWORD PTR [rsp+0x80]
   5c158:	jmp    5c163 <_obstack_memory_used@@Base+0xf4e3>
   5c15a:	nop    WORD PTR [rax+rax*1+0x0]
   5c160:	mov    r9,rax
   5c163:	movzx  edx,BYTE PTR [rdi+rax*1]
   5c167:	cmp    BYTE PTR [rsi+rdx*1],0x0
   5c16b:	jne    5c1d6 <_obstack_memory_used@@Base+0xf556>
   5c16d:	add    rax,0x1
   5c171:	mov    ecx,0x1
   5c176:	cmp    r8,rax
   5c179:	jne    5c160 <_obstack_memory_used@@Base+0xf4e0>
   5c17b:	mov    rcx,QWORD PTR [rsp+0x60]
   5c180:	mov    QWORD PTR [rsp+0xb8],r9
   5c188:	mov    QWORD PTR [rsp+0xd8],rcx
   5c190:	mov    rbx,rax
   5c193:	xor    eax,eax
   5c195:	cmp    QWORD PTR [rsp+0x68],rbx
   5c19a:	jle    5c1a8 <_obstack_memory_used@@Base+0xf528>
   5c19c:	mov    rax,QWORD PTR [rsp+0x80]
   5c1a4:	movzx  eax,BYTE PTR [rax+rbx*1]
   5c1a8:	mov    rdi,QWORD PTR [rsp+0x78]
   5c1ad:	test   rdi,rdi
   5c1b0:	je     5c1b6 <_obstack_memory_used@@Base+0xf536>
   5c1b2:	movzx  eax,BYTE PTR [rdi+rax*1]
   5c1b6:	mov    rdi,QWORD PTR [rsp+0x58]
   5c1bb:	cmp    BYTE PTR [rdi+rax*1],0x0
   5c1bf:	jne    5c1f4 <_obstack_memory_used@@Base+0xf574>
   5c1c1:	mov    DWORD PTR [rsp+0x54],0x1
   5c1c9:	mov    r15,QWORD PTR [rsp+0x1d8]
   5c1d1:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5c1d6:	mov    QWORD PTR [rsp+0xb8],r9
   5c1de:	test   cl,cl
   5c1e0:	je     5c1f4 <_obstack_memory_used@@Base+0xf574>
   5c1e2:	mov    QWORD PTR [rsp+0xd8],r9
   5c1ea:	mov    rbx,r9
   5c1ed:	cmp    QWORD PTR [rsp+0x60],rbx
   5c1f2:	je     5c193 <_obstack_memory_used@@Base+0xf513>
   5c1f4:	xor    edx,edx
   5c1f6:	mov    rsi,rbx
   5c1f9:	mov    rdi,r14
   5c1fc:	call   5b360 <_obstack_memory_used@@Base+0xe6e0>
   5c201:	mov    DWORD PTR [rsp+0x54],eax
   5c205:	test   eax,eax
   5c207:	jne    5cfb4 <_obstack_memory_used@@Base+0x10334>
   5c20d:	cmp    DWORD PTR [rsp+0xb0],0x1
   5c215:	je     5c233 <_obstack_memory_used@@Base+0xf5b3>
   5c217:	cmp    QWORD PTR [rsp+0x150],0x0
   5c220:	je     5c233 <_obstack_memory_used@@Base+0xf5b3>
   5c222:	mov    rax,QWORD PTR [rsp+0x130]
   5c22a:	cmp    DWORD PTR [rax],0xffffffff
   5c22d:	je     5cc69 <_obstack_memory_used@@Base+0xffe9>
   5c233:	movzx  eax,BYTE PTR [rsp+0x50]
   5c238:	mov    rbx,QWORD PTR [rsp+0x1b8]
   5c240:	mov    DWORD PTR [rsp+0x200],0x0
   5c24b:	mov    QWORD PTR [rsp+0x1e8],0x0
   5c257:	and    eax,0x1
   5c25a:	mov    r13,QWORD PTR [rbx+0x48]
   5c25e:	mov    QWORD PTR [rsp+0x1e0],0x0
   5c26a:	mov    BYTE PTR [rsp+0xb6],al
   5c271:	mov    rax,QWORD PTR [rsp+0x168]
   5c279:	mov    DWORD PTR [rsp+0xd0],0x0
   5c284:	cmp    BYTE PTR [r13+0x68],0x0
   5c289:	mov    QWORD PTR [rsp],rax
   5c28d:	jns    5c2d0 <_obstack_memory_used@@Base+0xf650>
   5c28f:	mov    edx,DWORD PTR [rsp+0x1c0]
   5c296:	lea    rsi,[rax-0x1]
   5c29a:	mov    rdi,r14
   5c29d:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5c2a2:	test   al,0x1
   5c2a4:	jne    5ce3f <_obstack_memory_used@@Base+0x101bf>
   5c2aa:	test   eax,eax
   5c2ac:	je     5c2d0 <_obstack_memory_used@@Base+0xf650>
   5c2ae:	mov    edx,eax
   5c2b0:	and    edx,0x6
   5c2b3:	cmp    edx,0x6
   5c2b6:	je     5d120 <_obstack_memory_used@@Base+0x104a0>
   5c2bc:	test   al,0x2
   5c2be:	jne    5d096 <_obstack_memory_used@@Base+0x10416>
   5c2c4:	test   al,0x4
   5c2c6:	jne    5d0ac <_obstack_memory_used@@Base+0x1042c>
   5c2cc:	nop    DWORD PTR [rax+0x0]
   5c2d0:	mov    rax,QWORD PTR [rsp+0x1d8]
   5c2d8:	test   rax,rax
   5c2db:	je     5c2f3 <_obstack_memory_used@@Base+0xf673>
   5c2dd:	mov    rdi,QWORD PTR [rsp]
   5c2e1:	cmp    QWORD PTR [rbx+0x98],0x0
   5c2e9:	mov    QWORD PTR [rax+rdi*8],r13
   5c2ed:	jne    5d0e9 <_obstack_memory_used@@Base+0x10469>
   5c2f3:	movzx  eax,BYTE PTR [rsp+0xb7]
   5c2fb:	mov    BYTE PTR [rsp+0x10],al
   5c2ff:	movzx  eax,BYTE PTR [r13+0x68]
   5c304:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
   5c30d:	mov    QWORD PTR [rsp+0x28],0x0
   5c316:	test   al,0x10
   5c318:	jne    5d064 <_obstack_memory_used@@Base+0x103e4>
   5c31e:	mov    rax,QWORD PTR [rsp+0xa8]
   5c326:	mov    rbp,QWORD PTR [rsp+0x168]
   5c32e:	cmp    QWORD PTR [rsp+0x188],rbp
   5c336:	mov    QWORD PTR [rsp+0x48],rax
   5c33b:	jle    5c4a8 <_obstack_memory_used@@Base+0xf828>
   5c341:	lea    rax,[rsp+0xd0]
   5c349:	mov    QWORD PTR [rsp+0x18],rax
   5c34e:	jmp    5c3b1 <_obstack_memory_used@@Base+0xf731>
   5c350:	cmp    r13,r12
   5c353:	mov    rbp,QWORD PTR [rsp+0x168]
   5c35b:	sete   al
   5c35e:	and    BYTE PTR [rsp+0x10],al
   5c362:	movzx  eax,BYTE PTR [r12+0x68]
   5c368:	cmove  rbx,QWORD PTR [rsp]
   5c36d:	mov    QWORD PTR [rsp],rbx
   5c371:	test   al,0x10
   5c373:	je     5c3a0 <_obstack_memory_used@@Base+0xf720>
   5c375:	test   al,al
   5c377:	js     5c7b0 <_obstack_memory_used@@Base+0xfb30>
   5c37d:	mov    edx,DWORD PTR [rsp+0x50]
   5c381:	mov    QWORD PTR [rsp+0x20],rbp
   5c386:	test   edx,edx
   5c388:	je     5c4b9 <_obstack_memory_used@@Base+0xf839>
   5c38e:	mov    QWORD PTR [rsp+0x28],0x1
   5c397:	mov    QWORD PTR [rsp+0x48],0x0
   5c3a0:	cmp    QWORD PTR [rsp+0x188],rbp
   5c3a8:	jle    5c4a8 <_obstack_memory_used@@Base+0xf828>
   5c3ae:	mov    r13,r12
   5c3b1:	mov    rax,QWORD PTR [rsp+0x160]
   5c3b9:	lea    rbx,[rbp+0x1]
   5c3bd:	cmp    rbx,rax
   5c3c0:	jge    5c7d0 <_obstack_memory_used@@Base+0xfb50>
   5c3c6:	mov    rax,QWORD PTR [rsp+0x150]
   5c3ce:	cmp    rbx,rax
   5c3d1:	jge    5cac0 <_obstack_memory_used@@Base+0xfe40>
   5c3d7:	test   BYTE PTR [r13+0x68],0x20
   5c3dc:	jne    5c810 <_obstack_memory_used@@Base+0xfb90>
   5c3e2:	lea    rax,[rbp+0x1]
   5c3e6:	mov    QWORD PTR [rsp+0x168],rax
   5c3ee:	mov    rax,QWORD PTR [rsp+0x128]
   5c3f6:	movzx  ebp,BYTE PTR [rax+rbp*1]
   5c3fa:	mov    rax,QWORD PTR [r13+0x58]
   5c3fe:	test   rax,rax
   5c401:	je     5ca80 <_obstack_memory_used@@Base+0xfe00>
   5c407:	mov    r12,QWORD PTR [rax+rbp*8]
   5c40b:	cmp    QWORD PTR [rsp+0x1d8],0x0
   5c414:	je     5c429 <_obstack_memory_used@@Base+0xf7a9>
   5c416:	mov    rdi,QWORD PTR [rsp+0x18]
   5c41b:	mov    rdx,r12
   5c41e:	mov    rsi,r14
   5c421:	call   56da0 <_obstack_memory_used@@Base+0xa120>
   5c426:	mov    r12,rax
   5c429:	test   r12,r12
   5c42c:	jne    5c350 <_obstack_memory_used@@Base+0xf6d0>
   5c432:	mov    esi,DWORD PTR [rsp+0xd0]
   5c439:	mov    rcx,QWORD PTR [rsp+0x1d8]
   5c441:	test   esi,esi
   5c443:	jne    5d129 <_obstack_memory_used@@Base+0x104a9>
   5c449:	test   rcx,rcx
   5c44c:	je     5c4a8 <_obstack_memory_used@@Base+0xf828>
   5c44e:	movzx  eax,BYTE PTR [rsp+0xb6]
   5c456:	xor    eax,0x1
   5c459:	test   BYTE PTR [rsp+0x28],al
   5c45d:	jne    5c4a8 <_obstack_memory_used@@Base+0xf828>
   5c45f:	mov    rbp,QWORD PTR [rsp+0x18]
   5c464:	mov    rdi,QWORD PTR [rsp+0x1e0]
   5c46c:	mov    rax,QWORD PTR [rsp+0x168]
   5c474:	xor    edx,edx
   5c476:	jmp    5c490 <_obstack_memory_used@@Base+0xf810>
   5c478:	nop    DWORD PTR [rax+rax*1+0x0]
   5c480:	cmp    QWORD PTR [rcx+rax*8],0x0
   5c485:	mov    edx,0x1
   5c48a:	jne    5c768 <_obstack_memory_used@@Base+0xfae8>
   5c490:	mov    rsi,rax
   5c493:	add    rax,0x1
   5c497:	cmp    rdi,rax
   5c49a:	jge    5c480 <_obstack_memory_used@@Base+0xf800>
   5c49c:	test   dl,dl
   5c49e:	je     5c4a8 <_obstack_memory_used@@Base+0xf828>
   5c4a0:	mov    QWORD PTR [rsp+0x168],rsi
   5c4a8:	mov    rax,QWORD PTR [rsp+0x48]
   5c4ad:	test   rax,rax
   5c4b0:	je     5c4b9 <_obstack_memory_used@@Base+0xf839>
   5c4b2:	mov    rsi,QWORD PTR [rsp]
   5c4b6:	add    QWORD PTR [rax],rsi
   5c4b9:	mov    rax,QWORD PTR [rsp+0x20]
   5c4be:	cmp    rax,0xffffffffffffffff
   5c4c2:	je     5cc59 <_obstack_memory_used@@Base+0xffd9>
   5c4c8:	cmp    rax,0xfffffffffffffffe
   5c4cc:	je     5ce4c <_obstack_memory_used@@Base+0x101cc>
   5c4d2:	mov    rax,QWORD PTR [rsp+0x20]
   5c4d7:	mov    QWORD PTR [rsp+0x1c8],rax
   5c4df:	mov    rax,QWORD PTR [rsp+0x38]
   5c4e4:	test   BYTE PTR [rax+0x38],0x10
   5c4e8:	jne    5c540 <_obstack_memory_used@@Base+0xf8c0>
   5c4ea:	cmp    QWORD PTR [rsp+0x270],0x1
   5c4f3:	jbe    5c540 <_obstack_memory_used@@Base+0xf8c0>
   5c4f5:	mov    rdx,QWORD PTR [rsp+0x20]
   5c4fa:	mov    r15,QWORD PTR [rsp+0x1d8]
   5c502:	mov    rdi,r14
   5c505:	mov    rsi,QWORD PTR [r15+rdx*8]
   5c509:	call   51e30 <_obstack_memory_used@@Base+0x51b0>
   5c50e:	mov    QWORD PTR [rsp+0x1d0],rax
   5c516:	mov    rax,QWORD PTR [rsp+0x30]
   5c51b:	test   BYTE PTR [rax+0xb0],0x1
   5c522:	jne    5cafc <_obstack_memory_used@@Base+0xfe7c>
   5c528:	mov    rax,QWORD PTR [rsp+0x30]
   5c52d:	cmp    QWORD PTR [rax+0x98],0x0
   5c535:	jne    5caf4 <_obstack_memory_used@@Base+0xfe74>
   5c53b:	jmp    5c553 <_obstack_memory_used@@Base+0xf8d3>
   5c53d:	nop    DWORD PTR [rax]
   5c540:	mov    rax,QWORD PTR [rsp+0x30]
   5c545:	cmp    QWORD PTR [rax+0x98],0x0
   5c54d:	jne    5cad3 <_obstack_memory_used@@Base+0xfe53>
   5c553:	cmp    QWORD PTR [rsp+0x270],0x0
   5c55c:	je     5cfb4 <_obstack_memory_used@@Base+0x10334>
   5c562:	mov    rdx,QWORD PTR [rsp+0x270]
   5c56a:	mov    rdi,QWORD PTR [rsp+0xa0]
   5c572:	shl    rdx,0x4
   5c576:	lea    rax,[rdi+0x10]
   5c57a:	add    rdx,rdi
   5c57d:	cmp    QWORD PTR [rsp+0x270],0x1
   5c586:	je     5d223 <_obstack_memory_used@@Base+0x105a3>
   5c58c:	mov    QWORD PTR [rax+0x8],0xffffffffffffffff
   5c594:	add    rax,0x10
   5c598:	mov    QWORD PTR [rax-0x10],0xffffffffffffffff
   5c5a0:	cmp    rdx,rax
   5c5a3:	jne    5c58c <_obstack_memory_used@@Base+0xf90c>
   5c5a5:	mov    rsi,QWORD PTR [rsp+0xa0]
   5c5ad:	mov    rax,QWORD PTR [rsp+0x1c8]
   5c5b5:	mov    QWORD PTR [rsi+0x8],rax
   5c5b9:	mov    rax,QWORD PTR [rsp+0x38]
   5c5be:	mov    QWORD PTR [rsi],0x0
   5c5c5:	test   BYTE PTR [rax+0x38],0x10
   5c5c9:	jne    5d1d8 <_obstack_memory_used@@Base+0x10558>
   5c5cf:	cmp    QWORD PTR [rsp+0x270],0x1
   5c5d8:	je     5d1d8 <_obstack_memory_used@@Base+0x10558>
   5c5de:	mov    rax,QWORD PTR [rsp+0x30]
   5c5e3:	xor    r8d,r8d
   5c5e6:	test   BYTE PTR [rax+0xb0],0x1
   5c5ed:	je     5c5fe <_obstack_memory_used@@Base+0xf97e>
   5c5ef:	xor    r8d,r8d
   5c5f2:	cmp    QWORD PTR [rax+0x98],0x0
   5c5fa:	setg   r8b
   5c5fe:	mov    rbx,QWORD PTR [rsp+0xa0]
   5c606:	mov    rdx,QWORD PTR [rsp+0x270]
   5c60e:	mov    rsi,r14
   5c611:	mov    rdi,QWORD PTR [rsp+0x38]
   5c616:	mov    rcx,rbx
   5c619:	call   51f00 <_obstack_memory_used@@Base+0x5280>
   5c61e:	test   eax,eax
   5c620:	jne    5d212 <_obstack_memory_used@@Base+0x10592>
   5c626:	mov    rax,QWORD PTR [rbx]
   5c629:	movzx  r11d,BYTE PTR [rsp+0x1ac]
   5c632:	mov    r10,QWORD PTR [rsp+0x150]
   5c63a:	xor    esi,esi
   5c63c:	mov    r9,QWORD PTR [rsp+0x138]
   5c644:	mov    r8,QWORD PTR [rsp+0x158]
   5c64c:	mov    rdi,QWORD PTR [rsp+0xd8]
   5c654:	mov    rdx,QWORD PTR [rsp+0xa0]
   5c65c:	jmp    5c661 <_obstack_memory_used@@Base+0xf9e1>
   5c65e:	mov    rax,QWORD PTR [rdx]
   5c661:	cmp    rax,0xffffffffffffffff
   5c665:	je     5c681 <_obstack_memory_used@@Base+0xfa01>
   5c667:	mov    rcx,QWORD PTR [rdx+0x8]
   5c66b:	test   r11b,r11b
   5c66e:	jne    5d1eb <_obstack_memory_used@@Base+0x1056b>
   5c674:	add    rax,rdi
   5c677:	add    rcx,rdi
   5c67a:	mov    QWORD PTR [rdx],rax
   5c67d:	mov    QWORD PTR [rdx+0x8],rcx
   5c681:	add    rsi,0x1
   5c685:	add    rdx,0x10
   5c689:	cmp    rsi,QWORD PTR [rsp+0x270]
   5c691:	jne    5c65e <_obstack_memory_used@@Base+0xf9de>
   5c693:	cmp    QWORD PTR [rsp+0x90],0x0
   5c69c:	jle    5c6e4 <_obstack_memory_used@@Base+0xfa64>
   5c69e:	mov    rax,QWORD PTR [rsp+0x270]
   5c6a6:	mov    rcx,QWORD PTR [rsp+0xa0]
   5c6ae:	mov    rdx,QWORD PTR [rsp+0x90]
   5c6b6:	add    rdx,QWORD PTR [rsp+0x270]
   5c6be:	shl    rax,0x4
   5c6c2:	shl    rdx,0x4
   5c6c6:	add    rax,rcx
   5c6c9:	add    rdx,rcx
   5c6cc:	mov    QWORD PTR [rax],0xffffffffffffffff
   5c6d3:	add    rax,0x10
   5c6d7:	mov    QWORD PTR [rax-0x8],0xffffffffffffffff
   5c6df:	cmp    rdx,rax
   5c6e2:	jne    5c6cc <_obstack_memory_used@@Base+0xfa4c>
   5c6e4:	mov    rax,QWORD PTR [rsp+0x30]
   5c6e9:	mov    r15,QWORD PTR [rsp+0x1d8]
   5c6f1:	mov    rsi,QWORD PTR [rax+0xe0]
   5c6f8:	test   rsi,rsi
   5c6fb:	je     5cdbe <_obstack_memory_used@@Base+0x1013e>
   5c701:	cmp    QWORD PTR [rsp+0x270],0x1
   5c70a:	je     5cdbe <_obstack_memory_used@@Base+0x1013e>
   5c710:	mov    rax,QWORD PTR [rsp+0x270]
   5c718:	mov    r8,QWORD PTR [rsp+0xa0]
   5c720:	lea    rdi,[rax-0x1]
   5c724:	lea    rdx,[r8+0x10]
   5c728:	xor    eax,eax
   5c72a:	mov    rcx,QWORD PTR [rsi+rax*8]
   5c72e:	cmp    rcx,rax
   5c731:	je     5c750 <_obstack_memory_used@@Base+0xfad0>
   5c733:	shl    rcx,0x4
   5c737:	mov    rcx,QWORD PTR [rcx+r8*1+0x10]
   5c73c:	mov    QWORD PTR [rdx],rcx
   5c73f:	mov    rcx,QWORD PTR [rsi+rax*8]
   5c743:	shl    rcx,0x4
   5c747:	mov    rcx,QWORD PTR [rcx+r8*1+0x18]
   5c74c:	mov    QWORD PTR [rdx+0x8],rcx
   5c750:	add    rax,0x1
   5c754:	add    rdx,0x10
   5c758:	cmp    rdi,rax
   5c75b:	jne    5c72a <_obstack_memory_used@@Base+0xfaaa>
   5c75d:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5c762:	nop    WORD PTR [rax+rax*1+0x0]
   5c768:	xor    edx,edx
   5c76a:	mov    rsi,r14
   5c76d:	mov    rdi,rbp
   5c770:	mov    QWORD PTR [rsp+0x168],rax
   5c778:	call   56da0 <_obstack_memory_used@@Base+0xa120>
   5c77d:	mov    ecx,DWORD PTR [rsp+0xd0]
   5c784:	test   ecx,ecx
   5c786:	jne    5c79e <_obstack_memory_used@@Base+0xfb1e>
   5c788:	test   rax,rax
   5c78b:	jne    5d08e <_obstack_memory_used@@Base+0x1040e>
   5c791:	mov    rcx,QWORD PTR [rsp+0x1d8]
   5c799:	jmp    5c464 <_obstack_memory_used@@Base+0xf7e4>
   5c79e:	mov    r12,rax
   5c7a1:	test   rax,rax
   5c7a4:	jne    5c350 <_obstack_memory_used@@Base+0xf6d0>
   5c7aa:	jmp    5c4a8 <_obstack_memory_used@@Base+0xf828>
   5c7af:	nop
   5c7b0:	mov    rdx,rbp
   5c7b3:	mov    rsi,r12
   5c7b6:	mov    rdi,r14
   5c7b9:	call   51e30 <_obstack_memory_used@@Base+0x51b0>
   5c7be:	test   rax,rax
   5c7c1:	je     5c3a0 <_obstack_memory_used@@Base+0xf720>
   5c7c7:	jmp    5c37d <_obstack_memory_used@@Base+0xf6fd>
   5c7cc:	nop    DWORD PTR [rax+0x0]
   5c7d0:	cmp    rax,QWORD PTR [rsp+0x178]
   5c7d8:	jge    5c3c6 <_obstack_memory_used@@Base+0xf746>
   5c7de:	lea    esi,[rbx+0x1]
   5c7e1:	mov    rdi,r14
   5c7e4:	call   543f0 <_obstack_memory_used@@Base+0x7770>
   5c7e9:	mov    DWORD PTR [rsp+0xd0],eax
   5c7f0:	test   eax,eax
   5c7f2:	jne    5ce4c <_obstack_memory_used@@Base+0x101cc>
   5c7f8:	mov    rbp,QWORD PTR [rsp+0x168]
   5c800:	test   BYTE PTR [r13+0x68],0x20
   5c805:	je     5c3e2 <_obstack_memory_used@@Base+0xf762>
   5c80b:	nop    DWORD PTR [rax+rax*1+0x0]
   5c810:	cmp    QWORD PTR [r13+0x10],0x0
   5c815:	mov    r12,QWORD PTR [rsp+0x1b8]
   5c81d:	jle    5ce2f <_obstack_memory_used@@Base+0x101af>
   5c823:	xor    r15d,r15d
   5c826:	lea    rax,[rsp+0xe0]
   5c82e:	mov    QWORD PTR [rsp+0x98],rbx
   5c836:	mov    rcx,rbp
   5c839:	mov    QWORD PTR [rsp+0x40],rax
   5c83e:	mov    rbx,r13
   5c841:	mov    rbp,r15
   5c844:	jmp    5c990 <_obstack_memory_used@@Base+0xfd10>
   5c849:	nop    DWORD PTR [rax+0x0]
   5c850:	test   al,0x1
   5c852:	je     5c982 <_obstack_memory_used@@Base+0xfd02>
   5c858:	and    r13d,0x8
   5c85c:	jne    5c982 <_obstack_memory_used@@Base+0xfd02>
   5c862:	test   dl,0x20
   5c865:	je     5c86f <_obstack_memory_used@@Base+0xfbef>
   5c867:	test   al,0x2
   5c869:	je     5c982 <_obstack_memory_used@@Base+0xfd02>
   5c86f:	and    edx,0x80
   5c875:	je     5c880 <_obstack_memory_used@@Base+0xfc00>
   5c877:	test   al,0x8
   5c879:	je     5c982 <_obstack_memory_used@@Base+0xfd02>
   5c87f:	nop
   5c880:	mov    rdx,r14
   5c883:	mov    rsi,r15
   5c886:	mov    rdi,r12
   5c889:	call   54d30 <_obstack_memory_used@@Base+0x80b0>
   5c88e:	test   eax,eax
   5c890:	je     5c97a <_obstack_memory_used@@Base+0xfcfa>
   5c896:	mov    edx,DWORD PTR [rsp+0x200]
   5c89d:	movsxd r13,eax
   5c8a0:	mov    rdi,r14
   5c8a3:	add    r13,QWORD PTR [rsp+0x168]
   5c8ab:	mov    rsi,r13
   5c8ae:	cmp    edx,eax
   5c8b0:	cmovl  edx,eax
   5c8b3:	mov    DWORD PTR [rsp+0x200],edx
   5c8ba:	call   54540 <_obstack_memory_used@@Base+0x78c0>
   5c8bf:	mov    DWORD PTR [rsp+0xd4],eax
   5c8c6:	test   eax,eax
   5c8c8:	jne    5cd20 <_obstack_memory_used@@Base+0x100a0>
   5c8ce:	mov    rax,QWORD PTR [r12+0x18]
   5c8d3:	mov    r10,QWORD PTR [rsp+0x1d8]
   5c8db:	mov    rax,QWORD PTR [rax+r15*8]
   5c8df:	lea    r15,[r13*8+0x0]
   5c8e7:	add    r10,r15
   5c8ea:	lea    rdx,[rax+rax*2]
   5c8ee:	mov    rax,QWORD PTR [r12+0x30]
   5c8f3:	mov    QWORD PTR [rsp+0x8],r10
   5c8f8:	lea    rdx,[rax+rdx*8]
   5c8fc:	mov    rax,QWORD PTR [r10]
   5c8ff:	test   rax,rax
   5c902:	je     5ca00 <_obstack_memory_used@@Base+0xfd80>
   5c908:	mov    rsi,QWORD PTR [rax+0x50]
   5c90c:	mov    rdi,QWORD PTR [rsp+0x40]
   5c911:	call   4d980 <_obstack_memory_used@@Base+0xd00>
   5c916:	mov    DWORD PTR [rsp+0xd4],eax
   5c91d:	test   eax,eax
   5c91f:	jne    5cd20 <_obstack_memory_used@@Base+0x100a0>
   5c925:	mov    edx,DWORD PTR [rsp+0x1c0]
   5c92c:	lea    rsi,[r13-0x1]
   5c930:	mov    rdi,r14
   5c933:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5c938:	mov    rdx,QWORD PTR [rsp+0x40]
   5c93d:	mov    rsi,r12
   5c940:	lea    rdi,[rsp+0xd4]
   5c948:	mov    ecx,eax
   5c94a:	add    r15,QWORD PTR [rsp+0x1d8]
   5c952:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   5c957:	mov    rdi,QWORD PTR [rsp+0xf0]
   5c95f:	mov    QWORD PTR [r15],rax
   5c962:	call   9ce0 <free@plt>
   5c967:	mov    rdx,QWORD PTR [rsp+0x1d8]
   5c96f:	cmp    QWORD PTR [rdx+r13*8],0x0
   5c974:	je     5ca5d <_obstack_memory_used@@Base+0xfddd>
   5c97a:	mov    rcx,QWORD PTR [rsp+0x168]
   5c982:	add    rbp,0x1
   5c986:	cmp    rbp,QWORD PTR [rbx+0x10]
   5c98a:	jge    5ce21 <_obstack_memory_used@@Base+0x101a1>
   5c990:	mov    rax,QWORD PTR [rbx+0x18]
   5c994:	mov    r15,QWORD PTR [rax+rbp*8]
   5c998:	mov    rax,r15
   5c99b:	shl    rax,0x4
   5c99f:	add    rax,QWORD PTR [r12]
   5c9a3:	test   BYTE PTR [rax+0xa],0x10
   5c9a7:	je     5c982 <_obstack_memory_used@@Base+0xfd02>
   5c9a9:	mov    r13d,DWORD PTR [rax+0x8]
   5c9ad:	test   r13d,0x3ff00
   5c9b4:	je     5c880 <_obstack_memory_used@@Base+0xfc00>
   5c9ba:	mov    rsi,rcx
   5c9bd:	shr    r13d,0x8
   5c9c1:	mov    rdi,r14
   5c9c4:	mov    QWORD PTR [rsp+0x8],rcx
   5c9c9:	mov    edx,DWORD PTR [rsp+0x1c0]
   5c9d0:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5c9d5:	mov    edx,r13d
   5c9d8:	mov    rcx,QWORD PTR [rsp+0x8]
   5c9dd:	and    dx,0x3ff
   5c9e2:	test   r13b,0x4
   5c9e6:	jne    5c850 <_obstack_memory_used@@Base+0xfbd0>
   5c9ec:	and    r13d,0x8
   5c9f0:	je     5c862 <_obstack_memory_used@@Base+0xfbe2>
   5c9f6:	test   al,0x1
   5c9f8:	je     5c862 <_obstack_memory_used@@Base+0xfbe2>
   5c9fe:	jmp    5c982 <_obstack_memory_used@@Base+0xfd02>
   5ca00:	movdqu xmm1,XMMWORD PTR [rdx]
   5ca04:	lea    rsi,[r13-0x1]
   5ca08:	mov    rdi,r14
   5ca0b:	movaps XMMWORD PTR [rsp+0xe0],xmm1
   5ca13:	mov    rax,QWORD PTR [rdx+0x10]
   5ca17:	mov    edx,DWORD PTR [rsp+0x1c0]
   5ca1e:	mov    QWORD PTR [rsp+0xf0],rax
   5ca26:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5ca2b:	mov    rdx,QWORD PTR [rsp+0x40]
   5ca30:	lea    rdi,[rsp+0xd4]
   5ca38:	mov    rsi,r12
   5ca3b:	mov    ecx,eax
   5ca3d:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   5ca42:	mov    r10,QWORD PTR [rsp+0x8]
   5ca47:	mov    rdx,QWORD PTR [rsp+0x1d8]
   5ca4f:	mov    QWORD PTR [r10],rax
   5ca52:	cmp    QWORD PTR [rdx+r13*8],0x0
   5ca57:	jne    5c97a <_obstack_memory_used@@Base+0xfcfa>
   5ca5d:	mov    eax,DWORD PTR [rsp+0xd4]
   5ca64:	test   eax,eax
   5ca66:	je     5c97a <_obstack_memory_used@@Base+0xfcfa>
   5ca6c:	mov    r13,rbx
   5ca6f:	mov    rbx,QWORD PTR [rsp+0x98]
   5ca77:	jmp    5cd33 <_obstack_memory_used@@Base+0x100b3>
   5ca7c:	nop    DWORD PTR [rax+0x0]
   5ca80:	mov    r12,QWORD PTR [r13+0x60]
   5ca84:	test   r12,r12
   5ca87:	je     5cd85 <_obstack_memory_used@@Base+0x10105>
   5ca8d:	mov    rax,QWORD PTR [rsp+0x168]
   5ca95:	mov    edx,DWORD PTR [rsp+0x1c0]
   5ca9c:	mov    rdi,r14
   5ca9f:	lea    rsi,[rax-0x1]
   5caa3:	call   4d670 <_obstack_memory_used@@Base+0x9f0>
   5caa8:	test   al,0x1
   5caaa:	je     5ce18 <_obstack_memory_used@@Base+0x10198>
   5cab0:	mov    r12,QWORD PTR [r12+rbp*8+0x800]
   5cab8:	jmp    5c40b <_obstack_memory_used@@Base+0xf78b>
   5cabd:	nop    DWORD PTR [rax]
   5cac0:	cmp    rax,QWORD PTR [rsp+0x178]
   5cac8:	jge    5c3d7 <_obstack_memory_used@@Base+0xf757>
   5cace:	jmp    5c7de <_obstack_memory_used@@Base+0xfb5e>
   5cad3:	mov    rax,QWORD PTR [rsp+0x1d8]
   5cadb:	mov    rdx,QWORD PTR [rsp+0x20]
   5cae0:	mov    rdi,r14
   5cae3:	mov    rsi,QWORD PTR [rax+rdx*8]
   5cae7:	call   51e30 <_obstack_memory_used@@Base+0x51b0>
   5caec:	mov    QWORD PTR [rsp+0x1d0],rax
   5caf4:	mov    r15,QWORD PTR [rsp+0x1d8]
   5cafc:	mov    rax,QWORD PTR [rsp+0x1b8]
   5cb04:	mov    QWORD PTR [rsp+0x10],rax
   5cb09:	mov    rax,QWORD PTR [rsp+0x1d0]
   5cb11:	mov    QWORD PTR [rsp],rax
   5cb15:	movabs rax,0x1ffffffffffffffe
   5cb1f:	cmp    QWORD PTR [rsp+0x20],rax
   5cb24:	ja     5cdb6 <_obstack_memory_used@@Base+0x10136>
   5cb2a:	mov    rax,QWORD PTR [rsp+0x20]
   5cb2f:	lea    rbx,[rax+0x1]
   5cb33:	lea    rbp,[rbx*8+0x0]
   5cb3b:	mov    rdi,rbp
   5cb3e:	call   a4a0 <malloc@plt>
   5cb43:	mov    r13,rax
   5cb46:	test   rax,rax
   5cb49:	je     5cdb6 <_obstack_memory_used@@Base+0x10136>
   5cb4f:	mov    rax,QWORD PTR [rsp+0x10]
   5cb54:	cmp    QWORD PTR [rax+0x98],0x0
   5cb5c:	je     5cefc <_obstack_memory_used@@Base+0x1027c>
   5cb62:	mov    rdi,rbp
   5cb65:	call   a4a0 <malloc@plt>
   5cb6a:	mov    rbp,rax
   5cb6d:	mov    r12,rax
   5cb70:	test   rax,rax
   5cb73:	je     5d1a3 <_obstack_memory_used@@Base+0x10523>
   5cb79:	lea    rax,[rsp+0x100]
   5cb81:	mov    QWORD PTR [rsp+0x28],rbp
   5cb86:	mov    rbp,QWORD PTR [rsp+0x20]
   5cb8b:	lea    r15,[rsp+0xe0]
   5cb93:	mov    QWORD PTR [rsp+0x18],rax
   5cb98:	lea    rdx,[rbx*8+0x0]
   5cba0:	xor    esi,esi
   5cba2:	mov    rdi,r12
   5cba5:	call   a1b0 <memset@plt>
   5cbaa:	mov    rax,QWORD PTR [rsp]
   5cbae:	pxor   xmm0,xmm0
   5cbb2:	mov    rsi,r15
   5cbb5:	mov    QWORD PTR [rsp+0xe0],r13
   5cbbd:	mov    rdi,r14
   5cbc0:	mov    QWORD PTR [rsp+0xf0],rax
   5cbc8:	mov    rax,QWORD PTR [rsp+0x18]
   5cbcd:	mov    QWORD PTR [rsp+0xe8],r12
   5cbd5:	mov    QWORD PTR [rsp+0xf8],rbp
   5cbdd:	mov    QWORD PTR [rax+0x10],0x0
   5cbe5:	movaps XMMWORD PTR [rax],xmm0
   5cbe8:	call   55140 <_obstack_memory_used@@Base+0x84c0>
   5cbed:	mov    rdi,QWORD PTR [rsp+0x110]
   5cbf5:	mov    DWORD PTR [rsp+0x8],eax
   5cbf9:	call   9ce0 <free@plt>
   5cbfe:	mov    eax,DWORD PTR [rsp+0x8]
   5cc02:	test   eax,eax
   5cc04:	jne    5d131 <_obstack_memory_used@@Base+0x104b1>
   5cc0a:	cmp    QWORD PTR [r13+0x0],0x0
   5cc0f:	jne    5d170 <_obstack_memory_used@@Base+0x104f0>
   5cc15:	cmp    QWORD PTR [r12],0x0
   5cc1a:	jne    5d170 <_obstack_memory_used@@Base+0x104f0>
   5cc20:	sub    rbp,0x1
   5cc24:	jb     5cc49 <_obstack_memory_used@@Base+0xffc9>
   5cc26:	mov    rax,QWORD PTR [rsp+0x1d8]
   5cc2e:	xchg   ax,ax
   5cc30:	mov    rsi,QWORD PTR [rax+rbp*8]
   5cc34:	test   rsi,rsi
   5cc37:	je     5cc43 <_obstack_memory_used@@Base+0xffc3>
   5cc39:	test   BYTE PTR [rsi+0x68],0x10
   5cc3d:	jne    5cfff <_obstack_memory_used@@Base+0x1037f>
   5cc43:	sub    rbp,0x1
   5cc47:	jae    5cc30 <_obstack_memory_used@@Base+0xffb0>
   5cc49:	mov    rdi,r13
   5cc4c:	call   9ce0 <free@plt>
   5cc51:	mov    rdi,r12
   5cc54:	call   9ce0 <free@plt>
   5cc59:	mov    rdi,r14
   5cc5c:	call   52e00 <_obstack_memory_used@@Base+0x6180>
   5cc61:	mov    rbx,QWORD PTR [rsp+0xd8]
   5cc69:	movsxd rax,DWORD PTR [rsp+0x8c]
   5cc71:	add    rbx,rax
   5cc74:	mov    QWORD PTR [rsp+0xd8],rbx
   5cc7c:	cmp    QWORD PTR [rsp+0x70],rbx
   5cc81:	jg     5c1c1 <_obstack_memory_used@@Base+0xf541>
   5cc87:	cmp    QWORD PTR [rsp+0x60],rbx
   5cc8c:	jl     5c1c1 <_obstack_memory_used@@Base+0xf541>
   5cc92:	mov    eax,DWORD PTR [rsp+0x88]
   5cc99:	cmp    eax,0x7
   5cc9c:	jne    5c026 <_obstack_memory_used@@Base+0xf3a6>
   5cca2:	mov    rax,rbx
   5cca5:	xor    ecx,ecx
   5cca7:	cmp    QWORD PTR [rsp+0x60],rbx
   5ccac:	jle    5c1ed <_obstack_memory_used@@Base+0xf56d>
   5ccb2:	mov    rsi,QWORD PTR [rsp+0x58]
   5ccb7:	mov    rdi,QWORD PTR [rsp+0x78]
   5ccbc:	mov    r10,QWORD PTR [rsp+0xc0]
   5ccc4:	mov    r9,QWORD PTR [rsp+0x60]
   5ccc9:	mov    r8,QWORD PTR [rsp+0x80]
   5ccd1:	jmp    5ccdb <_obstack_memory_used@@Base+0x1005b>
   5ccd3:	nop    DWORD PTR [rax+rax*1+0x0]
   5ccd8:	mov    r10,rax
   5ccdb:	movzx  edx,BYTE PTR [r8+rax*1]
   5cce0:	movzx  edx,BYTE PTR [rdi+rdx*1]
   5cce4:	cmp    BYTE PTR [rsi+rdx*1],0x0
   5cce8:	jne    5d044 <_obstack_memory_used@@Base+0x103c4>
   5ccee:	add    rax,0x1
   5ccf2:	mov    ecx,0x1
   5ccf7:	cmp    r9,rax
   5ccfa:	jne    5ccd8 <_obstack_memory_used@@Base+0x10058>
   5ccfc:	mov    rcx,QWORD PTR [rsp+0x60]
   5cd01:	mov    QWORD PTR [rsp+0xc0],r10
   5cd09:	mov    QWORD PTR [rsp+0xd8],rcx
   5cd11:	jmp    5c190 <_obstack_memory_used@@Base+0xf510>
   5cd16:	cs nop WORD PTR [rax+rax*1+0x0]
   5cd20:	mov    r13,rbx
   5cd23:	mov    rdx,QWORD PTR [rsp+0x1d8]
   5cd2b:	mov    rbx,QWORD PTR [rsp+0x98]
   5cd33:	mov    DWORD PTR [rsp+0xd0],eax
   5cd3a:	test   rdx,rdx
   5cd3d:	je     5cdb3 <_obstack_memory_used@@Base+0x10133>
   5cd3f:	xor    r12d,r12d
   5cd42:	jmp    5c416 <_obstack_memory_used@@Base+0xf796>
   5cd47:	nop    WORD PTR [rax+rax*1+0x0]
   5cd50:	mov    DWORD PTR [rsp+0x54],0x1
   5cd58:	mov    rax,QWORD PTR [rsp+0x228]
   5cd60:	sub    rax,QWORD PTR fs:0x28
   5cd69:	jne    5d245 <_obstack_memory_used@@Base+0x105c5>
   5cd6f:	mov    eax,DWORD PTR [rsp+0x54]
   5cd73:	add    rsp,0x238
   5cd7a:	pop    rbx
   5cd7b:	pop    rbp
   5cd7c:	pop    r12
   5cd7e:	pop    r13
   5cd80:	pop    r14
   5cd82:	pop    r15
   5cd84:	ret    
   5cd85:	mov    rdi,QWORD PTR [rsp+0x1b8]
   5cd8d:	mov    rsi,r13
   5cd90:	call   53880 <_obstack_memory_used@@Base+0x6c00>
   5cd95:	test   al,al
   5cd97:	jne    5c3fa <_obstack_memory_used@@Base+0xf77a>
   5cd9d:	cmp    QWORD PTR [rsp+0x1d8],0x0
   5cda6:	mov    DWORD PTR [rsp+0xd0],0xc
   5cdb1:	jne    5cd3f <_obstack_memory_used@@Base+0x100bf>
   5cdb3:	xor    r15d,r15d
   5cdb6:	mov    DWORD PTR [rsp+0x54],0xc
   5cdbe:	mov    rdi,r15
   5cdc1:	call   9ce0 <free@plt>
   5cdc6:	mov    rax,QWORD PTR [rsp+0x30]
   5cdcb:	cmp    QWORD PTR [rax+0x98],0x0
   5cdd3:	jne    5cfd8 <_obstack_memory_used@@Base+0x10358>
   5cdd9:	mov    rdi,QWORD PTR [rsp+0x130]
   5cde1:	call   9ce0 <free@plt>
   5cde6:	mov    rdi,QWORD PTR [rsp+0x138]
   5cdee:	call   9ce0 <free@plt>
   5cdf3:	cmp    BYTE PTR [rsp+0x1ab],0x0
   5cdfb:	je     5cd58 <_obstack_memory_used@@Base+0x100d8>
   5ce01:	mov    rdi,QWORD PTR [rsp+0x128]
   5ce09:	call   9ce0 <free@plt>
   5ce0e:	jmp    5cd58 <_obstack_memory_used@@Base+0x100d8>
   5ce13:	nop    DWORD PTR [rax+rax*1+0x0]
   5ce18:	mov    r12,QWORD PTR [r12+rbp*8]
   5ce1c:	jmp    5c40b <_obstack_memory_used@@Base+0xf78b>
   5ce21:	mov    r13,rbx
   5ce24:	mov    rbx,QWORD PTR [rsp+0x98]
   5ce2c:	mov    rbp,rcx
   5ce2f:	mov    DWORD PTR [rsp+0xd0],0x0
   5ce3a:	jmp    5c3e2 <_obstack_memory_used@@Base+0xf762>
   5ce3f:	mov    r13,QWORD PTR [rbx+0x50]
   5ce43:	test   r13,r13
   5ce46:	jne    5c2d0 <_obstack_memory_used@@Base+0xf650>
   5ce4c:	mov    DWORD PTR [rsp+0x54],0xc
   5ce54:	mov    r15,QWORD PTR [rsp+0x1d8]
   5ce5c:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5ce61:	nop    DWORD PTR [rax+0x0]
   5ce68:	cmp    QWORD PTR [rsp+0x70],rbx
   5ce6d:	jg     5c1c1 <_obstack_memory_used@@Base+0xf541>
   5ce73:	mov    rsi,QWORD PTR [rsp+0x58]
   5ce78:	mov    rcx,QWORD PTR [rsp+0x78]
   5ce7d:	xor    edx,edx
   5ce7f:	mov    r9,QWORD PTR [rsp+0xc8]
   5ce87:	mov    r8,QWORD PTR [rsp+0x70]
   5ce8c:	mov    r10,QWORD PTR [rsp+0x80]
   5ce94:	mov    rdi,QWORD PTR [rsp+0x68]
   5ce99:	jmp    5ceb5 <_obstack_memory_used@@Base+0x10235>
   5ce9b:	nop    DWORD PTR [rax+rax*1+0x0]
   5cea0:	sub    rbx,0x1
   5cea4:	mov    edx,0x1
   5cea9:	cmp    r8,rbx
   5ceac:	jg     5d017 <_obstack_memory_used@@Base+0x10397>
   5ceb2:	mov    r9,rbx
   5ceb5:	xor    eax,eax
   5ceb7:	cmp    rdi,rbx
   5ceba:	jle    5cec1 <_obstack_memory_used@@Base+0x10241>
   5cebc:	movzx  eax,BYTE PTR [r10+rbx*1]
   5cec1:	test   rcx,rcx
   5cec4:	je     5ceca <_obstack_memory_used@@Base+0x1024a>
   5cec6:	movzx  eax,BYTE PTR [rcx+rax*1]
   5ceca:	cmp    BYTE PTR [rsi+rax*1],0x0
   5cece:	je     5cea0 <_obstack_memory_used@@Base+0x10220>
   5ced0:	mov    QWORD PTR [rsp+0xc8],r9
   5ced8:	test   dl,dl
   5ceda:	je     5cee4 <_obstack_memory_used@@Base+0x10264>
   5cedc:	mov    QWORD PTR [rsp+0xd8],r9
   5cee4:	cmp    QWORD PTR [rsp+0x70],rbx
   5cee9:	jg     5c1c1 <_obstack_memory_used@@Base+0xf541>
   5ceef:	mov    rbx,QWORD PTR [rsp+0xd8]
   5cef7:	jmp    5c1f4 <_obstack_memory_used@@Base+0xf574>
   5cefc:	mov    rax,QWORD PTR [rsp]
   5cf00:	lea    r15,[rsp+0xe0]
   5cf08:	pxor   xmm0,xmm0
   5cf0c:	mov    rdi,r14
   5cf0f:	mov    rsi,r15
   5cf12:	mov    QWORD PTR [rsp+0xe0],r13
   5cf1a:	mov    QWORD PTR [rsp+0xf0],rax
   5cf22:	mov    rax,QWORD PTR [rsp+0x20]
   5cf27:	mov    QWORD PTR [rsp+0xe8],0x0
   5cf33:	mov    QWORD PTR [rsp+0xf8],rax
   5cf3b:	mov    QWORD PTR [rsp+0x110],0x0
   5cf47:	movaps XMMWORD PTR [rsp+0x100],xmm0
   5cf4f:	call   55140 <_obstack_memory_used@@Base+0x84c0>
   5cf54:	mov    rdi,QWORD PTR [rsp+0x110]
   5cf5c:	mov    ebx,eax
   5cf5e:	mov    DWORD PTR [rsp+0x8],eax
   5cf62:	call   9ce0 <free@plt>
   5cf67:	test   ebx,ebx
   5cf69:	jne    5d19e <_obstack_memory_used@@Base+0x1051e>
   5cf6f:	cmp    QWORD PTR [r13+0x0],0x0
   5cf74:	je     5d09f <_obstack_memory_used@@Base+0x1041f>
   5cf7a:	mov    rdi,QWORD PTR [rsp+0x1d8]
   5cf82:	call   9ce0 <free@plt>
   5cf87:	mov    rax,QWORD PTR [rsp]
   5cf8b:	mov    QWORD PTR [rsp+0x1d8],r13
   5cf93:	mov    QWORD PTR [rsp+0x1d0],rax
   5cf9b:	mov    rax,QWORD PTR [rsp+0x20]
   5cfa0:	mov    QWORD PTR [rsp+0x1c8],rax
   5cfa8:	jmp    5c553 <_obstack_memory_used@@Base+0xf8d3>
   5cfad:	mov    DWORD PTR [rsp+0x54],eax
   5cfb1:	mov    r14,rcx
   5cfb4:	mov    r15,QWORD PTR [rsp+0x1d8]
   5cfbc:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5cfc1:	mov    rax,QWORD PTR [rsp+0x30]
   5cfc6:	test   BYTE PTR [rax+0xb0],0x2
   5cfcd:	jne    5bf05 <_obstack_memory_used@@Base+0xf285>
   5cfd3:	jmp    5bf41 <_obstack_memory_used@@Base+0xf2c1>
   5cfd8:	mov    rdi,r14
   5cfdb:	call   52e00 <_obstack_memory_used@@Base+0x6180>
   5cfe0:	mov    rdi,QWORD PTR [rsp+0x218]
   5cfe8:	call   9ce0 <free@plt>
   5cfed:	mov    rdi,QWORD PTR [rsp+0x1f8]
   5cff5:	call   9ce0 <free@plt>
   5cffa:	jmp    5cdd9 <_obstack_memory_used@@Base+0x10159>
   5cfff:	mov    rdx,rbp
   5d002:	mov    rdi,r14
   5d005:	lea    rbx,[rbp+0x1]
   5d009:	call   51e30 <_obstack_memory_used@@Base+0x51b0>
   5d00e:	mov    QWORD PTR [rsp],rax
   5d012:	jmp    5cb98 <_obstack_memory_used@@Base+0xff18>
   5d017:	mov    QWORD PTR [rsp+0xd8],rbx
   5d01f:	mov    r15,QWORD PTR [rsp+0x1d8]
   5d027:	mov    DWORD PTR [rsp+0x54],0x1
   5d02f:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5d034:	mov    r14,rcx
   5d037:	jmp    5c1f4 <_obstack_memory_used@@Base+0xf574>
   5d03c:	mov    r14,rcx
   5d03f:	jmp    5c1c1 <_obstack_memory_used@@Base+0xf541>
   5d044:	mov    QWORD PTR [rsp+0xc0],r10
   5d04c:	test   cl,cl
   5d04e:	je     5c1f4 <_obstack_memory_used@@Base+0xf574>
   5d054:	mov    QWORD PTR [rsp+0xd8],r10
   5d05c:	mov    rbx,r10
   5d05f:	jmp    5c1ed <_obstack_memory_used@@Base+0xf56d>
   5d064:	cmp    BYTE PTR [r13+0x68],0x0
   5d069:	js     5d0ca <_obstack_memory_used@@Base+0x1044a>
   5d06b:	mov    rax,QWORD PTR [rsp]
   5d06f:	mov    edi,DWORD PTR [rsp+0x50]
   5d073:	mov    QWORD PTR [rsp+0x28],0x1
   5d07c:	mov    QWORD PTR [rsp+0x20],rax
   5d081:	test   edi,edi
   5d083:	jne    5c31e <_obstack_memory_used@@Base+0xf69e>
   5d089:	jmp    5c4b9 <_obstack_memory_used@@Base+0xf839>
   5d08e:	mov    r12,rax
   5d091:	jmp    5c350 <_obstack_memory_used@@Base+0xf6d0>
   5d096:	mov    r13,QWORD PTR [rbx+0x58]
   5d09a:	jmp    5ce43 <_obstack_memory_used@@Base+0x101c3>
   5d09f:	mov    rdi,r13
   5d0a2:	call   9ce0 <free@plt>
   5d0a7:	jmp    5cc59 <_obstack_memory_used@@Base+0xffd9>
   5d0ac:	mov    rdx,QWORD PTR [r13+0x50]
   5d0b0:	lea    rdi,[rsp+0xd0]
   5d0b8:	mov    ecx,eax
   5d0ba:	mov    rsi,rbx
   5d0bd:	call   4e560 <_obstack_memory_used@@Base+0x18e0>
   5d0c2:	mov    r13,rax
   5d0c5:	jmp    5ce43 <_obstack_memory_used@@Base+0x101c3>
   5d0ca:	mov    rdx,QWORD PTR [rsp]
   5d0ce:	mov    rsi,r13
   5d0d1:	mov    rdi,r14
   5d0d4:	call   51e30 <_obstack_memory_used@@Base+0x51b0>
   5d0d9:	mov    QWORD PTR [rsp+0x28],rax
   5d0de:	test   rax,rax
   5d0e1:	je     5c31e <_obstack_memory_used@@Base+0xf69e>
   5d0e7:	jmp    5d06b <_obstack_memory_used@@Base+0x103eb>
   5d0e9:	lea    rbp,[r13+0x8]
   5d0ed:	xor    edx,edx
   5d0ef:	mov    rdi,r14
   5d0f2:	mov    rsi,rbp
   5d0f5:	call   53750 <_obstack_memory_used@@Base+0x6ad0>
   5d0fa:	mov    DWORD PTR [rsp+0xd0],eax
   5d101:	test   eax,eax
   5d103:	jne    5d1df <_obstack_memory_used@@Base+0x1055f>
   5d109:	movzx  eax,BYTE PTR [r13+0x68]
   5d10e:	test   al,0x40
   5d110:	jne    5d1b8 <_obstack_memory_used@@Base+0x10538>
   5d116:	mov    BYTE PTR [rsp+0x10],0x0
   5d11b:	jmp    5c304 <_obstack_memory_used@@Base+0xf684>
   5d120:	mov    r13,QWORD PTR [rbx+0x60]
   5d124:	jmp    5ce43 <_obstack_memory_used@@Base+0x101c3>
   5d129:	mov    r15,rcx
   5d12c:	jmp    5cdb6 <_obstack_memory_used@@Base+0x10136>
   5d131:	mov    r12,QWORD PTR [rsp+0x28]
   5d136:	mov    rdi,r13
   5d139:	call   9ce0 <free@plt>
   5d13e:	mov    rdi,r12
   5d141:	call   9ce0 <free@plt>
   5d146:	cmp    DWORD PTR [rsp+0x8],0x1
   5d14b:	je     5cc59 <_obstack_memory_used@@Base+0xffd9>
   5d151:	mov    eax,DWORD PTR [rsp+0x8]
   5d155:	mov    r15,QWORD PTR [rsp+0x1d8]
   5d15d:	mov    DWORD PTR [rsp+0x54],eax
   5d161:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5d166:	cs nop WORD PTR [rax+rax*1+0x0]
   5d170:	mov    rdi,QWORD PTR [rsp+0x10]
   5d175:	mov    rcx,rbx
   5d178:	mov    rdx,r12
   5d17b:	mov    rsi,r13
   5d17e:	mov    QWORD PTR [rsp+0x20],rbp
   5d183:	call   52fb0 <_obstack_memory_used@@Base+0x6330>
   5d188:	mov    rdi,r12
   5d18b:	mov    ebx,eax
   5d18d:	mov    DWORD PTR [rsp+0x8],eax
   5d191:	call   9ce0 <free@plt>
   5d196:	test   ebx,ebx
   5d198:	je     5cf7a <_obstack_memory_used@@Base+0x102fa>
   5d19e:	xor    r12d,r12d
   5d1a1:	jmp    5d136 <_obstack_memory_used@@Base+0x104b6>
   5d1a3:	mov    rdi,r13
   5d1a6:	call   9ce0 <free@plt>
   5d1ab:	mov    DWORD PTR [rsp+0x54],0xc
   5d1b3:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5d1b8:	mov    rsi,rbp
   5d1bb:	mov    rdi,r14
   5d1be:	call   56590 <_obstack_memory_used@@Base+0x9910>
   5d1c3:	mov    DWORD PTR [rsp+0xd0],eax
   5d1ca:	test   eax,eax
   5d1cc:	jne    5d1df <_obstack_memory_used@@Base+0x1055f>
   5d1ce:	movzx  eax,BYTE PTR [r13+0x68]
   5d1d3:	jmp    5d116 <_obstack_memory_used@@Base+0x10496>
   5d1d8:	xor    eax,eax
   5d1da:	jmp    5c629 <_obstack_memory_used@@Base+0xf9a9>
   5d1df:	cdqe   
   5d1e1:	mov    QWORD PTR [rsp+0x20],rax
   5d1e6:	jmp    5c4b9 <_obstack_memory_used@@Base+0xf839>
   5d1eb:	cmp    r10,rax
   5d1ee:	je     5d205 <_obstack_memory_used@@Base+0x10585>
   5d1f0:	mov    rax,QWORD PTR [r9+rax*8]
   5d1f4:	mov    QWORD PTR [rdx],rax
   5d1f7:	cmp    r10,rcx
   5d1fa:	je     5d20a <_obstack_memory_used@@Base+0x1058a>
   5d1fc:	mov    rcx,QWORD PTR [r9+rcx*8]
   5d200:	jmp    5c674 <_obstack_memory_used@@Base+0xf9f4>
   5d205:	mov    rax,r8
   5d208:	jmp    5d1f4 <_obstack_memory_used@@Base+0x10574>
   5d20a:	mov    rcx,r8
   5d20d:	jmp    5c674 <_obstack_memory_used@@Base+0xf9f4>
   5d212:	mov    DWORD PTR [rsp+0x54],eax
   5d216:	mov    r15,QWORD PTR [rsp+0x1d8]
   5d21e:	jmp    5cdbe <_obstack_memory_used@@Base+0x1013e>
   5d223:	mov    rsi,QWORD PTR [rsp+0xa0]
   5d22b:	mov    rax,QWORD PTR [rsp+0x1c8]
   5d233:	mov    QWORD PTR [rsi],0x0
   5d23a:	mov    QWORD PTR [rsi+0x8],rax
   5d23e:	xor    eax,eax
   5d240:	jmp    5c629 <_obstack_memory_used@@Base+0xf9a9>
   5d245:	call   a0a0 <__stack_chk_fail@plt>
   5d24a:	nop    WORD PTR [rax+rax*1+0x0]
   5d250:	endbr64 
   5d254:	push   r13
   5d256:	mov    r13,rcx
   5d259:	push   r12
   5d25b:	mov    r12,rsi
   5d25e:	push   rbp
   5d25f:	mov    rbp,rdi
   5d262:	mov    rdi,rsi
   5d265:	push   rbx
   5d266:	mov    rbx,rdx
   5d269:	sub    rsp,0x8
   5d26d:	call   a060 <strlen@plt>
   5d272:	mov    rdx,rax
   5d275:	test   BYTE PTR [rbp+0x38],0x10
   5d279:	je     5d2b0 <_obstack_memory_used@@Base+0x10630>
   5d27b:	sub    rsp,0x8
   5d27f:	push   0x0
   5d281:	push   0x0
   5d283:	push   0x0
   5d285:	xor    ecx,ecx
   5d287:	mov    rsi,r12
   5d28a:	mov    rdi,rbp
   5d28d:	mov    r9,rdx
   5d290:	mov    r8,rdx
   5d293:	call   5bb60 <_obstack_memory_used@@Base+0xeee0>
   5d298:	add    rsp,0x20
   5d29c:	test   eax,eax
   5d29e:	setne  al
   5d2a1:	add    rsp,0x8
   5d2a5:	pop    rbx
   5d2a6:	movzx  eax,al
   5d2a9:	pop    rbp
   5d2aa:	pop    r12
   5d2ac:	pop    r13
   5d2ae:	ret    
   5d2af:	nop
   5d2b0:	sub    rsp,0x8
   5d2b4:	push   0x0
   5d2b6:	push   r13
   5d2b8:	push   rbx
   5d2b9:	jmp    5d285 <_obstack_memory_used@@Base+0x10605>
   5d2bb:	nop    DWORD PTR [rax+rax*1+0x0]
   5d2c0:	endbr64 
   5d2c4:	push   r12
   5d2c6:	mov    r10,rsi
   5d2c9:	push   rbp
   5d2ca:	mov    ebp,edi
   5d2cc:	movabs rdi,0xcccccccccccccccd
   5d2d6:	sub    rsp,0xb8
   5d2dd:	movsxd rcx,DWORD PTR [rsi+0x4]
   5d2e1:	mov    rax,QWORD PTR fs:0x28
   5d2ea:	mov    QWORD PTR [rsp+0xa8],rax
   5d2f2:	xor    eax,eax
   5d2f4:	mov    BYTE PTR [rsp+0x14],0x0
   5d2f9:	lea    r9,[rsp+0x14]
   5d2fe:	mov    rax,rcx
   5d301:	mov    r11,rcx
   5d304:	neg    rax
   5d307:	test   ecx,ecx
   5d309:	cmovs  rcx,rax
   5d30d:	nop    DWORD PTR [rax]
   5d310:	mov    rax,rcx
   5d313:	mov    r8,r9
   5d316:	sub    r9,0x1
   5d31a:	mul    rdi
   5d31d:	mov    rax,rcx
   5d320:	shr    rdx,0x3
   5d324:	lea    rsi,[rdx+rdx*4]
   5d328:	add    rsi,rsi
   5d32b:	sub    rax,rsi
   5d32e:	add    eax,0x30
   5d331:	mov    BYTE PTR [r9],al
   5d334:	mov    rax,rcx
   5d337:	mov    rcx,rdx
   5d33a:	cmp    rax,0x9
   5d33e:	ja     5d310 <_obstack_memory_used@@Base+0x10690>
   5d340:	test   r11d,r11d
   5d343:	jns    5d34e <_obstack_memory_used@@Base+0x106ce>
   5d345:	mov    BYTE PTR [r9-0x1],0x2d
   5d34a:	lea    r9,[r8-0x2]
   5d34e:	lea    r12,[rsp+0x20]
   5d353:	movsx  r8d,WORD PTR [r10]
   5d357:	mov    esi,0x1
   5d35c:	xor    eax,eax
   5d35e:	mov    rdi,r12
   5d361:	lea    rcx,[rip+0xfcc3]        # 6d02b <_obstack_memory_used@@Base+0x203ab>
   5d368:	mov    edx,0x40
   5d36d:	call   a9b0 <__sprintf_chk@plt>
   5d372:	mov    rsi,r12
   5d375:	mov    edi,ebp
   5d377:	call   3c8b0 <__sprintf_chk@plt+0x31f00>
   5d37c:	cmp    eax,0xffffffff
   5d37f:	je     5d3a6 <_obstack_memory_used@@Base+0x10726>
   5d381:	mov    edi,ebp
   5d383:	lea    rsi,[rsp+0x60]
   5d388:	call   3c960 <__sprintf_chk@plt+0x31fb0>
   5d38d:	mov    rdi,rax
   5d390:	test   rax,rax
   5d393:	je     5d3d6 <_obstack_memory_used@@Base+0x10756>
   5d395:	xor    esi,esi
   5d397:	mov    edx,0xa
   5d39c:	call   a410 <strtol@plt>
   5d3a1:	test   rax,rax
   5d3a4:	js     5d3c4 <_obstack_memory_used@@Base+0x10744>
   5d3a6:	mov    rdx,QWORD PTR [rsp+0xa8]
   5d3ae:	sub    rdx,QWORD PTR fs:0x28
   5d3b7:	jne    5d3dd <_obstack_memory_used@@Base+0x1075d>
   5d3b9:	add    rsp,0xb8
   5d3c0:	pop    rbp
   5d3c1:	pop    r12
   5d3c3:	ret    
   5d3c4:	call   9e40 <__errno_location@plt>
   5d3c9:	mov    DWORD PTR [rax],0x5
   5d3cf:	mov    eax,0xffffffff
   5d3d4:	jmp    5d3a6 <_obstack_memory_used@@Base+0x10726>
   5d3d6:	mov    eax,0xffffffff
   5d3db:	jmp    5d3a6 <_obstack_memory_used@@Base+0x10726>
   5d3dd:	call   a0a0 <__stack_chk_fail@plt>
   5d3e2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5d3ed:	nop    DWORD PTR [rax]
   5d3f0:	endbr64 
   5d3f4:	push   rax
   5d3f5:	pop    rax
   5d3f6:	lea    rdi,[rip+0x21683]        # 7ea80 <_obstack_memory_used@@Base+0x31e00>
   5d3fd:	mov    edx,0x4
   5d402:	sub    rsp,0x8
   5d406:	mov    rax,QWORD PTR [rip+0x1ebdb]        # 7bfe8 <_obstack_memory_used@@Base+0x2f368>
   5d40d:	mov    rcx,QWORD PTR [rip+0x21bac]        # 7efc0 <obstack_alloc_failed_handler@@Base+0x188>
   5d414:	mov    rsi,QWORD PTR [rax]
   5d417:	call   41d40 <argp_help@@Base>
   5d41c:	call   4b700 <argp_usage@@Base+0x8380>
   5d421:	mov    edi,0x2
   5d426:	call   a820 <exit@plt>
   5d42b:	nop    DWORD PTR [rax+rax*1+0x0]
   5d430:	endbr64 
   5d434:	push   r15
   5d436:	push   r14
   5d438:	push   r13
   5d43a:	push   r12
   5d43c:	push   rbp
   5d43d:	push   rbx
   5d43e:	sub    rsp,0x88
   5d445:	mov    QWORD PTR [rsp],rdi
   5d449:	mov    QWORD PTR [rsp+0x8],rsi
   5d44e:	mov    QWORD PTR [rsp+0x10],rdx
   5d453:	mov    rax,QWORD PTR fs:0x28
   5d45c:	mov    QWORD PTR [rsp+0x78],rax
   5d461:	xor    eax,eax
   5d463:	test   rsi,rsi
   5d466:	je     5d607 <_obstack_memory_used@@Base+0x10987>
   5d46c:	test   rdx,rdx
   5d46f:	je     5d607 <_obstack_memory_used@@Base+0x10987>
   5d475:	mov    rbp,rsi
   5d478:	xor    r13d,r13d
   5d47b:	call   a060 <strlen@plt>
   5d480:	lea    rdi,[rsp+0x20]
   5d485:	xor    edx,edx
   5d487:	xor    esi,esi
   5d489:	movsxd r12,eax
   5d48c:	lea    rax,[rip+0xfffffffffffe820d]        # 456a0 <argp_usage@@Base+0x2320>
   5d493:	and    BYTE PTR [rsp+0x70],0xfe
   5d498:	mov    QWORD PTR [rsp+0x58],rax
   5d49d:	mov    rax,QWORD PTR [rip+0x1eae4]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   5d4a4:	mov    QWORD PTR [rsp+0x18],rdi
   5d4a9:	mov    QWORD PTR [rsp+0x60],rax
   5d4ae:	call   4c9a0 <argp_usage@@Base+0x9620>
   5d4b3:	mov    r14,QWORD PTR [rsp+0x38]
   5d4b8:	jmp    5d4f0 <_obstack_memory_used@@Base+0x10870>
   5d4ba:	nop    WORD PTR [rax+rax*1+0x0]
   5d4c0:	mov    rsi,rbp
   5d4c3:	lea    r13d,[r13+rbx*1+0x1]
   5d4c8:	lea    rbp,[rbp+r15*1+0x1]
   5d4cd:	mov    rdx,r15
   5d4d0:	call   a420 <memcpy@plt>
   5d4d5:	mov    r14,QWORD PTR [rsp+0x38]
   5d4da:	movsxd rax,r13d
   5d4dd:	add    r14,r15
   5d4e0:	mov    QWORD PTR [rsp+0x38],r14
   5d4e5:	cmp    QWORD PTR [rsp+0x10],rax
   5d4ea:	jb     5d590 <_obstack_memory_used@@Base+0x10910>
   5d4f0:	lea    rsi,[rip+0xf9e6]        # 6cedd <_obstack_memory_used@@Base+0x2025d>
   5d4f7:	mov    rdi,rbp
   5d4fa:	call   a270 <strcspn@plt>
   5d4ff:	mov    rbx,rax
   5d502:	test   eax,eax
   5d504:	je     5d590 <_obstack_memory_used@@Base+0x10910>
   5d50a:	cmp    QWORD PTR [rsp+0x8],rbp
   5d50f:	je     5d52e <_obstack_memory_used@@Base+0x108ae>
   5d511:	cmp    r14,QWORD PTR [rsp+0x40]
   5d516:	je     5d650 <_obstack_memory_used@@Base+0x109d0>
   5d51c:	lea    rax,[r14+0x1]
   5d520:	mov    QWORD PTR [rsp+0x38],rax
   5d525:	mov    BYTE PTR [r14],0x2c
   5d529:	mov    r14,QWORD PTR [rsp+0x38]
   5d52e:	mov    rax,QWORD PTR [rsp+0x40]
   5d533:	sub    rax,r14
   5d536:	cmp    r12,rax
   5d539:	ja     5d630 <_obstack_memory_used@@Base+0x109b0>
   5d53f:	mov    rsi,QWORD PTR [rsp]
   5d543:	mov    rdi,r14
   5d546:	mov    rdx,r12
   5d549:	movsxd r15,ebx
   5d54c:	call   a420 <memcpy@plt>
   5d551:	mov    rdi,QWORD PTR [rsp+0x38]
   5d556:	mov    rax,QWORD PTR [rsp+0x40]
   5d55b:	add    rdi,r12
   5d55e:	sub    rax,rdi
   5d561:	mov    QWORD PTR [rsp+0x38],rdi
   5d566:	cmp    r15,rax
   5d569:	jbe    5d4c0 <_obstack_memory_used@@Base+0x10840>
   5d56f:	mov    rdi,QWORD PTR [rsp+0x18]
   5d574:	mov    rsi,r15
   5d577:	call   4ca80 <_obstack_newchunk@@Base>
   5d57c:	mov    rdi,QWORD PTR [rsp+0x38]
   5d581:	jmp    5d4c0 <_obstack_memory_used@@Base+0x10840>
   5d586:	cs nop WORD PTR [rax+rax*1+0x0]
   5d590:	cmp    QWORD PTR [rsp+0x40],r14
   5d595:	je     5d680 <_obstack_memory_used@@Base+0x10a00>
   5d59b:	lea    rax,[r14+0x1]
   5d59f:	mov    QWORD PTR [rsp+0x38],rax
   5d5a4:	mov    BYTE PTR [r14],0x0
   5d5a8:	mov    rdi,QWORD PTR [rsp+0x30]
   5d5ad:	mov    rax,QWORD PTR [rsp+0x38]
   5d5b2:	cmp    rdi,rax
   5d5b5:	je     5d670 <_obstack_memory_used@@Base+0x109f0>
   5d5bb:	mov    rdx,QWORD PTR [rsp+0x50]
   5d5c0:	add    rax,rdx
   5d5c3:	not    rdx
   5d5c6:	and    rax,rdx
   5d5c9:	mov    rdx,QWORD PTR [rsp+0x40]
   5d5ce:	mov    rsi,rax
   5d5d1:	sub    rsi,QWORD PTR [rsp+0x28]
   5d5d6:	mov    rcx,rdx
   5d5d9:	sub    rcx,QWORD PTR [rsp+0x28]
   5d5de:	cmp    rsi,rcx
   5d5e1:	mov    rsi,QWORD PTR [rip+0x21ab0]        # 7f098 <obstack_alloc_failed_handler@@Base+0x260>
   5d5e8:	cmovbe rdx,rax
   5d5ec:	mov    QWORD PTR [rsp+0x38],rdx
   5d5f1:	mov    QWORD PTR [rsp+0x30],rdx
   5d5f6:	call   a1a0 <fputs@plt>
   5d5fb:	mov    rdi,QWORD PTR [rsp+0x18]
   5d600:	xor    esi,esi
   5d602:	call   4cbf0 <_obstack_free@@Base>
   5d607:	mov    rax,QWORD PTR [rsp+0x78]
   5d60c:	sub    rax,QWORD PTR fs:0x28
   5d615:	jne    5d699 <_obstack_memory_used@@Base+0x10a19>
   5d61b:	add    rsp,0x88
   5d622:	pop    rbx
   5d623:	pop    rbp
   5d624:	pop    r12
   5d626:	pop    r13
   5d628:	pop    r14
   5d62a:	pop    r15
   5d62c:	ret    
   5d62d:	nop    DWORD PTR [rax]
   5d630:	mov    rdi,QWORD PTR [rsp+0x18]
   5d635:	mov    rsi,r12
   5d638:	call   4ca80 <_obstack_newchunk@@Base>
   5d63d:	mov    r14,QWORD PTR [rsp+0x38]
   5d642:	jmp    5d53f <_obstack_memory_used@@Base+0x108bf>
   5d647:	nop    WORD PTR [rax+rax*1+0x0]
   5d650:	mov    rdi,QWORD PTR [rsp+0x18]
   5d655:	mov    esi,0x1
   5d65a:	call   4ca80 <_obstack_newchunk@@Base>
   5d65f:	mov    r14,QWORD PTR [rsp+0x38]
   5d664:	jmp    5d51c <_obstack_memory_used@@Base+0x1089c>
   5d669:	nop    DWORD PTR [rax+0x0]
   5d670:	or     BYTE PTR [rsp+0x70],0x2
   5d675:	jmp    5d5bb <_obstack_memory_used@@Base+0x1093b>
   5d67a:	nop    WORD PTR [rax+rax*1+0x0]
   5d680:	mov    rdi,QWORD PTR [rsp+0x18]
   5d685:	mov    esi,0x1
   5d68a:	call   4ca80 <_obstack_newchunk@@Base>
   5d68f:	mov    r14,QWORD PTR [rsp+0x38]
   5d694:	jmp    5d59b <_obstack_memory_used@@Base+0x1091b>
   5d699:	call   a0a0 <__stack_chk_fail@plt>
   5d69e:	xchg   ax,ax
   5d6a0:	endbr64 
   5d6a4:	push   r12
   5d6a6:	push   rbp
   5d6a7:	mov    rbp,rsi
   5d6aa:	push   rbx
   5d6ab:	mov    rbx,rdi
   5d6ae:	call   9f30 <localeconv@plt>
   5d6b3:	mov    r12,QWORD PTR [rax]
   5d6b6:	mov    rdi,r12
   5d6b9:	call   a060 <strlen@plt>
   5d6be:	lea    rdi,[rbp+0x287]
   5d6c5:	lea    rdx,[rax-0x1]
   5d6c9:	cmp    rdx,0x10
   5d6cd:	mov    edx,0x1
   5d6d2:	cmovae rax,rdx
   5d6d6:	lea    rdx,[rip+0x9f17]        # 675f4 <_obstack_memory_used@@Base+0x1a974>
   5d6dd:	cmovae r12,rdx
   5d6e1:	cmp    rbx,0x3ff
   5d6e8:	jbe    5d758 <_obstack_memory_used@@Base+0x10ad8>
   5d6ea:	xor    edx,edx
   5d6ec:	xor    r9d,r9d
   5d6ef:	xor    ecx,ecx
   5d6f1:	mov    rsi,rbx
   5d6f4:	and    esi,0x3ff
   5d6fa:	lea    esi,[rsi+rsi*4]
   5d6fd:	lea    ecx,[rcx+rsi*2]
   5d700:	mov    esi,edx
   5d702:	mov    r8d,ecx
   5d705:	sar    esi,1
   5d707:	and    r8d,0x3ff
   5d70e:	shr    ecx,0xa
   5d711:	lea    esi,[rsi+r8*2]
   5d715:	mov    r8,rbx
   5d718:	shr    rbx,0xa
   5d71c:	add    edx,esi
   5d71e:	cmp    esi,0x3ff
   5d724:	ja     5d850 <_obstack_memory_used@@Base+0x10bd0>
   5d72a:	test   edx,edx
   5d72c:	setne  dl
   5d72f:	movzx  edx,dl
   5d732:	lea    esi,[r9+0x1]
   5d736:	cmp    r8,0xfffff
   5d73d:	jbe    5d890 <_obstack_memory_used@@Base+0x10c10>
   5d743:	cmp    esi,0x8
   5d746:	je     5d868 <_obstack_memory_used@@Base+0x10be8>
   5d74c:	mov    r9d,esi
   5d74f:	jmp    5d6f1 <_obstack_memory_used@@Base+0x10a71>
   5d751:	nop    DWORD PTR [rax+0x0]
   5d758:	mov    r8,rdi
   5d75b:	xor    esi,esi
   5d75d:	movabs r9,0xcccccccccccccccd
   5d767:	nop    WORD PTR [rax+rax*1+0x0]
   5d770:	mov    rax,rbx
   5d773:	sub    r8,0x1
   5d777:	mul    r9
   5d77a:	mov    rax,rbx
   5d77d:	shr    rdx,0x3
   5d781:	lea    rcx,[rdx+rdx*4]
   5d785:	add    rcx,rcx
   5d788:	sub    rax,rcx
   5d78b:	add    eax,0x30
   5d78e:	mov    BYTE PTR [r8],al
   5d791:	mov    rax,rbx
   5d794:	mov    rbx,rdx
   5d797:	cmp    rax,0x9
   5d79b:	ja     5d770 <_obstack_memory_used@@Base+0x10af0>
   5d79d:	test   esi,esi
   5d79f:	jne    5d816 <_obstack_memory_used@@Base+0x10b96>
   5d7a1:	mov    eax,0x42
   5d7a6:	mov    WORD PTR [rdi],ax
   5d7a9:	mov    rax,r8
   5d7ac:	pop    rbx
   5d7ad:	pop    rbp
   5d7ae:	pop    r12
   5d7b0:	ret    
   5d7b1:	add    ecx,edx
   5d7b3:	je     5d888 <_obstack_memory_used@@Base+0x10c08>
   5d7b9:	add    rbx,0x1
   5d7bd:	cmp    rbx,0x400
   5d7c4:	jne    5d888 <_obstack_memory_used@@Base+0x10c08>
   5d7ca:	cmp    esi,0x8
   5d7cd:	je     5d888 <_obstack_memory_used@@Base+0x10c08>
   5d7d3:	mov    rcx,rax
   5d7d6:	mov    BYTE PTR [rbp+0x286],0x30
   5d7dd:	lea    esi,[r9+0x2]
   5d7e1:	mov    edx,eax
   5d7e3:	not    rcx
   5d7e6:	add    rcx,rdi
   5d7e9:	cmp    eax,0x8
   5d7ec:	jae    5d908 <_obstack_memory_used@@Base+0x10c88>
   5d7f2:	test   al,0x4
   5d7f4:	jne    5d9ce <_obstack_memory_used@@Base+0x10d4e>
   5d7fa:	test   edx,edx
   5d7fc:	je     5d80e <_obstack_memory_used@@Base+0x10b8e>
   5d7fe:	movzx  eax,BYTE PTR [r12]
   5d803:	mov    BYTE PTR [rcx],al
   5d805:	test   dl,0x2
   5d808:	jne    5d9e2 <_obstack_memory_used@@Base+0x10d62>
   5d80e:	mov    BYTE PTR [rcx-0x1],0x31
   5d812:	lea    r8,[rcx-0x1]
   5d816:	movsxd rsi,esi
   5d819:	lea    rax,[rip+0x10548]        # 6dd68 <_obstack_memory_used@@Base+0x210e8>
   5d820:	lea    rdi,[rbp+0x289]
   5d827:	mov    BYTE PTR [rbp+0x288],0x69
   5d82e:	movzx  eax,BYTE PTR [rax+rsi*1]
   5d832:	mov    BYTE PTR [rbp+0x287],al
   5d838:	mov    eax,0x42
   5d83d:	mov    WORD PTR [rdi],ax
   5d840:	mov    rax,r8
   5d843:	pop    rbx
   5d844:	pop    rbp
   5d845:	pop    r12
   5d847:	ret    
   5d848:	nop    DWORD PTR [rax+rax*1+0x0]
   5d850:	cmp    edx,0x400
   5d856:	setne  dl
   5d859:	movzx  edx,dl
   5d85c:	add    edx,0x2
   5d85f:	jmp    5d732 <_obstack_memory_used@@Base+0x10ab2>
   5d864:	nop    DWORD PTR [rax+0x0]
   5d868:	add    ecx,edx
   5d86a:	je     5d888 <_obstack_memory_used@@Base+0x10c08>
   5d86c:	add    rbx,0x1
   5d870:	mov    r8,rdi
   5d873:	jmp    5d75d <_obstack_memory_used@@Base+0x10add>
   5d878:	test   ecx,ecx
   5d87a:	je     5d888 <_obstack_memory_used@@Base+0x10c08>
   5d87c:	mov    ebx,0xb
   5d881:	nop    DWORD PTR [rax+0x0]
   5d888:	mov    r8,rdi
   5d88b:	jmp    5d75d <_obstack_memory_used@@Base+0x10add>
   5d890:	cmp    r8,0x27ff
   5d897:	ja     5d7b1 <_obstack_memory_used@@Base+0x10b31>
   5d89d:	test   edx,edx
   5d89f:	je     5d8ad <_obstack_memory_used@@Base+0x10c2d>
   5d8a1:	add    ecx,0x1
   5d8a4:	cmp    ecx,0xa
   5d8a7:	je     5d9a3 <_obstack_memory_used@@Base+0x10d23>
   5d8ad:	cmp    rbx,0xa
   5d8b1:	je     5d878 <_obstack_memory_used@@Base+0x10bf8>
   5d8b3:	lea    r8,[rbp+0x286]
   5d8ba:	add    ecx,0x30
   5d8bd:	mov    edx,eax
   5d8bf:	mov    BYTE PTR [rbp+0x286],cl
   5d8c5:	sub    r8,rax
   5d8c8:	cmp    eax,0x8
   5d8cb:	jae    5d955 <_obstack_memory_used@@Base+0x10cd5>
   5d8d1:	test   al,0x4
   5d8d3:	jne    5d9b8 <_obstack_memory_used@@Base+0x10d38>
   5d8d9:	test   edx,edx
   5d8db:	je     5d75d <_obstack_memory_used@@Base+0x10add>
   5d8e1:	movzx  eax,BYTE PTR [r12]
   5d8e6:	mov    BYTE PTR [r8],al
   5d8e9:	test   dl,0x2
   5d8ec:	je     5d75d <_obstack_memory_used@@Base+0x10add>
   5d8f2:	movzx  eax,WORD PTR [r12+rdx*1-0x2]
   5d8f8:	mov    WORD PTR [r8+rdx*1-0x2],ax
   5d8fe:	jmp    5d75d <_obstack_memory_used@@Base+0x10add>
   5d903:	nop    DWORD PTR [rax+rax*1+0x0]
   5d908:	mov    rdx,QWORD PTR [r12]
   5d90c:	lea    r8,[rcx+0x8]
   5d910:	and    r8,0xfffffffffffffff8
   5d914:	mov    QWORD PTR [rcx],rdx
   5d917:	mov    edx,eax
   5d919:	mov    rdi,QWORD PTR [r12+rdx*1-0x8]
   5d91e:	mov    QWORD PTR [rcx+rdx*1-0x8],rdi
   5d923:	mov    rdx,rcx
   5d926:	sub    rdx,r8
   5d929:	sub    r12,rdx
   5d92c:	add    edx,eax
   5d92e:	and    edx,0xfffffff8
   5d931:	cmp    edx,0x8
   5d934:	jb     5d80e <_obstack_memory_used@@Base+0x10b8e>
   5d93a:	and    edx,0xfffffff8
   5d93d:	xor    eax,eax
   5d93f:	mov    edi,eax
   5d941:	add    eax,0x8
   5d944:	mov    r9,QWORD PTR [r12+rdi*1]
   5d948:	mov    QWORD PTR [r8+rdi*1],r9
   5d94c:	cmp    eax,edx
   5d94e:	jb     5d93f <_obstack_memory_used@@Base+0x10cbf>
   5d950:	jmp    5d80e <_obstack_memory_used@@Base+0x10b8e>
   5d955:	mov    rdx,QWORD PTR [r12]
   5d959:	mov    QWORD PTR [r8],rdx
   5d95c:	mov    edx,eax
   5d95e:	mov    rcx,QWORD PTR [r12+rdx*1-0x8]
   5d963:	mov    QWORD PTR [r8+rdx*1-0x8],rcx
   5d968:	lea    rcx,[r8+0x8]
   5d96c:	mov    rdx,r8
   5d96f:	and    rcx,0xfffffffffffffff8
   5d973:	sub    rdx,rcx
   5d976:	sub    r12,rdx
   5d979:	add    edx,eax
   5d97b:	and    edx,0xfffffff8
   5d97e:	cmp    edx,0x8
   5d981:	jb     5d75d <_obstack_memory_used@@Base+0x10add>
   5d987:	and    edx,0xfffffff8
   5d98a:	xor    eax,eax
   5d98c:	mov    r9d,eax
   5d98f:	add    eax,0x8
   5d992:	mov    r10,QWORD PTR [r12+r9*1]
   5d996:	mov    QWORD PTR [rcx+r9*1],r10
   5d99a:	cmp    eax,edx
   5d99c:	jb     5d98c <_obstack_memory_used@@Base+0x10d0c>
   5d99e:	jmp    5d75d <_obstack_memory_used@@Base+0x10add>
   5d9a3:	add    rbx,0x1
   5d9a7:	xor    ecx,ecx
   5d9a9:	cmp    rbx,0xa
   5d9ad:	jne    5d8b3 <_obstack_memory_used@@Base+0x10c33>
   5d9b3:	jmp    5d888 <_obstack_memory_used@@Base+0x10c08>
   5d9b8:	mov    eax,DWORD PTR [r12]
   5d9bc:	mov    DWORD PTR [r8],eax
   5d9bf:	mov    eax,DWORD PTR [r12+rdx*1-0x4]
   5d9c4:	mov    DWORD PTR [r8+rdx*1-0x4],eax
   5d9c9:	jmp    5d75d <_obstack_memory_used@@Base+0x10add>
   5d9ce:	mov    eax,DWORD PTR [r12]
   5d9d2:	mov    DWORD PTR [rcx],eax
   5d9d4:	mov    eax,DWORD PTR [r12+rdx*1-0x4]
   5d9d9:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
   5d9dd:	jmp    5d80e <_obstack_memory_used@@Base+0x10b8e>
   5d9e2:	movzx  eax,WORD PTR [r12+rdx*1-0x2]
   5d9e8:	mov    WORD PTR [rcx+rdx*1-0x2],ax
   5d9ed:	jmp    5d80e <_obstack_memory_used@@Base+0x10b8e>
   5d9f2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5d9fd:	nop    DWORD PTR [rax]
   5da00:	endbr64 
   5da04:	push   r15
   5da06:	mov    r15,rdx
   5da09:	push   r14
   5da0b:	mov    r14,rdi
   5da0e:	push   r13
   5da10:	movsxd r13,r9d
   5da13:	push   r12
   5da15:	push   rbp
   5da16:	push   rbx
   5da17:	mov    rbx,rsi
   5da1a:	sub    rsp,0x4c8
   5da21:	mov    BYTE PTR [rsp+0x23],cl
   5da25:	mov    QWORD PTR [rsp+0x18],rdx
   5da2a:	mov    DWORD PTR [rsp+0x60],r8d
   5da2f:	mov    rax,QWORD PTR fs:0x28
   5da38:	mov    QWORD PTR [rsp+0x4b8],rax
   5da40:	xor    eax,eax
   5da42:	call   9e40 <__errno_location@plt>
   5da47:	mov    rdi,QWORD PTR [r15+0x30]
   5da4b:	mov    ecx,DWORD PTR [r15+0x8]
   5da4f:	mov    QWORD PTR [rsp+0x10],rax
   5da54:	mov    eax,DWORD PTR [rax]
   5da56:	test   rdi,rdi
   5da59:	mov    DWORD PTR [rsp+0xc],ecx
   5da5d:	mov    DWORD PTR [rsp+0x24],eax
   5da61:	lea    rax,[rip+0xe0e8]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   5da68:	cmovne rax,rdi
   5da6c:	mov    QWORD PTR [rsp+0x28],rax
   5da71:	cmp    ecx,0xc
   5da74:	jle    5db40 <_obstack_memory_used@@Base+0x10ec0>
   5da7a:	sub    ecx,0xc
   5da7d:	mov    DWORD PTR [rsp+0xc],ecx
   5da81:	movzx  eax,BYTE PTR [rbx]
   5da84:	xor    r15d,r15d
   5da87:	test   al,al
   5da89:	je     5dae9 <_obstack_memory_used@@Base+0x10e69>
   5da8b:	cmp    al,0x25
   5da8d:	je     5db90 <_obstack_memory_used@@Base+0x10f10>
   5da93:	xor    eax,eax
   5da95:	test   r13d,r13d
   5da98:	mov    ebp,0x1
   5da9d:	mov    rdx,r15
   5daa0:	cmovns rax,r13
   5daa4:	not    rdx
   5daa7:	test   rax,rax
   5daaa:	cmovne rbp,rax
   5daae:	cmp    rbp,rdx
   5dab1:	jae    5db00 <_obstack_memory_used@@Base+0x10e80>
   5dab3:	test   r14,r14
   5dab6:	je     5dacd <_obstack_memory_used@@Base+0x10e4d>
   5dab8:	cmp    r13d,0x1
   5dabc:	jg     5db60 <_obstack_memory_used@@Base+0x10ee0>
   5dac2:	movsx  edi,BYTE PTR [rbx]
   5dac5:	mov    rsi,r14
   5dac8:	call   a260 <fputc@plt>
   5dacd:	add    r15,rbp
   5dad0:	mov    r12,rbx
   5dad3:	movzx  eax,BYTE PTR [r12+0x1]
   5dad9:	lea    rbx,[r12+0x1]
   5dade:	mov    r13,0xffffffffffffffff
   5dae5:	test   al,al
   5dae7:	jne    5da8b <_obstack_memory_used@@Base+0x10e0b>
   5dae9:	mov    rax,QWORD PTR [rsp+0x10]
   5daee:	mov    ebx,DWORD PTR [rsp+0x24]
   5daf2:	mov    DWORD PTR [rax],ebx
   5daf4:	jmp    5db0e <_obstack_memory_used@@Base+0x10e8e>
   5daf6:	cmp    r15,0xffffffffffffffff
   5dafa:	jne    5dad3 <_obstack_memory_used@@Base+0x10e53>
   5dafc:	nop    DWORD PTR [rax+0x0]
   5db00:	mov    rax,QWORD PTR [rsp+0x10]
   5db05:	mov    DWORD PTR [rax],0x22
   5db0b:	xor    r15d,r15d
   5db0e:	mov    rax,QWORD PTR [rsp+0x4b8]
   5db16:	sub    rax,QWORD PTR fs:0x28
   5db1f:	jne    5f7a4 <_obstack_memory_used@@Base+0x12b24>
   5db25:	add    rsp,0x4c8
   5db2c:	mov    rax,r15
   5db2f:	pop    rbx
   5db30:	pop    rbp
   5db31:	pop    r12
   5db33:	pop    r13
   5db35:	pop    r14
   5db37:	pop    r15
   5db39:	ret    
   5db3a:	nop    WORD PTR [rax+rax*1+0x0]
   5db40:	mov    esi,DWORD PTR [rsp+0xc]
   5db44:	mov    eax,0xc
   5db49:	test   esi,esi
   5db4b:	cmovne eax,esi
   5db4e:	mov    DWORD PTR [rsp+0xc],eax
   5db52:	jmp    5da81 <_obstack_memory_used@@Base+0x10e01>
   5db57:	nop    WORD PTR [rax+rax*1+0x0]
   5db60:	lea    r12,[rax-0x1]
   5db64:	xor    r13d,r13d
   5db67:	nop    WORD PTR [rax+rax*1+0x0]
   5db70:	mov    rsi,r14
   5db73:	mov    edi,0x20
   5db78:	add    r13,0x1
   5db7c:	call   a260 <fputc@plt>
   5db81:	cmp    r12,r13
   5db84:	ja     5db70 <_obstack_memory_used@@Base+0x10ef0>
   5db86:	jmp    5dac2 <_obstack_memory_used@@Base+0x10e42>
   5db8b:	nop    DWORD PTR [rax+rax*1+0x0]
   5db90:	movzx  eax,BYTE PTR [rsp+0x23]
   5db95:	xor    ebp,ebp
   5db97:	xor    r10d,r10d
   5db9a:	mov    BYTE PTR [rsp+0x40],al
   5db9e:	movsx  edx,BYTE PTR [rbx+0x1]
   5dba2:	add    rbx,0x1
   5dba6:	lea    ecx,[rdx-0x23]
   5dba9:	mov    esi,edx
   5dbab:	mov    edi,edx
   5dbad:	cmp    cl,0x3c
   5dbb0:	ja     5dbdf <_obstack_memory_used@@Base+0x10f5f>
   5dbb2:	movabs r11,0x1000000000002500
   5dbbc:	mov    eax,0x1
   5dbc1:	shl    rax,cl
   5dbc4:	test   rax,r11
   5dbc7:	jne    5dd80 <_obstack_memory_used@@Base+0x11100>
   5dbcd:	cmp    cl,0x3b
   5dbd0:	je     5f16e <_obstack_memory_used@@Base+0x124ee>
   5dbd6:	and    eax,0x1
   5dbd9:	jne    5f167 <_obstack_memory_used@@Base+0x124e7>
   5dbdf:	sub    edx,0x30
   5dbe2:	cmp    edx,0x9
   5dbe5:	jbe    5dd48 <_obstack_memory_used@@Base+0x110c8>
   5dbeb:	cmp    sil,0x45
   5dbef:	je     5dc18 <_obstack_memory_used@@Base+0x10f98>
   5dbf1:	cmp    sil,0x4f
   5dbf5:	je     5dc18 <_obstack_memory_used@@Base+0x10f98>
   5dbf7:	cmp    sil,0x7a
   5dbfb:	ja     5dc43 <_obstack_memory_used@@Base+0x10fc3>
   5dbfd:	lea    rdx,[rip+0xf894]        # 6d498 <_obstack_memory_used@@Base+0x20818>
   5dc04:	movzx  eax,sil
   5dc08:	movsxd rax,DWORD PTR [rdx+rax*4]
   5dc0c:	add    rax,rdx
   5dc0f:	notrack jmp rax
   5dc12:	nop    WORD PTR [rax+rax*1+0x0]
   5dc18:	movzx  esi,BYTE PTR [rbx+0x1]
   5dc1c:	lea    r12,[rbx+0x1]
   5dc20:	cmp    sil,0x7a
   5dc24:	ja     5dc40 <_obstack_memory_used@@Base+0x10fc0>
   5dc26:	lea    rdx,[rip+0xfa57]        # 6d684 <_obstack_memory_used@@Base+0x20a04>
   5dc2d:	movzx  eax,sil
   5dc31:	movsxd rax,DWORD PTR [rdx+rax*4]
   5dc35:	add    rax,rdx
   5dc38:	notrack jmp rax
   5dc3b:	nop    DWORD PTR [rax+rax*1+0x0]
   5dc40:	mov    rbx,r12
   5dc43:	mov    r12,rbx
   5dc46:	cs nop WORD PTR [rax+rax*1+0x0]
   5dc50:	lea    rax,[r12-0x1]
   5dc55:	lea    edx,[r12+0x1]
   5dc5a:	mov    rbp,rax
   5dc5d:	mov    ecx,edx
   5dc5f:	sub    ecx,eax
   5dc61:	cmp    BYTE PTR [rbp+0x0],0x25
   5dc65:	lea    rax,[rax-0x1]
   5dc69:	jne    5dc5a <_obstack_memory_used@@Base+0x10fda>
   5dc6b:	movsxd rbx,ecx
   5dc6e:	cmp    r10d,0x2d
   5dc72:	je     5f070 <_obstack_memory_used@@Base+0x123f0>
   5dc78:	test   r13d,r13d
   5dc7b:	js     5f070 <_obstack_memory_used@@Base+0x123f0>
   5dc81:	movsxd r13,r13d
   5dc84:	mov    rax,rbx
   5dc87:	cmp    r13,rbx
   5dc8a:	cmovae rax,r13
   5dc8e:	mov    QWORD PTR [rsp+0x30],rax
   5dc93:	mov    rax,r15
   5dc96:	not    rax
   5dc99:	cmp    rax,QWORD PTR [rsp+0x30]
   5dc9e:	jbe    5db00 <_obstack_memory_used@@Base+0x10e80>
   5dca4:	test   r14,r14
   5dca7:	je     5dd38 <_obstack_memory_used@@Base+0x110b8>
   5dcad:	cmp    r13,rbx
   5dcb0:	jbe    5dcfb <_obstack_memory_used@@Base+0x1107b>
   5dcb2:	sub    r13,rbx
   5dcb5:	cmp    r10d,0x30
   5dcb9:	je     5f26b <_obstack_memory_used@@Base+0x125eb>
   5dcbf:	cmp    r10d,0x2b
   5dcc3:	je     5f26b <_obstack_memory_used@@Base+0x125eb>
   5dcc9:	xor    edx,edx
   5dccb:	test   r13,r13
   5dcce:	je     5dcfb <_obstack_memory_used@@Base+0x1107b>
   5dcd0:	mov    QWORD PTR [rsp+0x48],rbx
   5dcd5:	mov    rbx,rdx
   5dcd8:	nop    DWORD PTR [rax+rax*1+0x0]
   5dce0:	mov    rsi,r14
   5dce3:	mov    edi,0x20
   5dce8:	add    rbx,0x1
   5dcec:	call   a260 <fputc@plt>
   5dcf1:	cmp    r13,rbx
   5dcf4:	jne    5dce0 <_obstack_memory_used@@Base+0x11060>
   5dcf6:	mov    rbx,QWORD PTR [rsp+0x48]
   5dcfb:	cmp    BYTE PTR [rsp+0x40],0x0
   5dd00:	je     5f14f <_obstack_memory_used@@Base+0x124cf>
   5dd06:	call   9d10 <__ctype_toupper_loc@plt>
   5dd0b:	add    rbx,rbp
   5dd0e:	mov    r13,rax
   5dd11:	nop    DWORD PTR [rax+0x0]
   5dd18:	movzx  edx,BYTE PTR [rbp+0x0]
   5dd1c:	mov    rax,QWORD PTR [r13+0x0]
   5dd20:	mov    rsi,r14
   5dd23:	add    rbp,0x1
   5dd27:	mov    edi,DWORD PTR [rax+rdx*4]
   5dd2a:	call   a260 <fputc@plt>
   5dd2f:	cmp    rbp,rbx
   5dd32:	jne    5dd18 <_obstack_memory_used@@Base+0x11098>
   5dd34:	nop    DWORD PTR [rax+0x0]
   5dd38:	add    r15,QWORD PTR [rsp+0x30]
   5dd3d:	jmp    5dad3 <_obstack_memory_used@@Base+0x10e53>
   5dd42:	nop    WORD PTR [rax+rax*1+0x0]
   5dd48:	xor    r13d,r13d
   5dd4b:	jmp    5dd71 <_obstack_memory_used@@Base+0x110f1>
   5dd4d:	nop    DWORD PTR [rax]
   5dd50:	movsx  eax,BYTE PTR [rbx]
   5dd53:	sub    eax,0x30
   5dd56:	add    r13d,eax
   5dd59:	jo     5dd77 <_obstack_memory_used@@Base+0x110f7>
   5dd5b:	movsx  edi,BYTE PTR [rbx+0x1]
   5dd5f:	add    rbx,0x1
   5dd63:	lea    eax,[rdi-0x30]
   5dd66:	mov    esi,edi
   5dd68:	cmp    eax,0x9
   5dd6b:	ja     5dbeb <_obstack_memory_used@@Base+0x10f6b>
   5dd71:	imul   r13d,r13d,0xa
   5dd75:	jno    5dd50 <_obstack_memory_used@@Base+0x110d0>
   5dd77:	mov    r13d,0x7fffffff
   5dd7d:	jmp    5dd5b <_obstack_memory_used@@Base+0x110db>
   5dd7f:	nop
   5dd80:	mov    r10d,edx
   5dd83:	jmp    5db9e <_obstack_memory_used@@Base+0x10f1e>
   5dd88:	xor    edi,edi
   5dd8a:	mov    rdx,QWORD PTR [rsp+0x18]
   5dd8f:	mov    ecx,DWORD PTR [rdx+0x14]
   5dd92:	mov    r8d,DWORD PTR [rdx+0x1c]
   5dd96:	mov    r9d,DWORD PTR [rdx+0x18]
   5dd9a:	mov    eax,ecx
   5dd9c:	mov    edx,r8d
   5dd9f:	sar    eax,0x1f
   5dda2:	sub    edx,r9d
   5dda5:	add    edx,0x17e
   5ddab:	and    eax,0x190
   5ddb0:	lea    ebp,[rcx+rax*1-0x64]
   5ddb4:	movsxd rax,edx
   5ddb7:	mov    r11d,edx
   5ddba:	imul   rax,rax,0xffffffff92492493
   5ddc1:	sar    r11d,0x1f
   5ddc5:	shr    rax,0x20
   5ddc9:	add    eax,edx
   5ddcb:	sar    eax,0x2
   5ddce:	sub    eax,r11d
   5ddd1:	lea    r11d,[rax*8+0x0]
   5ddd9:	sub    r11d,eax
   5dddc:	mov    eax,r8d
   5dddf:	sub    eax,edx
   5dde1:	lea    eax,[rax+r11*1+0x3]
   5dde6:	test   eax,eax
   5dde8:	js     5f430 <_obstack_memory_used@@Base+0x127b0>
   5ddee:	mov    edx,0x16d
   5ddf3:	test   bpl,0x3
   5ddf7:	jne    5de31 <_obstack_memory_used@@Base+0x111b1>
   5ddf9:	imul   edx,ebp,0xc28f5c29
   5ddff:	lea    ebp,[rdx+0x51eb850]
   5de05:	mov    edx,0x16e
   5de0a:	mov    r11d,ebp
   5de0d:	ror    r11d,0x2
   5de11:	cmp    r11d,0x28f5c28
   5de18:	ja     5de31 <_obstack_memory_used@@Base+0x111b1>
   5de1a:	mov    edx,ebp
   5de1c:	ror    edx,0x4
   5de1f:	cmp    edx,0xa3d70b
   5de25:	setb   dl
   5de28:	movzx  edx,dl
   5de2b:	add    edx,0x16d
   5de31:	sub    r8d,edx
   5de34:	mov    edx,r8d
   5de37:	sub    edx,r9d
   5de3a:	lea    r9d,[rdx+0x17e]
   5de41:	movsxd rdx,r9d
   5de44:	mov    r11d,r9d
   5de47:	sub    r8d,r9d
   5de4a:	imul   rdx,rdx,0xffffffff92492493
   5de51:	sar    r11d,0x1f
   5de55:	shr    rdx,0x20
   5de59:	add    edx,r9d
   5de5c:	sar    edx,0x2
   5de5f:	sub    edx,r11d
   5de62:	lea    r11d,[rdx*8+0x0]
   5de6a:	sub    r11d,edx
   5de6d:	lea    r8d,[r8+r11*1+0x3]
   5de72:	test   r8d,r8d
   5de75:	cmovns eax,r8d
   5de79:	sar    r8d,0x1f
   5de7d:	add    r8d,0x1
   5de81:	cmp    sil,0x47
   5de85:	je     5f508 <_obstack_memory_used@@Base+0x12888>
   5de8b:	cmp    sil,0x67
   5de8f:	jne    5f4dd <_obstack_memory_used@@Base+0x1285d>
   5de95:	movsxd rax,ecx
   5de98:	mov    edx,ecx
   5de9a:	imul   rax,rax,0x51eb851f
   5dea1:	sar    edx,0x1f
   5dea4:	sar    rax,0x25
   5dea8:	sub    eax,edx
   5deaa:	mov    edx,ecx
   5deac:	imul   eax,eax,0x64
   5deaf:	sub    edx,eax
   5deb1:	lea    eax,[rdx+r8*1]
   5deb5:	movsxd rdx,eax
   5deb8:	mov    r9d,eax
   5debb:	imul   rdx,rdx,0x51eb851f
   5dec2:	sar    r9d,0x1f
   5dec6:	sar    rdx,0x25
   5deca:	sub    edx,r9d
   5decd:	imul   r9d,edx,0x64
   5ded1:	sub    eax,r9d
   5ded4:	mov    edx,eax
   5ded6:	js     5f675 <_obstack_memory_used@@Base+0x129f5>
   5dedc:	test   r10d,r10d
   5dedf:	je     5f690 <_obstack_memory_used@@Base+0x12a10>
   5dee5:	mov    r12,rbx
   5dee8:	cmp    r10d,0x2b
   5deec:	je     5f6a2 <_obstack_memory_used@@Base+0x12a22>
   5def2:	mov    BYTE PTR [rsp+0x48],0x0
   5def7:	mov    eax,0x1
   5defc:	xor    ebp,ebp
   5defe:	mov    DWORD PTR [rsp+0x30],0x2
   5df06:	xor    ecx,ecx
   5df08:	nop    DWORD PTR [rax+rax*1+0x0]
   5df10:	cmp    edi,0x4f
   5df13:	jne    5e4b0 <_obstack_memory_used@@Base+0x11830>
   5df19:	test   al,al
   5df1b:	je     5e4b0 <_obstack_memory_used@@Base+0x11830>
   5df21:	mov    r8d,0x2520
   5df27:	mov    BYTE PTR [rsp+0x50],0x0
   5df2c:	mov    WORD PTR [rsp+0xab],r8w
   5df35:	mov    BYTE PTR [rsp+0xad],dil
   5df3d:	lea    rax,[rsp+0xae]
   5df45:	mov    BYTE PTR [rax],sil
   5df48:	mov    rcx,QWORD PTR [rsp+0x18]
   5df4d:	lea    rbp,[rsp+0xb0]
   5df55:	lea    rdx,[rsp+0xab]
   5df5d:	mov    BYTE PTR [rax+0x1],0x0
   5df61:	mov    esi,0x400
   5df66:	mov    rdi,rbp
   5df69:	mov    DWORD PTR [rsp+0x48],r10d
   5df6e:	call   a600 <strftime@plt>
   5df73:	mov    QWORD PTR [rsp+0x58],rax
   5df78:	test   rax,rax
   5df7b:	je     5dad3 <_obstack_memory_used@@Base+0x10e53>
   5df81:	mov    r10d,DWORD PTR [rsp+0x48]
   5df86:	sub    rax,0x1
   5df8a:	mov    QWORD PTR [rsp+0x30],rax
   5df8f:	cmp    r10d,0x2d
   5df93:	je     5f058 <_obstack_memory_used@@Base+0x123d8>
   5df99:	test   r13d,r13d
   5df9c:	js     5f058 <_obstack_memory_used@@Base+0x123d8>
   5dfa2:	movsxd rbx,r13d
   5dfa5:	cmp    rax,rbx
   5dfa8:	cmovb  rax,rbx
   5dfac:	mov    QWORD PTR [rsp+0x48],rax
   5dfb1:	mov    rax,r15
   5dfb4:	not    rax
   5dfb7:	cmp    rax,QWORD PTR [rsp+0x48]
   5dfbc:	jbe    5db00 <_obstack_memory_used@@Base+0x10e80>
   5dfc2:	test   r14,r14
   5dfc5:	je     5e068 <_obstack_memory_used@@Base+0x113e8>
   5dfcb:	cmp    QWORD PTR [rsp+0x30],rbx
   5dfd0:	jae    5e00e <_obstack_memory_used@@Base+0x1138e>
   5dfd2:	sub    rbx,QWORD PTR [rsp+0x30]
   5dfd7:	cmp    r10d,0x30
   5dfdb:	je     5f1f7 <_obstack_memory_used@@Base+0x12577>
   5dfe1:	cmp    r10d,0x2b
   5dfe5:	je     5f1f7 <_obstack_memory_used@@Base+0x12577>
   5dfeb:	xor    r13d,r13d
   5dfee:	test   rbx,rbx
   5dff1:	je     5e00e <_obstack_memory_used@@Base+0x1138e>
   5dff3:	nop    DWORD PTR [rax+rax*1+0x0]
   5dff8:	mov    rsi,r14
   5dffb:	mov    edi,0x20
   5e000:	add    r13,0x1
   5e004:	call   a260 <fputc@plt>
   5e009:	cmp    rbx,r13
   5e00c:	jne    5dff8 <_obstack_memory_used@@Base+0x11378>
   5e00e:	cmp    BYTE PTR [rsp+0x50],0x0
   5e013:	jne    5f197 <_obstack_memory_used@@Base+0x12517>
   5e019:	cmp    BYTE PTR [rsp+0x40],0x0
   5e01e:	je     5f178 <_obstack_memory_used@@Base+0x124f8>
   5e024:	cmp    QWORD PTR [rsp+0x30],0x0
   5e02a:	je     5e068 <_obstack_memory_used@@Base+0x113e8>
   5e02c:	call   9d10 <__ctype_toupper_loc@plt>
   5e031:	lea    rbx,[rsp+0xb1]
   5e039:	add    rbp,QWORD PTR [rsp+0x58]
   5e03e:	mov    r13,rax
   5e041:	nop    DWORD PTR [rax+0x0]
   5e048:	movzx  edx,BYTE PTR [rbx]
   5e04b:	mov    rax,QWORD PTR [r13+0x0]
   5e04f:	mov    rsi,r14
   5e052:	add    rbx,0x1
   5e056:	mov    edi,DWORD PTR [rax+rdx*4]
   5e059:	call   a260 <fputc@plt>
   5e05e:	cmp    rbx,rbp
   5e061:	jne    5e048 <_obstack_memory_used@@Base+0x113c8>
   5e063:	nop    DWORD PTR [rax+rax*1+0x0]
   5e068:	add    r15,QWORD PTR [rsp+0x48]
   5e06d:	jmp    5dad3 <_obstack_memory_used@@Base+0x10e53>
   5e072:	mov    rbx,r12
   5e075:	cmp    edi,0x45
   5e078:	jne    5dd8a <_obstack_memory_used@@Base+0x1110a>
   5e07e:	jmp    5dc43 <_obstack_memory_used@@Base+0x10fc3>
   5e083:	mov    r12,rbx
   5e086:	xor    edi,edi
   5e088:	movzx  eax,BYTE PTR [rsp+0x40]
   5e08d:	test   bpl,bpl
   5e090:	cmovne eax,ebp
   5e093:	mov    BYTE PTR [rsp+0x40],al
   5e097:	cmp    edi,0x45
   5e09a:	je     5dc40 <_obstack_memory_used@@Base+0x10fc0>
   5e0a0:	mov    BYTE PTR [rsp+0x50],0x0
   5e0a5:	mov    r11d,0x2520
   5e0ab:	mov    WORD PTR [rsp+0xab],r11w
   5e0b4:	test   edi,edi
   5e0b6:	jne    5df35 <_obstack_memory_used@@Base+0x112b5>
   5e0bc:	lea    rax,[rsp+0xad]
   5e0c4:	jmp    5df45 <_obstack_memory_used@@Base+0x112c5>
   5e0c9:	mov    rbx,r12
   5e0cc:	movzx  eax,BYTE PTR [rbx-0x1]
   5e0d0:	lea    rbp,[rbx-0x1]
   5e0d4:	mov    r12,rbp
   5e0d7:	cmp    al,0x25
   5e0d9:	jne    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5e0df:	mov    ebx,0x1
   5e0e4:	jmp    5dc6e <_obstack_memory_used@@Base+0x10fee>
   5e0e9:	mov    r12,rbx
   5e0ec:	xor    edi,edi
   5e0ee:	movzx  eax,BYTE PTR [rsp+0x40]
   5e0f3:	test   bpl,bpl
   5e0f6:	mov    BYTE PTR [rsp+0x50],0x0
   5e0fb:	mov    esi,0x42
   5e100:	cmovne eax,ebp
   5e103:	mov    BYTE PTR [rsp+0x40],al
   5e107:	jmp    5e0a5 <_obstack_memory_used@@Base+0x11425>
   5e109:	mov    r12,rbx
   5e10c:	movzx  eax,BYTE PTR [rsp+0x40]
   5e111:	test   bpl,bpl
   5e114:	mov    esi,0x41
   5e119:	cmovne eax,ebp
   5e11c:	mov    BYTE PTR [rsp+0x40],al
   5e120:	mov    edi,0x2520
   5e125:	mov    BYTE PTR [rsp+0x50],0x0
   5e12a:	lea    rax,[rsp+0xad]
   5e132:	mov    WORD PTR [rsp+0xab],di
   5e13a:	jmp    5df45 <_obstack_memory_used@@Base+0x112c5>
   5e13f:	xor    edi,edi
   5e141:	movzx  eax,BYTE PTR [rbx+0x1]
   5e145:	lea    r12,[rbx+0x1]
   5e149:	mov    r8d,0x1
   5e14f:	cmp    al,0x3a
   5e151:	je     5f03d <_obstack_memory_used@@Base+0x123bd>
   5e157:	mov    esi,0x3a
   5e15c:	cmp    al,0x7a
   5e15e:	jne    5dc43 <_obstack_memory_used@@Base+0x10fc3>
   5e164:	mov    rax,QWORD PTR [rsp+0x18]
   5e169:	mov    r9d,DWORD PTR [rax+0x20]
   5e16d:	test   r9d,r9d
   5e170:	js     5dad3 <_obstack_memory_used@@Base+0x10e53>
   5e176:	mov    r9,QWORD PTR [rax+0x28]
   5e17a:	mov    ebp,0x1
   5e17f:	test   r9d,r9d
   5e182:	js     5e197 <_obstack_memory_used@@Base+0x11517>
   5e184:	mov    ebp,0x0
   5e189:	jne    5e197 <_obstack_memory_used@@Base+0x11517>
   5e18b:	mov    rax,QWORD PTR [rsp+0x28]
   5e190:	cmp    BYTE PTR [rax],0x2d
   5e193:	sete   bpl
   5e197:	movsxd rax,r9d
   5e19a:	mov    ecx,r9d
   5e19d:	imul   rdx,rax,0xffffffff91a2b3c5
   5e1a4:	sar    ecx,0x1f
   5e1a7:	imul   rax,rax,0xffffffff88888889
   5e1ae:	shr    rdx,0x20
   5e1b2:	shr    rax,0x20
   5e1b6:	add    edx,r9d
   5e1b9:	add    eax,r9d
   5e1bc:	sar    edx,0xb
   5e1bf:	sar    eax,0x5
   5e1c2:	sub    edx,ecx
   5e1c4:	sub    eax,ecx
   5e1c6:	movsxd rcx,eax
   5e1c9:	mov    r11d,eax
   5e1cc:	imul   rcx,rcx,0xffffffff88888889
   5e1d3:	sar    r11d,0x1f
   5e1d7:	shr    rcx,0x20
   5e1db:	add    ecx,eax
   5e1dd:	sar    ecx,0x5
   5e1e0:	sub    ecx,r11d
   5e1e3:	imul   r11d,ecx,0x3c
   5e1e7:	mov    ecx,eax
   5e1e9:	imul   eax,eax,0x3c
   5e1ec:	sub    ecx,r11d
   5e1ef:	sub    r9d,eax
   5e1f2:	cmp    r8,0x2
   5e1f6:	je     5f57a <_obstack_memory_used@@Base+0x128fa>
   5e1fc:	ja     5f29b <_obstack_memory_used@@Base+0x1261b>
   5e202:	test   r8,r8
   5e205:	je     5f61f <_obstack_memory_used@@Base+0x1299f>
   5e20b:	imul   edx,edx,0x64
   5e20e:	mov    eax,ebp
   5e210:	mov    BYTE PTR [rsp+0x48],0x1
   5e215:	mov    DWORD PTR [rsp+0x30],0x6
   5e21d:	xor    eax,0x1
   5e220:	add    edx,ecx
   5e222:	mov    ecx,0x4
   5e227:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5e22c:	mov    r12,rbx
   5e22f:	cmp    r10d,0x2d
   5e233:	je     5f3ba <_obstack_memory_used@@Base+0x1273a>
   5e239:	test   r13d,r13d
   5e23c:	js     5f3ba <_obstack_memory_used@@Base+0x1273a>
   5e242:	movsxd rbp,r13d
   5e245:	mov    eax,0x1
   5e24a:	test   rbp,rbp
   5e24d:	cmovne rax,rbp
   5e251:	mov    rbx,rax
   5e254:	mov    rax,r15
   5e257:	not    rax
   5e25a:	cmp    rbx,rax
   5e25d:	jae    5db00 <_obstack_memory_used@@Base+0x10e80>
   5e263:	test   r14,r14
   5e266:	je     5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5e26c:	cmp    r13d,0x1
   5e270:	jle    5e2a8 <_obstack_memory_used@@Base+0x11628>
   5e272:	sub    rbp,0x1
   5e276:	cmp    r10d,0x30
   5e27a:	je     5f6b1 <_obstack_memory_used@@Base+0x12a31>
   5e280:	xor    r13d,r13d
   5e283:	cmp    r10d,0x2b
   5e287:	je     5f6b1 <_obstack_memory_used@@Base+0x12a31>
   5e28d:	mov    rsi,r14
   5e290:	mov    edi,0x20
   5e295:	add    r13,0x1
   5e299:	call   a260 <fputc@plt>
   5e29e:	cmp    rbp,r13
   5e2a1:	jne    5e28d <_obstack_memory_used@@Base+0x1160d>
   5e2a3:	movsx  edi,BYTE PTR [r12]
   5e2a8:	mov    rsi,r14
   5e2ab:	call   a260 <fputc@plt>
   5e2b0:	jmp    5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5e2b5:	mov    r12,rbx
   5e2b8:	xor    edi,edi
   5e2ba:	mov    BYTE PTR [rsp+0x50],0x0
   5e2bf:	mov    esi,0x63
   5e2c4:	jmp    5e0a5 <_obstack_memory_used@@Base+0x11425>
   5e2c9:	mov    r12,rbx
   5e2cc:	movzx  eax,BYTE PTR [rsp+0x40]
   5e2d1:	test   bpl,bpl
   5e2d4:	mov    esi,0x61
   5e2d9:	cmovne eax,ebp
   5e2dc:	mov    BYTE PTR [rsp+0x40],al
   5e2e0:	jmp    5e120 <_obstack_memory_used@@Base+0x114a0>
   5e2e5:	mov    r12,rbx
   5e2e8:	movzx  ebx,BYTE PTR [rsp+0x40]
   5e2ed:	xor    eax,eax
   5e2ef:	test   bpl,bpl
   5e2f2:	mov    rdi,QWORD PTR [rsp+0x28]
   5e2f7:	mov    DWORD PTR [rsp+0x48],r10d
   5e2fc:	cmovne ebx,eax
   5e2ff:	mov    BYTE PTR [rsp+0x40],bl
   5e303:	call   a060 <strlen@plt>
   5e308:	mov    r10d,DWORD PTR [rsp+0x48]
   5e30d:	mov    QWORD PTR [rsp+0x30],rax
   5e312:	cmp    r10d,0x2d
   5e316:	je     5f360 <_obstack_memory_used@@Base+0x126e0>
   5e31c:	test   r13d,r13d
   5e31f:	js     5f360 <_obstack_memory_used@@Base+0x126e0>
   5e325:	movsxd rbx,r13d
   5e328:	cmp    rax,rbx
   5e32b:	cmovb  rax,rbx
   5e32f:	mov    QWORD PTR [rsp+0x48],rax
   5e334:	mov    rax,r15
   5e337:	not    rax
   5e33a:	cmp    rax,QWORD PTR [rsp+0x48]
   5e33f:	jbe    5db00 <_obstack_memory_used@@Base+0x10e80>
   5e345:	test   r14,r14
   5e348:	je     5e068 <_obstack_memory_used@@Base+0x113e8>
   5e34e:	cmp    QWORD PTR [rsp+0x30],rbx
   5e353:	jae    5e38c <_obstack_memory_used@@Base+0x1170c>
   5e355:	sub    rbx,QWORD PTR [rsp+0x30]
   5e35a:	cmp    r10d,0x30
   5e35e:	je     5f6cf <_obstack_memory_used@@Base+0x12a4f>
   5e364:	cmp    r10d,0x2b
   5e368:	je     5f6cf <_obstack_memory_used@@Base+0x12a4f>
   5e36e:	xor    r13d,r13d
   5e371:	test   rbx,rbx
   5e374:	je     5e38c <_obstack_memory_used@@Base+0x1170c>
   5e376:	mov    rsi,r14
   5e379:	mov    edi,0x20
   5e37e:	add    r13,0x1
   5e382:	call   a260 <fputc@plt>
   5e387:	cmp    rbx,r13
   5e38a:	jne    5e376 <_obstack_memory_used@@Base+0x116f6>
   5e38c:	test   bpl,bpl
   5e38f:	jne    5f5c0 <_obstack_memory_used@@Base+0x12940>
   5e395:	cmp    BYTE PTR [rsp+0x40],0x0
   5e39a:	je     5f5a4 <_obstack_memory_used@@Base+0x12924>
   5e3a0:	mov    rbx,QWORD PTR [rsp+0x30]
   5e3a5:	test   rbx,rbx
   5e3a8:	je     5e068 <_obstack_memory_used@@Base+0x113e8>
   5e3ae:	call   9d10 <__ctype_toupper_loc@plt>
   5e3b3:	mov    r13,rbx
   5e3b6:	mov    rbx,QWORD PTR [rsp+0x28]
   5e3bb:	mov    rbp,rax
   5e3be:	add    r13,rbx
   5e3c1:	movzx  edx,BYTE PTR [rbx]
   5e3c4:	mov    rax,QWORD PTR [rbp+0x0]
   5e3c8:	mov    rsi,r14
   5e3cb:	add    rbx,0x1
   5e3cf:	mov    edi,DWORD PTR [rax+rdx*4]
   5e3d2:	call   a260 <fputc@plt>
   5e3d7:	cmp    rbx,r13
   5e3da:	jne    5e3c1 <_obstack_memory_used@@Base+0x11741>
   5e3dc:	jmp    5e068 <_obstack_memory_used@@Base+0x113e8>
   5e3e1:	mov    r12,rbx
   5e3e4:	xor    edi,edi
   5e3e6:	mov    rax,QWORD PTR [rsp+0x18]
   5e3eb:	mov    esi,0x6b
   5e3f0:	mov    edx,DWORD PTR [rax+0x8]
   5e3f3:	test   r10d,r10d
   5e3f6:	mov    eax,0x5f
   5e3fb:	mov    DWORD PTR [rsp+0x30],0x2
   5e403:	cmove  r10d,eax
   5e407:	mov    eax,edx
   5e409:	mov    BYTE PTR [rsp+0x48],0x0
   5e40e:	xor    ecx,ecx
   5e410:	shr    eax,0x1f
   5e413:	mov    ebp,eax
   5e415:	mov    eax,edx
   5e417:	not    eax
   5e419:	shr    eax,0x1f
   5e41c:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5e421:	mov    r12,rbx
   5e424:	xor    edi,edi
   5e426:	mov    rax,QWORD PTR [rsp+0x18]
   5e42b:	mov    esi,0x65
   5e430:	mov    edx,DWORD PTR [rax+0xc]
   5e433:	jmp    5e3f3 <_obstack_memory_used@@Base+0x11773>
   5e435:	mov    r12,rbx
   5e438:	xor    edi,edi
   5e43a:	mov    rax,QWORD PTR [rsp+0x18]
   5e43f:	mov    DWORD PTR [rsp+0x30],0x2
   5e447:	mov    esi,0x64
   5e44c:	mov    edx,DWORD PTR [rax+0xc]
   5e44f:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5e451:	mov    r12,rbx
   5e454:	xor    edi,edi
   5e456:	xor    r8d,r8d
   5e459:	jmp    5e164 <_obstack_memory_used@@Base+0x114e4>
   5e45e:	mov    r12,rbx
   5e461:	xor    edi,edi
   5e463:	mov    rax,QWORD PTR [rsp+0x18]
   5e468:	mov    esi,0x59
   5e46d:	mov    edx,DWORD PTR [rax+0x14]
   5e470:	cmp    edx,0xfffff894
   5e476:	setl   bpl
   5e47a:	add    edx,0x76c
   5e480:	test   r10d,r10d
   5e483:	jne    5f3d7 <_obstack_memory_used@@Base+0x12757>
   5e489:	mov    r10d,DWORD PTR [rsp+0x60]
   5e48e:	cmp    r10d,0x2b
   5e492:	je     5f766 <_obstack_memory_used@@Base+0x12ae6>
   5e498:	mov    BYTE PTR [rsp+0x48],0x0
   5e49d:	xor    ecx,ecx
   5e49f:	mov    DWORD PTR [rsp+0x30],0x4
   5e4a7:	nop    WORD PTR [rax+rax*1+0x0]
   5e4b0:	mov    eax,edx
   5e4b2:	neg    eax
   5e4b4:	test   bpl,bpl
   5e4b7:	cmovne edx,eax
   5e4ba:	lea    r8,[rsp+0xc7]
   5e4c2:	mov    r11d,0xcccccccd
   5e4c8:	mov    rbx,r8
   5e4cb:	nop    DWORD PTR [rax+rax*1+0x0]
   5e4d0:	mov    rdi,rbx
   5e4d3:	test   cl,0x1
   5e4d6:	je     5e4e0 <_obstack_memory_used@@Base+0x11860>
   5e4d8:	mov    BYTE PTR [rbx-0x1],0x3a
   5e4dc:	sub    rdi,0x1
   5e4e0:	mov    eax,edx
   5e4e2:	mov    esi,edx
   5e4e4:	sar    ecx,1
   5e4e6:	lea    rbx,[rdi-0x1]
   5e4ea:	imul   rax,r11
   5e4ee:	shr    rax,0x23
   5e4f2:	lea    r9d,[rax+rax*4]
   5e4f6:	add    r9d,r9d
   5e4f9:	sub    esi,r9d
   5e4fc:	add    esi,0x30
   5e4ff:	mov    BYTE PTR [rdi-0x1],sil
   5e503:	cmp    edx,0x9
   5e506:	ja     5e510 <_obstack_memory_used@@Base+0x11890>
   5e508:	test   ecx,ecx
   5e50a:	je     5e5f8 <_obstack_memory_used@@Base+0x11978>
   5e510:	mov    edx,eax
   5e512:	jmp    5e4d0 <_obstack_memory_used@@Base+0x11850>
   5e514:	mov    r12,rbx
   5e517:	mov    rax,QWORD PTR [rsp+0x18]
   5e51c:	lea    rdi,[rsp+0x70]
   5e521:	mov    DWORD PTR [rsp+0x48],r10d
   5e526:	movdqu xmm4,XMMWORD PTR [rax+0x20]
   5e52b:	movdqu xmm0,XMMWORD PTR [rax]
   5e52f:	movdqu xmm2,XMMWORD PTR [rax+0x10]
   5e534:	mov    rax,QWORD PTR [rax+0x30]
   5e538:	movaps XMMWORD PTR [rsp+0x70],xmm0
   5e53d:	movaps XMMWORD PTR [rsp+0x80],xmm2
   5e545:	mov    QWORD PTR [rsp+0xa0],rax
   5e54d:	mov    DWORD PTR [rsp+0x8c],0xffffffff
   5e558:	movaps XMMWORD PTR [rsp+0x30],xmm4
   5e55d:	movaps XMMWORD PTR [rsp+0x90],xmm4
   5e565:	call   a5e0 <timegm@plt>
   5e56a:	mov    r10d,DWORD PTR [rsp+0x8c]
   5e572:	mov    rcx,rax
   5e575:	test   r10d,r10d
   5e578:	mov    r10d,DWORD PTR [rsp+0x48]
   5e57d:	js     5f7be <_obstack_memory_used@@Base+0x12b3e>
   5e583:	shr    rax,0x3f
   5e587:	lea    r8,[rsp+0xc7]
   5e58f:	mov    esi,0x30
   5e594:	mov    rbp,rax
   5e597:	mov    rbx,r8
   5e59a:	nop    WORD PTR [rax+rax*1+0x0]
   5e5a0:	movabs rax,0x6666666666666667
   5e5aa:	imul   rcx
   5e5ad:	mov    rax,rcx
   5e5b0:	sar    rax,0x3f
   5e5b4:	sar    rdx,0x2
   5e5b8:	sub    rdx,rax
   5e5bb:	lea    rdi,[rdx+rdx*4]
   5e5bf:	mov    rax,rdx
   5e5c2:	add    rdi,rdi
   5e5c5:	sub    rcx,rdi
   5e5c8:	mov    rdx,rcx
   5e5cb:	mov    rcx,rax
   5e5ce:	mov    eax,esi
   5e5d0:	sub    eax,edx
   5e5d2:	add    edx,0x30
   5e5d5:	test   bpl,bpl
   5e5d8:	cmovne edx,eax
   5e5db:	sub    rbx,0x1
   5e5df:	mov    BYTE PTR [rbx],dl
   5e5e1:	test   rcx,rcx
   5e5e4:	jne    5e5a0 <_obstack_memory_used@@Base+0x11920>
   5e5e6:	mov    BYTE PTR [rsp+0x48],0x0
   5e5eb:	mov    DWORD PTR [rsp+0x30],0x1
   5e5f3:	nop    DWORD PTR [rax+rax*1+0x0]
   5e5f8:	test   r10d,r10d
   5e5fb:	je     5f100 <_obstack_memory_used@@Base+0x12480>
   5e601:	cmp    r10d,0x2d
   5e605:	setne  al
   5e608:	test   r13d,r13d
   5e60b:	cmovs  r13d,DWORD PTR [rsp+0x30]
   5e611:	sub    r8,rbx
   5e614:	test   bpl,bpl
   5e617:	jne    5f080 <_obstack_memory_used@@Base+0x12400>
   5e61d:	cmp    BYTE PTR [rsp+0x48],0x0
   5e622:	jne    5f1e0 <_obstack_memory_used@@Base+0x12560>
   5e628:	movsxd rbp,r8d
   5e62b:	cmp    r13d,r8d
   5e62e:	jle    5f110 <_obstack_memory_used@@Base+0x12490>
   5e634:	test   al,al
   5e636:	je     5f110 <_obstack_memory_used@@Base+0x12490>
   5e63c:	movsxd rdx,r13d
   5e63f:	mov    rax,rbp
   5e642:	cmp    rdx,rbp
   5e645:	cmovae rax,rdx
   5e649:	mov    QWORD PTR [rsp+0x30],rax
   5e64e:	mov    rax,r15
   5e651:	not    rax
   5e654:	cmp    rax,QWORD PTR [rsp+0x30]
   5e659:	jbe    5db00 <_obstack_memory_used@@Base+0x10e80>
   5e65f:	test   r14,r14
   5e662:	je     5dd38 <_obstack_memory_used@@Base+0x110b8>
   5e668:	cmp    rdx,rbp
   5e66b:	jbe    5e6b3 <_obstack_memory_used@@Base+0x11a33>
   5e66d:	sub    rdx,rbp
   5e670:	mov    rax,rdx
   5e673:	cmp    r10d,0x30
   5e677:	je     5f241 <_obstack_memory_used@@Base+0x125c1>
   5e67d:	xor    r13d,r13d
   5e680:	cmp    r10d,0x2b
   5e684:	je     5f241 <_obstack_memory_used@@Base+0x125c1>
   5e68a:	mov    QWORD PTR [rsp+0x48],rbx
   5e68f:	mov    rbx,r13
   5e692:	mov    r13,rdx
   5e695:	nop    DWORD PTR [rax]
   5e698:	mov    rsi,r14
   5e69b:	mov    edi,0x20
   5e6a0:	add    rbx,0x1
   5e6a4:	call   a260 <fputc@plt>
   5e6a9:	cmp    r13,rbx
   5e6ac:	jne    5e698 <_obstack_memory_used@@Base+0x11a18>
   5e6ae:	mov    rbx,QWORD PTR [rsp+0x48]
   5e6b3:	cmp    BYTE PTR [rsp+0x40],0x0
   5e6b8:	je     5f137 <_obstack_memory_used@@Base+0x124b7>
   5e6be:	test   rbp,rbp
   5e6c1:	je     5dd38 <_obstack_memory_used@@Base+0x110b8>
   5e6c7:	call   9d10 <__ctype_toupper_loc@plt>
   5e6cc:	add    rbp,rbx
   5e6cf:	mov    r13,rax
   5e6d2:	nop    WORD PTR [rax+rax*1+0x0]
   5e6d8:	movzx  edx,BYTE PTR [rbx]
   5e6db:	mov    rax,QWORD PTR [r13+0x0]
   5e6df:	mov    rsi,r14
   5e6e2:	add    rbx,0x1
   5e6e6:	mov    edi,DWORD PTR [rax+rdx*4]
   5e6e9:	call   a260 <fputc@plt>
   5e6ee:	cmp    rbp,rbx
   5e6f1:	jne    5e6d8 <_obstack_memory_used@@Base+0x11a58>
   5e6f3:	jmp    5dd38 <_obstack_memory_used@@Base+0x110b8>
   5e6f8:	mov    r12,rbx
   5e6fb:	xor    edi,edi
   5e6fd:	mov    rbx,QWORD PTR [rsp+0x18]
   5e702:	mov    DWORD PTR [rsp+0x30],0x2
   5e70a:	mov    eax,DWORD PTR [rbx+0x18]
   5e70d:	mov    esi,DWORD PTR [rbx+0x1c]
   5e710:	lea    edx,[rax+0x6]
   5e713:	movsxd rax,edx
   5e716:	mov    ecx,edx
   5e718:	imul   rax,rax,0xffffffff92492493
   5e71f:	sar    ecx,0x1f
   5e722:	shr    rax,0x20
   5e726:	add    eax,edx
   5e728:	sar    eax,0x2
   5e72b:	sub    eax,ecx
   5e72d:	lea    ecx,[rax*8+0x0]
   5e734:	sub    ecx,eax
   5e736:	mov    eax,ecx
   5e738:	sub    eax,edx
   5e73a:	lea    eax,[rax+rsi*1+0x7]
   5e73e:	mov    esi,0x57
   5e743:	movsxd rdx,eax
   5e746:	imul   rdx,rdx,0xffffffff92492493
   5e74d:	shr    rdx,0x20
   5e751:	add    edx,eax
   5e753:	sar    eax,0x1f
   5e756:	sar    edx,0x2
   5e759:	sub    edx,eax
   5e75b:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5e760:	mov    r12,rbx
   5e763:	mov    ebx,0xffffffff
   5e768:	lea    rbp,[rip+0xe743]        # 6ceb2 <_obstack_memory_used@@Base+0x20232>
   5e76f:	movzx  ecx,BYTE PTR [rsp+0x40]
   5e774:	sub    rsp,0x8
   5e778:	mov    r8d,r10d
   5e77b:	mov    r9d,ebx
   5e77e:	mov    rsi,rbp
   5e781:	xor    edi,edi
   5e783:	mov    DWORD PTR [rsp+0x38],ecx
   5e787:	mov    eax,DWORD PTR [rsp+0x508]
   5e78e:	push   rax
   5e78f:	mov    rdx,QWORD PTR [rsp+0x28]
   5e794:	mov    DWORD PTR [rsp+0x50],r10d
   5e799:	call   5da00 <_obstack_memory_used@@Base+0x10d80>
   5e79e:	pop    rdx
   5e79f:	pop    rcx
   5e7a0:	mov    r10d,DWORD PTR [rsp+0x40]
   5e7a5:	cmp    r10d,0x2d
   5e7a9:	je     5f1ea <_obstack_memory_used@@Base+0x1256a>
   5e7af:	test   r13d,r13d
   5e7b2:	js     5f1ea <_obstack_memory_used@@Base+0x1256a>
   5e7b8:	movsxd r13,r13d
   5e7bb:	cmp    rax,r13
   5e7be:	mov    rsi,r13
   5e7c1:	cmovae rsi,rax
   5e7c5:	mov    QWORD PTR [rsp+0x40],rsi
   5e7ca:	mov    rdx,r15
   5e7cd:	not    rdx
   5e7d0:	cmp    rdx,QWORD PTR [rsp+0x40]
   5e7d5:	jbe    5db00 <_obstack_memory_used@@Base+0x10e80>
   5e7db:	test   r14,r14
   5e7de:	je     5e86e <_obstack_memory_used@@Base+0x11bee>
   5e7e4:	cmp    r13,rax
   5e7e7:	jbe    5e846 <_obstack_memory_used@@Base+0x11bc6>
   5e7e9:	sub    r13,rax
   5e7ec:	mov    rax,r13
   5e7ef:	cmp    r10d,0x30
   5e7f3:	je     5f371 <_obstack_memory_used@@Base+0x126f1>
   5e7f9:	xor    r13d,r13d
   5e7fc:	cmp    r10d,0x2b
   5e800:	je     5f371 <_obstack_memory_used@@Base+0x126f1>
   5e806:	mov    DWORD PTR [rsp+0x50],r10d
   5e80b:	mov    QWORD PTR [rsp+0x48],rbp
   5e810:	mov    rbp,r13
   5e813:	mov    r13,r12
   5e816:	mov    r12d,ebx
   5e819:	mov    rbx,rax
   5e81c:	nop    DWORD PTR [rax+0x0]
   5e820:	mov    rsi,r14
   5e823:	mov    edi,0x20
   5e828:	add    rbp,0x1
   5e82c:	call   a260 <fputc@plt>
   5e831:	cmp    rbx,rbp
   5e834:	jne    5e820 <_obstack_memory_used@@Base+0x11ba0>
   5e836:	mov    rbp,QWORD PTR [rsp+0x48]
   5e83b:	mov    r10d,DWORD PTR [rsp+0x50]
   5e840:	mov    ebx,r12d
   5e843:	mov    r12,r13
   5e846:	sub    rsp,0x8
   5e84a:	mov    r9d,ebx
   5e84d:	mov    rsi,rbp
   5e850:	mov    r8d,r10d
   5e853:	mov    eax,DWORD PTR [rsp+0x508]
   5e85a:	mov    rdi,r14
   5e85d:	push   rax
   5e85e:	mov    ecx,DWORD PTR [rsp+0x40]
   5e862:	mov    rdx,QWORD PTR [rsp+0x28]
   5e867:	call   5da00 <_obstack_memory_used@@Base+0x10d80>
   5e86c:	pop    rbx
   5e86d:	pop    rbp
   5e86e:	add    r15,QWORD PTR [rsp+0x40]
   5e873:	jmp    5dad3 <_obstack_memory_used@@Base+0x10e53>
   5e878:	mov    r12,rbx
   5e87b:	xor    edi,edi
   5e87d:	mov    rax,QWORD PTR [rsp+0x18]
   5e882:	mov    DWORD PTR [rsp+0x30],0x2
   5e88a:	mov    esi,0x53
   5e88f:	mov    edx,DWORD PTR [rax]
   5e891:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5e896:	mov    r12,rbx
   5e899:	mov    ebx,0xffffffff
   5e89e:	lea    rbp,[rip+0x652c]        # 64dd1 <_obstack_memory_used@@Base+0x18151>
   5e8a5:	jmp    5e76f <_obstack_memory_used@@Base+0x11aef>
   5e8aa:	mov    r12,rbx
   5e8ad:	xor    edi,edi
   5e8af:	mov    BYTE PTR [rsp+0x50],0x1
   5e8b4:	movzx  eax,BYTE PTR [rsp+0x50]
   5e8b9:	test   bpl,bpl
   5e8bc:	movzx  ebx,BYTE PTR [rsp+0x40]
   5e8c1:	mov    esi,0x70
   5e8c6:	cmovne eax,ebp
   5e8c9:	mov    BYTE PTR [rsp+0x50],al
   5e8cd:	mov    eax,0x0
   5e8d2:	cmovne ebx,eax
   5e8d5:	mov    BYTE PTR [rsp+0x40],bl
   5e8d9:	jmp    5e0a5 <_obstack_memory_used@@Base+0x11425>
   5e8de:	mov    r12,rbx
   5e8e1:	xor    edi,edi
   5e8e3:	mov    rbx,QWORD PTR [rsp+0x18]
   5e8e8:	mov    DWORD PTR [rsp+0x30],0x2
   5e8f0:	mov    esi,0x55
   5e8f5:	mov    eax,DWORD PTR [rbx+0x1c]
   5e8f8:	sub    eax,DWORD PTR [rbx+0x18]
   5e8fb:	add    eax,0x7
   5e8fe:	movsxd rdx,eax
   5e901:	imul   rdx,rdx,0xffffffff92492493
   5e908:	shr    rdx,0x20
   5e90c:	add    edx,eax
   5e90e:	sar    eax,0x1f
   5e911:	sar    edx,0x2
   5e914:	sub    edx,eax
   5e916:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5e91b:	mov    r12,rbx
   5e91e:	xor    edi,edi
   5e920:	mov    rax,QWORD PTR [rsp+0x18]
   5e925:	movsxd rdx,DWORD PTR [rax+0x14]
   5e929:	mov    rcx,rdx
   5e92c:	imul   rdx,rdx,0x51eb851f
   5e933:	mov    eax,ecx
   5e935:	sar    eax,0x1f
   5e938:	sar    rdx,0x25
   5e93c:	sub    edx,eax
   5e93e:	imul   eax,edx,0x64
   5e941:	mov    edx,ecx
   5e943:	sub    edx,eax
   5e945:	jns    5e957 <_obstack_memory_used@@Base+0x11cd7>
   5e947:	mov    eax,edx
   5e949:	add    edx,0x64
   5e94c:	neg    eax
   5e94e:	cmp    ecx,0xfffff893
   5e954:	cmovle edx,eax
   5e957:	mov    esi,0x79
   5e95c:	test   r10d,r10d
   5e95f:	jne    5dee8 <_obstack_memory_used@@Base+0x11268>
   5e965:	mov    eax,DWORD PTR [rsp+0x60]
   5e969:	cmp    eax,0x2b
   5e96c:	je     5f407 <_obstack_memory_used@@Base+0x12787>
   5e972:	mov    r10d,eax
   5e975:	mov    BYTE PTR [rsp+0x48],0x0
   5e97a:	mov    esi,0x79
   5e97f:	xor    ebp,ebp
   5e981:	mov    DWORD PTR [rsp+0x30],0x2
   5e989:	mov    eax,0x1
   5e98e:	jmp    5df06 <_obstack_memory_used@@Base+0x11286>
   5e993:	mov    r12,rbx
   5e996:	xor    edi,edi
   5e998:	mov    BYTE PTR [rsp+0x50],0x0
   5e99d:	mov    esi,0x78
   5e9a2:	jmp    5e0a5 <_obstack_memory_used@@Base+0x11425>
   5e9a7:	mov    r12,rbx
   5e9aa:	xor    edi,edi
   5e9ac:	mov    rax,QWORD PTR [rsp+0x18]
   5e9b1:	mov    DWORD PTR [rsp+0x30],0x1
   5e9b9:	mov    esi,0x77
   5e9be:	mov    edx,DWORD PTR [rax+0x18]
   5e9c1:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5e9c6:	mov    r12,rbx
   5e9c9:	xor    edi,edi
   5e9cb:	mov    rax,QWORD PTR [rsp+0x18]
   5e9d0:	mov    DWORD PTR [rsp+0x30],0x1
   5e9d8:	mov    esi,0x75
   5e9dd:	mov    eax,DWORD PTR [rax+0x18]
   5e9e0:	lea    edx,[rax+0x6]
   5e9e3:	movsxd rax,edx
   5e9e6:	mov    ecx,edx
   5e9e8:	imul   rax,rax,0xffffffff92492493
   5e9ef:	sar    ecx,0x1f
   5e9f2:	shr    rax,0x20
   5e9f6:	add    eax,edx
   5e9f8:	sar    eax,0x2
   5e9fb:	sub    eax,ecx
   5e9fd:	lea    ecx,[rax*8+0x0]
   5ea04:	sub    ecx,eax
   5ea06:	sub    edx,ecx
   5ea08:	add    edx,0x1
   5ea0b:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5ea10:	mov    r12,rbx
   5ea13:	cmp    r10d,0x2d
   5ea17:	je     5f326 <_obstack_memory_used@@Base+0x126a6>
   5ea1d:	test   r13d,r13d
   5ea20:	js     5f326 <_obstack_memory_used@@Base+0x126a6>
   5ea26:	movsxd rbp,r13d
   5ea29:	mov    ebx,0x1
   5ea2e:	mov    rax,r15
   5ea31:	test   rbp,rbp
   5ea34:	not    rax
   5ea37:	cmovne rbx,rbp
   5ea3b:	cmp    rbx,rax
   5ea3e:	jae    5db00 <_obstack_memory_used@@Base+0x10e80>
   5ea44:	test   r14,r14
   5ea47:	je     5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5ea4d:	cmp    r13d,0x1
   5ea51:	jle    5ea84 <_obstack_memory_used@@Base+0x11e04>
   5ea53:	sub    rbp,0x1
   5ea57:	cmp    r10d,0x30
   5ea5b:	je     5f601 <_obstack_memory_used@@Base+0x12981>
   5ea61:	xor    r13d,r13d
   5ea64:	cmp    r10d,0x2b
   5ea68:	je     5f601 <_obstack_memory_used@@Base+0x12981>
   5ea6e:	mov    rsi,r14
   5ea71:	mov    edi,0x20
   5ea76:	add    r13,0x1
   5ea7a:	call   a260 <fputc@plt>
   5ea7f:	cmp    rbp,r13
   5ea82:	jne    5ea6e <_obstack_memory_used@@Base+0x11dee>
   5ea84:	mov    rsi,r14
   5ea87:	mov    edi,0x9
   5ea8c:	call   a260 <fputc@plt>
   5ea91:	jmp    5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5ea96:	mov    r12,rbx
   5ea99:	xor    edi,edi
   5ea9b:	jmp    5e0a0 <_obstack_memory_used@@Base+0x11420>
   5eaa0:	mov    r12,rbx
   5eaa3:	mov    rax,QWORD PTR [rsp+0x18]
   5eaa8:	mov    BYTE PTR [rsp+0x48],0x0
   5eaad:	xor    ebp,ebp
   5eaaf:	xor    ecx,ecx
   5eab1:	mov    DWORD PTR [rsp+0x30],0x1
   5eab9:	mov    eax,DWORD PTR [rax+0x10]
   5eabc:	lea    edx,[rax+rax*4]
   5eabf:	lea    edx,[rax+rdx*2]
   5eac2:	sar    edx,0x5
   5eac5:	add    edx,0x1
   5eac8:	jmp    5e4ba <_obstack_memory_used@@Base+0x1183a>
   5eacd:	mov    r12,rbx
   5ead0:	xor    edi,edi
   5ead2:	mov    BYTE PTR [rsp+0x50],0x0
   5ead7:	jmp    5e8b4 <_obstack_memory_used@@Base+0x11c34>
   5eadc:	mov    r12,rbx
   5eadf:	cmp    r10d,0x2d
   5eae3:	je     5f343 <_obstack_memory_used@@Base+0x126c3>
   5eae9:	test   r13d,r13d
   5eaec:	js     5f343 <_obstack_memory_used@@Base+0x126c3>
   5eaf2:	movsxd rbp,r13d
   5eaf5:	mov    ebx,0x1
   5eafa:	mov    rax,r15
   5eafd:	test   rbp,rbp
   5eb00:	not    rax
   5eb03:	cmovne rbx,rbp
   5eb07:	cmp    rbx,rax
   5eb0a:	jae    5db00 <_obstack_memory_used@@Base+0x10e80>
   5eb10:	test   r14,r14
   5eb13:	je     5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5eb15:	cmp    r13d,0x1
   5eb19:	jle    5eb4c <_obstack_memory_used@@Base+0x11ecc>
   5eb1b:	sub    rbp,0x1
   5eb1f:	cmp    r10d,0x30
   5eb23:	je     5f63d <_obstack_memory_used@@Base+0x129bd>
   5eb29:	xor    r13d,r13d
   5eb2c:	cmp    r10d,0x2b
   5eb30:	je     5f63d <_obstack_memory_used@@Base+0x129bd>
   5eb36:	mov    rsi,r14
   5eb39:	mov    edi,0x20
   5eb3e:	add    r13,0x1
   5eb42:	call   a260 <fputc@plt>
   5eb47:	cmp    rbp,r13
   5eb4a:	jne    5eb36 <_obstack_memory_used@@Base+0x11eb6>
   5eb4c:	mov    rsi,r14
   5eb4f:	mov    edi,0xa
   5eb54:	call   a260 <fputc@plt>
   5eb59:	add    r15,rbx
   5eb5c:	jmp    5dad3 <_obstack_memory_used@@Base+0x10e53>
   5eb61:	mov    r12,rbx
   5eb64:	test   r13d,r13d
   5eb67:	mov    eax,0x9
   5eb6c:	mov    ebp,0x9
   5eb71:	mov    ecx,DWORD PTR [rsp+0x500]
   5eb78:	cmovle r13d,eax
   5eb7c:	jmp    5eb95 <_obstack_memory_used@@Base+0x11f15>
   5eb7e:	xchg   ax,ax
   5eb80:	imul   rax,rax,0x66666667
   5eb87:	sar    ecx,0x1f
   5eb8a:	sub    ebp,0x1
   5eb8d:	sar    rax,0x22
   5eb91:	sub    eax,ecx
   5eb93:	mov    ecx,eax
   5eb95:	movsxd rax,ecx
   5eb98:	cmp    ebp,r13d
   5eb9b:	jg     5eb80 <_obstack_memory_used@@Base+0x11f00>
   5eb9d:	imul   rdx,rax,0x66666667
   5eba4:	mov    esi,ecx
   5eba6:	sar    esi,0x1f
   5eba9:	sar    rdx,0x22
   5ebad:	sub    edx,esi
   5ebaf:	lea    esi,[rdx+rdx*4]
   5ebb2:	mov    edx,ecx
   5ebb4:	add    esi,esi
   5ebb6:	sub    edx,esi
   5ebb8:	cmp    ebp,0x1
   5ebbb:	je     5f3ab <_obstack_memory_used@@Base+0x1272b>
   5ebc1:	test   edx,edx
   5ebc3:	je     5eb80 <_obstack_memory_used@@Base+0x11f00>
   5ebc5:	movsxd rbx,ebp
   5ebc8:	mov    rsi,rbx
   5ebcb:	test   ebp,ebp
   5ebcd:	je     5f78c <_obstack_memory_used@@Base+0x12b0c>
   5ebd3:	lea    rdx,[rsp+rsi*1+0xb0]
   5ebdb:	lea    edi,[rbp-0x1]
   5ebde:	lea    rsi,[rsp+rsi*1+0xaf]
   5ebe6:	sub    rsi,rdi
   5ebe9:	jmp    5ebf2 <_obstack_memory_used@@Base+0x11f72>
   5ebeb:	nop    DWORD PTR [rax+rax*1+0x0]
   5ebf0:	cdqe   
   5ebf2:	imul   rax,rax,0x66666667
   5ebf9:	mov    edi,ecx
   5ebfb:	sub    rdx,0x1
   5ebff:	sar    edi,0x1f
   5ec02:	sar    rax,0x22
   5ec06:	sub    eax,edi
   5ec08:	lea    edi,[rax+rax*4]
   5ec0b:	add    edi,edi
   5ec0d:	sub    ecx,edi
   5ec0f:	add    ecx,0x30
   5ec12:	mov    BYTE PTR [rdx],cl
   5ec14:	mov    ecx,eax
   5ec16:	cmp    rsi,rdx
   5ec19:	jne    5ebf0 <_obstack_memory_used@@Base+0x11f70>
   5ec1b:	mov    eax,0x30
   5ec20:	test   r10d,r10d
   5ec23:	cmove  r10d,eax
   5ec27:	mov    rax,r15
   5ec2a:	not    rax
   5ec2d:	cmp    rax,rbx
   5ec30:	jbe    5db00 <_obstack_memory_used@@Base+0x10e80>
   5ec36:	add    r15,rbx
   5ec39:	test   r14,r14
   5ec3c:	je     5eca6 <_obstack_memory_used@@Base+0x12026>
   5ec3e:	cmp    BYTE PTR [rsp+0x40],0x0
   5ec43:	je     5f553 <_obstack_memory_used@@Base+0x128d3>
   5ec49:	test   rbx,rbx
   5ec4c:	je     5f7ce <_obstack_memory_used@@Base+0x12b4e>
   5ec52:	mov    DWORD PTR [rsp+0x30],r10d
   5ec57:	call   9d10 <__ctype_toupper_loc@plt>
   5ec5c:	mov    DWORD PTR [rsp+0x40],ebp
   5ec60:	mov    rdx,rax
   5ec63:	lea    rax,[rsp+0xb0]
   5ec6b:	mov    QWORD PTR [rsp+0x48],r12
   5ec70:	lea    rsi,[rax+rbx*1]
   5ec74:	mov    rbp,rax
   5ec77:	mov    rbx,rdx
   5ec7a:	mov    r12,rsi
   5ec7d:	movzx  esi,BYTE PTR [rbp+0x0]
   5ec81:	mov    rax,QWORD PTR [rbx]
   5ec84:	add    rbp,0x1
   5ec88:	mov    edi,DWORD PTR [rax+rsi*4]
   5ec8b:	mov    rsi,r14
   5ec8e:	call   a260 <fputc@plt>
   5ec93:	cmp    rbp,r12
   5ec96:	jne    5ec7d <_obstack_memory_used@@Base+0x11ffd>
   5ec98:	mov    ebp,DWORD PTR [rsp+0x40]
   5ec9c:	mov    r10d,DWORD PTR [rsp+0x30]
   5eca1:	mov    r12,QWORD PTR [rsp+0x48]
   5eca6:	cmp    r10d,0x2d
   5ecaa:	je     5daf6 <_obstack_memory_used@@Base+0x10e76>
   5ecb0:	mov    ebx,r13d
   5ecb3:	sub    ebx,ebp
   5ecb5:	js     5daf6 <_obstack_memory_used@@Base+0x10e76>
   5ecbb:	mov    rax,r15
   5ecbe:	movsxd rbx,ebx
   5ecc1:	not    rax
   5ecc4:	cmp    rbx,rax
   5ecc7:	jae    5db00 <_obstack_memory_used@@Base+0x10e80>
   5eccd:	test   r14,r14
   5ecd0:	je     5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5ecd6:	test   rbx,rbx
   5ecd9:	je     5dad3 <_obstack_memory_used@@Base+0x10e53>
   5ecdf:	cmp    r10d,0x30
   5ece3:	je     5f6f6 <_obstack_memory_used@@Base+0x12a76>
   5ece9:	xor    ebp,ebp
   5eceb:	cmp    r10d,0x2b
   5ecef:	je     5f6f6 <_obstack_memory_used@@Base+0x12a76>
   5ecf5:	mov    rsi,r14
   5ecf8:	mov    edi,0x20
   5ecfd:	add    rbp,0x1
   5ed01:	call   a260 <fputc@plt>
   5ed06:	cmp    rbp,rbx
   5ed09:	jne    5ecf5 <_obstack_memory_used@@Base+0x12075>
   5ed0b:	add    r15,rbp
   5ed0e:	jmp    5dad3 <_obstack_memory_used@@Base+0x10e53>
   5ed13:	mov    r12,rbx
   5ed16:	xor    edi,edi
   5ed18:	mov    DWORD PTR [rsp+0x30],0x2
   5ed20:	mov    edx,DWORD PTR [rsp+0xc]
   5ed24:	mov    esi,0x49
   5ed29:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5ed2e:	mov    r12,rbx
   5ed31:	xor    edi,edi
   5ed33:	mov    rax,QWORD PTR [rsp+0x18]
   5ed38:	mov    DWORD PTR [rsp+0x30],0x2
   5ed40:	mov    esi,0x48
   5ed45:	mov    edx,DWORD PTR [rax+0x8]
   5ed48:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5ed4d:	mov    r12,rbx
   5ed50:	xor    edi,edi
   5ed52:	mov    rax,QWORD PTR [rsp+0x18]
   5ed57:	mov    BYTE PTR [rsp+0x48],0x0
   5ed5c:	mov    esi,0x6d
   5ed61:	mov    DWORD PTR [rsp+0x30],0x2
   5ed69:	mov    eax,DWORD PTR [rax+0x10]
   5ed6c:	cmp    eax,0xffffffff
   5ed6f:	lea    edx,[rax+0x1]
   5ed72:	setl   bpl
   5ed76:	setge  al
   5ed79:	xor    ecx,ecx
   5ed7b:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5ed80:	mov    r12,rbx
   5ed83:	xor    edi,edi
   5ed85:	mov    edx,DWORD PTR [rsp+0xc]
   5ed89:	mov    esi,0x6c
   5ed8e:	jmp    5e3f3 <_obstack_memory_used@@Base+0x11773>
   5ed93:	mov    r12,rbx
   5ed96:	xor    edi,edi
   5ed98:	mov    rax,QWORD PTR [rsp+0x18]
   5ed9d:	mov    BYTE PTR [rsp+0x48],0x0
   5eda2:	mov    esi,0x6a
   5eda7:	mov    DWORD PTR [rsp+0x30],0x3
   5edaf:	mov    eax,DWORD PTR [rax+0x1c]
   5edb2:	cmp    eax,0xffffffff
   5edb5:	lea    edx,[rax+0x1]
   5edb8:	setl   bpl
   5edbc:	setge  al
   5edbf:	xor    ecx,ecx
   5edc1:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5edc6:	mov    r12,rbx
   5edc9:	xor    edi,edi
   5edcb:	mov    BYTE PTR [rsp+0x50],0x0
   5edd0:	mov    esi,0x58
   5edd5:	jmp    5e0a5 <_obstack_memory_used@@Base+0x11425>
   5edda:	mov    r12,rbx
   5eddd:	mov    ebx,0xffffffff
   5ede2:	lea    rbp,[rip+0xe697]        # 6d480 <_obstack_memory_used@@Base+0x20800>
   5ede9:	jmp    5e76f <_obstack_memory_used@@Base+0x11aef>
   5edee:	mov    r12,rbx
   5edf1:	xor    edi,edi
   5edf3:	mov    rax,QWORD PTR [rsp+0x18]
   5edf8:	mov    ecx,DWORD PTR [rax+0x14]
   5edfb:	cmp    ecx,0xfffff894
   5ee01:	lea    eax,[rcx+0x76c]
   5ee07:	setl   bpl
   5ee0b:	cmp    eax,0x76c
   5ee10:	sbb    eax,eax
   5ee12:	and    eax,0xffffff9d
   5ee15:	add    eax,ecx
   5ee17:	movsxd rdx,eax
   5ee1a:	sar    eax,0x1f
   5ee1d:	imul   rdx,rdx,0x51eb851f
   5ee24:	sar    rdx,0x25
   5ee28:	sub    edx,eax
   5ee2a:	add    edx,0x13
   5ee2d:	cmp    ecx,0xfffff894
   5ee33:	setge  al
   5ee36:	test   r10d,r10d
   5ee39:	jne    5f4bc <_obstack_memory_used@@Base+0x1283c>
   5ee3f:	cmp    DWORD PTR [rsp+0x60],0x2b
   5ee44:	mov    r10d,DWORD PTR [rsp+0x60]
   5ee49:	je     5f4c6 <_obstack_memory_used@@Base+0x12846>
   5ee4f:	mov    BYTE PTR [rsp+0x48],0x0
   5ee54:	mov    esi,0x43
   5ee59:	mov    DWORD PTR [rsp+0x30],0x2
   5ee61:	jmp    5df06 <_obstack_memory_used@@Base+0x11286>
   5ee66:	mov    r12,rbx
   5ee69:	test   r10d,r10d
   5ee6c:	jne    5ee77 <_obstack_memory_used@@Base+0x121f7>
   5ee6e:	test   r13d,r13d
   5ee71:	js     5f713 <_obstack_memory_used@@Base+0x12a93>
   5ee77:	lea    ebx,[r13-0x6]
   5ee7b:	xor    eax,eax
   5ee7d:	lea    rbp,[rip+0xe605]        # 6d489 <_obstack_memory_used@@Base+0x20809>
   5ee84:	test   ebx,ebx
   5ee86:	cmovs  ebx,eax
   5ee89:	jmp    5e76f <_obstack_memory_used@@Base+0x11aef>
   5ee8e:	mov    r12,rbx
   5ee91:	xor    edi,edi
   5ee93:	mov    rax,QWORD PTR [rsp+0x18]
   5ee98:	mov    DWORD PTR [rsp+0x30],0x2
   5eea0:	mov    esi,0x4d
   5eea5:	mov    edx,DWORD PTR [rax+0x4]
   5eea8:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5eead:	test   edi,edi
   5eeaf:	je     5e2cc <_obstack_memory_used@@Base+0x1164c>
   5eeb5:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5eeba:	cmp    edi,0x4f
   5eebd:	jne    5edcb <_obstack_memory_used@@Base+0x1214b>
   5eec3:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5eec8:	cmp    edi,0x4f
   5eecb:	jne    5e2ba <_obstack_memory_used@@Base+0x1163a>
   5eed1:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5eed6:	mov    esi,0x71
   5eedb:	cmp    edi,0x4f
   5eede:	je     5df21 <_obstack_memory_used@@Base+0x112a1>
   5eee4:	jmp    5eaa3 <_obstack_memory_used@@Base+0x11e23>
   5eee9:	test   edi,edi
   5eeeb:	je     5ee69 <_obstack_memory_used@@Base+0x121e9>
   5eef1:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5eef6:	cmp    edi,0x4f
   5eef9:	jne    5e998 <_obstack_memory_used@@Base+0x11d18>
   5eeff:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef04:	cmp    edi,0x45
   5ef07:	jne    5eb64 <_obstack_memory_used@@Base+0x11ee4>
   5ef0d:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef12:	test   edi,edi
   5ef14:	je     5eddd <_obstack_memory_used@@Base+0x1215d>
   5ef1a:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef1f:	cmp    edi,0x45
   5ef22:	jne    5e0ee <_obstack_memory_used@@Base+0x1146e>
   5ef28:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef2d:	test   edi,edi
   5ef2f:	je     5e10c <_obstack_memory_used@@Base+0x1148c>
   5ef35:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef3a:	cmp    edi,0x45
   5ef3d:	jne    5ee93 <_obstack_memory_used@@Base+0x12213>
   5ef43:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef48:	cmp    edi,0x45
   5ef4b:	jne    5edf3 <_obstack_memory_used@@Base+0x12173>
   5ef51:	jmp    5df21 <_obstack_memory_used@@Base+0x112a1>
   5ef56:	test   edi,edi
   5ef58:	jne    5f668 <_obstack_memory_used@@Base+0x129e8>
   5ef5e:	mov    edi,0x25
   5ef63:	jmp    5e22f <_obstack_memory_used@@Base+0x115af>
   5ef68:	cmp    edi,0x45
   5ef6b:	jne    5ed18 <_obstack_memory_used@@Base+0x12098>
   5ef71:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef76:	cmp    edi,0x45
   5ef79:	jne    5ed33 <_obstack_memory_used@@Base+0x120b3>
   5ef7f:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5ef84:	cmp    edi,0x45
   5ef87:	jne    5e920 <_obstack_memory_used@@Base+0x11ca0>
   5ef8d:	jmp    5df21 <_obstack_memory_used@@Base+0x112a1>
   5ef92:	cmp    edi,0x45
   5ef95:	je     5df21 <_obstack_memory_used@@Base+0x112a1>
   5ef9b:	cmp    edi,0x4f
   5ef9e:	jne    5e463 <_obstack_memory_used@@Base+0x117e3>
   5efa4:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5efa9:	cmp    edi,0x45
   5efac:	jne    5e426 <_obstack_memory_used@@Base+0x117a6>
   5efb2:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5efb7:	cmp    edi,0x45
   5efba:	jne    5e43a <_obstack_memory_used@@Base+0x117ba>
   5efc0:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5efc5:	cmp    edi,0x45
   5efc8:	jne    5e6fd <_obstack_memory_used@@Base+0x11a7d>
   5efce:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5efd3:	cmp    edi,0x45
   5efd6:	jne    5e87d <_obstack_memory_used@@Base+0x11bfd>
   5efdc:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5efe1:	cmp    edi,0x45
   5efe4:	jne    5e8e3 <_obstack_memory_used@@Base+0x11c63>
   5efea:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5efef:	cmp    edi,0x45
   5eff2:	jne    5ed52 <_obstack_memory_used@@Base+0x120d2>
   5eff8:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5effd:	cmp    edi,0x45
   5f000:	jne    5ed85 <_obstack_memory_used@@Base+0x12105>
   5f006:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5f00b:	cmp    edi,0x45
   5f00e:	jne    5e3e6 <_obstack_memory_used@@Base+0x11766>
   5f014:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5f019:	cmp    edi,0x45
   5f01c:	jne    5ed98 <_obstack_memory_used@@Base+0x12118>
   5f022:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5f027:	cmp    edi,0x45
   5f02a:	jne    5e9ac <_obstack_memory_used@@Base+0x11d2c>
   5f030:	jmp    5dc50 <_obstack_memory_used@@Base+0x10fd0>
   5f035:	mov    rbx,r12
   5f038:	jmp    5e141 <_obstack_memory_used@@Base+0x114c1>
   5f03d:	add    r8,0x1
   5f041:	movzx  eax,BYTE PTR [rbx+r8*1]
   5f046:	lea    r12,[rbx+r8*1]
   5f04a:	cmp    al,0x3a
   5f04c:	jne    5e157 <_obstack_memory_used@@Base+0x114d7>
   5f052:	jmp    5f03d <_obstack_memory_used@@Base+0x123bd>
   5f054:	nop    DWORD PTR [rax+0x0]
   5f058:	mov    rax,QWORD PTR [rsp+0x30]
   5f05d:	xor    ebx,ebx
   5f05f:	mov    QWORD PTR [rsp+0x48],rax
   5f064:	jmp    5dfb1 <_obstack_memory_used@@Base+0x11331>
   5f069:	nop    DWORD PTR [rax+0x0]
   5f070:	mov    QWORD PTR [rsp+0x30],rbx
   5f075:	xor    r13d,r13d
   5f078:	jmp    5dc93 <_obstack_memory_used@@Base+0x11013>
   5f07d:	nop    DWORD PTR [rax]
   5f080:	mov    BYTE PTR [rsp+0x30],0x2d
   5f085:	lea    edx,[r13-0x1]
   5f089:	sub    edx,r8d
   5f08c:	mov    ebp,edx
   5f08e:	test   edx,edx
   5f090:	jle    5f130 <_obstack_memory_used@@Base+0x124b0>
   5f096:	test   al,al
   5f098:	je     5f130 <_obstack_memory_used@@Base+0x124b0>
   5f09e:	cmp    r10d,0x5f
   5f0a2:	je     5f223 <_obstack_memory_used@@Base+0x125a3>
   5f0a8:	cmp    r15,0xfffffffffffffffd
   5f0ac:	ja     5db00 <_obstack_memory_used@@Base+0x10e80>
   5f0b2:	test   r14,r14
   5f0b5:	je     5f0d8 <_obstack_memory_used@@Base+0x12458>
   5f0b7:	movsx  edi,BYTE PTR [rsp+0x30]
   5f0bc:	mov    rsi,r14
   5f0bf:	mov    QWORD PTR [rsp+0x50],r8
   5f0c4:	mov    DWORD PTR [rsp+0x48],r10d
   5f0c9:	call   a260 <fputc@plt>
   5f0ce:	mov    r8,QWORD PTR [rsp+0x50]
   5f0d3:	mov    r10d,DWORD PTR [rsp+0x48]
   5f0d8:	movsxd rbp,r8d
   5f0db:	add    r15,0x1
   5f0df:	xor    edx,edx
   5f0e1:	mov    QWORD PTR [rsp+0x30],rbp
   5f0e6:	cmp    r10d,0x2d
   5f0ea:	je     5e64e <_obstack_memory_used@@Base+0x119ce>
   5f0f0:	sub    r13d,0x1
   5f0f4:	js     5e64e <_obstack_memory_used@@Base+0x119ce>
   5f0fa:	jmp    5e63c <_obstack_memory_used@@Base+0x119bc>
   5f0ff:	nop
   5f100:	mov    eax,0x1
   5f105:	mov    r10d,0x30
   5f10b:	jmp    5e608 <_obstack_memory_used@@Base+0x11988>
   5f110:	cmp    r10d,0x2d
   5f114:	jne    5e63c <_obstack_memory_used@@Base+0x119bc>
   5f11a:	mov    QWORD PTR [rsp+0x30],rbp
   5f11f:	xor    edx,edx
   5f121:	jmp    5e64e <_obstack_memory_used@@Base+0x119ce>
   5f126:	cs nop WORD PTR [rax+rax*1+0x0]
   5f130:	xor    ebp,ebp
   5f132:	jmp    5f09e <_obstack_memory_used@@Base+0x1241e>
   5f137:	mov    rcx,r14
   5f13a:	mov    edx,0x1
   5f13f:	mov    rsi,rbp
   5f142:	mov    rdi,rbx
   5f145:	call   a830 <fwrite@plt>
   5f14a:	jmp    5dd38 <_obstack_memory_used@@Base+0x110b8>
   5f14f:	mov    rcx,r14
   5f152:	mov    edx,0x1
   5f157:	mov    rsi,rbx
   5f15a:	mov    rdi,rbp
   5f15d:	call   a830 <fwrite@plt>
   5f162:	jmp    5dd38 <_obstack_memory_used@@Base+0x110b8>
   5f167:	mov    ebp,eax
   5f169:	jmp    5db9e <_obstack_memory_used@@Base+0x10f1e>
   5f16e:	mov    BYTE PTR [rsp+0x40],0x1
   5f173:	jmp    5db9e <_obstack_memory_used@@Base+0x10f1e>
   5f178:	mov    rsi,QWORD PTR [rsp+0x30]
   5f17d:	lea    rdi,[rsp+0xb1]
   5f185:	mov    rcx,r14
   5f188:	mov    edx,0x1
   5f18d:	call   a830 <fwrite@plt>
   5f192:	jmp    5e068 <_obstack_memory_used@@Base+0x113e8>
   5f197:	cmp    QWORD PTR [rsp+0x30],0x0
   5f19d:	je     5e068 <_obstack_memory_used@@Base+0x113e8>
   5f1a3:	call   a970 <__ctype_tolower_loc@plt>
   5f1a8:	lea    rbx,[rsp+0xb1]
   5f1b0:	add    rbp,QWORD PTR [rsp+0x58]
   5f1b5:	mov    r13,rax
   5f1b8:	nop    DWORD PTR [rax+rax*1+0x0]
   5f1c0:	movzx  edx,BYTE PTR [rbx]
   5f1c3:	mov    rax,QWORD PTR [r13+0x0]
   5f1c7:	mov    rsi,r14
   5f1ca:	add    rbx,0x1
   5f1ce:	mov    edi,DWORD PTR [rax+rdx*4]
   5f1d1:	call   a260 <fputc@plt>
   5f1d6:	cmp    rbx,rbp
   5f1d9:	jne    5f1c0 <_obstack_memory_used@@Base+0x12540>
   5f1db:	jmp    5e068 <_obstack_memory_used@@Base+0x113e8>
   5f1e0:	mov    BYTE PTR [rsp+0x30],0x2b
   5f1e5:	jmp    5f085 <_obstack_memory_used@@Base+0x12405>
   5f1ea:	mov    QWORD PTR [rsp+0x40],rax
   5f1ef:	xor    r13d,r13d
   5f1f2:	jmp    5e7ca <_obstack_memory_used@@Base+0x11b4a>
   5f1f7:	test   rbx,rbx
   5f1fa:	je     5e00e <_obstack_memory_used@@Base+0x1138e>
   5f200:	xor    r13d,r13d
   5f203:	nop    DWORD PTR [rax+rax*1+0x0]
   5f208:	mov    rsi,r14
   5f20b:	mov    edi,0x30
   5f210:	add    r13,0x1
   5f214:	call   a260 <fputc@plt>
   5f219:	cmp    rbx,r13
   5f21c:	jne    5f208 <_obstack_memory_used@@Base+0x12588>
   5f21e:	jmp    5e00e <_obstack_memory_used@@Base+0x1138e>
   5f223:	movsxd rax,ebp
   5f226:	mov    QWORD PTR [rsp+0x48],rax
   5f22b:	test   r14,r14
   5f22e:	jne    5f2d0 <_obstack_memory_used@@Base+0x12650>
   5f234:	add    r15,QWORD PTR [rsp+0x48]
   5f239:	sub    r13d,ebp
   5f23c:	jmp    5f0a8 <_obstack_memory_used@@Base+0x12428>
   5f241:	xor    r13d,r13d
   5f244:	mov    QWORD PTR [rsp+0x48],rbx
   5f249:	mov    rbx,r13
   5f24c:	mov    r13,rax
   5f24f:	nop
   5f250:	mov    rsi,r14
   5f253:	mov    edi,0x30
   5f258:	add    rbx,0x1
   5f25c:	call   a260 <fputc@plt>
   5f261:	cmp    r13,rbx
   5f264:	jne    5f250 <_obstack_memory_used@@Base+0x125d0>
   5f266:	jmp    5e6ae <_obstack_memory_used@@Base+0x11a2e>
   5f26b:	test   r13,r13
   5f26e:	je     5dcfb <_obstack_memory_used@@Base+0x1107b>
   5f274:	xor    edx,edx
   5f276:	mov    QWORD PTR [rsp+0x48],rbx
   5f27b:	mov    rbx,rdx
   5f27e:	xchg   ax,ax
   5f280:	mov    rsi,r14
   5f283:	mov    edi,0x30
   5f288:	add    rbx,0x1
   5f28c:	call   a260 <fputc@plt>
   5f291:	cmp    r13,rbx
   5f294:	jne    5f280 <_obstack_memory_used@@Base+0x12600>
   5f296:	jmp    5dcf6 <_obstack_memory_used@@Base+0x11076>
   5f29b:	cmp    r8,0x3
   5f29f:	jne    5f65b <_obstack_memory_used@@Base+0x129db>
   5f2a5:	test   r9d,r9d
   5f2a8:	jne    5f57a <_obstack_memory_used@@Base+0x128fa>
   5f2ae:	test   ecx,ecx
   5f2b0:	jne    5e20b <_obstack_memory_used@@Base+0x1158b>
   5f2b6:	mov    eax,ebp
   5f2b8:	mov    BYTE PTR [rsp+0x48],0x1
   5f2bd:	mov    DWORD PTR [rsp+0x30],0x3
   5f2c5:	xor    eax,0x1
   5f2c8:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5f2cd:	nop    DWORD PTR [rax]
   5f2d0:	test   ebp,ebp
   5f2d2:	je     5f234 <_obstack_memory_used@@Base+0x125b4>
   5f2d8:	mov    DWORD PTR [rsp+0x58],r10d
   5f2dd:	xor    ecx,ecx
   5f2df:	mov    QWORD PTR [rsp+0x68],r8
   5f2e4:	mov    DWORD PTR [rsp+0x64],ebp
   5f2e8:	mov    rbp,QWORD PTR [rsp+0x48]
   5f2ed:	mov    QWORD PTR [rsp+0x50],rbx
   5f2f2:	mov    rbx,rcx
   5f2f5:	nop    DWORD PTR [rax]
   5f2f8:	mov    rsi,r14
   5f2fb:	mov    edi,0x20
   5f300:	add    rbx,0x1
   5f304:	call   a260 <fputc@plt>
   5f309:	cmp    rbx,rbp
   5f30c:	jne    5f2f8 <_obstack_memory_used@@Base+0x12678>
   5f30e:	mov    rbx,QWORD PTR [rsp+0x50]
   5f313:	mov    r10d,DWORD PTR [rsp+0x58]
   5f318:	mov    ebp,DWORD PTR [rsp+0x64]
   5f31c:	mov    r8,QWORD PTR [rsp+0x68]
   5f321:	jmp    5f234 <_obstack_memory_used@@Base+0x125b4>
   5f326:	cmp    r15,0xfffffffffffffffd
   5f32a:	ja     5db00 <_obstack_memory_used@@Base+0x10e80>
   5f330:	mov    ebx,0x1
   5f335:	test   r14,r14
   5f338:	jne    5ea84 <_obstack_memory_used@@Base+0x11e04>
   5f33e:	jmp    5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5f343:	cmp    r15,0xfffffffffffffffd
   5f347:	ja     5db00 <_obstack_memory_used@@Base+0x10e80>
   5f34d:	mov    ebx,0x1
   5f352:	test   r14,r14
   5f355:	jne    5eb4c <_obstack_memory_used@@Base+0x11ecc>
   5f35b:	jmp    5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5f360:	mov    rax,QWORD PTR [rsp+0x30]
   5f365:	xor    ebx,ebx
   5f367:	mov    QWORD PTR [rsp+0x48],rax
   5f36c:	jmp    5e334 <_obstack_memory_used@@Base+0x116b4>
   5f371:	mov    DWORD PTR [rsp+0x50],r10d
   5f376:	xor    r13d,r13d
   5f379:	mov    QWORD PTR [rsp+0x48],rbp
   5f37e:	mov    rbp,r13
   5f381:	mov    r13,r12
   5f384:	mov    r12d,ebx
   5f387:	mov    rbx,rax
   5f38a:	nop    WORD PTR [rax+rax*1+0x0]
   5f390:	mov    rsi,r14
   5f393:	mov    edi,0x30
   5f398:	add    rbp,0x1
   5f39c:	call   a260 <fputc@plt>
   5f3a1:	cmp    rbx,rbp
   5f3a4:	jne    5f390 <_obstack_memory_used@@Base+0x12710>
   5f3a6:	jmp    5e836 <_obstack_memory_used@@Base+0x11bb6>
   5f3ab:	mov    ebx,0x1
   5f3b0:	mov    esi,0x1
   5f3b5:	jmp    5ebd3 <_obstack_memory_used@@Base+0x11f53>
   5f3ba:	cmp    r15,0xfffffffffffffffd
   5f3be:	ja     5db00 <_obstack_memory_used@@Base+0x10e80>
   5f3c4:	mov    ebx,0x1
   5f3c9:	test   r14,r14
   5f3cc:	jne    5e2a8 <_obstack_memory_used@@Base+0x11628>
   5f3d2:	jmp    5eb59 <_obstack_memory_used@@Base+0x11ed9>
   5f3d7:	mov    DWORD PTR [rsp+0x30],0x4
   5f3df:	mov    eax,0x270f
   5f3e4:	cmp    r10d,0x2b
   5f3e8:	jne    5f77d <_obstack_memory_used@@Base+0x12afd>
   5f3ee:	cmp    eax,edx
   5f3f0:	jae    5f416 <_obstack_memory_used@@Base+0x12796>
   5f3f2:	mov    eax,ebp
   5f3f4:	mov    BYTE PTR [rsp+0x48],0x1
   5f3f9:	mov    r10d,0x2b
   5f3ff:	xor    eax,0x1
   5f402:	jmp    5df06 <_obstack_memory_used@@Base+0x11286>
   5f407:	mov    DWORD PTR [rsp+0x30],0x2
   5f40f:	mov    esi,0x79
   5f414:	xor    ebp,ebp
   5f416:	cmp    r13d,DWORD PTR [rsp+0x30]
   5f41b:	mov    eax,ebp
   5f41d:	mov    r10d,0x2b
   5f423:	setg   BYTE PTR [rsp+0x48]
   5f428:	xor    eax,0x1
   5f42b:	jmp    5df06 <_obstack_memory_used@@Base+0x11286>
   5f430:	lea    eax,[rbp-0x1]
   5f433:	mov    edx,0x16d
   5f438:	test   al,0x3
   5f43a:	jne    5f470 <_obstack_memory_used@@Base+0x127f0>
   5f43c:	imul   edx,eax,0xc28f5c29
   5f442:	add    edx,0x51eb850
   5f448:	ror    edx,0x2
   5f44b:	mov    r11d,edx
   5f44e:	mov    edx,0x16e
   5f453:	cmp    r11d,0x28f5c28
   5f45a:	ja     5f470 <_obstack_memory_used@@Base+0x127f0>
   5f45c:	cdq    
   5f45d:	mov    r11d,0x190
   5f463:	idiv   r11d
   5f466:	neg    edx
   5f468:	sbb    edx,edx
   5f46a:	add    edx,0x16e
   5f470:	add    edx,r8d
   5f473:	mov    r8d,edx
   5f476:	sub    r8d,r9d
   5f479:	add    r8d,0x17e
   5f480:	movsxd rax,r8d
   5f483:	mov    r9d,r8d
   5f486:	sub    edx,r8d
   5f489:	imul   rax,rax,0xffffffff92492493
   5f490:	sar    r9d,0x1f
   5f494:	shr    rax,0x20
   5f498:	add    eax,r8d
   5f49b:	mov    r8d,0xffffffff
   5f4a1:	sar    eax,0x2
   5f4a4:	sub    eax,r9d
   5f4a7:	lea    r9d,[rax*8+0x0]
   5f4af:	sub    r9d,eax
   5f4b2:	lea    eax,[rdx+r9*1+0x3]
   5f4b7:	jmp    5de81 <_obstack_memory_used@@Base+0x11201>
   5f4bc:	cmp    r10d,0x2b
   5f4c0:	jne    5ee4f <_obstack_memory_used@@Base+0x121cf>
   5f4c6:	mov    DWORD PTR [rsp+0x30],0x2
   5f4ce:	mov    esi,0x43
   5f4d3:	mov    eax,0x63
   5f4d8:	jmp    5f3ee <_obstack_memory_used@@Base+0x1276e>
   5f4dd:	movsxd rdx,eax
   5f4e0:	mov    DWORD PTR [rsp+0x30],0x2
   5f4e8:	mov    r12,rbx
   5f4eb:	imul   rdx,rdx,0xffffffff92492493
   5f4f2:	shr    rdx,0x20
   5f4f6:	add    edx,eax
   5f4f8:	sar    eax,0x1f
   5f4fb:	sar    edx,0x2
   5f4fe:	sub    edx,eax
   5f500:	add    edx,0x1
   5f503:	jmp    5e407 <_obstack_memory_used@@Base+0x11787>
   5f508:	mov    eax,0xfffff894
   5f50d:	lea    edx,[rcx+r8*1+0x76c]
   5f515:	mov    r12,rbx
   5f518:	sub    eax,r8d
   5f51b:	cmp    ecx,eax
   5f51d:	setl   bpl
   5f521:	test   r10d,r10d
   5f524:	jne    5f3d7 <_obstack_memory_used@@Base+0x12757>
   5f52a:	mov    r10d,DWORD PTR [rsp+0x60]
   5f52f:	cmp    r10d,0x2b
   5f533:	je     5f7a9 <_obstack_memory_used@@Base+0x12b29>
   5f539:	cmp    ecx,eax
   5f53b:	mov    BYTE PTR [rsp+0x48],0x0
   5f540:	mov    r12,rbx
   5f543:	mov    DWORD PTR [rsp+0x30],0x4
   5f54b:	setge  al
   5f54e:	jmp    5df06 <_obstack_memory_used@@Base+0x11286>
   5f553:	mov    rcx,r14
   5f556:	mov    edx,0x1
   5f55b:	mov    rsi,rbx
   5f55e:	mov    DWORD PTR [rsp+0x40],r10d
   5f563:	lea    rdi,[rsp+0xb0]
   5f56b:	call   a830 <fwrite@plt>
   5f570:	mov    r10d,DWORD PTR [rsp+0x40]
   5f575:	jmp    5eca6 <_obstack_memory_used@@Base+0x12026>
   5f57a:	imul   ecx,ecx,0x64
   5f57d:	mov    eax,ebp
   5f57f:	mov    BYTE PTR [rsp+0x48],0x1
   5f584:	imul   edx,edx,0x2710
   5f58a:	mov    DWORD PTR [rsp+0x30],0x9
   5f592:	xor    eax,0x1
   5f595:	add    edx,ecx
   5f597:	mov    ecx,0x14
   5f59c:	add    edx,r9d
   5f59f:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5f5a4:	mov    rsi,QWORD PTR [rsp+0x30]
   5f5a9:	mov    rdi,QWORD PTR [rsp+0x28]
   5f5ae:	mov    rcx,r14
   5f5b1:	mov    edx,0x1
   5f5b6:	call   a830 <fwrite@plt>
   5f5bb:	jmp    5e068 <_obstack_memory_used@@Base+0x113e8>
   5f5c0:	mov    rbx,QWORD PTR [rsp+0x30]
   5f5c5:	test   rbx,rbx
   5f5c8:	je     5e068 <_obstack_memory_used@@Base+0x113e8>
   5f5ce:	call   a970 <__ctype_tolower_loc@plt>
   5f5d3:	mov    r13,rbx
   5f5d6:	mov    rbx,QWORD PTR [rsp+0x28]
   5f5db:	mov    rbp,rax
   5f5de:	add    r13,rbx
   5f5e1:	movzx  edx,BYTE PTR [rbx]
   5f5e4:	mov    rax,QWORD PTR [rbp+0x0]
   5f5e8:	mov    rsi,r14
   5f5eb:	add    rbx,0x1
   5f5ef:	mov    edi,DWORD PTR [rax+rdx*4]
   5f5f2:	call   a260 <fputc@plt>
   5f5f7:	cmp    rbx,r13
   5f5fa:	jne    5f5e1 <_obstack_memory_used@@Base+0x12961>
   5f5fc:	jmp    5e068 <_obstack_memory_used@@Base+0x113e8>
   5f601:	xor    r13d,r13d
   5f604:	mov    rsi,r14
   5f607:	mov    edi,0x30
   5f60c:	add    r13,0x1
   5f610:	call   a260 <fputc@plt>
   5f615:	cmp    rbp,r13
   5f618:	jne    5f604 <_obstack_memory_used@@Base+0x12984>
   5f61a:	jmp    5ea84 <_obstack_memory_used@@Base+0x11e04>
   5f61f:	imul   edx,edx,0x64
   5f622:	mov    eax,ebp
   5f624:	mov    BYTE PTR [rsp+0x48],0x1
   5f629:	mov    DWORD PTR [rsp+0x30],0x5
   5f631:	xor    eax,0x1
   5f634:	add    edx,ecx
   5f636:	xor    ecx,ecx
   5f638:	jmp    5df10 <_obstack_memory_used@@Base+0x11290>
   5f63d:	xor    r13d,r13d
   5f640:	mov    rsi,r14
   5f643:	mov    edi,0x30
   5f648:	add    r13,0x1
   5f64c:	call   a260 <fputc@plt>
   5f651:	cmp    rbp,r13
   5f654:	jne    5f640 <_obstack_memory_used@@Base+0x129c0>
   5f656:	jmp    5eb4c <_obstack_memory_used@@Base+0x11ecc>
   5f65b:	movzx  eax,BYTE PTR [r12]
   5f660:	mov    rbp,r12
   5f663:	jmp    5e0d4 <_obstack_memory_used@@Base+0x11454>
   5f668:	mov    rbp,r12
   5f66b:	mov    ebx,0x1
   5f670:	jmp    5dc6e <_obstack_memory_used@@Base+0x10fee>
   5f675:	mov    eax,0xfffff894
   5f67a:	sub    eax,r8d
   5f67d:	cmp    ecx,eax
   5f67f:	jge    5f793 <_obstack_memory_used@@Base+0x12b13>
   5f685:	neg    edx
   5f687:	test   r10d,r10d
   5f68a:	jne    5dee5 <_obstack_memory_used@@Base+0x11265>
   5f690:	mov    r10d,DWORD PTR [rsp+0x60]
   5f695:	mov    r12,rbx
   5f698:	cmp    r10d,0x2b
   5f69c:	jne    5def2 <_obstack_memory_used@@Base+0x11272>
   5f6a2:	mov    DWORD PTR [rsp+0x30],0x2
   5f6aa:	xor    ebp,ebp
   5f6ac:	jmp    5f416 <_obstack_memory_used@@Base+0x12796>
   5f6b1:	xor    r13d,r13d
   5f6b4:	mov    rsi,r14
   5f6b7:	mov    edi,0x30
   5f6bc:	add    r13,0x1
   5f6c0:	call   a260 <fputc@plt>
   5f6c5:	cmp    rbp,r13
   5f6c8:	jne    5f6b4 <_obstack_memory_used@@Base+0x12a34>
   5f6ca:	jmp    5e2a3 <_obstack_memory_used@@Base+0x11623>
   5f6cf:	test   rbx,rbx
   5f6d2:	je     5e38c <_obstack_memory_used@@Base+0x1170c>
   5f6d8:	xor    r13d,r13d
   5f6db:	mov    rsi,r14
   5f6de:	mov    edi,0x30
   5f6e3:	add    r13,0x1
   5f6e7:	call   a260 <fputc@plt>
   5f6ec:	cmp    rbx,r13
   5f6ef:	jne    5f6db <_obstack_memory_used@@Base+0x12a5b>
   5f6f1:	jmp    5e38c <_obstack_memory_used@@Base+0x1170c>
   5f6f6:	xor    ebp,ebp
   5f6f8:	mov    rsi,r14
   5f6fb:	mov    edi,0x30
   5f700:	add    rbp,0x1
   5f704:	call   a260 <fputc@plt>
   5f709:	cmp    rbp,rbx
   5f70c:	jne    5f6f8 <_obstack_memory_used@@Base+0x12a78>
   5f70e:	jmp    5ed0b <_obstack_memory_used@@Base+0x1208b>
   5f713:	movzx  eax,BYTE PTR [rsp+0x40]
   5f718:	sub    rsp,0x8
   5f71c:	xor    edi,edi
   5f71e:	xor    r13d,r13d
   5f721:	lea    rbp,[rip+0xdd61]        # 6d489 <_obstack_memory_used@@Base+0x20809>
   5f728:	mov    r9d,0x4
   5f72e:	mov    r8d,0x2b
   5f734:	mov    DWORD PTR [rsp+0x38],eax
   5f738:	mov    ebx,DWORD PTR [rsp+0x508]
   5f73f:	mov    ecx,eax
   5f741:	mov    rsi,rbp
   5f744:	push   rbx
   5f745:	mov    rdx,QWORD PTR [rsp+0x28]
   5f74a:	mov    ebx,0x4
   5f74f:	call   5da00 <_obstack_memory_used@@Base+0x10d80>
   5f754:	pop    rdx
   5f755:	pop    rcx
   5f756:	mov    r10d,0x2b
   5f75c:	mov    QWORD PTR [rsp+0x40],rax
   5f761:	jmp    5e7ca <_obstack_memory_used@@Base+0x11b4a>
   5f766:	mov    DWORD PTR [rsp+0x30],0x4
   5f76e:	mov    esi,0x59
   5f773:	mov    eax,0x270f
   5f778:	jmp    5f3ee <_obstack_memory_used@@Base+0x1276e>
   5f77d:	mov    eax,ebp
   5f77f:	mov    BYTE PTR [rsp+0x48],0x0
   5f784:	xor    eax,0x1
   5f787:	jmp    5df06 <_obstack_memory_used@@Base+0x11286>
   5f78c:	xor    ebx,ebx
   5f78e:	jmp    5ec1b <_obstack_memory_used@@Base+0x11f9b>
   5f793:	add    edx,0x64
   5f796:	test   r10d,r10d
   5f799:	je     5f690 <_obstack_memory_used@@Base+0x12a10>
   5f79f:	jmp    5dee5 <_obstack_memory_used@@Base+0x11265>
   5f7a4:	call   a0a0 <__stack_chk_fail@plt>
   5f7a9:	mov    DWORD PTR [rsp+0x30],0x4
   5f7b1:	mov    r12,rbx
   5f7b4:	mov    eax,0x270f
   5f7b9:	jmp    5f3ee <_obstack_memory_used@@Base+0x1276e>
   5f7be:	mov    rax,QWORD PTR [rsp+0x10]
   5f7c3:	mov    DWORD PTR [rax],0x4b
   5f7c9:	jmp    5db0b <_obstack_memory_used@@Base+0x10e8b>
   5f7ce:	cmp    r10d,0x2d
   5f7d2:	je     5daf6 <_obstack_memory_used@@Base+0x10e76>
   5f7d8:	mov    ebx,r13d
   5f7db:	mov    rax,r15
   5f7de:	sub    ebx,ebp
   5f7e0:	not    rax
   5f7e3:	movsxd rbx,ebx
   5f7e6:	cmp    rax,rbx
   5f7e9:	ja     5ecd6 <_obstack_memory_used@@Base+0x12056>
   5f7ef:	jmp    5db00 <_obstack_memory_used@@Base+0x10e80>
   5f7f4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   5f7ff:	nop
   5f800:	endbr64 
   5f804:	push   r15
   5f806:	mov    r15,rcx
   5f809:	push   r14
   5f80b:	mov    r14,rdi
   5f80e:	push   r13
   5f810:	push   r12
   5f812:	push   rbp
   5f813:	push   rbx
   5f814:	mov    rbx,rdx
   5f817:	sub    rsp,0x4b8
   5f81e:	mov    QWORD PTR [rsp],rsi
   5f822:	movsxd rbp,DWORD PTR [rsp+0x4f0]
   5f82a:	mov    QWORD PTR [rsp+0x8],rcx
   5f82f:	mov    DWORD PTR [rsp+0x20],r9d
   5f834:	mov    BYTE PTR [rsp+0x13],r8b
   5f839:	mov    rax,QWORD PTR fs:0x28
   5f842:	mov    QWORD PTR [rsp+0x4a8],rax
   5f84a:	xor    eax,eax
   5f84c:	call   9e40 <__errno_location@plt>
   5f851:	mov    r11,rax
   5f854:	mov    eax,DWORD PTR [rax]
   5f856:	mov    DWORD PTR [rsp+0x14],eax
   5f85a:	mov    rax,r15
   5f85d:	mov    r15d,DWORD PTR [r15+0x8]
   5f861:	mov    r10,QWORD PTR [rax+0x30]
   5f865:	lea    rax,[rip+0xc2e4]        # 6bb50 <_obstack_memory_used@@Base+0x1eed0>
   5f86c:	test   r10,r10
   5f86f:	cmove  r10,rax
   5f873:	cmp    r15d,0xc
   5f877:	jle    5f9e0 <_obstack_memory_used@@Base+0x12d60>
   5f87d:	sub    r15d,0xc
   5f881:	movzx  eax,BYTE PTR [rbx]
   5f884:	xor    r13d,r13d
   5f887:	test   al,al
   5f889:	je     5f8fd <_obstack_memory_used@@Base+0x12c7d>
   5f88b:	mov    QWORD PTR [rsp+0x18],r10
   5f890:	mov    DWORD PTR [rsp+0x24],r15d
   5f895:	mov    r15,r11
   5f898:	cmp    al,0x25
   5f89a:	je     5fa18 <_obstack_memory_used@@Base+0x12d98>
   5f8a0:	xor    eax,eax
   5f8a2:	test   ebp,ebp
   5f8a4:	mov    rdx,QWORD PTR [rsp]
   5f8a8:	mov    r12d,0x1
   5f8ae:	cmovns rax,rbp
   5f8b2:	test   rax,rax
   5f8b5:	cmovne r12,rax
   5f8b9:	sub    rdx,r13
   5f8bc:	cmp    r12,rdx
   5f8bf:	jae    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   5f8c5:	test   r14,r14
   5f8c8:	je     5f8de <_obstack_memory_used@@Base+0x12c5e>
   5f8ca:	cmp    ebp,0x1
   5f8cd:	jg     5f9f8 <_obstack_memory_used@@Base+0x12d78>
   5f8d3:	movzx  eax,BYTE PTR [rbx]
   5f8d6:	add    r14,0x1
   5f8da:	mov    BYTE PTR [r14-0x1],al
   5f8de:	add    r13,r12
   5f8e1:	mov    r12,rbx
   5f8e4:	movzx  eax,BYTE PTR [r12+0x1]
   5f8ea:	lea    rbx,[r12+0x1]
   5f8ef:	mov    rbp,0xffffffffffffffff
   5f8f6:	test   al,al
   5f8f8:	jne    5f898 <_obstack_memory_used@@Base+0x12c18>
   5f8fa:	mov    r11,r15
   5f8fd:	test   r14,r14
   5f900:	je     5f90d <_obstack_memory_used@@Base+0x12c8d>
   5f902:	cmp    QWORD PTR [rsp],0x0
   5f907:	je     5f90d <_obstack_memory_used@@Base+0x12c8d>
   5f909:	mov    BYTE PTR [r14],0x0
   5f90d:	mov    eax,DWORD PTR [rsp+0x14]
   5f911:	mov    DWORD PTR [r11],eax
   5f914:	jmp    5f9aa <_obstack_memory_used@@Base+0x12d2a>
   5f919:	mov    r12,rbx
   5f91c:	test   ebp,ebp
   5f91e:	mov    eax,0x9
   5f923:	mov    BYTE PTR [rsp+0xa0],0x30
   5f92b:	cmovle ebp,eax
   5f92e:	test   r11d,r11d
   5f931:	jne    61111 <_obstack_memory_used@@Base+0x14491>
   5f937:	mov    rdi,QWORD PTR [rsp]
   5f93b:	mov    rax,rdi
   5f93e:	sub    rax,r13
   5f941:	cmp    rax,0x1
   5f945:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   5f947:	add    r13,0x1
   5f94b:	mov    r11d,0x30
   5f951:	sub    rdi,r13
   5f954:	mov    rbx,rdi
   5f957:	test   r14,r14
   5f95a:	je     61140 <_obstack_memory_used@@Base+0x144c0>
   5f960:	cmp    BYTE PTR [rsp+0x28],0x0
   5f965:	je     611ee <_obstack_memory_used@@Base+0x1456e>
   5f96b:	mov    DWORD PTR [rsp+0x28],r11d
   5f970:	call   9d10 <__ctype_toupper_loc@plt>
   5f975:	mov    r11d,DWORD PTR [rsp+0x28]
   5f97a:	mov    rax,QWORD PTR [rax]
   5f97d:	mov    eax,DWORD PTR [rax+0xc0]
   5f983:	mov    BYTE PTR [r14],al
   5f986:	add    r14,0x1
   5f98a:	cmp    r11d,0x2d
   5f98e:	jne    61223 <_obstack_memory_used@@Base+0x145a3>
   5f994:	cmp    QWORD PTR [rsp],r13
   5f998:	jne    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   5f99e:	xchg   ax,ax
   5f9a0:	mov    DWORD PTR [r15],0x22
   5f9a7:	xor    r13d,r13d
   5f9aa:	mov    rax,QWORD PTR [rsp+0x4a8]
   5f9b2:	sub    rax,QWORD PTR fs:0x28
   5f9bb:	jne    61423 <_obstack_memory_used@@Base+0x147a3>
   5f9c1:	add    rsp,0x4b8
   5f9c8:	mov    rax,r13
   5f9cb:	pop    rbx
   5f9cc:	pop    rbp
   5f9cd:	pop    r12
   5f9cf:	pop    r13
   5f9d1:	pop    r14
   5f9d3:	pop    r15
   5f9d5:	ret    
   5f9d6:	cs nop WORD PTR [rax+rax*1+0x0]
   5f9e0:	test   r15d,r15d
   5f9e3:	mov    eax,0xc
   5f9e8:	cmove  r15d,eax
   5f9ec:	jmp    5f881 <_obstack_memory_used@@Base+0x12c01>
   5f9f1:	nop    DWORD PTR [rax+0x0]
   5f9f8:	lea    rbp,[rax-0x1]
   5f9fc:	mov    rdi,r14
   5f9ff:	mov    esi,0x20
   5fa04:	mov    rdx,rbp
   5fa07:	add    r14,rbp
   5fa0a:	call   a1b0 <memset@plt>
   5fa0f:	jmp    5f8d3 <_obstack_memory_used@@Base+0x12c53>
   5fa14:	nop    DWORD PTR [rax+0x0]
   5fa18:	movzx  edi,BYTE PTR [rsp+0x13]
   5fa1d:	xor    r8d,r8d
   5fa20:	xor    r11d,r11d
   5fa23:	mov    BYTE PTR [rsp+0x28],dil
   5fa28:	movsx  r9d,BYTE PTR [rbx+0x1]
   5fa2d:	add    rbx,0x1
   5fa31:	lea    ecx,[r9-0x23]
   5fa35:	mov    esi,r9d
   5fa38:	mov    edi,r9d
   5fa3b:	cmp    cl,0x3c
   5fa3e:	ja     5fa6d <_obstack_memory_used@@Base+0x12ded>
   5fa40:	movabs r10,0x1000000000002500
   5fa4a:	mov    edx,0x1
   5fa4f:	shl    rdx,cl
   5fa52:	test   rdx,r10
   5fa55:	jne    5fc20 <_obstack_memory_used@@Base+0x12fa0>
   5fa5b:	cmp    cl,0x3b
   5fa5e:	je     60df4 <_obstack_memory_used@@Base+0x14174>
   5fa64:	and    edx,0x1
   5fa67:	jne    60dec <_obstack_memory_used@@Base+0x1416c>
   5fa6d:	sub    r9d,0x30
   5fa71:	cmp    r9d,0x9
   5fa75:	jbe    5fbe8 <_obstack_memory_used@@Base+0x12f68>
   5fa7b:	cmp    sil,0x45
   5fa7f:	je     5faa8 <_obstack_memory_used@@Base+0x12e28>
   5fa81:	cmp    sil,0x4f
   5fa85:	je     5faa8 <_obstack_memory_used@@Base+0x12e28>
   5fa87:	cmp    sil,0x7a
   5fa8b:	ja     5faf3 <_obstack_memory_used@@Base+0x12e73>
   5fa8d:	lea    rcx,[rip+0xdddc]        # 6d870 <_obstack_memory_used@@Base+0x20bf0>
   5fa94:	movzx  edx,sil
   5fa98:	movsxd rdx,DWORD PTR [rcx+rdx*4]
   5fa9c:	add    rdx,rcx
   5fa9f:	notrack jmp rdx
   5faa2:	nop    WORD PTR [rax+rax*1+0x0]
   5faa8:	movzx  esi,BYTE PTR [rbx+0x1]
   5faac:	lea    r12,[rbx+0x1]
   5fab0:	cmp    sil,0x7a
   5fab4:	ja     5faf0 <_obstack_memory_used@@Base+0x12e70>
   5fab6:	lea    rcx,[rip+0xdf9f]        # 6da5c <_obstack_memory_used@@Base+0x20ddc>
   5fabd:	movzx  edx,sil
   5fac1:	movsxd rdx,DWORD PTR [rcx+rdx*4]
   5fac5:	add    rdx,rcx
   5fac8:	notrack jmp rdx
   5facb:	mov    r12,rbx
   5face:	xor    edi,edi
   5fad0:	movzx  eax,BYTE PTR [rsp+0x28]
   5fad5:	test   r8b,r8b
   5fad8:	cmovne eax,r8d
   5fadc:	mov    BYTE PTR [rsp+0x28],al
   5fae0:	cmp    edi,0x45
   5fae3:	jne    5ff15 <_obstack_memory_used@@Base+0x13295>
   5fae9:	nop    DWORD PTR [rax+0x0]
   5faf0:	mov    rbx,r12
   5faf3:	mov    r12,rbx
   5faf6:	cs nop WORD PTR [rax+rax*1+0x0]
   5fb00:	lea    rax,[r12-0x1]
   5fb05:	lea    edx,[r12+0x1]
   5fb0a:	mov    r8,rax
   5fb0d:	mov    ecx,edx
   5fb0f:	sub    ecx,eax
   5fb11:	cmp    BYTE PTR [r8],0x25
   5fb15:	lea    rax,[rax-0x1]
   5fb19:	jne    5fb0a <_obstack_memory_used@@Base+0x12e8a>
   5fb1b:	movsxd rcx,ecx
   5fb1e:	test   ebp,ebp
   5fb20:	js     60d10 <_obstack_memory_used@@Base+0x14090>
   5fb26:	cmp    r11d,0x2d
   5fb2a:	je     60d10 <_obstack_memory_used@@Base+0x14090>
   5fb30:	movsxd rdx,ebp
   5fb33:	mov    rbp,rcx
   5fb36:	cmp    rdx,rcx
   5fb39:	cmovae rbp,rdx
   5fb3d:	mov    rax,QWORD PTR [rsp]
   5fb41:	sub    rax,r13
   5fb44:	cmp    rax,rbp
   5fb47:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   5fb4d:	test   r14,r14
   5fb50:	je     5fef7 <_obstack_memory_used@@Base+0x13277>
   5fb56:	cmp    rdx,rcx
   5fb59:	jbe    5fb9a <_obstack_memory_used@@Base+0x12f1a>
   5fb5b:	sub    rdx,rcx
   5fb5e:	mov    QWORD PTR [rsp+0x40],rcx
   5fb63:	mov    QWORD PTR [rsp+0x30],r8
   5fb68:	lea    rbx,[r14+rdx*1]
   5fb6c:	cmp    r11d,0x30
   5fb70:	je     60f22 <_obstack_memory_used@@Base+0x142a2>
   5fb76:	cmp    r11d,0x2b
   5fb7a:	je     60f22 <_obstack_memory_used@@Base+0x142a2>
   5fb80:	mov    rdi,r14
   5fb83:	mov    esi,0x20
   5fb88:	mov    r14,rbx
   5fb8b:	call   a1b0 <memset@plt>
   5fb90:	mov    rcx,QWORD PTR [rsp+0x40]
   5fb95:	mov    r8,QWORD PTR [rsp+0x30]
   5fb9a:	cmp    BYTE PTR [rsp+0x28],0x0
   5fb9f:	je     60dcf <_obstack_memory_used@@Base+0x1414f>
   5fba5:	mov    QWORD PTR [rsp+0x30],r8
   5fbaa:	lea    rbx,[rcx-0x1]
   5fbae:	mov    QWORD PTR [rsp+0x28],rcx
   5fbb3:	call   9d10 <__ctype_toupper_loc@plt>
   5fbb8:	mov    r8,QWORD PTR [rsp+0x30]
   5fbbd:	mov    rcx,QWORD PTR [rsp+0x28]
   5fbc2:	nop    WORD PTR [rax+rax*1+0x0]
   5fbc8:	movzx  esi,BYTE PTR [r8+rbx*1]
   5fbcd:	mov    rdx,QWORD PTR [rax]
   5fbd0:	mov    edx,DWORD PTR [rdx+rsi*4]
   5fbd3:	mov    BYTE PTR [r14+rbx*1],dl
   5fbd7:	sub    rbx,0x1
   5fbdb:	jae    5fbc8 <_obstack_memory_used@@Base+0x12f48>
   5fbdd:	add    r14,rcx
   5fbe0:	jmp    5fef7 <_obstack_memory_used@@Base+0x13277>
   5fbe5:	nop    DWORD PTR [rax]
   5fbe8:	xor    ebp,ebp
   5fbea:	jmp    5fc10 <_obstack_memory_used@@Base+0x12f90>
   5fbec:	nop    DWORD PTR [rax+0x0]
   5fbf0:	movsx  edx,BYTE PTR [rbx]
   5fbf3:	sub    edx,0x30
   5fbf6:	add    ebp,edx
   5fbf8:	jo     5fc15 <_obstack_memory_used@@Base+0x12f95>
   5fbfa:	movsx  edi,BYTE PTR [rbx+0x1]
   5fbfe:	add    rbx,0x1
   5fc02:	lea    edx,[rdi-0x30]
   5fc05:	mov    esi,edi
   5fc07:	cmp    edx,0x9
   5fc0a:	ja     5fa7b <_obstack_memory_used@@Base+0x12dfb>
   5fc10:	imul   ebp,ebp,0xa
   5fc13:	jno    5fbf0 <_obstack_memory_used@@Base+0x12f70>
   5fc15:	mov    ebp,0x7fffffff
   5fc1a:	jmp    5fbfa <_obstack_memory_used@@Base+0x12f7a>
   5fc1c:	nop    DWORD PTR [rax+0x0]
   5fc20:	mov    r11d,r9d
   5fc23:	jmp    5fa28 <_obstack_memory_used@@Base+0x12da8>
   5fc28:	xor    edi,edi
   5fc2a:	mov    rdx,QWORD PTR [rsp+0x8]
   5fc2f:	mov    ecx,DWORD PTR [rdx+0x14]
   5fc32:	mov    r10d,DWORD PTR [rdx+0x1c]
   5fc36:	mov    r12d,DWORD PTR [rdx+0x18]
   5fc3a:	mov    eax,ecx
   5fc3c:	mov    edx,r10d
   5fc3f:	sar    eax,0x1f
   5fc42:	sub    edx,r12d
   5fc45:	and    eax,0x190
   5fc4a:	add    edx,0x17e
   5fc50:	lea    eax,[rcx+rax*1-0x64]
   5fc54:	mov    r8d,edx
   5fc57:	mov    DWORD PTR [rsp+0x30],eax
   5fc5b:	movsxd rax,edx
   5fc5e:	sar    r8d,0x1f
   5fc62:	imul   rax,rax,0xffffffff92492493
   5fc69:	shr    rax,0x20
   5fc6d:	add    eax,edx
   5fc6f:	sar    eax,0x2
   5fc72:	sub    eax,r8d
   5fc75:	lea    r8d,[rax*8+0x0]
   5fc7d:	sub    r8d,eax
   5fc80:	mov    eax,r10d
   5fc83:	sub    eax,edx
   5fc85:	lea    r9d,[rax+r8*1+0x3]
   5fc8a:	test   r9d,r9d
   5fc8d:	js     6107e <_obstack_memory_used@@Base+0x143fe>
   5fc93:	mov    eax,DWORD PTR [rsp+0x30]
   5fc97:	mov    edx,0x16d
   5fc9c:	test   al,0x3
   5fc9e:	jne    5fcd3 <_obstack_memory_used@@Base+0x13053>
   5fca0:	imul   eax,eax,0xc28f5c29
   5fca6:	mov    edx,0x16e
   5fcab:	add    eax,0x51eb850
   5fcb0:	mov    r8d,eax
   5fcb3:	ror    r8d,0x2
   5fcb7:	cmp    r8d,0x28f5c28
   5fcbe:	ja     5fcd3 <_obstack_memory_used@@Base+0x13053>
   5fcc0:	ror    eax,0x4
   5fcc3:	xor    edx,edx
   5fcc5:	cmp    eax,0xa3d70b
   5fcca:	setb   dl
   5fccd:	add    edx,0x16d
   5fcd3:	sub    r10d,edx
   5fcd6:	mov    edx,r10d
   5fcd9:	sub    edx,r12d
   5fcdc:	add    edx,0x17e
   5fce2:	movsxd rax,edx
   5fce5:	mov    r8d,edx
   5fce8:	imul   rax,rax,0xffffffff92492493
   5fcef:	sar    r8d,0x1f
   5fcf3:	shr    rax,0x20
   5fcf7:	add    eax,edx
   5fcf9:	sar    eax,0x2
   5fcfc:	sub    eax,r8d
   5fcff:	lea    r8d,[rax*8+0x0]
   5fd07:	sub    r8d,eax
   5fd0a:	mov    eax,r10d
   5fd0d:	sub    eax,edx
   5fd0f:	lea    eax,[rax+r8*1+0x3]
   5fd14:	test   eax,eax
   5fd16:	cmovns r9d,eax
   5fd1a:	sar    eax,0x1f
   5fd1d:	mov    r10d,eax
   5fd20:	add    r10d,0x1
   5fd24:	cmp    sil,0x47
   5fd28:	je     61178 <_obstack_memory_used@@Base+0x144f8>
   5fd2e:	cmp    sil,0x67
   5fd32:	jne    611c2 <_obstack_memory_used@@Base+0x14542>
   5fd38:	movsxd rdx,ecx
   5fd3b:	mov    eax,ecx
   5fd3d:	imul   rdx,rdx,0x51eb851f
   5fd44:	sar    eax,0x1f
   5fd47:	sar    rdx,0x25
   5fd4b:	sub    edx,eax
   5fd4d:	mov    eax,ecx
   5fd4f:	imul   edx,edx,0x64
   5fd52:	sub    eax,edx
   5fd54:	add    eax,r10d
   5fd57:	movsxd rdx,eax
   5fd5a:	mov    r8d,eax
   5fd5d:	imul   rdx,rdx,0x51eb851f
   5fd64:	sar    r8d,0x1f
   5fd68:	sar    rdx,0x25
   5fd6c:	sub    edx,r8d
   5fd6f:	imul   r8d,edx,0x64
   5fd73:	sub    eax,r8d
   5fd76:	mov    edx,eax
   5fd78:	js     6133f <_obstack_memory_used@@Base+0x146bf>
   5fd7e:	test   r11d,r11d
   5fd81:	je     6135a <_obstack_memory_used@@Base+0x146da>
   5fd87:	mov    r12,rbx
   5fd8a:	cmp    r11d,0x2b
   5fd8e:	je     6136c <_obstack_memory_used@@Base+0x146ec>
   5fd94:	mov    BYTE PTR [rsp+0x40],0x0
   5fd99:	mov    eax,0x1
   5fd9e:	mov    r9d,0x2
   5fda4:	mov    BYTE PTR [rsp+0x30],0x0
   5fda9:	xor    ecx,ecx
   5fdab:	nop    DWORD PTR [rax+rax*1+0x0]
   5fdb0:	cmp    edi,0x4f
   5fdb3:	jne    607c8 <_obstack_memory_used@@Base+0x13b48>
   5fdb9:	test   al,al
   5fdbb:	je     607c8 <_obstack_memory_used@@Base+0x13b48>
   5fdc1:	mov    r8d,0x2520
   5fdc7:	xor    ebx,ebx
   5fdc9:	mov    WORD PTR [rsp+0x9b],r8w
   5fdd2:	mov    BYTE PTR [rsp+0x9d],dil
   5fdda:	lea    rax,[rsp+0x9e]
   5fde2:	mov    BYTE PTR [rax],sil
   5fde5:	mov    rcx,QWORD PTR [rsp+0x8]
   5fdea:	lea    rdx,[rsp+0x9b]
   5fdf2:	lea    rdi,[rsp+0xa0]
   5fdfa:	mov    BYTE PTR [rax+0x1],0x0
   5fdfe:	mov    esi,0x400
   5fe03:	mov    DWORD PTR [rsp+0x30],r11d
   5fe08:	call   a600 <strftime@plt>
   5fe0d:	mov    rcx,rax
   5fe10:	test   rax,rax
   5fe13:	je     5f8e4 <_obstack_memory_used@@Base+0x12c64>
   5fe19:	mov    r11d,DWORD PTR [rsp+0x30]
   5fe1e:	lea    r8,[rax-0x1]
   5fe22:	cmp    r11d,0x2d
   5fe26:	je     60d00 <_obstack_memory_used@@Base+0x14080>
   5fe2c:	test   ebp,ebp
   5fe2e:	js     60d00 <_obstack_memory_used@@Base+0x14080>
   5fe34:	movsxd rdx,ebp
   5fe37:	cmp    r8,rdx
   5fe3a:	mov    rbp,rdx
   5fe3d:	cmovae rbp,r8
   5fe41:	mov    rax,QWORD PTR [rsp]
   5fe45:	sub    rax,r13
   5fe48:	cmp    rax,rbp
   5fe4b:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   5fe51:	test   r14,r14
   5fe54:	je     5fef7 <_obstack_memory_used@@Base+0x13277>
   5fe5a:	cmp    r8,rdx
   5fe5d:	jae    5fea5 <_obstack_memory_used@@Base+0x13225>
   5fe5f:	sub    rdx,r8
   5fe62:	mov    QWORD PTR [rsp+0x48],r8
   5fe67:	lea    rax,[r14+rdx*1]
   5fe6b:	mov    QWORD PTR [rsp+0x40],rcx
   5fe70:	mov    QWORD PTR [rsp+0x30],rax
   5fe75:	cmp    r11d,0x30
   5fe79:	je     60e77 <_obstack_memory_used@@Base+0x141f7>
   5fe7f:	cmp    r11d,0x2b
   5fe83:	je     60e77 <_obstack_memory_used@@Base+0x141f7>
   5fe89:	mov    rdi,r14
   5fe8c:	mov    esi,0x20
   5fe91:	call   a1b0 <memset@plt>
   5fe96:	mov    r14,QWORD PTR [rsp+0x30]
   5fe9b:	mov    r8,QWORD PTR [rsp+0x48]
   5fea0:	mov    rcx,QWORD PTR [rsp+0x40]
   5fea5:	test   bl,bl
   5fea7:	jne    60e20 <_obstack_memory_used@@Base+0x141a0>
   5fead:	cmp    BYTE PTR [rsp+0x28],0x0
   5feb2:	je     60dfe <_obstack_memory_used@@Base+0x1417e>
   5feb8:	lea    rbx,[rcx-0x2]
   5febc:	test   r8,r8
   5febf:	je     5fef4 <_obstack_memory_used@@Base+0x13274>
   5fec1:	mov    QWORD PTR [rsp+0x28],r8
   5fec6:	call   9d10 <__ctype_toupper_loc@plt>
   5fecb:	mov    r8,QWORD PTR [rsp+0x28]
   5fed0:	lea    rsi,[rsp+0xa1]
   5fed8:	nop    DWORD PTR [rax+rax*1+0x0]
   5fee0:	movzx  ecx,BYTE PTR [rsi+rbx*1]
   5fee4:	mov    rdx,QWORD PTR [rax]
   5fee7:	mov    edx,DWORD PTR [rdx+rcx*4]
   5feea:	mov    BYTE PTR [r14+rbx*1],dl
   5feee:	sub    rbx,0x1
   5fef2:	jae    5fee0 <_obstack_memory_used@@Base+0x13260>
   5fef4:	add    r14,r8
   5fef7:	add    r13,rbp
   5fefa:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   5feff:	mov    rbx,r12
   5ff02:	cmp    edi,0x45
   5ff05:	jne    5fc2a <_obstack_memory_used@@Base+0x12faa>
   5ff0b:	jmp    5faf3 <_obstack_memory_used@@Base+0x12e73>
   5ff10:	mov    r12,rbx
   5ff13:	xor    edi,edi
   5ff15:	xor    ebx,ebx
   5ff17:	mov    eax,0x2520
   5ff1c:	mov    WORD PTR [rsp+0x9b],ax
   5ff24:	test   edi,edi
   5ff26:	jne    5fdd2 <_obstack_memory_used@@Base+0x13152>
   5ff2c:	lea    rax,[rsp+0x9d]
   5ff34:	jmp    5fde2 <_obstack_memory_used@@Base+0x13162>
   5ff39:	mov    rbx,r12
   5ff3c:	movzx  eax,BYTE PTR [rbx-0x1]
   5ff40:	lea    r8,[rbx-0x1]
   5ff44:	mov    r12,r8
   5ff47:	cmp    al,0x25
   5ff49:	jne    5fb00 <_obstack_memory_used@@Base+0x12e80>
   5ff4f:	mov    ecx,0x1
   5ff54:	jmp    5fb1e <_obstack_memory_used@@Base+0x12e9e>
   5ff59:	mov    r12,rbx
   5ff5c:	mov    rax,QWORD PTR [rsp]
   5ff60:	sub    rax,r13
   5ff63:	cmp    r11d,0x2d
   5ff67:	je     60fb6 <_obstack_memory_used@@Base+0x14336>
   5ff6d:	test   ebp,ebp
   5ff6f:	js     60fb6 <_obstack_memory_used@@Base+0x14336>
   5ff75:	movsxd rdx,ebp
   5ff78:	mov    ecx,0x1
   5ff7d:	test   rdx,rdx
   5ff80:	cmovne rcx,rdx
   5ff84:	mov    rbx,rcx
   5ff87:	cmp    rcx,rax
   5ff8a:	jae    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   5ff90:	test   r14,r14
   5ff93:	je     5ffce <_obstack_memory_used@@Base+0x1334e>
   5ff95:	cmp    ebp,0x1
   5ff98:	jle    5ffc6 <_obstack_memory_used@@Base+0x13346>
   5ff9a:	sub    rdx,0x1
   5ff9e:	lea    rbp,[r14+rdx*1]
   5ffa2:	cmp    r11d,0x30
   5ffa6:	je     612f5 <_obstack_memory_used@@Base+0x14675>
   5ffac:	cmp    r11d,0x2b
   5ffb0:	je     612f5 <_obstack_memory_used@@Base+0x14675>
   5ffb6:	mov    rdi,r14
   5ffb9:	mov    esi,0x20
   5ffbe:	mov    r14,rbp
   5ffc1:	call   a1b0 <memset@plt>
   5ffc6:	mov    BYTE PTR [r14],0x9
   5ffca:	add    r14,0x1
   5ffce:	add    r13,rbx
   5ffd1:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   5ffd6:	mov    r12,rbx
   5ffd9:	xor    edi,edi
   5ffdb:	mov    rax,QWORD PTR [rsp+0x8]
   5ffe0:	mov    esi,0x6b
   5ffe5:	mov    edx,DWORD PTR [rax+0x8]
   5ffe8:	test   r11d,r11d
   5ffeb:	mov    eax,0x5f
   5fff0:	mov    r9d,0x2
   5fff6:	cmove  r11d,eax
   5fffa:	mov    eax,edx
   5fffc:	mov    BYTE PTR [rsp+0x40],0x0
   60001:	xor    ecx,ecx
   60003:	shr    eax,0x1f
   60006:	mov    DWORD PTR [rsp+0x30],eax
   6000a:	mov    eax,edx
   6000c:	not    eax
   6000e:	shr    eax,0x1f
   60011:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   60016:	mov    r12,rbx
   60019:	xor    edi,edi
   6001b:	mov    rax,QWORD PTR [rsp+0x8]
   60020:	mov    BYTE PTR [rsp+0x40],0x0
   60025:	mov    esi,0x6a
   6002a:	mov    r9d,0x3
   60030:	mov    eax,DWORD PTR [rax+0x1c]
   60033:	cmp    eax,0xffffffff
   60036:	lea    edx,[rax+0x1]
   60039:	setl   BYTE PTR [rsp+0x30]
   6003e:	setge  al
   60041:	xor    ecx,ecx
   60043:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   60048:	mov    r12,rbx
   6004b:	xor    edi,edi
   6004d:	mov    rax,QWORD PTR [rsp+0x8]
   60052:	mov    esi,0x65
   60057:	mov    edx,DWORD PTR [rax+0xc]
   6005a:	jmp    5ffe8 <_obstack_memory_used@@Base+0x13368>
   6005c:	mov    r12,rbx
   6005f:	xor    edi,edi
   60061:	mov    rax,QWORD PTR [rsp+0x8]
   60066:	mov    esi,0x64
   6006b:	mov    r9d,0x2
   60071:	mov    edx,DWORD PTR [rax+0xc]
   60074:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   60076:	mov    r12,rbx
   60079:	xor    edi,edi
   6007b:	movzx  eax,BYTE PTR [rsp+0x28]
   60080:	test   r8b,r8b
   60083:	mov    esi,0x42
   60088:	cmovne eax,r8d
   6008c:	xor    ebx,ebx
   6008e:	mov    BYTE PTR [rsp+0x28],al
   60092:	jmp    5ff17 <_obstack_memory_used@@Base+0x13297>
   60097:	mov    r12,rbx
   6009a:	movzx  eax,BYTE PTR [rsp+0x28]
   6009f:	test   r8b,r8b
   600a2:	mov    esi,0x41
   600a7:	cmovne eax,r8d
   600ab:	mov    BYTE PTR [rsp+0x28],al
   600af:	mov    ecx,0x2520
   600b4:	xor    ebx,ebx
   600b6:	lea    rax,[rsp+0x9d]
   600be:	mov    WORD PTR [rsp+0x9b],cx
   600c6:	jmp    5fde2 <_obstack_memory_used@@Base+0x13162>
   600cb:	xor    edi,edi
   600cd:	movzx  eax,BYTE PTR [rbx+0x1]
   600d1:	lea    r12,[rbx+0x1]
   600d5:	mov    r9d,0x1
   600db:	cmp    al,0x3a
   600dd:	je     60ce8 <_obstack_memory_used@@Base+0x14068>
   600e3:	mov    esi,0x3a
   600e8:	cmp    al,0x7a
   600ea:	jne    5faf3 <_obstack_memory_used@@Base+0x12e73>
   600f0:	mov    rax,QWORD PTR [rsp+0x8]
   600f5:	mov    r10d,DWORD PTR [rax+0x20]
   600f9:	test   r10d,r10d
   600fc:	js     5f8e4 <_obstack_memory_used@@Base+0x12c64>
   60102:	mov    rdx,QWORD PTR [rax+0x28]
   60106:	mov    BYTE PTR [rsp+0x30],0x1
   6010b:	test   edx,edx
   6010d:	js     60123 <_obstack_memory_used@@Base+0x134a3>
   6010f:	mov    BYTE PTR [rsp+0x30],0x0
   60114:	jne    60123 <_obstack_memory_used@@Base+0x134a3>
   60116:	mov    rax,QWORD PTR [rsp+0x18]
   6011b:	cmp    BYTE PTR [rax],0x2d
   6011e:	sete   BYTE PTR [rsp+0x30]
   60123:	movsxd rax,edx
   60126:	mov    ecx,edx
   60128:	imul   r8,rax,0xffffffff91a2b3c5
   6012f:	sar    ecx,0x1f
   60132:	imul   rax,rax,0xffffffff88888889
   60139:	shr    r8,0x20
   6013d:	shr    rax,0x20
   60141:	add    r8d,edx
   60144:	add    eax,edx
   60146:	sar    r8d,0xb
   6014a:	sar    eax,0x5
   6014d:	mov    r10d,r8d
   60150:	sub    eax,ecx
   60152:	sub    r10d,ecx
   60155:	movsxd rcx,eax
   60158:	mov    r8d,eax
   6015b:	imul   rcx,rcx,0xffffffff88888889
   60162:	sar    r8d,0x1f
   60166:	shr    rcx,0x20
   6016a:	add    ecx,eax
   6016c:	sar    ecx,0x5
   6016f:	sub    ecx,r8d
   60172:	imul   r8d,ecx,0x3c
   60176:	mov    ecx,eax
   60178:	imul   eax,eax,0x3c
   6017b:	sub    ecx,r8d
   6017e:	mov    r8d,edx
   60181:	sub    r8d,eax
   60184:	cmp    r9,0x2
   60188:	je     611f7 <_obstack_memory_used@@Base+0x14577>
   6018e:	ja     60f41 <_obstack_memory_used@@Base+0x142c1>
   60194:	test   r9,r9
   60197:	je     612c0 <_obstack_memory_used@@Base+0x14640>
   6019d:	imul   edx,r10d,0x64
   601a1:	movzx  eax,BYTE PTR [rsp+0x30]
   601a6:	mov    BYTE PTR [rsp+0x40],0x1
   601ab:	mov    r9d,0x6
   601b1:	xor    eax,0x1
   601b4:	add    edx,ecx
   601b6:	mov    ecx,0x4
   601bb:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   601c0:	mov    r12,rbx
   601c3:	movzx  eax,BYTE PTR [rsp+0x28]
   601c8:	test   r8b,r8b
   601cb:	mov    esi,0x61
   601d0:	cmovne eax,r8d
   601d4:	mov    BYTE PTR [rsp+0x28],al
   601d8:	jmp    600af <_obstack_memory_used@@Base+0x1342f>
   601dd:	mov    r12,rbx
   601e0:	xor    edi,edi
   601e2:	xor    ebx,ebx
   601e4:	movzx  ecx,BYTE PTR [rsp+0x28]
   601e9:	test   r8b,r8b
   601ec:	mov    eax,0x0
   601f1:	mov    esi,0x70
   601f6:	cmovne ebx,r8d
   601fa:	cmovne ecx,eax
   601fd:	mov    BYTE PTR [rsp+0x28],cl
   60201:	jmp    5ff17 <_obstack_memory_used@@Base+0x13297>
   60206:	mov    r12,rbx
   60209:	mov    rax,QWORD PTR [rsp]
   6020d:	sub    rax,r13
   60210:	cmp    r11d,0x2d
   60214:	je     60f99 <_obstack_memory_used@@Base+0x14319>
   6021a:	test   ebp,ebp
   6021c:	js     60f99 <_obstack_memory_used@@Base+0x14319>
   60222:	movsxd rdx,ebp
   60225:	mov    ecx,0x1
   6022a:	test   rdx,rdx
   6022d:	cmovne rcx,rdx
   60231:	mov    rbx,rcx
   60234:	cmp    rcx,rax
   60237:	jae    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   6023d:	test   r14,r14
   60240:	je     5ffce <_obstack_memory_used@@Base+0x1334e>
   60246:	cmp    ebp,0x1
   60249:	jle    60277 <_obstack_memory_used@@Base+0x135f7>
   6024b:	sub    rdx,0x1
   6024f:	lea    rbp,[r14+rdx*1]
   60253:	cmp    r11d,0x30
   60257:	je     612e0 <_obstack_memory_used@@Base+0x14660>
   6025d:	cmp    r11d,0x2b
   60261:	je     612e0 <_obstack_memory_used@@Base+0x14660>
   60267:	mov    rdi,r14
   6026a:	mov    esi,0x20
   6026f:	mov    r14,rbp
   60272:	call   a1b0 <memset@plt>
   60277:	mov    BYTE PTR [r14],0xa
   6027b:	add    r14,0x1
   6027f:	jmp    5ffce <_obstack_memory_used@@Base+0x1334e>
   60284:	mov    r12,rbx
   60287:	xor    edi,edi
   60289:	mov    rax,QWORD PTR [rsp+0x8]
   6028e:	mov    BYTE PTR [rsp+0x40],0x0
   60293:	mov    esi,0x6d
   60298:	mov    r9d,0x2
   6029e:	mov    eax,DWORD PTR [rax+0x10]
   602a1:	cmp    eax,0xffffffff
   602a4:	lea    edx,[rax+0x1]
   602a7:	setl   BYTE PTR [rsp+0x30]
   602ac:	setge  al
   602af:	xor    ecx,ecx
   602b1:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   602b6:	mov    r12,rbx
   602b9:	xor    edi,edi
   602bb:	mov    edx,DWORD PTR [rsp+0x24]
   602bf:	mov    esi,0x6c
   602c4:	jmp    5ffe8 <_obstack_memory_used@@Base+0x13368>
   602c9:	mov    r12,rbx
   602cc:	mov    rax,QWORD PTR [rsp+0x8]
   602d1:	mov    BYTE PTR [rsp+0x40],0x0
   602d6:	mov    r9d,0x1
   602dc:	xor    ecx,ecx
   602de:	mov    BYTE PTR [rsp+0x30],0x0
   602e3:	mov    eax,DWORD PTR [rax+0x10]
   602e6:	lea    edx,[rax+rax*4]
   602e9:	lea    edx,[rax+rdx*2]
   602ec:	sar    edx,0x5
   602ef:	add    edx,0x1
   602f2:	nop    WORD PTR [rax+rax*1+0x0]
   602f8:	lea    rax,[rsp+0xb7]
   60300:	mov    r10d,0xcccccccd
   60306:	mov    QWORD PTR [rsp+0x48],rax
   6030b:	mov    rbx,rax
   6030e:	xchg   ax,ax
   60310:	mov    rdi,rbx
   60313:	test   cl,0x1
   60316:	je     60320 <_obstack_memory_used@@Base+0x136a0>
   60318:	mov    BYTE PTR [rbx-0x1],0x3a
   6031c:	sub    rdi,0x1
   60320:	mov    eax,edx
   60322:	mov    esi,edx
   60324:	sar    ecx,1
   60326:	lea    rbx,[rdi-0x1]
   6032a:	imul   rax,r10
   6032e:	shr    rax,0x23
   60332:	lea    r8d,[rax+rax*4]
   60336:	add    r8d,r8d
   60339:	sub    esi,r8d
   6033c:	add    esi,0x30
   6033f:	mov    BYTE PTR [rdi-0x1],sil
   60343:	cmp    edx,0x9
   60346:	ja     60350 <_obstack_memory_used@@Base+0x136d0>
   60348:	test   ecx,ecx
   6034a:	je     60438 <_obstack_memory_used@@Base+0x137b8>
   60350:	mov    edx,eax
   60352:	jmp    60310 <_obstack_memory_used@@Base+0x13690>
   60354:	mov    r12,rbx
   60357:	mov    rax,QWORD PTR [rsp+0x8]
   6035c:	lea    rdi,[rsp+0x60]
   60361:	mov    DWORD PTR [rsp+0x40],r11d
   60366:	movdqu xmm4,XMMWORD PTR [rax+0x20]
   6036b:	movdqu xmm0,XMMWORD PTR [rax]
   6036f:	movdqu xmm2,XMMWORD PTR [rax+0x10]
   60374:	mov    rax,QWORD PTR [rax+0x30]
   60378:	movaps XMMWORD PTR [rsp+0x60],xmm0
   6037d:	movaps XMMWORD PTR [rsp+0x70],xmm2
   60382:	mov    QWORD PTR [rsp+0x90],rax
   6038a:	mov    DWORD PTR [rsp+0x7c],0xffffffff
   60392:	movaps XMMWORD PTR [rsp+0x30],xmm4
   60397:	movaps XMMWORD PTR [rsp+0x80],xmm4
   6039f:	call   a5e0 <timegm@plt>
   603a4:	mov    r11d,DWORD PTR [rsp+0x7c]
   603a9:	mov    rcx,rax
   603ac:	test   r11d,r11d
   603af:	mov    r11d,DWORD PTR [rsp+0x40]
   603b4:	js     61439 <_obstack_memory_used@@Base+0x147b9>
   603ba:	shr    rax,0x3f
   603be:	mov    esi,0x30
   603c3:	mov    BYTE PTR [rsp+0x30],al
   603c7:	mov    rdi,rax
   603ca:	lea    rax,[rsp+0xb7]
   603d2:	mov    QWORD PTR [rsp+0x48],rax
   603d7:	mov    rbx,rax
   603da:	nop    WORD PTR [rax+rax*1+0x0]
   603e0:	movabs rax,0x6666666666666667
   603ea:	imul   rcx
   603ed:	mov    rax,rcx
   603f0:	sar    rax,0x3f
   603f4:	sar    rdx,0x2
   603f8:	sub    rdx,rax
   603fb:	lea    r8,[rdx+rdx*4]
   603ff:	mov    rax,rdx
   60402:	add    r8,r8
   60405:	sub    rcx,r8
   60408:	mov    rdx,rcx
   6040b:	mov    rcx,rax
   6040e:	mov    eax,esi
   60410:	sub    eax,edx
   60412:	add    edx,0x30
   60415:	test   dil,dil
   60418:	cmovne edx,eax
   6041b:	sub    rbx,0x1
   6041f:	mov    BYTE PTR [rbx],dl
   60421:	test   rcx,rcx
   60424:	jne    603e0 <_obstack_memory_used@@Base+0x13760>
   60426:	mov    BYTE PTR [rsp+0x40],0x0
   6042b:	mov    r9d,0x1
   60431:	nop    DWORD PTR [rax+0x0]
   60438:	test   r11d,r11d
   6043b:	je     60d80 <_obstack_memory_used@@Base+0x14100>
   60441:	cmp    r11d,0x2d
   60445:	setne  al
   60448:	test   ebp,ebp
   6044a:	cmovs  ebp,r9d
   6044e:	mov    r9,QWORD PTR [rsp+0x48]
   60453:	sub    r9,rbx
   60456:	cmp    BYTE PTR [rsp+0x30],0x0
   6045b:	jne    60d20 <_obstack_memory_used@@Base+0x140a0>
   60461:	cmp    BYTE PTR [rsp+0x40],0x0
   60466:	jne    60e6d <_obstack_memory_used@@Base+0x141ed>
   6046c:	movsxd rcx,r9d
   6046f:	cmp    ebp,r9d
   60472:	jle    60d94 <_obstack_memory_used@@Base+0x14114>
   60478:	test   al,al
   6047a:	je     60d94 <_obstack_memory_used@@Base+0x14114>
   60480:	movsxd rdx,ebp
   60483:	mov    r8,rcx
   60486:	cmp    rdx,rcx
   60489:	cmovae r8,rdx
   6048d:	mov    rax,QWORD PTR [rsp]
   60491:	sub    rax,r13
   60494:	cmp    rax,r8
   60497:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   6049d:	test   r14,r14
   604a0:	je     60537 <_obstack_memory_used@@Base+0x138b7>
   604a6:	cmp    rdx,rcx
   604a9:	jbe    604ea <_obstack_memory_used@@Base+0x1386a>
   604ab:	sub    rdx,rcx
   604ae:	mov    QWORD PTR [rsp+0x40],r8
   604b3:	mov    QWORD PTR [rsp+0x30],rcx
   604b8:	lea    rbp,[r14+rdx*1]
   604bc:	cmp    r11d,0x30
   604c0:	je     60e98 <_obstack_memory_used@@Base+0x14218>
   604c6:	cmp    r11d,0x2b
   604ca:	je     60e98 <_obstack_memory_used@@Base+0x14218>
   604d0:	mov    rdi,r14
   604d3:	mov    esi,0x20
   604d8:	mov    r14,rbp
   604db:	call   a1b0 <memset@plt>
   604e0:	mov    r8,QWORD PTR [rsp+0x40]
   604e5:	mov    rcx,QWORD PTR [rsp+0x30]
   604ea:	cmp    BYTE PTR [rsp+0x28],0x0
   604ef:	je     60da8 <_obstack_memory_used@@Base+0x14128>
   604f5:	lea    rbp,[rcx-0x1]
   604f9:	test   rcx,rcx
   604fc:	je     60534 <_obstack_memory_used@@Base+0x138b4>
   604fe:	mov    QWORD PTR [rsp+0x30],r8
   60503:	mov    QWORD PTR [rsp+0x28],rcx
   60508:	call   9d10 <__ctype_toupper_loc@plt>
   6050d:	mov    rcx,QWORD PTR [rsp+0x28]
   60512:	mov    r8,QWORD PTR [rsp+0x30]
   60517:	nop    WORD PTR [rax+rax*1+0x0]
   60520:	movzx  esi,BYTE PTR [rbx+rbp*1]
   60524:	mov    rdx,QWORD PTR [rax]
   60527:	mov    edx,DWORD PTR [rdx+rsi*4]
   6052a:	mov    BYTE PTR [r14+rbp*1],dl
   6052e:	sub    rbp,0x1
   60532:	jae    60520 <_obstack_memory_used@@Base+0x138a0>
   60534:	add    r14,rcx
   60537:	add    r13,r8
   6053a:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   6053f:	mov    r12,rbx
   60542:	movzx  edi,BYTE PTR [rsp+0x28]
   60547:	test   r8b,r8b
   6054a:	mov    eax,0x0
   6054f:	mov    DWORD PTR [rsp+0x40],r11d
   60554:	mov    BYTE PTR [rsp+0x30],r8b
   60559:	cmovne edi,eax
   6055c:	mov    BYTE PTR [rsp+0x28],dil
   60561:	mov    rdi,QWORD PTR [rsp+0x18]
   60566:	call   a060 <strlen@plt>
   6056b:	test   ebp,ebp
   6056d:	movzx  r8d,BYTE PTR [rsp+0x30]
   60573:	mov    r11d,DWORD PTR [rsp+0x40]
   60578:	mov    rbx,rax
   6057b:	js     60fd3 <_obstack_memory_used@@Base+0x14353>
   60581:	cmp    r11d,0x2d
   60585:	je     60fd3 <_obstack_memory_used@@Base+0x14353>
   6058b:	movsxd rbp,ebp
   6058e:	cmp    rax,rbp
   60591:	mov    rax,rbp
   60594:	cmovae rax,rbx
   60598:	mov    QWORD PTR [rsp+0x30],rax
   6059d:	mov    rax,QWORD PTR [rsp]
   605a1:	sub    rax,r13
   605a4:	cmp    rax,QWORD PTR [rsp+0x30]
   605a9:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   605af:	test   r14,r14
   605b2:	je     60633 <_obstack_memory_used@@Base+0x139b3>
   605b4:	cmp    rbx,rbp
   605b7:	jae    605f2 <_obstack_memory_used@@Base+0x13972>
   605b9:	mov    rdx,rbp
   605bc:	mov    BYTE PTR [rsp+0x40],r8b
   605c1:	sub    rdx,rbx
   605c4:	lea    rbp,[r14+rdx*1]
   605c8:	cmp    r11d,0x30
   605cc:	je     6130a <_obstack_memory_used@@Base+0x1468a>
   605d2:	cmp    r11d,0x2b
   605d6:	je     6130a <_obstack_memory_used@@Base+0x1468a>
   605dc:	mov    rdi,r14
   605df:	mov    esi,0x20
   605e4:	mov    r14,rbp
   605e7:	call   a1b0 <memset@plt>
   605ec:	movzx  r8d,BYTE PTR [rsp+0x40]
   605f2:	test   r8b,r8b
   605f5:	jne    61280 <_obstack_memory_used@@Base+0x14600>
   605fb:	cmp    BYTE PTR [rsp+0x28],0x0
   60600:	je     6126b <_obstack_memory_used@@Base+0x145eb>
   60606:	lea    rbp,[rbx-0x1]
   6060a:	test   rbx,rbx
   6060d:	je     60630 <_obstack_memory_used@@Base+0x139b0>
   6060f:	call   9d10 <__ctype_toupper_loc@plt>
   60614:	mov    rcx,QWORD PTR [rsp+0x18]
   60619:	mov    rsi,rax
   6061c:	movzx  edx,BYTE PTR [rcx+rbp*1]
   60620:	mov    rax,QWORD PTR [rsi]
   60623:	mov    eax,DWORD PTR [rax+rdx*4]
   60626:	mov    BYTE PTR [r14+rbp*1],al
   6062a:	sub    rbp,0x1
   6062e:	jae    6061c <_obstack_memory_used@@Base+0x1399c>
   60630:	add    r14,rbx
   60633:	add    r13,QWORD PTR [rsp+0x30]
   60638:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   6063d:	mov    r12,rbx
   60640:	xor    edi,edi
   60642:	xor    r9d,r9d
   60645:	jmp    600f0 <_obstack_memory_used@@Base+0x13470>
   6064a:	mov    r12,rbx
   6064d:	test   r11d,r11d
   60650:	jne    6065a <_obstack_memory_used@@Base+0x139da>
   60652:	test   ebp,ebp
   60654:	js     61391 <_obstack_memory_used@@Base+0x14711>
   6065a:	lea    edi,[rbp-0x6]
   6065d:	xor    eax,eax
   6065f:	lea    rbx,[rip+0xce23]        # 6d489 <_obstack_memory_used@@Base+0x20809>
   60666:	test   edi,edi
   60668:	cmovns eax,edi
   6066b:	mov    DWORD PTR [rsp+0x30],eax
   6066f:	nop
   60670:	movzx  r8d,BYTE PTR [rsp+0x28]
   60676:	sub    rsp,0x8
   6067a:	mov    r9d,r11d
   6067d:	xor    edi,edi
   6067f:	mov    eax,DWORD PTR [rsp+0x38]
   60683:	mov    rsi,0xffffffffffffffff
   6068a:	mov    rdx,rbx
   6068d:	push   rax
   6068e:	mov    rcx,QWORD PTR [rsp+0x18]
   60693:	mov    DWORD PTR [rsp+0x50],r11d
   60698:	mov    DWORD PTR [rsp+0x38],r8d
   6069d:	call   5f800 <_obstack_memory_used@@Base+0x12b80>
   606a2:	pop    rcx
   606a3:	pop    rsi
   606a4:	mov    r11d,DWORD PTR [rsp+0x40]
   606a9:	mov    r8d,DWORD PTR [rsp+0x28]
   606ae:	mov    r10,rax
   606b1:	cmp    r11d,0x2d
   606b5:	je     60e61 <_obstack_memory_used@@Base+0x141e1>
   606bb:	test   ebp,ebp
   606bd:	js     60e61 <_obstack_memory_used@@Base+0x141e1>
   606c3:	movsxd rdx,ebp
   606c6:	cmp    rax,rdx
   606c9:	mov    rax,rdx
   606cc:	cmovae rax,r10
   606d0:	mov    QWORD PTR [rsp+0x28],rax
   606d5:	mov    rbp,QWORD PTR [rsp]
   606d9:	sub    rbp,r13
   606dc:	cmp    rbp,QWORD PTR [rsp+0x28]
   606e1:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   606e7:	test   r14,r14
   606ea:	je     60773 <_obstack_memory_used@@Base+0x13af3>
   606f0:	cmp    rdx,r10
   606f3:	jbe    60745 <_obstack_memory_used@@Base+0x13ac5>
   606f5:	sub    rdx,r10
   606f8:	mov    DWORD PTR [rsp+0x58],r11d
   606fd:	lea    rax,[r14+rdx*1]
   60701:	mov    QWORD PTR [rsp+0x50],r10
   60706:	mov    QWORD PTR [rsp+0x40],rax
   6070b:	mov    DWORD PTR [rsp+0x48],r8d
   60710:	cmp    r11d,0x30
   60714:	je     60fdf <_obstack_memory_used@@Base+0x1435f>
   6071a:	cmp    r11d,0x2b
   6071e:	je     60fdf <_obstack_memory_used@@Base+0x1435f>
   60724:	mov    rdi,r14
   60727:	mov    esi,0x20
   6072c:	call   a1b0 <memset@plt>
   60731:	mov    r14,QWORD PTR [rsp+0x40]
   60736:	mov    r11d,DWORD PTR [rsp+0x58]
   6073b:	mov    r10,QWORD PTR [rsp+0x50]
   60740:	mov    r8d,DWORD PTR [rsp+0x48]
   60745:	mov    QWORD PTR [rsp+0x40],r10
   6074a:	sub    rsp,0x8
   6074e:	mov    rdx,rbx
   60751:	mov    rdi,r14
   60754:	mov    eax,DWORD PTR [rsp+0x38]
   60758:	mov    r9d,r11d
   6075b:	mov    rsi,rbp
   6075e:	push   rax
   6075f:	mov    rcx,QWORD PTR [rsp+0x18]
   60764:	call   5f800 <_obstack_memory_used@@Base+0x12b80>
   60769:	mov    r10,QWORD PTR [rsp+0x50]
   6076e:	pop    rax
   6076f:	pop    rdx
   60770:	add    r14,r10
   60773:	add    r13,QWORD PTR [rsp+0x28]
   60778:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   6077d:	mov    r12,rbx
   60780:	xor    edi,edi
   60782:	mov    rax,QWORD PTR [rsp+0x8]
   60787:	mov    esi,0x59
   6078c:	mov    edx,DWORD PTR [rax+0x14]
   6078f:	cmp    edx,0xfffff894
   60795:	setl   BYTE PTR [rsp+0x30]
   6079a:	add    edx,0x76c
   607a0:	test   r11d,r11d
   607a3:	jne    61022 <_obstack_memory_used@@Base+0x143a2>
   607a9:	mov    r11d,DWORD PTR [rsp+0x20]
   607ae:	cmp    r11d,0x2b
   607b2:	je     613e9 <_obstack_memory_used@@Base+0x14769>
   607b8:	mov    BYTE PTR [rsp+0x40],0x0
   607bd:	xor    ecx,ecx
   607bf:	mov    r9d,0x4
   607c5:	nop    DWORD PTR [rax]
   607c8:	mov    eax,edx
   607ca:	neg    eax
   607cc:	cmp    BYTE PTR [rsp+0x30],0x0
   607d1:	cmovne edx,eax
   607d4:	jmp    602f8 <_obstack_memory_used@@Base+0x13678>
   607d9:	mov    r12,rbx
   607dc:	xor    edi,edi
   607de:	mov    esi,0x58
   607e3:	xor    ebx,ebx
   607e5:	jmp    5ff17 <_obstack_memory_used@@Base+0x13297>
   607ea:	mov    r12,rbx
   607ed:	xor    edi,edi
   607ef:	mov    rsi,QWORD PTR [rsp+0x8]
   607f4:	mov    r9d,0x2
   607fa:	mov    eax,DWORD PTR [rsi+0x18]
   607fd:	mov    esi,DWORD PTR [rsi+0x1c]
   60800:	lea    edx,[rax+0x6]
   60803:	mov    DWORD PTR [rsp+0x30],eax
   60807:	movsxd rax,edx
   6080a:	mov    ecx,edx
   6080c:	imul   rax,rax,0xffffffff92492493
   60813:	sar    ecx,0x1f
   60816:	shr    rax,0x20
   6081a:	add    eax,edx
   6081c:	sar    eax,0x2
   6081f:	sub    eax,ecx
   60821:	lea    ecx,[rax*8+0x0]
   60828:	sub    ecx,eax
   6082a:	mov    eax,ecx
   6082c:	sub    eax,edx
   6082e:	lea    eax,[rax+rsi*1+0x7]
   60832:	mov    esi,0x57
   60837:	movsxd rdx,eax
   6083a:	imul   rdx,rdx,0xffffffff92492493
   60841:	shr    rdx,0x20
   60845:	add    edx,eax
   60847:	sar    eax,0x1f
   6084a:	sar    edx,0x2
   6084d:	sub    edx,eax
   6084f:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   60854:	mov    r12,rbx
   60857:	xor    edi,edi
   60859:	mov    rcx,QWORD PTR [rsp+0x8]
   6085e:	mov    esi,0x55
   60863:	mov    r9d,0x2
   60869:	mov    eax,DWORD PTR [rcx+0x1c]
   6086c:	sub    eax,DWORD PTR [rcx+0x18]
   6086f:	add    eax,0x7
   60872:	movsxd rdx,eax
   60875:	imul   rdx,rdx,0xffffffff92492493
   6087c:	shr    rdx,0x20
   60880:	add    edx,eax
   60882:	sar    eax,0x1f
   60885:	sar    edx,0x2
   60888:	sub    edx,eax
   6088a:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   6088f:	mov    r12,rbx
   60892:	mov    DWORD PTR [rsp+0x30],0xffffffff
   6089a:	lea    rbx,[rip+0xc611]        # 6ceb2 <_obstack_memory_used@@Base+0x20232>
   608a1:	jmp    60670 <_obstack_memory_used@@Base+0x139f0>
   608a6:	mov    r12,rbx
   608a9:	xor    edi,edi
   608ab:	mov    rax,QWORD PTR [rsp+0x8]
   608b0:	mov    esi,0x53
   608b5:	mov    r9d,0x2
   608bb:	mov    edx,DWORD PTR [rax]
   608bd:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   608c2:	mov    r12,rbx
   608c5:	mov    DWORD PTR [rsp+0x30],0xffffffff
   608cd:	lea    rbx,[rip+0x44fd]        # 64dd1 <_obstack_memory_used@@Base+0x18151>
   608d4:	jmp    60670 <_obstack_memory_used@@Base+0x139f0>
   608d9:	mov    r12,rbx
   608dc:	xor    edi,edi
   608de:	mov    ebx,0x1
   608e3:	jmp    601e4 <_obstack_memory_used@@Base+0x13564>
   608e8:	mov    r12,rbx
   608eb:	xor    edi,edi
   608ed:	mov    rax,QWORD PTR [rsp+0x8]
   608f2:	mov    esi,0x4d
   608f7:	mov    r9d,0x2
   608fd:	mov    edx,DWORD PTR [rax+0x4]
   60900:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   60905:	mov    r12,rbx
   60908:	xor    edi,edi
   6090a:	mov    edx,DWORD PTR [rsp+0x24]
   6090e:	mov    esi,0x49
   60913:	mov    r9d,0x2
   60919:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   6091e:	mov    r12,rbx
   60921:	xor    edi,edi
   60923:	mov    rax,QWORD PTR [rsp+0x8]
   60928:	mov    esi,0x48
   6092d:	mov    r9d,0x2
   60933:	mov    edx,DWORD PTR [rax+0x8]
   60936:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   6093b:	mov    r12,rbx
   6093e:	mov    DWORD PTR [rsp+0x30],0xffffffff
   60946:	lea    rbx,[rip+0xcb33]        # 6d480 <_obstack_memory_used@@Base+0x20800>
   6094d:	jmp    60670 <_obstack_memory_used@@Base+0x139f0>
   60952:	mov    r12,rbx
   60955:	xor    edi,edi
   60957:	mov    rax,QWORD PTR [rsp+0x8]
   6095c:	mov    ecx,DWORD PTR [rax+0x14]
   6095f:	cmp    ecx,0xfffff894
   60965:	lea    eax,[rcx+0x76c]
   6096b:	setl   BYTE PTR [rsp+0x30]
   60970:	cmp    eax,0x76c
   60975:	sbb    eax,eax
   60977:	and    eax,0xffffff9d
   6097a:	add    eax,ecx
   6097c:	movsxd rdx,eax
   6097f:	sar    eax,0x1f
   60982:	imul   rdx,rdx,0x51eb851f
   60989:	sar    rdx,0x25
   6098d:	sub    edx,eax
   6098f:	add    edx,0x13
   60992:	cmp    ecx,0xfffff894
   60998:	setge  al
   6099b:	test   r11d,r11d
   6099e:	jne    61159 <_obstack_memory_used@@Base+0x144d9>
   609a4:	cmp    DWORD PTR [rsp+0x20],0x2b
   609a9:	mov    r11d,DWORD PTR [rsp+0x20]
   609ae:	je     61163 <_obstack_memory_used@@Base+0x144e3>
   609b4:	mov    BYTE PTR [rsp+0x40],0x0
   609b9:	mov    esi,0x43
   609be:	mov    r9d,0x2
   609c4:	jmp    5fda9 <_obstack_memory_used@@Base+0x13129>
   609c9:	mov    r12,rbx
   609cc:	xor    edi,edi
   609ce:	mov    esi,0x63
   609d3:	xor    ebx,ebx
   609d5:	jmp    5ff17 <_obstack_memory_used@@Base+0x13297>
   609da:	mov    r12,rbx
   609dd:	xor    edi,edi
   609df:	mov    rax,QWORD PTR [rsp+0x8]
   609e4:	movsxd rdx,DWORD PTR [rax+0x14]
   609e8:	mov    rax,rdx
   609eb:	imul   rdx,rdx,0x51eb851f
   609f2:	mov    ecx,eax
   609f4:	sar    ecx,0x1f
   609f7:	sar    rdx,0x25
   609fb:	sub    edx,ecx
   609fd:	imul   ecx,edx,0x64
   60a00:	mov    edx,eax
   60a02:	sub    edx,ecx
   60a04:	jns    60a15 <_obstack_memory_used@@Base+0x13d95>
   60a06:	mov    ecx,edx
   60a08:	add    edx,0x64
   60a0b:	neg    ecx
   60a0d:	cmp    eax,0xfffff893
   60a12:	cmovle edx,ecx
   60a15:	mov    esi,0x79
   60a1a:	test   r11d,r11d
   60a1d:	jne    5fd8a <_obstack_memory_used@@Base+0x1310a>
   60a23:	mov    eax,DWORD PTR [rsp+0x20]
   60a27:	cmp    eax,0x2b
   60a2a:	je     61053 <_obstack_memory_used@@Base+0x143d3>
   60a30:	mov    r11d,eax
   60a33:	mov    BYTE PTR [rsp+0x40],0x0
   60a38:	mov    esi,0x79
   60a3d:	mov    eax,0x1
   60a42:	mov    BYTE PTR [rsp+0x30],0x0
   60a47:	mov    r9d,0x2
   60a4d:	jmp    5fda9 <_obstack_memory_used@@Base+0x13129>
   60a52:	mov    r12,rbx
   60a55:	xor    edi,edi
   60a57:	mov    esi,0x78
   60a5c:	xor    ebx,ebx
   60a5e:	jmp    5ff17 <_obstack_memory_used@@Base+0x13297>
   60a63:	mov    r12,rbx
   60a66:	xor    edi,edi
   60a68:	mov    rax,QWORD PTR [rsp+0x8]
   60a6d:	mov    esi,0x77
   60a72:	mov    r9d,0x1
   60a78:	mov    edx,DWORD PTR [rax+0x18]
   60a7b:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   60a80:	mov    r12,rbx
   60a83:	xor    edi,edi
   60a85:	mov    rax,QWORD PTR [rsp+0x8]
   60a8a:	mov    esi,0x75
   60a8f:	mov    r9d,0x1
   60a95:	mov    eax,DWORD PTR [rax+0x18]
   60a98:	lea    edx,[rax+0x6]
   60a9b:	mov    DWORD PTR [rsp+0x30],eax
   60a9f:	movsxd rax,edx
   60aa2:	mov    ecx,edx
   60aa4:	imul   rax,rax,0xffffffff92492493
   60aab:	sar    ecx,0x1f
   60aae:	shr    rax,0x20
   60ab2:	add    eax,edx
   60ab4:	sar    eax,0x2
   60ab7:	sub    eax,ecx
   60ab9:	lea    ecx,[rax*8+0x0]
   60ac0:	sub    ecx,eax
   60ac2:	sub    edx,ecx
   60ac4:	add    edx,0x1
   60ac7:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   60acc:	mov    rsi,QWORD PTR [rsp]
   60ad0:	mov    r12,rbx
   60ad3:	sub    rsi,r13
   60ad6:	cmp    r11d,0x2d
   60ada:	je     61005 <_obstack_memory_used@@Base+0x14385>
   60ae0:	test   ebp,ebp
   60ae2:	js     61005 <_obstack_memory_used@@Base+0x14385>
   60ae8:	movsxd rdx,ebp
   60aeb:	mov    ecx,0x1
   60af0:	test   rdx,rdx
   60af3:	cmovne rcx,rdx
   60af7:	mov    rbx,rcx
   60afa:	cmp    rcx,rsi
   60afd:	jae    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   60b03:	test   r14,r14
   60b06:	je     5ffce <_obstack_memory_used@@Base+0x1334e>
   60b0c:	cmp    ebp,0x1
   60b0f:	jle    60b42 <_obstack_memory_used@@Base+0x13ec2>
   60b11:	sub    rdx,0x1
   60b15:	lea    rbp,[r14+rdx*1]
   60b19:	cmp    r11d,0x30
   60b1d:	je     61325 <_obstack_memory_used@@Base+0x146a5>
   60b23:	cmp    r11d,0x2b
   60b27:	je     61325 <_obstack_memory_used@@Base+0x146a5>
   60b2d:	mov    rdi,r14
   60b30:	mov    esi,0x20
   60b35:	mov    r14,rbp
   60b38:	call   a1b0 <memset@plt>
   60b3d:	movzx  eax,BYTE PTR [r12]
   60b42:	mov    BYTE PTR [r14],al
   60b45:	add    r14,0x1
   60b49:	jmp    5ffce <_obstack_memory_used@@Base+0x1334e>
   60b4e:	test   edi,edi
   60b50:	je     6064d <_obstack_memory_used@@Base+0x139cd>
   60b56:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60b5b:	test   edi,edi
   60b5d:	je     6093e <_obstack_memory_used@@Base+0x13cbe>
   60b63:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60b68:	cmp    edi,0x45
   60b6b:	jne    6007b <_obstack_memory_used@@Base+0x133fb>
   60b71:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60b76:	test   edi,edi
   60b78:	je     6009a <_obstack_memory_used@@Base+0x1341a>
   60b7e:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60b83:	cmp    edi,0x4f
   60b86:	jne    609ce <_obstack_memory_used@@Base+0x13d4e>
   60b8c:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60b91:	test   edi,edi
   60b93:	je     601c3 <_obstack_memory_used@@Base+0x13543>
   60b99:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60b9e:	cmp    edi,0x4f
   60ba1:	jne    607de <_obstack_memory_used@@Base+0x13b5e>
   60ba7:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60bac:	cmp    edi,0x45
   60baf:	jne    5f91c <_obstack_memory_used@@Base+0x12c9c>
   60bb5:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60bba:	mov    esi,0x71
   60bbf:	cmp    edi,0x4f
   60bc2:	je     5fdc1 <_obstack_memory_used@@Base+0x13141>
   60bc8:	jmp    602cc <_obstack_memory_used@@Base+0x1364c>
   60bcd:	cmp    edi,0x4f
   60bd0:	jne    60a57 <_obstack_memory_used@@Base+0x13dd7>
   60bd6:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60bdb:	cmp    edi,0x45
   60bde:	jne    609df <_obstack_memory_used@@Base+0x13d5f>
   60be4:	jmp    5fdc1 <_obstack_memory_used@@Base+0x13141>
   60be9:	cmp    edi,0x45
   60bec:	jne    608ed <_obstack_memory_used@@Base+0x13c6d>
   60bf2:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60bf7:	cmp    edi,0x45
   60bfa:	je     5fdc1 <_obstack_memory_used@@Base+0x13141>
   60c00:	cmp    edi,0x4f
   60c03:	jne    60782 <_obstack_memory_used@@Base+0x13b02>
   60c09:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c0e:	mov    rsi,QWORD PTR [rsp]
   60c12:	sub    rsi,r13
   60c15:	test   edi,edi
   60c17:	je     60ad6 <_obstack_memory_used@@Base+0x13e56>
   60c1d:	mov    r8,r12
   60c20:	mov    ecx,0x1
   60c25:	jmp    5fb1e <_obstack_memory_used@@Base+0x12e9e>
   60c2a:	cmp    edi,0x45
   60c2d:	jne    60a68 <_obstack_memory_used@@Base+0x13de8>
   60c33:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c38:	cmp    edi,0x45
   60c3b:	jne    60289 <_obstack_memory_used@@Base+0x13609>
   60c41:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c46:	cmp    edi,0x45
   60c49:	jne    602bb <_obstack_memory_used@@Base+0x1363b>
   60c4f:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c54:	cmp    edi,0x45
   60c57:	jne    5ffdb <_obstack_memory_used@@Base+0x1335b>
   60c5d:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c62:	cmp    edi,0x45
   60c65:	jne    6001b <_obstack_memory_used@@Base+0x1339b>
   60c6b:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c70:	cmp    edi,0x45
   60c73:	jne    6004d <_obstack_memory_used@@Base+0x133cd>
   60c79:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c7e:	cmp    edi,0x45
   60c81:	jne    60061 <_obstack_memory_used@@Base+0x133e1>
   60c87:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c8c:	cmp    edi,0x45
   60c8f:	jne    6090a <_obstack_memory_used@@Base+0x13c8a>
   60c95:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60c9a:	cmp    edi,0x45
   60c9d:	jne    60923 <_obstack_memory_used@@Base+0x13ca3>
   60ca3:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60ca8:	cmp    edi,0x45
   60cab:	jne    60957 <_obstack_memory_used@@Base+0x13cd7>
   60cb1:	jmp    5fdc1 <_obstack_memory_used@@Base+0x13141>
   60cb6:	cmp    edi,0x45
   60cb9:	jne    607ef <_obstack_memory_used@@Base+0x13b6f>
   60cbf:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60cc4:	cmp    edi,0x45
   60cc7:	jne    608ab <_obstack_memory_used@@Base+0x13c2b>
   60ccd:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60cd2:	cmp    edi,0x45
   60cd5:	jne    60859 <_obstack_memory_used@@Base+0x13bd9>
   60cdb:	jmp    5fb00 <_obstack_memory_used@@Base+0x12e80>
   60ce0:	mov    rbx,r12
   60ce3:	jmp    600cd <_obstack_memory_used@@Base+0x1344d>
   60ce8:	add    r9,0x1
   60cec:	movzx  eax,BYTE PTR [rbx+r9*1]
   60cf1:	lea    r12,[rbx+r9*1]
   60cf5:	cmp    al,0x3a
   60cf7:	jne    600e3 <_obstack_memory_used@@Base+0x13463>
   60cfd:	jmp    60ce8 <_obstack_memory_used@@Base+0x14068>
   60cff:	nop
   60d00:	mov    rbp,r8
   60d03:	xor    edx,edx
   60d05:	jmp    5fe41 <_obstack_memory_used@@Base+0x131c1>
   60d0a:	nop    WORD PTR [rax+rax*1+0x0]
   60d10:	mov    rbp,rcx
   60d13:	xor    edx,edx
   60d15:	jmp    5fb3d <_obstack_memory_used@@Base+0x12ebd>
   60d1a:	nop    WORD PTR [rax+rax*1+0x0]
   60d20:	mov    ecx,0x2d
   60d25:	lea    esi,[rbp-0x1]
   60d28:	mov    edi,esi
   60d2a:	sub    edi,r9d
   60d2d:	test   edi,edi
   60d2f:	jle    60d90 <_obstack_memory_used@@Base+0x14110>
   60d31:	test   al,al
   60d33:	je     60d90 <_obstack_memory_used@@Base+0x14110>
   60d35:	cmp    r11d,0x5f
   60d39:	je     60eb7 <_obstack_memory_used@@Base+0x14237>
   60d3f:	mov    rax,QWORD PTR [rsp]
   60d43:	sub    rax,r13
   60d46:	cmp    rax,0x1
   60d4a:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   60d50:	test   r14,r14
   60d53:	je     60d5c <_obstack_memory_used@@Base+0x140dc>
   60d55:	mov    BYTE PTR [r14],cl
   60d58:	add    r14,0x1
   60d5c:	add    r13,0x1
   60d60:	movsxd rcx,r9d
   60d63:	cmp    r11d,0x2d
   60d67:	je     60d9e <_obstack_memory_used@@Base+0x1411e>
   60d69:	mov    r8,rcx
   60d6c:	xor    edx,edx
   60d6e:	test   esi,esi
   60d70:	js     6048d <_obstack_memory_used@@Base+0x1380d>
   60d76:	mov    ebp,esi
   60d78:	jmp    60480 <_obstack_memory_used@@Base+0x13800>
   60d7d:	nop    DWORD PTR [rax]
   60d80:	mov    eax,0x1
   60d85:	mov    r11d,0x30
   60d8b:	jmp    60448 <_obstack_memory_used@@Base+0x137c8>
   60d90:	xor    edi,edi
   60d92:	jmp    60d35 <_obstack_memory_used@@Base+0x140b5>
   60d94:	cmp    r11d,0x2d
   60d98:	jne    60480 <_obstack_memory_used@@Base+0x13800>
   60d9e:	mov    r8,rcx
   60da1:	xor    edx,edx
   60da3:	jmp    6048d <_obstack_memory_used@@Base+0x1380d>
   60da8:	mov    rdx,rcx
   60dab:	mov    rsi,rbx
   60dae:	mov    rdi,r14
   60db1:	mov    QWORD PTR [rsp+0x30],r8
   60db6:	mov    QWORD PTR [rsp+0x28],rcx
   60dbb:	call   a420 <memcpy@plt>
   60dc0:	mov    r8,QWORD PTR [rsp+0x30]
   60dc5:	mov    rcx,QWORD PTR [rsp+0x28]
   60dca:	jmp    60534 <_obstack_memory_used@@Base+0x138b4>
   60dcf:	mov    rdx,rcx
   60dd2:	mov    rsi,r8
   60dd5:	mov    rdi,r14
   60dd8:	mov    QWORD PTR [rsp+0x28],rcx
   60ddd:	call   a420 <memcpy@plt>
   60de2:	mov    rcx,QWORD PTR [rsp+0x28]
   60de7:	jmp    5fbdd <_obstack_memory_used@@Base+0x12f5d>
   60dec:	mov    r8d,edx
   60def:	jmp    5fa28 <_obstack_memory_used@@Base+0x12da8>
   60df4:	mov    BYTE PTR [rsp+0x28],0x1
   60df9:	jmp    5fa28 <_obstack_memory_used@@Base+0x12da8>
   60dfe:	mov    rdx,r8
   60e01:	lea    rsi,[rsp+0xa1]
   60e09:	mov    rdi,r14
   60e0c:	mov    QWORD PTR [rsp+0x28],r8
   60e11:	call   a420 <memcpy@plt>
   60e16:	mov    r8,QWORD PTR [rsp+0x28]
   60e1b:	jmp    5fef4 <_obstack_memory_used@@Base+0x13274>
   60e20:	lea    rbx,[rcx-0x2]
   60e24:	test   r8,r8
   60e27:	je     5fef4 <_obstack_memory_used@@Base+0x13274>
   60e2d:	mov    QWORD PTR [rsp+0x28],r8
   60e32:	call   a970 <__ctype_tolower_loc@plt>
   60e37:	mov    r8,QWORD PTR [rsp+0x28]
   60e3c:	lea    rsi,[rsp+0xa1]
   60e44:	nop    DWORD PTR [rax+0x0]
   60e48:	movzx  ecx,BYTE PTR [rsi+rbx*1]
   60e4c:	mov    rdx,QWORD PTR [rax]
   60e4f:	mov    edx,DWORD PTR [rdx+rcx*4]
   60e52:	mov    BYTE PTR [r14+rbx*1],dl
   60e56:	sub    rbx,0x1
   60e5a:	jae    60e48 <_obstack_memory_used@@Base+0x141c8>
   60e5c:	jmp    5fef4 <_obstack_memory_used@@Base+0x13274>
   60e61:	mov    QWORD PTR [rsp+0x28],r10
   60e66:	xor    edx,edx
   60e68:	jmp    606d5 <_obstack_memory_used@@Base+0x13a55>
   60e6d:	mov    ecx,0x2b
   60e72:	jmp    60d25 <_obstack_memory_used@@Base+0x140a5>
   60e77:	mov    rdi,r14
   60e7a:	mov    esi,0x30
   60e7f:	call   a1b0 <memset@plt>
   60e84:	mov    r14,QWORD PTR [rsp+0x30]
   60e89:	mov    rcx,QWORD PTR [rsp+0x40]
   60e8e:	mov    r8,QWORD PTR [rsp+0x48]
   60e93:	jmp    5fea5 <_obstack_memory_used@@Base+0x13225>
   60e98:	mov    rdi,r14
   60e9b:	mov    esi,0x30
   60ea0:	mov    r14,rbp
   60ea3:	call   a1b0 <memset@plt>
   60ea8:	mov    rcx,QWORD PTR [rsp+0x30]
   60ead:	mov    r8,QWORD PTR [rsp+0x40]
   60eb2:	jmp    604ea <_obstack_memory_used@@Base+0x1386a>
   60eb7:	mov    r8,QWORD PTR [rsp]
   60ebb:	movsxd rdx,edi
   60ebe:	sub    ebp,edi
   60ec0:	add    r13,rdx
   60ec3:	sub    r8,r13
   60ec6:	test   r14,r14
   60ec9:	je     60f80 <_obstack_memory_used@@Base+0x14300>
   60ecf:	mov    rdi,r14
   60ed2:	mov    esi,0x20
   60ed7:	mov    QWORD PTR [rsp+0x48],r8
   60edc:	mov    QWORD PTR [rsp+0x30],rdx
   60ee1:	mov    QWORD PTR [rsp+0x58],r9
   60ee6:	mov    BYTE PTR [rsp+0x50],cl
   60eea:	mov    DWORD PTR [rsp+0x40],r11d
   60eef:	call   a1b0 <memset@plt>
   60ef4:	mov    rdx,QWORD PTR [rsp+0x30]
   60ef9:	mov    r8,QWORD PTR [rsp+0x48]
   60efe:	add    r14,rdx
   60f01:	cmp    r8,0x1
   60f05:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   60f0b:	mov    r11d,DWORD PTR [rsp+0x40]
   60f10:	movzx  ecx,BYTE PTR [rsp+0x50]
   60f15:	lea    esi,[rbp-0x1]
   60f18:	mov    r9,QWORD PTR [rsp+0x58]
   60f1d:	jmp    60d55 <_obstack_memory_used@@Base+0x140d5>
   60f22:	mov    rdi,r14
   60f25:	mov    esi,0x30
   60f2a:	mov    r14,rbx
   60f2d:	call   a1b0 <memset@plt>
   60f32:	mov    r8,QWORD PTR [rsp+0x30]
   60f37:	mov    rcx,QWORD PTR [rsp+0x40]
   60f3c:	jmp    5fb9a <_obstack_memory_used@@Base+0x12f1a>
   60f41:	cmp    r9,0x3
   60f45:	jne    612b3 <_obstack_memory_used@@Base+0x14633>
   60f4b:	test   r8d,r8d
   60f4e:	jne    611f7 <_obstack_memory_used@@Base+0x14577>
   60f54:	test   ecx,ecx
   60f56:	jne    6019d <_obstack_memory_used@@Base+0x1351d>
   60f5c:	movzx  eax,BYTE PTR [rsp+0x30]
   60f61:	mov    BYTE PTR [rsp+0x40],0x1
   60f66:	mov    edx,r10d
   60f69:	mov    r9d,0x3
   60f6f:	xor    eax,0x1
   60f72:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   60f77:	nop    WORD PTR [rax+rax*1+0x0]
   60f80:	cmp    r8,0x1
   60f84:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   60f8a:	add    r13,0x1
   60f8e:	lea    esi,[rbp-0x1]
   60f91:	movsxd rcx,r9d
   60f94:	jmp    60d69 <_obstack_memory_used@@Base+0x140e9>
   60f99:	cmp    rax,0x1
   60f9d:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   60fa3:	mov    ebx,0x1
   60fa8:	test   r14,r14
   60fab:	jne    60277 <_obstack_memory_used@@Base+0x135f7>
   60fb1:	jmp    5ffce <_obstack_memory_used@@Base+0x1334e>
   60fb6:	cmp    rax,0x1
   60fba:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   60fc0:	mov    ebx,0x1
   60fc5:	test   r14,r14
   60fc8:	jne    5ffc6 <_obstack_memory_used@@Base+0x13346>
   60fce:	jmp    5ffce <_obstack_memory_used@@Base+0x1334e>
   60fd3:	mov    QWORD PTR [rsp+0x30],rbx
   60fd8:	xor    ebp,ebp
   60fda:	jmp    6059d <_obstack_memory_used@@Base+0x1391d>
   60fdf:	mov    rdi,r14
   60fe2:	mov    esi,0x30
   60fe7:	call   a1b0 <memset@plt>
   60fec:	mov    r14,QWORD PTR [rsp+0x40]
   60ff1:	mov    r8d,DWORD PTR [rsp+0x48]
   60ff6:	mov    r10,QWORD PTR [rsp+0x50]
   60ffb:	mov    r11d,DWORD PTR [rsp+0x58]
   61000:	jmp    60745 <_obstack_memory_used@@Base+0x13ac5>
   61005:	cmp    rsi,0x1
   61009:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   6100f:	mov    ebx,0x1
   61014:	test   r14,r14
   61017:	jne    60b42 <_obstack_memory_used@@Base+0x13ec2>
   6101d:	jmp    5ffce <_obstack_memory_used@@Base+0x1334e>
   61022:	mov    r9d,0x4
   61028:	mov    eax,0x270f
   6102d:	cmp    r11d,0x2b
   61031:	jne    613fe <_obstack_memory_used@@Base+0x1477e>
   61037:	cmp    eax,edx
   61039:	jae    61063 <_obstack_memory_used@@Base+0x143e3>
   6103b:	movzx  eax,BYTE PTR [rsp+0x30]
   61040:	mov    BYTE PTR [rsp+0x40],0x1
   61045:	mov    r11d,0x2b
   6104b:	xor    eax,0x1
   6104e:	jmp    5fda9 <_obstack_memory_used@@Base+0x13129>
   61053:	mov    BYTE PTR [rsp+0x30],0x0
   61058:	mov    esi,0x79
   6105d:	mov    r9d,0x2
   61063:	movzx  eax,BYTE PTR [rsp+0x30]
   61068:	cmp    ebp,r9d
   6106b:	mov    r11d,0x2b
   61071:	setg   BYTE PTR [rsp+0x40]
   61076:	xor    eax,0x1
   61079:	jmp    5fda9 <_obstack_memory_used@@Base+0x13129>
   6107e:	mov    eax,DWORD PTR [rsp+0x30]
   61082:	sub    eax,0x1
   61085:	mov    r9d,eax
   61088:	mov    eax,0x16d
   6108d:	test   r9b,0x3
   61091:	jne    610c6 <_obstack_memory_used@@Base+0x14446>
   61093:	imul   edx,r9d,0xc28f5c29
   6109a:	mov    eax,0x16e
   6109f:	add    edx,0x51eb850
   610a5:	ror    edx,0x2
   610a8:	cmp    edx,0x28f5c28
   610ae:	ja     610c6 <_obstack_memory_used@@Base+0x14446>
   610b0:	mov    eax,r9d
   610b3:	mov    r8d,0x190
   610b9:	cdq    
   610ba:	idiv   r8d
   610bd:	neg    edx
   610bf:	sbb    eax,eax
   610c1:	add    eax,0x16e
   610c6:	lea    r9d,[r10+rax*1]
   610ca:	mov    r10d,0xffffffff
   610d0:	mov    edx,r9d
   610d3:	sub    edx,r12d
   610d6:	add    edx,0x17e
   610dc:	movsxd rax,edx
   610df:	mov    r8d,edx
   610e2:	sub    r9d,edx
   610e5:	imul   rax,rax,0xffffffff92492493
   610ec:	sar    r8d,0x1f
   610f0:	shr    rax,0x20
   610f4:	add    eax,edx
   610f6:	sar    eax,0x2
   610f9:	sub    eax,r8d
   610fc:	lea    r8d,[rax*8+0x0]
   61104:	sub    r8d,eax
   61107:	lea    r9d,[r9+r8*1+0x3]
   6110c:	jmp    5fd24 <_obstack_memory_used@@Base+0x130a4>
   61111:	mov    rax,QWORD PTR [rsp]
   61115:	sub    rax,r13
   61118:	cmp    rax,0x1
   6111c:	jbe    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   61122:	mov    rbx,QWORD PTR [rsp]
   61126:	add    r13,0x1
   6112a:	sub    rbx,r13
   6112d:	test   r14,r14
   61130:	jne    5f960 <_obstack_memory_used@@Base+0x12ce0>
   61136:	cmp    r11d,0x2d
   6113a:	je     5f994 <_obstack_memory_used@@Base+0x12d14>
   61140:	lea    eax,[rbp-0x1]
   61143:	cdqe   
   61145:	cmp    rax,rbx
   61148:	jae    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   6114e:	add    r13,rax
   61151:	xor    r14d,r14d
   61154:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   61159:	cmp    r11d,0x2b
   6115d:	jne    609b4 <_obstack_memory_used@@Base+0x13d34>
   61163:	mov    esi,0x43
   61168:	mov    r9d,0x2
   6116e:	mov    eax,0x63
   61173:	jmp    61037 <_obstack_memory_used@@Base+0x143b7>
   61178:	mov    eax,0xfffff894
   6117d:	lea    edx,[rcx+r10*1+0x76c]
   61185:	mov    r12,rbx
   61188:	sub    eax,r10d
   6118b:	cmp    ecx,eax
   6118d:	setl   BYTE PTR [rsp+0x30]
   61192:	test   r11d,r11d
   61195:	jne    61022 <_obstack_memory_used@@Base+0x143a2>
   6119b:	mov    r11d,DWORD PTR [rsp+0x20]
   611a0:	cmp    r11d,0x2b
   611a4:	je     61410 <_obstack_memory_used@@Base+0x14790>
   611aa:	cmp    ecx,eax
   611ac:	mov    BYTE PTR [rsp+0x40],0x0
   611b1:	mov    r12,rbx
   611b4:	mov    r9d,0x4
   611ba:	setge  al
   611bd:	jmp    5fda9 <_obstack_memory_used@@Base+0x13129>
   611c2:	movsxd rdx,r9d
   611c5:	mov    r12,rbx
   611c8:	imul   rdx,rdx,0xffffffff92492493
   611cf:	shr    rdx,0x20
   611d3:	add    edx,r9d
   611d6:	sar    r9d,0x1f
   611da:	sar    edx,0x2
   611dd:	sub    edx,r9d
   611e0:	mov    r9d,0x2
   611e6:	add    edx,0x1
   611e9:	jmp    5fffa <_obstack_memory_used@@Base+0x1337a>
   611ee:	mov    BYTE PTR [r14],0x30
   611f2:	jmp    5f986 <_obstack_memory_used@@Base+0x12d06>
   611f7:	imul   ecx,ecx,0x64
   611fa:	movzx  eax,BYTE PTR [rsp+0x30]
   611ff:	mov    BYTE PTR [rsp+0x40],0x1
   61204:	mov    r9d,0x9
   6120a:	imul   edx,r10d,0x2710
   61211:	xor    eax,0x1
   61214:	add    edx,ecx
   61216:	mov    ecx,0x14
   6121b:	add    edx,r8d
   6121e:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   61223:	lea    edx,[rbp-0x1]
   61226:	movsxd rdx,edx
   61229:	cmp    rdx,rbx
   6122c:	jae    5f9a0 <_obstack_memory_used@@Base+0x12d20>
   61232:	test   rdx,rdx
   61235:	je     5f8e4 <_obstack_memory_used@@Base+0x12c64>
   6123b:	lea    rbx,[r14+rdx*1]
   6123f:	add    r13,rdx
   61242:	cmp    r11d,0x30
   61246:	je     6137c <_obstack_memory_used@@Base+0x146fc>
   6124c:	cmp    r11d,0x2b
   61250:	je     6137c <_obstack_memory_used@@Base+0x146fc>
   61256:	mov    rdi,r14
   61259:	mov    esi,0x20
   6125e:	mov    r14,rbx
   61261:	call   a1b0 <memset@plt>
   61266:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   6126b:	mov    rsi,QWORD PTR [rsp+0x18]
   61270:	mov    rdx,rbx
   61273:	mov    rdi,r14
   61276:	call   a420 <memcpy@plt>
   6127b:	jmp    60630 <_obstack_memory_used@@Base+0x139b0>
   61280:	lea    rbp,[rbx-0x1]
   61284:	test   rbx,rbx
   61287:	je     60630 <_obstack_memory_used@@Base+0x139b0>
   6128d:	call   a970 <__ctype_tolower_loc@plt>
   61292:	mov    rcx,QWORD PTR [rsp+0x18]
   61297:	mov    rsi,rax
   6129a:	movzx  edx,BYTE PTR [rcx+rbp*1]
   6129e:	mov    rax,QWORD PTR [rsi]
   612a1:	mov    eax,DWORD PTR [rax+rdx*4]
   612a4:	mov    BYTE PTR [r14+rbp*1],al
   612a8:	sub    rbp,0x1
   612ac:	jae    6129a <_obstack_memory_used@@Base+0x1461a>
   612ae:	jmp    60630 <_obstack_memory_used@@Base+0x139b0>
   612b3:	movzx  eax,BYTE PTR [r12]
   612b8:	mov    r8,r12
   612bb:	jmp    5ff44 <_obstack_memory_used@@Base+0x132c4>
   612c0:	imul   edx,r10d,0x64
   612c4:	movzx  eax,BYTE PTR [rsp+0x30]
   612c9:	mov    BYTE PTR [rsp+0x40],0x1
   612ce:	mov    r9d,0x5
   612d4:	xor    eax,0x1
   612d7:	add    edx,ecx
   612d9:	xor    ecx,ecx
   612db:	jmp    5fdb0 <_obstack_memory_used@@Base+0x13130>
   612e0:	mov    rdi,r14
   612e3:	mov    esi,0x30
   612e8:	mov    r14,rbp
   612eb:	call   a1b0 <memset@plt>
   612f0:	jmp    60277 <_obstack_memory_used@@Base+0x135f7>
   612f5:	mov    rdi,r14
   612f8:	mov    esi,0x30
   612fd:	mov    r14,rbp
   61300:	call   a1b0 <memset@plt>
   61305:	jmp    5ffc6 <_obstack_memory_used@@Base+0x13346>
   6130a:	mov    rdi,r14
   6130d:	mov    esi,0x30
   61312:	mov    r14,rbp
   61315:	call   a1b0 <memset@plt>
   6131a:	movzx  r8d,BYTE PTR [rsp+0x40]
   61320:	jmp    605f2 <_obstack_memory_used@@Base+0x13972>
   61325:	mov    rdi,r14
   61328:	mov    esi,0x30
   6132d:	mov    r14,rbp
   61330:	call   a1b0 <memset@plt>
   61335:	movzx  eax,BYTE PTR [r12]
   6133a:	jmp    60b42 <_obstack_memory_used@@Base+0x13ec2>
   6133f:	mov    eax,0xfffff894
   61344:	sub    eax,r10d
   61347:	cmp    ecx,eax
   61349:	jge    61428 <_obstack_memory_used@@Base+0x147a8>
   6134f:	neg    edx
   61351:	test   r11d,r11d
   61354:	jne    5fd87 <_obstack_memory_used@@Base+0x13107>
   6135a:	mov    r11d,DWORD PTR [rsp+0x20]
   6135f:	mov    r12,rbx
   61362:	cmp    r11d,0x2b
   61366:	jne    5fd94 <_obstack_memory_used@@Base+0x13114>
   6136c:	mov    BYTE PTR [rsp+0x30],0x0
   61371:	mov    r9d,0x2
   61377:	jmp    61063 <_obstack_memory_used@@Base+0x143e3>
   6137c:	mov    rdi,r14
   6137f:	mov    esi,0x30
   61384:	mov    r14,rbx
   61387:	call   a1b0 <memset@plt>
   6138c:	jmp    5f8e4 <_obstack_memory_used@@Base+0x12c64>
   61391:	movzx  r8d,BYTE PTR [rsp+0x28]
   61397:	sub    rsp,0x8
   6139b:	xor    edi,edi
   6139d:	lea    rbx,[rip+0xc0e5]        # 6d489 <_obstack_memory_used@@Base+0x20809>
   613a4:	push   0x4
   613a6:	mov    rcx,QWORD PTR [rsp+0x18]
   613ab:	mov    rdx,rbx
   613ae:	mov    r9d,0x2b
   613b4:	mov    rsi,0xffffffffffffffff
   613bb:	mov    DWORD PTR [rsp+0x50],r8d
   613c0:	call   5f800 <_obstack_memory_used@@Base+0x12b80>
   613c5:	mov    r11d,0x2b
   613cb:	mov    r10,rax
   613ce:	pop    rax
   613cf:	pop    rdx
   613d0:	xor    edx,edx
   613d2:	mov    QWORD PTR [rsp+0x28],r10
   613d7:	mov    r8d,DWORD PTR [rsp+0x40]
   613dc:	mov    DWORD PTR [rsp+0x30],0x4
   613e4:	jmp    606d5 <_obstack_memory_used@@Base+0x13a55>
   613e9:	mov    esi,0x59
   613ee:	mov    r9d,0x4
   613f4:	mov    eax,0x270f
   613f9:	jmp    61037 <_obstack_memory_used@@Base+0x143b7>
   613fe:	movzx  eax,BYTE PTR [rsp+0x30]
   61403:	mov    BYTE PTR [rsp+0x40],0x0
   61408:	xor    eax,0x1
   6140b:	jmp    5fda9 <_obstack_memory_used@@Base+0x13129>
   61410:	mov    r12,rbx
   61413:	mov    r9d,0x4
   61419:	mov    eax,0x270f
   6141e:	jmp    61037 <_obstack_memory_used@@Base+0x143b7>
   61423:	call   a0a0 <__stack_chk_fail@plt>
   61428:	add    edx,0x64
   6142b:	test   r11d,r11d
   6142e:	je     6135a <_obstack_memory_used@@Base+0x146da>
   61434:	jmp    5fd87 <_obstack_memory_used@@Base+0x13107>
   61439:	mov    DWORD PTR [r15],0x4b
   61440:	jmp    5f9a7 <_obstack_memory_used@@Base+0x12d27>
   61445:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   61450:	endbr64 
   61454:	mov    r9,rdi
   61457:	mov    rdi,rdx
   6145a:	cmp    rcx,0x2
   6145e:	jg     614a8 <_obstack_memory_used@@Base+0x14828>
   61460:	test   r8,r8
   61463:	js     614f8 <_obstack_memory_used@@Base+0x14878>
   61469:	xor    edx,edx
   6146b:	imul   rdi,rdi,0x3c
   6146f:	seto   dl
   61472:	test   sil,sil
   61475:	jne    614e8 <_obstack_memory_used@@Base+0x14868>
   61477:	xor    ecx,ecx
   61479:	add    rdi,r8
   6147c:	seto   cl
   6147f:	xor    eax,eax
   61481:	or     edx,ecx
   61483:	jne    614a3 <_obstack_memory_used@@Base+0x14823>
   61485:	lea    rdx,[rdi+0x5a0]
   6148c:	xor    eax,eax
   6148e:	cmp    rdx,0xb40
   61495:	ja     614a3 <_obstack_memory_used@@Base+0x14823>
   61497:	imul   edi,edi,0x3c
   6149a:	mov    eax,0x1
   6149f:	mov    DWORD PTR [r9+0x18],edi
   614a3:	ret    
   614a4:	nop    DWORD PTR [rax+0x0]
   614a8:	test   r8,r8
   614ab:	jns    61469 <_obstack_memory_used@@Base+0x147e9>
   614ad:	movabs rdx,0xa3d70a3d70a3d70b
   614b7:	mov    rax,rdi
   614ba:	mov    rcx,rdi
   614bd:	imul   rdx
   614c0:	mov    rax,rdi
   614c3:	sar    rax,0x3f
   614c7:	add    rdx,rdi
   614ca:	sar    rdx,0x6
   614ce:	sub    rdx,rax
   614d1:	lea    rax,[rdx+rdx*4]
   614d5:	mov    rdi,rdx
   614d8:	lea    rax,[rax+rax*4]
   614dc:	shl    rax,0x2
   614e0:	sub    rcx,rax
   614e3:	jmp    614fa <_obstack_memory_used@@Base+0x1487a>
   614e5:	nop    DWORD PTR [rax]
   614e8:	xor    ecx,ecx
   614ea:	sub    rdi,r8
   614ed:	seto   cl
   614f0:	jmp    6147f <_obstack_memory_used@@Base+0x147ff>
   614f2:	nop    WORD PTR [rax+rax*1+0x0]
   614f8:	xor    ecx,ecx
   614fa:	mov    rax,rdi
   614fd:	shl    rax,0x4
   61501:	sub    rax,rdi
   61504:	lea    rdi,[rcx+rax*4]
   61508:	jmp    61485 <_obstack_memory_used@@Base+0x14805>
   6150d:	nop    DWORD PTR [rax]
   61510:	endbr64 
   61514:	test   rdi,rdi
   61517:	je     616b2 <_obstack_memory_used@@Base+0x14a32>
   6151d:	push   r15
   6151f:	mov    r15,rsi
   61522:	push   r14
   61524:	mov    r14,rdi
   61527:	push   r13
   61529:	push   r12
   6152b:	xor    r12d,r12d
   6152e:	push   rbp
   6152f:	push   rbx
   61530:	sub    rsp,0x18
   61534:	mov    eax,DWORD PTR [r14+0x8]
   61538:	test   eax,eax
   6153a:	jne    61613 <_obstack_memory_used@@Base+0x14993>
   61540:	test   r12,r12
   61543:	je     61680 <_obstack_memory_used@@Base+0x14a00>
   61549:	mov    eax,DWORD PTR [r14+0xc]
   6154d:	mov    rbx,QWORD PTR [r14+0x10]
   61551:	mov    rbp,r15
   61554:	mov    DWORD PTR [rsp+0xc],eax
   61558:	mov    r13d,eax
   6155b:	and    r13d,0x8
   6155f:	nop
   61560:	mov    rsi,rbp
   61563:	mov    rdi,r12
   61566:	call   9e80 <strcpy@plt>
   6156b:	mov    rsi,r12
   6156e:	mov    rdi,rbx
   61571:	call   48bc0 <argp_usage@@Base+0x5840>
   61576:	test   rax,rax
   61579:	jne    615a5 <_obstack_memory_used@@Base+0x14925>
   6157b:	test   r13d,r13d
   6157e:	je     615d0 <_obstack_memory_used@@Base+0x14950>
   61580:	mov    esi,0x2f
   61585:	mov    rdi,r12
   61588:	call   a130 <strrchr@plt>
   6158d:	test   rax,rax
   61590:	je     615d0 <_obstack_memory_used@@Base+0x14950>
   61592:	mov    BYTE PTR [rax],0x0
   61595:	mov    rsi,r12
   61598:	mov    rdi,rbx
   6159b:	call   48bc0 <argp_usage@@Base+0x5840>
   615a0:	test   rax,rax
   615a3:	je     6157b <_obstack_memory_used@@Base+0x148fb>
   615a5:	xor    ebx,ebx
   615a7:	mov    rdi,r12
   615aa:	call   9ce0 <free@plt>
   615af:	mov    eax,DWORD PTR [r14+0xc]
   615b3:	add    rsp,0x18
   615b7:	shr    eax,0x1d
   615ba:	xor    eax,0x1
   615bd:	and    eax,0x1
   615c0:	xor    eax,ebx
   615c2:	pop    rbx
   615c3:	pop    rbp
   615c4:	pop    r12
   615c6:	pop    r13
   615c8:	pop    r14
   615ca:	pop    r15
   615cc:	ret    
   615cd:	nop    DWORD PTR [rax]
   615d0:	test   DWORD PTR [rsp+0xc],0x40000000
   615d8:	jne    615f8 <_obstack_memory_used@@Base+0x14978>
   615da:	mov    esi,0x2f
   615df:	mov    rdi,rbp
   615e2:	call   a0f0 <strchr@plt>
   615e7:	test   rax,rax
   615ea:	je     615f8 <_obstack_memory_used@@Base+0x14978>
   615ec:	lea    rbp,[rax+0x1]
   615f0:	jmp    61560 <_obstack_memory_used@@Base+0x148e0>
   615f5:	nop    DWORD PTR [rax]
   615f8:	mov    rax,QWORD PTR [r14]
   615fb:	test   rax,rax
   615fe:	je     616a8 <_obstack_memory_used@@Base+0x14a28>
   61604:	mov    r14,rax
   61607:	mov    eax,DWORD PTR [r14+0x8]
   6160b:	test   eax,eax
   6160d:	je     61540 <_obstack_memory_used@@Base+0x148c0>
   61613:	mov    rbp,QWORD PTR [r14+0x20]
   61617:	mov    rbx,QWORD PTR [r14+0x10]
   6161b:	test   rbp,rbp
   6161e:	je     615f8 <_obstack_memory_used@@Base+0x14978>
   61620:	add    rbx,0x8
   61624:	xor    r13d,r13d
   61627:	jmp    61657 <_obstack_memory_used@@Base+0x149d7>
   61629:	nop    DWORD PTR [rax+0x0]
   61630:	xor    r8d,r8d
   61633:	xor    ecx,ecx
   61635:	xor    edx,edx
   61637:	mov    rsi,r15
   6163a:	mov    rdi,rbx
   6163d:	call   5d250 <_obstack_memory_used@@Base+0x105d0>
   61642:	test   eax,eax
   61644:	je     615a5 <_obstack_memory_used@@Base+0x14925>
   6164a:	add    r13,0x1
   6164e:	add    rbx,0x48
   61652:	cmp    rbp,r13
   61655:	je     615f8 <_obstack_memory_used@@Base+0x14978>
   61657:	mov    edx,DWORD PTR [rbx-0x8]
   6165a:	test   edx,0x8000000
   61660:	jne    61630 <_obstack_memory_used@@Base+0x149b0>
   61662:	mov    rdi,QWORD PTR [rbx]
   61665:	mov    rsi,r15
   61668:	call   48660 <argp_usage@@Base+0x52e0>
   6166d:	test   al,al
   6166f:	je     6164a <_obstack_memory_used@@Base+0x149ca>
   61671:	jmp    615a5 <_obstack_memory_used@@Base+0x14925>
   61676:	cs nop WORD PTR [rax+rax*1+0x0]
   61680:	mov    rdi,r15
   61683:	call   a060 <strlen@plt>
   61688:	lea    rdi,[rax+0x1]
   6168c:	call   a4a0 <malloc@plt>
   61691:	mov    r12,rax
   61694:	test   rax,rax
   61697:	jne    61549 <_obstack_memory_used@@Base+0x148c9>
   6169d:	call   19130 <__sprintf_chk@plt+0xe780>
   616a2:	nop    WORD PTR [rax+rax*1+0x0]
   616a8:	mov    ebx,0x1
   616ad:	jmp    615a7 <_obstack_memory_used@@Base+0x14927>
   616b2:	xor    eax,eax
   616b4:	ret    
   616b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   616c0:	endbr64 
   616c4:	push   r12
   616c6:	xor    r12d,r12d
   616c9:	push   rbx
   616ca:	mov    rbx,rsi
   616cd:	sub    rsp,0x8
   616d1:	test   rdi,rdi
   616d4:	je     616ea <_obstack_memory_used@@Base+0x14a6a>
   616d6:	mov    esi,0xa
   616db:	xor    r12d,r12d
   616de:	call   a0f0 <strchr@plt>
   616e3:	test   rax,rax
   616e6:	setne  r12b
   616ea:	test   rbx,rbx
   616ed:	je     61713 <_obstack_memory_used@@Base+0x14a93>
   616ef:	mov    rax,QWORD PTR [rbx]
   616f2:	test   rax,rax
   616f5:	je     61713 <_obstack_memory_used@@Base+0x14a93>
   616f7:	mov    rsi,QWORD PTR [rax+0x20]
   616fb:	mov    rdi,QWORD PTR [rax+0x10]
   616ff:	add    rbx,0x20
   61703:	call   616c0 <_obstack_memory_used@@Base+0x14a40>
   61708:	add    r12,rax
   6170b:	mov    rax,QWORD PTR [rbx]
   6170e:	test   rax,rax
   61711:	jne    616f7 <_obstack_memory_used@@Base+0x14a77>
   61713:	add    rsp,0x8
   61717:	mov    rax,r12
   6171a:	pop    rbx
   6171b:	pop    r12
   6171d:	ret    
   6171e:	xchg   ax,ax
   61720:	endbr64 
   61724:	push   r14
   61726:	push   r13
   61728:	push   r12
   6172a:	push   rbp
   6172b:	push   rbx
   6172c:	test   esi,esi
   6172e:	je     6178c <_obstack_memory_used@@Base+0x14b0c>
   61730:	mov    esi,esi
   61732:	mov    r12,rdi
   61735:	mov    r13,rdx
   61738:	lea    rax,[rsi*8+0x0]
   61740:	sub    rax,rsi
   61743:	lea    r14,[rdi+rax*8]
   61747:	mov    eax,DWORD PTR [r12+0x8]
   6174c:	mov    rbx,QWORD PTR [r12]
   61750:	test   eax,eax
   61752:	je     61783 <_obstack_memory_used@@Base+0x14b03>
   61754:	lea    rbp,[rax+rax*2]
   61758:	shl    rbp,0x4
   6175c:	add    rbp,rbx
   6175f:	nop
   61760:	mov    rdi,QWORD PTR [rbx]
   61763:	test   rdi,rdi
   61766:	je     6177a <_obstack_memory_used@@Base+0x14afa>
   61768:	test   BYTE PTR [rbx+0x18],0x2
   6176c:	jne    6177a <_obstack_memory_used@@Base+0x14afa>
   6176e:	mov    rsi,r13
   61771:	call   a320 <strcmp@plt>
   61776:	test   eax,eax
   61778:	je     6178f <_obstack_memory_used@@Base+0x14b0f>
   6177a:	add    rbx,0x30
   6177e:	cmp    rbx,rbp
   61781:	jne    61760 <_obstack_memory_used@@Base+0x14ae0>
   61783:	add    r12,0x38
   61787:	cmp    r14,r12
   6178a:	jne    61747 <_obstack_memory_used@@Base+0x14ac7>
   6178c:	xor    r12d,r12d
   6178f:	pop    rbx
   61790:	mov    rax,r12
   61793:	pop    rbp
   61794:	pop    r12
   61796:	pop    r13
   61798:	pop    r14
   6179a:	ret    
   6179b:	nop    DWORD PTR [rax+rax*1+0x0]
   617a0:	endbr64 
   617a4:	push   r13
   617a6:	mov    r13d,edi
   617a9:	push   r12
   617ab:	mov    r12d,esi
   617ae:	push   rbp
   617af:	mov    ebp,ecx
   617b1:	push   rbx
   617b2:	mov    ebx,r8d
   617b5:	sub    rsp,0x8
   617b9:	cmp    rdx,r9
   617bc:	je     617e3 <_obstack_memory_used@@Base+0x14b63>
   617be:	mov    rax,r9
   617c1:	mov    r10,QWORD PTR [rdx+0x10]
   617c5:	mov    ecx,DWORD PTR [r9+0x8]
   617c9:	mov    esi,DWORD PTR [rdx+0xc]
   617cc:	mov    edi,DWORD PTR [rdx+0x8]
   617cf:	mov    r9,QWORD PTR [r9+0x10]
   617d3:	mov    r8d,DWORD PTR [rax+0xc]
   617d7:	mov    rdx,r10
   617da:	call   617a0 <_obstack_memory_used@@Base+0x14b20>
   617df:	test   eax,eax
   617e1:	jne    617fc <_obstack_memory_used@@Base+0x14b7c>
   617e3:	mov    eax,ebx
   617e5:	mov    edx,r12d
   617e8:	sub    edx,ebx
   617ea:	sub    eax,r12d
   617ed:	xor    ebx,r12d
   617f0:	cmovns eax,edx
   617f3:	test   eax,eax
   617f5:	jne    617fc <_obstack_memory_used@@Base+0x14b7c>
   617f7:	mov    eax,ebp
   617f9:	sub    eax,r13d
   617fc:	add    rsp,0x8
   61800:	pop    rbx
   61801:	pop    rbp
   61802:	pop    r12
   61804:	pop    r13
   61806:	ret    
   61807:	nop    WORD PTR [rax+rax*1+0x0]
   61810:	endbr64 
   61814:	push   r15
   61816:	push   r14
   61818:	mov    r14,rdx
   6181b:	push   r13
   6181d:	push   r12
   6181f:	mov    r12,rsi
   61822:	push   rbp
   61823:	push   rbx
   61824:	mov    rbx,rdi
   61827:	sub    rsp,0x18
   6182b:	mov    rax,QWORD PTR [rdi+0x40]
   6182f:	mov    r13,QWORD PTR [rax+0x18]
   61833:	mov    rax,rdx
   61836:	sub    rax,r13
   61839:	mov    QWORD PTR [rsp+0x8],rax
   6183e:	xchg   ax,ax
   61840:	mov    rbp,QWORD PTR [rsp+0x8]
   61845:	add    rbp,QWORD PTR [rbx+0x18]
   61849:	lea    rdi,[rbp+0x1]
   6184d:	call   a4a0 <malloc@plt>
   61852:	mov    r15,rax
   61855:	test   rax,rax
   61858:	je     618bb <_obstack_memory_used@@Base+0x14c3b>
   6185a:	mov    rsi,r12
   6185d:	mov    rdi,rax
   61860:	call   9e80 <strcpy@plt>
   61865:	mov    rsi,QWORD PTR [rbx+0x10]
   61869:	mov    rdi,r15
   6186c:	add    rsi,r13
   6186f:	call   a7a0 <strcat@plt>
   61874:	mov    rdi,QWORD PTR [rbx+0x10]
   61878:	call   9ce0 <free@plt>
   6187d:	mov    rax,QWORD PTR [rbx+0x40]
   61881:	mov    QWORD PTR [rbx+0x10],r15
   61885:	mov    r8,r14
   61888:	mov    QWORD PTR [rbx+0x18],rbp
   6188c:	mov    rcx,r12
   6188f:	mov    rdx,r13
   61892:	mov    rsi,QWORD PTR [rax+0x10]
   61896:	mov    rax,QWORD PTR [rbx+0x38]
   6189a:	lea    rdi,[rax+0x58]
   6189e:	call   255e0 <__sprintf_chk@plt+0x1ac30>
   618a3:	mov    rbx,QWORD PTR [rbx+0x50]
   618a7:	test   rbx,rbx
   618aa:	jne    61840 <_obstack_memory_used@@Base+0x14bc0>
   618ac:	add    rsp,0x18
   618b0:	pop    rbx
   618b1:	pop    rbp
   618b2:	pop    r12
   618b4:	pop    r13
   618b6:	pop    r14
   618b8:	pop    r15
   618ba:	ret    
   618bb:	call   19130 <__sprintf_chk@plt+0xe780>
   618c0:	endbr64 
   618c4:	movzx  edx,BYTE PTR [rdi]
   618c7:	mov    rax,rdi
   618ca:	lea    r9,[rip+0xc377]        # 6dc48 <_obstack_memory_used@@Base+0x20fc8>
   618d1:	test   dl,dl
   618d3:	jne    618f5 <_obstack_memory_used@@Base+0x14c75>
   618d5:	jmp    61938 <_obstack_memory_used@@Base+0x14cb8>
   618d7:	nop    WORD PTR [rax+rax*1+0x0]
   618e0:	cmp    rax,rdi
   618e3:	je     61920 <_obstack_memory_used@@Base+0x14ca0>
   618e5:	mov    BYTE PTR [rax],dl
   618e7:	mov    rax,r8
   618ea:	movzx  edx,BYTE PTR [rdi+0x1]
   618ee:	mov    rdi,rcx
   618f1:	test   dl,dl
   618f3:	je     61930 <_obstack_memory_used@@Base+0x14cb0>
   618f5:	lea    rcx,[rdi+0x1]
   618f9:	lea    r8,[rax+0x1]
   618fd:	cmp    dl,0x5c
   61900:	jne    618e0 <_obstack_memory_used@@Base+0x14c60>
   61902:	movzx  esi,BYTE PTR [rdi+0x1]
   61906:	lea    edx,[rsi-0x30]
   61909:	cmp    dl,0x46
   6190c:	ja     61940 <_obstack_memory_used@@Base+0x14cc0>
   6190e:	movzx  edx,dl
   61911:	movsxd rdx,DWORD PTR [r9+rdx*4]
   61915:	add    rdx,r9
   61918:	notrack jmp rdx
   6191b:	nop    DWORD PTR [rax+rax*1+0x0]
   61920:	movzx  edx,BYTE PTR [rax+0x1]
   61924:	mov    rdi,rcx
   61927:	mov    rax,r8
   6192a:	test   dl,dl
   6192c:	jne    618f5 <_obstack_memory_used@@Base+0x14c75>
   6192e:	xchg   ax,ax
   61930:	cmp    rdi,rax
   61933:	je     61938 <_obstack_memory_used@@Base+0x14cb8>
   61935:	mov    BYTE PTR [rax],0x0
   61938:	ret    
   61939:	nop    DWORD PTR [rax+0x0]
   61940:	mov    BYTE PTR [rax],0x5c
   61943:	movzx  edx,BYTE PTR [rdi+0x1]
   61947:	test   dl,dl
   61949:	je     61a58 <_obstack_memory_used@@Base+0x14dd8>
   6194f:	mov    BYTE PTR [rax+0x1],dl
   61952:	add    rdi,0x2
   61956:	movzx  edx,BYTE PTR [rdi]
   61959:	add    rax,0x2
   6195d:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   6195f:	nop
   61960:	movsx  edx,BYTE PTR [rdi+0x2]
   61964:	sub    esi,0x30
   61967:	movsx  r10d,sil
   6196b:	lea    ecx,[rdx-0x30]
   6196e:	cmp    cl,0x7
   61971:	ja     61a40 <_obstack_memory_used@@Base+0x14dc0>
   61977:	lea    esi,[rdx+r10*8-0x30]
   6197c:	movsx  edx,BYTE PTR [rdi+0x3]
   61980:	lea    ecx,[rdx-0x30]
   61983:	cmp    cl,0x7
   61986:	jbe    61a63 <_obstack_memory_used@@Base+0x14de3>
   6198c:	mov    BYTE PTR [rax],sil
   6198f:	add    rdi,0x3
   61993:	movzx  edx,BYTE PTR [rdi]
   61996:	mov    rax,r8
   61999:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   6199e:	mov    BYTE PTR [rax],0x7f
   619a1:	add    rdi,0x2
   619a5:	movzx  edx,BYTE PTR [rdi]
   619a8:	mov    rax,r8
   619ab:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   619b0:	mov    BYTE PTR [rax],0xb
   619b3:	add    rdi,0x2
   619b7:	movzx  edx,BYTE PTR [rdi]
   619ba:	mov    rax,r8
   619bd:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   619c2:	mov    BYTE PTR [rax],0x9
   619c5:	add    rdi,0x2
   619c9:	movzx  edx,BYTE PTR [rdi]
   619cc:	mov    rax,r8
   619cf:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   619d4:	mov    BYTE PTR [rax],0x7
   619d7:	add    rdi,0x2
   619db:	movzx  edx,BYTE PTR [rdi]
   619de:	mov    rax,r8
   619e1:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   619e6:	mov    BYTE PTR [rax],0x5c
   619e9:	add    rdi,0x2
   619ed:	movzx  edx,BYTE PTR [rdi]
   619f0:	mov    rax,r8
   619f3:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   619f8:	mov    BYTE PTR [rax],0xd
   619fb:	add    rdi,0x2
   619ff:	movzx  edx,BYTE PTR [rdi]
   61a02:	mov    rax,r8
   61a05:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   61a0a:	mov    BYTE PTR [rax],0xa
   61a0d:	add    rdi,0x2
   61a11:	movzx  edx,BYTE PTR [rdi]
   61a14:	mov    rax,r8
   61a17:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   61a1c:	mov    BYTE PTR [rax],0xc
   61a1f:	add    rdi,0x2
   61a23:	movzx  edx,BYTE PTR [rdi]
   61a26:	mov    rax,r8
   61a29:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   61a2e:	mov    BYTE PTR [rax],0x8
   61a31:	add    rdi,0x2
   61a35:	movzx  edx,BYTE PTR [rdi]
   61a38:	mov    rax,r8
   61a3b:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   61a40:	mov    BYTE PTR [rax],sil
   61a43:	add    rdi,0x2
   61a47:	movzx  edx,BYTE PTR [rdi]
   61a4a:	mov    rax,r8
   61a4d:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   61a52:	nop    WORD PTR [rax+rax*1+0x0]
   61a58:	mov    rax,r8
   61a5b:	mov    rdi,rcx
   61a5e:	jmp    61930 <_obstack_memory_used@@Base+0x14cb0>
   61a63:	lea    edx,[rdx+rsi*8-0x30]
   61a67:	add    rdi,0x4
   61a6b:	mov    BYTE PTR [rax],dl
   61a6d:	mov    rax,r8
   61a70:	movzx  edx,BYTE PTR [rdi]
   61a73:	jmp    618f1 <_obstack_memory_used@@Base+0x14c71>
   61a78:	nop    DWORD PTR [rax+rax*1+0x0]
   61a80:	endbr64 
   61a84:	push   r15
   61a86:	mov    r15,rdi
   61a89:	push   r14
   61a8b:	mov    r14,r8
   61a8e:	push   r13
   61a90:	mov    r13,rcx
   61a93:	push   r12
   61a95:	mov    r12,rdx
   61a98:	push   rbp
   61a99:	mov    rbp,rsi
   61a9c:	push   rbx
   61a9d:	sub    rsp,0x28
   61aa1:	mov    rcx,QWORD PTR [rdx]
   61aa4:	mov    rax,QWORD PTR fs:0x28
   61aad:	mov    QWORD PTR [rsp+0x18],rax
   61ab2:	xor    eax,eax
   61ab4:	movzx  eax,BYTE PTR [rcx]
   61ab7:	mov    rbx,rcx
   61aba:	cmp    al,0x20
   61abc:	jne    61acc <_obstack_memory_used@@Base+0x14e4c>
   61abe:	xchg   ax,ax
   61ac0:	movzx  eax,BYTE PTR [rbx+0x1]
   61ac4:	add    rbx,0x1
   61ac8:	cmp    al,0x20
   61aca:	je     61ac0 <_obstack_memory_used@@Base+0x14e40>
   61acc:	cmp    al,0x9
   61ace:	je     61ac0 <_obstack_memory_used@@Base+0x14e40>
   61ad0:	movsx  edx,al
   61ad3:	sub    edx,0x30
   61ad6:	cmp    edx,0x9
   61ad9:	jbe    61b50 <_obstack_memory_used@@Base+0x14ed0>
   61adb:	xor    r15d,r15d
   61ade:	test   al,al
   61ae0:	jne    61b10 <_obstack_memory_used@@Base+0x14e90>
   61ae2:	mov    rax,QWORD PTR [rsp+0x18]
   61ae7:	sub    rax,QWORD PTR fs:0x28
   61af0:	jne    61cf3 <_obstack_memory_used@@Base+0x15073>
   61af6:	add    rsp,0x28
   61afa:	mov    eax,r15d
   61afd:	pop    rbx
   61afe:	pop    rbp
   61aff:	pop    r12
   61b01:	pop    r13
   61b03:	pop    r14
   61b05:	pop    r15
   61b07:	ret    
   61b08:	nop    DWORD PTR [rax+rax*1+0x0]
   61b10:	mov    rax,QWORD PTR [rip+0x1d9f1]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   61b17:	test   rax,rax
   61b1a:	je     61b1e <_obstack_memory_used@@Base+0x14e9e>
   61b1c:	call   rax
   61b1e:	mov    edx,0x5
   61b23:	lea    rsi,[rip+0xc24e]        # 6dd78 <_obstack_memory_used@@Base+0x210f8>
   61b2a:	xor    edi,edi
   61b2c:	xor    r15d,r15d
   61b2f:	call   a040 <dcgettext@plt>
   61b34:	xor    esi,esi
   61b36:	xor    edi,edi
   61b38:	mov    rdx,rax
   61b3b:	xor    eax,eax
   61b3d:	call   a640 <error@plt>
   61b42:	mov    DWORD PTR [rip+0x1d578],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   61b4c:	jmp    61ae2 <_obstack_memory_used@@Base+0x14e62>
   61b4e:	xchg   ax,ax
   61b50:	lea    rsi,[rsp+0x10]
   61b55:	mov    edx,0xa
   61b5a:	mov    rdi,rbx
   61b5d:	add    rbp,r15
   61b60:	mov    QWORD PTR [rsp],rcx
   61b64:	call   a710 <strtoumax@plt>
   61b69:	mov    rcx,QWORD PTR [rsp]
   61b6d:	sub    rbp,rcx
   61b70:	cmp    rbp,rax
   61b73:	jb     61bc0 <_obstack_memory_used@@Base+0x14f40>
   61b75:	lea    rbx,[rcx+rax*1]
   61b79:	mov    rax,QWORD PTR [rsp+0x10]
   61b7e:	movzx  edx,BYTE PTR [rax]
   61b81:	cmp    dl,0x20
   61b84:	sete   bpl
   61b88:	cmp    dl,0x9
   61b8b:	sete   dl
   61b8e:	or     bpl,dl
   61b91:	mov    BYTE PTR [rsp],bpl
   61b95:	jne    61c10 <_obstack_memory_used@@Base+0x14f90>
   61b97:	mov    rax,QWORD PTR [rip+0x1d96a]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   61b9e:	test   rax,rax
   61ba1:	je     61ba5 <_obstack_memory_used@@Base+0x14f25>
   61ba3:	call   rax
   61ba5:	mov    edx,0x5
   61baa:	lea    rsi,[rip+0xc227]        # 6ddd8 <_obstack_memory_used@@Base+0x21158>
   61bb1:	jmp    61b2a <_obstack_memory_used@@Base+0x14eaa>
   61bb6:	cs nop WORD PTR [rax+rax*1+0x0]
   61bc0:	mov    r12d,DWORD PTR [rsp+0x10]
   61bc5:	mov    rax,QWORD PTR [rip+0x1d93c]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   61bcc:	sub    r12d,ebx
   61bcf:	test   rax,rax
   61bd2:	je     61bd6 <_obstack_memory_used@@Base+0x14f56>
   61bd4:	call   rax
   61bd6:	mov    edx,0x5
   61bdb:	lea    rsi,[rip+0xc1c6]        # 6dda8 <_obstack_memory_used@@Base+0x21128>
   61be2:	xor    edi,edi
   61be4:	xor    r15d,r15d
   61be7:	call   a040 <dcgettext@plt>
   61bec:	mov    r8,rbx
   61bef:	mov    ecx,r12d
   61bf2:	xor    esi,esi
   61bf4:	mov    rdx,rax
   61bf7:	xor    edi,edi
   61bf9:	xor    eax,eax
   61bfb:	call   a640 <error@plt>
   61c00:	mov    DWORD PTR [rip+0x1d4ba],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   61c0a:	jmp    61ae2 <_obstack_memory_used@@Base+0x14e62>
   61c0f:	nop
   61c10:	mov    rbp,rax
   61c13:	movzx  edx,BYTE PTR [rbp+0x1]
   61c17:	add    rbp,0x1
   61c1b:	cmp    dl,0x20
   61c1e:	sete   r15b
   61c22:	cmp    dl,0x9
   61c25:	sete   dl
   61c28:	or     r15b,dl
   61c2b:	jne    61c13 <_obstack_memory_used@@Base+0x14f93>
   61c2d:	cmp    rax,rbp
   61c30:	je     61b97 <_obstack_memory_used@@Base+0x14f17>
   61c36:	mov    esi,0x3d
   61c3b:	mov    rdi,rbp
   61c3e:	call   a0f0 <strchr@plt>
   61c43:	test   rax,rax
   61c46:	sete   dl
   61c49:	cmp    rbx,rax
   61c4c:	setbe  cl
   61c4f:	or     dl,cl
   61c51:	jne    61c78 <_obstack_memory_used@@Base+0x14ff8>
   61c53:	cmp    BYTE PTR [rbx-0x1],0xa
   61c57:	je     61cb6 <_obstack_memory_used@@Base+0x15036>
   61c59:	mov    rax,QWORD PTR [rip+0x1d8a8]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   61c60:	test   rax,rax
   61c63:	je     61c67 <_obstack_memory_used@@Base+0x14fe7>
   61c65:	call   rax
   61c67:	mov    edx,0x5
   61c6c:	lea    rsi,[rip+0xc1cd]        # 6de40 <_obstack_memory_used@@Base+0x211c0>
   61c73:	jmp    61b2a <_obstack_memory_used@@Base+0x14eaa>
   61c78:	mov    rax,QWORD PTR [rip+0x1d889]        # 7f508 <obstack_alloc_failed_handler@@Base+0x6d0>
   61c7f:	test   rax,rax
   61c82:	je     61c86 <_obstack_memory_used@@Base+0x15006>
   61c84:	call   rax
   61c86:	mov    edx,0x5
   61c8b:	lea    rsi,[rip+0xc17e]        # 6de10 <_obstack_memory_used@@Base+0x21190>
   61c92:	xor    edi,edi
   61c94:	call   a040 <dcgettext@plt>
   61c99:	xor    esi,esi
   61c9b:	xor    edi,edi
   61c9d:	mov    rdx,rax
   61ca0:	xor    eax,eax
   61ca2:	call   a640 <error@plt>
   61ca7:	mov    DWORD PTR [rip+0x1d413],0x2        # 7f0c4 <obstack_alloc_failed_handler@@Base+0x28c>
   61cb1:	jmp    61ae2 <_obstack_memory_used@@Base+0x14e62>
   61cb6:	mov    rcx,rbx
   61cb9:	mov    BYTE PTR [rbx-0x1],0x0
   61cbd:	lea    rdx,[rax+0x1]
   61cc1:	mov    rsi,rbp
   61cc4:	sub    rcx,rax
   61cc7:	mov    BYTE PTR [rax],0x0
   61cca:	mov    rdi,r14
   61ccd:	mov    QWORD PTR [rsp+0x8],rax
   61cd2:	sub    rcx,0x2
   61cd6:	call   r13
   61cd9:	mov    rax,QWORD PTR [rsp+0x8]
   61cde:	movzx  r15d,BYTE PTR [rsp]
   61ce3:	mov    BYTE PTR [rax],0x3d
   61ce6:	mov    BYTE PTR [rbx-0x1],0xa
   61cea:	mov    QWORD PTR [r12],rbx
   61cee:	jmp    61ae2 <_obstack_memory_used@@Base+0x14e62>
   61cf3:	call   a0a0 <__stack_chk_fail@plt>
   61cf8:	nop    DWORD PTR [rax+rax*1+0x0]
   61d00:	endbr64 
   61d04:	push   r15
   61d06:	push   r14
   61d08:	push   r13
   61d0a:	push   r12
   61d0c:	push   rbp
   61d0d:	push   rbx
   61d0e:	sub    rsp,0x48
   61d12:	cmp    BYTE PTR [rip+0x1e107],0x0        # 7fe20 <argp_program_bug_address@@Base+0x170>
   61d19:	mov    r15,QWORD PTR [rdi]
   61d1c:	mov    QWORD PTR [rsp+0x28],rdi
   61d21:	mov    DWORD PTR [rsp+0x24],esi
   61d25:	mov    QWORD PTR [rsp+0x30],rdx
   61d2a:	mov    QWORD PTR [rsp+0x38],rcx
   61d2f:	je     62344 <_obstack_memory_used@@Base+0x156c4>
   61d35:	mov    r13,QWORD PTR [rip+0x1d204]        # 7ef40 <obstack_alloc_failed_handler@@Base+0x108>
   61d3c:	test   r13,r13
   61d3f:	je     622a9 <_obstack_memory_used@@Base+0x15629>
   61d45:	xor    edx,edx
   61d47:	jmp    61d5d <_obstack_memory_used@@Base+0x150dd>
   61d49:	nop    DWORD PTR [rax+0x0]
   61d50:	mov    r13,QWORD PTR [r13+0x0]
   61d54:	test   r13,r13
   61d57:	je     61f8c <_obstack_memory_used@@Base+0x1530c>
   61d5d:	mov    eax,DWORD PTR [rsp+0x24]
   61d61:	and    eax,DWORD PTR [r13+0xc]
   61d65:	je     61d50 <_obstack_memory_used@@Base+0x150d0>
   61d67:	mov    rdx,QWORD PTR [r13+0x48]
   61d6b:	add    rdx,0x1
   61d6f:	mov    rdi,rdx
   61d72:	mov    QWORD PTR [rsp],rdx
   61d76:	shl    rdi,0x4
   61d7a:	call   a4a0 <malloc@plt>
   61d7f:	mov    rbp,rax
   61d82:	test   rax,rax
   61d85:	je     62383 <_obstack_memory_used@@Base+0x15703>
   61d8b:	cmp    BYTE PTR [r15],0x0
   61d8f:	mov    rdx,QWORD PTR [rsp]
   61d93:	je     62248 <_obstack_memory_used@@Base+0x155c8>
   61d99:	lea    rax,[r13+0x18]
   61d9d:	mov    DWORD PTR [rsp+0x20],0x0
   61da5:	xor    ebx,ebx
   61da7:	mov    QWORD PTR [rsp+0x8],rax
   61dac:	mov    QWORD PTR [rsp],0x0
   61db4:	jmp    61e58 <_obstack_memory_used@@Base+0x151d8>
   61db9:	nop    DWORD PTR [rax+0x0]
   61dc0:	mov    r14,QWORD PTR [rbp+0x0]
   61dc4:	mov    r12,QWORD PTR [rbp+0x8]
   61dc8:	test   r14,r14
   61dcb:	je     61df9 <_obstack_memory_used@@Base+0x15179>
   61dcd:	mov    rdi,QWORD PTR [rip+0x1e084]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61dd4:	mov    rax,QWORD PTR [rip+0x1e085]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   61ddb:	sub    rax,rdi
   61dde:	cmp    r14,rax
   61de1:	ja     62208 <_obstack_memory_used@@Base+0x15588>
   61de7:	mov    rdx,r14
   61dea:	mov    rsi,r15
   61ded:	call   a420 <memcpy@plt>
   61df2:	add    QWORD PTR [rip+0x1e05f],r14        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61df9:	mov    eax,DWORD PTR [r13+0x10]
   61dfd:	add    QWORD PTR [rsp],0x1
   61e02:	mov    rcx,QWORD PTR [rsp]
   61e06:	test   eax,eax
   61e08:	je     62030 <_obstack_memory_used@@Base+0x153b0>
   61e0e:	cmp    rcx,rax
   61e11:	jae    62030 <_obstack_memory_used@@Base+0x153b0>
   61e17:	mov    rdi,QWORD PTR [rip+0x1e03a]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61e1e:	mov    rax,QWORD PTR [rip+0x1e03b]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   61e25:	sub    rax,rdi
   61e28:	cmp    r12,rax
   61e2b:	ja     62228 <_obstack_memory_used@@Base+0x155a8>
   61e31:	mov    rsi,r15
   61e34:	mov    rdx,r12
   61e37:	add    r15,r12
   61e3a:	call   a420 <memcpy@plt>
   61e3f:	add    QWORD PTR [rip+0x1e012],r12        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61e46:	cmp    BYTE PTR [r15],0x0
   61e4a:	je     62248 <_obstack_memory_used@@Base+0x155c8>
   61e50:	mov    rax,QWORD PTR [r13+0x48]
   61e54:	lea    rdx,[rax+0x1]
   61e58:	mov    rdi,QWORD PTR [rsp+0x8]
   61e5d:	xor    r8d,r8d
   61e60:	mov    rcx,rbp
   61e63:	mov    rsi,r15
   61e66:	call   5d250 <_obstack_memory_used@@Base+0x105d0>
   61e6b:	test   eax,eax
   61e6d:	je     61dc0 <_obstack_memory_used@@Base+0x15140>
   61e73:	mov    rdi,r15
   61e76:	call   a060 <strlen@plt>
   61e7b:	mov    rdi,QWORD PTR [rip+0x1dfd6]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61e82:	mov    rdx,rax
   61e85:	mov    r12,rax
   61e88:	mov    rax,QWORD PTR [rip+0x1dfd1]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   61e8f:	sub    rax,rdi
   61e92:	cmp    rdx,rax
   61e95:	ja     621a0 <_obstack_memory_used@@Base+0x15520>
   61e9b:	mov    rsi,r15
   61e9e:	mov    QWORD PTR [rsp+0x10],rdx
   61ea3:	call   a420 <memcpy@plt>
   61ea8:	mov    rdx,QWORD PTR [rsp+0x10]
   61ead:	add    QWORD PTR [rip+0x1dfa4],rdx        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61eb4:	mov    eax,DWORD PTR [r13+0x8]
   61eb8:	add    r15,r12
   61ebb:	test   eax,eax
   61ebd:	jne    61e46 <_obstack_memory_used@@Base+0x151c6>
   61ebf:	mov    rdi,r15
   61ec2:	call   a060 <strlen@plt>
   61ec7:	mov    rdi,QWORD PTR [rip+0x1df8a]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61ece:	mov    rbx,rax
   61ed1:	mov    rax,QWORD PTR [rip+0x1df88]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   61ed8:	sub    rax,rdi
   61edb:	cmp    rbx,rax
   61ede:	ja     62329 <_obstack_memory_used@@Base+0x156a9>
   61ee4:	mov    rdx,rbx
   61ee7:	mov    rsi,r15
   61eea:	call   a420 <memcpy@plt>
   61eef:	mov    rax,QWORD PTR [rip+0x1df62]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61ef6:	add    rax,rbx
   61ef9:	cmp    QWORD PTR [rip+0x1df60],rax        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   61f00:	mov    QWORD PTR [rip+0x1df51],rax        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61f07:	je     6225c <_obstack_memory_used@@Base+0x155dc>
   61f0d:	lea    rdx,[rax+0x1]
   61f11:	mov    rdi,rbp
   61f14:	mov    QWORD PTR [rip+0x1df3d],rdx        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61f1b:	mov    BYTE PTR [rax],0x0
   61f1e:	call   9ce0 <free@plt>
   61f23:	mov    r15,QWORD PTR [rip+0x1df26]        # 7fe50 <argp_program_bug_address@@Base+0x1a0>
   61f2a:	mov    rax,QWORD PTR [rip+0x1df27]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61f31:	cmp    r15,rax
   61f34:	je     62280 <_obstack_memory_used@@Base+0x15600>
   61f3a:	mov    rdx,QWORD PTR [rip+0x1df2f]        # 7fe70 <argp_program_bug_address@@Base+0x1c0>
   61f41:	add    rax,rdx
   61f44:	not    rdx
   61f47:	and    rax,rdx
   61f4a:	mov    rdx,QWORD PTR [rip+0x1df0f]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   61f51:	mov    rsi,rax
   61f54:	sub    rsi,QWORD PTR [rip+0x1deed]        # 7fe48 <argp_program_bug_address@@Base+0x198>
   61f5b:	mov    rcx,rdx
   61f5e:	sub    rcx,QWORD PTR [rip+0x1dee3]        # 7fe48 <argp_program_bug_address@@Base+0x198>
   61f65:	cmp    rsi,rcx
   61f68:	cmovbe rdx,rax
   61f6c:	mov    QWORD PTR [rip+0x1dee5],rdx        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   61f73:	mov    r13,QWORD PTR [r13+0x0]
   61f77:	mov    QWORD PTR [rip+0x1ded2],rdx        # 7fe50 <argp_program_bug_address@@Base+0x1a0>
   61f7e:	mov    edx,0x1
   61f83:	test   r13,r13
   61f86:	jne    61d5d <_obstack_memory_used@@Base+0x150dd>
   61f8c:	test   dl,dl
   61f8e:	je     622a9 <_obstack_memory_used@@Base+0x15629>
   61f94:	mov    rax,QWORD PTR [rsp+0x30]
   61f99:	mov    rbp,r15
   61f9c:	test   rax,rax
   61f9f:	je     61fae <_obstack_memory_used@@Base+0x1532e>
   61fa1:	mov    rsi,QWORD PTR [rsp+0x38]
   61fa6:	mov    rdi,r15
   61fa9:	call   rax
   61fab:	mov    rbp,rax
   61fae:	mov    rax,QWORD PTR [rsp+0x28]
   61fb3:	mov    rdi,QWORD PTR [rax]
   61fb6:	call   9ce0 <free@plt>
   61fbb:	test   rbp,rbp
   61fbe:	je     61fee <_obstack_memory_used@@Base+0x1536e>
   61fc0:	mov    rdi,rbp
   61fc3:	call   a060 <strlen@plt>
   61fc8:	lea    r12,[rax+0x1]
   61fcc:	mov    rdi,r12
   61fcf:	call   a4a0 <malloc@plt>
   61fd4:	mov    rdi,rax
   61fd7:	test   rax,rax
   61fda:	je     62383 <_obstack_memory_used@@Base+0x15703>
   61fe0:	mov    rsi,rbp
   61fe3:	mov    rdx,r12
   61fe6:	call   a420 <memcpy@plt>
   61feb:	mov    rbp,rax
   61fee:	mov    rax,QWORD PTR [rsp+0x28]
   61ff3:	cmp    QWORD PTR [rip+0x1de4e],r15        # 7fe48 <argp_program_bug_address@@Base+0x198>
   61ffa:	mov    QWORD PTR [rax],rbp
   61ffd:	jae    6228c <_obstack_memory_used@@Base+0x1560c>
   62003:	cmp    QWORD PTR [rip+0x1de56],r15        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   6200a:	jbe    6228c <_obstack_memory_used@@Base+0x1560c>
   62010:	mov    QWORD PTR [rip+0x1de39],r15        # 7fe50 <argp_program_bug_address@@Base+0x1a0>
   62017:	mov    QWORD PTR [rip+0x1de3a],r15        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6201e:	add    rsp,0x48
   62022:	pop    rbx
   62023:	pop    rbp
   62024:	pop    r12
   62026:	pop    r13
   62028:	pop    r14
   6202a:	pop    r15
   6202c:	ret    
   6202d:	nop    DWORD PTR [rax]
   62030:	mov    r14,QWORD PTR [r13+0x58]
   62034:	test   r14,r14
   62037:	je     61eb4 <_obstack_memory_used@@Base+0x15234>
   6203d:	mov    QWORD PTR [rsp+0x10],r12
   62042:	jmp    62058 <_obstack_memory_used@@Base+0x153d8>
   62044:	nop    DWORD PTR [rax+0x0]
   62048:	test   eax,eax
   6204a:	je     62110 <_obstack_memory_used@@Base+0x15490>
   62050:	mov    r14,QWORD PTR [r14]
   62053:	test   r14,r14
   62056:	je     62088 <_obstack_memory_used@@Base+0x15408>
   62058:	mov    eax,DWORD PTR [r14+0x8]
   6205c:	cmp    eax,0x1
   6205f:	je     62098 <_obstack_memory_used@@Base+0x15418>
   62061:	cmp    eax,0x2
   62064:	jne    62048 <_obstack_memory_used@@Base+0x153c8>
   62066:	mov    eax,DWORD PTR [r14+0x10]
   6206a:	cmp    eax,0x2
   6206d:	ja     620f8 <_obstack_memory_used@@Base+0x15478>
   62073:	test   eax,eax
   62075:	jne    62158 <_obstack_memory_used@@Base+0x154d8>
   6207b:	mov    r14,QWORD PTR [r14]
   6207e:	xor    ebx,ebx
   62080:	test   r14,r14
   62083:	jne    62058 <_obstack_memory_used@@Base+0x153d8>
   62085:	nop    DWORD PTR [rax]
   62088:	mov    r12,QWORD PTR [rsp+0x10]
   6208d:	jmp    61eb4 <_obstack_memory_used@@Base+0x15234>
   62092:	nop    WORD PTR [rax+rax*1+0x0]
   62098:	mov    rdx,QWORD PTR [r14+0x10]
   6209c:	shl    rdx,0x4
   620a0:	add    rdx,rbp
   620a3:	mov    rax,QWORD PTR [rdx]
   620a6:	cmp    rax,0xffffffffffffffff
   620aa:	je     62050 <_obstack_memory_used@@Base+0x153d0>
   620ac:	mov    rdx,QWORD PTR [rdx+0x8]
   620b0:	cmp    rdx,0xffffffffffffffff
   620b4:	je     62050 <_obstack_memory_used@@Base+0x153d0>
   620b6:	sub    rdx,rax
   620b9:	lea    r8,[r15+rax*1]
   620bd:	mov    r12,rdx
   620c0:	test   ebx,ebx
   620c2:	jne    621d8 <_obstack_memory_used@@Base+0x15558>
   620c8:	mov    rdi,QWORD PTR [rip+0x1dd89]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   620cf:	mov    rax,QWORD PTR [rip+0x1dd8a]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   620d6:	sub    rax,rdi
   620d9:	cmp    r12,rax
   620dc:	ja     62132 <_obstack_memory_used@@Base+0x154b2>
   620de:	mov    rdx,r12
   620e1:	mov    rsi,r8
   620e4:	call   a420 <memcpy@plt>
   620e9:	add    QWORD PTR [rip+0x1dd68],r12        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   620f0:	jmp    62050 <_obstack_memory_used@@Base+0x153d0>
   620f5:	nop    DWORD PTR [rax]
   620f8:	lea    edx,[rax-0x3]
   620fb:	cmp    edx,0x1
   620fe:	cmovbe ebx,eax
   62101:	jmp    62050 <_obstack_memory_used@@Base+0x153d0>
   62106:	cs nop WORD PTR [rax+rax*1+0x0]
   62110:	test   ebx,ebx
   62112:	jne    62170 <_obstack_memory_used@@Base+0x154f0>
   62114:	mov    r8,QWORD PTR [r14+0x10]
   62118:	mov    rdi,QWORD PTR [rip+0x1dd39]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6211f:	mov    rsi,QWORD PTR [rip+0x1dd3a]        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   62126:	mov    r12,QWORD PTR [r14+0x18]
   6212a:	sub    rsi,rdi
   6212d:	cmp    r12,rsi
   62130:	jbe    620de <_obstack_memory_used@@Base+0x1545e>
   62132:	lea    rdi,[rip+0x1dd07]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   62139:	mov    rsi,r12
   6213c:	mov    QWORD PTR [rsp+0x18],r8
   62141:	call   4ca80 <_obstack_newchunk@@Base>
   62146:	mov    rdi,QWORD PTR [rip+0x1dd0b]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6214d:	mov    r8,QWORD PTR [rsp+0x18]
   62152:	jmp    620de <_obstack_memory_used@@Base+0x1545e>
   62154:	nop    DWORD PTR [rax+0x0]
   62158:	mov    ecx,DWORD PTR [rsp+0x20]
   6215c:	test   ecx,ecx
   6215e:	je     621c8 <_obstack_memory_used@@Base+0x15548>
   62160:	lea    edx,[rcx-0x3]
   62163:	cmp    edx,0x1
   62166:	jbe    621c8 <_obstack_memory_used@@Base+0x15548>
   62168:	mov    ebx,eax
   6216a:	jmp    62050 <_obstack_memory_used@@Base+0x153d0>
   6216f:	nop
   62170:	mov    rdx,QWORD PTR [r14+0x18]
   62174:	mov    rsi,QWORD PTR [r14+0x10]
   62178:	mov    edi,ebx
   6217a:	call   3b3e0 <__sprintf_chk@plt+0x30a30>
   6217f:	mov    r8,rax
   62182:	lea    eax,[rbx-0x1]
   62185:	cmp    eax,0x1
   62188:	ja     62118 <_obstack_memory_used@@Base+0x15498>
   6218a:	mov    ebx,DWORD PTR [rsp+0x20]
   6218e:	mov    DWORD PTR [rsp+0x20],0x0
   62196:	jmp    62118 <_obstack_memory_used@@Base+0x15498>
   62198:	nop    DWORD PTR [rax+rax*1+0x0]
   621a0:	mov    rsi,rdx
   621a3:	lea    rdi,[rip+0x1dc96]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   621aa:	mov    QWORD PTR [rsp+0x10],rdx
   621af:	call   4ca80 <_obstack_newchunk@@Base>
   621b4:	mov    rdi,QWORD PTR [rip+0x1dc9d]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   621bb:	mov    rdx,QWORD PTR [rsp+0x10]
   621c0:	jmp    61e9b <_obstack_memory_used@@Base+0x1521b>
   621c5:	nop    DWORD PTR [rax]
   621c8:	mov    DWORD PTR [rsp+0x20],ebx
   621cc:	mov    ebx,eax
   621ce:	jmp    62050 <_obstack_memory_used@@Base+0x153d0>
   621d3:	nop    DWORD PTR [rax+rax*1+0x0]
   621d8:	mov    rsi,r8
   621db:	mov    edi,ebx
   621dd:	call   3b3e0 <__sprintf_chk@plt+0x30a30>
   621e2:	mov    r8,rax
   621e5:	lea    eax,[rbx-0x1]
   621e8:	cmp    eax,0x1
   621eb:	ja     620c8 <_obstack_memory_used@@Base+0x15448>
   621f1:	mov    ebx,DWORD PTR [rsp+0x20]
   621f5:	mov    DWORD PTR [rsp+0x20],0x0
   621fd:	jmp    620c8 <_obstack_memory_used@@Base+0x15448>
   62202:	nop    WORD PTR [rax+rax*1+0x0]
   62208:	lea    rdi,[rip+0x1dc31]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   6220f:	mov    rsi,r14
   62212:	call   4ca80 <_obstack_newchunk@@Base>
   62217:	mov    rdi,QWORD PTR [rip+0x1dc3a]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6221e:	jmp    61de7 <_obstack_memory_used@@Base+0x15167>
   62223:	nop    DWORD PTR [rax+rax*1+0x0]
   62228:	lea    rdi,[rip+0x1dc11]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   6222f:	mov    rsi,r12
   62232:	call   4ca80 <_obstack_newchunk@@Base>
   62237:	mov    rdi,QWORD PTR [rip+0x1dc1a]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6223e:	jmp    61e31 <_obstack_memory_used@@Base+0x151b1>
   62243:	nop    DWORD PTR [rax+rax*1+0x0]
   62248:	mov    rax,QWORD PTR [rip+0x1dc09]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6224f:	cmp    QWORD PTR [rip+0x1dc0a],rax        # 7fe60 <argp_program_bug_address@@Base+0x1b0>
   62256:	jne    61f0d <_obstack_memory_used@@Base+0x1528d>
   6225c:	mov    esi,0x1
   62261:	lea    rdi,[rip+0x1dbd8]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   62268:	call   4ca80 <_obstack_newchunk@@Base>
   6226d:	mov    rax,QWORD PTR [rip+0x1dbe4]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   62274:	jmp    61f0d <_obstack_memory_used@@Base+0x1528d>
   62279:	nop    DWORD PTR [rax+0x0]
   62280:	or     BYTE PTR [rip+0x1dc09],0x2        # 7fe90 <argp_program_bug_address@@Base+0x1e0>
   62287:	jmp    61f3a <_obstack_memory_used@@Base+0x152ba>
   6228c:	add    rsp,0x48
   62290:	mov    rsi,r15
   62293:	lea    rdi,[rip+0x1dba6]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   6229a:	pop    rbx
   6229b:	pop    rbp
   6229c:	pop    r12
   6229e:	pop    r13
   622a0:	pop    r14
   622a2:	pop    r15
   622a4:	jmp    4cbf0 <_obstack_free@@Base>
   622a9:	mov    rax,QWORD PTR [rsp+0x30]
   622ae:	test   rax,rax
   622b1:	je     6201e <_obstack_memory_used@@Base+0x1539e>
   622b7:	mov    rbx,QWORD PTR [rsp+0x28]
   622bc:	mov    rdi,r15
   622bf:	mov    rsi,QWORD PTR [rsp+0x38]
   622c4:	mov    QWORD PTR [rbx],0x0
   622cb:	call   rax
   622cd:	mov    rdi,QWORD PTR [rbx]
   622d0:	mov    rbp,rax
   622d3:	call   9ce0 <free@plt>
   622d8:	test   rbp,rbp
   622db:	je     6230b <_obstack_memory_used@@Base+0x1568b>
   622dd:	mov    rdi,rbp
   622e0:	call   a060 <strlen@plt>
   622e5:	lea    r12,[rax+0x1]
   622e9:	mov    rdi,r12
   622ec:	call   a4a0 <malloc@plt>
   622f1:	mov    rdi,rax
   622f4:	test   rax,rax
   622f7:	je     62383 <_obstack_memory_used@@Base+0x15703>
   622fd:	mov    rsi,rbp
   62300:	mov    rdx,r12
   62303:	call   a420 <memcpy@plt>
   62308:	mov    rbp,rax
   6230b:	mov    rax,QWORD PTR [rsp+0x28]
   62310:	mov    rdi,r15
   62313:	mov    QWORD PTR [rax],rbp
   62316:	add    rsp,0x48
   6231a:	pop    rbx
   6231b:	pop    rbp
   6231c:	pop    r12
   6231e:	pop    r13
   62320:	pop    r14
   62322:	pop    r15
   62324:	jmp    9ce0 <free@plt>
   62329:	lea    rdi,[rip+0x1db10]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   62330:	mov    rsi,rbx
   62333:	call   4ca80 <_obstack_newchunk@@Base>
   62338:	mov    rdi,QWORD PTR [rip+0x1db19]        # 7fe58 <argp_program_bug_address@@Base+0x1a8>
   6233f:	jmp    61ee4 <_obstack_memory_used@@Base+0x15264>
   62344:	lea    rax,[rip+0xfffffffffffe3355]        # 456a0 <argp_usage@@Base+0x2320>
   6234b:	xor    edx,edx
   6234d:	xor    esi,esi
   6234f:	and    BYTE PTR [rip+0x1db3a],0xfe        # 7fe90 <argp_program_bug_address@@Base+0x1e0>
   62356:	mov    QWORD PTR [rip+0x1db1b],rax        # 7fe78 <argp_program_bug_address@@Base+0x1c8>
   6235d:	mov    rax,QWORD PTR [rip+0x19c24]        # 7bf88 <_obstack_memory_used@@Base+0x2f308>
   62364:	lea    rdi,[rip+0x1dad5]        # 7fe40 <argp_program_bug_address@@Base+0x190>
   6236b:	mov    QWORD PTR [rip+0x1db0e],rax        # 7fe80 <argp_program_bug_address@@Base+0x1d0>
   62372:	call   4c9a0 <argp_usage@@Base+0x9620>
   62377:	mov    BYTE PTR [rip+0x1daa2],0x1        # 7fe20 <argp_program_bug_address@@Base+0x170>
   6237e:	jmp    61d35 <_obstack_memory_used@@Base+0x150b5>
   62383:	call   19130 <__sprintf_chk@plt+0xe780>

Disassembly of section .fini:

0000000000062388 <.fini>:
   62388:	endbr64 
   6238c:	sub    rsp,0x8
   62390:	add    rsp,0x8
   62394:	ret    
