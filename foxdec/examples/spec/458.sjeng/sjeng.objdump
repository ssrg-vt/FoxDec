
sjeng:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x22fc1]        # 23fd0 <__gmon_start__>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x22e6a]        # 23e90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x22e6b]        # 23e98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <.plt>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <.plt>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <.plt>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <.plt>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <.plt>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <.plt>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <.plt>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <.plt>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <.plt>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <.plt>
    10cf:	nop
    10d0:	endbr64 
    10d4:	push   0xa
    10d9:	bnd jmp 1020 <.plt>
    10df:	nop
    10e0:	endbr64 
    10e4:	push   0xb
    10e9:	bnd jmp 1020 <.plt>
    10ef:	nop
    10f0:	endbr64 
    10f4:	push   0xc
    10f9:	bnd jmp 1020 <.plt>
    10ff:	nop
    1100:	endbr64 
    1104:	push   0xd
    1109:	bnd jmp 1020 <.plt>
    110f:	nop
    1110:	endbr64 
    1114:	push   0xe
    1119:	bnd jmp 1020 <.plt>
    111f:	nop
    1120:	endbr64 
    1124:	push   0xf
    1129:	bnd jmp 1020 <.plt>
    112f:	nop
    1130:	endbr64 
    1134:	push   0x10
    1139:	bnd jmp 1020 <.plt>
    113f:	nop
    1140:	endbr64 
    1144:	push   0x11
    1149:	bnd jmp 1020 <.plt>
    114f:	nop
    1150:	endbr64 
    1154:	push   0x12
    1159:	bnd jmp 1020 <.plt>
    115f:	nop
    1160:	endbr64 
    1164:	push   0x13
    1169:	bnd jmp 1020 <.plt>
    116f:	nop
    1170:	endbr64 
    1174:	push   0x14
    1179:	bnd jmp 1020 <.plt>
    117f:	nop
    1180:	endbr64 
    1184:	push   0x15
    1189:	bnd jmp 1020 <.plt>
    118f:	nop
    1190:	endbr64 
    1194:	push   0x16
    1199:	bnd jmp 1020 <.plt>
    119f:	nop
    11a0:	endbr64 
    11a4:	push   0x17
    11a9:	bnd jmp 1020 <.plt>
    11af:	nop
    11b0:	endbr64 
    11b4:	push   0x18
    11b9:	bnd jmp 1020 <.plt>
    11bf:	nop
    11c0:	endbr64 
    11c4:	push   0x19
    11c9:	bnd jmp 1020 <.plt>
    11cf:	nop
    11d0:	endbr64 
    11d4:	push   0x1a
    11d9:	bnd jmp 1020 <.plt>
    11df:	nop
    11e0:	endbr64 
    11e4:	push   0x1b
    11e9:	bnd jmp 1020 <.plt>
    11ef:	nop
    11f0:	endbr64 
    11f4:	push   0x1c
    11f9:	bnd jmp 1020 <.plt>
    11ff:	nop
    1200:	endbr64 
    1204:	push   0x1d
    1209:	bnd jmp 1020 <.plt>
    120f:	nop
    1210:	endbr64 
    1214:	push   0x1e
    1219:	bnd jmp 1020 <.plt>
    121f:	nop
    1220:	endbr64 
    1224:	push   0x1f
    1229:	bnd jmp 1020 <.plt>
    122f:	nop
    1230:	endbr64 
    1234:	push   0x20
    1239:	bnd jmp 1020 <.plt>
    123f:	nop
    1240:	endbr64 
    1244:	push   0x21
    1249:	bnd jmp 1020 <.plt>
    124f:	nop
    1250:	endbr64 
    1254:	push   0x22
    1259:	bnd jmp 1020 <.plt>
    125f:	nop
    1260:	endbr64 
    1264:	push   0x23
    1269:	bnd jmp 1020 <.plt>
    126f:	nop

Disassembly of section .plt.got:

0000000000001270 <__cxa_finalize@plt>:
    1270:	endbr64 
    1274:	bnd jmp QWORD PTR [rip+0x22d65]        # 23fe0 <__cxa_finalize@GLIBC_2.2.5>
    127b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001280 <__strcat_chk@plt>:
    1280:	endbr64 
    1284:	bnd jmp QWORD PTR [rip+0x22c15]        # 23ea0 <__strcat_chk@GLIBC_2.3.4>
    128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001290 <free@plt>:
    1290:	endbr64 
    1294:	bnd jmp QWORD PTR [rip+0x22c0d]        # 23ea8 <free@GLIBC_2.2.5>
    129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012a0 <putchar@plt>:
    12a0:	endbr64 
    12a4:	bnd jmp QWORD PTR [rip+0x22c05]        # 23eb0 <putchar@GLIBC_2.2.5>
    12ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012b0 <strncpy@plt>:
    12b0:	endbr64 
    12b4:	bnd jmp QWORD PTR [rip+0x22bfd]        # 23eb8 <strncpy@GLIBC_2.2.5>
    12bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012c0 <strncmp@plt>:
    12c0:	endbr64 
    12c4:	bnd jmp QWORD PTR [rip+0x22bf5]        # 23ec0 <strncmp@GLIBC_2.2.5>
    12cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012d0 <puts@plt>:
    12d0:	endbr64 
    12d4:	bnd jmp QWORD PTR [rip+0x22bed]        # 23ec8 <puts@GLIBC_2.2.5>
    12db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012e0 <fclose@plt>:
    12e0:	endbr64 
    12e4:	bnd jmp QWORD PTR [rip+0x22be5]        # 23ed0 <fclose@GLIBC_2.2.5>
    12eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012f0 <stpcpy@plt>:
    12f0:	endbr64 
    12f4:	bnd jmp QWORD PTR [rip+0x22bdd]        # 23ed8 <stpcpy@GLIBC_2.2.5>
    12fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001300 <strlen@plt>:
    1300:	endbr64 
    1304:	bnd jmp QWORD PTR [rip+0x22bd5]        # 23ee0 <strlen@GLIBC_2.2.5>
    130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001310 <__stack_chk_fail@plt>:
    1310:	endbr64 
    1314:	bnd jmp QWORD PTR [rip+0x22bcd]        # 23ee8 <__stack_chk_fail@GLIBC_2.4>
    131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001320 <setbuf@plt>:
    1320:	endbr64 
    1324:	bnd jmp QWORD PTR [rip+0x22bc5]        # 23ef0 <setbuf@GLIBC_2.2.5>
    132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001330 <strchr@plt>:
    1330:	endbr64 
    1334:	bnd jmp QWORD PTR [rip+0x22bbd]        # 23ef8 <strchr@GLIBC_2.2.5>
    133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001340 <difftime@plt>:
    1340:	endbr64 
    1344:	bnd jmp QWORD PTR [rip+0x22bb5]        # 23f00 <difftime@GLIBC_2.2.5>
    134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001350 <fputs@plt>:
    1350:	endbr64 
    1354:	bnd jmp QWORD PTR [rip+0x22bad]        # 23f08 <fputs@GLIBC_2.2.5>
    135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001360 <memset@plt>:
    1360:	endbr64 
    1364:	bnd jmp QWORD PTR [rip+0x22ba5]        # 23f10 <memset@GLIBC_2.2.5>
    136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001370 <fputc@plt>:
    1370:	endbr64 
    1374:	bnd jmp QWORD PTR [rip+0x22b9d]        # 23f18 <fputc@GLIBC_2.2.5>
    137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001380 <fgets@plt>:
    1380:	endbr64 
    1384:	bnd jmp QWORD PTR [rip+0x22b95]        # 23f20 <fgets@GLIBC_2.2.5>
    138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001390 <calloc@plt>:
    1390:	endbr64 
    1394:	bnd jmp QWORD PTR [rip+0x22b8d]        # 23f28 <calloc@GLIBC_2.2.5>
    139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013a0 <strcmp@plt>:
    13a0:	endbr64 
    13a4:	bnd jmp QWORD PTR [rip+0x22b85]        # 23f30 <strcmp@GLIBC_2.2.5>
    13ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013b0 <signal@plt>:
    13b0:	endbr64 
    13b4:	bnd jmp QWORD PTR [rip+0x22b7d]        # 23f38 <signal@GLIBC_2.2.5>
    13bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013c0 <__memcpy_chk@plt>:
    13c0:	endbr64 
    13c4:	bnd jmp QWORD PTR [rip+0x22b75]        # 23f40 <__memcpy_chk@GLIBC_2.3.4>
    13cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013d0 <strtol@plt>:
    13d0:	endbr64 
    13d4:	bnd jmp QWORD PTR [rip+0x22b6d]        # 23f48 <strtol@GLIBC_2.2.5>
    13db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013e0 <__stpcpy_chk@plt>:
    13e0:	endbr64 
    13e4:	bnd jmp QWORD PTR [rip+0x22b65]        # 23f50 <__stpcpy_chk@GLIBC_2.3.4>
    13eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013f0 <malloc@plt>:
    13f0:	endbr64 
    13f4:	bnd jmp QWORD PTR [rip+0x22b5d]        # 23f58 <malloc@GLIBC_2.2.5>
    13fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001400 <__isoc99_sscanf@plt>:
    1400:	endbr64 
    1404:	bnd jmp QWORD PTR [rip+0x22b55]        # 23f60 <__isoc99_sscanf@GLIBC_2.7>
    140b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001410 <__strcpy_chk@plt>:
    1410:	endbr64 
    1414:	bnd jmp QWORD PTR [rip+0x22b4d]        # 23f68 <__strcpy_chk@GLIBC_2.3.4>
    141b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001420 <__printf_chk@plt>:
    1420:	endbr64 
    1424:	bnd jmp QWORD PTR [rip+0x22b45]        # 23f70 <__printf_chk@GLIBC_2.3.4>
    142b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001430 <fopen@plt>:
    1430:	endbr64 
    1434:	bnd jmp QWORD PTR [rip+0x22b3d]        # 23f78 <fopen@GLIBC_2.2.5>
    143b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001440 <exit@plt>:
    1440:	endbr64 
    1444:	bnd jmp QWORD PTR [rip+0x22b35]        # 23f80 <exit@GLIBC_2.2.5>
    144b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001450 <fwrite@plt>:
    1450:	endbr64 
    1454:	bnd jmp QWORD PTR [rip+0x22b2d]        # 23f88 <fwrite@GLIBC_2.2.5>
    145b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001460 <__fprintf_chk@plt>:
    1460:	endbr64 
    1464:	bnd jmp QWORD PTR [rip+0x22b25]        # 23f90 <__fprintf_chk@GLIBC_2.3.4>
    146b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001470 <getc@plt>:
    1470:	endbr64 
    1474:	bnd jmp QWORD PTR [rip+0x22b1d]        # 23f98 <getc@GLIBC_2.2.5>
    147b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001480 <strstr@plt>:
    1480:	endbr64 
    1484:	bnd jmp QWORD PTR [rip+0x22b15]        # 23fa0 <strstr@GLIBC_2.2.5>
    148b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001490 <__ctype_tolower_loc@plt>:
    1490:	endbr64 
    1494:	bnd jmp QWORD PTR [rip+0x22b0d]        # 23fa8 <__ctype_tolower_loc@GLIBC_2.3>
    149b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000014a0 <__ctype_b_loc@plt>:
    14a0:	endbr64 
    14a4:	bnd jmp QWORD PTR [rip+0x22b05]        # 23fb0 <__ctype_b_loc@GLIBC_2.3>
    14ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000014b0 <__sprintf_chk@plt>:
    14b0:	endbr64 
    14b4:	bnd jmp QWORD PTR [rip+0x22afd]        # 23fb8 <__sprintf_chk@GLIBC_2.3.4>
    14bb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000014c0 <update_ancestors.cold>:
    14c0:	mov    eax,DWORD PTR ds:0x24
    14c7:	ud2    
    14c9:	nop    DWORD PTR [rax+0x0]

00000000000014d0 <main>:
    14d0:	endbr64 
    14d4:	push   r15
    14d6:	push   r14
    14d8:	push   r13
    14da:	push   r12
    14dc:	push   rbp
    14dd:	push   rbx
    14de:	lea    r11,[rsp-0x6000]
    14e6:	sub    rsp,0x1000
    14ed:	or     QWORD PTR [rsp],0x0
    14f2:	cmp    rsp,r11
    14f5:	jne    14e6 <main+0x16>
    14f7:	sub    rsp,0x178
    14fe:	mov    rax,QWORD PTR fs:0x28
    1507:	mov    QWORD PTR [rsp+0x6168],rax
    150f:	xor    eax,eax
    1511:	mov    ebx,edi
    1513:	mov    rbp,rsi
    1516:	mov    DWORD PTR [rsp+0x54],0x4
    151e:	call   10e90 <read_rcfile>
    1523:	lea    r14,[rsp+0x2620]
    152b:	call   16710 <initialize_zobrist>
    1530:	movdqu xmm2,XMMWORD PTR [rip+0x22f08]        # 24440 <std_material>
    1538:	movdqu xmm3,XMMWORD PTR [rip+0x22f10]        # 24450 <std_material+0x10>
    1540:	mov    DWORD PTR [rip+0x27a276],0x2        # 27b7c0 <Variant>
    154a:	movdqu xmm4,XMMWORD PTR [rip+0x22f0e]        # 24460 <std_material+0x20>
    1552:	mov    rax,QWORD PTR [rip+0x22f17]        # 24470 <std_material+0x30>
    1559:	movups XMMWORD PTR [rip+0x23020],xmm2        # 24580 <material>
    1560:	movups XMMWORD PTR [rip+0x23029],xmm3        # 24590 <material+0x10>
    1567:	movups XMMWORD PTR [rip+0x23032],xmm4        # 245a0 <material+0x20>
    156e:	mov    QWORD PTR [rip+0x2303b],rax        # 245b0 <material+0x30>
    1575:	call   18a40 <init_game>
    157a:	call   16780 <initialize_hash>
    157f:	call   16680 <clear_tt>
    1584:	call   4450 <reset_ecache>
    1589:	xor    esi,esi
    158b:	mov    edx,0x3840
    1590:	mov    rdi,r14
    1593:	mov    DWORD PTR [rip+0x23c2b],0x0        # 251c8 <ECacheProbes>
    159d:	mov    DWORD PTR [rip+0x23c11],0x0        # 251b8 <ECacheHits>
    15a7:	mov    DWORD PTR [rip+0x2961cf],0x0        # 297780 <TTProbes>
    15b1:	mov    DWORD PTR [rip+0x2961d5],0x0        # 297790 <TTStores>
    15bb:	mov    DWORD PTR [rip+0x2961cf],0x0        # 297794 <TTHits>
    15c5:	mov    DWORD PTR [rip+0x296199],0x0        # 297768 <bookidx>
    15cf:	mov    DWORD PTR [rip+0x3d127],0x0        # 3e700 <total_moves>
    15d9:	mov    DWORD PTR [rip+0x29617d],0x0        # 297760 <ply>
    15e3:	mov    DWORD PTR [rip+0x27bf3b],0x28        # 27d528 <moves_to_tc>
    15ed:	mov    DWORD PTR [rip+0x27c9e1],0x5        # 27dfd8 <min_per_game>
    15f7:	mov    DWORD PTR [rip+0x29616f],0x7530        # 297770 <time_left>
    1601:	mov    DWORD PTR [rip+0x296159],0x7d0        # 297764 <opp_rating>
    160b:	mov    DWORD PTR [rip+0x290def],0x7d0        # 292404 <my_rating>
    1615:	mov    DWORD PTR [rip+0x290de9],0x28        # 292408 <maxdepth>
    161f:	mov    DWORD PTR [rip+0x3d0ff],0xc8        # 3e728 <maxposdiff>
    1629:	mov    DWORD PTR [rip+0x6592d],0x1        # 66f60 <must_go>
    1633:	mov    DWORD PTR [rip+0x66287],0x1        # 678c4 <tradefreely>
    163d:	mov    DWORD PTR [rip+0x296131],0x0        # 297778 <xb_mode>
    1647:	mov    DWORD PTR [rip+0x296103],0x0        # 297754 <comp_color>
    1651:	mov    DWORD PTR [rsp+0x58],0x1
    1659:	mov    DWORD PTR [rip+0x2960f9],0x0        # 29775c <is_pondering>
    1663:	mov    DWORD PTR [rip+0x67b5f],0x1        # 691cc <allow_pondering>
    166d:	mov    DWORD PTR [rip+0x67b51],0x0        # 691c8 <is_analyzing>
    1677:	mov    DWORD PTR [rip+0x2960cb],0x0        # 29774c <have_partner>
    1681:	mov    DWORD PTR [rip+0x27c959],0x0        # 27dfe4 <must_sit>
    168b:	mov    DWORD PTR [rip+0x2960ab],0x0        # 297740 <go_fast>
    1695:	mov    DWORD PTR [rip+0x2960b1],0x0        # 297750 <fixed_time>
    169f:	mov    DWORD PTR [rip+0x29609f],0x0        # 297748 <phase>
    16a9:	mov    DWORD PTR [rip+0x67ffd],0x0        # 696b0 <root_to_move>
    16b3:	mov    DWORD PTR [rip+0x65913],0x0        # 66fd0 <kibitzed>
    16bd:	mov    DWORD PTR [rip+0x67fd9],0x0        # 696a0 <move_number>
    16c7:	call   1360 <memset@plt>
    16cc:	mov    edx,0x2580
    16d1:	xor    esi,esi
    16d3:	lea    rdi,[rsp+0xa0]
    16db:	call   1360 <memset@plt>
    16e0:	mov    eax,DWORD PTR [rip+0x29609e]        # 297784 <hash>
    16e6:	mov    rdi,QWORD PTR [rip+0x22e53]        # 24540 <stdout@@GLIBC_2.2.5>
    16ed:	xor    esi,esi
    16ef:	mov    DWORD PTR [rip+0x27974b],eax        # 27ae40 <hash_history>
    16f5:	call   1320 <setbuf@plt>
    16fa:	mov    rdi,QWORD PTR [rip+0x22e4f]        # 24550 <stdin@@GLIBC_2.2.5>
    1701:	xor    esi,esi
    1703:	call   1320 <setbuf@plt>
    1708:	call   18ca0 <start_up>
    170d:	cmp    ebx,0x2
    1710:	je     1f23 <main+0xa53>
    1716:	mov    DWORD PTR [rsp+0x14],0x0
    171e:	xor    ebp,ebp
    1720:	xor    ebx,ebx
    1722:	xor    r13d,r13d
    1725:	mov    DWORD PTR [rsp+0x20],0x0
    172d:	lea    r15,[rsp+0x5e60]
    1735:	movabs r12,0x6d617267616964
    173f:	nop
    1740:	test   ebx,ebx
    1742:	je     18b8 <main+0x3e8>
    1748:	mov    r10d,DWORD PTR [rip+0x296029]        # 297778 <xb_mode>
    174f:	test   r10d,r10d
    1752:	jne    1900 <main+0x430>
    1758:	mov    r9d,DWORD PTR [rsp+0x58]
    175d:	test   r9d,r9d
    1760:	jne    1bf0 <main+0x720>
    1766:	test   ebp,ebp
    1768:	je     1bc0 <main+0x6f0>
    176e:	test   ebx,ebx
    1770:	je     1970 <main+0x4a0>
    1776:	lea    rsi,[rip+0x1d960]        # 1f0dd <scentral+0x2fd>
    177d:	mov    rdi,r15
    1780:	call   1480 <strstr@plt>
    1785:	test   rax,rax
    1788:	je     1c20 <main+0x750>
    178e:	cmp    DWORD PTR [r15],0x74697571
    1795:	je     1b50 <main+0x680>
    179b:	cmp    DWORD PTR [r15],0x74697865
    17a2:	je     1b70 <main+0x6a0>
    17a8:	cmp    QWORD PTR [r15],r12
    17ab:	je     1bb0 <main+0x6e0>
    17b1:	cmp    WORD PTR [r15],0x64
    17b6:	je     1bb0 <main+0x6e0>
    17bc:	cmp    DWORD PTR [r15],0x66726570
    17c3:	je     1c7b <main+0x7ab>
    17c9:	cmp    DWORD PTR [r15],0x77656e
    17d0:	je     1db9 <main+0x8e9>
    17d6:	lea    rsi,[rip+0x1d94e]        # 1f12b <scentral+0x34b>
    17dd:	mov    rdi,r15
    17e0:	call   13a0 <strcmp@plt>
    17e5:	test   eax,eax
    17e7:	je     1ee0 <main+0xa10>
    17ed:	lea    rsi,[rip+0x1d93e]        # 1f132 <scentral+0x352>
    17f4:	mov    rdi,r15
    17f7:	call   13a0 <strcmp@plt>
    17fc:	test   eax,eax
    17fe:	je     1f59 <main+0xa89>
    1804:	lea    rsi,[rip+0x1d92f]        # 1f13a <scentral+0x35a>
    180b:	mov    rdi,r15
    180e:	call   13a0 <strcmp@plt>
    1813:	test   eax,eax
    1815:	je     2383 <main+0xeb3>
    181b:	lea    rsi,[rip+0x1d916]        # 1f138 <scentral+0x358>
    1822:	mov    rdi,r15
    1825:	call   13a0 <strcmp@plt>
    182a:	test   eax,eax
    182c:	jne    23ba <main+0xeea>
    1832:	mov    DWORD PTR [rip+0x27c2cc],0x0        # 27db08 <post>
    183c:	jmp    1740 <main+0x270>
    1841:	mov    BYTE PTR [rsp+0x8],dl
    1845:	test   ebx,ebx
    1847:	je     29fa <main+0x152a>
    184d:	cmp    DWORD PTR [rip+0x27c788],0x1e        # 27dfdc <wking_loc>
    1854:	jne    1860 <main+0x390>
    1856:	mov    DWORD PTR [rip+0x67960],0x0        # 691c0 <white_castled>
    1860:	cmp    DWORD PTR [rip+0x27bcbd],0x72        # 27d524 <bking_loc>
    1867:	jne    1873 <main+0x3a3>
    1869:	mov    DWORD PTR [rip+0x67951],0x0        # 691c4 <black_castled>
    1873:	lea    rdx,[rip+0x295dc6]        # 297640 <opening_history>
    187a:	xor    eax,eax
    187c:	mov    ecx,0x20
    1881:	mov    DWORD PTR [rip+0x27a04d],0x32        # 27b8d8 <book_ply>
    188b:	mov    DWORD PTR [rip+0x291e4b],0x0        # 2936e0 <ep_square>
    1895:	mov    rdi,rdx
    1898:	rep stos QWORD PTR es:[rdi],rax
    189b:	mov    DWORD PTR [rip+0x67dfb],0x0        # 696a0 <move_number>
    18a5:	call   16680 <clear_tt>
    18aa:	call   16780 <initialize_hash>
    18af:	call   18860 <reset_piece_square>
    18b4:	nop    DWORD PTR [rax+0x0]
    18b8:	mov    eax,DWORD PTR [rip+0x27bc62]        # 27d520 <white_to_move>
    18be:	xor    ebx,ebx
    18c0:	cmp    DWORD PTR [rip+0x295e8e],eax        # 297754 <comp_color>
    18c6:	je     18d0 <main+0x400>
    18c8:	test   ebp,ebp
    18ca:	je     1af0 <main+0x620>
    18d0:	test   r13d,r13d
    18d3:	jne    1748 <main+0x278>
    18d9:	mov    ebx,DWORD PTR [rip+0x27bfc1]        # 27d8a0 <result>
    18df:	or     ebx,DWORD PTR [rip+0x27c6ff]        # 27dfe4 <must_sit>
    18e5:	je     1d1f <main+0x84f>
    18eb:	mov    r10d,DWORD PTR [rip+0x295e86]        # 297778 <xb_mode>
    18f2:	xor    ebx,ebx
    18f4:	test   r10d,r10d
    18f7:	je     1758 <main+0x288>
    18fd:	nop    DWORD PTR [rax]
    1900:	mov    r8d,DWORD PTR [rip+0x27c6dd]        # 27dfe4 <must_sit>
    1907:	test   r8d,r8d
    190a:	jne    1938 <main+0x468>
    190c:	mov    edi,DWORD PTR [rip+0x678ba]        # 691cc <allow_pondering>
    1912:	test   edi,edi
    1914:	je     1b00 <main+0x630>
    191a:	mov    eax,r13d
    191d:	or     eax,ebx
    191f:	jne    1b00 <main+0x630>
    1925:	mov    esi,DWORD PTR [rip+0x67d75]        # 696a0 <move_number>
    192b:	test   esi,esi
    192d:	je     1b00 <main+0x630>
    1933:	nop    DWORD PTR [rax+rax*1+0x0]
    1938:	mov    eax,ebp
    193a:	or     eax,DWORD PTR [rip+0x27bf60]        # 27d8a0 <result>
    1940:	je     1b1c <main+0x64c>
    1946:	test   ebp,ebp
    1948:	jne    176e <main+0x29e>
    194e:	mov    rdx,QWORD PTR [rip+0x22bfb]        # 24550 <stdin@@GLIBC_2.2.5>
    1955:	mov    esi,0x100
    195a:	mov    rdi,r15
    195d:	call   18c30 <rinput>
    1962:	test   ebx,ebx
    1964:	jne    1776 <main+0x2a6>
    196a:	nop    WORD PTR [rax+rax*1+0x0]
    1970:	mov    rdi,r15
    1973:	call   17b80 <is_move>
    1978:	test   eax,eax
    197a:	je     1776 <main+0x2a6>
    1980:	lea    rbx,[rsp+0x60]
    1985:	mov    rdi,r15
    1988:	mov    rsi,rbx
    198b:	call   18e40 <verify_coord>
    1990:	test   eax,eax
    1992:	je     1c60 <main+0x790>
    1998:	movdqa xmm5,XMMWORD PTR [rsp+0x60]
    199e:	mov    rcx,QWORD PTR [rsp+0x70]
    19a3:	mov    rdi,rbx
    19a6:	xor    esi,esi
    19a8:	movsxd rdx,DWORD PTR [rip+0x67cf1]        # 696a0 <move_number>
    19af:	lea    rax,[rdx+rdx*2]
    19b3:	shl    rax,0x3
    19b7:	mov    QWORD PTR [rsp+rax*1+0x2630],rcx
    19bf:	lea    rcx,[rip+0x27947a]        # 27ae40 <hash_history>
    19c6:	movups XMMWORD PTR [rsp+rax*1+0x2620],xmm5
    19ce:	mov    eax,DWORD PTR [rip+0x295db0]        # 297784 <hash>
    19d4:	mov    DWORD PTR [rcx+rdx*4],eax
    19d7:	call   8e00 <make>
    19dc:	movsxd rax,DWORD PTR [rip+0x67cbd]        # 696a0 <move_number>
    19e3:	movdqa xmm6,XMMWORD PTR [rip+0x290a35]        # 292420 <path_x>
    19eb:	lea    edx,[rax+0x1]
    19ee:	shl    rax,0x4
    19f2:	mov    DWORD PTR [rip+0x67ca8],edx        # 696a0 <move_number>
    19f8:	movaps XMMWORD PTR [rsp+rax*1+0xa0],xmm6
    1a00:	call   18860 <reset_piece_square>
    1a05:	mov    ebx,DWORD PTR [rip+0x279ecd]        # 27b8d8 <book_ply>
    1a0b:	xor    DWORD PTR [rip+0x67c9e],0x1        # 696b0 <root_to_move>
    1a12:	cmp    ebx,0x27
    1a15:	jg     1a33 <main+0x563>
    1a17:	mov    edx,0x100
    1a1c:	mov    rsi,r15
    1a1f:	lea    rdi,[rip+0x295c1a]        # 297640 <opening_history>
    1a26:	test   ebx,ebx
    1a28:	jne    1f4f <main+0xa7f>
    1a2e:	call   1410 <__strcpy_chk@plt>
    1a33:	mov    edx,DWORD PTR [rsp+0x58]
    1a37:	add    ebx,0x1
    1a3a:	mov    DWORD PTR [rip+0x279e98],ebx        # 27b8d8 <book_ply>
    1a40:	test   edx,edx
    1a42:	je     18b8 <main+0x3e8>
    1a48:	mov    edi,0xa
    1a4d:	call   12a0 <putchar@plt>
    1a52:	mov    rdi,QWORD PTR [rip+0x22ae7]        # 24540 <stdout@@GLIBC_2.2.5>
    1a59:	mov    esi,0x1
    1a5e:	sub    esi,DWORD PTR [rip+0x295cf0]        # 297754 <comp_color>
    1a64:	call   178e0 <display_board>
    1a69:	jmp    18b8 <main+0x3e8>
    1a6e:	cmp    DWORD PTR [rip+0x295d03],0x0        # 297778 <xb_mode>
    1a75:	mov    ecx,DWORD PTR [rsp+0x80]
    1a7c:	mov    edx,DWORD PTR [rip+0x22b5e]        # 245e0 <dummy>
    1a82:	je     254a <main+0x107a>
    1a88:	cmp    ecx,edx
    1a8a:	jne    1a9b <main+0x5cb>
    1a8c:	mov    ecx,DWORD PTR [rip+0x22b52]        # 245e4 <dummy+0x4>
    1a92:	cmp    DWORD PTR [rsp+0x84],ecx
    1a99:	je     1ab7 <main+0x5e7>
    1a9b:	mov    rdx,r10
    1a9e:	lea    rsi,[rip+0x1d5a7]        # 1f04c <scentral+0x26c>
    1aa5:	mov    edi,0x1
    1aaa:	xor    eax,eax
    1aac:	call   1420 <__printf_chk@plt>
    1ab1:	mov    eax,DWORD PTR [rip+0x27bde9]        # 27d8a0 <result>
    1ab7:	cmp    eax,0x2
    1aba:	je     244c <main+0xf7c>
    1ac0:	cmp    eax,0x3
    1ac3:	je     1da6 <main+0x8d6>
    1ac9:	cmp    eax,0x4
    1acc:	je     24a0 <main+0xfd0>
    1ad2:	cmp    eax,0x5
    1ad5:	je     248d <main+0xfbd>
    1adb:	lea    rdi,[rip+0x1d5d2]        # 1f0b4 <scentral+0x2d4>
    1ae2:	call   12d0 <puts@plt>
    1ae7:	nop    WORD PTR [rax+rax*1+0x0]
    1af0:	xor    ebp,ebp
    1af2:	jmp    1748 <main+0x278>
    1af7:	nop    WORD PTR [rax+rax*1+0x0]
    1b00:	mov    ecx,DWORD PTR [rip+0x676c2]        # 691c8 <is_analyzing>
    1b06:	test   ecx,ecx
    1b08:	je     1946 <main+0x476>
    1b0e:	mov    eax,ebp
    1b10:	or     eax,DWORD PTR [rip+0x27bd8a]        # 27d8a0 <result>
    1b16:	jne    1946 <main+0x476>
    1b1c:	mov    DWORD PTR [rip+0x295c36],0x1        # 29775c <is_pondering>
    1b26:	lea    rdi,[rsp+0x30]
    1b2b:	call   13f80 <think>
    1b30:	mov    DWORD PTR [rip+0x295c22],0x0        # 29775c <is_pondering>
    1b3a:	mov    DWORD PTR [rip+0x295c1c],0x0        # 297760 <ply>
    1b44:	jmp    194e <main+0x47e>
    1b49:	nop    DWORD PTR [rax+0x0]
    1b50:	cmp    BYTE PTR [r15+0x4],0x0
    1b55:	jne    179b <main+0x2cb>
    1b5b:	call   16db0 <free_hash>
    1b60:	call   44d0 <free_ecache>
    1b65:	xor    edi,edi
    1b67:	call   1440 <exit@plt>
    1b6c:	nop    DWORD PTR [rax+0x0]
    1b70:	cmp    BYTE PTR [r15+0x4],0x0
    1b75:	jne    17a8 <main+0x2d8>
    1b7b:	mov    eax,DWORD PTR [rip+0x67647]        # 691c8 <is_analyzing>
    1b81:	test   eax,eax
    1b83:	je     1b5b <main+0x68b>
    1b85:	mov    DWORD PTR [rip+0x67639],0x0        # 691c8 <is_analyzing>
    1b8f:	mov    DWORD PTR [rip+0x295bc3],0x0        # 29775c <is_pondering>
    1b99:	mov    DWORD PTR [rip+0x67b01],0x0        # 696a4 <time_for_move>
    1ba3:	jmp    1740 <main+0x270>
    1ba8:	nop    DWORD PTR [rax+rax*1+0x0]
    1bb0:	lea    rdi,[rsp+0x58]
    1bb5:	call   18cb0 <toggle_bool>
    1bba:	jmp    1740 <main+0x270>
    1bbf:	nop
    1bc0:	lea    rsi,[rip+0x1d4fc]        # 1f0c3 <scentral+0x2e3>
    1bc7:	mov    edi,0x1
    1bcc:	xor    eax,eax
    1bce:	call   1420 <__printf_chk@plt>
    1bd3:	mov    rdx,QWORD PTR [rip+0x22976]        # 24550 <stdin@@GLIBC_2.2.5>
    1bda:	mov    esi,0x100
    1bdf:	mov    rdi,r15
    1be2:	call   18c30 <rinput>
    1be7:	jmp    176e <main+0x29e>
    1bec:	nop    DWORD PTR [rax+0x0]
    1bf0:	mov    edi,0xa
    1bf5:	call   12a0 <putchar@plt>
    1bfa:	mov    rdi,QWORD PTR [rip+0x2293f]        # 24540 <stdout@@GLIBC_2.2.5>
    1c01:	mov    esi,0x1
    1c06:	sub    esi,DWORD PTR [rip+0x295b48]        # 297754 <comp_color>
    1c0c:	call   178e0 <display_board>
    1c11:	jmp    1766 <main+0x296>
    1c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1c20:	movzx  edx,BYTE PTR [rsp+0x5e60]
    1c28:	test   dl,dl
    1c2a:	mov    BYTE PTR [rsp+0x8],dl
    1c2e:	je     178e <main+0x2be>
    1c34:	call   1490 <__ctype_tolower_loc@plt>
    1c39:	movsx  rdx,BYTE PTR [rsp+0x8]
    1c3f:	mov    rcx,QWORD PTR [rax]
    1c42:	mov    rax,r15
    1c45:	nop    DWORD PTR [rax]
    1c48:	mov    edx,DWORD PTR [rcx+rdx*4]
    1c4b:	add    rax,0x1
    1c4f:	mov    BYTE PTR [rax-0x1],dl
    1c52:	movsx  rdx,BYTE PTR [rax]
    1c56:	test   dl,dl
    1c58:	jne    1c48 <main+0x778>
    1c5a:	jmp    178e <main+0x2be>
    1c5f:	nop
    1c60:	mov    rdx,r15
    1c63:	lea    rsi,[rip+0x1d461]        # 1f0cb <scentral+0x2eb>
    1c6a:	mov    edi,0x1
    1c6f:	xor    eax,eax
    1c71:	call   1420 <__printf_chk@plt>
    1c76:	jmp    18b8 <main+0x3e8>
    1c7b:	cmp    BYTE PTR [r15+0x4],0x74
    1c80:	jne    17c9 <main+0x2f9>
    1c86:	lea    rdx,[rsp+0x54]
    1c8b:	lea    rdi,[rsp+0x5e66]
    1c93:	xor    eax,eax
    1c95:	lea    rsi,[rip+0x1dc56]        # 1f8f2 <scentral+0xb12>
    1c9c:	call   1400 <__isoc99_sscanf@plt>
    1ca1:	mov    DWORD PTR [rip+0x679fd],0x0        # 696a8 <raw_nodes>
    1cab:	call   18c90 <rtime>
    1cb0:	mov    edi,DWORD PTR [rsp+0x54]
    1cb4:	mov    QWORD PTR [rsp+0x8],rax
    1cb9:	call   116b0 <perft>
    1cbe:	mov    edx,DWORD PTR [rsp+0x54]
    1cc2:	mov    edi,0x1
    1cc7:	xor    eax,eax
    1cc9:	mov    ecx,DWORD PTR [rip+0x679d9]        # 696a8 <raw_nodes>
    1ccf:	lea    rsi,[rip+0x1d428]        # 1f0fe <scentral+0x31e>
    1cd6:	call   1420 <__printf_chk@plt>
    1cdb:	call   18c90 <rtime>
    1ce0:	mov    r8,QWORD PTR [rsp+0x8]
    1ce5:	mov    rdi,rax
    1ce8:	mov    rsi,r8
    1ceb:	call   186f0 <rdifftime>
    1cf0:	pxor   xmm0,xmm0
    1cf4:	mov    edi,0x1
    1cf9:	lea    rsi,[rip+0x1d41a]        # 1f11a <scentral+0x33a>
    1d00:	cvtsi2ss xmm0,eax
    1d04:	mov    eax,0x1
    1d09:	cvtss2sd xmm0,xmm0
    1d0d:	divsd  xmm0,QWORD PTR [rip+0x1cdc3]        # 1ead8 <sbishop+0xcb8>
    1d15:	call   1420 <__printf_chk@plt>
    1d1a:	jmp    1740 <main+0x270>
    1d1f:	mov    DWORD PTR [rip+0x295a33],0x0        # 29775c <is_pondering>
    1d29:	lea    rdi,[rsp+0x30]
    1d2e:	call   13f80 <think>
    1d33:	movdqu xmm7,XMMWORD PTR [rsp+0x30]
    1d39:	mov    rax,QWORD PTR [rsp+0x40]
    1d3e:	mov    DWORD PTR [rip+0x295a18],0x0        # 297760 <ply>
    1d48:	cmp    DWORD PTR [rip+0x27c295],0x0        # 27dfe4 <must_sit>
    1d4f:	mov    QWORD PTR [rsp+0x90],rax
    1d57:	movaps XMMWORD PTR [rsp+0x80],xmm7
    1d5f:	jne    1f3d <main+0xa6d>
    1d65:	mov    edx,DWORD PTR [rip+0x279a55]        # 27b7c0 <Variant>
    1d6b:	mov    eax,DWORD PTR [rip+0x27bb2f]        # 27d8a0 <result>
    1d71:	lea    ecx,[rdx-0x3]
    1d74:	cmp    ecx,0x1
    1d77:	jbe    1f9e <main+0xace>
    1d7d:	cmp    edx,0x2
    1d80:	ja     1ab7 <main+0x5e7>
    1d86:	mov    edx,DWORD PTR [rip+0x2959c8]        # 297754 <comp_color>
    1d8c:	cmp    edx,0x1
    1d8f:	je     246e <main+0xf9e>
    1d95:	test   edx,edx
    1d97:	jne    1ab7 <main+0x5e7>
    1d9d:	cmp    eax,0x3
    1da0:	jne    1faa <main+0xada>
    1da6:	lea    rdi,[rip+0x1d2bf]        # 1f06c <scentral+0x28c>
    1dad:	xor    ebp,ebp
    1daf:	call   12d0 <puts@plt>
    1db4:	jmp    1748 <main+0x278>
    1db9:	cmp    DWORD PTR [rip+0x2959b8],0x0        # 297778 <xb_mode>
    1dc0:	je     1ddc <main+0x90c>
    1dc2:	lea    rdx,[rip+0x2799d7]        # 27b7a0 <setcode>
    1dc9:	lea    rsi,[rip+0x1d558]        # 1f328 <scentral+0x548>
    1dd0:	mov    edi,0x1
    1dd5:	xor    eax,eax
    1dd7:	call   1420 <__printf_chk@plt>
    1ddc:	cmp    DWORD PTR [rip+0x673e5],0x0        # 691c8 <is_analyzing>
    1de3:	jne    1ecc <main+0x9fc>
    1de9:	lea    rsi,[rip+0x22650]        # 24440 <std_material>
    1df0:	mov    ecx,0xe
    1df5:	lea    rdi,[rip+0x22784]        # 24580 <material>
    1dfc:	mov    DWORD PTR [rip+0x2799ba],0x2        # 27b7c0 <Variant>
    1e06:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1e08:	call   18a40 <init_game>
    1e0d:	call   16780 <initialize_hash>
    1e12:	cmp    DWORD PTR [rsp+0x14],0x0
    1e17:	je     23ab <main+0xedb>
    1e1d:	mov    edi,0x1
    1e22:	xor    ebp,ebp
    1e24:	xor    r13d,r13d
    1e27:	mov    DWORD PTR [rip+0x27c1b3],0x0        # 27dfe4 <must_sit>
    1e31:	mov    DWORD PTR [rip+0x295905],0x0        # 297740 <go_fast>
    1e3b:	mov    DWORD PTR [rip+0x6511f],0x0        # 66f64 <piecedead>
    1e45:	mov    DWORD PTR [rip+0x65119],0x0        # 66f68 <partnerdead>
    1e4f:	mov    DWORD PTR [rip+0x65177],0x0        # 66fd0 <kibitzed>
    1e59:	mov    DWORD PTR [rip+0x2958ed],0x0        # 297750 <fixed_time>
    1e63:	mov    DWORD PTR [rip+0x67843],0x0        # 696b0 <root_to_move>
    1e6d:	mov    DWORD PTR [rip+0x2958dd],0x0        # 297754 <comp_color>
    1e77:	mov    DWORD PTR [rip+0x6781f],0x0        # 696a0 <move_number>
    1e81:	mov    DWORD PTR [rip+0x278fb5],0x0        # 27ae40 <hash_history>
    1e8b:	mov    DWORD PTR [rip+0x2958d3],0x0        # 297768 <bookidx>
    1e95:	mov    DWORD PTR [rip+0x2958c5],0x7d0        # 297764 <opp_rating>
    1e9f:	mov    DWORD PTR [rip+0x29055b],0x7d0        # 292404 <my_rating>
    1ea9:	mov    DWORD PTR [rip+0x650ad],0x0        # 66f60 <must_go>
    1eb3:	mov    DWORD PTR [rip+0x65a07],0x1        # 678c4 <tradefreely>
    1ebd:	call   dff0 <CheckBadFlow>
    1ec2:	call   d050 <ResetHandValue>
    1ec7:	jmp    1740 <main+0x270>
    1ecc:	call   18a40 <init_game>
    1ed1:	mov    DWORD PTR [rip+0x677c5],0x0        # 696a0 <move_number>
    1edb:	jmp    1740 <main+0x270>
    1ee0:	mov    DWORD PTR [rip+0x29588e],0x1        # 297778 <xb_mode>
    1eea:	lea    rdi,[rsp+0x58]
    1eef:	call   18cb0 <toggle_bool>
    1ef4:	mov    esi,0x1
    1ef9:	mov    edi,0x2
    1efe:	call   13b0 <signal@plt>
    1f03:	mov    edi,0xa
    1f08:	call   12a0 <putchar@plt>
    1f0d:	lea    rdi,[rip+0x1c6a6]        # 1e5ba <sbishop+0x79a>
    1f14:	call   12d0 <puts@plt>
    1f19:	call   d090 <BegForPartner>
    1f1e:	jmp    1740 <main+0x270>
    1f23:	lea    rdi,[rip+0x1d0fa]        # 1f024 <scentral+0x244>
    1f2a:	call   12d0 <puts@plt>
    1f2f:	mov    rdi,QWORD PTR [rbp+0x8]
    1f33:	call   5020 <run_autotest>
    1f38:	jmp    1716 <main+0x246>
    1f3d:	cmp    DWORD PTR [rip+0x6501c],0x0        # 66f60 <must_go>
    1f44:	je     18eb <main+0x41b>
    1f4a:	jmp    1d65 <main+0x895>
    1f4f:	call   1280 <__strcat_chk@plt>
    1f54:	jmp    1a33 <main+0x563>
    1f59:	mov    edx,DWORD PTR [rip+0x27997d]        # 27b8dc <nodes>
    1f5f:	pxor   xmm0,xmm0
    1f63:	pxor   xmm1,xmm1
    1f67:	lea    rsi,[rip+0x1d3e2]        # 1f350 <scentral+0x570>
    1f6e:	cvtsi2ss xmm0,DWORD PTR [rip+0x6992a]        # 6b8a0 <qnodes>
    1f76:	mov    edi,0x1
    1f7b:	mov    eax,0x1
    1f80:	cvtsi2ss xmm1,edx
    1f84:	divss  xmm0,xmm1
    1f88:	mulss  xmm0,DWORD PTR [rip+0x185d0]        # 1a560 <rankoffsets.4429+0x220>
    1f90:	cvtss2sd xmm0,xmm0
    1f94:	call   1420 <__printf_chk@plt>
    1f99:	jmp    1740 <main+0x270>
    1f9e:	lea    edx,[rax-0x2]
    1fa1:	cmp    edx,0x1
    1fa4:	jbe    1ab7 <main+0x5e7>
    1faa:	lea    edx,[rax-0x4]
    1fad:	cmp    edx,0x1
    1fb0:	jbe    1ab7 <main+0x5e7>
    1fb6:	cmp    eax,0x1
    1fb9:	je     1ab7 <main+0x5e7>
    1fbf:	lea    r10,[rsp+0x5f60]
    1fc7:	push   rsi
    1fc8:	push   QWORD PTR [rsp+0x98]
    1fcf:	mov    rdi,r10
    1fd2:	push   QWORD PTR [rsp+0x98]
    1fd9:	push   QWORD PTR [rsp+0x98]
    1fe0:	mov    QWORD PTR [rsp+0x28],r10
    1fe5:	call   17690 <comp_to_coord>
    1fea:	movsxd rax,DWORD PTR [rip+0x676af]        # 696a0 <move_number>
    1ff1:	mov    edx,DWORD PTR [rip+0x29578d]        # 297784 <hash>
    1ff7:	xor    esi,esi
    1ff9:	movdqa xmm1,XMMWORD PTR [rsp+0xa0]
    2002:	lea    rcx,[rip+0x278e37]        # 27ae40 <hash_history>
    2009:	mov    DWORD PTR [rcx+rax*4],edx
    200c:	imul   rax,rax,0x18
    2010:	mov    rdx,QWORD PTR [rsp+0xb0]
    2018:	movups XMMWORD PTR [rsp+rax*1+0x2640],xmm1
    2020:	mov    QWORD PTR [rsp+rax*1+0x2650],rdx
    2028:	add    rsp,0x20
    202c:	lea    rdi,[rsp+0x80]
    2034:	call   8e00 <make>
    2039:	movsxd rax,DWORD PTR [rip+0x67660]        # 696a0 <move_number>
    2040:	movdqa xmm1,XMMWORD PTR [rip+0x2903d8]        # 292420 <path_x>
    2048:	mov    DWORD PTR [rip+0x23152],0x0        # 251a4 <userealholdings>
    2052:	sub    DWORD PTR [rip+0x64f07],0x1        # 66f60 <must_go>
    2059:	lea    edx,[rax+0x1]
    205c:	shl    rax,0x4
    2060:	mov    DWORD PTR [rip+0x6763a],edx        # 696a0 <move_number>
    2066:	movaps XMMWORD PTR [rsp+rax*1+0xa0],xmm1
    206e:	call   42a0 <is_draw>
    2073:	mov    r10,QWORD PTR [rsp+0x8]
    2078:	test   eax,eax
    207a:	je     24b3 <main+0xfe3>
    2080:	mov    DWORD PTR [rip+0x27b816],0x5        # 27d8a0 <result>
    208a:	xor    DWORD PTR [rip+0x6761f],0x1        # 696b0 <root_to_move>
    2091:	mov    QWORD PTR [rsp+0x18],r10
    2096:	call   18860 <reset_piece_square>
    209b:	mov    eax,DWORD PTR [rip+0x279837]        # 27b8d8 <book_ply>
    20a1:	mov    r10,QWORD PTR [rsp+0x18]
    20a6:	cmp    eax,0x27
    20a9:	mov    DWORD PTR [rsp+0x8],eax
    20ad:	jg     20d0 <main+0xc00>
    20af:	mov    edx,0x100
    20b4:	mov    rsi,r10
    20b7:	test   eax,eax
    20b9:	jne    2582 <main+0x10b2>
    20bf:	lea    rdi,[rip+0x29557a]        # 297640 <opening_history>
    20c6:	call   1410 <__strcpy_chk@plt>
    20cb:	mov    r10,QWORD PTR [rsp+0x18]
    20d0:	mov    edx,DWORD PTR [rip+0x279806]        # 27b8dc <nodes>
    20d6:	pxor   xmm0,xmm0
    20da:	pxor   xmm1,xmm1
    20de:	mov    eax,DWORD PTR [rsp+0x8]
    20e2:	cvtsi2ss xmm0,DWORD PTR [rip+0x697b6]        # 6b8a0 <qnodes>
    20ea:	mov    edi,0x1
    20ef:	mov    QWORD PTR [rsp+0x28],r10
    20f4:	lea    rsi,[rip+0x18296]        # 1a391 <rankoffsets.4429+0x51>
    20fb:	cvtsi2ss xmm1,edx
    20ff:	add    eax,0x1
    2102:	mov    DWORD PTR [rip+0x2797d0],eax        # 27b8d8 <book_ply>
    2108:	mov    eax,0x1
    210d:	divss  xmm0,xmm1
    2111:	mulss  xmm0,DWORD PTR [rip+0x18447]        # 1a560 <rankoffsets.4429+0x220>
    2119:	cvtss2sd xmm0,xmm0
    211d:	call   1420 <__printf_chk@plt>
    2122:	mov    eax,DWORD PTR [rip+0x23090]        # 251b8 <ECacheHits>
    2128:	mov    edx,DWORD PTR [rip+0x2309a]        # 251c8 <ECacheProbes>
    212e:	pxor   xmm0,xmm0
    2132:	pxor   xmm1,xmm1
    2136:	mov    edi,0x1
    213b:	mov    rcx,rax
    213e:	cvtsi2ss xmm0,rax
    2143:	mov    eax,edx
    2145:	cvtsi2ss xmm1,rax
    214a:	addss  xmm1,DWORD PTR [rip+0x18412]        # 1a564 <rankoffsets.4429+0x224>
    2152:	mov    eax,0x1
    2157:	lea    rsi,[rip+0x182e2]        # 1a440 <rankoffsets.4429+0x100>
    215e:	divss  xmm0,xmm1
    2162:	mulss  xmm0,DWORD PTR [rip+0x183f6]        # 1a560 <rankoffsets.4429+0x220>
    216a:	cvtss2sd xmm0,xmm0
    216e:	call   1420 <__printf_chk@plt>
    2173:	mov    ecx,DWORD PTR [rip+0x295607]        # 297780 <TTProbes>
    2179:	mov    eax,DWORD PTR [rip+0x295615]        # 297794 <TTHits>
    217f:	pxor   xmm0,xmm0
    2183:	pxor   xmm1,xmm1
    2187:	mov    r8d,DWORD PTR [rip+0x295606]        # 297794 <TTHits>
    218e:	mov    edx,DWORD PTR [rip+0x2955fc]        # 297790 <TTStores>
    2194:	cvtsi2ss xmm0,rax
    2199:	mov    eax,ecx
    219b:	mov    edi,0x1
    21a0:	cvtsi2ss xmm1,rax
    21a5:	addss  xmm1,DWORD PTR [rip+0x183b7]        # 1a564 <rankoffsets.4429+0x224>
    21ad:	mov    eax,0x1
    21b2:	lea    rsi,[rip+0x182bf]        # 1a478 <rankoffsets.4429+0x138>
    21b9:	divss  xmm0,xmm1
    21bd:	mulss  xmm0,DWORD PTR [rip+0x1839b]        # 1a560 <rankoffsets.4429+0x220>
    21c5:	cvtss2sd xmm0,xmm0
    21c9:	call   1420 <__printf_chk@plt>
    21ce:	mov    eax,DWORD PTR [rip+0x27be00]        # 27dfd4 <NCuts>
    21d4:	mov    edx,DWORD PTR [rip+0x295592]        # 29776c <NTries>
    21da:	pxor   xmm0,xmm0
    21de:	pxor   xmm1,xmm1
    21e2:	mov    r8d,DWORD PTR [rip+0x29555b]        # 297744 <TExt>
    21e9:	lea    rsi,[rip+0x182c8]        # 1a4b8 <rankoffsets.4429+0x178>
    21f0:	cvtsi2ss xmm0,rax
    21f5:	mulss  xmm0,DWORD PTR [rip+0x18363]        # 1a560 <rankoffsets.4429+0x220>
    21fd:	mov    rcx,rax
    2200:	mov    eax,edx
    2202:	cvtsi2ss xmm1,rax
    2207:	mov    edi,0x1
    220c:	mov    eax,0x1
    2211:	addss  xmm1,DWORD PTR [rip+0x1834b]        # 1a564 <rankoffsets.4429+0x224>
    2219:	divss  xmm0,xmm1
    221d:	cvtss2sd xmm0,xmm0
    2221:	call   1420 <__printf_chk@plt>
    2226:	mov    ecx,DWORD PTR [rip+0x656b0]        # 678dc <razor_drop>
    222c:	mov    r8d,DWORD PTR [rip+0x66991]        # 68bc4 <razor_material>
    2233:	mov    edx,DWORD PTR [rip+0x6745b]        # 69694 <ext_check>
    2239:	lea    rsi,[rip+0x182b0]        # 1a4f0 <rankoffsets.4429+0x1b0>
    2240:	mov    edi,0x1
    2245:	xor    eax,eax
    2247:	call   1420 <__printf_chk@plt>
    224c:	mov    eax,DWORD PTR [rip+0x6568e]        # 678e0 <FHF>
    2252:	pxor   xmm0,xmm0
    2256:	pxor   xmm1,xmm1
    225a:	lea    rsi,[rip+0x1814d]        # 1a3ae <rankoffsets.4429+0x6e>
    2261:	mov    edi,0x1
    2266:	cvtsi2ss xmm0,rax
    226b:	mov    eax,DWORD PTR [rip+0x66e1f]        # 69090 <FH>
    2271:	mulss  xmm0,DWORD PTR [rip+0x182e7]        # 1a560 <rankoffsets.4429+0x220>
    2279:	add    eax,0x1
    227c:	cvtsi2ss xmm1,rax
    2281:	mov    eax,0x1
    2286:	divss  xmm0,xmm1
    228a:	cvtss2sd xmm0,xmm0
    228e:	call   1420 <__printf_chk@plt>
    2293:	mov    edx,DWORD PTR [rip+0x22f07]        # 251a0 <black_hand_eval>
    2299:	mov    r9d,DWORD PTR [rip+0x22f0c]        # 251ac <white_hand_eval>
    22a0:	mov    r8d,DWORD PTR [rip+0x3c481]        # 3e728 <maxposdiff>
    22a7:	mov    esi,0xf4240
    22ac:	mov    edi,0xfff0bdc0
    22b1:	mov    DWORD PTR [rsp+0x24],edx
    22b5:	mov    DWORD PTR [rsp+0x18],r9d
    22ba:	mov    DWORD PTR [rsp+0x8],r8d
    22bf:	call   53c0 <eval>
    22c4:	lea    rsi,[rip+0x1d005]        # 1f2d0 <scentral+0x4f0>
    22cb:	mov    edi,0x1
    22d0:	push   r11
    22d2:	mov    edx,DWORD PTR [rsp+0x2c]
    22d6:	mov    ecx,eax
    22d8:	xor    eax,eax
    22da:	push   rdx
    22db:	mov    edx,DWORD PTR [rip+0x321ff]        # 344e0 <Material>
    22e1:	mov    r9d,DWORD PTR [rsp+0x28]
    22e6:	mov    r8d,DWORD PTR [rsp+0x18]
    22eb:	call   1420 <__printf_chk@plt>
    22f0:	mov    ecx,DWORD PTR [rip+0x22eb2]        # 251a8 <hold_hash>
    22f6:	xor    eax,eax
    22f8:	mov    edx,DWORD PTR [rip+0x295486]        # 297784 <hash>
    22fe:	lea    rsi,[rip+0x1cd2d]        # 1f032 <scentral+0x252>
    2305:	mov    edi,0x1
    230a:	call   1420 <__printf_chk@plt>
    230f:	mov    eax,DWORD PTR [rip+0x27b58b]        # 27d8a0 <result>
    2315:	pop    rdx
    2316:	pop    rcx
    2317:	mov    r10,QWORD PTR [rsp+0x28]
    231c:	test   eax,eax
    231e:	jne    1a6e <main+0x59e>
    2324:	mov    ebx,DWORD PTR [rip+0x29544e]        # 297778 <xb_mode>
    232a:	mov    eax,DWORD PTR [rsp+0x80]
    2331:	mov    edx,DWORD PTR [rip+0x222a9]        # 245e0 <dummy>
    2337:	test   ebx,ebx
    2339:	je     2518 <main+0x1048>
    233f:	cmp    edx,eax
    2341:	jne    2352 <main+0xe82>
    2343:	mov    eax,DWORD PTR [rip+0x2229b]        # 245e4 <dummy+0x4>
    2349:	cmp    DWORD PTR [rsp+0x84],eax
    2350:	je     2368 <main+0xe98>
    2352:	mov    rdx,r10
    2355:	lea    rsi,[rip+0x1ccf0]        # 1f04c <scentral+0x26c>
    235c:	mov    edi,0x1
    2361:	xor    eax,eax
    2363:	call   1420 <__printf_chk@plt>
    2368:	xor    ebx,ebx
    236a:	cmp    DWORD PTR [rip+0x27944f],0x1        # 27b7c0 <Variant>
    2371:	jne    1748 <main+0x278>
    2377:	xor    edi,edi
    2379:	call   dff0 <CheckBadFlow>
    237e:	jmp    1748 <main+0x278>
    2383:	lea    rdi,[rip+0x27b77e]        # 27db08 <post>
    238a:	call   18cb0 <toggle_bool>
    238f:	cmp    DWORD PTR [rip+0x2953e2],0x0        # 297778 <xb_mode>
    2396:	je     1740 <main+0x270>
    239c:	mov    DWORD PTR [rip+0x27b762],0x1        # 27db08 <post>
    23a6:	jmp    1740 <main+0x270>
    23ab:	call   16680 <clear_tt>
    23b0:	call   4450 <reset_ecache>
    23b5:	jmp    1e1d <main+0x94d>
    23ba:	lea    rsi,[rip+0x1cd7e]        # 1f13f <scentral+0x35f>
    23c1:	mov    rdi,r15
    23c4:	call   13a0 <strcmp@plt>
    23c9:	test   eax,eax
    23cb:	je     1740 <main+0x270>
    23d1:	lea    rsi,[rip+0x1cd6e]        # 1f146 <scentral+0x366>
    23d8:	mov    rdi,r15
    23db:	call   13a0 <strcmp@plt>
    23e0:	test   eax,eax
    23e2:	je     245f <main+0xf8f>
    23e4:	lea    rsi,[rip+0x1cd60]        # 1f14b <scentral+0x36b>
    23eb:	mov    rdi,r15
    23ee:	call   13a0 <strcmp@plt>
    23f3:	test   eax,eax
    23f5:	je     24cf <main+0xfff>
    23fb:	lea    rsi,[rip+0x1d5c1]        # 1f9c3 <scentral+0xbe3>
    2402:	mov    rdi,r15
    2405:	call   13a0 <strcmp@plt>
    240a:	test   eax,eax
    240c:	je     1740 <main+0x270>
    2412:	lea    rsi,[rip+0x1cd37]        # 1f150 <scentral+0x370>
    2419:	mov    rdi,r15
    241c:	call   13a0 <strcmp@plt>
    2421:	test   eax,eax
    2423:	jne    24de <main+0x100e>
    2429:	mov    DWORD PTR [rip+0x27b0ed],0x1        # 27d520 <white_to_move>
    2433:	mov    DWORD PTR [rip+0x67273],0x0        # 696b0 <root_to_move>
    243d:	mov    DWORD PTR [rip+0x29530d],0x0        # 297754 <comp_color>
    2447:	jmp    1740 <main+0x270>
    244c:	lea    rdi,[rip+0x1cc07]        # 1f05a <scentral+0x27a>
    2453:	xor    ebp,ebp
    2455:	call   12d0 <puts@plt>
    245a:	jmp    1748 <main+0x278>
    245f:	mov    DWORD PTR [rip+0x66d63],0x1        # 691cc <allow_pondering>
    2469:	jmp    1740 <main+0x270>
    246e:	cmp    eax,0x2
    2471:	je     244c <main+0xf7c>
    2473:	lea    edx,[rax-0x4]
    2476:	cmp    edx,0x1
    2479:	jbe    1ac0 <main+0x5f0>
    247f:	cmp    eax,0x1
    2482:	je     1ac0 <main+0x5f0>
    2488:	jmp    1fbf <main+0xaef>
    248d:	lea    rdi,[rip+0x1cc04]        # 1f098 <scentral+0x2b8>
    2494:	xor    ebp,ebp
    2496:	call   12d0 <puts@plt>
    249b:	jmp    1748 <main+0x278>
    24a0:	lea    rdi,[rip+0x1cbd7]        # 1f07e <scentral+0x29e>
    24a7:	xor    ebp,ebp
    24a9:	call   12d0 <puts@plt>
    24ae:	jmp    1748 <main+0x278>
    24b3:	cmp    DWORD PTR [rip+0x27b64a],0x64        # 27db04 <fifty>
    24ba:	jle    208a <main+0xbba>
    24c0:	mov    DWORD PTR [rip+0x27b3d6],0x4        # 27d8a0 <result>
    24ca:	jmp    208a <main+0xbba>
    24cf:	mov    DWORD PTR [rip+0x66cf3],0x0        # 691cc <allow_pondering>
    24d9:	jmp    1740 <main+0x270>
    24de:	lea    rsi,[rip+0x1cc71]        # 1f156 <scentral+0x376>
    24e5:	mov    rdi,r15
    24e8:	call   13a0 <strcmp@plt>
    24ed:	test   eax,eax
    24ef:	jne    259d <main+0x10cd>
    24f5:	mov    DWORD PTR [rip+0x27b021],0x0        # 27d520 <white_to_move>
    24ff:	mov    DWORD PTR [rip+0x671a7],0x1        # 696b0 <root_to_move>
    2509:	mov    DWORD PTR [rip+0x295241],0x1        # 297754 <comp_color>
    2513:	jmp    1740 <main+0x270>
    2518:	cmp    edx,eax
    251a:	jne    252f <main+0x105f>
    251c:	mov    eax,DWORD PTR [rip+0x220c2]        # 245e4 <dummy+0x4>
    2522:	cmp    DWORD PTR [rsp+0x84],eax
    2529:	je     1748 <main+0x278>
    252f:	mov    rdx,r10
    2532:	lea    rsi,[rip+0x1cb1c]        # 1f055 <scentral+0x275>
    2539:	mov    edi,0x1
    253e:	xor    eax,eax
    2540:	call   1420 <__printf_chk@plt>
    2545:	jmp    1748 <main+0x278>
    254a:	cmp    ecx,edx
    254c:	jne    2561 <main+0x1091>
    254e:	mov    ecx,DWORD PTR [rip+0x22090]        # 245e4 <dummy+0x4>
    2554:	cmp    DWORD PTR [rsp+0x84],ecx
    255b:	je     1ab7 <main+0x5e7>
    2561:	mov    rdx,r10
    2564:	lea    rsi,[rip+0x1caea]        # 1f055 <scentral+0x275>
    256b:	mov    edi,0x1
    2570:	xor    eax,eax
    2572:	call   1420 <__printf_chk@plt>
    2577:	mov    eax,DWORD PTR [rip+0x27b323]        # 27d8a0 <result>
    257d:	jmp    1ab7 <main+0x5e7>
    2582:	lea    rdi,[rip+0x2950b7]        # 297640 <opening_history>
    2589:	mov    QWORD PTR [rsp+0x18],r10
    258e:	call   1280 <__strcat_chk@plt>
    2593:	mov    r10,QWORD PTR [rsp+0x18]
    2598:	jmp    20d0 <main+0xc00>
    259d:	lea    rsi,[rip+0x1cbb8]        # 1f15c <scentral+0x37c>
    25a4:	mov    rdi,r15
    25a7:	call   13a0 <strcmp@plt>
    25ac:	test   eax,eax
    25ae:	je     25ee <main+0x111e>
    25b0:	lea    rsi,[rip+0x1cbab]        # 1f162 <scentral+0x382>
    25b7:	mov    rdi,r15
    25ba:	call   13a0 <strcmp@plt>
    25bf:	test   eax,eax
    25c1:	je     26d4 <main+0x1204>
    25c7:	lea    rsi,[rip+0x1c22a]        # 1e7f8 <sbishop+0x9d8>
    25ce:	mov    rdi,r15
    25d1:	call   13a0 <strcmp@plt>
    25d6:	test   eax,eax
    25d8:	jne    25f9 <main+0x1129>
    25da:	mov    eax,DWORD PTR [rip+0x27af40]        # 27d520 <white_to_move>
    25e0:	xor    r13d,r13d
    25e3:	mov    DWORD PTR [rip+0x29516b],eax        # 297754 <comp_color>
    25e9:	jmp    1740 <main+0x270>
    25ee:	mov    r13d,0x1
    25f4:	jmp    1740 <main+0x270>
    25f9:	mov    edx,0x4
    25fe:	lea    rsi,[rip+0x1bff6]        # 1e5fb <sbishop+0x7db>
    2605:	mov    rdi,r15
    2608:	call   12c0 <strncmp@plt>
    260d:	test   eax,eax
    260f:	je     27fb <main+0x132b>
    2615:	mov    edx,0x4
    261a:	lea    rsi,[rip+0x1cb50]        # 1f171 <scentral+0x391>
    2621:	mov    rdi,r15
    2624:	call   12c0 <strncmp@plt>
    2629:	test   eax,eax
    262b:	je     27db <main+0x130b>
    2631:	mov    edx,0x5
    2636:	lea    rsi,[rip+0x1cb39]        # 1f176 <scentral+0x396>
    263d:	mov    rdi,r15
    2640:	call   12c0 <strncmp@plt>
    2645:	test   eax,eax
    2647:	jne    2740 <main+0x1270>
    264d:	lea    rdi,[rsp+0x5e66]
    2655:	mov    esi,0x3a
    265a:	mov    QWORD PTR [rsp+0x8],rdi
    265f:	call   1330 <strchr@plt>
    2664:	mov    rdi,QWORD PTR [rsp+0x8]
    2669:	test   rax,rax
    266c:	je     2702 <main+0x1232>
    2672:	lea    rdx,[rip+0x27aeaf]        # 27d528 <moves_to_tc>
    2679:	lea    r9,[rip+0x2950f4]        # 297774 <inc>
    2680:	xor    eax,eax
    2682:	lea    r8,[rip+0x67013]        # 6969c <sec_per_game>
    2689:	lea    rcx,[rip+0x27b948]        # 27dfd8 <min_per_game>
    2690:	lea    rsi,[rip+0x1cae5]        # 1f17c <scentral+0x39c>
    2697:	call   1400 <__isoc99_sscanf@plt>
    269c:	imul   edx,DWORD PTR [rip+0x66ff9],0x64        # 6969c <sec_per_game>
    26a3:	imul   eax,DWORD PTR [rip+0x27b92b],0x1770        # 27dfd8 <min_per_game>
    26ad:	add    eax,edx
    26af:	mov    DWORD PTR [rip+0x2950bb],eax        # 297770 <time_left>
    26b5:	mov    DWORD PTR [rip+0x27b915],eax        # 27dfd0 <opp_time>
    26bb:	mov    DWORD PTR [rip+0x29508b],0x0        # 297750 <fixed_time>
    26c5:	mov    DWORD PTR [rip+0x27b911],0x0        # 27dfe0 <time_cushion>
    26cf:	jmp    1740 <main+0x270>
    26d4:	call   bbb0 <check_phase>
    26d9:	mov    esi,0xf4240
    26de:	mov    edi,0xfff0bdc0
    26e3:	call   53c0 <eval>
    26e8:	lea    rsi,[rip+0x1ca78]        # 1f167 <scentral+0x387>
    26ef:	mov    edi,0x1
    26f4:	mov    edx,eax
    26f6:	xor    eax,eax
    26f8:	call   1420 <__printf_chk@plt>
    26fd:	jmp    1740 <main+0x270>
    2702:	lea    r8,[rip+0x29506b]        # 297774 <inc>
    2709:	lea    rcx,[rip+0x27b8c8]        # 27dfd8 <min_per_game>
    2710:	xor    eax,eax
    2712:	lea    rdx,[rip+0x27ae0f]        # 27d528 <moves_to_tc>
    2719:	lea    rsi,[rip+0x1ca68]        # 1f188 <scentral+0x3a8>
    2720:	call   1400 <__isoc99_sscanf@plt>
    2725:	imul   eax,DWORD PTR [rip+0x27b8a9],0x1770        # 27dfd8 <min_per_game>
    272f:	mov    DWORD PTR [rip+0x29503b],eax        # 297770 <time_left>
    2735:	mov    DWORD PTR [rip+0x27b895],eax        # 27dfd0 <opp_time>
    273b:	jmp    26bb <main+0x11eb>
    2740:	mov    edx,0x6
    2745:	lea    rsi,[rip+0x1ca45]        # 1f191 <scentral+0x3b1>
    274c:	mov    rdi,r15
    274f:	call   12c0 <strncmp@plt>
    2754:	test   eax,eax
    2756:	je     304b <main+0x1b7b>
    275c:	mov    edx,0x7
    2761:	lea    rsi,[rip+0x1ca30]        # 1f198 <scentral+0x3b8>
    2768:	mov    rdi,r15
    276b:	call   12c0 <strncmp@plt>
    2770:	test   eax,eax
    2772:	je     303e <main+0x1b6e>
    2778:	mov    edx,0x7
    277d:	lea    rsi,[rip+0x1ca1c]        # 1f1a0 <scentral+0x3c0>
    2784:	mov    rdi,r15
    2787:	call   12c0 <strncmp@plt>
    278c:	test   eax,eax
    278e:	jne    2857 <main+0x1387>
    2794:	lea    rsi,[rip+0x1ca0d]        # 1f1a8 <scentral+0x3c8>
    279b:	mov    rdi,r15
    279e:	call   1480 <strstr@plt>
    27a3:	test   rax,rax
    27a6:	je     281b <main+0x134b>
    27a8:	mov    DWORD PTR [rip+0x27900e],0x2        # 27b7c0 <Variant>
    27b2:	lea    rsi,[rip+0x21c87]        # 24440 <std_material>
    27b9:	mov    ecx,0xe
    27be:	lea    rdi,[rip+0x21dbb]        # 24580 <material>
    27c5:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    27c7:	call   16780 <initialize_hash>
    27cc:	call   16680 <clear_tt>
    27d1:	call   4450 <reset_ecache>
    27d6:	jmp    1740 <main+0x270>
    27db:	lea    rdi,[rsp+0x5e65]
    27e3:	lea    rdx,[rip+0x27b7e6]        # 27dfd0 <opp_time>
    27ea:	lea    rsi,[rip+0x1c99d]        # 1f18e <scentral+0x3ae>
    27f1:	call   1400 <__isoc99_sscanf@plt>
    27f6:	jmp    1740 <main+0x270>
    27fb:	lea    rdi,[rsp+0x5e65]
    2803:	lea    rdx,[rip+0x294f66]        # 297770 <time_left>
    280a:	lea    rsi,[rip+0x1c97d]        # 1f18e <scentral+0x3ae>
    2811:	call   1400 <__isoc99_sscanf@plt>
    2816:	jmp    1740 <main+0x270>
    281b:	lea    rsi,[rip+0x1c98d]        # 1f1af <scentral+0x3cf>
    2822:	mov    rdi,r15
    2825:	call   1480 <strstr@plt>
    282a:	test   rax,rax
    282d:	je     2931 <main+0x1461>
    2833:	mov    DWORD PTR [rip+0x278f83],0x0        # 27b7c0 <Variant>
    283d:	lea    rsi,[rip+0x21bbc]        # 24400 <zh_material>
    2844:	mov    ecx,0xe
    2849:	lea    rdi,[rip+0x21d30]        # 24580 <material>
    2850:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2852:	jmp    27c7 <main+0x12f7>
    2857:	mov    edx,0x7
    285c:	lea    rsi,[rip+0x1c96f]        # 1f1d2 <scentral+0x3f2>
    2863:	mov    rdi,r15
    2866:	call   12c0 <strncmp@plt>
    286b:	test   eax,eax
    286d:	je     3011 <main+0x1b41>
    2873:	mov    edx,0x4
    2878:	lea    rsi,[rip+0x1c95b]        # 1f1da <scentral+0x3fa>
    287f:	mov    rdi,r15
    2882:	call   12c0 <strncmp@plt>
    2887:	test   eax,eax
    2889:	je     2faa <main+0x1ada>
    288f:	mov    edx,0x5
    2894:	lea    rsi,[rip+0x1c956]        # 1f1f1 <scentral+0x411>
    289b:	mov    rdi,r15
    289e:	call   12c0 <strncmp@plt>
    28a3:	test   eax,eax
    28a5:	jne    296d <main+0x149d>
    28ab:	mov    eax,DWORD PTR [rip+0x66def]        # 696a0 <move_number>
    28b1:	cmp    eax,0x1
    28b4:	jle    1740 <main+0x270>
    28ba:	sub    eax,0x1
    28bd:	xor    esi,esi
    28bf:	mov    DWORD PTR [rip+0x66ddb],eax        # 696a0 <move_number>
    28c5:	cdqe   
    28c7:	mov    rdx,rax
    28ca:	imul   rax,rax,0x18
    28ce:	shl    rdx,0x4
    28d2:	movdqa xmm1,XMMWORD PTR [rsp+rdx*1+0xa0]
    28db:	lea    rdi,[r14+rax*1]
    28df:	movaps XMMWORD PTR [rip+0x28fb3a],xmm1        # 292420 <path_x>
    28e6:	call   ae30 <unmake>
    28eb:	call   18860 <reset_piece_square>
    28f0:	mov    eax,DWORD PTR [rip+0x66daa]        # 696a0 <move_number>
    28f6:	xor    esi,esi
    28f8:	sub    eax,0x1
    28fb:	mov    DWORD PTR [rip+0x66d9f],eax        # 696a0 <move_number>
    2901:	cdqe   
    2903:	mov    rdx,rax
    2906:	imul   rax,rax,0x18
    290a:	shl    rdx,0x4
    290e:	movdqa xmm1,XMMWORD PTR [rsp+rdx*1+0xa0]
    2917:	lea    rdi,[r14+rax*1]
    291b:	movaps XMMWORD PTR [rip+0x28fafe],xmm1        # 292420 <path_x>
    2922:	call   ae30 <unmake>
    2927:	call   18860 <reset_piece_square>
    292c:	jmp    1740 <main+0x270>
    2931:	lea    rsi,[rip+0x1bc6a]        # 1e5a2 <sbishop+0x782>
    2938:	mov    rdi,r15
    293b:	call   1480 <strstr@plt>
    2940:	test   rax,rax
    2943:	je     309c <main+0x1bcc>
    2949:	mov    DWORD PTR [rip+0x278e6d],0x1        # 27b7c0 <Variant>
    2953:	lea    rsi,[rip+0x21aa6]        # 24400 <zh_material>
    295a:	mov    ecx,0xe
    295f:	lea    rdi,[rip+0x21c1a]        # 24580 <material>
    2966:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2968:	jmp    27c7 <main+0x12f7>
    296d:	mov    edx,0x4
    2972:	lea    rsi,[rip+0x1c87f]        # 1f1f8 <scentral+0x418>
    2979:	mov    rdi,r15
    297c:	call   12c0 <strncmp@plt>
    2981:	test   eax,eax
    2983:	je     2c00 <main+0x1730>
    2989:	movzx  edx,BYTE PTR [rsp+0x5e60]
    2991:	cmp    dl,0x2e
    2994:	je     1841 <main+0x371>
    299a:	test   ebx,ebx
    299c:	je     29f6 <main+0x1526>
    299e:	cmp    dl,0x63
    29a1:	je     3147 <main+0x1c77>
    29a7:	cmp    dl,0x23
    29aa:	je     3133 <main+0x1c63>
    29b0:	mov    BYTE PTR [rsp+0x8],dl
    29b4:	call   14a0 <__ctype_b_loc@plt>
    29b9:	mov    rsi,QWORD PTR [rax]
    29bc:	movsx  rax,BYTE PTR [rsp+0x8]
    29c2:	mov    rdx,rax
    29c5:	test   BYTE PTR [rsi+rax*2+0x1],0x4
    29ca:	je     29f6 <main+0x1526>
    29cc:	movsx  rcx,BYTE PTR [rsp+0x5e61]
    29d5:	mov    rax,rcx
    29d8:	test   BYTE PTR [rsi+rcx*2+0x1],0x4
    29dd:	je     29f6 <main+0x1526>
    29df:	movsx  rdi,BYTE PTR [rsp+0x5e62]
    29e8:	mov    rcx,rdi
    29eb:	test   BYTE PTR [rsi+rdi*2+0x1],0x8
    29f0:	jne    30de <main+0x1c0e>
    29f6:	mov    BYTE PTR [rsp+0x8],dl
    29fa:	mov    edx,0x7
    29ff:	lea    rsi,[rip+0x1c7f8]        # 1f1fe <scentral+0x41e>
    2a06:	mov    rdi,r15
    2a09:	call   12c0 <strncmp@plt>
    2a0e:	test   eax,eax
    2a10:	je     2f98 <main+0x1ac8>
    2a16:	mov    edx,0x8
    2a1b:	lea    rsi,[rip+0x1c7db]        # 1f1fd <scentral+0x41d>
    2a22:	mov    rdi,r15
    2a25:	call   12c0 <strncmp@plt>
    2a2a:	test   eax,eax
    2a2c:	je     2f86 <main+0x1ab6>
    2a32:	mov    edx,0x5
    2a37:	lea    rsi,[rip+0x1c7c8]        # 1f206 <scentral+0x426>
    2a3e:	mov    rdi,r15
    2a41:	call   12c0 <strncmp@plt>
    2a46:	test   eax,eax
    2a48:	je     2f79 <main+0x1aa9>
    2a4e:	mov    edx,0x4
    2a53:	lea    rsi,[rip+0x1c7b2]        # 1f20c <scentral+0x42c>
    2a5a:	mov    rdi,r15
    2a5d:	call   12c0 <strncmp@plt>
    2a62:	test   eax,eax
    2a64:	je     2f6f <main+0x1a9f>
    2a6a:	mov    edx,0x2
    2a6f:	lea    rsi,[rip+0x1bb82]        # 1e5f8 <sbishop+0x7d8>
    2a76:	mov    rdi,r15
    2a79:	call   12c0 <strncmp@plt>
    2a7e:	test   eax,eax
    2a80:	je     2f42 <main+0x1a72>
    2a86:	mov    edx,0x6
    2a8b:	lea    rsi,[rip+0x1c77f]        # 1f211 <scentral+0x431>
    2a92:	mov    rdi,r15
    2a95:	call   12c0 <strncmp@plt>
    2a9a:	test   eax,eax
    2a9c:	je     1740 <main+0x270>
    2aa2:	mov    edx,0x5
    2aa7:	lea    rsi,[rip+0x1c76a]        # 1f218 <scentral+0x438>
    2aae:	mov    rdi,r15
    2ab1:	call   12c0 <strncmp@plt>
    2ab6:	test   eax,eax
    2ab8:	je     2ed9 <main+0x1a09>
    2abe:	mov    edx,0x4
    2ac3:	lea    rsi,[rip+0x1c76e]        # 1f238 <scentral+0x458>
    2aca:	mov    rdi,r15
    2acd:	call   12c0 <strncmp@plt>
    2ad2:	test   eax,eax
    2ad4:	je     2ea4 <main+0x19d4>
    2ada:	mov    edx,0x5
    2adf:	lea    rsi,[rip+0x1c760]        # 1f246 <scentral+0x466>
    2ae6:	mov    rdi,r15
    2ae9:	call   12c0 <strncmp@plt>
    2aee:	test   eax,eax
    2af0:	je     2e97 <main+0x19c7>
    2af6:	mov    edx,0x5
    2afb:	lea    rsi,[rip+0x1c74a]        # 1f24c <scentral+0x46c>
    2b02:	mov    rdi,r15
    2b05:	call   12c0 <strncmp@plt>
    2b0a:	test   eax,eax
    2b0c:	je     2e16 <main+0x1946>
    2b12:	mov    edx,0x8
    2b17:	lea    rsi,[rip+0x1c5bf]        # 1f0dd <scentral+0x2fd>
    2b1e:	mov    rdi,r15
    2b21:	call   12c0 <strncmp@plt>
    2b26:	test   eax,eax
    2b28:	je     2e04 <main+0x1934>
    2b2e:	cmp    BYTE PTR [rsp+0x8],0x2e
    2b33:	je     1740 <main+0x270>
    2b39:	mov    edx,0x2
    2b3e:	lea    rsi,[rip+0x1c70d]        # 1f252 <scentral+0x472>
    2b45:	mov    rdi,r15
    2b48:	call   12c0 <strncmp@plt>
    2b4d:	test   eax,eax
    2b4f:	je     2dcb <main+0x18fb>
    2b55:	mov    edx,0x4
    2b5a:	lea    rsi,[rip+0x1c70e]        # 1f26f <scentral+0x48f>
    2b61:	mov    rdi,r15
    2b64:	call   12c0 <strncmp@plt>
    2b69:	test   eax,eax
    2b6b:	je     2dc1 <main+0x18f1>
    2b71:	mov    edx,0x8
    2b76:	lea    rsi,[rip+0x1c6f7]        # 1f274 <scentral+0x494>
    2b7d:	mov    rdi,r15
    2b80:	call   12c0 <strncmp@plt>
    2b85:	test   eax,eax
    2b87:	je     2d76 <main+0x18a6>
    2b8d:	mov    edx,0x8
    2b92:	lea    rsi,[rip+0x1c6e4]        # 1f27d <scentral+0x49d>
    2b99:	mov    rdi,r15
    2b9c:	call   12c0 <strncmp@plt>
    2ba1:	test   eax,eax
    2ba3:	je     1740 <main+0x270>
    2ba9:	mov    edx,0x8
    2bae:	lea    rsi,[rip+0x1c6d1]        # 1f286 <scentral+0x4a6>
    2bb5:	mov    rdi,r15
    2bb8:	call   12c0 <strncmp@plt>
    2bbd:	test   eax,eax
    2bbf:	je     2d65 <main+0x1895>
    2bc5:	lea    rsi,[rip+0x1ba01]        # 1e5cd <sbishop+0x7ad>
    2bcc:	mov    rdi,r15
    2bcf:	call   13a0 <strcmp@plt>
    2bd4:	test   eax,eax
    2bd6:	je     2c12 <main+0x1742>
    2bd8:	cmp    DWORD PTR [rip+0x294b99],0x0        # 297778 <xb_mode>
    2bdf:	jne    1740 <main+0x270>
    2be5:	mov    rdx,r15
    2be8:	lea    rsi,[rip+0x1c4dc]        # 1f0cb <scentral+0x2eb>
    2bef:	mov    edi,0x1
    2bf4:	xor    eax,eax
    2bf6:	call   1420 <__printf_chk@plt>
    2bfb:	jmp    1740 <main+0x270>
    2c00:	mov    DWORD PTR [rsp+0x20],0x0
    2c08:	mov    ebx,0x1
    2c0d:	jmp    1748 <main+0x278>
    2c12:	lea    rdx,[rip+0x218e7]        # 24500 <divider>
    2c19:	lea    rsi,[rip+0x1c66f]        # 1f28f <scentral+0x4af>
    2c20:	mov    edi,0x1
    2c25:	call   1420 <__printf_chk@plt>
    2c2a:	lea    rdi,[rip+0x1c897]        # 1f4c8 <scentral+0x6e8>
    2c31:	call   12d0 <puts@plt>
    2c36:	lea    rdi,[rip+0x1c8b3]        # 1f4f0 <scentral+0x710>
    2c3d:	call   12d0 <puts@plt>
    2c42:	lea    rdi,[rip+0x1c8cf]        # 1f518 <scentral+0x738>
    2c49:	call   12d0 <puts@plt>
    2c4e:	lea    rdi,[rip+0x1c8fb]        # 1f550 <scentral+0x770>
    2c55:	call   12d0 <puts@plt>
    2c5a:	lea    rdi,[rip+0x1c917]        # 1f578 <scentral+0x798>
    2c61:	call   12d0 <puts@plt>
    2c66:	lea    rdi,[rip+0x1c943]        # 1f5b0 <scentral+0x7d0>
    2c6d:	call   12d0 <puts@plt>
    2c72:	lea    rdi,[rip+0x1c967]        # 1f5e0 <scentral+0x800>
    2c79:	call   12d0 <puts@plt>
    2c7e:	lea    rdi,[rip+0x1c610]        # 1f295 <scentral+0x4b5>
    2c85:	call   12d0 <puts@plt>
    2c8a:	lea    rdi,[rip+0x1c61c]        # 1f2ad <scentral+0x4cd>
    2c91:	call   12d0 <puts@plt>
    2c96:	lea    rdi,[rip+0x1c973]        # 1f610 <scentral+0x830>
    2c9d:	call   12d0 <puts@plt>
    2ca2:	lea    rdi,[rip+0x1c99f]        # 1f648 <scentral+0x868>
    2ca9:	call   12d0 <puts@plt>
    2cae:	lea    rdi,[rip+0x1c9c3]        # 1f678 <scentral+0x898>
    2cb5:	call   12d0 <puts@plt>
    2cba:	lea    rdi,[rip+0x1c9e7]        # 1f6a8 <scentral+0x8c8>
    2cc1:	call   12d0 <puts@plt>
    2cc6:	lea    rdi,[rip+0x1ca0b]        # 1f6d8 <scentral+0x8f8>
    2ccd:	call   12d0 <puts@plt>
    2cd2:	lea    rdi,[rip+0x1ca27]        # 1f700 <scentral+0x920>
    2cd9:	call   12d0 <puts@plt>
    2cde:	lea    rdi,[rip+0x1ca53]        # 1f738 <scentral+0x958>
    2ce5:	call   12d0 <puts@plt>
    2cea:	lea    rdi,[rip+0x1ca87]        # 1f778 <scentral+0x998>
    2cf1:	call   12d0 <puts@plt>
    2cf6:	lea    rdi,[rip+0x1caab]        # 1f7a8 <scentral+0x9c8>
    2cfd:	call   12d0 <puts@plt>
    2d02:	lea    rdi,[rip+0x1cad7]        # 1f7e0 <scentral+0xa00>
    2d09:	call   12d0 <puts@plt>
    2d0e:	lea    rdi,[rip+0x1cb03]        # 1f818 <scentral+0xa38>
    2d15:	call   12d0 <puts@plt>
    2d1a:	lea    rdi,[rip+0x1cb1f]        # 1f840 <scentral+0xa60>
    2d21:	call   12d0 <puts@plt>
    2d26:	lea    rdi,[rip+0x1cb3b]        # 1f868 <scentral+0xa88>
    2d2d:	call   12d0 <puts@plt>
    2d32:	lea    rdi,[rip+0x1cb5f]        # 1f898 <scentral+0xab8>
    2d39:	call   12d0 <puts@plt>
    2d3e:	lea    rdx,[rip+0x217bb]        # 24500 <divider>
    2d45:	lea    rsi,[rip+0x1c543]        # 1f28f <scentral+0x4af>
    2d4c:	xor    eax,eax
    2d4e:	mov    edi,0x1
    2d53:	call   1420 <__printf_chk@plt>
    2d58:	mov    DWORD PTR [rsp+0x58],0x0
    2d60:	jmp    1740 <main+0x270>
    2d65:	lea    rdi,[rip+0x1c71c]        # 1f488 <scentral+0x6a8>
    2d6c:	call   12d0 <puts@plt>
    2d71:	jmp    1740 <main+0x270>
    2d76:	lea    rdi,[rip+0x1c5fb]        # 1f378 <scentral+0x598>
    2d7d:	call   12d0 <puts@plt>
    2d82:	lea    rdi,[rip+0x1c62f]        # 1f3b8 <scentral+0x5d8>
    2d89:	call   12d0 <puts@plt>
    2d8e:	lea    rdi,[rip+0x1c65b]        # 1f3f0 <scentral+0x610>
    2d95:	call   12d0 <puts@plt>
    2d9a:	lea    rdi,[rip+0x1c66f]        # 1f410 <scentral+0x630>
    2da1:	call   12d0 <puts@plt>
    2da6:	lea    rdi,[rip+0x1c6ab]        # 1f458 <scentral+0x678>
    2dad:	call   12d0 <puts@plt>
    2db2:	mov    DWORD PTR [rip+0x2949bc],0x2        # 297778 <xb_mode>
    2dbc:	jmp    1740 <main+0x270>
    2dc1:	mov    ebp,0x1
    2dc6:	jmp    1740 <main+0x270>
    2dcb:	lea    rdi,[rsp+0x5e63]
    2dd3:	lea    rdx,[rip+0x28f62e]        # 292408 <maxdepth>
    2dda:	lea    rsi,[rip+0x1cb11]        # 1f8f2 <scentral+0xb12>
    2de1:	call   1400 <__isoc99_sscanf@plt>
    2de6:	mov    edx,DWORD PTR [rip+0x28f61c]        # 292408 <maxdepth>
    2dec:	lea    rsi,[rip+0x1c462]        # 1f255 <scentral+0x475>
    2df3:	xor    eax,eax
    2df5:	mov    edi,0x1
    2dfa:	call   1420 <__printf_chk@plt>
    2dff:	jmp    1740 <main+0x270>
    2e04:	lea    rdi,[rsp+0x5e69]
    2e0c:	call   44e0 <setup_epd_line>
    2e11:	jmp    1740 <main+0x270>
    2e16:	lea    rsi,[rip+0x21623]        # 24440 <std_material>
    2e1d:	mov    ecx,0xe
    2e22:	xor    r13d,r13d
    2e25:	mov    DWORD PTR [rip+0x278991],0x2        # 27b7c0 <Variant>
    2e2f:	lea    rdi,[rip+0x2174a]        # 24580 <material>
    2e36:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2e38:	call   18a40 <init_game>
    2e3d:	call   16780 <initialize_hash>
    2e42:	call   16680 <clear_tt>
    2e47:	call   4450 <reset_ecache>
    2e4c:	mov    DWORD PTR [rip+0x2948fa],0x0        # 297750 <fixed_time>
    2e56:	mov    DWORD PTR [rip+0x66850],0x0        # 696b0 <root_to_move>
    2e60:	mov    DWORD PTR [rip+0x2948ea],0x0        # 297754 <comp_color>
    2e6a:	mov    DWORD PTR [rip+0x6682c],0x0        # 696a0 <move_number>
    2e74:	mov    DWORD PTR [rip+0x2948ea],0x0        # 297768 <bookidx>
    2e7e:	mov    DWORD PTR [rip+0x2948dc],0x7d0        # 297764 <opp_rating>
    2e88:	mov    DWORD PTR [rip+0x28f572],0x7d0        # 292404 <my_rating>
    2e92:	jmp    1740 <main+0x270>
    2e97:	mov    DWORD PTR [rsp+0x14],0x1
    2e9f:	jmp    1740 <main+0x270>
    2ea4:	lea    rdx,[rsp+0x5c]
    2ea9:	lea    rdi,[rsp+0x5e65]
    2eb1:	lea    rsi,[rip+0x1ca3a]        # 1f8f2 <scentral+0xb12>
    2eb8:	call   1400 <__isoc99_sscanf@plt>
    2ebd:	mov    edx,DWORD PTR [rsp+0x5c]
    2ec1:	mov    edi,0x1
    2ec6:	xor    eax,eax
    2ec8:	lea    rsi,[rip+0x1c36e]        # 1f23d <scentral+0x45d>
    2ecf:	call   1420 <__printf_chk@plt>
    2ed4:	jmp    1740 <main+0x270>
    2ed9:	lea    rsi,[rip+0x1c33e]        # 1f21e <scentral+0x43e>
    2ee0:	mov    edi,0x1
    2ee5:	call   1420 <__printf_chk@plt>
    2eea:	call   18c90 <rtime>
    2eef:	mov    rdx,QWORD PTR [rip+0x2165a]        # 24550 <stdin@@GLIBC_2.2.5>
    2ef6:	mov    esi,0x100
    2efb:	lea    rdi,[rsp+0x6060]
    2f03:	mov    QWORD PTR [rsp+0x8],rdi
    2f08:	mov    QWORD PTR [rip+0x27a731],rax        # 27d640 <start_time>
    2f0f:	call   18c30 <rinput>
    2f14:	mov    rdi,QWORD PTR [rsp+0x8]
    2f19:	mov    edx,0xa
    2f1e:	xor    esi,esi
    2f20:	call   13d0 <strtol@plt>
    2f25:	mov    edi,0xa
    2f2a:	imul   eax,eax,0x64
    2f2d:	mov    DWORD PTR [rip+0x64079],eax        # 66fac <pn_time>
    2f33:	call   12a0 <putchar@plt>
    2f38:	call   10460 <proofnumbersearch>
    2f3d:	jmp    1740 <main+0x270>
    2f42:	lea    rdi,[rsp+0x5e63]
    2f4a:	lea    rdx,[rip+0x2947ff]        # 297750 <fixed_time>
    2f51:	lea    rsi,[rip+0x1c99a]        # 1f8f2 <scentral+0xb12>
    2f58:	call   1400 <__isoc99_sscanf@plt>
    2f5d:	imul   eax,DWORD PTR [rip+0x2947ec],0x64        # 297750 <fixed_time>
    2f64:	mov    DWORD PTR [rip+0x2947e6],eax        # 297750 <fixed_time>
    2f6a:	jmp    1740 <main+0x270>
    2f6f:	call   4c00 <run_epd_testsuite>
    2f74:	jmp    1740 <main+0x270>
    2f79:	mov    rdi,r15
    2f7c:	call   d190 <HandlePtell>
    2f81:	jmp    1740 <main+0x270>
    2f86:	lea    rdi,[rsp+0x5e68]
    2f8e:	call   d0d0 <HandlePartner>
    2f93:	jmp    1740 <main+0x270>
    2f98:	lea    rdi,[rsp+0x5e67]
    2fa0:	call   d0d0 <HandlePartner>
    2fa5:	jmp    1740 <main+0x270>
    2faa:	mov    edx,DWORD PTR [rip+0x666f0]        # 696a0 <move_number>
    2fb0:	lea    rsi,[rip+0x1c228]        # 1f1df <scentral+0x3ff>
    2fb7:	mov    edi,0x1
    2fbc:	call   1420 <__printf_chk@plt>
    2fc1:	mov    eax,DWORD PTR [rip+0x666d9]        # 696a0 <move_number>
    2fc7:	test   eax,eax
    2fc9:	jle    1740 <main+0x270>
    2fcf:	sub    eax,0x1
    2fd2:	xor    esi,esi
    2fd4:	mov    DWORD PTR [rip+0x666c6],eax        # 696a0 <move_number>
    2fda:	cdqe   
    2fdc:	mov    rdx,rax
    2fdf:	imul   rax,rax,0x18
    2fe3:	shl    rdx,0x4
    2fe7:	movdqa xmm1,XMMWORD PTR [rsp+rdx*1+0xa0]
    2ff0:	lea    rdi,[r14+rax*1]
    2ff4:	movaps XMMWORD PTR [rip+0x28f425],xmm1        # 292420 <path_x>
    2ffb:	call   ae30 <unmake>
    3000:	call   18860 <reset_piece_square>
    3005:	xor    DWORD PTR [rip+0x666a4],0x1        # 696b0 <root_to_move>
    300c:	jmp    1740 <main+0x270>
    3011:	mov    DWORD PTR [rip+0x661ad],0x1        # 691c8 <is_analyzing>
    301b:	lea    rdi,[rsp+0x30]
    3020:	mov    DWORD PTR [rip+0x294732],0x1        # 29775c <is_pondering>
    302a:	call   13f80 <think>
    302f:	mov    DWORD PTR [rip+0x294727],0x0        # 297760 <ply>
    3039:	jmp    1740 <main+0x270>
    303e:	mov    rdi,r15
    3041:	call   3a70 <ProcessHoldings>
    3046:	jmp    1740 <main+0x270>
    304b:	lea    rdi,[rsp+0x5e67]
    3053:	lea    rcx,[rip+0x29470a]        # 297764 <opp_rating>
    305a:	lea    rdx,[rip+0x28f3a3]        # 292404 <my_rating>
    3061:	lea    rsi,[rip+0x1c123]        # 1f18b <scentral+0x3ab>
    3068:	call   1400 <__isoc99_sscanf@plt>
    306d:	cmp    DWORD PTR [rip+0x28f390],0x0        # 292404 <my_rating>
    3074:	jne    3080 <main+0x1bb0>
    3076:	mov    DWORD PTR [rip+0x28f384],0x7d0        # 292404 <my_rating>
    3080:	cmp    DWORD PTR [rip+0x2946dd],0x0        # 297764 <opp_rating>
    3087:	jne    1740 <main+0x270>
    308d:	mov    DWORD PTR [rip+0x2946cd],0x7d0        # 297764 <opp_rating>
    3097:	jmp    1740 <main+0x270>
    309c:	lea    rsi,[rip+0x1c117]        # 1f1ba <scentral+0x3da>
    30a3:	mov    rdi,r15
    30a6:	call   1480 <strstr@plt>
    30ab:	test   rax,rax
    30ae:	je     30f1 <main+0x1c21>
    30b0:	mov    DWORD PTR [rip+0x278706],0x3        # 27b7c0 <Variant>
    30ba:	lea    rsi,[rip+0x212ff]        # 243c0 <suicide_material>
    30c1:	lea    rdi,[rip+0x214b8]        # 24580 <material>
    30c8:	mov    ecx,0xe
    30cd:	mov    DWORD PTR [rip+0x294681],0x0        # 297758 <Giveaway>
    30d7:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    30d9:	jmp    27c7 <main+0x12f7>
    30de:	mov    edi,DWORD PTR [rsp+0x20]
    30e2:	movsx  esi,dl
    30e5:	mov    edx,eax
    30e7:	call   19240 <PutPiece>
    30ec:	jmp    1748 <main+0x278>
    30f1:	lea    rsi,[rip+0x1c0ca]        # 1f1c2 <scentral+0x3e2>
    30f8:	mov    rdi,r15
    30fb:	call   1480 <strstr@plt>
    3100:	test   rax,rax
    3103:	je     3151 <main+0x1c81>
    3105:	mov    DWORD PTR [rip+0x2786b1],0x3        # 27b7c0 <Variant>
    310f:	lea    rsi,[rip+0x212aa]        # 243c0 <suicide_material>
    3116:	lea    rdi,[rip+0x21463]        # 24580 <material>
    311d:	mov    ecx,0xe
    3122:	mov    DWORD PTR [rip+0x29462c],0x1        # 297758 <Giveaway>
    312c:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    312e:	jmp    27c7 <main+0x12f7>
    3133:	call   19390 <reset_board>
    3138:	mov    DWORD PTR [rip+0x6655e],0x0        # 696a0 <move_number>
    3142:	jmp    1748 <main+0x278>
    3147:	xor    DWORD PTR [rsp+0x20],0x1
    314c:	jmp    1748 <main+0x278>
    3151:	lea    rsi,[rip+0x1c073]        # 1f1cb <scentral+0x3eb>
    3158:	mov    rdi,r15
    315b:	call   1480 <strstr@plt>
    3160:	test   rax,rax
    3163:	je     27c7 <main+0x12f7>
    3169:	mov    DWORD PTR [rip+0x27864d],0x4        # 27b7c0 <Variant>
    3173:	lea    rsi,[rip+0x21206]        # 24380 <losers_material>
    317a:	mov    ecx,0xe
    317f:	lea    rdi,[rip+0x213fa]        # 24580 <material>
    3186:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3188:	jmp    27c7 <main+0x12f7>
    318d:	nop    DWORD PTR [rax]

0000000000003190 <_start>:
    3190:	endbr64 
    3194:	xor    ebp,ebp
    3196:	mov    r9,rdx
    3199:	pop    rsi
    319a:	mov    rdx,rsp
    319d:	and    rsp,0xfffffffffffffff0
    31a1:	push   rax
    31a2:	push   rsp
    31a3:	lea    r8,[rip+0x165c6]        # 19770 <__libc_csu_fini>
    31aa:	lea    rcx,[rip+0x1654f]        # 19700 <__libc_csu_init>
    31b1:	lea    rdi,[rip+0xffffffffffffe318]        # 14d0 <main>
    31b8:	call   QWORD PTR [rip+0x20e0a]        # 23fc8 <__libc_start_main@GLIBC_2.2.5>
    31be:	hlt    
    31bf:	nop

00000000000031c0 <deregister_tm_clones>:
    31c0:	lea    rdi,[rip+0x21371]        # 24538 <__TMC_END__>
    31c7:	lea    rax,[rip+0x2136a]        # 24538 <__TMC_END__>
    31ce:	cmp    rax,rdi
    31d1:	je     31e8 <deregister_tm_clones+0x28>
    31d3:	mov    rax,QWORD PTR [rip+0x20de6]        # 23fc0 <_ITM_deregisterTMCloneTable>
    31da:	test   rax,rax
    31dd:	je     31e8 <deregister_tm_clones+0x28>
    31df:	jmp    rax
    31e1:	nop    DWORD PTR [rax+0x0]
    31e8:	ret    
    31e9:	nop    DWORD PTR [rax+0x0]

00000000000031f0 <register_tm_clones>:
    31f0:	lea    rdi,[rip+0x21341]        # 24538 <__TMC_END__>
    31f7:	lea    rsi,[rip+0x2133a]        # 24538 <__TMC_END__>
    31fe:	sub    rsi,rdi
    3201:	mov    rax,rsi
    3204:	shr    rsi,0x3f
    3208:	sar    rax,0x3
    320c:	add    rsi,rax
    320f:	sar    rsi,1
    3212:	je     3228 <register_tm_clones+0x38>
    3214:	mov    rax,QWORD PTR [rip+0x20dbd]        # 23fd8 <_ITM_registerTMCloneTable>
    321b:	test   rax,rax
    321e:	je     3228 <register_tm_clones+0x38>
    3220:	jmp    rax
    3222:	nop    WORD PTR [rax+rax*1+0x0]
    3228:	ret    
    3229:	nop    DWORD PTR [rax+0x0]

0000000000003230 <__do_global_dtors_aux>:
    3230:	endbr64 
    3234:	cmp    BYTE PTR [rip+0x2132d],0x0        # 24568 <completed.8061>
    323b:	jne    3268 <__do_global_dtors_aux+0x38>
    323d:	push   rbp
    323e:	cmp    QWORD PTR [rip+0x20d9a],0x0        # 23fe0 <__cxa_finalize@GLIBC_2.2.5>
    3246:	mov    rbp,rsp
    3249:	je     3257 <__do_global_dtors_aux+0x27>
    324b:	mov    rdi,QWORD PTR [rip+0x20db6]        # 24008 <__dso_handle>
    3252:	call   1270 <__cxa_finalize@plt>
    3257:	call   31c0 <deregister_tm_clones>
    325c:	mov    BYTE PTR [rip+0x21305],0x1        # 24568 <completed.8061>
    3263:	pop    rbp
    3264:	ret    
    3265:	nop    DWORD PTR [rax]
    3268:	ret    
    3269:	nop    DWORD PTR [rax+0x0]

0000000000003270 <frame_dummy>:
    3270:	endbr64 
    3274:	jmp    31f0 <register_tm_clones>
    3279:	nop    DWORD PTR [rax+0x0]

0000000000003280 <calc_attackers>:
    3280:	endbr64 
    3284:	lea    r8,[rip+0x27a635]        # 27d8c0 <board>
    328b:	movsxd rax,edi
    328e:	mov    r9d,DWORD PTR [r8+rax*4]
    3292:	test   r9d,r9d
    3295:	je     3380 <calc_attackers+0x100>
    329b:	lea    r11,[rip+0x16dae]        # 1a050 <rook_o.4424>
    32a2:	xor    r9d,r9d
    32a5:	and    esi,0x1
    32a8:	push   rbx
    32a9:	mov    ecx,0xc
    32ae:	lea    rbx,[r11+0x10]
    32b2:	je     3330 <calc_attackers+0xb0>
    32b4:	lea    edx,[rdi+rcx*1]
    32b7:	movsxd rax,edx
    32ba:	mov    eax,DWORD PTR [r8+rax*4]
    32be:	cmp    eax,0x5
    32c1:	je     3457 <calc_attackers+0x1d7>
    32c7:	test   eax,eax
    32c9:	je     330b <calc_attackers+0x8b>
    32cb:	movsxd rsi,ecx
    32ce:	add    edx,ecx
    32d0:	lea    r10,[rsi*4+0x0]
    32d8:	movsxd rdx,edx
    32db:	neg    rsi
    32de:	lea    rdx,[r8+rdx*4]
    32e2:	shl    rsi,0x2
    32e6:	jmp    32ff <calc_attackers+0x7f>
    32e8:	nop    DWORD PTR [rax+rax*1+0x0]
    32f0:	cmp    eax,0xd
    32f3:	jne    330b <calc_attackers+0x8b>
    32f5:	add    rdx,r10
    32f8:	mov    eax,DWORD PTR [rdx+rsi*1]
    32fb:	test   eax,eax
    32fd:	je     330b <calc_attackers+0x8b>
    32ff:	lea    ecx,[rax-0x7]
    3302:	and    ecx,0xfffffffd
    3305:	jne    32f0 <calc_attackers+0x70>
    3307:	add    r9d,0x1
    330b:	add    r11,0x4
    330f:	cmp    r11,rbx
    3312:	je     3460 <calc_attackers+0x1e0>
    3318:	mov    ecx,DWORD PTR [r11]
    331b:	jmp    32b4 <calc_attackers+0x34>
    331d:	nop    DWORD PTR [rax]
    3320:	add    r9d,0x1
    3324:	add    r11,0x4
    3328:	cmp    r11,rbx
    332b:	je     3390 <calc_attackers+0x110>
    332d:	mov    ecx,DWORD PTR [r11]
    3330:	lea    edx,[rdi+rcx*1]
    3333:	movsxd rax,edx
    3336:	mov    eax,DWORD PTR [r8+rax*4]
    333a:	cmp    eax,0x6
    333d:	je     3384 <calc_attackers+0x104>
    333f:	test   eax,eax
    3341:	je     3324 <calc_attackers+0xa4>
    3343:	movsxd rsi,ecx
    3346:	add    edx,ecx
    3348:	lea    r10,[rsi*4+0x0]
    3350:	movsxd rdx,edx
    3353:	neg    rsi
    3356:	lea    rdx,[r8+rdx*4]
    335a:	shl    rsi,0x2
    335e:	jmp    336f <calc_attackers+0xef>
    3360:	cmp    eax,0xd
    3363:	jne    3324 <calc_attackers+0xa4>
    3365:	add    rdx,r10
    3368:	mov    eax,DWORD PTR [rdx+rsi*1]
    336b:	test   eax,eax
    336d:	je     3324 <calc_attackers+0xa4>
    336f:	mov    ecx,eax
    3371:	and    ecx,0xfffffffd
    3374:	cmp    ecx,0x8
    3377:	jne    3360 <calc_attackers+0xe0>
    3379:	jmp    3320 <calc_attackers+0xa0>
    337b:	nop    DWORD PTR [rax+rax*1+0x0]
    3380:	mov    eax,r9d
    3383:	ret    
    3384:	add    r9d,0x1
    3388:	nop    DWORD PTR [rax+rax*1+0x0]
    3390:	mov    ecx,0xb
    3395:	xor    r11d,r11d
    3398:	lea    rbx,[rip+0x16ca1]        # 1a040 <bishop_o.4425>
    339f:	lea    edx,[rdi+rcx*1]
    33a2:	movsxd rax,edx
    33a5:	mov    eax,DWORD PTR [r8+rax*4]
    33a9:	cmp    eax,0x2
    33ac:	je     3410 <calc_attackers+0x190>
    33ae:	cmp    eax,0x6
    33b1:	je     3416 <calc_attackers+0x196>
    33b3:	test   eax,eax
    33b5:	je     33f3 <calc_attackers+0x173>
    33b7:	movsxd rsi,ecx
    33ba:	add    edx,ecx
    33bc:	lea    r10,[rsi*4+0x0]
    33c4:	movsxd rdx,edx
    33c7:	neg    rsi
    33ca:	lea    rdx,[r8+rdx*4]
    33ce:	shl    rsi,0x2
    33d2:	jmp    33e7 <calc_attackers+0x167>
    33d4:	nop    DWORD PTR [rax+0x0]
    33d8:	cmp    eax,0xd
    33db:	jne    33f3 <calc_attackers+0x173>
    33dd:	add    rdx,r10
    33e0:	mov    eax,DWORD PTR [rdx+rsi*1]
    33e3:	test   eax,eax
    33e5:	je     33f3 <calc_attackers+0x173>
    33e7:	lea    ecx,[rax-0xa]
    33ea:	and    ecx,0xfffffffd
    33ed:	jne    33d8 <calc_attackers+0x158>
    33ef:	add    r9d,0x1
    33f3:	add    r11,0x1
    33f7:	cmp    r11,0x4
    33fb:	je     3420 <calc_attackers+0x1a0>
    33fd:	mov    ecx,DWORD PTR [rbx+r11*4]
    3401:	lea    edx,[rdi+rcx*1]
    3404:	movsxd rax,edx
    3407:	mov    eax,DWORD PTR [r8+rax*4]
    340b:	cmp    eax,0x2
    340e:	jne    33ae <calc_attackers+0x12e>
    3410:	test   r11b,0x1
    3414:	jne    33b7 <calc_attackers+0x137>
    3416:	add    r9d,0x1
    341a:	nop    WORD PTR [rax+rax*1+0x0]
    3420:	lea    rdx,[rip+0x16bfd]        # 1a024 <knight_o.4426+0x4>
    3427:	mov    eax,0xa
    342c:	lea    rcx,[rdx+0x1c]
    3430:	jmp    343e <calc_attackers+0x1be>
    3432:	nop    WORD PTR [rax+rax*1+0x0]
    3438:	mov    eax,DWORD PTR [rdx]
    343a:	add    rdx,0x4
    343e:	add    eax,edi
    3440:	cdqe   
    3442:	cmp    DWORD PTR [r8+rax*4],0x4
    3447:	jne    344d <calc_attackers+0x1cd>
    3449:	add    r9d,0x1
    344d:	cmp    rdx,rcx
    3450:	jne    3438 <calc_attackers+0x1b8>
    3452:	mov    eax,r9d
    3455:	pop    rbx
    3456:	ret    
    3457:	add    r9d,0x1
    345b:	nop    DWORD PTR [rax+rax*1+0x0]
    3460:	mov    ecx,0xb
    3465:	xor    r11d,r11d
    3468:	lea    rbx,[rip+0x16bd1]        # 1a040 <bishop_o.4425>
    346f:	lea    edx,[rdi+rcx*1]
    3472:	movsxd rax,edx
    3475:	mov    eax,DWORD PTR [r8+rax*4]
    3479:	cmp    eax,0x1
    347c:	je     34e2 <calc_attackers+0x262>
    347e:	cmp    eax,0x5
    3481:	je     34e8 <calc_attackers+0x268>
    3483:	test   eax,eax
    3485:	je     34c5 <calc_attackers+0x245>
    3487:	movsxd rsi,ecx
    348a:	add    edx,ecx
    348c:	lea    r10,[rsi*4+0x0]
    3494:	movsxd rdx,edx
    3497:	neg    rsi
    349a:	lea    rdx,[r8+rdx*4]
    349e:	shl    rsi,0x2
    34a2:	jmp    34b7 <calc_attackers+0x237>
    34a4:	nop    DWORD PTR [rax+0x0]
    34a8:	cmp    eax,0xd
    34ab:	jne    34c5 <calc_attackers+0x245>
    34ad:	add    rdx,r10
    34b0:	mov    eax,DWORD PTR [rdx+rsi*1]
    34b3:	test   eax,eax
    34b5:	je     34c5 <calc_attackers+0x245>
    34b7:	mov    ecx,eax
    34b9:	and    ecx,0xfffffffd
    34bc:	cmp    ecx,0x9
    34bf:	jne    34a8 <calc_attackers+0x228>
    34c1:	add    r9d,0x1
    34c5:	add    r11,0x1
    34c9:	cmp    r11,0x4
    34cd:	je     34f0 <calc_attackers+0x270>
    34cf:	mov    ecx,DWORD PTR [rbx+r11*4]
    34d3:	lea    edx,[rdi+rcx*1]
    34d6:	movsxd rax,edx
    34d9:	mov    eax,DWORD PTR [r8+rax*4]
    34dd:	cmp    eax,0x1
    34e0:	jne    347e <calc_attackers+0x1fe>
    34e2:	test   r11b,0x1
    34e6:	je     3487 <calc_attackers+0x207>
    34e8:	add    r9d,0x1
    34ec:	nop    DWORD PTR [rax+0x0]
    34f0:	lea    rdx,[rip+0x16b2d]        # 1a024 <knight_o.4426+0x4>
    34f7:	mov    eax,0xa
    34fc:	lea    rcx,[rdx+0x1c]
    3500:	jmp    350e <calc_attackers+0x28e>
    3502:	nop    WORD PTR [rax+rax*1+0x0]
    3508:	mov    eax,DWORD PTR [rdx]
    350a:	add    rdx,0x4
    350e:	add    eax,edi
    3510:	cdqe   
    3512:	cmp    DWORD PTR [r8+rax*4],0x3
    3517:	jne    351d <calc_attackers+0x29d>
    3519:	add    r9d,0x1
    351d:	cmp    rcx,rdx
    3520:	jne    3508 <calc_attackers+0x288>
    3522:	mov    eax,r9d
    3525:	pop    rbx
    3526:	ret    
    3527:	nop    WORD PTR [rax+rax*1+0x0]

0000000000003530 <is_attacked>:
    3530:	endbr64 
    3534:	xor    r9d,r9d
    3537:	and    esi,0x1
    353a:	mov    ecx,0xb
    353f:	lea    r8,[rip+0x27a37a]        # 27d8c0 <board>
    3546:	lea    r10,[rip+0x16af3]        # 1a040 <bishop_o.4425>
    354d:	jne    3688 <is_attacked+0x158>
    3553:	lea    eax,[rdi+rcx*1]
    3556:	movsxd rdx,eax
    3559:	mov    edx,DWORD PTR [r8+rdx*4]
    355d:	cmp    edx,0x2
    3560:	je     3798 <is_attacked+0x268>
    3566:	cmp    edx,0x6
    3569:	je     37a2 <is_attacked+0x272>
    356f:	test   edx,edx
    3571:	je     35b2 <is_attacked+0x82>
    3573:	lea    esi,[rdx-0xa]
    3576:	and    esi,0xfffffffd
    3579:	je     37a2 <is_attacked+0x272>
    357f:	cmp    edx,0xd
    3582:	jne    35b2 <is_attacked+0x82>
    3584:	add    eax,ecx
    3586:	movsxd rsi,ecx
    3589:	cdqe   
    358b:	shl    rsi,0x2
    358f:	lea    rdx,[r8+rax*4]
    3593:	jmp    35ac <is_attacked+0x7c>
    3595:	nop    DWORD PTR [rax]
    3598:	lea    ecx,[rax-0xa]
    359b:	and    ecx,0xfffffffd
    359e:	je     37a2 <is_attacked+0x272>
    35a4:	add    rdx,rsi
    35a7:	cmp    eax,0xd
    35aa:	jne    35b2 <is_attacked+0x82>
    35ac:	mov    eax,DWORD PTR [rdx]
    35ae:	test   eax,eax
    35b0:	jne    3598 <is_attacked+0x68>
    35b2:	add    r9,0x1
    35b6:	cmp    r9,0x4
    35ba:	jne    37b0 <is_attacked+0x280>
    35c0:	lea    rdx,[rip+0x16a5d]        # 1a024 <knight_o.4426+0x4>
    35c7:	mov    eax,0xa
    35cc:	lea    rcx,[rdx+0x1c]
    35d0:	jmp    35de <is_attacked+0xae>
    35d2:	nop    WORD PTR [rax+rax*1+0x0]
    35d8:	mov    eax,DWORD PTR [rdx]
    35da:	add    rdx,0x4
    35de:	add    eax,edi
    35e0:	cdqe   
    35e2:	cmp    DWORD PTR [r8+rax*4],0x4
    35e7:	je     37a2 <is_attacked+0x272>
    35ed:	cmp    rdx,rcx
    35f0:	jne    35d8 <is_attacked+0xa8>
    35f2:	lea    r9,[rip+0x16a57]        # 1a050 <rook_o.4424>
    35f9:	mov    ecx,0xc
    35fe:	lea    r10,[r9+0x10]
    3602:	lea    eax,[rdi+rcx*1]
    3605:	movsxd rdx,eax
    3608:	mov    edx,DWORD PTR [r8+rdx*4]
    360c:	cmp    edx,0x6
    360f:	je     37a2 <is_attacked+0x272>
    3615:	test   edx,edx
    3617:	je     365c <is_attacked+0x12c>
    3619:	mov    esi,edx
    361b:	and    esi,0xfffffffd
    361e:	cmp    esi,0x8
    3621:	je     37a2 <is_attacked+0x272>
    3627:	cmp    edx,0xd
    362a:	jne    365c <is_attacked+0x12c>
    362c:	add    eax,ecx
    362e:	movsxd rsi,ecx
    3631:	cdqe   
    3633:	shl    rsi,0x2
    3637:	lea    rdx,[r8+rax*4]
    363b:	jmp    3656 <is_attacked+0x126>
    363d:	nop    DWORD PTR [rax]
    3640:	mov    ecx,eax
    3642:	and    ecx,0xfffffffd
    3645:	cmp    ecx,0x8
    3648:	je     37a2 <is_attacked+0x272>
    364e:	add    rdx,rsi
    3651:	cmp    eax,0xd
    3654:	jne    365c <is_attacked+0x12c>
    3656:	mov    eax,DWORD PTR [rdx]
    3658:	test   eax,eax
    365a:	jne    3640 <is_attacked+0x110>
    365c:	add    r9,0x4
    3660:	cmp    r9,r10
    3663:	je     37c0 <is_attacked+0x290>
    3669:	mov    ecx,DWORD PTR [r9]
    366c:	jmp    3602 <is_attacked+0xd2>
    366e:	xchg   ax,ax
    3670:	test   r9b,0x1
    3674:	jne    37a2 <is_attacked+0x272>
    367a:	add    r9,0x1
    367e:	cmp    r9,0x4
    3682:	je     36f6 <is_attacked+0x1c6>
    3684:	mov    ecx,DWORD PTR [r10+r9*4]
    3688:	lea    eax,[rdi+rcx*1]
    368b:	movsxd rdx,eax
    368e:	mov    edx,DWORD PTR [r8+rdx*4]
    3692:	cmp    edx,0x1
    3695:	je     3670 <is_attacked+0x140>
    3697:	cmp    edx,0x5
    369a:	je     37a2 <is_attacked+0x272>
    36a0:	test   edx,edx
    36a2:	je     367a <is_attacked+0x14a>
    36a4:	mov    esi,edx
    36a6:	and    esi,0xfffffffd
    36a9:	cmp    esi,0x9
    36ac:	je     37a2 <is_attacked+0x272>
    36b2:	cmp    edx,0xd
    36b5:	jne    367a <is_attacked+0x14a>
    36b7:	add    eax,ecx
    36b9:	movsxd rsi,ecx
    36bc:	cdqe   
    36be:	shl    rsi,0x2
    36c2:	lea    rdx,[r8+rax*4]
    36c6:	jmp    36e6 <is_attacked+0x1b6>
    36c8:	nop    DWORD PTR [rax+rax*1+0x0]
    36d0:	mov    ecx,eax
    36d2:	and    ecx,0xfffffffd
    36d5:	cmp    ecx,0x9
    36d8:	je     37a2 <is_attacked+0x272>
    36de:	add    rdx,rsi
    36e1:	cmp    eax,0xd
    36e4:	jne    367a <is_attacked+0x14a>
    36e6:	mov    eax,DWORD PTR [rdx]
    36e8:	test   eax,eax
    36ea:	jne    36d0 <is_attacked+0x1a0>
    36ec:	add    r9,0x1
    36f0:	cmp    r9,0x4
    36f4:	jne    3684 <is_attacked+0x154>
    36f6:	lea    rdx,[rip+0x16927]        # 1a024 <knight_o.4426+0x4>
    36fd:	mov    eax,0xa
    3702:	lea    rcx,[rdx+0x1c]
    3706:	jmp    3716 <is_attacked+0x1e6>
    3708:	nop    DWORD PTR [rax+rax*1+0x0]
    3710:	mov    eax,DWORD PTR [rdx]
    3712:	add    rdx,0x4
    3716:	add    eax,edi
    3718:	cdqe   
    371a:	cmp    DWORD PTR [r8+rax*4],0x3
    371f:	je     37a2 <is_attacked+0x272>
    3725:	cmp    rdx,rcx
    3728:	jne    3710 <is_attacked+0x1e0>
    372a:	lea    r9,[rip+0x1691f]        # 1a050 <rook_o.4424>
    3731:	mov    ecx,0xc
    3736:	lea    r10,[r9+0x10]
    373a:	lea    eax,[rdi+rcx*1]
    373d:	movsxd rdx,eax
    3740:	mov    edx,DWORD PTR [r8+rdx*4]
    3744:	cmp    edx,0x5
    3747:	je     37a2 <is_attacked+0x272>
    3749:	test   edx,edx
    374b:	je     3786 <is_attacked+0x256>
    374d:	lea    esi,[rdx-0x7]
    3750:	and    esi,0xfffffffd
    3753:	je     37a2 <is_attacked+0x272>
    3755:	cmp    edx,0xd
    3758:	jne    3786 <is_attacked+0x256>
    375a:	add    eax,ecx
    375c:	movsxd rsi,ecx
    375f:	cdqe   
    3761:	shl    rsi,0x2
    3765:	lea    rdx,[r8+rax*4]
    3769:	jmp    3780 <is_attacked+0x250>
    376b:	nop    DWORD PTR [rax+rax*1+0x0]
    3770:	lea    ecx,[rax-0x7]
    3773:	and    ecx,0xfffffffd
    3776:	je     37a2 <is_attacked+0x272>
    3778:	add    rdx,rsi
    377b:	cmp    eax,0xd
    377e:	jne    3786 <is_attacked+0x256>
    3780:	mov    eax,DWORD PTR [rdx]
    3782:	test   eax,eax
    3784:	jne    3770 <is_attacked+0x240>
    3786:	add    r9,0x4
    378a:	cmp    r10,r9
    378d:	je     37c0 <is_attacked+0x290>
    378f:	mov    ecx,DWORD PTR [r9]
    3792:	jmp    373a <is_attacked+0x20a>
    3794:	nop    DWORD PTR [rax+0x0]
    3798:	test   r9b,0x1
    379c:	jne    35b2 <is_attacked+0x82>
    37a2:	mov    eax,0x1
    37a7:	ret    
    37a8:	nop    DWORD PTR [rax+rax*1+0x0]
    37b0:	mov    ecx,DWORD PTR [r10+r9*4]
    37b4:	jmp    3553 <is_attacked+0x23>
    37b9:	nop    DWORD PTR [rax+0x0]
    37c0:	xor    eax,eax
    37c2:	ret    
    37c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    37ce:	xchg   ax,ax

00000000000037d0 <nk_attacked>:
    37d0:	endbr64 
    37d4:	xor    r9d,r9d
    37d7:	and    esi,0x1
    37da:	mov    ecx,0xb
    37df:	lea    r8,[rip+0x27a0da]        # 27d8c0 <board>
    37e6:	lea    r10,[rip+0x16853]        # 1a040 <bishop_o.4425>
    37ed:	jne    3918 <nk_attacked+0x148>
    37f3:	lea    eax,[rdi+rcx*1]
    37f6:	movsxd rdx,eax
    37f9:	mov    edx,DWORD PTR [r8+rdx*4]
    37fd:	cmp    edx,0x2
    3800:	je     3a10 <nk_attacked+0x240>
    3806:	test   edx,edx
    3808:	je     384a <nk_attacked+0x7a>
    380a:	lea    esi,[rdx-0xa]
    380d:	and    esi,0xfffffffd
    3810:	je     3a1a <nk_attacked+0x24a>
    3816:	cmp    edx,0xd
    3819:	jne    384a <nk_attacked+0x7a>
    381b:	add    eax,ecx
    381d:	movsxd rsi,ecx
    3820:	cdqe   
    3822:	shl    rsi,0x2
    3826:	lea    rdx,[r8+rax*4]
    382a:	jmp    3844 <nk_attacked+0x74>
    382c:	nop    DWORD PTR [rax+0x0]
    3830:	lea    ecx,[rax-0xa]
    3833:	and    ecx,0xfffffffd
    3836:	je     3a1a <nk_attacked+0x24a>
    383c:	add    rdx,rsi
    383f:	cmp    eax,0xd
    3842:	jne    384a <nk_attacked+0x7a>
    3844:	mov    eax,DWORD PTR [rdx]
    3846:	test   eax,eax
    3848:	jne    3830 <nk_attacked+0x60>
    384a:	add    r9,0x1
    384e:	cmp    r9,0x4
    3852:	jne    3a20 <nk_attacked+0x250>
    3858:	lea    rdx,[rip+0x167c5]        # 1a024 <knight_o.4426+0x4>
    385f:	mov    eax,0xa
    3864:	lea    rcx,[rdx+0x1c]
    3868:	jmp    3876 <nk_attacked+0xa6>
    386a:	nop    WORD PTR [rax+rax*1+0x0]
    3870:	mov    eax,DWORD PTR [rdx]
    3872:	add    rdx,0x4
    3876:	add    eax,edi
    3878:	cdqe   
    387a:	cmp    DWORD PTR [r8+rax*4],0x4
    387f:	je     3a1a <nk_attacked+0x24a>
    3885:	cmp    rdx,rcx
    3888:	jne    3870 <nk_attacked+0xa0>
    388a:	lea    r9,[rip+0x167bf]        # 1a050 <rook_o.4424>
    3891:	mov    ecx,0xc
    3896:	lea    r10,[r9+0x10]
    389a:	lea    eax,[rdi+rcx*1]
    389d:	movsxd rdx,eax
    38a0:	mov    edx,DWORD PTR [r8+rdx*4]
    38a4:	test   edx,edx
    38a6:	je     38ec <nk_attacked+0x11c>
    38a8:	mov    esi,edx
    38aa:	and    esi,0xfffffffd
    38ad:	cmp    esi,0x8
    38b0:	je     3a1a <nk_attacked+0x24a>
    38b6:	cmp    edx,0xd
    38b9:	jne    38ec <nk_attacked+0x11c>
    38bb:	add    eax,ecx
    38bd:	movsxd rsi,ecx
    38c0:	cdqe   
    38c2:	shl    rsi,0x2
    38c6:	lea    rdx,[r8+rax*4]
    38ca:	jmp    38e6 <nk_attacked+0x116>
    38cc:	nop    DWORD PTR [rax+0x0]
    38d0:	mov    ecx,eax
    38d2:	and    ecx,0xfffffffd
    38d5:	cmp    ecx,0x8
    38d8:	je     3a1a <nk_attacked+0x24a>
    38de:	add    rdx,rsi
    38e1:	cmp    eax,0xd
    38e4:	jne    38ec <nk_attacked+0x11c>
    38e6:	mov    eax,DWORD PTR [rdx]
    38e8:	test   eax,eax
    38ea:	jne    38d0 <nk_attacked+0x100>
    38ec:	add    r9,0x4
    38f0:	cmp    r9,r10
    38f3:	je     3a30 <nk_attacked+0x260>
    38f9:	mov    ecx,DWORD PTR [r9]
    38fc:	jmp    389a <nk_attacked+0xca>
    38fe:	xchg   ax,ax
    3900:	test   r9b,0x1
    3904:	jne    3a1a <nk_attacked+0x24a>
    390a:	add    r9,0x1
    390e:	cmp    r9,0x4
    3912:	je     3976 <nk_attacked+0x1a6>
    3914:	mov    ecx,DWORD PTR [r10+r9*4]
    3918:	lea    eax,[rdi+rcx*1]
    391b:	movsxd rdx,eax
    391e:	mov    edx,DWORD PTR [r8+rdx*4]
    3922:	cmp    edx,0x1
    3925:	je     3900 <nk_attacked+0x130>
    3927:	test   edx,edx
    3929:	je     390a <nk_attacked+0x13a>
    392b:	mov    esi,edx
    392d:	and    esi,0xfffffffd
    3930:	cmp    esi,0x9
    3933:	je     3a1a <nk_attacked+0x24a>
    3939:	cmp    edx,0xd
    393c:	jne    390a <nk_attacked+0x13a>
    393e:	add    eax,ecx
    3940:	movsxd rsi,ecx
    3943:	cdqe   
    3945:	shl    rsi,0x2
    3949:	lea    rdx,[r8+rax*4]
    394d:	jmp    3966 <nk_attacked+0x196>
    394f:	nop
    3950:	mov    ecx,eax
    3952:	and    ecx,0xfffffffd
    3955:	cmp    ecx,0x9
    3958:	je     3a1a <nk_attacked+0x24a>
    395e:	add    rdx,rsi
    3961:	cmp    eax,0xd
    3964:	jne    390a <nk_attacked+0x13a>
    3966:	mov    eax,DWORD PTR [rdx]
    3968:	test   eax,eax
    396a:	jne    3950 <nk_attacked+0x180>
    396c:	add    r9,0x1
    3970:	cmp    r9,0x4
    3974:	jne    3914 <nk_attacked+0x144>
    3976:	lea    rdx,[rip+0x166a7]        # 1a024 <knight_o.4426+0x4>
    397d:	mov    eax,0xa
    3982:	lea    rcx,[rdx+0x1c]
    3986:	jmp    3996 <nk_attacked+0x1c6>
    3988:	nop    DWORD PTR [rax+rax*1+0x0]
    3990:	mov    eax,DWORD PTR [rdx]
    3992:	add    rdx,0x4
    3996:	add    eax,edi
    3998:	cdqe   
    399a:	cmp    DWORD PTR [r8+rax*4],0x3
    399f:	je     3a1a <nk_attacked+0x24a>
    39a1:	cmp    rcx,rdx
    39a4:	jne    3990 <nk_attacked+0x1c0>
    39a6:	lea    r9,[rip+0x166a3]        # 1a050 <rook_o.4424>
    39ad:	mov    ecx,0xc
    39b2:	lea    r10,[r9+0x10]
    39b6:	lea    eax,[rdi+rcx*1]
    39b9:	movsxd rdx,eax
    39bc:	mov    edx,DWORD PTR [r8+rdx*4]
    39c0:	test   edx,edx
    39c2:	je     39fe <nk_attacked+0x22e>
    39c4:	lea    esi,[rdx-0x7]
    39c7:	and    esi,0xfffffffd
    39ca:	je     3a1a <nk_attacked+0x24a>
    39cc:	cmp    edx,0xd
    39cf:	jne    39fe <nk_attacked+0x22e>
    39d1:	add    eax,ecx
    39d3:	movsxd rsi,ecx
    39d6:	cdqe   
    39d8:	shl    rsi,0x2
    39dc:	lea    rdx,[r8+rax*4]
    39e0:	jmp    39f8 <nk_attacked+0x228>
    39e2:	nop    WORD PTR [rax+rax*1+0x0]
    39e8:	lea    ecx,[rax-0x7]
    39eb:	and    ecx,0xfffffffd
    39ee:	je     3a1a <nk_attacked+0x24a>
    39f0:	add    rdx,rsi
    39f3:	cmp    eax,0xd
    39f6:	jne    39fe <nk_attacked+0x22e>
    39f8:	mov    eax,DWORD PTR [rdx]
    39fa:	test   eax,eax
    39fc:	jne    39e8 <nk_attacked+0x218>
    39fe:	add    r9,0x4
    3a02:	cmp    r10,r9
    3a05:	je     3a30 <nk_attacked+0x260>
    3a07:	mov    ecx,DWORD PTR [r9]
    3a0a:	jmp    39b6 <nk_attacked+0x1e6>
    3a0c:	nop    DWORD PTR [rax+0x0]
    3a10:	test   r9b,0x1
    3a14:	jne    384a <nk_attacked+0x7a>
    3a1a:	mov    eax,0x1
    3a1f:	ret    
    3a20:	mov    ecx,DWORD PTR [r10+r9*4]
    3a24:	jmp    37f3 <nk_attacked+0x23>
    3a29:	nop    DWORD PTR [rax+0x0]
    3a30:	xor    eax,eax
    3a32:	ret    
    3a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3a3d:	nop    DWORD PTR [rax]

0000000000003a40 <init_book>:
    3a40:	endbr64 
    3a44:	mov    eax,0x1
    3a49:	ret    
    3a4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000003a50 <choose_book_move>:
    3a50:	endbr64 
    3a54:	movdqu xmm0,XMMWORD PTR [rip+0x20b84]        # 245e0 <dummy>
    3a5c:	mov    rdx,QWORD PTR [rip+0x20b8d]        # 245f0 <dummy+0x10>
    3a63:	mov    rax,rdi
    3a66:	mov    QWORD PTR [rdi+0x10],rdx
    3a6a:	movups XMMWORD PTR [rdi],xmm0
    3a6d:	ret    
    3a6e:	xchg   ax,ax

0000000000003a70 <ProcessHoldings>:
    3a70:	endbr64 
    3a74:	push   r15
    3a76:	xor    eax,eax
    3a78:	mov    ecx,0x10
    3a7d:	push   r14
    3a7f:	push   r13
    3a81:	lea    r13,[rip+0x293d38]        # 2977c0 <zobrist>
    3a88:	push   r12
    3a8a:	push   rbp
    3a8b:	mov    rbp,rdi
    3a8e:	push   rbx
    3a8f:	lea    rbx,[rip+0x2158a]        # 25020 <holding>
    3a96:	mov    rdi,rbx
    3a99:	sub    rsp,0x28
    3a9d:	mov    DWORD PTR [rip+0x21701],0xc0ffee00        # 251a8 <hold_hash>
    3aa7:	rep stos QWORD PTR es:[rdi],rax
    3aaa:	mov    DWORD PTR [rip+0x216f8],0x0        # 251ac <white_hand_eval>
    3ab4:	mov    DWORD PTR [rip+0x216e2],0x0        # 251a0 <black_hand_eval>
    3abe:	call   4450 <reset_ecache>
    3ac3:	lea    r11,[rip+0x21536]        # 25000 <num_holding>
    3aca:	xor    eax,eax
    3acc:	mov    QWORD PTR [rip+0x21529],0x0        # 25000 <num_holding>
    3ad7:	xor    r10d,r10d
    3ada:	lea    r9,[rip+0x1657f]        # 1a060 <rook_o.4424+0x10>
    3ae1:	movsxd rdx,eax
    3ae4:	add    eax,0x1
    3ae7:	movzx  edi,BYTE PTR [rbp+rdx*1+0x0]
    3aec:	movsxd rdx,eax
    3aef:	jmp    3b05 <ProcessHoldings+0x95>
    3af1:	nop    DWORD PTR [rax+0x0]
    3af8:	add    rdx,0x1
    3afc:	test   dil,dil
    3aff:	je     3ced <ProcessHoldings+0x27d>
    3b05:	mov    ecx,edi
    3b07:	mov    eax,edx
    3b09:	movzx  edi,BYTE PTR [rbp+rdx*1+0x0]
    3b0e:	cmp    cl,0x5b
    3b11:	jne    3af8 <ProcessHoldings+0x88>
    3b13:	cmp    dil,0x5d
    3b17:	je     3bde <ProcessHoldings+0x16e>
    3b1d:	cmp    r10d,0x1
    3b21:	sbb    r12d,r12d
    3b24:	add    r12d,0x8
    3b28:	cmp    r10d,0x1
    3b2c:	sbb    r8d,r8d
    3b2f:	add    r8d,0xa
    3b33:	cmp    r10d,0x1
    3b37:	sbb    esi,esi
    3b39:	add    esi,0x2
    3b3c:	cmp    r10d,0x1
    3b40:	mov    DWORD PTR [rsp+0x18],esi
    3b44:	sbb    esi,esi
    3b46:	add    esi,0x4
    3b49:	cmp    r10d,0x1
    3b4d:	sbb    ecx,ecx
    3b4f:	add    eax,0x1
    3b52:	movsxd rdx,eax
    3b55:	movsxd rax,esi
    3b58:	movsxd rsi,r10d
    3b5b:	add    ecx,0xc
    3b5e:	shl    rsi,0x4
    3b62:	movsxd rcx,ecx
    3b65:	lea    r15,[rsi+rax*1]
    3b69:	lea    rax,[rax+rax*8]
    3b6d:	mov    QWORD PTR [rsp+0x8],rax
    3b72:	lea    rax,[rcx+rcx*8]
    3b76:	shl    rax,0x4
    3b7a:	mov    QWORD PTR [rsp],r15
    3b7e:	mov    QWORD PTR [rsp+0x10],rax
    3b83:	sub    edi,0x42
    3b86:	mov    eax,edx
    3b88:	cmp    dil,0x30
    3b8c:	ja     3ced <ProcessHoldings+0x27d>
    3b92:	movzx  edi,dil
    3b96:	movsxd rdi,DWORD PTR [r9+rdi*4]
    3b9a:	add    rdi,r9
    3b9d:	notrack jmp rdi
    3ba0:	movsxd r14,r12d
    3ba3:	lea    r15,[rsi+r14*1]
    3ba7:	mov    edi,DWORD PTR [rbx+r15*4]
    3bab:	add    edi,0x1
    3bae:	mov    DWORD PTR [rbx+r15*4],edi
    3bb2:	movsxd r15,edi
    3bb5:	lea    rdi,[r14+r14*8]
    3bb9:	shl    rdi,0x4
    3bbd:	add    DWORD PTR [r11],0x1
    3bc1:	add    rdi,r15
    3bc4:	mov    edi,DWORD PTR [r13+rdi*4+0x0]
    3bc9:	xor    DWORD PTR [rip+0x215d9],edi        # 251a8 <hold_hash>
    3bcf:	add    rdx,0x1
    3bd3:	movzx  edi,BYTE PTR [rbp+rdx*1-0x1]
    3bd8:	cmp    dil,0x5d
    3bdc:	jne    3b83 <ProcessHoldings+0x113>
    3bde:	add    r11,0x4
    3be2:	cmp    r10d,0x1
    3be6:	jne    3e43 <ProcessHoldings+0x3d3>
    3bec:	cmp    DWORD PTR [rip+0x277bcd],0x1        # 27b7c0 <Variant>
    3bf3:	jne    3ced <ProcessHoldings+0x27d>
    3bf9:	mov    r12d,DWORD PTR [rip+0x215a4]        # 251a4 <userealholdings>
    3c00:	test   r12d,r12d
    3c03:	jne    3ced <ProcessHoldings+0x27d>
    3c09:	mov    edx,0xc8
    3c0e:	mov    rsi,rbp
    3c11:	lea    rdi,[rip+0x21488]        # 250a0 <realholdings>
    3c18:	call   12b0 <strncpy@plt>
    3c1d:	cmp    DWORD PTR [rip+0x293b30],0x1        # 297754 <comp_color>
    3c24:	je     3d6f <ProcessHoldings+0x2ff>
    3c2a:	mov    edi,DWORD PTR [rip+0x21414]        # 25044 <holding+0x24>
    3c30:	test   edi,edi
    3c32:	jne    3c51 <ProcessHoldings+0x1e1>
    3c34:	mov    eax,DWORD PTR [rip+0x294fca]        # 298c04 <zobrist+0x1444>
    3c3a:	xor    DWORD PTR [rip+0x21568],eax        # 251a8 <hold_hash>
    3c40:	add    DWORD PTR [rip+0x213b9],0x1        # 25000 <num_holding>
    3c47:	mov    DWORD PTR [rip+0x213f3],0x1        # 25044 <holding+0x24>
    3c51:	mov    esi,DWORD PTR [rip+0x213e5]        # 2503c <holding+0x1c>
    3c57:	test   esi,esi
    3c59:	jne    3c78 <ProcessHoldings+0x208>
    3c5b:	mov    eax,DWORD PTR [rip+0x294fa3]        # 298c04 <zobrist+0x1444>
    3c61:	xor    DWORD PTR [rip+0x21541],eax        # 251a8 <hold_hash>
    3c67:	add    DWORD PTR [rip+0x21392],0x1        # 25000 <num_holding>
    3c6e:	mov    DWORD PTR [rip+0x213c4],0x1        # 2503c <holding+0x1c>
    3c78:	mov    ecx,DWORD PTR [rip+0x213ce]        # 2504c <holding+0x2c>
    3c7e:	test   ecx,ecx
    3c80:	jne    3c9f <ProcessHoldings+0x22f>
    3c82:	mov    eax,DWORD PTR [rip+0x294f7c]        # 298c04 <zobrist+0x1444>
    3c88:	xor    DWORD PTR [rip+0x2151a],eax        # 251a8 <hold_hash>
    3c8e:	add    DWORD PTR [rip+0x2136b],0x1        # 25000 <num_holding>
    3c95:	mov    DWORD PTR [rip+0x213ad],0x1        # 2504c <holding+0x2c>
    3c9f:	mov    edx,DWORD PTR [rip+0x21387]        # 2502c <holding+0xc>
    3ca5:	test   edx,edx
    3ca7:	jne    3cc6 <ProcessHoldings+0x256>
    3ca9:	mov    eax,DWORD PTR [rip+0x294f55]        # 298c04 <zobrist+0x1444>
    3caf:	xor    DWORD PTR [rip+0x214f3],eax        # 251a8 <hold_hash>
    3cb5:	add    DWORD PTR [rip+0x21344],0x1        # 25000 <num_holding>
    3cbc:	mov    DWORD PTR [rip+0x21366],0x1        # 2502c <holding+0xc>
    3cc6:	mov    eax,DWORD PTR [rip+0x21358]        # 25024 <holding+0x4>
    3ccc:	test   eax,eax
    3cce:	jne    3ced <ProcessHoldings+0x27d>
    3cd0:	mov    eax,DWORD PTR [rip+0x294f2e]        # 298c04 <zobrist+0x1444>
    3cd6:	xor    DWORD PTR [rip+0x214cc],eax        # 251a8 <hold_hash>
    3cdc:	add    DWORD PTR [rip+0x2131d],0x1        # 25000 <num_holding>
    3ce3:	mov    DWORD PTR [rip+0x21337],0x1        # 25024 <holding+0x4>
    3ced:	add    rsp,0x28
    3cf1:	pop    rbx
    3cf2:	pop    rbp
    3cf3:	pop    r12
    3cf5:	pop    r13
    3cf7:	pop    r14
    3cf9:	pop    r15
    3cfb:	ret    
    3cfc:	movsxd r14,r8d
    3cff:	jmp    3ba3 <ProcessHoldings+0x133>
    3d04:	movsxd r14,DWORD PTR [rsp+0x18]
    3d09:	jmp    3ba3 <ProcessHoldings+0x133>
    3d0e:	lea    r14,[rsi+rcx*1]
    3d12:	add    DWORD PTR [r11],0x1
    3d16:	mov    edi,DWORD PTR [rbx+r14*4]
    3d1a:	add    edi,0x1
    3d1d:	mov    DWORD PTR [rbx+r14*4],edi
    3d21:	movsxd rdi,edi
    3d24:	add    rdi,QWORD PTR [rsp+0x10]
    3d29:	mov    edi,DWORD PTR [r13+rdi*4+0x0]
    3d2e:	xor    DWORD PTR [rip+0x21474],edi        # 251a8 <hold_hash>
    3d34:	jmp    3bcf <ProcessHoldings+0x15f>
    3d39:	mov    r14,QWORD PTR [rsp]
    3d3d:	add    DWORD PTR [r11],0x1
    3d41:	mov    edi,DWORD PTR [rbx+r14*4]
    3d45:	mov    DWORD PTR [rsp+0x1c],edi
    3d49:	add    edi,0x1
    3d4c:	mov    DWORD PTR [rbx+r14*4],edi
    3d50:	mov    r14,QWORD PTR [rsp+0x8]
    3d55:	movsxd rdi,edi
    3d58:	shl    r14,0x4
    3d5c:	add    rdi,r14
    3d5f:	mov    edi,DWORD PTR [r13+rdi*4+0x0]
    3d64:	xor    DWORD PTR [rip+0x2143e],edi        # 251a8 <hold_hash>
    3d6a:	jmp    3bcf <ProcessHoldings+0x15f>
    3d6f:	mov    ebx,DWORD PTR [rip+0x212f3]        # 25068 <holding+0x48>
    3d75:	test   ebx,ebx
    3d77:	jne    3d96 <ProcessHoldings+0x326>
    3d79:	mov    eax,DWORD PTR [rip+0x293ec5]        # 297c44 <zobrist+0x484>
    3d7f:	xor    DWORD PTR [rip+0x21423],eax        # 251a8 <hold_hash>
    3d85:	add    DWORD PTR [rip+0x21278],0x1        # 25004 <num_holding+0x4>
    3d8c:	mov    DWORD PTR [rip+0x212d2],0x1        # 25068 <holding+0x48>
    3d96:	mov    r11d,DWORD PTR [rip+0x212f3]        # 25090 <holding+0x70>
    3d9d:	test   r11d,r11d
    3da0:	jne    3dbf <ProcessHoldings+0x34f>
    3da2:	mov    eax,DWORD PTR [rip+0x293e9c]        # 297c44 <zobrist+0x484>
    3da8:	xor    DWORD PTR [rip+0x213fa],eax        # 251a8 <hold_hash>
    3dae:	add    DWORD PTR [rip+0x2124f],0x1        # 25004 <num_holding+0x4>
    3db5:	mov    DWORD PTR [rip+0x212d1],0x1        # 25090 <holding+0x70>
    3dbf:	mov    r10d,DWORD PTR [rip+0x212aa]        # 25070 <holding+0x50>
    3dc6:	test   r10d,r10d
    3dc9:	jne    3de8 <ProcessHoldings+0x378>
    3dcb:	mov    eax,DWORD PTR [rip+0x2942f3]        # 2980c4 <zobrist+0x904>
    3dd1:	xor    DWORD PTR [rip+0x213d1],eax        # 251a8 <hold_hash>
    3dd7:	add    DWORD PTR [rip+0x21226],0x1        # 25004 <num_holding+0x4>
    3dde:	mov    DWORD PTR [rip+0x21288],0x1        # 25070 <holding+0x50>
    3de8:	mov    r9d,DWORD PTR [rip+0x21291]        # 25080 <holding+0x60>
    3def:	test   r9d,r9d
    3df2:	jne    3e11 <ProcessHoldings+0x3a1>
    3df4:	mov    eax,DWORD PTR [rip+0x2942ca]        # 2980c4 <zobrist+0x904>
    3dfa:	xor    DWORD PTR [rip+0x213a8],eax        # 251a8 <hold_hash>
    3e00:	add    DWORD PTR [rip+0x211fd],0x1        # 25004 <num_holding+0x4>
    3e07:	mov    DWORD PTR [rip+0x2126f],0x1        # 25080 <holding+0x60>
    3e11:	mov    r8d,DWORD PTR [rip+0x21270]        # 25088 <holding+0x68>
    3e18:	test   r8d,r8d
    3e1b:	jne    3ced <ProcessHoldings+0x27d>
    3e21:	mov    eax,DWORD PTR [rip+0x29429d]        # 2980c4 <zobrist+0x904>
    3e27:	xor    DWORD PTR [rip+0x2137b],eax        # 251a8 <hold_hash>
    3e2d:	add    DWORD PTR [rip+0x211d0],0x1        # 25004 <num_holding+0x4>
    3e34:	mov    DWORD PTR [rip+0x2124a],0x1        # 25088 <holding+0x68>
    3e3e:	jmp    3ced <ProcessHoldings+0x27d>
    3e43:	mov    r10d,0x1
    3e49:	jmp    3ae1 <ProcessHoldings+0x71>
    3e4e:	xchg   ax,ax

0000000000003e50 <text_to_piece>:
    3e50:	endbr64 
    3e54:	sub    edi,0x42
    3e57:	cmp    dil,0x30
    3e5b:	ja     3e78 <text_to_piece+0x28>
    3e5d:	lea    rdx,[rip+0x162c0]        # 1a124 <rook_o.4424+0xd4>
    3e64:	movzx  edi,dil
    3e68:	movsxd rax,DWORD PTR [rdx+rdi*4]
    3e6c:	add    rax,rdx
    3e6f:	notrack jmp rax
    3e72:	nop    WORD PTR [rax+rax*1+0x0]
    3e78:	mov    eax,0xd
    3e7d:	ret    
    3e7e:	xchg   ax,ax
    3e80:	xor    eax,eax
    3e82:	test   esi,esi
    3e84:	setne  al
    3e87:	add    eax,0x7
    3e8a:	ret    
    3e8b:	nop    DWORD PTR [rax+rax*1+0x0]
    3e90:	xor    eax,eax
    3e92:	test   esi,esi
    3e94:	setne  al
    3e97:	add    eax,0xb
    3e9a:	ret    
    3e9b:	nop    DWORD PTR [rax+rax*1+0x0]
    3ea0:	xor    eax,eax
    3ea2:	test   esi,esi
    3ea4:	setne  al
    3ea7:	add    eax,0x3
    3eaa:	ret    
    3eab:	nop    DWORD PTR [rax+rax*1+0x0]
    3eb0:	xor    eax,eax
    3eb2:	test   esi,esi
    3eb4:	setne  al
    3eb7:	add    eax,0x1
    3eba:	ret    
    3ebb:	nop    DWORD PTR [rax+rax*1+0x0]
    3ec0:	xor    eax,eax
    3ec2:	test   esi,esi
    3ec4:	setne  al
    3ec7:	add    eax,0x9
    3eca:	ret    
    3ecb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003ed0 <SwitchColor>:
    3ed0:	endbr64 
    3ed4:	sub    rsp,0x48
    3ed8:	movsxd rdi,edi
    3edb:	mov    rax,QWORD PTR fs:0x28
    3ee4:	mov    QWORD PTR [rsp+0x38],rax
    3ee9:	xor    eax,eax
    3eeb:	mov    DWORD PTR [rsp+0x30],0xb
    3ef3:	movabs rax,0x200000000
    3efd:	mov    QWORD PTR [rsp],rax
    3f01:	movabs rax,0x400000001
    3f0b:	mov    QWORD PTR [rsp+0x8],rax
    3f10:	movabs rax,0x800000000
    3f1a:	mov    QWORD PTR [rsp+0x18],rax
    3f1f:	movabs rax,0xa00000007
    3f29:	mov    QWORD PTR [rsp+0x20],rax
    3f2e:	movabs rax,0xc00000009
    3f38:	mov    QWORD PTR [rsp+0x10],0x3
    3f41:	mov    QWORD PTR [rsp+0x28],rax
    3f46:	mov    eax,DWORD PTR [rsp+rdi*4]
    3f49:	mov    rdx,QWORD PTR [rsp+0x38]
    3f4e:	xor    rdx,QWORD PTR fs:0x28
    3f57:	jne    3f5e <SwitchColor+0x8e>
    3f59:	add    rsp,0x48
    3f5d:	ret    
    3f5e:	call   1310 <__stack_chk_fail@plt>
    3f63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    3f6e:	xchg   ax,ax

0000000000003f70 <SwitchPromoted>:
    3f70:	endbr64 
    3f74:	sub    rsp,0x48
    3f78:	movsxd rdi,edi
    3f7b:	movabs rdx,0x200000000
    3f85:	mov    rax,QWORD PTR fs:0x28
    3f8e:	mov    QWORD PTR [rsp+0x38],rax
    3f93:	xor    eax,eax
    3f95:	mov    QWORD PTR [rsp],rdx
    3f99:	movabs rax,0x200000001
    3fa3:	mov    QWORD PTR [rsp+0x8],rax
    3fa8:	mov    QWORD PTR [rsp+0x10],0x1
    3fb1:	mov    QWORD PTR [rsp+0x18],rdx
    3fb6:	mov    QWORD PTR [rsp+0x20],rax
    3fbb:	mov    QWORD PTR [rsp+0x28],rax
    3fc0:	mov    DWORD PTR [rsp+0x30],0x1
    3fc8:	mov    eax,DWORD PTR [rsp+rdi*4]
    3fcb:	mov    rcx,QWORD PTR [rsp+0x38]
    3fd0:	xor    rcx,QWORD PTR fs:0x28
    3fd9:	jne    3fe0 <SwitchPromoted+0x70>
    3fdb:	add    rsp,0x48
    3fdf:	ret    
    3fe0:	call   1310 <__stack_chk_fail@plt>
    3fe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000003ff0 <addHolding>:
    3ff0:	endbr64 
    3ff4:	mov    eax,DWORD PTR [rip+0x2777c6]        # 27b7c0 <Variant>
    3ffa:	movsxd rdi,edi
    3ffd:	test   eax,eax
    3fff:	jne    4048 <addHolding+0x58>
    4001:	movsxd rcx,esi
    4004:	lea    r8,[rip+0x21015]        # 25020 <holding>
    400b:	mov    rdx,rcx
    400e:	shl    rdx,0x4
    4012:	add    rdx,rdi
    4015:	mov    eax,DWORD PTR [r8+rdx*4]
    4019:	add    eax,0x1
    401c:	mov    DWORD PTR [r8+rdx*4],eax
    4020:	lea    rdx,[rip+0x20fd9]        # 25000 <num_holding>
    4027:	cdqe   
    4029:	add    DWORD PTR [rdx+rcx*4],0x1
    402d:	lea    rdx,[rdi+rdi*8]
    4031:	shl    rdx,0x4
    4035:	add    rax,rdx
    4038:	lea    rdx,[rip+0x293781]        # 2977c0 <zobrist>
    403f:	mov    eax,DWORD PTR [rdx+rax*4]
    4042:	xor    DWORD PTR [rip+0x21160],eax        # 251a8 <hold_hash>
    4048:	lea    rax,[rip+0x20471]        # 244c0 <hand_value>
    404f:	mov    eax,DWORD PTR [rax+rdi*4]
    4052:	test   esi,esi
    4054:	jne    4070 <addHolding+0x80>
    4056:	add    DWORD PTR [rip+0x21150],eax        # 251ac <white_hand_eval>
    405c:	lea    rax,[rip+0x2051d]        # 24580 <material>
    4063:	mov    eax,DWORD PTR [rax+rdi*4]
    4066:	add    DWORD PTR [rip+0x30474],eax        # 344e0 <Material>
    406c:	ret    
    406d:	nop    DWORD PTR [rax]
    4070:	add    DWORD PTR [rip+0x2112a],eax        # 251a0 <black_hand_eval>
    4076:	jmp    405c <addHolding+0x6c>
    4078:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004080 <removeHolding>:
    4080:	endbr64 
    4084:	mov    eax,DWORD PTR [rip+0x277736]        # 27b7c0 <Variant>
    408a:	movsxd rdi,edi
    408d:	test   eax,eax
    408f:	jne    40db <removeHolding+0x5b>
    4091:	movsxd r8,esi
    4094:	lea    r9,[rip+0x20f85]        # 25020 <holding>
    409b:	lea    rax,[rdi+rdi*8]
    409f:	mov    rdx,r8
    40a2:	shl    rax,0x4
    40a6:	shl    rdx,0x4
    40aa:	add    rdx,rdi
    40ad:	movsxd r10,DWORD PTR [r9+rdx*4]
    40b1:	mov    rcx,r10
    40b4:	add    rax,r10
    40b7:	lea    r10,[rip+0x293702]        # 2977c0 <zobrist>
    40be:	mov    eax,DWORD PTR [r10+rax*4]
    40c2:	xor    DWORD PTR [rip+0x210e0],eax        # 251a8 <hold_hash>
    40c8:	sub    ecx,0x1
    40cb:	lea    rax,[rip+0x20f2e]        # 25000 <num_holding>
    40d2:	sub    DWORD PTR [rax+r8*4],0x1
    40d7:	mov    DWORD PTR [r9+rdx*4],ecx
    40db:	lea    rax,[rip+0x203de]        # 244c0 <hand_value>
    40e2:	mov    eax,DWORD PTR [rax+rdi*4]
    40e5:	test   esi,esi
    40e7:	jne    4100 <removeHolding+0x80>
    40e9:	sub    DWORD PTR [rip+0x210bd],eax        # 251ac <white_hand_eval>
    40ef:	lea    rax,[rip+0x2048a]        # 24580 <material>
    40f6:	mov    eax,DWORD PTR [rax+rdi*4]
    40f9:	sub    DWORD PTR [rip+0x303e1],eax        # 344e0 <Material>
    40ff:	ret    
    4100:	sub    DWORD PTR [rip+0x2109a],eax        # 251a0 <black_hand_eval>
    4106:	jmp    40ef <removeHolding+0x6f>
    4108:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004110 <DropaddHolding>:
    4110:	endbr64 
    4114:	movsxd rcx,esi
    4117:	movsxd rdi,edi
    411a:	lea    r8,[rip+0x20eff]        # 25020 <holding>
    4121:	mov    rdx,rcx
    4124:	shl    rdx,0x4
    4128:	add    rdx,rdi
    412b:	mov    eax,DWORD PTR [r8+rdx*4]
    412f:	add    eax,0x1
    4132:	mov    DWORD PTR [r8+rdx*4],eax
    4136:	lea    rdx,[rip+0x20ec3]        # 25000 <num_holding>
    413d:	cdqe   
    413f:	add    DWORD PTR [rdx+rcx*4],0x1
    4143:	lea    rdx,[rdi+rdi*8]
    4147:	shl    rdx,0x4
    414b:	add    rax,rdx
    414e:	lea    rdx,[rip+0x29366b]        # 2977c0 <zobrist>
    4155:	mov    eax,DWORD PTR [rdx+rax*4]
    4158:	xor    DWORD PTR [rip+0x2104a],eax        # 251a8 <hold_hash>
    415e:	lea    rax,[rip+0x2035b]        # 244c0 <hand_value>
    4165:	mov    eax,DWORD PTR [rax+rdi*4]
    4168:	test   esi,esi
    416a:	jne    4188 <DropaddHolding+0x78>
    416c:	add    DWORD PTR [rip+0x2103a],eax        # 251ac <white_hand_eval>
    4172:	lea    rax,[rip+0x20407]        # 24580 <material>
    4179:	mov    eax,DWORD PTR [rax+rdi*4]
    417c:	add    DWORD PTR [rip+0x3035e],eax        # 344e0 <Material>
    4182:	ret    
    4183:	nop    DWORD PTR [rax+rax*1+0x0]
    4188:	add    DWORD PTR [rip+0x21012],eax        # 251a0 <black_hand_eval>
    418e:	jmp    4172 <DropaddHolding+0x62>

0000000000004190 <DropremoveHolding>:
    4190:	endbr64 
    4194:	movsxd r8,esi
    4197:	movsxd rdi,edi
    419a:	lea    r9,[rip+0x20e7f]        # 25020 <holding>
    41a1:	mov    rdx,r8
    41a4:	lea    rax,[rdi+rdi*8]
    41a8:	shl    rdx,0x4
    41ac:	shl    rax,0x4
    41b0:	add    rdx,rdi
    41b3:	movsxd r10,DWORD PTR [r9+rdx*4]
    41b7:	mov    rcx,r10
    41ba:	add    rax,r10
    41bd:	lea    r10,[rip+0x2935fc]        # 2977c0 <zobrist>
    41c4:	mov    eax,DWORD PTR [r10+rax*4]
    41c8:	xor    DWORD PTR [rip+0x20fda],eax        # 251a8 <hold_hash>
    41ce:	sub    ecx,0x1
    41d1:	lea    rax,[rip+0x20e28]        # 25000 <num_holding>
    41d8:	sub    DWORD PTR [rax+r8*4],0x1
    41dd:	lea    rax,[rip+0x202dc]        # 244c0 <hand_value>
    41e4:	mov    DWORD PTR [r9+rdx*4],ecx
    41e8:	mov    eax,DWORD PTR [rax+rdi*4]
    41eb:	test   esi,esi
    41ed:	jne    4210 <DropremoveHolding+0x80>
    41ef:	sub    DWORD PTR [rip+0x20fb7],eax        # 251ac <white_hand_eval>
    41f5:	lea    rax,[rip+0x20384]        # 24580 <material>
    41fc:	mov    eax,DWORD PTR [rax+rdi*4]
    41ff:	sub    DWORD PTR [rip+0x302db],eax        # 344e0 <Material>
    4205:	ret    
    4206:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4210:	sub    DWORD PTR [rip+0x20f8a],eax        # 251a0 <black_hand_eval>
    4216:	jmp    41f5 <DropremoveHolding+0x65>
    4218:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004220 <printHolding>:
    4220:	endbr64 
    4224:	sub    rsp,0x10
    4228:	mov    eax,DWORD PTR [rip+0x20e16]        # 25044 <holding+0x24>
    422e:	mov    ecx,DWORD PTR [rip+0x20e08]        # 2503c <holding+0x1c>
    4234:	lea    rsi,[rip+0x15fad]        # 1a1e8 <rook_o.4424+0x198>
    423b:	mov    r9d,DWORD PTR [rip+0x20dea]        # 2502c <holding+0xc>
    4242:	mov    edx,DWORD PTR [rip+0x20ddc]        # 25024 <holding+0x4>
    4248:	mov    edi,0x1
    424d:	push   rax
    424e:	mov    r8d,DWORD PTR [rip+0x20df7]        # 2504c <holding+0x2c>
    4255:	xor    eax,eax
    4257:	call   1420 <__printf_chk@plt>
    425c:	mov    eax,DWORD PTR [rip+0x20e26]        # 25088 <holding+0x68>
    4262:	mov    edi,0x1
    4267:	mov    r9d,DWORD PTR [rip+0x20e02]        # 25070 <holding+0x50>
    426e:	mov    r8d,DWORD PTR [rip+0x20e1b]        # 25090 <holding+0x70>
    4275:	mov    ecx,DWORD PTR [rip+0x20e05]        # 25080 <holding+0x60>
    427b:	lea    rsi,[rip+0x15f8e]        # 1a210 <rook_o.4424+0x1c0>
    4282:	mov    edx,DWORD PTR [rip+0x20de0]        # 25068 <holding+0x48>
    4288:	mov    DWORD PTR [rsp],eax
    428b:	xor    eax,eax
    428d:	call   1420 <__printf_chk@plt>
    4292:	add    rsp,0x18
    4296:	ret    
    4297:	nop    WORD PTR [rax+rax*1+0x0]

00000000000042a0 <is_draw>:
    42a0:	endbr64 
    42a4:	mov    r11d,DWORD PTR [rip+0x279859]        # 27db04 <fifty>
    42ab:	xor    eax,eax
    42ad:	cmp    r11d,0x3
    42b1:	jle    4323 <is_draw+0x83>
    42b3:	mov    ecx,DWORD PTR [rip+0x653e7]        # 696a0 <move_number>
    42b9:	mov    r9d,DWORD PTR [rip+0x2934a0]        # 297760 <ply>
    42c0:	lea    r8d,[rcx+r9*1]
    42c4:	lea    edi,[r8-0x1]
    42c8:	lea    r10d,[r8-0x3]
    42cc:	sub    edi,r11d
    42cf:	test   ecx,ecx
    42d1:	cmovns eax,ecx
    42d4:	cmp    eax,edi
    42d6:	cmovl  eax,edi
    42d9:	mov    edx,eax
    42db:	cmp    r10d,eax
    42de:	jl     4328 <is_draw+0x88>
    42e0:	sub    r10,rdx
    42e3:	movsxd r8,r8d
    42e6:	lea    rax,[rip+0x276b53]        # 27ae40 <hash_history>
    42ed:	mov    esi,DWORD PTR [rip+0x293491]        # 297784 <hash>
    42f3:	and    r10d,0xfffffffe
    42f7:	lea    rax,[rax+r8*4]
    42fb:	lea    rdx,[rip+0x276b36]        # 27ae38 <pv+0x20f578>
    4302:	sub    r8,r10
    4305:	lea    rdx,[rdx+r8*4]
    4309:	jmp    4319 <is_draw+0x79>
    430b:	nop    DWORD PTR [rax+rax*1+0x0]
    4310:	sub    rax,0x8
    4314:	cmp    rax,rdx
    4317:	je     4328 <is_draw+0x88>
    4319:	cmp    DWORD PTR [rax-0xc],esi
    431c:	jne    4310 <is_draw+0x70>
    431e:	mov    eax,0x1
    4323:	ret    
    4324:	nop    DWORD PTR [rax+0x0]
    4328:	cmp    r11d,0x5
    432c:	jle    43a0 <is_draw+0x100>
    432e:	mov    eax,r9d
    4331:	sub    ecx,0x1
    4334:	shr    eax,0x1f
    4337:	add    r9d,eax
    433a:	and    r9d,0x1
    433e:	sub    r9d,eax
    4341:	mov    eax,0x0
    4346:	sub    ecx,r9d
    4349:	test   edi,edi
    434b:	cmovs  edi,eax
    434e:	cmp    ecx,edi
    4350:	jl     43a0 <is_draw+0x100>
    4352:	movsxd rsi,ecx
    4355:	sub    rcx,rdi
    4358:	lea    rax,[rip+0x276ae1]        # 27ae40 <hash_history>
    435f:	mov    edx,DWORD PTR [rip+0x29341f]        # 297784 <hash>
    4365:	and    ecx,0xfffffffe
    4368:	lea    rax,[rax+rsi*4]
    436c:	sub    rsi,rcx
    436f:	lea    rcx,[rip+0x276ac2]        # 27ae38 <pv+0x20f578>
    4376:	lea    rcx,[rcx+rsi*4]
    437a:	xor    esi,esi
    437c:	jmp    4389 <is_draw+0xe9>
    437e:	xchg   ax,ax
    4380:	sub    rax,0x8
    4384:	cmp    rax,rcx
    4387:	je     43a0 <is_draw+0x100>
    4389:	cmp    DWORD PTR [rax],edx
    438b:	jne    4380 <is_draw+0xe0>
    438d:	cmp    esi,0x1
    4390:	je     431e <is_draw+0x7e>
    4392:	sub    rax,0x8
    4396:	mov    esi,0x1
    439b:	cmp    rax,rcx
    439e:	jne    4389 <is_draw+0xe9>
    43a0:	xor    eax,eax
    43a2:	ret    
    43a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    43ad:	nop    DWORD PTR [rax]

00000000000043b0 <storeECache>:
    43b0:	endbr64 
    43b4:	mov    ecx,DWORD PTR [rip+0x2933ca]        # 297784 <hash>
    43ba:	xor    edx,edx
    43bc:	mov    eax,ecx
    43be:	div    DWORD PTR [rip+0x63110]        # 674d4 <ECacheSize>
    43c4:	mov    rax,QWORD PTR [rip+0x20df5]        # 251c0 <ECache>
    43cb:	movsxd rdx,edx
    43ce:	lea    rdx,[rdx+rdx*2]
    43d2:	lea    rax,[rax+rdx*4]
    43d6:	mov    edx,DWORD PTR [rip+0x20dcc]        # 251a8 <hold_hash>
    43dc:	mov    DWORD PTR [rax],ecx
    43de:	mov    DWORD PTR [rax+0x4],edx
    43e1:	mov    DWORD PTR [rax+0x8],edi
    43e4:	ret    
    43e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000043f0 <checkECache>:
    43f0:	endbr64 
    43f4:	mov    ecx,DWORD PTR [rip+0x29338a]        # 297784 <hash>
    43fa:	xor    edx,edx
    43fc:	add    DWORD PTR [rip+0x20dc5],0x1        # 251c8 <ECacheProbes>
    4403:	mov    eax,ecx
    4405:	div    DWORD PTR [rip+0x630c9]        # 674d4 <ECacheSize>
    440b:	mov    rax,QWORD PTR [rip+0x20dae]        # 251c0 <ECache>
    4412:	movsxd rdx,edx
    4415:	lea    rdx,[rdx+rdx*2]
    4419:	lea    rax,[rax+rdx*4]
    441d:	cmp    ecx,DWORD PTR [rax]
    441f:	je     4428 <checkECache+0x38>
    4421:	ret    
    4422:	nop    WORD PTR [rax+rax*1+0x0]
    4428:	mov    ecx,DWORD PTR [rip+0x20d7a]        # 251a8 <hold_hash>
    442e:	cmp    DWORD PTR [rax+0x4],ecx
    4431:	jne    4421 <checkECache+0x31>
    4433:	add    DWORD PTR [rip+0x20d7e],0x1        # 251b8 <ECacheHits>
    443a:	mov    DWORD PTR [rsi],0x1
    4440:	mov    eax,DWORD PTR [rax+0x8]
    4443:	mov    DWORD PTR [rdi],eax
    4445:	ret    
    4446:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004450 <reset_ecache>:
    4450:	endbr64 
    4454:	movsxd rax,DWORD PTR [rip+0x63079]        # 674d4 <ECacheSize>
    445b:	mov    rdi,QWORD PTR [rip+0x20d5e]        # 251c0 <ECache>
    4462:	xor    esi,esi
    4464:	lea    rdx,[rax+rax*2]
    4468:	shl    rdx,0x2
    446c:	jmp    1360 <memset@plt>
    4471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    447c:	nop    DWORD PTR [rax+0x0]

0000000000004480 <alloc_ecache>:
    4480:	endbr64 
    4484:	sub    rsp,0x8
    4488:	movsxd rax,DWORD PTR [rip+0x63045]        # 674d4 <ECacheSize>
    448f:	lea    rdi,[rax+rax*2]
    4493:	shl    rdi,0x2
    4497:	call   13f0 <malloc@plt>
    449c:	mov    QWORD PTR [rip+0x20d1d],rax        # 251c0 <ECache>
    44a3:	test   rax,rax
    44a6:	je     44ad <alloc_ecache+0x2d>
    44a8:	add    rsp,0x8
    44ac:	ret    
    44ad:	lea    rdi,[rip+0x15d84]        # 1a238 <rook_o.4424+0x1e8>
    44b4:	call   12d0 <puts@plt>
    44b9:	mov    edi,0x1
    44be:	call   1440 <exit@plt>
    44c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    44ce:	xchg   ax,ax

00000000000044d0 <free_ecache>:
    44d0:	endbr64 
    44d4:	mov    rdi,QWORD PTR [rip+0x20ce5]        # 251c0 <ECache>
    44db:	jmp    1290 <free@plt>

00000000000044e0 <setup_epd_line>:
    44e0:	endbr64 
    44e4:	push   r15
    44e6:	lea    rcx,[rip+0x2793d3]        # 27d8c0 <board>
    44ed:	xor    eax,eax
    44ef:	push   r14
    44f1:	push   r13
    44f3:	mov    r13,rdi
    44f6:	lea    rdi,[rip+0x2793cb]        # 27d8c8 <board+0x8>
    44fd:	and    rdi,0xfffffffffffffff8
    4501:	push   r12
    4503:	sub    rcx,rdi
    4506:	push   rbp
    4507:	push   rbx
    4508:	add    ecx,0x240
    450e:	shr    ecx,0x3
    4511:	sub    rsp,0x28
    4515:	mov    QWORD PTR [rip+0x2793a0],0x0        # 27d8c0 <board>
    4520:	mov    QWORD PTR [rip+0x2795cd],0x0        # 27daf8 <board+0x238>
    452b:	rep stos QWORD PTR es:[rdi],rax
    452e:	mov    DWORD PTR [rip+0x64c88],0x0        # 691c0 <white_castled>
    4538:	mov    DWORD PTR [rip+0x64c82],0x0        # 691c4 <black_castled>
    4542:	mov    DWORD PTR [rip+0x27738c],0x32        # 27b8d8 <book_ply>
    454c:	movzx  r15d,BYTE PTR [r13+0x0]
    4551:	cmp    r15b,0x20
    4555:	jne    4af0 <setup_epd_line+0x610>
    455b:	mov    edx,r13d
    455e:	lea    rax,[r13+0x1]
    4562:	neg    edx
    4564:	nop    DWORD PTR [rax+0x0]
    4568:	lea    ecx,[rdx+rax*1]
    456b:	mov    r14,rax
    456e:	movzx  r15d,BYTE PTR [rax]
    4572:	add    rax,0x1
    4576:	cmp    r15b,0x20
    457a:	je     4568 <setup_epd_line+0x88>
    457c:	cmp    r15b,0xa
    4580:	je     4692 <setup_epd_line+0x1b2>
    4586:	test   r15b,r15b
    4589:	je     4692 <setup_epd_line+0x1b2>
    458f:	mov    DWORD PTR [rsp+0x4],0x0
    4597:	lea    r12,[rip+0x15cc2]        # 1a260 <rook_o.4424+0x210>
    459e:	mov    DWORD PTR [rsp+0x14],0x0
    45a6:	mov    DWORD PTR [rsp+0x18],0x6e
    45ae:	mov    DWORD PTR [rsp+0x1c],0x0
    45b6:	jmp    45e7 <setup_epd_line+0x107>
    45b8:	nop    DWORD PTR [rax+rax*1+0x0]
    45c0:	cmp    r15b,0x20
    45c4:	je     46f8 <setup_epd_line+0x218>
    45ca:	movzx  r15d,BYTE PTR [rbp+0x0]
    45cf:	cmp    r15b,0xa
    45d3:	je     4692 <setup_epd_line+0x1b2>
    45d9:	test   r15b,r15b
    45dc:	je     4692 <setup_epd_line+0x1b2>
    45e2:	mov    ecx,ebx
    45e4:	mov    r14,rbp
    45e7:	lea    eax,[rcx+0x1]
    45ea:	mov    esi,DWORD PTR [rsp+0x4]
    45ee:	movsxd rdx,eax
    45f1:	mov    rbx,rdx
    45f4:	lea    rbp,[r13+rdx*1+0x0]
    45f9:	test   esi,esi
    45fb:	jne    45c0 <setup_epd_line+0xe0>
    45fd:	mov    DWORD PTR [rsp+0x10],ecx
    4601:	mov    QWORD PTR [rsp+0x8],rdx
    4606:	call   14a0 <__ctype_b_loc@plt>
    460b:	mov    rdx,QWORD PTR [rsp+0x8]
    4610:	movsxd rcx,DWORD PTR [rsp+0x10]
    4615:	mov    r8,rax
    4618:	movsx  rax,r15b
    461c:	mov    rsi,QWORD PTR [r8]
    461f:	movzx  eax,WORD PTR [rsi+rax*2]
    4623:	test   ah,0x8
    4626:	jne    47a0 <setup_epd_line+0x2c0>
    462c:	cmp    r15b,0x2f
    4630:	je     4770 <setup_epd_line+0x290>
    4636:	test   ah,0x4
    4639:	jne    46b0 <setup_epd_line+0x1d0>
    463b:	cmp    r15b,0x20
    463f:	jne    45ca <setup_epd_line+0xea>
    4641:	movzx  eax,BYTE PTR [r13+rcx*1+0x0]
    4647:	cmp    al,0x20
    4649:	jne    4669 <setup_epd_line+0x189>
    464b:	nop    DWORD PTR [rax+rax*1+0x0]
    4650:	mov    ebx,edx
    4652:	add    rdx,0x1
    4656:	movzx  eax,BYTE PTR [r13+rdx*1-0x1]
    465c:	cmp    al,0x20
    465e:	je     4650 <setup_epd_line+0x170>
    4660:	add    ebx,0x1
    4663:	movsxd rbp,ebx
    4666:	add    rbp,r13
    4669:	cmp    al,0x77
    466b:	je     49bb <setup_epd_line+0x4db>
    4671:	mov    DWORD PTR [rip+0x278ea5],0x0        # 27d520 <white_to_move>
    467b:	movzx  r15d,BYTE PTR [rbp+0x0]
    4680:	mov    DWORD PTR [rsp+0x4],0x1
    4688:	cmp    r15b,0xa
    468c:	jne    45d9 <setup_epd_line+0xf9>
    4692:	call   18860 <reset_piece_square>
    4697:	add    rsp,0x28
    469b:	pop    rbx
    469c:	pop    rbp
    469d:	pop    r12
    469f:	pop    r13
    46a1:	pop    r14
    46a3:	pop    r15
    46a5:	jmp    16780 <initialize_hash>
    46aa:	nop    WORD PTR [rax+rax*1+0x0]
    46b0:	sub    r15d,0x42
    46b4:	cmp    r15b,0x30
    46b8:	ja     46e6 <setup_epd_line+0x206>
    46ba:	movzx  r15d,r15b
    46be:	movsxd rax,DWORD PTR [r12+r15*4]
    46c2:	add    rax,r12
    46c5:	notrack jmp rax
    46c8:	mov    eax,DWORD PTR [rsp+0x18]
    46cc:	add    eax,DWORD PTR [rsp+0x14]
    46d0:	lea    rsi,[rip+0x2791e9]        # 27d8c0 <board>
    46d7:	mov    DWORD PTR [rip+0x2798ff],eax        # 27dfdc <wking_loc>
    46dd:	cdqe   
    46df:	mov    DWORD PTR [rsi+rax*4],0x5
    46e6:	add    DWORD PTR [rsp+0x14],0x1
    46eb:	movzx  r15d,BYTE PTR [rbp+0x0]
    46f0:	jmp    45cf <setup_epd_line+0xef>
    46f5:	nop    DWORD PTR [rax]
    46f8:	add    DWORD PTR [rsp+0x4],0x1
    46fd:	mov    esi,DWORD PTR [rsp+0x4]
    4701:	cmp    esi,0x2
    4704:	je     49e0 <setup_epd_line+0x500>
    470a:	cmp    DWORD PTR [rsp+0x4],0x3
    470f:	jne    45ca <setup_epd_line+0xea>
    4715:	movsxd rax,ecx
    4718:	movsx  eax,BYTE PTR [r13+rax*1+0x0]
    471e:	cmp    al,0x20
    4720:	jne    4741 <setup_epd_line+0x261>
    4722:	nop    WORD PTR [rax+rax*1+0x0]
    4728:	mov    ecx,edx
    472a:	add    rdx,0x1
    472e:	movsx  eax,BYTE PTR [r13+rdx*1-0x1]
    4734:	cmp    al,0x20
    4736:	je     4728 <setup_epd_line+0x248>
    4738:	lea    ebx,[rcx+0x1]
    473b:	movsxd rbp,ebx
    473e:	add    rbp,r13
    4741:	cmp    al,0x2d
    4743:	je     4afa <setup_epd_line+0x61a>
    4749:	movsx  edx,BYTE PTR [rbp+0x0]
    474d:	lea    ebx,[rcx+0x3]
    4750:	movsxd rbp,ebx
    4753:	lea    edx,[rdx+rdx*2-0x93]
    475a:	add    rbp,r13
    475d:	lea    eax,[rax+rdx*4-0x47]
    4761:	mov    DWORD PTR [rip+0x28ef79],eax        # 2936e0 <ep_square>
    4767:	jmp    45ca <setup_epd_line+0xea>
    476c:	nop    DWORD PTR [rax+0x0]
    4770:	add    DWORD PTR [rsp+0x1c],0x1
    4775:	movsxd rax,DWORD PTR [rsp+0x1c]
    477a:	lea    rsi,[rip+0x15bbf]        # 1a340 <rankoffsets.4429>
    4781:	mov    DWORD PTR [rsp+0x14],0x0
    4789:	movzx  r15d,BYTE PTR [rbp+0x0]
    478e:	mov    eax,DWORD PTR [rsi+rax*4]
    4791:	mov    DWORD PTR [rsp+0x18],eax
    4795:	jmp    45cf <setup_epd_line+0xef>
    479a:	nop    WORD PTR [rax+rax*1+0x0]
    47a0:	mov    eax,DWORD PTR [rsp+0x14]
    47a4:	add    eax,DWORD PTR [rsp+0x18]
    47a8:	xor    r15d,r15d
    47ab:	mov    DWORD PTR [rsp+0x8],ebx
    47af:	cdqe   
    47b1:	lea    rsi,[rip+0x279108]        # 27d8c0 <board>
    47b8:	mov    rbx,r15
    47bb:	lea    rax,[rsi+rax*4]
    47bf:	mov    r15,rax
    47c2:	jmp    47d4 <setup_epd_line+0x2f4>
    47c4:	nop    DWORD PTR [rax+0x0]
    47c8:	mov    DWORD PTR [r15+rbx*4],0xd
    47d0:	add    rbx,0x1
    47d4:	xor    esi,esi
    47d6:	mov    edx,0xa
    47db:	mov    rdi,r14
    47de:	call   13d0 <strtol@plt>
    47e3:	cmp    eax,ebx
    47e5:	jg     47c8 <setup_epd_line+0x2e8>
    47e7:	mov    edx,0xa
    47ec:	xor    esi,esi
    47ee:	mov    rdi,r14
    47f1:	mov    ebx,DWORD PTR [rsp+0x8]
    47f5:	call   13d0 <strtol@plt>
    47fa:	add    DWORD PTR [rsp+0x14],eax
    47fe:	movzx  r15d,BYTE PTR [rbp+0x0]
    4803:	jmp    45cf <setup_epd_line+0xef>
    4808:	mov    eax,DWORD PTR [rsp+0x18]
    480c:	add    eax,DWORD PTR [rsp+0x14]
    4810:	lea    rsi,[rip+0x2790a9]        # 27d8c0 <board>
    4817:	cdqe   
    4819:	add    DWORD PTR [rsp+0x14],0x1
    481e:	mov    DWORD PTR [rsi+rax*4],0x8
    4825:	movzx  r15d,BYTE PTR [rbp+0x0]
    482a:	jmp    45cf <setup_epd_line+0xef>
    482f:	mov    eax,DWORD PTR [rsp+0x18]
    4833:	add    eax,DWORD PTR [rsp+0x14]
    4837:	lea    rsi,[rip+0x279082]        # 27d8c0 <board>
    483e:	cdqe   
    4840:	add    DWORD PTR [rsp+0x14],0x1
    4845:	mov    DWORD PTR [rsi+rax*4],0xb
    484c:	movzx  r15d,BYTE PTR [rbp+0x0]
    4851:	jmp    45cf <setup_epd_line+0xef>
    4856:	mov    eax,DWORD PTR [rsp+0x18]
    485a:	add    eax,DWORD PTR [rsp+0x14]
    485e:	lea    rsi,[rip+0x27905b]        # 27d8c0 <board>
    4865:	cdqe   
    4867:	add    DWORD PTR [rsp+0x14],0x1
    486c:	mov    DWORD PTR [rsi+rax*4],0x3
    4873:	movzx  r15d,BYTE PTR [rbp+0x0]
    4878:	jmp    45cf <setup_epd_line+0xef>
    487d:	mov    eax,DWORD PTR [rsp+0x18]
    4881:	add    eax,DWORD PTR [rsp+0x14]
    4885:	lea    rsi,[rip+0x279034]        # 27d8c0 <board>
    488c:	cdqe   
    488e:	add    DWORD PTR [rsp+0x14],0x1
    4893:	mov    DWORD PTR [rsi+rax*4],0x1
    489a:	movzx  r15d,BYTE PTR [rbp+0x0]
    489f:	jmp    45cf <setup_epd_line+0xef>
    48a4:	mov    eax,DWORD PTR [rsp+0x18]
    48a8:	add    eax,DWORD PTR [rsp+0x14]
    48ac:	lea    rsi,[rip+0x27900d]        # 27d8c0 <board>
    48b3:	cdqe   
    48b5:	add    DWORD PTR [rsp+0x14],0x1
    48ba:	mov    DWORD PTR [rsi+rax*4],0x9
    48c1:	movzx  r15d,BYTE PTR [rbp+0x0]
    48c6:	jmp    45cf <setup_epd_line+0xef>
    48cb:	mov    eax,DWORD PTR [rsp+0x18]
    48cf:	add    eax,DWORD PTR [rsp+0x14]
    48d3:	lea    rsi,[rip+0x278fe6]        # 27d8c0 <board>
    48da:	cdqe   
    48dc:	add    DWORD PTR [rsp+0x14],0x1
    48e1:	mov    DWORD PTR [rsi+rax*4],0x7
    48e8:	movzx  r15d,BYTE PTR [rbp+0x0]
    48ed:	jmp    45cf <setup_epd_line+0xef>
    48f2:	mov    eax,DWORD PTR [rsp+0x18]
    48f6:	add    eax,DWORD PTR [rsp+0x14]
    48fa:	lea    rsi,[rip+0x278fbf]        # 27d8c0 <board>
    4901:	cdqe   
    4903:	add    DWORD PTR [rsp+0x14],0x1
    4908:	mov    DWORD PTR [rsi+rax*4],0xc
    490f:	movzx  r15d,BYTE PTR [rbp+0x0]
    4914:	jmp    45cf <setup_epd_line+0xef>
    4919:	mov    eax,DWORD PTR [rsp+0x18]
    491d:	add    eax,DWORD PTR [rsp+0x14]
    4921:	lea    rsi,[rip+0x278f98]        # 27d8c0 <board>
    4928:	mov    DWORD PTR [rip+0x278bf6],eax        # 27d524 <bking_loc>
    492e:	cdqe   
    4930:	add    DWORD PTR [rsp+0x14],0x1
    4935:	mov    DWORD PTR [rsi+rax*4],0x6
    493c:	movzx  r15d,BYTE PTR [rbp+0x0]
    4941:	jmp    45cf <setup_epd_line+0xef>
    4946:	mov    eax,DWORD PTR [rsp+0x18]
    494a:	add    eax,DWORD PTR [rsp+0x14]
    494e:	lea    rsi,[rip+0x278f6b]        # 27d8c0 <board>
    4955:	cdqe   
    4957:	add    DWORD PTR [rsp+0x14],0x1
    495c:	mov    DWORD PTR [rsi+rax*4],0x4
    4963:	movzx  r15d,BYTE PTR [rbp+0x0]
    4968:	jmp    45cf <setup_epd_line+0xef>
    496d:	mov    eax,DWORD PTR [rsp+0x18]
    4971:	add    eax,DWORD PTR [rsp+0x14]
    4975:	lea    rdi,[rip+0x278f44]        # 27d8c0 <board>
    497c:	cdqe   
    497e:	add    DWORD PTR [rsp+0x14],0x1
    4983:	mov    DWORD PTR [rdi+rax*4],0x2
    498a:	movzx  r15d,BYTE PTR [rbp+0x0]
    498f:	jmp    45cf <setup_epd_line+0xef>
    4994:	mov    eax,DWORD PTR [rsp+0x18]
    4998:	add    eax,DWORD PTR [rsp+0x14]
    499c:	lea    rsi,[rip+0x278f1d]        # 27d8c0 <board>
    49a3:	cdqe   
    49a5:	add    DWORD PTR [rsp+0x14],0x1
    49aa:	mov    DWORD PTR [rsi+rax*4],0xa
    49b1:	movzx  r15d,BYTE PTR [rbp+0x0]
    49b6:	jmp    45cf <setup_epd_line+0xef>
    49bb:	mov    DWORD PTR [rip+0x278b5b],0x1        # 27d520 <white_to_move>
    49c5:	movzx  r15d,BYTE PTR [rbp+0x0]
    49ca:	mov    DWORD PTR [rsp+0x4],0x1
    49d2:	jmp    45cf <setup_epd_line+0xef>
    49d7:	nop    WORD PTR [rax+rax*1+0x0]
    49e0:	mov    DWORD PTR [rip+0x28f24e],0x1        # 293c38 <moved+0x78>
    49ea:	movsxd rcx,ecx
    49ed:	mov    DWORD PTR [rip+0x28f24d],0x1        # 293c44 <moved+0x84>
    49f7:	mov    DWORD PTR [rip+0x28f227],0x1        # 293c28 <moved+0x68>
    4a01:	mov    DWORD PTR [rip+0x28f389],0x1        # 293d94 <moved+0x1d4>
    4a0b:	mov    DWORD PTR [rip+0x28f373],0x1        # 293d88 <moved+0x1c8>
    4a15:	mov    DWORD PTR [rip+0x28f359],0x1        # 293d78 <moved+0x1b8>
    4a1f:	movzx  r15d,BYTE PTR [r13+rcx*1+0x0]
    4a25:	cmp    r15b,0x20
    4a29:	jne    4a46 <setup_epd_line+0x566>
    4a2b:	nop    DWORD PTR [rax+rax*1+0x0]
    4a30:	movsxd rcx,edx
    4a33:	add    rdx,0x1
    4a37:	movzx  r15d,BYTE PTR [r13+rdx*1-0x1]
    4a3d:	cmp    r15b,0x20
    4a41:	je     4a30 <setup_epd_line+0x550>
    4a43:	lea    eax,[rcx+0x1]
    4a46:	lea    rdx,[r13+rcx*1+0x1]
    4a4b:	sub    eax,edx
    4a4d:	jmp    4a88 <setup_epd_line+0x5a8>
    4a4f:	nop
    4a50:	cmp    r15b,0x51
    4a54:	jne    4a70 <setup_epd_line+0x590>
    4a56:	mov    DWORD PTR [rip+0x28f1c8],0x0        # 293c28 <moved+0x68>
    4a60:	mov    DWORD PTR [rip+0x28f1ce],0x0        # 293c38 <moved+0x78>
    4a6a:	nop    WORD PTR [rax+rax*1+0x0]
    4a70:	lea    ebx,[rax+rdx*1]
    4a73:	mov    rbp,rdx
    4a76:	movzx  r15d,BYTE PTR [rdx]
    4a7a:	add    rdx,0x1
    4a7e:	cmp    r15b,0x20
    4a82:	je     45e2 <setup_epd_line+0x102>
    4a88:	cmp    r15b,0x6b
    4a8c:	je     4ad0 <setup_epd_line+0x5f0>
    4a8e:	jg     4ab0 <setup_epd_line+0x5d0>
    4a90:	cmp    r15b,0x4b
    4a94:	jne    4a50 <setup_epd_line+0x570>
    4a96:	mov    DWORD PTR [rip+0x28f1a4],0x0        # 293c44 <moved+0x84>
    4aa0:	mov    DWORD PTR [rip+0x28f18e],0x0        # 293c38 <moved+0x78>
    4aaa:	jmp    4a70 <setup_epd_line+0x590>
    4aac:	nop    DWORD PTR [rax+0x0]
    4ab0:	cmp    r15b,0x71
    4ab4:	jne    4a70 <setup_epd_line+0x590>
    4ab6:	mov    DWORD PTR [rip+0x28f2b8],0x0        # 293d78 <moved+0x1b8>
    4ac0:	mov    DWORD PTR [rip+0x28f2be],0x0        # 293d88 <moved+0x1c8>
    4aca:	jmp    4a70 <setup_epd_line+0x590>
    4acc:	nop    DWORD PTR [rax+0x0]
    4ad0:	mov    DWORD PTR [rip+0x28f2ba],0x0        # 293d94 <moved+0x1d4>
    4ada:	mov    DWORD PTR [rip+0x28f2a4],0x0        # 293d88 <moved+0x1c8>
    4ae4:	jmp    4a70 <setup_epd_line+0x590>
    4ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4af0:	mov    r14,r13
    4af3:	xor    ecx,ecx
    4af5:	jmp    457c <setup_epd_line+0x9c>
    4afa:	mov    DWORD PTR [rip+0x28ebdc],0x0        # 2936e0 <ep_square>
    4b04:	movzx  r15d,BYTE PTR [rbp+0x0]
    4b09:	jmp    45cf <setup_epd_line+0xef>
    4b0e:	xchg   ax,ax

0000000000004b10 <check_solution>:
    4b10:	endbr64 
    4b14:	push   r12
    4b16:	push   rbp
    4b17:	mov    rbp,rdi
    4b1a:	sub    rsp,0x118
    4b21:	mov    rax,QWORD PTR fs:0x28
    4b2a:	mov    QWORD PTR [rsp+0x108],rax
    4b32:	xor    eax,eax
    4b34:	mov    r12,rsp
    4b37:	sub    rsp,0x8
    4b3b:	push   QWORD PTR [rsp+0x148]
    4b42:	mov    rdi,r12
    4b45:	push   QWORD PTR [rsp+0x148]
    4b4c:	push   QWORD PTR [rsp+0x148]
    4b53:	call   170f0 <comp_to_san>
    4b58:	add    rsp,0x20
    4b5c:	lea    rsi,[rip+0x157fd]        # 1a360 <rankoffsets.4429+0x20>
    4b63:	mov    rdi,rbp
    4b66:	call   1480 <strstr@plt>
    4b6b:	test   rax,rax
    4b6e:	je     4ba8 <check_solution+0x98>
    4b70:	mov    rsi,r12
    4b73:	mov    rdi,rbp
    4b76:	call   1480 <strstr@plt>
    4b7b:	test   rax,rax
    4b7e:	setne  al
    4b81:	movzx  eax,al
    4b84:	mov    rdx,QWORD PTR [rsp+0x108]
    4b8c:	xor    rdx,QWORD PTR fs:0x28
    4b95:	jne    4bef <check_solution+0xdf>
    4b97:	add    rsp,0x118
    4b9e:	pop    rbp
    4b9f:	pop    r12
    4ba1:	ret    
    4ba2:	nop    WORD PTR [rax+rax*1+0x0]
    4ba8:	lea    rsi,[rip+0x1a546]        # 1f0f5 <scentral+0x315>
    4baf:	mov    rdi,rbp
    4bb2:	call   1480 <strstr@plt>
    4bb7:	test   rax,rax
    4bba:	je     4bd8 <check_solution+0xc8>
    4bbc:	mov    rsi,r12
    4bbf:	mov    rdi,rbp
    4bc2:	call   1480 <strstr@plt>
    4bc7:	test   rax,rax
    4bca:	sete   al
    4bcd:	movzx  eax,al
    4bd0:	jmp    4b84 <check_solution+0x74>
    4bd2:	nop    WORD PTR [rax+rax*1+0x0]
    4bd8:	lea    rsi,[rip+0x15839]        # 1a418 <rankoffsets.4429+0xd8>
    4bdf:	mov    edi,0x1
    4be4:	xor    eax,eax
    4be6:	call   1420 <__printf_chk@plt>
    4beb:	xor    eax,eax
    4bed:	jmp    4b84 <check_solution+0x74>
    4bef:	call   1310 <__stack_chk_fail@plt>
    4bf4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    4bff:	nop

0000000000004c00 <run_epd_testsuite>:
    4c00:	endbr64 
    4c04:	push   r15
    4c06:	push   r14
    4c08:	push   r13
    4c0a:	push   r12
    4c0c:	push   rbp
    4c0d:	push   rbx
    4c0e:	sub    rsp,0x1000
    4c15:	or     QWORD PTR [rsp],0x0
    4c1a:	sub    rsp,0xfe8
    4c21:	lea    rsi,[rip+0x1573b]        # 1a363 <rankoffsets.4429+0x23>
    4c28:	mov    edi,0x1
    4c2d:	xor    ebx,ebx
    4c2f:	mov    rax,QWORD PTR fs:0x28
    4c38:	mov    QWORD PTR [rsp+0x1fd8],rax
    4c40:	xor    eax,eax
    4c42:	lea    rbp,[rsp+0x30]
    4c47:	lea    r15,[rsp+0x10]
    4c4c:	lea    r12,[rsp+0xfd0]
    4c54:	call   1420 <__printf_chk@plt>
    4c59:	mov    rdx,QWORD PTR [rip+0x1f8f0]        # 24550 <stdin@@GLIBC_2.2.5>
    4c60:	mov    rdi,r12
    4c63:	mov    esi,0x100
    4c68:	call   18c30 <rinput>
    4c6d:	lea    rsi,[rip+0x15708]        # 1a37c <rankoffsets.4429+0x3c>
    4c74:	mov    edi,0x1
    4c79:	xor    eax,eax
    4c7b:	call   1420 <__printf_chk@plt>
    4c80:	mov    rdx,QWORD PTR [rip+0x1f8c9]        # 24550 <stdin@@GLIBC_2.2.5>
    4c87:	mov    esi,0x100
    4c8c:	mov    rdi,rbp
    4c8f:	call   18c30 <rinput>
    4c94:	mov    edx,0xa
    4c99:	xor    esi,esi
    4c9b:	mov    rdi,rbp
    4c9e:	call   13d0 <strtol@plt>
    4ca3:	mov    edi,0xa
    4ca8:	mov    r13,rax
    4cab:	call   12a0 <putchar@plt>
    4cb0:	imul   eax,r13d,0x64
    4cb4:	mov    rdi,r12
    4cb7:	lea    rsi,[rip+0x19b07]        # 1e7c5 <sbishop+0x9a5>
    4cbe:	xor    r12d,r12d
    4cc1:	mov    DWORD PTR [rsp+0x4],eax
    4cc5:	call   1430 <fopen@plt>
    4cca:	mov    r14,rax
    4ccd:	lea    rax,[rsp+0x800]
    4cd5:	mov    QWORD PTR [rsp+0x8],rax
    4cda:	jmp    4cfc <run_epd_testsuite+0xfc>
    4cdc:	nop    DWORD PTR [rax+0x0]
    4ce0:	add    r12d,0x1
    4ce4:	mov    ecx,ebx
    4ce6:	mov    edx,r12d
    4ce9:	lea    rsi,[rip+0x156f8]        # 1a3e8 <rankoffsets.4429+0xa8>
    4cf0:	xor    eax,eax
    4cf2:	mov    edi,0x1
    4cf7:	call   1420 <__printf_chk@plt>
    4cfc:	mov    rdx,r14
    4cff:	mov    esi,0x7d0
    4d04:	mov    rdi,rbp
    4d07:	call   1380 <fgets@plt>
    4d0c:	test   rax,rax
    4d0f:	je     4fe8 <run_epd_testsuite+0x3e8>
    4d15:	mov    rdi,rbp
    4d18:	add    ebx,0x1
    4d1b:	call   44e0 <setup_epd_line>
    4d20:	mov    edx,DWORD PTR [rip+0x2787fa]        # 27d520 <white_to_move>
    4d26:	xor    eax,eax
    4d28:	test   edx,edx
    4d2a:	sete   al
    4d2d:	mov    DWORD PTR [rip+0x6497d],eax        # 696b0 <root_to_move>
    4d33:	call   16680 <clear_tt>
    4d38:	call   16780 <initialize_hash>
    4d3d:	mov    rdi,QWORD PTR [rip+0x1f7fc]        # 24540 <stdout@@GLIBC_2.2.5>
    4d44:	mov    esi,0x1
    4d49:	call   178e0 <display_board>
    4d4e:	mov    DWORD PTR [rip+0x62228],0x0        # 66f80 <forcedwin>
    4d58:	call   19230 <interrupt>
    4d5d:	test   eax,eax
    4d5f:	jne    4fb0 <run_epd_testsuite+0x3b0>
    4d65:	mov    eax,DWORD PTR [rsp+0x4]
    4d69:	mov    rdi,r15
    4d6c:	mov    DWORD PTR [rip+0x2929de],eax        # 297750 <fixed_time>
    4d72:	call   13f80 <think>
    4d77:	mov    edx,DWORD PTR [rip+0x276b5f]        # 27b8dc <nodes>
    4d7d:	pxor   xmm0,xmm0
    4d81:	pxor   xmm1,xmm1
    4d85:	cvtsi2ss xmm0,DWORD PTR [rip+0x66b13]        # 6b8a0 <qnodes>
    4d8d:	mov    edi,0x1
    4d92:	mov    eax,0x1
    4d97:	cvtsi2ss xmm1,edx
    4d9b:	lea    rsi,[rip+0x155ef]        # 1a391 <rankoffsets.4429+0x51>
    4da2:	divss  xmm0,xmm1
    4da6:	mulss  xmm0,DWORD PTR [rip+0x157b2]        # 1a560 <rankoffsets.4429+0x220>
    4dae:	cvtss2sd xmm0,xmm0
    4db2:	call   1420 <__printf_chk@plt>
    4db7:	mov    eax,DWORD PTR [rip+0x203fb]        # 251b8 <ECacheHits>
    4dbd:	mov    edx,DWORD PTR [rip+0x20405]        # 251c8 <ECacheProbes>
    4dc3:	pxor   xmm0,xmm0
    4dc7:	pxor   xmm1,xmm1
    4dcb:	mov    edi,0x1
    4dd0:	mov    rcx,rax
    4dd3:	cvtsi2ss xmm0,rax
    4dd8:	mov    eax,edx
    4dda:	cvtsi2ss xmm1,rax
    4ddf:	addss  xmm1,DWORD PTR [rip+0x1577d]        # 1a564 <rankoffsets.4429+0x224>
    4de7:	mov    eax,0x1
    4dec:	lea    rsi,[rip+0x1564d]        # 1a440 <rankoffsets.4429+0x100>
    4df3:	divss  xmm0,xmm1
    4df7:	mulss  xmm0,DWORD PTR [rip+0x15761]        # 1a560 <rankoffsets.4429+0x220>
    4dff:	cvtss2sd xmm0,xmm0
    4e03:	call   1420 <__printf_chk@plt>
    4e08:	mov    ecx,DWORD PTR [rip+0x292972]        # 297780 <TTProbes>
    4e0e:	mov    eax,DWORD PTR [rip+0x292980]        # 297794 <TTHits>
    4e14:	pxor   xmm0,xmm0
    4e18:	pxor   xmm1,xmm1
    4e1c:	mov    r8d,DWORD PTR [rip+0x292971]        # 297794 <TTHits>
    4e23:	mov    edx,DWORD PTR [rip+0x292967]        # 297790 <TTStores>
    4e29:	cvtsi2ss xmm0,rax
    4e2e:	mov    eax,ecx
    4e30:	mov    edi,0x1
    4e35:	cvtsi2ss xmm1,rax
    4e3a:	addss  xmm1,DWORD PTR [rip+0x15722]        # 1a564 <rankoffsets.4429+0x224>
    4e42:	mov    eax,0x1
    4e47:	lea    rsi,[rip+0x1562a]        # 1a478 <rankoffsets.4429+0x138>
    4e4e:	divss  xmm0,xmm1
    4e52:	mulss  xmm0,DWORD PTR [rip+0x15706]        # 1a560 <rankoffsets.4429+0x220>
    4e5a:	cvtss2sd xmm0,xmm0
    4e5e:	call   1420 <__printf_chk@plt>
    4e63:	mov    eax,DWORD PTR [rip+0x27916b]        # 27dfd4 <NCuts>
    4e69:	mov    edx,DWORD PTR [rip+0x2928fd]        # 29776c <NTries>
    4e6f:	pxor   xmm0,xmm0
    4e73:	pxor   xmm1,xmm1
    4e77:	mov    r8d,DWORD PTR [rip+0x2928c6]        # 297744 <TExt>
    4e7e:	lea    rsi,[rip+0x15633]        # 1a4b8 <rankoffsets.4429+0x178>
    4e85:	cvtsi2ss xmm0,rax
    4e8a:	mulss  xmm0,DWORD PTR [rip+0x156ce]        # 1a560 <rankoffsets.4429+0x220>
    4e92:	mov    rcx,rax
    4e95:	mov    eax,edx
    4e97:	cvtsi2ss xmm1,rax
    4e9c:	mov    edi,0x1
    4ea1:	mov    eax,0x1
    4ea6:	addss  xmm1,DWORD PTR [rip+0x156b6]        # 1a564 <rankoffsets.4429+0x224>
    4eae:	divss  xmm0,xmm1
    4eb2:	cvtss2sd xmm0,xmm0
    4eb6:	call   1420 <__printf_chk@plt>
    4ebb:	mov    r8d,DWORD PTR [rip+0x63d02]        # 68bc4 <razor_material>
    4ec2:	mov    ecx,DWORD PTR [rip+0x62a14]        # 678dc <razor_drop>
    4ec8:	mov    edx,DWORD PTR [rip+0x647c6]        # 69694 <ext_check>
    4ece:	lea    rsi,[rip+0x1561b]        # 1a4f0 <rankoffsets.4429+0x1b0>
    4ed5:	mov    edi,0x1
    4eda:	xor    eax,eax
    4edc:	call   1420 <__printf_chk@plt>
    4ee1:	mov    eax,DWORD PTR [rip+0x629f9]        # 678e0 <FHF>
    4ee7:	pxor   xmm0,xmm0
    4eeb:	pxor   xmm1,xmm1
    4eef:	lea    rsi,[rip+0x154b8]        # 1a3ae <rankoffsets.4429+0x6e>
    4ef6:	mov    edi,0x1
    4efb:	cvtsi2ss xmm0,rax
    4f00:	mov    eax,DWORD PTR [rip+0x6418a]        # 69090 <FH>
    4f06:	mulss  xmm0,DWORD PTR [rip+0x15652]        # 1a560 <rankoffsets.4429+0x220>
    4f0e:	cvtsi2ss xmm1,rax
    4f13:	mov    eax,0x1
    4f18:	divss  xmm0,xmm1
    4f1c:	addss  xmm0,DWORD PTR [rip+0x15640]        # 1a564 <rankoffsets.4429+0x224>
    4f24:	cvtss2sd xmm0,xmm0
    4f28:	call   1420 <__printf_chk@plt>
    4f2d:	mov    r13d,DWORD PTR [rip+0x397f4]        # 3e728 <maxposdiff>
    4f34:	mov    esi,0xf4240
    4f39:	mov    edi,0xfff0bdc0
    4f3e:	call   53c0 <eval>
    4f43:	mov    edx,DWORD PTR [rip+0x2f597]        # 344e0 <Material>
    4f49:	mov    r8d,r13d
    4f4c:	lea    rsi,[rip+0x155dd]        # 1a530 <rankoffsets.4429+0x1f0>
    4f53:	mov    ecx,eax
    4f55:	mov    edi,0x1
    4f5a:	xor    eax,eax
    4f5c:	call   1420 <__printf_chk@plt>
    4f61:	mov    edi,0xa
    4f66:	call   12a0 <putchar@plt>
    4f6b:	mov    eax,DWORD PTR [rip+0x6200f]        # 66f80 <forcedwin>
    4f71:	test   eax,eax
    4f73:	jne    4ce0 <run_epd_testsuite+0xe0>
    4f79:	sub    rsp,0x8
    4f7d:	mov    rdi,rbp
    4f80:	push   QWORD PTR [rsp+0x28]
    4f84:	push   QWORD PTR [rsp+0x28]
    4f88:	push   QWORD PTR [rsp+0x28]
    4f8c:	call   4b10 <check_solution>
    4f91:	add    rsp,0x20
    4f95:	test   eax,eax
    4f97:	je     4fd0 <run_epd_testsuite+0x3d0>
    4f99:	lea    rdi,[rip+0x15424]        # 1a3c4 <rankoffsets.4429+0x84>
    4fa0:	add    r12d,0x1
    4fa4:	call   12d0 <puts@plt>
    4fa9:	jmp    4ce4 <run_epd_testsuite+0xe4>
    4fae:	xchg   ax,ax
    4fb0:	mov    rdx,QWORD PTR [rip+0x1f599]        # 24550 <stdin@@GLIBC_2.2.5>
    4fb7:	mov    rdi,QWORD PTR [rsp+0x8]
    4fbc:	mov    esi,0x100
    4fc1:	call   18c30 <rinput>
    4fc6:	jmp    4d65 <run_epd_testsuite+0x165>
    4fcb:	nop    DWORD PTR [rax+rax*1+0x0]
    4fd0:	lea    rdi,[rip+0x153fd]        # 1a3d4 <rankoffsets.4429+0x94>
    4fd7:	call   12d0 <puts@plt>
    4fdc:	jmp    4ce4 <run_epd_testsuite+0xe4>
    4fe1:	nop    DWORD PTR [rax+0x0]
    4fe8:	mov    edi,0xa
    4fed:	call   12a0 <putchar@plt>
    4ff2:	mov    rax,QWORD PTR [rsp+0x1fd8]
    4ffa:	xor    rax,QWORD PTR fs:0x28
    5003:	jne    5017 <run_epd_testsuite+0x417>
    5005:	add    rsp,0x1fe8
    500c:	pop    rbx
    500d:	pop    rbp
    500e:	pop    r12
    5010:	pop    r13
    5012:	pop    r14
    5014:	pop    r15
    5016:	ret    
    5017:	call   1310 <__stack_chk_fail@plt>
    501c:	nop    DWORD PTR [rax+0x0]

0000000000005020 <run_autotest>:
    5020:	endbr64 
    5024:	push   r13
    5026:	lea    rsi,[rip+0x19798]        # 1e7c5 <sbishop+0x9a5>
    502d:	push   r12
    502f:	push   rbp
    5030:	push   rbx
    5031:	sub    rsp,0x138
    5038:	mov    rax,QWORD PTR fs:0x28
    5041:	mov    QWORD PTR [rsp+0x128],rax
    5049:	xor    eax,eax
    504b:	call   1430 <fopen@plt>
    5050:	test   rax,rax
    5053:	je     5147 <run_autotest+0x127>
    5059:	mov    r12,rax
    505c:	lea    rbx,[rsp+0x20]
    5061:	mov    r13,rsp
    5064:	call   18c90 <rtime>
    5069:	jmp    511a <run_autotest+0xfa>
    506e:	xchg   ax,ax
    5070:	mov    rdi,rbx
    5073:	call   44e0 <setup_epd_line>
    5078:	mov    edx,DWORD PTR [rip+0x2784a2]        # 27d520 <white_to_move>
    507e:	xor    eax,eax
    5080:	test   edx,edx
    5082:	sete   al
    5085:	mov    DWORD PTR [rip+0x64625],eax        # 696b0 <root_to_move>
    508b:	call   16680 <clear_tt>
    5090:	call   16780 <initialize_hash>
    5095:	mov    edi,0xa
    509a:	call   12a0 <putchar@plt>
    509f:	mov    rdi,QWORD PTR [rip+0x1f49a]        # 24540 <stdout@@GLIBC_2.2.5>
    50a6:	mov    esi,0x1
    50ab:	call   178e0 <display_board>
    50b0:	mov    rdx,rbx
    50b3:	mov    edi,0x1
    50b8:	xor    eax,eax
    50ba:	lea    rsi,[rip+0x15336]        # 1a3f7 <rankoffsets.4429+0xb7>
    50c1:	call   1420 <__printf_chk@plt>
    50c6:	mov    rdx,r12
    50c9:	mov    esi,0x100
    50ce:	mov    rdi,rbx
    50d1:	call   1380 <fgets@plt>
    50d6:	test   rax,rax
    50d9:	je     5147 <run_autotest+0x127>
    50db:	mov    edx,0xa
    50e0:	xor    esi,esi
    50e2:	mov    rdi,rbx
    50e5:	call   13d0 <strtol@plt>
    50ea:	mov    edi,0x1
    50ef:	lea    rsi,[rip+0x1530a]        # 1a400 <rankoffsets.4429+0xc0>
    50f6:	mov    rbp,rax
    50f9:	mov    edx,eax
    50fb:	xor    eax,eax
    50fd:	call   1420 <__printf_chk@plt>
    5102:	mov    rdi,r13
    5105:	mov    DWORD PTR [rip+0x28d2fd],ebp        # 292408 <maxdepth>
    510b:	mov    DWORD PTR [rip+0x29263b],0xf4240        # 297750 <fixed_time>
    5115:	call   13f80 <think>
    511a:	mov    rdx,r12
    511d:	mov    esi,0x100
    5122:	mov    rdi,rbx
    5125:	call   1380 <fgets@plt>
    512a:	test   rax,rax
    512d:	jne    5070 <run_autotest+0x50>
    5133:	call   18c90 <rtime>
    5138:	mov    rdi,r12
    513b:	call   12e0 <fclose@plt>
    5140:	xor    edi,edi
    5142:	call   1440 <exit@plt>
    5147:	mov    edi,0x1
    514c:	call   1440 <exit@plt>
    5151:	nop    WORD PTR cs:[rax+rax*1+0x0]
    515b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005160 <initialize_eval>:
    5160:	endbr64 
    5164:	push   r15
    5166:	mov    eax,0x1a
    516b:	lea    r11,[rip+0x4d9ee]        # 52b60 <distance>
    5172:	lea    r10,[rip+0x15447]        # 1a5c0 <upscale>
    5179:	push   r14
    517b:	push   r13
    517d:	push   r12
    517f:	push   rbp
    5180:	xor    ebp,ebp
    5182:	push   rbx
    5183:	lea    rbx,[rip+0x395b6]        # 3e740 <rookdistance>
    518a:	mov    r9d,ebp
    518d:	mov    r8d,ebp
    5190:	lea    rdi,[rax+rax*8]
    5194:	xor    esi,esi
    5196:	sar    r9d,0x3
    519a:	and    r8d,0x7
    519e:	mov    ecx,0x1a
    51a3:	shl    rdi,0x4
    51a7:	jmp    51b4 <initialize_eval+0x54>
    51a9:	nop    DWORD PTR [rax+0x0]
    51b0:	movsxd rcx,DWORD PTR [r10+rsi*4]
    51b4:	mov    eax,esi
    51b6:	mov    edx,r8d
    51b9:	mov    r14d,r9d
    51bc:	add    rcx,rdi
    51bf:	and    eax,0x7
    51c2:	sub    edx,eax
    51c4:	mov    eax,edx
    51c6:	cdq    
    51c7:	xor    eax,edx
    51c9:	sub    eax,edx
    51cb:	mov    edx,esi
    51cd:	sar    edx,0x3
    51d0:	sub    r14d,edx
    51d3:	mov    r12d,r14d
    51d6:	mov    edx,r14d
    51d9:	sar    r12d,0x1f
    51dd:	xor    edx,r12d
    51e0:	sub    edx,r12d
    51e3:	cmp    eax,edx
    51e5:	lea    r12d,[rax+rdx*1]
    51e9:	cmovl  eax,edx
    51ec:	add    rsi,0x1
    51f0:	mov    DWORD PTR [rbx+rcx*4],r12d
    51f4:	mov    DWORD PTR [r11+rcx*4],eax
    51f8:	cmp    rsi,0x40
    51fc:	jne    51b0 <initialize_eval+0x50>
    51fe:	add    rbp,0x1
    5202:	cmp    rbp,0x40
    5206:	je     5211 <initialize_eval+0xb1>
    5208:	movsxd rax,DWORD PTR [r10+rbp*4]
    520c:	jmp    518a <initialize_eval+0x2a>
    5211:	lea    rax,[rip+0x1ffc8]        # 251e0 <p_tropism>
    5218:	mov    DWORD PTR [rsp-0x34],0x0
    5220:	lea    r15,[rip+0x1f119]        # 24340 <pre_p_tropism>
    5227:	mov    QWORD PTR [rsp-0x30],rax
    522c:	lea    rax,[rip+0x2f2cd]        # 34500 <b_tropism>
    5233:	lea    r14,[rip+0x1f006]        # 24240 <pre_b_tropism>
    523a:	mov    QWORD PTR [rsp-0x8],rax
    523f:	lea    rax,[rip+0x343ba]        # 39600 <n_tropism>
    5246:	lea    r13,[rip+0x1f073]        # 242c0 <pre_n_tropism>
    524d:	mov    QWORD PTR [rsp-0x18],rax
    5252:	lea    rax,[rip+0x25087]        # 2a2e0 <r_tropism>
    5259:	lea    r12,[rip+0x1f0a0]        # 24300 <pre_r_tropism>
    5260:	mov    QWORD PTR [rsp-0x10],rax
    5265:	lea    rax,[rip+0x2a174]        # 2f3e0 <q_tropism>
    526c:	lea    rbp,[rip+0x1f00d]        # 24280 <pre_q_tropism>
    5273:	mov    QWORD PTR [rsp-0x20],rax
    5278:	mov    QWORD PTR [rsp-0x28],0x0
    5281:	mov    DWORD PTR [rsp-0x38],0x0
    5289:	mov    r10,QWORD PTR [rsp-0x20]
    528e:	mov    r9,QWORD PTR [rsp-0x10]
    5293:	xor    edx,edx
    5295:	xor    eax,eax
    5297:	mov    r8,QWORD PTR [rsp-0x18]
    529c:	mov    rdi,QWORD PTR [rsp-0x8]
    52a1:	lea    rcx,[rip+0x175dc]        # 1c884 <Xfile+0x4>
    52a8:	lea    rbx,[rip+0x17395]        # 1c644 <Xrank+0x4>
    52af:	mov    rsi,QWORD PTR [rsp-0x30]
    52b4:	jmp    52cc <initialize_eval+0x16c>
    52b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    52c0:	mov    eax,DWORD PTR [rcx]
    52c2:	mov    edx,DWORD PTR [rbx]
    52c4:	add    rcx,0x4
    52c8:	add    rbx,0x4
    52cc:	mov    r11d,DWORD PTR [rsp-0x38]
    52d1:	sub    r11d,eax
    52d4:	mov    eax,r11d
    52d7:	sar    r11d,0x1f
    52db:	xor    eax,r11d
    52de:	sub    eax,r11d
    52e1:	mov    r11d,DWORD PTR [rsp-0x34]
    52e6:	sub    r11d,edx
    52e9:	mov    edx,r11d
    52ec:	sar    r11d,0x1f
    52f0:	xor    edx,r11d
    52f3:	sub    edx,r11d
    52f6:	cmp    eax,edx
    52f8:	cmovge edx,eax
    52fb:	add    rsi,0x1
    52ff:	add    rdi,0x1
    5303:	add    r8,0x1
    5307:	add    r9,0x1
    530b:	add    r10,0x1
    530f:	movsxd rdx,edx
    5312:	mov    eax,DWORD PTR [r15+rdx*4]
    5316:	mov    BYTE PTR [rsi-0x1],al
    5319:	mov    eax,DWORD PTR [r14+rdx*4]
    531d:	mov    BYTE PTR [rdi-0x1],al
    5320:	mov    eax,DWORD PTR [r13+rdx*4+0x0]
    5325:	mov    BYTE PTR [r8-0x1],al
    5329:	mov    eax,DWORD PTR [r12+rdx*4]
    532d:	mov    BYTE PTR [r9-0x1],al
    5331:	mov    eax,DWORD PTR [rbp+rdx*4+0x0]
    5335:	mov    BYTE PTR [r10-0x1],al
    5339:	lea    rax,[rip+0x17780]        # 1cac0 <Xfile+0x240>
    5340:	cmp    rcx,rax
    5343:	jne    52c0 <initialize_eval+0x160>
    5349:	add    QWORD PTR [rsp-0x30],0x90
    5352:	mov    rbx,QWORD PTR [rsp-0x30]
    5357:	lea    rdi,[rip+0x24f82]        # 2a2e0 <r_tropism>
    535e:	add    QWORD PTR [rsp-0x28],0x4
    5364:	mov    rax,QWORD PTR [rsp-0x28]
    5369:	add    QWORD PTR [rsp-0x8],0x90
    5372:	add    QWORD PTR [rsp-0x18],0x90
    537b:	add    QWORD PTR [rsp-0x10],0x90
    5384:	add    QWORD PTR [rsp-0x20],0x90
    538d:	cmp    rbx,rdi
    5390:	je     53b3 <initialize_eval+0x253>
    5392:	lea    rdi,[rip+0x174e7]        # 1c880 <Xfile>
    5399:	lea    rbx,[rip+0x172a0]        # 1c640 <Xrank>
    53a0:	mov    edi,DWORD PTR [rdi+rax*1]
    53a3:	mov    eax,DWORD PTR [rbx+rax*1]
    53a6:	mov    DWORD PTR [rsp-0x38],edi
    53aa:	mov    DWORD PTR [rsp-0x34],eax
    53ae:	jmp    5289 <initialize_eval+0x129>
    53b3:	pop    rbx
    53b4:	pop    rbp
    53b5:	pop    r12
    53b7:	pop    r13
    53b9:	pop    r14
    53bb:	pop    r15
    53bd:	ret    
    53be:	xchg   ax,ax

00000000000053c0 <eval>:
    53c0:	endbr64 
    53c4:	push   r15
    53c6:	push   r14
    53c8:	push   r13
    53ca:	push   r12
    53cc:	push   rbp
    53cd:	push   rbx
    53ce:	sub    rsp,0x28
    53d2:	mov    rax,QWORD PTR fs:0x28
    53db:	mov    QWORD PTR [rsp+0x18],rax
    53e0:	xor    eax,eax
    53e2:	mov    eax,DWORD PTR [rip+0x2763d8]        # 27b7c0 <Variant>
    53e8:	mov    DWORD PTR [rsp+0x10],0x0
    53f0:	cmp    eax,0x2
    53f3:	je     5e70 <eval+0xab0>
    53f9:	cmp    eax,0x3
    53fc:	je     5e80 <eval+0xac0>
    5402:	cmp    eax,0x4
    5405:	je     5e60 <eval+0xaa0>
    540b:	lea    rsi,[rsp+0x14]
    5410:	lea    rdi,[rsp+0x10]
    5415:	mov    DWORD PTR [rsp+0x14],0x0
    541d:	call   43f0 <checkECache>
    5422:	mov    ebx,DWORD PTR [rsp+0x14]
    5426:	test   ebx,ebx
    5428:	je     5460 <eval+0xa0>
    542a:	cmp    DWORD PTR [rip+0x2780ef],0x1        # 27d520 <white_to_move>
    5431:	mov    eax,DWORD PTR [rsp+0x10]
    5435:	je     5439 <eval+0x79>
    5437:	neg    eax
    5439:	mov    rbx,QWORD PTR [rsp+0x18]
    543e:	xor    rbx,QWORD PTR fs:0x28
    5447:	jne    63eb <eval+0x102b>
    544d:	add    rsp,0x28
    5451:	pop    rbx
    5452:	pop    rbp
    5453:	pop    r12
    5455:	pop    r13
    5457:	pop    r14
    5459:	pop    r15
    545b:	ret    
    545c:	nop    DWORD PTR [rax+0x0]
    5460:	mov    ebp,DWORD PTR [rip+0x62126]        # 6758c <cfg_devscale>
    5466:	xor    r12d,r12d
    5469:	test   ebp,ebp
    546b:	jne    5b08 <eval+0x748>
    5471:	mov    eax,DWORD PTR [rip+0x278b65]        # 27dfdc <wking_loc>
    5477:	mov    edx,DWORD PTR [rsp+0x10]
    547b:	mov    r10d,DWORD PTR [rip+0x66422]        # 6b8a4 <piece_count>
    5482:	mov    r11d,DWORD PTR [rip+0x27809b]        # 27d524 <bking_loc>
    5489:	mov    DWORD PTR [rsp+0x8],eax
    548d:	mov    DWORD PTR [rsp+0x4],edx
    5491:	test   r10d,r10d
    5494:	jle    62d0 <eval+0xf10>
    549a:	lea    rsi,[rip+0x276343]        # 27b7e4 <pieces+0x4>
    54a1:	xor    r15d,r15d
    54a4:	movsxd r13,r11d
    54a7:	movsxd r14,eax
    54aa:	mov    edi,0x1
    54af:	lea    r8,[rip+0x27840a]        # 27d8c0 <board>
    54b6:	lea    r9,[rip+0x150c3]        # 1a580 <rankoffsets.4429+0x240>
    54bd:	nop    DWORD PTR [rax]
    54c0:	movsxd rax,DWORD PTR [rsi]
    54c3:	test   eax,eax
    54c5:	je     5520 <eval+0x160>
    54c7:	add    edi,0x1
    54ca:	cmp    DWORD PTR [r8+rax*4],0xc
    54cf:	ja     5520 <eval+0x160>
    54d1:	mov    ecx,DWORD PTR [r8+rax*4]
    54d5:	movsxd rcx,DWORD PTR [r9+rcx*4]
    54d9:	add    rcx,r9
    54dc:	notrack jmp rcx
    54df:	nop
    54e0:	lea    rcx,[rip+0x15899]        # 1ad80 <black_queen>
    54e7:	sub    edx,0x1c2
    54ed:	mov    ecx,DWORD PTR [rcx+rax*4]
    54f0:	lea    rax,[rax+rax*8]
    54f4:	shl    rax,0x4
    54f8:	mov    DWORD PTR [rsp+0xc],ecx
    54fc:	mov    r15d,ecx
    54ff:	mov    ecx,r12d
    5502:	sar    r15d,cl
    5505:	lea    rcx,[rip+0x29ed4]        # 2f3e0 <q_tropism>
    550c:	add    rax,rcx
    550f:	sub    edx,r15d
    5512:	mov    r15d,0x1
    5518:	movzx  eax,BYTE PTR [rax+r14*1]
    551d:	sub    edx,eax
    551f:	nop
    5520:	add    rsi,0x4
    5524:	cmp    edi,r10d
    5527:	jle    54c0 <eval+0x100>
    5529:	test   r15b,r15b
    552c:	cmove  edx,DWORD PTR [rsp+0x4]
    5531:	lea    rax,[rip+0x15cc8]        # 1b200 <white_king>
    5538:	mov    ecx,r12d
    553b:	mov    edi,DWORD PTR [rip+0x63c7f]        # 691c0 <white_castled>
    5541:	mov    eax,DWORD PTR [rax+r14*4]
    5545:	sar    eax,cl
    5547:	mov    ecx,ebp
    5549:	add    edx,eax
    554b:	lea    rax,[rip+0x15a6e]        # 1afc0 <black_king>
    5552:	mov    eax,DWORD PTR [rax+r13*4]
    5556:	sar    eax,cl
    5558:	sub    edx,eax
    555a:	mov    DWORD PTR [rsp+0x10],edx
    555e:	test   edi,edi
    5560:	jne    5575 <eval+0x1b5>
    5562:	mov    r14d,DWORD PTR [rip+0x28e6cf]        # 293c38 <moved+0x78>
    5569:	test   r14d,r14d
    556c:	je     5575 <eval+0x1b5>
    556e:	sub    edx,0x1e
    5571:	mov    DWORD PTR [rsp+0x10],edx
    5575:	mov    esi,DWORD PTR [rip+0x63c49]        # 691c4 <black_castled>
    557b:	test   esi,esi
    557d:	jne    5590 <eval+0x1d0>
    557f:	mov    r13d,DWORD PTR [rip+0x28e802]        # 293d88 <moved+0x1c8>
    5586:	test   r13d,r13d
    5589:	je     5590 <eval+0x1d0>
    558b:	add    DWORD PTR [rsp+0x10],0x1e
    5590:	mov    r9d,DWORD PTR [rip+0x28e6cd]        # 293c64 <moved+0xa4>
    5597:	test   r9d,r9d
    559a:	jne    55aa <eval+0x1ea>
    559c:	cmp    DWORD PTR [rip+0x2783f1],0xd        # 27d994 <board+0xd4>
    55a3:	je     55aa <eval+0x1ea>
    55a5:	sub    DWORD PTR [rsp+0x10],0xf
    55aa:	mov    ecx,DWORD PTR [rip+0x28e6b8]        # 293c68 <moved+0xa8>
    55b0:	test   ecx,ecx
    55b2:	jne    55c2 <eval+0x202>
    55b4:	cmp    DWORD PTR [rip+0x2783dd],0xd        # 27d998 <board+0xd8>
    55bb:	je     55c2 <eval+0x202>
    55bd:	sub    DWORD PTR [rsp+0x10],0xf
    55c2:	mov    r8d,DWORD PTR [rip+0x28e78b]        # 293d54 <moved+0x194>
    55c9:	test   r8d,r8d
    55cc:	jne    55dc <eval+0x21c>
    55ce:	cmp    DWORD PTR [rip+0x27844f],0xd        # 27da24 <board+0x164>
    55d5:	je     55dc <eval+0x21c>
    55d7:	add    DWORD PTR [rsp+0x10],0xf
    55dc:	mov    edx,DWORD PTR [rip+0x28e776]        # 293d58 <moved+0x198>
    55e2:	test   edx,edx
    55e4:	jne    55f4 <eval+0x234>
    55e6:	cmp    DWORD PTR [rip+0x27843b],0xd        # 27da28 <board+0x168>
    55ed:	je     55f4 <eval+0x234>
    55ef:	add    DWORD PTR [rsp+0x10],0xf
    55f4:	mov    r10d,DWORD PTR [rip+0x61ec5]        # 674c0 <cfg_smarteval>
    55fb:	test   r10d,r10d
    55fe:	je     58f0 <eval+0x530>
    5604:	mov    r15d,DWORD PTR [rsp+0x8]
    5609:	lea    r13,[rip+0x2782b0]        # 27d8c0 <board>
    5610:	lea    r10d,[r15+0xc]
    5614:	movsxd rax,r10d
    5617:	mov    r14d,DWORD PTR [r13+rax*4+0x0]
    561c:	lea    eax,[r15-0x1d]
    5620:	cmp    eax,0x1
    5623:	jbe    5661 <eval+0x2a1>
    5625:	lea    eax,[r15+0xb]
    5629:	cdqe   
    562b:	cmp    DWORD PTR [r13+rax*4+0x0],0x1
    5631:	je     5638 <eval+0x278>
    5633:	sub    DWORD PTR [rsp+0x10],0x18
    5638:	cmp    r14d,0x1
    563c:	je     5643 <eval+0x283>
    563e:	sub    DWORD PTR [rsp+0x10],0x23
    5643:	mov    eax,DWORD PTR [rsp+0x8]
    5647:	add    eax,0xd
    564a:	cdqe   
    564c:	cmp    DWORD PTR [r13+rax*4+0x0],0x1
    5652:	je     5659 <eval+0x299>
    5654:	sub    DWORD PTR [rsp+0x10],0x18
    5659:	test   edi,edi
    565b:	jne    61c0 <eval+0xe00>
    5661:	lea    eax,[r11-0x71]
    5665:	cmp    eax,0x1
    5668:	jbe    56e0 <eval+0x320>
    566a:	lea    eax,[r11-0xd]
    566e:	cdqe   
    5670:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    5676:	je     567d <eval+0x2bd>
    5678:	add    DWORD PTR [rsp+0x10],0x18
    567d:	lea    eax,[r11-0xc]
    5681:	cdqe   
    5683:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    5689:	je     5690 <eval+0x2d0>
    568b:	add    DWORD PTR [rsp+0x10],0x23
    5690:	lea    eax,[r11-0xb]
    5694:	cdqe   
    5696:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    569c:	je     56a3 <eval+0x2e3>
    569e:	add    DWORD PTR [rsp+0x10],0x18
    56a3:	test   esi,esi
    56a5:	je     56e0 <eval+0x320>
    56a7:	lea    eax,[r11-0x19]
    56ab:	cdqe   
    56ad:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    56b3:	jne    56ba <eval+0x2fa>
    56b5:	sub    DWORD PTR [rsp+0x10],0xb
    56ba:	lea    eax,[r11-0x18]
    56be:	cdqe   
    56c0:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    56c6:	jne    56cd <eval+0x30d>
    56c8:	sub    DWORD PTR [rsp+0x10],0xf
    56cd:	lea    eax,[r11-0x17]
    56d1:	cdqe   
    56d3:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    56d9:	jne    56e0 <eval+0x320>
    56db:	sub    DWORD PTR [rsp+0x10],0xb
    56e0:	test   ecx,ecx
    56e2:	je     5724 <eval+0x364>
    56e4:	mov    eax,DWORD PTR [rsp+0x10]
    56e8:	lea    ecx,[rax+0x37]
    56eb:	add    eax,0x1e
    56ee:	test   r9d,r9d
    56f1:	cmovne eax,ecx
    56f4:	mov    DWORD PTR [rsp+0x10],eax
    56f8:	mov    eax,DWORD PTR [rip+0x28e542]        # 293c40 <moved+0x80>
    56fe:	test   eax,eax
    5700:	je     5707 <eval+0x347>
    5702:	add    DWORD PTR [rsp+0x10],0x14
    5707:	mov    eax,DWORD PTR [rip+0x28e51f]        # 293c2c <moved+0x6c>
    570d:	test   eax,eax
    570f:	je     5716 <eval+0x356>
    5711:	add    DWORD PTR [rsp+0x10],0xf
    5716:	mov    eax,DWORD PTR [rip+0x28e514]        # 293c30 <moved+0x70>
    571c:	test   eax,eax
    571e:	jne    6238 <eval+0xe78>
    5724:	test   edx,edx
    5726:	je     576a <eval+0x3aa>
    5728:	mov    eax,DWORD PTR [rsp+0x10]
    572c:	lea    edx,[rax-0x37]
    572f:	sub    eax,0x1e
    5732:	test   r8d,r8d
    5735:	cmovne eax,edx
    5738:	mov    DWORD PTR [rsp+0x10],eax
    573c:	mov    eax,DWORD PTR [rip+0x28e64e]        # 293d90 <moved+0x1d0>
    5742:	test   eax,eax
    5744:	je     574b <eval+0x38b>
    5746:	sub    DWORD PTR [rsp+0x10],0x14
    574b:	mov    eax,DWORD PTR [rip+0x28e62b]        # 293d7c <moved+0x1bc>
    5751:	test   eax,eax
    5753:	je     575a <eval+0x39a>
    5755:	sub    DWORD PTR [rsp+0x10],0xf
    575a:	mov    r15d,DWORD PTR [rip+0x28e61f]        # 293d80 <moved+0x1c0>
    5761:	test   r15d,r15d
    5764:	jne    6228 <eval+0xe68>
    576a:	cmp    DWORD PTR [rip+0x2781ff],0x1        # 27d970 <board+0xb0>
    5771:	je     578d <eval+0x3cd>
    5773:	cmp    DWORD PTR [rip+0x278222],0x2        # 27d99c <board+0xdc>
    577a:	je     5e40 <eval+0xa80>
    5780:	cmp    DWORD PTR [rip+0x278241],0x2        # 27d9c8 <board+0x108>
    5787:	je     5e40 <eval+0xa80>
    578d:	cmp    DWORD PTR [rip+0x2782cc],0x2        # 27da60 <board+0x1a0>
    5794:	je     57b0 <eval+0x3f0>
    5796:	cmp    DWORD PTR [rip+0x27828f],0x1        # 27da2c <board+0x16c>
    579d:	je     5e50 <eval+0xa90>
    57a3:	cmp    DWORD PTR [rip+0x27824e],0x1        # 27d9f8 <board+0x138>
    57aa:	je     5e50 <eval+0xa90>
    57b0:	cmp    r14d,0x2
    57b4:	je     5ec8 <eval+0xb08>
    57ba:	cmp    r14d,0xc
    57be:	je     5ec8 <eval+0xb08>
    57c4:	lea    edi,[r11-0xc]
    57c8:	movsxd rax,edi
    57cb:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    57d0:	cmp    eax,0x1
    57d3:	je     5e90 <eval+0xad0>
    57d9:	cmp    eax,0xb
    57dc:	je     5e90 <eval+0xad0>
    57e2:	cmp    DWORD PTR [rip+0x278183],0x1        # 27d96c <board+0xac>
    57e9:	mov    eax,DWORD PTR [rip+0x2781a9]        # 27d998 <board+0xd8>
    57ef:	je     5f20 <eval+0xb60>
    57f5:	sub    eax,0x1
    57f8:	cmp    eax,0x1
    57fb:	ja     5838 <eval+0x478>
    57fd:	xor    esi,esi
    57ff:	mov    edi,0x36
    5804:	call   3530 <is_attacked>
    5809:	test   eax,eax
    580b:	je     5838 <eval+0x478>
    580d:	cmp    DWORD PTR [rip+0x278158],0x1        # 27d96c <board+0xac>
    5814:	jne    581b <eval+0x45b>
    5816:	add    DWORD PTR [rsp+0x10],0xa
    581b:	mov    eax,DWORD PTR [rip+0x278177]        # 27d998 <board+0xd8>
    5821:	cmp    eax,0x1
    5824:	je     63d7 <eval+0x1017>
    582a:	cmp    eax,0x2
    582d:	jne    5838 <eval+0x478>
    582f:	sub    DWORD PTR [rsp+0x10],0xf
    5834:	nop    DWORD PTR [rax+0x0]
    5838:	cmp    DWORD PTR [rip+0x27821d],0x2        # 27da5c <board+0x19c>
    583f:	mov    eax,DWORD PTR [rip+0x2781e3]        # 27da28 <board+0x168>
    5845:	je     5f10 <eval+0xb50>
    584b:	sub    eax,0x1
    584e:	cmp    eax,0x1
    5851:	ja     5870 <eval+0x4b0>
    5853:	mov    esi,0x1
    5858:	mov    edi,0x5a
    585d:	call   3530 <is_attacked>
    5862:	test   eax,eax
    5864:	jne    6271 <eval+0xeb1>
    586a:	nop    WORD PTR [rax+rax*1+0x0]
    5870:	movsxd rax,DWORD PTR [rip+0x277cad]        # 27d524 <bking_loc>
    5877:	mov    r9d,DWORD PTR [r13+rax*4+0x0]
    587c:	mov    rdi,rax
    587f:	test   r9d,r9d
    5882:	jne    5f90 <eval+0xbd0>
    5888:	movsxd rax,DWORD PTR [rip+0x27874d]        # 27dfdc <wking_loc>
    588f:	mov    r8d,DWORD PTR [r13+rax*4+0x0]
    5894:	mov    rdi,rax
    5897:	test   r8d,r8d
    589a:	jne    62a8 <eval+0xee8>
    58a0:	cmp    DWORD PTR [rip+0x2780c9],0x4        # 27d970 <board+0xb0>
    58a7:	je     6330 <eval+0xf70>
    58ad:	cmp    DWORD PTR [rip+0x2781ac],0x3        # 27da60 <board+0x1a0>
    58b4:	je     62e8 <eval+0xf28>
    58ba:	cmp    DWORD PTR [rip+0x2780e3],0xc        # 27d9a4 <board+0xe4>
    58c1:	je     5f30 <eval+0xb70>
    58c7:	cmp    DWORD PTR [rip+0x278166],0xb        # 27da34 <board+0x174>
    58ce:	jne    58f0 <eval+0x530>
    58d0:	mov    edx,DWORD PTR [rip+0x27818a]        # 27da60 <board+0x1a0>
    58d6:	cmp    edx,0x2
    58d9:	je     58f0 <eval+0x530>
    58db:	mov    eax,DWORD PTR [rsp+0x10]
    58df:	cmp    edx,0x3
    58e2:	je     63a3 <eval+0xfe3>
    58e8:	add    eax,0x14
    58eb:	mov    DWORD PTR [rsp+0x10],eax
    58ef:	nop
    58f0:	mov    edi,DWORD PTR [rip+0x61c8a]        # 67580 <cfg_attackeval>
    58f6:	test   edi,edi
    58f8:	je     5ad0 <eval+0x710>
    58fe:	mov    edi,DWORD PTR [rip+0x2786d8]        # 27dfdc <wking_loc>
    5904:	lea    r13,[rip+0x277fb5]        # 27d8c0 <board>
    590b:	xor    r12d,r12d
    590e:	lea    r8d,[rdi-0xd]
    5912:	movsxd rax,r8d
    5915:	mov    esi,DWORD PTR [r13+rax*4+0x0]
    591a:	test   esi,esi
    591c:	jne    5ff0 <eval+0xc30>
    5922:	lea    r8d,[rdi-0xc]
    5926:	movsxd rax,r8d
    5929:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
    592e:	test   ecx,ecx
    5930:	jne    5fd0 <eval+0xc10>
    5936:	lea    r8d,[rdi-0xb]
    593a:	movsxd rax,r8d
    593d:	mov    edx,DWORD PTR [r13+rax*4+0x0]
    5942:	test   edx,edx
    5944:	jne    61a0 <eval+0xde0>
    594a:	lea    r8d,[rdi-0x1]
    594e:	movsxd rax,r8d
    5951:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    5956:	test   eax,eax
    5958:	jne    6180 <eval+0xdc0>
    595e:	lea    r8d,[rdi+0x1]
    5962:	movsxd rax,r8d
    5965:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    596a:	test   eax,eax
    596c:	jne    6160 <eval+0xda0>
    5972:	lea    r8d,[rdi+0xb]
    5976:	movsxd rax,r8d
    5979:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    597e:	test   eax,eax
    5980:	jne    6140 <eval+0xd80>
    5986:	lea    r8d,[rdi+0xc]
    598a:	movsxd rax,r8d
    598d:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    5992:	test   eax,eax
    5994:	jne    6120 <eval+0xd60>
    599a:	add    edi,0xd
    599d:	movsxd rax,edi
    59a0:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    59a5:	test   eax,eax
    59a7:	jne    6108 <eval+0xd48>
    59ad:	mov    edx,DWORD PTR [rip+0x1f7ed]        # 251a0 <black_hand_eval>
    59b3:	mov    eax,0xe
    59b8:	cmp    edx,0xfffffa25
    59be:	jl     59cb <eval+0x60b>
    59c0:	xor    eax,eax
    59c2:	cmp    edx,0x63
    59c5:	jle    6208 <eval+0xe48>
    59cb:	mov    edi,DWORD PTR [rip+0x277b53]        # 27d524 <bking_loc>
    59d1:	cdqe   
    59d3:	movsxd r12,r12d
    59d6:	xor    r14d,r14d
    59d9:	lea    rax,[rax+rax*8]
    59dd:	lea    rbp,[rip+0x1e63c]        # 24020 <ksafety_scaled>
    59e4:	lea    r8d,[rdi-0xd]
    59e8:	add    r12,rax
    59eb:	movsxd rax,r8d
    59ee:	mov    r12d,DWORD PTR [rbp+r12*4+0x0]
    59f3:	mov    r15d,DWORD PTR [r13+rax*4+0x0]
    59f8:	test   r15d,r15d
    59fb:	jne    60d0 <eval+0xd10>
    5a01:	lea    r8d,[rdi-0xc]
    5a05:	movsxd rax,r8d
    5a08:	mov    r11d,DWORD PTR [r13+rax*4+0x0]
    5a0d:	test   r11d,r11d
    5a10:	jne    60b0 <eval+0xcf0>
    5a16:	lea    r8d,[rdi-0xb]
    5a1a:	movsxd rax,r8d
    5a1d:	mov    r10d,DWORD PTR [r13+rax*4+0x0]
    5a22:	test   r10d,r10d
    5a25:	jne    6090 <eval+0xcd0>
    5a2b:	lea    r8d,[rdi-0x1]
    5a2f:	movsxd rax,r8d
    5a32:	mov    r9d,DWORD PTR [r13+rax*4+0x0]
    5a37:	test   r9d,r9d
    5a3a:	jne    6070 <eval+0xcb0>
    5a40:	lea    r8d,[rdi+0x1]
    5a44:	movsxd rax,r8d
    5a47:	mov    esi,DWORD PTR [r13+rax*4+0x0]
    5a4c:	test   esi,esi
    5a4e:	jne    6050 <eval+0xc90>
    5a54:	lea    r8d,[rdi+0xb]
    5a58:	movsxd rax,r8d
    5a5b:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
    5a60:	test   ecx,ecx
    5a62:	jne    6030 <eval+0xc70>
    5a68:	lea    r8d,[rdi+0xc]
    5a6c:	movsxd rax,r8d
    5a6f:	mov    edx,DWORD PTR [r13+rax*4+0x0]
    5a74:	test   edx,edx
    5a76:	jne    6010 <eval+0xc50>
    5a7c:	add    edi,0xd
    5a7f:	movsxd rax,edi
    5a82:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    5a87:	test   eax,eax
    5a89:	jne    60f0 <eval+0xd30>
    5a8f:	mov    eax,DWORD PTR [rip+0x1f717]        # 251ac <white_hand_eval>
    5a95:	cmp    eax,0x5db
    5a9a:	jg     5f00 <eval+0xb40>
    5aa0:	cmp    eax,0xffffff9d
    5aa3:	jge    6248 <eval+0xe88>
    5aa9:	movsxd rbx,ebx
    5aac:	movsxd r14,r14d
    5aaf:	lea    rdx,[rbx+rbx*8]
    5ab3:	add    r14,rdx
    5ab6:	mov    edx,DWORD PTR [rsp+0x10]
    5aba:	mov    edi,DWORD PTR [rbp+r14*4+0x0]
    5abf:	sub    edi,r12d
    5ac2:	add    edx,edi
    5ac4:	jmp    5ada <eval+0x71a>
    5ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5ad0:	mov    eax,DWORD PTR [rip+0x1f6d6]        # 251ac <white_hand_eval>
    5ad6:	mov    edx,DWORD PTR [rsp+0x10]
    5ada:	add    eax,DWORD PTR [rip+0x1f6c0]        # 251a0 <black_hand_eval>
    5ae0:	mov    edi,eax
    5ae2:	add    edi,edx
    5ae4:	mov    DWORD PTR [rsp+0x10],edi
    5ae8:	call   43b0 <storeECache>
    5aed:	cmp    DWORD PTR [rip+0x277a2c],0x1        # 27d520 <white_to_move>
    5af4:	mov    eax,DWORD PTR [rsp+0x10]
    5af8:	jne    5437 <eval+0x77>
    5afe:	jmp    5439 <eval+0x79>
    5b03:	nop    DWORD PTR [rax+rax*1+0x0]
    5b08:	mov    eax,DWORD PTR [rip+0x291c46]        # 297754 <comp_color>
    5b0e:	cmp    DWORD PTR [rip+0x277a0c],eax        # 27d520 <white_to_move>
    5b14:	je     5f60 <eval+0xba0>
    5b1a:	mov    eax,DWORD PTR [rip+0x1f68c]        # 251ac <white_hand_eval>
    5b20:	cmp    eax,0xc8
    5b25:	jg     5fb8 <eval+0xbf8>
    5b2b:	mov    ebp,DWORD PTR [rip+0x275c8f]        # 27b7c0 <Variant>
    5b31:	mov    r12d,ebx
    5b34:	cmp    ebp,0x1
    5b37:	je     5471 <eval+0xb1>
    5b3d:	mov    ebp,0x2
    5b42:	jmp    5471 <eval+0xb1>
    5b47:	nop    WORD PTR [rax+rax*1+0x0]
    5b50:	lea    rcx,[rip+0x158e9]        # 1b440 <black_pawn>
    5b57:	sub    edx,0x64
    5b5a:	add    rsi,0x4
    5b5e:	mov    r15d,DWORD PTR [rcx+rax*4]
    5b62:	lea    rax,[rax+rax*8]
    5b66:	mov    ecx,r12d
    5b69:	shl    rax,0x4
    5b6d:	sar    r15d,cl
    5b70:	mov    rcx,rax
    5b73:	lea    rax,[rip+0x1f666]        # 251e0 <p_tropism>
    5b7a:	add    rax,rcx
    5b7d:	sub    edx,r15d
    5b80:	mov    r15d,0x1
    5b86:	movzx  eax,BYTE PTR [rax+r14*1]
    5b8b:	sub    edx,eax
    5b8d:	cmp    edi,r10d
    5b90:	jle    54c0 <eval+0x100>
    5b96:	jmp    5529 <eval+0x169>
    5b9b:	nop    DWORD PTR [rax+rax*1+0x0]
    5ba0:	lea    rcx,[rip+0x15ad9]        # 1b680 <white_pawn>
    5ba7:	add    rsi,0x4
    5bab:	mov    r15d,DWORD PTR [rcx+rax*4]
    5baf:	lea    rax,[rax+rax*8]
    5bb3:	mov    ecx,ebp
    5bb5:	shl    rax,0x4
    5bb9:	sar    r15d,cl
    5bbc:	mov    rcx,rax
    5bbf:	lea    rax,[rip+0x1f61a]        # 251e0 <p_tropism>
    5bc6:	add    rax,rcx
    5bc9:	lea    edx,[rdx+r15*1+0x64]
    5bce:	mov    r15d,0x1
    5bd4:	movzx  eax,BYTE PTR [rax+r13*1]
    5bd9:	add    edx,eax
    5bdb:	cmp    edi,r10d
    5bde:	jle    54c0 <eval+0x100>
    5be4:	jmp    5529 <eval+0x169>
    5be9:	nop    DWORD PTR [rax+0x0]
    5bf0:	lea    rcx,[rip+0x16149]        # 1bd40 <pcsqbishop>
    5bf7:	sub    edx,0xe6
    5bfd:	add    rsi,0x4
    5c01:	mov    ecx,DWORD PTR [rcx+rax*4]
    5c04:	lea    rax,[rax+rax*8]
    5c08:	shl    rax,0x4
    5c0c:	mov    DWORD PTR [rsp+0xc],ecx
    5c10:	mov    r15d,ecx
    5c13:	mov    ecx,r12d
    5c16:	sar    r15d,cl
    5c19:	lea    rcx,[rip+0x2e8e0]        # 34500 <b_tropism>
    5c20:	add    rax,rcx
    5c23:	sub    edx,r15d
    5c26:	mov    r15d,0x1
    5c2c:	movzx  eax,BYTE PTR [rax+r14*1]
    5c31:	sub    edx,eax
    5c33:	cmp    edi,r10d
    5c36:	jle    54c0 <eval+0x100>
    5c3c:	jmp    5529 <eval+0x169>
    5c41:	nop    DWORD PTR [rax+0x0]
    5c48:	lea    rcx,[rip+0x160f1]        # 1bd40 <pcsqbishop>
    5c4f:	add    rsi,0x4
    5c53:	mov    ecx,DWORD PTR [rcx+rax*4]
    5c56:	lea    rax,[rax+rax*8]
    5c5a:	shl    rax,0x4
    5c5e:	mov    DWORD PTR [rsp+0xc],ecx
    5c62:	mov    r15d,ecx
    5c65:	mov    ecx,ebp
    5c67:	sar    r15d,cl
    5c6a:	lea    rcx,[rip+0x2e88f]        # 34500 <b_tropism>
    5c71:	add    rax,rcx
    5c74:	lea    edx,[rdx+r15*1+0xe6]
    5c7c:	mov    r15d,0x1
    5c82:	movzx  eax,BYTE PTR [rax+r13*1]
    5c87:	add    edx,eax
    5c89:	cmp    edi,r10d
    5c8c:	jle    54c0 <eval+0x100>
    5c92:	jmp    5529 <eval+0x169>
    5c97:	nop    WORD PTR [rax+rax*1+0x0]
    5ca0:	lea    rcx,[rip+0x14e99]        # 1ab40 <white_queen>
    5ca7:	add    rsi,0x4
    5cab:	mov    ecx,DWORD PTR [rcx+rax*4]
    5cae:	lea    rax,[rax+rax*8]
    5cb2:	shl    rax,0x4
    5cb6:	mov    DWORD PTR [rsp+0xc],ecx
    5cba:	mov    r15d,ecx
    5cbd:	mov    ecx,ebp
    5cbf:	sar    r15d,cl
    5cc2:	lea    rcx,[rip+0x29717]        # 2f3e0 <q_tropism>
    5cc9:	add    rax,rcx
    5ccc:	lea    edx,[rdx+r15*1+0x1c2]
    5cd4:	mov    r15d,0x1
    5cda:	movzx  eax,BYTE PTR [rax+r13*1]
    5cdf:	add    edx,eax
    5ce1:	cmp    edi,r10d
    5ce4:	jle    54c0 <eval+0x100>
    5cea:	jmp    5529 <eval+0x169>
    5cef:	nop
    5cf0:	lea    rcx,[rip+0x14c09]        # 1a900 <black_rook>
    5cf7:	sub    edx,0xfa
    5cfd:	add    rsi,0x4
    5d01:	mov    r15d,DWORD PTR [rcx+rax*4]
    5d05:	lea    rax,[rax+rax*8]
    5d09:	mov    ecx,r12d
    5d0c:	shl    rax,0x4
    5d10:	sar    r15d,cl
    5d13:	mov    rcx,rax
    5d16:	lea    rax,[rip+0x245c3]        # 2a2e0 <r_tropism>
    5d1d:	add    rax,rcx
    5d20:	sub    edx,r15d
    5d23:	mov    r15d,0x1
    5d29:	movzx  eax,BYTE PTR [rax+r14*1]
    5d2e:	sub    edx,eax
    5d30:	cmp    edi,r10d
    5d33:	jle    54c0 <eval+0x100>
    5d39:	jmp    5529 <eval+0x169>
    5d3e:	xchg   ax,ax
    5d40:	lea    rcx,[rip+0x14979]        # 1a6c0 <white_rook>
    5d47:	add    rsi,0x4
    5d4b:	mov    r15d,DWORD PTR [rcx+rax*4]
    5d4f:	lea    rax,[rax+rax*8]
    5d53:	mov    ecx,ebp
    5d55:	shl    rax,0x4
    5d59:	sar    r15d,cl
    5d5c:	mov    rcx,rax
    5d5f:	lea    rax,[rip+0x2457a]        # 2a2e0 <r_tropism>
    5d66:	add    rax,rcx
    5d69:	lea    edx,[rdx+r15*1+0xfa]
    5d71:	mov    r15d,0x1
    5d77:	movzx  eax,BYTE PTR [rax+r13*1]
    5d7c:	add    edx,eax
    5d7e:	cmp    edi,r10d
    5d81:	jle    54c0 <eval+0x100>
    5d87:	jmp    5529 <eval+0x169>
    5d8c:	nop    DWORD PTR [rax+0x0]
    5d90:	lea    rcx,[rip+0x15d69]        # 1bb00 <black_knight>
    5d97:	sub    edx,0xd2
    5d9d:	add    rsi,0x4
    5da1:	mov    ecx,DWORD PTR [rcx+rax*4]
    5da4:	lea    rax,[rax+rax*8]
    5da8:	shl    rax,0x4
    5dac:	mov    DWORD PTR [rsp+0xc],ecx
    5db0:	mov    r15d,ecx
    5db3:	mov    ecx,r12d
    5db6:	sar    r15d,cl
    5db9:	lea    rcx,[rip+0x33840]        # 39600 <n_tropism>
    5dc0:	add    rax,rcx
    5dc3:	sub    edx,r15d
    5dc6:	mov    r15d,0x1
    5dcc:	movzx  eax,BYTE PTR [rax+r14*1]
    5dd1:	sub    edx,eax
    5dd3:	cmp    edi,r10d
    5dd6:	jle    54c0 <eval+0x100>
    5ddc:	jmp    5529 <eval+0x169>
    5de1:	nop    DWORD PTR [rax+0x0]
    5de8:	lea    rcx,[rip+0x15ad1]        # 1b8c0 <white_knight>
    5def:	add    rsi,0x4
    5df3:	mov    ecx,DWORD PTR [rcx+rax*4]
    5df6:	lea    rax,[rax+rax*8]
    5dfa:	shl    rax,0x4
    5dfe:	mov    DWORD PTR [rsp+0xc],ecx
    5e02:	mov    r15d,ecx
    5e05:	mov    ecx,ebp
    5e07:	sar    r15d,cl
    5e0a:	lea    rcx,[rip+0x337ef]        # 39600 <n_tropism>
    5e11:	add    rax,rcx
    5e14:	lea    edx,[rdx+r15*1+0xd2]
    5e1c:	mov    r15d,0x1
    5e22:	movzx  eax,BYTE PTR [rax+r13*1]
    5e27:	add    edx,eax
    5e29:	cmp    edi,r10d
    5e2c:	jle    54c0 <eval+0x100>
    5e32:	jmp    5529 <eval+0x169>
    5e37:	nop    WORD PTR [rax+rax*1+0x0]
    5e40:	sub    DWORD PTR [rsp+0x10],0x1e
    5e45:	jmp    578d <eval+0x3cd>
    5e4a:	nop    WORD PTR [rax+rax*1+0x0]
    5e50:	add    DWORD PTR [rsp+0x10],0x1e
    5e55:	jmp    57b0 <eval+0x3f0>
    5e5a:	nop    WORD PTR [rax+rax*1+0x0]
    5e60:	call   6530 <losers_eval>
    5e65:	jmp    5439 <eval+0x79>
    5e6a:	nop    WORD PTR [rax+rax*1+0x0]
    5e70:	call   bc70 <std_eval>
    5e75:	jmp    5439 <eval+0x79>
    5e7a:	nop    WORD PTR [rax+rax*1+0x0]
    5e80:	call   16670 <suicide_eval>
    5e85:	jmp    5439 <eval+0x79>
    5e8a:	nop    WORD PTR [rax+rax*1+0x0]
    5e90:	add    DWORD PTR [rsp+0x10],0x23
    5e95:	test   eax,eax
    5e97:	je     57e2 <eval+0x422>
    5e9d:	mov    esi,0x1
    5ea2:	call   3530 <is_attacked>
    5ea7:	test   eax,eax
    5ea9:	je     57e2 <eval+0x422>
    5eaf:	mov    eax,0x96
    5eb4:	mov    ecx,ebp
    5eb6:	sar    eax,cl
    5eb8:	add    DWORD PTR [rsp+0x10],eax
    5ebc:	jmp    57e2 <eval+0x422>
    5ec1:	nop    DWORD PTR [rax+0x0]
    5ec8:	sub    DWORD PTR [rsp+0x10],0x23
    5ecd:	test   r14d,r14d
    5ed0:	je     57c4 <eval+0x404>
    5ed6:	xor    esi,esi
    5ed8:	mov    edi,r10d
    5edb:	call   3530 <is_attacked>
    5ee0:	test   eax,eax
    5ee2:	je     5ef2 <eval+0xb32>
    5ee4:	mov    eax,0x96
    5ee9:	mov    ecx,r12d
    5eec:	sar    eax,cl
    5eee:	sub    DWORD PTR [rsp+0x10],eax
    5ef2:	mov    r11d,DWORD PTR [rip+0x27762b]        # 27d524 <bking_loc>
    5ef9:	jmp    57c4 <eval+0x404>
    5efe:	xchg   ax,ax
    5f00:	mov    ebx,0xe
    5f05:	jmp    5aa9 <eval+0x6e9>
    5f0a:	nop    WORD PTR [rax+rax*1+0x0]
    5f10:	test   eax,eax
    5f12:	je     5870 <eval+0x4b0>
    5f18:	jmp    5853 <eval+0x493>
    5f1d:	nop    DWORD PTR [rax]
    5f20:	test   eax,eax
    5f22:	je     5838 <eval+0x478>
    5f28:	jmp    57fd <eval+0x43d>
    5f2d:	nop    DWORD PTR [rax]
    5f30:	mov    edx,DWORD PTR [rip+0x277a3a]        # 27d970 <board+0xb0>
    5f36:	cmp    edx,0x1
    5f39:	je     58c7 <eval+0x507>
    5f3f:	mov    eax,DWORD PTR [rsp+0x10]
    5f43:	cmp    edx,0x4
    5f46:	je     636f <eval+0xfaf>
    5f4c:	sub    eax,0x14
    5f4f:	mov    DWORD PTR [rsp+0x10],eax
    5f53:	jmp    58c7 <eval+0x507>
    5f58:	nop    DWORD PTR [rax+rax*1+0x0]
    5f60:	mov    eax,DWORD PTR [rip+0x1f23a]        # 251a0 <black_hand_eval>
    5f66:	cmp    eax,0xffffff38
    5f6b:	jl     625e <eval+0xe9e>
    5f71:	mov    r12d,DWORD PTR [rip+0x275848]        # 27b7c0 <Variant>
    5f78:	xor    ebp,ebp
    5f7a:	cmp    r12d,0x1
    5f7e:	je     5471 <eval+0xb1>
    5f84:	mov    r12d,0x2
    5f8a:	jmp    5471 <eval+0xb1>
    5f8f:	nop
    5f90:	mov    esi,0x1
    5f95:	call   3530 <is_attacked>
    5f9a:	test   eax,eax
    5f9c:	je     5888 <eval+0x4c8>
    5fa2:	mov    eax,0x32
    5fa7:	mov    ecx,ebp
    5fa9:	sar    eax,cl
    5fab:	add    DWORD PTR [rsp+0x10],eax
    5faf:	jmp    58a0 <eval+0x4e0>
    5fb4:	nop    DWORD PTR [rax+0x0]
    5fb8:	xor    ebp,ebp
    5fba:	cmp    eax,0x2bb
    5fbf:	mov    r12d,ebx
    5fc2:	setle  bpl
    5fc6:	jmp    5471 <eval+0xb1>
    5fcb:	nop    DWORD PTR [rax+rax*1+0x0]
    5fd0:	mov    edi,r8d
    5fd3:	xor    esi,esi
    5fd5:	call   37d0 <nk_attacked>
    5fda:	mov    edi,DWORD PTR [rip+0x277ffc]        # 27dfdc <wking_loc>
    5fe0:	add    r12d,eax
    5fe3:	jmp    5936 <eval+0x576>
    5fe8:	nop    DWORD PTR [rax+rax*1+0x0]
    5ff0:	mov    edi,r8d
    5ff3:	xor    esi,esi
    5ff5:	call   37d0 <nk_attacked>
    5ffa:	mov    edi,DWORD PTR [rip+0x277fdc]        # 27dfdc <wking_loc>
    6000:	mov    r12d,eax
    6003:	jmp    5922 <eval+0x562>
    6008:	nop    DWORD PTR [rax+rax*1+0x0]
    6010:	mov    edi,r8d
    6013:	mov    esi,0x1
    6018:	call   37d0 <nk_attacked>
    601d:	mov    edi,DWORD PTR [rip+0x277501]        # 27d524 <bking_loc>
    6023:	add    r14d,eax
    6026:	jmp    5a7c <eval+0x6bc>
    602b:	nop    DWORD PTR [rax+rax*1+0x0]
    6030:	mov    edi,r8d
    6033:	mov    esi,0x1
    6038:	call   37d0 <nk_attacked>
    603d:	mov    edi,DWORD PTR [rip+0x2774e1]        # 27d524 <bking_loc>
    6043:	add    r14d,eax
    6046:	jmp    5a68 <eval+0x6a8>
    604b:	nop    DWORD PTR [rax+rax*1+0x0]
    6050:	mov    edi,r8d
    6053:	mov    esi,0x1
    6058:	call   37d0 <nk_attacked>
    605d:	mov    edi,DWORD PTR [rip+0x2774c1]        # 27d524 <bking_loc>
    6063:	add    r14d,eax
    6066:	jmp    5a54 <eval+0x694>
    606b:	nop    DWORD PTR [rax+rax*1+0x0]
    6070:	mov    edi,r8d
    6073:	mov    esi,0x1
    6078:	call   37d0 <nk_attacked>
    607d:	mov    edi,DWORD PTR [rip+0x2774a1]        # 27d524 <bking_loc>
    6083:	add    r14d,eax
    6086:	jmp    5a40 <eval+0x680>
    608b:	nop    DWORD PTR [rax+rax*1+0x0]
    6090:	mov    edi,r8d
    6093:	mov    esi,0x1
    6098:	call   37d0 <nk_attacked>
    609d:	mov    edi,DWORD PTR [rip+0x277481]        # 27d524 <bking_loc>
    60a3:	add    r14d,eax
    60a6:	jmp    5a2b <eval+0x66b>
    60ab:	nop    DWORD PTR [rax+rax*1+0x0]
    60b0:	mov    edi,r8d
    60b3:	mov    esi,0x1
    60b8:	call   37d0 <nk_attacked>
    60bd:	mov    edi,DWORD PTR [rip+0x277461]        # 27d524 <bking_loc>
    60c3:	add    r14d,eax
    60c6:	jmp    5a16 <eval+0x656>
    60cb:	nop    DWORD PTR [rax+rax*1+0x0]
    60d0:	mov    edi,r8d
    60d3:	mov    esi,0x1
    60d8:	call   37d0 <nk_attacked>
    60dd:	mov    edi,DWORD PTR [rip+0x277441]        # 27d524 <bking_loc>
    60e3:	mov    r14d,eax
    60e6:	jmp    5a01 <eval+0x641>
    60eb:	nop    DWORD PTR [rax+rax*1+0x0]
    60f0:	mov    esi,0x1
    60f5:	call   37d0 <nk_attacked>
    60fa:	add    r14d,eax
    60fd:	jmp    5a8f <eval+0x6cf>
    6102:	nop    WORD PTR [rax+rax*1+0x0]
    6108:	xor    esi,esi
    610a:	call   37d0 <nk_attacked>
    610f:	add    r12d,eax
    6112:	jmp    59ad <eval+0x5ed>
    6117:	nop    WORD PTR [rax+rax*1+0x0]
    6120:	mov    edi,r8d
    6123:	xor    esi,esi
    6125:	call   37d0 <nk_attacked>
    612a:	mov    edi,DWORD PTR [rip+0x277eac]        # 27dfdc <wking_loc>
    6130:	add    r12d,eax
    6133:	jmp    599a <eval+0x5da>
    6138:	nop    DWORD PTR [rax+rax*1+0x0]
    6140:	mov    edi,r8d
    6143:	xor    esi,esi
    6145:	call   37d0 <nk_attacked>
    614a:	mov    edi,DWORD PTR [rip+0x277e8c]        # 27dfdc <wking_loc>
    6150:	add    r12d,eax
    6153:	jmp    5986 <eval+0x5c6>
    6158:	nop    DWORD PTR [rax+rax*1+0x0]
    6160:	mov    edi,r8d
    6163:	xor    esi,esi
    6165:	call   37d0 <nk_attacked>
    616a:	mov    edi,DWORD PTR [rip+0x277e6c]        # 27dfdc <wking_loc>
    6170:	add    r12d,eax
    6173:	jmp    5972 <eval+0x5b2>
    6178:	nop    DWORD PTR [rax+rax*1+0x0]
    6180:	mov    edi,r8d
    6183:	xor    esi,esi
    6185:	call   37d0 <nk_attacked>
    618a:	mov    edi,DWORD PTR [rip+0x277e4c]        # 27dfdc <wking_loc>
    6190:	add    r12d,eax
    6193:	jmp    595e <eval+0x59e>
    6198:	nop    DWORD PTR [rax+rax*1+0x0]
    61a0:	mov    edi,r8d
    61a3:	xor    esi,esi
    61a5:	call   37d0 <nk_attacked>
    61aa:	mov    edi,DWORD PTR [rip+0x277e2c]        # 27dfdc <wking_loc>
    61b0:	add    r12d,eax
    61b3:	jmp    594a <eval+0x58a>
    61b8:	nop    DWORD PTR [rax+rax*1+0x0]
    61c0:	lea    eax,[r11-0x19]
    61c4:	cdqe   
    61c6:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    61cc:	jne    61d3 <eval+0xe13>
    61ce:	add    DWORD PTR [rsp+0x10],0xb
    61d3:	lea    eax,[r11-0x18]
    61d7:	cdqe   
    61d9:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    61df:	jne    61e6 <eval+0xe26>
    61e1:	add    DWORD PTR [rsp+0x10],0xf
    61e6:	lea    eax,[r11-0x17]
    61ea:	cdqe   
    61ec:	cmp    DWORD PTR [r13+rax*4+0x0],0x2
    61f2:	jne    5661 <eval+0x2a1>
    61f8:	add    DWORD PTR [rsp+0x10],0xb
    61fd:	jmp    5661 <eval+0x2a1>
    6202:	nop    WORD PTR [rax+rax*1+0x0]
    6208:	movsxd rcx,edx
    620b:	mov    eax,edx
    620d:	imul   rcx,rcx,0x51eb851f
    6214:	sar    eax,0x1f
    6217:	sar    rcx,0x25
    621b:	sub    eax,ecx
    621d:	jmp    59cb <eval+0x60b>
    6222:	nop    WORD PTR [rax+rax*1+0x0]
    6228:	sub    DWORD PTR [rsp+0x10],0xa
    622d:	jmp    576a <eval+0x3aa>
    6232:	nop    WORD PTR [rax+rax*1+0x0]
    6238:	add    DWORD PTR [rsp+0x10],0xa
    623d:	jmp    5724 <eval+0x364>
    6242:	nop    WORD PTR [rax+rax*1+0x0]
    6248:	movsxd rbx,eax
    624b:	cdq    
    624c:	imul   rbx,rbx,0x51eb851f
    6253:	sar    rbx,0x25
    6257:	sub    ebx,edx
    6259:	jmp    5aa9 <eval+0x6e9>
    625e:	xor    r12d,r12d
    6261:	cmp    eax,0xfffffd45
    6266:	setge  r12b
    626a:	xor    ebp,ebp
    626c:	jmp    5471 <eval+0xb1>
    6271:	cmp    DWORD PTR [rip+0x2777e4],0x2        # 27da5c <board+0x19c>
    6278:	jne    627f <eval+0xebf>
    627a:	sub    DWORD PTR [rsp+0x10],0xa
    627f:	mov    eax,DWORD PTR [rip+0x2777a3]        # 27da28 <board+0x168>
    6285:	cmp    eax,0x2
    6288:	je     63e1 <eval+0x1021>
    628e:	cmp    eax,0x1
    6291:	jne    5870 <eval+0x4b0>
    6297:	add    DWORD PTR [rsp+0x10],0xf
    629c:	jmp    5870 <eval+0x4b0>
    62a1:	nop    DWORD PTR [rax+0x0]
    62a8:	xor    esi,esi
    62aa:	call   3530 <is_attacked>
    62af:	test   eax,eax
    62b1:	je     58a0 <eval+0x4e0>
    62b7:	mov    eax,0x32
    62bc:	mov    ecx,r12d
    62bf:	sar    eax,cl
    62c1:	sub    DWORD PTR [rsp+0x10],eax
    62c5:	jmp    58a0 <eval+0x4e0>
    62ca:	nop    WORD PTR [rax+rax*1+0x0]
    62d0:	mov    edx,DWORD PTR [rsp+0x4]
    62d4:	movsxd r14,DWORD PTR [rsp+0x8]
    62d9:	movsxd r13,r11d
    62dc:	jmp    5531 <eval+0x171>
    62e1:	nop    DWORD PTR [rax+0x0]
    62e8:	mov    esi,0x1
    62ed:	mov    edi,0x68
    62f2:	add    DWORD PTR [rsp+0x10],0x14
    62f7:	call   3530 <is_attacked>
    62fc:	test   eax,eax
    62fe:	je     6305 <eval+0xf45>
    6300:	add    DWORD PTR [rsp+0x10],0x28
    6305:	cmp    DWORD PTR [rip+0x277784],0x8        # 27da90 <board+0x1d0>
    630c:	jne    6313 <eval+0xf53>
    630e:	sub    DWORD PTR [rsp+0x10],0xa
    6313:	cmp    DWORD PTR [rip+0x277772],0xc        # 27da8c <board+0x1cc>
    631a:	jne    58ba <eval+0x4fa>
    6320:	sub    DWORD PTR [rsp+0x10],0xa
    6325:	jmp    58ba <eval+0x4fa>
    632a:	nop    WORD PTR [rax+rax*1+0x0]
    6330:	xor    esi,esi
    6332:	mov    edi,0x2c
    6337:	sub    DWORD PTR [rsp+0x10],0x14
    633c:	call   3530 <is_attacked>
    6341:	test   eax,eax
    6343:	je     634a <eval+0xf8a>
    6345:	sub    DWORD PTR [rsp+0x10],0x28
    634a:	cmp    DWORD PTR [rip+0x2775ef],0x7        # 27d940 <board+0x80>
    6351:	jne    6358 <eval+0xf98>
    6353:	add    DWORD PTR [rsp+0x10],0xa
    6358:	cmp    DWORD PTR [rip+0x2775dd],0xb        # 27d93c <board+0x7c>
    635f:	jne    58ad <eval+0x4ed>
    6365:	add    DWORD PTR [rsp+0x10],0xa
    636a:	jmp    58ad <eval+0x4ed>
    636f:	lea    edx,[rax-0x3c]
    6372:	cmp    DWORD PTR [rip+0x2775c3],0x5        # 27d93c <board+0x7c>
    6379:	mov    DWORD PTR [rsp+0x10],edx
    637d:	je     6395 <eval+0xfd5>
    637f:	cmp    DWORD PTR [rip+0x2775ba],0x5        # 27d940 <board+0x80>
    6386:	je     6395 <eval+0xfd5>
    6388:	cmp    DWORD PTR [rip+0x2775b5],0x5        # 27d944 <board+0x84>
    638f:	jne    58c7 <eval+0x507>
    6395:	sub    eax,0x8c
    639a:	mov    DWORD PTR [rsp+0x10],eax
    639e:	jmp    58c7 <eval+0x507>
    63a3:	lea    edx,[rax+0x3c]
    63a6:	cmp    DWORD PTR [rip+0x2776df],0x6        # 27da8c <board+0x1cc>
    63ad:	mov    DWORD PTR [rsp+0x10],edx
    63b1:	je     63c9 <eval+0x1009>
    63b3:	cmp    DWORD PTR [rip+0x2776d6],0x6        # 27da90 <board+0x1d0>
    63ba:	je     63c9 <eval+0x1009>
    63bc:	cmp    DWORD PTR [rip+0x2776d1],0x6        # 27da94 <board+0x1d4>
    63c3:	jne    58f0 <eval+0x530>
    63c9:	add    eax,0x8c
    63ce:	mov    DWORD PTR [rsp+0x10],eax
    63d2:	jmp    58f0 <eval+0x530>
    63d7:	add    DWORD PTR [rsp+0x10],0x14
    63dc:	jmp    5838 <eval+0x478>
    63e1:	sub    DWORD PTR [rsp+0x10],0x14
    63e6:	jmp    5870 <eval+0x4b0>
    63eb:	call   1310 <__stack_chk_fail@plt>

00000000000063f0 <l_bishop_mobility>:
    63f0:	lea    eax,[rdi-0xd]
    63f3:	lea    rcx,[rip+0x2774c6]        # 27d8c0 <board>
    63fa:	cdqe   
    63fc:	cmp    DWORD PTR [rcx+rax*4],0xd
    6400:	jne    6480 <l_bishop_mobility+0x90>
    6402:	movsxd rax,edi
    6405:	lea    rdx,[rcx+rax*4]
    6409:	xor    eax,eax
    640b:	nop    DWORD PTR [rax+rax*1+0x0]
    6410:	sub    rdx,0x34
    6414:	add    eax,0x1
    6417:	cmp    DWORD PTR [rdx-0x34],0xd
    641b:	je     6410 <l_bishop_mobility+0x20>
    641d:	lea    edx,[rdi-0xb]
    6420:	movsxd rdx,edx
    6423:	cmp    DWORD PTR [rcx+rdx*4],0xd
    6427:	jne    643d <l_bishop_mobility+0x4d>
    6429:	movsxd rdx,edi
    642c:	lea    rdx,[rcx+rdx*4]
    6430:	sub    rdx,0x2c
    6434:	add    eax,0x1
    6437:	cmp    DWORD PTR [rdx-0x2c],0xd
    643b:	je     6430 <l_bishop_mobility+0x40>
    643d:	lea    edx,[rdi+0xb]
    6440:	movsxd rdx,edx
    6443:	cmp    DWORD PTR [rcx+rdx*4],0xd
    6447:	jne    645d <l_bishop_mobility+0x6d>
    6449:	movsxd rdx,edi
    644c:	lea    rdx,[rcx+rdx*4]
    6450:	add    rdx,0x2c
    6454:	add    eax,0x1
    6457:	cmp    DWORD PTR [rdx+0x2c],0xd
    645b:	je     6450 <l_bishop_mobility+0x60>
    645d:	lea    edx,[rdi+0xd]
    6460:	movsxd rdx,edx
    6463:	cmp    DWORD PTR [rcx+rdx*4],0xd
    6467:	jne    647d <l_bishop_mobility+0x8d>
    6469:	movsxd rdi,edi
    646c:	lea    rdx,[rcx+rdi*4]
    6470:	add    rdx,0x34
    6474:	add    eax,0x1
    6477:	cmp    DWORD PTR [rdx+0x34],0xd
    647b:	je     6470 <l_bishop_mobility+0x80>
    647d:	ret    
    647e:	xchg   ax,ax
    6480:	xor    eax,eax
    6482:	jmp    641d <l_bishop_mobility+0x2d>
    6484:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    648f:	nop

0000000000006490 <l_rook_mobility>:
    6490:	lea    eax,[rdi-0xc]
    6493:	lea    rcx,[rip+0x277426]        # 27d8c0 <board>
    649a:	cdqe   
    649c:	cmp    DWORD PTR [rcx+rax*4],0xd
    64a0:	jne    6520 <l_rook_mobility+0x90>
    64a2:	movsxd rax,edi
    64a5:	lea    rdx,[rcx+rax*4]
    64a9:	xor    eax,eax
    64ab:	nop    DWORD PTR [rax+rax*1+0x0]
    64b0:	sub    rdx,0x30
    64b4:	add    eax,0x1
    64b7:	cmp    DWORD PTR [rdx-0x30],0xd
    64bb:	je     64b0 <l_rook_mobility+0x20>
    64bd:	lea    edx,[rdi-0x1]
    64c0:	movsxd rdx,edx
    64c3:	cmp    DWORD PTR [rcx+rdx*4],0xd
    64c7:	jne    64dd <l_rook_mobility+0x4d>
    64c9:	movsxd rdx,edi
    64cc:	lea    rdx,[rcx+rdx*4]
    64d0:	sub    rdx,0x4
    64d4:	add    eax,0x1
    64d7:	cmp    DWORD PTR [rdx-0x4],0xd
    64db:	je     64d0 <l_rook_mobility+0x40>
    64dd:	lea    edx,[rdi+0x1]
    64e0:	movsxd rdx,edx
    64e3:	cmp    DWORD PTR [rcx+rdx*4],0xd
    64e7:	jne    64fd <l_rook_mobility+0x6d>
    64e9:	movsxd rdx,edi
    64ec:	lea    rdx,[rcx+rdx*4]
    64f0:	add    rdx,0x4
    64f4:	add    eax,0x1
    64f7:	cmp    DWORD PTR [rdx+0x4],0xd
    64fb:	je     64f0 <l_rook_mobility+0x60>
    64fd:	lea    edx,[rdi+0xc]
    6500:	movsxd rdx,edx
    6503:	cmp    DWORD PTR [rcx+rdx*4],0xd
    6507:	jne    651d <l_rook_mobility+0x8d>
    6509:	movsxd rdi,edi
    650c:	lea    rdx,[rcx+rdi*4]
    6510:	add    rdx,0x30
    6514:	add    eax,0x1
    6517:	cmp    DWORD PTR [rdx+0x30],0xd
    651b:	je     6510 <l_rook_mobility+0x80>
    651d:	ret    
    651e:	xchg   ax,ax
    6520:	xor    eax,eax
    6522:	jmp    64bd <l_rook_mobility+0x2d>
    6524:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    652f:	nop

0000000000006530 <losers_eval>:
    6530:	endbr64 
    6534:	push   r15
    6536:	push   r14
    6538:	push   r13
    653a:	push   r12
    653c:	push   rbp
    653d:	push   rbx
    653e:	sub    rsp,0x128
    6545:	mov    rax,QWORD PTR fs:0x28
    654e:	mov    QWORD PTR [rsp+0x118],rax
    6556:	xor    eax,eax
    6558:	lea    rsi,[rsp+0x5c]
    655d:	lea    rdi,[rsp+0x58]
    6562:	mov    DWORD PTR [rsp+0x58],0x0
    656a:	mov    DWORD PTR [rsp+0x5c],0x0
    6572:	call   43f0 <checkECache>
    6577:	mov    r12d,DWORD PTR [rsp+0x5c]
    657c:	test   r12d,r12d
    657f:	je     65c0 <losers_eval+0x90>
    6581:	cmp    DWORD PTR [rip+0x276f98],0x1        # 27d520 <white_to_move>
    6588:	mov    eax,DWORD PTR [rsp+0x58]
    658c:	je     6590 <losers_eval+0x60>
    658e:	neg    eax
    6590:	mov    rbx,QWORD PTR [rsp+0x118]
    6598:	xor    rbx,QWORD PTR fs:0x28
    65a1:	jne    6f27 <losers_eval+0x9f7>
    65a7:	add    rsp,0x128
    65ae:	pop    rbx
    65af:	pop    rbp
    65b0:	pop    r12
    65b2:	pop    r13
    65b4:	pop    r14
    65b6:	pop    r15
    65b8:	ret    
    65b9:	nop    DWORD PTR [rax+0x0]
    65c0:	lea    rdx,[rsp+0xc0]
    65c8:	mov    ecx,0xb
    65cd:	xor    eax,eax
    65cf:	mov    rdi,rdx
    65d2:	lea    rdx,[rsp+0x90]
    65da:	rep stos QWORD PTR es:[rdi],rax
    65dd:	lea    rcx,[rsp+0x60]
    65e2:	nop    WORD PTR [rax+rax*1+0x0]
    65e8:	mov    DWORD PTR [rcx+rax*1],0x7
    65ef:	mov    DWORD PTR [rdx+rax*1],0x2
    65f6:	add    rax,0x4
    65fa:	cmp    rax,0x2c
    65fe:	jne    65e8 <losers_eval+0xb8>
    6600:	mov    ebx,DWORD PTR [rip+0x6529e]        # 6b8a4 <piece_count>
    6606:	mov    esi,DWORD PTR [rsp+0x58]
    660a:	test   ebx,ebx
    660c:	jle    6e72 <losers_eval+0x942>
    6612:	lea    r9,[rip+0x2751cb]        # 27b7e4 <pieces+0x4>
    6619:	xor    ecx,ecx
    661b:	xor    r12d,r12d
    661e:	mov    edi,0x1
    6623:	mov    rdx,r9
    6626:	lea    r11,[rip+0x16253]        # 1c880 <Xfile>
    662d:	lea    r10,[rip+0x1600c]        # 1c640 <Xrank>
    6634:	lea    r8,[rip+0x277285]        # 27d8c0 <board>
    663b:	jmp    6651 <losers_eval+0x121>
    663d:	nop    DWORD PTR [rax]
    6640:	cmp    eax,0x2
    6643:	je     6748 <losers_eval+0x218>
    6649:	add    rdx,0x4
    664d:	cmp    edi,ebx
    664f:	jg     6690 <losers_eval+0x160>
    6651:	movsxd rax,DWORD PTR [rdx]
    6654:	test   eax,eax
    6656:	je     6649 <losers_eval+0x119>
    6658:	mov    ecx,DWORD PTR [r11+rax*4]
    665c:	mov    r12d,DWORD PTR [r10+rax*4]
    6660:	add    edi,0x1
    6663:	mov    eax,DWORD PTR [r8+rax*4]
    6667:	add    ecx,0x1
    666a:	cmp    eax,0x1
    666d:	jne    6640 <losers_eval+0x110>
    666f:	movsxd rax,ecx
    6672:	add    DWORD PTR [rsp+rax*4+0xec],0x1
    667a:	cmp    DWORD PTR [rsp+rax*4+0x60],r12d
    667f:	jle    6649 <losers_eval+0x119>
    6681:	mov    DWORD PTR [rsp+rax*4+0x60],r12d
    6686:	add    rdx,0x4
    668a:	cmp    edi,ebx
    668c:	jle    6651 <losers_eval+0x121>
    668e:	xchg   ax,ax
    6690:	movsxd rdi,ecx
    6693:	lea    eax,[rcx+0x1]
    6696:	lea    edx,[rcx-0x1]
    6699:	mov    DWORD PTR [rsp],0x0
    66a0:	lea    rcx,[rdi+0xb]
    66a4:	cdqe   
    66a6:	mov    QWORD PTR [rsp+0x20],rdi
    66ab:	movsxd rdi,edx
    66ae:	mov    QWORD PTR [rsp+0x8],rdi
    66b3:	add    rdi,0xb
    66b7:	xor    r15d,r15d
    66ba:	xor    r14d,r14d
    66bd:	mov    QWORD PTR [rsp+0x18],rax
    66c2:	add    rax,0xb
    66c6:	mov    r11d,0x1
    66cc:	lea    r10,[rip+0x2771ed]        # 27d8c0 <board>
    66d3:	mov    DWORD PTR [rsp+0x14],0x0
    66db:	lea    r13,[rip+0x163de]        # 1cac0 <Xfile+0x240>
    66e2:	mov    DWORD PTR [rsp+0x38],0x0
    66ea:	mov    DWORD PTR [rsp+0x3c],0x0
    66f2:	mov    DWORD PTR [rsp+0x10],0x0
    66fa:	mov    DWORD PTR [rsp+0x4],0x0
    6702:	mov    QWORD PTR [rsp+0x28],rcx
    6707:	mov    QWORD PTR [rsp+0x30],rdi
    670c:	mov    QWORD PTR [rsp+0x40],rax
    6711:	nop    DWORD PTR [rax+0x0]
    6718:	mov    ebp,DWORD PTR [r9]
    671b:	test   ebp,ebp
    671d:	je     6810 <losers_eval+0x2e0>
    6723:	movsxd r8,ebp
    6726:	add    r11d,0x1
    672a:	mov    eax,DWORD PTR [r10+r8*4]
    672e:	cmp    eax,0xc
    6731:	ja     6810 <losers_eval+0x2e0>
    6737:	mov    edx,eax
    6739:	movsxd rdx,DWORD PTR [r13+rdx*4+0x0]
    673e:	add    rdx,r13
    6741:	notrack jmp rdx
    6744:	nop    DWORD PTR [rax+0x0]
    6748:	movsxd rax,ecx
    674b:	add    DWORD PTR [rsp+rax*4+0xc0],0x1
    6753:	cmp    DWORD PTR [rsp+rax*4+0x90],r12d
    675b:	jge    6649 <losers_eval+0x119>
    6761:	mov    DWORD PTR [rsp+rax*4+0x90],r12d
    6769:	jmp    6649 <losers_eval+0x119>
    676e:	sub    esi,0xd
    6771:	mov    DWORD PTR [rsp+0x58],esi
    6775:	nop    DWORD PTR [rax]
    6778:	mov    rax,QWORD PTR [rsp+0x28]
    677d:	mov    eax,DWORD PTR [rsp+rax*4+0xc0]
    6784:	cmp    eax,0x1
    6787:	jle    6796 <losers_eval+0x266>
    6789:	lea    eax,[rax*8-0x8]
    6790:	sub    esi,eax
    6792:	mov    DWORD PTR [rsp+0x58],esi
    6796:	mov    rax,QWORD PTR [rsp+0x8]
    679b:	cmp    DWORD PTR [rsp+rax*4+0x90],r12d
    67a3:	jg     67f8 <losers_eval+0x2c8>
    67a5:	mov    rax,QWORD PTR [rsp+0x18]
    67aa:	cmp    DWORD PTR [rsp+rax*4+0x90],r12d
    67b2:	jg     67f8 <losers_eval+0x2c8>
    67b4:	lea    eax,[rcx+rcx*4]
    67b7:	lea    esi,[rsi+rax*2+0x19]
    67bb:	cmp    edi,0x7
    67be:	jne    67c3 <losers_eval+0x293>
    67c0:	add    esi,0x32
    67c3:	lea    rax,[rip+0x160b6]        # 1c880 <Xfile>
    67ca:	add    DWORD PTR [rsp+0x3c],0x1
    67cf:	mov    eax,DWORD PTR [rax+r8*4]
    67d3:	mov    DWORD PTR [rsp+0x58],esi
    67d7:	cmp    eax,0x1
    67da:	je     6efa <losers_eval+0x9ca>
    67e0:	cmp    eax,0x8
    67e3:	je     6efa <losers_eval+0x9ca>
    67e9:	test   edx,edx
    67eb:	jne    67f8 <losers_eval+0x2c8>
    67ed:	add    esi,0x18
    67f0:	mov    DWORD PTR [rsp+0x58],esi
    67f4:	nop    DWORD PTR [rax+0x0]
    67f8:	mov    edi,DWORD PTR [rsp+0x48]
    67fc:	test   edi,edi
    67fe:	jne    6810 <losers_eval+0x2e0>
    6800:	sub    esi,0x5
    6803:	mov    DWORD PTR [rsp+0x58],esi
    6807:	nop    WORD PTR [rax+rax*1+0x0]
    6810:	add    r9,0x4
    6814:	cmp    r11d,ebx
    6817:	jle    6718 <losers_eval+0x1e8>
    681d:	mov    ebx,esi
    681f:	mov    eax,DWORD PTR [rsp+0x4]
    6823:	lea    edx,[r14+r15*1]
    6827:	sub    eax,DWORD PTR [rsp+0x10]
    682b:	sub    ebx,eax
    682d:	cmp    edx,0xa
    6830:	cmovg  esi,ebx
    6833:	mov    eax,DWORD PTR [rip+0x2dca7]        # 344e0 <Material>
    6839:	lea    edx,[rax+0x384]
    683f:	cmp    edx,0x708
    6845:	jbe    6868 <losers_eval+0x338>
    6847:	test   eax,eax
    6849:	jle    6e40 <losers_eval+0x910>
    684f:	cmp    DWORD PTR [rip+0x290efe],0x1        # 297754 <comp_color>
    6856:	jne    6868 <losers_eval+0x338>
    6858:	mov    ecx,DWORD PTR [rsp+0x3c]
    685c:	test   ecx,ecx
    685e:	je     6e61 <losers_eval+0x931>
    6864:	nop    DWORD PTR [rax+0x0]
    6868:	add    esi,eax
    686a:	mov    DWORD PTR [rsp+0x58],esi
    686e:	mov    edx,DWORD PTR [rsp]
    6871:	test   edx,edx
    6873:	je     68a8 <losers_eval+0x378>
    6875:	mov    eax,DWORD PTR [rsp+0x14]
    6879:	test   eax,eax
    687b:	jne    6885 <losers_eval+0x355>
    687d:	sub    DWORD PTR [rsp+0x58],0xc8
    6885:	test   r14d,r14d
    6888:	jne    68b5 <losers_eval+0x385>
    688a:	mov    DWORD PTR [rsp+0x58],0xf4240
    6892:	mov    edi,0xf4240
    6897:	call   43b0 <storeECache>
    689c:	jmp    6581 <losers_eval+0x51>
    68a1:	nop    DWORD PTR [rax+0x0]
    68a8:	add    DWORD PTR [rsp+0x58],0xc8
    68b0:	test   r14d,r14d
    68b3:	je     688a <losers_eval+0x35a>
    68b5:	test   r15d,r15d
    68b8:	je     6df8 <losers_eval+0x8c8>
    68be:	mov    edi,DWORD PTR [rsp+0x58]
    68c2:	jmp    6897 <losers_eval+0x367>
    68c4:	nop    DWORD PTR [rax+0x0]
    68c8:	mov    edi,ebp
    68ca:	add    r15d,0x1
    68ce:	call   63f0 <l_bishop_mobility>
    68d3:	shl    eax,0x2
    68d6:	add    r9,0x4
    68da:	sub    esi,eax
    68dc:	lea    rax,[rip+0x1625d]        # 1cb40 <lcentral>
    68e3:	sub    esi,DWORD PTR [rax+r8*4]
    68e7:	mov    DWORD PTR [rsp+0x58],esi
    68eb:	cmp    r11d,ebx
    68ee:	jle    6718 <losers_eval+0x1e8>
    68f4:	jmp    681d <losers_eval+0x2ed>
    68f9:	nop    DWORD PTR [rax+0x0]
    6900:	mov    edi,ebp
    6902:	add    r14d,0x1
    6906:	call   63f0 <l_bishop_mobility>
    690b:	lea    esi,[rsi+rax*4]
    690e:	lea    rax,[rip+0x1622b]        # 1cb40 <lcentral>
    6915:	add    r9,0x4
    6919:	add    esi,DWORD PTR [rax+r8*4]
    691d:	mov    DWORD PTR [rsp+0x58],esi
    6921:	cmp    r11d,ebx
    6924:	jle    6718 <losers_eval+0x1e8>
    692a:	jmp    681d <losers_eval+0x2ed>
    692f:	nop
    6930:	mov    edi,ebp
    6932:	add    r15d,0x1
    6936:	call   63f0 <l_bishop_mobility>
    693b:	mov    edi,ebp
    693d:	add    eax,eax
    693f:	sub    esi,eax
    6941:	mov    DWORD PTR [rsp+0x58],esi
    6945:	call   6490 <l_rook_mobility>
    694a:	add    eax,eax
    694c:	add    r9,0x4
    6950:	sub    esi,eax
    6952:	lea    rax,[rip+0x161e7]        # 1cb40 <lcentral>
    6959:	sub    esi,DWORD PTR [rax+r8*4]
    695d:	mov    DWORD PTR [rsp+0x58],esi
    6961:	cmp    r11d,ebx
    6964:	jle    6718 <losers_eval+0x1e8>
    696a:	jmp    681d <losers_eval+0x2ed>
    696f:	nop
    6970:	mov    edi,ebp
    6972:	add    r14d,0x1
    6976:	call   63f0 <l_bishop_mobility>
    697b:	mov    edi,ebp
    697d:	lea    esi,[rsi+rax*2]
    6980:	mov    DWORD PTR [rsp+0x58],esi
    6984:	call   6490 <l_rook_mobility>
    6989:	lea    esi,[rsi+rax*2]
    698c:	lea    rax,[rip+0x161ad]        # 1cb40 <lcentral>
    6993:	add    r9,0x4
    6997:	add    esi,DWORD PTR [rax+r8*4]
    699b:	mov    DWORD PTR [rsp+0x58],esi
    699f:	cmp    r11d,ebx
    69a2:	jle    6718 <losers_eval+0x1e8>
    69a8:	jmp    681d <losers_eval+0x2ed>
    69ad:	nop    DWORD PTR [rax]
    69b0:	mov    edi,ebp
    69b2:	add    r15d,0x1
    69b6:	call   6490 <l_rook_mobility>
    69bb:	jmp    68d3 <losers_eval+0x3a3>
    69c0:	mov    edi,ebp
    69c2:	add    r14d,0x1
    69c6:	call   6490 <l_rook_mobility>
    69cb:	lea    esi,[rsi+rax*4]
    69ce:	lea    rax,[rip+0x1616b]        # 1cb40 <lcentral>
    69d5:	add    r9,0x4
    69d9:	add    esi,DWORD PTR [rax+r8*4]
    69dd:	mov    DWORD PTR [rsp+0x58],esi
    69e1:	cmp    r11d,ebx
    69e4:	jle    6718 <losers_eval+0x1e8>
    69ea:	jmp    681d <losers_eval+0x2ed>
    69ef:	nop
    69f0:	lea    rax,[rip+0x16149]        # 1cb40 <lcentral>
    69f7:	lea    rdx,[rip+0x16106]        # 1cb04 <king_o.4471+0x4>
    69fe:	xor    edi,edi
    6a00:	mov    eax,DWORD PTR [rax+r8*4]
    6a04:	lea    rcx,[rdx+0x1c]
    6a08:	add    eax,eax
    6a0a:	mov    DWORD PTR [rsp+0x10],eax
    6a0e:	mov    eax,0xd
    6a13:	jmp    6a1e <losers_eval+0x4ee>
    6a15:	nop    DWORD PTR [rax]
    6a18:	mov    eax,DWORD PTR [rdx]
    6a1a:	add    rdx,0x4
    6a1e:	add    eax,ebp
    6a20:	cdqe   
    6a22:	cmp    DWORD PTR [r10+rax*4],0xd
    6a27:	jne    6a2c <losers_eval+0x4fc>
    6a29:	add    edi,0x1
    6a2c:	cmp    rdx,rcx
    6a2f:	jne    6a18 <losers_eval+0x4e8>
    6a31:	sub    esi,edi
    6a33:	add    r9,0x4
    6a37:	mov    DWORD PTR [rsp+0x58],esi
    6a3b:	cmp    r11d,ebx
    6a3e:	jle    6718 <losers_eval+0x1e8>
    6a44:	jmp    681d <losers_eval+0x2ed>
    6a49:	nop    DWORD PTR [rax+0x0]
    6a50:	lea    rax,[rip+0x160e9]        # 1cb40 <lcentral>
    6a57:	lea    rdx,[rip+0x160a6]        # 1cb04 <king_o.4471+0x4>
    6a5e:	xor    edi,edi
    6a60:	mov    eax,DWORD PTR [rax+r8*4]
    6a64:	lea    rcx,[rdx+0x1c]
    6a68:	add    eax,eax
    6a6a:	mov    DWORD PTR [rsp+0x4],eax
    6a6e:	mov    eax,0xd
    6a73:	jmp    6a7e <losers_eval+0x54e>
    6a75:	nop    DWORD PTR [rax]
    6a78:	mov    eax,DWORD PTR [rdx]
    6a7a:	add    rdx,0x4
    6a7e:	add    eax,ebp
    6a80:	cdqe   
    6a82:	cmp    DWORD PTR [r10+rax*4],0xd
    6a87:	jne    6a8c <losers_eval+0x55c>
    6a89:	add    edi,0x1
    6a8c:	cmp    rdx,rcx
    6a8f:	jne    6a78 <losers_eval+0x548>
    6a91:	add    esi,edi
    6a93:	add    r9,0x4
    6a97:	mov    DWORD PTR [rsp+0x58],esi
    6a9b:	cmp    r11d,ebx
    6a9e:	jle    6718 <losers_eval+0x1e8>
    6aa4:	jmp    681d <losers_eval+0x2ed>
    6aa9:	nop    DWORD PTR [rax+0x0]
    6ab0:	lea    rax,[rip+0x16089]        # 1cb40 <lcentral>
    6ab7:	lea    rdx,[rip+0x16066]        # 1cb24 <knight_o.4458+0x4>
    6abe:	add    r15d,0x1
    6ac2:	xor    ecx,ecx
    6ac4:	mov    eax,DWORD PTR [rax+r8*4]
    6ac8:	lea    rdi,[rdx+0x1c]
    6acc:	add    eax,eax
    6ace:	sub    esi,eax
    6ad0:	mov    eax,0xa
    6ad5:	jmp    6ae6 <losers_eval+0x5b6>
    6ad7:	nop    WORD PTR [rax+rax*1+0x0]
    6ae0:	mov    eax,DWORD PTR [rdx]
    6ae2:	add    rdx,0x4
    6ae6:	add    eax,ebp
    6ae8:	cdqe   
    6aea:	cmp    DWORD PTR [r10+rax*4],0xd
    6aef:	jne    6af4 <losers_eval+0x5c4>
    6af1:	add    ecx,0x1
    6af4:	cmp    rdx,rdi
    6af7:	jne    6ae0 <losers_eval+0x5b0>
    6af9:	shl    ecx,0x2
    6afc:	add    r9,0x4
    6b00:	sub    esi,ecx
    6b02:	mov    DWORD PTR [rsp+0x58],esi
    6b06:	cmp    r11d,ebx
    6b09:	jle    6718 <losers_eval+0x1e8>
    6b0f:	jmp    681d <losers_eval+0x2ed>
    6b14:	nop    DWORD PTR [rax+0x0]
    6b18:	lea    rax,[rip+0x15b21]        # 1c640 <Xrank>
    6b1f:	sub    ebp,0xc
    6b22:	lea    rdx,[rip+0x16017]        # 1cb40 <lcentral>
    6b29:	add    DWORD PTR [rsp+0x14],0x1
    6b2e:	mov    eax,DWORD PTR [rax+r8*4]
    6b32:	movsxd rbp,ebp
    6b35:	sub    esi,DWORD PTR [rdx+r8*4]
    6b39:	add    r15d,0x1
    6b3d:	xor    edx,edx
    6b3f:	mov    rdi,QWORD PTR [rsp+0x8]
    6b44:	mov    ecx,eax
    6b46:	mov    DWORD PTR [rsp+0x48],eax
    6b4a:	mov    eax,0x7
    6b4f:	sub    eax,ecx
    6b51:	cmp    DWORD PTR [r10+rbp*4],0xd
    6b56:	mov    rcx,QWORD PTR [rsp+0x28]
    6b5b:	sete   dl
    6b5e:	mov    rbp,QWORD PTR [rsp+0x18]
    6b63:	shl    edx,0x2
    6b66:	sub    esi,edx
    6b68:	lea    edx,[rax*8+0x0]
    6b6f:	sub    esi,edx
    6b71:	mov    edx,DWORD PTR [rsp+rcx*4+0xc0]
    6b78:	mov    ecx,DWORD PTR [rsp+rdi*4+0xc0]
    6b7f:	mov    DWORD PTR [rsp+0x58],esi
    6b83:	cmp    DWORD PTR [rsp+rbp*4+0x90],r12d
    6b8b:	jge    6d50 <losers_eval+0x820>
    6b91:	cmp    DWORD PTR [rsp+rdi*4+0x90],r12d
    6b99:	jge    6d50 <losers_eval+0x820>
    6b9f:	mov    ebp,DWORD PTR [rsp+rbp*4+0xc0]
    6ba6:	lea    edi,[rsi+0x8]
    6ba9:	mov    DWORD PTR [rsp+0x58],edi
    6bad:	test   ebp,ebp
    6baf:	jne    6eaa <losers_eval+0x97a>
    6bb5:	test   ecx,ecx
    6bb7:	jne    6f06 <losers_eval+0x9d6>
    6bbd:	test   edx,edx
    6bbf:	je     6e0a <losers_eval+0x8da>
    6bc5:	add    esi,0x14
    6bc8:	mov    ebp,0x1
    6bcd:	mov    DWORD PTR [rsp+0x58],esi
    6bd1:	jmp    6d5a <losers_eval+0x82a>
    6bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6be0:	lea    rax,[rip+0x15f59]        # 1cb40 <lcentral>
    6be7:	lea    rdx,[rip+0x15f36]        # 1cb24 <knight_o.4458+0x4>
    6bee:	add    r14d,0x1
    6bf2:	mov    eax,DWORD PTR [rax+r8*4]
    6bf6:	lea    rcx,[rdx+0x1c]
    6bfa:	lea    edi,[rsi+rax*2]
    6bfd:	xor    esi,esi
    6bff:	mov    eax,0xa
    6c04:	jmp    6c16 <losers_eval+0x6e6>
    6c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6c10:	mov    eax,DWORD PTR [rdx]
    6c12:	add    rdx,0x4
    6c16:	add    eax,ebp
    6c18:	cdqe   
    6c1a:	cmp    DWORD PTR [r10+rax*4],0xd
    6c1f:	jne    6c24 <losers_eval+0x6f4>
    6c21:	add    esi,0x1
    6c24:	cmp    rdx,rcx
    6c27:	jne    6c10 <losers_eval+0x6e0>
    6c29:	lea    esi,[rdi+rsi*4]
    6c2c:	add    r9,0x4
    6c30:	mov    DWORD PTR [rsp+0x58],esi
    6c34:	cmp    r11d,ebx
    6c37:	jle    6718 <losers_eval+0x1e8>
    6c3d:	jmp    681d <losers_eval+0x2ed>
    6c42:	nop    WORD PTR [rax+rax*1+0x0]
    6c48:	add    ebp,0xc
    6c4b:	lea    rdx,[rip+0x159ee]        # 1c640 <Xrank>
    6c52:	add    DWORD PTR [rsp],0x1
    6c56:	add    r14d,0x1
    6c5a:	movsxd rbp,ebp
    6c5d:	mov    edi,DWORD PTR [rdx+r8*4]
    6c61:	xor    edx,edx
    6c63:	cmp    DWORD PTR [r10+rbp*4],0xd
    6c68:	lea    rbp,[rip+0x15ed1]        # 1cb40 <lcentral>
    6c6f:	sete   dl
    6c72:	add    esi,DWORD PTR [rbp+r8*4+0x0]
    6c77:	mov    rbp,QWORD PTR [rsp+0x30]
    6c7c:	lea    ecx,[rdi-0x2]
    6c7f:	lea    edx,[rsi+rdx*4]
    6c82:	mov    ebp,DWORD PTR [rsp+rbp*4+0xc0]
    6c89:	lea    esi,[rdx+rcx*8]
    6c8c:	mov    rdx,QWORD PTR [rsp+0x20]
    6c91:	mov    DWORD PTR [rsp+0x58],esi
    6c95:	mov    DWORD PTR [rsp+0x48],ebp
    6c99:	mov    rbp,QWORD PTR [rsp+0x18]
    6c9e:	mov    edx,DWORD PTR [rsp+rdx*4+0xc0]
    6ca5:	cmp    DWORD PTR [rsp+rbp*4+0x60],r12d
    6caa:	jle    6d28 <losers_eval+0x7f8>
    6cac:	mov    rbp,QWORD PTR [rsp+0x8]
    6cb1:	cmp    DWORD PTR [rsp+rbp*4+0x60],r12d
    6cb6:	jle    6d28 <losers_eval+0x7f8>
    6cb8:	lea    ebp,[rsi-0x8]
    6cbb:	mov    DWORD PTR [rsp+0x4c],ebp
    6cbf:	mov    DWORD PTR [rsp+0x58],ebp
    6cc3:	mov    rbp,QWORD PTR [rsp+0x40]
    6cc8:	mov    ebp,DWORD PTR [rsp+rbp*4+0xc0]
    6ccf:	test   ebp,ebp
    6cd1:	jne    6eb7 <losers_eval+0x987>
    6cd7:	mov    ebp,DWORD PTR [rsp+0x48]
    6cdb:	test   ebp,ebp
    6cdd:	jne    6ed4 <losers_eval+0x9a4>
    6ce3:	test   edx,edx
    6ce5:	je     6e9c <losers_eval+0x96c>
    6ceb:	mov    rax,QWORD PTR [rsp+0x28]
    6cf0:	sub    esi,0x14
    6cf3:	mov    DWORD PTR [rsp+0x58],esi
    6cf7:	mov    eax,DWORD PTR [rsp+rax*4+0xc0]
    6cfe:	cmp    eax,0x1
    6d01:	jle    6800 <losers_eval+0x2d0>
    6d07:	nop    WORD PTR [rax+rax*1+0x0]
    6d10:	lea    eax,[rax*8-0x8]
    6d17:	sub    esi,eax
    6d19:	mov    DWORD PTR [rsp+0x58],esi
    6d1d:	jmp    67f8 <losers_eval+0x2c8>
    6d22:	nop    WORD PTR [rax+rax*1+0x0]
    6d28:	test   edx,edx
    6d2a:	je     6778 <losers_eval+0x248>
    6d30:	mov    rax,QWORD PTR [rsp+0x28]
    6d35:	mov    eax,DWORD PTR [rsp+rax*4+0xc0]
    6d3c:	cmp    eax,0x1
    6d3f:	jg     6d10 <losers_eval+0x7e0>
    6d41:	jmp    67f8 <losers_eval+0x2c8>
    6d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6d50:	xor    ebp,ebp
    6d52:	test   edx,edx
    6d54:	je     6e16 <losers_eval+0x8e6>
    6d5a:	mov    rdi,QWORD PTR [rsp+0x20]
    6d5f:	mov    edi,DWORD PTR [rsp+rdi*4+0xc0]
    6d66:	cmp    edi,0x1
    6d69:	jle    6de0 <losers_eval+0x8b0>
    6d6b:	lea    esi,[rsi+rdi*8-0x8]
    6d6f:	mov    DWORD PTR [rsp+0x58],esi
    6d73:	test   edx,edx
    6d75:	jne    6de0 <losers_eval+0x8b0>
    6d77:	mov    edx,ebp
    6d79:	nop    DWORD PTR [rax+0x0]
    6d80:	mov    rdi,QWORD PTR [rsp+0x8]
    6d85:	cmp    DWORD PTR [rsp+rdi*4+0x60],r12d
    6d8a:	jl     6de0 <losers_eval+0x8b0>
    6d8c:	mov    rdi,QWORD PTR [rsp+0x18]
    6d91:	cmp    DWORD PTR [rsp+rdi*4+0x60],r12d
    6d96:	jl     6de0 <losers_eval+0x8b0>
    6d98:	lea    eax,[rax+rax*4]
    6d9b:	lea    eax,[rax+rax*1+0x19]
    6d9f:	sub    esi,eax
    6da1:	cmp    DWORD PTR [rsp+0x48],0x2
    6da6:	jne    6dab <losers_eval+0x87b>
    6da8:	sub    esi,0x32
    6dab:	lea    rax,[rip+0x15ace]        # 1c880 <Xfile>
    6db2:	add    DWORD PTR [rsp+0x38],0x1
    6db7:	mov    eax,DWORD PTR [rax+r8*4]
    6dbb:	mov    DWORD PTR [rsp+0x58],esi
    6dbf:	cmp    eax,0x1
    6dc2:	je     6f11 <losers_eval+0x9e1>
    6dc8:	cmp    eax,0x8
    6dcb:	je     6f11 <losers_eval+0x9e1>
    6dd1:	test   edx,edx
    6dd3:	jne    6de0 <losers_eval+0x8b0>
    6dd5:	sub    esi,0x18
    6dd8:	mov    DWORD PTR [rsp+0x58],esi
    6ddc:	nop    DWORD PTR [rax+0x0]
    6de0:	test   ecx,ecx
    6de2:	jne    6810 <losers_eval+0x2e0>
    6de8:	add    esi,0x5
    6deb:	mov    DWORD PTR [rsp+0x58],esi
    6def:	jmp    6810 <losers_eval+0x2e0>
    6df4:	nop    DWORD PTR [rax+0x0]
    6df8:	mov    DWORD PTR [rsp+0x58],0xfff0bdc0
    6e00:	mov    edi,0xfff0bdc0
    6e05:	jmp    6897 <losers_eval+0x367>
    6e0a:	add    esi,0x21
    6e0d:	mov    edx,0x1
    6e12:	mov    DWORD PTR [rsp+0x58],esi
    6e16:	mov    rdi,QWORD PTR [rsp+0x20]
    6e1b:	mov    edi,DWORD PTR [rsp+rdi*4+0xc0]
    6e22:	cmp    edi,0x1
    6e25:	jle    6d80 <losers_eval+0x850>
    6e2b:	lea    esi,[rsi+rdi*8-0x8]
    6e2f:	mov    DWORD PTR [rsp+0x58],esi
    6e33:	jmp    6d80 <losers_eval+0x850>
    6e38:	nop    DWORD PTR [rax+rax*1+0x0]
    6e40:	mov    ebx,DWORD PTR [rsp+0x38]
    6e44:	or     ebx,DWORD PTR [rip+0x29090a]        # 297754 <comp_color>
    6e4a:	jne    6868 <losers_eval+0x338>
    6e50:	sub    esi,eax
    6e52:	lea    eax,[rsi-0x708]
    6e58:	mov    DWORD PTR [rsp+0x58],eax
    6e5c:	jmp    686e <losers_eval+0x33e>
    6e61:	sub    esi,eax
    6e63:	lea    eax,[rsi+0x708]
    6e69:	mov    DWORD PTR [rsp+0x58],eax
    6e6d:	jmp    686e <losers_eval+0x33e>
    6e72:	mov    DWORD PTR [rsp+0x3c],0x0
    6e7a:	xor    r14d,r14d
    6e7d:	xor    r15d,r15d
    6e80:	mov    DWORD PTR [rsp],0x0
    6e87:	mov    DWORD PTR [rsp+0x38],0x0
    6e8f:	mov    DWORD PTR [rsp+0x14],0x0
    6e97:	jmp    6833 <losers_eval+0x303>
    6e9c:	sub    esi,0x21
    6e9f:	mov    edx,eax
    6ea1:	mov    DWORD PTR [rsp+0x58],esi
    6ea5:	jmp    6778 <losers_eval+0x248>
    6eaa:	test   edx,edx
    6eac:	je     6ec8 <losers_eval+0x998>
    6eae:	mov    esi,edi
    6eb0:	xor    ebp,ebp
    6eb2:	jmp    6d5a <losers_eval+0x82a>
    6eb7:	test   edx,edx
    6eb9:	je     676e <losers_eval+0x23e>
    6ebf:	mov    esi,DWORD PTR [rsp+0x4c]
    6ec3:	jmp    6d30 <losers_eval+0x800>
    6ec8:	add    esi,0xd
    6ecb:	mov    DWORD PTR [rsp+0x58],esi
    6ecf:	jmp    6e16 <losers_eval+0x8e6>
    6ed4:	test   edx,edx
    6ed6:	je     676e <losers_eval+0x23e>
    6edc:	mov    rax,QWORD PTR [rsp+0x28]
    6ee1:	mov    esi,DWORD PTR [rsp+0x4c]
    6ee5:	mov    eax,DWORD PTR [rsp+rax*4+0xc0]
    6eec:	cmp    eax,0x1
    6eef:	jg     6d10 <losers_eval+0x7e0>
    6ef5:	jmp    6810 <losers_eval+0x2e0>
    6efa:	lea    esi,[rsi+rdi*2]
    6efd:	mov    DWORD PTR [rsp+0x58],esi
    6f01:	jmp    67e9 <losers_eval+0x2b9>
    6f06:	test   edx,edx
    6f08:	je     6ec8 <losers_eval+0x998>
    6f0a:	mov    esi,edi
    6f0c:	jmp    6d5a <losers_eval+0x82a>
    6f11:	mov    eax,0x9
    6f16:	sub    eax,DWORD PTR [rsp+0x48]
    6f1a:	add    eax,eax
    6f1c:	sub    esi,eax
    6f1e:	mov    DWORD PTR [rsp+0x58],esi
    6f22:	jmp    6dd1 <losers_eval+0x8a1>
    6f27:	call   1310 <__stack_chk_fail@plt>
    6f2c:	nop    DWORD PTR [rax+0x0]

0000000000006f30 <push_king.part.0>:
    6f30:	movsxd rdx,DWORD PTR [rip+0x377d1]        # 3e708 <numb_moves>
    6f37:	lea    rcx,[rdx+rdx*2]
    6f3b:	mov    rax,rdx
    6f3e:	mov    rdx,QWORD PTR [rip+0x1d673]        # 245b8 <genfor>
    6f45:	add    eax,0x1
    6f48:	lea    rdx,[rdx+rcx*8]
    6f4c:	mov    ecx,DWORD PTR [rip+0x377be]        # 3e710 <gfrom>
    6f52:	mov    DWORD PTR [rdx+0x4],edi
    6f55:	mov    DWORD PTR [rdx],ecx
    6f57:	mov    QWORD PTR [rdx+0x8],0xd
    6f5f:	mov    QWORD PTR [rdx+0x10],0x0
    6f67:	mov    DWORD PTR [rip+0x3779b],eax        # 3e708 <numb_moves>
    6f6d:	ret    
    6f6e:	xchg   ax,ax

0000000000006f70 <check_legal>:
    6f70:	endbr64 
    6f74:	movsxd rsi,esi
    6f77:	cmp    DWORD PTR [rip+0x274842],0x3        # 27b7c0 <Variant>
    6f7e:	mov    r8d,0x1
    6f84:	lea    rax,[rsi+rsi*2]
    6f88:	lea    rax,[rdi+rax*8]
    6f8c:	je     7038 <check_legal+0xc8>
    6f92:	push   r14
    6f94:	push   r13
    6f96:	push   r12
    6f98:	push   rbp
    6f99:	push   rbx
    6f9a:	mov    ecx,DWORD PTR [rax+0x10]
    6f9d:	test   ecx,ecx
    6f9f:	je     6fd8 <check_legal+0x68>
    6fa1:	cmp    ecx,0x1
    6fa4:	je     7250 <check_legal+0x2e0>
    6faa:	cmp    ecx,0x2
    6fad:	je     72e0 <check_legal+0x370>
    6fb3:	cmp    ecx,0x3
    6fb6:	je     7328 <check_legal+0x3b8>
    6fbc:	cmp    ecx,0x4
    6fbf:	je     7378 <check_legal+0x408>
    6fc5:	xor    r8d,r8d
    6fc8:	pop    rbx
    6fc9:	mov    eax,r8d
    6fcc:	pop    rbp
    6fcd:	pop    r12
    6fcf:	pop    r13
    6fd1:	pop    r14
    6fd3:	ret    
    6fd4:	nop    DWORD PTR [rax+0x0]
    6fd8:	mov    ecx,DWORD PTR [rax]
    6fda:	movsxd rsi,DWORD PTR [rax+0x4]
    6fde:	test   BYTE PTR [rip+0x27653b],0x1        # 27d520 <white_to_move>
    6fe5:	je     7040 <check_legal+0xd0>
    6fe7:	test   edx,edx
    6fe9:	jne    7298 <check_legal+0x328>
    6fef:	test   ecx,ecx
    6ff1:	je     6fc8 <check_legal+0x58>
    6ff3:	mov    r8d,DWORD PTR [rax+0xc]
    6ff7:	mov    edi,DWORD PTR [rip+0x276527]        # 27d524 <bking_loc>
    6ffd:	test   r8d,r8d
    7000:	jne    7090 <check_legal+0x120>
    7006:	lea    rdx,[rip+0x2768b3]        # 27d8c0 <board>
    700d:	movsxd r8,esi
    7010:	mov    r9d,DWORD PTR [rdx+r8*4]
    7014:	cmp    r9d,0xc
    7018:	ja     74ee <check_legal+0x57e>
    701e:	lea    rbx,[rip+0x15d5b]        # 1cd80 <lcentral+0x240>
    7025:	mov    r11d,r9d
    7028:	movsxd r10,DWORD PTR [rbx+r11*4]
    702c:	add    r10,rbx
    702f:	notrack jmp r10
    7033:	nop    DWORD PTR [rax+rax*1+0x0]
    7038:	mov    eax,r8d
    703b:	ret    
    703c:	nop    DWORD PTR [rax+0x0]
    7040:	test   edx,edx
    7042:	jne    72c0 <check_legal+0x350>
    7048:	test   ecx,ecx
    704a:	je     6fc8 <check_legal+0x58>
    7050:	mov    edx,DWORD PTR [rax+0xc]
    7053:	mov    edi,DWORD PTR [rip+0x276f83]        # 27dfdc <wking_loc>
    7059:	test   edx,edx
    705b:	jne    7170 <check_legal+0x200>
    7061:	lea    rdx,[rip+0x276858]        # 27d8c0 <board>
    7068:	movsxd r8,esi
    706b:	mov    r9d,DWORD PTR [rdx+r8*4]
    706f:	cmp    r9d,0xb
    7073:	ja     7416 <check_legal+0x4a6>
    7079:	lea    rbx,[rip+0x15d34]        # 1cdb4 <lcentral+0x274>
    7080:	mov    r11d,r9d
    7083:	movsxd r10,DWORD PTR [rbx+r11*4]
    7087:	add    r10,rbx
    708a:	notrack jmp r10
    708e:	xchg   ax,ax
    7090:	cmp    DWORD PTR [rax+0x8],0xd
    7094:	je     74a0 <check_legal+0x530>
    709a:	lea    rdx,[rip+0x157df]        # 1c880 <Xfile>
    70a1:	movsxd r11,edi
    70a4:	movsxd rax,ecx
    70a7:	mov    ebx,DWORD PTR [rdx+r11*4]
    70ab:	cmp    DWORD PTR [rdx+rax*4],ebx
    70ae:	je     7978 <check_legal+0xa08>
    70b4:	lea    rdx,[rip+0x15585]        # 1c640 <Xrank>
    70bb:	mov    ebx,DWORD PTR [rdx+r11*4]
    70bf:	cmp    DWORD PTR [rdx+rax*4],ebx
    70c2:	je     79e1 <check_legal+0xa71>
    70c8:	lea    r9,[rip+0x15331]        # 1c400 <Xdiagl>
    70cf:	mov    ebx,DWORD PTR [r9+r11*4]
    70d3:	cmp    DWORD PTR [r9+rax*4],ebx
    70d7:	je     70f3 <check_legal+0x183>
    70d9:	lea    rdx,[rip+0x150e0]        # 1c1c0 <Xdiagr>
    70e0:	mov    r8d,0x1
    70e6:	mov    ebx,DWORD PTR [rdx+r11*4]
    70ea:	cmp    DWORD PTR [rdx+rax*4],ebx
    70ed:	jne    6fc8 <check_legal+0x58>
    70f3:	lea    rdx,[rip+0x2767c6]        # 27d8c0 <board>
    70fa:	cmp    DWORD PTR [rdx+rsi*4],0x6
    70fe:	je     729e <check_legal+0x32e>
    7104:	mov    ebx,DWORD PTR [r9+r11*4]
    7108:	cmp    DWORD PTR [r9+rax*4],ebx
    710c:	je     7a0d <check_legal+0xa9d>
    7112:	lea    rsi,[rip+0x150a7]        # 1c1c0 <Xdiagr>
    7119:	mov    r8d,0x1
    711f:	mov    ebx,DWORD PTR [rsi+r11*4]
    7123:	cmp    DWORD PTR [rsi+rax*4],ebx
    7126:	jne    6fc8 <check_legal+0x58>
    712c:	cmp    ecx,edi
    712e:	jge    7b61 <check_legal+0xbf1>
    7134:	lea    eax,[rdi-0xb]
    7137:	cdqe   
    7139:	mov    ecx,DWORD PTR [rdx+rax*4]
    713c:	cmp    ecx,0xd
    713f:	jne    7154 <check_legal+0x1e4>
    7141:	lea    rax,[rdx+r11*4]
    7145:	nop    DWORD PTR [rax]
    7148:	mov    ecx,DWORD PTR [rax-0x58]
    714b:	sub    rax,0x2c
    714f:	cmp    ecx,0xd
    7152:	je     7148 <check_legal+0x1d8>
    7154:	and    ecx,0xfffffffd
    7157:	xor    r8d,r8d
    715a:	cmp    ecx,0x9
    715d:	setne  r8b
    7161:	jmp    6fc8 <check_legal+0x58>
    7166:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7170:	cmp    DWORD PTR [rax+0x8],0xd
    7174:	je     73c8 <check_legal+0x458>
    717a:	lea    rdx,[rip+0x156ff]        # 1c880 <Xfile>
    7181:	movsxd r11,edi
    7184:	movsxd rax,ecx
    7187:	mov    ebx,DWORD PTR [rdx+r11*4]
    718b:	cmp    DWORD PTR [rdx+rax*4],ebx
    718e:	je     7960 <check_legal+0x9f0>
    7194:	lea    rdx,[rip+0x154a5]        # 1c640 <Xrank>
    719b:	mov    ebx,DWORD PTR [rdx+r11*4]
    719f:	cmp    DWORD PTR [rdx+rax*4],ebx
    71a2:	je     79f7 <check_legal+0xa87>
    71a8:	lea    r9,[rip+0x15251]        # 1c400 <Xdiagl>
    71af:	mov    ebx,DWORD PTR [r9+r11*4]
    71b3:	cmp    DWORD PTR [r9+rax*4],ebx
    71b7:	je     71d3 <check_legal+0x263>
    71b9:	lea    rdx,[rip+0x15000]        # 1c1c0 <Xdiagr>
    71c0:	mov    r8d,0x1
    71c6:	mov    ebx,DWORD PTR [rdx+r11*4]
    71ca:	cmp    DWORD PTR [rdx+rax*4],ebx
    71cd:	jne    6fc8 <check_legal+0x58>
    71d3:	lea    rdx,[rip+0x2766e6]        # 27d8c0 <board>
    71da:	cmp    DWORD PTR [rdx+rsi*4],0x5
    71de:	je     72c6 <check_legal+0x356>
    71e4:	mov    ebx,DWORD PTR [r9+r11*4]
    71e8:	cmp    DWORD PTR [r9+rax*4],ebx
    71ec:	je     7a41 <check_legal+0xad1>
    71f2:	lea    rsi,[rip+0x14fc7]        # 1c1c0 <Xdiagr>
    71f9:	mov    r8d,0x1
    71ff:	mov    ebx,DWORD PTR [rsi+r11*4]
    7203:	cmp    DWORD PTR [rsi+rax*4],ebx
    7206:	jne    6fc8 <check_legal+0x58>
    720c:	cmp    ecx,edi
    720e:	jge    7b31 <check_legal+0xbc1>
    7214:	lea    eax,[rdi-0xb]
    7217:	cdqe   
    7219:	mov    ecx,DWORD PTR [rdx+rax*4]
    721c:	cmp    ecx,0xd
    721f:	jne    7234 <check_legal+0x2c4>
    7221:	lea    rax,[rdx+r11*4]
    7225:	nop    DWORD PTR [rax]
    7228:	mov    ecx,DWORD PTR [rax-0x58]
    722b:	sub    rax,0x2c
    722f:	cmp    ecx,0xd
    7232:	je     7228 <check_legal+0x2b8>
    7234:	sub    ecx,0xa
    7237:	xor    r8d,r8d
    723a:	and    ecx,0xfffffffd
    723d:	setne  r8b
    7241:	jmp    6fc8 <check_legal+0x58>
    7246:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7250:	xor    esi,esi
    7252:	mov    edi,0x1e
    7257:	call   3530 <is_attacked>
    725c:	test   eax,eax
    725e:	jne    6fc5 <check_legal+0x55>
    7264:	xor    esi,esi
    7266:	mov    edi,0x1f
    726b:	call   3530 <is_attacked>
    7270:	test   eax,eax
    7272:	jne    6fc5 <check_legal+0x55>
    7278:	xor    esi,esi
    727a:	mov    edi,0x20
    727f:	call   3530 <is_attacked>
    7284:	xor    r8d,r8d
    7287:	test   eax,eax
    7289:	sete   r8b
    728d:	jmp    6fc8 <check_legal+0x58>
    7292:	nop    WORD PTR [rax+rax*1+0x0]
    7298:	mov    edi,DWORD PTR [rip+0x276286]        # 27d524 <bking_loc>
    729e:	mov    esi,0x1
    72a3:	call   3530 <is_attacked>
    72a8:	xor    r8d,r8d
    72ab:	test   eax,eax
    72ad:	sete   r8b
    72b1:	jmp    6fc8 <check_legal+0x58>
    72b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    72c0:	mov    edi,DWORD PTR [rip+0x276d16]        # 27dfdc <wking_loc>
    72c6:	xor    esi,esi
    72c8:	call   3530 <is_attacked>
    72cd:	xor    r8d,r8d
    72d0:	test   eax,eax
    72d2:	sete   r8b
    72d6:	jmp    6fc8 <check_legal+0x58>
    72db:	nop    DWORD PTR [rax+rax*1+0x0]
    72e0:	xor    esi,esi
    72e2:	mov    edi,0x1e
    72e7:	call   3530 <is_attacked>
    72ec:	test   eax,eax
    72ee:	jne    6fc5 <check_legal+0x55>
    72f4:	xor    esi,esi
    72f6:	mov    edi,0x1d
    72fb:	call   3530 <is_attacked>
    7300:	test   eax,eax
    7302:	jne    6fc5 <check_legal+0x55>
    7308:	xor    esi,esi
    730a:	mov    edi,0x1c
    730f:	call   3530 <is_attacked>
    7314:	xor    r8d,r8d
    7317:	test   eax,eax
    7319:	sete   r8b
    731d:	jmp    6fc8 <check_legal+0x58>
    7322:	nop    WORD PTR [rax+rax*1+0x0]
    7328:	mov    esi,0x1
    732d:	mov    edi,0x72
    7332:	call   3530 <is_attacked>
    7337:	test   eax,eax
    7339:	jne    6fc5 <check_legal+0x55>
    733f:	mov    esi,0x1
    7344:	mov    edi,0x73
    7349:	call   3530 <is_attacked>
    734e:	test   eax,eax
    7350:	jne    6fc5 <check_legal+0x55>
    7356:	mov    esi,0x1
    735b:	mov    edi,0x74
    7360:	call   3530 <is_attacked>
    7365:	xor    r8d,r8d
    7368:	test   eax,eax
    736a:	sete   r8b
    736e:	jmp    6fc8 <check_legal+0x58>
    7373:	nop    DWORD PTR [rax+rax*1+0x0]
    7378:	mov    esi,0x1
    737d:	mov    edi,0x72
    7382:	call   3530 <is_attacked>
    7387:	test   eax,eax
    7389:	jne    6fc5 <check_legal+0x55>
    738f:	mov    esi,0x1
    7394:	mov    edi,0x71
    7399:	call   3530 <is_attacked>
    739e:	test   eax,eax
    73a0:	jne    6fc5 <check_legal+0x55>
    73a6:	mov    esi,0x1
    73ab:	mov    edi,0x70
    73b0:	call   3530 <is_attacked>
    73b5:	xor    r8d,r8d
    73b8:	test   eax,eax
    73ba:	sete   r8b
    73be:	jmp    6fc8 <check_legal+0x58>
    73c3:	nop    DWORD PTR [rax+rax*1+0x0]
    73c8:	lea    r10,[rip+0x15271]        # 1c640 <Xrank>
    73cf:	movsxd rax,edi
    73d2:	movsxd rdx,ecx
    73d5:	mov    ebx,DWORD PTR [r10+rax*4]
    73d9:	cmp    DWORD PTR [r10+rdx*4],ebx
    73dd:	je     740b <check_legal+0x49b>
    73df:	lea    r9,[rip+0x1501a]        # 1c400 <Xdiagl>
    73e6:	mov    ebx,DWORD PTR [r9+rax*4]
    73ea:	cmp    DWORD PTR [r9+rdx*4],ebx
    73ee:	je     740b <check_legal+0x49b>
    73f0:	lea    r9,[rip+0x14dc9]        # 1c1c0 <Xdiagr>
    73f7:	mov    r8d,0x1
    73fd:	mov    eax,DWORD PTR [r9+rax*4]
    7401:	cmp    DWORD PTR [r9+rdx*4],eax
    7405:	jne    6fc8 <check_legal+0x58>
    740b:	lea    rdx,[rip+0x2764ae]        # 27d8c0 <board>
    7412:	mov    r9d,DWORD PTR [rdx+rsi*4]
    7416:	cmp    r9d,0x5
    741a:	je     72c6 <check_legal+0x356>
    7420:	lea    r8,[rip+0x15459]        # 1c880 <Xfile>
    7427:	movsxd rax,ecx
    742a:	movsxd r11,edi
    742d:	mov    esi,DWORD PTR [r8+rax*4]
    7431:	mov    ebx,DWORD PTR [r8+r11*4]
    7435:	lea    r10,[rip+0x15204]        # 1c640 <Xrank>
    743c:	cmp    esi,ebx
    743e:	je     7928 <check_legal+0x9b8>
    7444:	mov    ebx,DWORD PTR [r10+r11*4]
    7448:	lea    r9,[rip+0x14fb1]        # 1c400 <Xdiagl>
    744f:	cmp    DWORD PTR [r10+rax*4],ebx
    7453:	jne    71e4 <check_legal+0x274>
    7459:	cmp    ecx,edi
    745b:	jge    7a71 <check_legal+0xb01>
    7461:	lea    eax,[rdi-0x1]
    7464:	cdqe   
    7466:	mov    ecx,DWORD PTR [rdx+rax*4]
    7469:	cmp    ecx,0xd
    746c:	jne    7488 <check_legal+0x518>
    746e:	lea    rax,[rdx+r11*4]
    7472:	nop    WORD PTR [rax+rax*1+0x0]
    7478:	mov    ecx,DWORD PTR [rax-0x8]
    747b:	sub    rax,0x4
    747f:	cmp    ecx,0xd
    7482:	je     7478 <check_legal+0x508>
    7484:	nop    DWORD PTR [rax+0x0]
    7488:	and    ecx,0xfffffffd
    748b:	xor    r8d,r8d
    748e:	cmp    ecx,0x8
    7491:	setne  r8b
    7495:	jmp    6fc8 <check_legal+0x58>
    749a:	nop    WORD PTR [rax+rax*1+0x0]
    74a0:	lea    r10,[rip+0x15199]        # 1c640 <Xrank>
    74a7:	movsxd rax,edi
    74aa:	movsxd rdx,ecx
    74ad:	mov    ebx,DWORD PTR [r10+rax*4]
    74b1:	cmp    DWORD PTR [r10+rdx*4],ebx
    74b5:	je     74e3 <check_legal+0x573>
    74b7:	lea    r9,[rip+0x14f42]        # 1c400 <Xdiagl>
    74be:	mov    ebx,DWORD PTR [r9+rax*4]
    74c2:	cmp    DWORD PTR [r9+rdx*4],ebx
    74c6:	je     74e3 <check_legal+0x573>
    74c8:	lea    r9,[rip+0x14cf1]        # 1c1c0 <Xdiagr>
    74cf:	mov    r8d,0x1
    74d5:	mov    eax,DWORD PTR [r9+rax*4]
    74d9:	cmp    DWORD PTR [r9+rdx*4],eax
    74dd:	jne    6fc8 <check_legal+0x58>
    74e3:	lea    rdx,[rip+0x2763d6]        # 27d8c0 <board>
    74ea:	mov    r9d,DWORD PTR [rdx+rsi*4]
    74ee:	cmp    r9d,0x6
    74f2:	je     729e <check_legal+0x32e>
    74f8:	lea    rsi,[rip+0x15381]        # 1c880 <Xfile>
    74ff:	movsxd r11,edi
    7502:	movsxd rax,ecx
    7505:	mov    ebx,DWORD PTR [rsi+r11*4]
    7509:	mov    esi,DWORD PTR [rsi+rax*4]
    750c:	lea    r10,[rip+0x1512d]        # 1c640 <Xrank>
    7513:	cmp    ebx,esi
    7515:	je     78d8 <check_legal+0x968>
    751b:	mov    ebx,DWORD PTR [r10+rax*4]
    751f:	lea    r9,[rip+0x14eda]        # 1c400 <Xdiagl>
    7526:	cmp    DWORD PTR [r10+r11*4],ebx
    752a:	jne    7104 <check_legal+0x194>
    7530:	cmp    ecx,edi
    7532:	jge    7aa1 <check_legal+0xb31>
    7538:	lea    eax,[rdi-0x1]
    753b:	cdqe   
    753d:	mov    ecx,DWORD PTR [rdx+rax*4]
    7540:	cmp    ecx,0xd
    7543:	jne    7560 <check_legal+0x5f0>
    7545:	lea    rax,[rdx+r11*4]
    7549:	nop    DWORD PTR [rax+0x0]
    7550:	mov    ecx,DWORD PTR [rax-0x8]
    7553:	sub    rax,0x4
    7557:	cmp    ecx,0xd
    755a:	je     7550 <check_legal+0x5e0>
    755c:	nop    DWORD PTR [rax+0x0]
    7560:	sub    ecx,0x7
    7563:	xor    r8d,r8d
    7566:	and    ecx,0xfffffffd
    7569:	setne  r8b
    756d:	jmp    6fc8 <check_legal+0x58>
    7572:	lea    rsi,[rip+0x15307]        # 1c880 <Xfile>
    7579:	movsxd r11,edi
    757c:	movsxd rax,ecx
    757f:	mov    ebx,DWORD PTR [rsi+r11*4]
    7583:	cmp    DWORD PTR [rsi+rax*4],ebx
    7586:	je     78d8 <check_legal+0x968>
    758c:	lea    r10,[rip+0x150ad]        # 1c640 <Xrank>
    7593:	mov    ebx,DWORD PTR [r10+r11*4]
    7597:	cmp    DWORD PTR [r10+rax*4],ebx
    759b:	je     751b <check_legal+0x5ab>
    75a1:	lea    r9,[rip+0x14e58]        # 1c400 <Xdiagl>
    75a8:	mov    ebx,DWORD PTR [r9+r11*4]
    75ac:	cmp    DWORD PTR [r9+rax*4],ebx
    75b0:	je     751b <check_legal+0x5ab>
    75b6:	lea    rsi,[rip+0x14c03]        # 1c1c0 <Xdiagr>
    75bd:	mov    r8d,0x1
    75c3:	mov    ebx,DWORD PTR [rsi+r11*4]
    75c7:	cmp    DWORD PTR [rsi+rax*4],ebx
    75ca:	jne    6fc8 <check_legal+0x58>
    75d0:	jmp    751b <check_legal+0x5ab>
    75d5:	lea    rsi,[rip+0x152a4]        # 1c880 <Xfile>
    75dc:	movsxd r11,edi
    75df:	movsxd rax,ecx
    75e2:	mov    ebx,DWORD PTR [rsi+r11*4]
    75e6:	cmp    DWORD PTR [rsi+rax*4],ebx
    75e9:	je     78d8 <check_legal+0x968>
    75ef:	lea    r10,[rip+0x1504a]        # 1c640 <Xrank>
    75f6:	mov    ebx,DWORD PTR [r10+r11*4]
    75fa:	cmp    DWORD PTR [r10+rax*4],ebx
    75fe:	je     751b <check_legal+0x5ab>
    7604:	lea    r9,[rip+0x14df5]        # 1c400 <Xdiagl>
    760b:	mov    esi,DWORD PTR [r9+rax*4]
    760f:	cmp    esi,DWORD PTR [r9+r8*4]
    7613:	je     75b6 <check_legal+0x646>
    7615:	mov    r8d,0x1
    761b:	cmp    esi,DWORD PTR [r9+r11*4]
    761f:	jne    6fc8 <check_legal+0x58>
    7625:	jmp    751b <check_legal+0x5ab>
    762a:	lea    rsi,[rip+0x1524f]        # 1c880 <Xfile>
    7631:	movsxd r11,edi
    7634:	movsxd rax,ecx
    7637:	mov    ebx,DWORD PTR [rsi+r11*4]
    763b:	cmp    DWORD PTR [rsi+rax*4],ebx
    763e:	je     7928 <check_legal+0x9b8>
    7644:	lea    r10,[rip+0x14ff5]        # 1c640 <Xrank>
    764b:	mov    ebx,DWORD PTR [r10+r11*4]
    764f:	cmp    DWORD PTR [r10+rax*4],ebx
    7653:	je     7444 <check_legal+0x4d4>
    7659:	lea    r9,[rip+0x14da0]        # 1c400 <Xdiagl>
    7660:	mov    esi,DWORD PTR [r9+rax*4]
    7664:	cmp    esi,DWORD PTR [r9+r8*4]
    7668:	je     7754 <check_legal+0x7e4>
    766e:	mov    r8d,0x1
    7674:	cmp    esi,DWORD PTR [r9+r11*4]
    7678:	jne    6fc8 <check_legal+0x58>
    767e:	jmp    7444 <check_legal+0x4d4>
    7683:	movsxd rax,ecx
    7686:	lea    rbx,[rip+0x151f3]        # 1c880 <Xfile>
    768d:	lea    rbp,[rip+0x14b2c]        # 1c1c0 <Xdiagr>
    7694:	mov    esi,DWORD PTR [rbx+rax*4]
    7697:	mov    r12d,DWORD PTR [rbp+rax*4+0x0]
    769c:	cmp    esi,DWORD PTR [rbx+r8*4]
    76a0:	je     7b91 <check_legal+0xc21>
    76a6:	lea    r10,[rip+0x14f93]        # 1c640 <Xrank>
    76ad:	movsxd r11,edi
    76b0:	mov    r13d,DWORD PTR [r10+rax*4]
    76b4:	mov    ebx,DWORD PTR [rbx+r11*4]
    76b8:	cmp    r13d,DWORD PTR [r10+r8*4]
    76bc:	je     7c0f <check_legal+0xc9f>
    76c2:	lea    r9,[rip+0x14d37]        # 1c400 <Xdiagl>
    76c9:	mov    r14d,DWORD PTR [r9+rax*4]
    76cd:	cmp    r14d,DWORD PTR [r9+r8*4]
    76d1:	je     7c75 <check_legal+0xd05>
    76d7:	cmp    DWORD PTR [rbp+r8*4+0x0],r12d
    76dc:	jne    750c <check_legal+0x59c>
    76e2:	cmp    r14d,DWORD PTR [r9+r11*4]
    76e6:	je     750c <check_legal+0x59c>
    76ec:	cmp    esi,ebx
    76ee:	je     78d8 <check_legal+0x968>
    76f4:	mov    r8d,0x1
    76fa:	cmp    r13d,DWORD PTR [r10+r11*4]
    76fe:	jne    6fc8 <check_legal+0x58>
    7704:	jmp    751b <check_legal+0x5ab>
    7709:	nop    DWORD PTR [rax+0x0]
    7710:	lea    rsi,[rip+0x15169]        # 1c880 <Xfile>
    7717:	movsxd r11,edi
    771a:	movsxd rax,ecx
    771d:	mov    ebx,DWORD PTR [rsi+r11*4]
    7721:	cmp    DWORD PTR [rsi+rax*4],ebx
    7724:	je     7928 <check_legal+0x9b8>
    772a:	lea    r10,[rip+0x14f0f]        # 1c640 <Xrank>
    7731:	mov    ebx,DWORD PTR [r10+r11*4]
    7735:	cmp    DWORD PTR [r10+rax*4],ebx
    7739:	je     7444 <check_legal+0x4d4>
    773f:	lea    r9,[rip+0x14cba]        # 1c400 <Xdiagl>
    7746:	mov    ebx,DWORD PTR [r9+r11*4]
    774a:	cmp    DWORD PTR [r9+rax*4],ebx
    774e:	je     7444 <check_legal+0x4d4>
    7754:	lea    rsi,[rip+0x14a65]        # 1c1c0 <Xdiagr>
    775b:	mov    r8d,0x1
    7761:	mov    ebx,DWORD PTR [rsi+r11*4]
    7765:	cmp    DWORD PTR [rsi+rax*4],ebx
    7768:	jne    6fc8 <check_legal+0x58>
    776e:	jmp    7444 <check_legal+0x4d4>
    7773:	movsxd rax,ecx
    7776:	lea    rbx,[rip+0x15103]        # 1c880 <Xfile>
    777d:	lea    rbp,[rip+0x14a3c]        # 1c1c0 <Xdiagr>
    7784:	mov    esi,DWORD PTR [rbx+rax*4]
    7787:	mov    r12d,DWORD PTR [rbp+rax*4+0x0]
    778c:	cmp    esi,DWORD PTR [rbx+r8*4]
    7790:	je     7bd0 <check_legal+0xc60>
    7796:	lea    r10,[rip+0x14ea3]        # 1c640 <Xrank>
    779d:	movsxd r11,edi
    77a0:	mov    r13d,DWORD PTR [r10+rax*4]
    77a4:	mov    ebx,DWORD PTR [rbx+r11*4]
    77a8:	cmp    r13d,DWORD PTR [r10+r8*4]
    77ac:	je     7c42 <check_legal+0xcd2>
    77b2:	lea    r9,[rip+0x14c47]        # 1c400 <Xdiagl>
    77b9:	mov    r14d,DWORD PTR [r9+rax*4]
    77bd:	cmp    r14d,DWORD PTR [r9+r8*4]
    77c1:	je     7c85 <check_legal+0xd15>
    77c7:	cmp    DWORD PTR [rbp+r8*4+0x0],r12d
    77cc:	jne    7435 <check_legal+0x4c5>
    77d2:	cmp    r14d,DWORD PTR [r9+r11*4]
    77d6:	je     7435 <check_legal+0x4c5>
    77dc:	cmp    esi,ebx
    77de:	je     7928 <check_legal+0x9b8>
    77e4:	mov    r8d,0x1
    77ea:	cmp    r13d,DWORD PTR [r10+r11*4]
    77ee:	jne    6fc8 <check_legal+0x58>
    77f4:	jmp    7444 <check_legal+0x4d4>
    77f9:	nop    DWORD PTR [rax+0x0]
    7800:	lea    rsi,[rip+0x149b9]        # 1c1c0 <Xdiagr>
    7807:	movsxd r11,edi
    780a:	movsxd rax,ecx
    780d:	mov    ebx,DWORD PTR [rsi+r11*4]
    7811:	cmp    DWORD PTR [rsi+rax*4],ebx
    7814:	je     784c <check_legal+0x8dc>
    7816:	lea    r9,[rip+0x14be3]        # 1c400 <Xdiagl>
    781d:	mov    ebx,DWORD PTR [r9+r11*4]
    7821:	cmp    DWORD PTR [r9+rax*4],ebx
    7825:	je     784c <check_legal+0x8dc>
    7827:	lea    r10,[rip+0x14e12]        # 1c640 <Xrank>
    782e:	mov    esi,DWORD PTR [r10+rax*4]
    7832:	cmp    esi,DWORD PTR [r10+r8*4]
    7836:	je     7909 <check_legal+0x999>
    783c:	mov    r8d,0x1
    7842:	cmp    esi,DWORD PTR [r10+r11*4]
    7846:	jne    6fc8 <check_legal+0x58>
    784c:	lea    r8,[rip+0x1502d]        # 1c880 <Xfile>
    7853:	mov    esi,DWORD PTR [r8+rax*4]
    7857:	mov    ebx,DWORD PTR [r8+r11*4]
    785b:	jmp    7435 <check_legal+0x4c5>
    7860:	lea    rsi,[rip+0x14959]        # 1c1c0 <Xdiagr>
    7867:	movsxd r11,edi
    786a:	movsxd rax,ecx
    786d:	mov    ebx,DWORD PTR [rsi+r11*4]
    7871:	cmp    DWORD PTR [rsi+rax*4],ebx
    7874:	je     78a8 <check_legal+0x938>
    7876:	lea    r9,[rip+0x14b83]        # 1c400 <Xdiagl>
    787d:	mov    ebx,DWORD PTR [r9+r11*4]
    7881:	cmp    DWORD PTR [r9+rax*4],ebx
    7885:	je     78a8 <check_legal+0x938>
    7887:	lea    r10,[rip+0x14db2]        # 1c640 <Xrank>
    788e:	mov    esi,DWORD PTR [r10+rax*4]
    7892:	cmp    esi,DWORD PTR [r10+r8*4]
    7896:	je     78bb <check_legal+0x94b>
    7898:	mov    r8d,0x1
    789e:	cmp    esi,DWORD PTR [r10+r11*4]
    78a2:	jne    6fc8 <check_legal+0x58>
    78a8:	lea    rsi,[rip+0x14fd1]        # 1c880 <Xfile>
    78af:	mov    ebx,DWORD PTR [rsi+r11*4]
    78b3:	mov    esi,DWORD PTR [rsi+rax*4]
    78b6:	jmp    750c <check_legal+0x59c>
    78bb:	lea    rsi,[rip+0x14fbe]        # 1c880 <Xfile>
    78c2:	mov    r8d,0x1
    78c8:	mov    ebx,DWORD PTR [rsi+r11*4]
    78cc:	cmp    DWORD PTR [rsi+rax*4],ebx
    78cf:	jne    6fc8 <check_legal+0x58>
    78d5:	nop    DWORD PTR [rax]
    78d8:	cmp    ecx,edi
    78da:	jge    798e <check_legal+0xa1e>
    78e0:	lea    eax,[rdi-0xc]
    78e3:	cdqe   
    78e5:	mov    ecx,DWORD PTR [rdx+rax*4]
    78e8:	cmp    ecx,0xd
    78eb:	jne    7560 <check_legal+0x5f0>
    78f1:	lea    rax,[rdx+r11*4]
    78f5:	nop    DWORD PTR [rax]
    78f8:	mov    ecx,DWORD PTR [rax-0x60]
    78fb:	sub    rax,0x30
    78ff:	cmp    ecx,0xd
    7902:	je     78f8 <check_legal+0x988>
    7904:	jmp    7560 <check_legal+0x5f0>
    7909:	lea    rsi,[rip+0x14f70]        # 1c880 <Xfile>
    7910:	mov    r8d,0x1
    7916:	mov    ebx,DWORD PTR [rsi+r11*4]
    791a:	cmp    DWORD PTR [rsi+rax*4],ebx
    791d:	jne    6fc8 <check_legal+0x58>
    7923:	nop    DWORD PTR [rax+rax*1+0x0]
    7928:	cmp    ecx,edi
    792a:	jge    79b9 <check_legal+0xa49>
    7930:	lea    eax,[rdi-0xc]
    7933:	cdqe   
    7935:	mov    ecx,DWORD PTR [rdx+rax*4]
    7938:	cmp    ecx,0xd
    793b:	jne    7488 <check_legal+0x518>
    7941:	lea    rax,[rdx+r11*4]
    7945:	nop    DWORD PTR [rax]
    7948:	mov    ecx,DWORD PTR [rax-0x60]
    794b:	sub    rax,0x30
    794f:	cmp    ecx,0xd
    7952:	je     7948 <check_legal+0x9d8>
    7954:	jmp    7488 <check_legal+0x518>
    7959:	nop    DWORD PTR [rax+0x0]
    7960:	lea    rdx,[rip+0x275f59]        # 27d8c0 <board>
    7967:	cmp    DWORD PTR [rdx+rsi*4],0x5
    796b:	je     72c6 <check_legal+0x356>
    7971:	jmp    7928 <check_legal+0x9b8>
    7973:	nop    DWORD PTR [rax+rax*1+0x0]
    7978:	lea    rdx,[rip+0x275f41]        # 27d8c0 <board>
    797f:	cmp    DWORD PTR [rdx+rsi*4],0x6
    7983:	je     729e <check_legal+0x32e>
    7989:	jmp    78d8 <check_legal+0x968>
    798e:	lea    eax,[rdi+0xc]
    7991:	cdqe   
    7993:	mov    ecx,DWORD PTR [rdx+rax*4]
    7996:	cmp    ecx,0xd
    7999:	jne    7560 <check_legal+0x5f0>
    799f:	lea    rax,[rdx+r11*4]
    79a3:	nop    DWORD PTR [rax+rax*1+0x0]
    79a8:	mov    ecx,DWORD PTR [rax+0x60]
    79ab:	add    rax,0x30
    79af:	cmp    ecx,0xd
    79b2:	je     79a8 <check_legal+0xa38>
    79b4:	jmp    7560 <check_legal+0x5f0>
    79b9:	lea    eax,[rdi+0xc]
    79bc:	cdqe   
    79be:	mov    ecx,DWORD PTR [rdx+rax*4]
    79c1:	cmp    ecx,0xd
    79c4:	jne    7488 <check_legal+0x518>
    79ca:	lea    rax,[rdx+r11*4]
    79ce:	xchg   ax,ax
    79d0:	mov    ecx,DWORD PTR [rax+0x60]
    79d3:	add    rax,0x30
    79d7:	cmp    ecx,0xd
    79da:	je     79d0 <check_legal+0xa60>
    79dc:	jmp    7488 <check_legal+0x518>
    79e1:	lea    rdx,[rip+0x275ed8]        # 27d8c0 <board>
    79e8:	cmp    DWORD PTR [rdx+rsi*4],0x6
    79ec:	je     729e <check_legal+0x32e>
    79f2:	jmp    7530 <check_legal+0x5c0>
    79f7:	lea    rdx,[rip+0x275ec2]        # 27d8c0 <board>
    79fe:	cmp    DWORD PTR [rdx+rsi*4],0x5
    7a02:	je     72c6 <check_legal+0x356>
    7a08:	jmp    7459 <check_legal+0x4e9>
    7a0d:	cmp    ecx,edi
    7a0f:	jge    7b01 <check_legal+0xb91>
    7a15:	lea    eax,[rdi-0xd]
    7a18:	cdqe   
    7a1a:	mov    ecx,DWORD PTR [rdx+rax*4]
    7a1d:	cmp    ecx,0xd
    7a20:	jne    7154 <check_legal+0x1e4>
    7a26:	lea    rax,[rdx+r11*4]
    7a2a:	nop    WORD PTR [rax+rax*1+0x0]
    7a30:	mov    ecx,DWORD PTR [rax-0x68]
    7a33:	sub    rax,0x34
    7a37:	cmp    ecx,0xd
    7a3a:	je     7a30 <check_legal+0xac0>
    7a3c:	jmp    7154 <check_legal+0x1e4>
    7a41:	cmp    ecx,edi
    7a43:	jge    7ad1 <check_legal+0xb61>
    7a49:	lea    eax,[rdi-0xd]
    7a4c:	cdqe   
    7a4e:	mov    ecx,DWORD PTR [rdx+rax*4]
    7a51:	cmp    ecx,0xd
    7a54:	jne    7234 <check_legal+0x2c4>
    7a5a:	lea    rax,[rdx+r11*4]
    7a5e:	xchg   ax,ax
    7a60:	mov    ecx,DWORD PTR [rax-0x68]
    7a63:	sub    rax,0x34
    7a67:	cmp    ecx,0xd
    7a6a:	je     7a60 <check_legal+0xaf0>
    7a6c:	jmp    7234 <check_legal+0x2c4>
    7a71:	lea    eax,[rdi+0x1]
    7a74:	cdqe   
    7a76:	mov    ecx,DWORD PTR [rdx+rax*4]
    7a79:	cmp    ecx,0xd
    7a7c:	jne    7488 <check_legal+0x518>
    7a82:	lea    rax,[rdx+r11*4]
    7a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7a90:	mov    ecx,DWORD PTR [rax+0x8]
    7a93:	add    rax,0x4
    7a97:	cmp    ecx,0xd
    7a9a:	je     7a90 <check_legal+0xb20>
    7a9c:	jmp    7488 <check_legal+0x518>
    7aa1:	lea    eax,[rdi+0x1]
    7aa4:	cdqe   
    7aa6:	mov    ecx,DWORD PTR [rdx+rax*4]
    7aa9:	cmp    ecx,0xd
    7aac:	jne    7560 <check_legal+0x5f0>
    7ab2:	lea    rax,[rdx+r11*4]
    7ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7ac0:	mov    ecx,DWORD PTR [rax+0x8]
    7ac3:	add    rax,0x4
    7ac7:	cmp    ecx,0xd
    7aca:	je     7ac0 <check_legal+0xb50>
    7acc:	jmp    7560 <check_legal+0x5f0>
    7ad1:	lea    eax,[rdi+0xd]
    7ad4:	cdqe   
    7ad6:	mov    ecx,DWORD PTR [rdx+rax*4]
    7ad9:	cmp    ecx,0xd
    7adc:	jne    7234 <check_legal+0x2c4>
    7ae2:	lea    rax,[rdx+r11*4]
    7ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7af0:	mov    ecx,DWORD PTR [rax+0x68]
    7af3:	add    rax,0x34
    7af7:	cmp    ecx,0xd
    7afa:	je     7af0 <check_legal+0xb80>
    7afc:	jmp    7234 <check_legal+0x2c4>
    7b01:	lea    eax,[rdi+0xd]
    7b04:	cdqe   
    7b06:	mov    ecx,DWORD PTR [rdx+rax*4]
    7b09:	cmp    ecx,0xd
    7b0c:	jne    7154 <check_legal+0x1e4>
    7b12:	lea    rax,[rdx+r11*4]
    7b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7b20:	mov    ecx,DWORD PTR [rax+0x68]
    7b23:	add    rax,0x34
    7b27:	cmp    ecx,0xd
    7b2a:	je     7b20 <check_legal+0xbb0>
    7b2c:	jmp    7154 <check_legal+0x1e4>
    7b31:	lea    eax,[rdi+0xb]
    7b34:	cdqe   
    7b36:	mov    ecx,DWORD PTR [rdx+rax*4]
    7b39:	cmp    ecx,0xd
    7b3c:	jne    7234 <check_legal+0x2c4>
    7b42:	lea    rax,[rdx+r11*4]
    7b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7b50:	mov    ecx,DWORD PTR [rax+0x58]
    7b53:	add    rax,0x2c
    7b57:	cmp    ecx,0xd
    7b5a:	je     7b50 <check_legal+0xbe0>
    7b5c:	jmp    7234 <check_legal+0x2c4>
    7b61:	lea    eax,[rdi+0xb]
    7b64:	cdqe   
    7b66:	mov    ecx,DWORD PTR [rdx+rax*4]
    7b69:	cmp    ecx,0xd
    7b6c:	jne    7154 <check_legal+0x1e4>
    7b72:	lea    rax,[rdx+r11*4]
    7b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7b80:	mov    ecx,DWORD PTR [rax+0x58]
    7b83:	add    rax,0x2c
    7b87:	cmp    ecx,0xd
    7b8a:	je     7b80 <check_legal+0xc10>
    7b8c:	jmp    7154 <check_legal+0x1e4>
    7b91:	movsxd r11,edi
    7b94:	cmp    DWORD PTR [rbp+r11*4+0x0],r12d
    7b99:	je     7bc7 <check_legal+0xc57>
    7b9b:	lea    r9,[rip+0x1485e]        # 1c400 <Xdiagl>
    7ba2:	mov    r14d,DWORD PTR [r9+r11*4]
    7ba6:	cmp    DWORD PTR [r9+rax*4],r14d
    7baa:	je     7bc7 <check_legal+0xc57>
    7bac:	lea    r10,[rip+0x14a8d]        # 1c640 <Xrank>
    7bb3:	mov    r8d,0x1
    7bb9:	mov    r14d,DWORD PTR [r10+r11*4]
    7bbd:	cmp    DWORD PTR [r10+rax*4],r14d
    7bc1:	jne    6fc8 <check_legal+0x58>
    7bc7:	mov    ebx,DWORD PTR [rbx+r11*4]
    7bcb:	jmp    750c <check_legal+0x59c>
    7bd0:	movsxd r11,edi
    7bd3:	cmp    DWORD PTR [rbp+r11*4+0x0],r12d
    7bd8:	je     7c06 <check_legal+0xc96>
    7bda:	lea    r9,[rip+0x1481f]        # 1c400 <Xdiagl>
    7be1:	mov    r14d,DWORD PTR [r9+r11*4]
    7be5:	cmp    DWORD PTR [r9+rax*4],r14d
    7be9:	je     7c06 <check_legal+0xc96>
    7beb:	lea    r10,[rip+0x14a4e]        # 1c640 <Xrank>
    7bf2:	mov    r8d,0x1
    7bf8:	mov    r14d,DWORD PTR [r10+r11*4]
    7bfc:	cmp    DWORD PTR [r10+rax*4],r14d
    7c00:	jne    6fc8 <check_legal+0x58>
    7c06:	mov    ebx,DWORD PTR [rbx+r11*4]
    7c0a:	jmp    7435 <check_legal+0x4c5>
    7c0f:	cmp    DWORD PTR [rbp+r11*4+0x0],r12d
    7c14:	je     750c <check_legal+0x59c>
    7c1a:	cmp    esi,ebx
    7c1c:	je     78d8 <check_legal+0x968>
    7c22:	lea    r9,[rip+0x147d7]        # 1c400 <Xdiagl>
    7c29:	mov    r8d,0x1
    7c2f:	mov    ebx,DWORD PTR [r9+r11*4]
    7c33:	cmp    DWORD PTR [r9+rax*4],ebx
    7c37:	jne    6fc8 <check_legal+0x58>
    7c3d:	jmp    751b <check_legal+0x5ab>
    7c42:	cmp    DWORD PTR [rbp+r11*4+0x0],r12d
    7c47:	je     7435 <check_legal+0x4c5>
    7c4d:	cmp    esi,ebx
    7c4f:	je     7928 <check_legal+0x9b8>
    7c55:	lea    r9,[rip+0x147a4]        # 1c400 <Xdiagl>
    7c5c:	mov    r8d,0x1
    7c62:	mov    ebx,DWORD PTR [r9+r11*4]
    7c66:	cmp    DWORD PTR [r9+rax*4],ebx
    7c6a:	jne    6fc8 <check_legal+0x58>
    7c70:	jmp    7444 <check_legal+0x4d4>
    7c75:	cmp    DWORD PTR [rbp+r11*4+0x0],r12d
    7c7a:	jne    76ec <check_legal+0x77c>
    7c80:	jmp    750c <check_legal+0x59c>
    7c85:	cmp    DWORD PTR [rbp+r11*4+0x0],r12d
    7c8a:	jne    77dc <check_legal+0x86c>
    7c90:	jmp    7435 <check_legal+0x4c5>
    7c95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000007ca0 <in_check>:
    7ca0:	endbr64 
    7ca4:	xor    eax,eax
    7ca6:	cmp    DWORD PTR [rip+0x273b13],0x3        # 27b7c0 <Variant>
    7cad:	je     7d00 <in_check+0x60>
    7caf:	sub    rsp,0x8
    7cb3:	cmp    DWORD PTR [rip+0x275866],0x1        # 27d520 <white_to_move>
    7cba:	je     7ce0 <in_check+0x40>
    7cbc:	mov    edi,DWORD PTR [rip+0x275862]        # 27d524 <bking_loc>
    7cc2:	mov    esi,0x1
    7cc7:	call   3530 <is_attacked>
    7ccc:	test   eax,eax
    7cce:	setne  al
    7cd1:	add    rsp,0x8
    7cd5:	movzx  eax,al
    7cd8:	ret    
    7cd9:	nop    DWORD PTR [rax+0x0]
    7ce0:	mov    edi,DWORD PTR [rip+0x2762f6]        # 27dfdc <wking_loc>
    7ce6:	xor    esi,esi
    7ce8:	call   3530 <is_attacked>
    7ced:	test   eax,eax
    7cef:	setne  al
    7cf2:	add    rsp,0x8
    7cf6:	movzx  eax,al
    7cf9:	ret    
    7cfa:	nop    WORD PTR [rax+rax*1+0x0]
    7d00:	ret    
    7d01:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    7d0c:	nop    DWORD PTR [rax+0x0]

0000000000007d10 <f_in_check>:
    7d10:	endbr64 
    7d14:	movsxd rsi,esi
    7d17:	lea    rax,[rsi+rsi*2]
    7d1b:	lea    rsi,[rdi+rax*8]
    7d1f:	xor    eax,eax
    7d21:	cmp    DWORD PTR [rip+0x273a98],0x3        # 27b7c0 <Variant>
    7d28:	je     7f18 <f_in_check+0x208>
    7d2e:	sub    rsp,0x8
    7d32:	movsxd r9,DWORD PTR [rsi+0x4]
    7d36:	lea    rdi,[rip+0x275b83]        # 27d8c0 <board>
    7d3d:	mov    r8d,DWORD PTR [rsi]
    7d40:	cmp    DWORD PTR [rip+0x2757d9],0x1        # 27d520 <white_to_move>
    7d47:	mov    eax,DWORD PTR [rdi+r9*4]
    7d4b:	mov    rdx,r9
    7d4e:	je     7d70 <f_in_check+0x60>
    7d50:	cmp    eax,0xb
    7d53:	ja     7db0 <f_in_check+0xa0>
    7d55:	lea    rcx,[rip+0x15088]        # 1cde4 <lcentral+0x2a4>
    7d5c:	movsxd rax,DWORD PTR [rcx+rax*4]
    7d60:	add    rax,rcx
    7d63:	notrack jmp rax
    7d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7d70:	cmp    eax,0xc
    7d73:	ja     7e72 <f_in_check+0x162>
    7d79:	lea    rcx,[rip+0x15094]        # 1ce14 <lcentral+0x2d4>
    7d80:	movsxd rax,DWORD PTR [rcx+rax*4]
    7d84:	add    rax,rcx
    7d87:	notrack jmp rax
    7d8a:	lea    ecx,[r9+0xb]
    7d8e:	mov    eax,0x1
    7d93:	movsxd rcx,ecx
    7d96:	cmp    DWORD PTR [rdi+rcx*4],0x6
    7d9a:	je     7e4f <f_in_check+0x13f>
    7da0:	add    edx,0xd
    7da3:	movsxd rdx,edx
    7da6:	cmp    DWORD PTR [rdi+rdx*4],0x6
    7daa:	je     7e4f <f_in_check+0x13f>
    7db0:	xor    eax,eax
    7db2:	test   r8d,r8d
    7db5:	je     7e4f <f_in_check+0x13f>
    7dbb:	movsxd rcx,DWORD PTR [rip+0x275762]        # 27d524 <bking_loc>
    7dc2:	lea    r9,[rip+0x14877]        # 1c640 <Xrank>
    7dc9:	movsxd rsi,r8d
    7dcc:	mov    r10d,DWORD PTR [r9+rcx*4]
    7dd0:	mov    rdx,rcx
    7dd3:	cmp    DWORD PTR [r9+rsi*4],r10d
    7dd7:	je     8100 <f_in_check+0x3f0>
    7ddd:	lea    r9,[rip+0x14a9c]        # 1c880 <Xfile>
    7de4:	mov    r11d,DWORD PTR [r9+rcx*4]
    7de8:	cmp    DWORD PTR [r9+rsi*4],r11d
    7dec:	je     8140 <f_in_check+0x430>
    7df2:	lea    r9,[rip+0x14607]        # 1c400 <Xdiagl>
    7df9:	mov    r10d,DWORD PTR [r9+rcx*4]
    7dfd:	cmp    DWORD PTR [r9+rsi*4],r10d
    7e01:	je     84f8 <f_in_check+0x7e8>
    7e07:	lea    r9,[rip+0x143b2]        # 1c1c0 <Xdiagr>
    7e0e:	mov    r10d,DWORD PTR [r9+rcx*4]
    7e12:	cmp    DWORD PTR [r9+rsi*4],r10d
    7e16:	jne    7e4f <f_in_check+0x13f>
    7e18:	cmp    ecx,r8d
    7e1b:	jle    85e8 <f_in_check+0x8d8>
    7e21:	sub    edx,0xb
    7e24:	movsxd rdx,edx
    7e27:	mov    edx,DWORD PTR [rdi+rdx*4]
    7e2a:	cmp    edx,0xd
    7e2d:	jne    7e44 <f_in_check+0x134>
    7e2f:	lea    rax,[rdi+rcx*4]
    7e33:	nop    DWORD PTR [rax+rax*1+0x0]
    7e38:	mov    edx,DWORD PTR [rax-0x58]
    7e3b:	sub    rax,0x2c
    7e3f:	cmp    edx,0xd
    7e42:	je     7e38 <f_in_check+0x128>
    7e44:	and    edx,0xfffffffd
    7e47:	xor    eax,eax
    7e49:	cmp    edx,0x9
    7e4c:	sete   al
    7e4f:	add    rsp,0x8
    7e53:	ret    
    7e54:	lea    ecx,[r9-0xb]
    7e58:	mov    eax,0x1
    7e5d:	movsxd rcx,ecx
    7e60:	cmp    DWORD PTR [rdi+rcx*4],0x5
    7e64:	je     7e4f <f_in_check+0x13f>
    7e66:	sub    edx,0xd
    7e69:	movsxd rdx,edx
    7e6c:	cmp    DWORD PTR [rdi+rdx*4],0x5
    7e70:	je     7e4f <f_in_check+0x13f>
    7e72:	xor    eax,eax
    7e74:	test   r8d,r8d
    7e77:	je     7e4f <f_in_check+0x13f>
    7e79:	movsxd rcx,DWORD PTR [rip+0x27615c]        # 27dfdc <wking_loc>
    7e80:	lea    r9,[rip+0x147b9]        # 1c640 <Xrank>
    7e87:	movsxd rsi,r8d
    7e8a:	mov    r11d,DWORD PTR [r9+rcx*4]
    7e8e:	mov    rdx,rcx
    7e91:	cmp    DWORD PTR [r9+rsi*4],r11d
    7e95:	je     84b8 <f_in_check+0x7a8>
    7e9b:	lea    r9,[rip+0x149de]        # 1c880 <Xfile>
    7ea2:	mov    r11d,DWORD PTR [r9+rcx*4]
    7ea6:	cmp    DWORD PTR [r9+rsi*4],r11d
    7eaa:	je     8548 <f_in_check+0x838>
    7eb0:	lea    r9,[rip+0x14549]        # 1c400 <Xdiagl>
    7eb7:	mov    r10d,DWORD PTR [r9+rcx*4]
    7ebb:	cmp    DWORD PTR [r9+rsi*4],r10d
    7ebf:	je     8478 <f_in_check+0x768>
    7ec5:	lea    r9,[rip+0x142f4]        # 1c1c0 <Xdiagr>
    7ecc:	mov    r10d,DWORD PTR [r9+rcx*4]
    7ed0:	cmp    DWORD PTR [r9+rsi*4],r10d
    7ed4:	jne    7e4f <f_in_check+0x13f>
    7eda:	cmp    ecx,r8d
    7edd:	jle    8860 <f_in_check+0xb50>
    7ee3:	lea    eax,[rcx-0xb]
    7ee6:	cdqe   
    7ee8:	mov    edx,DWORD PTR [rdi+rax*4]
    7eeb:	cmp    edx,0xd
    7eee:	jne    7f04 <f_in_check+0x1f4>
    7ef0:	lea    rax,[rdi+rcx*4]
    7ef4:	nop    DWORD PTR [rax+0x0]
    7ef8:	mov    edx,DWORD PTR [rax-0x58]
    7efb:	sub    rax,0x2c
    7eff:	cmp    edx,0xd
    7f02:	je     7ef8 <f_in_check+0x1e8>
    7f04:	sub    edx,0xa
    7f07:	xor    eax,eax
    7f09:	and    edx,0xfffffffd
    7f0c:	sete   al
    7f0f:	jmp    7e4f <f_in_check+0x13f>
    7f14:	nop    DWORD PTR [rax+0x0]
    7f18:	ret    
    7f19:	movsxd rsi,DWORD PTR [rip+0x275604]        # 27d524 <bking_loc>
    7f20:	lea    rcx,[rip+0x14959]        # 1c880 <Xfile>
    7f27:	mov    r10d,DWORD PTR [rcx+rsi*4]
    7f2b:	mov    rax,rsi
    7f2e:	cmp    DWORD PTR [rcx+r9*4],r10d
    7f32:	je     83f8 <f_in_check+0x6e8>
    7f38:	lea    rcx,[rip+0x14701]        # 1c640 <Xrank>
    7f3f:	mov    esi,DWORD PTR [rcx+rsi*4]
    7f42:	cmp    DWORD PTR [rcx+r9*4],esi
    7f46:	jne    7db0 <f_in_check+0xa0>
    7f4c:	cmp    eax,r9d
    7f4f:	jge    88c1 <f_in_check+0xbb1>
    7f55:	lea    esi,[rax+0x1]
    7f58:	movsxd rcx,esi
    7f5b:	cmp    DWORD PTR [rdi+rcx*4],0xd
    7f5f:	jne    7f80 <f_in_check+0x270>
    7f61:	add    eax,0x2
    7f64:	lea    rcx,[rip+0x275951]        # 27d8bc <FULL+0x18>
    7f6b:	cdqe   
    7f6d:	nop    DWORD PTR [rax]
    7f70:	mov    esi,eax
    7f72:	add    rax,0x1
    7f76:	cmp    DWORD PTR [rcx+rax*4],0xd
    7f7a:	je     7f70 <f_in_check+0x260>
    7f7c:	nop    DWORD PTR [rax+0x0]
    7f80:	mov    eax,0x1
    7f85:	cmp    edx,esi
    7f87:	jne    7db0 <f_in_check+0xa0>
    7f8d:	jmp    7e4f <f_in_check+0x13f>
    7f92:	movsxd rcx,DWORD PTR [rip+0x27558b]        # 27d524 <bking_loc>
    7f99:	lea    rsi,[rip+0x148e0]        # 1c880 <Xfile>
    7fa0:	mov    r11d,DWORD PTR [rsi+rcx*4]
    7fa4:	mov    rax,rcx
    7fa7:	cmp    DWORD PTR [rsi+r9*4],r11d
    7fab:	je     83b8 <f_in_check+0x6a8>
    7fb1:	lea    rsi,[rip+0x14688]        # 1c640 <Xrank>
    7fb8:	mov    r11d,DWORD PTR [rsi+rcx*4]
    7fbc:	cmp    DWORD PTR [rsi+r9*4],r11d
    7fc0:	je     8618 <f_in_check+0x908>
    7fc6:	lea    rsi,[rip+0x14433]        # 1c400 <Xdiagl>
    7fcd:	mov    r10d,DWORD PTR [rsi+rcx*4]
    7fd1:	cmp    DWORD PTR [rsi+r9*4],r10d
    7fd5:	je     87f0 <f_in_check+0xae0>
    7fdb:	lea    rsi,[rip+0x141de]        # 1c1c0 <Xdiagr>
    7fe2:	mov    ecx,DWORD PTR [rsi+rcx*4]
    7fe5:	cmp    DWORD PTR [rsi+r9*4],ecx
    7fe9:	jne    7db0 <f_in_check+0xa0>
    7fef:	cmp    eax,r9d
    7ff2:	jge    8ae1 <f_in_check+0xdd1>
    7ff8:	lea    esi,[rax+0xb]
    7ffb:	movsxd rcx,esi
    7ffe:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8002:	jne    7f80 <f_in_check+0x270>
    8008:	add    eax,0x16
    800b:	lea    rcx,[rip+0x275882]        # 27d894 <squares+0x234>
    8012:	cdqe   
    8014:	nop    DWORD PTR [rax+0x0]
    8018:	mov    esi,eax
    801a:	add    rax,0xb
    801e:	cmp    DWORD PTR [rcx+rax*4],0xd
    8022:	je     8018 <f_in_check+0x308>
    8024:	jmp    7f80 <f_in_check+0x270>
    8029:	movsxd rsi,DWORD PTR [rip+0x2754f4]        # 27d524 <bking_loc>
    8030:	lea    rcx,[rip+0x143c9]        # 1c400 <Xdiagl>
    8037:	mov    r11d,DWORD PTR [rcx+rsi*4]
    803b:	mov    rax,rsi
    803e:	cmp    DWORD PTR [rcx+r9*4],r11d
    8042:	je     8438 <f_in_check+0x728>
    8048:	lea    rcx,[rip+0x14171]        # 1c1c0 <Xdiagr>
    804f:	mov    esi,DWORD PTR [rcx+rsi*4]
    8052:	cmp    DWORD PTR [rcx+r9*4],esi
    8056:	jne    7db0 <f_in_check+0xa0>
    805c:	cmp    eax,r9d
    805f:	jge    8921 <f_in_check+0xc11>
    8065:	lea    esi,[rax+0xb]
    8068:	movsxd rcx,esi
    806b:	cmp    DWORD PTR [rdi+rcx*4],0xd
    806f:	jne    7f80 <f_in_check+0x270>
    8075:	add    eax,0x16
    8078:	lea    rcx,[rip+0x275815]        # 27d894 <squares+0x234>
    807f:	cdqe   
    8081:	nop    DWORD PTR [rax+0x0]
    8088:	mov    esi,eax
    808a:	add    rax,0xb
    808e:	cmp    DWORD PTR [rcx+rax*4],0xd
    8092:	je     8088 <f_in_check+0x378>
    8094:	jmp    7f80 <f_in_check+0x270>
    8099:	lea    rcx,[rip+0x14e24]        # 1cec4 <knight_o.4552+0x4>
    80a0:	mov    esi,DWORD PTR [rip+0x27547e]        # 27d524 <bking_loc>
    80a6:	mov    eax,0xa
    80ab:	lea    r9,[rcx+0x1c]
    80af:	jmp    80be <f_in_check+0x3ae>
    80b1:	nop    DWORD PTR [rax+0x0]
    80b8:	mov    eax,DWORD PTR [rcx]
    80ba:	add    rcx,0x4
    80be:	add    eax,esi
    80c0:	cmp    eax,edx
    80c2:	je     8538 <f_in_check+0x828>
    80c8:	cmp    rcx,r9
    80cb:	jne    80b8 <f_in_check+0x3a8>
    80cd:	jmp    7db0 <f_in_check+0xa0>
    80d2:	mov    eax,DWORD PTR [rsi+0x10]
    80d5:	test   eax,eax
    80d7:	je     7db0 <f_in_check+0xa0>
    80dd:	mov    edi,DWORD PTR [rip+0x275441]        # 27d524 <bking_loc>
    80e3:	mov    esi,0x1
    80e8:	call   3530 <is_attacked>
    80ed:	test   eax,eax
    80ef:	setne  al
    80f2:	movzx  eax,al
    80f5:	jmp    7e4f <f_in_check+0x13f>
    80fa:	nop    WORD PTR [rax+rax*1+0x0]
    8100:	cmp    ecx,r8d
    8103:	jle    8350 <f_in_check+0x640>
    8109:	sub    edx,0x1
    810c:	movsxd rdx,edx
    810f:	mov    edx,DWORD PTR [rdi+rdx*4]
    8112:	cmp    edx,0xd
    8115:	jne    812c <f_in_check+0x41c>
    8117:	lea    rax,[rdi+rcx*4]
    811b:	nop    DWORD PTR [rax+rax*1+0x0]
    8120:	mov    edx,DWORD PTR [rax-0x8]
    8123:	sub    rax,0x4
    8127:	cmp    edx,0xd
    812a:	je     8120 <f_in_check+0x410>
    812c:	sub    edx,0x7
    812f:	xor    eax,eax
    8131:	and    edx,0xfffffffd
    8134:	sete   al
    8137:	add    rsp,0x8
    813b:	ret    
    813c:	nop    DWORD PTR [rax+0x0]
    8140:	cmp    ecx,r8d
    8143:	jle    8388 <f_in_check+0x678>
    8149:	sub    edx,0xc
    814c:	movsxd rdx,edx
    814f:	mov    edx,DWORD PTR [rdi+rdx*4]
    8152:	cmp    edx,0xd
    8155:	jne    812c <f_in_check+0x41c>
    8157:	lea    rax,[rdi+rcx*4]
    815b:	nop    DWORD PTR [rax+rax*1+0x0]
    8160:	mov    edx,DWORD PTR [rax-0x60]
    8163:	sub    rax,0x30
    8167:	cmp    edx,0xd
    816a:	je     8160 <f_in_check+0x450>
    816c:	jmp    812c <f_in_check+0x41c>
    816e:	movsxd rsi,DWORD PTR [rip+0x275e67]        # 27dfdc <wking_loc>
    8175:	lea    rcx,[rip+0x14284]        # 1c400 <Xdiagl>
    817c:	mov    r11d,DWORD PTR [rcx+rsi*4]
    8180:	mov    rax,rsi
    8183:	cmp    DWORD PTR [rcx+r9*4],r11d
    8187:	je     8688 <f_in_check+0x978>
    818d:	lea    rcx,[rip+0x1402c]        # 1c1c0 <Xdiagr>
    8194:	mov    esi,DWORD PTR [rcx+rsi*4]
    8197:	cmp    DWORD PTR [rcx+r9*4],esi
    819b:	jne    7e72 <f_in_check+0x162>
    81a1:	cmp    eax,r9d
    81a4:	jge    8ab1 <f_in_check+0xda1>
    81aa:	lea    esi,[rax+0xb]
    81ad:	movsxd rcx,esi
    81b0:	cmp    DWORD PTR [rdi+rcx*4],0xd
    81b4:	jne    81d8 <f_in_check+0x4c8>
    81b6:	add    eax,0x16
    81b9:	lea    rcx,[rip+0x2756d4]        # 27d894 <squares+0x234>
    81c0:	cdqe   
    81c2:	nop    WORD PTR [rax+rax*1+0x0]
    81c8:	mov    esi,eax
    81ca:	add    rax,0xb
    81ce:	cmp    DWORD PTR [rcx+rax*4],0xd
    81d2:	je     81c8 <f_in_check+0x4b8>
    81d4:	nop    DWORD PTR [rax+0x0]
    81d8:	mov    eax,0x1
    81dd:	cmp    edx,esi
    81df:	jne    7e72 <f_in_check+0x162>
    81e5:	jmp    7e4f <f_in_check+0x13f>
    81ea:	movsxd rcx,DWORD PTR [rip+0x275deb]        # 27dfdc <wking_loc>
    81f1:	lea    rsi,[rip+0x14688]        # 1c880 <Xfile>
    81f8:	mov    r11d,DWORD PTR [rsi+rcx*4]
    81fc:	mov    rax,rcx
    81ff:	cmp    DWORD PTR [rsi+r9*4],r11d
    8203:	je     86c8 <f_in_check+0x9b8>
    8209:	lea    rsi,[rip+0x14430]        # 1c640 <Xrank>
    8210:	mov    r11d,DWORD PTR [rsi+rcx*4]
    8214:	cmp    DWORD PTR [rsi+r9*4],r11d
    8218:	je     8889 <f_in_check+0xb79>
    821e:	lea    rsi,[rip+0x141db]        # 1c400 <Xdiagl>
    8225:	mov    r11d,DWORD PTR [rsi+rcx*4]
    8229:	cmp    DWORD PTR [rsi+r9*4],r11d
    822d:	je     89e1 <f_in_check+0xcd1>
    8233:	lea    rsi,[rip+0x13f86]        # 1c1c0 <Xdiagr>
    823a:	mov    ecx,DWORD PTR [rsi+rcx*4]
    823d:	cmp    DWORD PTR [rsi+r9*4],ecx
    8241:	jne    7e72 <f_in_check+0x162>
    8247:	cmp    eax,r9d
    824a:	jge    8b41 <f_in_check+0xe31>
    8250:	lea    esi,[rax+0xb]
    8253:	movsxd rcx,esi
    8256:	cmp    DWORD PTR [rdi+rcx*4],0xd
    825a:	jne    81d8 <f_in_check+0x4c8>
    8260:	add    eax,0x16
    8263:	lea    rcx,[rip+0x27562a]        # 27d894 <squares+0x234>
    826a:	cdqe   
    826c:	nop    DWORD PTR [rax+0x0]
    8270:	mov    esi,eax
    8272:	add    rax,0xb
    8276:	cmp    DWORD PTR [rcx+rax*4],0xd
    827a:	je     8270 <f_in_check+0x560>
    827c:	jmp    81d8 <f_in_check+0x4c8>
    8281:	movsxd rsi,DWORD PTR [rip+0x275d54]        # 27dfdc <wking_loc>
    8288:	lea    rcx,[rip+0x145f1]        # 1c880 <Xfile>
    828f:	mov    r10d,DWORD PTR [rcx+rsi*4]
    8293:	mov    rax,rsi
    8296:	cmp    DWORD PTR [rcx+r9*4],r10d
    829a:	je     8708 <f_in_check+0x9f8>
    82a0:	lea    rcx,[rip+0x14399]        # 1c640 <Xrank>
    82a7:	mov    esi,DWORD PTR [rcx+rsi*4]
    82aa:	cmp    DWORD PTR [rcx+r9*4],esi
    82ae:	jne    7e72 <f_in_check+0x162>
    82b4:	cmp    eax,r9d
    82b7:	jge    8a51 <f_in_check+0xd41>
    82bd:	lea    esi,[rax+0x1]
    82c0:	movsxd rcx,esi
    82c3:	cmp    DWORD PTR [rdi+rcx*4],0xd
    82c7:	jne    81d8 <f_in_check+0x4c8>
    82cd:	add    eax,0x2
    82d0:	lea    rcx,[rip+0x2755e5]        # 27d8bc <FULL+0x18>
    82d7:	cdqe   
    82d9:	nop    DWORD PTR [rax+0x0]
    82e0:	mov    esi,eax
    82e2:	add    rax,0x1
    82e6:	cmp    DWORD PTR [rcx+rax*4],0xd
    82ea:	je     82e0 <f_in_check+0x5d0>
    82ec:	jmp    81d8 <f_in_check+0x4c8>
    82f1:	mov    edx,DWORD PTR [rsi+0x10]
    82f4:	test   edx,edx
    82f6:	je     7e72 <f_in_check+0x162>
    82fc:	mov    edi,DWORD PTR [rip+0x275cda]        # 27dfdc <wking_loc>
    8302:	xor    esi,esi
    8304:	call   3530 <is_attacked>
    8309:	test   eax,eax
    830b:	setne  al
    830e:	movzx  eax,al
    8311:	jmp    7e4f <f_in_check+0x13f>
    8316:	lea    rcx,[rip+0x14ba7]        # 1cec4 <knight_o.4552+0x4>
    831d:	mov    esi,DWORD PTR [rip+0x275cb9]        # 27dfdc <wking_loc>
    8323:	mov    eax,0xa
    8328:	lea    r9,[rcx+0x1c]
    832c:	jmp    8336 <f_in_check+0x626>
    832e:	xchg   ax,ax
    8330:	mov    eax,DWORD PTR [rcx]
    8332:	add    rcx,0x4
    8336:	add    eax,esi
    8338:	cmp    eax,edx
    833a:	je     8538 <f_in_check+0x828>
    8340:	cmp    r9,rcx
    8343:	jne    8330 <f_in_check+0x620>
    8345:	jmp    7e72 <f_in_check+0x162>
    834a:	nop    WORD PTR [rax+rax*1+0x0]
    8350:	add    edx,0x1
    8353:	movsxd rdx,edx
    8356:	mov    edx,DWORD PTR [rdi+rdx*4]
    8359:	cmp    edx,0xd
    835c:	jne    812c <f_in_check+0x41c>
    8362:	lea    rax,[rdi+rcx*4]
    8366:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8370:	mov    edx,DWORD PTR [rax+0x8]
    8373:	add    rax,0x4
    8377:	cmp    edx,0xd
    837a:	je     8370 <f_in_check+0x660>
    837c:	jmp    812c <f_in_check+0x41c>
    8381:	nop    DWORD PTR [rax+0x0]
    8388:	add    edx,0xc
    838b:	movsxd rdx,edx
    838e:	mov    edx,DWORD PTR [rdi+rdx*4]
    8391:	cmp    edx,0xd
    8394:	jne    812c <f_in_check+0x41c>
    839a:	lea    rax,[rdi+rcx*4]
    839e:	xchg   ax,ax
    83a0:	mov    edx,DWORD PTR [rax+0x60]
    83a3:	add    rax,0x30
    83a7:	cmp    edx,0xd
    83aa:	je     83a0 <f_in_check+0x690>
    83ac:	jmp    812c <f_in_check+0x41c>
    83b1:	nop    DWORD PTR [rax+0x0]
    83b8:	cmp    ecx,r9d
    83bb:	jge    8748 <f_in_check+0xa38>
    83c1:	lea    esi,[rcx+0xc]
    83c4:	movsxd rcx,esi
    83c7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    83cb:	jne    7f80 <f_in_check+0x270>
    83d1:	add    eax,0x18
    83d4:	lea    rcx,[rip+0x2754b5]        # 27d890 <squares+0x230>
    83db:	cdqe   
    83dd:	nop    DWORD PTR [rax]
    83e0:	mov    esi,eax
    83e2:	add    rax,0xc
    83e6:	cmp    DWORD PTR [rcx+rax*4],0xd
    83ea:	je     83e0 <f_in_check+0x6d0>
    83ec:	jmp    7f80 <f_in_check+0x270>
    83f1:	nop    DWORD PTR [rax+0x0]
    83f8:	cmp    esi,r9d
    83fb:	jge    8780 <f_in_check+0xa70>
    8401:	lea    esi,[rsi+0xc]
    8404:	movsxd rcx,esi
    8407:	cmp    DWORD PTR [rdi+rcx*4],0xd
    840b:	jne    7f80 <f_in_check+0x270>
    8411:	add    eax,0x18
    8414:	lea    rcx,[rip+0x275475]        # 27d890 <squares+0x230>
    841b:	cdqe   
    841d:	nop    DWORD PTR [rax]
    8420:	mov    esi,eax
    8422:	add    rax,0xc
    8426:	cmp    DWORD PTR [rcx+rax*4],0xd
    842a:	je     8420 <f_in_check+0x710>
    842c:	jmp    7f80 <f_in_check+0x270>
    8431:	nop    DWORD PTR [rax+0x0]
    8438:	cmp    esi,r9d
    843b:	jge    87b8 <f_in_check+0xaa8>
    8441:	lea    esi,[rsi+0xd]
    8444:	movsxd rcx,esi
    8447:	cmp    DWORD PTR [rdi+rcx*4],0xd
    844b:	jne    7f80 <f_in_check+0x270>
    8451:	add    eax,0x1a
    8454:	lea    rcx,[rip+0x275431]        # 27d88c <squares+0x22c>
    845b:	cdqe   
    845d:	nop    DWORD PTR [rax]
    8460:	mov    esi,eax
    8462:	add    rax,0xd
    8466:	cmp    DWORD PTR [rcx+rax*4],0xd
    846a:	je     8460 <f_in_check+0x750>
    846c:	jmp    7f80 <f_in_check+0x270>
    8471:	nop    DWORD PTR [rax+0x0]
    8478:	cmp    ecx,r8d
    847b:	jle    8830 <f_in_check+0xb20>
    8481:	lea    eax,[rcx-0xd]
    8484:	cdqe   
    8486:	mov    edx,DWORD PTR [rdi+rax*4]
    8489:	cmp    edx,0xd
    848c:	jne    7f04 <f_in_check+0x1f4>
    8492:	lea    rax,[rdi+rcx*4]
    8496:	nop    WORD PTR cs:[rax+rax*1+0x0]
    84a0:	mov    edx,DWORD PTR [rax-0x68]
    84a3:	sub    rax,0x34
    84a7:	cmp    edx,0xd
    84aa:	je     84a0 <f_in_check+0x790>
    84ac:	jmp    7f04 <f_in_check+0x1f4>
    84b1:	nop    DWORD PTR [rax+0x0]
    84b8:	cmp    ecx,r8d
    84bb:	jle    8580 <f_in_check+0x870>
    84c1:	sub    edx,0x1
    84c4:	movsxd rdx,edx
    84c7:	mov    edx,DWORD PTR [rdi+rdx*4]
    84ca:	cmp    edx,0xd
    84cd:	jne    84e4 <f_in_check+0x7d4>
    84cf:	lea    rax,[rdi+rcx*4]
    84d3:	nop    DWORD PTR [rax+rax*1+0x0]
    84d8:	mov    edx,DWORD PTR [rax-0x8]
    84db:	sub    rax,0x4
    84df:	cmp    edx,0xd
    84e2:	je     84d8 <f_in_check+0x7c8>
    84e4:	and    edx,0xfffffffd
    84e7:	xor    eax,eax
    84e9:	cmp    edx,0x8
    84ec:	sete   al
    84ef:	jmp    7e4f <f_in_check+0x13f>
    84f4:	nop    DWORD PTR [rax+0x0]
    84f8:	cmp    ecx,r8d
    84fb:	jle    85b8 <f_in_check+0x8a8>
    8501:	sub    edx,0xd
    8504:	movsxd rdx,edx
    8507:	mov    edx,DWORD PTR [rdi+rdx*4]
    850a:	cmp    edx,0xd
    850d:	jne    7e44 <f_in_check+0x134>
    8513:	lea    rax,[rdi+rcx*4]
    8517:	nop    WORD PTR [rax+rax*1+0x0]
    8520:	mov    edx,DWORD PTR [rax-0x68]
    8523:	sub    rax,0x34
    8527:	cmp    edx,0xd
    852a:	je     8520 <f_in_check+0x810>
    852c:	jmp    7e44 <f_in_check+0x134>
    8531:	nop    DWORD PTR [rax+0x0]
    8538:	mov    eax,0x1
    853d:	jmp    7e4f <f_in_check+0x13f>
    8542:	nop    WORD PTR [rax+rax*1+0x0]
    8548:	cmp    ecx,r8d
    854b:	jle    8658 <f_in_check+0x948>
    8551:	lea    eax,[rcx-0xc]
    8554:	cdqe   
    8556:	mov    edx,DWORD PTR [rdi+rax*4]
    8559:	cmp    edx,0xd
    855c:	jne    84e4 <f_in_check+0x7d4>
    855e:	lea    rax,[rdi+rcx*4]
    8562:	nop    WORD PTR [rax+rax*1+0x0]
    8568:	mov    edx,DWORD PTR [rax-0x60]
    856b:	sub    rax,0x30
    856f:	cmp    edx,0xd
    8572:	je     8568 <f_in_check+0x858>
    8574:	jmp    84e4 <f_in_check+0x7d4>
    8579:	nop    DWORD PTR [rax+0x0]
    8580:	add    edx,0x1
    8583:	movsxd rdx,edx
    8586:	mov    edx,DWORD PTR [rdi+rdx*4]
    8589:	cmp    edx,0xd
    858c:	jne    84e4 <f_in_check+0x7d4>
    8592:	lea    rax,[rdi+rcx*4]
    8596:	nop    WORD PTR cs:[rax+rax*1+0x0]
    85a0:	mov    edx,DWORD PTR [rax+0x8]
    85a3:	add    rax,0x4
    85a7:	cmp    edx,0xd
    85aa:	je     85a0 <f_in_check+0x890>
    85ac:	jmp    84e4 <f_in_check+0x7d4>
    85b1:	nop    DWORD PTR [rax+0x0]
    85b8:	add    edx,0xd
    85bb:	movsxd rdx,edx
    85be:	mov    edx,DWORD PTR [rdi+rdx*4]
    85c1:	cmp    edx,0xd
    85c4:	jne    7e44 <f_in_check+0x134>
    85ca:	lea    rax,[rdi+rcx*4]
    85ce:	xchg   ax,ax
    85d0:	mov    edx,DWORD PTR [rax+0x68]
    85d3:	add    rax,0x34
    85d7:	cmp    edx,0xd
    85da:	je     85d0 <f_in_check+0x8c0>
    85dc:	jmp    7e44 <f_in_check+0x134>
    85e1:	nop    DWORD PTR [rax+0x0]
    85e8:	add    edx,0xb
    85eb:	movsxd rdx,edx
    85ee:	mov    edx,DWORD PTR [rdi+rdx*4]
    85f1:	cmp    edx,0xd
    85f4:	jne    7e44 <f_in_check+0x134>
    85fa:	lea    rax,[rdi+rcx*4]
    85fe:	xchg   ax,ax
    8600:	mov    edx,DWORD PTR [rax+0x58]
    8603:	add    rax,0x2c
    8607:	cmp    edx,0xd
    860a:	je     8600 <f_in_check+0x8f0>
    860c:	jmp    7e44 <f_in_check+0x134>
    8611:	nop    DWORD PTR [rax+0x0]
    8618:	cmp    ecx,r9d
    861b:	jge    88f1 <f_in_check+0xbe1>
    8621:	lea    esi,[rcx+0x1]
    8624:	movsxd rcx,esi
    8627:	cmp    DWORD PTR [rdi+rcx*4],0xd
    862b:	jne    7f80 <f_in_check+0x270>
    8631:	add    eax,0x2
    8634:	lea    rcx,[rip+0x275281]        # 27d8bc <FULL+0x18>
    863b:	cdqe   
    863d:	nop    DWORD PTR [rax]
    8640:	mov    esi,eax
    8642:	add    rax,0x1
    8646:	cmp    DWORD PTR [rcx+rax*4],0xd
    864a:	je     8640 <f_in_check+0x930>
    864c:	jmp    7f80 <f_in_check+0x270>
    8651:	nop    DWORD PTR [rax+0x0]
    8658:	lea    eax,[rcx+0xc]
    865b:	cdqe   
    865d:	mov    edx,DWORD PTR [rdi+rax*4]
    8660:	cmp    edx,0xd
    8663:	jne    84e4 <f_in_check+0x7d4>
    8669:	lea    rax,[rdi+rcx*4]
    866d:	nop    DWORD PTR [rax]
    8670:	mov    edx,DWORD PTR [rax+0x60]
    8673:	add    rax,0x30
    8677:	cmp    edx,0xd
    867a:	je     8670 <f_in_check+0x960>
    867c:	jmp    84e4 <f_in_check+0x7d4>
    8681:	nop    DWORD PTR [rax+0x0]
    8688:	cmp    esi,r9d
    868b:	jge    89b1 <f_in_check+0xca1>
    8691:	lea    esi,[rsi+0xd]
    8694:	movsxd rcx,esi
    8697:	cmp    DWORD PTR [rdi+rcx*4],0xd
    869b:	jne    81d8 <f_in_check+0x4c8>
    86a1:	add    eax,0x1a
    86a4:	lea    rcx,[rip+0x2751e1]        # 27d88c <squares+0x22c>
    86ab:	cdqe   
    86ad:	nop    DWORD PTR [rax]
    86b0:	mov    esi,eax
    86b2:	add    rax,0xd
    86b6:	cmp    DWORD PTR [rcx+rax*4],0xd
    86ba:	je     86b0 <f_in_check+0x9a0>
    86bc:	jmp    81d8 <f_in_check+0x4c8>
    86c1:	nop    DWORD PTR [rax+0x0]
    86c8:	cmp    ecx,r9d
    86cb:	jge    8951 <f_in_check+0xc41>
    86d1:	lea    esi,[rcx+0xc]
    86d4:	movsxd rcx,esi
    86d7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    86db:	jne    81d8 <f_in_check+0x4c8>
    86e1:	add    eax,0x18
    86e4:	lea    rcx,[rip+0x2751a5]        # 27d890 <squares+0x230>
    86eb:	cdqe   
    86ed:	nop    DWORD PTR [rax]
    86f0:	mov    esi,eax
    86f2:	add    rax,0xc
    86f6:	cmp    DWORD PTR [rcx+rax*4],0xd
    86fa:	je     86f0 <f_in_check+0x9e0>
    86fc:	jmp    81d8 <f_in_check+0x4c8>
    8701:	nop    DWORD PTR [rax+0x0]
    8708:	cmp    esi,r9d
    870b:	jge    8981 <f_in_check+0xc71>
    8711:	lea    esi,[rsi+0xc]
    8714:	movsxd rcx,esi
    8717:	cmp    DWORD PTR [rdi+rcx*4],0xd
    871b:	jne    81d8 <f_in_check+0x4c8>
    8721:	add    eax,0x18
    8724:	lea    rcx,[rip+0x275165]        # 27d890 <squares+0x230>
    872b:	cdqe   
    872d:	nop    DWORD PTR [rax]
    8730:	mov    esi,eax
    8732:	add    rax,0xc
    8736:	cmp    DWORD PTR [rcx+rax*4],0xd
    873a:	je     8730 <f_in_check+0xa20>
    873c:	jmp    81d8 <f_in_check+0x4c8>
    8741:	nop    DWORD PTR [rax+0x0]
    8748:	lea    esi,[rcx-0xc]
    874b:	movsxd rcx,esi
    874e:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8752:	jne    7f80 <f_in_check+0x270>
    8758:	sub    eax,0x18
    875b:	lea    rcx,[rip+0x27518e]        # 27d8f0 <board+0x30>
    8762:	cdqe   
    8764:	nop    DWORD PTR [rax+0x0]
    8768:	mov    esi,eax
    876a:	sub    rax,0xc
    876e:	cmp    DWORD PTR [rcx+rax*4],0xd
    8772:	je     8768 <f_in_check+0xa58>
    8774:	jmp    7f80 <f_in_check+0x270>
    8779:	nop    DWORD PTR [rax+0x0]
    8780:	lea    esi,[rsi-0xc]
    8783:	movsxd rcx,esi
    8786:	cmp    DWORD PTR [rdi+rcx*4],0xd
    878a:	jne    7f80 <f_in_check+0x270>
    8790:	sub    eax,0x18
    8793:	lea    rcx,[rip+0x275156]        # 27d8f0 <board+0x30>
    879a:	cdqe   
    879c:	nop    DWORD PTR [rax+0x0]
    87a0:	mov    esi,eax
    87a2:	sub    rax,0xc
    87a6:	cmp    DWORD PTR [rcx+rax*4],0xd
    87aa:	je     87a0 <f_in_check+0xa90>
    87ac:	jmp    7f80 <f_in_check+0x270>
    87b1:	nop    DWORD PTR [rax+0x0]
    87b8:	lea    esi,[rsi-0xd]
    87bb:	movsxd rcx,esi
    87be:	cmp    DWORD PTR [rdi+rcx*4],0xd
    87c2:	jne    7f80 <f_in_check+0x270>
    87c8:	sub    eax,0x1a
    87cb:	lea    rcx,[rip+0x275122]        # 27d8f4 <board+0x34>
    87d2:	cdqe   
    87d4:	nop    DWORD PTR [rax+0x0]
    87d8:	mov    esi,eax
    87da:	sub    rax,0xd
    87de:	cmp    DWORD PTR [rcx+rax*4],0xd
    87e2:	je     87d8 <f_in_check+0xac8>
    87e4:	jmp    7f80 <f_in_check+0x270>
    87e9:	nop    DWORD PTR [rax+0x0]
    87f0:	cmp    ecx,r9d
    87f3:	jge    8a21 <f_in_check+0xd11>
    87f9:	lea    esi,[rcx+0xd]
    87fc:	movsxd rcx,esi
    87ff:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8803:	jne    7f80 <f_in_check+0x270>
    8809:	add    eax,0x1a
    880c:	lea    rcx,[rip+0x275079]        # 27d88c <squares+0x22c>
    8813:	cdqe   
    8815:	nop    DWORD PTR [rax]
    8818:	mov    esi,eax
    881a:	add    rax,0xd
    881e:	cmp    DWORD PTR [rcx+rax*4],0xd
    8822:	je     8818 <f_in_check+0xb08>
    8824:	jmp    7f80 <f_in_check+0x270>
    8829:	nop    DWORD PTR [rax+0x0]
    8830:	lea    eax,[rcx+0xd]
    8833:	cdqe   
    8835:	mov    edx,DWORD PTR [rdi+rax*4]
    8838:	cmp    edx,0xd
    883b:	jne    7f04 <f_in_check+0x1f4>
    8841:	lea    rax,[rdi+rcx*4]
    8845:	nop    DWORD PTR [rax]
    8848:	mov    edx,DWORD PTR [rax+0x68]
    884b:	add    rax,0x34
    884f:	cmp    edx,0xd
    8852:	je     8848 <f_in_check+0xb38>
    8854:	jmp    7f04 <f_in_check+0x1f4>
    8859:	nop    DWORD PTR [rax+0x0]
    8860:	lea    eax,[rcx+0xb]
    8863:	cdqe   
    8865:	mov    edx,DWORD PTR [rdi+rax*4]
    8868:	cmp    edx,0xd
    886b:	jne    7f04 <f_in_check+0x1f4>
    8871:	lea    rax,[rdi+rcx*4]
    8875:	nop    DWORD PTR [rax]
    8878:	mov    edx,DWORD PTR [rax+0x58]
    887b:	add    rax,0x2c
    887f:	cmp    edx,0xd
    8882:	je     8878 <f_in_check+0xb68>
    8884:	jmp    7f04 <f_in_check+0x1f4>
    8889:	cmp    ecx,r9d
    888c:	jge    8a81 <f_in_check+0xd71>
    8892:	lea    esi,[rcx+0x1]
    8895:	movsxd rcx,esi
    8898:	cmp    DWORD PTR [rdi+rcx*4],0xd
    889c:	jne    81d8 <f_in_check+0x4c8>
    88a2:	add    eax,0x2
    88a5:	lea    rcx,[rip+0x275010]        # 27d8bc <FULL+0x18>
    88ac:	cdqe   
    88ae:	xchg   ax,ax
    88b0:	mov    esi,eax
    88b2:	add    rax,0x1
    88b6:	cmp    DWORD PTR [rcx+rax*4],0xd
    88ba:	je     88b0 <f_in_check+0xba0>
    88bc:	jmp    81d8 <f_in_check+0x4c8>
    88c1:	lea    esi,[rax-0x1]
    88c4:	movsxd rcx,esi
    88c7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    88cb:	jne    7f80 <f_in_check+0x270>
    88d1:	sub    eax,0x2
    88d4:	lea    rcx,[rip+0x274fe9]        # 27d8c4 <board+0x4>
    88db:	cdqe   
    88dd:	nop    DWORD PTR [rax]
    88e0:	mov    esi,eax
    88e2:	sub    rax,0x1
    88e6:	cmp    DWORD PTR [rcx+rax*4],0xd
    88ea:	je     88e0 <f_in_check+0xbd0>
    88ec:	jmp    7f80 <f_in_check+0x270>
    88f1:	lea    esi,[rcx-0x1]
    88f4:	movsxd rcx,esi
    88f7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    88fb:	jne    7f80 <f_in_check+0x270>
    8901:	sub    eax,0x2
    8904:	lea    rcx,[rip+0x274fb9]        # 27d8c4 <board+0x4>
    890b:	cdqe   
    890d:	nop    DWORD PTR [rax]
    8910:	mov    esi,eax
    8912:	sub    rax,0x1
    8916:	cmp    DWORD PTR [rcx+rax*4],0xd
    891a:	je     8910 <f_in_check+0xc00>
    891c:	jmp    7f80 <f_in_check+0x270>
    8921:	lea    esi,[rax-0xb]
    8924:	movsxd rcx,esi
    8927:	cmp    DWORD PTR [rdi+rcx*4],0xd
    892b:	jne    7f80 <f_in_check+0x270>
    8931:	sub    eax,0x16
    8934:	lea    rcx,[rip+0x274fb1]        # 27d8ec <board+0x2c>
    893b:	cdqe   
    893d:	nop    DWORD PTR [rax]
    8940:	mov    esi,eax
    8942:	sub    rax,0xb
    8946:	cmp    DWORD PTR [rcx+rax*4],0xd
    894a:	je     8940 <f_in_check+0xc30>
    894c:	jmp    7f80 <f_in_check+0x270>
    8951:	lea    esi,[rcx-0xc]
    8954:	movsxd rcx,esi
    8957:	cmp    DWORD PTR [rdi+rcx*4],0xd
    895b:	jne    81d8 <f_in_check+0x4c8>
    8961:	sub    eax,0x18
    8964:	lea    rcx,[rip+0x274f85]        # 27d8f0 <board+0x30>
    896b:	cdqe   
    896d:	nop    DWORD PTR [rax]
    8970:	mov    esi,eax
    8972:	sub    rax,0xc
    8976:	cmp    DWORD PTR [rcx+rax*4],0xd
    897a:	je     8970 <f_in_check+0xc60>
    897c:	jmp    81d8 <f_in_check+0x4c8>
    8981:	lea    esi,[rsi-0xc]
    8984:	movsxd rcx,esi
    8987:	cmp    DWORD PTR [rdi+rcx*4],0xd
    898b:	jne    81d8 <f_in_check+0x4c8>
    8991:	sub    eax,0x18
    8994:	lea    rcx,[rip+0x274f55]        # 27d8f0 <board+0x30>
    899b:	cdqe   
    899d:	nop    DWORD PTR [rax]
    89a0:	mov    esi,eax
    89a2:	sub    rax,0xc
    89a6:	cmp    DWORD PTR [rcx+rax*4],0xd
    89aa:	je     89a0 <f_in_check+0xc90>
    89ac:	jmp    81d8 <f_in_check+0x4c8>
    89b1:	lea    esi,[rsi-0xd]
    89b4:	movsxd rcx,esi
    89b7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    89bb:	jne    81d8 <f_in_check+0x4c8>
    89c1:	sub    eax,0x1a
    89c4:	lea    rcx,[rip+0x274f29]        # 27d8f4 <board+0x34>
    89cb:	cdqe   
    89cd:	nop    DWORD PTR [rax]
    89d0:	mov    esi,eax
    89d2:	sub    rax,0xd
    89d6:	cmp    DWORD PTR [rcx+rax*4],0xd
    89da:	je     89d0 <f_in_check+0xcc0>
    89dc:	jmp    81d8 <f_in_check+0x4c8>
    89e1:	cmp    ecx,r9d
    89e4:	jge    8b11 <f_in_check+0xe01>
    89ea:	lea    esi,[rcx+0xd]
    89ed:	movsxd rcx,esi
    89f0:	cmp    DWORD PTR [rdi+rcx*4],0xd
    89f4:	jne    81d8 <f_in_check+0x4c8>
    89fa:	add    eax,0x1a
    89fd:	lea    rcx,[rip+0x274e88]        # 27d88c <squares+0x22c>
    8a04:	cdqe   
    8a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8a10:	mov    esi,eax
    8a12:	add    rax,0xd
    8a16:	cmp    DWORD PTR [rcx+rax*4],0xd
    8a1a:	je     8a10 <f_in_check+0xd00>
    8a1c:	jmp    81d8 <f_in_check+0x4c8>
    8a21:	lea    esi,[rcx-0xd]
    8a24:	movsxd rcx,esi
    8a27:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8a2b:	jne    7f80 <f_in_check+0x270>
    8a31:	sub    eax,0x1a
    8a34:	lea    rcx,[rip+0x274eb9]        # 27d8f4 <board+0x34>
    8a3b:	cdqe   
    8a3d:	nop    DWORD PTR [rax]
    8a40:	mov    esi,eax
    8a42:	sub    rax,0xd
    8a46:	cmp    DWORD PTR [rcx+rax*4],0xd
    8a4a:	je     8a40 <f_in_check+0xd30>
    8a4c:	jmp    7f80 <f_in_check+0x270>
    8a51:	lea    esi,[rax-0x1]
    8a54:	movsxd rcx,esi
    8a57:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8a5b:	jne    81d8 <f_in_check+0x4c8>
    8a61:	sub    eax,0x2
    8a64:	lea    rcx,[rip+0x274e59]        # 27d8c4 <board+0x4>
    8a6b:	cdqe   
    8a6d:	nop    DWORD PTR [rax]
    8a70:	mov    esi,eax
    8a72:	sub    rax,0x1
    8a76:	cmp    DWORD PTR [rcx+rax*4],0xd
    8a7a:	je     8a70 <f_in_check+0xd60>
    8a7c:	jmp    81d8 <f_in_check+0x4c8>
    8a81:	lea    esi,[rcx-0x1]
    8a84:	movsxd rcx,esi
    8a87:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8a8b:	jne    81d8 <f_in_check+0x4c8>
    8a91:	sub    eax,0x2
    8a94:	lea    rcx,[rip+0x274e29]        # 27d8c4 <board+0x4>
    8a9b:	cdqe   
    8a9d:	nop    DWORD PTR [rax]
    8aa0:	mov    esi,eax
    8aa2:	sub    rax,0x1
    8aa6:	cmp    DWORD PTR [rcx+rax*4],0xd
    8aaa:	je     8aa0 <f_in_check+0xd90>
    8aac:	jmp    81d8 <f_in_check+0x4c8>
    8ab1:	lea    esi,[rax-0xb]
    8ab4:	movsxd rcx,esi
    8ab7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8abb:	jne    81d8 <f_in_check+0x4c8>
    8ac1:	sub    eax,0x16
    8ac4:	lea    rcx,[rip+0x274e21]        # 27d8ec <board+0x2c>
    8acb:	cdqe   
    8acd:	nop    DWORD PTR [rax]
    8ad0:	mov    esi,eax
    8ad2:	sub    rax,0xb
    8ad6:	cmp    DWORD PTR [rcx+rax*4],0xd
    8ada:	je     8ad0 <f_in_check+0xdc0>
    8adc:	jmp    81d8 <f_in_check+0x4c8>
    8ae1:	lea    esi,[rax-0xb]
    8ae4:	movsxd rcx,esi
    8ae7:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8aeb:	jne    7f80 <f_in_check+0x270>
    8af1:	sub    eax,0x16
    8af4:	lea    rcx,[rip+0x274df1]        # 27d8ec <board+0x2c>
    8afb:	cdqe   
    8afd:	nop    DWORD PTR [rax]
    8b00:	mov    esi,eax
    8b02:	sub    rax,0xb
    8b06:	cmp    DWORD PTR [rcx+rax*4],0xd
    8b0a:	je     8b00 <f_in_check+0xdf0>
    8b0c:	jmp    7f80 <f_in_check+0x270>
    8b11:	lea    esi,[rcx-0xd]
    8b14:	movsxd rcx,esi
    8b17:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8b1b:	jne    81d8 <f_in_check+0x4c8>
    8b21:	sub    eax,0x1a
    8b24:	lea    rcx,[rip+0x274dc9]        # 27d8f4 <board+0x34>
    8b2b:	cdqe   
    8b2d:	nop    DWORD PTR [rax]
    8b30:	mov    esi,eax
    8b32:	sub    rax,0xd
    8b36:	cmp    DWORD PTR [rcx+rax*4],0xd
    8b3a:	je     8b30 <f_in_check+0xe20>
    8b3c:	jmp    81d8 <f_in_check+0x4c8>
    8b41:	lea    esi,[rax-0xb]
    8b44:	movsxd rcx,esi
    8b47:	cmp    DWORD PTR [rdi+rcx*4],0xd
    8b4b:	jne    81d8 <f_in_check+0x4c8>
    8b51:	sub    eax,0x16
    8b54:	lea    rcx,[rip+0x274d91]        # 27d8ec <board+0x2c>
    8b5b:	cdqe   
    8b5d:	nop    DWORD PTR [rax]
    8b60:	mov    esi,eax
    8b62:	sub    rax,0xb
    8b66:	cmp    DWORD PTR [rcx+rax*4],0xd
    8b6a:	je     8b60 <f_in_check+0xe50>
    8b6c:	jmp    81d8 <f_in_check+0x4c8>
    8b71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    8b7c:	nop    DWORD PTR [rax+0x0]

0000000000008b80 <extended_in_check>:
    8b80:	endbr64 
    8b84:	cmp    DWORD PTR [rip+0x272c35],0x3        # 27b7c0 <Variant>
    8b8b:	push   r12
    8b8d:	je     8df0 <extended_in_check+0x270>
    8b93:	mov    r12d,DWORD PTR [rip+0x274986]        # 27d520 <white_to_move>
    8b9a:	cmp    r12d,0x1
    8b9e:	je     8cd8 <extended_in_check+0x158>
    8ba4:	mov    edi,DWORD PTR [rip+0x27497a]        # 27d524 <bking_loc>
    8baa:	lea    rax,[rip+0x274d0f]        # 27d8c0 <board>
    8bb1:	lea    edx,[rdi-0xc]
    8bb4:	movsxd rdx,edx
    8bb7:	mov    edx,DWORD PTR [rax+rdx*4]
    8bba:	sub    edx,0x7
    8bbd:	and    edx,0xfffffffd
    8bc0:	je     8de0 <extended_in_check+0x260>
    8bc6:	lea    edx,[rdi-0x1]
    8bc9:	movsxd rdx,edx
    8bcc:	mov    edx,DWORD PTR [rax+rdx*4]
    8bcf:	sub    edx,0x7
    8bd2:	and    edx,0xfffffffd
    8bd5:	je     8de0 <extended_in_check+0x260>
    8bdb:	lea    edx,[rdi+0x1]
    8bde:	movsxd rdx,edx
    8be1:	mov    edx,DWORD PTR [rax+rdx*4]
    8be4:	sub    edx,0x7
    8be7:	and    edx,0xfffffffd
    8bea:	je     8de0 <extended_in_check+0x260>
    8bf0:	lea    edx,[rdi+0xc]
    8bf3:	movsxd rdx,edx
    8bf6:	mov    edx,DWORD PTR [rax+rdx*4]
    8bf9:	sub    edx,0x7
    8bfc:	and    edx,0xfffffffd
    8bff:	je     8de0 <extended_in_check+0x260>
    8c05:	lea    edx,[rdi-0xd]
    8c08:	movsxd rdx,edx
    8c0b:	mov    edx,DWORD PTR [rax+rdx*4]
    8c0e:	mov    ecx,edx
    8c10:	and    ecx,0xfffffff7
    8c13:	cmp    ecx,0x1
    8c16:	je     8de0 <extended_in_check+0x260>
    8c1c:	cmp    edx,0xb
    8c1f:	je     8de0 <extended_in_check+0x260>
    8c25:	lea    edx,[rdi-0xb]
    8c28:	movsxd rdx,edx
    8c2b:	mov    edx,DWORD PTR [rax+rdx*4]
    8c2e:	mov    ecx,edx
    8c30:	and    ecx,0xfffffff7
    8c33:	cmp    ecx,0x1
    8c36:	je     8de0 <extended_in_check+0x260>
    8c3c:	cmp    edx,0xb
    8c3f:	je     8de0 <extended_in_check+0x260>
    8c45:	lea    edx,[rdi+0xb]
    8c48:	movsxd rdx,edx
    8c4b:	mov    edx,DWORD PTR [rax+rdx*4]
    8c4e:	and    edx,0xfffffffd
    8c51:	cmp    edx,0x9
    8c54:	je     8de0 <extended_in_check+0x260>
    8c5a:	lea    edx,[rdi+0xd]
    8c5d:	movsxd rdx,edx
    8c60:	mov    edx,DWORD PTR [rax+rdx*4]
    8c63:	and    edx,0xfffffffd
    8c66:	cmp    edx,0x9
    8c69:	je     8de0 <extended_in_check+0x260>
    8c6f:	lea    rcx,[rip+0x1424e]        # 1cec4 <knight_o.4552+0x4>
    8c76:	mov    edx,0xa
    8c7b:	lea    rsi,[rcx+0x1c]
    8c7f:	jmp    8c8e <extended_in_check+0x10e>
    8c81:	nop    DWORD PTR [rax+0x0]
    8c88:	mov    edx,DWORD PTR [rcx]
    8c8a:	add    rcx,0x4
    8c8e:	add    edx,edi
    8c90:	movsxd rdx,edx
    8c93:	cmp    DWORD PTR [rax+rdx*4],0x3
    8c97:	je     8de0 <extended_in_check+0x260>
    8c9d:	cmp    rsi,rcx
    8ca0:	jne    8c88 <extended_in_check+0x108>
    8ca2:	mov    esi,0x1
    8ca7:	xor    r12d,r12d
    8caa:	call   3530 <is_attacked>
    8caf:	test   eax,eax
    8cb1:	je     8de6 <extended_in_check+0x266>
    8cb7:	mov    eax,DWORD PTR [rip+0x272b03]        # 27b7c0 <Variant>
    8cbd:	sub    eax,0x2
    8cc0:	and    eax,0xfffffffd
    8cc3:	je     8de0 <extended_in_check+0x260>
    8cc9:	mov    r12d,0x1
    8ccf:	jmp    8de6 <extended_in_check+0x266>
    8cd4:	nop    DWORD PTR [rax+0x0]
    8cd8:	mov    edi,DWORD PTR [rip+0x2752fe]        # 27dfdc <wking_loc>
    8cde:	lea    rax,[rip+0x274bdb]        # 27d8c0 <board>
    8ce5:	lea    edx,[rdi-0xc]
    8ce8:	movsxd rdx,edx
    8ceb:	mov    edx,DWORD PTR [rax+rdx*4]
    8cee:	and    edx,0xfffffffd
    8cf1:	cmp    edx,0x8
    8cf4:	je     8de0 <extended_in_check+0x260>
    8cfa:	lea    edx,[rdi-0x1]
    8cfd:	movsxd rdx,edx
    8d00:	mov    edx,DWORD PTR [rax+rdx*4]
    8d03:	and    edx,0xfffffffd
    8d06:	cmp    edx,0x8
    8d09:	je     8de0 <extended_in_check+0x260>
    8d0f:	lea    edx,[rdi+0x1]
    8d12:	movsxd rdx,edx
    8d15:	mov    edx,DWORD PTR [rax+rdx*4]
    8d18:	and    edx,0xfffffffd
    8d1b:	cmp    edx,0x8
    8d1e:	je     8de0 <extended_in_check+0x260>
    8d24:	lea    edx,[rdi+0xc]
    8d27:	movsxd rdx,edx
    8d2a:	mov    edx,DWORD PTR [rax+rdx*4]
    8d2d:	and    edx,0xfffffffd
    8d30:	cmp    edx,0x8
    8d33:	je     8de0 <extended_in_check+0x260>
    8d39:	lea    edx,[rdi+0xd]
    8d3c:	movsxd rdx,edx
    8d3f:	mov    edx,DWORD PTR [rax+rdx*4]
    8d42:	mov    ecx,edx
    8d44:	and    ecx,0xfffffff7
    8d47:	cmp    ecx,0x2
    8d4a:	je     8de0 <extended_in_check+0x260>
    8d50:	cmp    edx,0xc
    8d53:	je     8de0 <extended_in_check+0x260>
    8d59:	lea    edx,[rdi+0xb]
    8d5c:	movsxd rdx,edx
    8d5f:	mov    edx,DWORD PTR [rax+rdx*4]
    8d62:	mov    ecx,edx
    8d64:	and    ecx,0xfffffff7
    8d67:	cmp    ecx,0x2
    8d6a:	je     8de0 <extended_in_check+0x260>
    8d6c:	cmp    edx,0xc
    8d6f:	je     8de0 <extended_in_check+0x260>
    8d71:	lea    edx,[rdi-0xb]
    8d74:	movsxd rdx,edx
    8d77:	mov    edx,DWORD PTR [rax+rdx*4]
    8d7a:	sub    edx,0xa
    8d7d:	and    edx,0xfffffffd
    8d80:	je     8de0 <extended_in_check+0x260>
    8d82:	lea    edx,[rdi-0xd]
    8d85:	movsxd rdx,edx
    8d88:	mov    edx,DWORD PTR [rax+rdx*4]
    8d8b:	sub    edx,0xa
    8d8e:	and    edx,0xfffffffd
    8d91:	je     8de0 <extended_in_check+0x260>
    8d93:	lea    rcx,[rip+0x1412a]        # 1cec4 <knight_o.4552+0x4>
    8d9a:	mov    edx,0xa
    8d9f:	lea    rsi,[rcx+0x1c]
    8da3:	jmp    8dae <extended_in_check+0x22e>
    8da5:	nop    DWORD PTR [rax]
    8da8:	mov    edx,DWORD PTR [rcx]
    8daa:	add    rcx,0x4
    8dae:	add    edx,edi
    8db0:	movsxd rdx,edx
    8db3:	cmp    DWORD PTR [rax+rdx*4],0x4
    8db7:	je     8de0 <extended_in_check+0x260>
    8db9:	cmp    rsi,rcx
    8dbc:	jne    8da8 <extended_in_check+0x228>
    8dbe:	xor    esi,esi
    8dc0:	call   3530 <is_attacked>
    8dc5:	test   eax,eax
    8dc7:	je     8df0 <extended_in_check+0x270>
    8dc9:	mov    eax,DWORD PTR [rip+0x2729f1]        # 27b7c0 <Variant>
    8dcf:	sub    eax,0x2
    8dd2:	and    eax,0xfffffffd
    8dd5:	jne    8de6 <extended_in_check+0x266>
    8dd7:	nop    WORD PTR [rax+rax*1+0x0]
    8de0:	mov    r12d,0x2
    8de6:	mov    eax,r12d
    8de9:	pop    r12
    8deb:	ret    
    8dec:	nop    DWORD PTR [rax+0x0]
    8df0:	xor    r12d,r12d
    8df3:	mov    eax,r12d
    8df6:	pop    r12
    8df8:	ret    
    8df9:	nop    DWORD PTR [rax+0x0]

0000000000008e00 <make>:
    8e00:	endbr64 
    8e04:	push   r15
    8e06:	movsxd rsi,esi
    8e09:	lea    rcx,[rip+0x289610]        # 292420 <path_x>
    8e10:	push   r14
    8e12:	lea    rax,[rsi+rsi*2]
    8e16:	push   r13
    8e18:	lea    rax,[rdi+rax*8]
    8e1c:	push   r12
    8e1e:	lea    r12,[rip+0x274a9b]        # 27d8c0 <board>
    8e25:	push   rbp
    8e26:	push   rbx
    8e27:	sub    rsp,0x18
    8e2b:	movsxd rbp,DWORD PTR [rax]
    8e2e:	movsxd rdx,DWORD PTR [rax+0xc]
    8e32:	mov    r9d,DWORD PTR [rax+0x14]
    8e36:	mov    r13d,DWORD PTR [rax+0x4]
    8e3a:	movsxd r8,DWORD PTR [rip+0x28e91f]        # 297760 <ply>
    8e41:	mov    eax,DWORD PTR [rax+0x10]
    8e44:	mov    r15,rbp
    8e47:	mov    esi,DWORD PTR [rip+0x28a893]        # 2936e0 <ep_square>
    8e4d:	mov    DWORD PTR [rip+0x28a889],0x0        # 2936e0 <ep_square>
    8e57:	mov    DWORD PTR [rsp],eax
    8e5a:	mov    rax,r8
    8e5d:	shl    rax,0x4
    8e61:	add    rax,rcx
    8e64:	mov    DWORD PTR [rax+0x8],esi
    8e67:	mov    esi,DWORD PTR [rip+0x274c97]        # 27db04 <fifty>
    8e6d:	mov    DWORD PTR [rax+0xc],esi
    8e70:	mov    eax,DWORD PTR [r12+rbp*4]
    8e74:	lea    edi,[rax-0x1]
    8e77:	cmp    edi,0x1
    8e7a:	jbe    9158 <make+0x358>
    8e80:	movsxd rbx,r13d
    8e83:	xor    edi,edi
    8e85:	cmp    DWORD PTR [r12+rbx*4],0xd
    8e8a:	je     9070 <make+0x270>
    8e90:	mov    DWORD PTR [rip+0x274c6e],edi        # 27db04 <fifty>
    8e96:	test   r15d,r15d
    8e99:	je     9082 <make+0x282>
    8e9f:	lea    r14,[rip+0x2747ba]        # 27d660 <squares>
    8ea6:	lea    r10,[rip+0x60cd3]        # 69b80 <is_promoted>
    8ead:	shl    r8,0x4
    8eb1:	movsxd rsi,DWORD PTR [r14+rbx*4]
    8eb5:	movsxd r11,DWORD PTR [r14+rbp*4]
    8eb9:	add    r8,rcx
    8ebc:	mov    edi,DWORD PTR [r10+rsi*4]
    8ec0:	mov    DWORD PTR [r8],esi
    8ec3:	mov    DWORD PTR [r14+rbx*4],r11d
    8ec7:	mov    DWORD PTR [r8+0x4],edi
    8ecb:	lea    r8,[rip+0x27290e]        # 27b7e0 <pieces>
    8ed2:	mov    DWORD PTR [r8+rsi*4],0x0
    8eda:	mov    DWORD PTR [r14+rbp*4],0x0
    8ee2:	mov    DWORD PTR [r8+r11*4],r13d
    8ee6:	test   r9d,r9d
    8ee9:	je     8fa8 <make+0x1a8>
    8eef:	mov    edi,DWORD PTR [rip+0x28e88f]        # 297784 <hash>
    8ef5:	lea    rsi,[rip+0x28e8c4]        # 2977c0 <zobrist>
    8efc:	cmp    eax,0x1
    8eff:	je     8fff <make+0x1ff>
    8f05:	cmp    eax,0x2
    8f08:	je     9290 <make+0x490>
    8f0e:	lea    rdx,[rip+0x28acab]        # 293bc0 <moved>
    8f15:	mov    r10d,DWORD PTR [rip+0x28e844]        # 297760 <ply>
    8f1c:	lea    r11d,[rax-0x5]
    8f20:	mov    ecx,DWORD PTR [rdx+rbx*4]
    8f23:	add    r10d,0x1
    8f27:	lea    r9d,[rcx+0x1]
    8f2b:	mov    ecx,DWORD PTR [rip+0x2745ef]        # 27d520 <white_to_move>
    8f31:	xor    ecx,0x1
    8f34:	cmp    r11d,0x1
    8f38:	ja     9168 <make+0x368>
    8f3e:	cmp    eax,0x5
    8f41:	je     9300 <make+0x500>
    8f47:	mov    eax,DWORD PTR [rsi+rbp*4+0xd80]
    8f4e:	xor    eax,DWORD PTR [rsi+rbx*4+0xd80]
    8f55:	mov    DWORD PTR [rdx+rbx*4],r9d
    8f59:	xor    edi,eax
    8f5b:	add    DWORD PTR [rdx+rbp*4],0x1
    8f5f:	cmp    DWORD PTR [rsp],0x3
    8f63:	mov    DWORD PTR [r12+rbx*4],0x6
    8f6b:	mov    DWORD PTR [rip+0x2745b2],r13d        # 27d524 <bking_loc>
    8f72:	mov    DWORD PTR [r12+rbp*4],0xd
    8f7a:	mov    DWORD PTR [rip+0x2745a0],ecx        # 27d520 <white_to_move>
    8f80:	mov    DWORD PTR [rip+0x28e7fe],edi        # 297784 <hash>
    8f86:	je     964b <make+0x84b>
    8f8c:	cmp    DWORD PTR [rsp],0x4
    8f90:	je     95e0 <make+0x7e0>
    8f96:	mov    DWORD PTR [rip+0x28e7c3],r10d        # 297760 <ply>
    8f9d:	jmp    9143 <make+0x343>
    8fa2:	nop    WORD PTR [rax+rax*1+0x0]
    8fa8:	movsxd r11,DWORD PTR [r12+rbx*4]
    8fac:	cmp    r11d,0xd
    8fb0:	je     8eef <make+0xef>
    8fb6:	cmp    DWORD PTR [rip+0x272803],0x1        # 27b7c0 <Variant>
    8fbd:	jbe    91c0 <make+0x3c0>
    8fc3:	lea    rdi,[r11+r11*8]
    8fc7:	lea    rsi,[rip+0x1b5b2]        # 24580 <material>
    8fce:	sub    DWORD PTR [rip+0x628cf],0x1        # 6b8a4 <piece_count>
    8fd5:	shl    rdi,0x4
    8fd9:	mov    esi,DWORD PTR [rsi+r11*4]
    8fdd:	sub    DWORD PTR [rip+0x2b4fd],esi        # 344e0 <Material>
    8fe3:	lea    rsi,[rip+0x28e7d6]        # 2977c0 <zobrist>
    8fea:	add    rdi,rbx
    8fed:	mov    edi,DWORD PTR [rsi+rdi*4]
    8ff0:	xor    edi,DWORD PTR [rip+0x28e78e]        # 297784 <hash>
    8ff6:	cmp    eax,0x1
    8ff9:	jne    8f05 <make+0x105>
    8fff:	mov    eax,DWORD PTR [rsi+rbp*4+0x240]
    9006:	test   edx,edx
    9008:	jne    9220 <make+0x420>
    900e:	xor    eax,DWORD PTR [rsi+rbx*4+0x240]
    9015:	xor    edi,eax
    9017:	test   r9d,r9d
    901a:	jne    94e0 <make+0x6e0>
    9020:	lea    eax,[r15+0x18]
    9024:	cmp    eax,r13d
    9027:	jne    9034 <make+0x234>
    9029:	add    r15d,0xc
    902d:	mov    DWORD PTR [rip+0x28a6ac],r15d        # 2936e0 <ep_square>
    9034:	lea    rax,[rip+0x28ab85]        # 293bc0 <moved>
    903b:	mov    DWORD PTR [r12+rbx*4],0x1
    9043:	add    DWORD PTR [rax+rbx*4],0x1
    9047:	xor    DWORD PTR [rip+0x2744d2],0x1        # 27d520 <white_to_move>
    904e:	add    DWORD PTR [rax+rbp*4],0x1
    9052:	add    DWORD PTR [rip+0x28e707],0x1        # 297760 <ply>
    9059:	mov    DWORD PTR [rip+0x28e725],edi        # 297784 <hash>
    905f:	mov    DWORD PTR [r12+rbp*4],0xd
    9067:	jmp    9143 <make+0x343>
    906c:	nop    DWORD PTR [rax+0x0]
    9070:	lea    edi,[rsi+0x1]
    9073:	mov    DWORD PTR [rip+0x274a8b],edi        # 27db04 <fifty>
    9079:	test   r15d,r15d
    907c:	jne    8e9f <make+0x9f>
    9082:	mov    r10d,DWORD PTR [rip+0x27275b]        # 27b7e4 <pieces+0x4>
    9089:	add    DWORD PTR [rip+0x62814],0x1        # 6b8a4 <piece_count>
    9090:	test   r10d,r10d
    9093:	je     9590 <make+0x790>
    9099:	mov    eax,0x2
    909e:	lea    rdi,[rip+0x272737]        # 27b7dc <captures+0x18>
    90a5:	nop    DWORD PTR [rax]
    90a8:	mov    esi,eax
    90aa:	add    rax,0x1
    90ae:	mov    r9d,DWORD PTR [rdi+rax*4]
    90b2:	test   r9d,r9d
    90b5:	jne    90a8 <make+0x2a8>
    90b7:	movsxd rax,esi
    90ba:	lea    rdi,[rip+0x27271f]        # 27b7e0 <pieces>
    90c1:	shl    r8,0x4
    90c5:	mov    DWORD PTR [rsp],edx
    90c8:	mov    DWORD PTR [rdi+rax*4],r13d
    90cc:	lea    rdi,[rip+0x60aad]        # 69b80 <is_promoted>
    90d3:	mov    r9d,DWORD PTR [rdi+rax*4]
    90d7:	mov    DWORD PTR [rdi+rax*4],0x0
    90de:	mov    edi,edx
    90e0:	lea    rax,[rip+0x274579]        # 27d660 <squares>
    90e7:	mov    DWORD PTR [rax+rbx*4],esi
    90ea:	xor    esi,esi
    90ec:	mov    DWORD PTR [rcx+r8*1+0x4],r9d
    90f1:	mov    ecx,DWORD PTR [rip+0x274429]        # 27d520 <white_to_move>
    90f7:	test   ecx,ecx
    90f9:	sete   sil
    90fd:	call   4190 <DropremoveHolding>
    9102:	movsxd rax,DWORD PTR [rsp]
    9106:	lea    rcx,[rip+0x1b473]        # 24580 <material>
    910d:	xor    DWORD PTR [rip+0x27440c],0x1        # 27d520 <white_to_move>
    9114:	add    DWORD PTR [rip+0x28e645],0x1        # 297760 <ply>
    911b:	mov    DWORD PTR [r12+rbx*4],eax
    911f:	mov    ecx,DWORD PTR [rcx+rax*4]
    9122:	lea    rax,[rax+rax*8]
    9126:	shl    rax,0x4
    912a:	add    DWORD PTR [rip+0x2b3b0],ecx        # 344e0 <Material>
    9130:	add    rbx,rax
    9133:	lea    rax,[rip+0x28e686]        # 2977c0 <zobrist>
    913a:	mov    eax,DWORD PTR [rax+rbx*4]
    913d:	xor    DWORD PTR [rip+0x28e641],eax        # 297784 <hash>
    9143:	add    rsp,0x18
    9147:	pop    rbx
    9148:	pop    rbp
    9149:	pop    r12
    914b:	pop    r13
    914d:	pop    r14
    914f:	pop    r15
    9151:	ret    
    9152:	nop    WORD PTR [rax+rax*1+0x0]
    9158:	xor    edi,edi
    915a:	movsxd rbx,r13d
    915d:	jmp    8e90 <make+0x90>
    9162:	nop    WORD PTR [rax+rax*1+0x0]
    9168:	movsxd r8,eax
    916b:	mov    DWORD PTR [rdx+rbx*4],r9d
    916f:	lea    r8,[r8+r8*8]
    9173:	add    DWORD PTR [rdx+rbp*4],0x1
    9177:	shl    r8,0x4
    917b:	mov    DWORD PTR [r12+rbx*4],eax
    917f:	lea    r11,[r8+rbp*1]
    9183:	add    r8,rbx
    9186:	mov    DWORD PTR [r12+rbp*4],0xd
    918e:	mov    r11d,DWORD PTR [rsi+r11*4]
    9192:	xor    r11d,DWORD PTR [rsi+r8*4]
    9196:	mov    DWORD PTR [rip+0x274384],ecx        # 27d520 <white_to_move>
    919c:	xor    edi,r11d
    919f:	mov    DWORD PTR [rip+0x28e5ba],r10d        # 297760 <ply>
    91a6:	mov    DWORD PTR [rip+0x28e5d8],edi        # 297784 <hash>
    91ac:	add    rsp,0x18
    91b0:	pop    rbx
    91b1:	pop    rbp
    91b2:	pop    r12
    91b4:	pop    r13
    91b6:	pop    r14
    91b8:	pop    r15
    91ba:	ret    
    91bb:	nop    DWORD PTR [rax+rax*1+0x0]
    91c0:	mov    eax,DWORD PTR [rip+0x27435a]        # 27d520 <white_to_move>
    91c6:	xor    esi,esi
    91c8:	mov    DWORD PTR [rsp+0x8],edx
    91cc:	mov    DWORD PTR [rsp+0x4],r9d
    91d1:	test   eax,eax
    91d3:	sete   sil
    91d7:	test   edi,edi
    91d9:	mov    edi,r11d
    91dc:	mov    DWORD PTR [rsp+0xc],esi
    91e0:	je     9430 <make+0x630>
    91e6:	call   3f70 <SwitchPromoted>
    91eb:	mov    esi,DWORD PTR [rsp+0xc]
    91ef:	mov    edi,eax
    91f1:	call   3ff0 <addHolding>
    91f6:	movsxd r11,DWORD PTR [r12+rbx*4]
    91fa:	mov    eax,DWORD PTR [r12+rbp*4]
    91fe:	lea    r10,[rip+0x6097b]        # 69b80 <is_promoted>
    9205:	mov    r9d,DWORD PTR [rsp+0x4]
    920a:	movsxd rdx,DWORD PTR [rsp+0x8]
    920f:	lea    r8,[rip+0x2725ca]        # 27b7e0 <pieces>
    9216:	jmp    8fc3 <make+0x1c3>
    921b:	nop    DWORD PTR [rax+rax*1+0x0]
    9220:	lea    rcx,[rip+0x28a999]        # 293bc0 <moved>
    9227:	mov    DWORD PTR [r12+rbx*4],edx
    922b:	add    DWORD PTR [rcx+rbx*4],0x1
    922f:	add    DWORD PTR [rcx+rbp*4],0x1
    9233:	movsxd rcx,DWORD PTR [r14+rbx*4]
    9237:	xor    DWORD PTR [rip+0x2742e2],0x1        # 27d520 <white_to_move>
    923e:	mov    DWORD PTR [r10+rcx*4],0x1
    9246:	lea    rcx,[rdx+rdx*8]
    924a:	shl    rcx,0x4
    924e:	add    DWORD PTR [rip+0x28e50b],0x1        # 297760 <ply>
    9255:	add    rbx,rcx
    9258:	lea    rcx,[rip+0x1b321]        # 24580 <material>
    925f:	mov    DWORD PTR [r12+rbp*4],0xd
    9267:	xor    eax,DWORD PTR [rsi+rbx*4]
    926a:	xor    edi,eax
    926c:	mov    eax,DWORD PTR [rip+0x2b26e]        # 344e0 <Material>
    9272:	sub    eax,DWORD PTR [rip+0x1b30c]        # 24584 <material+0x4>
    9278:	add    eax,DWORD PTR [rcx+rdx*4]
    927b:	mov    DWORD PTR [rip+0x28e503],edi        # 297784 <hash>
    9281:	mov    DWORD PTR [rip+0x2b259],eax        # 344e0 <Material>
    9287:	jmp    9143 <make+0x343>
    928c:	nop    DWORD PTR [rax+0x0]
    9290:	mov    eax,DWORD PTR [rsi+rbp*4+0x480]
    9297:	test   edx,edx
    9299:	jne    93c0 <make+0x5c0>
    929f:	xor    eax,DWORD PTR [rsi+rbx*4+0x480]
    92a6:	xor    edi,eax
    92a8:	test   r9d,r9d
    92ab:	jne    95a0 <make+0x7a0>
    92b1:	lea    eax,[r15-0x18]
    92b5:	cmp    eax,r13d
    92b8:	je     9465 <make+0x665>
    92be:	lea    rax,[rip+0x28a8fb]        # 293bc0 <moved>
    92c5:	mov    DWORD PTR [r12+rbx*4],0x2
    92cd:	add    DWORD PTR [rax+rbx*4],0x1
    92d1:	xor    DWORD PTR [rip+0x274248],0x1        # 27d520 <white_to_move>
    92d8:	add    DWORD PTR [rax+rbp*4],0x1
    92dc:	add    DWORD PTR [rip+0x28e47d],0x1        # 297760 <ply>
    92e3:	mov    DWORD PTR [r12+rbp*4],0xd
    92eb:	mov    DWORD PTR [rip+0x28e493],edi        # 297784 <hash>
    92f1:	jmp    9143 <make+0x343>
    92f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9300:	mov    eax,DWORD PTR [rsi+rbp*4+0xb40]
    9307:	xor    eax,DWORD PTR [rsi+rbx*4+0xb40]
    930e:	mov    DWORD PTR [rdx+rbx*4],r9d
    9312:	xor    edi,eax
    9314:	add    DWORD PTR [rdx+rbp*4],0x1
    9318:	cmp    DWORD PTR [rsp],0x1
    931c:	mov    DWORD PTR [r12+rbx*4],0x5
    9324:	mov    DWORD PTR [rip+0x274cb1],r13d        # 27dfdc <wking_loc>
    932b:	mov    DWORD PTR [r12+rbp*4],0xd
    9333:	mov    DWORD PTR [rip+0x2741e7],ecx        # 27d520 <white_to_move>
    9339:	mov    DWORD PTR [rip+0x28e445],edi        # 297784 <hash>
    933f:	je     9475 <make+0x675>
    9345:	cmp    DWORD PTR [rsp],0x2
    9349:	jne    8f96 <make+0x196>
    934f:	movsxd rdx,DWORD PTR [rip+0x274372]        # 27d6c8 <squares+0x68>
    9356:	mov    eax,DWORD PTR [rip+0x28f48c]        # 2987e8 <zobrist+0x1028>
    935c:	mov    DWORD PTR [rip+0x2745c2],0xd        # 27d928 <board+0x68>
    9366:	xor    eax,DWORD PTR [rip+0x28f488]        # 2987f4 <zobrist+0x1034>
    936c:	add    DWORD PTR [rip+0x28a8b5],0x1        # 293c28 <moved+0x68>
    9373:	xor    edi,eax
    9375:	mov    DWORD PTR [rip+0x274359],edx        # 27d6d4 <squares+0x74>
    937b:	add    DWORD PTR [rip+0x28a8b2],0x1        # 293c34 <moved+0x74>
    9382:	mov    DWORD PTR [rip+0x2745a8],0x7        # 27d934 <board+0x74>
    938c:	mov    DWORD PTR [rip+0x5fe2a],0x2        # 691c0 <white_castled>
    9396:	mov    DWORD PTR [r8+rdx*4],0x1d
    939e:	mov    DWORD PTR [rip+0x274320],0x0        # 27d6c8 <squares+0x68>
    93a8:	mov    DWORD PTR [rip+0x28e3d6],edi        # 297784 <hash>
    93ae:	mov    DWORD PTR [rip+0x28e3ab],r10d        # 297760 <ply>
    93b5:	jmp    9143 <make+0x343>
    93ba:	nop    WORD PTR [rax+rax*1+0x0]
    93c0:	lea    rcx,[rip+0x28a7f9]        # 293bc0 <moved>
    93c7:	mov    DWORD PTR [r12+rbx*4],edx
    93cb:	add    DWORD PTR [rcx+rbx*4],0x1
    93cf:	add    DWORD PTR [rcx+rbp*4],0x1
    93d3:	movsxd rcx,DWORD PTR [r14+rbx*4]
    93d7:	xor    DWORD PTR [rip+0x274142],0x1        # 27d520 <white_to_move>
    93de:	mov    DWORD PTR [r10+rcx*4],0x1
    93e6:	lea    rcx,[rdx+rdx*8]
    93ea:	shl    rcx,0x4
    93ee:	add    DWORD PTR [rip+0x28e36b],0x1        # 297760 <ply>
    93f5:	add    rbx,rcx
    93f8:	lea    rcx,[rip+0x1b181]        # 24580 <material>
    93ff:	mov    DWORD PTR [r12+rbp*4],0xd
    9407:	xor    eax,DWORD PTR [rsi+rbx*4]
    940a:	xor    edi,eax
    940c:	mov    eax,DWORD PTR [rip+0x2b0ce]        # 344e0 <Material>
    9412:	sub    eax,DWORD PTR [rip+0x1b170]        # 24588 <material+0x8>
    9418:	add    eax,DWORD PTR [rcx+rdx*4]
    941b:	mov    DWORD PTR [rip+0x28e363],edi        # 297784 <hash>
    9421:	mov    DWORD PTR [rip+0x2b0b9],eax        # 344e0 <Material>
    9427:	jmp    9143 <make+0x343>
    942c:	nop    DWORD PTR [rax+0x0]
    9430:	call   3ed0 <SwitchColor>
    9435:	mov    esi,DWORD PTR [rsp+0xc]
    9439:	mov    edi,eax
    943b:	call   3ff0 <addHolding>
    9440:	movsxd r11,DWORD PTR [r12+rbx*4]
    9444:	mov    eax,DWORD PTR [r12+rbp*4]
    9448:	lea    r8,[rip+0x272391]        # 27b7e0 <pieces>
    944f:	movsxd rdx,DWORD PTR [rsp+0x8]
    9454:	mov    r9d,DWORD PTR [rsp+0x4]
    9459:	lea    r10,[rip+0x60720]        # 69b80 <is_promoted>
    9460:	jmp    8fc3 <make+0x1c3>
    9465:	sub    r15d,0xc
    9469:	mov    DWORD PTR [rip+0x28a270],r15d        # 2936e0 <ep_square>
    9470:	jmp    92be <make+0x4be>
    9475:	movsxd rdx,DWORD PTR [rip+0x274268]        # 27d6e4 <squares+0x84>
    947c:	mov    eax,DWORD PTR [rip+0x28f382]        # 298804 <zobrist+0x1044>
    9482:	mov    DWORD PTR [rip+0x2744b8],0xd        # 27d944 <board+0x84>
    948c:	xor    eax,DWORD PTR [rip+0x28f36a]        # 2987fc <zobrist+0x103c>
    9492:	add    DWORD PTR [rip+0x28a7ab],0x1        # 293c44 <moved+0x84>
    9499:	xor    edi,eax
    949b:	mov    DWORD PTR [rip+0x27423b],edx        # 27d6dc <squares+0x7c>
    94a1:	add    DWORD PTR [rip+0x28a794],0x1        # 293c3c <moved+0x7c>
    94a8:	mov    DWORD PTR [rip+0x27448a],0x7        # 27d93c <board+0x7c>
    94b2:	mov    DWORD PTR [rip+0x5fd04],0x1        # 691c0 <white_castled>
    94bc:	mov    DWORD PTR [r8+rdx*4],0x1f
    94c4:	mov    DWORD PTR [rip+0x274216],0x0        # 27d6e4 <squares+0x84>
    94ce:	mov    DWORD PTR [rip+0x28e2b0],edi        # 297784 <hash>
    94d4:	mov    DWORD PTR [rip+0x28e285],r10d        # 297760 <ply>
    94db:	jmp    9143 <make+0x343>
    94e0:	mov    eax,DWORD PTR [rip+0x1b0a2]        # 24588 <material+0x8>
    94e6:	sub    r13d,0xc
    94ea:	sub    DWORD PTR [rip+0x2aff0],eax        # 344e0 <Material>
    94f0:	mov    DWORD PTR [r12+rbx*4],0x1
    94f8:	movsxd r13,r13d
    94fb:	mov    DWORD PTR [r12+rbp*4],0xd
    9503:	xor    edi,DWORD PTR [rsi+r13*4+0x480]
    950b:	xor    esi,esi
    950d:	mov    DWORD PTR [rip+0x28e271],edi        # 297784 <hash>
    9513:	mov    edi,0x1
    9518:	call   3ff0 <addHolding>
    951d:	movsxd rsi,DWORD PTR [rip+0x28e23c]        # 297760 <ply>
    9524:	movsxd rdx,DWORD PTR [r14+r13*4]
    9528:	lea    rax,[rip+0x28a691]        # 293bc0 <moved>
    952f:	add    DWORD PTR [rax+rbx*4],0x1
    9533:	lea    rcx,[rip+0x288ee6]        # 292420 <path_x>
    953a:	lea    r8,[rip+0x27229f]        # 27b7e0 <pieces>
    9541:	add    DWORD PTR [rax+rbp*4],0x1
    9545:	add    DWORD PTR [rax+r13*4],0x1
    954a:	mov    rax,rsi
    954d:	shl    rsi,0x4
    9551:	add    eax,0x1
    9554:	sub    DWORD PTR [rip+0x62349],0x1        # 6b8a4 <piece_count>
    955b:	xor    DWORD PTR [rip+0x273fbe],0x1        # 27d520 <white_to_move>
    9562:	mov    DWORD PTR [r12+r13*4],0xd
    956a:	mov    DWORD PTR [rcx+rsi*1],edx
    956d:	mov    DWORD PTR [r8+rdx*4],0x0
    9575:	mov    DWORD PTR [r14+r13*4],0x0
    957d:	mov    DWORD PTR [rip+0x28e1dd],eax        # 297760 <ply>
    9583:	jmp    9143 <make+0x343>
    9588:	nop    DWORD PTR [rax+rax*1+0x0]
    9590:	mov    esi,0x1
    9595:	jmp    90b7 <make+0x2b7>
    959a:	nop    WORD PTR [rax+rax*1+0x0]
    95a0:	add    r13d,0xc
    95a4:	mov    DWORD PTR [r12+rbx*4],0x2
    95ac:	mov    eax,DWORD PTR [rip+0x1afd2]        # 24584 <material+0x4>
    95b2:	movsxd r13,r13d
    95b5:	sub    DWORD PTR [rip+0x2af25],eax        # 344e0 <Material>
    95bb:	xor    edi,DWORD PTR [rsi+r13*4+0x240]
    95c3:	mov    DWORD PTR [r12+rbp*4],0xd
    95cb:	mov    esi,0x1
    95d0:	mov    DWORD PTR [rip+0x28e1ae],edi        # 297784 <hash>
    95d6:	mov    edi,0x2
    95db:	jmp    9518 <make+0x718>
    95e0:	movsxd rdx,DWORD PTR [rip+0x274231]        # 27d818 <squares+0x1b8>
    95e7:	mov    eax,DWORD PTR [rip+0x28f58b]        # 298b78 <zobrist+0x13b8>
    95ed:	mov    DWORD PTR [rip+0x274481],0xd        # 27da78 <board+0x1b8>
    95f7:	xor    eax,DWORD PTR [rip+0x28f587]        # 298b84 <zobrist+0x13c4>
    95fd:	add    DWORD PTR [rip+0x28a774],0x1        # 293d78 <moved+0x1b8>
    9604:	xor    edi,eax
    9606:	mov    DWORD PTR [rip+0x274218],edx        # 27d824 <squares+0x1c4>
    960c:	add    DWORD PTR [rip+0x28a771],0x1        # 293d84 <moved+0x1c4>
    9613:	mov    DWORD PTR [rip+0x274467],0x8        # 27da84 <board+0x1c4>
    961d:	mov    DWORD PTR [rip+0x5fb9d],0x4        # 691c4 <black_castled>
    9627:	mov    DWORD PTR [r8+rdx*4],0x71
    962f:	mov    DWORD PTR [rip+0x2741df],0x0        # 27d818 <squares+0x1b8>
    9639:	mov    DWORD PTR [rip+0x28e145],edi        # 297784 <hash>
    963f:	mov    DWORD PTR [rip+0x28e11a],r10d        # 297760 <ply>
    9646:	jmp    9143 <make+0x343>
    964b:	movsxd rdx,DWORD PTR [rip+0x2741e2]        # 27d834 <squares+0x1d4>
    9652:	mov    eax,DWORD PTR [rip+0x28f53c]        # 298b94 <zobrist+0x13d4>
    9658:	mov    DWORD PTR [rip+0x274432],0xd        # 27da94 <board+0x1d4>
    9662:	xor    eax,DWORD PTR [rip+0x28f524]        # 298b8c <zobrist+0x13cc>
    9668:	add    DWORD PTR [rip+0x28a725],0x1        # 293d94 <moved+0x1d4>
    966f:	xor    edi,eax
    9671:	mov    DWORD PTR [rip+0x2741b5],edx        # 27d82c <squares+0x1cc>
    9677:	add    DWORD PTR [rip+0x28a70e],0x1        # 293d8c <moved+0x1cc>
    967e:	mov    DWORD PTR [rip+0x274404],0x8        # 27da8c <board+0x1cc>
    9688:	mov    DWORD PTR [rip+0x5fb32],0x3        # 691c4 <black_castled>
    9692:	mov    DWORD PTR [r8+rdx*4],0x73
    969a:	mov    DWORD PTR [rip+0x274190],0x0        # 27d834 <squares+0x1d4>
    96a4:	mov    DWORD PTR [rip+0x28e0da],edi        # 297784 <hash>
    96aa:	mov    DWORD PTR [rip+0x28e0af],r10d        # 297760 <ply>
    96b1:	jmp    9143 <make+0x343>
    96b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000096c0 <add_move>:
    96c0:	endbr64 
    96c4:	movsxd rax,DWORD PTR [rip+0x3503d]        # 3e708 <numb_moves>
    96cb:	lea    rcx,[rax+rax*2]
    96cf:	mov    rdx,rax
    96d2:	mov    rax,QWORD PTR [rip+0x1aedf]        # 245b8 <genfor>
    96d9:	add    edx,0x1
    96dc:	lea    rax,[rax+rcx*8]
    96e0:	mov    ecx,DWORD PTR [rip+0x3502a]        # 3e710 <gfrom>
    96e6:	mov    DWORD PTR [rax+0x4],edi
    96e9:	mov    DWORD PTR [rax],ecx
    96eb:	mov    DWORD PTR [rax+0x8],0xd
    96f2:	mov    DWORD PTR [rax+0xc],esi
    96f5:	mov    QWORD PTR [rax+0x10],0x0
    96fd:	mov    DWORD PTR [rip+0x35005],edx        # 3e708 <numb_moves>
    9703:	ret    
    9704:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    970f:	nop

0000000000009710 <add_capture>:
    9710:	endbr64 
    9714:	cmp    DWORD PTR [rip+0x2720a5],0x3        # 27b7c0 <Variant>
    971b:	je     9725 <add_capture+0x15>
    971d:	lea    eax,[rsi-0x5]
    9720:	cmp    eax,0x1
    9723:	jbe    9780 <add_capture+0x70>
    9725:	cmp    esi,0xd
    9728:	je     9734 <add_capture+0x24>
    972a:	mov    DWORD PTR [rip+0x34fe0],0x1        # 3e714 <fcaptures>
    9734:	movsxd rax,DWORD PTR [rip+0x34fcd]        # 3e708 <numb_moves>
    973b:	lea    r9,[rax+rax*2]
    973f:	mov    r8,rax
    9742:	mov    rax,QWORD PTR [rip+0x1ae6f]        # 245b8 <genfor>
    9749:	add    r8d,0x1
    974d:	lea    rax,[rax+r9*8]
    9751:	mov    r9d,DWORD PTR [rip+0x34fb8]        # 3e710 <gfrom>
    9758:	mov    DWORD PTR [rax+0x4],edi
    975b:	mov    DWORD PTR [rax],r9d
    975e:	mov    DWORD PTR [rax+0x8],esi
    9761:	mov    DWORD PTR [rax+0x10],0x0
    9768:	mov    DWORD PTR [rax+0xc],edx
    976b:	mov    DWORD PTR [rax+0x14],ecx
    976e:	mov    DWORD PTR [rip+0x34f93],r8d        # 3e708 <numb_moves>
    9775:	ret    
    9776:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9780:	mov    DWORD PTR [rip+0x34f82],0x1        # 3e70c <kingcap>
    978a:	ret    
    978b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009790 <push_pawn.part.0>:
    9790:	lea    rax,[rip+0x274129]        # 27d8c0 <board>
    9797:	movsxd rdx,edi
    979a:	mov    esi,DWORD PTR [rax+rdx*4]
    979d:	movsxd rdx,DWORD PTR [rip+0x34f6c]        # 3e710 <gfrom>
    97a4:	mov    eax,DWORD PTR [rax+rdx*4]
    97a7:	cmp    eax,0x1
    97aa:	je     97d0 <push_pawn.part.0+0x40>
    97ac:	cmp    eax,0x2
    97af:	jne    97be <push_pawn.part.0+0x2e>
    97b1:	lea    rax,[rip+0x12e88]        # 1c640 <Xrank>
    97b8:	cmp    DWORD PTR [rax+rdx*4],0x2
    97bc:	je     9828 <push_pawn.part.0+0x98>
    97be:	xor    ecx,ecx
    97c0:	xor    edx,edx
    97c2:	jmp    9710 <add_capture>
    97c7:	nop    WORD PTR [rax+rax*1+0x0]
    97d0:	lea    rax,[rip+0x12e69]        # 1c640 <Xrank>
    97d7:	cmp    DWORD PTR [rax+rdx*4],0x7
    97db:	jne    97be <push_pawn.part.0+0x2e>
    97dd:	xor    ecx,ecx
    97df:	mov    edx,0x9
    97e4:	call   9710 <add_capture>
    97e9:	xor    ecx,ecx
    97eb:	mov    edx,0x7
    97f0:	call   9710 <add_capture>
    97f5:	xor    ecx,ecx
    97f7:	mov    edx,0xb
    97fc:	call   9710 <add_capture>
    9801:	xor    ecx,ecx
    9803:	mov    edx,0x3
    9808:	call   9710 <add_capture>
    980d:	cmp    DWORD PTR [rip+0x271fac],0x3        # 27b7c0 <Variant>
    9814:	jne    9861 <push_pawn.part.0+0xd1>
    9816:	xor    ecx,ecx
    9818:	mov    edx,0x5
    981d:	jmp    9710 <add_capture>
    9822:	nop    WORD PTR [rax+rax*1+0x0]
    9828:	xor    ecx,ecx
    982a:	mov    edx,0xa
    982f:	call   9710 <add_capture>
    9834:	xor    ecx,ecx
    9836:	mov    edx,0x8
    983b:	call   9710 <add_capture>
    9840:	xor    ecx,ecx
    9842:	mov    edx,0xc
    9847:	call   9710 <add_capture>
    984c:	xor    ecx,ecx
    984e:	mov    edx,0x4
    9853:	call   9710 <add_capture>
    9858:	cmp    DWORD PTR [rip+0x271f61],0x3        # 27b7c0 <Variant>
    985f:	je     9868 <push_pawn.part.0+0xd8>
    9861:	ret    
    9862:	nop    WORD PTR [rax+rax*1+0x0]
    9868:	xor    ecx,ecx
    986a:	mov    edx,0x6
    986f:	jmp    9710 <add_capture>
    9874:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    987f:	nop

0000000000009880 <try_drop>:
    9880:	endbr64 
    9884:	movsxd rax,DWORD PTR [rip+0x34e7d]        # 3e708 <numb_moves>
    988b:	lea    rcx,[rax+rax*2]
    988f:	mov    rdx,rax
    9892:	mov    rax,QWORD PTR [rip+0x1ad1f]        # 245b8 <genfor>
    9899:	add    edx,0x1
    989c:	lea    rax,[rax+rcx*8]
    98a0:	mov    ecx,DWORD PTR [rip+0x34e6a]        # 3e710 <gfrom>
    98a6:	mov    DWORD PTR [rax],0x0
    98ac:	mov    DWORD PTR [rax+0x4],ecx
    98af:	mov    DWORD PTR [rax+0x8],0xd
    98b6:	mov    DWORD PTR [rax+0xc],edi
    98b9:	mov    QWORD PTR [rax+0x10],0x0
    98c1:	mov    DWORD PTR [rip+0x34e41],edx        # 3e708 <numb_moves>
    98c7:	ret    
    98c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000098d0 <push_king_castle>:
    98d0:	endbr64 
    98d4:	movsxd rax,DWORD PTR [rip+0x34e2d]        # 3e708 <numb_moves>
    98db:	lea    rcx,[rax+rax*2]
    98df:	mov    rdx,rax
    98e2:	mov    rax,QWORD PTR [rip+0x1accf]        # 245b8 <genfor>
    98e9:	add    edx,0x1
    98ec:	lea    rax,[rax+rcx*8]
    98f0:	mov    ecx,DWORD PTR [rip+0x34e1a]        # 3e710 <gfrom>
    98f6:	mov    DWORD PTR [rax+0x4],edi
    98f9:	mov    DWORD PTR [rax],ecx
    98fb:	mov    DWORD PTR [rax+0x10],esi
    98fe:	mov    QWORD PTR [rax+0x8],0xd
    9906:	mov    DWORD PTR [rax+0x14],0x0
    990d:	mov    DWORD PTR [rip+0x34df5],edx        # 3e708 <numb_moves>
    9913:	ret    
    9914:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    991f:	nop

0000000000009920 <push_king>:
    9920:	endbr64 
    9924:	lea    rax,[rip+0x273f95]        # 27d8c0 <board>
    992b:	movsxd rdx,edi
    992e:	mov    esi,DWORD PTR [rax+rdx*4]
    9931:	test   esi,esi
    9933:	je     994c <push_king+0x2c>
    9935:	cmp    esi,0xd
    9938:	je     9950 <push_king+0x30>
    993a:	movsxd rdx,DWORD PTR [rip+0x34dcf]        # 3e710 <gfrom>
    9941:	mov    ecx,DWORD PTR [rax+rdx*4]
    9944:	xor    ecx,esi
    9946:	mov    eax,ecx
    9948:	test   al,0x1
    994a:	jne    9960 <push_king+0x40>
    994c:	ret    
    994d:	nop    DWORD PTR [rax]
    9950:	mov    eax,DWORD PTR [rip+0x271e6e]        # 27b7c4 <captures>
    9956:	test   eax,eax
    9958:	jne    994c <push_king+0x2c>
    995a:	jmp    6f30 <push_king.part.0>
    995f:	nop
    9960:	xor    ecx,ecx
    9962:	xor    edx,edx
    9964:	jmp    9710 <add_capture>
    9969:	nop    DWORD PTR [rax+0x0]

0000000000009970 <push_knighT>:
    9970:	endbr64 
    9974:	lea    rax,[rip+0x273f45]        # 27d8c0 <board>
    997b:	movsxd rdx,edi
    997e:	mov    esi,DWORD PTR [rax+rdx*4]
    9981:	cmp    esi,0xd
    9984:	je     99a0 <push_knighT+0x30>
    9986:	movsxd rdx,DWORD PTR [rip+0x34d83]        # 3e710 <gfrom>
    998d:	mov    ecx,DWORD PTR [rax+rdx*4]
    9990:	xor    ecx,esi
    9992:	mov    eax,ecx
    9994:	test   al,0x1
    9996:	jne    99b0 <push_knighT+0x40>
    9998:	ret    
    9999:	nop    DWORD PTR [rax+0x0]
    99a0:	mov    eax,DWORD PTR [rip+0x271e1e]        # 27b7c4 <captures>
    99a6:	test   eax,eax
    99a8:	jne    9998 <push_knighT+0x28>
    99aa:	jmp    6f30 <push_king.part.0>
    99af:	nop
    99b0:	xor    ecx,ecx
    99b2:	xor    edx,edx
    99b4:	jmp    9710 <add_capture>
    99b9:	nop    DWORD PTR [rax+0x0]

00000000000099c0 <push_pawn>:
    99c0:	endbr64 
    99c4:	test   esi,esi
    99c6:	je     9a30 <push_pawn+0x70>
    99c8:	movsxd rdx,DWORD PTR [rip+0x34d39]        # 3e708 <numb_moves>
    99cf:	movsxd r8,DWORD PTR [rip+0x34d3a]        # 3e710 <gfrom>
    99d6:	mov    DWORD PTR [rip+0x34d34],0x1        # 3e714 <fcaptures>
    99e0:	lea    rsi,[rdx+rdx*2]
    99e4:	mov    rax,rdx
    99e7:	mov    rdx,QWORD PTR [rip+0x1abca]        # 245b8 <genfor>
    99ee:	add    eax,0x1
    99f1:	lea    rdx,[rdx+rsi*8]
    99f5:	lea    rsi,[rip+0x273ec4]        # 27d8c0 <board>
    99fc:	cmp    DWORD PTR [rsi+r8*4],0x1
    9a01:	mov    DWORD PTR [rdx],r8d
    9a04:	mov    DWORD PTR [rdx+0x4],edi
    9a07:	je     9a38 <push_pawn+0x78>
    9a09:	movabs rcx,0x100000000
    9a13:	mov    QWORD PTR [rdx+0x8],0x1
    9a1b:	mov    QWORD PTR [rdx+0x10],rcx
    9a1f:	mov    DWORD PTR [rip+0x34ce3],eax        # 3e708 <numb_moves>
    9a25:	ret    
    9a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9a30:	jmp    9790 <push_pawn.part.0>
    9a35:	nop    DWORD PTR [rax]
    9a38:	movabs rcx,0x100000000
    9a42:	mov    QWORD PTR [rdx+0x8],0x2
    9a4a:	mov    QWORD PTR [rdx+0x10],rcx
    9a4e:	mov    DWORD PTR [rip+0x34cb4],eax        # 3e708 <numb_moves>
    9a54:	ret    
    9a55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000009a60 <push_pawn_simple>:
    9a60:	endbr64 
    9a64:	movsxd rdx,DWORD PTR [rip+0x34c9d]        # 3e708 <numb_moves>
    9a6b:	lea    rcx,[rdx+rdx*2]
    9a6f:	mov    rax,rdx
    9a72:	mov    rdx,QWORD PTR [rip+0x1ab3f]        # 245b8 <genfor>
    9a79:	add    eax,0x1
    9a7c:	lea    rdx,[rdx+rcx*8]
    9a80:	mov    ecx,DWORD PTR [rip+0x34c8a]        # 3e710 <gfrom>
    9a86:	mov    DWORD PTR [rdx+0x4],edi
    9a89:	mov    DWORD PTR [rdx],ecx
    9a8b:	mov    QWORD PTR [rdx+0x8],0xd
    9a93:	mov    QWORD PTR [rdx+0x10],0x0
    9a9b:	mov    DWORD PTR [rip+0x34c67],eax        # 3e708 <numb_moves>
    9aa1:	ret    
    9aa2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    9aad:	nop    DWORD PTR [rax]

0000000000009ab0 <push_slidE>:
    9ab0:	endbr64 
    9ab4:	movsxd rax,DWORD PTR [rip+0x34c55]        # 3e710 <gfrom>
    9abb:	push   rbp
    9abc:	mov    ebp,edi
    9abe:	lea    rdx,[rip+0x273dfb]        # 27d8c0 <board>
    9ac5:	mov    r9d,DWORD PTR [rip+0x271cf8]        # 27b7c4 <captures>
    9acc:	mov    r11,QWORD PTR [rip+0x1aae5]        # 245b8 <genfor>
    9ad3:	push   rbx
    9ad4:	sub    ebp,eax
    9ad6:	mov    ebx,DWORD PTR [rdx+rax*4]
    9ad9:	mov    r10,rax
    9adc:	movsxd rax,edi
    9adf:	movsxd r8,ebp
    9ae2:	add    edi,ebp
    9ae4:	mov    esi,DWORD PTR [rdx+rax*4]
    9ae7:	mov    ecx,DWORD PTR [rip+0x34c1b]        # 3e708 <numb_moves>
    9aed:	movsxd rdi,edi
    9af0:	lea    rbp,[r8+rax*1]
    9af4:	sub    rdi,rbp
    9af7:	lea    rdi,[rdx+rdi*4]
    9afb:	xor    edx,edx
    9afd:	jmp    9b38 <push_slidE+0x88>
    9aff:	nop
    9b00:	test   r9d,r9d
    9b03:	jne    9b2e <push_slidE+0x7e>
    9b05:	movsxd rdx,ecx
    9b08:	add    ecx,0x1
    9b0b:	lea    rdx,[rdx+rdx*2]
    9b0f:	lea    rdx,[r11+rdx*8]
    9b13:	mov    DWORD PTR [rdx],r10d
    9b16:	mov    DWORD PTR [rdx+0x4],eax
    9b19:	mov    QWORD PTR [rdx+0x8],0xd
    9b21:	mov    QWORD PTR [rdx+0x10],0x0
    9b29:	mov    edx,0x1
    9b2e:	add    rax,r8
    9b31:	mov    esi,DWORD PTR [rdi+rax*4]
    9b34:	test   esi,esi
    9b36:	je     9b70 <push_slidE+0xc0>
    9b38:	mov    ebp,eax
    9b3a:	cmp    esi,0xd
    9b3d:	je     9b00 <push_slidE+0x50>
    9b3f:	test   dl,dl
    9b41:	je     9b49 <push_slidE+0x99>
    9b43:	mov    DWORD PTR [rip+0x34bbf],ecx        # 3e708 <numb_moves>
    9b49:	mov    eax,esi
    9b4b:	and    ebx,0x1
    9b4e:	and    eax,0x1
    9b51:	cmp    eax,ebx
    9b53:	jne    9b60 <push_slidE+0xb0>
    9b55:	pop    rbx
    9b56:	pop    rbp
    9b57:	ret    
    9b58:	nop    DWORD PTR [rax+rax*1+0x0]
    9b60:	mov    edi,ebp
    9b62:	pop    rbx
    9b63:	xor    ecx,ecx
    9b65:	xor    edx,edx
    9b67:	pop    rbp
    9b68:	jmp    9710 <add_capture>
    9b6d:	nop    DWORD PTR [rax]
    9b70:	test   dl,dl
    9b72:	je     9b55 <push_slidE+0xa5>
    9b74:	pop    rbx
    9b75:	pop    rbp
    9b76:	mov    DWORD PTR [rip+0x34b8c],ecx        # 3e708 <numb_moves>
    9b7c:	ret    
    9b7d:	nop    DWORD PTR [rax]

0000000000009b80 <gen>:
    9b80:	endbr64 
    9b84:	push   r15
    9b86:	push   r14
    9b88:	push   r13
    9b8a:	push   r12
    9b8c:	push   rbp
    9b8d:	push   rbx
    9b8e:	sub    rsp,0x8
    9b92:	mov    ecx,DWORD PTR [rip+0x271c28]        # 27b7c0 <Variant>
    9b98:	mov    DWORD PTR [rip+0x34b6a],0x0        # 3e70c <kingcap>
    9ba2:	mov    QWORD PTR [rsp],rdi
    9ba6:	mov    DWORD PTR [rip+0x34b58],0x0        # 3e708 <numb_moves>
    9bb0:	mov    QWORD PTR [rip+0x1aa01],rdi        # 245b8 <genfor>
    9bb7:	cmp    ecx,0x3
    9bba:	jne    9bd0 <gen+0x50>
    9bbc:	mov    DWORD PTR [rip+0x271bfe],0x0        # 27b7c4 <captures>
    9bc6:	mov    DWORD PTR [rip+0x34b44],0x0        # 3e714 <fcaptures>
    9bd0:	mov    edi,DWORD PTR [rip+0x27394a]        # 27d520 <white_to_move>
    9bd6:	mov    eax,DWORD PTR [rip+0x61cc8]        # 6b8a4 <piece_count>
    9bdc:	lea    r15,[rip+0x273cdd]        # 27d8c0 <board>
    9be3:	lea    rbp,[rip+0x13292]        # 1ce7c <lcentral+0x33c>
    9bea:	test   edi,edi
    9bec:	jne    9d7e <gen+0x1fe>
    9bf2:	nop    WORD PTR [rax+rax*1+0x0]
    9bf8:	test   eax,eax
    9bfa:	jle    9d27 <gen+0x1a7>
    9c00:	lea    r14,[rip+0x271bdd]        # 27b7e4 <pieces+0x4>
    9c07:	mov    r13d,0x1
    9c0d:	lea    rbx,[rip+0x13234]        # 1ce48 <lcentral+0x308>
    9c14:	nop    DWORD PTR [rax+0x0]
    9c18:	cmp    ecx,0x3
    9c1b:	je     9c80 <gen+0x100>
    9c1d:	mov    eax,DWORD PTR [rip+0x34ae9]        # 3e70c <kingcap>
    9c23:	test   eax,eax
    9c25:	je     9c92 <gen+0x112>
    9c27:	cmp    DWORD PTR [rip+0x271b92],0x1        # 27b7c0 <Variant>
    9c2e:	ja     9c70 <gen+0xf0>
    9c30:	mov    eax,DWORD PTR [rip+0x34ad6]        # 3e70c <kingcap>
    9c36:	or     eax,DWORD PTR [rip+0x271b88]        # 27b7c4 <captures>
    9c3c:	jne    9c70 <gen+0xf0>
    9c3e:	mov    eax,DWORD PTR [rip+0x2738dc]        # 27d520 <white_to_move>
    9c44:	test   eax,eax
    9c46:	je     a999 <gen+0xe19>
    9c4c:	mov    eax,DWORD PTR [rip+0x1b3d2]        # 25024 <holding+0x4>
    9c52:	or     eax,DWORD PTR [rip+0x1b3d4]        # 2502c <holding+0xc>
    9c58:	or     eax,DWORD PTR [rip+0x1b3ee]        # 2504c <holding+0x2c>
    9c5e:	or     eax,DWORD PTR [rip+0x1b3e0]        # 25044 <holding+0x24>
    9c64:	or     eax,DWORD PTR [rip+0x1b3d2]        # 2503c <holding+0x1c>
    9c6a:	jne    abb4 <gen+0x1034>
    9c70:	add    rsp,0x8
    9c74:	pop    rbx
    9c75:	pop    rbp
    9c76:	pop    r12
    9c78:	pop    r13
    9c7a:	pop    r14
    9c7c:	pop    r15
    9c7e:	ret    
    9c7f:	nop
    9c80:	mov    eax,DWORD PTR [rip+0x34a8e]        # 3e714 <fcaptures>
    9c86:	cmp    eax,DWORD PTR [rip+0x271b38]        # 27b7c4 <captures>
    9c8c:	jne    9d3f <gen+0x1bf>
    9c92:	mov    r12d,DWORD PTR [r14]
    9c95:	test   r12d,r12d
    9c98:	je     9d16 <gen+0x196>
    9c9a:	movsxd rdi,r12d
    9c9d:	add    r13d,0x1
    9ca1:	mov    DWORD PTR [rip+0x34a68],r12d        # 3e710 <gfrom>
    9ca8:	cmp    DWORD PTR [r15+rdi*4],0xc
    9cad:	ja     9d16 <gen+0x196>
    9caf:	mov    esi,DWORD PTR [r15+rdi*4]
    9cb3:	movsxd rsi,DWORD PTR [rbx+rsi*4]
    9cb7:	add    rsi,rbx
    9cba:	notrack jmp rsi
    9cbd:	nop    DWORD PTR [rax]
    9cc0:	lea    edi,[r12-0xd]
    9cc5:	movsxd rcx,edi
    9cc8:	mov    esi,DWORD PTR [r15+rcx*4]
    9ccc:	test   esi,esi
    9cce:	jne    a838 <gen+0xcb8>
    9cd4:	lea    edi,[r12-0xb]
    9cd9:	movsxd rcx,edi
    9cdc:	mov    ecx,DWORD PTR [r15+rcx*4]
    9ce0:	test   ecx,ecx
    9ce2:	jne    a828 <gen+0xca8>
    9ce8:	lea    edi,[r12+0xb]
    9ced:	movsxd rcx,edi
    9cf0:	mov    edx,DWORD PTR [r15+rcx*4]
    9cf4:	test   edx,edx
    9cf6:	jne    9e80 <gen+0x300>
    9cfc:	lea    edi,[r12+0xd]
    9d01:	movsxd rax,edi
    9d04:	mov    edx,DWORD PTR [r15+rax*4]
    9d08:	test   edx,edx
    9d0a:	jne    9e99 <gen+0x319>
    9d10:	mov    ecx,DWORD PTR [rip+0x271aaa]        # 27b7c0 <Variant>
    9d16:	add    r14,0x4
    9d1a:	cmp    DWORD PTR [rip+0x61b83],r13d        # 6b8a4 <piece_count>
    9d21:	jge    9c18 <gen+0x98>
    9d27:	cmp    ecx,0x1
    9d2a:	jbe    9c30 <gen+0xb0>
    9d30:	cmp    ecx,0x3
    9d33:	jne    9c70 <gen+0xf0>
    9d39:	mov    eax,DWORD PTR [rip+0x349d5]        # 3e714 <fcaptures>
    9d3f:	cmp    eax,0x1
    9d42:	jne    a217 <gen+0x697>
    9d48:	mov    eax,DWORD PTR [rip+0x271a76]        # 27b7c4 <captures>
    9d4e:	test   eax,eax
    9d50:	jne    a217 <gen+0x697>
    9d56:	mov    edi,DWORD PTR [rip+0x2737c4]        # 27d520 <white_to_move>
    9d5c:	mov    eax,DWORD PTR [rip+0x61b42]        # 6b8a4 <piece_count>
    9d62:	mov    DWORD PTR [rip+0x271a58],0x1        # 27b7c4 <captures>
    9d6c:	mov    DWORD PTR [rip+0x34992],0x0        # 3e708 <numb_moves>
    9d76:	test   edi,edi
    9d78:	je     9bf8 <gen+0x78>
    9d7e:	test   eax,eax
    9d80:	jle    9d27 <gen+0x1a7>
    9d82:	lea    r14,[rip+0x271a5b]        # 27b7e4 <pieces+0x4>
    9d89:	mov    r13d,0x1
    9d8f:	movabs r12,0x200000000
    9d99:	cmp    ecx,0x3
    9d9c:	je     a1fc <gen+0x67c>
    9da2:	nop    WORD PTR [rax+rax*1+0x0]
    9da8:	mov    edx,DWORD PTR [rip+0x3495e]        # 3e70c <kingcap>
    9dae:	test   edx,edx
    9db0:	jne    9c27 <gen+0xa7>
    9db6:	mov    ebx,DWORD PTR [r14]
    9db9:	test   ebx,ebx
    9dbb:	je     a1e2 <gen+0x662>
    9dc1:	movsxd rsi,ebx
    9dc4:	add    r13d,0x1
    9dc8:	mov    DWORD PTR [rip+0x34942],ebx        # 3e710 <gfrom>
    9dce:	cmp    DWORD PTR [r15+rsi*4],0xb
    9dd3:	ja     a1e2 <gen+0x662>
    9dd9:	mov    eax,DWORD PTR [r15+rsi*4]
    9ddd:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
    9de2:	add    rax,rbp
    9de5:	notrack jmp rax
    9de8:	nop    DWORD PTR [rax+rax*1+0x0]
    9df0:	lea    edi,[r12-0xd]
    9df5:	movsxd rcx,edi
    9df8:	mov    eax,DWORD PTR [r15+rcx*4]
    9dfc:	test   eax,eax
    9dfe:	jne    a798 <gen+0xc18>
    9e04:	lea    edi,[r12-0xc]
    9e09:	movsxd rcx,edi
    9e0c:	mov    r11d,DWORD PTR [r15+rcx*4]
    9e10:	test   r11d,r11d
    9e13:	jne    a788 <gen+0xc08>
    9e19:	lea    edi,[r12-0xb]
    9e1e:	movsxd rcx,edi
    9e21:	mov    r10d,DWORD PTR [r15+rcx*4]
    9e25:	test   r10d,r10d
    9e28:	jne    a778 <gen+0xbf8>
    9e2e:	lea    edi,[r12-0x1]
    9e33:	movsxd rcx,edi
    9e36:	mov    r9d,DWORD PTR [r15+rcx*4]
    9e3a:	test   r9d,r9d
    9e3d:	jne    a768 <gen+0xbe8>
    9e43:	lea    edi,[r12+0x1]
    9e48:	movsxd rcx,edi
    9e4b:	mov    r8d,DWORD PTR [r15+rcx*4]
    9e4f:	test   r8d,r8d
    9e52:	jne    a818 <gen+0xc98>
    9e58:	lea    edi,[r12+0xb]
    9e5d:	movsxd rcx,edi
    9e60:	mov    esi,DWORD PTR [r15+rcx*4]
    9e64:	test   esi,esi
    9e66:	jne    a808 <gen+0xc88>
    9e6c:	lea    edi,[r12+0xc]
    9e71:	movsxd rcx,edi
    9e74:	mov    ecx,DWORD PTR [r15+rcx*4]
    9e78:	test   ecx,ecx
    9e7a:	je     9cfc <gen+0x17c>
    9e80:	call   9ab0 <push_slidE>
    9e85:	lea    edi,[r12+0xd]
    9e8a:	movsxd rax,edi
    9e8d:	mov    edx,DWORD PTR [r15+rax*4]
    9e91:	test   edx,edx
    9e93:	je     9d10 <gen+0x190>
    9e99:	call   9ab0 <push_slidE>
    9e9e:	jmp    9d10 <gen+0x190>
    9ea3:	nop    DWORD PTR [rax+rax*1+0x0]
    9ea8:	lea    edi,[r12-0xc]
    9ead:	movsxd rcx,edi
    9eb0:	mov    eax,DWORD PTR [r15+rcx*4]
    9eb4:	test   eax,eax
    9eb6:	jne    a868 <gen+0xce8>
    9ebc:	lea    edi,[r12-0x1]
    9ec1:	movsxd rcx,edi
    9ec4:	mov    eax,DWORD PTR [r15+rcx*4]
    9ec8:	test   eax,eax
    9eca:	jne    a858 <gen+0xcd8>
    9ed0:	lea    edi,[r12+0x1]
    9ed5:	movsxd rcx,edi
    9ed8:	mov    eax,DWORD PTR [r15+rcx*4]
    9edc:	test   eax,eax
    9ede:	jne    a848 <gen+0xcc8>
    9ee4:	lea    edi,[r12+0xc]
    9ee9:	movsxd rax,edi
    9eec:	mov    eax,DWORD PTR [r15+rax*4]
    9ef0:	test   eax,eax
    9ef2:	je     9d10 <gen+0x190>
    9ef8:	call   9ab0 <push_slidE>
    9efd:	jmp    9d10 <gen+0x190>
    9f02:	nop    WORD PTR [rax+rax*1+0x0]
    9f08:	lea    edi,[r12-0x19]
    9f0d:	movsxd rcx,edi
    9f10:	mov    eax,DWORD PTR [r15+rcx*4]
    9f14:	test   eax,eax
    9f16:	jne    a8a8 <gen+0xd28>
    9f1c:	lea    edi,[r12-0x17]
    9f21:	movsxd rcx,edi
    9f24:	mov    eax,DWORD PTR [r15+rcx*4]
    9f28:	test   eax,eax
    9f2a:	jne    a898 <gen+0xd18>
    9f30:	lea    edi,[r12-0xe]
    9f35:	movsxd rcx,edi
    9f38:	mov    eax,DWORD PTR [r15+rcx*4]
    9f3c:	test   eax,eax
    9f3e:	jne    a888 <gen+0xd08>
    9f44:	lea    edi,[r12-0xa]
    9f49:	movsxd rcx,edi
    9f4c:	mov    eax,DWORD PTR [r15+rcx*4]
    9f50:	test   eax,eax
    9f52:	jne    a878 <gen+0xcf8>
    9f58:	lea    edi,[r12+0xa]
    9f5d:	movsxd rcx,edi
    9f60:	mov    r11d,DWORD PTR [r15+rcx*4]
    9f64:	test   r11d,r11d
    9f67:	jne    a8c8 <gen+0xd48>
    9f6d:	lea    edi,[r12+0xe]
    9f72:	movsxd rcx,edi
    9f75:	mov    r10d,DWORD PTR [r15+rcx*4]
    9f79:	test   r10d,r10d
    9f7c:	jne    a8b8 <gen+0xd38>
    9f82:	lea    edi,[r12+0x17]
    9f87:	movsxd rcx,edi
    9f8a:	mov    r9d,DWORD PTR [r15+rcx*4]
    9f8e:	test   r9d,r9d
    9f91:	jne    a8d8 <gen+0xd58>
    9f97:	lea    edi,[r12+0x19]
    9f9c:	movsxd rax,edi
    9f9f:	mov    r8d,DWORD PTR [r15+rax*4]
    9fa3:	test   r8d,r8d
    9fa6:	je     9d10 <gen+0x190>
    9fac:	call   9970 <push_knighT>
    9fb1:	add    r14,0x4
    9fb5:	cmp    DWORD PTR [rip+0x618e8],r13d        # 6b8a4 <piece_count>
    9fbc:	mov    ecx,DWORD PTR [rip+0x2717fe]        # 27b7c0 <Variant>
    9fc2:	jge    9c18 <gen+0x98>
    9fc8:	jmp    9d27 <gen+0x1a7>
    9fcd:	nop    DWORD PTR [rax]
    9fd0:	lea    r10d,[r12-0xc]
    9fd5:	movsxd rsi,r10d
    9fd8:	cmp    DWORD PTR [r15+rsi*4],0xd
    9fdd:	je     a608 <gen+0xa88>
    9fe3:	lea    r10d,[r12-0xd]
    9fe8:	movsxd rcx,r10d
    9feb:	mov    ecx,DWORD PTR [r15+rcx*4]
    9fef:	cmp    ecx,0xd
    9ff2:	je     a001 <gen+0x481>
    9ff4:	and    ecx,0x1
    9ff7:	je     a001 <gen+0x481>
    9ff9:	mov    edi,r10d
    9ffc:	call   9790 <push_pawn.part.0>
    a001:	lea    edi,[r12-0xb]
    a006:	movsxd rax,edi
    a009:	mov    eax,DWORD PTR [r15+rax*4]
    a00d:	cmp    eax,0xd
    a010:	je     a01b <gen+0x49b>
    a012:	test   al,0x1
    a014:	je     a01b <gen+0x49b>
    a016:	call   9790 <push_pawn.part.0>
    a01b:	mov    eax,DWORD PTR [rip+0x2896bf]        # 2936e0 <ep_square>
    a021:	cmp    r10d,eax
    a024:	je     a918 <gen+0xd98>
    a02a:	cmp    edi,eax
    a02c:	jne    9d10 <gen+0x190>
    a032:	mov    esi,0x1
    a037:	add    r14,0x4
    a03b:	call   99c0 <push_pawn>
    a040:	cmp    DWORD PTR [rip+0x6185d],r13d        # 6b8a4 <piece_count>
    a047:	mov    ecx,DWORD PTR [rip+0x271773]        # 27b7c0 <Variant>
    a04d:	jge    9c18 <gen+0x98>
    a053:	jmp    9d27 <gen+0x1a7>
    a058:	nop    DWORD PTR [rax+rax*1+0x0]
    a060:	lea    edi,[r12-0xd]
    a065:	call   9920 <push_king>
    a06a:	lea    edi,[r12-0xc]
    a06f:	call   9920 <push_king>
    a074:	lea    edi,[r12-0xb]
    a079:	call   9920 <push_king>
    a07e:	lea    edi,[r12-0x1]
    a083:	call   9920 <push_king>
    a088:	lea    edi,[r12+0x1]
    a08d:	call   9920 <push_king>
    a092:	lea    edi,[r12+0xb]
    a097:	call   9920 <push_king>
    a09c:	lea    edi,[r12+0xc]
    a0a1:	call   9920 <push_king>
    a0a6:	lea    edi,[r12+0xd]
    a0ab:	call   9920 <push_king>
    a0b0:	mov    ecx,DWORD PTR [rip+0x27170a]        # 27b7c0 <Variant>
    a0b6:	cmp    r12d,0x72
    a0ba:	jne    9d16 <gen+0x196>
    a0c0:	mov    eax,DWORD PTR [rip+0x2716fe]        # 27b7c4 <captures>
    a0c6:	or     eax,DWORD PTR [rip+0x289cbc]        # 293d88 <moved+0x1c8>
    a0cc:	jne    9d16 <gen+0x196>
    a0d2:	cmp    ecx,0x3
    a0d5:	je     ab90 <gen+0x1010>
    a0db:	mov    eax,DWORD PTR [rip+0x289cb3]        # 293d94 <moved+0x1d4>
    a0e1:	test   eax,eax
    a0e3:	jne    a0fb <gen+0x57b>
    a0e5:	cmp    DWORD PTR [rip+0x2739a8],0x8        # 27da94 <board+0x1d4>
    a0ec:	jne    a0fb <gen+0x57b>
    a0ee:	cmp    DWORD PTR [rip+0x273997],0xd        # 27da8c <board+0x1cc>
    a0f5:	je     ad69 <gen+0x11e9>
    a0fb:	mov    eax,DWORD PTR [rip+0x289c77]        # 293d78 <moved+0x1b8>
    a101:	test   eax,eax
    a103:	jne    9d16 <gen+0x196>
    a109:	cmp    DWORD PTR [rip+0x273968],0x8        # 27da78 <board+0x1b8>
    a110:	jne    9d16 <gen+0x196>
    a116:	cmp    DWORD PTR [rip+0x27395f],0xd        # 27da7c <board+0x1bc>
    a11d:	jne    9d16 <gen+0x196>
    a123:	cmp    DWORD PTR [rip+0x273956],0xd        # 27da80 <board+0x1c0>
    a12a:	jne    9d16 <gen+0x196>
    a130:	cmp    DWORD PTR [rip+0x27394d],0xd        # 27da84 <board+0x1c4>
    a137:	jne    9d16 <gen+0x196>
    a13d:	movsxd rsi,DWORD PTR [rip+0x345c4]        # 3e708 <numb_moves>
    a144:	mov    rdx,QWORD PTR [rsp]
    a148:	mov    edi,DWORD PTR [rip+0x345c2]        # 3e710 <gfrom>
    a14e:	mov    rax,rsi
    a151:	lea    rsi,[rsi+rsi*2]
    a155:	lea    rsi,[rdx+rsi*8]
    a159:	add    eax,0x1
    a15c:	movabs rdx,0xd00000070
    a166:	mov    QWORD PTR [rsi+0x4],rdx
    a16a:	movabs rdx,0x400000000
    a174:	mov    DWORD PTR [rsi],edi
    a176:	mov    QWORD PTR [rsi+0xc],rdx
    a17a:	mov    DWORD PTR [rsi+0x14],0x0
    a181:	mov    DWORD PTR [rip+0x34581],eax        # 3e708 <numb_moves>
    a187:	jmp    9d16 <gen+0x196>
    a18c:	nop    DWORD PTR [rax+0x0]
    a190:	lea    edi,[rbx-0xd]
    a193:	movsxd rax,edi
    a196:	mov    r10d,DWORD PTR [r15+rax*4]
    a19a:	test   r10d,r10d
    a19d:	jne    a6a8 <gen+0xb28>
    a1a3:	lea    edi,[rbx-0xb]
    a1a6:	movsxd rax,edi
    a1a9:	mov    r9d,DWORD PTR [r15+rax*4]
    a1ad:	test   r9d,r9d
    a1b0:	jne    a698 <gen+0xb18>
    a1b6:	lea    edi,[rbx+0xb]
    a1b9:	movsxd rax,edi
    a1bc:	mov    r8d,DWORD PTR [r15+rax*4]
    a1c0:	test   r8d,r8d
    a1c3:	jne    a2b1 <gen+0x731>
    a1c9:	lea    edi,[rbx+0xd]
    a1cc:	movsxd rax,edi
    a1cf:	mov    r8d,DWORD PTR [r15+rax*4]
    a1d3:	test   r8d,r8d
    a1d6:	jne    a2c9 <gen+0x749>
    a1dc:	mov    ecx,DWORD PTR [rip+0x2715de]        # 27b7c0 <Variant>
    a1e2:	add    r14,0x4
    a1e6:	cmp    DWORD PTR [rip+0x616b7],r13d        # 6b8a4 <piece_count>
    a1ed:	jl     9d27 <gen+0x1a7>
    a1f3:	cmp    ecx,0x3
    a1f6:	jne    9da8 <gen+0x228>
    a1fc:	mov    eax,DWORD PTR [rip+0x34512]        # 3e714 <fcaptures>
    a202:	cmp    eax,DWORD PTR [rip+0x2715bc]        # 27b7c4 <captures>
    a208:	je     9db6 <gen+0x236>
    a20e:	cmp    eax,0x1
    a211:	je     9d48 <gen+0x1c8>
    a217:	mov    DWORD PTR [rip+0x344eb],0x0        # 3e70c <kingcap>
    a221:	add    rsp,0x8
    a225:	pop    rbx
    a226:	pop    rbp
    a227:	pop    r12
    a229:	pop    r13
    a22b:	pop    r14
    a22d:	pop    r15
    a22f:	ret    
    a230:	lea    edi,[rbx-0xd]
    a233:	movsxd rax,edi
    a236:	mov    eax,DWORD PTR [r15+rax*4]
    a23a:	test   eax,eax
    a23c:	jne    a7f8 <gen+0xc78>
    a242:	lea    edi,[rbx-0xc]
    a245:	movsxd rax,edi
    a248:	mov    eax,DWORD PTR [r15+rax*4]
    a24c:	test   eax,eax
    a24e:	jne    a7e8 <gen+0xc68>
    a254:	lea    edi,[rbx-0xb]
    a257:	movsxd rax,edi
    a25a:	mov    eax,DWORD PTR [r15+rax*4]
    a25e:	test   eax,eax
    a260:	jne    a7d8 <gen+0xc58>
    a266:	lea    edi,[rbx-0x1]
    a269:	movsxd rax,edi
    a26c:	mov    eax,DWORD PTR [r15+rax*4]
    a270:	test   eax,eax
    a272:	jne    a7c8 <gen+0xc48>
    a278:	lea    edi,[rbx+0x1]
    a27b:	movsxd rax,edi
    a27e:	mov    r11d,DWORD PTR [r15+rax*4]
    a282:	test   r11d,r11d
    a285:	jne    a7b8 <gen+0xc38>
    a28b:	lea    edi,[rbx+0xb]
    a28e:	movsxd rax,edi
    a291:	mov    r10d,DWORD PTR [r15+rax*4]
    a295:	test   r10d,r10d
    a298:	jne    a7a8 <gen+0xc28>
    a29e:	lea    edi,[rbx+0xc]
    a2a1:	movsxd rax,edi
    a2a4:	mov    r9d,DWORD PTR [r15+rax*4]
    a2a8:	test   r9d,r9d
    a2ab:	je     a1c9 <gen+0x649>
    a2b1:	call   9ab0 <push_slidE>
    a2b6:	lea    edi,[rbx+0xd]
    a2b9:	movsxd rax,edi
    a2bc:	mov    r8d,DWORD PTR [r15+rax*4]
    a2c0:	test   r8d,r8d
    a2c3:	je     a1dc <gen+0x65c>
    a2c9:	call   9ab0 <push_slidE>
    a2ce:	jmp    a1dc <gen+0x65c>
    a2d3:	nop    DWORD PTR [rax+rax*1+0x0]
    a2d8:	lea    edi,[rbx-0xc]
    a2db:	movsxd rax,edi
    a2de:	mov    esi,DWORD PTR [r15+rax*4]
    a2e2:	test   esi,esi
    a2e4:	jne    a6e0 <gen+0xb60>
    a2ea:	lea    edi,[rbx-0x1]
    a2ed:	movsxd rax,edi
    a2f0:	mov    ecx,DWORD PTR [r15+rax*4]
    a2f4:	test   ecx,ecx
    a2f6:	jne    a6b8 <gen+0xb38>
    a2fc:	lea    edi,[rbx+0x1]
    a2ff:	movsxd rax,edi
    a302:	mov    edx,DWORD PTR [r15+rax*4]
    a306:	test   edx,edx
    a308:	jne    a6cf <gen+0xb4f>
    a30e:	lea    edi,[rbx+0xc]
    a311:	movsxd rax,edi
    a314:	mov    eax,DWORD PTR [r15+rax*4]
    a318:	test   eax,eax
    a31a:	je     a1dc <gen+0x65c>
    a320:	call   9ab0 <push_slidE>
    a325:	jmp    a1dc <gen+0x65c>
    a32a:	nop    WORD PTR [rax+rax*1+0x0]
    a330:	lea    edi,[rbx-0x19]
    a333:	movsxd rax,edi
    a336:	mov    ecx,DWORD PTR [r15+rax*4]
    a33a:	test   ecx,ecx
    a33c:	jne    a758 <gen+0xbd8>
    a342:	lea    edi,[rbx-0x17]
    a345:	movsxd rax,edi
    a348:	mov    edx,DWORD PTR [r15+rax*4]
    a34c:	test   edx,edx
    a34e:	jne    a748 <gen+0xbc8>
    a354:	lea    edi,[rbx-0xe]
    a357:	movsxd rax,edi
    a35a:	mov    eax,DWORD PTR [r15+rax*4]
    a35e:	test   eax,eax
    a360:	jne    a738 <gen+0xbb8>
    a366:	lea    edi,[rbx-0xa]
    a369:	movsxd rax,edi
    a36c:	mov    eax,DWORD PTR [r15+rax*4]
    a370:	test   eax,eax
    a372:	jne    a728 <gen+0xba8>
    a378:	lea    edi,[rbx+0xa]
    a37b:	movsxd rax,edi
    a37e:	mov    eax,DWORD PTR [r15+rax*4]
    a382:	test   eax,eax
    a384:	jne    a718 <gen+0xb98>
    a38a:	lea    edi,[rbx+0xe]
    a38d:	movsxd rax,edi
    a390:	mov    eax,DWORD PTR [r15+rax*4]
    a394:	test   eax,eax
    a396:	jne    a6f0 <gen+0xb70>
    a39c:	lea    edi,[rbx+0x17]
    a39f:	movsxd rax,edi
    a3a2:	mov    eax,DWORD PTR [r15+rax*4]
    a3a6:	test   eax,eax
    a3a8:	jne    a707 <gen+0xb87>
    a3ae:	lea    edi,[rbx+0x19]
    a3b1:	movsxd rax,edi
    a3b4:	mov    r11d,DWORD PTR [r15+rax*4]
    a3b8:	test   r11d,r11d
    a3bb:	je     a1dc <gen+0x65c>
    a3c1:	call   9970 <push_knighT>
    a3c6:	add    r14,0x4
    a3ca:	cmp    DWORD PTR [rip+0x614d3],r13d        # 6b8a4 <piece_count>
    a3d1:	mov    ecx,DWORD PTR [rip+0x2713e9]        # 27b7c0 <Variant>
    a3d7:	jge    a1f3 <gen+0x673>
    a3dd:	jmp    9d27 <gen+0x1a7>
    a3e2:	nop    WORD PTR [rax+rax*1+0x0]
    a3e8:	lea    edi,[rbx+0xc]
    a3eb:	movsxd rax,edi
    a3ee:	cmp    DWORD PTR [r15+rax*4],0xd
    a3f3:	je     a580 <gen+0xa00>
    a3f9:	lea    r10d,[rbx+0xd]
    a3fd:	movsxd rax,r10d
    a400:	mov    eax,DWORD PTR [r15+rax*4]
    a404:	test   al,0x1
    a406:	jne    a410 <gen+0x890>
    a408:	test   eax,eax
    a40a:	jne    a948 <gen+0xdc8>
    a410:	lea    edi,[rbx+0xb]
    a413:	movsxd rax,edi
    a416:	mov    eax,DWORD PTR [r15+rax*4]
    a41a:	test   al,0x1
    a41c:	jne    a426 <gen+0x8a6>
    a41e:	test   eax,eax
    a420:	jne    a958 <gen+0xdd8>
    a426:	mov    eax,DWORD PTR [rip+0x2892b4]        # 2936e0 <ep_square>
    a42c:	cmp    r10d,eax
    a42f:	je     a8e8 <gen+0xd68>
    a435:	cmp    edi,eax
    a437:	jne    a1dc <gen+0x65c>
    a43d:	mov    esi,0x1
    a442:	add    r14,0x4
    a446:	call   99c0 <push_pawn>
    a44b:	cmp    DWORD PTR [rip+0x61452],r13d        # 6b8a4 <piece_count>
    a452:	mov    ecx,DWORD PTR [rip+0x271368]        # 27b7c0 <Variant>
    a458:	jge    a1f3 <gen+0x673>
    a45e:	jmp    9d27 <gen+0x1a7>
    a463:	nop    DWORD PTR [rax+rax*1+0x0]
    a468:	lea    edi,[rbx-0xd]
    a46b:	call   9920 <push_king>
    a470:	lea    edi,[rbx-0xc]
    a473:	call   9920 <push_king>
    a478:	lea    edi,[rbx-0xb]
    a47b:	call   9920 <push_king>
    a480:	lea    edi,[rbx-0x1]
    a483:	call   9920 <push_king>
    a488:	lea    edi,[rbx+0x1]
    a48b:	call   9920 <push_king>
    a490:	lea    edi,[rbx+0xb]
    a493:	call   9920 <push_king>
    a498:	lea    edi,[rbx+0xc]
    a49b:	call   9920 <push_king>
    a4a0:	lea    edi,[rbx+0xd]
    a4a3:	call   9920 <push_king>
    a4a8:	mov    ecx,DWORD PTR [rip+0x271312]        # 27b7c0 <Variant>
    a4ae:	cmp    ebx,0x1e
    a4b1:	jne    a1e2 <gen+0x662>
    a4b7:	mov    eax,DWORD PTR [rip+0x271307]        # 27b7c4 <captures>
    a4bd:	or     eax,DWORD PTR [rip+0x289775]        # 293c38 <moved+0x78>
    a4c3:	jne    a1e2 <gen+0x662>
    a4c9:	cmp    ecx,0x3
    a4cc:	je     aba2 <gen+0x1022>
    a4d2:	mov    edi,DWORD PTR [rip+0x28976c]        # 293c44 <moved+0x84>
    a4d8:	test   edi,edi
    a4da:	jne    a4f2 <gen+0x972>
    a4dc:	cmp    DWORD PTR [rip+0x273461],0x7        # 27d944 <board+0x84>
    a4e3:	jne    a4f2 <gen+0x972>
    a4e5:	cmp    DWORD PTR [rip+0x273450],0xd        # 27d93c <board+0x7c>
    a4ec:	je     adc5 <gen+0x1245>
    a4f2:	mov    esi,DWORD PTR [rip+0x289730]        # 293c28 <moved+0x68>
    a4f8:	test   esi,esi
    a4fa:	jne    a1e2 <gen+0x662>
    a500:	cmp    DWORD PTR [rip+0x273421],0x7        # 27d928 <board+0x68>
    a507:	jne    a1e2 <gen+0x662>
    a50d:	cmp    DWORD PTR [rip+0x273418],0xd        # 27d92c <board+0x6c>
    a514:	jne    a1e2 <gen+0x662>
    a51a:	cmp    DWORD PTR [rip+0x27340f],0xd        # 27d930 <board+0x70>
    a521:	jne    a1e2 <gen+0x662>
    a527:	cmp    DWORD PTR [rip+0x273406],0xd        # 27d934 <board+0x74>
    a52e:	jne    a1e2 <gen+0x662>
    a534:	movsxd rsi,DWORD PTR [rip+0x341cd]        # 3e708 <numb_moves>
    a53b:	mov    rdx,QWORD PTR [rsp]
    a53f:	mov    edi,DWORD PTR [rip+0x341cb]        # 3e710 <gfrom>
    a545:	mov    rax,rsi
    a548:	lea    rsi,[rsi+rsi*2]
    a54c:	lea    rsi,[rdx+rsi*8]
    a550:	add    eax,0x1
    a553:	movabs rdx,0xd0000001c
    a55d:	mov    DWORD PTR [rsi],edi
    a55f:	mov    QWORD PTR [rsi+0x4],rdx
    a563:	mov    QWORD PTR [rsi+0xc],r12
    a567:	mov    DWORD PTR [rsi+0x14],0x0
    a56e:	mov    DWORD PTR [rip+0x34194],eax        # 3e708 <numb_moves>
    a574:	jmp    a1e2 <gen+0x662>
    a579:	nop    DWORD PTR [rax+0x0]
    a580:	lea    rax,[rip+0x120b9]        # 1c640 <Xrank>
    a587:	mov    r10d,DWORD PTR [rax+rsi*4]
    a58b:	cmp    r10d,0x7
    a58f:	je     a968 <gen+0xde8>
    a595:	mov    esi,DWORD PTR [rip+0x271229]        # 27b7c4 <captures>
    a59b:	test   esi,esi
    a59d:	jne    a3f9 <gen+0x879>
    a5a3:	call   9790 <push_pawn.part.0>
    a5a8:	cmp    r10d,0x2
    a5ac:	jne    a3f9 <gen+0x879>
    a5b2:	lea    esi,[rbx+0x18]
    a5b5:	movsxd rax,esi
    a5b8:	cmp    DWORD PTR [r15+rax*4],0xd
    a5bd:	jne    a3f9 <gen+0x879>
    a5c3:	movsxd rcx,DWORD PTR [rip+0x3413e]        # 3e708 <numb_moves>
    a5ca:	mov    rdx,QWORD PTR [rsp]
    a5ce:	mov    edi,DWORD PTR [rip+0x3413c]        # 3e710 <gfrom>
    a5d4:	mov    rax,rcx
    a5d7:	lea    rcx,[rcx+rcx*2]
    a5db:	lea    rcx,[rdx+rcx*8]
    a5df:	add    eax,0x1
    a5e2:	mov    DWORD PTR [rcx],edi
    a5e4:	mov    DWORD PTR [rcx+0x4],esi
    a5e7:	mov    QWORD PTR [rcx+0x8],0xd
    a5ef:	mov    QWORD PTR [rcx+0x10],0x0
    a5f7:	mov    DWORD PTR [rip+0x3410b],eax        # 3e708 <numb_moves>
    a5fd:	jmp    a3f9 <gen+0x879>
    a602:	nop    WORD PTR [rax+rax*1+0x0]
    a608:	lea    rsi,[rip+0x12031]        # 1c640 <Xrank>
    a60f:	mov    r11d,DWORD PTR [rsi+rdi*4]
    a613:	cmp    r11d,0x2
    a617:	je     a980 <gen+0xe00>
    a61d:	mov    eax,DWORD PTR [rip+0x2711a1]        # 27b7c4 <captures>
    a623:	test   eax,eax
    a625:	jne    9fe3 <gen+0x463>
    a62b:	mov    edi,r10d
    a62e:	call   9790 <push_pawn.part.0>
    a633:	cmp    r11d,0x7
    a637:	jne    9fe3 <gen+0x463>
    a63d:	lea    edi,[r12-0x18]
    a642:	movsxd rcx,edi
    a645:	cmp    DWORD PTR [r15+rcx*4],0xd
    a64a:	jne    9fe3 <gen+0x463>
    a650:	movsxd rsi,DWORD PTR [rip+0x340b1]        # 3e708 <numb_moves>
    a657:	mov    rax,QWORD PTR [rsp]
    a65b:	mov    r10d,DWORD PTR [rip+0x340ae]        # 3e710 <gfrom>
    a662:	mov    rcx,rsi
    a665:	lea    rsi,[rsi+rsi*2]
    a669:	lea    rsi,[rax+rsi*8]
    a66d:	add    ecx,0x1
    a670:	mov    DWORD PTR [rsi],r10d
    a673:	mov    DWORD PTR [rsi+0x4],edi
    a676:	mov    QWORD PTR [rsi+0x8],0xd
    a67e:	mov    QWORD PTR [rsi+0x10],0x0
    a686:	mov    DWORD PTR [rip+0x3407c],ecx        # 3e708 <numb_moves>
    a68c:	jmp    9fe3 <gen+0x463>
    a691:	nop    DWORD PTR [rax+0x0]
    a698:	call   9ab0 <push_slidE>
    a69d:	jmp    a1b6 <gen+0x636>
    a6a2:	nop    WORD PTR [rax+rax*1+0x0]
    a6a8:	call   9ab0 <push_slidE>
    a6ad:	jmp    a1a3 <gen+0x623>
    a6b2:	nop    WORD PTR [rax+rax*1+0x0]
    a6b8:	call   9ab0 <push_slidE>
    a6bd:	lea    edi,[rbx+0x1]
    a6c0:	movsxd rax,edi
    a6c3:	mov    edx,DWORD PTR [r15+rax*4]
    a6c7:	test   edx,edx
    a6c9:	je     a30e <gen+0x78e>
    a6cf:	call   9ab0 <push_slidE>
    a6d4:	jmp    a30e <gen+0x78e>
    a6d9:	nop    DWORD PTR [rax+0x0]
    a6e0:	call   9ab0 <push_slidE>
    a6e5:	jmp    a2ea <gen+0x76a>
    a6ea:	nop    WORD PTR [rax+rax*1+0x0]
    a6f0:	call   9970 <push_knighT>
    a6f5:	lea    edi,[rbx+0x17]
    a6f8:	movsxd rax,edi
    a6fb:	mov    eax,DWORD PTR [r15+rax*4]
    a6ff:	test   eax,eax
    a701:	je     a3ae <gen+0x82e>
    a707:	call   9970 <push_knighT>
    a70c:	jmp    a3ae <gen+0x82e>
    a711:	nop    DWORD PTR [rax+0x0]
    a718:	call   9970 <push_knighT>
    a71d:	jmp    a38a <gen+0x80a>
    a722:	nop    WORD PTR [rax+rax*1+0x0]
    a728:	call   9970 <push_knighT>
    a72d:	jmp    a378 <gen+0x7f8>
    a732:	nop    WORD PTR [rax+rax*1+0x0]
    a738:	call   9970 <push_knighT>
    a73d:	jmp    a366 <gen+0x7e6>
    a742:	nop    WORD PTR [rax+rax*1+0x0]
    a748:	call   9970 <push_knighT>
    a74d:	jmp    a354 <gen+0x7d4>
    a752:	nop    WORD PTR [rax+rax*1+0x0]
    a758:	call   9970 <push_knighT>
    a75d:	jmp    a342 <gen+0x7c2>
    a762:	nop    WORD PTR [rax+rax*1+0x0]
    a768:	call   9ab0 <push_slidE>
    a76d:	jmp    9e43 <gen+0x2c3>
    a772:	nop    WORD PTR [rax+rax*1+0x0]
    a778:	call   9ab0 <push_slidE>
    a77d:	jmp    9e2e <gen+0x2ae>
    a782:	nop    WORD PTR [rax+rax*1+0x0]
    a788:	call   9ab0 <push_slidE>
    a78d:	jmp    9e19 <gen+0x299>
    a792:	nop    WORD PTR [rax+rax*1+0x0]
    a798:	call   9ab0 <push_slidE>
    a79d:	jmp    9e04 <gen+0x284>
    a7a2:	nop    WORD PTR [rax+rax*1+0x0]
    a7a8:	call   9ab0 <push_slidE>
    a7ad:	jmp    a29e <gen+0x71e>
    a7b2:	nop    WORD PTR [rax+rax*1+0x0]
    a7b8:	call   9ab0 <push_slidE>
    a7bd:	jmp    a28b <gen+0x70b>
    a7c2:	nop    WORD PTR [rax+rax*1+0x0]
    a7c8:	call   9ab0 <push_slidE>
    a7cd:	jmp    a278 <gen+0x6f8>
    a7d2:	nop    WORD PTR [rax+rax*1+0x0]
    a7d8:	call   9ab0 <push_slidE>
    a7dd:	jmp    a266 <gen+0x6e6>
    a7e2:	nop    WORD PTR [rax+rax*1+0x0]
    a7e8:	call   9ab0 <push_slidE>
    a7ed:	jmp    a254 <gen+0x6d4>
    a7f2:	nop    WORD PTR [rax+rax*1+0x0]
    a7f8:	call   9ab0 <push_slidE>
    a7fd:	jmp    a242 <gen+0x6c2>
    a802:	nop    WORD PTR [rax+rax*1+0x0]
    a808:	call   9ab0 <push_slidE>
    a80d:	jmp    9e6c <gen+0x2ec>
    a812:	nop    WORD PTR [rax+rax*1+0x0]
    a818:	call   9ab0 <push_slidE>
    a81d:	jmp    9e58 <gen+0x2d8>
    a822:	nop    WORD PTR [rax+rax*1+0x0]
    a828:	call   9ab0 <push_slidE>
    a82d:	jmp    9ce8 <gen+0x168>
    a832:	nop    WORD PTR [rax+rax*1+0x0]
    a838:	call   9ab0 <push_slidE>
    a83d:	jmp    9cd4 <gen+0x154>
    a842:	nop    WORD PTR [rax+rax*1+0x0]
    a848:	call   9ab0 <push_slidE>
    a84d:	jmp    9ee4 <gen+0x364>
    a852:	nop    WORD PTR [rax+rax*1+0x0]
    a858:	call   9ab0 <push_slidE>
    a85d:	jmp    9ed0 <gen+0x350>
    a862:	nop    WORD PTR [rax+rax*1+0x0]
    a868:	call   9ab0 <push_slidE>
    a86d:	jmp    9ebc <gen+0x33c>
    a872:	nop    WORD PTR [rax+rax*1+0x0]
    a878:	call   9970 <push_knighT>
    a87d:	jmp    9f58 <gen+0x3d8>
    a882:	nop    WORD PTR [rax+rax*1+0x0]
    a888:	call   9970 <push_knighT>
    a88d:	jmp    9f44 <gen+0x3c4>
    a892:	nop    WORD PTR [rax+rax*1+0x0]
    a898:	call   9970 <push_knighT>
    a89d:	jmp    9f30 <gen+0x3b0>
    a8a2:	nop    WORD PTR [rax+rax*1+0x0]
    a8a8:	call   9970 <push_knighT>
    a8ad:	jmp    9f1c <gen+0x39c>
    a8b2:	nop    WORD PTR [rax+rax*1+0x0]
    a8b8:	call   9970 <push_knighT>
    a8bd:	jmp    9f82 <gen+0x402>
    a8c2:	nop    WORD PTR [rax+rax*1+0x0]
    a8c8:	call   9970 <push_knighT>
    a8cd:	jmp    9f6d <gen+0x3ed>
    a8d2:	nop    WORD PTR [rax+rax*1+0x0]
    a8d8:	call   9970 <push_knighT>
    a8dd:	jmp    9f97 <gen+0x417>
    a8e2:	nop    WORD PTR [rax+rax*1+0x0]
    a8e8:	mov    esi,0x1
    a8ed:	mov    edi,r10d
    a8f0:	add    r14,0x4
    a8f4:	call   99c0 <push_pawn>
    a8f9:	cmp    DWORD PTR [rip+0x60fa4],r13d        # 6b8a4 <piece_count>
    a900:	mov    ecx,DWORD PTR [rip+0x270eba]        # 27b7c0 <Variant>
    a906:	jge    a1f3 <gen+0x673>
    a90c:	jmp    9d27 <gen+0x1a7>
    a911:	nop    DWORD PTR [rax+0x0]
    a918:	mov    esi,0x1
    a91d:	mov    edi,r10d
    a920:	add    r14,0x4
    a924:	call   99c0 <push_pawn>
    a929:	cmp    DWORD PTR [rip+0x60f74],r13d        # 6b8a4 <piece_count>
    a930:	mov    ecx,DWORD PTR [rip+0x270e8a]        # 27b7c0 <Variant>
    a936:	jge    9c18 <gen+0x98>
    a93c:	jmp    9d27 <gen+0x1a7>
    a941:	nop    DWORD PTR [rax+0x0]
    a948:	mov    edi,r10d
    a94b:	call   9790 <push_pawn.part.0>
    a950:	jmp    a410 <gen+0x890>
    a955:	nop    DWORD PTR [rax]
    a958:	call   9790 <push_pawn.part.0>
    a95d:	jmp    a426 <gen+0x8a6>
    a962:	nop    WORD PTR [rax+rax*1+0x0]
    a968:	sub    ecx,0x3
    a96b:	cmp    ecx,0x1
    a96e:	jbe    a595 <gen+0xa15>
    a974:	call   9790 <push_pawn.part.0>
    a979:	jmp    a3f9 <gen+0x879>
    a97e:	xchg   ax,ax
    a980:	sub    ecx,0x3
    a983:	cmp    ecx,0x1
    a986:	jbe    a61d <gen+0xa9d>
    a98c:	mov    edi,r10d
    a98f:	call   9790 <push_pawn.part.0>
    a994:	jmp    9fe3 <gen+0x463>
    a999:	mov    eax,DWORD PTR [rip+0x1a6c9]        # 25068 <holding+0x48>
    a99f:	or     eax,DWORD PTR [rip+0x1a6cb]        # 25070 <holding+0x50>
    a9a5:	or     eax,DWORD PTR [rip+0x1a6e5]        # 25090 <holding+0x70>
    a9ab:	or     eax,DWORD PTR [rip+0x1a6d7]        # 25088 <holding+0x68>
    a9b1:	or     eax,DWORD PTR [rip+0x1a6c9]        # 25080 <holding+0x60>
    a9b7:	je     9c70 <gen+0xf0>
    a9bd:	mov    esi,DWORD PTR [rip+0x33d45]        # 3e708 <numb_moves>
    a9c3:	xor    r9d,r9d
    a9c6:	mov    edx,0x1a
    a9cb:	lea    r8,[rip+0x272eee]        # 27d8c0 <board>
    a9d2:	movabs r13,0xa0000000d
    a9dc:	movabs rbp,0x80000000d
    a9e6:	movabs rbx,0xc0000000d
    a9f0:	movabs r11,0x40000000d
    a9fa:	lea    r10,[rip+0x11c3f]        # 1c640 <Xrank>
    aa01:	movabs r14,0x20000000d
    aa0b:	jmp    aa12 <gen+0xe92>
    aa0d:	nop    DWORD PTR [rax]
    aa10:	mov    edx,eax
    aa12:	movsxd rdi,edx
    aa15:	lea    eax,[rdx+0x3]
    aa18:	mov    ecx,DWORD PTR [r8+rdi*4]
    aa1c:	test   ecx,ecx
    aa1e:	je     ab60 <gen+0xfe0>
    aa24:	mov    eax,edx
    aa26:	cmp    ecx,0xd
    aa29:	jne    ab60 <gen+0xfe0>
    aa2f:	mov    eax,DWORD PTR [rip+0x1a633]        # 25068 <holding+0x48>
    aa35:	test   eax,eax
    aa37:	je     aa77 <gen+0xef7>
    aa39:	mov    ecx,DWORD PTR [r10+rdi*4]
    aa3d:	cmp    ecx,0x8
    aa40:	setne  al
    aa43:	cmp    ecx,0x1
    aa46:	setne  cl
    aa49:	and    al,cl
    aa4b:	je     aa77 <gen+0xef7>
    aa4d:	movsxd rcx,esi
    aa50:	mov    rdi,QWORD PTR [rsp]
    aa54:	add    esi,0x1
    aa57:	mov    r9d,eax
    aa5a:	lea    rcx,[rcx+rcx*2]
    aa5e:	lea    rcx,[rdi+rcx*8]
    aa62:	mov    DWORD PTR [rcx],0x0
    aa68:	mov    DWORD PTR [rcx+0x4],edx
    aa6b:	mov    QWORD PTR [rcx+0x8],r14
    aa6f:	mov    QWORD PTR [rcx+0x10],0x0
    aa77:	mov    r15d,DWORD PTR [rip+0x1a5f2]        # 25070 <holding+0x50>
    aa7e:	test   r15d,r15d
    aa81:	je     aab0 <gen+0xf30>
    aa83:	movsxd rax,esi
    aa86:	mov    rcx,QWORD PTR [rsp]
    aa8a:	add    esi,0x1
    aa8d:	mov    r9d,0x1
    aa93:	lea    rax,[rax+rax*2]
    aa97:	lea    rax,[rcx+rax*8]
    aa9b:	mov    DWORD PTR [rax],0x0
    aaa1:	mov    DWORD PTR [rax+0x4],edx
    aaa4:	mov    QWORD PTR [rax+0x8],r11
    aaa8:	mov    QWORD PTR [rax+0x10],0x0
    aab0:	mov    r12d,DWORD PTR [rip+0x1a5d9]        # 25090 <holding+0x70>
    aab7:	test   r12d,r12d
    aaba:	je     aae9 <gen+0xf69>
    aabc:	movsxd rax,esi
    aabf:	mov    rcx,QWORD PTR [rsp]
    aac3:	add    esi,0x1
    aac6:	mov    r9d,0x1
    aacc:	lea    rax,[rax+rax*2]
    aad0:	lea    rax,[rcx+rax*8]
    aad4:	mov    DWORD PTR [rax],0x0
    aada:	mov    DWORD PTR [rax+0x4],edx
    aadd:	mov    QWORD PTR [rax+0x8],rbx
    aae1:	mov    QWORD PTR [rax+0x10],0x0
    aae9:	mov    edi,DWORD PTR [rip+0x1a591]        # 25080 <holding+0x60>
    aaef:	test   edi,edi
    aaf1:	je     ab20 <gen+0xfa0>
    aaf3:	movsxd rax,esi
    aaf6:	mov    rcx,QWORD PTR [rsp]
    aafa:	add    esi,0x1
    aafd:	mov    r9d,0x1
    ab03:	lea    rax,[rax+rax*2]
    ab07:	lea    rax,[rcx+rax*8]
    ab0b:	mov    DWORD PTR [rax],0x0
    ab11:	mov    DWORD PTR [rax+0x4],edx
    ab14:	mov    QWORD PTR [rax+0x8],rbp
    ab18:	mov    QWORD PTR [rax+0x10],0x0
    ab20:	mov    ecx,DWORD PTR [rip+0x1a562]        # 25088 <holding+0x68>
    ab26:	mov    eax,edx
    ab28:	test   ecx,ecx
    ab2a:	je     ab60 <gen+0xfe0>
    ab2c:	movsxd rax,esi
    ab2f:	mov    rcx,QWORD PTR [rsp]
    ab33:	add    esi,0x1
    ab36:	mov    r9d,0x1
    ab3c:	lea    rax,[rax+rax*2]
    ab40:	lea    rax,[rcx+rax*8]
    ab44:	mov    DWORD PTR [rax],0x0
    ab4a:	mov    DWORD PTR [rax+0x4],edx
    ab4d:	mov    QWORD PTR [rax+0x8],r13
    ab51:	mov    QWORD PTR [rax+0x10],0x0
    ab59:	mov    eax,edx
    ab5b:	nop    DWORD PTR [rax+rax*1+0x0]
    ab60:	add    eax,0x1
    ab63:	cmp    eax,0x75
    ab66:	jle    aa10 <gen+0xe90>
    ab6c:	mov    DWORD PTR [rip+0x33b9e],edx        # 3e710 <gfrom>
    ab72:	test   r9b,r9b
    ab75:	je     9c70 <gen+0xf0>
    ab7b:	mov    DWORD PTR [rip+0x33b87],esi        # 3e708 <numb_moves>
    ab81:	add    rsp,0x8
    ab85:	pop    rbx
    ab86:	pop    rbp
    ab87:	pop    r12
    ab89:	pop    r13
    ab8b:	pop    r14
    ab8d:	pop    r15
    ab8f:	ret    
    ab90:	cmp    DWORD PTR [rip+0x28cbc1],0x1        # 297758 <Giveaway>
    ab97:	jne    9d16 <gen+0x196>
    ab9d:	jmp    a0db <gen+0x55b>
    aba2:	cmp    DWORD PTR [rip+0x28cbaf],0x1        # 297758 <Giveaway>
    aba9:	jne    a1e2 <gen+0x662>
    abaf:	jmp    a4d2 <gen+0x952>
    abb4:	mov    esi,DWORD PTR [rip+0x33b4e]        # 3e708 <numb_moves>
    abba:	xor    r9d,r9d
    abbd:	mov    edx,0x1a
    abc2:	lea    r8,[rip+0x272cf7]        # 27d8c0 <board>
    abc9:	movabs r13,0x90000000d
    abd3:	movabs rbp,0x70000000d
    abdd:	movabs rbx,0xb0000000d
    abe7:	movabs r11,0x30000000d
    abf1:	lea    r10,[rip+0x11a48]        # 1c640 <Xrank>
    abf8:	movabs r14,0x10000000d
    ac02:	jmp    ac0a <gen+0x108a>
    ac04:	nop    DWORD PTR [rax+0x0]
    ac08:	mov    edx,eax
    ac0a:	movsxd rdi,edx
    ac0d:	lea    eax,[rdx+0x3]
    ac10:	mov    ecx,DWORD PTR [r8+rdi*4]
    ac14:	test   ecx,ecx
    ac16:	je     ad58 <gen+0x11d8>
    ac1c:	mov    eax,edx
    ac1e:	cmp    ecx,0xd
    ac21:	jne    ad58 <gen+0x11d8>
    ac27:	mov    eax,DWORD PTR [rip+0x1a3f7]        # 25024 <holding+0x4>
    ac2d:	test   eax,eax
    ac2f:	je     ac6f <gen+0x10ef>
    ac31:	mov    ecx,DWORD PTR [r10+rdi*4]
    ac35:	cmp    ecx,0x8
    ac38:	setne  al
    ac3b:	cmp    ecx,0x1
    ac3e:	setne  cl
    ac41:	and    al,cl
    ac43:	je     ac6f <gen+0x10ef>
    ac45:	movsxd rcx,esi
    ac48:	mov    rdi,QWORD PTR [rsp]
    ac4c:	add    esi,0x1
    ac4f:	mov    r9d,eax
    ac52:	lea    rcx,[rcx+rcx*2]
    ac56:	lea    rcx,[rdi+rcx*8]
    ac5a:	mov    DWORD PTR [rcx],0x0
    ac60:	mov    DWORD PTR [rcx+0x4],edx
    ac63:	mov    QWORD PTR [rcx+0x8],r14
    ac67:	mov    QWORD PTR [rcx+0x10],0x0
    ac6f:	mov    r15d,DWORD PTR [rip+0x1a3b6]        # 2502c <holding+0xc>
    ac76:	test   r15d,r15d
    ac79:	je     aca8 <gen+0x1128>
    ac7b:	movsxd rax,esi
    ac7e:	mov    rcx,QWORD PTR [rsp]
    ac82:	add    esi,0x1
    ac85:	mov    r9d,0x1
    ac8b:	lea    rax,[rax+rax*2]
    ac8f:	lea    rax,[rcx+rax*8]
    ac93:	mov    DWORD PTR [rax],0x0
    ac99:	mov    DWORD PTR [rax+0x4],edx
    ac9c:	mov    QWORD PTR [rax+0x8],r11
    aca0:	mov    QWORD PTR [rax+0x10],0x0
    aca8:	mov    r12d,DWORD PTR [rip+0x1a39d]        # 2504c <holding+0x2c>
    acaf:	test   r12d,r12d
    acb2:	je     ace1 <gen+0x1161>
    acb4:	movsxd rax,esi
    acb7:	mov    rcx,QWORD PTR [rsp]
    acbb:	add    esi,0x1
    acbe:	mov    r9d,0x1
    acc4:	lea    rax,[rax+rax*2]
    acc8:	lea    rax,[rcx+rax*8]
    accc:	mov    DWORD PTR [rax],0x0
    acd2:	mov    DWORD PTR [rax+0x4],edx
    acd5:	mov    QWORD PTR [rax+0x8],rbx
    acd9:	mov    QWORD PTR [rax+0x10],0x0
    ace1:	mov    edi,DWORD PTR [rip+0x1a355]        # 2503c <holding+0x1c>
    ace7:	test   edi,edi
    ace9:	je     ad18 <gen+0x1198>
    aceb:	movsxd rax,esi
    acee:	mov    rcx,QWORD PTR [rsp]
    acf2:	add    esi,0x1
    acf5:	mov    r9d,0x1
    acfb:	lea    rax,[rax+rax*2]
    acff:	lea    rax,[rcx+rax*8]
    ad03:	mov    DWORD PTR [rax],0x0
    ad09:	mov    DWORD PTR [rax+0x4],edx
    ad0c:	mov    QWORD PTR [rax+0x8],rbp
    ad10:	mov    QWORD PTR [rax+0x10],0x0
    ad18:	mov    ecx,DWORD PTR [rip+0x1a326]        # 25044 <holding+0x24>
    ad1e:	mov    eax,edx
    ad20:	test   ecx,ecx
    ad22:	je     ad58 <gen+0x11d8>
    ad24:	movsxd rax,esi
    ad27:	mov    rcx,QWORD PTR [rsp]
    ad2b:	add    esi,0x1
    ad2e:	mov    r9d,0x1
    ad34:	lea    rax,[rax+rax*2]
    ad38:	lea    rax,[rcx+rax*8]
    ad3c:	mov    DWORD PTR [rax],0x0
    ad42:	mov    DWORD PTR [rax+0x4],edx
    ad45:	mov    QWORD PTR [rax+0x8],r13
    ad49:	mov    QWORD PTR [rax+0x10],0x0
    ad51:	mov    eax,edx
    ad53:	nop    DWORD PTR [rax+rax*1+0x0]
    ad58:	add    eax,0x1
    ad5b:	cmp    eax,0x75
    ad5e:	jle    ac08 <gen+0x1088>
    ad64:	jmp    ab6c <gen+0xfec>
    ad69:	cmp    DWORD PTR [rip+0x272d20],0xd        # 27da90 <board+0x1d0>
    ad70:	jne    a0fb <gen+0x57b>
    ad76:	movsxd rsi,DWORD PTR [rip+0x3398b]        # 3e708 <numb_moves>
    ad7d:	mov    rdx,QWORD PTR [rsp]
    ad81:	mov    edi,DWORD PTR [rip+0x33989]        # 3e710 <gfrom>
    ad87:	mov    rax,rsi
    ad8a:	lea    rsi,[rsi+rsi*2]
    ad8e:	lea    rsi,[rdx+rsi*8]
    ad92:	add    eax,0x1
    ad95:	movabs rdx,0xd00000074
    ad9f:	mov    QWORD PTR [rsi+0x4],rdx
    ada3:	movabs rdx,0x300000000
    adad:	mov    DWORD PTR [rsi],edi
    adaf:	mov    QWORD PTR [rsi+0xc],rdx
    adb3:	mov    DWORD PTR [rsi+0x14],0x0
    adba:	mov    DWORD PTR [rip+0x33948],eax        # 3e708 <numb_moves>
    adc0:	jmp    a0fb <gen+0x57b>
    adc5:	cmp    DWORD PTR [rip+0x272b74],0xd        # 27d940 <board+0x80>
    adcc:	jne    a4f2 <gen+0x972>
    add2:	movsxd rsi,DWORD PTR [rip+0x3392f]        # 3e708 <numb_moves>
    add9:	mov    rdx,QWORD PTR [rsp]
    addd:	mov    edi,DWORD PTR [rip+0x3392d]        # 3e710 <gfrom>
    ade3:	mov    rax,rsi
    ade6:	lea    rsi,[rsi+rsi*2]
    adea:	lea    rsi,[rdx+rsi*8]
    adee:	add    eax,0x1
    adf1:	movabs rdx,0xd00000020
    adfb:	mov    QWORD PTR [rsi+0x4],rdx
    adff:	movabs rdx,0x100000000
    ae09:	mov    DWORD PTR [rsi],edi
    ae0b:	mov    QWORD PTR [rsi+0xc],rdx
    ae0f:	mov    DWORD PTR [rsi+0x14],0x0
    ae16:	mov    DWORD PTR [rip+0x338ec],eax        # 3e708 <numb_moves>
    ae1c:	jmp    a4f2 <gen+0x972>
    ae21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    ae2c:	nop    DWORD PTR [rax+0x0]

000000000000ae30 <unmake>:
    ae30:	endbr64 
    ae34:	push   r15
    ae36:	movsxd rsi,esi
    ae39:	lea    r8,[rip+0x2875e0]        # 292420 <path_x>
    ae40:	push   r14
    ae42:	lea    rax,[rsi+rsi*2]
    ae46:	push   r13
    ae48:	lea    rax,[rdi+rax*8]
    ae4c:	push   r12
    ae4e:	lea    r12,[rip+0x27280b]        # 27d660 <squares>
    ae55:	push   rbp
    ae56:	push   rbx
    ae57:	sub    rsp,0x18
    ae5b:	mov    r13d,DWORD PTR [rax]
    ae5e:	movsxd rbx,DWORD PTR [rax+0x4]
    ae62:	mov    esi,DWORD PTR [rax+0x14]
    ae65:	mov    r15d,DWORD PTR [rax+0x8]
    ae69:	movsxd r14,DWORD PTR [rax+0xc]
    ae6d:	mov    ecx,DWORD PTR [rax+0x10]
    ae70:	mov    eax,DWORD PTR [rip+0x28c8ea]        # 297760 <ply>
    ae76:	movsxd r9,DWORD PTR [r12+rbx*4]
    ae7a:	sub    eax,0x1
    ae7d:	mov    DWORD PTR [rip+0x28c8dd],eax        # 297760 <ply>
    ae83:	cdqe   
    ae85:	shl    rax,0x4
    ae89:	add    rax,r8
    ae8c:	mov    edi,DWORD PTR [rax+0x8]
    ae8f:	mov    DWORD PTR [rip+0x28884b],edi        # 2936e0 <ep_square>
    ae95:	mov    edi,DWORD PTR [rax+0xc]
    ae98:	mov    DWORD PTR [rip+0x272c66],edi        # 27db04 <fifty>
    ae9e:	mov    edi,DWORD PTR [rax+0x4]
    aea1:	test   r13d,r13d
    aea4:	je     b068 <unmake+0x238>
    aeaa:	movsxd rax,DWORD PTR [rax]
    aead:	movsxd rbp,r13d
    aeb0:	mov    rdx,rbx
    aeb3:	mov    DWORD PTR [r12+rbp*4],r9d
    aeb7:	lea    r9,[rip+0x270922]        # 27b7e0 <pieces>
    aebe:	mov    DWORD PTR [r12+rbx*4],eax
    aec2:	movsxd r10,DWORD PTR [r12+rbp*4]
    aec6:	mov    DWORD PTR [r9+rax*4],ebx
    aeca:	mov    DWORD PTR [r9+r10*4],r13d
    aece:	lea    r10,[rip+0x5ecab]        # 69b80 <is_promoted>
    aed5:	mov    DWORD PTR [r10+rax*4],edi
    aed9:	test   esi,esi
    aedb:	je     afa0 <unmake+0x170>
    aee1:	lea    rax,[rip+0x2729d8]        # 27d8c0 <board>
    aee8:	mov    r10d,DWORD PTR [rip+0x28c895]        # 297784 <hash>
    aeef:	mov    esi,DWORD PTR [rax+rbx*4]
    aef2:	cmp    esi,0x1
    aef5:	je     b2a8 <unmake+0x478>
    aefb:	cmp    esi,0x2
    aefe:	je     b3b0 <unmake+0x580>
    af04:	lea    rdx,[rip+0x288cb5]        # 293bc0 <moved>
    af0b:	mov    r11d,DWORD PTR [rip+0x27260e]        # 27d520 <white_to_move>
    af12:	lea    r8,[rip+0x28c8a7]        # 2977c0 <zobrist>
    af19:	mov    edi,DWORD PTR [rdx+rbx*4]
    af1c:	xor    r11d,0x1
    af20:	sub    edi,0x1
    af23:	lea    r12d,[rsi-0x5]
    af27:	cmp    r12d,0x1
    af2b:	jbe    b1c8 <unmake+0x398>
    af31:	test   r14d,r14d
    af34:	je     b140 <unmake+0x310>
    af3a:	lea    rcx,[r14+r14*8]
    af3e:	lea    r12,[rip+0x1963b]        # 24580 <material>
    af45:	mov    DWORD PTR [rax+rbx*4],r15d
    af49:	shl    rcx,0x4
    af4d:	add    rcx,rbx
    af50:	mov    r9d,DWORD PTR [r8+rcx*4]
    af54:	mov    ecx,DWORD PTR [rip+0x29586]        # 344e0 <Material>
    af5a:	sub    ecx,DWORD PTR [r12+r14*4]
    af5e:	and    esi,0x1
    af61:	je     b370 <unmake+0x540>
    af67:	xor    r9d,DWORD PTR [r8+rbp*4+0x240]
    af6f:	add    ecx,DWORD PTR [rip+0x1960f]        # 24584 <material+0x4>
    af75:	mov    DWORD PTR [rdx+rbx*4],edi
    af78:	xor    r10d,r9d
    af7b:	sub    DWORD PTR [rdx+rbp*4],0x1
    af7f:	mov    DWORD PTR [rax+rbp*4],0x1
    af86:	mov    DWORD PTR [rip+0x272593],r11d        # 27d520 <white_to_move>
    af8d:	mov    DWORD PTR [rip+0x28c7f0],r10d        # 297784 <hash>
    af94:	mov    DWORD PTR [rip+0x29546],ecx        # 344e0 <Material>
    af9a:	jmp    b0e5 <unmake+0x2b5>
    af9f:	nop
    afa0:	mov    r11d,DWORD PTR [rip+0x272579]        # 27d520 <white_to_move>
    afa7:	cmp    r15d,0xd
    afab:	je     b290 <unmake+0x460>
    afb1:	cmp    DWORD PTR [rip+0x270808],0x1        # 27b7c0 <Variant>
    afb8:	jbe    b0f8 <unmake+0x2c8>
    afbe:	movsxd rdx,r15d
    afc1:	lea    r8,[rip+0x28c7f8]        # 2977c0 <zobrist>
    afc8:	add    DWORD PTR [rip+0x608d5],0x1        # 6b8a4 <piece_count>
    afcf:	lea    rax,[rdx+rdx*8]
    afd3:	shl    rax,0x4
    afd7:	add    rax,rbx
    afda:	mov    r10d,DWORD PTR [r8+rax*4]
    afde:	lea    rax,[rip+0x1959b]        # 24580 <material>
    afe5:	xor    r10d,DWORD PTR [rip+0x28c798]        # 297784 <hash>
    afec:	mov    eax,DWORD PTR [rax+rdx*4]
    afef:	add    DWORD PTR [rip+0x294eb],eax        # 344e0 <Material>
    aff5:	lea    rax,[rip+0x2728c4]        # 27d8c0 <board>
    affc:	lea    rdx,[rip+0x288bbd]        # 293bc0 <moved>
    b003:	xor    r11d,0x1
    b007:	mov    edi,DWORD PTR [rdx+rbx*4]
    b00a:	mov    esi,DWORD PTR [rax+rbx*4]
    b00d:	sub    edi,0x1
    b010:	cmp    esi,0x1
    b013:	je     b180 <unmake+0x350>
    b019:	cmp    esi,0x2
    b01c:	jne    af23 <unmake+0xf3>
    b022:	mov    ecx,DWORD PTR [r8+rbp*4+0x480]
    b02a:	xor    ecx,DWORD PTR [r8+rbx*4+0x480]
    b032:	mov    DWORD PTR [rax+rbx*4],r15d
    b036:	xor    r10d,ecx
    b039:	mov    DWORD PTR [rdx+rbx*4],edi
    b03c:	mov    DWORD PTR [rax+rbp*4],0x2
    b043:	sub    DWORD PTR [rdx+rbp*4],0x1
    b047:	mov    DWORD PTR [rip+0x28c736],r10d        # 297784 <hash>
    b04e:	mov    DWORD PTR [rip+0x2724cb],r11d        # 27d520 <white_to_move>
    b055:	add    rsp,0x18
    b059:	pop    rbx
    b05a:	pop    rbp
    b05b:	pop    r12
    b05d:	pop    r13
    b05f:	pop    r14
    b061:	pop    r15
    b063:	ret    
    b064:	nop    DWORD PTR [rax+0x0]
    b068:	lea    rax,[rip+0x270771]        # 27b7e0 <pieces>
    b06f:	sub    DWORD PTR [rip+0x6082e],0x1        # 6b8a4 <piece_count>
    b076:	xor    esi,esi
    b078:	mov    DWORD PTR [rax+r9*4],0x0
    b080:	lea    rax,[rip+0x5eaf9]        # 69b80 <is_promoted>
    b087:	mov    DWORD PTR [rax+r9*4],edi
    b08b:	mov    eax,DWORD PTR [rip+0x27248f]        # 27d520 <white_to_move>
    b091:	mov    edi,r14d
    b094:	mov    DWORD PTR [r12+rbx*4],0x0
    b09c:	test   eax,eax
    b09e:	setne  sil
    b0a2:	call   4110 <DropaddHolding>
    b0a7:	lea    rax,[rip+0x194d2]        # 24580 <material>
    b0ae:	xor    DWORD PTR [rip+0x27246b],0x1        # 27d520 <white_to_move>
    b0b5:	mov    eax,DWORD PTR [rax+r14*4]
    b0b9:	sub    DWORD PTR [rip+0x29421],eax        # 344e0 <Material>
    b0bf:	lea    rax,[rip+0x2727fa]        # 27d8c0 <board>
    b0c6:	mov    DWORD PTR [rax+rbx*4],r15d
    b0ca:	lea    rax,[r14+r14*8]
    b0ce:	shl    rax,0x4
    b0d2:	add    rbx,rax
    b0d5:	lea    rax,[rip+0x28c6e4]        # 2977c0 <zobrist>
    b0dc:	mov    eax,DWORD PTR [rax+rbx*4]
    b0df:	xor    DWORD PTR [rip+0x28c69f],eax        # 297784 <hash>
    b0e5:	add    rsp,0x18
    b0e9:	pop    rbx
    b0ea:	pop    rbp
    b0eb:	pop    r12
    b0ed:	pop    r13
    b0ef:	pop    r14
    b0f1:	pop    r15
    b0f3:	ret    
    b0f4:	nop    DWORD PTR [rax+0x0]
    b0f8:	xor    r12d,r12d
    b0fb:	test   r11d,r11d
    b0fe:	mov    DWORD PTR [rsp+0x8],ecx
    b102:	setne  r12b
    b106:	test   edi,edi
    b108:	mov    edi,r15d
    b10b:	je     b428 <unmake+0x5f8>
    b111:	call   3f70 <SwitchPromoted>
    b116:	mov    esi,r12d
    b119:	mov    edi,eax
    b11b:	call   4080 <removeHolding>
    b120:	mov    r11d,DWORD PTR [rip+0x2723f9]        # 27d520 <white_to_move>
    b127:	mov    ecx,DWORD PTR [rsp+0x8]
    b12b:	lea    r9,[rip+0x2706ae]        # 27b7e0 <pieces>
    b132:	jmp    afbe <unmake+0x18e>
    b137:	nop    WORD PTR [rax+rax*1+0x0]
    b140:	mov    DWORD PTR [rax+rbp*4],esi
    b143:	mov    DWORD PTR [rax+rbx*4],r15d
    b147:	movsxd rax,DWORD PTR [rax+rbp*4]
    b14b:	mov    DWORD PTR [rdx+rbx*4],edi
    b14e:	lea    rax,[rax+rax*8]
    b152:	sub    DWORD PTR [rdx+rbp*4],0x1
    b156:	shl    rax,0x4
    b15a:	mov    DWORD PTR [rip+0x2723bf],r11d        # 27d520 <white_to_move>
    b161:	add    rbp,rax
    b164:	add    rbx,rax
    b167:	mov    eax,DWORD PTR [r8+rbx*4]
    b16b:	xor    eax,DWORD PTR [r8+rbp*4]
    b16f:	xor    r10d,eax
    b172:	mov    DWORD PTR [rip+0x28c60b],r10d        # 297784 <hash>
    b179:	jmp    b0e5 <unmake+0x2b5>
    b17e:	xchg   ax,ax
    b180:	mov    ecx,DWORD PTR [r8+rbp*4+0x240]
    b188:	xor    ecx,DWORD PTR [r8+rbx*4+0x240]
    b190:	mov    DWORD PTR [rax+rbx*4],r15d
    b194:	xor    r10d,ecx
    b197:	mov    DWORD PTR [rdx+rbx*4],edi
    b19a:	mov    DWORD PTR [rax+rbp*4],0x1
    b1a1:	sub    DWORD PTR [rdx+rbp*4],0x1
    b1a5:	mov    DWORD PTR [rip+0x28c5d8],r10d        # 297784 <hash>
    b1ac:	mov    DWORD PTR [rip+0x27236d],r11d        # 27d520 <white_to_move>
    b1b3:	add    rsp,0x18
    b1b7:	pop    rbx
    b1b8:	pop    rbp
    b1b9:	pop    r12
    b1bb:	pop    r13
    b1bd:	pop    r14
    b1bf:	pop    r15
    b1c1:	ret    
    b1c2:	nop    WORD PTR [rax+rax*1+0x0]
    b1c8:	test   r14d,r14d
    b1cb:	jne    af3a <unmake+0x10a>
    b1d1:	cmp    esi,0x5
    b1d4:	je     b450 <unmake+0x620>
    b1da:	mov    DWORD PTR [rax+rbx*4],r15d
    b1de:	mov    DWORD PTR [rax+rbp*4],0x6
    b1e5:	mov    eax,DWORD PTR [r8+rbp*4+0xd80]
    b1ed:	xor    eax,DWORD PTR [r8+rbx*4+0xd80]
    b1f5:	mov    DWORD PTR [rdx+rbx*4],edi
    b1f8:	xor    r10d,eax
    b1fb:	sub    DWORD PTR [rdx+rbp*4],0x1
    b1ff:	mov    DWORD PTR [rip+0x27231e],r13d        # 27d524 <bking_loc>
    b206:	mov    DWORD PTR [rip+0x272313],r11d        # 27d520 <white_to_move>
    b20d:	mov    DWORD PTR [rip+0x28c570],r10d        # 297784 <hash>
    b214:	cmp    ecx,0x3
    b217:	je     b508 <unmake+0x6d8>
    b21d:	cmp    ecx,0x4
    b220:	jne    b0e5 <unmake+0x2b5>
    b226:	movsxd rax,DWORD PTR [rip+0x2725f7]        # 27d824 <squares+0x1c4>
    b22d:	sub    DWORD PTR [rip+0x288b44],0x1        # 293d78 <moved+0x1b8>
    b234:	sub    DWORD PTR [rip+0x288b49],0x1        # 293d84 <moved+0x1c4>
    b23b:	mov    DWORD PTR [rip+0x2725d7],eax        # 27d818 <squares+0x1b8>
    b241:	mov    DWORD PTR [r9+rax*4],0x6e
    b249:	mov    eax,DWORD PTR [rip+0x28d929]        # 298b78 <zobrist+0x13b8>
    b24f:	mov    DWORD PTR [rip+0x27281f],0x8        # 27da78 <board+0x1b8>
    b259:	xor    eax,DWORD PTR [rip+0x28d925]        # 298b84 <zobrist+0x13c4>
    b25f:	mov    DWORD PTR [rip+0x27281b],0xd        # 27da84 <board+0x1c4>
    b269:	xor    r10d,eax
    b26c:	mov    DWORD PTR [rip+0x5df4e],0x0        # 691c4 <black_castled>
    b276:	mov    DWORD PTR [rip+0x2725a4],0x0        # 27d824 <squares+0x1c4>
    b280:	mov    DWORD PTR [rip+0x28c4fd],r10d        # 297784 <hash>
    b287:	jmp    b0e5 <unmake+0x2b5>
    b28c:	nop    DWORD PTR [rax+0x0]
    b290:	mov    r10d,DWORD PTR [rip+0x28c4ed]        # 297784 <hash>
    b297:	lea    r8,[rip+0x28c522]        # 2977c0 <zobrist>
    b29e:	jmp    aff5 <unmake+0x1c5>
    b2a3:	nop    DWORD PTR [rax+rax*1+0x0]
    b2a8:	lea    r13d,[rdx-0xc]
    b2ac:	xor    esi,esi
    b2ae:	mov    edi,0x1
    b2b3:	mov    QWORD PTR [rsp+0x8],rax
    b2b8:	lea    rdx,[rip+0x28c501]        # 2977c0 <zobrist>
    b2bf:	movsxd r14,r13d
    b2c2:	mov    DWORD PTR [rax+rbx*4],0xd
    b2c9:	mov    ecx,DWORD PTR [rdx+rbx*4+0x240]
    b2d0:	xor    ecx,DWORD PTR [rdx+rbp*4+0x240]
    b2d7:	mov    DWORD PTR [rax+rbp*4],0x1
    b2de:	xor    r10d,ecx
    b2e1:	xor    r10d,DWORD PTR [rdx+r14*4+0x480]
    b2e9:	mov    edx,DWORD PTR [rip+0x19299]        # 24588 <material+0x8>
    b2ef:	mov    DWORD PTR [rip+0x28c48e],r10d        # 297784 <hash>
    b2f6:	add    DWORD PTR [rip+0x291e4],edx        # 344e0 <Material>
    b2fc:	call   4080 <removeHolding>
    b301:	mov    rax,QWORD PTR [rsp+0x8]
    b306:	add    DWORD PTR [rip+0x60597],0x1        # 6b8a4 <piece_count>
    b30d:	mov    DWORD PTR [rax+r14*4],0x2
    b315:	lea    rax,[rip+0x2888a4]        # 293bc0 <moved>
    b31c:	lea    r8,[rip+0x2870fd]        # 292420 <path_x>
    b323:	xor    DWORD PTR [rip+0x2721f6],0x1        # 27d520 <white_to_move>
    b32a:	sub    DWORD PTR [rax+rbx*4],0x1
    b32e:	lea    r9,[rip+0x2704ab]        # 27b7e0 <pieces>
    b335:	sub    DWORD PTR [rax+rbp*4],0x1
    b339:	sub    DWORD PTR [rax+r14*4],0x1
    b33e:	movsxd rax,DWORD PTR [rip+0x28c41b]        # 297760 <ply>
    b345:	shl    rax,0x4
    b349:	movsxd rax,DWORD PTR [r8+rax*1]
    b34d:	mov    DWORD PTR [r12+r14*4],eax
    b351:	mov    DWORD PTR [r9+rax*4],r13d
    b355:	mov    DWORD PTR [r12+rbx*4],0x0
    b35d:	add    rsp,0x18
    b361:	pop    rbx
    b362:	pop    rbp
    b363:	pop    r12
    b365:	pop    r13
    b367:	pop    r14
    b369:	pop    r15
    b36b:	ret    
    b36c:	nop    DWORD PTR [rax+0x0]
    b370:	xor    r9d,DWORD PTR [r8+rbp*4+0x480]
    b378:	add    ecx,DWORD PTR [rip+0x1920a]        # 24588 <material+0x8>
    b37e:	mov    DWORD PTR [rdx+rbx*4],edi
    b381:	xor    r10d,r9d
    b384:	sub    DWORD PTR [rdx+rbp*4],0x1
    b388:	mov    DWORD PTR [rax+rbp*4],0x2
    b38f:	mov    DWORD PTR [rip+0x27218a],r11d        # 27d520 <white_to_move>
    b396:	mov    DWORD PTR [rip+0x28c3e7],r10d        # 297784 <hash>
    b39d:	mov    DWORD PTR [rip+0x2913d],ecx        # 344e0 <Material>
    b3a3:	jmp    b0e5 <unmake+0x2b5>
    b3a8:	nop    DWORD PTR [rax+rax*1+0x0]
    b3b0:	lea    r13d,[rdx+0xc]
    b3b4:	lea    rdx,[rip+0x28c405]        # 2977c0 <zobrist>
    b3bb:	mov    esi,0x1
    b3c0:	mov    edi,0x2
    b3c5:	mov    ecx,DWORD PTR [rdx+rbx*4+0x480]
    b3cc:	movsxd r14,r13d
    b3cf:	mov    QWORD PTR [rsp+0x8],rax
    b3d4:	xor    ecx,DWORD PTR [rdx+rbp*4+0x480]
    b3db:	mov    DWORD PTR [rax+rbx*4],0xd
    b3e2:	xor    r10d,ecx
    b3e5:	xor    r10d,DWORD PTR [rdx+r14*4+0x240]
    b3ed:	mov    edx,DWORD PTR [rip+0x19191]        # 24584 <material+0x4>
    b3f3:	mov    DWORD PTR [rax+rbp*4],0x2
    b3fa:	add    DWORD PTR [rip+0x290e0],edx        # 344e0 <Material>
    b400:	mov    DWORD PTR [rip+0x28c37d],r10d        # 297784 <hash>
    b407:	call   4080 <removeHolding>
    b40c:	mov    rax,QWORD PTR [rsp+0x8]
    b411:	add    DWORD PTR [rip+0x6048c],0x1        # 6b8a4 <piece_count>
    b418:	mov    DWORD PTR [rax+r14*4],0x1
    b420:	jmp    b315 <unmake+0x4e5>
    b425:	nop    DWORD PTR [rax]
    b428:	call   3ed0 <SwitchColor>
    b42d:	mov    esi,r12d
    b430:	mov    edi,eax
    b432:	call   4080 <removeHolding>
    b437:	mov    r11d,DWORD PTR [rip+0x2720e2]        # 27d520 <white_to_move>
    b43e:	mov    ecx,DWORD PTR [rsp+0x8]
    b442:	lea    r9,[rip+0x270397]        # 27b7e0 <pieces>
    b449:	jmp    afbe <unmake+0x18e>
    b44e:	xchg   ax,ax
    b450:	mov    DWORD PTR [rax+rbx*4],r15d
    b454:	mov    DWORD PTR [rax+rbp*4],0x5
    b45b:	mov    eax,DWORD PTR [r8+rbp*4+0xb40]
    b463:	xor    eax,DWORD PTR [r8+rbx*4+0xb40]
    b46b:	mov    DWORD PTR [rdx+rbx*4],edi
    b46e:	xor    r10d,eax
    b471:	sub    DWORD PTR [rdx+rbp*4],0x1
    b475:	mov    DWORD PTR [rip+0x272b60],r13d        # 27dfdc <wking_loc>
    b47c:	mov    DWORD PTR [rip+0x27209d],r11d        # 27d520 <white_to_move>
    b483:	mov    DWORD PTR [rip+0x28c2fa],r10d        # 297784 <hash>
    b48a:	cmp    ecx,0x1
    b48d:	je     b56e <unmake+0x73e>
    b493:	cmp    ecx,0x2
    b496:	jne    b0e5 <unmake+0x2b5>
    b49c:	movsxd rax,DWORD PTR [rip+0x272231]        # 27d6d4 <squares+0x74>
    b4a3:	sub    DWORD PTR [rip+0x28877e],0x1        # 293c28 <moved+0x68>
    b4aa:	sub    DWORD PTR [rip+0x288783],0x1        # 293c34 <moved+0x74>
    b4b1:	mov    DWORD PTR [rip+0x272211],eax        # 27d6c8 <squares+0x68>
    b4b7:	mov    DWORD PTR [r9+rax*4],0x1a
    b4bf:	mov    eax,DWORD PTR [rip+0x28d32f]        # 2987f4 <zobrist+0x1034>
    b4c5:	mov    DWORD PTR [rip+0x272459],0x7        # 27d928 <board+0x68>
    b4cf:	xor    eax,DWORD PTR [rip+0x28d313]        # 2987e8 <zobrist+0x1028>
    b4d5:	mov    DWORD PTR [rip+0x272455],0xd        # 27d934 <board+0x74>
    b4df:	xor    r10d,eax
    b4e2:	mov    DWORD PTR [rip+0x5dcd4],0x0        # 691c0 <white_castled>
    b4ec:	mov    DWORD PTR [rip+0x2721de],0x0        # 27d6d4 <squares+0x74>
    b4f6:	mov    DWORD PTR [rip+0x28c287],r10d        # 297784 <hash>
    b4fd:	jmp    b0e5 <unmake+0x2b5>
    b502:	nop    WORD PTR [rax+rax*1+0x0]
    b508:	movsxd rax,DWORD PTR [rip+0x27231d]        # 27d82c <squares+0x1cc>
    b50f:	sub    DWORD PTR [rip+0x28887e],0x1        # 293d94 <moved+0x1d4>
    b516:	sub    DWORD PTR [rip+0x28886f],0x1        # 293d8c <moved+0x1cc>
    b51d:	mov    DWORD PTR [rip+0x272311],eax        # 27d834 <squares+0x1d4>
    b523:	mov    DWORD PTR [r9+rax*4],0x75
    b52b:	mov    eax,DWORD PTR [rip+0x28d663]        # 298b94 <zobrist+0x13d4>
    b531:	mov    DWORD PTR [rip+0x272559],0x8        # 27da94 <board+0x1d4>
    b53b:	xor    eax,DWORD PTR [rip+0x28d64b]        # 298b8c <zobrist+0x13cc>
    b541:	mov    DWORD PTR [rip+0x272541],0xd        # 27da8c <board+0x1cc>
    b54b:	xor    r10d,eax
    b54e:	mov    DWORD PTR [rip+0x5dc6c],0x0        # 691c4 <black_castled>
    b558:	mov    DWORD PTR [rip+0x2722ca],0x0        # 27d82c <squares+0x1cc>
    b562:	mov    DWORD PTR [rip+0x28c21b],r10d        # 297784 <hash>
    b569:	jmp    b0e5 <unmake+0x2b5>
    b56e:	movsxd rax,DWORD PTR [rip+0x272167]        # 27d6dc <squares+0x7c>
    b575:	sub    DWORD PTR [rip+0x2886c8],0x1        # 293c44 <moved+0x84>
    b57c:	sub    DWORD PTR [rip+0x2886b9],0x1        # 293c3c <moved+0x7c>
    b583:	mov    DWORD PTR [rip+0x27215b],eax        # 27d6e4 <squares+0x84>
    b589:	mov    DWORD PTR [r9+rax*4],0x21
    b591:	mov    eax,DWORD PTR [rip+0x28d26d]        # 298804 <zobrist+0x1044>
    b597:	mov    DWORD PTR [rip+0x2723a3],0x7        # 27d944 <board+0x84>
    b5a1:	xor    eax,DWORD PTR [rip+0x28d255]        # 2987fc <zobrist+0x103c>
    b5a7:	mov    DWORD PTR [rip+0x27238b],0xd        # 27d93c <board+0x7c>
    b5b1:	xor    r10d,eax
    b5b4:	mov    DWORD PTR [rip+0x5dc02],0x0        # 691c0 <white_castled>
    b5be:	mov    DWORD PTR [rip+0x272114],0x0        # 27d6dc <squares+0x7c>
    b5c8:	mov    DWORD PTR [rip+0x28c1b5],r10d        # 297784 <hash>
    b5cf:	jmp    b0e5 <unmake+0x2b5>
    b5d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b5de:	xchg   ax,ax

000000000000b5e0 <King>:
    b5e0:	endbr64 
    b5e4:	movsxd rcx,edi
    b5e7:	lea    rdx,[rip+0x11292]        # 1c880 <Xfile>
    b5ee:	xor    eax,eax
    b5f0:	cmp    DWORD PTR [rdx+rcx*4],0x5
    b5f4:	jle    b62a <King+0x4a>
    b5f6:	lea    edx,[rdi-0x1]
    b5f9:	lea    rcx,[rip+0x2722c0]        # 27d8c0 <board>
    b600:	movsxd rdx,edx
    b603:	mov    edx,DWORD PTR [rcx+rdx*4]
    b606:	add    edx,0x1
    b609:	mov    r8d,edx
    b60c:	sar    r8d,1
    b60f:	cmp    r8d,0x4
    b613:	je     b658 <King+0x78>
    b615:	add    edi,0x1
    b618:	movsxd rdi,edi
    b61b:	mov    edx,DWORD PTR [rcx+rdi*4]
    b61e:	add    edx,0x1
    b621:	mov    ecx,edx
    b623:	sar    ecx,1
    b625:	cmp    ecx,0x4
    b628:	je     b638 <King+0x58>
    b62a:	mov    edx,eax
    b62c:	neg    edx
    b62e:	cmp    esi,0x1
    b631:	cmove  eax,edx
    b634:	ret    
    b635:	nop    DWORD PTR [rax]
    b638:	xor    ecx,ecx
    b63a:	cmp    edx,0x8
    b63d:	lea    edx,[rax+0x2]
    b640:	setne  cl
    b643:	cmp    ecx,esi
    b645:	cmove  eax,edx
    b648:	mov    edx,eax
    b64a:	neg    edx
    b64c:	cmp    esi,0x1
    b64f:	cmove  eax,edx
    b652:	ret    
    b653:	nop    DWORD PTR [rax+rax*1+0x0]
    b658:	xor    eax,eax
    b65a:	cmp    edx,0x8
    b65d:	setne  al
    b660:	cmp    eax,esi
    b662:	sete   al
    b665:	movzx  eax,al
    b668:	add    eax,eax
    b66a:	jmp    b615 <King+0x35>
    b66c:	nop    DWORD PTR [rax+0x0]

000000000000b670 <Queen>:
    b670:	endbr64 
    b674:	mov    eax,esi
    b676:	lea    rdx,[rip+0x330a3]        # 3e720 <king_locs>
    b67d:	push   r12
    b67f:	lea    r11,[rip+0x118ea]        # 1cf70 <dir.4495>
    b686:	xor    eax,0x1
    b689:	push   rbp
    b68a:	lea    r9,[rip+0x27222f]        # 27d8c0 <board>
    b691:	mov    ebp,0xffffffff
    b696:	cdqe   
    b698:	push   rbx
    b699:	lea    rbx,[r11+0x10]
    b69d:	movsxd rcx,DWORD PTR [rdx+rax*4]
    b6a1:	movsxd rdx,edi
    b6a4:	lea    rax,[rdx+rdx*8]
    b6a8:	lea    rdx,[rip+0x474b1]        # 52b60 <distance>
    b6af:	shl    rax,0x4
    b6b3:	add    rax,rcx
    b6b6:	movsxd rdx,DWORD PTR [rdx+rax*4]
    b6ba:	lea    rax,[rip+0x118df]        # 1cfa0 <std_q_tropism>
    b6c1:	mov    r10d,DWORD PTR [rax+rdx*4]
    b6c5:	xor    edx,edx
    b6c7:	add    r10d,0x384
    b6ce:	lea    eax,[rdi+rbp*1]
    b6d1:	movsxd rcx,eax
    b6d4:	cmp    DWORD PTR [r9+rcx*4],0xd
    b6d9:	jne    b704 <Queen+0x94>
    b6db:	movsxd rcx,ebp
    b6de:	add    eax,ebp
    b6e0:	lea    r8,[rcx*4+0x0]
    b6e8:	cdqe   
    b6ea:	neg    rcx
    b6ed:	lea    rax,[r9+rax*4]
    b6f1:	shl    rcx,0x2
    b6f5:	nop    DWORD PTR [rax]
    b6f8:	add    rax,r8
    b6fb:	add    edx,0x1
    b6fe:	cmp    DWORD PTR [rax+rcx*1],0xd
    b702:	je     b6f8 <Queen+0x88>
    b704:	add    r11,0x4
    b708:	cmp    r11,rbx
    b70b:	je     b718 <Queen+0xa8>
    b70d:	mov    ebp,DWORD PTR [r11]
    b710:	jmp    b6ce <Queen+0x5e>
    b712:	nop    WORD PTR [rax+rax*1+0x0]
    b718:	lea    rbx,[rip+0x11841]        # 1cf60 <dir.4482>
    b71f:	add    edx,edx
    b721:	mov    r12d,0xfffffff3
    b727:	xor    ecx,ecx
    b729:	lea    rbp,[rbx+0x10]
    b72d:	lea    eax,[rdi+r12*1]
    b731:	movsxd r8,eax
    b734:	cmp    DWORD PTR [r9+r8*4],0xd
    b739:	jne    b76d <Queen+0xfd>
    b73b:	movsxd r8,r12d
    b73e:	add    eax,r12d
    b741:	lea    r11,[r8*4+0x0]
    b749:	cdqe   
    b74b:	neg    r8
    b74e:	lea    rax,[r9+rax*4]
    b752:	shl    r8,0x2
    b756:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b760:	add    rax,r11
    b763:	add    ecx,0x1
    b766:	cmp    DWORD PTR [rax+r8*1],0xd
    b76b:	je     b760 <Queen+0xf0>
    b76d:	add    rbx,0x4
    b771:	cmp    rbx,rbp
    b774:	je     b780 <Queen+0x110>
    b776:	mov    r12d,DWORD PTR [rbx]
    b779:	jmp    b72d <Queen+0xbd>
    b77b:	nop    DWORD PTR [rax+rax*1+0x0]
    b780:	lea    eax,[rdx+rcx*2]
    b783:	cmp    eax,0x4
    b786:	jg     b791 <Queen+0x121>
    b788:	test   eax,eax
    b78a:	jne    b7a3 <Queen+0x133>
    b78c:	mov    eax,0xfffffff1
    b791:	add    eax,r10d
    b794:	pop    rbx
    b795:	pop    rbp
    b796:	mov    edx,eax
    b798:	pop    r12
    b79a:	neg    edx
    b79c:	cmp    esi,0x1
    b79f:	cmove  eax,edx
    b7a2:	ret    
    b7a3:	lea    edx,[rax-0x5]
    b7a6:	cmp    eax,0x2
    b7a9:	mov    eax,0xfffffff8
    b7ae:	cmovne eax,edx
    b7b1:	jmp    b791 <Queen+0x121>
    b7b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    b7be:	xchg   ax,ax

000000000000b7c0 <Rook>:
    b7c0:	endbr64 
    b7c4:	mov    eax,esi
    b7c6:	lea    rdx,[rip+0x32f53]        # 3e720 <king_locs>
    b7cd:	push   rbp
    b7ce:	lea    r10,[rip+0x1179b]        # 1cf70 <dir.4495>
    b7d5:	xor    eax,0x1
    b7d8:	push   rbx
    b7d9:	lea    rbp,[r10+0x10]
    b7dd:	lea    r11,[rip+0x2720dc]        # 27d8c0 <board>
    b7e4:	cdqe   
    b7e6:	movsxd rcx,DWORD PTR [rdx+rax*4]
    b7ea:	movsxd rdx,edi
    b7ed:	lea    rax,[rdx+rdx*8]
    b7f1:	lea    rdx,[rip+0x32f48]        # 3e740 <rookdistance>
    b7f8:	shl    rax,0x4
    b7fc:	add    rax,rcx
    b7ff:	movsxd rdx,DWORD PTR [rdx+rax*4]
    b803:	lea    rax,[rip+0x117d6]        # 1cfe0 <std_r_tropism>
    b80a:	mov    eax,DWORD PTR [rax+rdx*4]
    b80d:	xor    edx,edx
    b80f:	lea    ebx,[rax+0x1f4]
    b815:	mov    eax,0xffffffff
    b81a:	lea    r9d,[rdi+rax*1]
    b81e:	movsxd rcx,r9d
    b821:	cmp    DWORD PTR [r11+rcx*4],0xd
    b826:	jne    b854 <Rook+0x94>
    b828:	movsxd rcx,eax
    b82b:	add    r9d,eax
    b82e:	lea    r8,[rcx*4+0x0]
    b836:	movsxd r9,r9d
    b839:	neg    rcx
    b83c:	lea    rax,[r11+r9*4]
    b840:	shl    rcx,0x2
    b844:	nop    DWORD PTR [rax+0x0]
    b848:	add    rax,r8
    b84b:	add    edx,0x1
    b84e:	cmp    DWORD PTR [rax+rcx*1],0xd
    b852:	je     b848 <Rook+0x88>
    b854:	add    r10,0x4
    b858:	cmp    r10,rbp
    b85b:	je     b868 <Rook+0xa8>
    b85d:	mov    eax,DWORD PTR [r10]
    b860:	jmp    b81a <Rook+0x5a>
    b862:	nop    WORD PTR [rax+rax*1+0x0]
    b868:	add    edx,edx
    b86a:	lea    eax,[rdx-0x5]
    b86d:	cmp    edx,0x3
    b870:	cmovl  edx,eax
    b873:	lea    eax,[rdx+rbx*1]
    b876:	lea    edx,[rdi-0x1]
    b879:	movsxd rdx,edx
    b87c:	cmp    DWORD PTR [r11+rdx*4],0xd
    b881:	je     b893 <Rook+0xd3>
    b883:	lea    edx,[rdi+0x1]
    b886:	movsxd rdx,edx
    b889:	cmp    DWORD PTR [r11+rdx*4],0xd
    b88e:	je     b893 <Rook+0xd3>
    b890:	sub    eax,0x5
    b893:	cmp    DWORD PTR [rip+0x472a3],0x514        # 52b40 <wmat>
    b89d:	je     b8c8 <Rook+0x108>
    b89f:	movsxd rdx,esi
    b8a2:	lea    rcx,[rip+0x116af]        # 1cf58 <square_d1.4518>
    b8a9:	mov    edx,DWORD PTR [rcx+rdx*4]
    b8ac:	cmp    edx,edi
    b8ae:	je     b8d6 <Rook+0x116>
    b8b0:	add    edx,0x1
    b8b3:	lea    ecx,[rax+0xa]
    b8b6:	cmp    edx,edi
    b8b8:	cmove  eax,ecx
    b8bb:	mov    edx,eax
    b8bd:	pop    rbx
    b8be:	pop    rbp
    b8bf:	neg    edx
    b8c1:	cmp    esi,0x1
    b8c4:	cmove  eax,edx
    b8c7:	ret    
    b8c8:	cmp    DWORD PTR [rip+0x32e5a],0x514        # 3e72c <bmat>
    b8d2:	jne    b89f <Rook+0xdf>
    b8d4:	jmp    b8bb <Rook+0xfb>
    b8d6:	lea    edx,[rdi+0x1]
    b8d9:	lea    ecx,[rax+0xa]
    b8dc:	movsxd rdx,edx
    b8df:	mov    edx,DWORD PTR [r11+rdx*4]
    b8e3:	add    edx,0x1
    b8e6:	mov    edi,edx
    b8e8:	sar    edi,1
    b8ea:	cmp    edi,0x4
    b8ed:	je     b8fe <Rook+0x13e>
    b8ef:	mov    eax,ecx
    b8f1:	mov    edx,eax
    b8f3:	pop    rbx
    b8f4:	pop    rbp
    b8f5:	neg    edx
    b8f7:	cmp    esi,0x1
    b8fa:	cmove  eax,edx
    b8fd:	ret    
    b8fe:	cmp    edx,0x8
    b901:	setne  dl
    b904:	add    eax,0xf
    b907:	movzx  edx,dl
    b90a:	cmp    edx,esi
    b90c:	cmove  ecx,eax
    b90f:	mov    eax,ecx
    b911:	jmp    b8f1 <Rook+0x131>
    b913:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    b91e:	xchg   ax,ax

000000000000b920 <Bishop>:
    b920:	endbr64 
    b924:	movsxd rdx,edi
    b927:	lea    rax,[rip+0x124f2]        # 1de20 <sbishop>
    b92e:	lea    r8,[rip+0x32deb]        # 3e720 <king_locs>
    b935:	push   rbp
    b936:	mov    ecx,DWORD PTR [rax+rdx*4]
    b939:	mov    eax,esi
    b93b:	push   rbx
    b93c:	lea    r10,[rip+0x1161d]        # 1cf60 <dir.4482>
    b943:	xor    eax,0x1
    b946:	lea    rbp,[r10+0x10]
    b94a:	lea    r11,[rip+0x271f6f]        # 27d8c0 <board>
    b951:	cdqe   
    b953:	movsxd r8,DWORD PTR [r8+rax*4]
    b957:	lea    rax,[rdx+rdx*8]
    b95b:	lea    rdx,[rip+0x471fe]        # 52b60 <distance>
    b962:	shl    rax,0x4
    b966:	add    rax,r8
    b969:	movsxd rdx,DWORD PTR [rdx+rax*4]
    b96d:	lea    rax,[rip+0x1160c]        # 1cf80 <std_b_tropism>
    b974:	mov    eax,DWORD PTR [rax+rdx*4]
    b977:	xor    edx,edx
    b979:	lea    ebx,[rcx+rax*1+0x145]
    b980:	mov    eax,0xfffffff3
    b985:	lea    r9d,[rdi+rax*1]
    b989:	movsxd rcx,r9d
    b98c:	cmp    DWORD PTR [r11+rcx*4],0xd
    b991:	jne    b9bc <Bishop+0x9c>
    b993:	movsxd rcx,eax
    b996:	add    r9d,eax
    b999:	lea    r8,[rcx*4+0x0]
    b9a1:	movsxd r9,r9d
    b9a4:	neg    rcx
    b9a7:	lea    rax,[r11+r9*4]
    b9ab:	shl    rcx,0x2
    b9af:	nop
    b9b0:	add    rax,r8
    b9b3:	add    edx,0x1
    b9b6:	cmp    DWORD PTR [rax+rcx*1],0xd
    b9ba:	je     b9b0 <Bishop+0x90>
    b9bc:	add    r10,0x4
    b9c0:	cmp    r10,rbp
    b9c3:	je     b9d0 <Bishop+0xb0>
    b9c5:	mov    eax,DWORD PTR [r10]
    b9c8:	jmp    b985 <Bishop+0x65>
    b9ca:	nop    WORD PTR [rax+rax*1+0x0]
    b9d0:	add    edx,edx
    b9d2:	lea    eax,[rdx-0x5]
    b9d5:	cmp    edx,0x3
    b9d8:	cmovl  edx,eax
    b9db:	lea    eax,[rdx+rbx*1]
    b9de:	test   esi,esi
    b9e0:	jne    b9f8 <Bishop+0xd8>
    b9e2:	cmp    edi,0x27
    b9e5:	jne    b9f8 <Bishop+0xd8>
    b9e7:	cmp    DWORD PTR [rip+0x271fa2],0x1        # 27d990 <board+0xd0>
    b9ee:	je     ba10 <Bishop+0xf0>
    b9f0:	pop    rbx
    b9f1:	pop    rbp
    b9f2:	ret    
    b9f3:	nop    DWORD PTR [rax+rax*1+0x0]
    b9f8:	cmp    esi,0x1
    b9fb:	jne    b9f0 <Bishop+0xd0>
    b9fd:	cmp    edi,0x63
    ba00:	jne    ba13 <Bishop+0xf3>
    ba02:	cmp    DWORD PTR [rip+0x272017],0x2        # 27da20 <board+0x160>
    ba09:	je     ba10 <Bishop+0xf0>
    ba0b:	neg    eax
    ba0d:	pop    rbx
    ba0e:	pop    rbp
    ba0f:	ret    
    ba10:	sub    eax,0x5
    ba13:	cmp    esi,0x1
    ba16:	je     ba0b <Bishop+0xeb>
    ba18:	pop    rbx
    ba19:	pop    rbp
    ba1a:	ret    
    ba1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ba20 <Knight>:
    ba20:	endbr64 
    ba24:	movsxd rdi,edi
    ba27:	lea    rax,[rip+0x121b2]        # 1dbe0 <sknight>
    ba2e:	lea    rcx,[rip+0x32ceb]        # 3e720 <king_locs>
    ba35:	mov    edx,DWORD PTR [rax+rdi*4]
    ba38:	mov    eax,esi
    ba3a:	xor    eax,0x1
    ba3d:	cdqe   
    ba3f:	movsxd rcx,DWORD PTR [rcx+rax*4]
    ba43:	lea    rax,[rdi+rdi*8]
    ba47:	shl    rax,0x4
    ba4b:	add    rax,rcx
    ba4e:	lea    rcx,[rip+0x4710b]        # 52b60 <distance>
    ba55:	movsxd rcx,DWORD PTR [rcx+rax*4]
    ba59:	lea    rax,[rip+0x11560]        # 1cfc0 <std_n_tropism>
    ba60:	mov    eax,DWORD PTR [rax+rcx*4]
    ba63:	lea    eax,[rdx+rax*1+0x136]
    ba6a:	mov    edx,eax
    ba6c:	neg    edx
    ba6e:	cmp    esi,0x1
    ba71:	cmove  eax,edx
    ba74:	ret    
    ba75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000ba80 <Pawn>:
    ba80:	endbr64 
    ba84:	mov    eax,esi
    ba86:	lea    r8,[rip+0x32c93]        # 3e720 <king_locs>
    ba8d:	lea    rcx,[rip+0x470cc]        # 52b60 <distance>
    ba94:	xor    eax,0x1
    ba97:	cdqe   
    ba99:	movsxd rdx,DWORD PTR [r8+rax*4]
    ba9d:	movsxd rax,edi
    baa0:	lea    rax,[rax+rax*8]
    baa4:	shl    rax,0x4
    baa8:	add    rdx,rax
    baab:	movsxd r9,DWORD PTR [rcx+rdx*4]
    baaf:	lea    rdx,[rip+0x1158a]        # 1d040 <std_p_tropism>
    bab6:	mov    edx,DWORD PTR [rdx+r9*4]
    baba:	movsxd r9,esi
    babd:	movsxd r8,DWORD PTR [r8+r9*4]
    bac1:	add    rax,r8
    bac4:	movsxd rcx,DWORD PTR [rcx+rax*4]
    bac8:	lea    rax,[rip+0x11551]        # 1d020 <std_own_p_tropism>
    bacf:	mov    eax,DWORD PTR [rax+rcx*4]
    bad2:	lea    rcx,[rip+0x271de7]        # 27d8c0 <board>
    bad9:	lea    eax,[rdx+rax*1+0x64]
    badd:	lea    edx,[rdi+0x1]
    bae0:	movsxd rdx,edx
    bae3:	mov    edx,DWORD PTR [rcx+rdx*4]
    bae6:	add    edx,0x1
    bae9:	mov    r8d,edx
    baec:	sar    r8d,1
    baef:	cmp    r8d,0x1
    baf3:	jne    bb08 <Pawn+0x88>
    baf5:	xor    r8d,r8d
    baf8:	cmp    edx,0x2
    bafb:	lea    edx,[rax+0x5]
    bafe:	setne  r8b
    bb02:	cmp    r8d,esi
    bb05:	cmove  eax,edx
    bb08:	lea    edx,[rdi+0xb]
    bb0b:	movsxd rdx,edx
    bb0e:	mov    edx,DWORD PTR [rcx+rdx*4]
    bb11:	add    edx,0x1
    bb14:	mov    r8d,edx
    bb17:	sar    r8d,1
    bb1a:	cmp    r8d,0x1
    bb1e:	je     bb58 <Pawn+0xd8>
    bb20:	add    edi,0xd
    bb23:	movsxd rdi,edi
    bb26:	mov    edx,DWORD PTR [rcx+rdi*4]
    bb29:	add    edx,0x1
    bb2c:	mov    ecx,edx
    bb2e:	sar    ecx,1
    bb30:	cmp    ecx,0x1
    bb33:	jne    bb48 <Pawn+0xc8>
    bb35:	cmp    edx,0x2
    bb38:	setne  dl
    bb3b:	movzx  edx,dl
    bb3e:	cmp    edx,esi
    bb40:	sete   dl
    bb43:	movzx  edx,dl
    bb46:	add    eax,edx
    bb48:	mov    edx,eax
    bb4a:	neg    edx
    bb4c:	cmp    esi,0x1
    bb4f:	cmove  eax,edx
    bb52:	ret    
    bb53:	nop    DWORD PTR [rax+rax*1+0x0]
    bb58:	cmp    edx,0x2
    bb5b:	setne  dl
    bb5e:	movzx  edx,dl
    bb61:	cmp    edx,esi
    bb63:	jne    bb20 <Pawn+0xa0>
    bb65:	add    eax,0x1
    bb68:	mov    edx,eax
    bb6a:	neg    edx
    bb6c:	cmp    esi,0x1
    bb6f:	cmove  eax,edx
    bb72:	ret    
    bb73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    bb7e:	xchg   ax,ax

000000000000bb80 <ErrorIt>:
    bb80:	endbr64 
    bb84:	sub    rsp,0x8
    bb88:	mov    edx,edi
    bb8a:	mov    ecx,esi
    bb8c:	mov    edi,0x1
    bb91:	lea    rsi,[rip+0x11348]        # 1cee0 <knight_o.4552+0x20>
    bb98:	xor    eax,eax
    bb9a:	call   1420 <__printf_chk@plt>
    bb9f:	xor    eax,eax
    bba1:	add    rsp,0x8
    bba5:	ret    
    bba6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000bbb0 <check_phase>:
    bbb0:	endbr64 
    bbb4:	mov    esi,DWORD PTR [rip+0x5fcea]        # 6b8a4 <piece_count>
    bbba:	test   esi,esi
    bbbc:	jle    bc65 <check_phase+0xb5>
    bbc2:	lea    rdx,[rip+0x26fc1b]        # 27b7e4 <pieces+0x4>
    bbc9:	mov    ecx,0x1
    bbce:	xor    edi,edi
    bbd0:	lea    r8,[rip+0x271ce9]        # 27d8c0 <board>
    bbd7:	nop    WORD PTR [rax+rax*1+0x0]
    bbe0:	movsxd rax,DWORD PTR [rdx]
    bbe3:	test   eax,eax
    bbe5:	je     bbfe <check_phase+0x4e>
    bbe7:	mov    eax,DWORD PTR [r8+rax*4]
    bbeb:	add    ecx,0x1
    bbee:	cmp    eax,0xd
    bbf1:	je     bbfe <check_phase+0x4e>
    bbf3:	cmp    eax,0x2
    bbf6:	seta   al
    bbf9:	cmp    al,0x1
    bbfb:	sbb    edi,0xffffffff
    bbfe:	add    rdx,0x4
    bc02:	cmp    ecx,esi
    bc04:	jle    bbe0 <check_phase+0x30>
    bc06:	cmp    edi,0xb
    bc09:	jle    bc60 <check_phase+0xb0>
    bc0b:	mov    edx,DWORD PTR [rip+0x5d5af]        # 691c0 <white_castled>
    bc11:	test   edx,edx
    bc13:	jne    bc38 <check_phase+0x88>
    bc15:	cmp    DWORD PTR [rip+0x271d1c],0x5        # 27d938 <board+0x78>
    bc1c:	je     bc4b <check_phase+0x9b>
    bc1e:	cmp    DWORD PTR [rip+0x271e63],0x6        # 27da88 <board+0x1c8>
    bc25:	je     bc4b <check_phase+0x9b>
    bc27:	mov    DWORD PTR [rip+0x28bb17],0x1        # 297748 <phase>
    bc31:	ret    
    bc32:	nop    WORD PTR [rax+rax*1+0x0]
    bc38:	mov    eax,DWORD PTR [rip+0x5d586]        # 691c4 <black_castled>
    bc3e:	test   eax,eax
    bc40:	jne    bc27 <check_phase+0x77>
    bc42:	cmp    DWORD PTR [rip+0x271cef],0x5        # 27d938 <board+0x78>
    bc49:	jne    bc1e <check_phase+0x6e>
    bc4b:	mov    DWORD PTR [rip+0x28baf3],0x0        # 297748 <phase>
    bc55:	ret    
    bc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    bc60:	cmp    edi,0x6
    bc63:	jg     bc27 <check_phase+0x77>
    bc65:	mov    DWORD PTR [rip+0x28bad9],0x2        # 297748 <phase>
    bc6f:	ret    

000000000000bc70 <std_eval>:
    bc70:	endbr64 
    bc74:	push   r15
    bc76:	push   r14
    bc78:	push   r13
    bc7a:	push   r12
    bc7c:	push   rbp
    bc7d:	push   rbx
    bc7e:	sub    rsp,0x138
    bc85:	mov    ecx,DWORD PTR [rip+0x271895]        # 27d520 <white_to_move>
    bc8b:	mov    edx,DWORD PTR [rip+0x2884f]        # 344e0 <Material>
    bc91:	mov    rax,QWORD PTR fs:0x28
    bc9a:	mov    QWORD PTR [rsp+0x128],rax
    bca2:	xor    eax,eax
    bca4:	mov    DWORD PTR [rsp+0x68],0x0
    bcac:	test   ecx,ecx
    bcae:	jne    bcb2 <std_eval+0x42>
    bcb0:	neg    edx
    bcb2:	mov    ecx,DWORD PTR [rip+0x32a70]        # 3e728 <maxposdiff>
    bcb8:	mov    eax,edx
    bcba:	sub    eax,ecx
    bcbc:	cmp    eax,esi
    bcbe:	jge    bcc7 <std_eval+0x57>
    bcc0:	lea    eax,[rcx+rdx*1]
    bcc3:	cmp    eax,edi
    bcc5:	jg     bcf0 <std_eval+0x80>
    bcc7:	mov    rbx,QWORD PTR [rsp+0x128]
    bccf:	xor    rbx,QWORD PTR fs:0x28
    bcd8:	jne    d028 <std_eval+0x13b8>
    bcde:	add    rsp,0x138
    bce5:	pop    rbx
    bce6:	pop    rbp
    bce7:	pop    r12
    bce9:	pop    r13
    bceb:	pop    r14
    bced:	pop    r15
    bcef:	ret    
    bcf0:	lea    rsi,[rsp+0x6c]
    bcf5:	lea    rdi,[rsp+0x68]
    bcfa:	mov    DWORD PTR [rsp+0x6c],0x0
    bd02:	call   43f0 <checkECache>
    bd07:	mov    eax,DWORD PTR [rsp+0x6c]
    bd0b:	mov    DWORD PTR [rsp+0x1c],eax
    bd0f:	test   eax,eax
    bd11:	je     bd28 <std_eval+0xb8>
    bd13:	cmp    DWORD PTR [rip+0x271806],0x1        # 27d520 <white_to_move>
    bd1a:	mov    eax,DWORD PTR [rsp+0x68]
    bd1e:	je     bcc7 <std_eval+0x57>
    bd20:	neg    eax
    bd22:	jmp    bcc7 <std_eval+0x57>
    bd24:	nop    DWORD PTR [rax+0x0]
    bd28:	lea    rdx,[rsp+0xd0]
    bd30:	mov    ecx,0xb
    bd35:	xor    eax,eax
    bd37:	mov    rdi,rdx
    bd3a:	lea    rdx,[rsp+0xa0]
    bd42:	rep stos QWORD PTR es:[rdi],rax
    bd45:	lea    rcx,[rsp+0x70]
    bd4a:	nop    WORD PTR [rax+rax*1+0x0]
    bd50:	mov    DWORD PTR [rcx+rax*1],0x7
    bd57:	mov    DWORD PTR [rdx+rax*1],0x2
    bd5e:	add    rax,0x4
    bd62:	cmp    rax,0x2c
    bd66:	jne    bd50 <std_eval+0xe0>
    bd68:	mov    eax,DWORD PTR [rip+0x27226e]        # 27dfdc <wking_loc>
    bd6e:	mov    r10d,DWORD PTR [rip+0x5fb2f]        # 6b8a4 <piece_count>
    bd75:	mov    DWORD PTR [rip+0x46dc1],0x0        # 52b40 <wmat>
    bd7f:	mov    DWORD PTR [rip+0x329a3],0x0        # 3e72c <bmat>
    bd89:	mov    DWORD PTR [rip+0x32991],eax        # 3e720 <king_locs>
    bd8f:	mov    eax,DWORD PTR [rip+0x27178f]        # 27d524 <bking_loc>
    bd95:	mov    DWORD PTR [rip+0x32989],eax        # 3e724 <king_locs+0x4>
    bd9b:	test   r10d,r10d
    bd9e:	jle    ccbb <std_eval+0x104b>
    bda4:	lea    r14,[rip+0x26fa39]        # 27b7e4 <pieces+0x4>
    bdab:	mov    BYTE PTR [rsp+0xc],0x0
    bdb0:	xor    ebp,ebp
    bdb2:	xor    ebx,ebx
    bdb4:	mov    rdx,r14
    bdb7:	xor    r13d,r13d
    bdba:	mov    ecx,0x1
    bdbf:	lea    r11,[rip+0x271afa]        # 27d8c0 <board>
    bdc6:	lea    r15,[rip+0x10ab3]        # 1c880 <Xfile>
    bdcd:	lea    r12,[rip+0x187ac]        # 24580 <material>
    bdd4:	jmp    be05 <std_eval+0x195>
    bdd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    bde0:	and    edi,0x1
    bde3:	mov    eax,DWORD PTR [r12+rsi*4]
    bde7:	jne    be60 <std_eval+0x1f0>
    bde9:	add    ebx,eax
    bdeb:	mov    r13d,0x1
    bdf1:	nop    DWORD PTR [rax+0x0]
    bdf8:	add    rdx,0x4
    bdfc:	cmp    r10d,ecx
    bdff:	jl     bea0 <std_eval+0x230>
    be05:	movsxd rax,DWORD PTR [rdx]
    be08:	test   eax,eax
    be0a:	je     bdf8 <std_eval+0x188>
    be0c:	movsxd rsi,DWORD PTR [r11+rax*4]
    be10:	add    ecx,0x1
    be13:	lea    edi,[rsi+0x1]
    be16:	mov    r8d,edi
    be19:	sar    r8d,1
    be1c:	mov    r9d,r8d
    be1f:	and    r9d,0xfffffffd
    be23:	cmp    r9d,0x1
    be27:	jne    bde0 <std_eval+0x170>
    be29:	cmp    r8d,0x1
    be2d:	jne    bdf8 <std_eval+0x188>
    be2f:	mov    esi,DWORD PTR [r15+rax*4]
    be33:	lea    r9,[rip+0x10806]        # 1c640 <Xrank>
    be3a:	mov    r8d,DWORD PTR [r9+rax*4]
    be3e:	add    esi,0x1
    be41:	movsxd rax,esi
    be44:	cmp    edi,0x2
    be47:	jne    be78 <std_eval+0x208>
    be49:	add    DWORD PTR [rsp+rax*4+0xfc],0x1
    be51:	cmp    DWORD PTR [rsp+rax*4+0x70],r8d
    be56:	jle    bdf8 <std_eval+0x188>
    be58:	mov    DWORD PTR [rsp+rax*4+0x70],r8d
    be5d:	jmp    bdf8 <std_eval+0x188>
    be5f:	nop
    be60:	mov    esi,eax
    be62:	mov    BYTE PTR [rsp+0xc],0x1
    be67:	sar    esi,0x1f
    be6a:	xor    eax,esi
    be6c:	sub    eax,esi
    be6e:	add    ebp,eax
    be70:	jmp    bdf8 <std_eval+0x188>
    be72:	nop    WORD PTR [rax+rax*1+0x0]
    be78:	add    DWORD PTR [rsp+rax*4+0xd0],0x1
    be80:	cmp    DWORD PTR [rsp+rax*4+0xa0],r8d
    be88:	jge    bdf8 <std_eval+0x188>
    be8e:	mov    DWORD PTR [rsp+rax*4+0xa0],r8d
    be96:	jmp    bdf8 <std_eval+0x188>
    be9b:	nop    DWORD PTR [rax+rax*1+0x0]
    bea0:	test   r13b,r13b
    bea3:	je     beab <std_eval+0x23b>
    bea5:	mov    DWORD PTR [rip+0x46c95],ebx        # 52b40 <wmat>
    beab:	cmp    BYTE PTR [rsp+0xc],0x0
    beb0:	je     beb8 <std_eval+0x248>
    beb2:	mov    DWORD PTR [rip+0x32874],ebp        # 3e72c <bmat>
    beb8:	mov    DWORD PTR [rsp+0x44],0x0
    bec0:	mov    ebp,0x1
    bec5:	lea    r15,[rip+0x2719f4]        # 27d8c0 <board>
    becc:	lea    r13,[rip+0x109ad]        # 1c880 <Xfile>
    bed3:	mov    DWORD PTR [rsp+0x48],0x0
    bedb:	lea    r12,[rip+0x1075e]        # 1c640 <Xrank>
    bee2:	mov    DWORD PTR [rsp+0x50],0x0
    beea:	mov    DWORD PTR [rsp+0x4c],0x0
    bef2:	mov    DWORD PTR [rsp+0x3c],0x0
    befa:	mov    DWORD PTR [rsp+0x40],0x0
    bf02:	mov    DWORD PTR [rsp+0x14],0x0
    bf0a:	mov    DWORD PTR [rsp+0x10],0x0
    bf12:	mov    DWORD PTR [rsp+0x20],0x0
    bf1a:	mov    DWORD PTR [rsp+0x18],0x0
    bf22:	mov    DWORD PTR [rsp+0x2c],0x0
    bf2a:	mov    DWORD PTR [rsp+0x24],0x0
    bf32:	mov    DWORD PTR [rsp+0x30],0x0
    bf3a:	mov    DWORD PTR [rsp+0x28],0x0
    bf42:	mov    DWORD PTR [rsp+0x38],0x0
    bf4a:	mov    DWORD PTR [rsp+0x34],0x0
    bf52:	nop    WORD PTR [rax+rax*1+0x0]
    bf58:	mov    edi,DWORD PTR [r14]
    bf5b:	test   edi,edi
    bf5d:	je     c150 <std_eval+0x4e0>
    bf63:	movsxd rbx,edi
    bf66:	lea    rcx,[rip+0x17cf3]        # 23c60 <evalRoutines>
    bf6d:	add    ebp,0x1
    bf70:	mov    eax,DWORD PTR [r15+rbx*4]
    bf74:	add    eax,0x1
    bf77:	mov    esi,eax
    bf79:	sar    eax,1
    bf7b:	cdqe   
    bf7d:	and    esi,0x1
    bf80:	call   QWORD PTR [rcx+rax*8]
    bf83:	mov    ecx,DWORD PTR [r13+rbx*4+0x0]
    bf88:	add    eax,DWORD PTR [rsp+0x68]
    bf8c:	mov    DWORD PTR [rsp+0x68],eax
    bf90:	mov    esi,DWORD PTR [r12+rbx*4]
    bf94:	mov    DWORD PTR [rsp+0xc],ecx
    bf98:	add    ecx,0x1
    bf9b:	cmp    DWORD PTR [r15+rbx*4],0xc
    bfa0:	ja     c150 <std_eval+0x4e0>
    bfa6:	mov    edi,DWORD PTR [r15+rbx*4]
    bfaa:	lea    r8,[rip+0x10f6f]        # 1cf20 <knight_o.4552+0x60>
    bfb1:	movsxd rdi,DWORD PTR [r8+rdi*4]
    bfb5:	add    rdi,r8
    bfb8:	notrack jmp rdi
    bfbb:	nop    DWORD PTR [rax+rax*1+0x0]
    bfc0:	test   r10d,r10d
    bfc3:	jne    cc28 <std_eval+0xfb8>
    bfc9:	mov    DWORD PTR [rsp+0x54],0x0
    bfd1:	mov    eax,DWORD PTR [rsp+rcx*4+0xfc]
    bfd8:	cmp    eax,0x1
    bfdb:	jle    bfed <std_eval+0x37d>
    bfdd:	sub    eax,0x1
    bfe0:	lea    ecx,[rax*4+0x0]
    bfe7:	sub    eax,ecx
    bfe9:	add    DWORD PTR [rsp+0x68],eax
    bfed:	cmp    DWORD PTR [rsp+rdi*4+0xa0],esi
    bff4:	jg     c99d <std_eval+0xd2d>
    bffa:	cmp    DWORD PTR [rsp+r8*4+0xa0],esi
    c002:	jg     c99d <std_eval+0xd2d>
    c008:	lea    eax,[r9+r9*2+0x1e]
    c00d:	add    eax,DWORD PTR [rsp+0x68]
    c011:	mov    DWORD PTR [rsp+0x5c],eax
    c015:	mov    DWORD PTR [rsp+0x68],eax
    c019:	mov    eax,DWORD PTR [rsp+0xc]
    c01d:	add    eax,0x6d
    c020:	cdqe   
    c022:	mov    ecx,DWORD PTR [r12+rax*4]
    c026:	mov    edx,ecx
    c028:	sub    edx,esi
    c02a:	mov    r10d,edx
    c02d:	sar    r10d,0x1f
    c031:	xor    edx,r10d
    c034:	sub    edx,r10d
    c037:	movsxd r10,DWORD PTR [rip+0x2714e6]        # 27d524 <bking_loc>
    c03e:	mov    DWORD PTR [rsp+0x58],edx
    c042:	mov    edx,DWORD PTR [r13+r10*4+0x0]
    c047:	mov    r10d,DWORD PTR [r12+r10*4]
    c04b:	sub    edx,DWORD PTR [r13+rax*4+0x0]
    c050:	sub    r10d,ecx
    c053:	mov    eax,edx
    c055:	cdq    
    c056:	mov    ecx,r10d
    c059:	sar    r10d,0x1f
    c05d:	xor    eax,edx
    c05f:	xor    ecx,r10d
    c062:	sub    eax,edx
    c064:	sub    ecx,r10d
    c067:	mov    edx,DWORD PTR [rip+0x2714b3]        # 27d520 <white_to_move>
    c06d:	cmp    eax,ecx
    c06f:	cmovl  eax,ecx
    c072:	test   edx,edx
    c074:	je     cf80 <std_eval+0x1310>
    c07a:	mov    r10d,DWORD PTR [rsp+0x48]
    c07f:	cmp    eax,DWORD PTR [rsp+0x58]
    c083:	lea    ecx,[r10+0x320]
    c08a:	cmovle ecx,r10d
    c08e:	mov    DWORD PTR [rsp+0x48],ecx
    c092:	mov    eax,DWORD PTR [rsp+0xc]
    c096:	cmp    eax,0x1
    c099:	je     cf9d <std_eval+0x132d>
    c09f:	cmp    eax,0x8
    c0a2:	je     cf9d <std_eval+0x132d>
    c0a8:	mov    r10d,DWORD PTR [rsp+0x54]
    c0ad:	test   r10d,r10d
    c0b0:	jne    c99d <std_eval+0xd2d>
    c0b6:	mov    eax,DWORD PTR [rsp+0x68]
    c0ba:	mov    r9d,DWORD PTR [rsp+r8*4+0xfc]
    c0c2:	add    eax,0xc
    c0c5:	mov    DWORD PTR [rsp+0x68],eax
    c0c9:	test   r9d,r9d
    c0cc:	je     c105 <std_eval+0x495>
    c0ce:	mov    r8d,DWORD PTR [rsp+r8*4+0xd0]
    c0d6:	test   r8d,r8d
    c0d9:	jne    c105 <std_eval+0x495>
    c0db:	mov    edx,DWORD PTR [rsp+0xc]
    c0df:	lea    ecx,[rdx+0x3]
    c0e2:	movsxd rcx,ecx
    c0e5:	cmp    ebx,DWORD PTR [rsp+rcx*4+0xa0]
    c0ec:	jl     c105 <std_eval+0x495>
    c0ee:	imul   ecx,esi,0x7
    c0f1:	add    eax,ecx
    c0f3:	mov    DWORD PTR [rsp+0x68],eax
    c0f7:	cmp    esi,0x7
    c0fa:	jne    c105 <std_eval+0x495>
    c0fc:	cmp    ebx,0x5
    c0ff:	jg     d02d <std_eval+0x13bd>
    c105:	test   r11d,r11d
    c108:	je     c9a6 <std_eval+0xd36>
    c10e:	mov    ecx,DWORD PTR [rsp+rdi*4+0xd0]
    c115:	test   ecx,ecx
    c117:	jne    c150 <std_eval+0x4e0>
    c119:	mov    eax,DWORD PTR [rsp+0xc]
    c11d:	sub    eax,0x1
    c120:	cdqe   
    c122:	cmp    ebx,DWORD PTR [rsp+rax*4+0xa0]
    c129:	jl     c150 <std_eval+0x4e0>
    c12b:	imul   eax,esi,0x7
    c12e:	add    eax,DWORD PTR [rsp+0x68]
    c132:	mov    DWORD PTR [rsp+0x68],eax
    c136:	cmp    esi,0x7
    c139:	jne    c150 <std_eval+0x4e0>
    c13b:	cmp    DWORD PTR [rsp+rdi*4+0x70],0x5
    c140:	jle    c150 <std_eval+0x4e0>
    c142:	add    eax,0x32
    c145:	mov    DWORD PTR [rsp+0x68],eax
    c149:	nop    DWORD PTR [rax+0x0]
    c150:	add    r14,0x4
    c154:	cmp    DWORD PTR [rip+0x5f74a],ebp        # 6b8a4 <piece_count>
    c15a:	jge    bf58 <std_eval+0x2e8>
    c160:	mov    esi,DWORD PTR [rip+0x469da]        # 52b40 <wmat>
    c166:	mov    eax,DWORD PTR [rsp+0x30]
    c16a:	mov    edi,DWORD PTR [rsp+0x34]
    c16e:	or     eax,DWORD PTR [rsp+0x14]
    c172:	mov    r8d,DWORD PTR [rip+0x325b3]        # 3e72c <bmat>
    c179:	or     eax,DWORD PTR [rsp+0x20]
    c17d:	or     edi,DWORD PTR [rsp+0x38]
    c181:	or     eax,DWORD PTR [rsp+0x2c]
    c185:	cmp    esi,0x898
    c18b:	jle    ca30 <std_eval+0xdc0>
    c191:	mov    edx,DWORD PTR [rip+0x287acd]        # 293c64 <moved+0xa4>
    c197:	test   edx,edx
    c199:	jne    c1a9 <std_eval+0x539>
    c19b:	cmp    DWORD PTR [rip+0x2717f2],0xd        # 27d994 <board+0xd4>
    c1a2:	je     c1a9 <std_eval+0x539>
    c1a4:	sub    DWORD PTR [rsp+0x68],0x5
    c1a9:	mov    r15d,DWORD PTR [rip+0x287ab8]        # 293c68 <moved+0xa8>
    c1b0:	test   r15d,r15d
    c1b3:	jne    c1c3 <std_eval+0x553>
    c1b5:	cmp    DWORD PTR [rip+0x2717dc],0xd        # 27d998 <board+0xd8>
    c1bc:	je     c1c3 <std_eval+0x553>
    c1be:	sub    DWORD PTR [rsp+0x68],0x5
    c1c3:	mov    r14d,DWORD PTR [rip+0x287b8a]        # 293d54 <moved+0x194>
    c1ca:	test   r14d,r14d
    c1cd:	jne    c1dd <std_eval+0x56d>
    c1cf:	cmp    DWORD PTR [rip+0x27184e],0xd        # 27da24 <board+0x164>
    c1d6:	je     c1dd <std_eval+0x56d>
    c1d8:	add    DWORD PTR [rsp+0x68],0x5
    c1dd:	mov    r13d,DWORD PTR [rip+0x287b74]        # 293d58 <moved+0x198>
    c1e4:	test   r13d,r13d
    c1e7:	jne    c1f7 <std_eval+0x587>
    c1e9:	cmp    DWORD PTR [rip+0x271838],0xd        # 27da28 <board+0x168>
    c1f0:	je     c1f7 <std_eval+0x587>
    c1f2:	add    DWORD PTR [rsp+0x68],0x5
    c1f7:	cmp    esi,0x514
    c1fd:	jle    c3e8 <std_eval+0x778>
    c203:	movsxd rcx,DWORD PTR [rip+0x271dd2]        # 27dfdc <wking_loc>
    c20a:	movsxd r9,DWORD PTR [rip+0x271313]        # 27d524 <bking_loc>
    c211:	lea    rdx,[rip+0x10668]        # 1c880 <Xfile>
    c218:	movsxd rcx,DWORD PTR [rdx+rcx*4]
    c21c:	movsxd rdx,DWORD PTR [rdx+r9*4]
    c220:	mov    r9d,ecx
    c223:	sub    r9d,edx
    c226:	mov    r10d,r9d
    c229:	sar    r10d,0x1f
    c22d:	xor    r9d,r10d
    c230:	sub    r9d,r10d
    c233:	mov    r10d,r9d
    c236:	xor    r9d,r9d
    c239:	cmp    r10d,0x2
    c23d:	jle    c31a <std_eval+0x6aa>
    c243:	lea    r9d,[rcx+0x1]
    c247:	lea    ebx,[rcx+0x2]
    c24a:	movsxd r12,r9d
    c24d:	movsxd rbx,ebx
    c250:	lea    r10,[rip+0x10e09]        # 1d060 <srev_rank>
    c257:	movsxd rbp,DWORD PTR [rsp+r12*4+0xa0]
    c25f:	movsxd r9,DWORD PTR [rsp+rbx*4+0xa0]
    c267:	lea    r11d,[rdx+0x1]
    c26b:	movsxd r11,r11d
    c26e:	mov    r12d,DWORD PTR [rsp+r12*4+0xd0]
    c276:	mov    r9d,DWORD PTR [r10+r9*4]
    c27a:	add    r9d,DWORD PTR [r10+rbp*4]
    c27e:	movsxd rbp,DWORD PTR [rsp+rcx*4+0xa0]
    c286:	mov    r10d,DWORD PTR [r10+rbp*4]
    c28a:	mov    ebp,DWORD PTR [rsp+rdx*4+0x70]
    c28e:	lea    r9d,[r9+r10*1-0x6]
    c293:	lea    r10d,[rdx+0x2]
    c297:	movsxd r10,r10d
    c29a:	lea    r15d,[r9+r9*2]
    c29e:	mov    r9d,DWORD PTR [rsp+r10*4+0x70]
    c2a3:	add    r9d,DWORD PTR [rsp+r11*4+0x70]
    c2a8:	mov    DWORD PTR [rsp+0x1c],r15d
    c2ad:	lea    r9d,[r9+rbp*1-0x6]
    c2b2:	lea    ebp,[r9+r9*2]
    c2b6:	mov    r9d,ebp
    c2b9:	test   r12d,r12d
    c2bc:	jne    c2c7 <std_eval+0x657>
    c2be:	add    r15d,0x8
    c2c2:	mov    DWORD PTR [rsp+0x1c],r15d
    c2c7:	mov    ebx,DWORD PTR [rsp+rbx*4+0xd0]
    c2ce:	test   ebx,ebx
    c2d0:	jne    c2d7 <std_eval+0x667>
    c2d2:	add    DWORD PTR [rsp+0x1c],0x6
    c2d7:	mov    ecx,DWORD PTR [rsp+rcx*4+0xd0]
    c2de:	test   ecx,ecx
    c2e0:	jne    c2e7 <std_eval+0x677>
    c2e2:	add    DWORD PTR [rsp+0x1c],0x6
    c2e7:	mov    r15d,DWORD PTR [rsp+r11*4+0xfc]
    c2ef:	test   r15d,r15d
    c2f2:	jne    c2f8 <std_eval+0x688>
    c2f4:	lea    r9d,[rbp+0x8]
    c2f8:	mov    r14d,DWORD PTR [rsp+r10*4+0xfc]
    c300:	test   r14d,r14d
    c303:	jne    c309 <std_eval+0x699>
    c305:	add    r9d,0x6
    c309:	mov    r13d,DWORD PTR [rsp+rdx*4+0xfc]
    c311:	test   r13d,r13d
    c314:	jne    c31a <std_eval+0x6aa>
    c316:	add    r9d,0x6
    c31a:	cmp    r8d,0x514
    c321:	jg     c3c8 <std_eval+0x758>
    c327:	mov    ebp,DWORD PTR [rsp+0x18]
    c32b:	test   ebp,ebp
    c32d:	je     c33b <std_eval+0x6cb>
    c32f:	cmp    esi,0x514
    c335:	jg     c9e8 <std_eval+0xd78>
    c33b:	mov    edx,DWORD PTR [rsp+0x28]
    c33f:	or     edx,DWORD PTR [rsp+0x18]
    c343:	or     edx,DWORD PTR [rsp+0x24]
    c347:	or     edx,DWORD PTR [rsp+0x10]
    c34b:	jne    c355 <std_eval+0x6e5>
    c34d:	mov    ebx,DWORD PTR [rsp+0x44]
    c351:	add    DWORD PTR [rsp+0x68],ebx
    c355:	test   eax,eax
    c357:	jne    c361 <std_eval+0x6f1>
    c359:	mov    eax,DWORD PTR [rsp+0x48]
    c35d:	add    DWORD PTR [rsp+0x68],eax
    c361:	test   edi,edi
    c363:	jne    c400 <std_eval+0x790>
    c369:	mov    eax,DWORD PTR [rsp+0x18]
    c36d:	mov    edx,DWORD PTR [rsp+0x14]
    c371:	or     eax,DWORD PTR [rsp+0x20]
    c375:	or     edx,DWORD PTR [rsp+0x10]
    c379:	or     edx,eax
    c37b:	je     c9b0 <std_eval+0xd40>
    c381:	test   eax,eax
    c383:	jne    c3b8 <std_eval+0x748>
    c385:	cmp    DWORD PTR [rsp+0x10],0x1
    c38a:	sete   al
    c38d:	cmp    DWORD PTR [rsp+0x14],0x1
    c392:	jne    ce5e <std_eval+0x11ee>
    c398:	test   al,al
    c39a:	je     ce5e <std_eval+0x11ee>
    c3a0:	mov    eax,DWORD PTR [rsp+0x28]
    c3a4:	add    eax,DWORD PTR [rsp+0x24]
    c3a8:	cmp    eax,0x1
    c3ab:	jle    cfe0 <std_eval+0x1370>
    c3b1:	nop    DWORD PTR [rax+0x0]
    c3b8:	mov    edi,DWORD PTR [rsp+0x68]
    c3bc:	jmp    c450 <std_eval+0x7e0>
    c3c1:	nop    DWORD PTR [rax+0x0]
    c3c8:	mov    r12d,DWORD PTR [rsp+0x20]
    c3cd:	test   r12d,r12d
    c3d0:	je     c327 <std_eval+0x6b7>
    c3d6:	mov    ebx,DWORD PTR [rsp+0x1c]
    c3da:	sub    DWORD PTR [rsp+0x68],ebx
    c3de:	jmp    c327 <std_eval+0x6b7>
    c3e3:	nop    DWORD PTR [rax+rax*1+0x0]
    c3e8:	cmp    r8d,0x514
    c3ef:	jle    c33b <std_eval+0x6cb>
    c3f5:	jmp    c203 <std_eval+0x593>
    c3fa:	nop    WORD PTR [rax+rax*1+0x0]
    c400:	mov    ecx,DWORD PTR [rsp+0x28]
    c404:	mov    esi,DWORD PTR [rsp+0x30]
    c408:	add    ecx,DWORD PTR [rsp+0x24]
    c40c:	add    esi,DWORD PTR [rsp+0x2c]
    c410:	mov    eax,DWORD PTR [rsp+0x10]
    c414:	mov    edx,DWORD PTR [rsp+0x14]
    c418:	mov    edi,DWORD PTR [rsp+0x68]
    c41c:	add    eax,DWORD PTR [rsp+0x18]
    c420:	add    edx,DWORD PTR [rsp+0x20]
    c424:	cmp    ecx,esi
    c426:	je     c9f8 <std_eval+0xd88>
    c42c:	cmp    eax,edx
    c42e:	je     cca7 <std_eval+0x1037>
    c434:	sub    eax,edx
    c436:	cdq    
    c437:	xor    eax,edx
    c439:	sub    eax,edx
    c43b:	cmp    eax,0x1
    c43e:	je     cdfe <std_eval+0x118e>
    c444:	cmp    eax,0x2
    c447:	je     cee6 <std_eval+0x1276>
    c44d:	nop    DWORD PTR [rax]
    c450:	call   43b0 <storeECache>
    c455:	mov    eax,DWORD PTR [rsp+0x68]
    c459:	mov    edx,DWORD PTR [rip+0x28081]        # 344e0 <Material>
    c45f:	sub    edx,eax
    c461:	mov    ecx,edx
    c463:	sar    ecx,0x1f
    c466:	xor    edx,ecx
    c468:	sub    edx,ecx
    c46a:	cmp    edx,DWORD PTR [rip+0x322b8]        # 3e728 <maxposdiff>
    c470:	jle    c486 <std_eval+0x816>
    c472:	cmp    edx,0x3e8
    c478:	mov    ecx,0x3e8
    c47d:	cmovg  edx,ecx
    c480:	mov    DWORD PTR [rip+0x322a2],edx        # 3e728 <maxposdiff>
    c486:	cmp    DWORD PTR [rip+0x271093],0x1        # 27d520 <white_to_move>
    c48d:	je     bcc7 <std_eval+0x57>
    c493:	neg    eax
    c495:	jmp    bcc7 <std_eval+0x57>
    c49a:	nop    WORD PTR [rax+rax*1+0x0]
    c4a0:	add    DWORD PTR [rsp+0x2c],0x1
    c4a5:	jmp    c150 <std_eval+0x4e0>
    c4aa:	nop    WORD PTR [rax+rax*1+0x0]
    c4b0:	add    DWORD PTR [rsp+0x24],0x1
    c4b5:	jmp    c150 <std_eval+0x4e0>
    c4ba:	nop    WORD PTR [rax+rax*1+0x0]
    c4c0:	add    DWORD PTR [rsp+0x20],0x1
    c4c5:	jmp    c150 <std_eval+0x4e0>
    c4ca:	nop    WORD PTR [rax+rax*1+0x0]
    c4d0:	add    DWORD PTR [rsp+0x18],0x1
    c4d5:	jmp    c150 <std_eval+0x4e0>
    c4da:	nop    WORD PTR [rax+rax*1+0x0]
    c4e0:	add    DWORD PTR [rsp+0x14],0x1
    c4e5:	mov    ebx,DWORD PTR [rsp+0x14]
    c4e9:	mov    edx,DWORD PTR [rsp+0x3c]
    c4ed:	cmp    ebx,0x1
    c4f0:	mov    ebx,DWORD PTR [rsp+0x40]
    c4f4:	cmove  edx,DWORD PTR [rsp+0xc]
    c4f9:	cmove  ebx,esi
    c4fc:	mov    DWORD PTR [rsp+0x3c],edx
    c500:	mov    DWORD PTR [rsp+0x40],ebx
    c504:	cmp    esi,0x2
    c507:	je     cc38 <std_eval+0xfc8>
    c50d:	movsxd rcx,ecx
    c510:	mov    r10d,DWORD PTR [rsp+rcx*4+0xd0]
    c518:	test   r10d,r10d
    c51b:	jne    c150 <std_eval+0x4e0>
    c521:	mov    eax,DWORD PTR [rsp+0x68]
    c525:	cmp    DWORD PTR [rsp+0x14],0x2
    c52a:	lea    esi,[rax-0x5]
    c52d:	mov    DWORD PTR [rsp+0x68],esi
    c531:	jne    c541 <std_eval+0x8d1>
    c533:	mov    edx,DWORD PTR [rsp+0x3c]
    c537:	cmp    DWORD PTR [rsp+0xc],edx
    c53b:	je     cff6 <std_eval+0x1386>
    c541:	mov    r9d,DWORD PTR [rsp+rcx*4+0xfc]
    c549:	test   r9d,r9d
    c54c:	jne    c150 <std_eval+0x4e0>
    c552:	sub    DWORD PTR [rsp+0x68],0x3
    c557:	jmp    c150 <std_eval+0x4e0>
    c55c:	nop    DWORD PTR [rax+0x0]
    c560:	add    DWORD PTR [rsp+0x10],0x1
    c565:	mov    ebx,DWORD PTR [rsp+0x10]
    c569:	movsxd rcx,ecx
    c56c:	mov    edi,DWORD PTR [rsp+rcx*4+0xfc]
    c573:	cmp    ebx,0x1
    c576:	je     cc60 <std_eval+0xff0>
    c57c:	cmp    esi,0x7
    c57f:	je     cd3c <std_eval+0x10cc>
    c585:	test   edi,edi
    c587:	jne    c150 <std_eval+0x4e0>
    c58d:	mov    esi,DWORD PTR [rsp+0x68]
    c591:	cmp    DWORD PTR [rsp+0x10],0x2
    c596:	lea    eax,[rsi+0x5]
    c599:	mov    DWORD PTR [rsp+0x68],eax
    c59d:	je     ce3c <std_eval+0x11cc>
    c5a3:	mov    r11d,DWORD PTR [rsp+rcx*4+0xd0]
    c5ab:	test   r11d,r11d
    c5ae:	jne    c150 <std_eval+0x4e0>
    c5b4:	add    DWORD PTR [rsp+0x68],0x3
    c5b9:	jmp    c150 <std_eval+0x4e0>
    c5be:	xchg   ax,ax
    c5c0:	cmp    DWORD PTR [rip+0x32162],0x514        # 3e72c <bmat>
    c5ca:	jle    cc00 <std_eval+0xf90>
    c5d0:	lea    rdi,[rip+0x10d09]        # 1d2e0 <sblack_king>
    c5d7:	sub    eax,DWORD PTR [rdi+rbx*4]
    c5da:	mov    edi,DWORD PTR [rip+0x5cbe4]        # 691c4 <black_castled>
    c5e0:	cmp    edi,0x4
    c5e3:	je     ce19 <std_eval+0x11a9>
    c5e9:	cmp    edi,0x3
    c5ec:	je     cf19 <std_eval+0x12a9>
    c5f2:	mov    r11d,DWORD PTR [rip+0x28778f]        # 293d88 <moved+0x1c8>
    c5f9:	test   r11d,r11d
    c5fc:	je     c620 <std_eval+0x9b0>
    c5fe:	movsxd rdi,ecx
    c601:	lea    r8d,[rax+0xa]
    c605:	add    eax,0x19
    c608:	mov    r10d,DWORD PTR [rsp+rdi*4+0xd0]
    c610:	test   r10d,r10d
    c613:	je     c620 <std_eval+0x9b0>
    c615:	mov    eax,r8d
    c618:	nop    DWORD PTR [rax+rax*1+0x0]
    c620:	movsxd rdi,DWORD PTR [rip+0x270efd]        # 27d524 <bking_loc>
    c627:	mov    edi,DWORD PTR [r13+rdi*4+0x0]
    c62c:	sub    edi,0x4
    c62f:	cmp    edi,0x1
    c632:	jbe    cdb8 <std_eval+0x1148>
    c638:	movsxd rcx,ecx
    c63b:	mov    edi,DWORD PTR [rsp+rcx*4+0xa0]
    c642:	cmp    edi,esi
    c644:	jge    cda4 <std_eval+0x1134>
    c64a:	mov    r9d,DWORD PTR [rsp+rcx*4+0xd0]
    c652:	test   r9d,r9d
    c655:	je     cda4 <std_eval+0x1134>
    c65b:	mov    ecx,esi
    c65d:	sub    ecx,edi
    c65f:	lea    rdi,[rip+0x109fa]        # 1d060 <srev_rank>
    c666:	sub    ecx,0x1
    c669:	movsxd rcx,ecx
    c66c:	mov    ecx,DWORD PTR [rdi+rcx*4]
    c66f:	lea    ecx,[rcx+rcx*8]
    c672:	add    eax,ecx
    c674:	mov    ebx,DWORD PTR [rsp+0xc]
    c678:	lea    ecx,[rbx+0x2]
    c67b:	movsxd rcx,ecx
    c67e:	mov    edi,DWORD PTR [rsp+rcx*4+0xa0]
    c685:	cmp    edi,esi
    c687:	jge    cd80 <std_eval+0x1110>
    c68d:	mov    r8d,DWORD PTR [rsp+rcx*4+0xd0]
    c695:	test   r8d,r8d
    c698:	je     cd80 <std_eval+0x1110>
    c69e:	mov    ecx,esi
    c6a0:	sub    ecx,edi
    c6a2:	lea    rdi,[rip+0x109b7]        # 1d060 <srev_rank>
    c6a9:	sub    ecx,0x1
    c6ac:	movsxd rcx,ecx
    c6af:	mov    ecx,DWORD PTR [rdi+rcx*4]
    c6b2:	lea    eax,[rax+rcx*8]
    c6b5:	movsxd rdx,DWORD PTR [rsp+0xc]
    c6ba:	mov    ecx,DWORD PTR [rsp+rdx*4+0xa0]
    c6c1:	cmp    ecx,esi
    c6c3:	jge    cd74 <std_eval+0x1104>
    c6c9:	mov    edi,DWORD PTR [rsp+rdx*4+0xd0]
    c6d0:	test   edi,edi
    c6d2:	je     cd74 <std_eval+0x1104>
    c6d8:	mov    edx,esi
    c6da:	sub    edx,ecx
    c6dc:	lea    rcx,[rip+0x1097d]        # 1d060 <srev_rank>
    c6e3:	sub    edx,0x1
    c6e6:	movsxd rdx,edx
    c6e9:	mov    edx,DWORD PTR [rcx+rdx*4]
    c6ec:	lea    eax,[rax+rdx*8]
    c6ef:	mov    DWORD PTR [rsp+0x68],eax
    c6f3:	jmp    c150 <std_eval+0x4e0>
    c6f8:	nop    DWORD PTR [rax+rax*1+0x0]
    c700:	cmp    DWORD PTR [rip+0x46436],0x514        # 52b40 <wmat>
    c70a:	jle    cbe8 <std_eval+0xf78>
    c710:	lea    rdi,[rip+0x10e09]        # 1d520 <swhite_king>
    c717:	add    eax,DWORD PTR [rdi+rbx*4]
    c71a:	mov    edi,DWORD PTR [rip+0x5caa0]        # 691c0 <white_castled>
    c720:	cmp    edi,0x2
    c723:	je     ce56 <std_eval+0x11e6>
    c729:	cmp    edi,0x1
    c72c:	je     cf21 <std_eval+0x12b1>
    c732:	mov    r8d,DWORD PTR [rip+0x2874ff]        # 293c38 <moved+0x78>
    c739:	test   r8d,r8d
    c73c:	je     c760 <std_eval+0xaf0>
    c73e:	movsxd rdi,ecx
    c741:	lea    r8d,[rax-0xa]
    c745:	sub    eax,0x19
    c748:	mov    edi,DWORD PTR [rsp+rdi*4+0xfc]
    c74f:	test   edi,edi
    c751:	je     c760 <std_eval+0xaf0>
    c753:	mov    eax,r8d
    c756:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c760:	movsxd rdi,DWORD PTR [rip+0x271875]        # 27dfdc <wking_loc>
    c767:	mov    edi,DWORD PTR [r13+rdi*4+0x0]
    c76c:	sub    edi,0x4
    c76f:	cmp    edi,0x1
    c772:	jbe    cdac <std_eval+0x113c>
    c778:	movsxd rcx,ecx
    c77b:	mov    edi,DWORD PTR [rsp+rcx*4+0x70]
    c77f:	cmp    edi,esi
    c781:	jle    cd9c <std_eval+0x112c>
    c787:	mov    ecx,DWORD PTR [rsp+rcx*4+0xfc]
    c78e:	test   ecx,ecx
    c790:	je     cd9c <std_eval+0x112c>
    c796:	sub    edi,esi
    c798:	lea    ecx,[rdi+rdi*8-0x9]
    c79c:	sub    eax,ecx
    c79e:	mov    ebx,DWORD PTR [rsp+0xc]
    c7a2:	lea    ecx,[rbx+0x2]
    c7a5:	movsxd rcx,ecx
    c7a8:	mov    edi,DWORD PTR [rsp+rcx*4+0x70]
    c7ac:	cmp    edi,esi
    c7ae:	jle    cd94 <std_eval+0x1124>
    c7b4:	mov    edx,DWORD PTR [rsp+rcx*4+0xfc]
    c7bb:	test   edx,edx
    c7bd:	je     cd94 <std_eval+0x1124>
    c7c3:	sub    edi,esi
    c7c5:	lea    ecx,[rdi*8-0x8]
    c7cc:	sub    eax,ecx
    c7ce:	movsxd rdx,DWORD PTR [rsp+0xc]
    c7d3:	mov    ecx,DWORD PTR [rsp+rdx*4+0x70]
    c7d7:	cmp    ecx,esi
    c7d9:	jle    cd88 <std_eval+0x1118>
    c7df:	mov    ebx,DWORD PTR [rsp+rdx*4+0xfc]
    c7e6:	test   ebx,ebx
    c7e8:	je     cd88 <std_eval+0x1118>
    c7ee:	sub    ecx,esi
    c7f0:	lea    edx,[rcx*8-0x8]
    c7f7:	sub    eax,edx
    c7f9:	mov    DWORD PTR [rsp+0x68],eax
    c7fd:	jmp    c150 <std_eval+0x4e0>
    c802:	nop    WORD PTR [rax+rax*1+0x0]
    c808:	add    DWORD PTR [rsp+0x30],0x1
    c80d:	jmp    c150 <std_eval+0x4e0>
    c812:	nop    WORD PTR [rax+rax*1+0x0]
    c818:	add    DWORD PTR [rsp+0x28],0x1
    c81d:	jmp    c150 <std_eval+0x4e0>
    c822:	nop    WORD PTR [rax+rax*1+0x0]
    c828:	lea    rdi,[rip+0x10f31]        # 1d760 <sblack_pawn>
    c82f:	movsxd rcx,ecx
    c832:	add    DWORD PTR [rsp+0x38],0x1
    c837:	mov    r9d,DWORD PTR [rdi+rbx*4]
    c83b:	movsxd rdi,DWORD PTR [rsp+0xc]
    c840:	mov    r10d,DWORD PTR [rsp+rcx*4+0xfc]
    c848:	lea    r8d,[rdi+0x2]
    c84c:	sub    eax,r9d
    c84f:	mov    r11d,DWORD PTR [rsp+rdi*4+0xd0]
    c857:	movsxd r8,r8d
    c85a:	mov    DWORD PTR [rsp+0x68],eax
    c85e:	mov    ebx,DWORD PTR [rsp+r8*4+0xa0]
    c866:	cmp    ebx,esi
    c868:	jge    ca48 <std_eval+0xdd8>
    c86e:	cmp    DWORD PTR [rsp+rdi*4+0xa0],esi
    c875:	jge    ca48 <std_eval+0xdd8>
    c87b:	lea    edx,[rax+0x8]
    c87e:	mov    DWORD PTR [rsp+0x68],edx
    c882:	mov    edx,DWORD PTR [rsp+r8*4+0xd0]
    c88a:	test   edx,edx
    c88c:	jne    cde1 <std_eval+0x1171>
    c892:	test   r11d,r11d
    c895:	jne    cde1 <std_eval+0x1171>
    c89b:	test   r10d,r10d
    c89e:	je     cd14 <std_eval+0x10a4>
    c8a4:	add    eax,0xd
    c8a7:	mov    DWORD PTR [rsp+0x54],0x1
    c8af:	mov    DWORD PTR [rsp+0x68],eax
    c8b3:	nop    DWORD PTR [rax+rax*1+0x0]
    c8b8:	mov    eax,DWORD PTR [rsp+rcx*4+0xd0]
    c8bf:	cmp    eax,0x1
    c8c2:	jle    c8d5 <std_eval+0xc65>
    c8c4:	lea    eax,[rax+rax*2-0x3]
    c8c8:	add    DWORD PTR [rsp+0x68],eax
    c8cc:	test   r10d,r10d
    c8cf:	je     ca6d <std_eval+0xdfd>
    c8d5:	test   r11d,r11d
    c8d8:	jne    c150 <std_eval+0x4e0>
    c8de:	add    DWORD PTR [rsp+0x68],0x7
    c8e3:	jmp    c150 <std_eval+0x4e0>
    c8e8:	nop    DWORD PTR [rax+rax*1+0x0]
    c8f0:	lea    rdi,[rip+0x110a9]        # 1d9a0 <swhite_pawn>
    c8f7:	movsxd rcx,ecx
    c8fa:	add    DWORD PTR [rsp+0x34],0x1
    c8ff:	mov    r9d,DWORD PTR [rdi+rbx*4]
    c903:	movsxd rdi,DWORD PTR [rsp+0xc]
    c908:	mov    r10d,DWORD PTR [rsp+rcx*4+0xd0]
    c910:	lea    r8d,[rdi+0x2]
    c914:	add    eax,r9d
    c917:	mov    r11d,DWORD PTR [rsp+rdi*4+0xfc]
    c91f:	movsxd r8,r8d
    c922:	mov    DWORD PTR [rsp+0x68],eax
    c926:	mov    ebx,DWORD PTR [rsp+r8*4+0x70]
    c92b:	cmp    ebx,esi
    c92d:	jle    bfc0 <std_eval+0x350>
    c933:	cmp    DWORD PTR [rsp+rdi*4+0x70],esi
    c937:	jle    bfc0 <std_eval+0x350>
    c93d:	lea    edx,[rax-0x8]
    c940:	mov    DWORD PTR [rsp+0x68],edx
    c944:	mov    edx,DWORD PTR [rsp+r8*4+0xfc]
    c94c:	test   edx,edx
    c94e:	jne    cdc4 <std_eval+0x1154>
    c954:	test   r11d,r11d
    c957:	jne    cdc4 <std_eval+0x1154>
    c95d:	test   r10d,r10d
    c960:	je     cd28 <std_eval+0x10b8>
    c966:	sub    eax,0xd
    c969:	mov    DWORD PTR [rsp+0x54],0x1
    c971:	mov    DWORD PTR [rsp+0x68],eax
    c975:	nop    DWORD PTR [rax]
    c978:	mov    eax,DWORD PTR [rsp+rcx*4+0xfc]
    c97f:	cmp    eax,0x1
    c982:	jle    c99d <std_eval+0xd2d>
    c984:	sub    eax,0x1
    c987:	lea    ecx,[rax*4+0x0]
    c98e:	sub    eax,ecx
    c990:	add    DWORD PTR [rsp+0x68],eax
    c994:	test   r10d,r10d
    c997:	je     bfed <std_eval+0x37d>
    c99d:	test   r11d,r11d
    c9a0:	jne    c150 <std_eval+0x4e0>
    c9a6:	sub    DWORD PTR [rsp+0x68],0x7
    c9ab:	jmp    c150 <std_eval+0x4e0>
    c9b0:	mov    eax,DWORD PTR [rsp+0x24]
    c9b4:	or     eax,DWORD PTR [rsp+0x2c]
    c9b8:	jne    cc80 <std_eval+0x1010>
    c9be:	cmp    DWORD PTR [rsp+0x28],0x2
    c9c3:	jg     c3b8 <std_eval+0x748>
    c9c9:	cmp    DWORD PTR [rsp+0x30],0x2
    c9ce:	jg     c3b8 <std_eval+0x748>
    c9d4:	mov    DWORD PTR [rsp+0x68],0x0
    c9dc:	jmp    c450 <std_eval+0x7e0>
    c9e1:	nop    DWORD PTR [rax+0x0]
    c9e8:	add    DWORD PTR [rsp+0x68],r9d
    c9ed:	jmp    c355 <std_eval+0x6e5>
    c9f2:	nop    WORD PTR [rax+rax*1+0x0]
    c9f8:	cmp    eax,edx
    c9fa:	jne    c450 <std_eval+0x7e0>
    ca00:	mov    esi,DWORD PTR [rsp+0x18]
    ca04:	test   esi,esi
    ca06:	je     d017 <std_eval+0x13a7>
    ca0c:	mov    ecx,DWORD PTR [rsp+0x20]
    ca10:	test   ecx,ecx
    ca12:	jne    d00b <std_eval+0x139b>
    ca18:	nop    DWORD PTR [rax+rax*1+0x0]
    ca20:	add    edi,0x78
    ca23:	mov    DWORD PTR [rsp+0x68],edi
    ca27:	jmp    c450 <std_eval+0x7e0>
    ca2c:	nop    DWORD PTR [rax+0x0]
    ca30:	cmp    r8d,0x898
    ca37:	jg     c191 <std_eval+0x521>
    ca3d:	jmp    c1f7 <std_eval+0x587>
    ca42:	nop    WORD PTR [rax+rax*1+0x0]
    ca48:	test   r10d,r10d
    ca4b:	jne    cc18 <std_eval+0xfa8>
    ca51:	mov    DWORD PTR [rsp+0x54],0x0
    ca59:	mov    eax,DWORD PTR [rsp+rcx*4+0xd0]
    ca60:	cmp    eax,0x1
    ca63:	jle    ca6d <std_eval+0xdfd>
    ca65:	lea    eax,[rax+rax*2-0x3]
    ca69:	add    DWORD PTR [rsp+0x68],eax
    ca6d:	cmp    DWORD PTR [rsp+rdi*4+0x70],esi
    ca71:	jl     c8d5 <std_eval+0xc65>
    ca77:	cmp    DWORD PTR [rsp+r8*4+0x70],esi
    ca7c:	jl     c8d5 <std_eval+0xc65>
    ca82:	mov    ecx,DWORD PTR [rsp+0x68]
    ca86:	lea    eax,[r9+r9*2+0x1e]
    ca8b:	sub    ecx,eax
    ca8d:	mov    eax,DWORD PTR [rsp+0xc]
    ca91:	mov    DWORD PTR [rsp+0x5c],ecx
    ca95:	add    eax,0x19
    ca98:	mov    DWORD PTR [rsp+0x68],ecx
    ca9c:	cdqe   
    ca9e:	mov    ecx,DWORD PTR [r12+rax*4]
    caa2:	mov    edx,ecx
    caa4:	sub    edx,esi
    caa6:	mov    r10d,edx
    caa9:	sar    r10d,0x1f
    caad:	xor    edx,r10d
    cab0:	sub    edx,r10d
    cab3:	movsxd r10,DWORD PTR [rip+0x271522]        # 27dfdc <wking_loc>
    caba:	mov    DWORD PTR [rsp+0x58],edx
    cabe:	mov    edx,DWORD PTR [r13+r10*4+0x0]
    cac3:	mov    r10d,DWORD PTR [r12+r10*4]
    cac7:	sub    edx,DWORD PTR [r13+rax*4+0x0]
    cacc:	sub    r10d,ecx
    cacf:	mov    eax,edx
    cad1:	cdq    
    cad2:	mov    ecx,r10d
    cad5:	sar    r10d,0x1f
    cad9:	xor    eax,edx
    cadb:	xor    ecx,r10d
    cade:	sub    eax,edx
    cae0:	sub    ecx,r10d
    cae3:	mov    edx,DWORD PTR [rip+0x270a37]        # 27d520 <white_to_move>
    cae9:	cmp    eax,ecx
    caeb:	cmovl  eax,ecx
    caee:	test   edx,edx
    caf0:	jne    cfc3 <std_eval+0x1353>
    caf6:	mov    r10d,DWORD PTR [rsp+0x44]
    cafb:	cmp    eax,DWORD PTR [rsp+0x58]
    caff:	lea    ecx,[r10-0x320]
    cb06:	cmovle ecx,r10d
    cb0a:	mov    DWORD PTR [rsp+0x44],ecx
    cb0e:	mov    eax,DWORD PTR [rsp+0xc]
    cb12:	cmp    eax,0x1
    cb15:	je     cfaf <std_eval+0x133f>
    cb1b:	cmp    eax,0x8
    cb1e:	je     cfaf <std_eval+0x133f>
    cb24:	mov    eax,DWORD PTR [rsp+0x54]
    cb28:	test   eax,eax
    cb2a:	jne    c8d5 <std_eval+0xc65>
    cb30:	mov    eax,DWORD PTR [rsp+0x68]
    cb34:	lea    ecx,[rax-0xc]
    cb37:	mov    eax,DWORD PTR [rsp+r8*4+0xd0]
    cb3f:	mov    DWORD PTR [rsp+0x68],ecx
    cb43:	test   eax,eax
    cb45:	je     cb80 <std_eval+0xf10>
    cb47:	mov    eax,DWORD PTR [rsp+r8*4+0xfc]
    cb4f:	test   eax,eax
    cb51:	jne    cb80 <std_eval+0xf10>
    cb53:	mov    eax,DWORD PTR [rsp+0xc]
    cb57:	add    eax,0x3
    cb5a:	cdqe   
    cb5c:	cmp    ebx,DWORD PTR [rsp+rax*4+0x70]
    cb60:	jg     cb80 <std_eval+0xf10>
    cb62:	mov    eax,0x9
    cb67:	sub    eax,esi
    cb69:	imul   eax,eax,0xfffffff9
    cb6c:	add    eax,ecx
    cb6e:	mov    DWORD PTR [rsp+0x68],eax
    cb72:	cmp    esi,0x2
    cb75:	jne    cb80 <std_eval+0xf10>
    cb77:	cmp    ebx,0x3
    cb7a:	jle    d039 <std_eval+0x13c9>
    cb80:	test   r11d,r11d
    cb83:	je     c8de <std_eval+0xc6e>
    cb89:	mov    ebx,DWORD PTR [rsp+rdi*4+0xfc]
    cb90:	test   ebx,ebx
    cb92:	jne    c150 <std_eval+0x4e0>
    cb98:	mov    eax,DWORD PTR [rsp+0xc]
    cb9c:	mov    ecx,DWORD PTR [rsp+rdi*4+0xa0]
    cba3:	sub    eax,0x1
    cba6:	cdqe   
    cba8:	cmp    ecx,DWORD PTR [rsp+rax*4+0x70]
    cbac:	jg     c150 <std_eval+0x4e0>
    cbb2:	mov    eax,0x9
    cbb7:	sub    eax,esi
    cbb9:	imul   eax,eax,0xfffffff9
    cbbc:	add    eax,DWORD PTR [rsp+0x68]
    cbc0:	mov    DWORD PTR [rsp+0x68],eax
    cbc4:	cmp    esi,0x2
    cbc7:	jne    c150 <std_eval+0x4e0>
    cbcd:	cmp    ecx,0x3
    cbd0:	jg     c150 <std_eval+0x4e0>
    cbd6:	sub    eax,0x32
    cbd9:	mov    DWORD PTR [rsp+0x68],eax
    cbdd:	jmp    c150 <std_eval+0x4e0>
    cbe2:	nop    WORD PTR [rax+rax*1+0x0]
    cbe8:	lea    rdx,[rip+0x104b1]        # 1d0a0 <send_king>
    cbef:	add    eax,DWORD PTR [rdx+rbx*4]
    cbf2:	mov    DWORD PTR [rsp+0x68],eax
    cbf6:	jmp    c150 <std_eval+0x4e0>
    cbfb:	nop    DWORD PTR [rax+rax*1+0x0]
    cc00:	lea    rdx,[rip+0x10499]        # 1d0a0 <send_king>
    cc07:	sub    eax,DWORD PTR [rdx+rbx*4]
    cc0a:	mov    DWORD PTR [rsp+0x68],eax
    cc0e:	jmp    c150 <std_eval+0x4e0>
    cc13:	nop    DWORD PTR [rax+rax*1+0x0]
    cc18:	mov    DWORD PTR [rsp+0x54],0x0
    cc20:	jmp    c8b8 <std_eval+0xc48>
    cc25:	nop    DWORD PTR [rax]
    cc28:	mov    DWORD PTR [rsp+0x54],0x0
    cc30:	jmp    c978 <std_eval+0xd08>
    cc35:	nop    DWORD PTR [rax]
    cc38:	cmp    DWORD PTR [rsp+0x10],0x2
    cc3d:	jne    ce21 <std_eval+0x11b1>
    cc43:	cmp    ebx,0x2
    cc46:	jne    ce21 <std_eval+0x11b1>
    cc4c:	sub    eax,0x23
    cc4f:	mov    DWORD PTR [rsp+0x68],eax
    cc53:	jmp    c50d <std_eval+0x89d>
    cc58:	nop    DWORD PTR [rax+rax*1+0x0]
    cc60:	cmp    esi,0x7
    cc63:	je     cf01 <std_eval+0x1291>
    cc69:	mov    eax,DWORD PTR [rsp+0xc]
    cc6d:	mov    DWORD PTR [rsp+0x4c],esi
    cc71:	mov    DWORD PTR [rsp+0x50],eax
    cc75:	jmp    c585 <std_eval+0x915>
    cc7a:	nop    WORD PTR [rax+rax*1+0x0]
    cc80:	mov    eax,DWORD PTR [rsp+0x28]
    cc84:	or     eax,DWORD PTR [rsp+0x30]
    cc88:	jne    ce9c <std_eval+0x122c>
    cc8e:	mov    eax,DWORD PTR [rsp+0x24]
    cc92:	sub    eax,DWORD PTR [rsp+0x2c]
    cc96:	add    eax,0x1
    cc99:	cmp    eax,0x2
    cc9c:	jbe    c9d4 <std_eval+0xd64>
    cca2:	jmp    c3b8 <std_eval+0x748>
    cca7:	cmp    ecx,esi
    cca9:	jg     ca20 <std_eval+0xdb0>
    ccaf:	sub    edi,0x78
    ccb2:	mov    DWORD PTR [rsp+0x68],edi
    ccb6:	jmp    c450 <std_eval+0x7e0>
    ccbb:	mov    DWORD PTR [rsp+0x10],0x0
    ccc3:	xor    eax,eax
    ccc5:	xor    edi,edi
    ccc7:	mov    DWORD PTR [rsp+0x14],0x0
    cccf:	mov    DWORD PTR [rsp+0x44],0x0
    ccd7:	mov    DWORD PTR [rsp+0x20],0x0
    ccdf:	mov    DWORD PTR [rsp+0x30],0x0
    cce7:	mov    DWORD PTR [rsp+0x2c],0x0
    ccef:	mov    DWORD PTR [rsp+0x18],0x0
    ccf7:	mov    DWORD PTR [rsp+0x28],0x0
    ccff:	mov    DWORD PTR [rsp+0x24],0x0
    cd07:	mov    DWORD PTR [rsp+0x48],0x0
    cd0f:	jmp    c33b <std_eval+0x6cb>
    cd14:	add    eax,0x15
    cd17:	mov    DWORD PTR [rsp+0x54],0x1
    cd1f:	mov    DWORD PTR [rsp+0x68],eax
    cd23:	jmp    ca59 <std_eval+0xde9>
    cd28:	sub    eax,0x15
    cd2b:	mov    DWORD PTR [rsp+0x54],0x1
    cd33:	mov    DWORD PTR [rsp+0x68],eax
    cd37:	jmp    bfd1 <std_eval+0x361>
    cd3c:	cmp    ebx,0x2
    cd3f:	jne    d002 <std_eval+0x1392>
    cd45:	cmp    DWORD PTR [rsp+0x4c],0x7
    cd4a:	jne    d002 <std_eval+0x1392>
    cd50:	lea    esi,[rax+0x23]
    cd53:	test   edi,edi
    cd55:	je     ce2d <std_eval+0x11bd>
    cd5b:	mov    DWORD PTR [rsp+0x68],esi
    cd5f:	mov    DWORD PTR [rsp+0x4c],0x7
    cd67:	mov    DWORD PTR [rsp+0x10],0x2
    cd6f:	jmp    c150 <std_eval+0x4e0>
    cd74:	add    eax,0x10
    cd77:	mov    DWORD PTR [rsp+0x68],eax
    cd7b:	jmp    c150 <std_eval+0x4e0>
    cd80:	add    eax,0x10
    cd83:	jmp    c6b5 <std_eval+0xa45>
    cd88:	sub    eax,0x10
    cd8b:	mov    DWORD PTR [rsp+0x68],eax
    cd8f:	jmp    c150 <std_eval+0x4e0>
    cd94:	sub    eax,0x10
    cd97:	jmp    c7ce <std_eval+0xb5e>
    cd9c:	sub    eax,0x16
    cd9f:	jmp    c79e <std_eval+0xb2e>
    cda4:	add    eax,0x16
    cda7:	jmp    c674 <std_eval+0xa04>
    cdac:	sub    eax,0xa
    cdaf:	mov    DWORD PTR [rsp+0x68],eax
    cdb3:	jmp    c150 <std_eval+0x4e0>
    cdb8:	add    eax,0xa
    cdbb:	mov    DWORD PTR [rsp+0x68],eax
    cdbf:	jmp    c150 <std_eval+0x4e0>
    cdc4:	test   r10d,r10d
    cdc7:	jne    cc28 <std_eval+0xfb8>
    cdcd:	sub    eax,0xb
    cdd0:	mov    DWORD PTR [rsp+0x54],0x0
    cdd8:	mov    DWORD PTR [rsp+0x68],eax
    cddc:	jmp    bfd1 <std_eval+0x361>
    cde1:	test   r10d,r10d
    cde4:	jne    cc18 <std_eval+0xfa8>
    cdea:	add    eax,0xb
    cded:	mov    DWORD PTR [rsp+0x54],0x0
    cdf5:	mov    DWORD PTR [rsp+0x68],eax
    cdf9:	jmp    ca59 <std_eval+0xde9>
    cdfe:	lea    eax,[rsi+0x1]
    ce01:	cmp    ecx,eax
    ce03:	jg     ca20 <std_eval+0xdb0>
    ce09:	add    ecx,0x1
    ce0c:	cmp    esi,ecx
    ce0e:	jle    c450 <std_eval+0x7e0>
    ce14:	jmp    ccaf <std_eval+0x103f>
    ce19:	sub    eax,0xf
    ce1c:	jmp    c620 <std_eval+0x9b0>
    ce21:	sub    eax,0x19
    ce24:	mov    DWORD PTR [rsp+0x68],eax
    ce28:	jmp    c50d <std_eval+0x89d>
    ce2d:	add    eax,0x28
    ce30:	mov    DWORD PTR [rsp+0x4c],0x7
    ce38:	mov    DWORD PTR [rsp+0x68],eax
    ce3c:	mov    ebx,DWORD PTR [rsp+0x50]
    ce40:	cmp    DWORD PTR [rsp+0xc],ebx
    ce44:	jne    c5a3 <std_eval+0x933>
    ce4a:	add    esi,0x11
    ce4d:	mov    DWORD PTR [rsp+0x68],esi
    ce51:	jmp    c5a3 <std_eval+0x933>
    ce56:	add    eax,0xf
    ce59:	jmp    c760 <std_eval+0xaf0>
    ce5e:	mov    r8d,DWORD PTR [rsp+0x14]
    ce63:	test   r8d,r8d
    ce66:	jne    cf29 <std_eval+0x12b9>
    ce6c:	test   al,al
    ce6e:	je     cf29 <std_eval+0x12b9>
    ce74:	mov    eax,DWORD PTR [rsp+0x28]
    ce78:	add    eax,DWORD PTR [rsp+0x24]
    ce7c:	jne    c3b8 <std_eval+0x748>
    ce82:	mov    eax,DWORD PTR [rsp+0x2c]
    ce86:	mov    ebx,DWORD PTR [rsp+0x30]
    ce8a:	lea    eax,[rax+rbx*1-0x1]
    ce8e:	cmp    eax,0x1
    ce91:	ja     c3b8 <std_eval+0x748>
    ce97:	jmp    c9d4 <std_eval+0xd64>
    ce9c:	cmp    DWORD PTR [rsp+0x28],0x2
    cea1:	jg     cf62 <std_eval+0x12f2>
    cea7:	mov    ebx,DWORD PTR [rsp+0x24]
    ceab:	test   ebx,ebx
    cead:	jne    cf62 <std_eval+0x12f2>
    ceb3:	cmp    DWORD PTR [rsp+0x30],0x2
    ceb8:	jg     cec8 <std_eval+0x1258>
    ceba:	mov    r10d,DWORD PTR [rsp+0x2c]
    cebf:	test   r10d,r10d
    cec2:	je     c9d4 <std_eval+0xd64>
    cec8:	cmp    DWORD PTR [rsp+0x2c],0x1
    cecd:	jne    c3b8 <std_eval+0x748>
    ced3:	mov    r9d,DWORD PTR [rsp+0x30]
    ced8:	test   r9d,r9d
    cedb:	je     c9d4 <std_eval+0xd64>
    cee1:	jmp    c3b8 <std_eval+0x748>
    cee6:	lea    eax,[rsi+0x2]
    cee9:	cmp    ecx,eax
    ceeb:	jg     ca20 <std_eval+0xdb0>
    cef1:	add    ecx,0x2
    cef4:	cmp    esi,ecx
    cef6:	jle    c450 <std_eval+0x7e0>
    cefc:	jmp    ccaf <std_eval+0x103f>
    cf01:	mov    ebx,DWORD PTR [rsp+0xc]
    cf05:	mov    DWORD PTR [rsp+0x50],ebx
    cf09:	add    eax,0x19
    cf0c:	mov    DWORD PTR [rsp+0x4c],esi
    cf10:	mov    DWORD PTR [rsp+0x68],eax
    cf14:	jmp    c585 <std_eval+0x915>
    cf19:	sub    eax,0x19
    cf1c:	jmp    c620 <std_eval+0x9b0>
    cf21:	add    eax,0x19
    cf24:	jmp    c760 <std_eval+0xaf0>
    cf29:	cmp    DWORD PTR [rsp+0x14],0x1
    cf2e:	jne    c3b8 <std_eval+0x748>
    cf34:	mov    ebx,DWORD PTR [rsp+0x10]
    cf38:	mov    eax,DWORD PTR [rsp+0x30]
    cf3c:	add    eax,DWORD PTR [rsp+0x2c]
    cf40:	or     ebx,eax
    cf42:	jne    c3b8 <std_eval+0x748>
    cf48:	mov    eax,DWORD PTR [rsp+0x28]
    cf4c:	mov    ebx,DWORD PTR [rsp+0x24]
    cf50:	lea    eax,[rax+rbx*1-0x1]
    cf54:	cmp    eax,0x1
    cf57:	ja     c3b8 <std_eval+0x748>
    cf5d:	jmp    c9d4 <std_eval+0xd64>
    cf62:	cmp    DWORD PTR [rsp+0x24],0x1
    cf67:	jne    c3b8 <std_eval+0x748>
    cf6d:	mov    r11d,DWORD PTR [rsp+0x28]
    cf72:	test   r11d,r11d
    cf75:	je     ceb3 <std_eval+0x1243>
    cf7b:	jmp    c3b8 <std_eval+0x748>
    cf80:	mov    edx,DWORD PTR [rsp+0x48]
    cf84:	sub    eax,0x1
    cf87:	cmp    eax,DWORD PTR [rsp+0x58]
    cf8b:	lea    ecx,[rdx+0x320]
    cf91:	cmovle ecx,edx
    cf94:	mov    DWORD PTR [rsp+0x48],ecx
    cf98:	jmp    c092 <std_eval+0x422>
    cf9d:	mov    eax,DWORD PTR [rsp+0x5c]
    cfa1:	lea    eax,[rax+r9*2+0xc]
    cfa6:	mov    DWORD PTR [rsp+0x68],eax
    cfaa:	jmp    c0a8 <std_eval+0x438>
    cfaf:	mov    ecx,DWORD PTR [rsp+0x5c]
    cfb3:	lea    eax,[r9+r9*1+0xc]
    cfb8:	sub    ecx,eax
    cfba:	mov    DWORD PTR [rsp+0x68],ecx
    cfbe:	jmp    cb24 <std_eval+0xeb4>
    cfc3:	mov    edx,DWORD PTR [rsp+0x44]
    cfc7:	sub    eax,0x1
    cfca:	cmp    eax,DWORD PTR [rsp+0x58]
    cfce:	lea    ecx,[rdx-0x320]
    cfd4:	cmovle ecx,edx
    cfd7:	mov    DWORD PTR [rsp+0x44],ecx
    cfdb:	jmp    cb0e <std_eval+0xe9e>
    cfe0:	mov    eax,DWORD PTR [rsp+0x30]
    cfe4:	add    eax,DWORD PTR [rsp+0x2c]
    cfe8:	cmp    eax,0x1
    cfeb:	jg     c3b8 <std_eval+0x748>
    cff1:	jmp    c9d4 <std_eval+0xd64>
    cff6:	sub    eax,0x11
    cff9:	mov    DWORD PTR [rsp+0x68],eax
    cffd:	jmp    c541 <std_eval+0x8d1>
    d002:	mov    esi,DWORD PTR [rsp+0x4c]
    d006:	jmp    cf09 <std_eval+0x1299>
    d00b:	mov    edx,DWORD PTR [rsp+0x18]
    d00f:	test   edx,edx
    d011:	jne    c450 <std_eval+0x7e0>
    d017:	mov    eax,DWORD PTR [rsp+0x20]
    d01b:	test   eax,eax
    d01d:	jne    ccaf <std_eval+0x103f>
    d023:	jmp    c450 <std_eval+0x7e0>
    d028:	call   1310 <__stack_chk_fail@plt>
    d02d:	add    eax,0x32
    d030:	mov    DWORD PTR [rsp+0x68],eax
    d034:	jmp    c105 <std_eval+0x495>
    d039:	sub    eax,0x32
    d03c:	mov    DWORD PTR [rsp+0x68],eax
    d040:	jmp    cb80 <std_eval+0xf10>
    d045:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d04f:	nop

000000000000d050 <ResetHandValue>:
    d050:	endbr64 
    d054:	movdqa xmm0,XMMWORD PTR [rip+0x17424]        # 24480 <std_hand_value>
    d05c:	movdqa xmm1,XMMWORD PTR [rip+0x1742c]        # 24490 <std_hand_value+0x10>
    d064:	movdqa xmm2,XMMWORD PTR [rip+0x17434]        # 244a0 <std_hand_value+0x20>
    d06c:	mov    eax,DWORD PTR [rip+0x1743e]        # 244b0 <std_hand_value+0x30>
    d072:	movaps XMMWORD PTR [rip+0x17447],xmm0        # 244c0 <hand_value>
    d079:	mov    DWORD PTR [rip+0x17471],eax        # 244f0 <hand_value+0x30>
    d07f:	movaps XMMWORD PTR [rip+0x1744a],xmm1        # 244d0 <hand_value+0x10>
    d086:	movaps XMMWORD PTR [rip+0x17453],xmm2        # 244e0 <hand_value+0x20>
    d08d:	ret    
    d08e:	xchg   ax,ax

000000000000d090 <BegForPartner>:
    d090:	endbr64 
    d094:	ret    
    d095:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000d0a0 <GreetPartner>:
    d0a0:	endbr64 
    d0a4:	sub    rsp,0x8
    d0a8:	lea    rdi,[rip+0x10fb1]        # 1e060 <sbishop+0x240>
    d0af:	call   12d0 <puts@plt>
    d0b4:	lea    rdi,[rip+0x10fed]        # 1e0a8 <sbishop+0x288>
    d0bb:	add    rsp,0x8
    d0bf:	jmp    12d0 <puts@plt>
    d0c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d0cf:	nop

000000000000d0d0 <HandlePartner>:
    d0d0:	endbr64 
    d0d4:	cmp    BYTE PTR [rdi],0x20
    d0d7:	jne    d0e8 <HandlePartner+0x18>
    d0d9:	mov    eax,DWORD PTR [rip+0x28a66d]        # 29774c <have_partner>
    d0df:	test   eax,eax
    d0e1:	je     d140 <HandlePartner+0x70>
    d0e3:	ret    
    d0e4:	nop    DWORD PTR [rax+0x0]
    d0e8:	lea    rdi,[rip+0x270459]        # 27d548 <my_partner+0x8>
    d0ef:	xor    eax,eax
    d0f1:	lea    rcx,[rip+0x270448]        # 27d540 <my_partner>
    d0f8:	mov    QWORD PTR [rip+0x27043d],0x0        # 27d540 <my_partner>
    d103:	mov    QWORD PTR [rip+0x27052a],0x0        # 27d638 <my_partner+0xf8>
    d10e:	and    rdi,0xfffffffffffffff8
    d112:	sub    rcx,rdi
    d115:	add    ecx,0x100
    d11b:	shr    ecx,0x3
    d11e:	rep stos QWORD PTR es:[rdi],rax
    d121:	lea    rdi,[rip+0x11492]        # 1e5ba <sbishop+0x79a>
    d128:	mov    DWORD PTR [rip+0x28a61a],0x0        # 29774c <have_partner>
    d132:	jmp    12d0 <puts@plt>
    d137:	nop    WORD PTR [rax+rax*1+0x0]
    d140:	sub    rsp,0x8
    d144:	add    rdi,0x1
    d148:	lea    rdx,[rip+0x2703f1]        # 27d540 <my_partner>
    d14f:	xor    eax,eax
    d151:	lea    rsi,[rip+0x11438]        # 1e590 <sbishop+0x770>
    d158:	call   1400 <__isoc99_sscanf@plt>
    d15d:	xor    eax,eax
    d15f:	mov    DWORD PTR [rip+0x28a5e3],0x1        # 29774c <have_partner>
    d169:	call   d0a0 <GreetPartner>
    d16e:	lea    rdi,[rip+0x1141e]        # 1e593 <sbishop+0x773>
    d175:	call   12d0 <puts@plt>
    d17a:	lea    rdi,[rip+0x1142a]        # 1e5ab <sbishop+0x78b>
    d181:	add    rsp,0x8
    d185:	jmp    12d0 <puts@plt>
    d18a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d190 <HandlePtell>:
    d190:	endbr64 
    d194:	push   rbp
    d195:	lea    rbp,[rdi+0x6]
    d199:	mov    rax,rdi
    d19c:	mov    ecx,0x4
    d1a1:	push   rbx
    d1a2:	lea    rdi,[rip+0x11424]        # 1e5cd <sbishop+0x7ad>
    d1a9:	mov    rsi,rbp
    d1ac:	sub    rsp,0x68
    d1b0:	movdqa xmm0,XMMWORD PTR [rip+0x11648]        # 1e800 <sbishop+0x9e0>
    d1b8:	mov    rbx,QWORD PTR fs:0x28
    d1c1:	mov    QWORD PTR [rsp+0x58],rbx
    d1c6:	xor    ebx,ebx
    d1c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d1ca:	movaps XMMWORD PTR [rsp],xmm0
    d1ce:	movdqa xmm0,XMMWORD PTR [rip+0x1163a]        # 1e810 <sbishop+0x9f0>
    d1d6:	movaps XMMWORD PTR [rsp+0x10],xmm0
    d1db:	pxor   xmm0,xmm0
    d1df:	movaps XMMWORD PTR [rsp+0x20],xmm0
    d1e4:	movaps XMMWORD PTR [rsp+0x30],xmm0
    d1e9:	movaps XMMWORD PTR [rsp+0x40],xmm0
    d1ee:	seta   dl
    d1f1:	sbb    dl,0x0
    d1f4:	test   dl,dl
    d1f6:	je     d438 <HandlePtell+0x2a8>
    d1fc:	cmp    DWORD PTR [rip+0x26e5bd],0x1        # 27b7c0 <Variant>
    d203:	je     d224 <HandlePtell+0x94>
    d205:	mov    ecx,0x5
    d20a:	lea    rdi,[rip+0x113c1]        # 1e5d2 <sbishop+0x7b2>
    d211:	mov    rsi,rbp
    d214:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d216:	seta   dl
    d219:	sbb    dl,0x0
    d21c:	test   dl,dl
    d21e:	jne    d450 <HandlePtell+0x2c0>
    d224:	cmp    BYTE PTR [rax+0x6],0x73
    d228:	je     d278 <HandlePtell+0xe8>
    d22a:	cmp    BYTE PTR [rax+0x6],0x67
    d22e:	jne    d2b0 <HandlePtell+0x120>
    d234:	cmp    BYTE PTR [rbp+0x1],0x6f
    d238:	jne    d2b0 <HandlePtell+0x120>
    d23a:	lea    rdi,[rip+0x11397]        # 1e5d8 <sbishop+0x7b8>
    d241:	call   12d0 <puts@plt>
    d246:	mov    DWORD PTR [rip+0x270d94],0x0        # 27dfe4 <must_sit>
    d250:	mov    DWORD PTR [rip+0x59d06],0x4        # 66f60 <must_go>
    d25a:	mov    rax,QWORD PTR [rsp+0x58]
    d25f:	xor    rax,QWORD PTR fs:0x28
    d268:	jne    ded3 <HandlePtell+0xd43>
    d26e:	add    rsp,0x68
    d272:	pop    rbx
    d273:	pop    rbp
    d274:	ret    
    d275:	nop    DWORD PTR [rax]
    d278:	cmp    BYTE PTR [rbp+0x1],0x69
    d27c:	jne    d22a <HandlePtell+0x9a>
    d27e:	cmp    BYTE PTR [rbp+0x2],0x74
    d282:	jne    d22a <HandlePtell+0x9a>
    d284:	lea    rdi,[rip+0x10f45]        # 1e1d0 <sbishop+0x3b0>
    d28b:	call   12d0 <puts@plt>
    d290:	mov    DWORD PTR [rip+0x270d4a],0x1        # 27dfe4 <must_sit>
    d29a:	mov    DWORD PTR [rip+0x59cbc],0x0        # 66f60 <must_go>
    d2a4:	jmp    d25a <HandlePtell+0xca>
    d2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d2b0:	mov    ecx,0x4
    d2b5:	lea    rdi,[rip+0x11f37]        # 1f1f3 <scentral+0x413>
    d2bc:	mov    rsi,rbp
    d2bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d2c1:	seta   dl
    d2c4:	sbb    dl,0x0
    d2c7:	test   dl,dl
    d2c9:	je     d23a <HandlePtell+0xaa>
    d2cf:	mov    ecx,0x4
    d2d4:	lea    rdi,[rip+0x1131b]        # 1e5f6 <sbishop+0x7d6>
    d2db:	mov    rsi,rbp
    d2de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d2e0:	seta   dl
    d2e3:	sbb    dl,0x0
    d2e6:	test   dl,dl
    d2e8:	je     d468 <HandlePtell+0x2d8>
    d2ee:	mov    ecx,0x4
    d2f3:	lea    rdi,[rip+0x11301]        # 1e5fb <sbishop+0x7db>
    d2fa:	mov    rsi,rbp
    d2fd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d2ff:	seta   dl
    d302:	sbb    dl,0x0
    d305:	test   dl,dl
    d307:	je     d468 <HandlePtell+0x2d8>
    d30d:	mov    ecx,0x4
    d312:	lea    rdi,[rip+0x112e7]        # 1e600 <sbishop+0x7e0>
    d319:	mov    rsi,rbp
    d31c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d31e:	seta   dl
    d321:	sbb    dl,0x0
    d324:	test   dl,dl
    d326:	je     d490 <HandlePtell+0x300>
    d32c:	mov    ecx,0x5
    d331:	lea    rdi,[rip+0x112d5]        # 1e60d <sbishop+0x7ed>
    d338:	mov    rsi,rbp
    d33b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d33d:	seta   dl
    d340:	sbb    dl,0x0
    d343:	test   dl,dl
    d345:	je     d4b8 <HandlePtell+0x328>
    d34b:	mov    ecx,0x4
    d350:	lea    rdi,[rip+0x112de]        # 1e635 <sbishop+0x815>
    d357:	mov    rsi,rbp
    d35a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d35c:	seta   dl
    d35f:	sbb    dl,0x0
    d362:	test   dl,dl
    d364:	je     d4d5 <HandlePtell+0x345>
    d36a:	movzx  ebx,BYTE PTR [rax+0x6]
    d36e:	cmp    bl,0x2b
    d371:	je     d4f2 <HandlePtell+0x362>
    d377:	cmp    bl,0x2d
    d37a:	je     d7ab <HandlePtell+0x61b>
    d380:	cmp    bl,0x78
    d383:	je     d39d <HandlePtell+0x20d>
    d385:	lea    rsi,[rip+0x11364]        # 1e6f0 <sbishop+0x8d0>
    d38c:	mov    rdi,rbp
    d38f:	call   1480 <strstr@plt>
    d394:	test   rax,rax
    d397:	je     dae0 <HandlePtell+0x950>
    d39d:	lea    rsi,[rip+0x11367]        # 1e70b <sbishop+0x8eb>
    d3a4:	mov    rdi,rbp
    d3a7:	call   1480 <strstr@plt>
    d3ac:	test   rax,rax
    d3af:	je     dbe3 <HandlePtell+0xa53>
    d3b5:	mov    ecx,0x19
    d3ba:	lea    rdi,[rip+0x11353]        # 1e714 <sbishop+0x8f4>
    d3c1:	mov    rsi,rbp
    d3c4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d3c6:	seta   al
    d3c9:	sbb    al,0x0
    d3cb:	test   al,al
    d3cd:	je     d788 <HandlePtell+0x5f8>
    d3d3:	mov    ecx,0x4
    d3d8:	lea    rdi,[rip+0x1134f]        # 1e72e <sbishop+0x90e>
    d3df:	mov    rsi,rbp
    d3e2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d3e4:	seta   al
    d3e7:	sbb    al,0x0
    d3e9:	test   al,al
    d3eb:	je     d788 <HandlePtell+0x5f8>
    d3f1:	mov    ecx,0x1a
    d3f6:	lea    rdi,[rip+0x11336]        # 1e733 <sbishop+0x913>
    d3fd:	mov    rsi,rbp
    d400:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d402:	seta   al
    d405:	sbb    al,0x0
    d407:	test   al,al
    d409:	jne    dd6f <HandlePtell+0xbdf>
    d40f:	mov    DWORD PTR [rip+0x28a327],0x1        # 297740 <go_fast>
    d419:	mov    DWORD PTR [rip+0x270bc1],0x0        # 27dfe4 <must_sit>
    d423:	mov    DWORD PTR [rip+0x59b37],0x1        # 66f64 <piecedead>
    d42d:	jmp    d25a <HandlePtell+0xca>
    d432:	nop    WORD PTR [rax+rax*1+0x0]
    d438:	lea    rdi,[rip+0x10cb9]        # 1e0f8 <sbishop+0x2d8>
    d43f:	call   12d0 <puts@plt>
    d444:	jmp    d25a <HandlePtell+0xca>
    d449:	nop    DWORD PTR [rax+0x0]
    d450:	lea    rdi,[rip+0x10d39]        # 1e190 <sbishop+0x370>
    d457:	call   12d0 <puts@plt>
    d45c:	jmp    d25a <HandlePtell+0xca>
    d461:	nop    DWORD PTR [rax+0x0]
    d468:	lea    rdi,[rip+0x10d99]        # 1e208 <sbishop+0x3e8>
    d46f:	call   12d0 <puts@plt>
    d474:	mov    DWORD PTR [rip+0x28a2c2],0x1        # 297740 <go_fast>
    d47e:	mov    DWORD PTR [rip+0x270b5c],0x0        # 27dfe4 <must_sit>
    d488:	jmp    d25a <HandlePtell+0xca>
    d48d:	nop    DWORD PTR [rax]
    d490:	lea    rdi,[rip+0x10d99]        # 1e230 <sbishop+0x410>
    d497:	call   12d0 <puts@plt>
    d49c:	mov    DWORD PTR [rip+0x28a29a],0x0        # 297740 <go_fast>
    d4a6:	mov    DWORD PTR [rip+0x270b34],0x0        # 27dfe4 <must_sit>
    d4b0:	jmp    d25a <HandlePtell+0xca>
    d4b5:	nop    DWORD PTR [rax]
    d4b8:	lea    rdi,[rip+0x10d99]        # 1e258 <sbishop+0x438>
    d4bf:	call   12d0 <puts@plt>
    d4c4:	lea    rdi,[rip+0x1113a]        # 1e605 <sbishop+0x7e5>
    d4cb:	call   12d0 <puts@plt>
    d4d0:	jmp    d25a <HandlePtell+0xca>
    d4d5:	lea    rdi,[rip+0x11137]        # 1e613 <sbishop+0x7f3>
    d4dc:	call   12d0 <puts@plt>
    d4e1:	lea    rdi,[rip+0x11145]        # 1e62d <sbishop+0x80d>
    d4e8:	call   12d0 <puts@plt>
    d4ed:	jmp    d25a <HandlePtell+0xca>
    d4f2:	lea    rsi,[rip+0x11141]        # 1e63a <sbishop+0x81a>
    d4f9:	mov    rdi,rbp
    d4fc:	call   1480 <strstr@plt>
    d501:	test   rax,rax
    d504:	je     da29 <HandlePtell+0x899>
    d50a:	cmp    DWORD PTR [rip+0x28a243],0x1        # 297754 <comp_color>
    d511:	je     db1a <HandlePtell+0x98a>
    d517:	sub    DWORD PTR [rip+0x16faa],0x19        # 244c8 <hand_value+0x8>
    d51e:	sub    DWORD PTR [rip+0x16fab],0x32        # 244d0 <hand_value+0x10>
    d525:	sub    DWORD PTR [rip+0x16fc4],0x32        # 244f0 <hand_value+0x30>
    d52c:	sub    DWORD PTR [rip+0x16fad],0x32        # 244e0 <hand_value+0x20>
    d533:	sub    DWORD PTR [rip+0x16fae],0x64        # 244e8 <hand_value+0x28>
    d53a:	lea    rdi,[rip+0x10d3f]        # 1e280 <sbishop+0x460>
    d541:	xor    ebx,ebx
    d543:	call   12d0 <puts@plt>
    d548:	mov    esi,0x6e
    d54d:	mov    rdi,rbp
    d550:	call   1330 <strchr@plt>
    d555:	test   rax,rax
    d558:	je     d58b <HandlePtell+0x3fb>
    d55a:	cmp    DWORD PTR [rip+0x28a1f3],0x1        # 297754 <comp_color>
    d561:	je     da6f <HandlePtell+0x8df>
    d567:	mov    eax,DWORD PTR [rip+0x16f23]        # 24490 <std_hand_value+0x10>
    d56d:	sub    eax,ebx
    d56f:	mov    DWORD PTR [rip+0x16f5b],eax        # 244d0 <hand_value+0x10>
    d575:	mov    rdx,rsp
    d578:	lea    rsi,[rip+0x110c5]        # 1e644 <sbishop+0x824>
    d57f:	mov    edi,0x1
    d584:	xor    eax,eax
    d586:	call   1420 <__printf_chk@plt>
    d58b:	mov    esi,0x62
    d590:	mov    rdi,rbp
    d593:	call   1330 <strchr@plt>
    d598:	test   rax,rax
    d59b:	je     d5dc <HandlePtell+0x44c>
    d59d:	cmp    DWORD PTR [rip+0x28a1b0],0x1        # 297754 <comp_color>
    d5a4:	je     db42 <HandlePtell+0x9b2>
    d5aa:	mov    eax,DWORD PTR [rip+0x16f00]        # 244b0 <std_hand_value+0x30>
    d5b0:	sub    eax,ebx
    d5b2:	mov    DWORD PTR [rip+0x16f38],eax        # 244f0 <hand_value+0x30>
    d5b8:	mov    eax,DWORD PTR [rip+0x16eea]        # 244a8 <std_hand_value+0x28>
    d5be:	sub    eax,ebx
    d5c0:	mov    DWORD PTR [rip+0x16f22],eax        # 244e8 <hand_value+0x28>
    d5c6:	mov    rdx,rsp
    d5c9:	lea    rsi,[rip+0x11091]        # 1e661 <sbishop+0x841>
    d5d0:	mov    edi,0x1
    d5d5:	xor    eax,eax
    d5d7:	call   1420 <__printf_chk@plt>
    d5dc:	mov    esi,0x72
    d5e1:	mov    rdi,rbp
    d5e4:	call   1330 <strchr@plt>
    d5e9:	test   rax,rax
    d5ec:	je     d62d <HandlePtell+0x49d>
    d5ee:	cmp    DWORD PTR [rip+0x28a15f],0x1        # 297754 <comp_color>
    d5f5:	je     db63 <HandlePtell+0x9d3>
    d5fb:	mov    eax,DWORD PTR [rip+0x16e9f]        # 244a0 <std_hand_value+0x20>
    d601:	sub    eax,ebx
    d603:	mov    DWORD PTR [rip+0x16ed7],eax        # 244e0 <hand_value+0x20>
    d609:	mov    eax,DWORD PTR [rip+0x16e99]        # 244a8 <std_hand_value+0x28>
    d60f:	sub    eax,ebx
    d611:	mov    DWORD PTR [rip+0x16ed1],eax        # 244e8 <hand_value+0x28>
    d617:	mov    rdx,rsp
    d61a:	lea    rsi,[rip+0x1105d]        # 1e67e <sbishop+0x85e>
    d621:	mov    edi,0x1
    d626:	xor    eax,eax
    d628:	call   1420 <__printf_chk@plt>
    d62d:	mov    esi,0x71
    d632:	mov    rdi,rbp
    d635:	call   1330 <strchr@plt>
    d63a:	test   rax,rax
    d63d:	je     d670 <HandlePtell+0x4e0>
    d63f:	cmp    DWORD PTR [rip+0x28a10e],0x1        # 297754 <comp_color>
    d646:	je     db84 <HandlePtell+0x9f4>
    d64c:	mov    eax,DWORD PTR [rip+0x16e56]        # 244a8 <std_hand_value+0x28>
    d652:	sub    eax,ebx
    d654:	mov    DWORD PTR [rip+0x16e8e],eax        # 244e8 <hand_value+0x28>
    d65a:	mov    rdx,rsp
    d65d:	lea    rsi,[rip+0x11035]        # 1e699 <sbishop+0x879>
    d664:	mov    edi,0x1
    d669:	xor    eax,eax
    d66b:	call   1420 <__printf_chk@plt>
    d670:	mov    esi,0x70
    d675:	mov    rdi,rbp
    d678:	call   1330 <strchr@plt>
    d67d:	test   rax,rax
    d680:	je     d6cf <HandlePtell+0x53f>
    d682:	cmp    DWORD PTR [rip+0x28a0cb],0x1        # 297754 <comp_color>
    d689:	je     da82 <HandlePtell+0x8f2>
    d68f:	mov    eax,DWORD PTR [rip+0x16df3]        # 24488 <std_hand_value+0x8>
    d695:	sub    eax,ebx
    d697:	mov    DWORD PTR [rip+0x16e2b],eax        # 244c8 <hand_value+0x8>
    d69d:	mov    eax,DWORD PTR [rip+0x16e05]        # 244a8 <std_hand_value+0x28>
    d6a3:	sub    eax,ebx
    d6a5:	mov    DWORD PTR [rip+0x16e3d],eax        # 244e8 <hand_value+0x28>
    d6ab:	mov    eax,DWORD PTR [rip+0x16dff]        # 244b0 <std_hand_value+0x30>
    d6b1:	sub    eax,ebx
    d6b3:	mov    DWORD PTR [rip+0x16e37],eax        # 244f0 <hand_value+0x30>
    d6b9:	mov    rdx,rsp
    d6bc:	lea    rsi,[rip+0x10ff2]        # 1e6b5 <sbishop+0x895>
    d6c3:	mov    edi,0x1
    d6c8:	xor    eax,eax
    d6ca:	call   1420 <__printf_chk@plt>
    d6cf:	mov    esi,0x64
    d6d4:	mov    rdi,rbp
    d6d7:	call   1330 <strchr@plt>
    d6dc:	test   rax,rax
    d6df:	je     d72e <HandlePtell+0x59e>
    d6e1:	cmp    DWORD PTR [rip+0x28a06c],0x1        # 297754 <comp_color>
    d6e8:	je     dab1 <HandlePtell+0x921>
    d6ee:	mov    eax,DWORD PTR [rip+0x16d94]        # 24488 <std_hand_value+0x8>
    d6f4:	sub    eax,ebx
    d6f6:	mov    DWORD PTR [rip+0x16dcc],eax        # 244c8 <hand_value+0x8>
    d6fc:	mov    eax,DWORD PTR [rip+0x16dae]        # 244b0 <std_hand_value+0x30>
    d702:	sub    eax,ebx
    d704:	mov    DWORD PTR [rip+0x16de6],eax        # 244f0 <hand_value+0x30>
    d70a:	mov    eax,DWORD PTR [rip+0x16d98]        # 244a8 <std_hand_value+0x28>
    d710:	sub    eax,ebx
    d712:	mov    DWORD PTR [rip+0x16dd0],eax        # 244e8 <hand_value+0x28>
    d718:	mov    rdx,rsp
    d71b:	lea    rsi,[rip+0x10bee]        # 1e310 <sbishop+0x4f0>
    d722:	mov    edi,0x1
    d727:	xor    eax,eax
    d729:	call   1420 <__printf_chk@plt>
    d72e:	mov    esi,0x68
    d733:	mov    rdi,rbp
    d736:	call   1330 <strchr@plt>
    d73b:	test   rax,rax
    d73e:	je     d25a <HandlePtell+0xca>
    d744:	cmp    DWORD PTR [rip+0x28a009],0x1        # 297754 <comp_color>
    d74b:	je     da0a <HandlePtell+0x87a>
    d751:	mov    eax,DWORD PTR [rip+0x16d49]        # 244a0 <std_hand_value+0x20>
    d757:	sub    eax,ebx
    d759:	mov    DWORD PTR [rip+0x16d81],eax        # 244e0 <hand_value+0x20>
    d75f:	mov    eax,DWORD PTR [rip+0x16d43]        # 244a8 <std_hand_value+0x28>
    d765:	sub    eax,ebx
    d767:	mov    DWORD PTR [rip+0x16d7b],eax        # 244e8 <hand_value+0x28>
    d76d:	mov    rdx,rsp
    d770:	lea    rsi,[rip+0x10f59]        # 1e6d0 <sbishop+0x8b0>
    d777:	mov    edi,0x1
    d77c:	xor    eax,eax
    d77e:	call   1420 <__printf_chk@plt>
    d783:	jmp    d25a <HandlePtell+0xca>
    d788:	mov    DWORD PTR [rip+0x289fae],0x1        # 297740 <go_fast>
    d792:	mov    DWORD PTR [rip+0x270848],0x0        # 27dfe4 <must_sit>
    d79c:	mov    DWORD PTR [rip+0x597c2],0x1        # 66f68 <partnerdead>
    d7a6:	jmp    d25a <HandlePtell+0xca>
    d7ab:	lea    rsi,[rip+0x10e88]        # 1e63a <sbishop+0x81a>
    d7b2:	mov    rdi,rbp
    d7b5:	call   1480 <strstr@plt>
    d7ba:	test   rax,rax
    d7bd:	je     db97 <HandlePtell+0xa07>
    d7c3:	cmp    DWORD PTR [rip+0x289f8a],0x1        # 297754 <comp_color>
    d7ca:	je     dc8d <HandlePtell+0xafd>
    d7d0:	add    DWORD PTR [rip+0x16ced],0x14        # 244c4 <hand_value+0x4>
    d7d7:	add    DWORD PTR [rip+0x16cee],0x32        # 244cc <hand_value+0xc>
    d7de:	add    DWORD PTR [rip+0x16d07],0x32        # 244ec <hand_value+0x2c>
    d7e5:	add    DWORD PTR [rip+0x16cf0],0x32        # 244dc <hand_value+0x1c>
    d7ec:	add    DWORD PTR [rip+0x16cf1],0x64        # 244e4 <hand_value+0x24>
    d7f3:	lea    rdi,[rip+0x10b36]        # 1e330 <sbishop+0x510>
    d7fa:	xor    ebx,ebx
    d7fc:	call   12d0 <puts@plt>
    d801:	mov    esi,0x6e
    d806:	mov    rdi,rbp
    d809:	call   1330 <strchr@plt>
    d80e:	test   rax,rax
    d811:	je     d844 <HandlePtell+0x6b4>
    d813:	cmp    DWORD PTR [rip+0x289f3a],0x1        # 297754 <comp_color>
    d81a:	je     dc7a <HandlePtell+0xaea>
    d820:	mov    eax,DWORD PTR [rip+0x16c66]        # 2448c <std_hand_value+0xc>
    d826:	add    eax,ebx
    d828:	mov    DWORD PTR [rip+0x16c9e],eax        # 244cc <hand_value+0xc>
    d82e:	mov    rdx,rsp
    d831:	lea    rsi,[rip+0x10e0c]        # 1e644 <sbishop+0x824>
    d838:	mov    edi,0x1
    d83d:	xor    eax,eax
    d83f:	call   1420 <__printf_chk@plt>
    d844:	mov    esi,0x62
    d849:	mov    rdi,rbp
    d84c:	call   1330 <strchr@plt>
    d851:	test   rax,rax
    d854:	je     d895 <HandlePtell+0x705>
    d856:	cmp    DWORD PTR [rip+0x289ef7],0x1        # 297754 <comp_color>
    d85d:	je     dcb5 <HandlePtell+0xb25>
    d863:	mov    eax,DWORD PTR [rip+0x16c43]        # 244ac <std_hand_value+0x2c>
    d869:	add    eax,ebx
    d86b:	mov    DWORD PTR [rip+0x16c7b],eax        # 244ec <hand_value+0x2c>
    d871:	mov    eax,DWORD PTR [rip+0x16c2d]        # 244a4 <std_hand_value+0x24>
    d877:	add    eax,ebx
    d879:	mov    DWORD PTR [rip+0x16c65],eax        # 244e4 <hand_value+0x24>
    d87f:	mov    rdx,rsp
    d882:	lea    rsi,[rip+0x10dd8]        # 1e661 <sbishop+0x841>
    d889:	mov    edi,0x1
    d88e:	xor    eax,eax
    d890:	call   1420 <__printf_chk@plt>
    d895:	mov    esi,0x72
    d89a:	mov    rdi,rbp
    d89d:	call   1330 <strchr@plt>
    d8a2:	test   rax,rax
    d8a5:	je     d8e6 <HandlePtell+0x756>
    d8a7:	cmp    DWORD PTR [rip+0x289ea6],0x1        # 297754 <comp_color>
    d8ae:	je     dcd6 <HandlePtell+0xb46>
    d8b4:	mov    eax,DWORD PTR [rip+0x16be2]        # 2449c <std_hand_value+0x1c>
    d8ba:	add    eax,ebx
    d8bc:	mov    DWORD PTR [rip+0x16c1a],eax        # 244dc <hand_value+0x1c>
    d8c2:	mov    eax,DWORD PTR [rip+0x16bdc]        # 244a4 <std_hand_value+0x24>
    d8c8:	add    eax,ebx
    d8ca:	mov    DWORD PTR [rip+0x16c14],eax        # 244e4 <hand_value+0x24>
    d8d0:	mov    rdx,rsp
    d8d3:	lea    rsi,[rip+0x10da4]        # 1e67e <sbishop+0x85e>
    d8da:	mov    edi,0x1
    d8df:	xor    eax,eax
    d8e1:	call   1420 <__printf_chk@plt>
    d8e6:	mov    esi,0x71
    d8eb:	mov    rdi,rbp
    d8ee:	call   1330 <strchr@plt>
    d8f3:	test   rax,rax
    d8f6:	je     d929 <HandlePtell+0x799>
    d8f8:	cmp    DWORD PTR [rip+0x289e55],0x1        # 297754 <comp_color>
    d8ff:	je     dcf7 <HandlePtell+0xb67>
    d905:	mov    eax,DWORD PTR [rip+0x16b99]        # 244a4 <std_hand_value+0x24>
    d90b:	add    eax,ebx
    d90d:	mov    DWORD PTR [rip+0x16bd1],eax        # 244e4 <hand_value+0x24>
    d913:	mov    rdx,rsp
    d916:	lea    rsi,[rip+0x10d7c]        # 1e699 <sbishop+0x879>
    d91d:	mov    edi,0x1
    d922:	xor    eax,eax
    d924:	call   1420 <__printf_chk@plt>
    d929:	mov    esi,0x70
    d92e:	mov    rdi,rbp
    d931:	call   1330 <strchr@plt>
    d936:	test   rax,rax
    d939:	je     d988 <HandlePtell+0x7f8>
    d93b:	cmp    DWORD PTR [rip+0x289e12],0x1        # 297754 <comp_color>
    d942:	je     dd0a <HandlePtell+0xb7a>
    d948:	mov    eax,DWORD PTR [rip+0x16b36]        # 24484 <std_hand_value+0x4>
    d94e:	add    eax,ebx
    d950:	mov    DWORD PTR [rip+0x16b6e],eax        # 244c4 <hand_value+0x4>
    d956:	mov    eax,DWORD PTR [rip+0x16b48]        # 244a4 <std_hand_value+0x24>
    d95c:	add    eax,ebx
    d95e:	mov    DWORD PTR [rip+0x16b80],eax        # 244e4 <hand_value+0x24>
    d964:	mov    eax,DWORD PTR [rip+0x16b42]        # 244ac <std_hand_value+0x2c>
    d96a:	add    eax,ebx
    d96c:	mov    DWORD PTR [rip+0x16b7a],eax        # 244ec <hand_value+0x2c>
    d972:	mov    rdx,rsp
    d975:	lea    rsi,[rip+0x10d39]        # 1e6b5 <sbishop+0x895>
    d97c:	mov    edi,0x1
    d981:	xor    eax,eax
    d983:	call   1420 <__printf_chk@plt>
    d988:	mov    esi,0x64
    d98d:	mov    rdi,rbp
    d990:	call   1330 <strchr@plt>
    d995:	test   rax,rax
    d998:	je     d9e7 <HandlePtell+0x857>
    d99a:	cmp    DWORD PTR [rip+0x289db3],0x1        # 297754 <comp_color>
    d9a1:	je     dc4b <HandlePtell+0xabb>
    d9a7:	mov    eax,DWORD PTR [rip+0x16ad7]        # 24484 <std_hand_value+0x4>
    d9ad:	add    eax,ebx
    d9af:	mov    DWORD PTR [rip+0x16b0f],eax        # 244c4 <hand_value+0x4>
    d9b5:	mov    eax,DWORD PTR [rip+0x16af1]        # 244ac <std_hand_value+0x2c>
    d9bb:	add    eax,ebx
    d9bd:	mov    DWORD PTR [rip+0x16b29],eax        # 244ec <hand_value+0x2c>
    d9c3:	mov    eax,DWORD PTR [rip+0x16adb]        # 244a4 <std_hand_value+0x24>
    d9c9:	add    eax,ebx
    d9cb:	mov    DWORD PTR [rip+0x16b13],eax        # 244e4 <hand_value+0x24>
    d9d1:	mov    rdx,rsp
    d9d4:	lea    rsi,[rip+0x10935]        # 1e310 <sbishop+0x4f0>
    d9db:	mov    edi,0x1
    d9e0:	xor    eax,eax
    d9e2:	call   1420 <__printf_chk@plt>
    d9e7:	mov    esi,0x68
    d9ec:	mov    rdi,rbp
    d9ef:	call   1330 <strchr@plt>
    d9f4:	test   rax,rax
    d9f7:	je     d25a <HandlePtell+0xca>
    d9fd:	cmp    DWORD PTR [rip+0x289d50],0x1        # 297754 <comp_color>
    da04:	je     d751 <HandlePtell+0x5c1>
    da0a:	mov    eax,DWORD PTR [rip+0x16a8c]        # 2449c <std_hand_value+0x1c>
    da10:	add    eax,ebx
    da12:	add    ebx,DWORD PTR [rip+0x16a8c]        # 244a4 <std_hand_value+0x24>
    da18:	mov    DWORD PTR [rip+0x16abe],eax        # 244dc <hand_value+0x1c>
    da1e:	mov    DWORD PTR [rip+0x16ac0],ebx        # 244e4 <hand_value+0x24>
    da24:	jmp    d76d <HandlePtell+0x5dd>
    da29:	mov    esi,0x6e
    da2e:	mov    rdi,rbp
    da31:	call   1330 <strchr@plt>
    da36:	test   rax,rax
    da39:	je     de14 <HandlePtell+0xc84>
    da3f:	lea    rsi,[rip+0x10bfa]        # 1e640 <sbishop+0x820>
    da46:	mov    rdi,rbp
    da49:	call   1480 <strstr@plt>
    da4e:	test   rax,rax
    da51:	je     dd39 <HandlePtell+0xba9>
    da57:	mov    DWORD PTR [rsp],0x6574616d
    da5e:	mov    ebx,0xc350
    da63:	mov    WORD PTR [rsp+0x4],0x73
    da6a:	jmp    d548 <HandlePtell+0x3b8>
    da6f:	mov    eax,DWORD PTR [rip+0x16a17]        # 2448c <std_hand_value+0xc>
    da75:	add    eax,ebx
    da77:	mov    DWORD PTR [rip+0x16a4f],eax        # 244cc <hand_value+0xc>
    da7d:	jmp    d575 <HandlePtell+0x3e5>
    da82:	mov    eax,DWORD PTR [rip+0x169fc]        # 24484 <std_hand_value+0x4>
    da88:	add    eax,ebx
    da8a:	mov    DWORD PTR [rip+0x16a34],eax        # 244c4 <hand_value+0x4>
    da90:	mov    eax,DWORD PTR [rip+0x16a0e]        # 244a4 <std_hand_value+0x24>
    da96:	add    eax,ebx
    da98:	mov    DWORD PTR [rip+0x16a46],eax        # 244e4 <hand_value+0x24>
    da9e:	mov    eax,DWORD PTR [rip+0x16a08]        # 244ac <std_hand_value+0x2c>
    daa4:	add    eax,ebx
    daa6:	mov    DWORD PTR [rip+0x16a40],eax        # 244ec <hand_value+0x2c>
    daac:	jmp    d6b9 <HandlePtell+0x529>
    dab1:	mov    eax,DWORD PTR [rip+0x169cd]        # 24484 <std_hand_value+0x4>
    dab7:	add    eax,ebx
    dab9:	mov    DWORD PTR [rip+0x16a05],eax        # 244c4 <hand_value+0x4>
    dabf:	mov    eax,DWORD PTR [rip+0x169e7]        # 244ac <std_hand_value+0x2c>
    dac5:	add    eax,ebx
    dac7:	mov    DWORD PTR [rip+0x16a1f],eax        # 244ec <hand_value+0x2c>
    dacd:	mov    eax,DWORD PTR [rip+0x169d1]        # 244a4 <std_hand_value+0x24>
    dad3:	add    eax,ebx
    dad5:	mov    DWORD PTR [rip+0x16a09],eax        # 244e4 <hand_value+0x24>
    dadb:	jmp    d718 <HandlePtell+0x588>
    dae0:	lea    rsi,[rip+0x10c19]        # 1e700 <sbishop+0x8e0>
    dae7:	mov    rdi,rbp
    daea:	call   1480 <strstr@plt>
    daef:	test   rax,rax
    daf2:	je     db0c <HandlePtell+0x97c>
    daf4:	lea    rsi,[rip+0x10c0b]        # 1e706 <sbishop+0x8e6>
    dafb:	mov    rdi,rbp
    dafe:	call   1480 <strstr@plt>
    db03:	test   rax,rax
    db06:	jne    d39d <HandlePtell+0x20d>
    db0c:	cmp    bl,0x3d
    db0f:	jne    d3b5 <HandlePtell+0x225>
    db15:	jmp    d39d <HandlePtell+0x20d>
    db1a:	add    DWORD PTR [rip+0x169a3],0x19        # 244c4 <hand_value+0x4>
    db21:	add    DWORD PTR [rip+0x169a4],0x32        # 244cc <hand_value+0xc>
    db28:	add    DWORD PTR [rip+0x169bd],0x32        # 244ec <hand_value+0x2c>
    db2f:	add    DWORD PTR [rip+0x169a6],0x32        # 244dc <hand_value+0x1c>
    db36:	add    DWORD PTR [rip+0x169a7],0x64        # 244e4 <hand_value+0x24>
    db3d:	jmp    d53a <HandlePtell+0x3aa>
    db42:	mov    eax,DWORD PTR [rip+0x16964]        # 244ac <std_hand_value+0x2c>
    db48:	add    eax,ebx
    db4a:	mov    DWORD PTR [rip+0x1699c],eax        # 244ec <hand_value+0x2c>
    db50:	mov    eax,DWORD PTR [rip+0x1694e]        # 244a4 <std_hand_value+0x24>
    db56:	add    eax,ebx
    db58:	mov    DWORD PTR [rip+0x16986],eax        # 244e4 <hand_value+0x24>
    db5e:	jmp    d5c6 <HandlePtell+0x436>
    db63:	mov    eax,DWORD PTR [rip+0x16933]        # 2449c <std_hand_value+0x1c>
    db69:	add    eax,ebx
    db6b:	mov    DWORD PTR [rip+0x1696b],eax        # 244dc <hand_value+0x1c>
    db71:	mov    eax,DWORD PTR [rip+0x1692d]        # 244a4 <std_hand_value+0x24>
    db77:	add    eax,ebx
    db79:	mov    DWORD PTR [rip+0x16965],eax        # 244e4 <hand_value+0x24>
    db7f:	jmp    d617 <HandlePtell+0x487>
    db84:	mov    eax,DWORD PTR [rip+0x1691a]        # 244a4 <std_hand_value+0x24>
    db8a:	add    eax,ebx
    db8c:	mov    DWORD PTR [rip+0x16952],eax        # 244e4 <hand_value+0x24>
    db92:	jmp    d65a <HandlePtell+0x4ca>
    db97:	mov    esi,0x6e
    db9c:	mov    rdi,rbp
    db9f:	call   1330 <strchr@plt>
    dba4:	test   rax,rax
    dba7:	je     ded8 <HandlePtell+0xd48>
    dbad:	lea    rsi,[rip+0x10b38]        # 1e6ec <sbishop+0x8cc>
    dbb4:	mov    rdi,rbp
    dbb7:	call   1480 <strstr@plt>
    dbbc:	test   rax,rax
    dbbf:	je     de9d <HandlePtell+0xd0d>
    dbc5:	mov    rax,rsp
    dbc8:	mov    ecx,0x35
    dbcd:	mov    ebx,0xc350
    dbd2:	lea    rsi,[rip+0x1077f]        # 1e358 <sbishop+0x538>
    dbd9:	mov    rdi,rax
    dbdc:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    dbde:	jmp    d801 <HandlePtell+0x671>
    dbe3:	lea    rdi,[rip+0x1080e]        # 1e3f8 <sbishop+0x5d8>
    dbea:	call   12d0 <puts@plt>
    dbef:	movdqa xmm1,XMMWORD PTR [rip+0x16889]        # 24480 <std_hand_value>
    dbf7:	movdqa xmm2,XMMWORD PTR [rip+0x16891]        # 24490 <std_hand_value+0x10>
    dbff:	mov    DWORD PTR [rip+0x2703db],0x0        # 27dfe4 <must_sit>
    dc09:	movdqa xmm3,XMMWORD PTR [rip+0x1688f]        # 244a0 <std_hand_value+0x20>
    dc11:	mov    eax,DWORD PTR [rip+0x16899]        # 244b0 <std_hand_value+0x30>
    dc17:	mov    DWORD PTR [rip+0x59347],0x0        # 66f68 <partnerdead>
    dc21:	mov    DWORD PTR [rip+0x59339],0x0        # 66f64 <piecedead>
    dc2b:	mov    DWORD PTR [rip+0x168bf],eax        # 244f0 <hand_value+0x30>
    dc31:	movaps XMMWORD PTR [rip+0x16888],xmm1        # 244c0 <hand_value>
    dc38:	movaps XMMWORD PTR [rip+0x16891],xmm2        # 244d0 <hand_value+0x10>
    dc3f:	movaps XMMWORD PTR [rip+0x1689a],xmm3        # 244e0 <hand_value+0x20>
    dc46:	jmp    d25a <HandlePtell+0xca>
    dc4b:	mov    eax,DWORD PTR [rip+0x16837]        # 24488 <std_hand_value+0x8>
    dc51:	sub    eax,ebx
    dc53:	mov    DWORD PTR [rip+0x1686f],eax        # 244c8 <hand_value+0x8>
    dc59:	mov    eax,DWORD PTR [rip+0x16851]        # 244b0 <std_hand_value+0x30>
    dc5f:	sub    eax,ebx
    dc61:	mov    DWORD PTR [rip+0x16889],eax        # 244f0 <hand_value+0x30>
    dc67:	mov    eax,DWORD PTR [rip+0x1683b]        # 244a8 <std_hand_value+0x28>
    dc6d:	sub    eax,ebx
    dc6f:	mov    DWORD PTR [rip+0x16873],eax        # 244e8 <hand_value+0x28>
    dc75:	jmp    d9d1 <HandlePtell+0x841>
    dc7a:	mov    eax,DWORD PTR [rip+0x16810]        # 24490 <std_hand_value+0x10>
    dc80:	sub    eax,ebx
    dc82:	mov    DWORD PTR [rip+0x16848],eax        # 244d0 <hand_value+0x10>
    dc88:	jmp    d82e <HandlePtell+0x69e>
    dc8d:	sub    DWORD PTR [rip+0x16834],0x14        # 244c8 <hand_value+0x8>
    dc94:	sub    DWORD PTR [rip+0x16835],0x32        # 244d0 <hand_value+0x10>
    dc9b:	sub    DWORD PTR [rip+0x1684e],0x32        # 244f0 <hand_value+0x30>
    dca2:	sub    DWORD PTR [rip+0x16837],0x32        # 244e0 <hand_value+0x20>
    dca9:	sub    DWORD PTR [rip+0x16838],0x64        # 244e8 <hand_value+0x28>
    dcb0:	jmp    d7f3 <HandlePtell+0x663>
    dcb5:	mov    eax,DWORD PTR [rip+0x167f5]        # 244b0 <std_hand_value+0x30>
    dcbb:	sub    eax,ebx
    dcbd:	mov    DWORD PTR [rip+0x1682d],eax        # 244f0 <hand_value+0x30>
    dcc3:	mov    eax,DWORD PTR [rip+0x167df]        # 244a8 <std_hand_value+0x28>
    dcc9:	sub    eax,ebx
    dccb:	mov    DWORD PTR [rip+0x16817],eax        # 244e8 <hand_value+0x28>
    dcd1:	jmp    d87f <HandlePtell+0x6ef>
    dcd6:	mov    eax,DWORD PTR [rip+0x167c4]        # 244a0 <std_hand_value+0x20>
    dcdc:	sub    eax,ebx
    dcde:	mov    DWORD PTR [rip+0x167fc],eax        # 244e0 <hand_value+0x20>
    dce4:	mov    eax,DWORD PTR [rip+0x167be]        # 244a8 <std_hand_value+0x28>
    dcea:	sub    eax,ebx
    dcec:	mov    DWORD PTR [rip+0x167f6],eax        # 244e8 <hand_value+0x28>
    dcf2:	jmp    d8d0 <HandlePtell+0x740>
    dcf7:	mov    eax,DWORD PTR [rip+0x167ab]        # 244a8 <std_hand_value+0x28>
    dcfd:	sub    eax,ebx
    dcff:	mov    DWORD PTR [rip+0x167e3],eax        # 244e8 <hand_value+0x28>
    dd05:	jmp    d913 <HandlePtell+0x783>
    dd0a:	mov    eax,DWORD PTR [rip+0x16778]        # 24488 <std_hand_value+0x8>
    dd10:	sub    eax,ebx
    dd12:	mov    DWORD PTR [rip+0x167b0],eax        # 244c8 <hand_value+0x8>
    dd18:	mov    eax,DWORD PTR [rip+0x1678a]        # 244a8 <std_hand_value+0x28>
    dd1e:	sub    eax,ebx
    dd20:	mov    DWORD PTR [rip+0x167c2],eax        # 244e8 <hand_value+0x28>
    dd26:	mov    eax,DWORD PTR [rip+0x16784]        # 244b0 <std_hand_value+0x30>
    dd2c:	sub    eax,ebx
    dd2e:	mov    DWORD PTR [rip+0x167bc],eax        # 244f0 <hand_value+0x30>
    dd34:	jmp    d972 <HandlePtell+0x7e2>
    dd39:	lea    rsi,[rip+0x10901]        # 1e641 <sbishop+0x821>
    dd40:	mov    rdi,rbp
    dd43:	call   1480 <strstr@plt>
    dd48:	test   rax,rax
    dd4b:	je     df61 <HandlePtell+0xdd1>
    dd51:	mov    rax,rsp
    dd54:	mov    ecx,0x31
    dd59:	mov    ebx,0x3e8
    dd5e:	lea    rsi,[rip+0x10543]        # 1e2a8 <sbishop+0x488>
    dd65:	mov    rdi,rax
    dd68:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    dd6a:	jmp    d548 <HandlePtell+0x3b8>
    dd6f:	mov    edx,0x5
    dd74:	lea    rsi,[rip+0x10857]        # 1e5d2 <sbishop+0x7b2>
    dd7b:	mov    rdi,rbp
    dd7e:	call   12c0 <strncmp@plt>
    dd83:	test   eax,eax
    dd85:	je     d25a <HandlePtell+0xca>
    dd8b:	mov    edx,0x2
    dd90:	lea    rsi,[rip+0x109b7]        # 1e74e <sbishop+0x92e>
    dd97:	mov    rdi,rbp
    dd9a:	call   12c0 <strncmp@plt>
    dd9f:	test   eax,eax
    dda1:	je     d25a <HandlePtell+0xca>
    dda7:	mov    edx,0x2
    ddac:	lea    rsi,[rip+0x1099e]        # 1e751 <sbishop+0x931>
    ddb3:	mov    rdi,rbp
    ddb6:	call   12c0 <strncmp@plt>
    ddbb:	test   eax,eax
    ddbd:	je     dfce <HandlePtell+0xe3e>
    ddc3:	mov    edx,0x5
    ddc8:	lea    rsi,[rip+0x10985]        # 1e754 <sbishop+0x934>
    ddcf:	mov    rdi,rbp
    ddd2:	call   12c0 <strncmp@plt>
    ddd7:	test   eax,eax
    ddd9:	je     dfce <HandlePtell+0xe3e>
    dddf:	lea    rsi,[rip+0x1098d]        # 1e773 <sbishop+0x953>
    dde6:	mov    rdi,rbp
    dde9:	call   1480 <strstr@plt>
    ddee:	test   rax,rax
    ddf1:	je     dfdf <HandlePtell+0xe4f>
    ddf7:	lea    rdi,[rip+0x10632]        # 1e430 <sbishop+0x610>
    ddfe:	call   12d0 <puts@plt>
    de03:	lea    rdi,[rip+0x10789]        # 1e593 <sbishop+0x773>
    de0a:	call   12d0 <puts@plt>
    de0f:	jmp    d25a <HandlePtell+0xca>
    de14:	mov    esi,0x62
    de19:	mov    rdi,rbp
    de1c:	call   1330 <strchr@plt>
    de21:	test   rax,rax
    de24:	jne    da3f <HandlePtell+0x8af>
    de2a:	mov    esi,0x70
    de2f:	mov    rdi,rbp
    de32:	call   1330 <strchr@plt>
    de37:	test   rax,rax
    de3a:	jne    da3f <HandlePtell+0x8af>
    de40:	mov    esi,0x72
    de45:	mov    rdi,rbp
    de48:	call   1330 <strchr@plt>
    de4d:	test   rax,rax
    de50:	jne    da3f <HandlePtell+0x8af>
    de56:	mov    esi,0x71
    de5b:	mov    rdi,rbp
    de5e:	call   1330 <strchr@plt>
    de63:	test   rax,rax
    de66:	jne    da3f <HandlePtell+0x8af>
    de6c:	mov    esi,0x64
    de71:	mov    rdi,rbp
    de74:	call   1330 <strchr@plt>
    de79:	test   rax,rax
    de7c:	jne    da3f <HandlePtell+0x8af>
    de82:	mov    esi,0x68
    de87:	mov    rdi,rbp
    de8a:	call   1330 <strchr@plt>
    de8f:	test   rax,rax
    de92:	jne    da3f <HandlePtell+0x8af>
    de98:	jmp    d50a <HandlePtell+0x37a>
    de9d:	lea    rsi,[rip+0x10849]        # 1e6ed <sbishop+0x8cd>
    dea4:	mov    rdi,rbp
    dea7:	call   1480 <strstr@plt>
    deac:	test   rax,rax
    deaf:	je     df9e <HandlePtell+0xe0e>
    deb5:	mov    rax,rsp
    deb8:	mov    ecx,0xd
    debd:	mov    ebx,0x3e8
    dec2:	lea    rsi,[rip+0x104c7]        # 1e390 <sbishop+0x570>
    dec9:	mov    rdi,rax
    decc:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    dece:	jmp    d801 <HandlePtell+0x671>
    ded3:	call   1310 <__stack_chk_fail@plt>
    ded8:	mov    esi,0x62
    dedd:	mov    rdi,rbp
    dee0:	call   1330 <strchr@plt>
    dee5:	test   rax,rax
    dee8:	jne    dbad <HandlePtell+0xa1d>
    deee:	mov    esi,0x70
    def3:	mov    rdi,rbp
    def6:	call   1330 <strchr@plt>
    defb:	test   rax,rax
    defe:	jne    dbad <HandlePtell+0xa1d>
    df04:	mov    esi,0x72
    df09:	mov    rdi,rbp
    df0c:	call   1330 <strchr@plt>
    df11:	test   rax,rax
    df14:	jne    dbad <HandlePtell+0xa1d>
    df1a:	mov    esi,0x71
    df1f:	mov    rdi,rbp
    df22:	call   1330 <strchr@plt>
    df27:	test   rax,rax
    df2a:	jne    dbad <HandlePtell+0xa1d>
    df30:	mov    esi,0x64
    df35:	mov    rdi,rbp
    df38:	call   1330 <strchr@plt>
    df3d:	test   rax,rax
    df40:	jne    dbad <HandlePtell+0xa1d>
    df46:	mov    esi,0x68
    df4b:	mov    rdi,rbp
    df4e:	call   1330 <strchr@plt>
    df53:	test   rax,rax
    df56:	jne    dbad <HandlePtell+0xa1d>
    df5c:	jmp    d7c3 <HandlePtell+0x633>
    df61:	mov    esi,0x2b
    df66:	mov    rdi,rbp
    df69:	call   1330 <strchr@plt>
    df6e:	test   rax,rax
    df71:	je     df91 <HandlePtell+0xe01>
    df73:	mov    rax,rsp
    df76:	mov    ecx,0xb
    df7b:	mov    ebx,0x96
    df80:	lea    rsi,[rip+0x10359]        # 1e2e0 <sbishop+0x4c0>
    df87:	mov    rdi,rax
    df8a:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    df8c:	jmp    d548 <HandlePtell+0x3b8>
    df91:	mov    DWORD PTR ds:0x0,0x0
    df9c:	ud2    
    df9e:	mov    esi,0x2d
    dfa3:	mov    rdi,rbp
    dfa6:	call   1330 <strchr@plt>
    dfab:	test   rax,rax
    dfae:	je     df91 <HandlePtell+0xe01>
    dfb0:	mov    rax,rsp
    dfb3:	mov    ecx,0x2f
    dfb8:	mov    ebx,0x96
    dfbd:	lea    rsi,[rip+0x10404]        # 1e3c8 <sbishop+0x5a8>
    dfc4:	mov    rdi,rax
    dfc7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    dfc9:	jmp    d801 <HandlePtell+0x671>
    dfce:	lea    rdi,[rip+0x10785]        # 1e75a <sbishop+0x93a>
    dfd5:	call   12d0 <puts@plt>
    dfda:	jmp    d25a <HandlePtell+0xca>
    dfdf:	lea    rdi,[rip+0x104a2]        # 1e488 <sbishop+0x668>
    dfe6:	call   12d0 <puts@plt>
    dfeb:	jmp    d25a <HandlePtell+0xca>

000000000000dff0 <CheckBadFlow>:
    dff0:	endbr64 
    dff4:	push   r15
    dff6:	push   r14
    dff8:	push   r13
    dffa:	push   r12
    dffc:	push   rbp
    dffd:	push   rbx
    dffe:	lea    r11,[rsp-0x6000]
    e006:	sub    rsp,0x1000
    e00d:	or     QWORD PTR [rsp],0x0
    e012:	cmp    rsp,r11
    e015:	jne    e006 <CheckBadFlow+0x16>
    e017:	sub    rsp,0x48
    e01b:	mov    DWORD PTR [rsp+0x20],edi
    e01f:	mov    rcx,QWORD PTR fs:0x28
    e028:	mov    QWORD PTR [rsp+0x6038],rcx
    e030:	xor    ecx,ecx
    e032:	test   edi,edi
    e034:	je     e098 <CheckBadFlow+0xa8>
    e036:	mov    DWORD PTR [rip+0x16590],0x0        # 245d0 <pawnmated.4458>
    e040:	mov    DWORD PTR [rip+0x16582],0x0        # 245cc <knightmated.4459>
    e04a:	mov    DWORD PTR [rip+0x16574],0x0        # 245c8 <bishopmated.4460>
    e054:	mov    DWORD PTR [rip+0x16566],0x0        # 245c4 <rookmated.4461>
    e05e:	mov    DWORD PTR [rip+0x16558],0x0        # 245c0 <queenmated.4462>
    e068:	mov    rax,QWORD PTR [rsp+0x6038]
    e070:	xor    rax,QWORD PTR fs:0x28
    e079:	jne    ebc6 <CheckBadFlow+0xbd6>
    e07f:	add    rsp,0x6048
    e086:	pop    rbx
    e087:	pop    rbp
    e088:	pop    r12
    e08a:	pop    r13
    e08c:	pop    r14
    e08e:	pop    r15
    e090:	ret    
    e091:	nop    DWORD PTR [rax+0x0]
    e098:	call   7ca0 <in_check>
    e09d:	xor    esi,esi
    e09f:	mov    r14d,eax
    e0a2:	mov    eax,DWORD PTR [rip+0x26f478]        # 27d520 <white_to_move>
    e0a8:	test   eax,eax
    e0aa:	mov    DWORD PTR [rsp+0xc],eax
    e0ae:	sete   sil
    e0b2:	je     e158 <CheckBadFlow+0x168>
    e0b8:	movsxd rax,esi
    e0bb:	lea    rcx,[rip+0x16f5e]        # 25020 <holding>
    e0c2:	mov    rdx,rax
    e0c5:	mov    QWORD PTR [rsp+0x10],rcx
    e0ca:	shl    rdx,0x6
    e0ce:	mov    edx,DWORD PTR [rcx+rdx*1+0x4]
    e0d2:	test   edx,edx
    e0d4:	je     e468 <CheckBadFlow+0x478>
    e0da:	mov    DWORD PTR [rsp+0xc],0x0
    e0e2:	mov    rcx,QWORD PTR [rsp+0x10]
    e0e7:	mov    rdx,rax
    e0ea:	mov    edi,0x3
    e0ef:	mov    DWORD PTR [rsp+0x24],0x0
    e0f7:	shl    rdx,0x6
    e0fb:	mov    edx,DWORD PTR [rcx+rdx*1+0xc]
    e0ff:	test   edx,edx
    e101:	je     e395 <CheckBadFlow+0x3a5>
    e107:	mov    rcx,QWORD PTR [rsp+0x10]
    e10c:	mov    rdx,rax
    e10f:	shl    rdx,0x6
    e113:	mov    r8d,DWORD PTR [rcx+rdx*1+0x2c]
    e118:	test   r8d,r8d
    e11b:	je     e848 <CheckBadFlow+0x858>
    e121:	mov    DWORD PTR [rsp+0x18],0x0
    e129:	mov    rcx,QWORD PTR [rsp+0x10]
    e12e:	mov    rdx,rax
    e131:	shl    rdx,0x6
    e135:	mov    r10d,DWORD PTR [rcx+rdx*1+0x1c]
    e13a:	test   r10d,r10d
    e13d:	je     ead0 <CheckBadFlow+0xae0>
    e143:	mov    DWORD PTR [rsp+0x1c],0x0
    e14b:	mov    edi,0x9
    e150:	jmp    e1e1 <CheckBadFlow+0x1f1>
    e155:	nop    DWORD PTR [rax]
    e158:	movsxd rax,esi
    e15b:	lea    rcx,[rip+0x16ebe]        # 25020 <holding>
    e162:	mov    rdx,rax
    e165:	mov    QWORD PTR [rsp+0x10],rcx
    e16a:	shl    rdx,0x6
    e16e:	mov    ecx,DWORD PTR [rcx+rdx*1+0x8]
    e172:	test   ecx,ecx
    e174:	je     e530 <CheckBadFlow+0x540>
    e17a:	mov    rcx,QWORD PTR [rsp+0x10]
    e17f:	mov    rdx,rax
    e182:	shl    rdx,0x6
    e186:	mov    ecx,DWORD PTR [rcx+rdx*1+0x10]
    e18a:	test   ecx,ecx
    e18c:	je     e390 <CheckBadFlow+0x3a0>
    e192:	mov    DWORD PTR [rsp+0x24],0x0
    e19a:	mov    rcx,QWORD PTR [rsp+0x10]
    e19f:	mov    rdx,rax
    e1a2:	shl    rdx,0x6
    e1a6:	mov    edi,DWORD PTR [rcx+rdx*1+0x30]
    e1aa:	test   edi,edi
    e1ac:	je     eac0 <CheckBadFlow+0xad0>
    e1b2:	mov    DWORD PTR [rsp+0x18],0x0
    e1ba:	mov    rcx,QWORD PTR [rsp+0x10]
    e1bf:	mov    rdx,rax
    e1c2:	shl    rdx,0x6
    e1c6:	mov    r9d,DWORD PTR [rcx+rdx*1+0x20]
    e1cb:	test   r9d,r9d
    e1ce:	je     e978 <CheckBadFlow+0x988>
    e1d4:	mov    DWORD PTR [rsp+0x1c],0x0
    e1dc:	mov    edi,0xa
    e1e1:	mov    rcx,QWORD PTR [rsp+0x10]
    e1e6:	movsxd rdx,edi
    e1e9:	shl    rax,0x4
    e1ed:	add    rax,rdx
    e1f0:	mov    r15d,DWORD PTR [rcx+rax*4]
    e1f4:	test   r15d,r15d
    e1f7:	je     e638 <CheckBadFlow+0x648>
    e1fd:	xor    r15d,r15d
    e200:	mov    eax,DWORD PTR [rip+0x163ca]        # 245d0 <pawnmated.4458>
    e206:	mov    ecx,DWORD PTR [rsp+0xc]
    e20a:	cmp    eax,ecx
    e20c:	je     e5b0 <CheckBadFlow+0x5c0>
    e212:	cmp    ecx,0x3
    e215:	je     e7f0 <CheckBadFlow+0x800>
    e21b:	xor    r14d,r14d
    e21e:	xor    ebx,ebx
    e220:	or     eax,ecx
    e222:	je     eaf0 <CheckBadFlow+0xb00>
    e228:	mov    eax,DWORD PTR [rip+0x1639e]        # 245cc <knightmated.4459>
    e22e:	mov    ecx,DWORD PTR [rsp+0x24]
    e232:	xor    r13d,r13d
    e235:	cmp    eax,ecx
    e237:	je     e24f <CheckBadFlow+0x25f>
    e239:	mov    r13d,0x1
    e23f:	cmp    ecx,0x3
    e242:	je     e24f <CheckBadFlow+0x25f>
    e244:	xor    r13d,r13d
    e247:	or     eax,ecx
    e249:	je     eb70 <CheckBadFlow+0xb80>
    e24f:	mov    eax,DWORD PTR [rip+0x16373]        # 245c8 <bishopmated.4460>
    e255:	mov    ecx,DWORD PTR [rsp+0x18]
    e259:	xor    r12d,r12d
    e25c:	cmp    eax,ecx
    e25e:	je     e276 <CheckBadFlow+0x286>
    e260:	mov    r12d,0x1
    e266:	cmp    ecx,0x3
    e269:	je     e276 <CheckBadFlow+0x286>
    e26b:	xor    r12d,r12d
    e26e:	or     eax,ecx
    e270:	je     eb50 <CheckBadFlow+0xb60>
    e276:	mov    eax,DWORD PTR [rip+0x16348]        # 245c4 <rookmated.4461>
    e27c:	mov    ecx,DWORD PTR [rsp+0x1c]
    e280:	xor    ebp,ebp
    e282:	cmp    eax,ecx
    e284:	je     e29a <CheckBadFlow+0x2aa>
    e286:	mov    ebp,0x1
    e28b:	cmp    ecx,0x3
    e28e:	je     e29a <CheckBadFlow+0x2aa>
    e290:	xor    ebp,ebp
    e292:	or     eax,ecx
    e294:	je     eb30 <CheckBadFlow+0xb40>
    e29a:	mov    eax,DWORD PTR [rip+0x16320]        # 245c0 <queenmated.4462>
    e2a0:	cmp    eax,r15d
    e2a3:	je     e2b8 <CheckBadFlow+0x2c8>
    e2a5:	cmp    r15d,0x3
    e2a9:	je     e800 <CheckBadFlow+0x810>
    e2af:	or     eax,r15d
    e2b2:	je     eb10 <CheckBadFlow+0xb20>
    e2b8:	and    ebx,0x1
    e2bb:	test   r14d,r14d
    e2be:	jne    e620 <CheckBadFlow+0x630>
    e2c4:	test   r13d,r13d
    e2c7:	jne    e608 <CheckBadFlow+0x618>
    e2cd:	test   r12d,r12d
    e2d0:	jne    e5f0 <CheckBadFlow+0x600>
    e2d6:	test   ebp,ebp
    e2d8:	jne    e5c0 <CheckBadFlow+0x5d0>
    e2de:	mov    r13d,DWORD PTR [rsp+0x20]
    e2e3:	test   r13d,r13d
    e2e6:	jne    e5da <CheckBadFlow+0x5ea>
    e2ec:	mov    r12d,DWORD PTR [rip+0x58c71]        # 66f64 <piecedead>
    e2f3:	test   r12d,r12d
    e2f6:	je     e300 <CheckBadFlow+0x310>
    e2f8:	test   bl,bl
    e2fa:	jne    e810 <CheckBadFlow+0x820>
    e300:	mov    ebp,DWORD PTR [rsp+0xc]
    e304:	test   ebp,ebp
    e306:	jne    e315 <CheckBadFlow+0x325>
    e308:	mov    eax,DWORD PTR [rip+0x162c2]        # 245d0 <pawnmated.4458>
    e30e:	sub    eax,0x1
    e311:	mov    DWORD PTR [rsp+0xc],eax
    e315:	mov    eax,DWORD PTR [rsp+0xc]
    e319:	mov    ebx,DWORD PTR [rsp+0x18]
    e31d:	mov    DWORD PTR [rip+0x162ad],eax        # 245d0 <pawnmated.4458>
    e323:	test   ebx,ebx
    e325:	jne    e334 <CheckBadFlow+0x344>
    e327:	mov    eax,DWORD PTR [rip+0x1629b]        # 245c8 <bishopmated.4460>
    e32d:	sub    eax,0x1
    e330:	mov    DWORD PTR [rsp+0x18],eax
    e334:	mov    eax,DWORD PTR [rsp+0x18]
    e338:	mov    r11d,DWORD PTR [rsp+0x1c]
    e33d:	mov    DWORD PTR [rip+0x16285],eax        # 245c8 <bishopmated.4460>
    e343:	test   r11d,r11d
    e346:	jne    e355 <CheckBadFlow+0x365>
    e348:	mov    eax,DWORD PTR [rip+0x16276]        # 245c4 <rookmated.4461>
    e34e:	sub    eax,0x1
    e351:	mov    DWORD PTR [rsp+0x1c],eax
    e355:	mov    eax,DWORD PTR [rsp+0x1c]
    e359:	mov    DWORD PTR [rip+0x16265],eax        # 245c4 <rookmated.4461>
    e35f:	test   r15d,r15d
    e362:	jne    e36e <CheckBadFlow+0x37e>
    e364:	mov    eax,DWORD PTR [rip+0x16256]        # 245c0 <queenmated.4462>
    e36a:	lea    r15d,[rax-0x1]
    e36e:	mov    eax,DWORD PTR [rsp+0x24]
    e372:	mov    DWORD PTR [rip+0x16247],r15d        # 245c0 <queenmated.4462>
    e379:	test   eax,eax
    e37b:	je     e5a0 <CheckBadFlow+0x5b0>
    e381:	mov    DWORD PTR [rip+0x16245],eax        # 245cc <knightmated.4459>
    e387:	jmp    e068 <CheckBadFlow+0x78>
    e38c:	nop    DWORD PTR [rax+0x0]
    e390:	mov    edi,0x4
    e395:	call   4110 <DropaddHolding>
    e39a:	lea    rbp,[rsp+0x30]
    e39f:	mov    rdi,rbp
    e3a2:	call   9b80 <gen>
    e3a7:	mov    eax,DWORD PTR [rip+0x3035b]        # 3e708 <numb_moves>
    e3ad:	mov    DWORD PTR [rsp+0x1c],eax
    e3b1:	test   eax,eax
    e3b3:	jle    e7a0 <CheckBadFlow+0x7b0>
    e3b9:	xor    r12d,r12d
    e3bc:	lea    rbx,[rsp+0x3030]
    e3c4:	jmp    e3ea <CheckBadFlow+0x3fa>
    e3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e3d0:	mov    esi,r12d
    e3d3:	mov    rdi,rbp
    e3d6:	add    r12d,0x1
    e3da:	call   ae30 <unmake>
    e3df:	cmp    DWORD PTR [rsp+0x1c],r12d
    e3e4:	jle    e7a0 <CheckBadFlow+0x7b0>
    e3ea:	mov    esi,r12d
    e3ed:	mov    rdi,rbp
    e3f0:	call   8e00 <make>
    e3f5:	mov    edx,r14d
    e3f8:	mov    esi,r12d
    e3fb:	mov    rdi,rbp
    e3fe:	call   6f70 <check_legal>
    e403:	test   eax,eax
    e405:	je     e3d0 <CheckBadFlow+0x3e0>
    e407:	call   7ca0 <in_check>
    e40c:	mov    rdi,rbx
    e40f:	mov    r13d,eax
    e412:	call   9b80 <gen>
    e417:	mov    eax,DWORD PTR [rip+0x302eb]        # 3e708 <numb_moves>
    e41d:	mov    DWORD PTR [rsp+0x18],eax
    e421:	test   eax,eax
    e423:	jle    e558 <CheckBadFlow+0x568>
    e429:	xor    r15d,r15d
    e42c:	nop    DWORD PTR [rax+0x0]
    e430:	mov    esi,r15d
    e433:	mov    rdi,rbx
    e436:	call   8e00 <make>
    e43b:	mov    esi,r15d
    e43e:	mov    rdi,rbx
    e441:	mov    edx,r13d
    e444:	call   6f70 <check_legal>
    e449:	mov    esi,r15d
    e44c:	mov    rdi,rbx
    e44f:	test   eax,eax
    e451:	je     e540 <CheckBadFlow+0x550>
    e457:	call   ae30 <unmake>
    e45c:	jmp    e3d0 <CheckBadFlow+0x3e0>
    e461:	nop    DWORD PTR [rax+0x0]
    e468:	mov    edi,0x1
    e46d:	call   4110 <DropaddHolding>
    e472:	lea    rbp,[rsp+0x30]
    e477:	mov    rdi,rbp
    e47a:	call   9b80 <gen>
    e47f:	mov    eax,DWORD PTR [rip+0x30283]        # 3e708 <numb_moves>
    e485:	mov    DWORD PTR [rsp+0x18],eax
    e489:	test   eax,eax
    e48b:	jle    e760 <CheckBadFlow+0x770>
    e491:	xor    r12d,r12d
    e494:	lea    rbx,[rsp+0x3030]
    e49c:	jmp    e4ba <CheckBadFlow+0x4ca>
    e49e:	xchg   ax,ax
    e4a0:	mov    esi,r12d
    e4a3:	mov    rdi,rbp
    e4a6:	add    r12d,0x1
    e4aa:	call   ae30 <unmake>
    e4af:	cmp    DWORD PTR [rsp+0x18],r12d
    e4b4:	jle    e760 <CheckBadFlow+0x770>
    e4ba:	mov    esi,r12d
    e4bd:	mov    rdi,rbp
    e4c0:	call   8e00 <make>
    e4c5:	mov    edx,r14d
    e4c8:	mov    esi,r12d
    e4cb:	mov    rdi,rbp
    e4ce:	call   6f70 <check_legal>
    e4d3:	test   eax,eax
    e4d5:	je     e4a0 <CheckBadFlow+0x4b0>
    e4d7:	call   7ca0 <in_check>
    e4dc:	mov    rdi,rbx
    e4df:	mov    r13d,eax
    e4e2:	call   9b80 <gen>
    e4e7:	mov    eax,DWORD PTR [rip+0x3021b]        # 3e708 <numb_moves>
    e4ed:	mov    DWORD PTR [rsp+0xc],eax
    e4f1:	test   eax,eax
    e4f3:	jle    e580 <CheckBadFlow+0x590>
    e4f9:	xor    r15d,r15d
    e4fc:	nop    DWORD PTR [rax+0x0]
    e500:	mov    esi,r15d
    e503:	mov    rdi,rbx
    e506:	call   8e00 <make>
    e50b:	mov    esi,r15d
    e50e:	mov    rdi,rbx
    e511:	mov    edx,r13d
    e514:	call   6f70 <check_legal>
    e519:	mov    esi,r15d
    e51c:	mov    rdi,rbx
    e51f:	test   eax,eax
    e521:	je     e570 <CheckBadFlow+0x580>
    e523:	call   ae30 <unmake>
    e528:	jmp    e4a0 <CheckBadFlow+0x4b0>
    e52d:	nop    DWORD PTR [rax]
    e530:	mov    edi,0x2
    e535:	jmp    e46d <CheckBadFlow+0x47d>
    e53a:	nop    WORD PTR [rax+rax*1+0x0]
    e540:	call   ae30 <unmake>
    e545:	add    r15d,0x1
    e549:	cmp    DWORD PTR [rsp+0x18],r15d
    e54e:	jne    e430 <CheckBadFlow+0x440>
    e554:	nop    DWORD PTR [rax+0x0]
    e558:	mov    esi,r12d
    e55b:	mov    rdi,rbp
    e55e:	call   ae30 <unmake>
    e563:	mov    DWORD PTR [rsp+0x24],0x3
    e56b:	jmp    e7a8 <CheckBadFlow+0x7b8>
    e570:	call   ae30 <unmake>
    e575:	add    r15d,0x1
    e579:	cmp    DWORD PTR [rsp+0xc],r15d
    e57e:	jne    e500 <CheckBadFlow+0x510>
    e580:	mov    esi,r12d
    e583:	mov    rdi,rbp
    e586:	call   ae30 <unmake>
    e58b:	mov    DWORD PTR [rsp+0xc],0x3
    e593:	jmp    e768 <CheckBadFlow+0x778>
    e598:	nop    DWORD PTR [rax+rax*1+0x0]
    e5a0:	sub    DWORD PTR [rip+0x16025],0x1        # 245cc <knightmated.4459>
    e5a7:	jmp    e068 <CheckBadFlow+0x78>
    e5ac:	nop    DWORD PTR [rax+0x0]
    e5b0:	xor    r14d,r14d
    e5b3:	xor    ebx,ebx
    e5b5:	jmp    e228 <CheckBadFlow+0x238>
    e5ba:	nop    WORD PTR [rax+rax*1+0x0]
    e5c0:	lea    rdi,[rip+0x101ed]        # 1e7b4 <sbishop+0x994>
    e5c7:	call   12d0 <puts@plt>
    e5cc:	mov    r13d,DWORD PTR [rsp+0x20]
    e5d1:	test   r13d,r13d
    e5d4:	je     e2ec <CheckBadFlow+0x2fc>
    e5da:	lea    rdi,[rip+0x101e6]        # 1e7c7 <sbishop+0x9a7>
    e5e1:	call   12d0 <puts@plt>
    e5e6:	jmp    e2ec <CheckBadFlow+0x2fc>
    e5eb:	nop    DWORD PTR [rax+rax*1+0x0]
    e5f0:	lea    rdi,[rip+0x101aa]        # 1e7a1 <sbishop+0x981>
    e5f7:	call   12d0 <puts@plt>
    e5fc:	jmp    e2d6 <CheckBadFlow+0x2e6>
    e601:	nop    DWORD PTR [rax+0x0]
    e608:	lea    rdi,[rip+0x1017f]        # 1e78e <sbishop+0x96e>
    e60f:	call   12d0 <puts@plt>
    e614:	jmp    e2cd <CheckBadFlow+0x2dd>
    e619:	nop    DWORD PTR [rax+0x0]
    e620:	lea    rdi,[rip+0x10154]        # 1e77b <sbishop+0x95b>
    e627:	call   12d0 <puts@plt>
    e62c:	jmp    e2c4 <CheckBadFlow+0x2d4>
    e631:	nop    DWORD PTR [rax+0x0]
    e638:	call   4110 <DropaddHolding>
    e63d:	lea    rbp,[rsp+0x30]
    e642:	mov    rdi,rbp
    e645:	call   9b80 <gen>
    e64a:	mov    eax,DWORD PTR [rip+0x300b8]        # 3e708 <numb_moves>
    e650:	mov    DWORD PTR [rsp+0x10],eax
    e654:	test   eax,eax
    e656:	jle    e740 <CheckBadFlow+0x750>
    e65c:	mov    DWORD PTR [rsp+0x2c],r15d
    e661:	xor    r12d,r12d
    e664:	lea    rbx,[rsp+0x3030]
    e66c:	jmp    e68a <CheckBadFlow+0x69a>
    e66e:	xchg   ax,ax
    e670:	mov    esi,r12d
    e673:	mov    rdi,rbp
    e676:	add    r12d,0x1
    e67a:	call   ae30 <unmake>
    e67f:	cmp    DWORD PTR [rsp+0x10],r12d
    e684:	jle    e7e0 <CheckBadFlow+0x7f0>
    e68a:	mov    esi,r12d
    e68d:	mov    rdi,rbp
    e690:	call   8e00 <make>
    e695:	mov    edx,r14d
    e698:	mov    esi,r12d
    e69b:	mov    rdi,rbp
    e69e:	call   6f70 <check_legal>
    e6a3:	test   eax,eax
    e6a5:	je     e670 <CheckBadFlow+0x680>
    e6a7:	call   7ca0 <in_check>
    e6ac:	mov    rdi,rbx
    e6af:	mov    r13d,eax
    e6b2:	call   9b80 <gen>
    e6b7:	mov    eax,DWORD PTR [rip+0x3004b]        # 3e708 <numb_moves>
    e6bd:	test   eax,eax
    e6bf:	jle    ebb0 <CheckBadFlow+0xbc0>
    e6c5:	xor    r15d,r15d
    e6c8:	mov    DWORD PTR [rsp+0x28],r12d
    e6cd:	mov    r12d,r15d
    e6d0:	mov    r15,rbp
    e6d3:	mov    ebp,eax
    e6d5:	nop    DWORD PTR [rax]
    e6d8:	mov    esi,r12d
    e6db:	mov    rdi,rbx
    e6de:	call   8e00 <make>
    e6e3:	mov    edx,r13d
    e6e6:	mov    esi,r12d
    e6e9:	mov    rdi,rbx
    e6ec:	call   6f70 <check_legal>
    e6f1:	test   eax,eax
    e6f3:	je     e710 <CheckBadFlow+0x720>
    e6f5:	mov    rbp,r15
    e6f8:	mov    r15d,r12d
    e6fb:	mov    rdi,rbx
    e6fe:	mov    r12d,DWORD PTR [rsp+0x28]
    e703:	mov    esi,r15d
    e706:	call   ae30 <unmake>
    e70b:	jmp    e670 <CheckBadFlow+0x680>
    e710:	mov    esi,r12d
    e713:	mov    rdi,rbx
    e716:	add    r12d,0x1
    e71a:	call   ae30 <unmake>
    e71f:	cmp    ebp,r12d
    e722:	jne    e6d8 <CheckBadFlow+0x6e8>
    e724:	mov    r12d,DWORD PTR [rsp+0x28]
    e729:	mov    rdi,r15
    e72c:	mov    r15d,0x3
    e732:	mov    esi,r12d
    e735:	call   ae30 <unmake>
    e73a:	nop    WORD PTR [rax+rax*1+0x0]
    e740:	mov    r14d,DWORD PTR [rip+0x26edd9]        # 27d520 <white_to_move>
    e747:	xor    esi,esi
    e749:	test   r14d,r14d
    e74c:	sete   sil
    e750:	lea    edi,[rsi+0x9]
    e753:	call   4190 <DropremoveHolding>
    e758:	jmp    e200 <CheckBadFlow+0x210>
    e75d:	nop    DWORD PTR [rax]
    e760:	mov    DWORD PTR [rsp+0xc],0x0
    e768:	mov    edi,DWORD PTR [rip+0x26edb2]        # 27d520 <white_to_move>
    e76e:	xor    esi,esi
    e770:	test   edi,edi
    e772:	sete   sil
    e776:	lea    edi,[rsi+0x1]
    e779:	call   4190 <DropremoveHolding>
    e77e:	mov    edx,DWORD PTR [rip+0x26ed9c]        # 27d520 <white_to_move>
    e784:	xor    esi,esi
    e786:	test   edx,edx
    e788:	sete   al
    e78b:	sete   sil
    e78f:	movzx  eax,al
    e792:	jne    e0e2 <CheckBadFlow+0xf2>
    e798:	jmp    e17a <CheckBadFlow+0x18a>
    e79d:	nop    DWORD PTR [rax]
    e7a0:	mov    DWORD PTR [rsp+0x24],0x0
    e7a8:	mov    eax,DWORD PTR [rip+0x26ed72]        # 27d520 <white_to_move>
    e7ae:	xor    esi,esi
    e7b0:	test   eax,eax
    e7b2:	sete   sil
    e7b6:	lea    edi,[rsi+0x3]
    e7b9:	call   4190 <DropremoveHolding>
    e7be:	mov    eax,DWORD PTR [rip+0x26ed5c]        # 27d520 <white_to_move>
    e7c4:	xor    esi,esi
    e7c6:	test   eax,eax
    e7c8:	sete   sil
    e7cc:	movsxd rax,esi
    e7cf:	jne    e107 <CheckBadFlow+0x117>
    e7d5:	jmp    e19a <CheckBadFlow+0x1aa>
    e7da:	nop    WORD PTR [rax+rax*1+0x0]
    e7e0:	mov    r15d,DWORD PTR [rsp+0x2c]
    e7e5:	jmp    e740 <CheckBadFlow+0x750>
    e7ea:	nop    WORD PTR [rax+rax*1+0x0]
    e7f0:	xor    ebx,ebx
    e7f2:	mov    r14d,0x1
    e7f8:	jmp    e228 <CheckBadFlow+0x238>
    e7fd:	nop    DWORD PTR [rax]
    e800:	mov    DWORD PTR [rsp+0x20],0x1
    e808:	and    ebx,0x1
    e80b:	jmp    e2bb <CheckBadFlow+0x2cb>
    e810:	lea    rdi,[rip+0xffc3]        # 1e7da <sbishop+0x9ba>
    e817:	mov    DWORD PTR [rip+0x58743],0x0        # 66f64 <piecedead>
    e821:	call   12d0 <puts@plt>
    e826:	lea    rdi,[rip+0xffbd]        # 1e7ea <sbishop+0x9ca>
    e82d:	call   12d0 <puts@plt>
    e832:	mov    DWORD PTR [rip+0x288f04],0x0        # 297740 <go_fast>
    e83c:	jmp    e300 <CheckBadFlow+0x310>
    e841:	nop    DWORD PTR [rax+0x0]
    e848:	mov    edi,0xb
    e84d:	call   4110 <DropaddHolding>
    e852:	lea    rbp,[rsp+0x30]
    e857:	mov    rdi,rbp
    e85a:	call   9b80 <gen>
    e85f:	mov    eax,DWORD PTR [rip+0x2fea3]        # 3e708 <numb_moves>
    e865:	mov    DWORD PTR [rsp+0x1c],eax
    e869:	test   eax,eax
    e86b:	jle    e938 <CheckBadFlow+0x948>
    e871:	xor    r12d,r12d
    e874:	lea    rbx,[rsp+0x3030]
    e87c:	jmp    e89a <CheckBadFlow+0x8aa>
    e87e:	xchg   ax,ax
    e880:	mov    esi,r12d
    e883:	mov    rdi,rbp
    e886:	add    r12d,0x1
    e88a:	call   ae30 <unmake>
    e88f:	cmp    DWORD PTR [rsp+0x1c],r12d
    e894:	jle    e938 <CheckBadFlow+0x948>
    e89a:	mov    esi,r12d
    e89d:	mov    rdi,rbp
    e8a0:	call   8e00 <make>
    e8a5:	mov    edx,r14d
    e8a8:	mov    esi,r12d
    e8ab:	mov    rdi,rbp
    e8ae:	call   6f70 <check_legal>
    e8b3:	test   eax,eax
    e8b5:	je     e880 <CheckBadFlow+0x890>
    e8b7:	call   7ca0 <in_check>
    e8bc:	mov    rdi,rbx
    e8bf:	mov    r13d,eax
    e8c2:	call   9b80 <gen>
    e8c7:	mov    eax,DWORD PTR [rip+0x2fe3b]        # 3e708 <numb_moves>
    e8cd:	mov    DWORD PTR [rsp+0x18],eax
    e8d1:	test   eax,eax
    e8d3:	jle    e920 <CheckBadFlow+0x930>
    e8d5:	xor    r15d,r15d
    e8d8:	nop    DWORD PTR [rax+rax*1+0x0]
    e8e0:	mov    esi,r15d
    e8e3:	mov    rdi,rbx
    e8e6:	call   8e00 <make>
    e8eb:	mov    esi,r15d
    e8ee:	mov    rdi,rbx
    e8f1:	mov    edx,r13d
    e8f4:	call   6f70 <check_legal>
    e8f9:	mov    esi,r15d
    e8fc:	mov    rdi,rbx
    e8ff:	test   eax,eax
    e901:	je     e910 <CheckBadFlow+0x920>
    e903:	call   ae30 <unmake>
    e908:	jmp    e880 <CheckBadFlow+0x890>
    e90d:	nop    DWORD PTR [rax]
    e910:	call   ae30 <unmake>
    e915:	add    r15d,0x1
    e919:	cmp    DWORD PTR [rsp+0x18],r15d
    e91e:	jne    e8e0 <CheckBadFlow+0x8f0>
    e920:	mov    esi,r12d
    e923:	mov    rdi,rbp
    e926:	call   ae30 <unmake>
    e92b:	mov    DWORD PTR [rsp+0x18],0x3
    e933:	jmp    e940 <CheckBadFlow+0x950>
    e935:	nop    DWORD PTR [rax]
    e938:	mov    DWORD PTR [rsp+0x18],0x0
    e940:	mov    eax,DWORD PTR [rip+0x26ebda]        # 27d520 <white_to_move>
    e946:	xor    esi,esi
    e948:	test   eax,eax
    e94a:	sete   sil
    e94e:	lea    edi,[rsi+0xb]
    e951:	call   4190 <DropremoveHolding>
    e956:	mov    eax,DWORD PTR [rip+0x26ebc4]        # 27d520 <white_to_move>
    e95c:	xor    esi,esi
    e95e:	test   eax,eax
    e960:	sete   sil
    e964:	movsxd rax,esi
    e967:	jne    e129 <CheckBadFlow+0x139>
    e96d:	jmp    e1ba <CheckBadFlow+0x1ca>
    e972:	nop    WORD PTR [rax+rax*1+0x0]
    e978:	mov    edi,0x8
    e97d:	call   4110 <DropaddHolding>
    e982:	lea    rbp,[rsp+0x30]
    e987:	mov    rdi,rbp
    e98a:	call   9b80 <gen>
    e98f:	mov    eax,DWORD PTR [rip+0x2fd73]        # 3e708 <numb_moves>
    e995:	mov    DWORD PTR [rsp+0x1c],eax
    e999:	test   eax,eax
    e99b:	jle    ea80 <CheckBadFlow+0xa90>
    e9a1:	xor    r12d,r12d
    e9a4:	lea    rbx,[rsp+0x3030]
    e9ac:	jmp    e9ca <CheckBadFlow+0x9da>
    e9ae:	xchg   ax,ax
    e9b0:	mov    esi,r12d
    e9b3:	mov    rdi,rbp
    e9b6:	add    r12d,0x1
    e9ba:	call   ae30 <unmake>
    e9bf:	cmp    DWORD PTR [rsp+0x1c],r12d
    e9c4:	jle    ea80 <CheckBadFlow+0xa90>
    e9ca:	mov    esi,r12d
    e9cd:	mov    rdi,rbp
    e9d0:	call   8e00 <make>
    e9d5:	mov    edx,r14d
    e9d8:	mov    esi,r12d
    e9db:	mov    rdi,rbp
    e9de:	call   6f70 <check_legal>
    e9e3:	test   eax,eax
    e9e5:	je     e9b0 <CheckBadFlow+0x9c0>
    e9e7:	call   7ca0 <in_check>
    e9ec:	mov    rdi,rbx
    e9ef:	mov    r13d,eax
    e9f2:	call   9b80 <gen>
    e9f7:	mov    eax,DWORD PTR [rip+0x2fd0b]        # 3e708 <numb_moves>
    e9fd:	test   eax,eax
    e9ff:	jle    eb90 <CheckBadFlow+0xba0>
    ea05:	xor    r15d,r15d
    ea08:	mov    DWORD PTR [rsp+0x28],r12d
    ea0d:	mov    r12d,r15d
    ea10:	mov    r15,rbp
    ea13:	mov    ebp,eax
    ea15:	nop    DWORD PTR [rax]
    ea18:	mov    esi,r12d
    ea1b:	mov    rdi,rbx
    ea1e:	call   8e00 <make>
    ea23:	mov    edx,r13d
    ea26:	mov    esi,r12d
    ea29:	mov    rdi,rbx
    ea2c:	call   6f70 <check_legal>
    ea31:	test   eax,eax
    ea33:	je     ea50 <CheckBadFlow+0xa60>
    ea35:	mov    rbp,r15
    ea38:	mov    r15d,r12d
    ea3b:	mov    rdi,rbx
    ea3e:	mov    r12d,DWORD PTR [rsp+0x28]
    ea43:	mov    esi,r15d
    ea46:	call   ae30 <unmake>
    ea4b:	jmp    e9b0 <CheckBadFlow+0x9c0>
    ea50:	mov    esi,r12d
    ea53:	mov    rdi,rbx
    ea56:	add    r12d,0x1
    ea5a:	call   ae30 <unmake>
    ea5f:	cmp    ebp,r12d
    ea62:	jne    ea18 <CheckBadFlow+0xa28>
    ea64:	mov    r12d,DWORD PTR [rsp+0x28]
    ea69:	mov    rdi,r15
    ea6c:	mov    esi,r12d
    ea6f:	call   ae30 <unmake>
    ea74:	mov    DWORD PTR [rsp+0x1c],0x3
    ea7c:	jmp    ea88 <CheckBadFlow+0xa98>
    ea7e:	xchg   ax,ax
    ea80:	mov    DWORD PTR [rsp+0x1c],0x0
    ea88:	mov    r15d,DWORD PTR [rip+0x26ea91]        # 27d520 <white_to_move>
    ea8f:	xor    esi,esi
    ea91:	test   r15d,r15d
    ea94:	sete   sil
    ea98:	lea    edi,[rsi+0x7]
    ea9b:	call   4190 <DropremoveHolding>
    eaa0:	mov    eax,DWORD PTR [rip+0x26ea7a]        # 27d520 <white_to_move>
    eaa6:	xor    esi,esi
    eaa8:	test   eax,eax
    eaaa:	sete   sil
    eaae:	jne    eae0 <CheckBadFlow+0xaf0>
    eab0:	mov    edi,0xa
    eab5:	movsxd rax,esi
    eab8:	jmp    e1e1 <CheckBadFlow+0x1f1>
    eabd:	nop    DWORD PTR [rax]
    eac0:	mov    edi,0xc
    eac5:	jmp    e84d <CheckBadFlow+0x85d>
    eaca:	nop    WORD PTR [rax+rax*1+0x0]
    ead0:	mov    edi,0x7
    ead5:	jmp    e97d <CheckBadFlow+0x98d>
    eada:	nop    WORD PTR [rax+rax*1+0x0]
    eae0:	mov    edi,0x9
    eae5:	movsxd rax,esi
    eae8:	jmp    e1e1 <CheckBadFlow+0x1f1>
    eaed:	nop    DWORD PTR [rax]
    eaf0:	lea    rdi,[rip+0xf9d1]        # 1e4c8 <sbishop+0x6a8>
    eaf7:	mov    ebx,0x1
    eafc:	call   12d0 <puts@plt>
    eb01:	jmp    e228 <CheckBadFlow+0x238>
    eb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eb10:	lea    rdi,[rip+0xfa51]        # 1e568 <sbishop+0x748>
    eb17:	mov    ebx,0x1
    eb1c:	call   12d0 <puts@plt>
    eb21:	jmp    e2bb <CheckBadFlow+0x2cb>
    eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eb30:	lea    rdi,[rip+0xfa09]        # 1e540 <sbishop+0x720>
    eb37:	mov    ebx,0x1
    eb3c:	call   12d0 <puts@plt>
    eb41:	jmp    e29a <CheckBadFlow+0x2aa>
    eb46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eb50:	lea    rdi,[rip+0xf9c1]        # 1e518 <sbishop+0x6f8>
    eb57:	mov    ebx,0x1
    eb5c:	call   12d0 <puts@plt>
    eb61:	jmp    e276 <CheckBadFlow+0x286>
    eb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eb70:	lea    rdi,[rip+0xf979]        # 1e4f0 <sbishop+0x6d0>
    eb77:	mov    ebx,0x1
    eb7c:	call   12d0 <puts@plt>
    eb81:	jmp    e24f <CheckBadFlow+0x25f>
    eb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eb90:	mov    esi,r12d
    eb93:	mov    rdi,rbp
    eb96:	call   ae30 <unmake>
    eb9b:	mov    DWORD PTR [rsp+0x1c],0x3
    eba3:	jmp    ea88 <CheckBadFlow+0xa98>
    eba8:	nop    DWORD PTR [rax+rax*1+0x0]
    ebb0:	mov    esi,r12d
    ebb3:	mov    rdi,rbp
    ebb6:	mov    r15d,0x3
    ebbc:	call   ae30 <unmake>
    ebc1:	jmp    e740 <CheckBadFlow+0x750>
    ebc6:	call   1310 <__stack_chk_fail@plt>
    ebcb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ebd0 <std_pn_eval.part.0>:
    ebd0:	push   r13
    ebd2:	push   r12
    ebd4:	push   rbp
    ebd5:	push   rbx
    ebd6:	sub    rsp,0x1000
    ebdd:	or     QWORD PTR [rsp],0x0
    ebe2:	sub    rsp,0x1000
    ebe9:	or     QWORD PTR [rsp],0x0
    ebee:	sub    rsp,0x1000
    ebf5:	or     QWORD PTR [rsp],0x0
    ebfa:	sub    rsp,0x18
    ebfe:	mov    rax,QWORD PTR fs:0x28
    ec07:	mov    QWORD PTR [rsp+0x3008],rax
    ec0f:	xor    eax,eax
    ec11:	mov    r12,rsp
    ec14:	mov    r13,rdi
    ec17:	mov    rdi,r12
    ec1a:	call   9b80 <gen>
    ec1f:	mov    ebx,DWORD PTR [rip+0x2fae3]        # 3e708 <numb_moves>
    ec25:	test   ebx,ebx
    ec27:	jle    ec70 <std_pn_eval.part.0+0xa0>
    ec29:	xor    ebp,ebp
    ec2b:	jmp    ec3c <std_pn_eval.part.0+0x6c>
    ec2d:	nop    DWORD PTR [rax]
    ec30:	call   ae30 <unmake>
    ec35:	add    ebp,0x1
    ec38:	cmp    ebx,ebp
    ec3a:	je     ec70 <std_pn_eval.part.0+0xa0>
    ec3c:	mov    esi,ebp
    ec3e:	mov    rdi,r12
    ec41:	call   8e00 <make>
    ec46:	mov    esi,ebp
    ec48:	mov    rdi,r12
    ec4b:	mov    edx,0x1
    ec50:	call   6f70 <check_legal>
    ec55:	mov    esi,ebp
    ec57:	mov    rdi,r12
    ec5a:	test   eax,eax
    ec5c:	je     ec30 <std_pn_eval.part.0+0x60>
    ec5e:	call   ae30 <unmake>
    ec63:	mov    BYTE PTR [r13+0x0],0x2
    ec68:	jmp    ec88 <std_pn_eval.part.0+0xb8>
    ec6a:	nop    WORD PTR [rax+rax*1+0x0]
    ec70:	mov    edx,DWORD PTR [rip+0x26e8aa]        # 27d520 <white_to_move>
    ec76:	xor    eax,eax
    ec78:	test   edx,edx
    ec7a:	sete   al
    ec7d:	cmp    eax,DWORD PTR [rip+0x5aa2d]        # 696b0 <root_to_move>
    ec83:	setne  BYTE PTR [r13+0x0]
    ec88:	mov    rax,QWORD PTR [rsp+0x3008]
    ec90:	xor    rax,QWORD PTR fs:0x28
    ec99:	jne    eca9 <std_pn_eval.part.0+0xd9>
    ec9b:	add    rsp,0x3018
    eca2:	pop    rbx
    eca3:	pop    rbp
    eca4:	pop    r12
    eca6:	pop    r13
    eca8:	ret    
    eca9:	call   1310 <__stack_chk_fail@plt>
    ecae:	xchg   ax,ax

000000000000ecb0 <Xmalloc>:
    ecb0:	endbr64 
    ecb4:	movsxd rax,DWORD PTR [rip+0x15919]        # 245d4 <bufftop>
    ecbb:	add    edi,eax
    ecbd:	add    rax,QWORD PTR [rip+0x582f4]        # 66fb8 <membuff>
    ecc4:	mov    DWORD PTR [rip+0x1590a],edi        # 245d4 <bufftop>
    ecca:	ret    
    eccb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ecd0 <Xfree>:
    ecd0:	endbr64 
    ecd4:	mov    DWORD PTR [rip+0x158f6],0x0        # 245d4 <bufftop>
    ecde:	ret    
    ecdf:	nop

000000000000ece0 <freenodes>:
    ece0:	endbr64 
    ece4:	test   rdi,rdi
    ece7:	je     ed40 <freenodes+0x60>
    ece9:	push   rbp
    ecea:	mov    rbp,rdi
    eced:	push   rbx
    ecee:	sub    rsp,0x8
    ecf2:	mov    rdi,QWORD PTR [rdi+0x10]
    ecf6:	test   rdi,rdi
    ecf9:	je     ed29 <freenodes+0x49>
    ecfb:	cmp    BYTE PTR [rbp+0x1],0x0
    ecff:	je     ed29 <freenodes+0x49>
    ed01:	xor    ebx,ebx
    ed03:	mov    r8,QWORD PTR [rdi+rbx*8]
    ed07:	test   r8,r8
    ed0a:	je     ed18 <freenodes+0x38>
    ed0c:	mov    rdi,r8
    ed0f:	call   ece0 <freenodes>
    ed14:	mov    rdi,QWORD PTR [rbp+0x10]
    ed18:	movzx  eax,BYTE PTR [rbp+0x1]
    ed1c:	add    rbx,0x1
    ed20:	cmp    eax,ebx
    ed22:	jg     ed03 <freenodes+0x23>
    ed24:	call   1290 <free@plt>
    ed29:	add    rsp,0x8
    ed2d:	mov    rdi,rbp
    ed30:	pop    rbx
    ed31:	pop    rbp
    ed32:	jmp    1290 <free@plt>
    ed37:	nop    WORD PTR [rax+rax*1+0x0]
    ed40:	ret    
    ed41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    ed4c:	nop    DWORD PTR [rax+0x0]

000000000000ed50 <std_pn_eval>:
    ed50:	endbr64 
    ed54:	push   rbp
    ed55:	mov    rbp,rdi
    ed58:	mov    BYTE PTR [rdi+0x3],0x1
    ed5c:	mov    edx,DWORD PTR [rip+0x26e7be]        # 27d520 <white_to_move>
    ed62:	test   edx,edx
    ed64:	jne    ed88 <std_pn_eval+0x38>
    ed66:	mov    edi,DWORD PTR [rip+0x26e7b8]        # 27d524 <bking_loc>
    ed6c:	mov    esi,0x1
    ed71:	call   3530 <is_attacked>
    ed76:	test   eax,eax
    ed78:	je     eda3 <std_pn_eval+0x53>
    ed7a:	mov    rdi,rbp
    ed7d:	pop    rbp
    ed7e:	jmp    ebd0 <std_pn_eval.part.0>
    ed83:	nop    DWORD PTR [rax+rax*1+0x0]
    ed88:	mov    edi,DWORD PTR [rip+0x26f24e]        # 27dfdc <wking_loc>
    ed8e:	xor    esi,esi
    ed90:	call   3530 <is_attacked>
    ed95:	test   eax,eax
    ed97:	jne    ed7a <std_pn_eval+0x2a>
    ed99:	mov    eax,DWORD PTR [rip+0x26e781]        # 27d520 <white_to_move>
    ed9f:	test   eax,eax
    eda1:	je     ed66 <std_pn_eval+0x16>
    eda3:	mov    BYTE PTR [rbp+0x0],0x2
    eda7:	pop    rbp
    eda8:	ret    
    eda9:	nop    DWORD PTR [rax+0x0]

000000000000edb0 <suicide_pn_eval>:
    edb0:	endbr64 
    edb4:	mov    BYTE PTR [rdi+0x3],0x1
    edb8:	mov    r9d,DWORD PTR [rip+0x5cae5]        # 6b8a4 <piece_count>
    edbf:	test   r9d,r9d
    edc2:	jle    ee7a <suicide_pn_eval+0xca>
    edc8:	lea    rdx,[rip+0x26ca15]        # 27b7e4 <pieces+0x4>
    edcf:	xor    r11d,r11d
    edd2:	xor    r10d,r10d
    edd5:	mov    ecx,0x1
    edda:	lea    r8,[rip+0x26eadf]        # 27d8c0 <board>
    ede1:	lea    rsi,[rip+0xfa38]        # 1e820 <sbishop+0xa00>
    ede8:	movsxd rax,DWORD PTR [rdx]
    edeb:	test   eax,eax
    eded:	je     ee68 <suicide_pn_eval+0xb8>
    edef:	push   rbx
    edf0:	add    ecx,0x1
    edf3:	cmp    DWORD PTR [r8+rax*4],0xc
    edf8:	ja     ee90 <suicide_pn_eval+0xe0>
    edfe:	mov    eax,DWORD PTR [r8+rax*4]
    ee02:	movsxd rax,DWORD PTR [rsi+rax*4]
    ee06:	add    rax,rsi
    ee09:	notrack jmp rax
    ee0c:	nop    DWORD PTR [rax+0x0]
    ee10:	add    r11d,0x1
    ee14:	test   r10d,r10d
    ee17:	setne  al
    ee1a:	test   al,al
    ee1c:	jne    ee5e <suicide_pn_eval+0xae>
    ee1e:	add    rdx,0x4
    ee22:	cmp    ecx,r9d
    ee25:	jg     ee37 <suicide_pn_eval+0x87>
    ee27:	movsxd rax,DWORD PTR [rdx]
    ee2a:	test   eax,eax
    ee2c:	jne    edf0 <suicide_pn_eval+0x40>
    ee2e:	add    rdx,0x4
    ee32:	cmp    ecx,r9d
    ee35:	jle    ee27 <suicide_pn_eval+0x77>
    ee37:	test   r10d,r10d
    ee3a:	jne    eea8 <suicide_pn_eval+0xf8>
    ee3c:	mov    esi,DWORD PTR [rip+0x5a86e]        # 696b0 <root_to_move>
    ee42:	test   esi,esi
    ee44:	jne    eeb7 <suicide_pn_eval+0x107>
    ee46:	mov    BYTE PTR [rdi],0x1
    ee49:	pop    rbx
    ee4a:	ret    
    ee4b:	nop    DWORD PTR [rax+rax*1+0x0]
    ee50:	add    r10d,0x1
    ee54:	test   r11d,r11d
    ee57:	setne  al
    ee5a:	test   al,al
    ee5c:	je     ee1e <suicide_pn_eval+0x6e>
    ee5e:	mov    BYTE PTR [rdi],0x2
    ee61:	pop    rbx
    ee62:	ret    
    ee63:	nop    DWORD PTR [rax+rax*1+0x0]
    ee68:	add    rdx,0x4
    ee6c:	cmp    ecx,r9d
    ee6f:	jle    ede8 <suicide_pn_eval+0x38>
    ee75:	test   r10d,r10d
    ee78:	jne    eebc <suicide_pn_eval+0x10c>
    ee7a:	mov    edx,DWORD PTR [rip+0x5a830]        # 696b0 <root_to_move>
    ee80:	test   edx,edx
    ee82:	jne    eecb <suicide_pn_eval+0x11b>
    ee84:	mov    BYTE PTR [rdi],0x1
    ee87:	ret    
    ee88:	nop    DWORD PTR [rax+rax*1+0x0]
    ee90:	test   r11d,r11d
    ee93:	setne  al
    ee96:	test   r10d,r10d
    ee99:	setne  bl
    ee9c:	and    eax,ebx
    ee9e:	jmp    ee1a <suicide_pn_eval+0x6a>
    eea3:	nop    DWORD PTR [rax+rax*1+0x0]
    eea8:	test   r11d,r11d
    eeab:	jne    ee5e <suicide_pn_eval+0xae>
    eead:	mov    ecx,DWORD PTR [rip+0x5a7fd]        # 696b0 <root_to_move>
    eeb3:	test   ecx,ecx
    eeb5:	jne    ee46 <suicide_pn_eval+0x96>
    eeb7:	mov    BYTE PTR [rdi],0x0
    eeba:	pop    rbx
    eebb:	ret    
    eebc:	test   r11d,r11d
    eebf:	jne    eecf <suicide_pn_eval+0x11f>
    eec1:	mov    eax,DWORD PTR [rip+0x5a7e9]        # 696b0 <root_to_move>
    eec7:	test   eax,eax
    eec9:	jne    ee84 <suicide_pn_eval+0xd4>
    eecb:	mov    BYTE PTR [rdi],0x0
    eece:	ret    
    eecf:	mov    BYTE PTR [rdi],0x2
    eed2:	ret    
    eed3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    eede:	xchg   ax,ax

000000000000eee0 <losers_pn_eval>:
    eee0:	endbr64 
    eee4:	push   r13
    eee6:	push   r12
    eee8:	push   rbp
    eee9:	push   rbx
    eeea:	sub    rsp,0x1000
    eef1:	or     QWORD PTR [rsp],0x0
    eef6:	sub    rsp,0x1000
    eefd:	or     QWORD PTR [rsp],0x0
    ef02:	sub    rsp,0x1000
    ef09:	or     QWORD PTR [rsp],0x0
    ef0e:	sub    rsp,0x18
    ef12:	mov    rax,QWORD PTR fs:0x28
    ef1b:	mov    QWORD PTR [rsp+0x3008],rax
    ef23:	xor    eax,eax
    ef25:	mov    BYTE PTR [rdi+0x3],0x1
    ef29:	mov    r8d,DWORD PTR [rip+0x5c974]        # 6b8a4 <piece_count>
    ef30:	mov    rbx,rdi
    ef33:	test   r8d,r8d
    ef36:	jle    efa8 <losers_pn_eval+0xc8>
    ef38:	lea    rdx,[rip+0x26c8a5]        # 27b7e4 <pieces+0x4>
    ef3f:	xor    r10d,r10d
    ef42:	xor    r9d,r9d
    ef45:	mov    ecx,0x1
    ef4a:	lea    rsi,[rip+0x26e96f]        # 27d8c0 <board>
    ef51:	lea    rdi,[rip+0xf8fc]        # 1e854 <sbishop+0xa34>
    ef58:	nop    DWORD PTR [rax+rax*1+0x0]
    ef60:	movsxd rax,DWORD PTR [rdx]
    ef63:	test   eax,eax
    ef65:	je     ef96 <losers_pn_eval+0xb6>
    ef67:	add    ecx,0x1
    ef6a:	cmp    DWORD PTR [rsi+rax*4],0xc
    ef6e:	ja     f090 <losers_pn_eval+0x1b0>
    ef74:	mov    eax,DWORD PTR [rsi+rax*4]
    ef77:	movsxd rax,DWORD PTR [rdi+rax*4]
    ef7b:	add    rax,rdi
    ef7e:	notrack jmp rax
    ef81:	nop    DWORD PTR [rax+0x0]
    ef88:	add    r10d,0x1
    ef8c:	test   r9d,r9d
    ef8f:	setne  al
    ef92:	test   al,al
    ef94:	jne    efee <losers_pn_eval+0x10e>
    ef96:	add    rdx,0x4
    ef9a:	cmp    ecx,r8d
    ef9d:	jle    ef60 <losers_pn_eval+0x80>
    ef9f:	test   r9d,r9d
    efa2:	jne    f0a8 <losers_pn_eval+0x1c8>
    efa8:	mov    r8d,DWORD PTR [rip+0x5a701]        # 696b0 <root_to_move>
    efaf:	test   r8d,r8d
    efb2:	je     f0bf <losers_pn_eval+0x1df>
    efb8:	mov    BYTE PTR [rbx],0x0
    efbb:	mov    rax,QWORD PTR [rsp+0x3008]
    efc3:	xor    rax,QWORD PTR fs:0x28
    efcc:	jne    f172 <losers_pn_eval+0x292>
    efd2:	add    rsp,0x3018
    efd9:	pop    rbx
    efda:	pop    rbp
    efdb:	pop    r12
    efdd:	pop    r13
    efdf:	ret    
    efe0:	add    r9d,0x1
    efe4:	test   r10d,r10d
    efe7:	setne  al
    efea:	test   al,al
    efec:	je     ef96 <losers_pn_eval+0xb6>
    efee:	mov    esi,DWORD PTR [rip+0x26e52c]        # 27d520 <white_to_move>
    eff4:	test   esi,esi
    eff6:	jne    f0d0 <losers_pn_eval+0x1f0>
    effc:	mov    edi,DWORD PTR [rip+0x26e522]        # 27d524 <bking_loc>
    f002:	mov    esi,0x1
    f007:	call   3530 <is_attacked>
    f00c:	test   eax,eax
    f00e:	je     f080 <losers_pn_eval+0x1a0>
    f010:	mov    DWORD PTR [rip+0x26c7aa],0x1        # 27b7c4 <captures>
    f01a:	mov    r12,rsp
    f01d:	xor    ebp,ebp
    f01f:	mov    rdi,r12
    f022:	call   9b80 <gen>
    f027:	mov    r13d,DWORD PTR [rip+0x2f6da]        # 3e708 <numb_moves>
    f02e:	mov    DWORD PTR [rip+0x26c78c],0x0        # 27b7c4 <captures>
    f038:	test   r13d,r13d
    f03b:	jg     f059 <losers_pn_eval+0x179>
    f03d:	jmp    f0fb <losers_pn_eval+0x21b>
    f042:	nop    WORD PTR [rax+rax*1+0x0]
    f048:	call   ae30 <unmake>
    f04d:	add    ebp,0x1
    f050:	cmp    r13d,ebp
    f053:	je     f0fb <losers_pn_eval+0x21b>
    f059:	mov    esi,ebp
    f05b:	mov    rdi,r12
    f05e:	call   8e00 <make>
    f063:	mov    esi,ebp
    f065:	mov    rdi,r12
    f068:	mov    edx,0x1
    f06d:	call   6f70 <check_legal>
    f072:	mov    esi,ebp
    f074:	mov    rdi,r12
    f077:	test   eax,eax
    f079:	je     f048 <losers_pn_eval+0x168>
    f07b:	call   ae30 <unmake>
    f080:	mov    BYTE PTR [rbx],0x2
    f083:	jmp    efbb <losers_pn_eval+0xdb>
    f088:	nop    DWORD PTR [rax+rax*1+0x0]
    f090:	test   r10d,r10d
    f093:	setne  al
    f096:	test   r9d,r9d
    f099:	setne  r11b
    f09d:	and    eax,r11d
    f0a0:	jmp    ef92 <losers_pn_eval+0xb2>
    f0a5:	nop    DWORD PTR [rax]
    f0a8:	test   r10d,r10d
    f0ab:	jne    efee <losers_pn_eval+0x10e>
    f0b1:	mov    edi,DWORD PTR [rip+0x5a5f9]        # 696b0 <root_to_move>
    f0b7:	test   edi,edi
    f0b9:	je     efb8 <losers_pn_eval+0xd8>
    f0bf:	mov    BYTE PTR [rbx],0x1
    f0c2:	jmp    efbb <losers_pn_eval+0xdb>
    f0c7:	nop    WORD PTR [rax+rax*1+0x0]
    f0d0:	mov    edi,DWORD PTR [rip+0x26ef06]        # 27dfdc <wking_loc>
    f0d6:	xor    esi,esi
    f0d8:	call   3530 <is_attacked>
    f0dd:	test   eax,eax
    f0df:	jne    f010 <losers_pn_eval+0x130>
    f0e5:	mov    ecx,DWORD PTR [rip+0x26e435]        # 27d520 <white_to_move>
    f0eb:	test   ecx,ecx
    f0ed:	je     effc <losers_pn_eval+0x11c>
    f0f3:	mov    BYTE PTR [rbx],0x2
    f0f6:	jmp    efbb <losers_pn_eval+0xdb>
    f0fb:	mov    DWORD PTR [rip+0x26c6bf],0x0        # 27b7c4 <captures>
    f105:	mov    rdi,r12
    f108:	xor    ebp,ebp
    f10a:	call   9b80 <gen>
    f10f:	mov    r13d,DWORD PTR [rip+0x2f5f2]        # 3e708 <numb_moves>
    f116:	test   r13d,r13d
    f119:	jg     f12d <losers_pn_eval+0x24d>
    f11b:	jmp    f154 <losers_pn_eval+0x274>
    f11d:	nop    DWORD PTR [rax]
    f120:	call   ae30 <unmake>
    f125:	add    ebp,0x1
    f128:	cmp    r13d,ebp
    f12b:	je     f154 <losers_pn_eval+0x274>
    f12d:	mov    esi,ebp
    f12f:	mov    rdi,r12
    f132:	call   8e00 <make>
    f137:	mov    esi,ebp
    f139:	mov    rdi,r12
    f13c:	mov    edx,0x1
    f141:	call   6f70 <check_legal>
    f146:	mov    esi,ebp
    f148:	mov    rdi,r12
    f14b:	test   eax,eax
    f14d:	je     f120 <losers_pn_eval+0x240>
    f14f:	jmp    f07b <losers_pn_eval+0x19b>
    f154:	mov    edx,DWORD PTR [rip+0x26e3c6]        # 27d520 <white_to_move>
    f15a:	xor    eax,eax
    f15c:	test   edx,edx
    f15e:	sete   al
    f161:	cmp    eax,DWORD PTR [rip+0x5a549]        # 696b0 <root_to_move>
    f167:	jne    efb8 <losers_pn_eval+0xd8>
    f16d:	jmp    f0bf <losers_pn_eval+0x1df>
    f172:	call   1310 <__stack_chk_fail@plt>
    f177:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f180 <pn_eval>:
    f180:	endbr64 
    f184:	mov    eax,DWORD PTR [rip+0x26c636]        # 27b7c0 <Variant>
    f18a:	cmp    eax,0x3
    f18d:	je     f1a8 <pn_eval+0x28>
    f18f:	cmp    eax,0x4
    f192:	je     f1a0 <pn_eval+0x20>
    f194:	jmp    ed50 <std_pn_eval>
    f199:	nop    DWORD PTR [rax+0x0]
    f1a0:	jmp    eee0 <losers_pn_eval>
    f1a5:	nop    DWORD PTR [rax]
    f1a8:	jmp    edb0 <suicide_pn_eval>
    f1ad:	nop    DWORD PTR [rax]

000000000000f1b0 <select_most_proving>:
    f1b0:	endbr64 
    f1b4:	push   r12
    f1b6:	mov    r12,rdi
    f1b9:	push   rbx
    f1ba:	sub    rsp,0x8
    f1be:	cmp    BYTE PTR [rdi+0x2],0x0
    f1c2:	je     f253 <select_most_proving+0xa3>
    f1c8:	mov    edx,DWORD PTR [rip+0x288592]        # 297760 <ply>
    f1ce:	lea    rbx,[rip+0x26bc6b]        # 27ae40 <hash_history>
    f1d5:	nop    DWORD PTR [rax]
    f1d8:	mov    edi,DWORD PTR [rip+0x26e342]        # 27d520 <white_to_move>
    f1de:	xor    ecx,ecx
    f1e0:	mov    rax,QWORD PTR [r12+0x10]
    f1e5:	test   edi,edi
    f1e7:	mov    rsi,QWORD PTR [rax]
    f1ea:	sete   cl
    f1ed:	cmp    ecx,DWORD PTR [rip+0x5a4bd]        # 696b0 <root_to_move>
    f1f3:	je     f260 <select_most_proving+0xb0>
    f1f5:	mov    ecx,DWORD PTR [r12+0x8]
    f1fa:	add    rax,0x8
    f1fe:	cmp    DWORD PTR [rsi+0x8],ecx
    f201:	je     f280 <select_most_proving+0xd0>
    f203:	nop    DWORD PTR [rax+rax*1+0x0]
    f208:	mov    r12,QWORD PTR [rax]
    f20b:	add    rax,0x8
    f20f:	cmp    DWORD PTR [r12+0x8],ecx
    f214:	jne    f208 <select_most_proving+0x58>
    f216:	add    edx,DWORD PTR [rip+0x5a484]        # 696a0 <move_number>
    f21c:	mov    eax,DWORD PTR [rip+0x288562]        # 297784 <hash>
    f222:	xor    esi,esi
    f224:	lea    rdi,[r12+0x20]
    f229:	sub    edx,0x1
    f22c:	movsxd rdx,edx
    f22f:	mov    DWORD PTR [rbx+rdx*4],eax
    f232:	call   8e00 <make>
    f237:	mov    edx,DWORD PTR [rip+0x288523]        # 297760 <ply>
    f23d:	cmp    edx,DWORD PTR [rip+0x57d85]        # 66fc8 <maxply>
    f243:	jle    f24b <select_most_proving+0x9b>
    f245:	mov    DWORD PTR [rip+0x57d7d],edx        # 66fc8 <maxply>
    f24b:	cmp    BYTE PTR [r12+0x2],0x0
    f251:	jne    f1d8 <select_most_proving+0x28>
    f253:	add    rsp,0x8
    f257:	mov    rax,r12
    f25a:	pop    rbx
    f25b:	pop    r12
    f25d:	ret    
    f25e:	xchg   ax,ax
    f260:	mov    ecx,DWORD PTR [r12+0x4]
    f265:	cmp    DWORD PTR [rsi+0x4],ecx
    f268:	je     f280 <select_most_proving+0xd0>
    f26a:	add    rax,0x8
    f26e:	xchg   ax,ax
    f270:	mov    r12,QWORD PTR [rax]
    f273:	add    rax,0x8
    f277:	cmp    DWORD PTR [r12+0x4],ecx
    f27c:	jne    f270 <select_most_proving+0xc0>
    f27e:	jmp    f216 <select_most_proving+0x66>
    f280:	mov    r12,rsi
    f283:	jmp    f216 <select_most_proving+0x66>
    f285:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000f290 <set_proof_and_disproof_numbers>:
    f290:	endbr64 
    f294:	push   r15
    f296:	push   r14
    f298:	push   r13
    f29a:	push   r12
    f29c:	push   rbp
    f29d:	push   rbx
    f29e:	sub    rsp,0x1000
    f2a5:	or     QWORD PTR [rsp],0x0
    f2aa:	sub    rsp,0x1000
    f2b1:	or     QWORD PTR [rsp],0x0
    f2b6:	sub    rsp,0x1000
    f2bd:	or     QWORD PTR [rsp],0x0
    f2c2:	sub    rsp,0x18
    f2c6:	mov    rax,QWORD PTR fs:0x28
    f2cf:	mov    QWORD PTR [rsp+0x3008],rax
    f2d7:	xor    eax,eax
    f2d9:	cmp    BYTE PTR [rdi+0x2],0x0
    f2dd:	mov    r12,rdi
    f2e0:	je     f3b0 <set_proof_and_disproof_numbers+0x120>
    f2e6:	mov    r8d,DWORD PTR [rip+0x26e233]        # 27d520 <white_to_move>
    f2ed:	xor    eax,eax
    f2ef:	movzx  ebp,BYTE PTR [rdi+0x1]
    f2f3:	test   r8d,r8d
    f2f6:	sete   al
    f2f9:	cmp    eax,DWORD PTR [rip+0x5a3b1]        # 696b0 <root_to_move>
    f2ff:	je     f410 <set_proof_and_disproof_numbers+0x180>
    f305:	test   ebp,ebp
    f307:	je     f600 <set_proof_and_disproof_numbers+0x370>
    f30d:	mov    rcx,QWORD PTR [rdi+0x10]
    f311:	lea    edx,[rbp-0x1]
    f314:	mov    ebx,0x5f5e100
    f319:	xor    ebp,ebp
    f31b:	mov    esi,0x5f5e100
    f320:	lea    rax,[rcx+0x8]
    f324:	lea    rdi,[rax+rdx*8]
    f328:	jmp    f334 <set_proof_and_disproof_numbers+0xa4>
    f32a:	nop    WORD PTR [rax+rax*1+0x0]
    f330:	add    rax,0x8
    f334:	mov    rcx,QWORD PTR [rcx]
    f337:	mov    edx,DWORD PTR [rcx+0x4]
    f33a:	mov    ecx,DWORD PTR [rcx+0x8]
    f33d:	add    edx,ebp
    f33f:	mov    ebp,esi
    f341:	cmp    edx,0x5f5e100
    f347:	cmovle ebp,edx
    f34a:	cmp    ebx,ecx
    f34c:	cmovg  ebx,ecx
    f34f:	mov    rcx,rax
    f352:	cmp    rdi,rax
    f355:	jne    f330 <set_proof_and_disproof_numbers+0xa0>
    f357:	test   edx,edx
    f359:	je     f605 <set_proof_and_disproof_numbers+0x375>
    f35f:	cmp    ebx,0x5f5e100
    f365:	je     f605 <set_proof_and_disproof_numbers+0x375>
    f36b:	test   ebx,ebx
    f36d:	je     f488 <set_proof_and_disproof_numbers+0x1f8>
    f373:	cmp    edx,0x5f5e0ff
    f379:	jg     f488 <set_proof_and_disproof_numbers+0x1f8>
    f37f:	mov    eax,DWORD PTR [rip+0x2883db]        # 297760 <ply>
    f385:	add    eax,DWORD PTR [rip+0x5a315]        # 696a0 <move_number>
    f38b:	lea    rdx,[rip+0x26baae]        # 27ae40 <hash_history>
    f392:	mov    ecx,DWORD PTR [rip+0x2883ec]        # 297784 <hash>
    f398:	sub    eax,0x1
    f39b:	cdqe   
    f39d:	mov    DWORD PTR [rdx+rax*4],ecx
    f3a0:	mov    DWORD PTR [r12+0x4],ebp
    f3a5:	mov    DWORD PTR [r12+0x8],ebx
    f3aa:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f3ac:	nop    DWORD PTR [rax+0x0]
    f3b0:	cmp    BYTE PTR [rdi+0x3],0x0
    f3b4:	jne    f3f0 <set_proof_and_disproof_numbers+0x160>
    f3b6:	movabs rax,0x100000001
    f3c0:	mov    QWORD PTR [r12+0x4],rax
    f3c5:	mov    rax,QWORD PTR [rsp+0x3008]
    f3cd:	xor    rax,QWORD PTR fs:0x28
    f3d6:	jne    f7db <set_proof_and_disproof_numbers+0x54b>
    f3dc:	add    rsp,0x3018
    f3e3:	pop    rbx
    f3e4:	pop    rbp
    f3e5:	pop    r12
    f3e7:	pop    r13
    f3e9:	pop    r14
    f3eb:	pop    r15
    f3ed:	ret    
    f3ee:	xchg   ax,ax
    f3f0:	movzx  eax,BYTE PTR [rdi]
    f3f3:	cmp    al,0x2
    f3f5:	je     f4c0 <set_proof_and_disproof_numbers+0x230>
    f3fb:	test   al,al
    f3fd:	jne    f5d8 <set_proof_and_disproof_numbers+0x348>
    f403:	mov    QWORD PTR [rdi+0x4],0x5f5e100
    f40b:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f40d:	nop    DWORD PTR [rax]
    f410:	test   ebp,ebp
    f412:	je     f64b <set_proof_and_disproof_numbers+0x3bb>
    f418:	mov    rcx,QWORD PTR [rdi+0x10]
    f41c:	lea    edx,[rbp-0x1]
    f41f:	xor    ebx,ebx
    f421:	mov    ebp,0x5f5e100
    f426:	mov    esi,0x5f5e100
    f42b:	lea    rax,[rcx+0x8]
    f42f:	lea    rdi,[rax+rdx*8]
    f433:	jmp    f43c <set_proof_and_disproof_numbers+0x1ac>
    f435:	nop    DWORD PTR [rax]
    f438:	add    rax,0x8
    f43c:	mov    rcx,QWORD PTR [rcx]
    f43f:	add    ebx,DWORD PTR [rcx+0x8]
    f442:	mov    ecx,DWORD PTR [rcx+0x4]
    f445:	cmp    ebx,0x5f5e100
    f44b:	mov    edx,ebx
    f44d:	mov    ebx,esi
    f44f:	cmovle ebx,edx
    f452:	cmp    ebp,ecx
    f454:	cmovg  ebp,ecx
    f457:	mov    rcx,rax
    f45a:	cmp    rdi,rax
    f45d:	jne    f438 <set_proof_and_disproof_numbers+0x1a8>
    f45f:	test   ebp,ebp
    f461:	je     f605 <set_proof_and_disproof_numbers+0x375>
    f467:	cmp    edx,0x5f5e0ff
    f46d:	jg     f605 <set_proof_and_disproof_numbers+0x375>
    f473:	test   edx,edx
    f475:	je     f488 <set_proof_and_disproof_numbers+0x1f8>
    f477:	cmp    ebp,0x5f5e100
    f47d:	jne    f37f <set_proof_and_disproof_numbers+0xef>
    f483:	nop    DWORD PTR [rax+rax*1+0x0]
    f488:	mov    r9d,0xc8
    f48e:	xor    r8d,r8d
    f491:	mov    ecx,0xffffffff
    f496:	mov    edx,0xfff0bdc0
    f49b:	mov    esi,0xf4240
    f4a0:	mov    edi,0xfff0bfb4
    f4a5:	add    DWORD PTR [rip+0x57afc],0x1        # 66fa8 <forwards>
    f4ac:	call   16870 <StoreTT>
    f4b1:	jmp    f37f <set_proof_and_disproof_numbers+0xef>
    f4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f4c0:	mov    eax,DWORD PTR [rip+0x28829a]        # 297760 <ply>
    f4c6:	add    eax,DWORD PTR [rip+0x5a1d4]        # 696a0 <move_number>
    f4cc:	lea    rdx,[rip+0x26b96d]        # 27ae40 <hash_history>
    f4d3:	sub    eax,0x1
    f4d6:	mov    ecx,DWORD PTR [rip+0x2882a8]        # 297784 <hash>
    f4dc:	cdqe   
    f4de:	mov    DWORD PTR [rdx+rax*4],ecx
    f4e1:	call   42a0 <is_draw>
    f4e6:	test   eax,eax
    f4e8:	jne    f5e4 <set_proof_and_disproof_numbers+0x354>
    f4ee:	cmp    DWORD PTR [rip+0x288268],0xc8        # 297760 <ply>
    f4f8:	jg     f5e4 <set_proof_and_disproof_numbers+0x354>
    f4fe:	cmp    DWORD PTR [rip+0x26c2bb],0x4        # 27b7c0 <Variant>
    f505:	je     f657 <set_proof_and_disproof_numbers+0x3c7>
    f50b:	mov    rbx,rsp
    f50e:	mov    rdi,rbx
    f511:	call   9b80 <gen>
    f516:	mov    r15d,DWORD PTR [rip+0x2f1eb]        # 3e708 <numb_moves>
    f51d:	call   7ca0 <in_check>
    f522:	cmp    DWORD PTR [rip+0x26c297],0x3        # 27b7c0 <Variant>
    f529:	mov    r14d,eax
    f52c:	je     f725 <set_proof_and_disproof_numbers+0x495>
    f532:	xor    r13d,r13d
    f535:	xor    ebp,ebp
    f537:	test   r15d,r15d
    f53a:	jle    f3b6 <set_proof_and_disproof_numbers+0x126>
    f540:	mov    esi,ebp
    f542:	mov    rdi,rbx
    f545:	call   8e00 <make>
    f54a:	mov    esi,ebp
    f54c:	mov    edx,r14d
    f54f:	mov    rdi,rbx
    f552:	call   6f70 <check_legal>
    f557:	mov    esi,ebp
    f559:	mov    rdi,rbx
    f55c:	cmp    eax,0x1
    f55f:	sbb    r13d,0xffffffff
    f563:	add    ebp,0x1
    f566:	call   ae30 <unmake>
    f56b:	cmp    r15d,ebp
    f56e:	jne    f540 <set_proof_and_disproof_numbers+0x2b0>
    f570:	test   r13d,r13d
    f573:	je     f3b6 <set_proof_and_disproof_numbers+0x126>
    f579:	mov    edi,DWORD PTR [rip+0x26dfa1]        # 27d520 <white_to_move>
    f57f:	xor    esi,esi
    f581:	mov    edx,DWORD PTR [rip+0x26c239]        # 27b7c0 <Variant>
    f587:	mov    eax,DWORD PTR [rip+0x2881d3]        # 297760 <ply>
    f58d:	test   edi,edi
    f58f:	lea    ecx,[rdx-0x3]
    f592:	sete   sil
    f596:	cmp    esi,DWORD PTR [rip+0x5a114]        # 696b0 <root_to_move>
    f59c:	je     f731 <set_proof_and_disproof_numbers+0x4a1>
    f5a2:	cmp    ecx,0x1
    f5a5:	jbe    f760 <set_proof_and_disproof_numbers+0x4d0>
    f5ab:	movsxd rdx,eax
    f5ae:	imul   rdx,rdx,0x51eb851f
    f5b5:	sar    eax,0x1f
    f5b8:	sar    rdx,0x24
    f5bc:	sub    edx,eax
    f5be:	mov    eax,edx
    f5c0:	add    r13d,edx
    f5c3:	add    eax,0x1
    f5c6:	mov    DWORD PTR [r12+0x4],r13d
    f5cb:	mov    DWORD PTR [r12+0x8],eax
    f5d0:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f5d5:	nop    DWORD PTR [rax]
    f5d8:	cmp    al,0x1
    f5da:	je     f638 <set_proof_and_disproof_numbers+0x3a8>
    f5dc:	cmp    al,0x3
    f5de:	jne    f3c5 <set_proof_and_disproof_numbers+0x135>
    f5e4:	movabs rax,0xc3500000c350
    f5ee:	mov    QWORD PTR [r12+0x4],rax
    f5f3:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f5f8:	nop    DWORD PTR [rax+rax*1+0x0]
    f600:	mov    ebx,0x5f5e100
    f605:	mov    r9d,0xc8
    f60b:	xor    r8d,r8d
    f60e:	mov    ecx,0xffffffff
    f613:	mov    edx,0xfff0bdc0
    f618:	mov    esi,0xf4240
    f61d:	mov    edi,0xf404c
    f622:	add    DWORD PTR [rip+0x5797f],0x1        # 66fa8 <forwards>
    f629:	call   16870 <StoreTT>
    f62e:	jmp    f37f <set_proof_and_disproof_numbers+0xef>
    f633:	nop    DWORD PTR [rax+rax*1+0x0]
    f638:	movabs rax,0x5f5e10000000000
    f642:	mov    QWORD PTR [rdi+0x4],rax
    f646:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f64b:	xor    ebx,ebx
    f64d:	mov    ebp,0x5f5e100
    f652:	jmp    f488 <set_proof_and_disproof_numbers+0x1f8>
    f657:	mov    rbx,rsp
    f65a:	xor    r13d,r13d
    f65d:	xor    ebp,ebp
    f65f:	mov    DWORD PTR [rip+0x26c15b],0x1        # 27b7c4 <captures>
    f669:	mov    rdi,rbx
    f66c:	call   9b80 <gen>
    f671:	mov    r15d,DWORD PTR [rip+0x2f090]        # 3e708 <numb_moves>
    f678:	mov    DWORD PTR [rip+0x26c142],0x0        # 27b7c4 <captures>
    f682:	call   7ca0 <in_check>
    f687:	mov    r14d,eax
    f68a:	test   r15d,r15d
    f68d:	jle    f6c9 <set_proof_and_disproof_numbers+0x439>
    f68f:	nop
    f690:	mov    esi,ebp
    f692:	mov    rdi,rbx
    f695:	call   8e00 <make>
    f69a:	mov    esi,ebp
    f69c:	mov    edx,r14d
    f69f:	mov    rdi,rbx
    f6a2:	call   6f70 <check_legal>
    f6a7:	mov    esi,ebp
    f6a9:	mov    rdi,rbx
    f6ac:	cmp    eax,0x1
    f6af:	sbb    r13d,0xffffffff
    f6b3:	add    ebp,0x1
    f6b6:	call   ae30 <unmake>
    f6bb:	cmp    r15d,ebp
    f6be:	jne    f690 <set_proof_and_disproof_numbers+0x400>
    f6c0:	test   r13d,r13d
    f6c3:	jne    f579 <set_proof_and_disproof_numbers+0x2e9>
    f6c9:	mov    rdi,rbx
    f6cc:	xor    r13d,r13d
    f6cf:	xor    ebp,ebp
    f6d1:	mov    DWORD PTR [rip+0x26c0e9],0x0        # 27b7c4 <captures>
    f6db:	call   9b80 <gen>
    f6e0:	mov    r15d,DWORD PTR [rip+0x2f021]        # 3e708 <numb_moves>
    f6e7:	test   r15d,r15d
    f6ea:	jle    f3b6 <set_proof_and_disproof_numbers+0x126>
    f6f0:	mov    esi,ebp
    f6f2:	mov    rdi,rbx
    f6f5:	call   8e00 <make>
    f6fa:	mov    esi,ebp
    f6fc:	mov    edx,r14d
    f6ff:	mov    rdi,rbx
    f702:	call   6f70 <check_legal>
    f707:	mov    esi,ebp
    f709:	mov    rdi,rbx
    f70c:	cmp    eax,0x1
    f70f:	sbb    r13d,0xffffffff
    f713:	add    ebp,0x1
    f716:	call   ae30 <unmake>
    f71b:	cmp    r15d,ebp
    f71e:	jne    f6f0 <set_proof_and_disproof_numbers+0x460>
    f720:	jmp    f570 <set_proof_and_disproof_numbers+0x2e0>
    f725:	mov    r13d,DWORD PTR [rip+0x2efdc]        # 3e708 <numb_moves>
    f72c:	jmp    f570 <set_proof_and_disproof_numbers+0x2e0>
    f731:	cmp    ecx,0x1
    f734:	jbe    f774 <set_proof_and_disproof_numbers+0x4e4>
    f736:	movsxd rdx,eax
    f739:	imul   rdx,rdx,0x51eb851f
    f740:	sar    eax,0x1f
    f743:	sar    rdx,0x24
    f747:	sub    edx,eax
    f749:	mov    eax,edx
    f74b:	lea    edx,[rdx+0x1]
    f74e:	add    eax,r13d
    f751:	mov    DWORD PTR [r12+0x4],edx
    f756:	mov    DWORD PTR [r12+0x8],eax
    f75b:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f760:	cmp    edx,0x4
    f763:	je     f785 <set_proof_and_disproof_numbers+0x4f5>
    f765:	movsxd rdx,eax
    f768:	imul   rdx,rdx,0x1b4e81b5
    f76f:	jmp    f5b5 <set_proof_and_disproof_numbers+0x325>
    f774:	cmp    edx,0x4
    f777:	je     f7b0 <set_proof_and_disproof_numbers+0x520>
    f779:	movsxd rdx,eax
    f77c:	imul   rdx,rdx,0x1b4e81b5
    f783:	jmp    f740 <set_proof_and_disproof_numbers+0x4b0>
    f785:	cmp    DWORD PTR [rip+0x287fbc],0x2        # 297748 <phase>
    f78c:	mov    ecx,0x1e
    f791:	je     f798 <set_proof_and_disproof_numbers+0x508>
    f793:	mov    ecx,0x50
    f798:	cdq    
    f799:	idiv   ecx
    f79b:	add    r13d,eax
    f79e:	add    eax,0x1
    f7a1:	mov    DWORD PTR [r12+0x4],r13d
    f7a6:	mov    DWORD PTR [r12+0x8],eax
    f7ab:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f7b0:	cmp    DWORD PTR [rip+0x287f91],0x2        # 297748 <phase>
    f7b7:	mov    ecx,0x1e
    f7bc:	je     f7c3 <set_proof_and_disproof_numbers+0x533>
    f7be:	mov    ecx,0x50
    f7c3:	cdq    
    f7c4:	idiv   ecx
    f7c6:	lea    edx,[rax+0x1]
    f7c9:	add    eax,r13d
    f7cc:	mov    DWORD PTR [r12+0x4],edx
    f7d1:	mov    DWORD PTR [r12+0x8],eax
    f7d6:	jmp    f3c5 <set_proof_and_disproof_numbers+0x135>
    f7db:	call   1310 <__stack_chk_fail@plt>

000000000000f7e0 <develop_node>:
    f7e0:	endbr64 
    f7e4:	push   r15
    f7e6:	push   r14
    f7e8:	push   r13
    f7ea:	push   r12
    f7ec:	push   rbp
    f7ed:	push   rbx
    f7ee:	sub    rsp,0x1000
    f7f5:	or     QWORD PTR [rsp],0x0
    f7fa:	sub    rsp,0x1000
    f801:	or     QWORD PTR [rsp],0x0
    f806:	sub    rsp,0x1000
    f80d:	or     QWORD PTR [rsp],0x0
    f812:	sub    rsp,0x28
    f816:	mov    rax,QWORD PTR fs:0x28
    f81f:	mov    QWORD PTR [rsp+0x3018],rax
    f827:	xor    eax,eax
    f829:	mov    r13,rdi
    f82c:	call   7ca0 <in_check>
    f831:	cmp    DWORD PTR [rip+0x26bf88],0x4        # 27b7c0 <Variant>
    f838:	mov    r15d,eax
    f83b:	je     f9e8 <develop_node+0x208>
    f841:	lea    rbp,[rsp+0x10]
    f846:	mov    rdi,rbp
    f849:	call   9b80 <gen>
    f84e:	mov    r12d,DWORD PTR [rip+0x2eeb3]        # 3e708 <numb_moves>
    f855:	movsxd rax,DWORD PTR [rip+0x14d78]        # 245d4 <bufftop>
    f85c:	lea    edx,[rax+r12*8]
    f860:	add    rax,QWORD PTR [rip+0x57751]        # 66fb8 <membuff>
    f867:	mov    DWORD PTR [rip+0x14d67],edx        # 245d4 <bufftop>
    f86d:	mov    QWORD PTR [r13+0x10],rax
    f871:	test   r12d,r12d
    f874:	jle    f9a0 <develop_node+0x1c0>
    f87a:	xor    ebx,ebx
    f87c:	xor    r14d,r14d
    f87f:	jmp    f904 <develop_node+0x124>
    f884:	nop    DWORD PTR [rax+0x0]
    f888:	movsxd rdi,DWORD PTR [rip+0x14d45]        # 245d4 <bufftop>
    f88f:	movsxd rdx,r14d
    f892:	add    r14d,0x1
    f896:	lea    eax,[rdi+0x38]
    f899:	add    rdi,QWORD PTR [rip+0x57718]        # 66fb8 <membuff>
    f8a0:	mov    DWORD PTR [rip+0x14d2e],eax        # 245d4 <bufftop>
    f8a6:	movabs rax,0x100000000
    f8b0:	mov    QWORD PTR [rdi],rax
    f8b3:	lea    rax,[rbx+rbx*2]
    f8b7:	mov    DWORD PTR [rdi+0x8],0x1
    f8be:	movdqu xmm0,XMMWORD PTR [rbp+rax*8+0x0]
    f8c4:	mov    QWORD PTR [rdi+0x18],r13
    f8c8:	movups XMMWORD PTR [rdi+0x20],xmm0
    f8cc:	mov    rax,QWORD PTR [rbp+rax*8+0x10]
    f8d1:	mov    QWORD PTR [rsp+0x8],rdi
    f8d6:	mov    QWORD PTR [rdi+0x30],rax
    f8da:	mov    rax,QWORD PTR [r13+0x10]
    f8de:	mov    QWORD PTR [rax+rdx*8],rdi
    f8e2:	call   f180 <pn_eval>
    f8e7:	mov    rdi,QWORD PTR [rsp+0x8]
    f8ec:	call   f290 <set_proof_and_disproof_numbers>
    f8f1:	mov    esi,ebx
    f8f3:	mov    rdi,rbp
    f8f6:	add    rbx,0x1
    f8fa:	call   ae30 <unmake>
    f8ff:	cmp    r12d,ebx
    f902:	jle    f957 <develop_node+0x177>
    f904:	mov    eax,DWORD PTR [rip+0x287e56]        # 297760 <ply>
    f90a:	add    eax,DWORD PTR [rip+0x59d90]        # 696a0 <move_number>
    f910:	mov    esi,ebx
    f912:	mov    rdi,rbp
    f915:	mov    edx,DWORD PTR [rip+0x287e69]        # 297784 <hash>
    f91b:	sub    eax,0x1
    f91e:	lea    rcx,[rip+0x26b51b]        # 27ae40 <hash_history>
    f925:	cdqe   
    f927:	mov    DWORD PTR [rcx+rax*4],edx
    f92a:	call   8e00 <make>
    f92f:	mov    edx,r15d
    f932:	mov    esi,ebx
    f934:	mov    rdi,rbp
    f937:	call   6f70 <check_legal>
    f93c:	test   eax,eax
    f93e:	jne    f888 <develop_node+0xa8>
    f944:	mov    esi,ebx
    f946:	mov    rdi,rbp
    f949:	add    rbx,0x1
    f94d:	call   ae30 <unmake>
    f952:	cmp    r12d,ebx
    f955:	jg     f904 <develop_node+0x124>
    f957:	mov    BYTE PTR [r13+0x2],0x1
    f95c:	mov    BYTE PTR [r13+0x1],r14b
    f960:	test   r14b,r14b
    f963:	je     f9a5 <develop_node+0x1c5>
    f965:	add    DWORD PTR [rip+0x57644],r12d        # 66fb0 <nodecount>
    f96c:	add    DWORD PTR [rip+0x57611],r12d        # 66f84 <frees>
    f973:	mov    rax,QWORD PTR [rsp+0x3018]
    f97b:	xor    rax,QWORD PTR fs:0x28
    f984:	jne    fa9e <develop_node+0x2be>
    f98a:	add    rsp,0x3028
    f991:	pop    rbx
    f992:	pop    rbp
    f993:	pop    r12
    f995:	pop    r13
    f997:	pop    r14
    f999:	pop    r15
    f99b:	ret    
    f99c:	nop    DWORD PTR [rax+0x0]
    f9a0:	mov    BYTE PTR [r13+0x1],0x0
    f9a5:	mov    ecx,0x100
    f9aa:	mov    WORD PTR [r13+0x2],cx
    f9af:	mov    eax,DWORD PTR [rip+0x26be0b]        # 27b7c0 <Variant>
    f9b5:	sub    eax,0x3
    f9b8:	cmp    eax,0x1
    f9bb:	jbe    f9c8 <develop_node+0x1e8>
    f9bd:	mov    BYTE PTR [r13+0x0],0x3
    f9c2:	jmp    f965 <develop_node+0x185>
    f9c4:	nop    DWORD PTR [rax+0x0]
    f9c8:	mov    edx,DWORD PTR [rip+0x26db52]        # 27d520 <white_to_move>
    f9ce:	xor    eax,eax
    f9d0:	test   edx,edx
    f9d2:	sete   al
    f9d5:	cmp    eax,DWORD PTR [rip+0x59cd5]        # 696b0 <root_to_move>
    f9db:	sete   BYTE PTR [r13+0x0]
    f9e0:	jmp    f965 <develop_node+0x185>
    f9e2:	nop    WORD PTR [rax+rax*1+0x0]
    f9e8:	mov    DWORD PTR [rip+0x26bdd2],0x1        # 27b7c4 <captures>
    f9f2:	lea    rbp,[rsp+0x10]
    f9f7:	mov    rdi,rbp
    f9fa:	call   9b80 <gen>
    f9ff:	mov    r12d,DWORD PTR [rip+0x2ed02]        # 3e708 <numb_moves>
    fa06:	mov    DWORD PTR [rip+0x26bdb4],0x0        # 27b7c4 <captures>
    fa10:	test   r12d,r12d
    fa13:	jle    fa80 <develop_node+0x2a0>
    fa15:	xor    r14d,r14d
    fa18:	jmp    fa2e <develop_node+0x24e>
    fa1a:	nop    WORD PTR [rax+rax*1+0x0]
    fa20:	call   ae30 <unmake>
    fa25:	add    r14d,0x1
    fa29:	cmp    r12d,r14d
    fa2c:	je     fa80 <develop_node+0x2a0>
    fa2e:	mov    esi,r14d
    fa31:	mov    rdi,rbp
    fa34:	call   8e00 <make>
    fa39:	mov    esi,r14d
    fa3c:	mov    rdi,rbp
    fa3f:	mov    edx,r15d
    fa42:	call   6f70 <check_legal>
    fa47:	mov    esi,r14d
    fa4a:	mov    rdi,rbp
    fa4d:	test   eax,eax
    fa4f:	je     fa20 <develop_node+0x240>
    fa51:	call   ae30 <unmake>
    fa56:	movsxd rax,DWORD PTR [rip+0x14b77]        # 245d4 <bufftop>
    fa5d:	lea    edx,[rax+r12*8]
    fa61:	add    rax,QWORD PTR [rip+0x57550]        # 66fb8 <membuff>
    fa68:	mov    DWORD PTR [rip+0x14b66],edx        # 245d4 <bufftop>
    fa6e:	mov    QWORD PTR [r13+0x10],rax
    fa72:	jmp    f87a <develop_node+0x9a>
    fa77:	nop    WORD PTR [rax+rax*1+0x0]
    fa80:	mov    DWORD PTR [rip+0x26bd3a],0x0        # 27b7c4 <captures>
    fa8a:	mov    rdi,rbp
    fa8d:	call   9b80 <gen>
    fa92:	mov    r12d,DWORD PTR [rip+0x2ec6f]        # 3e708 <numb_moves>
    fa99:	jmp    f855 <develop_node+0x75>
    fa9e:	call   1310 <__stack_chk_fail@plt>
    faa3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    faae:	xchg   ax,ax

000000000000fab0 <update_ancestors>:
    fab0:	endbr64 
    fab4:	test   rdi,rdi
    fab7:	je     fb0c <update_ancestors+0x5c>
    fab9:	push   rbx
    faba:	mov    rbx,rdi
    fabd:	jmp    facc <update_ancestors+0x1c>
    fabf:	nop
    fac0:	mov    rax,QWORD PTR [rbx+0x18]
    fac4:	test   rax,rax
    fac7:	je     faef <update_ancestors+0x3f>
    fac9:	mov    rbx,rax
    facc:	mov    rdi,rbx
    facf:	call   f290 <set_proof_and_disproof_numbers>
    fad4:	mov    edx,DWORD PTR [rbx+0x24]
    fad7:	test   edx,edx
    fad9:	je     fac0 <update_ancestors+0x10>
    fadb:	lea    rdi,[rbx+0x20]
    fadf:	xor    esi,esi
    fae1:	call   ae30 <unmake>
    fae6:	mov    rax,QWORD PTR [rbx+0x18]
    faea:	test   rax,rax
    faed:	jne    fac9 <update_ancestors+0x19>
    faef:	mov    eax,DWORD PTR [rbx+0x24]
    faf2:	test   eax,eax
    faf4:	jne    fb00 <update_ancestors+0x50>
    faf6:	pop    rbx
    faf7:	ret    
    faf8:	nop    DWORD PTR [rax+rax*1+0x0]
    fb00:	lea    rdi,[rbx+0x20]
    fb04:	xor    esi,esi
    fb06:	pop    rbx
    fb07:	jmp    8e00 <make>
    fb0c:	jmp    14c0 <update_ancestors.cold>
    fb11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    fb1c:	nop    DWORD PTR [rax+0x0]

000000000000fb20 <pn2_eval>:
    fb20:	endbr64 
    fb24:	push   r12
    fb26:	push   rbp
    fb27:	push   rbx
    fb28:	mov    r12,QWORD PTR [rdi+0x18]
    fb2c:	mov    rbx,rdi
    fb2f:	mov    QWORD PTR [rdi+0x18],0x0
    fb37:	mov    DWORD PTR [rip+0x5747f],0x0        # 66fc0 <nodecount2>
    fb41:	mov    DWORD PTR [rip+0x57479],0x1        # 66fc4 <pn2>
    fb4b:	call   f180 <pn_eval>
    fb50:	mov    rdi,rbx
    fb53:	call   f290 <set_proof_and_disproof_numbers>
    fb58:	mov    esi,DWORD PTR [rbx+0x4]
    fb5b:	test   esi,esi
    fb5d:	jne    fb98 <pn2_eval+0x78>
    fb5f:	jmp    fb9f <pn2_eval+0x7f>
    fb61:	nop    DWORD PTR [rax+0x0]
    fb68:	mov    eax,DWORD PTR [rip+0x57442]        # 66fb0 <nodecount>
    fb6e:	cmp    DWORD PTR [rip+0x5744c],eax        # 66fc0 <nodecount2>
    fb74:	jge    fb9f <pn2_eval+0x7f>
    fb76:	mov    rdi,rbx
    fb79:	call   f1b0 <select_most_proving>
    fb7e:	mov    rbp,rax
    fb81:	mov    rdi,rax
    fb84:	call   f7e0 <develop_node>
    fb89:	mov    rdi,rbp
    fb8c:	call   fab0 <update_ancestors>
    fb91:	mov    edx,DWORD PTR [rbx+0x4]
    fb94:	test   edx,edx
    fb96:	je     fb9f <pn2_eval+0x7f>
    fb98:	mov    eax,DWORD PTR [rbx+0x8]
    fb9b:	test   eax,eax
    fb9d:	jne    fb68 <pn2_eval+0x48>
    fb9f:	xor    ecx,ecx
    fba1:	mov    QWORD PTR [rbx+0x18],r12
    fba5:	mov    WORD PTR [rbx+0x1],cx
    fba9:	pop    rbx
    fbaa:	mov    DWORD PTR [rip+0x57410],0x0        # 66fc4 <pn2>
    fbb4:	pop    rbp
    fbb5:	pop    r12
    fbb7:	ret    
    fbb8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fbc0 <proofnumberscan>:
    fbc0:	endbr64 
    fbc4:	push   r15
    fbc6:	push   r14
    fbc8:	push   r13
    fbca:	push   r12
    fbcc:	push   rbp
    fbcd:	push   rbx
    fbce:	lea    r11,[rsp-0x4000]
    fbd6:	sub    rsp,0x1000
    fbdd:	or     QWORD PTR [rsp],0x0
    fbe2:	cmp    rsp,r11
    fbe5:	jne    fbd6 <proofnumberscan+0x16>
    fbe7:	sub    rsp,0x58
    fbeb:	mov    rax,QWORD PTR fs:0x28
    fbf4:	mov    QWORD PTR [rsp+0x4048],rax
    fbfc:	xor    eax,eax
    fbfe:	lea    rbp,[rsp+0x1040]
    fc06:	lea    r12,[rsp+0x840]
    fc0e:	call   18c90 <rtime>
    fc13:	movsxd rdi,DWORD PTR [rip+0x57ca2]        # 678bc <PBSize>
    fc1a:	mov    esi,0x38
    fc1f:	mov    QWORD PTR [rsp+0x8],rax
    fc24:	call   1390 <calloc@plt>
    fc29:	mov    esi,0x38
    fc2e:	mov    edi,0x1
    fc33:	mov    QWORD PTR [rip+0x5737e],rax        # 66fb8 <membuff>
    fc3a:	call   1390 <calloc@plt>
    fc3f:	mov    rdi,rbp
    fc42:	mov    r14,rax
    fc45:	call   9b80 <gen>
    fc4a:	xor    eax,eax
    fc4c:	mov    ecx,0x96
    fc51:	lea    rdi,[rip+0x573a8]        # 67000 <rootlosers>
    fc58:	rep stos QWORD PTR es:[rdi],rax
    fc5b:	mov    ecx,0x100
    fc60:	mov    rdi,r12
    fc63:	mov    r13d,DWORD PTR [rip+0x2ea9e]        # 3e708 <numb_moves>
    fc6a:	rep stos QWORD PTR es:[rdi],rax
    fc6d:	movdqu xmm2,XMMWORD PTR [rip+0x1496b]        # 245e0 <dummy>
    fc75:	mov    rax,QWORD PTR [rip+0x14974]        # 245f0 <dummy+0x10>
    fc7c:	mov    DWORD PTR [rip+0x57302],0x0        # 66f88 <alllosers>
    fc86:	mov    QWORD PTR [rip+0x57313],rax        # 66fa0 <pn_move+0x10>
    fc8d:	movups XMMWORD PTR [rip+0x572fc],xmm2        # 66f90 <pn_move>
    fc94:	call   7ca0 <in_check>
    fc99:	test   r13d,r13d
    fc9c:	jle    1003f <proofnumberscan+0x47f>
    fca2:	mov    edx,eax
    fca4:	xor    r15d,r15d
    fca7:	lea    eax,[r13-0x1]
    fcab:	mov    QWORD PTR [rsp+0x10],r14
    fcb0:	mov    DWORD PTR [rsp+0x18],r13d
    fcb5:	lea    rbx,[rsp+0x40]
    fcba:	mov    r13,r15
    fcbd:	mov    r14,rax
    fcc0:	mov    QWORD PTR [rsp+0x38],rax
    fcc5:	mov    r15d,edx
    fcc8:	mov    DWORD PTR [rsp+0x4],0x0
    fcd0:	mov    QWORD PTR [rsp+0x20],r12
    fcd5:	jmp    fce3 <proofnumberscan+0x123>
    fcd7:	nop    WORD PTR [rax+rax*1+0x0]
    fce0:	mov    r13,rax
    fce3:	mov    esi,r13d
    fce6:	mov    rdi,rbp
    fce9:	mov    r12d,r13d
    fcec:	call   8e00 <make>
    fcf1:	mov    edx,r15d
    fcf4:	mov    esi,r13d
    fcf7:	mov    rdi,rbp
    fcfa:	call   6f70 <check_legal>
    fcff:	mov    r9d,eax
    fd02:	xor    eax,eax
    fd04:	test   r9d,r9d
    fd07:	je     fd13 <proofnumberscan+0x153>
    fd09:	add    DWORD PTR [rsp+0x4],0x1
    fd0e:	mov    eax,0x1
    fd13:	mov    esi,r12d
    fd16:	mov    rdi,rbp
    fd19:	mov    DWORD PTR [rbx+r13*4],eax
    fd1d:	call   ae30 <unmake>
    fd22:	lea    rax,[r13+0x1]
    fd26:	cmp    r13,r14
    fd29:	jne    fce0 <proofnumberscan+0x120>
    fd2b:	mov    r10d,DWORD PTR [rsp+0x4]
    fd30:	mov    r14,QWORD PTR [rsp+0x10]
    fd35:	mov    r13d,DWORD PTR [rsp+0x18]
    fd3a:	mov    r12,QWORD PTR [rsp+0x20]
    fd3f:	test   r10d,r10d
    fd42:	je     1003f <proofnumberscan+0x47f>
    fd48:	mov    eax,DWORD PTR [rip+0x287a12]        # 297760 <ply>
    fd4e:	add    eax,DWORD PTR [rip+0x5994c]        # 696a0 <move_number>
    fd54:	lea    rdx,[rip+0x26b0e5]        # 27ae40 <hash_history>
    fd5b:	mov    rdi,r14
    fd5e:	mov    ecx,DWORD PTR [rip+0x287a20]        # 297784 <hash>
    fd64:	sub    eax,0x1
    fd67:	mov    r9d,DWORD PTR [rip+0x26d7b2]        # 27d520 <white_to_move>
    fd6e:	mov    DWORD PTR [rip+0x57238],0x1        # 66fb0 <nodecount>
    fd78:	mov    DWORD PTR [rip+0x5724a],0x0        # 66fcc <iters>
    fd82:	cdqe   
    fd84:	mov    DWORD PTR [rdx+rax*4],ecx
    fd87:	xor    eax,eax
    fd89:	test   r9d,r9d
    fd8c:	mov    DWORD PTR [rip+0x57232],0x0        # 66fc8 <maxply>
    fd96:	sete   al
    fd99:	mov    DWORD PTR [rip+0x57205],0x0        # 66fa8 <forwards>
    fda3:	mov    DWORD PTR [rip+0x59907],eax        # 696b0 <root_to_move>
    fda9:	call   f180 <pn_eval>
    fdae:	cmp    BYTE PTR [r14],0x1
    fdb2:	jbe    1030f <proofnumberscan+0x74f>
    fdb8:	mov    rdi,r14
    fdbb:	xor    r15d,r15d
    fdbe:	call   f290 <set_proof_and_disproof_numbers>
    fdc3:	mov    DWORD PTR [rsp+0x30],0x0
    fdcb:	xor    eax,eax
    fdcd:	mov    DWORD PTR [rsp+0x34],0x0
    fdd5:	mov    QWORD PTR [rsp+0x28],rbp
    fdda:	mov    ebp,eax
    fddc:	nop    DWORD PTR [rax+0x0]
    fde0:	call   18c90 <rtime>
    fde5:	mov    rsi,QWORD PTR [rsp+0x8]
    fdea:	mov    rdi,rax
    fded:	call   186f0 <rdifftime>
    fdf2:	cmp    eax,DWORD PTR [rip+0x571b4]        # 66fac <pn_time>
    fdf8:	jge    ff98 <proofnumberscan+0x3d8>
    fdfe:	call   19230 <interrupt>
    fe03:	mov    edx,eax
    fe05:	test   eax,eax
    fe07:	jne    ff98 <proofnumberscan+0x3d8>
    fe0d:	mov    eax,DWORD PTR [rip+0x57aa9]        # 678bc <PBSize>
    fe13:	mov    esi,DWORD PTR [rip+0x147bb]        # 245d4 <bufftop>
    fe19:	sub    eax,0x2710
    fe1e:	cdqe   
    fe20:	lea    rcx,[rax*8+0x0]
    fe28:	sub    rcx,rax
    fe2b:	mov    rax,rcx
    fe2e:	shl    rax,0x3
    fe32:	cmp    rsi,rax
    fe35:	jae    ff98 <proofnumberscan+0x3d8>
    fe3b:	mov    eax,DWORD PTR [r14+0x4]
    fe3f:	test   eax,eax
    fe41:	je     ff98 <proofnumberscan+0x3d8>
    fe47:	mov    eax,DWORD PTR [r14+0x8]
    fe4b:	test   eax,eax
    fe4d:	je     ff98 <proofnumberscan+0x3d8>
    fe53:	movsxd rax,DWORD PTR [rip+0x57156]        # 66fb0 <nodecount>
    fe5a:	add    DWORD PTR [rip+0x5716b],0x1        # 66fcc <iters>
    fe61:	mov    rcx,rax
    fe64:	imul   rax,rax,0x51eb851f
    fe6b:	mov    esi,ecx
    fe6d:	sar    esi,0x1f
    fe70:	sar    rax,0x25
    fe74:	sub    eax,esi
    fe76:	mov    esi,ecx
    fe78:	imul   eax,eax,0x64
    fe7b:	sub    esi,eax
    fe7d:	cmp    esi,0x41
    fe80:	jle    10088 <proofnumberscan+0x4c8>
    fe86:	add    DWORD PTR [rsp+0x30],0x1
    fe8b:	xor    eax,eax
    fe8d:	mov    r10d,0x5f5e100
    fe93:	jmp    febf <proofnumberscan+0x2ff>
    fe95:	nop    DWORD PTR [rax]
    fe98:	test   edi,edi
    fe9a:	je     feb6 <proofnumberscan+0x2f6>
    fe9c:	lea    rdi,[rip+0x5715d]        # 67000 <rootlosers>
    fea3:	mov    edi,DWORD PTR [rdi+rax*4]
    fea6:	test   edi,edi
    fea8:	cmove  r15d,eax
    feac:	cmove  ebp,edx
    feaf:	cmove  r10d,esi
    feb3:	add    edx,0x1
    feb6:	add    rax,0x1
    feba:	cmp    r13d,eax
    febd:	jle    fed8 <proofnumberscan+0x318>
    febf:	mov    esi,DWORD PTR [r12+rax*4]
    fec3:	mov    edi,DWORD PTR [rbx+rax*4]
    fec6:	cmp    esi,r10d
    fec9:	jl     fe98 <proofnumberscan+0x2d8>
    fecb:	test   edi,edi
    fecd:	jne    feb3 <proofnumberscan+0x2f3>
    fecf:	add    rax,0x1
    fed3:	cmp    r13d,eax
    fed6:	jg     febf <proofnumberscan+0x2ff>
    fed8:	cmp    r10d,0x5f5e100
    fedf:	je     10160 <proofnumberscan+0x5a0>
    fee5:	mov    rdi,QWORD PTR [rsp+0x28]
    feea:	mov    esi,r15d
    feed:	mov    DWORD PTR [rsp+0x20],ecx
    fef1:	call   8e00 <make>
    fef6:	mov    rax,QWORD PTR [r14+0x10]
    fefa:	movsxd rdx,ebp
    fefd:	mov    QWORD PTR [rsp+0x18],rdx
    ff02:	mov    rdi,QWORD PTR [rax+rdx*8]
    ff06:	call   f1b0 <select_most_proving>
    ff0b:	mov    rdi,rax
    ff0e:	mov    QWORD PTR [rsp+0x10],rax
    ff13:	call   f7e0 <develop_node>
    ff18:	mov    rdi,QWORD PTR [rsp+0x10]
    ff1d:	call   fab0 <update_ancestors>
    ff22:	mov    ecx,DWORD PTR [rsp+0x20]
    ff26:	mov    eax,DWORD PTR [rip+0x57084]        # 66fb0 <nodecount>
    ff2c:	movsxd rsi,r15d
    ff2f:	mov    rdx,QWORD PTR [rsp+0x18]
    ff34:	sub    eax,ecx
    ff36:	add    DWORD PTR [rsp+rsi*4+0x840],eax
    ff3d:	mov    rax,QWORD PTR [r14+0x10]
    ff41:	mov    rax,QWORD PTR [rax+rdx*8]
    ff45:	mov    ecx,DWORD PTR [rax+0x4]
    ff48:	test   ecx,ecx
    ff4a:	jne    10170 <proofnumberscan+0x5b0>
    ff50:	cmp    DWORD PTR [rax+0x8],0x5f5e100
    ff57:	jne    fde0 <proofnumberscan+0x220>
    ff5d:	mov    DWORD PTR [rip+0x57019],0x1        # 66f80 <forcedwin>
    ff67:	mov    ecx,DWORD PTR [rip+0x57063]        # 66fd0 <kibitzed>
    ff6d:	test   ecx,ecx
    ff6f:	je     103a4 <proofnumberscan+0x7e4>
    ff75:	movdqu xmm4,XMMWORD PTR [rax+0x20]
    ff7a:	movups XMMWORD PTR [rip+0x5700f],xmm4        # 66f90 <pn_move>
    ff81:	mov    rax,QWORD PTR [rax+0x30]
    ff85:	mov    QWORD PTR [rip+0x57014],rax        # 66fa0 <pn_move+0x10>
    ff8c:	jmp    fde0 <proofnumberscan+0x220>
    ff91:	nop    DWORD PTR [rax+0x0]
    ff98:	cmp    BYTE PTR [r14+0x2],0x0
    ff9d:	jne    101d6 <proofnumberscan+0x616>
    ffa3:	xor    ebp,ebp
    ffa5:	lea    r15,[rsp+0x4040]
    ffad:	movdqu xmm3,XMMWORD PTR [rip+0x56fdb]        # 66f90 <pn_move>
    ffb5:	mov    rax,QWORD PTR [rip+0x56fe4]        # 66fa0 <pn_move+0x10>
    ffbc:	sub    rsp,0x20
    ffc0:	mov    rdi,r15
    ffc3:	mov    QWORD PTR [rsp+0x10],rax
    ffc8:	movups XMMWORD PTR [rsp],xmm3
    ffcc:	call   170f0 <comp_to_san>
    ffd1:	mov    r11d,DWORD PTR [rip+0x2877a0]        # 297778 <xb_mode>
    ffd8:	add    rsp,0x20
    ffdc:	test   r11d,r11d
    ffdf:	je     10020 <proofnumberscan+0x460>
    ffe1:	mov    r10d,DWORD PTR [rip+0x26db20]        # 27db08 <post>
    ffe8:	test   r10d,r10d
    ffeb:	je     10020 <proofnumberscan+0x460>
    ffed:	mov    eax,DWORD PTR [rsp+0x30]
    fff1:	mov    ecx,DWORD PTR [r14+0x8]
    fff5:	mov    r8d,ebp
    fff8:	mov    edi,0x1
    fffd:	mov    edx,DWORD PTR [r14+0x4]
   10001:	mov    r9d,DWORD PTR [rip+0x56fc0]        # 66fc8 <maxply>
   10008:	lea    rsi,[rip+0xe961]        # 1e970 <sbishop+0xb50>
   1000f:	push   rax
   10010:	mov    eax,DWORD PTR [rsp+0x3c]
   10014:	push   rax
   10015:	xor    eax,eax
   10017:	call   1420 <__printf_chk@plt>
   1001c:	pop    r8
   1001e:	pop    r9
   10020:	mov    eax,DWORD PTR [rsp+0x4]
   10024:	sub    eax,0x1
   10027:	cmp    eax,ebp
   10029:	je     103d1 <proofnumberscan+0x811>
   1002f:	cmp    DWORD PTR [rsp+0x4],ebp
   10033:	jne    1003f <proofnumberscan+0x47f>
   10035:	mov    DWORD PTR [rip+0x56f49],0x1        # 66f88 <alllosers>
   1003f:	mov    rdi,QWORD PTR [rip+0x56f72]        # 66fb8 <membuff>
   10046:	mov    DWORD PTR [rip+0x14584],0x0        # 245d4 <bufftop>
   10050:	call   1290 <free@plt>
   10055:	mov    rax,QWORD PTR [rsp+0x4048]
   1005d:	xor    rax,QWORD PTR fs:0x28
   10066:	jne    1044e <proofnumberscan+0x88e>
   1006c:	add    rsp,0x4058
   10073:	mov    rdi,r14
   10076:	pop    rbx
   10077:	pop    rbp
   10078:	pop    r12
   1007a:	pop    r13
   1007c:	pop    r14
   1007e:	pop    r15
   10080:	jmp    1290 <free@plt>
   10085:	nop    DWORD PTR [rax]
   10088:	mov    rdi,r14
   1008b:	mov    DWORD PTR [rsp+0x20],ecx
   1008f:	mov    DWORD PTR [rsp+0x18],edx
   10093:	add    DWORD PTR [rsp+0x34],0x1
   10098:	call   f1b0 <select_most_proving>
   1009d:	mov    rdi,rax
   100a0:	mov    QWORD PTR [rsp+0x10],rax
   100a5:	call   f7e0 <develop_node>
   100aa:	mov    rdi,QWORD PTR [rsp+0x10]
   100af:	call   fab0 <update_ancestors>
   100b4:	mov    r11,QWORD PTR [r14+0x10]
   100b8:	mov    edi,DWORD PTR [r14+0x4]
   100bc:	movsxd rdx,DWORD PTR [rsp+0x18]
   100c1:	mov    ecx,DWORD PTR [rsp+0x20]
   100c5:	mov    rax,QWORD PTR [r11]
   100c8:	cmp    edi,DWORD PTR [rax+0x4]
   100cb:	je     1039c <proofnumberscan+0x7dc>
   100d1:	mov    eax,0x1
   100d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   100e0:	mov    rsi,QWORD PTR [r11+rax*8]
   100e4:	movsxd rdx,eax
   100e7:	lea    r10,[rax*8+0x0]
   100ef:	add    rax,0x1
   100f3:	cmp    DWORD PTR [rsi+0x4],edi
   100f6:	jne    100e0 <proofnumberscan+0x520>
   100f8:	mov    eax,DWORD PTR [rip+0x56eb2]        # 66fb0 <nodecount>
   100fe:	sub    eax,ecx
   10100:	add    DWORD PTR [rsp+rdx*4+0x840],eax
   10107:	mov    eax,DWORD PTR [r14+0x8]
   1010b:	test   edi,edi
   1010d:	jne    101a0 <proofnumberscan+0x5e0>
   10113:	cmp    eax,0x5f5e100
   10118:	jne    fde0 <proofnumberscan+0x220>
   1011e:	mov    r8d,DWORD PTR [rip+0x56eab]        # 66fd0 <kibitzed>
   10125:	mov    DWORD PTR [rip+0x56e51],0x1        # 66f80 <forcedwin>
   1012f:	test   r8d,r8d
   10132:	je     10373 <proofnumberscan+0x7b3>
   10138:	mov    rax,QWORD PTR [r11+r10*1]
   1013c:	movdqu xmm7,XMMWORD PTR [rax+0x20]
   10141:	movups XMMWORD PTR [rip+0x56e48],xmm7        # 66f90 <pn_move>
   10148:	mov    rax,QWORD PTR [rax+0x30]
   1014c:	mov    QWORD PTR [rip+0x56e4d],rax        # 66fa0 <pn_move+0x10>
   10153:	jmp    fde0 <proofnumberscan+0x220>
   10158:	nop    DWORD PTR [rax+rax*1+0x0]
   10160:	add    ecx,0x1e
   10163:	mov    DWORD PTR [rip+0x56e47],ecx        # 66fb0 <nodecount>
   10169:	jmp    fde0 <proofnumberscan+0x220>
   1016e:	xchg   ax,ax
   10170:	mov    eax,DWORD PTR [rax+0x8]
   10173:	test   eax,eax
   10175:	jne    fde0 <proofnumberscan+0x220>
   1017b:	cmp    ecx,0x5f5e100
   10181:	jne    fde0 <proofnumberscan+0x220>
   10187:	lea    rax,[rip+0x56e72]        # 67000 <rootlosers>
   1018e:	mov    DWORD PTR [rax+rsi*4],0x1
   10195:	jmp    fde0 <proofnumberscan+0x220>
   1019a:	nop    WORD PTR [rax+rax*1+0x0]
   101a0:	cmp    edi,0x5f5e100
   101a6:	jne    fde0 <proofnumberscan+0x220>
   101ac:	test   eax,eax
   101ae:	jne    fde0 <proofnumberscan+0x220>
   101b4:	movdqu xmm1,XMMWORD PTR [rip+0x14424]        # 245e0 <dummy>
   101bc:	mov    rax,QWORD PTR [rip+0x1442d]        # 245f0 <dummy+0x10>
   101c3:	movups XMMWORD PTR [rip+0x56dc6],xmm1        # 66f90 <pn_move>
   101ca:	mov    QWORD PTR [rip+0x56dcf],rax        # 66fa0 <pn_move+0x10>
   101d1:	jmp    fde0 <proofnumberscan+0x220>
   101d6:	movss  xmm7,DWORD PTR [rip+0xe8f2]        # 1ead0 <sbishop+0xcb0>
   101de:	xor    ebp,ebp
   101e0:	xor    r13d,r13d
   101e3:	xor    r12d,r12d
   101e6:	lea    r15,[rsp+0x4040]
   101ee:	mov    DWORD PTR [rsp+0x10],ebp
   101f2:	movss  DWORD PTR [rsp+0x8],xmm7
   101f8:	mov    rbp,r15
   101fb:	mov    r15,r14
   101fe:	mov    r14d,r13d
   10201:	mov    r13,QWORD PTR [rsp+0x38]
   10206:	jmp    10221 <proofnumberscan+0x661>
   10208:	nop    DWORD PTR [rax+rax*1+0x0]
   10210:	lea    rax,[r12+0x1]
   10215:	cmp    r12,r13
   10218:	je     102cc <proofnumberscan+0x70c>
   1021e:	mov    r12,rax
   10221:	mov    eax,DWORD PTR [rbx+r12*4]
   10225:	test   eax,eax
   10227:	je     10210 <proofnumberscan+0x650>
   10229:	movsxd rax,r12d
   1022c:	sub    rsp,0x8
   10230:	mov    rdi,rbp
   10233:	lea    rax,[rax+rax*2]
   10237:	shl    rax,0x3
   1023b:	push   QWORD PTR [rsp+rax*1+0x1058]
   10242:	push   QWORD PTR [rsp+rax*1+0x1058]
   10249:	push   QWORD PTR [rsp+rax*1+0x1058]
   10250:	call   170f0 <comp_to_san>
   10255:	mov    rdx,QWORD PTR [r15+0x10]
   10259:	movsxd rax,r14d
   1025c:	add    rsp,0x20
   10260:	mov    rax,QWORD PTR [rdx+rax*8]
   10264:	mov    edx,DWORD PTR [rax+0x4]
   10267:	test   edx,edx
   10269:	je     102e0 <proofnumberscan+0x720>
   1026b:	mov    esi,DWORD PTR [rax+0x8]
   1026e:	pxor   xmm0,xmm0
   10272:	pxor   xmm1,xmm1
   10276:	cvtsi2ss xmm1,edx
   1027a:	cvtsi2ss xmm0,esi
   1027e:	divss  xmm0,xmm1
   10282:	comiss xmm0,DWORD PTR [rsp+0x8]
   10287:	jbe    102a6 <proofnumberscan+0x6e6>
   10289:	movdqu xmm5,XMMWORD PTR [rax+0x20]
   1028e:	mov    rax,QWORD PTR [rax+0x30]
   10292:	movss  DWORD PTR [rsp+0x8],xmm0
   10298:	mov    QWORD PTR [rip+0x56d01],rax        # 66fa0 <pn_move+0x10>
   1029f:	movups XMMWORD PTR [rip+0x56cea],xmm5        # 66f90 <pn_move>
   102a6:	test   esi,esi
   102a8:	jne    102ba <proofnumberscan+0x6fa>
   102aa:	cmp    edx,0x5f5e100
   102b0:	sete   al
   102b3:	cmp    al,0x1
   102b5:	sbb    DWORD PTR [rsp+0x10],0xffffffff
   102ba:	add    r14d,0x1
   102be:	lea    rax,[r12+0x1]
   102c3:	cmp    r12,r13
   102c6:	jne    1021e <proofnumberscan+0x65e>
   102cc:	mov    r14,r15
   102cf:	mov    r15,rbp
   102d2:	mov    ebp,DWORD PTR [rsp+0x10]
   102d6:	jmp    ffad <proofnumberscan+0x3ed>
   102db:	nop    DWORD PTR [rax+rax*1+0x0]
   102e0:	movdqu xmm6,XMMWORD PTR [rax+0x20]
   102e5:	mov    rax,QWORD PTR [rax+0x30]
   102e9:	mov    DWORD PTR [rsp+0x8],0x4cbebc20
   102f1:	add    r14d,0x1
   102f5:	mov    DWORD PTR [rip+0x56c81],0x1        # 66f80 <forcedwin>
   102ff:	mov    QWORD PTR [rip+0x56c9a],rax        # 66fa0 <pn_move+0x10>
   10306:	movups XMMWORD PTR [rip+0x56c83],xmm6        # 66f90 <pn_move>
   1030d:	jmp    102be <proofnumberscan+0x6fe>
   1030f:	mov    rdi,QWORD PTR [rip+0x56ca2]        # 66fb8 <membuff>
   10316:	mov    DWORD PTR [rip+0x142b4],0x0        # 245d4 <bufftop>
   10320:	call   1290 <free@plt>
   10325:	mov    rdi,r14
   10328:	call   1290 <free@plt>
   1032d:	mov    rax,QWORD PTR [rip+0x142bc]        # 245f0 <dummy+0x10>
   10334:	movdqu xmm4,XMMWORD PTR [rip+0x142a4]        # 245e0 <dummy>
   1033c:	mov    QWORD PTR [rip+0x56c5d],rax        # 66fa0 <pn_move+0x10>
   10343:	movups XMMWORD PTR [rip+0x56c46],xmm4        # 66f90 <pn_move>
   1034a:	mov    rax,QWORD PTR [rsp+0x4048]
   10352:	xor    rax,QWORD PTR fs:0x28
   1035b:	jne    1044e <proofnumberscan+0x88e>
   10361:	add    rsp,0x4058
   10368:	pop    rbx
   10369:	pop    rbp
   1036a:	pop    r12
   1036c:	pop    r13
   1036e:	pop    r14
   10370:	pop    r15
   10372:	ret    
   10373:	lea    rdi,[rip+0xe50e]        # 1e888 <sbishop+0xa68>
   1037a:	mov    QWORD PTR [rsp+0x10],r10
   1037f:	mov    DWORD PTR [rip+0x56c47],0x1        # 66fd0 <kibitzed>
   10389:	call   12d0 <puts@plt>
   1038e:	mov    r11,QWORD PTR [r14+0x10]
   10392:	mov    r10,QWORD PTR [rsp+0x10]
   10397:	jmp    10138 <proofnumberscan+0x578>
   1039c:	xor    r10d,r10d
   1039f:	jmp    100f8 <proofnumberscan+0x538>
   103a4:	lea    rdi,[rip+0xe59d]        # 1e948 <sbishop+0xb28>
   103ab:	mov    QWORD PTR [rsp+0x10],rdx
   103b0:	mov    DWORD PTR [rip+0x56c16],0x1        # 66fd0 <kibitzed>
   103ba:	call   12d0 <puts@plt>
   103bf:	mov    rax,QWORD PTR [r14+0x10]
   103c3:	mov    rdx,QWORD PTR [rsp+0x10]
   103c8:	mov    rax,QWORD PTR [rax+rdx*8]
   103cc:	jmp    ff75 <proofnumberscan+0x3b5>
   103d1:	lea    rdi,[rip+0xe4cb]        # 1e8a3 <sbishop+0xa83>
   103d8:	call   12d0 <puts@plt>
   103dd:	mov    rcx,QWORD PTR [rsp+0x38]
   103e2:	xor    eax,eax
   103e4:	jmp    10400 <proofnumberscan+0x840>
   103e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   103f0:	lea    rdx,[rax+0x1]
   103f4:	cmp    rax,rcx
   103f7:	je     1002f <proofnumberscan+0x46f>
   103fd:	mov    rax,rdx
   10400:	lea    rsi,[rip+0x56bf9]        # 67000 <rootlosers>
   10407:	movsxd rdx,eax
   1040a:	mov    edi,DWORD PTR [rsi+rax*4]
   1040d:	test   edi,edi
   1040f:	jne    103f0 <proofnumberscan+0x830>
   10411:	mov    esi,DWORD PTR [rbx+rax*4]
   10414:	test   esi,esi
   10416:	je     103f0 <proofnumberscan+0x830>
   10418:	mov    DWORD PTR [rip+0x56b5e],0x1        # 66f80 <forcedwin>
   10422:	lea    rax,[rdx+rdx*2]
   10426:	shl    rax,0x3
   1042a:	movdqu xmm6,XMMWORD PTR [rsp+rax*1+0x1040]
   10433:	mov    rax,QWORD PTR [rsp+rax*1+0x1050]
   1043b:	movups XMMWORD PTR [rip+0x56b4e],xmm6        # 66f90 <pn_move>
   10442:	mov    QWORD PTR [rip+0x56b57],rax        # 66fa0 <pn_move+0x10>
   10449:	jmp    1002f <proofnumberscan+0x46f>
   1044e:	call   1310 <__stack_chk_fail@plt>
   10453:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1045e:	xchg   ax,ax

0000000000010460 <proofnumbersearch>:
   10460:	endbr64 
   10464:	push   r15
   10466:	push   r14
   10468:	push   r13
   1046a:	push   r12
   1046c:	push   rbp
   1046d:	push   rbx
   1046e:	lea    r11,[rsp-0x4000]
   10476:	sub    rsp,0x1000
   1047d:	or     QWORD PTR [rsp],0x0
   10482:	cmp    rsp,r11
   10485:	jne    10476 <proofnumbersearch+0x16>
   10487:	sub    rsp,0x18
   1048b:	movsxd rdx,DWORD PTR [rip+0x5920e]        # 696a0 <move_number>
   10492:	mov    ecx,DWORD PTR [rip+0x2872ec]        # 297784 <hash>
   10498:	mov    esi,DWORD PTR [rip+0x26d082]        # 27d520 <white_to_move>
   1049e:	mov    rax,QWORD PTR fs:0x28
   104a7:	mov    QWORD PTR [rsp+0x4008],rax
   104af:	xor    eax,eax
   104b1:	lea    rax,[rip+0x26a988]        # 27ae40 <hash_history>
   104b8:	mov    DWORD PTR [rip+0x56aee],0x1        # 66fb0 <nodecount>
   104c2:	mov    DWORD PTR [rax+rdx*4],ecx
   104c5:	xor    eax,eax
   104c7:	test   esi,esi
   104c9:	mov    DWORD PTR [rip+0x56af9],0x0        # 66fcc <iters>
   104d3:	sete   al
   104d6:	mov    DWORD PTR [rip+0x56aa4],0x0        # 66f84 <frees>
   104e0:	mov    DWORD PTR [rip+0x287276],0x1        # 297760 <ply>
   104ea:	mov    DWORD PTR [rip+0x56ad4],0x0        # 66fc8 <maxply>
   104f4:	mov    DWORD PTR [rip+0x56aaa],0x0        # 66fa8 <forwards>
   104fe:	mov    DWORD PTR [rip+0x591ac],eax        # 696b0 <root_to_move>
   10504:	call   18c90 <rtime>
   10509:	mov    esi,0x38
   1050e:	mov    edi,0x1
   10513:	mov    r12,rax
   10516:	call   1390 <calloc@plt>
   1051b:	movsxd rdi,DWORD PTR [rip+0x5739a]        # 678bc <PBSize>
   10522:	mov    esi,0x38
   10527:	mov    rbp,rax
   1052a:	call   1390 <calloc@plt>
   1052f:	mov    rdi,rbp
   10532:	mov    QWORD PTR [rip+0x56a7f],rax        # 66fb8 <membuff>
   10539:	call   f180 <pn_eval>
   1053e:	cmp    BYTE PTR [rbp+0x0],0x0
   10542:	je     10790 <proofnumbersearch+0x330>
   10548:	mov    rdi,rbp
   1054b:	call   f290 <set_proof_and_disproof_numbers>
   10550:	jmp    105b8 <proofnumbersearch+0x158>
   10552:	nop    WORD PTR [rax+rax*1+0x0]
   10558:	test   ecx,ecx
   1055a:	je     105c4 <proofnumbersearch+0x164>
   1055c:	mov    eax,DWORD PTR [rip+0x5735a]        # 678bc <PBSize>
   10562:	mov    esi,DWORD PTR [rip+0x1406c]        # 245d4 <bufftop>
   10568:	sub    eax,0x2710
   1056d:	cdqe   
   1056f:	lea    rdx,[rax*8+0x0]
   10577:	sub    rdx,rax
   1057a:	mov    rax,rdx
   1057d:	shl    rax,0x3
   10581:	cmp    rsi,rax
   10584:	jae    105c4 <proofnumbersearch+0x164>
   10586:	mov    rdi,rbp
   10589:	call   f1b0 <select_most_proving>
   1058e:	mov    r13,rax
   10591:	mov    rdi,rax
   10594:	call   f7e0 <develop_node>
   10599:	mov    rdi,r13
   1059c:	call   fab0 <update_ancestors>
   105a1:	mov    eax,DWORD PTR [rip+0x56a25]        # 66fcc <iters>
   105a7:	add    eax,0x1
   105aa:	mov    DWORD PTR [rip+0x56a1c],eax        # 66fcc <iters>
   105b0:	test   al,0x1f
   105b2:	je     10a68 <proofnumbersearch+0x608>
   105b8:	mov    r10d,DWORD PTR [rbp+0x4]
   105bc:	mov    ecx,DWORD PTR [rbp+0x8]
   105bf:	test   r10d,r10d
   105c2:	jne    10558 <proofnumbersearch+0xf8>
   105c4:	movsxd rdx,DWORD PTR [rip+0x569e5]        # 66fb0 <nodecount>
   105cb:	lea    rax,[rdx*8+0x0]
   105d3:	mov    r8,rdx
   105d6:	sub    rax,rdx
   105d9:	shl    rax,0x3
   105dd:	js     10778 <proofnumbersearch+0x318>
   105e3:	pxor   xmm0,xmm0
   105e7:	cvtsi2ss xmm0,rax
   105ec:	mov    eax,DWORD PTR [rip+0x569d6]        # 66fc8 <maxply>
   105f2:	mulss  xmm0,DWORD PTR [rip+0xe4da]        # 1ead4 <sbishop+0xcb4>
   105fa:	mov    edx,r10d
   105fd:	lea    rsi,[rip+0xe3cc]        # 1e9d0 <sbishop+0xbb0>
   10604:	mov    r9d,DWORD PTR [rip+0x56979]        # 66f84 <frees>
   1060b:	mov    edi,0x1
   10610:	push   rax
   10611:	mov    eax,DWORD PTR [rip+0x569b5]        # 66fcc <iters>
   10617:	push   rax
   10618:	mov    eax,0x1
   1061d:	cvtss2sd xmm0,xmm0
   10621:	call   1420 <__printf_chk@plt>
   10626:	mov    ecx,DWORD PTR [rip+0x28714c]        # 297778 <xb_mode>
   1062c:	pop    rax
   1062d:	pop    rdx
   1062e:	test   ecx,ecx
   10630:	je     10818 <proofnumbersearch+0x3b8>
   10636:	mov    eax,DWORD PTR [rip+0x26d4cc]        # 27db08 <post>
   1063c:	mov    edx,DWORD PTR [rbp+0x4]
   1063f:	test   eax,eax
   10641:	jne    107d0 <proofnumbersearch+0x370>
   10647:	test   edx,edx
   10649:	je     1085d <proofnumbersearch+0x3fd>
   1064f:	nop
   10650:	mov    ecx,DWORD PTR [rbp+0x8]
   10653:	test   ecx,ecx
   10655:	jne    10a30 <proofnumbersearch+0x5d0>
   1065b:	lea    rdi,[rip+0xe2ae]        # 1e910 <sbishop+0xaf0>
   10662:	mov    BYTE PTR [rbp+0x0],0x0
   10666:	call   12d0 <puts@plt>
   1066b:	mov    rax,QWORD PTR [rip+0x13f7e]        # 245f0 <dummy+0x10>
   10672:	movdqu xmm7,XMMWORD PTR [rip+0x13f66]        # 245e0 <dummy>
   1067a:	mov    QWORD PTR [rip+0x5691f],rax        # 66fa0 <pn_move+0x10>
   10681:	movups XMMWORD PTR [rip+0x56908],xmm7        # 66f90 <pn_move>
   10688:	movzx  eax,BYTE PTR [rbp+0x1]
   1068c:	test   al,al
   1068e:	je     1070e <proofnumbersearch+0x2ae>
   10690:	mov    rdx,QWORD PTR [rbp+0x10]
   10694:	sub    eax,0x1
   10697:	movss  xmm2,DWORD PTR [rip+0xe431]        # 1ead0 <sbishop+0xcb0>
   1069f:	lea    rsi,[rdx+rax*8+0x8]
   106a4:	jmp    106ed <proofnumbersearch+0x28d>
   106a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   106b0:	pxor   xmm1,xmm1
   106b4:	pxor   xmm0,xmm0
   106b8:	cvtsi2ss xmm1,DWORD PTR [rcx+0x8]
   106bd:	cvtsi2ss xmm0,eax
   106c1:	divss  xmm1,xmm0
   106c5:	comiss xmm1,xmm2
   106c8:	jbe    106e4 <proofnumbersearch+0x284>
   106ca:	mov    rax,QWORD PTR [rcx+0x30]
   106ce:	movdqu xmm3,XMMWORD PTR [rcx+0x20]
   106d3:	movaps xmm2,xmm1
   106d6:	mov    QWORD PTR [rip+0x568c3],rax        # 66fa0 <pn_move+0x10>
   106dd:	movups XMMWORD PTR [rip+0x568ac],xmm3        # 66f90 <pn_move>
   106e4:	add    rdx,0x8
   106e8:	cmp    rsi,rdx
   106eb:	je     1070e <proofnumbersearch+0x2ae>
   106ed:	mov    rcx,QWORD PTR [rdx]
   106f0:	mov    eax,DWORD PTR [rcx+0x4]
   106f3:	test   eax,eax
   106f5:	jne    106b0 <proofnumbersearch+0x250>
   106f7:	mov    rax,QWORD PTR [rcx+0x30]
   106fb:	movdqu xmm7,XMMWORD PTR [rcx+0x20]
   10700:	mov    QWORD PTR [rip+0x56899],rax        # 66fa0 <pn_move+0x10>
   10707:	movups XMMWORD PTR [rip+0x56882],xmm7        # 66f90 <pn_move>
   1070e:	movdqu xmm4,XMMWORD PTR [rip+0x5687a]        # 66f90 <pn_move>
   10716:	mov    rax,QWORD PTR [rip+0x56883]        # 66fa0 <pn_move+0x10>
   1071d:	mov    rdi,rbp
   10720:	mov    QWORD PTR [rip+0x568c9],rax        # 66ff0 <pn_saver+0x10>
   10727:	movups XMMWORD PTR [rip+0x568b2],xmm4        # 66fe0 <pn_saver>
   1072e:	call   1290 <free@plt>
   10733:	mov    rdi,QWORD PTR [rip+0x5687e]        # 66fb8 <membuff>
   1073a:	mov    DWORD PTR [rip+0x13e90],0x0        # 245d4 <bufftop>
   10744:	call   1290 <free@plt>
   10749:	mov    rax,QWORD PTR [rsp+0x4008]
   10751:	xor    rax,QWORD PTR fs:0x28
   1075a:	jne    10ba6 <proofnumbersearch+0x746>
   10760:	add    rsp,0x4018
   10767:	pop    rbx
   10768:	pop    rbp
   10769:	pop    r12
   1076b:	pop    r13
   1076d:	pop    r14
   1076f:	pop    r15
   10771:	ret    
   10772:	nop    WORD PTR [rax+rax*1+0x0]
   10778:	shr    rax,1
   1077b:	pxor   xmm0,xmm0
   1077f:	cvtsi2ss xmm0,rax
   10784:	addss  xmm0,xmm0
   10788:	jmp    105ec <proofnumbersearch+0x18c>
   1078d:	nop    DWORD PTR [rax]
   10790:	movdqu xmm6,XMMWORD PTR [rip+0x13e48]        # 245e0 <dummy>
   10798:	mov    rdi,rbp
   1079b:	mov    rax,QWORD PTR [rip+0x13e4e]        # 245f0 <dummy+0x10>
   107a2:	mov    DWORD PTR [rip+0x13e28],0x0        # 245d4 <bufftop>
   107ac:	mov    QWORD PTR [rip+0x567ed],rax        # 66fa0 <pn_move+0x10>
   107b3:	movups XMMWORD PTR [rip+0x567d6],xmm6        # 66f90 <pn_move>
   107ba:	call   1290 <free@plt>
   107bf:	mov    rdi,QWORD PTR [rip+0x567f2]        # 66fb8 <membuff>
   107c6:	call   1290 <free@plt>
   107cb:	jmp    10749 <proofnumbersearch+0x2e9>
   107d0:	mov    eax,DWORD PTR [rip+0x567f2]        # 66fc8 <maxply>
   107d6:	mov    ecx,DWORD PTR [rbp+0x8]
   107d9:	lea    rsi,[rip+0xe230]        # 1ea10 <sbishop+0xbf0>
   107e0:	mov    edi,0x1
   107e5:	mov    r9d,DWORD PTR [rip+0x567bc]        # 66fa8 <forwards>
   107ec:	mov    r8d,DWORD PTR [rip+0x567bd]        # 66fb0 <nodecount>
   107f3:	push   rax
   107f4:	mov    eax,DWORD PTR [rip+0x567d2]        # 66fcc <iters>
   107fa:	push   rax
   107fb:	xor    eax,eax
   107fd:	call   1420 <__printf_chk@plt>
   10802:	mov    r15d,DWORD PTR [rip+0x286f6f]        # 297778 <xb_mode>
   10809:	pop    r13
   1080b:	pop    r14
   1080d:	test   r15d,r15d
   10810:	jne    10852 <proofnumbersearch+0x3f2>
   10812:	nop    WORD PTR [rax+rax*1+0x0]
   10818:	call   18c90 <rtime>
   1081d:	mov    rsi,r12
   10820:	mov    rdi,rax
   10823:	call   186f0 <rdifftime>
   10828:	pxor   xmm0,xmm0
   1082c:	mov    edi,0x1
   10831:	lea    rsi,[rip+0xe088]        # 1e8c0 <sbishop+0xaa0>
   10838:	cvtsi2ss xmm0,eax
   1083c:	mov    eax,0x1
   10841:	cvtss2sd xmm0,xmm0
   10845:	divsd  xmm0,QWORD PTR [rip+0xe28b]        # 1ead8 <sbishop+0xcb8>
   1084d:	call   1420 <__printf_chk@plt>
   10852:	mov    edx,DWORD PTR [rbp+0x4]
   10855:	test   edx,edx
   10857:	jne    10650 <proofnumbersearch+0x1f0>
   1085d:	lea    rdi,[rip+0xe067]        # 1e8cb <sbishop+0xaab>
   10864:	mov    BYTE PTR [rbp+0x0],0x1
   10868:	mov    r14,rsp
   1086b:	lea    rbx,[rsp+0x2000]
   10873:	call   12d0 <puts@plt>
   10878:	mov    edi,0x1
   1087d:	xor    eax,eax
   1087f:	lea    rsi,[rip+0xe05b]        # 1e8e1 <sbishop+0xac1>
   10886:	call   1420 <__printf_chk@plt>
   1088b:	xor    eax,eax
   1088d:	mov    ecx,0x400
   10892:	mov    rdi,r14
   10895:	rep stos QWORD PTR es:[rdi],rax
   10898:	cmp    BYTE PTR [rbp+0x2],0x0
   1089c:	mov    rdi,rbx
   1089f:	mov    ecx,0x400
   108a4:	rep stos QWORD PTR es:[rdi],rax
   108a7:	mov    DWORD PTR [rip+0x286eaf],0x1        # 297760 <ply>
   108b1:	je     10aa0 <proofnumbersearch+0x640>
   108b7:	mov    r13,rbp
   108ba:	nop    WORD PTR [rax+rax*1+0x0]
   108c0:	mov    r12d,DWORD PTR [rip+0x26cc59]        # 27d520 <white_to_move>
   108c7:	xor    edx,edx
   108c9:	mov    rax,QWORD PTR [r13+0x10]
   108cd:	test   r12d,r12d
   108d0:	mov    rcx,QWORD PTR [rax]
   108d3:	sete   dl
   108d6:	cmp    edx,DWORD PTR [rip+0x58dd4]        # 696b0 <root_to_move>
   108dc:	je     10b20 <proofnumbersearch+0x6c0>
   108e2:	mov    edx,DWORD PTR [r13+0x8]
   108e6:	add    rax,0x8
   108ea:	cmp    DWORD PTR [rcx+0x8],edx
   108ed:	je     10b48 <proofnumbersearch+0x6e8>
   108f3:	nop    DWORD PTR [rax+rax*1+0x0]
   108f8:	mov    r13,QWORD PTR [rax]
   108fb:	add    rax,0x8
   108ff:	cmp    DWORD PTR [r13+0x8],edx
   10903:	jne    108f8 <proofnumbersearch+0x498>
   10905:	sub    rsp,0x8
   10909:	push   QWORD PTR [r13+0x30]
   1090d:	mov    rdi,r14
   10910:	push   QWORD PTR [r13+0x28]
   10914:	push   QWORD PTR [r13+0x20]
   10918:	call   17690 <comp_to_coord>
   1091d:	mov    edi,0x1
   10922:	add    rsp,0x20
   10926:	xor    eax,eax
   10928:	mov    rdx,r14
   1092b:	lea    rsi,[rip+0xdfb4]        # 1e8e6 <sbishop+0xac6>
   10932:	call   1420 <__printf_chk@plt>
   10937:	mov    rdi,rbx
   1093a:	mov    edx,DWORD PTR [rdi]
   1093c:	add    rdi,0x4
   10940:	lea    eax,[rdx-0x1010101]
   10946:	not    edx
   10948:	and    eax,edx
   1094a:	and    eax,0x80808080
   1094f:	je     1093a <proofnumbersearch+0x4da>
   10951:	mov    edx,eax
   10953:	lea    r15,[r13+0x20]
   10957:	shr    edx,0x10
   1095a:	test   eax,0x8080
   1095f:	cmove  eax,edx
   10962:	lea    rdx,[rdi+0x2]
   10966:	cmove  rdi,rdx
   1096a:	mov    edx,0x2000
   1096f:	mov    esi,eax
   10971:	add    sil,al
   10974:	mov    rsi,r14
   10977:	sbb    rdi,0x3
   1097b:	call   13e0 <__stpcpy_chk@plt>
   10980:	mov    rcx,rbx
   10983:	mov    edx,0x2
   10988:	lea    rsi,[rip+0xf00f]        # 1f99e <scentral+0xbbe>
   1098f:	sub    rcx,rax
   10992:	mov    rdi,rax
   10995:	add    rcx,0x2000
   1099c:	call   13c0 <__memcpy_chk@plt>
   109a1:	xor    esi,esi
   109a3:	mov    rdi,r15
   109a6:	call   8e00 <make>
   109ab:	mov    r12d,DWORD PTR [rip+0x286dae]        # 297760 <ply>
   109b2:	cmp    r12d,0x1
   109b6:	je     10b00 <proofnumbersearch+0x6a0>
   109bc:	mov    DWORD PTR [rip+0x565ba],0x1        # 66f80 <forcedwin>
   109c6:	cmp    BYTE PTR [r13+0x2],0x0
   109cb:	jne    108c0 <proofnumbersearch+0x460>
   109d1:	cmp    rbp,r13
   109d4:	jne    109e4 <proofnumbersearch+0x584>
   109d6:	jmp    109f7 <proofnumbersearch+0x597>
   109d8:	nop    DWORD PTR [rax+rax*1+0x0]
   109e0:	lea    r15,[r13+0x20]
   109e4:	xor    esi,esi
   109e6:	mov    rdi,r15
   109e9:	call   ae30 <unmake>
   109ee:	mov    r13,QWORD PTR [r13+0x18]
   109f2:	cmp    rbp,r13
   109f5:	jne    109e0 <proofnumbersearch+0x580>
   109f7:	mov    r11d,DWORD PTR [rip+0x565d2]        # 66fd0 <kibitzed>
   109fe:	test   r11d,r11d
   10a01:	jne    10a13 <proofnumbersearch+0x5b3>
   10a03:	mov    r10d,DWORD PTR [rip+0x286d6e]        # 297778 <xb_mode>
   10a0a:	test   r10d,r10d
   10a0d:	jne    10ac2 <proofnumbersearch+0x662>
   10a13:	cmp    r12d,0x1
   10a17:	je     10b50 <proofnumbersearch+0x6f0>
   10a1d:	mov    edi,0xa
   10a22:	call   12a0 <putchar@plt>
   10a27:	jmp    10688 <proofnumbersearch+0x228>
   10a2c:	nop    DWORD PTR [rax+0x0]
   10a30:	lea    rdi,[rip+0xdef0]        # 1e927 <sbishop+0xb07>
   10a37:	mov    BYTE PTR [rbp+0x0],0x2
   10a3b:	call   12d0 <puts@plt>
   10a40:	movdqu xmm6,XMMWORD PTR [rip+0x13b98]        # 245e0 <dummy>
   10a48:	mov    rax,QWORD PTR [rip+0x13ba1]        # 245f0 <dummy+0x10>
   10a4f:	movups XMMWORD PTR [rip+0x5653a],xmm6        # 66f90 <pn_move>
   10a56:	mov    QWORD PTR [rip+0x56543],rax        # 66fa0 <pn_move+0x10>
   10a5d:	jmp    10688 <proofnumbersearch+0x228>
   10a62:	nop    WORD PTR [rax+rax*1+0x0]
   10a68:	call   18c90 <rtime>
   10a6d:	mov    rsi,r12
   10a70:	mov    rdi,rax
   10a73:	call   186f0 <rdifftime>
   10a78:	cmp    eax,DWORD PTR [rip+0x5652e]        # 66fac <pn_time>
   10a7e:	jle    105b8 <proofnumbersearch+0x158>
   10a84:	call   19230 <interrupt>
   10a89:	test   eax,eax
   10a8b:	jne    105b8 <proofnumbersearch+0x158>
   10a91:	mov    ecx,DWORD PTR [rbp+0x8]
   10a94:	mov    r10d,DWORD PTR [rbp+0x4]
   10a98:	jmp    105c4 <proofnumbersearch+0x164>
   10a9d:	nop    DWORD PTR [rax]
   10aa0:	mov    edx,DWORD PTR [rip+0x5652a]        # 66fd0 <kibitzed>
   10aa6:	test   edx,edx
   10aa8:	jne    10b50 <proofnumbersearch+0x6f0>
   10aae:	mov    eax,DWORD PTR [rip+0x286cc4]        # 297778 <xb_mode>
   10ab4:	test   eax,eax
   10ab6:	je     10b50 <proofnumbersearch+0x6f0>
   10abc:	mov    r12d,0x1
   10ac2:	mov    r9d,DWORD PTR [rip+0x26d03f]        # 27db08 <post>
   10ac9:	test   r9d,r9d
   10acc:	je     10a13 <proofnumbersearch+0x5b3>
   10ad2:	mov    edx,r12d
   10ad5:	lea    rsi,[rip+0xdf94]        # 1ea70 <sbishop+0xc50>
   10adc:	mov    edi,0x1
   10ae1:	xor    eax,eax
   10ae3:	mov    DWORD PTR [rip+0x564e3],0x1        # 66fd0 <kibitzed>
   10aed:	shr    edx,0x1f
   10af0:	add    edx,r12d
   10af3:	sar    edx,1
   10af5:	call   1420 <__printf_chk@plt>
   10afa:	jmp    10a13 <proofnumbersearch+0x5b3>
   10aff:	nop
   10b00:	movdqu xmm5,XMMWORD PTR [r13+0x20]
   10b06:	mov    rax,QWORD PTR [r13+0x30]
   10b0a:	movups XMMWORD PTR [rip+0x5647f],xmm5        # 66f90 <pn_move>
   10b11:	mov    QWORD PTR [rip+0x56488],rax        # 66fa0 <pn_move+0x10>
   10b18:	jmp    109bc <proofnumbersearch+0x55c>
   10b1d:	nop    DWORD PTR [rax]
   10b20:	mov    edx,DWORD PTR [r13+0x4]
   10b24:	cmp    DWORD PTR [rcx+0x4],edx
   10b27:	je     10b48 <proofnumbersearch+0x6e8>
   10b29:	add    rax,0x8
   10b2d:	nop    DWORD PTR [rax]
   10b30:	mov    r13,QWORD PTR [rax]
   10b33:	add    rax,0x8
   10b37:	cmp    DWORD PTR [r13+0x4],edx
   10b3b:	jne    10b30 <proofnumbersearch+0x6d0>
   10b3d:	jmp    10905 <proofnumbersearch+0x4a5>
   10b42:	nop    WORD PTR [rax+rax*1+0x0]
   10b48:	mov    r13,rcx
   10b4b:	jmp    10905 <proofnumbersearch+0x4a5>
   10b50:	mov    r8d,DWORD PTR [rbp+0x4]
   10b54:	test   r8d,r8d
   10b57:	jne    10b7e <proofnumbersearch+0x71e>
   10b59:	mov    esi,DWORD PTR [rip+0x58b51]        # 696b0 <root_to_move>
   10b5f:	test   esi,esi
   10b61:	jne    10b8b <proofnumbersearch+0x72b>
   10b63:	lea    rdi,[rip+0xdd80]        # 1e8ea <sbishop+0xaca>
   10b6a:	call   12d0 <puts@plt>
   10b6f:	mov    DWORD PTR [rip+0x26cd27],0x3        # 27d8a0 <result>
   10b79:	jmp    10a1d <proofnumbersearch+0x5bd>
   10b7e:	mov    edi,DWORD PTR [rbp+0x8]
   10b81:	test   edi,edi
   10b83:	jne    10a1d <proofnumbersearch+0x5bd>
   10b89:	jmp    10b59 <proofnumbersearch+0x6f9>
   10b8b:	lea    rdi,[rip+0xdd6b]        # 1e8fd <sbishop+0xadd>
   10b92:	call   12d0 <puts@plt>
   10b97:	mov    DWORD PTR [rip+0x26ccff],0x2        # 27d8a0 <result>
   10ba1:	jmp    10a1d <proofnumbersearch+0x5bd>
   10ba6:	call   1310 <__stack_chk_fail@plt>
   10bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010bb0 <proofnumbercheck>:
   10bb0:	endbr64 
   10bb4:	push   r15
   10bb6:	push   r14
   10bb8:	push   r13
   10bba:	push   r12
   10bbc:	mov    r12,rdi
   10bbf:	push   rbp
   10bc0:	push   rbx
   10bc1:	sub    rsp,0x18
   10bc5:	cmp    DWORD PTR [rip+0x5acd8],0x3        # 6b8a4 <piece_count>
   10bcc:	jg     10bdb <proofnumbercheck+0x2b>
   10bce:	cmp    DWORD PTR [rip+0x26abeb],0x3        # 27b7c0 <Variant>
   10bd5:	je     10e70 <proofnumbercheck+0x2c0>
   10bdb:	lea    rdi,[rsp+0x50]
   10be0:	xor    esi,esi
   10be2:	mov    DWORD PTR [rip+0x563c4],0x0        # 66fb0 <nodecount>
   10bec:	mov    DWORD PTR [rip+0x563d6],0x0        # 66fcc <iters>
   10bf6:	mov    DWORD PTR [rip+0x56384],0x0        # 66f84 <frees>
   10c00:	mov    DWORD PTR [rip+0x286b56],0x1        # 297760 <ply>
   10c0a:	mov    DWORD PTR [rip+0x563b4],0x0        # 66fc8 <maxply>
   10c14:	call   8e00 <make>
   10c19:	mov    eax,DWORD PTR [rip+0x286b41]        # 297760 <ply>
   10c1f:	add    eax,DWORD PTR [rip+0x58a7b]        # 696a0 <move_number>
   10c25:	lea    rdx,[rip+0x26a214]        # 27ae40 <hash_history>
   10c2c:	mov    ecx,DWORD PTR [rip+0x286b52]        # 297784 <hash>
   10c32:	mov    esi,DWORD PTR [rip+0x26c8e8]        # 27d520 <white_to_move>
   10c38:	sub    eax,0x1
   10c3b:	cdqe   
   10c3d:	mov    DWORD PTR [rdx+rax*4],ecx
   10c40:	xor    eax,eax
   10c42:	test   esi,esi
   10c44:	sete   al
   10c47:	mov    DWORD PTR [rip+0x58a63],eax        # 696b0 <root_to_move>
   10c4d:	call   18c90 <rtime>
   10c52:	mov    esi,0x38
   10c57:	mov    edi,0x1
   10c5c:	mov    rbx,rax
   10c5f:	call   1390 <calloc@plt>
   10c64:	movsxd rdi,DWORD PTR [rip+0x56c51]        # 678bc <PBSize>
   10c6b:	mov    esi,0x38
   10c70:	mov    rbp,rax
   10c73:	call   1390 <calloc@plt>
   10c78:	mov    rdi,rbp
   10c7b:	mov    QWORD PTR [rip+0x56336],rax        # 66fb8 <membuff>
   10c82:	call   f180 <pn_eval>
   10c87:	mov    rdi,rbp
   10c8a:	call   f290 <set_proof_and_disproof_numbers>
   10c8f:	jmp    10cf8 <proofnumbercheck+0x148>
   10c91:	nop    DWORD PTR [rax+0x0]
   10c98:	test   ecx,ecx
   10c9a:	je     10d04 <proofnumbercheck+0x154>
   10c9c:	mov    eax,DWORD PTR [rip+0x56c1a]        # 678bc <PBSize>
   10ca2:	mov    esi,DWORD PTR [rip+0x1392c]        # 245d4 <bufftop>
   10ca8:	sub    eax,0x2710
   10cad:	cdqe   
   10caf:	lea    rdx,[rax*8+0x0]
   10cb7:	sub    rdx,rax
   10cba:	mov    rax,rdx
   10cbd:	shl    rax,0x3
   10cc1:	cmp    rsi,rax
   10cc4:	jae    10d04 <proofnumbercheck+0x154>
   10cc6:	mov    rdi,rbp
   10cc9:	call   f1b0 <select_most_proving>
   10cce:	mov    r13,rax
   10cd1:	mov    rdi,rax
   10cd4:	call   f7e0 <develop_node>
   10cd9:	mov    rdi,r13
   10cdc:	call   fab0 <update_ancestors>
   10ce1:	mov    eax,DWORD PTR [rip+0x562e5]        # 66fcc <iters>
   10ce7:	add    eax,0x1
   10cea:	mov    DWORD PTR [rip+0x562dc],eax        # 66fcc <iters>
   10cf0:	test   al,0x1f
   10cf2:	je     10e48 <proofnumbercheck+0x298>
   10cf8:	mov    r10d,DWORD PTR [rbp+0x4]
   10cfc:	mov    ecx,DWORD PTR [rbp+0x8]
   10cff:	test   r10d,r10d
   10d02:	jne    10c98 <proofnumbercheck+0xe8>
   10d04:	movsxd rdx,DWORD PTR [rip+0x562a5]        # 66fb0 <nodecount>
   10d0b:	lea    rax,[rdx*8+0x0]
   10d13:	mov    r8,rdx
   10d16:	sub    rax,rdx
   10d19:	shl    rax,0x3
   10d1d:	js     10e30 <proofnumbercheck+0x280>
   10d23:	pxor   xmm0,xmm0
   10d27:	cvtsi2ss xmm0,rax
   10d2c:	mov    eax,DWORD PTR [rip+0x5629a]        # 66fcc <iters>
   10d32:	sub    rsp,0x8
   10d36:	mov    edx,r10d
   10d39:	mov    r9d,DWORD PTR [rip+0x56244]        # 66f84 <frees>
   10d40:	mulss  xmm0,DWORD PTR [rip+0xdd8c]        # 1ead4 <sbishop+0xcb4>
   10d48:	lea    rsi,[rip+0xdd51]        # 1eaa0 <sbishop+0xc80>
   10d4f:	mov    edi,0x1
   10d54:	push   rax
   10d55:	mov    eax,0x1
   10d5a:	cvtss2sd xmm0,xmm0
   10d5e:	call   1420 <__printf_chk@plt>
   10d63:	lea    rdi,[rsp+0x60]
   10d68:	xor    esi,esi
   10d6a:	call   ae30 <unmake>
   10d6f:	mov    ecx,DWORD PTR [rbp+0x4]
   10d72:	pop    rax
   10d73:	pop    rdx
   10d74:	test   ecx,ecx
   10d76:	je     10df0 <proofnumbercheck+0x240>
   10d78:	mov    edx,DWORD PTR [rsp+0x50]
   10d7c:	mov    eax,DWORD PTR [rsp+0x54]
   10d80:	mov    r15d,DWORD PTR [rsp+0x58]
   10d85:	mov    r14d,DWORD PTR [rsp+0x5c]
   10d8a:	mov    r13d,DWORD PTR [rsp+0x60]
   10d8f:	mov    ebx,DWORD PTR [rsp+0x64]
   10d93:	mov    rdi,rbp
   10d96:	mov    DWORD PTR [rsp+0xc],edx
   10d9a:	mov    DWORD PTR [rsp+0x8],eax
   10d9e:	mov    DWORD PTR [rip+0x1382c],0x0        # 245d4 <bufftop>
   10da8:	call   1290 <free@plt>
   10dad:	mov    rdi,QWORD PTR [rip+0x56204]        # 66fb8 <membuff>
   10db4:	call   1290 <free@plt>
   10db9:	mov    edx,DWORD PTR [rsp+0xc]
   10dbd:	mov    eax,DWORD PTR [rsp+0x8]
   10dc1:	mov    DWORD PTR [r12+0x8],r15d
   10dc6:	mov    DWORD PTR [r12+0xc],r14d
   10dcb:	mov    DWORD PTR [r12],edx
   10dcf:	mov    DWORD PTR [r12+0x4],eax
   10dd4:	mov    DWORD PTR [r12+0x10],r13d
   10dd9:	mov    DWORD PTR [r12+0x14],ebx
   10dde:	add    rsp,0x18
   10de2:	mov    rax,r12
   10de5:	pop    rbx
   10de6:	pop    rbp
   10de7:	pop    r12
   10de9:	pop    r13
   10deb:	pop    r14
   10ded:	pop    r15
   10def:	ret    
   10df0:	mov    DWORD PTR [rip+0x56ad6],0x1        # 678d0 <s_threat>
   10dfa:	mov    edx,DWORD PTR [rip+0x56190]        # 66f90 <pn_move>
   10e00:	mov    eax,DWORD PTR [rip+0x5618e]        # 66f94 <pn_move+0x4>
   10e06:	mov    r15d,DWORD PTR [rip+0x5618b]        # 66f98 <pn_move+0x8>
   10e0d:	mov    r14d,DWORD PTR [rip+0x56188]        # 66f9c <pn_move+0xc>
   10e14:	mov    r13d,DWORD PTR [rip+0x56185]        # 66fa0 <pn_move+0x10>
   10e1b:	mov    ebx,DWORD PTR [rip+0x56183]        # 66fa4 <pn_move+0x14>
   10e21:	jmp    10d93 <proofnumbercheck+0x1e3>
   10e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10e30:	shr    rax,1
   10e33:	pxor   xmm0,xmm0
   10e37:	cvtsi2ss xmm0,rax
   10e3c:	addss  xmm0,xmm0
   10e40:	jmp    10d2c <proofnumbercheck+0x17c>
   10e45:	nop    DWORD PTR [rax]
   10e48:	call   18c90 <rtime>
   10e4d:	mov    rsi,rbx
   10e50:	mov    rdi,rax
   10e53:	call   186f0 <rdifftime>
   10e58:	cmp    eax,DWORD PTR [rip+0x5614e]        # 66fac <pn_time>
   10e5e:	jle    10cf8 <proofnumbercheck+0x148>
   10e64:	mov    ecx,DWORD PTR [rbp+0x8]
   10e67:	mov    r10d,DWORD PTR [rbp+0x4]
   10e6b:	jmp    10d04 <proofnumbercheck+0x154>
   10e70:	movdqu xmm1,XMMWORD PTR [rsp+0x50]
   10e76:	mov    rax,QWORD PTR [rsp+0x60]
   10e7b:	movups XMMWORD PTR [rdi],xmm1
   10e7e:	mov    QWORD PTR [rdi+0x10],rax
   10e82:	jmp    10dde <proofnumbercheck+0x22e>
   10e87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000010e90 <read_rcfile>:
   10e90:	endbr64 
   10e94:	sub    rsp,0x8
   10e98:	mov    edx,0x1e
   10e9d:	mov    esi,0x1
   10ea2:	xor    eax,eax
   10ea4:	mov    r8d,0x6e
   10eaa:	lea    rcx,[rip+0xdc2f]        # 1eae0 <sbishop+0xcc0>
   10eb1:	lea    rdi,[rip+0x26a8e8]        # 27b7a0 <setcode>
   10eb8:	mov    DWORD PTR [rip+0x566aa],0x2dc6c0        # 6756c <TTSize>
   10ec2:	mov    DWORD PTR [rip+0x56608],0xf4240        # 674d4 <ECacheSize>
   10ecc:	mov    DWORD PTR [rip+0x569e6],0x30d40        # 678bc <PBSize>
   10ed6:	mov    DWORD PTR [rip+0x566ac],0x1        # 6758c <cfg_devscale>
   10ee0:	mov    DWORD PTR [rip+0x5669e],0x3f800000        # 67588 <cfg_scalefac>
   10eea:	mov    DWORD PTR [rip+0x56684],0x1        # 67578 <cfg_razordrop>
   10ef4:	mov    DWORD PTR [rip+0x565da],0x0        # 674d8 <cfg_cutdrop>
   10efe:	mov    DWORD PTR [rip+0x565c8],0x1        # 674d0 <cfg_futprune>
   10f08:	mov    DWORD PTR [rip+0x565ae],0x1        # 674c0 <cfg_smarteval>
   10f12:	mov    DWORD PTR [rip+0x56664],0x0        # 67580 <cfg_attackeval>
   10f1c:	mov    DWORD PTR [rip+0x56656],0x1        # 6757c <cfg_onerep>
   10f26:	mov    DWORD PTR [rip+0x56644],0x0        # 67574 <cfg_recap>
   10f30:	mov    DWORD PTR [rip+0x5664a],0x0        # 67584 <havercfile>
   10f3a:	call   14b0 <__sprintf_chk@plt>
   10f3f:	call   5160 <initialize_eval>
   10f44:	call   16d20 <alloc_hash>
   10f49:	add    rsp,0x8
   10f4d:	jmp    4480 <alloc_ecache>
   10f52:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10f5c:	nop    DWORD PTR [rax+0x0]

0000000000010f60 <order_moves>:
   10f60:	endbr64 
   10f64:	push   r15
   10f66:	push   r14
   10f68:	mov    r14d,r8d
   10f6b:	push   r13
   10f6d:	push   r12
   10f6f:	mov    r12,rsi
   10f72:	push   rbp
   10f73:	push   rbx
   10f74:	mov    rbx,rdi
   10f77:	sub    rsp,0x28
   10f7b:	mov    r9d,DWORD PTR [rip+0x58bee]        # 69b70 <searching_pv>
   10f82:	mov    QWORD PTR [rsp],rdx
   10f86:	test   r9d,r9d
   10f89:	jne    11100 <order_moves+0x1a0>
   10f8f:	test   ecx,ecx
   10f91:	jle    110e8 <order_moves+0x188>
   10f97:	cmp    r8d,0xffffffff
   10f9b:	lea    eax,[rcx-0x1]
   10f9e:	lea    r10,[rip+0x26d05b]        # 27e000 <history_h>
   10fa5:	setne  BYTE PTR [rsp+0x18]
   10faa:	lea    r9,[rip+0x284a6f]        # 295a20 <killer1>
   10fb1:	xor    ebp,ebp
   10fb3:	mov    QWORD PTR [rsp+0x8],rax
   10fb8:	lea    rcx,[rip+0x135c1]        # 24580 <material>
   10fbf:	jmp    1100e <order_moves+0xae>
   10fc1:	nop    DWORD PTR [rax+0x0]
   10fc8:	lea    rdi,[rdx+rdx*2]
   10fcc:	lea    r11,[rip+0x58cad]        # 69c80 <killer2>
   10fd3:	lea    rdi,[r11+rdi*8]
   10fd7:	cmp    DWORD PTR [rdi],r13d
   10fda:	je     113b0 <order_moves+0x450>
   10fe0:	lea    rdi,[rdx+rdx*2]
   10fe4:	lea    rdx,[rip+0x282e15]        # 293e00 <killer3>
   10feb:	lea    rdx,[rdx+rdi*8]
   10fef:	cmp    DWORD PTR [rdx],r13d
   10ff2:	je     113d8 <order_moves+0x478>
   10ff8:	lea    rax,[rbp+0x1]
   10ffc:	add    rbx,0x18
   11000:	cmp    QWORD PTR [rsp+0x8],rbp
   11005:	je     110e8 <order_moves+0x188>
   1100b:	mov    rbp,rax
   1100e:	mov    r13d,DWORD PTR [rbx]
   11011:	mov    esi,DWORD PTR [rbx+0x4]
   11014:	mov    r8d,DWORD PTR [rbx+0xc]
   11018:	movsxd rax,DWORD PTR [rbx+0x8]
   1101c:	cmp    r14d,ebp
   1101f:	jne    112f8 <order_moves+0x398>
   11025:	cmp    BYTE PTR [rsp+0x18],0x0
   1102a:	je     112f8 <order_moves+0x398>
   11030:	mov    DWORD PTR [r12+rbp*4],0x5f5e100
   11038:	cmp    eax,0xd
   1103b:	je     11490 <order_moves+0x530>
   11041:	mov    edx,DWORD PTR [rcx+rax*4]
   11044:	mov    edi,DWORD PTR [rcx+rax*4]
   11047:	movsxd r15,r13d
   1104a:	sar    edx,0x1f
   1104d:	xor    edi,edx
   1104f:	mov    eax,edi
   11051:	lea    rdi,[rip+0x26c868]        # 27d8c0 <board>
   11058:	sub    eax,edx
   1105a:	movsxd rdx,DWORD PTR [rdi+r15*4]
   1105e:	mov    edi,DWORD PTR [rcx+rdx*4]
   11061:	mov    r11d,DWORD PTR [rcx+rdx*4]
   11065:	sar    edi,0x1f
   11068:	xor    r11d,edi
   1106b:	mov    edx,r11d
   1106e:	sub    edx,edi
   11070:	lea    edi,[rax+0xf]
   11073:	cmp    edi,edx
   11075:	jl     11568 <order_moves+0x608>
   1107b:	mov    rdi,QWORD PTR [rsp]
   1107f:	sar    edx,0x4
   11082:	sub    eax,edx
   11084:	mov    DWORD PTR [rdi+rbp*4],eax
   11087:	mov    eax,DWORD PTR [r12+rbp*4]
   1108b:	lea    rdi,[r15+r15*8]
   1108f:	movsxd rdx,esi
   11092:	shl    rdi,0x4
   11096:	add    rdx,rdi
   11099:	add    eax,DWORD PTR [r10+rdx*4]
   1109d:	mov    DWORD PTR [r12+rbp*4],eax
   110a1:	movsxd rdx,DWORD PTR [rip+0x2866b8]        # 297760 <ply>
   110a8:	lea    rdi,[rdx+rdx*2]
   110ac:	lea    rdi,[r9+rdi*8]
   110b0:	cmp    DWORD PTR [rdi],r13d
   110b3:	jne    10fc8 <order_moves+0x68>
   110b9:	cmp    DWORD PTR [rdi+0x4],esi
   110bc:	jne    10fc8 <order_moves+0x68>
   110c2:	cmp    DWORD PTR [rdi+0xc],r8d
   110c6:	jne    10fc8 <order_moves+0x68>
   110cc:	add    eax,0x17d7840
   110d1:	add    rbx,0x18
   110d5:	mov    DWORD PTR [r12+rbp*4],eax
   110d9:	lea    rax,[rbp+0x1]
   110dd:	cmp    QWORD PTR [rsp+0x8],rbp
   110e2:	jne    1100b <order_moves+0xab>
   110e8:	add    rsp,0x28
   110ec:	pop    rbx
   110ed:	pop    rbp
   110ee:	pop    r12
   110f0:	pop    r13
   110f2:	pop    r14
   110f4:	pop    r15
   110f6:	ret    
   110f7:	nop    WORD PTR [rax+rax*1+0x0]
   11100:	mov    DWORD PTR [rip+0x58a66],0x0        # 69b70 <searching_pv>
   1110a:	test   ecx,ecx
   1110c:	jle    110e8 <order_moves+0x188>
   1110e:	lea    r10d,[rcx-0x1]
   11112:	xor    ebp,ebp
   11114:	lea    r8,[rip+0x5a7a5]        # 6b8c0 <pv>
   1111b:	lea    rcx,[rip+0x1345e]        # 24580 <material>
   11122:	jmp    111c8 <order_moves+0x268>
   11127:	nop    WORD PTR [rax+rax*1+0x0]
   11130:	cmp    r14d,ebp
   11133:	je     11298 <order_moves+0x338>
   11139:	cmp    eax,0x1
   1113c:	je     11460 <order_moves+0x500>
   11142:	movsxd rdx,r13d
   11145:	movsxd rax,esi
   11148:	lea    rdi,[rip+0x26ceb1]        # 27e000 <history_h>
   1114f:	lea    rdx,[rdx+rdx*8]
   11153:	lea    r11,[rip+0x2848c6]        # 295a20 <killer1>
   1115a:	shl    rdx,0x4
   1115e:	add    rax,rdx
   11161:	mov    edx,DWORD PTR [rdi+rax*4]
   11164:	add    edx,DWORD PTR [r12+rbp*4]
   11168:	mov    DWORD PTR [r12+rbp*4],edx
   1116c:	movsxd rax,DWORD PTR [rip+0x2865ed]        # 297760 <ply>
   11173:	lea    rdi,[rax+rax*2]
   11177:	lea    rdi,[r11+rdi*8]
   1117b:	cmp    DWORD PTR [rdi],r13d
   1117e:	je     114d8 <order_moves+0x578>
   11184:	lea    rdi,[rax+rax*2]
   11188:	lea    r15,[rip+0x58af1]        # 69c80 <killer2>
   1118f:	lea    rdi,[r15+rdi*8]
   11193:	cmp    DWORD PTR [rdi],r13d
   11196:	je     11500 <order_moves+0x5a0>
   1119c:	lea    rdi,[rax+rax*2]
   111a0:	lea    rax,[rip+0x282c59]        # 293e00 <killer3>
   111a7:	lea    rax,[rax+rdi*8]
   111ab:	cmp    DWORD PTR [rax],r13d
   111ae:	je     11528 <order_moves+0x5c8>
   111b4:	lea    rax,[rbp+0x1]
   111b8:	add    rbx,0x18
   111bc:	cmp    rbp,r10
   111bf:	je     110e8 <order_moves+0x188>
   111c5:	mov    rbp,rax
   111c8:	movsxd r15,DWORD PTR [rbx+0x8]
   111cc:	mov    r13d,DWORD PTR [rbx]
   111cf:	mov    esi,DWORD PTR [rbx+0x4]
   111d2:	mov    r9d,DWORD PTR [rbx+0xc]
   111d6:	cmp    r15d,0xd
   111da:	je     113a0 <order_moves+0x440>
   111e0:	movsxd rax,r15d
   111e3:	mov    edx,DWORD PTR [rcx+rax*4]
   111e6:	mov    edi,DWORD PTR [rcx+rax*4]
   111e9:	sar    edx,0x1f
   111ec:	xor    edi,edx
   111ee:	mov    eax,edi
   111f0:	lea    rdi,[rip+0x26c6c9]        # 27d8c0 <board>
   111f7:	sub    eax,edx
   111f9:	movsxd rdx,r13d
   111fc:	movsxd rdx,DWORD PTR [rdi+rdx*4]
   11200:	mov    edi,DWORD PTR [rcx+rdx*4]
   11203:	mov    r11d,DWORD PTR [rcx+rdx*4]
   11207:	sar    edi,0x1f
   1120a:	xor    r11d,edi
   1120d:	mov    edx,r11d
   11210:	sub    edx,edi
   11212:	lea    edi,[rax+0xf]
   11215:	cmp    edi,edx
   11217:	jl     11400 <order_moves+0x4a0>
   1121d:	mov    rdi,QWORD PTR [rsp]
   11221:	sar    edx,0x4
   11224:	sub    eax,edx
   11226:	mov    DWORD PTR [rdi+rbp*4],eax
   11229:	add    eax,0x2faf080
   1122e:	mov    DWORD PTR [r12+rbp*4],eax
   11232:	movsxd rdx,DWORD PTR [rip+0x286527]        # 297760 <ply>
   11239:	mov    rax,rdx
   1123c:	lea    rdx,[rdx+rdx*2]
   11240:	lea    rdx,[r8+rdx*8]
   11244:	cmp    DWORD PTR [rdx+0x1c20],r13d
   1124b:	je     11360 <order_moves+0x400>
   11251:	lea    edx,[r14+0x2]
   11255:	cmp    edx,0x1
   11258:	ja     11130 <order_moves+0x1d0>
   1125e:	cmp    r14d,0xfffffffe
   11262:	jne    11139 <order_moves+0x1d9>
   11268:	add    eax,0x1
   1126b:	cdqe   
   1126d:	imul   rax,rax,0x1c38
   11274:	add    rax,r8
   11277:	cmp    DWORD PTR [rax],r13d
   1127a:	jne    111b4 <order_moves+0x254>
   11280:	cmp    DWORD PTR [rax+0x4],esi
   11283:	jne    111b4 <order_moves+0x254>
   11289:	cmp    DWORD PTR [rax+0xc],r9d
   1128d:	jne    111b4 <order_moves+0x254>
   11293:	nop    DWORD PTR [rax+rax*1+0x0]
   11298:	mov    DWORD PTR [r12+rbp*4],0x5f5e100
   112a0:	cmp    r15d,0xd
   112a4:	je     111b4 <order_moves+0x254>
   112aa:	mov    edx,DWORD PTR [rcx+r15*4]
   112ae:	mov    eax,DWORD PTR [rcx+r15*4]
   112b2:	lea    rdi,[rip+0x26c607]        # 27d8c0 <board>
   112b9:	sar    edx,0x1f
   112bc:	xor    eax,edx
   112be:	sub    eax,edx
   112c0:	movsxd rdx,r13d
   112c3:	movsxd rdx,DWORD PTR [rdi+rdx*4]
   112c7:	mov    edi,DWORD PTR [rcx+rdx*4]
   112ca:	mov    r9d,DWORD PTR [rcx+rdx*4]
   112ce:	sar    edi,0x1f
   112d1:	xor    r9d,edi
   112d4:	mov    edx,r9d
   112d7:	sub    edx,edi
   112d9:	lea    edi,[rax+0xf]
   112dc:	cmp    edi,edx
   112de:	jl     11668 <order_moves+0x708>
   112e4:	mov    rsi,QWORD PTR [rsp]
   112e8:	sar    edx,0x4
   112eb:	sub    eax,edx
   112ed:	mov    DWORD PTR [rsi+rbp*4],eax
   112f0:	jmp    111b4 <order_moves+0x254>
   112f5:	nop    DWORD PTR [rax]
   112f8:	cmp    r14d,0xfffffffe
   112fc:	je     114a0 <order_moves+0x540>
   11302:	cmp    eax,0xd
   11305:	je     11550 <order_moves+0x5f0>
   1130b:	mov    edx,DWORD PTR [rcx+rax*4]
   1130e:	mov    edi,DWORD PTR [rcx+rax*4]
   11311:	movsxd r15,r13d
   11314:	sar    edx,0x1f
   11317:	xor    edi,edx
   11319:	mov    eax,edi
   1131b:	lea    rdi,[rip+0x26c59e]        # 27d8c0 <board>
   11322:	sub    eax,edx
   11324:	movsxd rdx,DWORD PTR [rdi+r15*4]
   11328:	mov    edi,DWORD PTR [rcx+rdx*4]
   1132b:	mov    r11d,DWORD PTR [rcx+rdx*4]
   1132f:	sar    edi,0x1f
   11332:	xor    r11d,edi
   11335:	mov    edx,r11d
   11338:	sub    edx,edi
   1133a:	lea    edi,[rax+0xf]
   1133d:	cmp    edi,edx
   1133f:	jl     115b8 <order_moves+0x658>
   11345:	mov    rdi,QWORD PTR [rsp]
   11349:	sar    edx,0x4
   1134c:	sub    eax,edx
   1134e:	mov    DWORD PTR [rdi+rbp*4],eax
   11351:	add    eax,0x2faf080
   11356:	mov    DWORD PTR [r12+rbp*4],eax
   1135a:	jmp    1108b <order_moves+0x12b>
   1135f:	nop
   11360:	cmp    DWORD PTR [rdx+0x1c24],esi
   11366:	jne    11251 <order_moves+0x2f1>
   1136c:	cmp    DWORD PTR [rdx+0x1c2c],r9d
   11373:	jne    11251 <order_moves+0x2f1>
   11379:	mov    DWORD PTR [rip+0x587ed],0x1        # 69b70 <searching_pv>
   11383:	mov    DWORD PTR [r12+rbp*4],0x5f5e100
   1138b:	cmp    r15d,0xd
   1138f:	jne    112aa <order_moves+0x34a>
   11395:	jmp    111b4 <order_moves+0x254>
   1139a:	nop    WORD PTR [rax+rax*1+0x0]
   113a0:	mov    DWORD PTR [r12+rbp*4],0x0
   113a8:	jmp    11232 <order_moves+0x2d2>
   113ad:	nop    DWORD PTR [rax]
   113b0:	cmp    DWORD PTR [rdi+0x4],esi
   113b3:	jne    10fe0 <order_moves+0x80>
   113b9:	cmp    DWORD PTR [rdi+0xc],r8d
   113bd:	jne    10fe0 <order_moves+0x80>
   113c3:	add    eax,0x1312d00
   113c8:	mov    DWORD PTR [r12+rbp*4],eax
   113cc:	jmp    10ff8 <order_moves+0x98>
   113d1:	nop    DWORD PTR [rax+0x0]
   113d8:	cmp    DWORD PTR [rdx+0x4],esi
   113db:	jne    10ff8 <order_moves+0x98>
   113e1:	cmp    DWORD PTR [rdx+0xc],r8d
   113e5:	jne    10ff8 <order_moves+0x98>
   113eb:	add    eax,0xe4e1c0
   113f0:	mov    DWORD PTR [r12+rbp*4],eax
   113f4:	jmp    10ff8 <order_moves+0x98>
   113f9:	nop    DWORD PTR [rax+0x0]
   11400:	mov    r8d,DWORD PTR [rip+0x26c119]        # 27d520 <white_to_move>
   11407:	xor    edi,edi
   11409:	mov    edx,r13d
   1140c:	mov    DWORD PTR [rsp+0x8],esi
   11410:	mov    QWORD PTR [rsp+0x10],r10
   11415:	test   r8d,r8d
   11418:	mov    DWORD PTR [rsp+0x18],r9d
   1141d:	sete   dil
   11421:	call   15710 <see>
   11426:	mov    rcx,QWORD PTR [rsp]
   1142a:	mov    esi,DWORD PTR [rsp+0x8]
   1142e:	lea    r8,[rip+0x5a48b]        # 6b8c0 <pv>
   11435:	lea    edx,[rax+0x2faf080]
   1143b:	cmp    eax,0xffffffcd
   1143e:	mov    r9d,DWORD PTR [rsp+0x18]
   11443:	mov    r10,QWORD PTR [rsp+0x10]
   11448:	cmovle edx,eax
   1144b:	mov    DWORD PTR [r12+rbp*4],edx
   1144f:	mov    DWORD PTR [rcx+rbp*4],eax
   11452:	lea    rcx,[rip+0x13127]        # 24580 <material>
   11459:	jmp    11232 <order_moves+0x2d2>
   1145e:	xchg   ax,ax
   11460:	cmp    DWORD PTR [rip+0x58245],0x1        # 696ac <i_depth>
   11467:	jle    11142 <order_moves+0x1e2>
   1146d:	lea    rax,[rip+0x56f2c]        # 683a0 <rootnodecount>
   11474:	mov    eax,DWORD PTR [rax+rbp*4]
   11477:	imul   rax,rax,0x51eb851f
   1147e:	shr    rax,0x25
   11482:	mov    DWORD PTR [r12+rbp*4],eax
   11486:	jmp    111b4 <order_moves+0x254>
   1148b:	nop    DWORD PTR [rax+rax*1+0x0]
   11490:	mov    eax,0x5f5e100
   11495:	movsxd r15,r13d
   11498:	jmp    1108b <order_moves+0x12b>
   1149d:	nop    DWORD PTR [rax]
   114a0:	mov    edi,DWORD PTR [rip+0x2862ba]        # 297760 <ply>
   114a6:	lea    edx,[rdi+0x1]
   114a9:	lea    rdi,[rip+0x5a410]        # 6b8c0 <pv>
   114b0:	movsxd rdx,edx
   114b3:	imul   rdx,rdx,0x1c38
   114ba:	add    rdx,rdi
   114bd:	cmp    DWORD PTR [rdx],r13d
   114c0:	je     115f0 <order_moves+0x690>
   114c6:	mov    eax,DWORD PTR [r12+rbp*4]
   114ca:	movsxd r15,r13d
   114cd:	jmp    1108b <order_moves+0x12b>
   114d2:	nop    WORD PTR [rax+rax*1+0x0]
   114d8:	cmp    DWORD PTR [rdi+0x4],esi
   114db:	jne    11184 <order_moves+0x224>
   114e1:	cmp    DWORD PTR [rdi+0xc],r9d
   114e5:	jne    11184 <order_moves+0x224>
   114eb:	add    edx,0x17d7840
   114f1:	mov    DWORD PTR [r12+rbp*4],edx
   114f5:	jmp    111b4 <order_moves+0x254>
   114fa:	nop    WORD PTR [rax+rax*1+0x0]
   11500:	cmp    DWORD PTR [rdi+0x4],esi
   11503:	jne    1119c <order_moves+0x23c>
   11509:	cmp    DWORD PTR [rdi+0xc],r9d
   1150d:	jne    1119c <order_moves+0x23c>
   11513:	add    edx,0x1312d00
   11519:	mov    DWORD PTR [r12+rbp*4],edx
   1151d:	jmp    111b4 <order_moves+0x254>
   11522:	nop    WORD PTR [rax+rax*1+0x0]
   11528:	cmp    DWORD PTR [rax+0x4],esi
   1152b:	jne    111b4 <order_moves+0x254>
   11531:	cmp    DWORD PTR [rax+0xc],r9d
   11535:	jne    111b4 <order_moves+0x254>
   1153b:	add    edx,0xe4e1c0
   11541:	mov    DWORD PTR [r12+rbp*4],edx
   11545:	jmp    111b4 <order_moves+0x254>
   1154a:	nop    WORD PTR [rax+rax*1+0x0]
   11550:	mov    DWORD PTR [r12+rbp*4],0x0
   11558:	xor    eax,eax
   1155a:	movsxd r15,r13d
   1155d:	jmp    1108b <order_moves+0x12b>
   11562:	nop    WORD PTR [rax+rax*1+0x0]
   11568:	mov    edx,DWORD PTR [rip+0x26bfb2]        # 27d520 <white_to_move>
   1156e:	xor    edi,edi
   11570:	mov    DWORD PTR [rsp+0x1c],r8d
   11575:	mov    DWORD PTR [rsp+0x10],esi
   11579:	test   edx,edx
   1157b:	mov    edx,r13d
   1157e:	sete   dil
   11582:	call   15710 <see>
   11587:	mov    rcx,QWORD PTR [rsp]
   1158b:	mov    esi,DWORD PTR [rsp+0x10]
   1158f:	lea    r9,[rip+0x28448a]        # 295a20 <killer1>
   11596:	lea    r10,[rip+0x26ca63]        # 27e000 <history_h>
   1159d:	mov    r8d,DWORD PTR [rsp+0x1c]
   115a2:	mov    DWORD PTR [rcx+rbp*4],eax
   115a5:	lea    rcx,[rip+0x12fd4]        # 24580 <material>
   115ac:	mov    eax,DWORD PTR [r12+rbp*4]
   115b0:	jmp    1108b <order_moves+0x12b>
   115b5:	nop    DWORD PTR [rax]
   115b8:	mov    eax,DWORD PTR [rip+0x26bf62]        # 27d520 <white_to_move>
   115be:	xor    edi,edi
   115c0:	mov    edx,r13d
   115c3:	mov    DWORD PTR [rsp+0x1c],r8d
   115c8:	mov    DWORD PTR [rsp+0x10],esi
   115cc:	test   eax,eax
   115ce:	sete   dil
   115d2:	call   15710 <see>
   115d7:	lea    edx,[rax+0x2faf080]
   115dd:	cmp    eax,0xffffffcd
   115e0:	cmovle edx,eax
   115e3:	mov    DWORD PTR [r12+rbp*4],edx
   115e7:	jmp    11587 <order_moves+0x627>
   115e9:	nop    DWORD PTR [rax+0x0]
   115f0:	cmp    DWORD PTR [rdx+0x4],esi
   115f3:	jne    114c6 <order_moves+0x566>
   115f9:	cmp    DWORD PTR [rdx+0xc],r8d
   115fd:	jne    114c6 <order_moves+0x566>
   11603:	mov    DWORD PTR [r12+rbp*4],0x5f5e100
   1160b:	cmp    eax,0xd
   1160e:	je     11490 <order_moves+0x530>
   11614:	mov    edx,DWORD PTR [rcx+rax*4]
   11617:	mov    edi,DWORD PTR [rcx+rax*4]
   1161a:	movsxd r15,r13d
   1161d:	lea    rax,[rip+0x26c29c]        # 27d8c0 <board>
   11624:	movsxd rax,DWORD PTR [rax+r15*4]
   11628:	sar    edx,0x1f
   1162b:	xor    edi,edx
   1162d:	mov    r11d,DWORD PTR [rcx+rax*4]
   11631:	sub    edi,edx
   11633:	mov    edx,DWORD PTR [rcx+rax*4]
   11636:	sar    edx,0x1f
   11639:	xor    r11d,edx
   1163c:	mov    eax,r11d
   1163f:	sub    eax,edx
   11641:	lea    edx,[rdi+0xf]
   11644:	cmp    edx,eax
   11646:	jl     11568 <order_moves+0x608>
   1164c:	sar    eax,0x4
   1164f:	sub    edi,eax
   11651:	mov    rax,QWORD PTR [rsp]
   11655:	mov    DWORD PTR [rax+rbp*4],edi
   11658:	mov    eax,DWORD PTR [r12+rbp*4]
   1165c:	jmp    1108b <order_moves+0x12b>
   11661:	nop    DWORD PTR [rax+0x0]
   11668:	mov    ecx,DWORD PTR [rip+0x26beb2]        # 27d520 <white_to_move>
   1166e:	xor    edi,edi
   11670:	mov    edx,r13d
   11673:	mov    QWORD PTR [rsp+0x8],r10
   11678:	test   ecx,ecx
   1167a:	sete   dil
   1167e:	call   15710 <see>
   11683:	mov    rcx,QWORD PTR [rsp]
   11687:	mov    r10,QWORD PTR [rsp+0x8]
   1168c:	lea    r8,[rip+0x5a22d]        # 6b8c0 <pv>
   11693:	mov    DWORD PTR [rcx+rbp*4],eax
   11696:	lea    rcx,[rip+0x12ee3]        # 24580 <material>
   1169d:	jmp    111b4 <order_moves+0x254>
   116a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   116ad:	nop    DWORD PTR [rax]

00000000000116b0 <perft>:
   116b0:	endbr64 
   116b4:	push   r14
   116b6:	push   r13
   116b8:	push   r12
   116ba:	push   rbp
   116bb:	push   rbx
   116bc:	sub    rsp,0x1000
   116c3:	or     QWORD PTR [rsp],0x0
   116c8:	sub    rsp,0x1000
   116cf:	or     QWORD PTR [rsp],0x0
   116d4:	sub    rsp,0x1000
   116db:	or     QWORD PTR [rsp],0x0
   116e0:	sub    rsp,0x10
   116e4:	mov    rax,QWORD PTR fs:0x28
   116ed:	mov    QWORD PTR [rsp+0x3008],rax
   116f5:	xor    eax,eax
   116f7:	test   edi,edi
   116f9:	jne    11728 <perft+0x78>
   116fb:	add    DWORD PTR [rip+0x57fa6],0x1        # 696a8 <raw_nodes>
   11702:	mov    rax,QWORD PTR [rsp+0x3008]
   1170a:	xor    rax,QWORD PTR fs:0x28
   11713:	jne    1178a <perft+0xda>
   11715:	add    rsp,0x3010
   1171c:	pop    rbx
   1171d:	pop    rbp
   1171e:	pop    r12
   11720:	pop    r13
   11722:	pop    r14
   11724:	ret    
   11725:	nop    DWORD PTR [rax]
   11728:	mov    rbp,rsp
   1172b:	mov    r12d,edi
   1172e:	mov    rdi,rbp
   11731:	call   9b80 <gen>
   11736:	mov    r14d,DWORD PTR [rip+0x2cfcb]        # 3e708 <numb_moves>
   1173d:	call   7ca0 <in_check>
   11742:	mov    r13d,eax
   11745:	test   r14d,r14d
   11748:	jle    11702 <perft+0x52>
   1174a:	xor    ebx,ebx
   1174c:	sub    r12d,0x1
   11750:	mov    esi,ebx
   11752:	mov    rdi,rbp
   11755:	call   8e00 <make>
   1175a:	mov    edx,r13d
   1175d:	mov    esi,ebx
   1175f:	mov    rdi,rbp
   11762:	call   6f70 <check_legal>
   11767:	test   eax,eax
   11769:	jne    11780 <perft+0xd0>
   1176b:	mov    esi,ebx
   1176d:	mov    rdi,rbp
   11770:	add    ebx,0x1
   11773:	call   ae30 <unmake>
   11778:	cmp    r14d,ebx
   1177b:	jne    11750 <perft+0xa0>
   1177d:	jmp    11702 <perft+0x52>
   1177f:	nop
   11780:	mov    edi,r12d
   11783:	call   116b0 <perft>
   11788:	jmp    1176b <perft+0xbb>
   1178a:	call   1310 <__stack_chk_fail@plt>
   1178f:	nop

0000000000011790 <qsearch>:
   11790:	endbr64 
   11794:	push   r15
   11796:	push   r14
   11798:	push   r13
   1179a:	push   r12
   1179c:	push   rbp
   1179d:	push   rbx
   1179e:	lea    r11,[rsp-0x4000]
   117a6:	sub    rsp,0x1000
   117ad:	or     QWORD PTR [rsp],0x0
   117b2:	cmp    rsp,r11
   117b5:	jne    117a6 <qsearch+0x16>
   117b7:	sub    rsp,0x58
   117bb:	movzx  r12d,WORD PTR [rip+0x26a119]        # 27b8dc <nodes>
   117c3:	lea    r14,[rip+0x26c356]        # 27db20 <pv_length>
   117ca:	mov    rax,QWORD PTR fs:0x28
   117d3:	mov    QWORD PTR [rsp+0x4048],rax
   117db:	xor    eax,eax
   117dd:	mov    ebx,edx
   117df:	movsxd rdx,DWORD PTR [rip+0x285f7a]        # 297760 <ply>
   117e6:	mov    r13d,edi
   117e9:	mov    ebp,esi
   117eb:	mov    DWORD PTR [r14+rdx*4],edx
   117ef:	test   r12d,r12d
   117f2:	je     11ae0 <qsearch+0x350>
   117f8:	test   ebx,ebx
   117fa:	jle    11808 <qsearch+0x78>
   117fc:	cmp    DWORD PTR [rip+0x285f5a],0x12b        # 297760 <ply>
   11806:	jle    11848 <qsearch+0xb8>
   11808:	mov    esi,ebp
   1180a:	mov    edi,r13d
   1180d:	call   53c0 <eval>
   11812:	mov    r12d,eax
   11815:	mov    rax,QWORD PTR [rsp+0x4048]
   1181d:	xor    rax,QWORD PTR fs:0x28
   11826:	jne    11c7d <qsearch+0x4ed>
   1182c:	add    rsp,0x4058
   11833:	mov    eax,r12d
   11836:	pop    rbx
   11837:	pop    rbp
   11838:	pop    r12
   1183a:	pop    r13
   1183c:	pop    r14
   1183e:	pop    r15
   11840:	ret    
   11841:	nop    DWORD PTR [rax+0x0]
   11848:	lea    rsi,[rsp+0x38]
   1184d:	lea    rdi,[rsp+0x3c]
   11852:	add    DWORD PTR [rip+0x5a047],0x1        # 6b8a0 <qnodes>
   11859:	add    DWORD PTR [rip+0x26a07c],0x1        # 27b8dc <nodes>
   11860:	call   16cb0 <QProbeTT>
   11865:	cmp    eax,0x3
   11868:	je     11c40 <qsearch+0x4b0>
   1186e:	jg     11b00 <qsearch+0x370>
   11874:	cmp    eax,0x1
   11877:	je     11be8 <qsearch+0x458>
   1187d:	cmp    eax,0x2
   11880:	jne    11890 <qsearch+0x100>
   11882:	mov    r12d,DWORD PTR [rsp+0x3c]
   11887:	cmp    r12d,ebp
   1188a:	jge    11815 <qsearch+0x85>
   1188c:	nop    DWORD PTR [rax+0x0]
   11890:	mov    esi,ebp
   11892:	mov    edi,r13d
   11895:	call   53c0 <eval>
   1189a:	mov    r15d,eax
   1189d:	cmp    ebp,eax
   1189f:	jle    11c00 <qsearch+0x470>
   118a5:	lea    r10,[rsp+0x1040]
   118ad:	mov    r12d,0xc350
   118b3:	mov    rdi,r10
   118b6:	mov    QWORD PTR [rsp+0x8],r10
   118bb:	call   9b80 <gen>
   118c0:	mov    edx,DWORD PTR [rip+0x2ce46]        # 3e70c <kingcap>
   118c6:	test   edx,edx
   118c8:	jne    11815 <qsearch+0x85>
   118ce:	cmp    r13d,r15d
   118d1:	mov    r12d,r15d
   118d4:	mov    r10,QWORD PTR [rsp+0x8]
   118d9:	lea    r9,[rsp+0x40]
   118de:	cmovge r12d,r13d
   118e2:	mov    r8d,DWORD PTR [rsp+0x38]
   118e7:	mov    rsi,r9
   118ea:	mov    QWORD PTR [rsp+0x18],r9
   118ef:	mov    ecx,DWORD PTR [rip+0x2ce13]        # 3e708 <numb_moves>
   118f5:	mov    rdi,r10
   118f8:	mov    QWORD PTR [rsp+0x10],r10
   118fd:	lea    rdx,[rsp+0x840]
   11905:	lea    eax,[r12-0x96]
   1190d:	sub    eax,r15d
   11910:	mov    DWORD PTR [rsp+0x20],ecx
   11914:	mov    DWORD PTR [rsp+0x28],eax
   11918:	call   10f60 <order_moves>
   1191d:	mov    ecx,DWORD PTR [rsp+0x20]
   11921:	mov    r10,QWORD PTR [rsp+0x10]
   11926:	mov    DWORD PTR [rsp+0x20],r13d
   1192b:	mov    r9,QWORD PTR [rsp+0x18]
   11930:	mov    DWORD PTR [rsp+0x24],ebx
   11934:	lea    eax,[rcx-0x1]
   11937:	mov    ebx,ecx
   11939:	mov    r13,r10
   1193c:	mov    DWORD PTR [rsp+0x8],eax
   11940:	mov    r15,r9
   11943:	test   ebx,ebx
   11945:	jle    11c20 <qsearch+0x490>
   1194b:	mov    edi,DWORD PTR [rsp+0x8]
   1194f:	xor    eax,eax
   11951:	mov    r8d,0xfff0bdc0
   11957:	mov    esi,0xfff0bdc0
   1195c:	jmp    11963 <qsearch+0x1d3>
   1195e:	xchg   ax,ax
   11960:	mov    rax,rdx
   11963:	mov    edx,DWORD PTR [r15+rax*4]
   11967:	cmp    edx,esi
   11969:	jle    11970 <qsearch+0x1e0>
   1196b:	mov    r8d,eax
   1196e:	mov    esi,edx
   11970:	lea    rdx,[rax+0x1]
   11974:	cmp    rax,rdi
   11977:	jne    11960 <qsearch+0x1d0>
   11979:	cmp    r8d,0xfff0bdc0
   11980:	je     11c20 <qsearch+0x490>
   11986:	movsxd r9,r8d
   11989:	mov    DWORD PTR [rsp+r9*4+0x40],0xfff0bdc0
   11992:	lea    rax,[r9+r9*2]
   11996:	mov    eax,DWORD PTR [rsp+rax*8+0x104c]
   1199d:	test   eax,eax
   1199f:	jne    119b9 <qsearch+0x229>
   119a1:	mov    ecx,DWORD PTR [rsp+0x28]
   119a5:	mov    eax,0x0
   119aa:	test   ecx,ecx
   119ac:	cmovns eax,ecx
   119af:	cmp    eax,DWORD PTR [rsp+r9*4+0x840]
   119b7:	jg     11943 <qsearch+0x1b3>
   119b9:	mov    esi,r8d
   119bc:	mov    rdi,r13
   119bf:	mov    DWORD PTR [rsp+0x10],r8d
   119c4:	mov    QWORD PTR [rsp+0x18],r9
   119c9:	call   8e00 <make>
   119ce:	mov    eax,DWORD PTR [rsp+0x24]
   119d2:	mov    esi,r12d
   119d5:	mov    edi,ebp
   119d7:	neg    esi
   119d9:	neg    edi
   119db:	lea    edx,[rax-0x1]
   119de:	call   11790 <qsearch>
   119e3:	mov    r8d,DWORD PTR [rsp+0x10]
   119e8:	cmp    eax,0xc350
   119ed:	mov    edx,eax
   119ef:	je     11c50 <qsearch+0x4c0>
   119f5:	neg    edx
   119f7:	mov    esi,r8d
   119fa:	mov    rdi,r13
   119fd:	mov    DWORD PTR [rsp+0x2c],r8d
   11a02:	mov    DWORD PTR [rsp+0x10],edx
   11a06:	call   ae30 <unmake>
   11a0b:	mov    edx,DWORD PTR [rsp+0x10]
   11a0f:	cmp    r12d,edx
   11a12:	jge    11943 <qsearch+0x1b3>
   11a18:	mov    r8d,DWORD PTR [rsp+0x2c]
   11a1d:	cmp    ebp,edx
   11a1f:	mov    r9,QWORD PTR [rsp+0x18]
   11a24:	mov    DWORD PTR [rsp+0x38],r8d
   11a29:	jle    11c60 <qsearch+0x4d0>
   11a2f:	movsxd r11,DWORD PTR [rip+0x285d2a]        # 297760 <ply>
   11a36:	lea    rax,[r9+r9*2]
   11a3a:	lea    rcx,[rip+0x59e7f]        # 6b8c0 <pv>
   11a41:	shl    rax,0x3
   11a45:	movdqu xmm1,XMMWORD PTR [rsp+rax*1+0x1040]
   11a4e:	imul   rsi,r11,0x1c38
   11a55:	mov    rax,QWORD PTR [rsp+rax*1+0x1050]
   11a5d:	lea    rdi,[rcx+rsi*1]
   11a61:	mov    QWORD PTR [rdi+0x10],rax
   11a65:	lea    eax,[r11+0x1]
   11a69:	movups XMMWORD PTR [rdi],xmm1
   11a6c:	movsxd rdi,eax
   11a6f:	mov    r12d,DWORD PTR [r14+rdi*4]
   11a73:	cmp    r12d,eax
   11a76:	jle    11acf <qsearch+0x33f>
   11a78:	imul   rdi,rdi,0x1c20
   11a7f:	lea    rax,[rcx+rsi*1+0x18]
   11a84:	mov    ecx,r12d
   11a87:	sub    ecx,r11d
   11a8a:	mov    r8d,ecx
   11a8d:	lea    rcx,[rip+0x59e5c]        # 6b8f0 <pv+0x30>
   11a94:	sub    r8d,0x2
   11a98:	add    rsi,rcx
   11a9b:	lea    r8,[r8+r8*2]
   11a9f:	lea    r9,[rsi+r8*8]
   11aa3:	imul   r8,r11,0xffffffffffffe3e0
   11aaa:	nop    WORD PTR [rax+rax*1+0x0]
   11ab0:	lea    rcx,[rax+r8*1]
   11ab4:	add    rax,0x18
   11ab8:	movdqu xmm0,XMMWORD PTR [rcx+rdi*1]
   11abd:	movups XMMWORD PTR [rax-0x18],xmm0
   11ac1:	mov    rcx,QWORD PTR [rcx+rdi*1+0x10]
   11ac6:	mov    QWORD PTR [rax-0x8],rcx
   11aca:	cmp    r9,rax
   11acd:	jne    11ab0 <qsearch+0x320>
   11acf:	mov    DWORD PTR [r14+r11*4],r12d
   11ad3:	mov    r12d,edx
   11ad6:	jmp    11943 <qsearch+0x1b3>
   11adb:	nop    DWORD PTR [rax+rax*1+0x0]
   11ae0:	call   19230 <interrupt>
   11ae5:	test   eax,eax
   11ae7:	je     11b20 <qsearch+0x390>
   11ae9:	mov    DWORD PTR [rip+0x26c00d],0x1        # 27db00 <time_exit>
   11af3:	jmp    11815 <qsearch+0x85>
   11af8:	nop    DWORD PTR [rax+rax*1+0x0]
   11b00:	cmp    eax,0x4
   11b03:	jne    11890 <qsearch+0x100>
   11b09:	mov    DWORD PTR [rsp+0x38],0xffffffff
   11b11:	jmp    11890 <qsearch+0x100>
   11b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11b20:	mov    r15,QWORD PTR [rip+0x26bb19]        # 27d640 <start_time>
   11b27:	call   18c90 <rtime>
   11b2c:	mov    rdi,rax
   11b2f:	mov    rsi,r15
   11b32:	call   186f0 <rdifftime>
   11b37:	mov    r15d,DWORD PTR [rip+0x57b66]        # 696a4 <time_for_move>
   11b3e:	cmp    eax,r15d
   11b41:	jl     117f8 <qsearch+0x68>
   11b47:	cmp    DWORD PTR [rip+0x57b5e],0x1        # 696ac <i_depth>
   11b4e:	jle    117f8 <qsearch+0x68>
   11b54:	cmp    DWORD PTR [rip+0x55d7d],0x1        # 678d8 <failed>
   11b5b:	jne    11ae9 <qsearch+0x359>
   11b5d:	mov    eax,DWORD PTR [rip+0x55d71]        # 678d4 <extendedtime>
   11b63:	or     eax,DWORD PTR [rip+0x285be7]        # 297750 <fixed_time>
   11b69:	or     eax,DWORD PTR [rip+0x285bd1]        # 297740 <go_fast>
   11b6f:	jne    11ae9 <qsearch+0x359>
   11b75:	cmp    DWORD PTR [rip+0x269c44],0x1        # 27b7c0 <Variant>
   11b7c:	je     11ae9 <qsearch+0x359>
   11b82:	lea    eax,[r15*4+0x0]
   11b8a:	mov    edx,0x3e8
   11b8f:	cmp    eax,0x3e8
   11b94:	cmovl  eax,edx
   11b97:	cmp    eax,DWORD PTR [rip+0x285bd3]        # 297770 <time_left>
   11b9d:	jge    11ae9 <qsearch+0x359>
   11ba3:	mov    DWORD PTR [rip+0x55d27],0x1        # 678d4 <extendedtime>
   11bad:	call   16de0 <allocate_time>
   11bb2:	mov    r8d,DWORD PTR [rip+0x285bb7]        # 297770 <time_left>
   11bb9:	mov    edx,r15d
   11bbc:	add    eax,DWORD PTR [rip+0x57ae2]        # 696a4 <time_for_move>
   11bc2:	mov    ecx,eax
   11bc4:	mov    DWORD PTR [rip+0x57ada],eax        # 696a4 <time_for_move>
   11bca:	mov    edi,0x1
   11bcf:	xor    eax,eax
   11bd1:	lea    rsi,[rip+0xcf10]        # 1eae8 <sbishop+0xcc8>
   11bd8:	call   1420 <__printf_chk@plt>
   11bdd:	jmp    117f8 <qsearch+0x68>
   11be2:	nop    WORD PTR [rax+rax*1+0x0]
   11be8:	mov    r12d,DWORD PTR [rsp+0x3c]
   11bed:	cmp    r12d,r13d
   11bf0:	jg     11890 <qsearch+0x100>
   11bf6:	jmp    11815 <qsearch+0x85>
   11bfb:	nop    DWORD PTR [rax+rax*1+0x0]
   11c00:	mov    ecx,0x1f4
   11c05:	mov    edx,ebp
   11c07:	mov    esi,r13d
   11c0a:	mov    edi,eax
   11c0c:	call   16800 <QStoreTT>
   11c11:	mov    r12d,r15d
   11c14:	jmp    11815 <qsearch+0x85>
   11c19:	nop    DWORD PTR [rax+0x0]
   11c20:	mov    r13d,DWORD PTR [rsp+0x20]
   11c25:	mov    ecx,DWORD PTR [rsp+0x38]
   11c29:	mov    edx,ebp
   11c2b:	mov    edi,r12d
   11c2e:	mov    esi,r13d
   11c31:	call   16800 <QStoreTT>
   11c36:	jmp    11815 <qsearch+0x85>
   11c3b:	nop    DWORD PTR [rax+rax*1+0x0]
   11c40:	mov    r12d,DWORD PTR [rsp+0x3c]
   11c45:	jmp    11815 <qsearch+0x85>
   11c4a:	nop    WORD PTR [rax+rax*1+0x0]
   11c50:	mov    esi,r8d
   11c53:	mov    rdi,r13
   11c56:	call   ae30 <unmake>
   11c5b:	jmp    11943 <qsearch+0x1b3>
   11c60:	mov    r13d,DWORD PTR [rsp+0x20]
   11c65:	mov    r12d,edx
   11c68:	mov    ecx,r8d
   11c6b:	mov    edx,ebp
   11c6d:	mov    edi,r12d
   11c70:	mov    esi,r13d
   11c73:	call   16800 <QStoreTT>
   11c78:	jmp    11815 <qsearch+0x85>
   11c7d:	call   1310 <__stack_chk_fail@plt>
   11c82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   11c8d:	nop    DWORD PTR [rax]

0000000000011c90 <remove_one>:
   11c90:	endbr64 
   11c94:	mov    DWORD PTR [rdi],0xfff0bdc0
   11c9a:	test   edx,edx
   11c9c:	jle    11ce0 <remove_one+0x50>
   11c9e:	lea    r8d,[rdx-0x1]
   11ca2:	xor    eax,eax
   11ca4:	mov    ecx,0xfff0bdc0
   11ca9:	jmp    11cb3 <remove_one+0x23>
   11cab:	nop    DWORD PTR [rax+rax*1+0x0]
   11cb0:	mov    rax,rdx
   11cb3:	cmp    DWORD PTR [rsi+rax*4],ecx
   11cb6:	jle    11cbd <remove_one+0x2d>
   11cb8:	mov    DWORD PTR [rdi],eax
   11cba:	mov    ecx,DWORD PTR [rsi+rax*4]
   11cbd:	lea    rdx,[rax+0x1]
   11cc1:	cmp    r8,rax
   11cc4:	jne    11cb0 <remove_one+0x20>
   11cc6:	movsxd rax,DWORD PTR [rdi]
   11cc9:	cmp    eax,0xfff0bdc1
   11cce:	jl     11ce0 <remove_one+0x50>
   11cd0:	mov    DWORD PTR [rsi+rax*4],0xfff0bdc0
   11cd7:	mov    eax,0x1
   11cdc:	ret    
   11cdd:	nop    DWORD PTR [rax]
   11ce0:	xor    eax,eax
   11ce2:	ret    
   11ce3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   11cee:	xchg   ax,ax

0000000000011cf0 <search>:
   11cf0:	endbr64 
   11cf4:	push   r15
   11cf6:	push   r14
   11cf8:	push   r13
   11cfa:	push   r12
   11cfc:	push   rbp
   11cfd:	push   rbx
   11cfe:	lea    r11,[rsp-0x4000]
   11d06:	sub    rsp,0x1000
   11d0d:	or     QWORD PTR [rsp],0x0
   11d12:	cmp    rsp,r11
   11d15:	jne    11d06 <search+0x16>
   11d17:	sub    rsp,0x78
   11d1b:	mov    rax,QWORD PTR fs:0x28
   11d24:	mov    QWORD PTR [rsp+0x4068],rax
   11d2c:	xor    eax,eax
   11d2e:	mov    eax,DWORD PTR [rip+0x269ba8]        # 27b8dc <nodes>
   11d34:	mov    r15d,edi
   11d37:	mov    ebp,esi
   11d39:	mov    ebx,edx
   11d3b:	mov    r12d,ecx
   11d3e:	lea    r14d,[rax+0x1]
   11d42:	mov    DWORD PTR [rip+0x269b93],r14d        # 27b8dc <nodes>
   11d49:	and    r14d,0xffff
   11d50:	jne    11e58 <search+0x168>
   11d56:	call   19230 <interrupt>
   11d5b:	test   eax,eax
   11d5d:	je     11d98 <search+0xa8>
   11d5f:	mov    DWORD PTR [rip+0x26bd97],0x1        # 27db00 <time_exit>
   11d69:	mov    rax,QWORD PTR [rsp+0x4068]
   11d71:	xor    rax,QWORD PTR fs:0x28
   11d7a:	jne    12f1d <search+0x122d>
   11d80:	add    rsp,0x4078
   11d87:	mov    eax,r14d
   11d8a:	pop    rbx
   11d8b:	pop    rbp
   11d8c:	pop    r12
   11d8e:	pop    r13
   11d90:	pop    r14
   11d92:	pop    r15
   11d94:	ret    
   11d95:	nop    DWORD PTR [rax]
   11d98:	mov    r13,QWORD PTR [rip+0x26b8a1]        # 27d640 <start_time>
   11d9f:	call   18c90 <rtime>
   11da4:	mov    rdi,rax
   11da7:	mov    rsi,r13
   11daa:	call   186f0 <rdifftime>
   11daf:	mov    r13d,DWORD PTR [rip+0x578ee]        # 696a4 <time_for_move>
   11db6:	cmp    eax,r13d
   11db9:	jl     11e58 <search+0x168>
   11dbf:	cmp    DWORD PTR [rip+0x578e6],0x1        # 696ac <i_depth>
   11dc6:	jle    11e58 <search+0x168>
   11dcc:	cmp    DWORD PTR [rip+0x55b05],0x1        # 678d8 <failed>
   11dd3:	jne    11d5f <search+0x6f>
   11dd5:	mov    eax,DWORD PTR [rip+0x55af9]        # 678d4 <extendedtime>
   11ddb:	or     eax,DWORD PTR [rip+0x28596f]        # 297750 <fixed_time>
   11de1:	or     eax,DWORD PTR [rip+0x285959]        # 297740 <go_fast>
   11de7:	jne    11d5f <search+0x6f>
   11ded:	cmp    DWORD PTR [rip+0x2699cc],0x1        # 27b7c0 <Variant>
   11df4:	je     11d5f <search+0x6f>
   11dfa:	lea    eax,[r13*4+0x0]
   11e02:	mov    edx,0x3e8
   11e07:	cmp    eax,0x3e8
   11e0c:	cmovl  eax,edx
   11e0f:	cmp    eax,DWORD PTR [rip+0x28595b]        # 297770 <time_left>
   11e15:	jge    11d5f <search+0x6f>
   11e1b:	mov    DWORD PTR [rip+0x55aaf],0x1        # 678d4 <extendedtime>
   11e25:	call   16de0 <allocate_time>
   11e2a:	mov    r8d,DWORD PTR [rip+0x28593f]        # 297770 <time_left>
   11e31:	mov    edx,r13d
   11e34:	add    eax,DWORD PTR [rip+0x5786a]        # 696a4 <time_for_move>
   11e3a:	mov    DWORD PTR [rip+0x57864],eax        # 696a4 <time_for_move>
   11e40:	mov    ecx,eax
   11e42:	mov    edi,0x1
   11e47:	xor    eax,eax
   11e49:	lea    rsi,[rip+0xcc98]        # 1eae8 <sbishop+0xcc8>
   11e50:	call   1420 <__printf_chk@plt>
   11e55:	nop    DWORD PTR [rax]
   11e58:	movsxd rdx,DWORD PTR [rip+0x285901]        # 297760 <ply>
   11e5f:	lea    r13,[rip+0x26bcba]        # 27db20 <pv_length>
   11e66:	mov    DWORD PTR [rsp+0x54],0x0
   11e6e:	mov    DWORD PTR [r13+rdx*4+0x0],edx
   11e73:	call   42a0 <is_draw>
   11e78:	test   eax,eax
   11e7a:	jne    11fe8 <search+0x2f8>
   11e80:	movsxd rdx,DWORD PTR [rip+0x2858d9]        # 297760 <ply>
   11e87:	lea    rsi,[rip+0x55f32]        # 67dc0 <checks>
   11e8e:	lea    r11,[rip+0x55a6b]        # 67900 <singular>
   11e95:	lea    rcx,[rip+0x56d44]        # 68be0 <recaps>
   11e9c:	mov    edi,DWORD PTR [rsi+rdx*4]
   11e9f:	mov    DWORD PTR [r11+rdx*4],0x0
   11ea7:	mov    rax,rdx
   11eaa:	mov    DWORD PTR [rcx+rdx*4],0x0
   11eb1:	test   edi,edi
   11eb3:	mov    DWORD PTR [rsp+0x8],edi
   11eb7:	setne  r10b
   11ebb:	cmp    edx,0x12b
   11ec1:	jg     11ecc <search+0x1dc>
   11ec3:	test   r10b,r10b
   11ec6:	jne    11ff0 <search+0x300>
   11ecc:	lea    esi,[rax-0x3]
   11ecf:	mov    DWORD PTR [rsp+0x4],0x0
   11ed7:	cmp    esi,0x128
   11edd:	ja     11f68 <search+0x278>
   11ee3:	mov    esi,DWORD PTR [rip+0x577c3]        # 696ac <i_depth>
   11ee9:	add    esi,esi
   11eeb:	cmp    eax,esi
   11eed:	jg     11f68 <search+0x278>
   11eef:	lea    esi,[rax-0x2]
   11ef2:	movsxd rsi,esi
   11ef5:	mov    r9d,DWORD PTR [rcx+rsi*4]
   11ef9:	test   r9d,r9d
   11efc:	jne    11f68 <search+0x278>
   11efe:	mov    edi,DWORD PTR [rip+0x55670]        # 67574 <cfg_recap>
   11f04:	mov    DWORD PTR [rsp+0x4],edi
   11f08:	test   edi,edi
   11f0a:	je     11f68 <search+0x278>
   11f0c:	lea    edi,[rax-0x1]
   11f0f:	lea    r8,[rip+0x2699ea]        # 27b900 <path>
   11f16:	mov    DWORD PTR [rsp+0x4],0x0
   11f1e:	movsxd rdi,edi
   11f21:	lea    rdi,[rdi+rdi*2]
   11f25:	movsxd rdi,DWORD PTR [r8+rdi*8+0x8]
   11f2a:	cmp    edi,0xd
   11f2d:	je     11f68 <search+0x278>
   11f2f:	lea    rsi,[rsi+rsi*2]
   11f33:	lea    r9,[rip+0xcd86]        # 1ecc0 <rc_index.4552>
   11f3a:	movsxd rsi,DWORD PTR [r8+rsi*8+0x8]
   11f3f:	mov    esi,DWORD PTR [r9+rsi*4]
   11f43:	cmp    DWORD PTR [r9+rdi*4],esi
   11f47:	jne    11f68 <search+0x278>
   11f49:	add    DWORD PTR [rip+0x55994],0x1        # 678e4 <ext_recap>
   11f50:	add    ebx,0x1
   11f53:	mov    DWORD PTR [rcx+rdx*4],0x1
   11f5a:	mov    DWORD PTR [rsp+0x4],0x1
   11f62:	nop    WORD PTR [rax+rax*1+0x0]
   11f68:	test   ebx,ebx
   11f6a:	jle    11f77 <search+0x287>
   11f6c:	cmp    eax,0x12b
   11f71:	jle    1201f <search+0x32f>
   11f77:	mov    edx,DWORD PTR [rip+0x269843]        # 27b7c0 <Variant>
   11f7d:	lea    ecx,[rdx-0x3]
   11f80:	cmp    ecx,0x1
   11f83:	ja     12468 <search+0x778>
   11f89:	cmp    edx,0x3
   11f8c:	je     124c0 <search+0x7d0>
   11f92:	call   6530 <losers_eval>
   11f97:	mov    edx,eax
   11f99:	mov    r14d,eax
   11f9c:	sar    edx,0x1f
   11f9f:	mov    eax,edx
   11fa1:	xor    eax,r14d
   11fa4:	sub    eax,edx
   11fa6:	cmp    eax,0xf4240
   11fab:	jne    11d69 <search+0x79>
   11fb1:	mov    edx,DWORD PTR [rip+0x2857a9]        # 297760 <ply>
   11fb7:	sub    eax,edx
   11fb9:	sub    edx,0xf4240
   11fbf:	test   r14d,r14d
   11fc2:	cmovle eax,edx
   11fc5:	mov    r14d,eax
   11fc8:	jmp    11d69 <search+0x79>
   11fcd:	mov    r8d,DWORD PTR [rsp+0x54]
   11fd2:	mov    r9d,ebx
   11fd5:	xor    ecx,ecx
   11fd7:	mov    edx,ebp
   11fd9:	mov    esi,r15d
   11fdc:	xor    edi,edi
   11fde:	call   16870 <StoreTT>
   11fe3:	nop    DWORD PTR [rax+rax*1+0x0]
   11fe8:	xor    r14d,r14d
   11feb:	jmp    11d69 <search+0x79>
   11ff0:	mov    ecx,DWORD PTR [rip+0x576b6]        # 696ac <i_depth>
   11ff6:	lea    edx,[rcx+rcx*1]
   11ff9:	cmp    eax,edx
   11ffb:	jle    12005 <search+0x315>
   11ffd:	test   ebx,ebx
   11fff:	jne    124d0 <search+0x7e0>
   12005:	add    ebx,0x1
   12008:	add    DWORD PTR [rip+0x57685],0x1        # 69694 <ext_check>
   1200f:	mov    DWORD PTR [rsp+0x4],0x1
   12017:	test   ebx,ebx
   12019:	jle    11f77 <search+0x287>
   1201f:	lea    rcx,[rsp+0x54]
   12024:	lea    rdx,[rsp+0x5c]
   12029:	mov    r9d,ebx
   1202c:	mov    esi,ebp
   1202e:	lea    rdi,[rsp+0x50]
   12033:	lea    r8,[rsp+0x58]
   12038:	mov    BYTE PTR [rsp+0xc],r10b
   1203d:	call   16aa0 <ProbeTT>
   12042:	cmp    eax,0x3
   12045:	je     127b0 <search+0xac0>
   1204b:	movzx  r10d,BYTE PTR [rsp+0xc]
   12051:	lea    r11,[rip+0x558a8]        # 67900 <singular>
   12058:	jg     12498 <search+0x7a8>
   1205e:	cmp    eax,0x1
   12061:	je     12798 <search+0xaa8>
   12067:	cmp    eax,0x2
   1206a:	jne    1207a <search+0x38a>
   1206c:	mov    r14d,DWORD PTR [rsp+0x50]
   12071:	cmp    r14d,ebp
   12074:	jge    11d69 <search+0x79>
   1207a:	cmp    DWORD PTR [rsp+0x5c],0x1f4
   12082:	jne    1208c <search+0x39c>
   12084:	mov    DWORD PTR [rsp+0x5c],0xffffffff
   1208c:	mov    eax,DWORD PTR [rip+0x28164e]        # 2936e0 <ep_square>
   12092:	mov    DWORD PTR [rsp+0xc],0x0
   1209a:	mov    DWORD PTR [rsp+0x18],eax
   1209e:	mov    eax,DWORD PTR [rip+0x26971c]        # 27b7c0 <Variant>
   120a4:	cmp    eax,0x4
   120a7:	je     124e0 <search+0x7f0>
   120ad:	cmp    DWORD PTR [rip+0x285694],0x2        # 297748 <phase>
   120b4:	mov    edx,DWORD PTR [rsp+0x54]
   120b8:	jne    120c3 <search+0x3d3>
   120ba:	cmp    ebx,0x6
   120bd:	jg     125f0 <search+0x900>
   120c3:	mov    r8d,DWORD PTR [rsp+0x58]
   120c8:	test   r8d,r8d
   120cb:	je     125f0 <search+0x900>
   120d1:	mov    ecx,DWORD PTR [rsp+0x8]
   120d5:	or     ecx,DWORD PTR [rip+0x57a95]        # 69b70 <searching_pv>
   120db:	or     ecx,edx
   120dd:	or     ecx,r12d
   120e0:	jne    125f0 <search+0x900>
   120e6:	lea    edx,[rax-0x3]
   120e9:	cmp    edx,0x1
   120ec:	jbe    12eba <search+0x11ca>
   120f2:	sub    eax,0x2
   120f5:	xor    DWORD PTR [rip+0x26b424],0x1        # 27d520 <white_to_move>
   120fc:	add    DWORD PTR [rip+0x28565d],0x1        # 297760 <ply>
   12103:	add    DWORD PTR [rip+0x26b9fa],0x1        # 27db04 <fifty>
   1210a:	xor    DWORD PTR [rip+0x285670],0xdeadbeef        # 297784 <hash>
   12114:	and    eax,0xfffffffd
   12117:	mov    DWORD PTR [rip+0x2815bf],0x0        # 2936e0 <ep_square>
   12121:	je     12efa <search+0x120a>
   12127:	lea    edx,[rbx-0x2]
   1212a:	cmp    ebx,0x3
   1212d:	jle    12132 <search+0x442>
   1212f:	lea    edx,[rbx-0x3]
   12132:	mov    BYTE PTR [rsp+0x10],r10b
   12137:	mov    esi,0x1
   1213c:	mov    edi,ebp
   1213e:	mov    ecx,0x1
   12143:	sub    esi,ebp
   12145:	neg    edi
   12147:	call   11cf0 <search>
   1214c:	sub    DWORD PTR [rip+0x26b9b1],0x1        # 27db04 <fifty>
   12153:	movzx  r10d,BYTE PTR [rsp+0x10]
   12159:	neg    eax
   1215b:	sub    DWORD PTR [rip+0x2855fe],0x1        # 297760 <ply>
   12162:	mov    r14d,eax
   12165:	mov    eax,DWORD PTR [rsp+0x18]
   12169:	xor    DWORD PTR [rip+0x285611],0xdeadbeef        # 297784 <hash>
   12173:	xor    DWORD PTR [rip+0x26b3a6],0x1        # 27d520 <white_to_move>
   1217a:	cmp    DWORD PTR [rip+0x26b97f],0x0        # 27db00 <time_exit>
   12181:	mov    DWORD PTR [rip+0x281559],eax        # 2936e0 <ep_square>
   12187:	jne    11fe8 <search+0x2f8>
   1218d:	add    DWORD PTR [rip+0x2855d8],0x1        # 29776c <NTries>
   12194:	cmp    r14d,ebp
   12197:	jge    12fa3 <search+0x12b3>
   1219d:	cmp    r14d,0xfff0be24
   121a4:	jge    121c4 <search+0x4d4>
   121a6:	add    DWORD PTR [rip+0x285597],0x1        # 297744 <TExt>
   121ad:	add    ebx,0x1
   121b0:	add    DWORD PTR [rsp+0x4],0x1
   121b5:	add    DWORD PTR [rip+0x5570c],0x1        # 678c8 <ext_onerep>
   121bc:	mov    DWORD PTR [rsp+0x54],0x1
   121c4:	cmp    DWORD PTR [rip+0x2695f5],0x4        # 27b7c0 <Variant>
   121cb:	jne    12610 <search+0x920>
   121d1:	mov    edx,DWORD PTR [rip+0x285589]        # 297760 <ply>
   121d7:	mov    eax,DWORD PTR [rip+0x28556b]        # 297748 <phase>
   121dd:	nop    DWORD PTR [rax]
   121e0:	cmp    eax,0x2
   121e3:	je     12728 <search+0xa38>
   121e9:	mov    eax,DWORD PTR [rip+0x2695d1]        # 27b7c0 <Variant>
   121ef:	cmp    eax,0x3
   121f2:	je     12728 <search+0xa38>
   121f8:	mov    ecx,DWORD PTR [rip+0x552d2]        # 674d0 <cfg_futprune>
   121fe:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12206:	mov    DWORD PTR [rsp+0x18],ecx
   1220a:	test   ecx,ecx
   1220c:	je     122a0 <search+0x5b0>
   12212:	mov    ecx,DWORD PTR [rsp+0x4]
   12216:	mov    r8d,DWORD PTR [rip+0x26b303]        # 27d520 <white_to_move>
   1221d:	mov    esi,DWORD PTR [rip+0x222bd]        # 344e0 <Material>
   12223:	test   ecx,ecx
   12225:	mov    DWORD PTR [rsp+0x18],r8d
   1222a:	sete   dil
   1222e:	cmp    ebx,0x3
   12231:	sete   cl
   12234:	and    ecx,edi
   12236:	test   r8d,r8d
   12239:	jne    12bdc <search+0xeec>
   1223f:	test   cl,cl
   12241:	je     12d2b <search+0x103b>
   12247:	mov    ecx,0x384
   1224c:	sub    ecx,esi
   1224e:	cmp    r15d,ecx
   12251:	jge    12d52 <search+0x1062>
   12257:	xor    ecx,ecx
   12259:	mov    ebx,0x3
   1225e:	neg    esi
   12260:	cmp    eax,0x2
   12263:	mov    edi,0xc8
   12268:	mov    eax,0x96
   1226d:	cmovne eax,edi
   12270:	test   cl,cl
   12272:	je     122a0 <search+0x5b0>
   12274:	add    eax,esi
   12276:	mov    ebx,DWORD PTR [rsp+0x10]
   1227a:	cmp    r15d,eax
   1227d:	cmovge ebx,eax
   12280:	mov    eax,0x1
   12285:	cmovl  eax,DWORD PTR [rsp+0x18]
   1228a:	mov    DWORD PTR [rsp+0x18],eax
   1228e:	mov    DWORD PTR [rsp+0x10],ebx
   12292:	mov    ebx,0x1
   12297:	nop    WORD PTR [rax+rax*1+0x0]
   122a0:	mov    r14d,DWORD PTR [rsp+0xc]
   122a5:	test   r14d,r14d
   122a8:	jle    127c0 <search+0xad0>
   122ae:	mov    r12d,DWORD PTR [rsp+0xc]
   122b3:	lea    r10,[rsp+0x60]
   122b8:	lea    r9,[rsp+0x1060]
   122c0:	mov    r8d,DWORD PTR [rsp+0x5c]
   122c5:	mov    rsi,r10
   122c8:	mov    rdi,r9
   122cb:	mov    QWORD PTR [rsp+0x38],r10
   122d0:	lea    rdx,[rsp+0x860]
   122d8:	mov    ecx,r12d
   122db:	mov    QWORD PTR [rsp+0x30],r9
   122e0:	call   10f60 <order_moves>
   122e5:	lea    eax,[r12-0x1]
   122ea:	mov    r14d,DWORD PTR [rsp+0x10]
   122ef:	mov    r9,QWORD PTR [rsp+0x30]
   122f4:	mov    DWORD PTR [rsp+0x20],eax
   122f8:	mov    eax,DWORD PTR [rsp+0x18]
   122fc:	mov    r10,QWORD PTR [rsp+0x38]
   12301:	mov    DWORD PTR [rsp+0xc],0x1
   12309:	xor    eax,0x1
   1230c:	mov    DWORD PTR [rsp+0x44],0xffffffff
   12314:	and    eax,0x1
   12317:	mov    DWORD PTR [rsp+0x2c],0x1
   1231f:	mov    DWORD PTR [rsp+0x1c],0xfff0bdc0
   12327:	mov    BYTE PTR [rsp+0x4f],al
   1232b:	mov    DWORD PTR [rsp+0x4],r14d
   12330:	mov    DWORD PTR [rsp+0x40],ebp
   12334:	mov    DWORD PTR [rsp+0x28],r15d
   12339:	mov    DWORD PTR [rsp+0x48],r15d
   1233e:	mov    r15,r9
   12341:	mov    DWORD PTR [rsp+0x24],ebx
   12345:	mov    rbx,r10
   12348:	mov    esi,DWORD PTR [rsp+0x20]
   1234c:	xor    eax,eax
   1234e:	mov    r14d,0xfff0bdc0
   12354:	mov    ecx,0xfff0bdc0
   12359:	jmp    12363 <search+0x673>
   1235b:	nop    DWORD PTR [rax+rax*1+0x0]
   12360:	mov    rax,rdx
   12363:	mov    edx,DWORD PTR [rbx+rax*4]
   12366:	cmp    edx,ecx
   12368:	jle    1236f <search+0x67f>
   1236a:	mov    r14d,eax
   1236d:	mov    ecx,edx
   1236f:	lea    rdx,[rax+0x1]
   12373:	cmp    rsi,rax
   12376:	jne    12360 <search+0x670>
   12378:	cmp    r14d,0xfff0bdc0
   1237f:	je     126b8 <search+0x9c8>
   12385:	movsxd rbp,r14d
   12388:	mov    esi,r14d
   1238b:	mov    rdi,r15
   1238e:	mov    DWORD PTR [rsp+rbp*4+0x60],0xfff0bdc0
   12396:	call   8e00 <make>
   1239b:	mov    eax,DWORD PTR [rip+0x2853bf]        # 297760 <ply>
   123a1:	mov    rdi,r15
   123a4:	mov    edx,DWORD PTR [rip+0x572f6]        # 696a0 <move_number>
   123aa:	mov    ecx,DWORD PTR [rip+0x2853d4]        # 297784 <hash>
   123b0:	lea    rsi,[rip+0x268a89]        # 27ae40 <hash_history>
   123b7:	add    edx,eax
   123b9:	sub    eax,0x1
   123bc:	sub    edx,0x1
   123bf:	cdqe   
   123c1:	movsxd rdx,edx
   123c4:	mov    DWORD PTR [rsi+rdx*4],ecx
   123c7:	lea    rdx,[rax+rax*2]
   123cb:	lea    rax,[rip+0x26952e]        # 27b900 <path>
   123d2:	mov    esi,r14d
   123d5:	lea    rdx,[rax+rdx*8]
   123d9:	lea    rax,[rbp+rbp*2+0x0]
   123de:	shl    rax,0x3
   123e2:	lea    rcx,[rsp+0x4070]
   123ea:	movdqu xmm1,XMMWORD PTR [rsp+rax*1+0x1060]
   123f3:	lea    r12,[rcx+rax*1]
   123f7:	mov    rax,QWORD PTR [r12-0x3000]
   123ff:	movups XMMWORD PTR [rdx],xmm1
   12402:	mov    QWORD PTR [rdx+0x10],rax
   12406:	mov    edx,DWORD PTR [rsp+0x8]
   1240a:	call   6f70 <check_legal>
   1240f:	test   eax,eax
   12411:	jne    127f0 <search+0xb00>
   12417:	xor    r12d,r12d
   1241a:	mov    esi,r14d
   1241d:	mov    rdi,r15
   12420:	mov    DWORD PTR [rsp+0x30],eax
   12424:	call   ae30 <unmake>
   12429:	mov    esi,DWORD PTR [rip+0x26b6d1]        # 27db00 <time_exit>
   1242f:	test   esi,esi
   12431:	jne    11fe8 <search+0x2f8>
   12437:	mov    ecx,DWORD PTR [rsp+0x1c]
   1243b:	cmp    DWORD PTR [rsp+0x28],ecx
   1243f:	mov    eax,DWORD PTR [rsp+0x30]
   12443:	jge    1244e <search+0x75e>
   12445:	test   r12b,r12b
   12448:	jne    12938 <search+0xc48>
   1244e:	test   eax,eax
   12450:	mov    eax,0x0
   12455:	cmove  eax,DWORD PTR [rsp+0xc]
   1245a:	mov    DWORD PTR [rsp+0xc],eax
   1245e:	jmp    12348 <search+0x658>
   12463:	nop    DWORD PTR [rax+rax*1+0x0]
   12468:	mov    edx,0x12c
   1246d:	mov    esi,ebp
   1246f:	mov    edi,r15d
   12472:	mov    DWORD PTR [rip+0x269348],0x1        # 27b7c4 <captures>
   1247c:	sub    edx,eax
   1247e:	call   11790 <qsearch>
   12483:	mov    DWORD PTR [rip+0x269337],0x0        # 27b7c4 <captures>
   1248d:	mov    r14d,eax
   12490:	jmp    11d69 <search+0x79>
   12495:	nop    DWORD PTR [rax]
   12498:	cmp    eax,0x4
   1249b:	jne    1207a <search+0x38a>
   124a1:	mov    DWORD PTR [rsp+0x5c],0xffffffff
   124a9:	mov    DWORD PTR [rsp+0x54],0x0
   124b1:	jmp    1208c <search+0x39c>
   124b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   124c0:	call   16670 <suicide_eval>
   124c5:	mov    r14d,eax
   124c8:	jmp    11d69 <search+0x79>
   124cd:	nop    DWORD PTR [rax]
   124d0:	mov    DWORD PTR [rsp+0x4],0x0
   124d8:	jmp    11f68 <search+0x278>
   124dd:	nop    DWORD PTR [rax]
   124e0:	mov    BYTE PTR [rsp+0xc],r10b
   124e5:	call   6530 <losers_eval>
   124ea:	movzx  r10d,BYTE PTR [rsp+0xc]
   124f0:	mov    ecx,eax
   124f2:	sar    ecx,0x1f
   124f5:	mov    edx,ecx
   124f7:	xor    edx,eax
   124f9:	sub    edx,ecx
   124fb:	cmp    edx,0xf4240
   12501:	je     12c63 <search+0xf73>
   12507:	lea    r9,[rsp+0x1060]
   1250f:	mov    BYTE PTR [rsp+0x1c],r10b
   12514:	mov    rdi,r9
   12517:	mov    QWORD PTR [rsp+0x10],r9
   1251c:	mov    DWORD PTR [rip+0x26929e],0x1        # 27b7c4 <captures>
   12526:	call   9b80 <gen>
   1252b:	mov    eax,DWORD PTR [rip+0x2c1d7]        # 3e708 <numb_moves>
   12531:	mov    r9,QWORD PTR [rsp+0x10]
   12536:	mov    DWORD PTR [rip+0x269284],0x0        # 27b7c4 <captures>
   12540:	movzx  r10d,BYTE PTR [rsp+0x1c]
   12546:	test   eax,eax
   12548:	mov    DWORD PTR [rsp+0xc],eax
   1254c:	jle    12c16 <search+0xf26>
   12552:	xor    r14d,r14d
   12555:	mov    BYTE PTR [rsp+0x10],r10b
   1255a:	xor    ecx,ecx
   1255c:	mov    DWORD PTR [rsp+0x24],ebx
   12560:	mov    ebx,r14d
   12563:	mov    r14d,DWORD PTR [rsp+0x8]
   12568:	mov    DWORD PTR [rsp+0x1c],r15d
   1256d:	mov    r15d,ecx
   12570:	mov    DWORD PTR [rsp+0x20],ebp
   12574:	mov    rbp,r9
   12577:	mov    DWORD PTR [rsp+0x28],r12d
   1257c:	mov    r12d,eax
   1257f:	nop
   12580:	mov    esi,ebx
   12582:	mov    rdi,rbp
   12585:	call   8e00 <make>
   1258a:	mov    esi,ebx
   1258c:	mov    edx,r14d
   1258f:	mov    rdi,rbp
   12592:	call   6f70 <check_legal>
   12597:	mov    esi,ebx
   12599:	mov    rdi,rbp
   1259c:	cmp    eax,0x1
   1259f:	sbb    r15d,0xffffffff
   125a3:	add    ebx,0x1
   125a6:	call   ae30 <unmake>
   125ab:	cmp    ebx,r12d
   125ae:	lea    r11,[rip+0x5534b]        # 67900 <singular>
   125b5:	jne    12580 <search+0x890>
   125b7:	mov    eax,r15d
   125ba:	mov    r9,rbp
   125bd:	movzx  r10d,BYTE PTR [rsp+0x10]
   125c3:	mov    ebx,DWORD PTR [rsp+0x24]
   125c7:	mov    r15d,DWORD PTR [rsp+0x1c]
   125cc:	mov    r12d,DWORD PTR [rsp+0x28]
   125d1:	mov    ebp,DWORD PTR [rsp+0x20]
   125d5:	test   eax,eax
   125d7:	je     12c16 <search+0xf26>
   125dd:	mov    eax,DWORD PTR [rip+0x2691dd]        # 27b7c0 <Variant>
   125e3:	jmp    120ad <search+0x3bd>
   125e8:	nop    DWORD PTR [rax+rax*1+0x0]
   125f0:	cmp    edx,0x1
   125f3:	jne    1260b <search+0x91b>
   125f5:	add    DWORD PTR [rip+0x285148],0x1        # 297744 <TExt>
   125fc:	add    ebx,0x1
   125ff:	add    DWORD PTR [rsp+0x4],0x1
   12604:	add    DWORD PTR [rip+0x552bd],0x1        # 678c8 <ext_onerep>
   1260b:	cmp    eax,0x4
   1260e:	je     1263c <search+0x94c>
   12610:	lea    r9,[rsp+0x1060]
   12618:	mov    BYTE PTR [rsp+0x18],r10b
   1261d:	mov    rdi,r9
   12620:	call   9b80 <gen>
   12625:	mov    eax,DWORD PTR [rip+0x2c0dd]        # 3e708 <numb_moves>
   1262b:	movzx  r10d,BYTE PTR [rsp+0x18]
   12631:	lea    r11,[rip+0x552c8]        # 67900 <singular>
   12638:	mov    DWORD PTR [rsp+0xc],eax
   1263c:	mov    edi,DWORD PTR [rip+0x54f3a]        # 6757c <cfg_onerep>
   12642:	test   edi,edi
   12644:	je     1264f <search+0x95f>
   12646:	test   r10b,r10b
   12649:	jne    12b0b <search+0xe1b>
   1264f:	xor    r12d,r12d
   12652:	movsxd rdx,DWORD PTR [rip+0x285107]        # 297760 <ply>
   12659:	mov    eax,DWORD PTR [rip+0x2850e9]        # 297748 <phase>
   1265f:	cmp    edx,0x12b
   12665:	jg     121e0 <search+0x4f0>
   1266b:	cmp    DWORD PTR [rip+0x26914e],0x3        # 27b7c0 <Variant>
   12672:	jne    1267f <search+0x98f>
   12674:	cmp    DWORD PTR [rsp+0xc],0x1
   12679:	je     12ca9 <search+0xfb9>
   1267f:	cmp    r12d,0x1
   12683:	jne    121e0 <search+0x4f0>
   12689:	lea    ecx,[rdx-0x2]
   1268c:	movsxd rcx,ecx
   1268f:	mov    esi,DWORD PTR [r11+rcx*4]
   12693:	test   esi,esi
   12695:	jne    121e0 <search+0x4f0>
   1269b:	movsxd rcx,edx
   1269e:	add    DWORD PTR [rip+0x55223],0x1        # 678c8 <ext_onerep>
   126a5:	add    ebx,0x1
   126a8:	mov    DWORD PTR [r11+rcx*4],0x1
   126b0:	jmp    121e0 <search+0x4f0>
   126b5:	nop    DWORD PTR [rax]
   126b8:	mov    ecx,DWORD PTR [rsp+0x2c]
   126bc:	mov    r14d,DWORD PTR [rsp+0x4]
   126c1:	mov    r15d,DWORD PTR [rsp+0x48]
   126c6:	mov    ebp,DWORD PTR [rsp+0x40]
   126ca:	mov    ebx,DWORD PTR [rsp+0x24]
   126ce:	test   ecx,ecx
   126d0:	je     12740 <search+0xa50>
   126d2:	mov    eax,DWORD PTR [rip+0x2690e8]        # 27b7c0 <Variant>
   126d8:	sub    eax,0x3
   126db:	cmp    eax,0x1
   126de:	jbe    12c4f <search+0xf5f>
   126e4:	call   7ca0 <in_check>
   126e9:	test   eax,eax
   126eb:	je     11fcd <search+0x2dd>
   126f1:	mov    eax,DWORD PTR [rip+0x285069]        # 297760 <ply>
   126f7:	mov    r8d,DWORD PTR [rsp+0x54]
   126fc:	mov    r9d,ebx
   126ff:	xor    ecx,ecx
   12701:	mov    edx,ebp
   12703:	mov    esi,r15d
   12706:	lea    edi,[rax-0xf4240]
   1270c:	call   16870 <StoreTT>
   12711:	mov    eax,DWORD PTR [rip+0x285049]        # 297760 <ply>
   12717:	lea    r14d,[rax-0xf4240]
   1271e:	jmp    11d69 <search+0x79>
   12723:	nop    DWORD PTR [rax+rax*1+0x0]
   12728:	mov    DWORD PTR [rsp+0x18],0x0
   12730:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12738:	jmp    122a0 <search+0x5b0>
   1273d:	nop    DWORD PTR [rax]
   12740:	cmp    DWORD PTR [rip+0x26b3bd],0x64        # 27db04 <fifty>
   12747:	jg     11fe8 <search+0x2f8>
   1274d:	mov    ecx,DWORD PTR [rsp+0x44]
   12751:	mov    eax,0x1f4
   12756:	cmp    ecx,0xffffffff
   12759:	cmovne eax,ecx
   1275c:	mov    DWORD PTR [rsp+0x44],eax
   12760:	cmp    r14d,r15d
   12763:	jg     12bb2 <search+0xec2>
   12769:	mov    edx,DWORD PTR [rsp+0x18]
   1276d:	test   edx,edx
   1276f:	jne    11d69 <search+0x79>
   12775:	mov    r8d,DWORD PTR [rsp+0x54]
   1277a:	mov    r9d,ebx
   1277d:	mov    ecx,eax
   1277f:	mov    edx,ebp
   12781:	mov    esi,r15d
   12784:	mov    edi,r14d
   12787:	call   16870 <StoreTT>
   1278c:	jmp    11d69 <search+0x79>
   12791:	nop    DWORD PTR [rax+0x0]
   12798:	mov    r14d,DWORD PTR [rsp+0x50]
   1279d:	cmp    r14d,r15d
   127a0:	jg     1207a <search+0x38a>
   127a6:	jmp    11d69 <search+0x79>
   127ab:	nop    DWORD PTR [rax+rax*1+0x0]
   127b0:	mov    r14d,DWORD PTR [rsp+0x50]
   127b5:	jmp    11d69 <search+0x79>
   127ba:	nop    WORD PTR [rax+rax*1+0x0]
   127c0:	mov    r14d,0xf4240
   127c6:	mov    edi,r14d
   127c9:	sub    edi,edx
   127cb:	mov    r8d,DWORD PTR [rsp+0x54]
   127d0:	mov    r9d,ebx
   127d3:	xor    ecx,ecx
   127d5:	mov    edx,ebp
   127d7:	mov    esi,r15d
   127da:	call   16870 <StoreTT>
   127df:	sub    r14d,DWORD PTR [rip+0x284f7a]        # 297760 <ply>
   127e6:	jmp    11d69 <search+0x79>
   127eb:	nop    DWORD PTR [rax+rax*1+0x0]
   127f0:	mov    esi,r14d
   127f3:	mov    rdi,r15
   127f6:	call   7d10 <f_in_check>
   127fb:	lea    rsi,[rip+0x555be]        # 67dc0 <checks>
   12802:	mov    edx,eax
   12804:	movsxd rax,DWORD PTR [rip+0x284f55]        # 297760 <ply>
   1280b:	mov    DWORD PTR [rsi+rax*4],edx
   1280e:	test   edx,edx
   12810:	jne    12b97 <search+0xea7>
   12816:	mov    eax,DWORD PTR [rip+0x268fa4]        # 27b7c0 <Variant>
   1281c:	sub    eax,0x2
   1281f:	cmp    eax,0x2
   12822:	ja     1282f <search+0xb3f>
   12824:	cmp    DWORD PTR [rsp+0x24],0x2
   12829:	jle    128f6 <search+0xc06>
   1282f:	xor    ecx,ecx
   12831:	lea    rax,[rbp+rbp*2+0x0]
   12836:	mov    r12d,DWORD PTR [rsp+rax*8+0x1060]
   1283e:	test   r12d,r12d
   12841:	jne    12a15 <search+0xd25>
   12847:	mov    esi,DWORD PTR [rsp+0x8]
   1284b:	test   esi,esi
   1284d:	sete   al
   12850:	or     esi,edx
   12852:	jne    1285f <search+0xb6f>
   12854:	cmp    DWORD PTR [rsp+0x24],0x1
   12859:	jg     129f6 <search+0xd06>
   1285f:	cmp    DWORD PTR [rsp+0x24],0x1
   12864:	jne    12a15 <search+0xd25>
   1286a:	test   al,al
   1286c:	je     12a15 <search+0xd25>
   12872:	mov    r10d,DWORD PTR [rip+0x54c5f]        # 674d8 <cfg_cutdrop>
   12879:	test   r10d,r10d
   1287c:	je     12a15 <search+0xd25>
   12882:	mov    r9d,DWORD PTR [rip+0x26ac97]        # 27d520 <white_to_move>
   12889:	lea    rax,[rbp+rbp*2+0x0]
   1288e:	mov    DWORD PTR [rsp+0x30],ecx
   12892:	mov    DWORD PTR [rsp+0x2c],edx
   12896:	mov    edi,DWORD PTR [rsp+rax*8+0x1064]
   1289d:	test   r9d,r9d
   128a0:	je     12ea2 <search+0x11b2>
   128a6:	mov    esi,0x1
   128ab:	call   3280 <calc_attackers>
   128b0:	xor    esi,esi
   128b2:	mov    r12d,eax
   128b5:	imul   rax,rbp,0x18
   128b9:	mov    edi,DWORD PTR [rsp+rax*1+0x1064]
   128c0:	call   3280 <calc_attackers>
   128c5:	mov    edx,DWORD PTR [rsp+0x2c]
   128c9:	mov    ecx,DWORD PTR [rsp+0x30]
   128cd:	sub    r12d,eax
   128d0:	test   r12d,r12d
   128d3:	jle    12a15 <search+0xd25>
   128d9:	add    DWORD PTR [rip+0x567b4],0x1        # 69094 <drop_cuts>
   128e0:	add    DWORD PTR [rip+0x562dd],0x1        # 68bc4 <razor_material>
   128e7:	xor    eax,eax
   128e9:	mov    DWORD PTR [rsp+0x2c],0x0
   128f1:	jmp    12417 <search+0x727>
   128f6:	movsxd rax,DWORD PTR [r12-0x300c]
   128fe:	lea    rcx,[rip+0x26afbb]        # 27d8c0 <board>
   12905:	mov    esi,DWORD PTR [rcx+rax*4]
   12908:	cmp    esi,0x1
   1290b:	je     12f07 <search+0x1217>
   12911:	xor    ecx,ecx
   12913:	cmp    esi,0x2
   12916:	jne    12831 <search+0xb41>
   1291c:	lea    rcx,[rip+0x9d1d]        # 1c640 <Xrank>
   12923:	cmp    DWORD PTR [rcx+rax*4],0x3
   12927:	setle  cl
   1292a:	movzx  ecx,cl
   1292d:	jmp    12831 <search+0xb41>
   12932:	nop    WORD PTR [rax+rax*1+0x0]
   12938:	cmp    DWORD PTR [rsp+0x40],ecx
   1293c:	jle    12df2 <search+0x1102>
   12942:	movsxd r11,DWORD PTR [rip+0x284e17]        # 297760 <ply>
   12949:	lea    rsi,[rbp+rbp*2+0x0]
   1294e:	lea    rdx,[rip+0x58f6b]        # 6b8c0 <pv>
   12955:	shl    rsi,0x3
   12959:	movdqu xmm2,XMMWORD PTR [rsp+rsi*1+0x1060]
   12962:	imul   rdi,r11,0x1c38
   12969:	mov    rsi,QWORD PTR [rsp+rsi*1+0x1070]
   12971:	lea    r9,[rdx+rdi*1]
   12975:	mov    QWORD PTR [r9+0x10],rsi
   12979:	movups XMMWORD PTR [r9],xmm2
   1297d:	lea    r9d,[r11+0x1]
   12981:	movsxd rsi,r9d
   12984:	mov    ebp,DWORD PTR [r13+rsi*4+0x0]
   12989:	cmp    r9d,ebp
   1298c:	jge    129df <search+0xcef>
   1298e:	mov    r8d,ebp
   12991:	imul   rsi,rsi,0x1c20
   12998:	lea    rdx,[rdx+rdi*1+0x18]
   1299d:	sub    r8d,r11d
   129a0:	mov    ecx,r8d
   129a3:	sub    ecx,0x2
   129a6:	lea    r9,[rcx+rcx*2]
   129aa:	lea    rcx,[rip+0x58f3f]        # 6b8f0 <pv+0x30>
   129b1:	add    rcx,rdi
   129b4:	imul   rdi,r11,0xffffffffffffe3e0
   129bb:	lea    r9,[rcx+r9*8]
   129bf:	nop
   129c0:	lea    rcx,[rdi+rdx*1]
   129c4:	add    rdx,0x18
   129c8:	movdqu xmm0,XMMWORD PTR [rcx+rsi*1]
   129cd:	movups XMMWORD PTR [rdx-0x18],xmm0
   129d1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x10]
   129d6:	mov    QWORD PTR [rdx-0x8],rcx
   129da:	cmp    rdx,r9
   129dd:	jne    129c0 <search+0xcd0>
   129df:	mov    ecx,DWORD PTR [rsp+0x1c]
   129e3:	mov    DWORD PTR [r13+r11*4+0x0],ebp
   129e8:	mov    DWORD PTR [rsp+0x44],r14d
   129ed:	mov    DWORD PTR [rsp+0x28],ecx
   129f1:	jmp    1244e <search+0x75e>
   129f6:	mov    r11d,DWORD PTR [rip+0x57173]        # 69b70 <searching_pv>
   129fd:	test   r11d,r11d
   12a00:	jne    12a15 <search+0xd25>
   12a02:	cmp    DWORD PTR [rip+0x54b6f],0x0        # 67578 <cfg_razordrop>
   12a09:	je     12a15 <search+0xd25>
   12a0b:	add    DWORD PTR [rip+0x54eca],0x1        # 678dc <razor_drop>
   12a12:	sub    ecx,0x1
   12a15:	cmp    BYTE PTR [rsp+0x4f],0x0
   12a1a:	jne    12a7b <search+0xd8b>
   12a1c:	test   edx,edx
   12a1e:	jne    12a7b <search+0xd8b>
   12a20:	lea    rdx,[rbp+rbp*2+0x0]
   12a25:	lea    rax,[rip+0x11b54]        # 24580 <material>
   12a2c:	movsxd rdi,DWORD PTR [rsp+rdx*8+0x1068]
   12a34:	lea    rsi,[rdx*8+0x0]
   12a3c:	mov    edx,DWORD PTR [rax+rdi*4]
   12a3f:	mov    r8d,DWORD PTR [rax+rdi*4]
   12a43:	mov    edi,DWORD PTR [rip+0x268d77]        # 27b7c0 <Variant>
   12a49:	sar    edx,0x1f
   12a4c:	xor    r8d,edx
   12a4f:	mov    eax,r8d
   12a52:	sub    eax,edx
   12a54:	lea    edx,[rdi-0x2]
   12a57:	and    edx,0xfffffffd
   12a5a:	lea    edi,[rax+rax*1]
   12a5d:	cmovne eax,edi
   12a60:	add    eax,DWORD PTR [rsp+0x10]
   12a64:	cmp    eax,DWORD PTR [rsp+0x28]
   12a68:	jg     12a7b <search+0xd8b>
   12a6a:	mov    r8d,DWORD PTR [rsp+rsi*1+0x106c]
   12a72:	test   r8d,r8d
   12a75:	je     128e0 <search+0xbf0>
   12a7b:	mov    eax,DWORD PTR [rsp+0x24]
   12a7f:	add    eax,ecx
   12a81:	cmp    DWORD PTR [rsp+0xc],0x1
   12a86:	je     12c7c <search+0xf8c>
   12a8c:	mov    edi,DWORD PTR [rsp+0x28]
   12a90:	lea    edx,[rax-0x1]
   12a93:	xor    ecx,ecx
   12a95:	mov    DWORD PTR [rsp+0x30],edx
   12a99:	mov    esi,edi
   12a9b:	not    edi
   12a9d:	neg    esi
   12a9f:	mov    DWORD PTR [rsp+0x2c],esi
   12aa3:	call   11cf0 <search>
   12aa8:	add    DWORD PTR [rip+0x56be9],0x1        # 69698 <PVS>
   12aaf:	mov    ecx,eax
   12ab1:	neg    ecx
   12ab3:	mov    DWORD PTR [rsp+0x1c],ecx
   12ab7:	cmp    DWORD PTR [rsp+0x4],ecx
   12abb:	jge    12ae2 <search+0xdf2>
   12abd:	mov    edi,DWORD PTR [rip+0x26b03d]        # 27db00 <time_exit>
   12ac3:	mov    esi,DWORD PTR [rsp+0x2c]
   12ac7:	mov    edx,DWORD PTR [rsp+0x30]
   12acb:	test   edi,edi
   12acd:	sete   r12b
   12ad1:	cmp    eax,0xc350
   12ad6:	setne  al
   12ad9:	and    r12b,al
   12adc:	jne    12db2 <search+0x10c2>
   12ae2:	mov    eax,DWORD PTR [rsp+0x4]
   12ae6:	mov    ecx,DWORD PTR [rsp+0x1c]
   12aea:	mov    DWORD PTR [rsp+0x2c],0x0
   12af2:	mov    r12d,0x1
   12af8:	cmp    eax,ecx
   12afa:	cmovl  eax,ecx
   12afd:	mov    DWORD PTR [rsp+0x4],eax
   12b01:	mov    eax,0x1
   12b06:	jmp    1241a <search+0x72a>
   12b0b:	mov    eax,DWORD PTR [rsp+0xc]
   12b0f:	test   eax,eax
   12b11:	jle    1264f <search+0x95f>
   12b17:	xor    r14d,r14d
   12b1a:	lea    r9,[rsp+0x1060]
   12b22:	mov    DWORD PTR [rsp+0x18],r15d
   12b27:	xor    r12d,r12d
   12b2a:	mov    DWORD PTR [rsp+0x10],ebp
   12b2e:	mov    r15d,eax
   12b31:	mov    rbp,r9
   12b34:	mov    DWORD PTR [rsp+0x1c],ebx
   12b38:	mov    ebx,r14d
   12b3b:	mov    r14d,DWORD PTR [rsp+0x8]
   12b40:	jmp    12b4e <search+0xe5e>
   12b42:	nop    WORD PTR [rax+rax*1+0x0]
   12b48:	cmp    r12d,0x1
   12b4c:	jg     12b85 <search+0xe95>
   12b4e:	mov    esi,ebx
   12b50:	mov    rdi,rbp
   12b53:	call   8e00 <make>
   12b58:	mov    esi,ebx
   12b5a:	mov    edx,r14d
   12b5d:	mov    rdi,rbp
   12b60:	call   6f70 <check_legal>
   12b65:	mov    esi,ebx
   12b67:	mov    rdi,rbp
   12b6a:	cmp    eax,0x1
   12b6d:	sbb    r12d,0xffffffff
   12b71:	add    ebx,0x1
   12b74:	call   ae30 <unmake>
   12b79:	cmp    ebx,r15d
   12b7c:	lea    r11,[rip+0x54d7d]        # 67900 <singular>
   12b83:	jl     12b48 <search+0xe58>
   12b85:	mov    r15d,DWORD PTR [rsp+0x18]
   12b8a:	mov    ebp,DWORD PTR [rsp+0x10]
   12b8e:	mov    ebx,DWORD PTR [rsp+0x1c]
   12b92:	jmp    12652 <search+0x962>
   12b97:	mov    ecx,DWORD PTR [r12-0x3010]
   12b9f:	test   ecx,ecx
   12ba1:	je     12847 <search+0xb57>
   12ba7:	mov    eax,DWORD PTR [rsp+0x24]
   12bab:	xor    ecx,ecx
   12bad:	jmp    12a81 <search+0xd91>
   12bb2:	mov    eax,DWORD PTR [rsp+0x18]
   12bb6:	mov    r8d,DWORD PTR [rsp+0x54]
   12bbb:	mov    r9d,ebx
   12bbe:	mov    ecx,DWORD PTR [rsp+0x44]
   12bc2:	test   eax,eax
   12bc4:	jne    12cd8 <search+0xfe8>
   12bca:	mov    edx,ebp
   12bcc:	mov    esi,r15d
   12bcf:	mov    edi,r14d
   12bd2:	call   16870 <StoreTT>
   12bd7:	jmp    11d69 <search+0x79>
   12bdc:	test   cl,cl
   12bde:	je     12cef <search+0xfff>
   12be4:	lea    edi,[rsi+0x384]
   12bea:	mov    ebx,0x3
   12bef:	cmp    r15d,edi
   12bf2:	jge    12cf9 <search+0x1009>
   12bf8:	cmp    ebx,0x1
   12bfb:	mov    DWORD PTR [rsp+0x18],0x0
   12c03:	sete   dil
   12c07:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12c0f:	and    ecx,edi
   12c11:	jmp    12260 <search+0x570>
   12c16:	mov    rdi,r9
   12c19:	mov    BYTE PTR [rsp+0x10],r10b
   12c1e:	mov    DWORD PTR [rip+0x268b9c],0x0        # 27b7c4 <captures>
   12c28:	call   9b80 <gen>
   12c2d:	mov    eax,DWORD PTR [rip+0x2bad5]        # 3e708 <numb_moves>
   12c33:	movzx  r10d,BYTE PTR [rsp+0x10]
   12c39:	lea    r11,[rip+0x54cc0]        # 67900 <singular>
   12c40:	mov    DWORD PTR [rsp+0xc],eax
   12c44:	mov    eax,DWORD PTR [rip+0x268b76]        # 27b7c0 <Variant>
   12c4a:	jmp    120ad <search+0x3bd>
   12c4f:	mov    r14d,0xf4240
   12c55:	mov    edi,r14d
   12c58:	sub    edi,DWORD PTR [rip+0x284b02]        # 297760 <ply>
   12c5e:	jmp    127cb <search+0xadb>
   12c63:	mov    edx,DWORD PTR [rip+0x284af7]        # 297760 <ply>
   12c69:	mov    r14d,eax
   12c6c:	sub    r14d,edx
   12c6f:	add    edx,eax
   12c71:	test   eax,eax
   12c73:	cmovle r14d,edx
   12c77:	jmp    11d69 <search+0x79>
   12c7c:	mov    eax,DWORD PTR [rsp+0x24]
   12c80:	mov    esi,DWORD PTR [rsp+0x28]
   12c84:	mov    edi,DWORD PTR [rsp+0x40]
   12c88:	lea    edx,[rcx+rax*1-0x1]
   12c8c:	neg    esi
   12c8e:	xor    ecx,ecx
   12c90:	neg    edi
   12c92:	call   11cf0 <search>
   12c97:	add    DWORD PTR [rip+0x26ac06],0x1        # 27d8a4 <FULL>
   12c9e:	neg    eax
   12ca0:	mov    DWORD PTR [rsp+0x1c],eax
   12ca4:	jmp    12ae2 <search+0xdf2>
   12ca9:	add    DWORD PTR [rip+0x54c18],0x1        # 678c8 <ext_onerep>
   12cb0:	add    ebx,0x1
   12cb3:	mov    DWORD PTR [r11+rdx*4],0x1
   12cbb:	mov    DWORD PTR [rsp+0xc],0x1
   12cc3:	mov    DWORD PTR [rsp+0x18],0x0
   12ccb:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12cd3:	jmp    122ae <search+0x5be>
   12cd8:	mov    edx,0xfff0bdc0
   12cdd:	mov    esi,0xfff0bdc0
   12ce2:	mov    edi,r14d
   12ce5:	call   16870 <StoreTT>
   12cea:	jmp    11d69 <search+0x79>
   12cef:	cmp    ebx,0x2
   12cf2:	jne    12d24 <search+0x1034>
   12cf4:	test   dil,dil
   12cf7:	je     12d24 <search+0x1034>
   12cf9:	lea    ebx,[rsi+0x1f4]
   12cff:	xor    ecx,ecx
   12d01:	mov    DWORD PTR [rsp+0x10],ebx
   12d05:	cmp    r15d,ebx
   12d08:	jge    12d79 <search+0x1089>
   12d0a:	mov    DWORD PTR [rsp+0x18],0x0
   12d12:	mov    ebx,0x2
   12d17:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12d1f:	jmp    12260 <search+0x570>
   12d24:	mov    ecx,edi
   12d26:	jmp    12bf8 <search+0xf08>
   12d2b:	cmp    ebx,0x2
   12d2e:	jne    12d9d <search+0x10ad>
   12d30:	test   dil,dil
   12d33:	je     12d9d <search+0x10ad>
   12d35:	mov    edi,0x1f4
   12d3a:	sub    edi,esi
   12d3c:	mov    DWORD PTR [rsp+0x10],edi
   12d40:	cmp    r15d,edi
   12d43:	jl     12d8b <search+0x109b>
   12d45:	mov    DWORD PTR [rsp+0x18],0x1
   12d4d:	jmp    1225e <search+0x56e>
   12d52:	mov    ecx,0x1f4
   12d57:	sub    ecx,esi
   12d59:	cmp    r15d,ecx
   12d5c:	mov    DWORD PTR [rsp+0x10],ecx
   12d60:	mov    ecx,0x0
   12d65:	jl     12d8b <search+0x109b>
   12d67:	mov    DWORD PTR [rsp+0x18],0x1
   12d6f:	mov    ebx,0x2
   12d74:	jmp    1225e <search+0x56e>
   12d79:	mov    DWORD PTR [rsp+0x18],0x1
   12d81:	mov    ebx,0x2
   12d86:	jmp    12260 <search+0x570>
   12d8b:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12d93:	mov    ebx,0x2
   12d98:	jmp    1225e <search+0x56e>
   12d9d:	cmp    ebx,0x1
   12da0:	mov    DWORD PTR [rsp+0x10],0xfff0bdc0
   12da8:	sete   cl
   12dab:	and    ecx,edi
   12dad:	jmp    1225e <search+0x56e>
   12db2:	cmp    DWORD PTR [rsp+0x28],ecx
   12db6:	jge    12e88 <search+0x1198>
   12dbc:	mov    eax,DWORD PTR [rsp+0x40]
   12dc0:	cmp    eax,ecx
   12dc2:	jle    12e88 <search+0x1198>
   12dc8:	neg    eax
   12dca:	xor    ecx,ecx
   12dcc:	mov    edi,eax
   12dce:	call   11cf0 <search>
   12dd3:	mov    ecx,DWORD PTR [rsp+0x4]
   12dd7:	add    DWORD PTR [rip+0x280906],0x1        # 2936e4 <PVSF>
   12dde:	neg    eax
   12de0:	cmp    ecx,eax
   12de2:	mov    DWORD PTR [rsp+0x1c],eax
   12de6:	cmovl  ecx,eax
   12de9:	mov    DWORD PTR [rsp+0x4],ecx
   12ded:	jmp    12ae2 <search+0xdf2>
   12df2:	mov    rax,rbp
   12df5:	mov    r12d,r14d
   12df8:	lea    rsi,[rip+0x26b201]        # 27e000 <history_h>
   12dff:	mov    r14,rbp
   12e02:	imul   rcx,rax,0x18
   12e06:	lea    rax,[rsp+0x4070]
   12e0e:	mov    ebx,DWORD PTR [rsp+0x24]
   12e12:	mov    ebp,DWORD PTR [rsp+0x40]
   12e16:	mov    r15d,DWORD PTR [rsp+0x48]
   12e1b:	lea    rdx,[rax+rcx*1]
   12e1f:	movsxd rax,DWORD PTR [rsp+rcx*1+0x1060]
   12e27:	movsxd r9,DWORD PTR [rsp+rcx*1+0x1064]
   12e2f:	mov    r8,rax
   12e32:	imul   rax,rax,0x90
   12e39:	mov    rdi,r9
   12e3c:	add    rax,r9
   12e3f:	add    DWORD PTR [rsi+rax*4],0x1
   12e43:	cmp    DWORD PTR [rsp+rcx*1+0x1068],0xd
   12e4b:	je     12f22 <search+0x1232>
   12e51:	cmp    DWORD PTR [rsp+0xc],0x1
   12e56:	jne    12e5f <search+0x116f>
   12e58:	add    DWORD PTR [rip+0x54a81],0x1        # 678e0 <FHF>
   12e5f:	mov    r14d,DWORD PTR [rsp+0x1c]
   12e64:	mov    r8d,DWORD PTR [rsp+0x54]
   12e69:	mov    r9d,ebx
   12e6c:	mov    ecx,r12d
   12e6f:	mov    edx,ebp
   12e71:	mov    esi,r15d
   12e74:	add    DWORD PTR [rip+0x56215],0x1        # 69090 <FH>
   12e7b:	mov    edi,r14d
   12e7e:	call   16870 <StoreTT>
   12e83:	jmp    11d69 <search+0x79>
   12e88:	mov    eax,DWORD PTR [rsp+0x1c]
   12e8c:	mov    DWORD PTR [rsp+0x4],eax
   12e90:	mov    eax,DWORD PTR [rsp+0xc]
   12e94:	mov    DWORD PTR [rsp+0x2c],eax
   12e98:	mov    eax,0x1
   12e9d:	jmp    1241a <search+0x72a>
   12ea2:	xor    esi,esi
   12ea4:	call   3280 <calc_attackers>
   12ea9:	mov    esi,0x1
   12eae:	mov    r12d,eax
   12eb1:	imul   rax,rbp,0x18
   12eb5:	jmp    128b9 <search+0xbc9>
   12eba:	cmp    eax,0x4
   12ebd:	jne    12610 <search+0x920>
   12ec3:	cmp    DWORD PTR [rsp+0x1068],0xd
   12ecb:	jne    1263c <search+0x94c>
   12ed1:	xor    DWORD PTR [rip+0x26a648],0x1        # 27d520 <white_to_move>
   12ed8:	add    DWORD PTR [rip+0x284881],0x1        # 297760 <ply>
   12edf:	add    DWORD PTR [rip+0x26ac1e],0x1        # 27db04 <fifty>
   12ee6:	xor    DWORD PTR [rip+0x284894],0xdeadbeef        # 297784 <hash>
   12ef0:	mov    DWORD PTR [rip+0x2807e6],0x0        # 2936e0 <ep_square>
   12efa:	mov    BYTE PTR [rsp+0x10],r10b
   12eff:	lea    edx,[rbx-0x4]
   12f02:	jmp    12137 <search+0x447>
   12f07:	lea    rcx,[rip+0x9732]        # 1c640 <Xrank>
   12f0e:	cmp    DWORD PTR [rcx+rax*4],0x5
   12f12:	setg   cl
   12f15:	movzx  ecx,cl
   12f18:	jmp    12831 <search+0xb41>
   12f1d:	call   1310 <__stack_chk_fail@plt>
   12f22:	movsxd rax,DWORD PTR [rip+0x284837]        # 297760 <ply>
   12f29:	lea    rsi,[rip+0x282af0]        # 295a20 <killer1>
   12f30:	imul   rcx,rax,0x18
   12f34:	add    rcx,rsi
   12f37:	cmp    r8d,DWORD PTR [rcx]
   12f3a:	je     130b2 <search+0x13c2>
   12f40:	imul   r9,rax,0x18
   12f44:	lea    rcx,[rip+0x56d35]        # 69c80 <killer2>
   12f4b:	lea    rdx,[rcx+r9*1]
   12f4f:	cmp    r8d,DWORD PTR [rdx]
   12f52:	je     13037 <search+0x1347>
   12f58:	imul   r9,rax,0x18
   12f5c:	lea    rsi,[rip+0x280e9d]        # 293e00 <killer3>
   12f63:	lea    rdx,[rsi+r9*1]
   12f67:	cmp    r8d,DWORD PTR [rdx]
   12f6a:	je     12fc7 <search+0x12d7>
   12f6c:	lea    rdx,[rip+0x28078d]        # 293700 <killer_scores3>
   12f73:	mov    DWORD PTR [rdx+rax*4],0x1
   12f7a:	imul   rax,rax,0x18
   12f7e:	lea    rdx,[rsi+rax*1]
   12f82:	imul   rax,r14,0x18
   12f86:	movdqu xmm5,XMMWORD PTR [rsp+rax*1+0x1060]
   12f8f:	mov    rax,QWORD PTR [rsp+rax*1+0x1070]
   12f97:	movups XMMWORD PTR [rdx],xmm5
   12f9a:	mov    QWORD PTR [rdx+0x10],rax
   12f9e:	jmp    12e51 <search+0x1161>
   12fa3:	mov    r9d,ebx
   12fa6:	xor    r8d,r8d
   12fa9:	mov    ecx,0x1f4
   12fae:	mov    edx,ebp
   12fb0:	mov    esi,r15d
   12fb3:	mov    edi,r14d
   12fb6:	add    DWORD PTR [rip+0x26b017],0x1        # 27dfd4 <NCuts>
   12fbd:	call   16870 <StoreTT>
   12fc2:	jmp    11d69 <search+0x79>
   12fc7:	cmp    edi,DWORD PTR [rdx+0x4]
   12fca:	jne    12f6c <search+0x127c>
   12fcc:	imul   rdi,r14,0x18
   12fd0:	mov    r8d,DWORD PTR [rdx+0xc]
   12fd4:	cmp    DWORD PTR [rsp+rdi*1+0x106c],r8d
   12fdc:	jne    12f6c <search+0x127c>
   12fde:	lea    rdi,[rip+0x28071b]        # 293700 <killer_scores3>
   12fe5:	lea    r10,[rip+0x566d4]        # 696c0 <killer_scores2>
   12fec:	mov    esi,DWORD PTR [rdi+rax*4]
   12fef:	mov    r8d,DWORD PTR [r10+rax*4]
   12ff3:	add    esi,0x1
   12ff6:	mov    DWORD PTR [rdi+rax*4],esi
   12ff9:	cmp    esi,r8d
   12ffc:	jle    12e51 <search+0x1161>
   13002:	add    rcx,r9
   13005:	movdqu xmm4,XMMWORD PTR [rdx]
   13009:	mov    r14,QWORD PTR [rdx+0x10]
   1300d:	mov    DWORD PTR [r10+rax*4],esi
   13011:	mov    r13,QWORD PTR [rcx]
   13014:	mov    r11,QWORD PTR [rcx+0x8]
   13018:	mov    DWORD PTR [rdi+rax*4],r8d
   1301c:	mov    r9,QWORD PTR [rcx+0x10]
   13020:	movups XMMWORD PTR [rcx],xmm4
   13023:	mov    QWORD PTR [rcx+0x10],r14
   13027:	mov    QWORD PTR [rdx],r13
   1302a:	mov    QWORD PTR [rdx+0x8],r11
   1302e:	mov    QWORD PTR [rdx+0x10],r9
   13032:	jmp    12e51 <search+0x1161>
   13037:	cmp    edi,DWORD PTR [rdx+0x4]
   1303a:	jne    12f58 <search+0x1268>
   13040:	imul   r10,r14,0x18
   13044:	mov    r11d,DWORD PTR [rdx+0xc]
   13048:	cmp    DWORD PTR [rsp+r10*1+0x106c],r11d
   13050:	jne    12f58 <search+0x1268>
   13056:	lea    r8,[rip+0x56663]        # 696c0 <killer_scores2>
   1305d:	lea    r11,[rip+0x5617c]        # 691e0 <killer_scores>
   13064:	mov    ecx,DWORD PTR [r8+rax*4]
   13068:	mov    r10d,DWORD PTR [r11+rax*4]
   1306c:	lea    edi,[rcx+0x1]
   1306f:	mov    DWORD PTR [r8+rax*4],edi
   13073:	cmp    edi,r10d
   13076:	jle    12e51 <search+0x1161>
   1307c:	lea    rcx,[rsi+r9*1]
   13080:	movdqu xmm3,XMMWORD PTR [rdx]
   13084:	mov    r14,QWORD PTR [rdx+0x10]
   13088:	mov    DWORD PTR [r11+rax*4],edi
   1308c:	mov    r13,QWORD PTR [rcx]
   1308f:	mov    r9,QWORD PTR [rcx+0x8]
   13093:	mov    DWORD PTR [r8+rax*4],r10d
   13097:	mov    rsi,QWORD PTR [rcx+0x10]
   1309b:	movups XMMWORD PTR [rcx],xmm3
   1309e:	mov    QWORD PTR [rcx+0x10],r14
   130a2:	mov    QWORD PTR [rdx],r13
   130a5:	mov    QWORD PTR [rdx+0x8],r9
   130a9:	mov    QWORD PTR [rdx+0x10],rsi
   130ad:	jmp    12e51 <search+0x1161>
   130b2:	cmp    r9d,DWORD PTR [rcx+0x4]
   130b6:	jne    12f40 <search+0x1250>
   130bc:	mov    ecx,DWORD PTR [rcx+0xc]
   130bf:	cmp    DWORD PTR [rdx-0x3004],ecx
   130c5:	jne    12f40 <search+0x1250>
   130cb:	lea    rdx,[rip+0x5610e]        # 691e0 <killer_scores>
   130d2:	add    DWORD PTR [rdx+rax*4],0x1
   130d6:	jmp    12e51 <search+0x1161>
   130db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000130e0 <search_root>:
   130e0:	endbr64 
   130e4:	push   r15
   130e6:	push   r14
   130e8:	push   r13
   130ea:	push   r12
   130ec:	push   rbp
   130ed:	push   rbx
   130ee:	lea    r11,[rsp-0x4000]
   130f6:	sub    rsp,0x1000
   130fd:	or     QWORD PTR [rsp],0x0
   13102:	cmp    rsp,r11
   13105:	jne    130f6 <search_root+0x16>
   13107:	sub    rsp,0x78
   1310b:	mov    DWORD PTR [rsp],esi
   1310e:	mov    r13,rdi
   13111:	mov    DWORD PTR [rsp+0x34],edx
   13115:	mov    DWORD PTR [rsp+0x30],ecx
   13119:	mov    rax,QWORD PTR fs:0x28
   13122:	mov    QWORD PTR [rsp+0x4068],rax
   1312a:	xor    eax,eax
   1312c:	mov    eax,DWORD PTR [rip+0x114ae]        # 245e0 <dummy>
   13132:	add    DWORD PTR [rip+0x2687a3],0x1        # 27b8dc <nodes>
   13139:	mov    DWORD PTR [rip+0x28461d],0x1        # 297760 <ply>
   13143:	mov    DWORD PTR [rsp+0x4],eax
   13147:	mov    eax,DWORD PTR [rip+0x11497]        # 245e4 <dummy+0x4>
   1314d:	mov    DWORD PTR [rip+0x56a19],0x1        # 69b70 <searching_pv>
   13157:	mov    DWORD PTR [rsp+0x8],eax
   1315b:	mov    eax,DWORD PTR [rip+0x11487]        # 245e8 <dummy+0x8>
   13161:	mov    DWORD PTR [rip+0x26a995],0x0        # 27db00 <time_exit>
   1316b:	mov    DWORD PTR [rsp+0x10],eax
   1316f:	mov    eax,DWORD PTR [rip+0x11477]        # 245ec <dummy+0xc>
   13175:	mov    DWORD PTR [rip+0x26a3ad],0x0        # 27d52c <time_failure>
   1317f:	mov    DWORD PTR [rsp+0x18],eax
   13183:	mov    eax,DWORD PTR [rip+0x11467]        # 245f0 <dummy+0x10>
   13189:	mov    DWORD PTR [rip+0x26874d],0xfff0bdc0        # 27b8e0 <cur_score>
   13193:	mov    DWORD PTR [rsp+0x1c],eax
   13197:	mov    eax,DWORD PTR [rip+0x11457]        # 245f4 <dummy+0x14>
   1319d:	mov    DWORD PTR [rsp+0x28],eax
   131a1:	call   42a0 <is_draw>
   131a6:	test   eax,eax
   131a8:	je     13220 <search_root+0x140>
   131aa:	movsxd rdx,DWORD PTR [rip+0x2845af]        # 297760 <ply>
   131b1:	lea    rax,[rip+0x26a968]        # 27db20 <pv_length>
   131b8:	movdqu xmm1,XMMWORD PTR [rip+0x11420]        # 245e0 <dummy>
   131c0:	mov    DWORD PTR [rip+0x26a6d6],0x5        # 27d8a0 <result>
   131ca:	mov    DWORD PTR [rip+0x26870c],0x0        # 27b8e0 <cur_score>
   131d4:	mov    DWORD PTR [rax+rdx*4],0x0
   131db:	mov    rax,QWORD PTR [rip+0x1140e]        # 245f0 <dummy+0x10>
   131e2:	movups XMMWORD PTR [r13+0x0],xmm1
   131e7:	mov    QWORD PTR [r13+0x10],rax
   131eb:	mov    rax,QWORD PTR [rsp+0x4068]
   131f3:	xor    rax,QWORD PTR fs:0x28
   131fc:	jne    13f71 <search_root+0xe91>
   13202:	add    rsp,0x4078
   13209:	mov    rax,r13
   1320c:	pop    rbx
   1320d:	pop    rbp
   1320e:	pop    r12
   13210:	pop    r13
   13212:	pop    r14
   13214:	pop    r15
   13216:	ret    
   13217:	nop    WORD PTR [rax+rax*1+0x0]
   13220:	movsxd rdx,DWORD PTR [rip+0x284539]        # 297760 <ply>
   13227:	lea    rdi,[rip+0x26a8f2]        # 27db20 <pv_length>
   1322e:	mov    rax,rdx
   13231:	add    eax,DWORD PTR [rip+0x56469]        # 696a0 <move_number>
   13237:	mov    DWORD PTR [rdi+rdx*4],edx
   1323a:	lea    rdi,[rip+0x267bff]        # 27ae40 <hash_history>
   13241:	mov    edx,DWORD PTR [rip+0x28453d]        # 297784 <hash>
   13247:	sub    eax,0x1
   1324a:	cdqe   
   1324c:	mov    DWORD PTR [rdi+rax*4],edx
   1324f:	call   7ca0 <in_check>
   13254:	mov    ebp,eax
   13256:	test   eax,eax
   13258:	je     13266 <search_root+0x186>
   1325a:	add    DWORD PTR [rip+0x56433],0x1        # 69694 <ext_check>
   13261:	add    DWORD PTR [rsp+0x30],0x1
   13266:	movsxd rax,DWORD PTR [rip+0x2844f3]        # 297760 <ply>
   1326d:	lea    rdi,[rip+0x54b4c]        # 67dc0 <checks>
   13274:	cmp    DWORD PTR [rip+0x268545],0x4        # 27b7c0 <Variant>
   1327b:	mov    DWORD PTR [rdi+rax*4],ebp
   1327e:	lea    rdi,[rip+0x5595b]        # 68be0 <recaps>
   13285:	mov    DWORD PTR [rdi+rax*4],0x0
   1328c:	lea    rdi,[rip+0x5466d]        # 67900 <singular>
   13293:	mov    DWORD PTR [rdi+rax*4],0x0
   1329a:	je     13760 <search_root+0x680>
   132a0:	lea    r15,[rsp+0x1060]
   132a8:	mov    rdi,r15
   132ab:	call   9b80 <gen>
   132b0:	mov    r14d,DWORD PTR [rip+0x2b451]        # 3e708 <numb_moves>
   132b7:	mov    ebx,DWORD PTR [rip+0x54603]        # 678c0 <legals>
   132bd:	lea    r12,[rsp+0x60]
   132c2:	mov    r8d,0xffffffff
   132c8:	mov    ecx,r14d
   132cb:	mov    rdi,r15
   132ce:	lea    rdx,[rsp+0x860]
   132d6:	mov    rsi,r12
   132d9:	mov    DWORD PTR [rip+0x545ed],ebx        # 678cc <movetotal>
   132df:	call   10f60 <order_moves>
   132e4:	mov    DWORD PTR [rsp+0x58],0x0
   132ec:	mov    DWORD PTR [rsp+0x2c],0x1
   132f4:	mov    DWORD PTR [rsp+0x40],0x1
   132fc:	mov    DWORD PTR [rsp+0x20],0xfff0bdc0
   13304:	mov    DWORD PTR [rsp+0x44],ebp
   13308:	mov    QWORD PTR [rsp+0x38],r13
   1330d:	mov    r13d,r14d
   13310:	test   r13d,r13d
   13313:	jle    13470 <search_root+0x390>
   13319:	lea    esi,[r13-0x1]
   1331d:	xor    eax,eax
   1331f:	mov    ebx,0xfff0bdc0
   13324:	mov    ecx,0xfff0bdc0
   13329:	jmp    13333 <search_root+0x253>
   1332b:	nop    DWORD PTR [rax+rax*1+0x0]
   13330:	mov    rax,rdx
   13333:	mov    edx,DWORD PTR [r12+rax*4]
   13337:	cmp    ecx,edx
   13339:	jge    1333f <search_root+0x25f>
   1333b:	mov    ebx,eax
   1333d:	mov    ecx,edx
   1333f:	lea    rdx,[rax+0x1]
   13343:	cmp    rax,rsi
   13346:	jne    13330 <search_root+0x250>
   13348:	cmp    ebx,0xfff0bdc0
   1334e:	je     13470 <search_root+0x390>
   13354:	mov    eax,DWORD PTR [rip+0x53c2e]        # 66f88 <alllosers>
   1335a:	movsxd rbp,ebx
   1335d:	mov    DWORD PTR [rsp+rbp*4+0x60],0xfff0bdc0
   13365:	test   eax,eax
   13367:	jne    1337d <search_root+0x29d>
   13369:	lea    rax,[rip+0x53c90]        # 67000 <rootlosers>
   13370:	mov    r14d,DWORD PTR [rax+rbp*4]
   13374:	test   r14d,r14d
   13377:	jne    13540 <search_root+0x460>
   1337d:	mov    esi,ebx
   1337f:	mov    rdi,r15
   13382:	call   8e00 <make>
   13387:	mov    eax,DWORD PTR [rip+0x2843d3]        # 297760 <ply>
   1338d:	mov    edx,DWORD PTR [rip+0x5630d]        # 696a0 <move_number>
   13393:	mov    esi,ebx
   13395:	mov    ecx,DWORD PTR [rip+0x2843e9]        # 297784 <hash>
   1339b:	lea    r10,[rbp+rbp*2+0x0]
   133a0:	lea    rdi,[rip+0x267a99]        # 27ae40 <hash_history>
   133a7:	add    edx,eax
   133a9:	shl    r10,0x3
   133ad:	sub    eax,0x1
   133b0:	sub    edx,0x1
   133b3:	cdqe   
   133b5:	mov    QWORD PTR [rsp+0x50],r10
   133ba:	movdqu xmm2,XMMWORD PTR [rsp+r10*1+0x1060]
   133c4:	movsxd rdx,edx
   133c7:	lea    rax,[rax+rax*2]
   133cb:	mov    DWORD PTR [rdi+rdx*4],ecx
   133ce:	lea    rcx,[rsp+r10*1+0x1060]
   133d6:	lea    rdi,[rip+0x268523]        # 27b900 <path>
   133dd:	mov    rdx,QWORD PTR [rcx+0x10]
   133e1:	lea    rax,[rdi+rax*8]
   133e5:	mov    rdi,r15
   133e8:	mov    QWORD PTR [rsp+0x48],rcx
   133ed:	movups XMMWORD PTR [rax],xmm2
   133f0:	mov    QWORD PTR [rax+0x10],rdx
   133f4:	mov    eax,DWORD PTR [rip+0x2684e2]        # 27b8dc <nodes>
   133fa:	mov    edx,DWORD PTR [rsp+0x44]
   133fe:	mov    DWORD PTR [rsp+0x5c],eax
   13402:	call   6f70 <check_legal>
   13407:	mov    r10,QWORD PTR [rsp+0x50]
   1340c:	test   eax,eax
   1340e:	mov    r14d,eax
   13411:	jne    13840 <search_root+0x760>
   13417:	mov    esi,ebx
   13419:	mov    rdi,r15
   1341c:	call   ae30 <unmake>
   13421:	mov    esi,DWORD PTR [rip+0x26a6d9]        # 27db00 <time_exit>
   13427:	test   esi,esi
   13429:	jne    13e7f <search_root+0xd9f>
   1342f:	mov    edi,DWORD PTR [rsp]
   13432:	cmp    DWORD PTR [rsp+0x20],edi
   13436:	jle    13442 <search_root+0x362>
   13438:	test   r14b,0x1
   1343c:	jne    13560 <search_root+0x480>
   13442:	test   r14d,r14d
   13445:	mov    eax,0x0
   1344a:	cmove  eax,DWORD PTR [rsp+0x2c]
   1344f:	lea    rbx,[rip+0x54f4a]        # 683a0 <rootnodecount>
   13456:	mov    DWORD PTR [rsp+0x2c],eax
   1345a:	mov    eax,DWORD PTR [rip+0x26847c]        # 27b8dc <nodes>
   13460:	sub    eax,DWORD PTR [rsp+0x5c]
   13464:	mov    DWORD PTR [rbx+rbp*4],eax
   13467:	test   r13d,r13d
   1346a:	jg     13319 <search_root+0x239>
   13470:	mov    edx,DWORD PTR [rsp+0x40]
   13474:	mov    r13,QWORD PTR [rsp+0x38]
   13479:	mov    eax,DWORD PTR [rip+0x2842dd]        # 29775c <is_pondering>
   1347f:	test   edx,edx
   13481:	je     134e8 <search_root+0x408>
   13483:	test   eax,eax
   13485:	jne    134b0 <search_root+0x3d0>
   13487:	mov    eax,DWORD PTR [rip+0x268333]        # 27b7c0 <Variant>
   1348d:	sub    eax,0x3
   13490:	cmp    eax,0x1
   13493:	ja     13bfb <search_root+0xb1b>
   13499:	cmp    DWORD PTR [rip+0x26a080],0x1        # 27d520 <white_to_move>
   134a0:	je     13c15 <search_root+0xb35>
   134a6:	mov    DWORD PTR [rip+0x26a3f0],0x2        # 27d8a0 <result>
   134b0:	mov    eax,DWORD PTR [rsp+0x4]
   134b4:	mov    DWORD PTR [r13+0x0],eax
   134b8:	mov    eax,DWORD PTR [rsp+0x8]
   134bc:	mov    DWORD PTR [r13+0x4],eax
   134c0:	mov    eax,DWORD PTR [rsp+0x10]
   134c4:	mov    DWORD PTR [r13+0x8],eax
   134c8:	mov    eax,DWORD PTR [rsp+0x18]
   134cc:	mov    DWORD PTR [r13+0xc],eax
   134d0:	mov    eax,DWORD PTR [rsp+0x1c]
   134d4:	mov    DWORD PTR [r13+0x10],eax
   134d8:	mov    eax,DWORD PTR [rsp+0x28]
   134dc:	mov    DWORD PTR [r13+0x14],eax
   134e0:	jmp    131eb <search_root+0x10b>
   134e5:	nop    DWORD PTR [rax]
   134e8:	test   eax,eax
   134ea:	jne    134b0 <search_root+0x3d0>
   134ec:	cmp    DWORD PTR [rip+0x26a611],0x64        # 27db04 <fifty>
   134f3:	jle    134b0 <search_root+0x3d0>
   134f5:	movsxd rax,DWORD PTR [rip+0x284264]        # 297760 <ply>
   134fc:	lea    rbx,[rip+0x26a61d]        # 27db20 <pv_length>
   13503:	movdqu xmm5,XMMWORD PTR [rip+0x110d5]        # 245e0 <dummy>
   1350b:	mov    DWORD PTR [rip+0x26a38b],0x4        # 27d8a0 <result>
   13515:	mov    DWORD PTR [rip+0x2683c1],0x0        # 27b8e0 <cur_score>
   1351f:	mov    DWORD PTR [rbx+rax*4],0x0
   13526:	mov    rax,QWORD PTR [rip+0x110c3]        # 245f0 <dummy+0x10>
   1352d:	movups XMMWORD PTR [r13+0x0],xmm5
   13532:	mov    QWORD PTR [r13+0x10],rax
   13536:	jmp    131eb <search_root+0x10b>
   1353b:	nop    DWORD PTR [rax+rax*1+0x0]
   13540:	mov    eax,DWORD PTR [rip+0x26827a]        # 27b7c0 <Variant>
   13546:	sub    eax,0x3
   13549:	cmp    eax,0x1
   1354c:	ja     1337d <search_root+0x29d>
   13552:	jmp    13310 <search_root+0x230>
   13557:	nop    WORD PTR [rax+rax*1+0x0]
   13560:	lea    rdi,[rbp+rbp*2+0x0]
   13565:	lea    rax,[rsp+0x4070]
   1356d:	shl    rdi,0x3
   13571:	lea    r9,[rip+0x2824a8]        # 295a20 <killer1>
   13578:	lea    rsi,[rax+rdi*1]
   1357c:	movsxd rax,DWORD PTR [rip+0x2841dd]        # 297760 <ply>
   13583:	movsxd rdx,DWORD PTR [rsp+rdi*1+0x1060]
   1358b:	lea    rcx,[rax+rax*2]
   1358f:	mov    r8,rax
   13592:	lea    rcx,[r9+rcx*8]
   13596:	mov    r9d,DWORD PTR [rsp+rdi*1+0x1064]
   1359e:	mov    r11d,DWORD PTR [rcx]
   135a1:	cmp    edx,r11d
   135a4:	je     13c24 <search_root+0xb44>
   135aa:	lea    rcx,[rax+rax*2]
   135ae:	lea    rdi,[rip+0x566cb]        # 69c80 <killer2>
   135b5:	shl    rcx,0x3
   135b9:	lea    rsi,[rdi+rcx*1]
   135bd:	mov    edi,DWORD PTR [rsi]
   135bf:	mov    DWORD PTR [rsp],edi
   135c2:	cmp    edx,edi
   135c4:	je     13c4d <search_root+0xb6d>
   135ca:	lea    rcx,[rax+rax*2]
   135ce:	lea    rsi,[rip+0x28082b]        # 293e00 <killer3>
   135d5:	shl    rcx,0x3
   135d9:	lea    rdi,[rsi+rcx*1]
   135dd:	cmp    edx,DWORD PTR [rdi]
   135df:	je     13db7 <search_root+0xcd7>
   135e5:	lea    rcx,[rip+0x280114]        # 293700 <killer_scores3>
   135ec:	mov    DWORD PTR [rcx+rax*4],0x1
   135f3:	lea    rcx,[rax+rax*2]
   135f7:	lea    rsi,[rsi+rcx*8]
   135fb:	lea    rcx,[rbp+rbp*2+0x0]
   13600:	shl    rcx,0x3
   13604:	movdqu xmm4,XMMWORD PTR [rsp+rcx*1+0x1060]
   1360d:	mov    rcx,QWORD PTR [rsp+rcx*1+0x1070]
   13615:	mov    QWORD PTR [rsi+0x10],rcx
   13619:	movups XMMWORD PTR [rsi],xmm4
   1361c:	lea    rdx,[rdx+rdx*8]
   13620:	movsxd rcx,r9d
   13623:	lea    rsi,[rip+0x26a9d6]        # 27e000 <history_h>
   1362a:	mov    DWORD PTR [rip+0x54d50],ebx        # 68380 <bestmovenum>
   13630:	shl    rdx,0x4
   13634:	mov    ebx,DWORD PTR [rsp+0x20]
   13638:	add    rdx,rcx
   1363b:	add    DWORD PTR [rsi+rdx*4],0x1
   1363f:	lea    rdx,[rbp+rbp*2+0x0]
   13644:	shl    rdx,0x3
   13648:	mov    DWORD PTR [rip+0x268292],ebx        # 27b8e0 <cur_score>
   1364e:	lea    rbx,[rip+0x26a4cb]        # 27db20 <pv_length>
   13655:	movdqu xmm3,XMMWORD PTR [rsp+rdx*1+0x1060]
   1365e:	lea    rcx,[r15+rdx*1]
   13662:	mov    rdx,QWORD PTR [rsp+rdx*1+0x1070]
   1366a:	mov    esi,DWORD PTR [rcx]
   1366c:	mov    edi,DWORD PTR [rcx+0x4]
   1366f:	mov    DWORD PTR [rsp+0x4],esi
   13673:	mov    esi,DWORD PTR [rcx+0x8]
   13676:	mov    DWORD PTR [rsp+0x8],edi
   1367a:	mov    edi,DWORD PTR [rcx+0xc]
   1367d:	mov    DWORD PTR [rsp+0x10],esi
   13681:	mov    esi,DWORD PTR [rcx+0x10]
   13684:	mov    DWORD PTR [rsp+0x18],edi
   13688:	mov    edi,DWORD PTR [rcx+0x14]
   1368b:	imul   rcx,rax,0x1c38
   13692:	mov    DWORD PTR [rsp+0x1c],esi
   13696:	mov    DWORD PTR [rsp+0x28],edi
   1369a:	lea    rdi,[rip+0x5821f]        # 6b8c0 <pv>
   136a1:	lea    rsi,[rdi+rcx*1]
   136a5:	mov    QWORD PTR [rsi+0x10],rdx
   136a9:	lea    edx,[r8+0x1]
   136ad:	movups XMMWORD PTR [rsi],xmm3
   136b0:	movsxd rsi,edx
   136b3:	mov    r10d,DWORD PTR [rbx+rsi*4]
   136b7:	cmp    r10d,edx
   136ba:	jle    1370f <search_root+0x62f>
   136bc:	imul   rsi,rsi,0x1c20
   136c3:	lea    rdx,[rdi+rcx*1+0x18]
   136c8:	mov    edi,r10d
   136cb:	sub    edi,r8d
   136ce:	sub    edi,0x2
   136d1:	lea    r11,[rdi+rdi*2]
   136d5:	lea    rdi,[rip+0x58214]        # 6b8f0 <pv+0x30>
   136dc:	add    rcx,rdi
   136df:	imul   rdi,rax,0xffffffffffffe3e0
   136e6:	lea    r11,[rcx+r11*8]
   136ea:	nop    WORD PTR [rax+rax*1+0x0]
   136f0:	lea    rcx,[rdx+rdi*1]
   136f4:	add    rdx,0x18
   136f8:	movdqu xmm0,XMMWORD PTR [rcx+rsi*1]
   136fd:	movups XMMWORD PTR [rdx-0x18],xmm0
   13701:	mov    rcx,QWORD PTR [rcx+rsi*1+0x10]
   13706:	mov    QWORD PTR [rdx-0x8],rcx
   1370a:	cmp    rdx,r11
   1370d:	jne    136f0 <search_root+0x610>
   1370f:	lea    rbx,[rip+0x26a40a]        # 27db20 <pv_length>
   13716:	mov    DWORD PTR [rbx+rax*4],r10d
   1371a:	mov    ebx,DWORD PTR [rsp+0x34]
   1371e:	cmp    DWORD PTR [rsp+0x20],ebx
   13722:	jge    13e7f <search_root+0xd9f>
   13728:	mov    eax,DWORD PTR [rsp+0x20]
   1372c:	mov    ecx,DWORD PTR [rip+0x26a3d6]        # 27db08 <post>
   13732:	mov    DWORD PTR [rsp],eax
   13735:	test   ecx,ecx
   13737:	je     13442 <search_root+0x362>
   1373d:	cmp    DWORD PTR [rip+0x55f68],0x1        # 696ac <i_depth>
   13744:	mov    ebx,eax
   13746:	jle    13442 <search_root+0x362>
   1374c:	mov    edi,eax
   1374e:	call   17ea0 <post_thinking>
   13753:	mov    DWORD PTR [rsp],ebx
   13756:	jmp    13442 <search_root+0x362>
   1375b:	nop    DWORD PTR [rax+rax*1+0x0]
   13760:	lea    r15,[rsp+0x1060]
   13768:	xor    ebx,ebx
   1376a:	mov    DWORD PTR [rip+0x5414c],0x0        # 678c0 <legals>
   13774:	mov    DWORD PTR [rip+0x268046],0x1        # 27b7c4 <captures>
   1377e:	mov    rdi,r15
   13781:	call   9b80 <gen>
   13786:	mov    r14d,DWORD PTR [rip+0x2af7b]        # 3e708 <numb_moves>
   1378d:	mov    DWORD PTR [rip+0x26802d],0x0        # 27b7c4 <captures>
   13797:	test   r14d,r14d
   1379a:	jle    137d3 <search_root+0x6f3>
   1379c:	nop    DWORD PTR [rax+0x0]
   137a0:	mov    esi,ebx
   137a2:	mov    rdi,r15
   137a5:	call   8e00 <make>
   137aa:	mov    edx,ebp
   137ac:	mov    esi,ebx
   137ae:	mov    rdi,r15
   137b1:	call   6f70 <check_legal>
   137b6:	test   eax,eax
   137b8:	je     137c1 <search_root+0x6e1>
   137ba:	add    DWORD PTR [rip+0x540ff],0x1        # 678c0 <legals>
   137c1:	mov    esi,ebx
   137c3:	mov    rdi,r15
   137c6:	add    ebx,0x1
   137c9:	call   ae30 <unmake>
   137ce:	cmp    ebx,r14d
   137d1:	jne    137a0 <search_root+0x6c0>
   137d3:	mov    ebx,DWORD PTR [rip+0x540e7]        # 678c0 <legals>
   137d9:	test   ebx,ebx
   137db:	jne    132bd <search_root+0x1dd>
   137e1:	mov    DWORD PTR [rip+0x267fd9],0x0        # 27b7c4 <captures>
   137eb:	mov    rdi,r15
   137ee:	call   9b80 <gen>
   137f3:	mov    r14d,DWORD PTR [rip+0x2af0e]        # 3e708 <numb_moves>
   137fa:	test   r14d,r14d
   137fd:	jle    132b7 <search_root+0x1d7>
   13803:	nop    DWORD PTR [rax+rax*1+0x0]
   13808:	mov    esi,ebx
   1380a:	mov    rdi,r15
   1380d:	call   8e00 <make>
   13812:	mov    edx,ebp
   13814:	mov    esi,ebx
   13816:	mov    rdi,r15
   13819:	call   6f70 <check_legal>
   1381e:	test   eax,eax
   13820:	je     13829 <search_root+0x749>
   13822:	add    DWORD PTR [rip+0x54097],0x1        # 678c0 <legals>
   13829:	mov    esi,ebx
   1382b:	mov    rdi,r15
   1382e:	add    ebx,0x1
   13831:	call   ae30 <unmake>
   13836:	cmp    ebx,r14d
   13839:	jne    13808 <search_root+0x728>
   1383b:	jmp    132b7 <search_root+0x1d7>
   13840:	mov    esi,ebx
   13842:	mov    rdi,r15
   13845:	mov    QWORD PTR [rsp+0x20],r10
   1384a:	call   ae30 <unmake>
   1384f:	add    DWORD PTR [rsp+0x58],0x1
   13854:	sub    rsp,0x8
   13858:	mov    edi,DWORD PTR [rsp+0x60]
   1385c:	mov    rcx,QWORD PTR [rsp+0x50]
   13861:	mov    eax,DWORD PTR [rip+0x54065]        # 678cc <movetotal>
   13867:	push   QWORD PTR [rcx+0x10]
   1386a:	sub    eax,edi
   1386c:	lea    rdi,[rip+0x5533d]        # 68bb0 <searching_move>
   13873:	push   QWORD PTR [rcx+0x8]
   13876:	mov    r10,QWORD PTR [rsp+0x38]
   1387b:	mov    DWORD PTR [rip+0x5531f],eax        # 68ba0 <moveleft>
   13881:	push   QWORD PTR [rsp+r10*1+0x1078]
   13889:	mov    QWORD PTR [rsp+0x40],r10
   1388e:	call   170f0 <comp_to_san>
   13893:	add    rsp,0x20
   13897:	mov    esi,ebx
   13899:	mov    rdi,r15
   1389c:	call   8e00 <make>
   138a1:	mov    r14d,DWORD PTR [rip+0x283eb8]        # 297760 <ply>
   138a8:	mov    esi,ebx
   138aa:	mov    rdi,r15
   138ad:	call   7d10 <f_in_check>
   138b2:	lea    rdi,[rip+0x54507]        # 67dc0 <checks>
   138b9:	cmp    DWORD PTR [rsp+0x2c],0x1
   138be:	lea    rsi,[rip+0x5531b]        # 68be0 <recaps>
   138c5:	mov    r11d,eax
   138c8:	movsxd rax,r14d
   138cb:	mov    DWORD PTR [rdi+rax*4],r11d
   138cf:	movsxd rax,DWORD PTR [rip+0x283e8a]        # 297760 <ply>
   138d6:	lea    rdi,[rip+0x54023]        # 67900 <singular>
   138dd:	mov    DWORD PTR [rsi+rax*4],0x0
   138e4:	mov    DWORD PTR [rdi+rax*4],0x0
   138eb:	je     138ff <search_root+0x81f>
   138ed:	cmp    DWORD PTR [rip+0x55db8],0x1        # 696ac <i_depth>
   138f4:	mov    r10,QWORD PTR [rsp+0x20]
   138f9:	jg     13a30 <search_root+0x950>
   138ff:	mov    eax,DWORD PTR [rsp+0x30]
   13903:	mov    esi,DWORD PTR [rsp]
   13906:	xor    ecx,ecx
   13908:	mov    edi,DWORD PTR [rsp+0x34]
   1390c:	lea    edx,[rax-0x1]
   1390f:	neg    esi
   13911:	neg    edi
   13913:	call   11cf0 <search>
   13918:	mov    r11d,DWORD PTR [rip+0x26a1e1]        # 27db00 <time_exit>
   1391f:	neg    eax
   13921:	mov    DWORD PTR [rsp+0x20],eax
   13925:	test   r11d,r11d
   13928:	jne    139f7 <search_root+0x917>
   1392e:	mov    r10d,DWORD PTR [rip+0x26a1d3]        # 27db08 <post>
   13935:	test   r10d,r10d
   13938:	jne    13d08 <search_root+0xc28>
   1393e:	mov    r9d,DWORD PTR [rip+0x283e33]        # 297778 <xb_mode>
   13945:	test   r9d,r9d
   13948:	je     13d08 <search_root+0xc28>
   1394e:	mov    eax,DWORD PTR [rsp+0x20]
   13952:	cmp    eax,DWORD PTR [rip+0x267f88]        # 27b8e0 <cur_score>
   13958:	jle    13be8 <search_root+0xb08>
   1395e:	mov    eax,DWORD PTR [rsp+0x20]
   13962:	mov    DWORD PTR [rip+0x54a18],ebx        # 68380 <bestmovenum>
   13968:	mov    r14d,0x1
   1396e:	mov    DWORD PTR [rip+0x267f6c],eax        # 27b8e0 <cur_score>
   13974:	lea    rax,[rbp+rbp*2+0x0]
   13979:	lea    rax,[r15+rax*8]
   1397d:	mov    edi,DWORD PTR [rax]
   1397f:	mov    DWORD PTR [rsp+0x4],edi
   13983:	mov    edi,DWORD PTR [rax+0x4]
   13986:	mov    DWORD PTR [rsp+0x8],edi
   1398a:	mov    edi,DWORD PTR [rax+0x8]
   1398d:	mov    DWORD PTR [rsp+0x10],edi
   13991:	mov    edi,DWORD PTR [rax+0xc]
   13994:	mov    DWORD PTR [rsp+0x18],edi
   13998:	mov    edi,DWORD PTR [rax+0x10]
   1399b:	mov    eax,DWORD PTR [rax+0x14]
   1399e:	mov    DWORD PTR [rsp+0x40],0x0
   139a6:	mov    DWORD PTR [rsp+0x1c],edi
   139aa:	mov    DWORD PTR [rsp+0x28],eax
   139ae:	jmp    13417 <search_root+0x337>
   139b3:	mov    eax,DWORD PTR [rip+0x26a147]        # 27db00 <time_exit>
   139b9:	mov    esi,DWORD PTR [rsp+0x34]
   139bd:	cmp    DWORD PTR [rsp+0x20],esi
   139c1:	jl     139df <search_root+0x8ff>
   139c3:	test   eax,eax
   139c5:	jne    139f7 <search_root+0x917>
   139c7:	lea    rax,[rbp+rbp*2+0x0]
   139cc:	mov    edi,DWORD PTR [rsp+0x20]
   139d0:	lea    rsi,[r15+rax*8]
   139d4:	call   182a0 <post_fh_thinking>
   139d9:	mov    eax,DWORD PTR [rip+0x26a121]        # 27db00 <time_exit>
   139df:	mov    esi,DWORD PTR [rsp+0x20]
   139e3:	cmp    DWORD PTR [rip+0x267ef7],esi        # 27b8e0 <cur_score>
   139e9:	jge    13e89 <search_root+0xda9>
   139ef:	test   eax,eax
   139f1:	je     1395e <search_root+0x87e>
   139f7:	cmp    DWORD PTR [rip+0x267edf],0xfff0bdc0        # 27b8e0 <cur_score>
   13a01:	jne    13be8 <search_root+0xb08>
   13a07:	mov    edi,DWORD PTR [rsp+0x40]
   13a0b:	test   edi,edi
   13a0d:	je     13be8 <search_root+0xb08>
   13a13:	mov    DWORD PTR [rip+0x269b0f],0x1        # 27d52c <time_failure>
   13a1d:	mov    r14d,0x1
   13a23:	mov    DWORD PTR [rsp+0x40],0x0
   13a2b:	jmp    13417 <search_root+0x337>
   13a30:	mov    eax,DWORD PTR [rsp+0x30]
   13a34:	xor    ecx,ecx
   13a36:	mov    QWORD PTR [rsp+0x50],r10
   13a3b:	lea    edx,[rax-0x1]
   13a3e:	mov    eax,DWORD PTR [rsp]
   13a41:	mov    DWORD PTR [rsp+0x48],edx
   13a45:	mov    r14d,eax
   13a48:	mov    edi,eax
   13a4a:	neg    r14d
   13a4d:	not    edi
   13a4f:	mov    esi,r14d
   13a52:	call   11cf0 <search>
   13a57:	mov    esi,eax
   13a59:	neg    esi
   13a5b:	mov    DWORD PTR [rsp+0x20],esi
   13a5f:	cmp    DWORD PTR [rsp],esi
   13a62:	jge    139b3 <search_root+0x8d3>
   13a68:	cmp    DWORD PTR [rsp+0x34],esi
   13a6c:	jle    139b3 <search_root+0x8d3>
   13a72:	mov    r8d,DWORD PTR [rip+0x26a087]        # 27db00 <time_exit>
   13a79:	mov    edx,DWORD PTR [rsp+0x48]
   13a7d:	mov    r10,QWORD PTR [rsp+0x50]
   13a82:	test   r8d,r8d
   13a85:	jne    139f7 <search_root+0x917>
   13a8b:	add    r10,r15
   13a8e:	mov    edi,DWORD PTR [rsp+0x20]
   13a92:	mov    DWORD PTR [rsp+0x50],edx
   13a96:	mov    rsi,r10
   13a99:	mov    QWORD PTR [rsp+0x48],r10
   13a9e:	call   18140 <post_fail_thinking>
   13aa3:	mov    edi,DWORD PTR [rsp+0x34]
   13aa7:	mov    edx,DWORD PTR [rsp+0x50]
   13aab:	xor    ecx,ecx
   13aad:	mov    esi,r14d
   13ab0:	neg    edi
   13ab2:	call   11cf0 <search>
   13ab7:	mov    r10,QWORD PTR [rsp+0x48]
   13abc:	neg    eax
   13abe:	cmp    DWORD PTR [rsp],eax
   13ac1:	mov    DWORD PTR [rsp+0x20],eax
   13ac5:	mov    eax,DWORD PTR [rip+0x26a035]        # 27db00 <time_exit>
   13acb:	jge    139b9 <search_root+0x8d9>
   13ad1:	test   eax,eax
   13ad3:	jne    139b9 <search_root+0x8d9>
   13ad9:	mov    edi,DWORD PTR [r10]
   13adc:	mov    esi,DWORD PTR [r10+0x4]
   13ae0:	mov    DWORD PTR [rip+0x53dee],0x0        # 678d8 <failed>
   13aea:	mov    eax,DWORD PTR [rsp+0x20]
   13aee:	mov    DWORD PTR [rip+0x5488c],ebx        # 68380 <bestmovenum>
   13af4:	mov    DWORD PTR [rsp+0x4],edi
   13af8:	mov    edi,DWORD PTR [r10+0x8]
   13afc:	mov    DWORD PTR [rsp+0x8],esi
   13b00:	mov    esi,DWORD PTR [r10+0xc]
   13b04:	mov    DWORD PTR [rsp+0x10],edi
   13b08:	mov    edi,DWORD PTR [r10+0x10]
   13b0c:	mov    DWORD PTR [rsp+0x18],esi
   13b10:	mov    esi,DWORD PTR [r10+0x14]
   13b14:	mov    DWORD PTR [rip+0x267dc6],eax        # 27b8e0 <cur_score>
   13b1a:	mov    DWORD PTR [rsp+0x1c],edi
   13b1e:	mov    DWORD PTR [rsp+0x28],esi
   13b22:	cmp    DWORD PTR [rsp+0x34],eax
   13b26:	jle    139c7 <search_root+0x8e7>
   13b2c:	cmp    DWORD PTR [rip+0x55b79],0x1        # 696ac <i_depth>
   13b33:	jle    13be8 <search_root+0xb08>
   13b39:	mov    esi,DWORD PTR [rip+0x283c21]        # 297760 <ply>
   13b3f:	imul   rdi,rbp,0x18
   13b43:	lea    rax,[rip+0x57d76]        # 6b8c0 <pv>
   13b4a:	lea    edx,[rsi-0x1]
   13b4d:	movdqu xmm7,XMMWORD PTR [rsp+rdi*1+0x1060]
   13b56:	movsxd rdx,edx
   13b59:	mov    rdi,QWORD PTR [rsp+rdi*1+0x1070]
   13b61:	imul   rcx,rdx,0x1c38
   13b68:	add    rcx,rax
   13b6b:	mov    QWORD PTR [rcx+0x10],rdi
   13b6f:	lea    rdi,[rip+0x269faa]        # 27db20 <pv_length>
   13b76:	movups XMMWORD PTR [rcx],xmm7
   13b79:	movsxd rcx,esi
   13b7c:	mov    edi,DWORD PTR [rdi+rcx*4]
   13b7f:	cmp    esi,edi
   13b81:	jge    13bd7 <search_root+0xaf7>
   13b83:	mov    r9d,edi
   13b86:	imul   r11,rcx,0x1c38
   13b8d:	lea    r10,[rip+0x57d44]        # 6b8d8 <pv+0x18>
   13b94:	sub    r9d,esi
   13b97:	imul   rcx,rcx,0xffffffffffffe3e0
   13b9e:	mov    esi,r9d
   13ba1:	sub    esi,0x1
   13ba4:	add    r10,r11
   13ba7:	add    rax,r11
   13baa:	imul   rsi,rsi,0x18
   13bae:	add    rsi,r10
   13bb1:	imul   r10,rdx,0x1c20
   13bb8:	movdqu xmm7,XMMWORD PTR [rax]
   13bbc:	lea    r8,[rax+rcx*1]
   13bc0:	add    rax,0x18
   13bc4:	movups XMMWORD PTR [r8+r10*1],xmm7
   13bc9:	mov    r9,QWORD PTR [rax-0x8]
   13bcd:	mov    QWORD PTR [r8+r10*1+0x10],r9
   13bd2:	cmp    rax,rsi
   13bd5:	jne    13bb8 <search_root+0xad8>
   13bd7:	lea    rax,[rip+0x269f42]        # 27db20 <pv_length>
   13bde:	mov    DWORD PTR [rax+rdx*4],edi
   13be1:	nop    DWORD PTR [rax+0x0]
   13be8:	mov    DWORD PTR [rsp+0x40],0x0
   13bf0:	mov    r14d,0x1
   13bf6:	jmp    13417 <search_root+0x337>
   13bfb:	call   7ca0 <in_check>
   13c00:	test   eax,eax
   13c02:	je     13e70 <search_root+0xd90>
   13c08:	cmp    DWORD PTR [rip+0x269911],0x1        # 27d520 <white_to_move>
   13c0f:	je     134a6 <search_root+0x3c6>
   13c15:	mov    DWORD PTR [rip+0x269c81],0x3        # 27d8a0 <result>
   13c1f:	jmp    134b0 <search_root+0x3d0>
   13c24:	cmp    DWORD PTR [rcx+0x4],r9d
   13c28:	jne    135aa <search_root+0x4ca>
   13c2e:	mov    edi,DWORD PTR [rcx+0xc]
   13c31:	cmp    DWORD PTR [rsi-0x3004],edi
   13c37:	jne    135aa <search_root+0x4ca>
   13c3d:	lea    rcx,[rip+0x5559c]        # 691e0 <killer_scores>
   13c44:	add    DWORD PTR [rcx+rax*4],0x1
   13c48:	jmp    1361c <search_root+0x53c>
   13c4d:	cmp    DWORD PTR [rsi+0x4],r9d
   13c51:	jne    135ca <search_root+0x4ea>
   13c57:	lea    rdi,[rbp+rbp*2+0x0]
   13c5c:	mov    r10d,DWORD PTR [rsi+0xc]
   13c60:	cmp    DWORD PTR [rsp+rdi*8+0x106c],r10d
   13c68:	jne    135ca <search_root+0x4ea>
   13c6e:	lea    r10,[rip+0x55a4b]        # 696c0 <killer_scores2>
   13c75:	mov    edi,DWORD PTR [r10+rax*4]
   13c79:	add    edi,0x1
   13c7c:	mov    DWORD PTR [rsp],edi
   13c7f:	mov    DWORD PTR [r10+rax*4],edi
   13c83:	lea    rdi,[rip+0x55556]        # 691e0 <killer_scores>
   13c8a:	mov    edi,DWORD PTR [rdi+rax*4]
   13c8d:	mov    DWORD PTR [rsp+0x4],edi
   13c91:	cmp    DWORD PTR [rsp],edi
   13c94:	jle    1361c <search_root+0x53c>
   13c9a:	lea    rdi,[rip+0x281d7f]        # 295a20 <killer1>
   13ca1:	movdqu xmm7,XMMWORD PTR [rsi]
   13ca5:	mov    DWORD PTR [rsi],r11d
   13ca8:	add    rcx,rdi
   13cab:	mov    r10,QWORD PTR [rcx+0x4]
   13caf:	mov    edi,DWORD PTR [rcx+0x14]
   13cb2:	mov    QWORD PTR [rsp+0x8],r10
   13cb7:	mov    r10,QWORD PTR [rcx+0xc]
   13cbb:	movups XMMWORD PTR [rcx],xmm7
   13cbe:	mov    QWORD PTR [rsp+0x10],r10
   13cc3:	mov    r10,QWORD PTR [rsi+0x10]
   13cc7:	mov    DWORD PTR [rsi+0x14],edi
   13cca:	lea    rdi,[rip+0x5550f]        # 691e0 <killer_scores>
   13cd1:	mov    QWORD PTR [rcx+0x10],r10
   13cd5:	mov    r10,QWORD PTR [rsp+0x8]
   13cda:	mov    QWORD PTR [rsi+0x4],r10
   13cde:	mov    r10,QWORD PTR [rsp+0x10]
   13ce3:	mov    QWORD PTR [rsi+0xc],r10
   13ce7:	mov    esi,DWORD PTR [rsp]
   13cea:	lea    r10,[rip+0x559cf]        # 696c0 <killer_scores2>
   13cf1:	mov    DWORD PTR [rdi+rax*4],esi
   13cf4:	mov    edi,DWORD PTR [rsp+0x4]
   13cf8:	mov    DWORD PTR [r10+rax*4],edi
   13cfc:	jmp    1361c <search_root+0x53c>
   13d01:	nop    DWORD PTR [rax+0x0]
   13d08:	cmp    DWORD PTR [rip+0x5599d],0x1        # 696ac <i_depth>
   13d0f:	jle    1394e <search_root+0x86e>
   13d15:	mov    edi,DWORD PTR [rsp+0x20]
   13d19:	cmp    DWORD PTR [rsp+0x34],edi
   13d1d:	jle    13ea0 <search_root+0xdc0>
   13d23:	mov    edi,DWORD PTR [rsp+0x20]
   13d27:	cmp    DWORD PTR [rsp],edi
   13d2a:	jl     13eb3 <search_root+0xdd3>
   13d30:	mov    DWORD PTR [rip+0x53b9e],0x1        # 678d8 <failed>
   13d3a:	lea    rax,[rbp+rbp*2+0x0]
   13d3f:	lea    rsi,[r15+rax*8]
   13d43:	call   18400 <post_fl_thinking>
   13d48:	mov    edi,DWORD PTR [rsp+0x20]
   13d4c:	cmp    DWORD PTR [rip+0x267b8e],edi        # 27b8e0 <cur_score>
   13d52:	mov    eax,DWORD PTR [rip+0x269da8]        # 27db00 <time_exit>
   13d58:	jge    13e89 <search_root+0xda9>
   13d5e:	test   eax,eax
   13d60:	jne    139f7 <search_root+0x917>
   13d66:	lea    rax,[rbp+rbp*2+0x0]
   13d6b:	mov    DWORD PTR [rip+0x267b6f],edi        # 27b8e0 <cur_score>
   13d71:	mov    r14d,0x1
   13d77:	lea    rax,[r15+rax*8]
   13d7b:	mov    DWORD PTR [rip+0x545ff],ebx        # 68380 <bestmovenum>
   13d81:	mov    esi,DWORD PTR [rax]
   13d83:	mov    DWORD PTR [rsp+0x4],esi
   13d87:	mov    esi,DWORD PTR [rax+0x4]
   13d8a:	mov    DWORD PTR [rsp+0x8],esi
   13d8e:	mov    esi,DWORD PTR [rax+0x8]
   13d91:	mov    DWORD PTR [rsp+0x10],esi
   13d95:	mov    esi,DWORD PTR [rax+0xc]
   13d98:	mov    DWORD PTR [rsp+0x18],esi
   13d9c:	mov    esi,DWORD PTR [rax+0x10]
   13d9f:	mov    eax,DWORD PTR [rax+0x14]
   13da2:	mov    DWORD PTR [rsp+0x40],0x0
   13daa:	mov    DWORD PTR [rsp+0x1c],esi
   13dae:	mov    DWORD PTR [rsp+0x28],eax
   13db2:	jmp    13417 <search_root+0x337>
   13db7:	cmp    DWORD PTR [rdi+0x4],r9d
   13dbb:	jne    135e5 <search_root+0x505>
   13dc1:	lea    r11,[rbp+rbp*2+0x0]
   13dc6:	mov    r10d,DWORD PTR [rdi+0xc]
   13dca:	cmp    DWORD PTR [rsp+r11*8+0x106c],r10d
   13dd2:	jne    135e5 <search_root+0x505>
   13dd8:	lea    r10,[rip+0x27f921]        # 293700 <killer_scores3>
   13ddf:	mov    esi,DWORD PTR [r10+rax*4]
   13de3:	lea    r11d,[rsi+0x1]
   13de7:	lea    rsi,[rip+0x558d2]        # 696c0 <killer_scores2>
   13dee:	mov    esi,DWORD PTR [rsi+rax*4]
   13df1:	mov    DWORD PTR [r10+rax*4],r11d
   13df5:	mov    DWORD PTR [rsp+0x4],esi
   13df9:	cmp    r11d,esi
   13dfc:	jle    1361c <search_root+0x53c>
   13e02:	lea    rsi,[rip+0x55e77]        # 69c80 <killer2>
   13e09:	movdqu xmm7,XMMWORD PTR [rdi]
   13e0d:	add    rcx,rsi
   13e10:	mov    r10d,DWORD PTR [rcx+0x14]
   13e14:	mov    esi,r10d
   13e17:	mov    r10,QWORD PTR [rcx+0x4]
   13e1b:	mov    QWORD PTR [rsp+0x8],r10
   13e20:	mov    r10,QWORD PTR [rcx+0xc]
   13e24:	movups XMMWORD PTR [rcx],xmm7
   13e27:	mov    QWORD PTR [rsp+0x10],r10
   13e2c:	mov    r10,QWORD PTR [rdi+0x10]
   13e30:	mov    DWORD PTR [rdi+0x14],esi
   13e33:	lea    rsi,[rip+0x55886]        # 696c0 <killer_scores2>
   13e3a:	mov    QWORD PTR [rcx+0x10],r10
   13e3e:	mov    ecx,DWORD PTR [rsp]
   13e41:	mov    r10,QWORD PTR [rsp+0x10]
   13e46:	mov    DWORD PTR [rsi+rax*4],r11d
   13e4a:	mov    DWORD PTR [rdi],ecx
   13e4c:	mov    esi,DWORD PTR [rsp+0x4]
   13e50:	mov    rcx,QWORD PTR [rsp+0x8]
   13e55:	mov    QWORD PTR [rdi+0xc],r10
   13e59:	lea    r10,[rip+0x27f8a0]        # 293700 <killer_scores3>
   13e60:	mov    DWORD PTR [r10+rax*4],esi
   13e64:	mov    QWORD PTR [rdi+0x4],rcx
   13e68:	jmp    1361c <search_root+0x53c>
   13e6d:	nop    DWORD PTR [rax]
   13e70:	mov    DWORD PTR [rip+0x269a26],0x1        # 27d8a0 <result>
   13e7a:	jmp    134b0 <search_root+0x3d0>
   13e7f:	mov    r13,QWORD PTR [rsp+0x38]
   13e84:	jmp    134b0 <search_root+0x3d0>
   13e89:	test   eax,eax
   13e8b:	je     13be8 <search_root+0xb08>
   13e91:	jmp    139f7 <search_root+0x917>
   13e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13ea0:	lea    rax,[rbp+rbp*2+0x0]
   13ea5:	lea    rsi,[r15+rax*8]
   13ea9:	call   182a0 <post_fh_thinking>
   13eae:	jmp    13d48 <search_root+0xc68>
   13eb3:	mov    edx,DWORD PTR [rip+0x2838a7]        # 297760 <ply>
   13eb9:	lea    rsi,[rbp+rbp*2+0x0]
   13ebe:	lea    rax,[rip+0x579fb]        # 6b8c0 <pv>
   13ec5:	shl    rsi,0x3
   13ec9:	movdqu xmm7,XMMWORD PTR [rsp+rsi*1+0x1060]
   13ed2:	lea    edi,[rdx-0x1]
   13ed5:	mov    rsi,QWORD PTR [rsp+rsi*1+0x1070]
   13edd:	movsxd rdi,edi
   13ee0:	imul   rcx,rdi,0x1c38
   13ee7:	add    rcx,rax
   13eea:	mov    QWORD PTR [rcx+0x10],rsi
   13eee:	movsxd rsi,edx
   13ef1:	movups XMMWORD PTR [rcx],xmm7
   13ef4:	lea    rcx,[rip+0x269c25]        # 27db20 <pv_length>
   13efb:	mov    r11d,DWORD PTR [rcx+rsi*4]
   13eff:	cmp    r11d,edx
   13f02:	jle    13f58 <search_root+0xe78>
   13f04:	mov    r9d,r11d
   13f07:	imul   rcx,rsi,0x1c38
   13f0e:	sub    r9d,edx
   13f11:	imul   rsi,rsi,0xffffffffffffe3e0
   13f18:	mov    edx,r9d
   13f1b:	sub    edx,0x1
   13f1e:	add    rax,rcx
   13f21:	lea    r10,[rdx+rdx*2]
   13f25:	lea    rdx,[rip+0x579ac]        # 6b8d8 <pv+0x18>
   13f2c:	add    rdx,rcx
   13f2f:	imul   rcx,rdi,0x1c20
   13f36:	lea    r10,[rdx+r10*8]
   13f3a:	movdqu xmm6,XMMWORD PTR [rax]
   13f3e:	lea    rdx,[rax+rsi*1]
   13f42:	add    rax,0x18
   13f46:	movups XMMWORD PTR [rdx+rcx*1],xmm6
   13f4a:	mov    r8,QWORD PTR [rax-0x8]
   13f4e:	mov    QWORD PTR [rdx+rcx*1+0x10],r8
   13f53:	cmp    rax,r10
   13f56:	jne    13f3a <search_root+0xe5a>
   13f58:	lea    rax,[rip+0x269bc1]        # 27db20 <pv_length>
   13f5f:	mov    DWORD PTR [rax+rdi*4],r11d
   13f63:	mov    edi,DWORD PTR [rsp+0x20]
   13f67:	call   17ea0 <post_thinking>
   13f6c:	jmp    13d48 <search_root+0xc68>
   13f71:	call   1310 <__stack_chk_fail@plt>
   13f76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013f80 <think>:
   13f80:	endbr64 
   13f84:	push   r15
   13f86:	push   r14
   13f88:	push   r13
   13f8a:	push   r12
   13f8c:	push   rbp
   13f8d:	push   rbx
   13f8e:	sub    rsp,0x1000
   13f95:	or     QWORD PTR [rsp],0x0
   13f9a:	sub    rsp,0x1000
   13fa1:	or     QWORD PTR [rsp],0x0
   13fa6:	sub    rsp,0x1000
   13fad:	or     QWORD PTR [rsp],0x0
   13fb2:	sub    rsp,0xd8
   13fb9:	mov    QWORD PTR [rsp+0x58],rdi
   13fbe:	mov    r13d,ecx
   13fc1:	mov    rax,QWORD PTR fs:0x28
   13fca:	mov    QWORD PTR [rsp+0x30c8],rax
   13fd2:	xor    eax,eax
   13fd4:	mov    DWORD PTR [rsp+0x60],0x0
   13fdc:	mov    DWORD PTR [rip+0x111be],0x0        # 251a4 <userealholdings>
   13fe6:	mov    DWORD PTR [rsp+0x68],0x0
   13fee:	mov    DWORD PTR [rsp+0x1c],0x0
   13ff6:	mov    DWORD PTR [rsp+0x6c],0x0
   13ffe:	mov    DWORD PTR [rip+0x2678d4],0x0        # 27b8dc <nodes>
   14008:	mov    DWORD PTR [rip+0x5788e],0x0        # 6b8a0 <qnodes>
   14012:	mov    DWORD PTR [rip+0x283744],0x1        # 297760 <ply>
   1401c:	mov    DWORD PTR [rip+0x111a2],0x0        # 251c8 <ECacheProbes>
   14026:	mov    DWORD PTR [rip+0x11188],0x0        # 251b8 <ECacheHits>
   14030:	mov    DWORD PTR [rip+0x283746],0x0        # 297780 <TTProbes>
   1403a:	mov    DWORD PTR [rip+0x283750],0x0        # 297794 <TTHits>
   14044:	mov    DWORD PTR [rip+0x283742],0x0        # 297790 <TTStores>
   1404e:	mov    DWORD PTR [rip+0x269f7c],0x0        # 27dfd4 <NCuts>
   14058:	mov    DWORD PTR [rip+0x28370a],0x0        # 29776c <NTries>
   14062:	mov    DWORD PTR [rip+0x2836d8],0x0        # 297744 <TExt>
   1406c:	mov    DWORD PTR [rip+0x5501a],0x0        # 69090 <FH>
   14076:	mov    DWORD PTR [rip+0x53860],0x0        # 678e0 <FHF>
   14080:	mov    DWORD PTR [rip+0x5560e],0x0        # 69698 <PVS>
   1408a:	mov    DWORD PTR [rip+0x269810],0x0        # 27d8a4 <FULL>
   14094:	mov    DWORD PTR [rip+0x27f646],0x0        # 2936e4 <PVSF>
   1409e:	mov    DWORD PTR [rip+0x555ec],0x0        # 69694 <ext_check>
   140a8:	mov    DWORD PTR [rip+0x53832],0x0        # 678e4 <ext_recap>
   140b2:	mov    DWORD PTR [rip+0x5380c],0x0        # 678c8 <ext_onerep>
   140bc:	mov    DWORD PTR [rip+0x53816],0x0        # 678dc <razor_drop>
   140c6:	mov    DWORD PTR [rip+0x54af4],0x0        # 68bc4 <razor_material>
   140d0:	mov    DWORD PTR [rip+0x54fba],0x0        # 69094 <drop_cuts>
   140da:	mov    DWORD PTR [rip+0x537f0],0x0        # 678d4 <extendedtime>
   140e4:	mov    DWORD PTR [rip+0x52e92],0x0        # 66f80 <forcedwin>
   140ee:	mov    DWORD PTR [rip+0x2a630],0xc8        # 3e728 <maxposdiff>
   140f8:	mov    BYTE PTR [rip+0x537e9],0x0        # 678e8 <true_i_depth>
   140ff:	mov    DWORD PTR [rip+0x54277],0xffffffff        # 68380 <bestmovenum>
   14109:	call   19230 <interrupt>
   1410e:	test   eax,eax
   14110:	je     14124 <think+0x1a4>
   14112:	mov    eax,DWORD PTR [rip+0x550b0]        # 691c8 <is_analyzing>
   14118:	or     eax,DWORD PTR [rip+0x28363e]        # 29775c <is_pondering>
   1411e:	jne    14e05 <think+0xe85>
   14124:	call   18c90 <rtime>
   14129:	lea    r15,[rsp+0xc0]
   14131:	mov    DWORD PTR [rip+0x53785],0x0        # 678c0 <legals>
   1413b:	mov    QWORD PTR [rip+0x2694fe],rax        # 27d640 <start_time>
   14142:	xor    eax,eax
   14144:	cmp    DWORD PTR [rip+0x267675],0x4        # 27b7c0 <Variant>
   1414b:	mov    rdi,r15
   1414e:	sete   al
   14151:	mov    DWORD PTR [rip+0x26766d],eax        # 27b7c4 <captures>
   14157:	call   9b80 <gen>
   1415c:	mov    eax,DWORD PTR [rip+0x2a5a6]        # 3e708 <numb_moves>
   14162:	mov    DWORD PTR [rsp+0x64],eax
   14166:	call   7ca0 <in_check>
   1416b:	mov    r10d,DWORD PTR [rip+0x2a596]        # 3e708 <numb_moves>
   14172:	mov    ebx,eax
   14174:	test   r10d,r10d
   14177:	jle    141b5 <think+0x235>
   14179:	xor    ebp,ebp
   1417b:	mov    esi,ebp
   1417d:	mov    rdi,r15
   14180:	call   8e00 <make>
   14185:	mov    edx,ebx
   14187:	mov    esi,ebp
   14189:	mov    rdi,r15
   1418c:	call   6f70 <check_legal>
   14191:	test   eax,eax
   14193:	je     141a0 <think+0x220>
   14195:	add    DWORD PTR [rip+0x53724],0x1        # 678c0 <legals>
   1419c:	mov    DWORD PTR [rsp+0x68],ebp
   141a0:	mov    esi,ebp
   141a2:	mov    rdi,r15
   141a5:	add    ebp,0x1
   141a8:	call   ae30 <unmake>
   141ad:	cmp    DWORD PTR [rip+0x2a555],ebp        # 3e708 <numb_moves>
   141b3:	jg     1417b <think+0x1fb>
   141b5:	mov    eax,DWORD PTR [rip+0x267605]        # 27b7c0 <Variant>
   141bb:	cmp    eax,0x4
   141be:	je     14495 <think+0x515>
   141c4:	cmp    eax,0x1
   141c7:	je     141e2 <think+0x262>
   141c9:	mov    r9d,DWORD PTR [rip+0x28358c]        # 29775c <is_pondering>
   141d0:	test   r9d,r9d
   141d3:	jne    141e2 <think+0x262>
   141d5:	cmp    DWORD PTR [rip+0x536e4],0x1        # 678c0 <legals>
   141dc:	je     150f0 <think+0x1170>
   141e2:	call   bbb0 <check_phase>
   141e7:	mov    eax,DWORD PTR [rip+0x28355b]        # 297748 <phase>
   141ed:	cmp    eax,0x1
   141f0:	je     14c86 <think+0xd06>
   141f6:	cmp    eax,0x2
   141f9:	je     14c75 <think+0xcf5>
   141ff:	test   eax,eax
   14201:	je     14c64 <think+0xce4>
   14207:	mov    r8d,DWORD PTR [rip+0x28354e]        # 29775c <is_pondering>
   1420e:	test   r8d,r8d
   14211:	jne    14c50 <think+0xcd0>
   14217:	mov    edx,DWORD PTR [rip+0x283533]        # 297750 <fixed_time>
   1421d:	test   edx,edx
   1421f:	jne    1423f <think+0x2bf>
   14221:	mov    edi,DWORD PTR [rip+0x283519]        # 297740 <go_fast>
   14227:	test   edi,edi
   14229:	je     14c97 <think+0xd17>
   1422f:	call   16de0 <allocate_time>
   14234:	mov    edx,eax
   14236:	cmp    eax,0x28
   14239:	jg     14e25 <think+0xea5>
   1423f:	mov    DWORD PTR [rip+0x5545f],edx        # 696a4 <time_for_move>
   14245:	mov    eax,DWORD PTR [rsp+0x60]
   14249:	test   eax,eax
   1424b:	je     14bbc <think+0xc3c>
   14251:	pxor   xmm0,xmm0
   14255:	pxor   xmm1,xmm1
   14259:	mov    edi,0x1
   1425e:	cvtsi2ss xmm0,edx
   14262:	lea    rsi,[rip+0xa9ef]        # 1ec58 <sbishop+0xe38>
   14269:	cvtsi2ss xmm1,eax
   1426d:	xor    eax,eax
   1426f:	addss  xmm0,xmm0
   14273:	cvtss2sd xmm1,xmm1
   14277:	addsd  xmm1,QWORD PTR [rip+0xaa79]        # 1ecf8 <rc_index.4552+0x38>
   1427f:	cvtss2sd xmm0,xmm0
   14283:	divsd  xmm0,xmm1
   14287:	cvttsd2si edx,xmm0
   1428b:	mov    DWORD PTR [rip+0x55413],edx        # 696a4 <time_for_move>
   14291:	call   1420 <__printf_chk@plt>
   14296:	mov    esi,DWORD PTR [rip+0x269604]        # 27d8a0 <result>
   1429c:	test   esi,esi
   1429e:	je     146da <think+0x75a>
   142a4:	mov    r8d,DWORD PTR [rip+0x52ce9]        # 66f94 <pn_move+0x4>
   142ab:	cmp    r8d,DWORD PTR [rip+0x10332]        # 245e4 <dummy+0x4>
   142b2:	je     14e39 <think+0xeb9>
   142b8:	mov    edx,DWORD PTR [rip+0x54f0a]        # 691c8 <is_analyzing>
   142be:	test   edx,edx
   142c0:	jne    146f8 <think+0x778>
   142c6:	mov    rax,QWORD PTR [rip+0x52cd3]        # 66fa0 <pn_move+0x10>
   142cd:	movdqu xmm3,XMMWORD PTR [rip+0x52cbb]        # 66f90 <pn_move>
   142d5:	mov    r13d,DWORD PTR [rip+0x52cb4]        # 66f90 <pn_move>
   142dc:	mov    r14d,DWORD PTR [rip+0x52cb9]        # 66f9c <pn_move+0xc>
   142e3:	mov    QWORD PTR [rsp+0x90],rax
   142eb:	mov    eax,DWORD PTR [rip+0x52ca7]        # 66f98 <pn_move+0x8>
   142f1:	movaps XMMWORD PTR [rsp+0x80],xmm3
   142f9:	mov    DWORD PTR [rsp],eax
   142fc:	mov    eax,DWORD PTR [rip+0x52c9e]        # 66fa0 <pn_move+0x10>
   14302:	mov    DWORD PTR [rsp+0x18],eax
   14306:	mov    eax,DWORD PTR [rip+0x52c98]        # 66fa4 <pn_move+0x14>
   1430c:	mov    DWORD PTR [rsp+0x14],eax
   14310:	mov    esi,DWORD PTR [rip+0x52c6a]        # 66f80 <forcedwin>
   14316:	mov    edx,DWORD PTR [rip+0x52c6c]        # 66f88 <alllosers>
   1431c:	test   esi,esi
   1431e:	jne    14358 <think+0x3d8>
   14320:	mov    eax,DWORD PTR [rip+0x26749a]        # 27b7c0 <Variant>
   14326:	sub    eax,0x3
   14329:	cmp    eax,0x1
   1432c:	jbe    14ca3 <think+0xd23>
   14332:	mov    eax,DWORD PTR [rsp+0x14]
   14336:	mov    DWORD PTR [rsp+0x38],r14d
   1433b:	mov    DWORD PTR [rsp+0x40],r8d
   14340:	mov    DWORD PTR [rsp+0x4c],eax
   14344:	mov    eax,DWORD PTR [rsp+0x18]
   14348:	mov    DWORD PTR [rsp+0x44],r13d
   1434d:	mov    DWORD PTR [rsp+0x48],eax
   14351:	mov    eax,DWORD PTR [rsp]
   14354:	mov    DWORD PTR [rsp+0x3c],eax
   14358:	test   edx,edx
   1435a:	je     14508 <think+0x588>
   14360:	mov    eax,DWORD PTR [rsp+0x4c]
   14364:	mov    ebx,DWORD PTR [rsp+0x48]
   14368:	mov    r14d,DWORD PTR [rsp+0x38]
   1436d:	mov    ebp,DWORD PTR [rsp+0x3c]
   14371:	mov    DWORD PTR [rsp+0x24],eax
   14375:	mov    eax,DWORD PTR [rsp+0x40]
   14379:	mov    r12d,DWORD PTR [rsp+0x44]
   1437e:	mov    DWORD PTR [rsp+0x20],eax
   14382:	mov    eax,DWORD PTR [rsp+0x60]
   14386:	test   eax,eax
   14388:	je     14398 <think+0x418>
   1438a:	mov    eax,DWORD PTR [rip+0x2833e8]        # 297778 <xb_mode>
   14390:	test   eax,eax
   14392:	jne    14cf4 <think+0xd74>
   14398:	mov    r13,QWORD PTR [rip+0x2692a1]        # 27d640 <start_time>
   1439f:	call   18c90 <rtime>
   143a4:	mov    rdi,rax
   143a7:	mov    rsi,r13
   143aa:	call   186f0 <rdifftime>
   143af:	mov    r15d,DWORD PTR [rip+0x269172]        # 27d528 <moves_to_tc>
   143b6:	sub    DWORD PTR [rip+0x2833b4],eax        # 297770 <time_left>
   143bc:	test   r15d,r15d
   143bf:	je     14524 <think+0x5a4>
   143c5:	mov    r13d,DWORD PTR [rip+0x283390]        # 29775c <is_pondering>
   143cc:	test   r13d,r13d
   143cf:	jne    14403 <think+0x483>
   143d1:	mov    ecx,DWORD PTR [rip+0x552cd]        # 696a4 <time_for_move>
   143d7:	sub    ecx,eax
   143d9:	mov    eax,DWORD PTR [rip+0x283395]        # 297774 <inc>
   143df:	add    eax,ecx
   143e1:	add    DWORD PTR [rip+0x269bf9],eax        # 27dfe0 <time_cushion>
   143e7:	cmp    DWORD PTR [rsp+0x1c],0xf423e
   143ef:	je     14dcc <think+0xe4c>
   143f5:	cmp    DWORD PTR [rsp+0x1c],0xfff0bdc2
   143fd:	je     14550 <think+0x5d0>
   14403:	mov    eax,DWORD PTR [rip+0x269497]        # 27d8a0 <result>
   14409:	mov    r9d,DWORD PTR [rip+0x2696f8]        # 27db08 <post>
   14410:	mov    edx,DWORD PTR [rip+0x2673aa]        # 27b7c0 <Variant>
   14416:	sub    eax,0x1
   14419:	test   r9d,r9d
   1441c:	je     145cb <think+0x64b>
   14422:	mov    r8d,DWORD PTR [rip+0x28334f]        # 297778 <xb_mode>
   14429:	test   r8d,r8d
   1442c:	je     145cb <think+0x64b>
   14432:	cmp    eax,0x4
   14435:	ja     1456c <think+0x5ec>
   1443b:	cmp    edx,0x1
   1443e:	je     1460a <think+0x68a>
   14444:	mov    r15d,r14d
   14447:	mov    rax,QWORD PTR [rsp+0x58]
   1444c:	mov    edi,DWORD PTR [rsp+0x20]
   14450:	mov    ecx,DWORD PTR [rsp+0x24]
   14454:	mov    DWORD PTR [rax],r12d
   14457:	mov    DWORD PTR [rax+0x4],edi
   1445a:	mov    DWORD PTR [rax+0x8],ebp
   1445d:	mov    DWORD PTR [rax+0xc],r15d
   14461:	mov    DWORD PTR [rax+0x10],ebx
   14464:	mov    DWORD PTR [rax+0x14],ecx
   14467:	mov    rax,QWORD PTR [rsp+0x30c8]
   1446f:	xor    rax,QWORD PTR fs:0x28
   14478:	jne    1501a <think+0x109a>
   1447e:	mov    rax,QWORD PTR [rsp+0x58]
   14483:	add    rsp,0x30d8
   1448a:	pop    rbx
   1448b:	pop    rbp
   1448c:	pop    r12
   1448e:	pop    r13
   14490:	pop    r14
   14492:	pop    r15
   14494:	ret    
   14495:	mov    ebp,DWORD PTR [rip+0x53425]        # 678c0 <legals>
   1449b:	test   ebp,ebp
   1449d:	jne    141c9 <think+0x249>
   144a3:	mov    DWORD PTR [rip+0x267317],0x0        # 27b7c4 <captures>
   144ad:	mov    rdi,r15
   144b0:	call   9b80 <gen>
   144b5:	mov    eax,DWORD PTR [rip+0x2a24d]        # 3e708 <numb_moves>
   144bb:	mov    DWORD PTR [rsp+0x64],eax
   144bf:	test   eax,eax
   144c1:	jle    144fd <think+0x57d>
   144c3:	mov    esi,ebp
   144c5:	mov    rdi,r15
   144c8:	call   8e00 <make>
   144cd:	mov    edx,ebx
   144cf:	mov    esi,ebp
   144d1:	mov    rdi,r15
   144d4:	call   6f70 <check_legal>
   144d9:	test   eax,eax
   144db:	je     144e8 <think+0x568>
   144dd:	add    DWORD PTR [rip+0x533dc],0x1        # 678c0 <legals>
   144e4:	mov    DWORD PTR [rsp+0x68],ebp
   144e8:	mov    esi,ebp
   144ea:	mov    rdi,r15
   144ed:	add    ebp,0x1
   144f0:	call   ae30 <unmake>
   144f5:	cmp    DWORD PTR [rip+0x2a20d],ebp        # 3e708 <numb_moves>
   144fb:	jg     144c3 <think+0x543>
   144fd:	mov    eax,DWORD PTR [rip+0x2672bd]        # 27b7c0 <Variant>
   14503:	jmp    141c4 <think+0x244>
   14508:	mov    eax,DWORD PTR [rsp+0x14]
   1450c:	mov    ebx,DWORD PTR [rsp+0x18]
   14510:	mov    DWORD PTR [rsp+0x20],r8d
   14515:	mov    r12d,r13d
   14518:	mov    ebp,DWORD PTR [rsp]
   1451b:	mov    DWORD PTR [rsp+0x24],eax
   1451f:	jmp    14382 <think+0x402>
   14524:	cmp    DWORD PTR [rsp+0x1c],0xf423e
   1452c:	je     14dbc <think+0xe3c>
   14532:	cmp    DWORD PTR [rsp+0x1c],0xfff0bdc2
   1453a:	jne    14403 <think+0x483>
   14540:	mov    r10d,DWORD PTR [rip+0x283215]        # 29775c <is_pondering>
   14547:	test   r10d,r10d
   1454a:	jne    14403 <think+0x483>
   14550:	cmp    DWORD PTR [rip+0x268fc9],0x1        # 27d520 <white_to_move>
   14557:	je     14dd9 <think+0xe59>
   1455d:	mov    DWORD PTR [rip+0x269339],0x3        # 27d8a0 <result>
   14567:	jmp    14de3 <think+0xe63>
   1456c:	mov    eax,DWORD PTR [rip+0x52a0e]        # 66f80 <forcedwin>
   14572:	or     eax,DWORD PTR [rip+0x2831e4]        # 29775c <is_pondering>
   14578:	jne    145d4 <think+0x654>
   1457a:	mov    ecx,DWORD PTR [rsp+0x1c]
   1457e:	cmp    ecx,0xf40b0
   14584:	jle    145d4 <think+0x654>
   14586:	mov    eax,0xf4240
   1458b:	lea    rsi,[rip+0xa6da]        # 1ec6c <sbishop+0xe4c>
   14592:	sub    eax,ecx
   14594:	mov    r8d,eax
   14597:	shr    r8d,0x1f
   1459b:	add    r8d,eax
   1459e:	sar    r8d,1
   145a1:	cmp    edx,0x1
   145a4:	mov    edx,r8d
   145a7:	jne    145b0 <think+0x630>
   145a9:	lea    rsi,[rip+0xa598]        # 1eb48 <sbishop+0xd28>
   145b0:	mov    edi,0x1
   145b5:	xor    eax,eax
   145b7:	call   1420 <__printf_chk@plt>
   145bc:	mov    eax,DWORD PTR [rip+0x2692de]        # 27d8a0 <result>
   145c2:	mov    edx,DWORD PTR [rip+0x2671f8]        # 27b7c0 <Variant>
   145c8:	sub    eax,0x1
   145cb:	cmp    eax,0x4
   145ce:	jbe    1443b <think+0x4bb>
   145d4:	cmp    BYTE PTR [rip+0x5330d],0x2        # 678e8 <true_i_depth>
   145db:	jle    1443b <think+0x4bb>
   145e1:	mov    eax,DWORD PTR [rip+0xfffd]        # 245e4 <dummy+0x4>
   145e7:	cmp    DWORD PTR [rip+0x529a7],eax        # 66f94 <pn_move+0x4>
   145ed:	jne    1443b <think+0x4bb>
   145f3:	mov    edi,DWORD PTR [rip+0x283163]        # 29775c <is_pondering>
   145f9:	test   edi,edi
   145fb:	jne    1443b <think+0x4bb>
   14601:	cmp    edx,0x1
   14604:	jne    14ea3 <think+0xf23>
   1460a:	cmp    DWORD PTR [rsp+0x1c],0xfff0be25
   14612:	jge    1513d <think+0x11bd>
   14618:	cmp    DWORD PTR [rsp+0x1c],0xfff0be24
   14620:	je     14444 <think+0x4c4>
   14626:	mov    eax,DWORD PTR [rip+0xffb8]        # 245e4 <dummy+0x4>
   1462c:	cmp    DWORD PTR [rip+0x52962],eax        # 66f94 <pn_move+0x4>
   14632:	jne    14444 <think+0x4c4>
   14638:	mov    esi,DWORD PTR [rip+0x10b66]        # 251a4 <userealholdings>
   1463e:	test   esi,esi
   14640:	jne    14e5d <think+0xedd>
   14646:	lea    rdi,[rip+0x10a53]        # 250a0 <realholdings>
   1464d:	mov    DWORD PTR [rip+0x10b4d],0x1        # 251a4 <userealholdings>
   14657:	call   3a70 <ProcessHoldings>
   1465c:	lea    rdi,[rip+0xa624]        # 1ec87 <sbishop+0xe67>
   14663:	mov    DWORD PTR [rip+0x53257],0x0        # 678c4 <tradefreely>
   1466d:	call   12d0 <puts@plt>
   14672:	mov    eax,DWORD PTR [rsp+0x4c]
   14676:	mov    DWORD PTR [rsp+0x28],r14d
   1467b:	mov    r8d,DWORD PTR [rsp+0x40]
   14680:	mov    r13d,DWORD PTR [rsp+0x44]
   14685:	mov    DWORD PTR [rsp+0x14],eax
   14689:	mov    eax,DWORD PTR [rsp+0x48]
   1468d:	mov    r14d,DWORD PTR [rsp+0x38]
   14692:	mov    DWORD PTR [rsp+0x18],eax
   14696:	mov    eax,DWORD PTR [rsp+0x3c]
   1469a:	mov    DWORD PTR [rsp],eax
   1469d:	mov    eax,DWORD PTR [rsp+0x14]
   146a1:	mov    DWORD PTR [rsp+0x44],r13d
   146a6:	mov    r13d,r12d
   146a9:	mov    DWORD PTR [rsp+0x38],r14d
   146ae:	mov    DWORD PTR [rsp+0x4c],eax
   146b2:	mov    eax,DWORD PTR [rsp+0x18]
   146b6:	mov    DWORD PTR [rsp+0x40],r8d
   146bb:	mov    DWORD PTR [rsp+0x48],eax
   146bf:	mov    eax,DWORD PTR [rsp]
   146c2:	mov    DWORD PTR [rsp+0x18],ebx
   146c6:	mov    DWORD PTR [rsp+0x3c],eax
   146ca:	mov    eax,DWORD PTR [rsp+0x24]
   146ce:	mov    DWORD PTR [rsp],ebp
   146d1:	mov    DWORD PTR [rsp+0x14],eax
   146d5:	jmp    13ffe <think+0x7e>
   146da:	mov    ecx,DWORD PTR [rip+0x528a0]        # 66f80 <forcedwin>
   146e0:	test   ecx,ecx
   146e2:	je     146f8 <think+0x778>
   146e4:	mov    r8d,DWORD PTR [rip+0x528a9]        # 66f94 <pn_move+0x4>
   146eb:	cmp    r8d,DWORD PTR [rip+0xfef2]        # 245e4 <dummy+0x4>
   146f2:	jne    142b8 <think+0x338>
   146f8:	lea    rsi,[rip+0x58de1]        # 6d4e0 <pv+0x1c20>
   146ff:	lea    r8,[rip+0xfeda]        # 245e0 <dummy>
   14706:	lea    rdi,[rsi+0x20f580]
   1470d:	lea    r14,[r8+0x10]
   14711:	lea    rax,[rsi-0x1c20]
   14718:	nop    DWORD PTR [rax+rax*1+0x0]
   14720:	movdqu xmm2,XMMWORD PTR [r8]
   14725:	mov    rdx,QWORD PTR [r14]
   14728:	add    rax,0x18
   1472c:	movups XMMWORD PTR [rax-0x18],xmm2
   14730:	mov    QWORD PTR [rax-0x8],rdx
   14734:	cmp    rsi,rax
   14737:	jne    14720 <think+0x7a0>
   14739:	add    rsi,0x1c20
   14740:	cmp    rdi,rsi
   14743:	jne    14711 <think+0x791>
   14745:	mov    edx,0x14400
   1474a:	lea    rdi,[rip+0x2698af]        # 27e000 <history_h>
   14751:	xor    esi,esi
   14753:	call   1360 <memset@plt>
   14758:	lea    r12,[rip+0x54a81]        # 691e0 <killer_scores>
   1475f:	xor    eax,eax
   14761:	xor    edx,edx
   14763:	lea    rbx,[rip+0x54f56]        # 696c0 <killer_scores2>
   1476a:	lea    rbp,[rip+0x27ef8f]        # 293700 <killer_scores3>
   14771:	lea    r10,[rip+0x2812a8]        # 295a20 <killer1>
   14778:	lea    r9,[rip+0x55501]        # 69c80 <killer2>
   1477f:	lea    rdi,[rip+0x27f67a]        # 293e00 <killer3>
   14786:	lea    r8,[rip+0xfe53]        # 245e0 <dummy>
   1478d:	movdqu xmm0,XMMWORD PTR [r8]
   14792:	mov    rcx,QWORD PTR [r14]
   14795:	mov    DWORD PTR [r12+rdx*1],0x0
   1479d:	mov    DWORD PTR [rbx+rdx*1],0x0
   147a4:	mov    QWORD PTR [r10+rax*1+0x10],rcx
   147a9:	mov    QWORD PTR [r9+rax*1+0x10],rcx
   147ae:	mov    QWORD PTR [rdi+rax*1+0x10],rcx
   147b3:	movups XMMWORD PTR [r10+rax*1],xmm0
   147b8:	movups XMMWORD PTR [r9+rax*1],xmm0
   147bd:	movups XMMWORD PTR [rdi+rax*1],xmm0
   147c1:	add    rax,0x18
   147c5:	mov    DWORD PTR [rbp+rdx*1+0x0],0x0
   147cd:	add    rdx,0x4
   147d1:	cmp    rax,0x1c20
   147d7:	jne    1478d <think+0x80d>
   147d9:	lea    rdx,[rip+0x53bc0]        # 683a0 <rootnodecount>
   147e0:	xor    eax,eax
   147e2:	mov    ecx,0x100
   147e7:	mov    DWORD PTR [rip+0x2670ef],0x0        # 27b8e0 <cur_score>
   147f1:	mov    DWORD PTR [rip+0x54eb1],0x1        # 696ac <i_depth>
   147fb:	mov    rdi,rdx
   147fe:	rep stos QWORD PTR es:[rdi],rax
   14801:	mov    eax,DWORD PTR [rip+0x27dc01]        # 292408 <maxdepth>
   14807:	test   eax,eax
   14809:	jle    14ec0 <think+0xf40>
   1480f:	mov    r14d,DWORD PTR [rsp+0x28]
   14814:	mov    r8d,DWORD PTR [rsp+0x20]
   14819:	mov    DWORD PTR [rsp+0x20],r13d
   1481e:	mov    DWORD PTR [rsp+0x1c],0x0
   14826:	mov    DWORD PTR [rsp+0x24],r14d
   1482b:	mov    QWORD PTR [rsp+0x50],r15
   14830:	mov    r15d,r8d
   14833:	mov    r13,QWORD PTR [rip+0x268e06]        # 27d640 <start_time>
   1483a:	call   18c90 <rtime>
   1483f:	mov    rdi,rax
   14842:	mov    rsi,r13
   14845:	call   186f0 <rdifftime>
   1484a:	pxor   xmm1,xmm1
   1484e:	pxor   xmm0,xmm0
   14852:	mov    ecx,DWORD PTR [rip+0x54e54]        # 696ac <i_depth>
   14858:	cvtsi2sd xmm1,eax
   1485c:	cvtsi2sd xmm0,DWORD PTR [rip+0x54e40]        # 696a4 <time_for_move>
   14864:	mulsd  xmm0,QWORD PTR [rip+0xa49c]        # 1ed08 <rc_index.4552+0x48>
   1486c:	divsd  xmm0,QWORD PTR [rip+0xa48c]        # 1ed00 <rc_index.4552+0x40>
   14874:	comisd xmm1,xmm0
   14878:	jbe    14883 <think+0x903>
   1487a:	cmp    ecx,0x2
   1487d:	jg     14a6e <think+0xaee>
   14883:	cmp    DWORD PTR [rip+0x266f36],0x2        # 27b7c0 <Variant>
   1488a:	mov    edi,0x23
   1488f:	mov    eax,0x64
   14894:	mov    DWORD PTR [rip+0x5303a],0x0        # 678d8 <failed>
   1489e:	cmove  eax,edi
   148a1:	mov    edi,DWORD PTR [rsp+0x1c]
   148a5:	mov    esi,edi
   148a7:	sub    esi,eax
   148a9:	add    eax,edi
   148ab:	lea    rdi,[rsp+0xa0]
   148b3:	mov    edx,eax
   148b5:	mov    DWORD PTR [rsp+0x7c],eax
   148b9:	mov    DWORD PTR [rsp+0x78],esi
   148bd:	mov    QWORD PTR [rsp+0x70],rdi
   148c2:	call   130e0 <search_root>
   148c7:	mov    eax,DWORD PTR [rsp+0xa4]
   148ce:	mov    r13d,DWORD PTR [rsp+0xa0]
   148d6:	mov    r14d,DWORD PTR [rsp+0xb4]
   148de:	mov    DWORD PTR [rsp+0x2c],eax
   148e2:	mov    eax,DWORD PTR [rsp+0xa8]
   148e9:	mov    DWORD PTR [rsp+0x34],eax
   148ed:	mov    eax,DWORD PTR [rsp+0xac]
   148f4:	mov    DWORD PTR [rsp+0x28],eax
   148f8:	mov    eax,DWORD PTR [rsp+0xb0]
   148ff:	mov    DWORD PTR [rsp+0x30],eax
   14903:	mov    eax,DWORD PTR [rip+0x268f97]        # 27d8a0 <result>
   14909:	test   eax,eax
   1490b:	jne    14a6e <think+0xaee>
   14911:	mov    r8d,DWORD PTR [rip+0x266fc8]        # 27b8e0 <cur_score>
   14918:	mov    esi,DWORD PTR [rsp+0x78]
   1491c:	mov    rdi,QWORD PTR [rsp+0x70]
   14921:	mov    eax,DWORD PTR [rsp+0x7c]
   14925:	cmp    r8d,esi
   14928:	jg     14a85 <think+0xb05>
   1492e:	mov    DWORD PTR [rip+0x52fa0],0x1        # 678d8 <failed>
   14938:	mov    eax,DWORD PTR [rip+0x2691c2]        # 27db00 <time_exit>
   1493e:	test   eax,eax
   14940:	je     14b4e <think+0xbce>
   14946:	call   19230 <interrupt>
   1494b:	test   eax,eax
   1494d:	je     14978 <think+0x9f8>
   1494f:	cmp    DWORD PTR [rip+0x54d56],0x1        # 696ac <i_depth>
   14956:	jle    14978 <think+0x9f8>
   14958:	mov    r10d,DWORD PTR [rip+0x282dfd]        # 29775c <is_pondering>
   1495f:	test   r10d,r10d
   14962:	jne    14e05 <think+0xe85>
   14968:	mov    r9d,DWORD PTR [rip+0x282dd1]        # 297740 <go_fast>
   1496f:	test   r9d,r9d
   14972:	je     14a6e <think+0xaee>
   14978:	mov    eax,DWORD PTR [rip+0x52f5a]        # 678d8 <failed>
   1497e:	or     eax,DWORD PTR [rip+0x268ba8]        # 27d52c <time_failure>
   14984:	jne    14a1a <think+0xa9a>
   1498a:	mov    eax,DWORD PTR [rip+0x266f50]        # 27b8e0 <cur_score>
   14990:	mov    DWORD PTR [rsp+0x1c],eax
   14994:	cmp    eax,0xfff0bdc0
   14999:	je     14e05 <think+0xe85>
   1499f:	lea    rdi,[rip+0x538da]        # 68280 <postpv>
   149a6:	call   17d40 <stringize_pv>
   149ab:	mov    r8d,DWORD PTR [rip+0x26914e]        # 27db00 <time_exit>
   149b2:	mov    eax,DWORD PTR [rip+0x54cf4]        # 696ac <i_depth>
   149b8:	test   r8d,r8d
   149bb:	jne    149c3 <think+0xa43>
   149bd:	mov    BYTE PTR [rip+0x52f25],al        # 678e8 <true_i_depth>
   149c3:	cmp    eax,0x1
   149c6:	jle    149d3 <think+0xa53>
   149c8:	mov    edi,DWORD PTR [rip+0x266f12]        # 27b8e0 <cur_score>
   149ce:	call   17ea0 <post_thinking>
   149d3:	cmp    DWORD PTR [rsp+0x1c],0xdbba0
   149db:	jle    149f4 <think+0xa74>
   149dd:	mov    eax,0xf4240
   149e2:	sub    eax,DWORD PTR [rip+0x266ef8]        # 27b8e0 <cur_score>
   149e8:	cmp    eax,DWORD PTR [rip+0x54cbe]        # 696ac <i_depth>
   149ee:	jl     14ed7 <think+0xf57>
   149f4:	mov    eax,DWORD PTR [rsp+0x30]
   149f8:	mov    r15d,DWORD PTR [rsp+0x2c]
   149fd:	mov    DWORD PTR [rsp+0x14],r14d
   14a02:	mov    DWORD PTR [rsp+0x20],r13d
   14a07:	mov    DWORD PTR [rsp+0x18],eax
   14a0b:	mov    eax,DWORD PTR [rsp+0x28]
   14a0f:	mov    DWORD PTR [rsp+0x24],eax
   14a13:	mov    eax,DWORD PTR [rsp+0x34]
   14a17:	mov    DWORD PTR [rsp],eax
   14a1a:	mov    edi,DWORD PTR [rip+0x2690e0]        # 27db00 <time_exit>
   14a20:	test   edi,edi
   14a22:	jne    14a6e <think+0xaee>
   14a24:	xor    eax,eax
   14a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14a30:	mov    DWORD PTR [r12+rax*1],0x0
   14a38:	mov    DWORD PTR [rbx+rax*1],0x0
   14a3f:	mov    DWORD PTR [rbp+rax*1+0x0],0x0
   14a47:	add    rax,0x4
   14a4b:	cmp    rax,0x4b0
   14a51:	jne    14a30 <think+0xab0>
   14a53:	mov    eax,DWORD PTR [rip+0x54c53]        # 696ac <i_depth>
   14a59:	add    eax,0x1
   14a5c:	cmp    eax,DWORD PTR [rip+0x27d9a6]        # 292408 <maxdepth>
   14a62:	mov    DWORD PTR [rip+0x54c44],eax        # 696ac <i_depth>
   14a68:	jle    14833 <think+0x8b3>
   14a6e:	mov    r8d,r15d
   14a71:	mov    r13d,DWORD PTR [rsp+0x20]
   14a76:	mov    r14d,DWORD PTR [rsp+0x24]
   14a7b:	mov    r15,QWORD PTR [rsp+0x50]
   14a80:	jmp    14310 <think+0x390>
   14a85:	mov    DWORD PTR [rip+0x52e49],0x0        # 678d8 <failed>
   14a8f:	cmp    r8d,eax
   14a92:	jl     14946 <think+0x9c6>
   14a98:	mov    eax,DWORD PTR [rip+0x269062]        # 27db00 <time_exit>
   14a9e:	mov    DWORD PTR [rsp+0x70],r8d
   14aa3:	test   eax,eax
   14aa5:	jne    14946 <think+0x9c6>
   14aab:	mov    ecx,DWORD PTR [rip+0x54bfb]        # 696ac <i_depth>
   14ab1:	mov    edx,0xf4240
   14ab6:	mov    esi,0xfff0bdc0
   14abb:	call   130e0 <search_root>
   14ac0:	mov    r11d,DWORD PTR [rip+0x269039]        # 27db00 <time_exit>
   14ac7:	mov    eax,DWORD PTR [rsp+0xa0]
   14ace:	mov    edx,DWORD PTR [rsp+0xa4]
   14ad5:	mov    ecx,DWORD PTR [rsp+0xa8]
   14adc:	test   r11d,r11d
   14adf:	mov    esi,DWORD PTR [rsp+0xac]
   14ae6:	mov    edi,DWORD PTR [rsp+0xb0]
   14aed:	mov    r10d,DWORD PTR [rsp+0xb4]
   14af5:	mov    r8d,DWORD PTR [rsp+0x70]
   14afa:	jne    14b06 <think+0xb86>
   14afc:	mov    DWORD PTR [rip+0x52dd2],0x0        # 678d8 <failed>
   14b06:	mov    r11d,DWORD PTR [rsp+0x30]
   14b0b:	mov    r15d,DWORD PTR [rsp+0x2c]
   14b10:	mov    DWORD PTR [rsp+0x30],edi
   14b14:	mov    edi,DWORD PTR [rsp+0x28]
   14b18:	mov    DWORD PTR [rsp+0x14],r14d
   14b1d:	mov    r14d,r10d
   14b20:	mov    DWORD PTR [rsp+0x20],r13d
   14b25:	mov    r13d,eax
   14b28:	mov    DWORD PTR [rsp+0x24],edi
   14b2c:	mov    edi,DWORD PTR [rsp+0x34]
   14b30:	mov    DWORD PTR [rsp+0x18],r11d
   14b35:	mov    DWORD PTR [rsp+0x28],esi
   14b39:	mov    DWORD PTR [rsp],edi
   14b3c:	mov    DWORD PTR [rsp+0x34],ecx
   14b40:	mov    DWORD PTR [rsp+0x2c],edx
   14b44:	mov    DWORD PTR [rsp+0x1c],r8d
   14b49:	jmp    14946 <think+0x9c6>
   14b4e:	mov    ecx,DWORD PTR [rip+0x54b58]        # 696ac <i_depth>
   14b54:	mov    edx,0xf4240
   14b59:	mov    esi,0xfff0bdc0
   14b5e:	call   130e0 <search_root>
   14b63:	mov    eax,DWORD PTR [rsp+0xa4]
   14b6a:	mov    r13d,DWORD PTR [rsp+0xa0]
   14b72:	mov    r14d,DWORD PTR [rsp+0xb4]
   14b7a:	mov    DWORD PTR [rsp+0x2c],eax
   14b7e:	mov    eax,DWORD PTR [rsp+0xa8]
   14b85:	mov    DWORD PTR [rsp+0x34],eax
   14b89:	mov    eax,DWORD PTR [rsp+0xac]
   14b90:	mov    DWORD PTR [rsp+0x28],eax
   14b94:	mov    eax,DWORD PTR [rsp+0xb0]
   14b9b:	mov    DWORD PTR [rsp+0x30],eax
   14b9f:	mov    eax,DWORD PTR [rip+0x268f5b]        # 27db00 <time_exit>
   14ba5:	test   eax,eax
   14ba7:	jne    14946 <think+0x9c6>
   14bad:	mov    DWORD PTR [rip+0x52d21],0x0        # 678d8 <failed>
   14bb7:	jmp    14946 <think+0x9c6>
   14bbc:	mov    edi,0x1
   14bc1:	lea    rsi,[rip+0xa090]        # 1ec58 <sbishop+0xe38>
   14bc8:	xor    eax,eax
   14bca:	call   1420 <__printf_chk@plt>
   14bcf:	call   16680 <clear_tt>
   14bd4:	call   4450 <reset_ecache>
   14bd9:	lea    rdi,[rip+0x52428]        # 67008 <rootlosers+0x8>
   14be0:	lea    rcx,[rip+0x52419]        # 67000 <rootlosers>
   14be7:	xor    eax,eax
   14be9:	mov    QWORD PTR [rip+0x5240c],0x0        # 67000 <rootlosers>
   14bf4:	and    rdi,0xfffffffffffffff8
   14bf8:	mov    QWORD PTR [rip+0x528a5],0x0        # 674a8 <rootlosers+0x4a8>
   14c03:	sub    rcx,rdi
   14c06:	add    ecx,0x4b0
   14c0c:	shr    ecx,0x3
   14c0f:	rep stos QWORD PTR es:[rdi],rax
   14c12:	mov    edx,DWORD PTR [rip+0x282b44]        # 29775c <is_pondering>
   14c18:	test   edx,edx
   14c1a:	jne    14c2e <think+0xcae>
   14c1c:	mov    eax,DWORD PTR [rip+0x266b9e]        # 27b7c0 <Variant>
   14c22:	lea    edx,[rax-0x3]
   14c25:	cmp    edx,0x1
   14c28:	jbe    14d7e <think+0xdfe>
   14c2e:	movdqu xmm5,XMMWORD PTR [rip+0xf9aa]        # 245e0 <dummy>
   14c36:	mov    rax,QWORD PTR [rip+0xf9b3]        # 245f0 <dummy+0x10>
   14c3d:	movups XMMWORD PTR [rip+0x5234c],xmm5        # 66f90 <pn_move>
   14c44:	mov    QWORD PTR [rip+0x52355],rax        # 66fa0 <pn_move+0x10>
   14c4b:	jmp    14296 <think+0x316>
   14c50:	mov    DWORD PTR [rip+0x54a4a],0xf423f        # 696a4 <time_for_move>
   14c5a:	mov    edx,0xf423f
   14c5f:	jmp    14245 <think+0x2c5>
   14c64:	lea    rdi,[rip+0x9fbd]        # 1ec28 <sbishop+0xe08>
   14c6b:	call   12d0 <puts@plt>
   14c70:	jmp    14207 <think+0x287>
   14c75:	lea    rdi,[rip+0x9fcd]        # 1ec49 <sbishop+0xe29>
   14c7c:	call   12d0 <puts@plt>
   14c81:	jmp    14207 <think+0x287>
   14c86:	lea    rdi,[rip+0x9faa]        # 1ec37 <sbishop+0xe17>
   14c8d:	call   12d0 <puts@plt>
   14c92:	jmp    14207 <think+0x287>
   14c97:	call   16de0 <allocate_time>
   14c9c:	mov    edx,eax
   14c9e:	jmp    1423f <think+0x2bf>
   14ca3:	mov    eax,DWORD PTR [rip+0x268bf7]        # 27d8a0 <result>
   14ca9:	test   eax,eax
   14cab:	jne    14332 <think+0x3b2>
   14cb1:	or     edx,DWORD PTR [rip+0x282aa5]        # 29775c <is_pondering>
   14cb7:	je     14eff <think+0xf7f>
   14cbd:	mov    eax,DWORD PTR [rsp+0x14]
   14cc1:	mov    ebx,DWORD PTR [rsp+0x18]
   14cc5:	mov    DWORD PTR [rsp+0x44],r13d
   14cca:	mov    r12d,r13d
   14ccd:	mov    ebp,DWORD PTR [rsp]
   14cd0:	mov    DWORD PTR [rsp+0x40],r8d
   14cd5:	mov    DWORD PTR [rsp+0x4c],eax
   14cd9:	mov    DWORD PTR [rsp+0x48],ebx
   14cdd:	mov    DWORD PTR [rsp+0x3c],ebp
   14ce1:	mov    DWORD PTR [rsp+0x38],r14d
   14ce6:	mov    DWORD PTR [rsp+0x24],eax
   14cea:	mov    DWORD PTR [rsp+0x20],r8d
   14cef:	jmp    14382 <think+0x402>
   14cf4:	mov    eax,DWORD PTR [rsp+0x20]
   14cf8:	mov    DWORD PTR [rsp+0x80],r12d
   14d00:	lea    r13,[rsp+0x30c0]
   14d08:	sub    rsp,0x8
   14d0c:	mov    DWORD PTR [rsp+0x90],ebp
   14d13:	mov    rdi,r13
   14d16:	mov    DWORD PTR [rsp+0x8c],eax
   14d1d:	mov    eax,DWORD PTR [rsp+0x2c]
   14d21:	mov    DWORD PTR [rsp+0x94],r14d
   14d29:	mov    DWORD PTR [rsp+0x9c],eax
   14d30:	mov    DWORD PTR [rsp+0x98],ebx
   14d37:	push   QWORD PTR [rsp+0x98]
   14d3e:	push   QWORD PTR [rsp+0x98]
   14d45:	push   QWORD PTR [rsp+0x98]
   14d4c:	call   170f0 <comp_to_san>
   14d51:	add    rsp,0x20
   14d55:	mov    edx,DWORD PTR [rsp+0x60]
   14d59:	mov    rcx,r13
   14d5c:	lea    rsi,[rip+0x9dad]        # 1eb10 <sbishop+0xcf0>
   14d63:	mov    edi,0x1
   14d68:	xor    eax,eax
   14d6a:	call   1420 <__printf_chk@plt>
   14d6f:	mov    DWORD PTR [rip+0x268b27],0x0        # 27d8a0 <result>
   14d79:	jmp    14398 <think+0x418>
   14d7e:	cmp    DWORD PTR [rip+0x56b1f],0x3        # 6b8a4 <piece_count>
   14d85:	jg     14d90 <think+0xe10>
   14d87:	cmp    eax,0x3
   14d8a:	je     14c2e <think+0xcae>
   14d90:	pxor   xmm0,xmm0
   14d94:	cvtsi2ss xmm0,DWORD PTR [rip+0x54908]        # 696a4 <time_for_move>
   14d9c:	cvtss2sd xmm0,xmm0
   14da0:	divsd  xmm0,QWORD PTR [rip+0x9f58]        # 1ed00 <rc_index.4552+0x40>
   14da8:	cvttsd2si eax,xmm0
   14dac:	mov    DWORD PTR [rip+0x521fa],eax        # 66fac <pn_time>
   14db2:	call   fbc0 <proofnumberscan>
   14db7:	jmp    14296 <think+0x316>
   14dbc:	mov    r11d,DWORD PTR [rip+0x282999]        # 29775c <is_pondering>
   14dc3:	test   r11d,r11d
   14dc6:	jne    14403 <think+0x483>
   14dcc:	cmp    DWORD PTR [rip+0x26874d],0x1        # 27d520 <white_to_move>
   14dd3:	je     1455d <think+0x5dd>
   14dd9:	mov    DWORD PTR [rip+0x268abd],0x2        # 27d8a0 <result>
   14de3:	mov    eax,DWORD PTR [rip+0x268d1f]        # 27db08 <post>
   14de9:	mov    edx,DWORD PTR [rip+0x2669d1]        # 27b7c0 <Variant>
   14def:	test   eax,eax
   14df1:	je     1443b <think+0x4bb>
   14df7:	mov    eax,DWORD PTR [rip+0x268aa3]        # 27d8a0 <result>
   14dfd:	sub    eax,0x1
   14e00:	jmp    14422 <think+0x4a2>
   14e05:	mov    rcx,QWORD PTR [rsp+0x58]
   14e0a:	movdqu xmm3,XMMWORD PTR [rip+0xf7ce]        # 245e0 <dummy>
   14e12:	mov    rax,QWORD PTR [rip+0xf7d7]        # 245f0 <dummy+0x10>
   14e19:	movups XMMWORD PTR [rcx],xmm3
   14e1c:	mov    QWORD PTR [rcx+0x10],rax
   14e20:	jmp    14467 <think+0x4e7>
   14e25:	mov    DWORD PTR [rip+0x54875],0x28        # 696a4 <time_for_move>
   14e2f:	mov    edx,0x28
   14e34:	jmp    14245 <think+0x2c5>
   14e39:	movdqu xmm6,XMMWORD PTR [rip+0x5214f]        # 66f90 <pn_move>
   14e41:	mov    rcx,QWORD PTR [rsp+0x58]
   14e46:	mov    rax,QWORD PTR [rip+0x52153]        # 66fa0 <pn_move+0x10>
   14e4d:	movaps XMMWORD PTR [rsp],xmm6
   14e51:	mov    QWORD PTR [rcx+0x10],rax
   14e55:	movups XMMWORD PTR [rcx],xmm6
   14e58:	jmp    14467 <think+0x4e7>
   14e5d:	cmp    DWORD PTR [rsp+0x1c],0xfff0bdc1
   14e65:	mov    r15d,r14d
   14e68:	mov    DWORD PTR [rip+0x269172],0x1        # 27dfe4 <must_sit>
   14e72:	jl     14447 <think+0x4c7>
   14e78:	mov    ecx,DWORD PTR [rip+0x520ea]        # 66f68 <partnerdead>
   14e7e:	test   ecx,ecx
   14e80:	je     1512c <think+0x11ac>
   14e86:	lea    rdi,[rip+0x9d1b]        # 1eba8 <sbishop+0xd88>
   14e8d:	call   12d0 <puts@plt>
   14e92:	lea    rdi,[rip+0x9e06]        # 1ec9f <sbishop+0xe7f>
   14e99:	call   12d0 <puts@plt>
   14e9e:	jmp    14447 <think+0x4c7>
   14ea3:	cmp    DWORD PTR [rip+0x534d6],0xffffffff        # 68380 <bestmovenum>
   14eaa:	mov    r15d,r14d
   14ead:	jne    14447 <think+0x4c7>
   14eb3:	mov    DWORD PTR ds:0x0,0x0
   14ebe:	ud2    
   14ec0:	mov    DWORD PTR [rsp+0x1c],0x0
   14ec8:	mov    r14d,DWORD PTR [rsp+0x28]
   14ecd:	mov    r8d,DWORD PTR [rsp+0x20]
   14ed2:	jmp    14310 <think+0x390>
   14ed7:	mov    eax,DWORD PTR [rsp+0x30]
   14edb:	mov    r15,QWORD PTR [rsp+0x50]
   14ee0:	mov    DWORD PTR [rsp+0x14],r14d
   14ee5:	mov    r8d,DWORD PTR [rsp+0x2c]
   14eea:	mov    r14d,DWORD PTR [rsp+0x28]
   14eef:	mov    DWORD PTR [rsp+0x18],eax
   14ef3:	mov    eax,DWORD PTR [rsp+0x34]
   14ef7:	mov    DWORD PTR [rsp],eax
   14efa:	jmp    14310 <think+0x390>
   14eff:	mov    edi,DWORD PTR [rsp+0x14]
   14f03:	mov    ecx,DWORD PTR [rsp+0x18]
   14f07:	mov    DWORD PTR [rsp+0x30],eax
   14f0b:	mov    eax,DWORD PTR [rsp]
   14f0e:	mov    DWORD PTR [rsp+0x80],r13d
   14f16:	mov    DWORD PTR [rsp+0x94],edi
   14f1d:	lea    rdi,[rsp+0x80]
   14f25:	sub    rsp,0x8
   14f29:	mov    DWORD PTR [rsp+0x8c],r8d
   14f31:	mov    DWORD PTR [rsp+0x34],r8d
   14f36:	mov    DWORD PTR [rsp+0x90],eax
   14f3d:	mov    DWORD PTR [rsp+0x94],r14d
   14f45:	mov    DWORD PTR [rsp+0x98],ecx
   14f4c:	push   QWORD PTR [rsp+0x98]
   14f53:	push   QWORD PTR [rsp+0x98]
   14f5a:	push   QWORD PTR [rsp+0x98]
   14f61:	mov    DWORD PTR [rip+0x52965],0x0        # 678d0 <s_threat>
   14f6b:	call   10bb0 <proofnumbercheck>
   14f70:	mov    esi,DWORD PTR [rsp+0xa4]
   14f77:	mov    r11d,DWORD PTR [rsp+0xac]
   14f7f:	mov    r9d,DWORD PTR [rsp+0xb4]
   14f87:	mov    r12d,DWORD PTR [rsp+0xa0]
   14f8f:	mov    DWORD PTR [rsp+0x40],esi
   14f93:	mov    ebp,DWORD PTR [rsp+0xa8]
   14f9a:	mov    DWORD PTR [rsp+0x48],r11d
   14f9f:	mov    ebx,DWORD PTR [rsp+0xb0]
   14fa6:	mov    DWORD PTR [rsp+0x44],r9d
   14fab:	add    rsp,0x20
   14faf:	mov    r8d,DWORD PTR [rsp+0x2c]
   14fb4:	cmp    DWORD PTR [rsp+0x60],0x9
   14fb9:	mov    eax,DWORD PTR [rsp+0x30]
   14fbd:	jg     15020 <think+0x10a0>
   14fbf:	mov    ecx,DWORD PTR [rip+0x5290b]        # 678d0 <s_threat>
   14fc5:	test   ecx,ecx
   14fc7:	jne    15066 <think+0x10e6>
   14fcd:	mov    eax,DWORD PTR [rsp+0x14]
   14fd1:	mov    edx,DWORD PTR [rip+0x51fb1]        # 66f88 <alllosers>
   14fd7:	mov    DWORD PTR [rsp+0x38],r14d
   14fdc:	mov    DWORD PTR [rsp+0x40],r8d
   14fe1:	mov    r14d,DWORD PTR [rsp+0x28]
   14fe6:	mov    DWORD PTR [rsp+0x4c],eax
   14fea:	mov    eax,DWORD PTR [rsp+0x18]
   14fee:	mov    DWORD PTR [rsp+0x44],r13d
   14ff3:	mov    r8d,DWORD PTR [rsp+0x20]
   14ff8:	mov    r13d,r12d
   14ffb:	mov    DWORD PTR [rsp+0x48],eax
   14fff:	mov    eax,DWORD PTR [rsp]
   15002:	mov    DWORD PTR [rsp+0x18],ebx
   15006:	mov    DWORD PTR [rsp+0x3c],eax
   1500a:	mov    eax,DWORD PTR [rsp+0x24]
   1500e:	mov    DWORD PTR [rsp],ebp
   15011:	mov    DWORD PTR [rsp+0x14],eax
   15015:	jmp    14358 <think+0x3d8>
   1501a:	call   1310 <__stack_chk_fail@plt>
   1501f:	nop
   15020:	mov    edi,DWORD PTR [rsp+0x14]
   15024:	mov    ecx,DWORD PTR [rsp+0x18]
   15028:	mov    DWORD PTR [rsp+0x38],r14d
   1502d:	mov    r14d,r11d
   15030:	mov    eax,DWORD PTR [rsp]
   15033:	mov    DWORD PTR [rsp+0x40],r8d
   15038:	mov    r8d,esi
   1503b:	mov    DWORD PTR [rsp+0x44],r13d
   15040:	mov    edx,DWORD PTR [rip+0x51f42]        # 66f88 <alllosers>
   15046:	mov    r13d,r12d
   15049:	mov    DWORD PTR [rsp+0x4c],edi
   1504d:	mov    DWORD PTR [rsp+0x48],ecx
   15051:	mov    DWORD PTR [rsp+0x3c],eax
   15055:	mov    DWORD PTR [rsp+0x14],r9d
   1505a:	mov    DWORD PTR [rsp+0x18],ebx
   1505e:	mov    DWORD PTR [rsp],ebp
   15061:	jmp    14358 <think+0x3d8>
   15066:	mov    edx,DWORD PTR [rsp+0x64]
   1506a:	add    DWORD PTR [rsp+0x60],0x1
   1506f:	test   edx,edx
   15071:	jg     15085 <think+0x1105>
   15073:	jmp    150cd <think+0x114d>
   15075:	nop    DWORD PTR [rax]
   15078:	add    eax,0x1
   1507b:	add    r15,0x18
   1507f:	cmp    eax,DWORD PTR [rsp+0x64]
   15083:	je     150a6 <think+0x1126>
   15085:	cmp    DWORD PTR [r15],r13d
   15088:	jne    15078 <think+0x10f8>
   1508a:	cmp    DWORD PTR [r15+0x4],r8d
   1508e:	jne    15078 <think+0x10f8>
   15090:	cmp    DWORD PTR [r15+0xc],r14d
   15094:	jne    15078 <think+0x10f8>
   15096:	cdqe   
   15098:	lea    rdi,[rip+0x51f61]        # 67000 <rootlosers>
   1509f:	mov    DWORD PTR [rdi+rax*4],0x1
   150a6:	mov    edi,DWORD PTR [rsp+0x64]
   150aa:	lea    rax,[rip+0x51f4f]        # 67000 <rootlosers>
   150b1:	lea    rdx,[rax+0x4]
   150b5:	lea    ecx,[rdi-0x1]
   150b8:	lea    rdx,[rdx+rcx*4]
   150bc:	cmp    DWORD PTR [rax],0x1
   150bf:	sbb    DWORD PTR [rsp+0x6c],0xffffffff
   150c4:	add    rax,0x4
   150c8:	cmp    rdx,rax
   150cb:	jne    150bc <think+0x113c>
   150cd:	mov    eax,DWORD PTR [rsp+0x6c]
   150d1:	cmp    DWORD PTR [rip+0x527e9],eax        # 678c0 <legals>
   150d7:	jne    1469d <think+0x71d>
   150dd:	mov    DWORD PTR [rip+0x51ea1],0x1        # 66f88 <alllosers>
   150e7:	jmp    1469d <think+0x71d>
   150ec:	nop    DWORD PTR [rax+0x0]
   150f0:	imul   eax,DWORD PTR [rip+0x28267d],0x64        # 297774 <inc>
   150f7:	add    DWORD PTR [rip+0x268ee3],eax        # 27dfe0 <time_cushion>
   150fd:	movsxd rax,DWORD PTR [rsp+0x68]
   15102:	mov    rcx,QWORD PTR [rsp+0x58]
   15107:	lea    rax,[rax+rax*2]
   1510b:	shl    rax,0x3
   1510f:	movdqu xmm4,XMMWORD PTR [rsp+rax*1+0xc0]
   15118:	mov    rax,QWORD PTR [rsp+rax*1+0xd0]
   15120:	movups XMMWORD PTR [rcx],xmm4
   15123:	mov    QWORD PTR [rcx+0x10],rax
   15127:	jmp    14467 <think+0x4e7>
   1512c:	lea    rdi,[rip+0x9aa5]        # 1ebd8 <sbishop+0xdb8>
   15133:	call   12d0 <puts@plt>
   15138:	jmp    14447 <think+0x4c7>
   1513d:	mov    eax,DWORD PTR [rip+0x52781]        # 678c4 <tradefreely>
   15143:	or     eax,DWORD PTR [rip+0x1005b]        # 251a4 <userealholdings>
   15149:	mov    r15d,r14d
   1514c:	jne    14447 <think+0x4c7>
   15152:	lea    rdi,[rip+0x9a27]        # 1eb80 <sbishop+0xd60>
   15159:	mov    DWORD PTR [rip+0x52761],0x1        # 678c4 <tradefreely>
   15163:	call   12d0 <puts@plt>
   15168:	jmp    14447 <think+0x4c7>
   1516d:	nop    DWORD PTR [rax]

0000000000015170 <tree>:
   15170:	endbr64 
   15174:	push   r15
   15176:	push   r14
   15178:	push   r13
   1517a:	push   r12
   1517c:	push   rbp
   1517d:	push   rbx
   1517e:	sub    rsp,0x1000
   15185:	or     QWORD PTR [rsp],0x0
   1518a:	sub    rsp,0x1000
   15191:	or     QWORD PTR [rsp],0x0
   15196:	sub    rsp,0x1000
   1519d:	or     QWORD PTR [rsp],0x0
   151a2:	sub    rsp,0x38
   151a6:	mov    DWORD PTR [rsp+0x18],edi
   151aa:	mov    QWORD PTR [rsp+0x10],rcx
   151af:	mov    rax,QWORD PTR fs:0x28
   151b8:	mov    QWORD PTR [rsp+0x3028],rax
   151c0:	xor    eax,eax
   151c2:	test   edi,edi
   151c4:	jne    151f0 <tree+0x80>
   151c6:	mov    rax,QWORD PTR [rsp+0x3028]
   151ce:	xor    rax,QWORD PTR fs:0x28
   151d7:	jne    152df <tree+0x16f>
   151dd:	add    rsp,0x3038
   151e4:	pop    rbx
   151e5:	pop    rbp
   151e6:	pop    r12
   151e8:	pop    r13
   151ea:	pop    r14
   151ec:	pop    r15
   151ee:	ret    
   151ef:	nop
   151f0:	lea    r13,[rsp+0x20]
   151f5:	mov    r12d,esi
   151f8:	mov    rbp,rdx
   151fb:	mov    rdi,r13
   151fe:	call   9b80 <gen>
   15203:	mov    ebx,DWORD PTR [rip+0x294ff]        # 3e708 <numb_moves>
   15209:	mov    DWORD PTR [rsp+0xc],ebx
   1520d:	call   7ca0 <in_check>
   15212:	mov    r15d,eax
   15215:	test   ebx,ebx
   15217:	jle    151c6 <tree+0x56>
   15219:	lea    eax,[r12+0x2]
   1521e:	xor    ebx,ebx
   15220:	mov    DWORD PTR [rsp+0x1c],eax
   15224:	mov    esi,ebx
   15226:	mov    rdi,r13
   15229:	call   8e00 <make>
   1522e:	mov    edx,r15d
   15231:	mov    esi,ebx
   15233:	mov    rdi,r13
   15236:	call   6f70 <check_legal>
   1523b:	test   eax,eax
   1523d:	jne    15260 <tree+0xf0>
   1523f:	mov    esi,ebx
   15241:	mov    rdi,r13
   15244:	add    ebx,0x1
   15247:	call   ae30 <unmake>
   1524c:	cmp    DWORD PTR [rsp+0xc],ebx
   15250:	jne    15224 <tree+0xb4>
   15252:	jmp    151c6 <tree+0x56>
   15257:	nop    WORD PTR [rax+rax*1+0x0]
   15260:	test   r12d,r12d
   15263:	jle    15286 <tree+0x116>
   15265:	xor    r14d,r14d
   15268:	nop    DWORD PTR [rax+rax*1+0x0]
   15270:	mov    rsi,rbp
   15273:	mov    edi,0x20
   15278:	add    r14d,0x1
   1527c:	call   1370 <fputc@plt>
   15281:	cmp    r12d,r14d
   15284:	jne    15270 <tree+0x100>
   15286:	mov    rdx,rbp
   15289:	mov    esi,ebx
   1528b:	mov    rdi,r13
   1528e:	call   18620 <print_move>
   15293:	mov    rsi,rbp
   15296:	mov    edi,0xa
   1529b:	call   1370 <fputc@plt>
   152a0:	mov    rax,QWORD PTR [rsp+0x10]
   152a5:	cmp    BYTE PTR [rax],0x79
   152a8:	je     152d0 <tree+0x160>
   152aa:	mov    eax,DWORD PTR [rsp+0x18]
   152ae:	mov    rcx,QWORD PTR [rsp+0x10]
   152b3:	mov    rdx,rbp
   152b6:	mov    esi,DWORD PTR [rsp+0x1c]
   152ba:	lea    edi,[rax-0x1]
   152bd:	call   15170 <tree>
   152c2:	jmp    1523f <tree+0xcf>
   152c7:	nop    WORD PTR [rax+rax*1+0x0]
   152d0:	mov    esi,0x1
   152d5:	mov    rdi,rbp
   152d8:	call   178e0 <display_board>
   152dd:	jmp    152aa <tree+0x13a>
   152df:	call   1310 <__stack_chk_fail@plt>
   152e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
   152ee:	xchg   ax,ax

00000000000152f0 <setup_attackers>:
   152f0:	endbr64 
   152f4:	mov    edx,0xc
   152f9:	lea    rcx,[rip+0x2685c0]        # 27d8c0 <board>
   15300:	push   r12
   15302:	mov    r8d,DWORD PTR [rip+0x53e97]        # 691a0 <see_num_attackers>
   15309:	lea    r10d,[rdx+rdi*1]
   1530d:	push   rbp
   1530e:	mov    r9d,DWORD PTR [rip+0x53e8f]        # 691a4 <see_num_attackers+0x4>
   15315:	lea    r12,[rip+0x53d84]        # 690a0 <see_attackers>
   1531c:	movsxd rax,r10d
   1531f:	push   rbx
   15320:	lea    rbx,[rip+0x9a29]        # 1ed50 <rook_o.4153>
   15327:	mov    eax,DWORD PTR [rcx+rax*4]
   1532a:	lea    rbp,[rbx+0x10]
   1532e:	cmp    eax,0x5
   15331:	je     153ba <setup_attackers+0xca>
   15337:	cmp    eax,0x6
   1533a:	je     155c9 <setup_attackers+0x2d9>
   15340:	test   eax,eax
   15342:	je     1539c <setup_attackers+0xac>
   15344:	lea    esi,[rax-0x7]
   15347:	and    esi,0xfffffffd
   1534a:	je     15598 <setup_attackers+0x2a8>
   15350:	mov    esi,eax
   15352:	and    esi,0xfffffffd
   15355:	cmp    esi,0x8
   15358:	je     155b0 <setup_attackers+0x2c0>
   1535e:	cmp    eax,0xd
   15361:	jne    1539c <setup_attackers+0xac>
   15363:	movsxd r11,edx
   15366:	add    edx,r10d
   15369:	movsxd rdx,edx
   1536c:	jmp    15392 <setup_attackers+0xa2>
   1536e:	xchg   ax,ax
   15370:	lea    esi,[rax-0x7]
   15373:	and    esi,0xfffffffd
   15376:	je     15598 <setup_attackers+0x2a8>
   1537c:	mov    esi,eax
   1537e:	and    esi,0xfffffffd
   15381:	cmp    esi,0x8
   15384:	je     155b0 <setup_attackers+0x2c0>
   1538a:	add    rdx,r11
   1538d:	cmp    eax,0xd
   15390:	jne    1539c <setup_attackers+0xac>
   15392:	mov    eax,DWORD PTR [rcx+rdx*4]
   15395:	mov    r10d,edx
   15398:	test   eax,eax
   1539a:	jne    15370 <setup_attackers+0x80>
   1539c:	add    rbx,0x4
   153a0:	cmp    rbx,rbp
   153a3:	je     153d8 <setup_attackers+0xe8>
   153a5:	mov    edx,DWORD PTR [rbx]
   153a7:	lea    r10d,[rdx+rdi*1]
   153ab:	movsxd rax,r10d
   153ae:	mov    eax,DWORD PTR [rcx+rax*4]
   153b1:	cmp    eax,0x5
   153b4:	jne    15337 <setup_attackers+0x47>
   153ba:	movsxd rdx,r8d
   153bd:	lea    rax,[rip+0x53cdc]        # 690a0 <see_attackers>
   153c4:	add    r8d,0x1
   153c8:	mov    DWORD PTR [rax+rdx*8],0x5
   153cf:	mov    DWORD PTR [rax+rdx*8+0x4],r10d
   153d4:	nop    DWORD PTR [rax+0x0]
   153d8:	mov    edx,0xb
   153dd:	xor    ebx,ebx
   153df:	lea    rbp,[rip+0x53cba]        # 690a0 <see_attackers>
   153e6:	lea    r10d,[rdx+rdi*1]
   153ea:	lea    r12,[rip+0x994f]        # 1ed40 <bishop_o.4154>
   153f1:	movsxd rax,r10d
   153f4:	mov    eax,DWORD PTR [rcx+rax*4]
   153f7:	cmp    eax,0x1
   153fa:	je     1548d <setup_attackers+0x19d>
   15400:	cmp    eax,0x2
   15403:	jne    15538 <setup_attackers+0x248>
   15409:	test   bl,0x1
   1540c:	je     1562e <setup_attackers+0x33e>
   15412:	mov    esi,eax
   15414:	and    esi,0xfffffffd
   15417:	cmp    esi,0x9
   1541a:	je     15560 <setup_attackers+0x270>
   15420:	lea    esi,[rax-0xa]
   15423:	and    esi,0xfffffffd
   15426:	je     15578 <setup_attackers+0x288>
   1542c:	cmp    eax,0xd
   1542f:	jne    1546c <setup_attackers+0x17c>
   15431:	movsxd r11,edx
   15434:	add    edx,r10d
   15437:	movsxd rdx,edx
   1543a:	jmp    15462 <setup_attackers+0x172>
   1543c:	nop    DWORD PTR [rax+0x0]
   15440:	mov    esi,eax
   15442:	and    esi,0xfffffffd
   15445:	cmp    esi,0x9
   15448:	je     15560 <setup_attackers+0x270>
   1544e:	lea    esi,[rax-0xa]
   15451:	and    esi,0xfffffffd
   15454:	je     15578 <setup_attackers+0x288>
   1545a:	add    rdx,r11
   1545d:	cmp    eax,0xd
   15460:	jne    1546c <setup_attackers+0x17c>
   15462:	mov    eax,DWORD PTR [rcx+rdx*4]
   15465:	mov    r10d,edx
   15468:	test   eax,eax
   1546a:	jne    15440 <setup_attackers+0x150>
   1546c:	add    rbx,0x1
   15470:	cmp    rbx,0x4
   15474:	je     154b0 <setup_attackers+0x1c0>
   15476:	mov    edx,DWORD PTR [r12+rbx*4]
   1547a:	lea    r10d,[rdx+rdi*1]
   1547e:	movsxd rax,r10d
   15481:	mov    eax,DWORD PTR [rcx+rax*4]
   15484:	cmp    eax,0x1
   15487:	jne    15400 <setup_attackers+0x110>
   1548d:	test   bl,0x1
   15490:	je     15412 <setup_attackers+0x122>
   15496:	movsxd rdx,r8d
   15499:	lea    rax,[rip+0x53c00]        # 690a0 <see_attackers>
   154a0:	add    r8d,0x1
   154a4:	mov    DWORD PTR [rax+rdx*8],0x1
   154ab:	mov    DWORD PTR [rax+rdx*8+0x4],r10d
   154b0:	lea    rdx,[rip+0x986d]        # 1ed24 <knight_o.4155+0x4>
   154b7:	mov    eax,0xa
   154bc:	lea    r10,[rip+0x53bdd]        # 690a0 <see_attackers>
   154c3:	lea    r11,[rdx+0x1c]
   154c7:	jmp    154f8 <setup_attackers+0x208>
   154c9:	nop    DWORD PTR [rax+0x0]
   154d0:	cmp    esi,0x4
   154d3:	jne    154ed <setup_attackers+0x1fd>
   154d5:	movsxd rsi,r9d
   154d8:	add    r9d,0x1
   154dc:	add    rsi,0x10
   154e0:	mov    DWORD PTR [r10+rsi*8],0x4
   154e8:	mov    DWORD PTR [r10+rsi*8+0x4],eax
   154ed:	cmp    r11,rdx
   154f0:	je     1551e <setup_attackers+0x22e>
   154f2:	mov    eax,DWORD PTR [rdx]
   154f4:	add    rdx,0x4
   154f8:	add    eax,edi
   154fa:	movsxd rsi,eax
   154fd:	mov    esi,DWORD PTR [rcx+rsi*4]
   15500:	cmp    esi,0x3
   15503:	jne    154d0 <setup_attackers+0x1e0>
   15505:	movsxd rsi,r8d
   15508:	add    r8d,0x1
   1550c:	mov    DWORD PTR [r10+rsi*8],0x3
   15514:	mov    DWORD PTR [r10+rsi*8+0x4],eax
   15519:	cmp    r11,rdx
   1551c:	jne    154f2 <setup_attackers+0x202>
   1551e:	pop    rbx
   1551f:	pop    rbp
   15520:	mov    DWORD PTR [rip+0x53c79],r8d        # 691a0 <see_num_attackers>
   15527:	mov    DWORD PTR [rip+0x53c76],r9d        # 691a4 <see_num_attackers+0x4>
   1552e:	pop    r12
   15530:	ret    
   15531:	nop    DWORD PTR [rax+0x0]
   15538:	cmp    eax,0x5
   1553b:	je     155ec <setup_attackers+0x2fc>
   15541:	cmp    eax,0x6
   15544:	je     1560b <setup_attackers+0x31b>
   1554a:	test   eax,eax
   1554c:	jne    15412 <setup_attackers+0x122>
   15552:	jmp    1546c <setup_attackers+0x17c>
   15557:	nop    WORD PTR [rax+rax*1+0x0]
   15560:	movsxd rdx,r8d
   15563:	add    r8d,0x1
   15567:	mov    DWORD PTR [rbp+rdx*8+0x0],eax
   1556b:	mov    DWORD PTR [rbp+rdx*8+0x4],r10d
   15570:	jmp    1546c <setup_attackers+0x17c>
   15575:	nop    DWORD PTR [rax]
   15578:	movsxd rdx,r9d
   1557b:	add    r9d,0x1
   1557f:	add    rdx,0x10
   15583:	mov    DWORD PTR [rbp+rdx*8+0x0],eax
   15587:	mov    DWORD PTR [rbp+rdx*8+0x4],r10d
   1558c:	jmp    1546c <setup_attackers+0x17c>
   15591:	nop    DWORD PTR [rax+0x0]
   15598:	movsxd rdx,r8d
   1559b:	add    r8d,0x1
   1559f:	mov    DWORD PTR [r12+rdx*8],eax
   155a3:	mov    DWORD PTR [r12+rdx*8+0x4],r10d
   155a8:	jmp    1539c <setup_attackers+0xac>
   155ad:	nop    DWORD PTR [rax]
   155b0:	movsxd rdx,r9d
   155b3:	add    r9d,0x1
   155b7:	add    rdx,0x10
   155bb:	mov    DWORD PTR [r12+rdx*8],eax
   155bf:	mov    DWORD PTR [r12+rdx*8+0x4],r10d
   155c4:	jmp    1539c <setup_attackers+0xac>
   155c9:	movsxd rax,r9d
   155cc:	lea    rdx,[rip+0x53acd]        # 690a0 <see_attackers>
   155d3:	add    r9d,0x1
   155d7:	add    rax,0x10
   155db:	mov    DWORD PTR [rdx+rax*8],0x6
   155e2:	mov    DWORD PTR [rdx+rax*8+0x4],r10d
   155e7:	jmp    153d8 <setup_attackers+0xe8>
   155ec:	movsxd rdx,r8d
   155ef:	lea    rax,[rip+0x53aaa]        # 690a0 <see_attackers>
   155f6:	add    r8d,0x1
   155fa:	mov    DWORD PTR [rax+rdx*8],0x5
   15601:	mov    DWORD PTR [rax+rdx*8+0x4],r10d
   15606:	jmp    154b0 <setup_attackers+0x1c0>
   1560b:	movsxd rax,r9d
   1560e:	lea    rdx,[rip+0x53a8b]        # 690a0 <see_attackers>
   15615:	add    r9d,0x1
   15619:	add    rax,0x10
   1561d:	mov    DWORD PTR [rdx+rax*8],0x6
   15624:	mov    DWORD PTR [rdx+rax*8+0x4],r10d
   15629:	jmp    154b0 <setup_attackers+0x1c0>
   1562e:	movsxd rax,r9d
   15631:	lea    rdx,[rip+0x53a68]        # 690a0 <see_attackers>
   15638:	add    r9d,0x1
   1563c:	add    rax,0x10
   15640:	mov    DWORD PTR [rdx+rax*8],0x2
   15647:	mov    DWORD PTR [rdx+rax*8+0x4],r10d
   1564c:	jmp    154b0 <setup_attackers+0x1c0>
   15651:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1565c:	nop    DWORD PTR [rax+0x0]

0000000000015660 <findlowest>:
   15660:	endbr64 
   15664:	movsxd rdi,edi
   15667:	push   r12
   15669:	lea    r11,[rip+0x53a30]        # 690a0 <see_attackers>
   15670:	lea    r12,[rip+0xef09]        # 24580 <material>
   15677:	mov    rax,rdi
   1567a:	push   rbp
   1567b:	movsxd rbp,esi
   1567e:	shl    rax,0x4
   15682:	push   rbx
   15683:	add    rax,rbp
   15686:	movsxd rax,DWORD PTR [r11+rax*8]
   1568a:	mov    rbx,rax
   1568d:	mov    eax,DWORD PTR [r12+rax*4]
   15691:	cdq    
   15692:	mov    r8d,edx
   15695:	xor    r8d,eax
   15698:	sub    r8d,edx
   1569b:	lea    rdx,[rip+0x53afe]        # 691a0 <see_num_attackers>
   156a2:	mov    r9d,DWORD PTR [rdx+rdi*4]
   156a6:	cmp    esi,r9d
   156a9:	jge    156e4 <findlowest+0x84>
   156ab:	mov    r10,rdi
   156ae:	mov    rdx,rbp
   156b1:	shl    r10,0x7
   156b5:	add    r10,r11
   156b8:	jmp    156c8 <findlowest+0x68>
   156ba:	nop    WORD PTR [rax+rax*1+0x0]
   156c0:	movsxd rax,DWORD PTR [r10+rdx*8]
   156c4:	mov    eax,DWORD PTR [r12+rax*4]
   156c8:	mov    ecx,eax
   156ca:	sar    ecx,0x1f
   156cd:	xor    eax,ecx
   156cf:	sub    eax,ecx
   156d1:	cmp    eax,r8d
   156d4:	jge    156db <findlowest+0x7b>
   156d6:	mov    r8d,eax
   156d9:	mov    esi,edx
   156db:	add    rdx,0x1
   156df:	cmp    r9d,edx
   156e2:	jg     156c0 <findlowest+0x60>
   156e4:	shl    rdi,0x4
   156e8:	movsxd rsi,esi
   156eb:	add    rbp,rdi
   156ee:	add    rdi,rsi
   156f1:	mov    rax,QWORD PTR [r11+rdi*8]
   156f5:	mov    edx,DWORD PTR [r11+rbp*8+0x4]
   156fa:	mov    QWORD PTR [r11+rbp*8],rax
   156fe:	lea    rax,[r11+rdi*8]
   15702:	mov    DWORD PTR [rax],ebx
   15704:	mov    DWORD PTR [rax+0x4],edx
   15707:	pop    rbx
   15708:	pop    rbp
   15709:	pop    r12
   1570b:	ret    
   1570c:	nop    DWORD PTR [rax+0x0]

0000000000015710 <see>:
   15710:	endbr64 
   15714:	push   r15
   15716:	push   r14
   15718:	lea    r14,[rip+0x2681a1]        # 27d8c0 <board>
   1571f:	push   r13
   15721:	push   r12
   15723:	movsxd r12,edi
   15726:	push   rbp
   15727:	mov    rdi,r12
   1572a:	movsxd rbp,esi
   1572d:	push   rbx
   1572e:	shl    rdi,0x7
   15732:	lea    rbx,[rip+0x53967]        # 690a0 <see_attackers>
   15739:	sub    rsp,0x38
   1573d:	mov    DWORD PTR [rsp+0x10],r12d
   15742:	mov    rax,QWORD PTR fs:0x28
   1574b:	mov    QWORD PTR [rsp+0x28],rax
   15750:	xor    eax,eax
   15752:	movsxd rax,edx
   15755:	mov    QWORD PTR [rip+0x53a40],0x0        # 691a0 <see_num_attackers>
   15760:	mov    esi,DWORD PTR [r14+rax*4]
   15764:	mov    QWORD PTR [rsp+0x18],rax
   15769:	mov    DWORD PTR [r14+rax*4],0xd
   15771:	lea    rax,[rip+0x53a28]        # 691a0 <see_num_attackers>
   15778:	add    DWORD PTR [rax+r12*4],0x1
   1577d:	mov    rax,rdi
   15780:	mov    edi,ebp
   15782:	add    rax,rbx
   15785:	mov    DWORD PTR [rsp+0x14],esi
   15789:	mov    DWORD PTR [rax],esi
   1578b:	mov    DWORD PTR [rax+0x4],edx
   1578e:	call   152f0 <setup_attackers>
   15793:	movsxd rdx,DWORD PTR [r14+rbp*4]
   15797:	lea    rdi,[rip+0xede2]        # 24580 <material>
   1579e:	lea    rax,[rip+0x539fb]        # 691a0 <see_num_attackers>
   157a5:	mov    esi,DWORD PTR [rdi+rdx*4]
   157a8:	mov    r13d,DWORD PTR [rdi+rdx*4]
   157ac:	sar    esi,0x1f
   157af:	xor    r13d,esi
   157b2:	sub    r13d,esi
   157b5:	test   r12d,r12d
   157b8:	sete   r11b
   157bc:	sete   r14b
   157c0:	movzx  r11d,r11b
   157c4:	mov    r8d,DWORD PTR [rax+r11*4]
   157c8:	test   r8d,r8d
   157cb:	je     1596f <see+0x25f>
   157d1:	mov    DWORD PTR [rsp+r12*4+0x20],0x1
   157da:	mov    DWORD PTR [rsp+r11*4+0x20],0x0
   157e3:	jle    15984 <see+0x274>
   157e9:	mov    DWORD PTR [rsp+0xc],r13d
   157ee:	movzx  r14d,r14b
   157f2:	xor    ebp,ebp
   157f4:	mov    DWORD PTR [rsp+0x8],0xfff0bdc0
   157fc:	nop    DWORD PTR [rax+0x0]
   15800:	mov    rax,r11
   15803:	movsxd r12,ebp
   15806:	mov    r9,r11
   15809:	movsxd r10,ebp
   1580c:	shl    rax,0x4
   15810:	shl    r9,0x7
   15814:	add    rax,r12
   15817:	add    r9,rbx
   1581a:	movsxd rax,DWORD PTR [rbx+rax*8]
   1581e:	mov    r15,rax
   15821:	mov    eax,DWORD PTR [rdi+rax*4]
   15824:	cdq    
   15825:	mov    esi,edx
   15827:	xor    esi,eax
   15829:	sub    esi,edx
   1582b:	mov    rdx,r12
   1582e:	jmp    15837 <see+0x127>
   15830:	movsxd rax,DWORD PTR [r9+rdx*8]
   15834:	mov    eax,DWORD PTR [rdi+rax*4]
   15837:	mov    ecx,eax
   15839:	sar    ecx,0x1f
   1583c:	xor    eax,ecx
   1583e:	sub    eax,ecx
   15840:	cmp    eax,esi
   15842:	jge    15849 <see+0x139>
   15844:	mov    esi,eax
   15846:	movsxd r10,edx
   15849:	add    rdx,0x1
   1584d:	cmp    r8d,edx
   15850:	jg     15830 <see+0x120>
   15852:	mov    rax,r11
   15855:	lea    rcx,[rip+0x53944]        # 691a0 <see_num_attackers>
   1585c:	shl    rax,0x4
   15860:	add    r10,rax
   15863:	add    r12,rax
   15866:	mov    rax,QWORD PTR [rbx+r10*8]
   1586a:	mov    edx,DWORD PTR [rbx+r12*8+0x4]
   1586f:	mov    QWORD PTR [rbx+r12*8],rax
   15873:	lea    rax,[rbx+r10*8]
   15877:	mov    DWORD PTR [rax],r15d
   1587a:	mov    DWORD PTR [rax+0x4],edx
   1587d:	mov    eax,r14d
   15880:	xor    eax,0x1
   15883:	cdqe   
   15885:	mov    edx,DWORD PTR [rsp+rax*4+0x20]
   15889:	mov    ecx,DWORD PTR [rcx+rax*4]
   1588c:	shl    rax,0x4
   15890:	lea    esi,[rdx-0x1]
   15893:	movsxd rsi,esi
   15896:	add    rax,rsi
   15899:	movsxd rsi,DWORD PTR [rbx+rax*8]
   1589d:	mov    eax,DWORD PTR [rdi+rsi*4]
   158a0:	mov    r15d,DWORD PTR [rdi+rsi*4]
   158a4:	sar    eax,0x1f
   158a7:	xor    r15d,eax
   158aa:	mov    esi,r15d
   158ad:	sub    esi,eax
   158af:	cmp    DWORD PTR [rsp+0x10],r14d
   158b4:	je     15950 <see+0x240>
   158ba:	mov    eax,DWORD PTR [rsp+0x8]
   158be:	sub    r13d,esi
   158c1:	cmp    eax,r13d
   158c4:	cmovl  eax,r13d
   158c8:	mov    DWORD PTR [rsp+0x8],eax
   158cc:	cmp    edx,ecx
   158ce:	jl     158df <see+0x1cf>
   158d0:	mov    eax,DWORD PTR [rsp+0xc]
   158d4:	cmp    eax,r13d
   158d7:	cmovg  eax,r13d
   158db:	mov    DWORD PTR [rsp+0xc],eax
   158df:	add    ebp,0x1
   158e2:	xor    r14d,0x1
   158e6:	lea    rax,[rip+0x538b3]        # 691a0 <see_num_attackers>
   158ed:	mov    DWORD PTR [rsp+r11*4+0x20],ebp
   158f2:	movsxd r11,r14d
   158f5:	mov    ebp,DWORD PTR [rsp+r11*4+0x20]
   158fa:	mov    r8d,DWORD PTR [rax+r11*4]
   158fe:	cmp    ebp,r8d
   15901:	jl     15800 <see+0xf0>
   15907:	mov    rbx,QWORD PTR [rsp+0x18]
   1590c:	mov    edi,DWORD PTR [rsp+0x14]
   15910:	lea    rax,[rip+0x267fa9]        # 27d8c0 <board>
   15917:	mov    r13d,DWORD PTR [rsp+0xc]
   1591c:	mov    DWORD PTR [rax+rbx*4],edi
   1591f:	mov    eax,DWORD PTR [rsp+0x8]
   15923:	cmp    eax,r13d
   15926:	cmovle r13d,eax
   1592a:	mov    rax,QWORD PTR [rsp+0x28]
   1592f:	xor    rax,QWORD PTR fs:0x28
   15938:	jne    15996 <see+0x286>
   1593a:	add    rsp,0x38
   1593e:	mov    eax,r13d
   15941:	pop    rbx
   15942:	pop    rbp
   15943:	pop    r12
   15945:	pop    r13
   15947:	pop    r14
   15949:	pop    r15
   1594b:	ret    
   1594c:	nop    DWORD PTR [rax+0x0]
   15950:	add    r13d,esi
   15953:	cmp    edx,ecx
   15955:	jl     158d0 <see+0x1c0>
   1595b:	mov    eax,DWORD PTR [rsp+0x8]
   1595f:	cmp    eax,r13d
   15962:	cmovl  eax,r13d
   15966:	mov    DWORD PTR [rsp+0x8],eax
   1596a:	jmp    158d0 <see+0x1c0>
   1596f:	mov    rbx,QWORD PTR [rsp+0x18]
   15974:	mov    edi,DWORD PTR [rsp+0x14]
   15978:	lea    rax,[rip+0x267f41]        # 27d8c0 <board>
   1597f:	mov    DWORD PTR [rax+rbx*4],edi
   15982:	jmp    1592a <see+0x21a>
   15984:	mov    DWORD PTR [rsp+0xc],r13d
   15989:	mov    DWORD PTR [rsp+0x8],0xfff0bdc0
   15991:	jmp    15907 <see+0x1f7>
   15996:	call   1310 <__stack_chk_fail@plt>
   1599b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000159a0 <s_bishop_mobility>:
   159a0:	lea    eax,[rdi-0xd]
   159a3:	lea    rcx,[rip+0x267f16]        # 27d8c0 <board>
   159aa:	cdqe   
   159ac:	cmp    DWORD PTR [rcx+rax*4],0xd
   159b0:	jne    15a38 <s_bishop_mobility+0x98>
   159b6:	movsxd rax,edi
   159b9:	lea    rdx,[rcx+rax*4]
   159bd:	xor    eax,eax
   159bf:	nop
   159c0:	sub    rdx,0x34
   159c4:	add    eax,0x1
   159c7:	cmp    DWORD PTR [rdx-0x34],0xd
   159cb:	je     159c0 <s_bishop_mobility+0x20>
   159cd:	lea    edx,[rdi-0xb]
   159d0:	movsxd rdx,edx
   159d3:	cmp    DWORD PTR [rcx+rdx*4],0xd
   159d7:	jne    159ed <s_bishop_mobility+0x4d>
   159d9:	movsxd rdx,edi
   159dc:	lea    rdx,[rcx+rdx*4]
   159e0:	sub    rdx,0x2c
   159e4:	add    eax,0x1
   159e7:	cmp    DWORD PTR [rdx-0x2c],0xd
   159eb:	je     159e0 <s_bishop_mobility+0x40>
   159ed:	lea    edx,[rdi+0xb]
   159f0:	movsxd rdx,edx
   159f3:	cmp    DWORD PTR [rcx+rdx*4],0xd
   159f7:	jne    15a0d <s_bishop_mobility+0x6d>
   159f9:	movsxd rdx,edi
   159fc:	lea    rdx,[rcx+rdx*4]
   15a00:	add    rdx,0x2c
   15a04:	add    eax,0x1
   15a07:	cmp    DWORD PTR [rdx+0x2c],0xd
   15a0b:	je     15a00 <s_bishop_mobility+0x60>
   15a0d:	lea    edx,[rdi+0xd]
   15a10:	movsxd rdx,edx
   15a13:	cmp    DWORD PTR [rcx+rdx*4],0xd
   15a17:	jne    15a2d <s_bishop_mobility+0x8d>
   15a19:	movsxd rdi,edi
   15a1c:	lea    rdx,[rcx+rdi*4]
   15a20:	add    rdx,0x34
   15a24:	add    eax,0x1
   15a27:	cmp    DWORD PTR [rdx+0x34],0xd
   15a2b:	je     15a20 <s_bishop_mobility+0x80>
   15a2d:	shl    eax,0x2
   15a30:	ret    
   15a31:	nop    DWORD PTR [rax+0x0]
   15a38:	xor    eax,eax
   15a3a:	jmp    159cd <s_bishop_mobility+0x2d>
   15a3c:	nop    DWORD PTR [rax+0x0]

0000000000015a40 <s_rook_mobility>:
   15a40:	lea    eax,[rdi-0xc]
   15a43:	lea    rcx,[rip+0x267e76]        # 27d8c0 <board>
   15a4a:	cdqe   
   15a4c:	cmp    DWORD PTR [rcx+rax*4],0xd
   15a50:	jne    15ad8 <s_rook_mobility+0x98>
   15a56:	movsxd rax,edi
   15a59:	lea    rdx,[rcx+rax*4]
   15a5d:	xor    eax,eax
   15a5f:	nop
   15a60:	sub    rdx,0x30
   15a64:	add    eax,0x1
   15a67:	cmp    DWORD PTR [rdx-0x30],0xd
   15a6b:	je     15a60 <s_rook_mobility+0x20>
   15a6d:	lea    edx,[rdi-0x1]
   15a70:	movsxd rdx,edx
   15a73:	cmp    DWORD PTR [rcx+rdx*4],0xd
   15a77:	jne    15a8d <s_rook_mobility+0x4d>
   15a79:	movsxd rdx,edi
   15a7c:	lea    rdx,[rcx+rdx*4]
   15a80:	sub    rdx,0x4
   15a84:	add    eax,0x1
   15a87:	cmp    DWORD PTR [rdx-0x4],0xd
   15a8b:	je     15a80 <s_rook_mobility+0x40>
   15a8d:	lea    edx,[rdi+0x1]
   15a90:	movsxd rdx,edx
   15a93:	cmp    DWORD PTR [rcx+rdx*4],0xd
   15a97:	jne    15aad <s_rook_mobility+0x6d>
   15a99:	movsxd rdx,edi
   15a9c:	lea    rdx,[rcx+rdx*4]
   15aa0:	add    rdx,0x4
   15aa4:	add    eax,0x1
   15aa7:	cmp    DWORD PTR [rdx+0x4],0xd
   15aab:	je     15aa0 <s_rook_mobility+0x60>
   15aad:	lea    edx,[rdi+0xc]
   15ab0:	movsxd rdx,edx
   15ab3:	cmp    DWORD PTR [rcx+rdx*4],0xd
   15ab7:	jne    15acd <s_rook_mobility+0x8d>
   15ab9:	movsxd rdi,edi
   15abc:	lea    rdx,[rcx+rdi*4]
   15ac0:	add    rdx,0x30
   15ac4:	add    eax,0x1
   15ac7:	cmp    DWORD PTR [rdx+0x30],0xd
   15acb:	je     15ac0 <s_rook_mobility+0x80>
   15acd:	shl    eax,0x2
   15ad0:	ret    
   15ad1:	nop    DWORD PTR [rax+0x0]
   15ad8:	xor    eax,eax
   15ada:	jmp    15a6d <s_rook_mobility+0x2d>
   15adc:	nop    DWORD PTR [rax+0x0]

0000000000015ae0 <suicide_mid_eval>:
   15ae0:	endbr64 
   15ae4:	push   r15
   15ae6:	push   r14
   15ae8:	push   r13
   15aea:	push   r12
   15aec:	push   rbp
   15aed:	push   rbx
   15aee:	sub    rsp,0xf8
   15af5:	mov    rax,QWORD PTR fs:0x28
   15afe:	mov    QWORD PTR [rsp+0xe8],rax
   15b06:	xor    eax,eax
   15b08:	lea    rsi,[rsp+0x2c]
   15b0d:	lea    rdi,[rsp+0x28]
   15b12:	mov    DWORD PTR [rsp+0x28],0x0
   15b1a:	mov    DWORD PTR [rsp+0x2c],0x0
   15b22:	call   43f0 <checkECache>
   15b27:	mov    eax,DWORD PTR [rsp+0x2c]
   15b2b:	test   eax,eax
   15b2d:	je     15b70 <suicide_mid_eval+0x90>
   15b2f:	cmp    DWORD PTR [rip+0x2679ea],0x1        # 27d520 <white_to_move>
   15b36:	mov    eax,DWORD PTR [rsp+0x28]
   15b3a:	je     15b3e <suicide_mid_eval+0x5e>
   15b3c:	neg    eax
   15b3e:	mov    rbx,QWORD PTR [rsp+0xe8]
   15b46:	xor    rbx,QWORD PTR fs:0x28
   15b4f:	jne    1666b <suicide_mid_eval+0xb8b>
   15b55:	add    rsp,0xf8
   15b5c:	pop    rbx
   15b5d:	pop    rbp
   15b5e:	pop    r12
   15b60:	pop    r13
   15b62:	pop    r14
   15b64:	pop    r15
   15b66:	ret    
   15b67:	nop    WORD PTR [rax+rax*1+0x0]
   15b70:	mov    r8d,DWORD PTR [rip+0x1e969]        # 344e0 <Material>
   15b77:	lea    rdx,[rsp+0x90]
   15b7f:	mov    ecx,0xb
   15b84:	xor    eax,eax
   15b86:	mov    rdi,rdx
   15b89:	lea    rdx,[rsp+0x60]
   15b8e:	rep stos QWORD PTR es:[rdi],rax
   15b91:	mov    DWORD PTR [rsp+0x28],r8d
   15b96:	lea    rcx,[rsp+0x30]
   15b9b:	nop    DWORD PTR [rax+rax*1+0x0]
   15ba0:	mov    DWORD PTR [rcx+rax*1],0x7
   15ba7:	mov    DWORD PTR [rdx+rax*1],0x2
   15bae:	add    rax,0x4
   15bb2:	cmp    rax,0x2c
   15bb6:	jne    15ba0 <suicide_mid_eval+0xc0>
   15bb8:	mov    esi,DWORD PTR [rip+0x55ce6]        # 6b8a4 <piece_count>
   15bbe:	test   esi,esi
   15bc0:	jle    15d90 <suicide_mid_eval+0x2b0>
   15bc6:	lea    rbx,[rip+0x265c17]        # 27b7e4 <pieces+0x4>
   15bcd:	mov    edi,0x1
   15bd2:	lea    rbp,[rip+0x6ca7]        # 1c880 <Xfile>
   15bd9:	mov    rcx,rbx
   15bdc:	lea    r11,[rip+0x6a5d]        # 1c640 <Xrank>
   15be3:	lea    r10,[rip+0x267cd6]        # 27d8c0 <board>
   15bea:	jmp    15c01 <suicide_mid_eval+0x121>
   15bec:	nop    DWORD PTR [rax+0x0]
   15bf0:	cmp    eax,0x2
   15bf3:	je     15cc0 <suicide_mid_eval+0x1e0>
   15bf9:	add    rcx,0x4
   15bfd:	cmp    edi,esi
   15bff:	jg     15c40 <suicide_mid_eval+0x160>
   15c01:	movsxd rax,DWORD PTR [rcx]
   15c04:	test   eax,eax
   15c06:	je     15bf9 <suicide_mid_eval+0x119>
   15c08:	mov    edx,DWORD PTR [rbp+rax*4+0x0]
   15c0c:	mov    r9d,DWORD PTR [r11+rax*4]
   15c10:	add    edi,0x1
   15c13:	mov    eax,DWORD PTR [r10+rax*4]
   15c17:	add    edx,0x1
   15c1a:	cmp    eax,0x1
   15c1d:	jne    15bf0 <suicide_mid_eval+0x110>
   15c1f:	movsxd rdx,edx
   15c22:	add    DWORD PTR [rsp+rdx*4+0xbc],0x1
   15c2a:	cmp    DWORD PTR [rsp+rdx*4+0x30],r9d
   15c2f:	jle    15bf9 <suicide_mid_eval+0x119>
   15c31:	mov    DWORD PTR [rsp+rdx*4+0x30],r9d
   15c36:	add    rcx,0x4
   15c3a:	cmp    edi,esi
   15c3c:	jle    15c01 <suicide_mid_eval+0x121>
   15c3e:	xchg   ax,ax
   15c40:	mov    DWORD PTR [rsp+0xc],0x0
   15c48:	mov    r12d,0x1
   15c4e:	lea    rbp,[rip+0x267c6b]        # 27d8c0 <board>
   15c55:	lea    r15,[rip+0x9104]        # 1ed60 <rook_o.4153+0x10>
   15c5c:	mov    DWORD PTR [rsp+0x8],0x0
   15c64:	mov    DWORD PTR [rsp+0x4],0x0
   15c6c:	mov    DWORD PTR [rsp],0x0
   15c73:	nop    DWORD PTR [rax+rax*1+0x0]
   15c78:	mov    r13d,DWORD PTR [rbx]
   15c7b:	test   r13d,r13d
   15c7e:	je     15d30 <suicide_mid_eval+0x250>
   15c84:	movsxd r9,r13d
   15c87:	lea    rax,[rip+0x6bf2]        # 1c880 <Xfile>
   15c8e:	add    r12d,0x1
   15c92:	mov    edx,DWORD PTR [rax+r9*4]
   15c96:	mov    r14d,DWORD PTR [rbp+r9*4+0x0]
   15c9b:	lea    rax,[rip+0x699e]        # 1c640 <Xrank>
   15ca2:	mov    r10d,DWORD PTR [rax+r9*4]
   15ca6:	lea    ecx,[rdx+0x1]
   15ca9:	cmp    r14d,0xc
   15cad:	ja     15d30 <suicide_mid_eval+0x250>
   15cb3:	mov    eax,r14d
   15cb6:	movsxd rax,DWORD PTR [r15+rax*4]
   15cba:	add    rax,r15
   15cbd:	notrack jmp rax
   15cc0:	movsxd rdx,edx
   15cc3:	add    DWORD PTR [rsp+rdx*4+0x90],0x1
   15ccb:	cmp    DWORD PTR [rsp+rdx*4+0x60],r9d
   15cd0:	jge    15bf9 <suicide_mid_eval+0x119>
   15cd6:	mov    DWORD PTR [rsp+rdx*4+0x60],r9d
   15cdb:	jmp    15bf9 <suicide_mid_eval+0x119>
   15ce0:	lea    rax,[rip+0x90f9]        # 1ede0 <scentral>
   15ce7:	mov    edi,r13d
   15cea:	add    r8d,DWORD PTR [rax+r9*4]
   15cee:	mov    DWORD PTR [rsp+0x28],r8d
   15cf3:	call   159a0 <s_bishop_mobility>
   15cf8:	mov    edi,DWORD PTR [rsp]
   15cfb:	add    r8d,eax
   15cfe:	lea    rax,[rip+0x627b]        # 1bf80 <sqcolor>
   15d05:	mov    DWORD PTR [rsp+0x28],r8d
   15d0a:	mov    eax,DWORD PTR [rax+r9*4]
   15d0e:	test   edi,edi
   15d10:	je     165b0 <suicide_mid_eval+0xad0>
   15d16:	add    edi,0x1
   15d19:	mov    edx,0x64
   15d1e:	cmp    DWORD PTR [rsp+0x8],eax
   15d22:	cmove  edx,edi
   15d25:	mov    DWORD PTR [rsp],edx
   15d28:	mov    DWORD PTR [rsp+0x8],eax
   15d2c:	nop    DWORD PTR [rax+0x0]
   15d30:	add    rbx,0x4
   15d34:	cmp    esi,r12d
   15d37:	jge    15c78 <suicide_mid_eval+0x198>
   15d3d:	cmp    DWORD PTR [rsp],0x62
   15d41:	mov    edi,DWORD PTR [rsp+0xc]
   15d45:	setle  al
   15d48:	cmp    DWORD PTR [rsp+0x4],0x62
   15d4d:	setle  dl
   15d50:	and    eax,edx
   15d52:	cmp    DWORD PTR [rsp+0x8],edi
   15d56:	setne  dl
   15d59:	test   al,dl
   15d5b:	je     15d90 <suicide_mid_eval+0x2b0>
   15d5d:	cmp    esi,0x1f
   15d60:	jg     15d90 <suicide_mid_eval+0x2b0>
   15d62:	pxor   xmm0,xmm0
   15d66:	pxor   xmm1,xmm1
   15d6a:	cvtsi2ss xmm0,esi
   15d6e:	mulss  xmm0,DWORD PTR [rip+0x92aa]        # 1f020 <scentral+0x240>
   15d76:	cvtsi2ss xmm1,r8d
   15d7b:	mulss  xmm0,xmm1
   15d7f:	cvttss2si r8d,xmm0
   15d84:	mov    DWORD PTR [rsp+0x28],r8d
   15d89:	nop    DWORD PTR [rax+0x0]
   15d90:	mov    edi,r8d
   15d93:	call   43b0 <storeECache>
   15d98:	jmp    15b2f <suicide_mid_eval+0x4f>
   15d9d:	nop    DWORD PTR [rax]
   15da0:	lea    rax,[rip+0x9039]        # 1ede0 <scentral>
   15da7:	mov    edi,r13d
   15daa:	sub    r8d,DWORD PTR [rax+r9*4]
   15dae:	mov    DWORD PTR [rsp+0x28],r8d
   15db3:	call   159a0 <s_bishop_mobility>
   15db8:	mov    edi,DWORD PTR [rsp+0x4]
   15dbc:	sub    r8d,eax
   15dbf:	lea    rax,[rip+0x61ba]        # 1bf80 <sqcolor>
   15dc6:	mov    DWORD PTR [rsp+0x28],r8d
   15dcb:	mov    eax,DWORD PTR [rax+r9*4]
   15dcf:	test   edi,edi
   15dd1:	je     165a0 <suicide_mid_eval+0xac0>
   15dd7:	add    edi,0x1
   15dda:	mov    edx,0x64
   15ddf:	cmp    DWORD PTR [rsp+0xc],eax
   15de3:	cmove  edx,edi
   15de6:	mov    DWORD PTR [rsp+0x4],edx
   15dea:	mov    DWORD PTR [rsp+0xc],eax
   15dee:	add    rbx,0x4
   15df2:	cmp    esi,r12d
   15df5:	jge    15c78 <suicide_mid_eval+0x198>
   15dfb:	jmp    15d3d <suicide_mid_eval+0x25d>
   15e00:	lea    rax,[rip+0x8fd9]        # 1ede0 <scentral>
   15e07:	mov    edi,r13d
   15e0a:	add    rbx,0x4
   15e0e:	add    r8d,DWORD PTR [rax+r9*4]
   15e12:	mov    DWORD PTR [rsp+0x28],r8d
   15e17:	call   15a40 <s_rook_mobility>
   15e1c:	mov    edi,r13d
   15e1f:	add    r8d,eax
   15e22:	mov    DWORD PTR [rsp+0x28],r8d
   15e27:	call   159a0 <s_bishop_mobility>
   15e2c:	add    r8d,eax
   15e2f:	mov    DWORD PTR [rsp+0x28],r8d
   15e34:	cmp    esi,r12d
   15e37:	jge    15c78 <suicide_mid_eval+0x198>
   15e3d:	jmp    15d3d <suicide_mid_eval+0x25d>
   15e42:	nop    WORD PTR [rax+rax*1+0x0]
   15e48:	lea    rax,[rip+0x8f91]        # 1ede0 <scentral>
   15e4f:	mov    edi,r13d
   15e52:	add    rbx,0x4
   15e56:	sub    r8d,DWORD PTR [rax+r9*4]
   15e5a:	mov    DWORD PTR [rsp+0x28],r8d
   15e5f:	call   15a40 <s_rook_mobility>
   15e64:	mov    edi,r13d
   15e67:	sub    r8d,eax
   15e6a:	mov    DWORD PTR [rsp+0x28],r8d
   15e6f:	call   159a0 <s_bishop_mobility>
   15e74:	sub    r8d,eax
   15e77:	mov    DWORD PTR [rsp+0x28],r8d
   15e7c:	cmp    esi,r12d
   15e7f:	jge    15c78 <suicide_mid_eval+0x198>
   15e85:	jmp    15d3d <suicide_mid_eval+0x25d>
   15e8a:	nop    WORD PTR [rax+rax*1+0x0]
   15e90:	lea    rax,[rip+0x8f49]        # 1ede0 <scentral>
   15e97:	mov    edi,r13d
   15e9a:	add    rbx,0x4
   15e9e:	sub    r8d,DWORD PTR [rax+r9*4]
   15ea2:	mov    DWORD PTR [rsp+0x28],r8d
   15ea7:	call   15a40 <s_rook_mobility>
   15eac:	sub    r8d,eax
   15eaf:	mov    DWORD PTR [rsp+0x28],r8d
   15eb4:	cmp    esi,r12d
   15eb7:	jge    15c78 <suicide_mid_eval+0x198>
   15ebd:	jmp    15d3d <suicide_mid_eval+0x25d>
   15ec2:	nop    WORD PTR [rax+rax*1+0x0]
   15ec8:	lea    rax,[rip+0x8f11]        # 1ede0 <scentral>
   15ecf:	mov    edi,r13d
   15ed2:	add    rbx,0x4
   15ed6:	add    r8d,DWORD PTR [rax+r9*4]
   15eda:	mov    DWORD PTR [rsp+0x28],r8d
   15edf:	call   15a40 <s_rook_mobility>
   15ee4:	add    r8d,eax
   15ee7:	mov    DWORD PTR [rsp+0x28],r8d
   15eec:	cmp    esi,r12d
   15eef:	jge    15c78 <suicide_mid_eval+0x198>
   15ef5:	jmp    15d3d <suicide_mid_eval+0x25d>
   15efa:	nop    WORD PTR [rax+rax*1+0x0]
   15f00:	lea    rax,[rip+0x8ed9]        # 1ede0 <scentral>
   15f07:	lea    rcx,[rip+0x8e96]        # 1eda4 <king_o+0x4>
   15f0e:	mov    edx,0xd
   15f13:	xor    edi,edi
   15f15:	mov    eax,DWORD PTR [rax+r9*4]
   15f19:	lea    r9,[rcx+0x1c]
   15f1d:	sar    eax,1
   15f1f:	sub    r8d,eax
   15f22:	mov    eax,edx
   15f24:	jmp    15f36 <suicide_mid_eval+0x456>
   15f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15f30:	mov    eax,DWORD PTR [rcx]
   15f32:	add    rcx,0x4
   15f36:	add    eax,r13d
   15f39:	cdqe   
   15f3b:	cmp    DWORD PTR [rbp+rax*4+0x0],0xd
   15f40:	jne    15f45 <suicide_mid_eval+0x465>
   15f42:	add    edi,0x1
   15f45:	cmp    r9,rcx
   15f48:	jne    15f30 <suicide_mid_eval+0x450>
   15f4a:	shl    edi,0x2
   15f4d:	sub    r8d,edi
   15f50:	mov    DWORD PTR [rsp+0x28],r8d
   15f55:	add    rbx,0x4
   15f59:	cmp    esi,r12d
   15f5c:	jge    15c78 <suicide_mid_eval+0x198>
   15f62:	jmp    15d3d <suicide_mid_eval+0x25d>
   15f67:	nop    WORD PTR [rax+rax*1+0x0]
   15f70:	lea    rax,[rip+0x8e69]        # 1ede0 <scentral>
   15f77:	lea    rdx,[rip+0x8e26]        # 1eda4 <king_o+0x4>
   15f7e:	xor    edi,edi
   15f80:	mov    eax,DWORD PTR [rax+r9*4]
   15f84:	lea    rcx,[rdx+0x1c]
   15f88:	sar    eax,1
   15f8a:	add    r8d,eax
   15f8d:	mov    eax,0xd
   15f92:	jmp    15f9e <suicide_mid_eval+0x4be>
   15f94:	nop    DWORD PTR [rax+0x0]
   15f98:	mov    eax,DWORD PTR [rdx]
   15f9a:	add    rdx,0x4
   15f9e:	add    eax,r13d
   15fa1:	cdqe   
   15fa3:	cmp    DWORD PTR [rbp+rax*4+0x0],0xd
   15fa8:	jne    15fad <suicide_mid_eval+0x4cd>
   15faa:	add    edi,0x1
   15fad:	cmp    rcx,rdx
   15fb0:	jne    15f98 <suicide_mid_eval+0x4b8>
   15fb2:	lea    r8d,[r8+rdi*4]
   15fb6:	add    rbx,0x4
   15fba:	mov    DWORD PTR [rsp+0x28],r8d
   15fbf:	cmp    esi,r12d
   15fc2:	jge    15c78 <suicide_mid_eval+0x198>
   15fc8:	jmp    15d3d <suicide_mid_eval+0x25d>
   15fcd:	nop    DWORD PTR [rax]
   15fd0:	lea    rax,[rip+0x8e09]        # 1ede0 <scentral>
   15fd7:	lea    rcx,[rip+0x8de6]        # 1edc4 <knight_o+0x4>
   15fde:	mov    edx,0xa
   15fe3:	add    r8d,DWORD PTR [rax+r9*4]
   15fe7:	lea    rdi,[rcx+0x1c]
   15feb:	xor    r9d,r9d
   15fee:	mov    eax,edx
   15ff0:	jmp    15ffe <suicide_mid_eval+0x51e>
   15ff2:	nop    WORD PTR [rax+rax*1+0x0]
   15ff8:	mov    eax,DWORD PTR [rcx]
   15ffa:	add    rcx,0x4
   15ffe:	add    eax,r13d
   16001:	cdqe   
   16003:	cmp    DWORD PTR [rbp+rax*4+0x0],0xd
   16008:	jne    1600e <suicide_mid_eval+0x52e>
   1600a:	add    r9d,0x1
   1600e:	cmp    rdi,rcx
   16011:	jne    15ff8 <suicide_mid_eval+0x518>
   16013:	lea    r8d,[r8+r9*4]
   16017:	add    rbx,0x4
   1601b:	mov    DWORD PTR [rsp+0x28],r8d
   16020:	cmp    esi,r12d
   16023:	jge    15c78 <suicide_mid_eval+0x198>
   16029:	jmp    15d3d <suicide_mid_eval+0x25d>
   1602e:	xchg   ax,ax
   16030:	lea    rax,[rip+0x8da9]        # 1ede0 <scentral>
   16037:	lea    rcx,[rip+0x8d86]        # 1edc4 <knight_o+0x4>
   1603e:	mov    edx,0xa
   16043:	xor    edi,edi
   16045:	sub    r8d,DWORD PTR [rax+r9*4]
   16049:	lea    r9,[rcx+0x1c]
   1604d:	mov    eax,edx
   1604f:	jmp    1605e <suicide_mid_eval+0x57e>
   16051:	nop    DWORD PTR [rax+0x0]
   16058:	mov    eax,DWORD PTR [rcx]
   1605a:	add    rcx,0x4
   1605e:	add    eax,r13d
   16061:	cdqe   
   16063:	cmp    DWORD PTR [rbp+rax*4+0x0],0xd
   16068:	jne    1606d <suicide_mid_eval+0x58d>
   1606a:	add    edi,0x1
   1606d:	cmp    r9,rcx
   16070:	jne    16058 <suicide_mid_eval+0x578>
   16072:	shl    edi,0x2
   16075:	sub    r8d,edi
   16078:	mov    DWORD PTR [rsp+0x28],r8d
   1607d:	jmp    15f55 <suicide_mid_eval+0x475>
   16082:	nop    WORD PTR [rax+rax*1+0x0]
   16088:	lea    eax,[r13+0xc]
   1608c:	lea    rdi,[rip+0x8d4d]        # 1ede0 <scentral>
   16093:	cdqe   
   16095:	cmp    DWORD PTR [rbp+rax*4+0x0],0xd
   1609a:	sete   al
   1609d:	add    r8d,DWORD PTR [rdi+r9*4]
   160a1:	movzx  eax,al
   160a4:	lea    r8d,[r8+rax*8]
   160a8:	lea    eax,[r13+0x18]
   160ac:	cdqe   
   160ae:	mov    DWORD PTR [rsp+0x28],r8d
   160b3:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   160b8:	je     16435 <suicide_mid_eval+0x955>
   160be:	lea    eax,[r13+0x16]
   160c2:	cdqe   
   160c4:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   160c9:	je     16435 <suicide_mid_eval+0x955>
   160cf:	lea    eax,[r13+0x1a]
   160d3:	cdqe   
   160d5:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   160da:	je     16435 <suicide_mid_eval+0x955>
   160e0:	lea    edi,[r13+0xb]
   160e4:	cmp    r10d,0x5
   160e8:	jg     163a0 <suicide_mid_eval+0x8c0>
   160ee:	lea    eax,[r13+0x19]
   160f2:	cdqe   
   160f4:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   160f9:	je     16130 <suicide_mid_eval+0x650>
   160fb:	lea    eax,[r13+0x17]
   160ff:	cdqe   
   16101:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   16106:	je     16130 <suicide_mid_eval+0x650>
   16108:	cmp    r10d,0x4
   1610c:	jne    163a0 <suicide_mid_eval+0x8c0>
   16112:	lea    eax,[r13+0x23]
   16116:	cdqe   
   16118:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   1611d:	je     16130 <suicide_mid_eval+0x650>
   1611f:	lea    eax,[r13+0x25]
   16123:	cdqe   
   16125:	cmp    DWORD PTR [rbp+rax*4+0x0],0x2
   1612a:	jne    163a0 <suicide_mid_eval+0x8c0>
   16130:	mov    DWORD PTR [rsp+0x18],r10d
   16135:	xor    esi,esi
   16137:	mov    DWORD PTR [rsp+0x14],ecx
   1613b:	mov    DWORD PTR [rsp+0x10],edx
   1613f:	jmp    1640f <suicide_mid_eval+0x92f>
   16144:	nop    DWORD PTR [rax+0x0]
   16148:	lea    edi,[r13-0xc]
   1614c:	lea    rax,[rip+0x8c8d]        # 1ede0 <scentral>
   16153:	movsxd rdi,edi
   16156:	sub    r8d,DWORD PTR [rax+r9*4]
   1615a:	lea    eax,[r13-0x18]
   1615e:	cmp    DWORD PTR [rbp+rdi*4+0x0],0xd
   16163:	cdqe   
   16165:	sete   dil
   16169:	movzx  edi,dil
   1616d:	shl    edi,0x3
   16170:	sub    r8d,edi
   16173:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   16178:	mov    DWORD PTR [rsp+0x28],r8d
   1617d:	je     16298 <suicide_mid_eval+0x7b8>
   16183:	lea    eax,[r13-0x16]
   16187:	cdqe   
   16189:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   1618e:	je     16298 <suicide_mid_eval+0x7b8>
   16194:	lea    eax,[r13-0x1a]
   16198:	cdqe   
   1619a:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   1619f:	je     16298 <suicide_mid_eval+0x7b8>
   161a5:	lea    r14d,[r13-0xb]
   161a9:	cmp    r10d,0x3
   161ad:	jle    16210 <suicide_mid_eval+0x730>
   161af:	lea    eax,[r13-0x19]
   161b3:	cdqe   
   161b5:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   161ba:	je     161f0 <suicide_mid_eval+0x710>
   161bc:	lea    eax,[r13-0x17]
   161c0:	cdqe   
   161c2:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   161c7:	je     161f0 <suicide_mid_eval+0x710>
   161c9:	cmp    r10d,0x5
   161cd:	jne    16210 <suicide_mid_eval+0x730>
   161cf:	lea    eax,[r13-0x23]
   161d3:	cdqe   
   161d5:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   161da:	je     161f0 <suicide_mid_eval+0x710>
   161dc:	lea    eax,[r13-0x25]
   161e0:	cdqe   
   161e2:	cmp    DWORD PTR [rbp+rax*4+0x0],0x1
   161e7:	jne    16210 <suicide_mid_eval+0x730>
   161e9:	nop    DWORD PTR [rax+0x0]
   161f0:	mov    DWORD PTR [rsp+0x18],r10d
   161f5:	mov    esi,0x1
   161fa:	mov    edi,r14d
   161fd:	mov    DWORD PTR [rsp+0x14],ecx
   16201:	mov    DWORD PTR [rsp+0x10],edx
   16205:	jmp    16272 <suicide_mid_eval+0x792>
   16207:	nop    WORD PTR [rax+rax*1+0x0]
   16210:	mov    esi,0x1
   16215:	mov    edi,r14d
   16218:	mov    DWORD PTR [rsp+0x18],r10d
   1621d:	mov    DWORD PTR [rsp+0x14],ecx
   16221:	mov    DWORD PTR [rsp+0x10],edx
   16225:	call   3530 <is_attacked>
   1622a:	mov    edx,DWORD PTR [rsp+0x10]
   1622e:	mov    ecx,DWORD PTR [rsp+0x14]
   16232:	test   eax,eax
   16234:	mov    r10d,DWORD PTR [rsp+0x18]
   16239:	jne    161f0 <suicide_mid_eval+0x710>
   1623b:	sub    r13d,0xd
   1623f:	mov    esi,0x1
   16244:	mov    edi,r13d
   16247:	call   3530 <is_attacked>
   1624c:	mov    edx,DWORD PTR [rsp+0x10]
   16250:	mov    ecx,DWORD PTR [rsp+0x14]
   16254:	test   eax,eax
   16256:	mov    r10d,DWORD PTR [rsp+0x18]
   1625b:	je     1628d <suicide_mid_eval+0x7ad>
   1625d:	mov    DWORD PTR [rsp+0x18],r10d
   16262:	mov    esi,0x1
   16267:	mov    edi,r13d
   1626a:	mov    DWORD PTR [rsp+0x14],ecx
   1626e:	mov    DWORD PTR [rsp+0x10],edx
   16272:	call   3280 <calc_attackers>
   16277:	mov    edx,DWORD PTR [rsp+0x10]
   1627b:	mov    ecx,DWORD PTR [rsp+0x14]
   1627f:	cmp    eax,0x1
   16282:	mov    r10d,DWORD PTR [rsp+0x18]
   16287:	jle    165ee <suicide_mid_eval+0xb0e>
   1628d:	mov    r8d,DWORD PTR [rsp+0x28]
   16292:	mov    esi,DWORD PTR [rip+0x5560c]        # 6b8a4 <piece_count>
   16298:	lea    edi,[rdx+0x2]
   1629b:	movsxd rcx,ecx
   1629e:	movsxd rax,edx
   162a1:	mov    DWORD PTR [rsp+0x28],r8d
   162a6:	movsxd rdi,edi
   162a9:	mov    r9d,DWORD PTR [rsp+rcx*4+0xbc]
   162b1:	mov    r11d,DWORD PTR [rsp+rax*4+0x90]
   162b9:	cmp    DWORD PTR [rsp+rdi*4+0x60],r10d
   162be:	jge    16308 <suicide_mid_eval+0x828>
   162c0:	cmp    DWORD PTR [rsp+rax*4+0x60],r10d
   162c5:	jge    16308 <suicide_mid_eval+0x828>
   162c7:	mov    r13d,DWORD PTR [rsp+rdi*4+0x90]
   162cf:	lea    r14d,[r8+0x8]
   162d3:	mov    DWORD PTR [rsp+0x28],r14d
   162d8:	test   r13d,r13d
   162db:	jne    165de <suicide_mid_eval+0xafe>
   162e1:	test   r11d,r11d
   162e4:	jne    16622 <suicide_mid_eval+0xb42>
   162ea:	test   r9d,r9d
   162ed:	je     1655d <suicide_mid_eval+0xa7d>
   162f3:	add    r8d,0x14
   162f7:	mov    r13d,0x1
   162fd:	mov    DWORD PTR [rsp+0x28],r8d
   16302:	jmp    16314 <suicide_mid_eval+0x834>
   16304:	nop    DWORD PTR [rax+0x0]
   16308:	xor    r13d,r13d
   1630b:	test   r9d,r9d
   1630e:	je     1656c <suicide_mid_eval+0xa8c>
   16314:	mov    ecx,DWORD PTR [rsp+rcx*4+0x90]
   1631b:	cmp    ecx,0x1
   1631e:	jle    16388 <suicide_mid_eval+0x8a8>
   16320:	sub    ecx,0x1
   16323:	mov    r14d,ecx
   16326:	shl    r14d,0x4
   1632a:	sub    r14d,ecx
   1632d:	add    r8d,r14d
   16330:	mov    DWORD PTR [rsp+0x28],r8d
   16335:	test   r9d,r9d
   16338:	jne    16388 <suicide_mid_eval+0x8a8>
   1633a:	mov    r9d,r13d
   1633d:	nop    DWORD PTR [rax]
   16340:	cmp    DWORD PTR [rsp+rax*4+0x30],r10d
   16345:	jl     16388 <suicide_mid_eval+0x8a8>
   16347:	cmp    DWORD PTR [rsp+rdi*4+0x30],r10d
   1634c:	jl     16388 <suicide_mid_eval+0x8a8>
   1634e:	mov    eax,0x7
   16353:	sub    eax,r10d
   16356:	lea    eax,[rax+rax*2+0x1e]
   1635a:	sub    r8d,eax
   1635d:	cmp    edx,0x1
   16360:	je     1662f <suicide_mid_eval+0xb4f>
   16366:	cmp    edx,0x8
   16369:	je     1662f <suicide_mid_eval+0xb4f>
   1636f:	mov    DWORD PTR [rsp+0x28],r8d
   16374:	test   r9d,r9d
   16377:	jne    16388 <suicide_mid_eval+0x8a8>
   16379:	sub    r8d,0x6
   1637d:	mov    DWORD PTR [rsp+0x28],r8d
   16382:	nop    WORD PTR [rax+rax*1+0x0]
   16388:	test   r11d,r11d
   1638b:	jne    15d30 <suicide_mid_eval+0x250>
   16391:	add    r8d,0x14
   16395:	mov    DWORD PTR [rsp+0x28],r8d
   1639a:	jmp    15d30 <suicide_mid_eval+0x250>
   1639f:	nop
   163a0:	xor    esi,esi
   163a2:	mov    DWORD PTR [rsp+0x1c],r10d
   163a7:	mov    DWORD PTR [rsp+0x18],ecx
   163ab:	mov    DWORD PTR [rsp+0x14],edx
   163af:	mov    DWORD PTR [rsp+0x10],edi
   163b3:	call   3530 <is_attacked>
   163b8:	mov    edi,DWORD PTR [rsp+0x10]
   163bc:	mov    edx,DWORD PTR [rsp+0x14]
   163c0:	test   eax,eax
   163c2:	mov    ecx,DWORD PTR [rsp+0x18]
   163c6:	mov    r10d,DWORD PTR [rsp+0x1c]
   163cb:	jne    16130 <suicide_mid_eval+0x650>
   163d1:	add    r13d,0xd
   163d5:	xor    esi,esi
   163d7:	mov    DWORD PTR [rsp+0x18],r10d
   163dc:	mov    edi,r13d
   163df:	mov    DWORD PTR [rsp+0x14],ecx
   163e3:	mov    DWORD PTR [rsp+0x10],edx
   163e7:	call   3530 <is_attacked>
   163ec:	mov    edx,DWORD PTR [rsp+0x10]
   163f0:	mov    ecx,DWORD PTR [rsp+0x14]
   163f4:	test   eax,eax
   163f6:	mov    r10d,DWORD PTR [rsp+0x18]
   163fb:	je     1642a <suicide_mid_eval+0x94a>
   163fd:	mov    DWORD PTR [rsp+0x18],r10d
   16402:	xor    esi,esi
   16404:	mov    edi,r13d
   16407:	mov    DWORD PTR [rsp+0x14],ecx
   1640b:	mov    DWORD PTR [rsp+0x10],edx
   1640f:	call   3280 <calc_attackers>
   16414:	mov    edx,DWORD PTR [rsp+0x10]
   16418:	mov    ecx,DWORD PTR [rsp+0x14]
   1641c:	cmp    eax,0x1
   1641f:	mov    r10d,DWORD PTR [rsp+0x18]
   16424:	jle    16601 <suicide_mid_eval+0xb21>
   1642a:	mov    r8d,DWORD PTR [rsp+0x28]
   1642f:	mov    esi,DWORD PTR [rip+0x5546f]        # 6b8a4 <piece_count>
   16435:	lea    edi,[rdx+0x2]
   16438:	movsxd rcx,ecx
   1643b:	movsxd rax,edx
   1643e:	mov    DWORD PTR [rsp+0x28],r8d
   16443:	movsxd rdi,edi
   16446:	mov    r9d,DWORD PTR [rsp+rcx*4+0x90]
   1644e:	mov    r11d,DWORD PTR [rsp+rax*4+0xbc]
   16456:	cmp    DWORD PTR [rsp+rdi*4+0x30],r10d
   1645b:	jle    164d8 <suicide_mid_eval+0x9f8>
   1645d:	cmp    DWORD PTR [rsp+rax*4+0x30],r10d
   16462:	jle    164d8 <suicide_mid_eval+0x9f8>
   16464:	lea    r13d,[r8-0x8]
   16468:	cmp    DWORD PTR [rsp+rdi*4+0xbc],0x0
   16470:	mov    DWORD PTR [rsp+0x28],r13d
   16475:	jne    165cd <suicide_mid_eval+0xaed>
   1647b:	test   r11d,r11d
   1647e:	jne    16641 <suicide_mid_eval+0xb61>
   16484:	test   r9d,r9d
   16487:	je     165bc <suicide_mid_eval+0xadc>
   1648d:	mov    eax,DWORD PTR [rsp+rcx*4+0xbc]
   16494:	sub    r8d,0x14
   16498:	mov    DWORD PTR [rsp+0x28],r8d
   1649d:	cmp    eax,0x1
   164a0:	jle    164c3 <suicide_mid_eval+0x9e3>
   164a2:	nop    WORD PTR [rax+rax*1+0x0]
   164a8:	sub    eax,0x1
   164ab:	mov    edx,eax
   164ad:	shl    edx,0x4
   164b0:	sub    eax,edx
   164b2:	add    r8d,eax
   164b5:	mov    DWORD PTR [rsp+0x28],r8d
   164ba:	test   r11d,r11d
   164bd:	jne    15d30 <suicide_mid_eval+0x250>
   164c3:	sub    r8d,0x14
   164c7:	mov    DWORD PTR [rsp+0x28],r8d
   164cc:	jmp    15d30 <suicide_mid_eval+0x250>
   164d1:	nop    DWORD PTR [rax+0x0]
   164d8:	test   r9d,r9d
   164db:	je     164f8 <suicide_mid_eval+0xa18>
   164dd:	mov    eax,DWORD PTR [rsp+rcx*4+0xbc]
   164e4:	cmp    eax,0x1
   164e7:	jg     164a8 <suicide_mid_eval+0x9c8>
   164e9:	jmp    164ba <suicide_mid_eval+0x9da>
   164eb:	sub    r8d,0xd
   164ef:	mov    DWORD PTR [rsp+0x28],r8d
   164f4:	nop    DWORD PTR [rax+0x0]
   164f8:	mov    ecx,DWORD PTR [rsp+rcx*4+0xbc]
   164ff:	cmp    ecx,0x1
   16502:	jle    16519 <suicide_mid_eval+0xa39>
   16504:	sub    ecx,0x1
   16507:	mov    r13d,ecx
   1650a:	shl    r13d,0x4
   1650e:	sub    ecx,r13d
   16511:	add    r8d,ecx
   16514:	mov    DWORD PTR [rsp+0x28],r8d
   16519:	cmp    DWORD PTR [rsp+rax*4+0x60],r10d
   1651e:	jg     164ba <suicide_mid_eval+0x9da>
   16520:	cmp    DWORD PTR [rsp+rdi*4+0x60],r10d
   16525:	jg     164ba <suicide_mid_eval+0x9da>
   16527:	lea    eax,[r10+r10*2+0x18]
   1652c:	add    r8d,eax
   1652f:	cmp    edx,0x1
   16532:	je     16662 <suicide_mid_eval+0xb82>
   16538:	cmp    edx,0x8
   1653b:	je     16662 <suicide_mid_eval+0xb82>
   16541:	mov    DWORD PTR [rsp+0x28],r8d
   16546:	test   r9d,r9d
   16549:	jne    164ba <suicide_mid_eval+0x9da>
   1654f:	add    r8d,0x6
   16553:	mov    DWORD PTR [rsp+0x28],r8d
   16558:	jmp    164ba <suicide_mid_eval+0x9da>
   1655d:	add    r8d,0x21
   16561:	mov    r9d,0x1
   16567:	mov    DWORD PTR [rsp+0x28],r8d
   1656c:	mov    ecx,DWORD PTR [rsp+rcx*4+0x90]
   16573:	cmp    ecx,0x1
   16576:	jle    16340 <suicide_mid_eval+0x860>
   1657c:	sub    ecx,0x1
   1657f:	mov    r13d,ecx
   16582:	shl    r13d,0x4
   16586:	sub    r13d,ecx
   16589:	add    r8d,r13d
   1658c:	mov    DWORD PTR [rsp+0x28],r8d
   16591:	jmp    16340 <suicide_mid_eval+0x860>
   16596:	nop    WORD PTR cs:[rax+rax*1+0x0]
   165a0:	mov    DWORD PTR [rsp+0x4],0x1
   165a8:	jmp    15dea <suicide_mid_eval+0x30a>
   165ad:	nop    DWORD PTR [rax]
   165b0:	mov    DWORD PTR [rsp],0x1
   165b7:	jmp    15d28 <suicide_mid_eval+0x248>
   165bc:	sub    r8d,0x21
   165c0:	mov    r9d,r14d
   165c3:	mov    DWORD PTR [rsp+0x28],r8d
   165c8:	jmp    164f8 <suicide_mid_eval+0xa18>
   165cd:	test   r9d,r9d
   165d0:	je     164eb <suicide_mid_eval+0xa0b>
   165d6:	mov    r8d,r13d
   165d9:	jmp    164dd <suicide_mid_eval+0x9fd>
   165de:	test   r9d,r9d
   165e1:	je     16614 <suicide_mid_eval+0xb34>
   165e3:	mov    r8d,r14d
   165e6:	xor    r13d,r13d
   165e9:	jmp    16314 <suicide_mid_eval+0x834>
   165ee:	mov    eax,DWORD PTR [rsp+0x28]
   165f2:	mov    esi,DWORD PTR [rip+0x552ac]        # 6b8a4 <piece_count>
   165f8:	lea    r8d,[rax+0x1e]
   165fc:	jmp    16298 <suicide_mid_eval+0x7b8>
   16601:	mov    eax,DWORD PTR [rsp+0x28]
   16605:	mov    esi,DWORD PTR [rip+0x55299]        # 6b8a4 <piece_count>
   1660b:	lea    r8d,[rax-0x1e]
   1660f:	jmp    16435 <suicide_mid_eval+0x955>
   16614:	add    r8d,0xd
   16618:	mov    DWORD PTR [rsp+0x28],r8d
   1661d:	jmp    1656c <suicide_mid_eval+0xa8c>
   16622:	test   r9d,r9d
   16625:	je     16614 <suicide_mid_eval+0xb34>
   16627:	mov    r8d,r14d
   1662a:	jmp    16314 <suicide_mid_eval+0x834>
   1662f:	mov    eax,0x9
   16634:	sub    eax,r10d
   16637:	add    eax,eax
   16639:	sub    r8d,eax
   1663c:	jmp    1636f <suicide_mid_eval+0x88f>
   16641:	test   r9d,r9d
   16644:	je     164eb <suicide_mid_eval+0xa0b>
   1664a:	mov    eax,DWORD PTR [rsp+rcx*4+0xbc]
   16651:	mov    r8d,r13d
   16654:	cmp    eax,0x1
   16657:	jg     164a8 <suicide_mid_eval+0x9c8>
   1665d:	jmp    15d30 <suicide_mid_eval+0x250>
   16662:	lea    r8d,[r8+r10*2]
   16666:	jmp    16541 <suicide_mid_eval+0xa61>
   1666b:	call   1310 <__stack_chk_fail@plt>

0000000000016670 <suicide_eval>:
   16670:	endbr64 
   16674:	jmp    15ae0 <suicide_mid_eval>
   16679:	nop    DWORD PTR [rax+0x0]

0000000000016680 <clear_tt>:
   16680:	endbr64 
   16684:	sub    rsp,0x8
   16688:	movsxd rax,DWORD PTR [rip+0x50edd]        # 6756c <TTSize>
   1668f:	mov    rdi,QWORD PTR [rip+0x2810f2]        # 297788 <DP_TTable>
   16696:	xor    esi,esi
   16698:	lea    rdx,[rax+rax*4]
   1669c:	shl    rdx,0x2
   166a0:	call   1360 <memset@plt>
   166a5:	movsxd rax,DWORD PTR [rip+0x50ec0]        # 6756c <TTSize>
   166ac:	mov    rdi,QWORD PTR [rip+0x2810e5]        # 297798 <AS_TTable>
   166b3:	xor    esi,esi
   166b5:	lea    rdx,[rax+rax*4]
   166b9:	shl    rdx,0x2
   166bd:	call   1360 <memset@plt>
   166c2:	movsxd rdx,DWORD PTR [rip+0x50ea3]        # 6756c <TTSize>
   166c9:	mov    rdi,QWORD PTR [rip+0x2810d0]        # 2977a0 <QS_TTable>
   166d0:	xor    esi,esi
   166d2:	add    rsp,0x8
   166d6:	shl    rdx,0x4
   166da:	jmp    1360 <memset@plt>
   166df:	nop

00000000000166e0 <clear_dp_tt>:
   166e0:	endbr64 
   166e4:	movsxd rax,DWORD PTR [rip+0x50e81]        # 6756c <TTSize>
   166eb:	mov    rdi,QWORD PTR [rip+0x281096]        # 297788 <DP_TTable>
   166f2:	xor    esi,esi
   166f4:	lea    rdx,[rax+rax*4]
   166f8:	shl    rdx,0x2
   166fc:	jmp    1360 <memset@plt>
   16701:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1670c:	nop    DWORD PTR [rax+0x0]

0000000000016710 <initialize_zobrist>:
   16710:	endbr64 
   16714:	push   r12
   16716:	mov    edi,0x7ba9
   1671b:	push   rbp
   1671c:	lea    rbp,[rip+0x2812dd]        # 297a00 <zobrist+0x240>
   16723:	push   rbx
   16724:	lea    r12,[rbp+0x1f80]
   1672b:	call   19500 <seedMT>
   16730:	lea    rbx,[rbp-0x240]
   16737:	nop    WORD PTR [rax+rax*1+0x0]
   16740:	call   196a0 <randomMT>
   16745:	add    rbx,0x4
   16749:	mov    DWORD PTR [rbx-0x4],eax
   1674c:	cmp    rbx,rbp
   1674f:	jne    16740 <initialize_zobrist+0x30>
   16751:	lea    rbp,[rbx+0x240]
   16758:	cmp    rbp,r12
   1675b:	jne    16730 <initialize_zobrist+0x20>
   1675d:	mov    DWORD PTR [rip+0x28101d],0xdeadbeef        # 297784 <hash>
   16767:	pop    rbx
   16768:	mov    DWORD PTR [rip+0xea36],0xc0ffee00        # 251a8 <hold_hash>
   16772:	pop    rbp
   16773:	pop    r12
   16775:	ret    
   16776:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016780 <initialize_hash>:
   16780:	endbr64 
   16784:	mov    DWORD PTR [rip+0x280ff6],0xdeadbeef        # 297784 <hash>
   1678e:	xor    edx,edx
   16790:	xor    edi,edi
   16792:	mov    r8d,0xdeadbeef
   16798:	lea    r9,[rip+0x267121]        # 27d8c0 <board>
   1679f:	lea    r10,[rip+0x28101a]        # 2977c0 <zobrist>
   167a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   167b0:	movsxd rax,DWORD PTR [r9+rdx*4]
   167b4:	cmp    eax,0xd
   167b7:	setne  cl
   167ba:	test   eax,eax
   167bc:	setne  sil
   167c0:	and    cl,sil
   167c3:	je     167dc <initialize_hash+0x5c>
   167c5:	movsxd rdi,edx
   167c8:	lea    rsi,[rax+rax*8]
   167cc:	shl    rsi,0x4
   167d0:	mov    rax,rdi
   167d3:	mov    edi,ecx
   167d5:	add    rax,rsi
   167d8:	xor    r8d,DWORD PTR [r10+rax*4]
   167dc:	add    rdx,0x1
   167e0:	cmp    rdx,0x90
   167e7:	jne    167b0 <initialize_hash+0x30>
   167e9:	test   dil,dil
   167ec:	je     167f5 <initialize_hash+0x75>
   167ee:	mov    DWORD PTR [rip+0x280f8f],r8d        # 297784 <hash>
   167f5:	mov    DWORD PTR [rip+0xe9a9],0xc0ffee00        # 251a8 <hold_hash>
   167ff:	ret    

0000000000016800 <QStoreTT>:
   16800:	endbr64 
   16804:	mov    r9d,esi
   16807:	mov    esi,DWORD PTR [rip+0x280f77]        # 297784 <hash>
   1680d:	mov    r8d,edx
   16810:	xor    edx,edx
   16812:	add    DWORD PTR [rip+0x280f77],0x1        # 297790 <TTStores>
   16819:	mov    eax,esi
   1681b:	div    DWORD PTR [rip+0x50d4b]        # 6756c <TTSize>
   16821:	shl    rdx,0x4
   16825:	add    rdx,QWORD PTR [rip+0x280f74]        # 2977a0 <QS_TTable>
   1682c:	cmp    edi,r9d
   1682f:	jg     16858 <QStoreTT+0x58>
   16831:	mov    BYTE PTR [rdx+0x1],0x1
   16835:	mov    eax,DWORD PTR [rip+0xe96d]        # 251a8 <hold_hash>
   1683b:	mov    DWORD PTR [rdx+0x4],esi
   1683e:	mov    WORD PTR [rdx+0x2],cx
   16842:	mov    DWORD PTR [rdx+0x8],eax
   16845:	mov    eax,DWORD PTR [rip+0x266cd5]        # 27d520 <white_to_move>
   1684b:	mov    DWORD PTR [rdx+0xc],edi
   1684e:	test   eax,eax
   16850:	sete   BYTE PTR [rdx]
   16853:	ret    
   16854:	nop    DWORD PTR [rax+0x0]
   16858:	cmp    edi,r8d
   1685b:	setl   al
   1685e:	add    eax,0x2
   16861:	mov    BYTE PTR [rdx+0x1],al
   16864:	jmp    16835 <QStoreTT+0x35>
   16866:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016870 <StoreTT>:
   16870:	endbr64 
   16874:	mov    r10d,DWORD PTR [rip+0x280f09]        # 297784 <hash>
   1687b:	mov    r11d,edx
   1687e:	xor    edx,edx
   16880:	add    DWORD PTR [rip+0x280f09],0x1        # 297790 <TTStores>
   16887:	push   rbx
   16888:	mov    eax,r10d
   1688b:	div    DWORD PTR [rip+0x50cdb]        # 6756c <TTSize>
   16891:	lea    rax,[rdx+rdx*4]
   16895:	mov    rdx,QWORD PTR [rip+0x280eec]        # 297788 <DP_TTable>
   1689c:	shl    rax,0x2
   168a0:	add    rdx,rax
   168a3:	movsx  ebx,BYTE PTR [rdx]
   168a6:	cmp    ebx,r9d
   168a9:	jl     168e0 <StoreTT+0x70>
   168ab:	je     16988 <StoreTT+0x118>
   168b1:	cmp    edi,esi
   168b3:	jle    16940 <StoreTT+0xd0>
   168b9:	add    rax,QWORD PTR [rip+0x280ed8]        # 297798 <AS_TTable>
   168c0:	cmp    edi,r11d
   168c3:	jl     169ac <StoreTT+0x13c>
   168c9:	cmp    edi,0xf404c
   168cf:	mov    edx,0xf404c
   168d4:	mov    BYTE PTR [rax+0x3],0x2
   168d8:	cmovg  edi,edx
   168db:	jmp    16959 <StoreTT+0xe9>
   168dd:	nop    DWORD PTR [rax]
   168e0:	mov    ebx,DWORD PTR [rip+0x280e76]        # 29775c <is_pondering>
   168e6:	test   ebx,ebx
   168e8:	jne    168b1 <StoreTT+0x41>
   168ea:	cmp    edi,esi
   168ec:	jg     169d0 <StoreTT+0x160>
   168f2:	cmp    edi,0xfff0bfb4
   168f8:	mov    eax,0xfff0bfb4
   168fd:	mov    BYTE PTR [rdx+0x3],0x1
   16901:	cmovl  edi,eax
   16904:	mov    eax,DWORD PTR [rip+0xe89e]        # 251a8 <hold_hash>
   1690a:	mov    WORD PTR [rdx+0x4],cx
   1690e:	mov    BYTE PTR [rdx],r9b
   16911:	mov    ecx,DWORD PTR [rip+0x266c09]        # 27d520 <white_to_move>
   16917:	mov    DWORD PTR [rdx+0x8],r10d
   1691b:	test   ecx,ecx
   1691d:	mov    DWORD PTR [rdx+0xc],eax
   16920:	mov    DWORD PTR [rdx+0x10],edi
   16923:	mov    BYTE PTR [rdx+0x2],r8b
   16927:	sete   BYTE PTR [rdx+0x1]
   1692b:	pop    rbx
   1692c:	ret    
   1692d:	nop    DWORD PTR [rax]
   16930:	cmp    edi,esi
   16932:	jg     169c0 <StoreTT+0x150>
   16938:	nop    DWORD PTR [rax+rax*1+0x0]
   16940:	add    rax,QWORD PTR [rip+0x280e51]        # 297798 <AS_TTable>
   16947:	mov    edx,0xfff0bfb4
   1694c:	cmp    edi,0xfff0bfb4
   16952:	mov    BYTE PTR [rax+0x3],0x1
   16956:	cmovl  edi,edx
   16959:	mov    edx,DWORD PTR [rip+0xe849]        # 251a8 <hold_hash>
   1695f:	mov    BYTE PTR [rax],r9b
   16962:	mov    DWORD PTR [rax+0x8],r10d
   16966:	mov    DWORD PTR [rax+0xc],edx
   16969:	mov    edx,DWORD PTR [rip+0x266bb1]        # 27d520 <white_to_move>
   1696f:	mov    WORD PTR [rax+0x4],cx
   16973:	test   edx,edx
   16975:	mov    DWORD PTR [rax+0x10],edi
   16978:	mov    BYTE PTR [rax+0x2],r8b
   1697c:	sete   BYTE PTR [rax+0x1]
   16980:	pop    rbx
   16981:	ret    
   16982:	nop    WORD PTR [rax+rax*1+0x0]
   16988:	cmp    BYTE PTR [rdx+0x3],0x1
   1698c:	je     16930 <StoreTT+0xc0>
   1698e:	cmp    edi,esi
   16990:	jle    16940 <StoreTT+0xd0>
   16992:	cmp    edi,r11d
   16995:	jge    168b1 <StoreTT+0x41>
   1699b:	mov    esi,DWORD PTR [rip+0x280dbb]        # 29775c <is_pondering>
   169a1:	test   esi,esi
   169a3:	je     169f0 <StoreTT+0x180>
   169a5:	add    rax,QWORD PTR [rip+0x280dec]        # 297798 <AS_TTable>
   169ac:	mov    BYTE PTR [rax+0x3],0x3
   169b0:	cmp    edi,0xf404c
   169b6:	jle    16a18 <StoreTT+0x1a8>
   169b8:	add    edi,DWORD PTR [rip+0x280da2]        # 297760 <ply>
   169be:	jmp    16959 <StoreTT+0xe9>
   169c0:	mov    ebx,DWORD PTR [rip+0x280d96]        # 29775c <is_pondering>
   169c6:	test   ebx,ebx
   169c8:	jne    168b9 <StoreTT+0x49>
   169ce:	xchg   ax,ax
   169d0:	cmp    edi,r11d
   169d3:	jl     169f0 <StoreTT+0x180>
   169d5:	cmp    edi,0xf404c
   169db:	mov    eax,0xf404c
   169e0:	mov    BYTE PTR [rdx+0x3],0x2
   169e4:	cmovg  edi,eax
   169e7:	jmp    16904 <StoreTT+0x94>
   169ec:	nop    DWORD PTR [rax+0x0]
   169f0:	mov    BYTE PTR [rdx+0x3],0x3
   169f4:	cmp    edi,0xf404c
   169fa:	jg     16a30 <StoreTT+0x1c0>
   169fc:	cmp    edi,0xfff0bfb4
   16a02:	jge    16904 <StoreTT+0x94>
   16a08:	sub    edi,DWORD PTR [rip+0x280d52]        # 297760 <ply>
   16a0e:	jmp    16904 <StoreTT+0x94>
   16a13:	nop    DWORD PTR [rax+rax*1+0x0]
   16a18:	cmp    edi,0xfff0bfb4
   16a1e:	jge    16959 <StoreTT+0xe9>
   16a24:	sub    edi,DWORD PTR [rip+0x280d36]        # 297760 <ply>
   16a2a:	jmp    16959 <StoreTT+0xe9>
   16a2f:	nop
   16a30:	add    edi,DWORD PTR [rip+0x280d2a]        # 297760 <ply>
   16a36:	jmp    16904 <StoreTT+0x94>
   16a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000016a40 <LearnStoreTT>:
   16a40:	endbr64 
   16a44:	mov    r10d,edx
   16a47:	mov    eax,esi
   16a49:	xor    edx,edx
   16a4b:	div    DWORD PTR [rip+0x50b1b]        # 6756c <TTSize>
   16a51:	mov    rax,QWORD PTR [rip+0x280d40]        # 297798 <AS_TTable>
   16a58:	lea    rdx,[rdx+rdx*4]
   16a5c:	lea    rax,[rax+rdx*4]
   16a60:	mov    BYTE PTR [rax],r9b
   16a63:	mov    edx,DWORD PTR [rip+0x264d57]        # 27b7c0 <Variant>
   16a69:	mov    DWORD PTR [rax+0x8],esi
   16a6c:	sub    edx,0x3
   16a6f:	mov    DWORD PTR [rax+0xc],r10d
   16a73:	cmp    edx,0x2
   16a76:	mov    WORD PTR [rax+0x4],r8w
   16a7b:	sbb    edx,edx
   16a7d:	mov    DWORD PTR [rax+0x10],edi
   16a80:	and    edx,0xfffffffe
   16a83:	mov    BYTE PTR [rax+0x1],cl
   16a86:	add    edx,0x3
   16a89:	mov    BYTE PTR [rax+0x2],0x0
   16a8d:	mov    BYTE PTR [rax+0x3],dl
   16a90:	ret    
   16a91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   16a9c:	nop    DWORD PTR [rax+0x0]

0000000000016aa0 <ProbeTT>:
   16aa0:	endbr64 
   16aa4:	mov    DWORD PTR [r8],0x1
   16aab:	mov    r10d,DWORD PTR [rip+0x280cd2]        # 297784 <hash>
   16ab2:	mov    r11,rdx
   16ab5:	xor    edx,edx
   16ab7:	add    DWORD PTR [rip+0x280cc2],0x1        # 297780 <TTProbes>
   16abe:	mov    eax,r10d
   16ac1:	push   r12
   16ac3:	div    DWORD PTR [rip+0x50aa3]        # 6756c <TTSize>
   16ac9:	lea    rax,[rdx+rdx*4]
   16acd:	mov    rdx,QWORD PTR [rip+0x280cb4]        # 297788 <DP_TTable>
   16ad4:	shl    rax,0x2
   16ad8:	add    rdx,rax
   16adb:	cmp    r10d,DWORD PTR [rdx+0x8]
   16adf:	je     16b70 <ProbeTT+0xd0>
   16ae5:	add    rax,QWORD PTR [rip+0x280cac]        # 297798 <AS_TTable>
   16aec:	mov    r12d,0x4
   16af2:	cmp    r10d,DWORD PTR [rax+0x8]
   16af6:	jne    16b63 <ProbeTT+0xc3>
   16af8:	mov    edx,DWORD PTR [rip+0xe6aa]        # 251a8 <hold_hash>
   16afe:	cmp    DWORD PTR [rax+0xc],edx
   16b01:	jne    16b63 <ProbeTT+0xc3>
   16b03:	mov    edx,DWORD PTR [rip+0x266a17]        # 27d520 <white_to_move>
   16b09:	test   edx,edx
   16b0b:	sete   dl
   16b0e:	cmp    BYTE PTR [rax+0x1],dl
   16b11:	jne    16b63 <ProbeTT+0xc3>
   16b13:	add    DWORD PTR [rip+0x280c7a],0x1        # 297794 <TTHits>
   16b1a:	cmp    BYTE PTR [rax+0x3],0x1
   16b1e:	movsx  edx,BYTE PTR [rax]
   16b21:	je     16c08 <ProbeTT+0x168>
   16b27:	cmp    BYTE PTR [rax+0x2],0x1
   16b2b:	movzx  esi,WORD PTR [rax+0x4]
   16b2f:	sbb    r9d,0xffffffff
   16b33:	cmp    r9d,edx
   16b36:	jg     16bf0 <ProbeTT+0x150>
   16b3c:	mov    edx,DWORD PTR [rax+0x10]
   16b3f:	mov    DWORD PTR [rdi],edx
   16b41:	cmp    edx,0xf404c
   16b47:	jle    16c30 <ProbeTT+0x190>
   16b4d:	sub    edx,DWORD PTR [rip+0x280c0d]        # 297760 <ply>
   16b53:	mov    DWORD PTR [rdi],edx
   16b55:	mov    DWORD PTR [r11],esi
   16b58:	movsx  edx,BYTE PTR [rax+0x2]
   16b5c:	mov    DWORD PTR [rcx],edx
   16b5e:	movsx  r12d,BYTE PTR [rax+0x3]
   16b63:	mov    eax,r12d
   16b66:	pop    r12
   16b68:	ret    
   16b69:	nop    DWORD PTR [rax+0x0]
   16b70:	mov    r12d,DWORD PTR [rip+0xe631]        # 251a8 <hold_hash>
   16b77:	cmp    DWORD PTR [rdx+0xc],r12d
   16b7b:	jne    16ae5 <ProbeTT+0x45>
   16b81:	mov    r12d,DWORD PTR [rip+0x266998]        # 27d520 <white_to_move>
   16b88:	test   r12d,r12d
   16b8b:	sete   r12b
   16b8f:	cmp    BYTE PTR [rdx+0x1],r12b
   16b93:	jne    16ae5 <ProbeTT+0x45>
   16b99:	add    DWORD PTR [rip+0x280bf4],0x1        # 297794 <TTHits>
   16ba0:	cmp    BYTE PTR [rdx+0x3],0x1
   16ba4:	movsx  eax,BYTE PTR [rdx]
   16ba7:	je     16c68 <ProbeTT+0x1c8>
   16bad:	cmp    BYTE PTR [rdx+0x2],0x1
   16bb1:	movzx  esi,WORD PTR [rdx+0x4]
   16bb5:	sbb    r9d,0xffffffff
   16bb9:	cmp    r9d,eax
   16bbc:	jg     16c50 <ProbeTT+0x1b0>
   16bc2:	mov    eax,DWORD PTR [rdx+0x10]
   16bc5:	mov    DWORD PTR [rdi],eax
   16bc7:	cmp    eax,0xf404c
   16bcc:	jle    16c8d <ProbeTT+0x1ed>
   16bd2:	sub    eax,DWORD PTR [rip+0x280b88]        # 297760 <ply>
   16bd8:	mov    DWORD PTR [rdi],eax
   16bda:	mov    DWORD PTR [r11],esi
   16bdd:	movsx  eax,BYTE PTR [rdx+0x2]
   16be1:	mov    DWORD PTR [rcx],eax
   16be3:	movsx  r12d,BYTE PTR [rdx+0x3]
   16be8:	jmp    16b63 <ProbeTT+0xc3>
   16bed:	nop    DWORD PTR [rax]
   16bf0:	mov    DWORD PTR [r11],esi
   16bf3:	movsx  eax,BYTE PTR [rax+0x2]
   16bf7:	xor    r12d,r12d
   16bfa:	mov    DWORD PTR [rcx],eax
   16bfc:	mov    eax,r12d
   16bff:	pop    r12
   16c01:	ret    
   16c02:	nop    WORD PTR [rax+rax*1+0x0]
   16c08:	lea    r10d,[r9-0x3]
   16c0c:	cmp    r10d,edx
   16c0f:	jg     16b27 <ProbeTT+0x87>
   16c15:	cmp    DWORD PTR [rax+0x10],esi
   16c18:	jge    16b27 <ProbeTT+0x87>
   16c1e:	mov    DWORD PTR [r8],0x0
   16c25:	movsx  edx,BYTE PTR [rax]
   16c28:	jmp    16b27 <ProbeTT+0x87>
   16c2d:	nop    DWORD PTR [rax]
   16c30:	cmp    edx,0xfff0bfb4
   16c36:	jge    16b55 <ProbeTT+0xb5>
   16c3c:	add    edx,DWORD PTR [rip+0x280b1e]        # 297760 <ply>
   16c42:	mov    DWORD PTR [rdi],edx
   16c44:	jmp    16b55 <ProbeTT+0xb5>
   16c49:	nop    DWORD PTR [rax+0x0]
   16c50:	mov    DWORD PTR [r11],esi
   16c53:	movsx  eax,BYTE PTR [rdx+0x2]
   16c57:	xor    r12d,r12d
   16c5a:	mov    DWORD PTR [rcx],eax
   16c5c:	jmp    16b63 <ProbeTT+0xc3>
   16c61:	nop    DWORD PTR [rax+0x0]
   16c68:	lea    r10d,[r9-0x3]
   16c6c:	cmp    r10d,eax
   16c6f:	jg     16bad <ProbeTT+0x10d>
   16c75:	cmp    DWORD PTR [rdx+0x10],esi
   16c78:	jge    16bad <ProbeTT+0x10d>
   16c7e:	mov    DWORD PTR [r8],0x0
   16c85:	movsx  eax,BYTE PTR [rdx]
   16c88:	jmp    16bad <ProbeTT+0x10d>
   16c8d:	cmp    eax,0xfff0bfb4
   16c92:	jge    16bda <ProbeTT+0x13a>
   16c98:	add    eax,DWORD PTR [rip+0x280ac2]        # 297760 <ply>
   16c9e:	mov    DWORD PTR [rdi],eax
   16ca0:	jmp    16bda <ProbeTT+0x13a>
   16ca5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000016cb0 <QProbeTT>:
   16cb0:	endbr64 
   16cb4:	mov    ecx,DWORD PTR [rip+0x280aca]        # 297784 <hash>
   16cba:	xor    edx,edx
   16cbc:	add    DWORD PTR [rip+0x280abd],0x1        # 297780 <TTProbes>
   16cc3:	mov    eax,ecx
   16cc5:	div    DWORD PTR [rip+0x508a1]        # 6756c <TTSize>
   16ccb:	mov    eax,0x4
   16cd0:	shl    rdx,0x4
   16cd4:	add    rdx,QWORD PTR [rip+0x280ac5]        # 2977a0 <QS_TTable>
   16cdb:	cmp    ecx,DWORD PTR [rdx+0x4]
   16cde:	jne    16d10 <QProbeTT+0x60>
   16ce0:	mov    ecx,DWORD PTR [rip+0xe4c2]        # 251a8 <hold_hash>
   16ce6:	cmp    DWORD PTR [rdx+0x8],ecx
   16ce9:	jne    16d10 <QProbeTT+0x60>
   16ceb:	mov    ecx,DWORD PTR [rip+0x26682f]        # 27d520 <white_to_move>
   16cf1:	test   ecx,ecx
   16cf3:	sete   cl
   16cf6:	cmp    BYTE PTR [rdx],cl
   16cf8:	jne    16d10 <QProbeTT+0x60>
   16cfa:	mov    eax,DWORD PTR [rdx+0xc]
   16cfd:	add    DWORD PTR [rip+0x280a90],0x1        # 297794 <TTHits>
   16d04:	mov    DWORD PTR [rdi],eax
   16d06:	movzx  eax,WORD PTR [rdx+0x2]
   16d0a:	mov    DWORD PTR [rsi],eax
   16d0c:	movsx  eax,BYTE PTR [rdx+0x1]
   16d10:	ret    
   16d11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   16d1c:	nop    DWORD PTR [rax+0x0]

0000000000016d20 <alloc_hash>:
   16d20:	endbr64 
   16d24:	push   rbp
   16d25:	push   rbx
   16d26:	sub    rsp,0x8
   16d2a:	movsxd rax,DWORD PTR [rip+0x5083b]        # 6756c <TTSize>
   16d31:	lea    rdi,[rax+rax*4]
   16d35:	shl    rdi,0x2
   16d39:	call   13f0 <malloc@plt>
   16d3e:	mov    QWORD PTR [rip+0x280a53],rax        # 297798 <AS_TTable>
   16d45:	mov    rbx,rax
   16d48:	movsxd rax,DWORD PTR [rip+0x5081d]        # 6756c <TTSize>
   16d4f:	lea    rdi,[rax+rax*4]
   16d53:	shl    rdi,0x2
   16d57:	call   13f0 <malloc@plt>
   16d5c:	movsxd rdi,DWORD PTR [rip+0x50809]        # 6756c <TTSize>
   16d63:	mov    rbp,rax
   16d66:	mov    QWORD PTR [rip+0x280a1b],rax        # 297788 <DP_TTable>
   16d6d:	shl    rdi,0x4
   16d71:	call   13f0 <malloc@plt>
   16d76:	test   rbp,rbp
   16d79:	sete   cl
   16d7c:	test   rbx,rbx
   16d7f:	mov    QWORD PTR [rip+0x280a1a],rax        # 2977a0 <QS_TTable>
   16d86:	sete   dl
   16d89:	or     cl,dl
   16d8b:	jne    16d99 <alloc_hash+0x79>
   16d8d:	test   rax,rax
   16d90:	je     16d99 <alloc_hash+0x79>
   16d92:	add    rsp,0x8
   16d96:	pop    rbx
   16d97:	pop    rbp
   16d98:	ret    
   16d99:	lea    rdi,[rip+0x8b28]        # 1f8c8 <scentral+0xae8>
   16da0:	call   12d0 <puts@plt>
   16da5:	mov    edi,0x1
   16daa:	call   1440 <exit@plt>
   16daf:	nop

0000000000016db0 <free_hash>:
   16db0:	endbr64 
   16db4:	sub    rsp,0x8
   16db8:	mov    rdi,QWORD PTR [rip+0x2809d9]        # 297798 <AS_TTable>
   16dbf:	call   1290 <free@plt>
   16dc4:	mov    rdi,QWORD PTR [rip+0x2809bd]        # 297788 <DP_TTable>
   16dcb:	call   1290 <free@plt>
   16dd0:	mov    rdi,QWORD PTR [rip+0x2809c9]        # 2977a0 <QS_TTable>
   16dd7:	add    rsp,0x8
   16ddb:	jmp    1290 <free@plt>

0000000000016de0 <allocate_time>:
   16de0:	endbr64 
   16de4:	mov    edx,DWORD PTR [rip+0x26673e]        # 27d528 <moves_to_tc>
   16dea:	mov    eax,DWORD PTR [rip+0x2671e8]        # 27dfd8 <min_per_game>
   16df0:	mov    edi,DWORD PTR [rip+0x2649ca]        # 27b7c0 <Variant>
   16df6:	test   edx,edx
   16df8:	jne    16f10 <allocate_time+0x130>
   16dfe:	mov    esi,DWORD PTR [rip+0x28096c]        # 297770 <time_left>
   16e04:	pxor   xmm1,xmm1
   16e08:	mov    ecx,DWORD PTR [rip+0x280966]        # 297774 <inc>
   16e0e:	cvtsi2sd xmm1,esi
   16e12:	cmp    eax,0x5
   16e15:	jg     16e27 <allocate_time+0x47>
   16e17:	movsd  xmm3,QWORD PTR [rip+0x94a9]        # 202c8 <scentral+0x14e8>
   16e1f:	test   ecx,ecx
   16e21:	je     16fc8 <allocate_time+0x1e8>
   16e27:	imul   edx,DWORD PTR [rip+0x5286e],0x64        # 6969c <sec_per_game>
   16e2e:	pxor   xmm0,xmm0
   16e32:	movsd  xmm3,QWORD PTR [rip+0x948e]        # 202c8 <scentral+0x14e8>
   16e3a:	imul   eax,eax,0x1770
   16e40:	add    eax,edx
   16e42:	cvtsi2sd xmm0,eax
   16e46:	mulsd  xmm0,QWORD PTR [rip+0x9472]        # 202c0 <scentral+0x14e0>
   16e4e:	divsd  xmm0,xmm3
   16e52:	comisd xmm0,xmm1
   16e56:	ja     16fc8 <allocate_time+0x1e8>
   16e5c:	movsd  xmm2,QWORD PTR [rip+0x944c]        # 202b0 <scentral+0x14d0>
   16e64:	lea    eax,[rdi-0x3]
   16e67:	cmp    eax,0x1
   16e6a:	jbe    17068 <allocate_time+0x288>
   16e70:	movapd xmm4,xmm1
   16e74:	sub    esi,DWORD PTR [rip+0x267156]        # 27dfd0 <opp_time>
   16e7a:	pxor   xmm0,xmm0
   16e7e:	divsd  xmm4,xmm3
   16e82:	cvtsi2sd xmm0,esi
   16e86:	comisd xmm0,xmm4
   16e8a:	ja     170c0 <allocate_time+0x2e0>
   16e90:	movapd xmm4,xmm1
   16e94:	divsd  xmm4,QWORD PTR [rip+0x9434]        # 202d0 <scentral+0x14f0>
   16e9c:	comisd xmm0,xmm4
   16ea0:	jbe    16eb0 <allocate_time+0xd0>
   16ea2:	mov    eax,DWORD PTR [rip+0x2808d0]        # 297778 <xb_mode>
   16ea8:	test   eax,eax
   16eaa:	je     16eb0 <allocate_time+0xd0>
   16eac:	subsd  xmm2,xmm3
   16eb0:	movapd xmm0,xmm1
   16eb4:	divsd  xmm0,xmm2
   16eb8:	test   ecx,ecx
   16eba:	je     16ef8 <allocate_time+0x118>
   16ebc:	pxor   xmm2,xmm2
   16ec0:	subsd  xmm1,xmm0
   16ec4:	cvtsi2sd xmm2,ecx
   16ec8:	movapd xmm3,xmm1
   16ecc:	subsd  xmm3,xmm2
   16ed0:	comisd xmm3,QWORD PTR [rip+0x9400]        # 202d8 <scentral+0x14f8>
   16ed8:	ja     16ef4 <allocate_time+0x114>
   16eda:	addsd  xmm2,xmm2
   16ede:	divsd  xmm2,QWORD PTR [rip+0x7e1a]        # 1ed00 <rc_index.4552+0x40>
   16ee6:	subsd  xmm1,xmm2
   16eea:	comisd xmm1,QWORD PTR [rip+0x7be6]        # 1ead8 <sbishop+0xcb8>
   16ef2:	jbe    16ef8 <allocate_time+0x118>
   16ef4:	addsd  xmm0,xmm2
   16ef8:	cmp    edi,0x1
   16efb:	je     16f93 <allocate_time+0x1b3>
   16f01:	cvttsd2si eax,xmm0
   16f05:	ret    
   16f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16f10:	pxor   xmm0,xmm0
   16f14:	pxor   xmm1,xmm1
   16f18:	movsd  xmm2,QWORD PTR [rip+0x7bb8]        # 1ead8 <sbishop+0xcb8>
   16f20:	cvtsi2ss xmm0,DWORD PTR [rip+0x52774]        # 6969c <sec_per_game>
   16f28:	cvtsi2ss xmm1,eax
   16f2c:	cvtss2sd xmm0,xmm0
   16f30:	mulsd  xmm0,xmm2
   16f34:	cvtss2sd xmm1,xmm1
   16f38:	mulsd  xmm1,QWORD PTR [rip+0x93a0]        # 202e0 <scentral+0x1500>
   16f40:	addsd  xmm0,xmm1
   16f44:	pxor   xmm1,xmm1
   16f48:	cvtsi2ss xmm1,edx
   16f4c:	mov    edx,DWORD PTR [rip+0x26708e]        # 27dfe0 <time_cushion>
   16f52:	cvtss2sd xmm1,xmm1
   16f56:	divsd  xmm0,xmm1
   16f5a:	subsd  xmm0,xmm2
   16f5e:	test   edx,edx
   16f60:	je     16ef8 <allocate_time+0x118>
   16f62:	pxor   xmm1,xmm1
   16f66:	cvtsi2sd xmm1,edx
   16f6a:	mulsd  xmm1,QWORD PTR [rip+0x7d96]        # 1ed08 <rc_index.4552+0x48>
   16f72:	divsd  xmm1,QWORD PTR [rip+0x7d86]        # 1ed00 <rc_index.4552+0x40>
   16f7a:	cvttsd2si eax,xmm1
   16f7e:	addsd  xmm0,xmm1
   16f82:	sub    edx,eax
   16f84:	mov    DWORD PTR [rip+0x267056],edx        # 27dfe0 <time_cushion>
   16f8a:	cmp    edi,0x1
   16f8d:	jne    16f01 <allocate_time+0x121>
   16f93:	mov    eax,DWORD PTR [rip+0x267037]        # 27dfd0 <opp_time>
   16f99:	cmp    eax,DWORD PTR [rip+0x2807d1]        # 297770 <time_left>
   16f9f:	mulsd  xmm0,QWORD PTR [rip+0x9341]        # 202e8 <scentral+0x1508>
   16fa7:	jg     16fb4 <allocate_time+0x1d4>
   16fa9:	cmp    eax,0x5db
   16fae:	jg     16f01 <allocate_time+0x121>
   16fb4:	mulsd  xmm0,QWORD PTR [rip+0x9334]        # 202f0 <scentral+0x1510>
   16fbc:	cvttsd2si eax,xmm0
   16fc0:	ret    
   16fc1:	nop    DWORD PTR [rax+0x0]
   16fc8:	mov    eax,DWORD PTR [rip+0x267002]        # 27dfd0 <opp_time>
   16fce:	pxor   xmm0,xmm0
   16fd2:	pxor   xmm4,xmm4
   16fd6:	cvtsi2sd xmm0,eax
   16fda:	mov    edx,eax
   16fdc:	sub    edx,esi
   16fde:	cvtsi2sd xmm4,edx
   16fe2:	movapd xmm2,xmm0
   16fe6:	divsd  xmm2,xmm3
   16fea:	comisd xmm4,xmm2
   16fee:	jbe    17090 <allocate_time+0x2b0>
   16ff4:	mov    r10d,DWORD PTR [rip+0x28077d]        # 297778 <xb_mode>
   16ffb:	movsd  xmm2,QWORD PTR [rip+0x929d]        # 202a0 <scentral+0x14c0>
   17003:	test   r10d,r10d
   17006:	jne    16e64 <allocate_time+0x84>
   1700c:	movapd xmm5,xmm0
   17010:	divsd  xmm5,QWORD PTR [rip+0x92b8]        # 202d0 <scentral+0x14f0>
   17018:	comisd xmm4,xmm5
   1701c:	movsd  xmm2,QWORD PTR [rip+0x928c]        # 202b0 <scentral+0x14d0>
   17024:	ja     16e64 <allocate_time+0x84>
   1702a:	divsd  xmm0,QWORD PTR [rip+0x927e]        # 202b0 <scentral+0x14d0>
   17032:	comisd xmm4,xmm0
   17036:	mov    rax,QWORD PTR [rip+0x9273]        # 202b0 <scentral+0x14d0>
   1703d:	movq   xmm2,rax
   17042:	jbe    16e64 <allocate_time+0x84>
   17048:	mov    r8d,DWORD PTR [rip+0x280729]        # 297778 <xb_mode>
   1704f:	test   r8d,r8d
   17052:	je     16e64 <allocate_time+0x84>
   17058:	movsd  xmm2,QWORD PTR [rip+0x9258]        # 202b8 <scentral+0x14d8>
   17060:	jmp    16e64 <allocate_time+0x84>
   17065:	nop    DWORD PTR [rax]
   17068:	cmp    edi,0x3
   1706b:	je     170e0 <allocate_time+0x300>
   1706d:	subsd  xmm2,xmm3
   17071:	movapd xmm0,xmm1
   17075:	divsd  xmm0,xmm2
   17079:	test   ecx,ecx
   1707b:	jne    16ebc <allocate_time+0xdc>
   17081:	cvttsd2si eax,xmm0
   17085:	ret    
   17086:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17090:	movapd xmm2,xmm0
   17094:	divsd  xmm2,QWORD PTR [rip+0x9234]        # 202d0 <scentral+0x14f0>
   1709c:	comisd xmm4,xmm2
   170a0:	jbe    1702a <allocate_time+0x24a>
   170a2:	mov    r9d,DWORD PTR [rip+0x2806cf]        # 297778 <xb_mode>
   170a9:	movsd  xmm2,QWORD PTR [rip+0x91f7]        # 202a8 <scentral+0x14c8>
   170b1:	test   r9d,r9d
   170b4:	jne    16e64 <allocate_time+0x84>
   170ba:	jmp    16e5c <allocate_time+0x7c>
   170bf:	nop
   170c0:	mov    edx,DWORD PTR [rip+0x2806b2]        # 297778 <xb_mode>
   170c6:	test   edx,edx
   170c8:	je     16eb0 <allocate_time+0xd0>
   170ce:	subsd  xmm2,QWORD PTR [rip+0x91fa]        # 202d0 <scentral+0x14f0>
   170d6:	jmp    16eb0 <allocate_time+0xd0>
   170db:	nop    DWORD PTR [rax+rax*1+0x0]
   170e0:	subsd  xmm2,QWORD PTR [rip+0x91e8]        # 202d0 <scentral+0x14f0>
   170e8:	jmp    17071 <allocate_time+0x291>
   170ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000000170f0 <comp_to_san>:
   170f0:	endbr64 
   170f4:	push   r15
   170f6:	push   r14
   170f8:	push   r13
   170fa:	push   r12
   170fc:	push   rbp
   170fd:	push   rbx
   170fe:	lea    r11,[rsp-0x6000]
   17106:	sub    rsp,0x1000
   1710d:	or     QWORD PTR [rsp],0x0
   17112:	cmp    rsp,r11
   17115:	jne    17106 <comp_to_san+0x16>
   17117:	sub    rsp,0x78
   1711b:	lea    r14,[rip+0x575e]        # 1c880 <Xfile>
   17122:	movsxd rdx,DWORD PTR [rsp+0x60b4]
   1712a:	movzx  ecx,BYTE PTR [r14+rdx*4]
   1712f:	mov    rax,QWORD PTR fs:0x28
   17138:	mov    QWORD PTR [rsp+0x6068],rax
   17140:	xor    eax,eax
   17142:	mov    r12,rdi
   17145:	lea    rdi,[rip+0x54f4]        # 1c640 <Xrank>
   1714c:	lea    r13d,[rcx+0x60]
   17150:	movabs rax,0x5000000046
   1715a:	mov    r9d,DWORD PTR [rdi+rdx*4]
   1715e:	mov    QWORD PTR [rsp+0x20],rax
   17163:	movabs rax,0x4e00000050
   1716d:	mov    QWORD PTR [rsp+0x28],rax
   17172:	movabs rax,0x4b0000004e
   1717c:	mov    QWORD PTR [rsp+0x30],rax
   17181:	movabs rax,0x520000004b
   1718b:	mov    QWORD PTR [rsp+0x38],rax
   17190:	movabs rax,0x5100000052
   1719a:	mov    QWORD PTR [rsp+0x40],rax
   1719f:	movabs rax,0x4200000051
   171a9:	mov    QWORD PTR [rsp+0x48],rax
   171ae:	movabs rax,0x4500000042
   171b8:	mov    QWORD PTR [rsp+0x50],rax
   171bd:	movsxd rax,DWORD PTR [rsp+0x60b0]
   171c5:	test   eax,eax
   171c7:	je     17260 <comp_to_san+0x170>
   171cd:	lea    r15,[rip+0x2666ec]        # 27d8c0 <board>
   171d4:	movzx  ecx,BYTE PTR [r14+rax*4]
   171d9:	mov    ebx,DWORD PTR [r15+rax*4]
   171dd:	add    ecx,0x60
   171e0:	lea    esi,[rbx-0x1]
   171e3:	cmp    esi,0x1
   171e6:	jbe    17210 <comp_to_san+0x120>
   171e8:	mov    ebx,DWORD PTR [rsp+0x60c0]
   171ef:	test   ebx,ebx
   171f1:	je     17420 <comp_to_san+0x330>
   171f7:	and    ebx,0xfffffffd
   171fa:	cmp    ebx,0x1
   171fd:	jne    173a0 <comp_to_san+0x2b0>
   17203:	mov    DWORD PTR [r12],0x4f2d4f
   1720b:	jmp    17296 <comp_to_san+0x1a6>
   17210:	cmp    DWORD PTR [r15+rdx*4],0xd
   17215:	movsxd rax,DWORD PTR [rsp+0x60bc]
   1721d:	movsx  r13d,r13b
   17221:	je     173e0 <comp_to_san+0x2f0>
   17227:	movsx  r8d,cl
   1722b:	test   eax,eax
   1722d:	jne    173c0 <comp_to_san+0x2d0>
   17233:	sub    rsp,0x8
   17237:	lea    rcx,[rip+0x86d6]        # 1f914 <scentral+0xb34>
   1723e:	mov    esi,0x1
   17243:	mov    rdi,r12
   17246:	push   r9
   17248:	mov    rdx,0xffffffffffffffff
   1724f:	mov    r9d,r13d
   17252:	call   14b0 <__sprintf_chk@plt>
   17257:	pop    r9
   17259:	pop    r10
   1725b:	jmp    17296 <comp_to_san+0x1a6>
   1725d:	nop    DWORD PTR [rax]
   17260:	movsxd rax,DWORD PTR [rsp+0x60bc]
   17268:	sub    rsp,0x8
   1726c:	lea    rcx,[rip+0x867a]        # 1f8ed <scentral+0xb0d>
   17273:	push   r9
   17275:	movsx  r9d,r13b
   17279:	mov    r8d,DWORD PTR [rsp+rax*4+0x30]
   1727e:	mov    esi,0x1
   17283:	mov    rdi,r12
   17286:	mov    rdx,0xffffffffffffffff
   1728d:	xor    eax,eax
   1728f:	call   14b0 <__sprintf_chk@plt>
   17294:	pop    rsi
   17295:	pop    rdi
   17296:	xor    esi,esi
   17298:	lea    rdi,[rsp+0x60b0]
   172a0:	call   8e00 <make>
   172a5:	xor    esi,esi
   172a7:	mov    edx,0x1
   172ac:	lea    rdi,[rsp+0x60b0]
   172b4:	call   6f70 <check_legal>
   172b9:	test   eax,eax
   172bb:	je     17300 <comp_to_san+0x210>
   172bd:	call   7ca0 <in_check>
   172c2:	test   eax,eax
   172c4:	jne    17320 <comp_to_san+0x230>
   172c6:	xor    esi,esi
   172c8:	lea    rdi,[rsp+0x60b0]
   172d0:	call   ae30 <unmake>
   172d5:	mov    rax,QWORD PTR [rsp+0x6068]
   172dd:	xor    rax,QWORD PTR fs:0x28
   172e6:	jne    1768b <comp_to_san+0x59b>
   172ec:	add    rsp,0x6078
   172f3:	pop    rbx
   172f4:	pop    rbp
   172f5:	pop    r12
   172f7:	pop    r13
   172f9:	pop    r14
   172fb:	pop    r15
   172fd:	ret    
   172fe:	xchg   ax,ax
   17300:	mov    BYTE PTR [r12+0x4],0x0
   17306:	xor    esi,esi
   17308:	lea    rdi,[rsp+0x60b0]
   17310:	mov    DWORD PTR [r12],0x676c6c69
   17318:	call   ae30 <unmake>
   1731d:	jmp    172d5 <comp_to_san+0x1e5>
   1731f:	nop
   17320:	lea    r13,[rsp+0x3060]
   17328:	xor    ebp,ebp
   1732a:	mov    rdi,r13
   1732d:	call   9b80 <gen>
   17332:	mov    ebx,DWORD PTR [rip+0x273d0]        # 3e708 <numb_moves>
   17338:	test   ebx,ebx
   1733a:	jg     17358 <comp_to_san+0x268>
   1733c:	jmp    17550 <comp_to_san+0x460>
   17341:	nop    DWORD PTR [rax+0x0]
   17348:	call   ae30 <unmake>
   1734d:	add    ebp,0x1
   17350:	cmp    ebx,ebp
   17352:	je     17550 <comp_to_san+0x460>
   17358:	mov    esi,ebp
   1735a:	mov    rdi,r13
   1735d:	call   8e00 <make>
   17362:	mov    esi,ebp
   17364:	mov    rdi,r13
   17367:	mov    edx,0x1
   1736c:	call   6f70 <check_legal>
   17371:	mov    esi,ebp
   17373:	mov    rdi,r13
   17376:	test   eax,eax
   17378:	je     17348 <comp_to_san+0x258>
   1737a:	call   ae30 <unmake>
   1737f:	mov    rdi,r12
   17382:	call   1300 <strlen@plt>
   17387:	mov    edx,0x2b
   1738c:	mov    WORD PTR [r12+rax*1],dx
   17391:	jmp    172c6 <comp_to_san+0x1d6>
   17396:	nop    WORD PTR cs:[rax+rax*1+0x0]
   173a0:	mov    r8d,0x4f
   173a6:	mov    DWORD PTR [r12],0x2d4f2d4f
   173ae:	mov    WORD PTR [r12+0x4],r8w
   173b4:	jmp    17296 <comp_to_san+0x1a6>
   173b9:	nop    DWORD PTR [rax+0x0]
   173c0:	mov    eax,DWORD PTR [rsp+rax*4+0x20]
   173c4:	lea    rcx,[rip+0x852a]        # 1f8f5 <scentral+0xb15>
   173cb:	push   rax
   173cc:	push   r9
   173ce:	mov    r9d,r13d
   173d1:	jmp    1727e <comp_to_san+0x18e>
   173d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   173e0:	mov    r11d,DWORD PTR [rsp+0x60c4]
   173e8:	test   r11d,r11d
   173eb:	jne    17227 <comp_to_san+0x137>
   173f1:	test   eax,eax
   173f3:	jne    17650 <comp_to_san+0x560>
   173f9:	mov    r8d,r13d
   173fc:	lea    rcx,[rip+0x84ed]        # 1f8f0 <scentral+0xb10>
   17403:	mov    esi,0x1
   17408:	mov    rdi,r12
   1740b:	mov    rdx,0xffffffffffffffff
   17412:	call   14b0 <__sprintf_chk@plt>
   17417:	jmp    17296 <comp_to_san+0x1a6>
   1741c:	nop    DWORD PTR [rax+0x0]
   17420:	mov    eax,DWORD PTR [rdi+rax*4]
   17423:	lea    rdi,[rsp+0x60]
   17428:	mov    DWORD PTR [rsp+0x10],r9d
   1742d:	mov    BYTE PTR [rsp+0x17],cl
   17431:	mov    DWORD PTR [rsp+0x1c],eax
   17435:	mov    QWORD PTR [rsp+0x8],rdi
   1743a:	call   9b80 <gen>
   1743f:	mov    r8d,DWORD PTR [rip+0x272c2]        # 3e708 <numb_moves>
   17446:	mov    DWORD PTR [rsp+0x4],r8d
   1744b:	call   7ca0 <in_check>
   17450:	mov    r8d,DWORD PTR [rsp+0x4]
   17455:	mov    r9d,DWORD PTR [rsp+0x10]
   1745a:	mov    DWORD PTR [rsp+0x18],eax
   1745e:	movsxd rdx,DWORD PTR [rsp+0x60b0]
   17466:	test   r8d,r8d
   17469:	movsxd rax,DWORD PTR [rsp+0x60b4]
   17471:	jle    17682 <comp_to_san+0x592>
   17477:	mov    rdi,QWORD PTR [rsp+0x8]
   1747c:	mov    BYTE PTR [rsp+0x10],r13b
   17481:	mov    ebp,ebx
   17483:	mov    r11,rdx
   17486:	mov    QWORD PTR [rsp+0x8],r12
   1748b:	movsxd r10,DWORD PTR [r15+rdx*4]
   1748f:	mov    ebx,r8d
   17492:	mov    DWORD PTR [rsp+0x4],r9d
   17497:	mov    r12,rdi
   1749a:	mov    r13,rdi
   1749d:	jmp    174ab <comp_to_san+0x3bb>
   1749f:	nop
   174a0:	add    ebp,0x1
   174a3:	add    r12,0x18
   174a7:	cmp    ebx,ebp
   174a9:	je     17510 <comp_to_san+0x420>
   174ab:	cmp    DWORD PTR [r12+0x4],eax
   174b0:	jne    174a0 <comp_to_san+0x3b0>
   174b2:	movsxd r9,DWORD PTR [r12]
   174b6:	cmp    DWORD PTR [r15+r9*4],r10d
   174ba:	jne    174a0 <comp_to_san+0x3b0>
   174bc:	cmp    r9d,r11d
   174bf:	je     174a0 <comp_to_san+0x3b0>
   174c1:	mov    esi,ebp
   174c3:	mov    rdi,r13
   174c6:	call   8e00 <make>
   174cb:	mov    edx,DWORD PTR [rsp+0x18]
   174cf:	mov    esi,ebp
   174d1:	mov    rdi,r13
   174d4:	call   6f70 <check_legal>
   174d9:	test   eax,eax
   174db:	jne    17567 <comp_to_san+0x477>
   174e1:	mov    esi,ebp
   174e3:	mov    rdi,r13
   174e6:	add    ebp,0x1
   174e9:	add    r12,0x18
   174ed:	call   ae30 <unmake>
   174f2:	movsxd rdx,DWORD PTR [rsp+0x60b0]
   174fa:	movsxd rax,DWORD PTR [rsp+0x60b4]
   17502:	movsxd r10,DWORD PTR [r15+rdx*4]
   17506:	mov    r11,rdx
   17509:	cmp    ebx,ebp
   1750b:	jne    174ab <comp_to_san+0x3bb>
   1750d:	nop    DWORD PTR [rax]
   17510:	mov    r9d,DWORD PTR [rsp+0x4]
   17515:	movzx  r13d,BYTE PTR [rsp+0x10]
   1751b:	mov    r12,QWORD PTR [rsp+0x8]
   17520:	cmp    DWORD PTR [r15+rax*4],0xd
   17525:	mov    r8d,DWORD PTR [rsp+r10*4+0x20]
   1752a:	movsx  r13d,r13b
   1752e:	je     175fd <comp_to_san+0x50d>
   17534:	sub    rsp,0x8
   17538:	lea    rcx,[rip+0x83d5]        # 1f914 <scentral+0xb34>
   1753f:	push   r9
   17541:	mov    r9d,r13d
   17544:	jmp    1727e <comp_to_san+0x18e>
   17549:	nop    DWORD PTR [rax+0x0]
   17550:	mov    rdi,r12
   17553:	call   1300 <strlen@plt>
   17558:	mov    ecx,0x23
   1755d:	mov    WORD PTR [r12+rax*1],cx
   17562:	jmp    172c6 <comp_to_san+0x1d6>
   17567:	mov    r9d,DWORD PTR [rsp+0x4]
   1756c:	movzx  ecx,BYTE PTR [rsp+0x17]
   17571:	movsxd rbx,ebp
   17574:	mov    rdi,r13
   17577:	mov    esi,ebx
   17579:	mov    r12,QWORD PTR [rsp+0x8]
   1757e:	movsx  r13d,BYTE PTR [rsp+0x10]
   17584:	mov    DWORD PTR [rsp+0x18],r9d
   17589:	mov    BYTE PTR [rsp+0x4],cl
   1758d:	call   ae30 <unmake>
   17592:	movzx  ecx,BYTE PTR [rsp+0x4]
   17597:	mov    r9d,DWORD PTR [rsp+0x18]
   1759c:	movsxd rax,DWORD PTR [rsp+0x60b4]
   175a4:	cmp    DWORD PTR [r15+rax*4],0xd
   175a9:	je     17618 <comp_to_san+0x528>
   175ab:	lea    rax,[rbx+rbx*2]
   175af:	movsxd rdx,DWORD PTR [rsp+rax*8+0x60]
   175b4:	movsxd rax,DWORD PTR [rsp+0x60b0]
   175bc:	mov    ebx,DWORD PTR [r14+rax*4]
   175c0:	cmp    DWORD PTR [r14+rdx*4],ebx
   175c4:	movsxd rax,DWORD PTR [r15+rax*4]
   175c8:	je     175e3 <comp_to_san+0x4f3>
   175ca:	push   r9
   175cc:	movsx  r9d,cl
   175d0:	lea    rcx,[rip+0x833b]        # 1f912 <scentral+0xb32>
   175d7:	push   r13
   175d9:	mov    r8d,DWORD PTR [rsp+rax*4+0x30]
   175de:	jmp    1727e <comp_to_san+0x18e>
   175e3:	push   r9
   175e5:	lea    rcx,[rip+0x8330]        # 1f91c <scentral+0xb3c>
   175ec:	push   r13
   175ee:	mov    r9d,DWORD PTR [rsp+0x2c]
   175f3:	mov    r8d,DWORD PTR [rsp+rax*4+0x30]
   175f8:	jmp    1727e <comp_to_san+0x18e>
   175fd:	sub    rsp,0x8
   17601:	lea    rcx,[rip+0x82fa]        # 1f902 <scentral+0xb22>
   17608:	push   r9
   1760a:	mov    r9d,r13d
   1760d:	jmp    1727e <comp_to_san+0x18e>
   17612:	nop    WORD PTR [rax+rax*1+0x0]
   17618:	lea    rax,[rbx+rbx*2]
   1761c:	movsxd rdx,DWORD PTR [rsp+rax*8+0x60]
   17621:	movsxd rax,DWORD PTR [rsp+0x60b0]
   17629:	mov    ebx,DWORD PTR [r14+rax*4]
   1762d:	cmp    DWORD PTR [r14+rdx*4],ebx
   17631:	movsxd rax,DWORD PTR [r15+rax*4]
   17635:	je     17668 <comp_to_san+0x578>
   17637:	push   r9
   17639:	movsx  r9d,cl
   1763d:	lea    rcx,[rip+0x82bc]        # 1f900 <scentral+0xb20>
   17644:	push   r13
   17646:	mov    r8d,DWORD PTR [rsp+rax*4+0x30]
   1764b:	jmp    1727e <comp_to_san+0x18e>
   17650:	sub    rsp,0x8
   17654:	mov    r8d,r13d
   17657:	lea    rcx,[rip+0x829a]        # 1f8f8 <scentral+0xb18>
   1765e:	mov    eax,DWORD PTR [rsp+rax*4+0x28]
   17662:	push   rax
   17663:	jmp    1727e <comp_to_san+0x18e>
   17668:	push   r9
   1766a:	lea    rcx,[rip+0x8298]        # 1f909 <scentral+0xb29>
   17671:	push   r13
   17673:	mov    r9d,DWORD PTR [rsp+0x2c]
   17678:	mov    r8d,DWORD PTR [rsp+rax*4+0x30]
   1767d:	jmp    1727e <comp_to_san+0x18e>
   17682:	movsxd r10,DWORD PTR [r15+rdx*4]
   17686:	jmp    17520 <comp_to_san+0x430>
   1768b:	call   1310 <__stack_chk_fail@plt>

0000000000017690 <comp_to_coord>:
   17690:	endbr64 
   17694:	sub    rsp,0x48
   17698:	lea    rsi,[rip+0x51e1]        # 1c880 <Xfile>
   1769f:	lea    r8,[rip+0x4f9a]        # 1c640 <Xrank>
   176a6:	mov    rax,QWORD PTR fs:0x28
   176af:	mov    QWORD PTR [rsp+0x38],rax
   176b4:	xor    eax,eax
   176b6:	movsxd rdx,DWORD PTR [rsp+0x54]
   176bb:	movsxd rcx,DWORD PTR [rsp+0x5c]
   176c0:	movabs rax,0x5000000046
   176ca:	mov    QWORD PTR [rsp],rax
   176ce:	movabs rax,0x4e00000070
   176d8:	mov    r9d,DWORD PTR [rsi+rdx*4]
   176dc:	mov    r10d,DWORD PTR [r8+rdx*4]
   176e0:	mov    QWORD PTR [rsp+0x8],rax
   176e5:	movabs rax,0x4b0000006e
   176ef:	mov    QWORD PTR [rsp+0x10],rax
   176f4:	movabs rax,0x520000006b
   176fe:	mov    QWORD PTR [rsp+0x18],rax
   17703:	add    r9d,0x60
   17707:	movabs rax,0x5100000072
   17711:	mov    QWORD PTR [rsp+0x20],rax
   17716:	movsx  edx,r9b
   1771a:	movabs rax,0x4200000071
   17724:	mov    QWORD PTR [rsp+0x28],rax
   17729:	movabs rax,0x4500000062
   17733:	mov    QWORD PTR [rsp+0x30],rax
   17738:	movsxd rax,DWORD PTR [rsp+0x50]
   1773d:	test   eax,eax
   1773f:	je     177f0 <comp_to_coord+0x160>
   17745:	mov    r9d,DWORD PTR [r8+rax*4]
   17749:	mov    r8d,DWORD PTR [rsi+rax*4]
   1774d:	add    r8d,0x60
   17751:	movsx  r8d,r8b
   17755:	test   ecx,ecx
   17757:	je     177b0 <comp_to_coord+0x120>
   17759:	lea    eax,[rcx-0x3]
   1775c:	cmp    eax,0x1
   1775f:	jbe    17860 <comp_to_coord+0x1d0>
   17765:	lea    eax,[rcx-0x7]
   17768:	cmp    eax,0x1
   1776b:	jbe    17888 <comp_to_coord+0x1f8>
   17771:	lea    eax,[rcx-0xb]
   17774:	cmp    eax,0x1
   17777:	jbe    17830 <comp_to_coord+0x1a0>
   1777d:	sub    ecx,0x5
   17780:	cmp    ecx,0x1
   17783:	jbe    178b0 <comp_to_coord+0x220>
   17789:	mov    rax,QWORD PTR [rsp+0x38]
   1778e:	xor    rax,QWORD PTR fs:0x28
   17797:	jne    178d5 <comp_to_coord+0x245>
   1779d:	mov    DWORD PTR [rsp+0x58],r10d
   177a2:	lea    rcx,[rip+0x81a5]        # 1f94e <scentral+0xb6e>
   177a9:	mov    DWORD PTR [rsp+0x50],edx
   177ad:	jmp    177d4 <comp_to_coord+0x144>
   177af:	nop
   177b0:	mov    rax,QWORD PTR [rsp+0x38]
   177b5:	xor    rax,QWORD PTR fs:0x28
   177be:	jne    178d5 <comp_to_coord+0x245>
   177c4:	mov    DWORD PTR [rsp+0x58],r10d
   177c9:	lea    rcx,[rip+0x8139]        # 1f909 <scentral+0xb29>
   177d0:	mov    DWORD PTR [rsp+0x50],edx
   177d4:	mov    rdx,0xffffffffffffffff
   177db:	mov    esi,0x1
   177e0:	xor    eax,eax
   177e2:	add    rsp,0x48
   177e6:	jmp    14b0 <__sprintf_chk@plt>
   177eb:	nop    DWORD PTR [rax+rax*1+0x0]
   177f0:	mov    rax,QWORD PTR [rsp+0x38]
   177f5:	xor    rax,QWORD PTR fs:0x28
   177fe:	jne    178d5 <comp_to_coord+0x245>
   17804:	mov    DWORD PTR [rsp+0x50],r10d
   17809:	mov    r8d,DWORD PTR [rsp+rcx*4]
   1780d:	mov    r9d,edx
   17810:	xor    eax,eax
   17812:	lea    rcx,[rip+0x80d4]        # 1f8ed <scentral+0xb0d>
   17819:	mov    rdx,0xffffffffffffffff
   17820:	mov    esi,0x1
   17825:	add    rsp,0x48
   17829:	jmp    14b0 <__sprintf_chk@plt>
   1782e:	xchg   ax,ax
   17830:	mov    rax,QWORD PTR [rsp+0x38]
   17835:	xor    rax,QWORD PTR fs:0x28
   1783e:	jne    178d5 <comp_to_coord+0x245>
   17844:	mov    DWORD PTR [rsp+0x58],r10d
   17849:	lea    rcx,[rip+0x80ea]        # 1f93a <scentral+0xb5a>
   17850:	mov    DWORD PTR [rsp+0x50],edx
   17854:	jmp    177d4 <comp_to_coord+0x144>
   17859:	nop    DWORD PTR [rax+0x0]
   17860:	mov    rax,QWORD PTR [rsp+0x38]
   17865:	xor    rax,QWORD PTR fs:0x28
   1786e:	jne    178d5 <comp_to_coord+0x245>
   17870:	mov    DWORD PTR [rsp+0x58],r10d
   17875:	lea    rcx,[rip+0x80aa]        # 1f926 <scentral+0xb46>
   1787c:	mov    DWORD PTR [rsp+0x50],edx
   17880:	jmp    177d4 <comp_to_coord+0x144>
   17885:	nop    DWORD PTR [rax]
   17888:	mov    rax,QWORD PTR [rsp+0x38]
   1788d:	xor    rax,QWORD PTR fs:0x28
   17896:	jne    178d5 <comp_to_coord+0x245>
   17898:	mov    DWORD PTR [rsp+0x58],r10d
   1789d:	lea    rcx,[rip+0x808c]        # 1f930 <scentral+0xb50>
   178a4:	mov    DWORD PTR [rsp+0x50],edx
   178a8:	jmp    177d4 <comp_to_coord+0x144>
   178ad:	nop    DWORD PTR [rax]
   178b0:	mov    rax,QWORD PTR [rsp+0x38]
   178b5:	xor    rax,QWORD PTR fs:0x28
   178be:	jne    178d5 <comp_to_coord+0x245>
   178c0:	mov    DWORD PTR [rsp+0x58],r10d
   178c5:	lea    rcx,[rip+0x8078]        # 1f944 <scentral+0xb64>
   178cc:	mov    DWORD PTR [rsp+0x50],edx
   178d0:	jmp    177d4 <comp_to_coord+0x144>
   178d5:	call   1310 <__stack_chk_fail@plt>
   178da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000178e0 <display_board>:
   178e0:	endbr64 
   178e4:	push   r15
   178e6:	lea    rcx,[rip+0x8163]        # 1fa50 <scentral+0xc70>
   178ed:	lea    rdx,[rip+0x8094]        # 1f988 <scentral+0xba8>
   178f4:	push   r14
   178f6:	mov    r14,rdi
   178f9:	push   r13
   178fb:	push   r12
   178fd:	push   rbp
   178fe:	push   rbx
   178ff:	sub    rsp,0x88
   17906:	mov    rax,QWORD PTR fs:0x28
   1790f:	mov    QWORD PTR [rsp+0x78],rax
   17914:	xor    eax,eax
   17916:	lea    rax,[rip+0x809f]        # 1f9bc <scentral+0xbdc>
   1791d:	and    esi,0x1
   17920:	mov    esi,0x1
   17925:	mov    QWORD PTR [rsp],rax
   17929:	lea    rax,[rip+0x8028]        # 1f958 <scentral+0xb78>
   17930:	mov    QWORD PTR [rsp+0x8],rax
   17935:	lea    rax,[rip+0x801f]        # 1f95b <scentral+0xb7b>
   1793c:	mov    QWORD PTR [rsp+0x10],rax
   17941:	lea    rax,[rip+0x8016]        # 1f95e <scentral+0xb7e>
   17948:	mov    QWORD PTR [rsp+0x18],rax
   1794d:	lea    rax,[rip+0x800d]        # 1f961 <scentral+0xb81>
   17954:	mov    QWORD PTR [rsp+0x20],rax
   17959:	lea    rax,[rip+0x8004]        # 1f964 <scentral+0xb84>
   17960:	mov    QWORD PTR [rsp+0x28],rax
   17965:	lea    rax,[rip+0x7ffb]        # 1f967 <scentral+0xb87>
   1796c:	mov    QWORD PTR [rsp+0x30],rax
   17971:	lea    rax,[rip+0x7ff2]        # 1f96a <scentral+0xb8a>
   17978:	mov    QWORD PTR [rsp+0x38],rax
   1797d:	lea    rax,[rip+0x7fe9]        # 1f96d <scentral+0xb8d>
   17984:	mov    QWORD PTR [rsp+0x40],rax
   17989:	lea    rax,[rip+0x7fe0]        # 1f970 <scentral+0xb90>
   17990:	mov    QWORD PTR [rsp+0x48],rax
   17995:	lea    rax,[rip+0x7fd7]        # 1f973 <scentral+0xb93>
   1799c:	mov    QWORD PTR [rsp+0x50],rax
   179a1:	lea    rax,[rip+0x7fce]        # 1f976 <scentral+0xb96>
   179a8:	mov    QWORD PTR [rsp+0x58],rax
   179ad:	lea    rax,[rip+0x7fc5]        # 1f979 <scentral+0xb99>
   179b4:	mov    QWORD PTR [rsp+0x60],rax
   179b9:	lea    rax,[rip+0x7fdd]        # 1f99d <scentral+0xbbd>
   179c0:	mov    QWORD PTR [rsp+0x68],rax
   179c5:	mov    eax,0x0
   179ca:	je     17a9b <display_board+0x1bb>
   179d0:	call   1460 <__fprintf_chk@plt>
   179d5:	lea    r13,[rip+0x265ee4]        # 27d8c0 <board>
   179dc:	mov    r12d,0x8
   179e2:	lea    rbp,[rip+0x7f98]        # 1f981 <scentral+0xba1>
   179e9:	nop    DWORD PTR [rax+0x0]
   179f0:	mov    ecx,r12d
   179f3:	lea    rdx,[rip+0x7f82]        # 1f97c <scentral+0xb9c>
   179fa:	mov    rdi,r14
   179fd:	xor    eax,eax
   179ff:	mov    esi,0x1
   17a04:	lea    rbx,[r13-0x30]
   17a08:	call   1460 <__fprintf_chk@plt>
   17a0d:	jmp    17a19 <display_board+0x139>
   17a0f:	nop
   17a10:	add    rbx,0x4
   17a14:	cmp    rbx,r13
   17a17:	je     17a43 <display_board+0x163>
   17a19:	movsxd rax,DWORD PTR [rbx+0x1e0]
   17a20:	test   eax,eax
   17a22:	je     17a10 <display_board+0x130>
   17a24:	mov    rcx,QWORD PTR [rsp+rax*8]
   17a28:	mov    rdx,rbp
   17a2b:	mov    esi,0x1
   17a30:	mov    rdi,r14
   17a33:	xor    eax,eax
   17a35:	add    rbx,0x4
   17a39:	call   1460 <__fprintf_chk@plt>
   17a3e:	cmp    rbx,r13
   17a41:	jne    17a19 <display_board+0x139>
   17a43:	lea    rcx,[rip+0x8006]        # 1fa50 <scentral+0xc70>
   17a4a:	mov    rdi,r14
   17a4d:	lea    r13,[rbx-0x30]
   17a51:	xor    eax,eax
   17a53:	lea    rdx,[rip+0x7f2d]        # 1f987 <scentral+0xba7>
   17a5a:	mov    esi,0x1
   17a5f:	call   1460 <__fprintf_chk@plt>
   17a64:	sub    r12d,0x1
   17a68:	jne    179f0 <display_board+0x110>
   17a6e:	mov    rax,QWORD PTR [rsp+0x78]
   17a73:	xor    rax,QWORD PTR fs:0x28
   17a7c:	jne    17b71 <display_board+0x291>
   17a82:	mov    rcx,r14
   17a85:	mov    edx,0x2c
   17a8a:	mov    esi,0x1
   17a8f:	lea    rdi,[rip+0x7fea]        # 1fa80 <scentral+0xca0>
   17a96:	jmp    17b5b <display_board+0x27b>
   17a9b:	call   1460 <__fprintf_chk@plt>
   17aa0:	lea    r13,[rip+0x265e19]        # 27d8c0 <board>
   17aa7:	mov    r12d,0x1
   17aad:	lea    rbp,[rip+0x7ecd]        # 1f981 <scentral+0xba1>
   17ab4:	nop    DWORD PTR [rax+0x0]
   17ab8:	mov    ecx,r12d
   17abb:	lea    rdx,[rip+0x7eba]        # 1f97c <scentral+0xb9c>
   17ac2:	mov    rdi,r14
   17ac5:	xor    eax,eax
   17ac7:	mov    esi,0x1
   17acc:	mov    r15,r13
   17acf:	add    r13,0x30
   17ad3:	call   1460 <__fprintf_chk@plt>
   17ad8:	mov    rbx,r13
   17adb:	jmp    17ae9 <display_board+0x209>
   17add:	nop    DWORD PTR [rax]
   17ae0:	sub    rbx,0x4
   17ae4:	cmp    rbx,r15
   17ae7:	je     17b10 <display_board+0x230>
   17ae9:	movsxd rax,DWORD PTR [rbx+0x60]
   17aed:	test   eax,eax
   17aef:	je     17ae0 <display_board+0x200>
   17af1:	mov    rcx,QWORD PTR [rsp+rax*8]
   17af5:	mov    rdx,rbp
   17af8:	mov    esi,0x1
   17afd:	mov    rdi,r14
   17b00:	xor    eax,eax
   17b02:	sub    rbx,0x4
   17b06:	call   1460 <__fprintf_chk@plt>
   17b0b:	cmp    rbx,r15
   17b0e:	jne    17ae9 <display_board+0x209>
   17b10:	lea    rcx,[rip+0x7f39]        # 1fa50 <scentral+0xc70>
   17b17:	mov    rdi,r14
   17b1a:	xor    eax,eax
   17b1c:	add    r12d,0x1
   17b20:	lea    rdx,[rip+0x7e60]        # 1f987 <scentral+0xba7>
   17b27:	mov    esi,0x1
   17b2c:	call   1460 <__fprintf_chk@plt>
   17b31:	cmp    r12d,0x9
   17b35:	jne    17ab8 <display_board+0x1d8>
   17b37:	mov    rax,QWORD PTR [rsp+0x78]
   17b3c:	xor    rax,QWORD PTR fs:0x28
   17b45:	jne    17b71 <display_board+0x291>
   17b47:	mov    rcx,r14
   17b4a:	mov    edx,0x2c
   17b4f:	mov    esi,0x1
   17b54:	lea    rdi,[rip+0x7f55]        # 1fab0 <scentral+0xcd0>
   17b5b:	add    rsp,0x88
   17b62:	pop    rbx
   17b63:	pop    rbp
   17b64:	pop    r12
   17b66:	pop    r13
   17b68:	pop    r14
   17b6a:	pop    r15
   17b6c:	jmp    1450 <fwrite@plt>
   17b71:	call   1310 <__stack_chk_fail@plt>
   17b76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017b80 <is_move>:
   17b80:	endbr64 
   17b84:	push   rbx
   17b85:	mov    rbx,rdi
   17b88:	call   14a0 <__ctype_b_loc@plt>
   17b8d:	movsx  rcx,BYTE PTR [rbx]
   17b91:	mov    rdx,QWORD PTR [rax]
   17b94:	xor    eax,eax
   17b96:	test   BYTE PTR [rdx+rcx*2+0x1],0x4
   17b9b:	je     17bc5 <is_move+0x45>
   17b9d:	movsx  rsi,BYTE PTR [rbx+0x1]
   17ba2:	test   BYTE PTR [rdx+rsi*2+0x1],0x8
   17ba7:	je     17bd0 <is_move+0x50>
   17ba9:	movsx  rcx,BYTE PTR [rbx+0x2]
   17bae:	test   BYTE PTR [rdx+rcx*2+0x1],0x4
   17bb3:	je     17bc5 <is_move+0x45>
   17bb5:	movsx  rax,BYTE PTR [rbx+0x3]
   17bba:	movzx  eax,WORD PTR [rdx+rax*2]
   17bbe:	shr    ax,0xb
   17bc2:	and    eax,0x1
   17bc5:	pop    rbx
   17bc6:	ret    
   17bc7:	nop    WORD PTR [rax+rax*1+0x0]
   17bd0:	cmp    sil,0x40
   17bd4:	je     17ba9 <is_move+0x29>
   17bd6:	pop    rbx
   17bd7:	ret    
   17bd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017be0 <hash_extract_pv>:
   17be0:	endbr64 
   17be4:	push   r14
   17be6:	push   r13
   17be8:	push   r12
   17bea:	push   rbp
   17beb:	sub    rsp,0x1000
   17bf2:	or     QWORD PTR [rsp],0x0
   17bf7:	sub    rsp,0x1000
   17bfe:	or     QWORD PTR [rsp],0x0
   17c03:	sub    rsp,0x1000
   17c0a:	or     QWORD PTR [rsp],0x0
   17c0f:	sub    rsp,0x128
   17c16:	mov    rax,QWORD PTR fs:0x28
   17c1f:	mov    QWORD PTR [rsp+0x3118],rax
   17c27:	xor    eax,eax
   17c29:	sub    edi,0x1
   17c2c:	jne    17c58 <hash_extract_pv+0x78>
   17c2e:	mov    rax,QWORD PTR [rsp+0x3118]
   17c36:	xor    rax,QWORD PTR fs:0x28
   17c3f:	jne    17d32 <hash_extract_pv+0x152>
   17c45:	add    rsp,0x3128
   17c4c:	pop    rbp
   17c4d:	pop    r12
   17c4f:	pop    r13
   17c51:	pop    r14
   17c53:	ret    
   17c54:	nop    DWORD PTR [rax+0x0]
   17c58:	mov    ebp,edi
   17c5a:	lea    rdi,[rsp+0x8]
   17c5f:	mov    r12,rsi
   17c62:	xor    r9d,r9d
   17c65:	xor    esi,esi
   17c67:	lea    rdx,[rsp+0xc]
   17c6c:	mov    r8,rdi
   17c6f:	mov    rcx,rdi
   17c72:	call   16aa0 <ProbeTT>
   17c77:	cmp    eax,0x4
   17c7a:	je     17c2e <hash_extract_pv+0x4e>
   17c7c:	lea    r13,[rsp+0x10]
   17c81:	mov    rdi,r13
   17c84:	call   9b80 <gen>
   17c89:	movsxd rax,DWORD PTR [rsp+0xc]
   17c8e:	cmp    eax,DWORD PTR [rip+0x26a74]        # 3e708 <numb_moves>
   17c94:	jge    17c2e <hash_extract_pv+0x4e>
   17c96:	test   eax,eax
   17c98:	js     17c2e <hash_extract_pv+0x4e>
   17c9a:	lea    rax,[rax+rax*2]
   17c9e:	lea    r14,[rsp+0x3010]
   17ca6:	sub    rsp,0x8
   17caa:	shl    rax,0x3
   17cae:	mov    rdi,r14
   17cb1:	push   QWORD PTR [rsp+rax*1+0x28]
   17cb5:	push   QWORD PTR [rsp+rax*1+0x28]
   17cb9:	push   QWORD PTR [rsp+rax*1+0x28]
   17cbd:	call   170f0 <comp_to_san>
   17cc2:	mov    esi,DWORD PTR [rsp+0x2c]
   17cc6:	add    rsp,0x20
   17cca:	mov    rdi,r13
   17ccd:	call   8e00 <make>
   17cd2:	mov    esi,DWORD PTR [rsp+0xc]
   17cd6:	mov    edx,0x1
   17cdb:	mov    rdi,r13
   17cde:	call   6f70 <check_legal>
   17ce3:	test   eax,eax
   17ce5:	jne    17d00 <hash_extract_pv+0x120>
   17ce7:	mov    esi,DWORD PTR [rsp+0xc]
   17ceb:	mov    rdi,r13
   17cee:	call   ae30 <unmake>
   17cf3:	jmp    17c2e <hash_extract_pv+0x4e>
   17cf8:	nop    DWORD PTR [rax+rax*1+0x0]
   17d00:	mov    rdi,r12
   17d03:	call   1300 <strlen@plt>
   17d08:	mov    rsi,r14
   17d0b:	mov    BYTE PTR [r12+rax*1],0x3c
   17d10:	lea    rdi,[r12+rax*1+0x1]
   17d15:	call   12f0 <stpcpy@plt>
   17d1a:	mov    edx,0x203e
   17d1f:	mov    rsi,r12
   17d22:	mov    edi,ebp
   17d24:	mov    WORD PTR [rax],dx
   17d27:	mov    BYTE PTR [rax+0x2],0x0
   17d2b:	call   17be0 <hash_extract_pv>
   17d30:	jmp    17ce7 <hash_extract_pv+0x107>
   17d32:	call   1310 <__stack_chk_fail@plt>
   17d37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017d40 <stringize_pv>:
   17d40:	endbr64 
   17d44:	push   r14
   17d46:	push   r13
   17d48:	push   r12
   17d4a:	mov    r12,rdi
   17d4d:	add    rdi,0x8
   17d51:	push   rbp
   17d52:	mov    rcx,r12
   17d55:	push   rbx
   17d56:	sub    rsp,0x110
   17d5d:	mov    rax,QWORD PTR fs:0x28
   17d66:	mov    QWORD PTR [rsp+0x108],rax
   17d6e:	xor    eax,eax
   17d70:	mov    QWORD PTR [rdi-0x8],0x0
   17d78:	mov    QWORD PTR [rdi+0xf0],0x0
   17d83:	and    rdi,0xfffffffffffffff8
   17d87:	sub    rcx,rdi
   17d8a:	add    ecx,0x100
   17d90:	shr    ecx,0x3
   17d93:	rep stos QWORD PTR es:[rdi],rax
   17d96:	cmp    DWORD PTR [rip+0x265d87],0x1        # 27db24 <pv_length+0x4>
   17d9d:	jle    17e19 <stringize_pv+0xd9>
   17d9f:	lea    rbp,[rip+0x55752]        # 6d4f8 <pv+0x1c38>
   17da6:	mov    ebx,0x1
   17dab:	mov    r13,rsp
   17dae:	lea    r14,[rbp-0x18]
   17db2:	nop    WORD PTR [rax+rax*1+0x0]
   17db8:	movsxd rax,ebx
   17dbb:	sub    rsp,0x20
   17dbf:	mov    rdi,r13
   17dc2:	add    ebx,0x1
   17dc5:	lea    rax,[rax+rax*2]
   17dc9:	lea    rax,[r14+rax*8]
   17dcd:	movdqu xmm0,XMMWORD PTR [rax]
   17dd1:	movups XMMWORD PTR [rsp],xmm0
   17dd5:	mov    rax,QWORD PTR [rax+0x10]
   17dd9:	mov    QWORD PTR [rsp+0x10],rax
   17dde:	call   170f0 <comp_to_san>
   17de3:	add    rsp,0x20
   17de7:	xor    esi,esi
   17de9:	mov    rdi,rbp
   17dec:	call   8e00 <make>
   17df1:	mov    rdi,r12
   17df4:	add    rbp,0x18
   17df8:	call   1300 <strlen@plt>
   17dfd:	mov    rsi,r13
   17e00:	lea    rdi,[r12+rax*1]
   17e04:	call   12f0 <stpcpy@plt>
   17e09:	mov    edx,0x20
   17e0e:	mov    WORD PTR [rax],dx
   17e11:	cmp    DWORD PTR [rip+0x265d0d],ebx        # 27db24 <pv_length+0x4>
   17e17:	jg     17db8 <stringize_pv+0x78>
   17e19:	mov    rsi,r12
   17e1c:	mov    edi,0x7
   17e21:	call   17be0 <hash_extract_pv>
   17e26:	mov    edx,DWORD PTR [rip+0x265cf8]        # 27db24 <pv_length+0x4>
   17e2c:	lea    eax,[rdx-0x1]
   17e2f:	test   eax,eax
   17e31:	jle    17e73 <stringize_pv+0x133>
   17e33:	cdqe   
   17e35:	lea    rcx,[rax+rax*2]
   17e39:	lea    rax,[rip+0x53a80]        # 6b8c0 <pv>
   17e40:	lea    rbx,[rax+rcx*8+0x1c20]
   17e48:	movsxd rax,edx
   17e4b:	sub    edx,0x2
   17e4e:	sub    rax,rdx
   17e51:	lea    rdx,[rax+rax*2]
   17e55:	lea    rax,[rip+0x55654]        # 6d4b0 <pv+0x1bf0>
   17e5c:	lea    rbp,[rax+rdx*8]
   17e60:	mov    rdi,rbx
   17e63:	xor    esi,esi
   17e65:	sub    rbx,0x18
   17e69:	call   ae30 <unmake>
   17e6e:	cmp    rbx,rbp
   17e71:	jne    17e60 <stringize_pv+0x120>
   17e73:	mov    rax,QWORD PTR [rsp+0x108]
   17e7b:	xor    rax,QWORD PTR fs:0x28
   17e84:	jne    17e96 <stringize_pv+0x156>
   17e86:	add    rsp,0x110
   17e8d:	pop    rbx
   17e8e:	pop    rbp
   17e8f:	pop    r12
   17e91:	pop    r13
   17e93:	pop    r14
   17e95:	ret    
   17e96:	call   1310 <__stack_chk_fail@plt>
   17e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017ea0 <post_thinking>:
   17ea0:	endbr64 
   17ea4:	push   r15
   17ea6:	push   r14
   17ea8:	push   r13
   17eaa:	push   r12
   17eac:	mov    r12d,edi
   17eaf:	push   rbp
   17eb0:	push   rbx
   17eb1:	sub    rsp,0x218
   17eb8:	mov    ecx,DWORD PTR [rip+0x27f8ba]        # 297778 <xb_mode>
   17ebe:	mov    ebx,DWORD PTR [rip+0x263a18]        # 27b8dc <nodes>
   17ec4:	mov    rax,QWORD PTR fs:0x28
   17ecd:	mov    QWORD PTR [rsp+0x208],rax
   17ed5:	xor    eax,eax
   17ed7:	mov    r13d,DWORD PTR [rip+0x517ce]        # 696ac <i_depth>
   17ede:	test   ecx,ecx
   17ee0:	jne    180e0 <post_thinking+0x240>
   17ee6:	movsxd r8,edi
   17ee9:	mov    ecx,edi
   17eeb:	sub    rsp,0x8
   17eef:	mov    edi,0x1
   17ef4:	imul   r8,r8,0x51eb851f
   17efb:	sar    ecx,0x1f
   17efe:	push   rbx
   17eff:	lea    rsi,[rip+0x7a9a]        # 1f9a0 <scentral+0xbc0>
   17f06:	sar    r8,0x25
   17f0a:	sub    r8d,ecx
   17f0d:	and    ecx,0xd
   17f10:	imul   eax,r8d,0x64
   17f14:	add    ecx,0x20
   17f17:	sub    r12d,eax
   17f1a:	mov    eax,r8d
   17f1d:	mov    edx,r12d
   17f20:	sar    eax,0x1f
   17f23:	sar    edx,0x1f
   17f26:	xor    r8d,eax
   17f29:	xor    r12d,edx
   17f2c:	sub    r8d,eax
   17f2f:	xor    eax,eax
   17f31:	mov    r9d,r12d
   17f34:	sub    r9d,edx
   17f37:	mov    edx,r13d
   17f3a:	call   1420 <__printf_chk@plt>
   17f3f:	pop    rax
   17f40:	pop    rdx
   17f41:	movsxd r14,DWORD PTR [rip+0x555b0]        # 6d4f8 <pv+0x1c38>
   17f48:	test   r14d,r14d
   17f4b:	jne    180c0 <post_thinking+0x220>
   17f51:	movsxd rdx,DWORD PTR [rip+0x555a4]        # 6d4fc <pv+0x1c3c>
   17f58:	lea    rax,[rip+0x265961]        # 27d8c0 <board>
   17f5f:	cmp    DWORD PTR [rax+rdx*4],0xd
   17f63:	je     17f79 <post_thinking+0xd9>
   17f65:	xor    esi,esi
   17f67:	lea    rdi,[rip+0x5558a]        # 6d4f8 <pv+0x1c38>
   17f6e:	mov    r14d,0x1
   17f74:	call   ae30 <unmake>
   17f79:	lea    rbp,[rip+0x55578]        # 6d4f8 <pv+0x1c38>
   17f80:	cmp    DWORD PTR [rip+0x265b9d],0x1        # 27db24 <pv_length+0x4>
   17f87:	mov    ebx,0x1
   17f8c:	mov    r12,rsp
   17f8f:	lea    r15,[rbp-0x18]
   17f93:	lea    r13,[rip+0x694c]        # 1e8e6 <sbishop+0xac6>
   17f9a:	jle    17ff7 <post_thinking+0x157>
   17f9c:	nop    DWORD PTR [rax+0x0]
   17fa0:	movsxd rax,ebx
   17fa3:	sub    rsp,0x20
   17fa7:	mov    rdi,r12
   17faa:	add    ebx,0x1
   17fad:	lea    rax,[rax+rax*2]
   17fb1:	lea    rax,[r15+rax*8]
   17fb5:	movdqu xmm1,XMMWORD PTR [rax]
   17fb9:	movups XMMWORD PTR [rsp],xmm1
   17fbd:	mov    rax,QWORD PTR [rax+0x10]
   17fc1:	mov    QWORD PTR [rsp+0x10],rax
   17fc6:	call   170f0 <comp_to_san>
   17fcb:	add    rsp,0x20
   17fcf:	xor    esi,esi
   17fd1:	mov    rdi,rbp
   17fd4:	call   8e00 <make>
   17fd9:	xor    eax,eax
   17fdb:	mov    rdx,r12
   17fde:	mov    rsi,r13
   17fe1:	mov    edi,0x1
   17fe6:	add    rbp,0x18
   17fea:	call   1420 <__printf_chk@plt>
   17fef:	cmp    DWORD PTR [rip+0x265b2f],ebx        # 27db24 <pv_length+0x4>
   17ff5:	jg     17fa0 <post_thinking+0x100>
   17ff7:	lea    r12,[rsp+0x100]
   17fff:	xor    eax,eax
   18001:	mov    ecx,0x20
   18006:	mov    rdi,r12
   18009:	mov    rsi,r12
   1800c:	rep stos QWORD PTR es:[rdi],rax
   1800f:	mov    edi,0x7
   18014:	call   17be0 <hash_extract_pv>
   18019:	mov    rdx,r12
   1801c:	mov    edi,0x1
   18021:	xor    eax,eax
   18023:	lea    rsi,[rip+0x6566]        # 1e590 <sbishop+0x770>
   1802a:	call   1420 <__printf_chk@plt>
   1802f:	mov    edx,DWORD PTR [rip+0x265aef]        # 27db24 <pv_length+0x4>
   18035:	lea    eax,[rdx-0x1]
   18038:	test   eax,eax
   1803a:	jle    18083 <post_thinking+0x1e3>
   1803c:	cdqe   
   1803e:	lea    rcx,[rax+rax*2]
   18042:	lea    rax,[rip+0x53877]        # 6b8c0 <pv>
   18049:	lea    rbx,[rax+rcx*8+0x1c20]
   18051:	movsxd rax,edx
   18054:	sub    edx,0x2
   18057:	sub    rax,rdx
   1805a:	lea    rdx,[rax+rax*2]
   1805e:	lea    rax,[rip+0x5544b]        # 6d4b0 <pv+0x1bf0>
   18065:	lea    rbp,[rax+rdx*8]
   18069:	nop    DWORD PTR [rax+0x0]
   18070:	mov    rdi,rbx
   18073:	xor    esi,esi
   18075:	sub    rbx,0x18
   18079:	call   ae30 <unmake>
   1807e:	cmp    rbp,rbx
   18081:	jne    18070 <post_thinking+0x1d0>
   18083:	test   r14d,r14d
   18086:	jne    18120 <post_thinking+0x280>
   1808c:	mov    edi,0xa
   18091:	call   12a0 <putchar@plt>
   18096:	mov    rax,QWORD PTR [rsp+0x208]
   1809e:	xor    rax,QWORD PTR fs:0x28
   180a7:	jne    18133 <post_thinking+0x293>
   180ad:	add    rsp,0x218
   180b4:	pop    rbx
   180b5:	pop    rbp
   180b6:	pop    r12
   180b8:	pop    r13
   180ba:	pop    r14
   180bc:	pop    r15
   180be:	ret    
   180bf:	nop
   180c0:	lea    rax,[rip+0x2657f9]        # 27d8c0 <board>
   180c7:	cmp    DWORD PTR [rax+r14*4],0xd
   180cc:	je     17f65 <post_thinking+0xc5>
   180d2:	xor    r14d,r14d
   180d5:	jmp    17f79 <post_thinking+0xd9>
   180da:	nop    WORD PTR [rax+rax*1+0x0]
   180e0:	mov    rsi,QWORD PTR [rip+0x265559]        # 27d640 <start_time>
   180e7:	xor    edi,edi
   180e9:	call   1340 <difftime@plt>
   180ee:	mov    r9d,ebx
   180f1:	mov    ecx,r12d
   180f4:	mov    edx,r13d
   180f7:	cvttsd2si r8d,xmm0
   180fc:	lea    rsi,[rip+0x788b]        # 1f98e <scentral+0xbae>
   18103:	mov    edi,0x1
   18108:	xor    eax,eax
   1810a:	imul   r8d,r8d,0x64
   1810e:	call   1420 <__printf_chk@plt>
   18113:	jmp    17f41 <post_thinking+0xa1>
   18118:	nop    DWORD PTR [rax+rax*1+0x0]
   18120:	xor    esi,esi
   18122:	lea    rdi,[rip+0x553cf]        # 6d4f8 <pv+0x1c38>
   18129:	call   8e00 <make>
   1812e:	jmp    1808c <post_thinking+0x1ec>
   18133:	call   1310 <__stack_chk_fail@plt>
   18138:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000018140 <post_fail_thinking>:
   18140:	endbr64 
   18144:	push   r13
   18146:	push   r12
   18148:	mov    r12d,edi
   1814b:	push   rbp
   1814c:	mov    rbp,rsi
   1814f:	push   rbx
   18150:	sub    rsp,0x118
   18157:	mov    ecx,DWORD PTR [rip+0x27f61b]        # 297778 <xb_mode>
   1815d:	mov    ebx,DWORD PTR [rip+0x263779]        # 27b8dc <nodes>
   18163:	mov    rax,QWORD PTR fs:0x28
   1816c:	mov    QWORD PTR [rsp+0x108],rax
   18174:	xor    eax,eax
   18176:	mov    r13d,DWORD PTR [rip+0x5152f]        # 696ac <i_depth>
   1817d:	test   ecx,ecx
   1817f:	jne    18260 <post_fail_thinking+0x120>
   18185:	movsxd r8,edi
   18188:	mov    ecx,edi
   1818a:	sub    rsp,0x8
   1818e:	mov    edi,0x1
   18193:	imul   r8,r8,0x51eb851f
   1819a:	sar    ecx,0x1f
   1819d:	push   rbx
   1819e:	lea    rsi,[rip+0x77fb]        # 1f9a0 <scentral+0xbc0>
   181a5:	sar    r8,0x25
   181a9:	sub    r8d,ecx
   181ac:	and    ecx,0xd
   181af:	imul   eax,r8d,0x64
   181b3:	add    ecx,0x20
   181b6:	sub    r12d,eax
   181b9:	mov    eax,r8d
   181bc:	mov    edx,r12d
   181bf:	sar    eax,0x1f
   181c2:	sar    edx,0x1f
   181c5:	xor    r8d,eax
   181c8:	xor    r12d,edx
   181cb:	sub    r8d,eax
   181ce:	xor    eax,eax
   181d0:	mov    r9d,r12d
   181d3:	sub    r9d,edx
   181d6:	mov    edx,r13d
   181d9:	call   1420 <__printf_chk@plt>
   181de:	pop    rax
   181df:	pop    rdx
   181e0:	xor    esi,esi
   181e2:	mov    rdi,rbp
   181e5:	mov    r12,rsp
   181e8:	call   ae30 <unmake>
   181ed:	mov    rax,QWORD PTR [rbp+0x10]
   181f1:	sub    rsp,0x20
   181f5:	mov    rdi,r12
   181f8:	movdqu xmm1,XMMWORD PTR [rbp+0x0]
   181fd:	mov    QWORD PTR [rsp+0x10],rax
   18202:	movups XMMWORD PTR [rsp],xmm1
   18206:	call   170f0 <comp_to_san>
   1820b:	add    rsp,0x20
   1820f:	xor    esi,esi
   18211:	mov    rdi,rbp
   18214:	call   8e00 <make>
   18219:	mov    rdx,r12
   1821c:	mov    edi,0x1
   18221:	xor    eax,eax
   18223:	lea    rsi,[rip+0x778a]        # 1f9b4 <scentral+0xbd4>
   1822a:	call   1420 <__printf_chk@plt>
   1822f:	mov    edi,0xa
   18234:	call   12a0 <putchar@plt>
   18239:	mov    rax,QWORD PTR [rsp+0x108]
   18241:	xor    rax,QWORD PTR fs:0x28
   1824a:	jne    18298 <post_fail_thinking+0x158>
   1824c:	add    rsp,0x118
   18253:	pop    rbx
   18254:	pop    rbp
   18255:	pop    r12
   18257:	pop    r13
   18259:	ret    
   1825a:	nop    WORD PTR [rax+rax*1+0x0]
   18260:	mov    rsi,QWORD PTR [rip+0x2653d9]        # 27d640 <start_time>
   18267:	xor    edi,edi
   18269:	call   1340 <difftime@plt>
   1826e:	mov    r9d,ebx
   18271:	mov    ecx,r12d
   18274:	mov    edx,r13d
   18277:	cvttsd2si r8d,xmm0
   1827c:	lea    rsi,[rip+0x770b]        # 1f98e <scentral+0xbae>
   18283:	mov    edi,0x1
   18288:	xor    eax,eax
   1828a:	imul   r8d,r8d,0x64
   1828e:	call   1420 <__printf_chk@plt>
   18293:	jmp    181e0 <post_fail_thinking+0xa0>
   18298:	call   1310 <__stack_chk_fail@plt>
   1829d:	nop    DWORD PTR [rax]

00000000000182a0 <post_fh_thinking>:
   182a0:	endbr64 
   182a4:	push   r13
   182a6:	push   r12
   182a8:	mov    r12d,edi
   182ab:	push   rbp
   182ac:	mov    rbp,rsi
   182af:	push   rbx
   182b0:	sub    rsp,0x118
   182b7:	mov    ecx,DWORD PTR [rip+0x27f4bb]        # 297778 <xb_mode>
   182bd:	mov    ebx,DWORD PTR [rip+0x263619]        # 27b8dc <nodes>
   182c3:	mov    rax,QWORD PTR fs:0x28
   182cc:	mov    QWORD PTR [rsp+0x108],rax
   182d4:	xor    eax,eax
   182d6:	mov    r13d,DWORD PTR [rip+0x513cf]        # 696ac <i_depth>
   182dd:	test   ecx,ecx
   182df:	jne    183c0 <post_fh_thinking+0x120>
   182e5:	movsxd r8,edi
   182e8:	mov    ecx,edi
   182ea:	sub    rsp,0x8
   182ee:	mov    edi,0x1
   182f3:	imul   r8,r8,0x51eb851f
   182fa:	sar    ecx,0x1f
   182fd:	push   rbx
   182fe:	lea    rsi,[rip+0x769b]        # 1f9a0 <scentral+0xbc0>
   18305:	sar    r8,0x25
   18309:	sub    r8d,ecx
   1830c:	and    ecx,0xd
   1830f:	imul   eax,r8d,0x64
   18313:	add    ecx,0x20
   18316:	sub    r12d,eax
   18319:	mov    eax,r8d
   1831c:	mov    edx,r12d
   1831f:	sar    eax,0x1f
   18322:	sar    edx,0x1f
   18325:	xor    r8d,eax
   18328:	xor    r12d,edx
   1832b:	sub    r8d,eax
   1832e:	xor    eax,eax
   18330:	mov    r9d,r12d
   18333:	sub    r9d,edx
   18336:	mov    edx,r13d
   18339:	call   1420 <__printf_chk@plt>
   1833e:	pop    rax
   1833f:	pop    rdx
   18340:	xor    esi,esi
   18342:	mov    rdi,rbp
   18345:	mov    r12,rsp
   18348:	call   ae30 <unmake>
   1834d:	mov    rax,QWORD PTR [rbp+0x10]
   18351:	sub    rsp,0x20
   18355:	mov    rdi,r12
   18358:	movdqu xmm1,XMMWORD PTR [rbp+0x0]
   1835d:	mov    QWORD PTR [rsp+0x10],rax
   18362:	movups XMMWORD PTR [rsp],xmm1
   18366:	call   170f0 <comp_to_san>
   1836b:	add    rsp,0x20
   1836f:	xor    esi,esi
   18371:	mov    rdi,rbp
   18374:	call   8e00 <make>
   18379:	mov    rdx,r12
   1837c:	mov    edi,0x1
   18381:	xor    eax,eax
   18383:	lea    rsi,[rip+0x762f]        # 1f9b9 <scentral+0xbd9>
   1838a:	call   1420 <__printf_chk@plt>
   1838f:	mov    edi,0xa
   18394:	call   12a0 <putchar@plt>
   18399:	mov    rax,QWORD PTR [rsp+0x108]
   183a1:	xor    rax,QWORD PTR fs:0x28
   183aa:	jne    183f8 <post_fh_thinking+0x158>
   183ac:	add    rsp,0x118
   183b3:	pop    rbx
   183b4:	pop    rbp
   183b5:	pop    r12
   183b7:	pop    r13
   183b9:	ret    
   183ba:	nop    WORD PTR [rax+rax*1+0x0]
   183c0:	mov    rsi,QWORD PTR [rip+0x265279]        # 27d640 <start_time>
   183c7:	xor    edi,edi
   183c9:	call   1340 <difftime@plt>
   183ce:	mov    r9d,ebx
   183d1:	mov    ecx,r12d
   183d4:	mov    edx,r13d
   183d7:	cvttsd2si r8d,xmm0
   183dc:	lea    rsi,[rip+0x75ab]        # 1f98e <scentral+0xbae>
   183e3:	mov    edi,0x1
   183e8:	xor    eax,eax
   183ea:	imul   r8d,r8d,0x64
   183ee:	call   1420 <__printf_chk@plt>
   183f3:	jmp    18340 <post_fh_thinking+0xa0>
   183f8:	call   1310 <__stack_chk_fail@plt>
   183fd:	nop    DWORD PTR [rax]

0000000000018400 <post_fl_thinking>:
   18400:	endbr64 
   18404:	push   r13
   18406:	push   r12
   18408:	mov    r12d,edi
   1840b:	push   rbp
   1840c:	mov    rbp,rsi
   1840f:	push   rbx
   18410:	sub    rsp,0x118
   18417:	mov    ecx,DWORD PTR [rip+0x27f35b]        # 297778 <xb_mode>
   1841d:	mov    ebx,DWORD PTR [rip+0x2634b9]        # 27b8dc <nodes>
   18423:	mov    rax,QWORD PTR fs:0x28
   1842c:	mov    QWORD PTR [rsp+0x108],rax
   18434:	xor    eax,eax
   18436:	mov    r13d,DWORD PTR [rip+0x5126f]        # 696ac <i_depth>
   1843d:	test   ecx,ecx
   1843f:	jne    18520 <post_fl_thinking+0x120>
   18445:	movsxd r8,edi
   18448:	mov    ecx,edi
   1844a:	sub    rsp,0x8
   1844e:	mov    edi,0x1
   18453:	imul   r8,r8,0x51eb851f
   1845a:	sar    ecx,0x1f
   1845d:	push   rbx
   1845e:	lea    rsi,[rip+0x753b]        # 1f9a0 <scentral+0xbc0>
   18465:	sar    r8,0x25
   18469:	sub    r8d,ecx
   1846c:	and    ecx,0xd
   1846f:	imul   eax,r8d,0x64
   18473:	add    ecx,0x20
   18476:	sub    r12d,eax
   18479:	mov    eax,r8d
   1847c:	mov    edx,r12d
   1847f:	sar    eax,0x1f
   18482:	sar    edx,0x1f
   18485:	xor    r8d,eax
   18488:	xor    r12d,edx
   1848b:	sub    r8d,eax
   1848e:	xor    eax,eax
   18490:	mov    r9d,r12d
   18493:	sub    r9d,edx
   18496:	mov    edx,r13d
   18499:	call   1420 <__printf_chk@plt>
   1849e:	pop    rax
   1849f:	pop    rdx
   184a0:	xor    esi,esi
   184a2:	mov    rdi,rbp
   184a5:	mov    r12,rsp
   184a8:	call   ae30 <unmake>
   184ad:	mov    rax,QWORD PTR [rbp+0x10]
   184b1:	sub    rsp,0x20
   184b5:	mov    rdi,r12
   184b8:	movdqu xmm1,XMMWORD PTR [rbp+0x0]
   184bd:	mov    QWORD PTR [rsp+0x10],rax
   184c2:	movups XMMWORD PTR [rsp],xmm1
   184c6:	call   170f0 <comp_to_san>
   184cb:	add    rsp,0x20
   184cf:	xor    esi,esi
   184d1:	mov    rdi,rbp
   184d4:	call   8e00 <make>
   184d9:	mov    rdx,r12
   184dc:	mov    edi,0x1
   184e1:	xor    eax,eax
   184e3:	lea    rsi,[rip+0x74d5]        # 1f9bf <scentral+0xbdf>
   184ea:	call   1420 <__printf_chk@plt>
   184ef:	mov    edi,0xa
   184f4:	call   12a0 <putchar@plt>
   184f9:	mov    rax,QWORD PTR [rsp+0x108]
   18501:	xor    rax,QWORD PTR fs:0x28
   1850a:	jne    18558 <post_fl_thinking+0x158>
   1850c:	add    rsp,0x118
   18513:	pop    rbx
   18514:	pop    rbp
   18515:	pop    r12
   18517:	pop    r13
   18519:	ret    
   1851a:	nop    WORD PTR [rax+rax*1+0x0]
   18520:	mov    rsi,QWORD PTR [rip+0x265119]        # 27d640 <start_time>
   18527:	xor    edi,edi
   18529:	call   1340 <difftime@plt>
   1852e:	mov    r9d,ebx
   18531:	mov    ecx,r12d
   18534:	mov    edx,r13d
   18537:	cvttsd2si r8d,xmm0
   1853c:	lea    rsi,[rip+0x744b]        # 1f98e <scentral+0xbae>
   18543:	mov    edi,0x1
   18548:	xor    eax,eax
   1854a:	imul   r8d,r8d,0x64
   1854e:	call   1420 <__printf_chk@plt>
   18553:	jmp    184a0 <post_fl_thinking+0xa0>
   18558:	call   1310 <__stack_chk_fail@plt>
   1855d:	nop    DWORD PTR [rax]

0000000000018560 <post_stat_thinking>:
   18560:	endbr64 
   18564:	sub    rsp,0x8
   18568:	mov    rsi,QWORD PTR [rip+0x2650d1]        # 27d640 <start_time>
   1856f:	xor    edi,edi
   18571:	call   1340 <difftime@plt>
   18576:	mov    eax,DWORD PTR [rip+0x27f1fc]        # 297778 <xb_mode>
   1857c:	cvttsd2si edx,xmm0
   18580:	imul   edx,edx,0x64
   18583:	cmp    eax,0x1
   18586:	je     18598 <post_stat_thinking+0x38>
   18588:	cmp    eax,0x2
   1858b:	je     185d8 <post_stat_thinking+0x78>
   1858d:	add    rsp,0x8
   18591:	ret    
   18592:	nop    WORD PTR [rax+rax*1+0x0]
   18598:	mov    eax,DWORD PTR [rip+0x4f32e]        # 678cc <movetotal>
   1859e:	sub    rsp,0x8
   185a2:	mov    ecx,DWORD PTR [rip+0x263334]        # 27b8dc <nodes>
   185a8:	lea    rsi,[rip+0x7416]        # 1f9c5 <scentral+0xbe5>
   185af:	mov    r9d,DWORD PTR [rip+0x505ea]        # 68ba0 <moveleft>
   185b6:	mov    r8d,DWORD PTR [rip+0x510ef]        # 696ac <i_depth>
   185bd:	mov    edi,0x1
   185c2:	push   rax
   185c3:	xor    eax,eax
   185c5:	call   1420 <__printf_chk@plt>
   185ca:	pop    rcx
   185cb:	pop    rsi
   185cc:	add    rsp,0x8
   185d0:	ret    
   185d1:	nop    DWORD PTR [rax+0x0]
   185d8:	lea    rax,[rip+0x505d1]        # 68bb0 <searching_move>
   185df:	mov    r9d,DWORD PTR [rip+0x505ba]        # 68ba0 <moveleft>
   185e6:	mov    r8d,DWORD PTR [rip+0x510bf]        # 696ac <i_depth>
   185ed:	lea    rsi,[rip+0x73e9]        # 1f9dd <scentral+0xbfd>
   185f4:	push   rax
   185f5:	mov    eax,DWORD PTR [rip+0x4f2d1]        # 678cc <movetotal>
   185fb:	mov    edi,0x1
   18600:	mov    ecx,DWORD PTR [rip+0x2632d6]        # 27b8dc <nodes>
   18606:	push   rax
   18607:	xor    eax,eax
   18609:	call   1420 <__printf_chk@plt>
   1860e:	pop    rax
   1860f:	pop    rdx
   18610:	add    rsp,0x8
   18614:	ret    
   18615:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000018620 <print_move>:
   18620:	endbr64 
   18624:	push   r12
   18626:	movsxd rsi,esi
   18629:	push   rbp
   1862a:	mov    rbp,rdx
   1862d:	sub    rsp,0x118
   18634:	mov    rax,QWORD PTR fs:0x28
   1863d:	mov    QWORD PTR [rsp+0x108],rax
   18645:	xor    eax,eax
   18647:	lea    rax,[rsi+rsi*2]
   1864b:	mov    r12,rsp
   1864e:	sub    rsp,0x20
   18652:	lea    rax,[rdi+rax*8]
   18656:	mov    rdi,r12
   18659:	movdqu xmm0,XMMWORD PTR [rax]
   1865d:	movups XMMWORD PTR [rsp],xmm0
   18661:	mov    rax,QWORD PTR [rax+0x10]
   18665:	mov    QWORD PTR [rsp+0x10],rax
   1866a:	call   170f0 <comp_to_san>
   1866f:	add    rsp,0x20
   18673:	mov    rsi,rbp
   18676:	mov    rdi,r12
   18679:	call   1350 <fputs@plt>
   1867e:	mov    rax,QWORD PTR [rsp+0x108]
   18686:	xor    rax,QWORD PTR fs:0x28
   1868f:	jne    1869c <print_move+0x7c>
   18691:	add    rsp,0x118
   18698:	pop    rbp
   18699:	pop    r12
   1869b:	ret    
   1869c:	call   1310 <__stack_chk_fail@plt>
   186a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   186ac:	nop    DWORD PTR [rax+0x0]

00000000000186b0 <rdelay>:
   186b0:	endbr64 
   186b4:	test   edi,edi
   186b6:	jle    186e0 <rdelay+0x30>
   186b8:	push   rbx
   186b9:	xor    esi,esi
   186bb:	mov    ebx,edi
   186bd:	xor    edi,edi
   186bf:	call   1340 <difftime@plt>
   186c4:	cvttsd2si eax,xmm0
   186c8:	nop    DWORD PTR [rax+rax*1+0x0]
   186d0:	cmp    ebx,eax
   186d2:	jg     186d0 <rdelay+0x20>
   186d4:	pop    rbx
   186d5:	ret    
   186d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   186e0:	ret    
   186e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   186ec:	nop    DWORD PTR [rax+0x0]

00000000000186f0 <rdifftime>:
   186f0:	endbr64 
   186f4:	sub    rsp,0x8
   186f8:	call   1340 <difftime@plt>
   186fd:	add    rsp,0x8
   18701:	cvttsd2si eax,xmm0
   18705:	imul   eax,eax,0x64
   18708:	ret    
   18709:	nop    DWORD PTR [rax+0x0]

0000000000018710 <check_piece_square>:
   18710:	endbr64 
   18714:	mov    r10d,DWORD PTR [rip+0x53189]        # 6b8a4 <piece_count>
   1871b:	movsxd rdx,DWORD PTR [rip+0x264f3e]        # 27d660 <squares>
   18722:	push   rbx
   18723:	test   r10d,r10d
   18726:	jle    1884e <check_piece_square+0x13e>
   1872c:	mov    eax,0x1
   18731:	lea    rbx,[rip+0x2630a8]        # 27b7e0 <pieces>
   18738:	lea    r11,[rip+0x264f21]        # 27d660 <squares>
   1873f:	lea    r9,[rip+0x26517a]        # 27d8c0 <board>
   18746:	jmp    18770 <check_piece_square+0x60>
   18748:	nop    DWORD PTR [rax+rax*1+0x0]
   18750:	cmp    DWORD PTR [r9+rdi*4],0xd
   18755:	mov    rsi,r9
   18758:	jne    1875f <check_piece_square+0x4f>
   1875a:	test   r8b,r8b
   1875d:	jne    187b9 <check_piece_square+0xa9>
   1875f:	test   ecx,ecx
   18761:	jne    18767 <check_piece_square+0x57>
   18763:	test   edx,edx
   18765:	jne    187b0 <check_piece_square+0xa0>
   18767:	add    rax,0x1
   1876b:	cmp    r10d,eax
   1876e:	jl     187c2 <check_piece_square+0xb2>
   18770:	movsxd rdi,DWORD PTR [rbx+rax*4]
   18774:	test   edi,edi
   18776:	mov    rcx,rdi
   18779:	setne  r8b
   1877d:	cmp    DWORD PTR [r11+rdi*4],eax
   18781:	je     18750 <check_piece_square+0x40>
   18783:	test   r8b,r8b
   18786:	je     18750 <check_piece_square+0x40>
   18788:	lea    rdi,[rip+0x7351]        # 1fae0 <scentral+0xd00>
   1878f:	nop
   18790:	call   12d0 <puts@plt>
   18795:	mov    rdi,QWORD PTR [rip+0xbda4]        # 24540 <stdout@@GLIBC_2.2.5>
   1879c:	xor    esi,esi
   1879e:	call   178e0 <display_board>
   187a3:	mov    DWORD PTR ds:0x0,0x0
   187ae:	ud2    
   187b0:	lea    rdi,[rip+0x7241]        # 1f9f8 <scentral+0xc18>
   187b7:	jmp    18790 <check_piece_square+0x80>
   187b9:	lea    rdi,[rip+0x7348]        # 1fb08 <scentral+0xd28>
   187c0:	jmp    18790 <check_piece_square+0x80>
   187c2:	xor    eax,eax
   187c4:	lea    r9,[rip+0x263015]        # 27b7e0 <pieces>
   187cb:	lea    rdi,[rip+0x264e8e]        # 27d660 <squares>
   187d2:	jmp    187f2 <check_piece_square+0xe2>
   187d4:	nop    DWORD PTR [rax+0x0]
   187d8:	test   edx,edx
   187da:	je     18810 <check_piece_square+0x100>
   187dc:	cmp    DWORD PTR [r9+rdx*4],eax
   187e0:	jne    18830 <check_piece_square+0x120>
   187e2:	add    rax,0x1
   187e6:	cmp    rax,0x90
   187ec:	je     1884c <check_piece_square+0x13c>
   187ee:	movsxd rdx,DWORD PTR [rdi+rax*4]
   187f2:	mov    ecx,DWORD PTR [rsi+rax*4]
   187f5:	mov    r8d,eax
   187f8:	cmp    ecx,0xd
   187fb:	je     18801 <check_piece_square+0xf1>
   187fd:	test   ecx,ecx
   187ff:	jne    187d8 <check_piece_square+0xc8>
   18801:	test   edx,edx
   18803:	jne    18840 <check_piece_square+0x130>
   18805:	cmp    ecx,0xd
   18808:	je     187e2 <check_piece_square+0xd2>
   1880a:	test   ecx,ecx
   1880c:	je     187e2 <check_piece_square+0xd2>
   1880e:	xchg   ax,ax
   18810:	mov    edx,r8d
   18813:	lea    rsi,[rip+0x7336]        # 1fb50 <scentral+0xd70>
   1881a:	mov    edi,0x1
   1881f:	xor    eax,eax
   18821:	call   1420 <__printf_chk@plt>
   18826:	jmp    18795 <check_piece_square+0x85>
   1882b:	nop    DWORD PTR [rax+rax*1+0x0]
   18830:	lea    rdi,[rip+0x7341]        # 1fb78 <scentral+0xd98>
   18837:	jmp    18790 <check_piece_square+0x80>
   1883c:	nop    DWORD PTR [rax+0x0]
   18840:	lea    rdi,[rip+0x72e9]        # 1fb30 <scentral+0xd50>
   18847:	jmp    18790 <check_piece_square+0x80>
   1884c:	pop    rbx
   1884d:	ret    
   1884e:	xor    eax,eax
   18850:	lea    rsi,[rip+0x265069]        # 27d8c0 <board>
   18857:	jmp    187c4 <check_piece_square+0xb4>
   1885c:	nop    DWORD PTR [rax+0x0]

0000000000018860 <reset_piece_square>:
   18860:	endbr64 
   18864:	push   r13
   18866:	mov    ecx,0x48
   1886b:	push   r12
   1886d:	push   rbp
   1886e:	push   rbx
   1886f:	sub    rsp,0x258
   18876:	mov    rax,QWORD PTR fs:0x28
   1887f:	mov    QWORD PTR [rsp+0x248],rax
   18887:	xor    eax,eax
   18889:	mov    r10,rsp
   1888c:	mov    rdi,r10
   1888f:	rep stos QWORD PTR es:[rdi],rax
   18892:	mov    eax,DWORD PTR [rip+0x5300c]        # 6b8a4 <piece_count>
   18898:	test   eax,eax
   1889a:	jle    18a19 <reset_piece_square+0x1b9>
   188a0:	lea    edx,[rax-0x1]
   188a3:	lea    r9,[rip+0x262f36]        # 27b7e0 <pieces>
   188aa:	mov    eax,0x1
   188af:	add    rdx,0x2
   188b3:	lea    r11,[rip+0x512c6]        # 69b80 <is_promoted>
   188ba:	nop    WORD PTR [rax+rax*1+0x0]
   188c0:	mov    ecx,DWORD PTR [r11+rax*4]
   188c4:	test   ecx,ecx
   188c6:	je     188d3 <reset_piece_square+0x73>
   188c8:	movsxd rcx,DWORD PTR [r9+rax*4]
   188cc:	mov    DWORD PTR [rsp+rcx*4],0x1
   188d3:	add    rax,0x1
   188d7:	cmp    rdx,rax
   188da:	jne    188c0 <reset_piece_square+0x60>
   188dc:	lea    rdi,[rip+0x262f05]        # 27b7e8 <pieces+0x8>
   188e3:	mov    rcx,r9
   188e6:	xor    eax,eax
   188e8:	xor    r13d,r13d
   188eb:	and    rdi,0xfffffffffffffff8
   188ef:	xor    r8d,r8d
   188f2:	mov    QWORD PTR [rip+0x262ee3],0x0        # 27b7e0 <pieces>
   188fd:	lea    rbx,[rip+0x264fbc]        # 27d8c0 <board>
   18904:	sub    rcx,rdi
   18907:	mov    DWORD PTR [rip+0x1bbcf],0x0        # 344e0 <Material>
   18911:	lea    rbp,[rip+0x264d48]        # 27d660 <squares>
   18918:	lea    r12,[rip+0xbc61]        # 24580 <material>
   1891f:	mov    DWORD PTR [rip+0x52f7b],0x0        # 6b8a4 <piece_count>
   18929:	add    ecx,0xf8
   1892f:	mov    QWORD PTR [rip+0x262f96],0x0        # 27b8d0 <pieces+0xf0>
   1893a:	shr    ecx,0x3
   1893d:	rep stos QWORD PTR es:[rdi],rax
   18940:	lea    rdi,[rip+0x51241]        # 69b88 <is_promoted+0x8>
   18947:	mov    rcx,r11
   1894a:	mov    QWORD PTR [rip+0x5122b],0x0        # 69b80 <is_promoted>
   18955:	mov    QWORD PTR [rip+0x51310],0x0        # 69c70 <is_promoted+0xf0>
   18960:	and    rdi,0xfffffffffffffff8
   18964:	sub    rcx,rdi
   18967:	add    ecx,0xf8
   1896d:	shr    ecx,0x3
   18970:	rep stos QWORD PTR es:[rdi],rax
   18973:	mov    eax,0x1a
   18978:	xor    edi,edi
   1897a:	mov    DWORD PTR [rip+0x262e5c],0x0        # 27b7e0 <pieces>
   18984:	jmp    189bf <reset_piece_square+0x15f>
   18986:	nop    WORD PTR cs:[rax+rax*1+0x0]
   18990:	add    edi,0x1
   18993:	mov    r13d,edx
   18996:	mov    edx,DWORD PTR [r10+rax*4]
   1899a:	add    r8d,DWORD PTR [r12+rcx*4]
   1899e:	movsxd rcx,edi
   189a1:	mov    DWORD PTR [rbp+rax*4+0x0],edi
   189a5:	mov    DWORD PTR [r9+rcx*4],eax
   189a9:	test   edx,edx
   189ab:	je     189b5 <reset_piece_square+0x155>
   189ad:	mov    DWORD PTR [r11+rcx*4],0x1
   189b5:	add    rax,0x1
   189b9:	cmp    rax,0x76
   189bd:	je     189e6 <reset_piece_square+0x186>
   189bf:	movsxd rcx,DWORD PTR [rbx+rax*4]
   189c3:	test   ecx,ecx
   189c5:	setne  dl
   189c8:	cmp    ecx,0xc
   189cb:	setle  sil
   189cf:	and    dl,sil
   189d2:	jne    18990 <reset_piece_square+0x130>
   189d4:	mov    DWORD PTR [rbp+rax*4+0x0],0x0
   189dc:	add    rax,0x1
   189e0:	cmp    rax,0x76
   189e4:	jne    189bf <reset_piece_square+0x15f>
   189e6:	test   r13b,r13b
   189e9:	je     189f8 <reset_piece_square+0x198>
   189eb:	mov    DWORD PTR [rip+0x1baee],r8d        # 344e0 <Material>
   189f2:	mov    DWORD PTR [rip+0x52eac],edi        # 6b8a4 <piece_count>
   189f8:	mov    rax,QWORD PTR [rsp+0x248]
   18a00:	xor    rax,QWORD PTR fs:0x28
   18a09:	jne    18a2c <reset_piece_square+0x1cc>
   18a0b:	add    rsp,0x258
   18a12:	pop    rbx
   18a13:	pop    rbp
   18a14:	pop    r12
   18a16:	pop    r13
   18a18:	ret    
   18a19:	lea    r9,[rip+0x262dc0]        # 27b7e0 <pieces>
   18a20:	lea    r11,[rip+0x51159]        # 69b80 <is_promoted>
   18a27:	jmp    188dc <reset_piece_square+0x7c>
   18a2c:	call   1310 <__stack_chk_fail@plt>
   18a31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   18a3c:	nop    DWORD PTR [rax+0x0]

0000000000018a40 <init_game>:
   18a40:	endbr64 
   18a44:	sub    rsp,0x258
   18a4b:	lea    rsi,[rip+0x730e]        # 1fd60 <scentral+0xf80>
   18a52:	mov    rax,QWORD PTR fs:0x28
   18a5b:	mov    QWORD PTR [rsp+0x248],rax
   18a63:	xor    eax,eax
   18a65:	mov    eax,0x48
   18a6a:	mov    rdi,rsp
   18a6d:	mov    rcx,rax
   18a70:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   18a73:	mov    rsi,rsp
   18a76:	mov    rdx,QWORD PTR [rsp]
   18a7a:	mov    QWORD PTR [rip+0x264e3f],rdx        # 27d8c0 <board>
   18a81:	mov    rdx,QWORD PTR [rsp+0x238]
   18a89:	mov    rax,rcx
   18a8c:	lea    rcx,[rip+0x264e2d]        # 27d8c0 <board>
   18a93:	mov    QWORD PTR [rip+0x26505e],rdx        # 27daf8 <board+0x238>
   18a9a:	lea    rdi,[rcx+0x8]
   18a9e:	and    rdi,0xfffffffffffffff8
   18aa2:	sub    rcx,rdi
   18aa5:	sub    rsi,rcx
   18aa8:	add    ecx,0x240
   18aae:	shr    ecx,0x3
   18ab1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   18ab4:	lea    rdi,[rip+0x27b10d]        # 293bc8 <moved+0x8>
   18abb:	lea    rcx,[rip+0x27b0fe]        # 293bc0 <moved>
   18ac2:	mov    QWORD PTR [rip+0x27b0f3],0x0        # 293bc0 <moved>
   18acd:	mov    QWORD PTR [rip+0x27b320],0x0        # 293df8 <moved+0x238>
   18ad8:	and    rdi,0xfffffffffffffff8
   18adc:	sub    rcx,rdi
   18adf:	add    ecx,0x240
   18ae5:	shr    ecx,0x3
   18ae8:	rep stos QWORD PTR es:[rdi],rax
   18aeb:	lea    rdi,[rip+0x51096]        # 69b88 <is_promoted+0x8>
   18af2:	lea    rcx,[rip+0x51087]        # 69b80 <is_promoted>
   18af9:	mov    DWORD PTR [rip+0x264a1d],0x1        # 27d520 <white_to_move>
   18b03:	mov    DWORD PTR [rip+0x27abd3],0x0        # 2936e0 <ep_square>
   18b0d:	and    rdi,0xfffffffffffffff8
   18b11:	mov    DWORD PTR [rip+0x2654c1],0x1e        # 27dfdc <wking_loc>
   18b1b:	sub    rcx,rdi
   18b1e:	mov    DWORD PTR [rip+0x2649fc],0x72        # 27d524 <bking_loc>
   18b28:	add    ecx,0xf8
   18b2e:	mov    DWORD PTR [rip+0x50688],0x0        # 691c0 <white_castled>
   18b38:	shr    ecx,0x3
   18b3b:	mov    DWORD PTR [rip+0x5067f],0x0        # 691c4 <black_castled>
   18b45:	mov    DWORD PTR [rip+0x264d51],0x0        # 27d8a0 <result>
   18b4f:	mov    DWORD PTR [rip+0x262c6b],0x0        # 27b7c4 <captures>
   18b59:	mov    DWORD PTR [rip+0x52d41],0x20        # 6b8a4 <piece_count>
   18b63:	mov    DWORD PTR [rip+0x1b973],0x0        # 344e0 <Material>
   18b6d:	mov    QWORD PTR [rip+0x51008],0x0        # 69b80 <is_promoted>
   18b78:	mov    QWORD PTR [rip+0x510ed],0x0        # 69c70 <is_promoted+0xf0>
   18b83:	rep stos QWORD PTR es:[rdi],rax
   18b86:	lea    rdi,[rip+0xc49b]        # 25028 <holding+0x8>
   18b8d:	lea    rcx,[rip+0xc48c]        # 25020 <holding>
   18b94:	mov    QWORD PTR [rip+0xc481],0x0        # 25020 <holding>
   18b9f:	mov    QWORD PTR [rip+0xc4ee],0x0        # 25098 <holding+0x78>
   18baa:	and    rdi,0xfffffffffffffff8
   18bae:	sub    rcx,rdi
   18bb1:	sub    ecx,0xffffff80
   18bb4:	shr    ecx,0x3
   18bb7:	rep stos QWORD PTR es:[rdi],rax
   18bba:	mov    DWORD PTR [rip+0xc5e8],0x0        # 251ac <white_hand_eval>
   18bc4:	mov    DWORD PTR [rip+0xc5d2],0x0        # 251a0 <black_hand_eval>
   18bce:	call   18860 <reset_piece_square>
   18bd3:	mov    DWORD PTR [rip+0x27eb8b],0x0        # 297768 <bookidx>
   18bdd:	mov    DWORD PTR [rip+0x262cf1],0x0        # 27b8d8 <book_ply>
   18be7:	mov    DWORD PTR [rip+0x264f13],0x0        # 27db04 <fifty>
   18bf1:	mov    DWORD PTR [rip+0x27eb65],0x0        # 297760 <ply>
   18bfb:	mov    DWORD PTR [rip+0x27eb43],0x0        # 297748 <phase>
   18c05:	mov    rax,QWORD PTR [rsp+0x248]
   18c0d:	xor    rax,QWORD PTR fs:0x28
   18c16:	jne    18c20 <init_game+0x1e0>
   18c18:	add    rsp,0x258
   18c1f:	ret    
   18c20:	call   1310 <__stack_chk_fail@plt>
   18c25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000018c30 <rinput>:
   18c30:	endbr64 
   18c34:	push   r14
   18c36:	mov    r14,rdi
   18c39:	push   r13
   18c3b:	push   r12
   18c3d:	lea    r12d,[rsi-0x1]
   18c41:	push   rbp
   18c42:	xor    ebp,ebp
   18c44:	push   rbx
   18c45:	mov    rbx,rdx
   18c48:	movsxd r13,ebp
   18c4b:	jmp    18c5a <rinput+0x2a>
   18c4d:	nop    DWORD PTR [rax]
   18c50:	cmp    eax,0xffffffff
   18c53:	je     18c67 <rinput+0x37>
   18c55:	cmp    r12d,ebp
   18c58:	jg     18c78 <rinput+0x48>
   18c5a:	mov    rdi,rbx
   18c5d:	call   1470 <getc@plt>
   18c62:	cmp    eax,0xa
   18c65:	jne    18c50 <rinput+0x20>
   18c67:	pop    rbx
   18c68:	pop    rbp
   18c69:	mov    BYTE PTR [r14+r13*1],0x0
   18c6e:	pop    r12
   18c70:	pop    r13
   18c72:	pop    r14
   18c74:	ret    
   18c75:	nop    DWORD PTR [rax]
   18c78:	mov    BYTE PTR [r14+rbp*1],al
   18c7c:	add    rbp,0x1
   18c80:	jmp    18c48 <rinput+0x18>
   18c82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   18c8d:	nop    DWORD PTR [rax]

0000000000018c90 <rtime>:
   18c90:	endbr64 
   18c94:	xor    eax,eax
   18c96:	ret    
   18c97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000018ca0 <start_up>:
   18ca0:	endbr64 
   18ca4:	lea    rdi,[rip+0x6ef5]        # 1fba0 <scentral+0xdc0>
   18cab:	jmp    12d0 <puts@plt>

0000000000018cb0 <toggle_bool>:
   18cb0:	endbr64 
   18cb4:	mov    edx,DWORD PTR [rdi]
   18cb6:	xor    eax,eax
   18cb8:	test   edx,edx
   18cba:	sete   al
   18cbd:	mov    DWORD PTR [rdi],eax
   18cbf:	ret    

0000000000018cc0 <tree_debug>:
   18cc0:	endbr64 
   18cc4:	push   r13
   18cc6:	push   r12
   18cc8:	push   rbx
   18cc9:	sub    rsp,0x110
   18cd0:	mov    rax,QWORD PTR fs:0x28
   18cd9:	mov    QWORD PTR [rsp+0x108],rax
   18ce1:	xor    eax,eax
   18ce3:	mov    r12,rsp
   18ce6:	call   18a40 <init_game>
   18ceb:	lea    rdi,[rip+0x6ef6]        # 1fbe8 <scentral+0xe08>
   18cf2:	call   12d0 <puts@plt>
   18cf7:	mov    rdx,QWORD PTR [rip+0xb852]        # 24550 <stdin@@GLIBC_2.2.5>
   18cfe:	mov    esi,0x100
   18d03:	mov    rdi,r12
   18d06:	call   18c30 <rinput>
   18d0b:	xor    esi,esi
   18d0d:	mov    edx,0xa
   18d12:	mov    rdi,r12
   18d15:	call   13d0 <strtol@plt>
   18d1a:	lea    rdi,[rip+0x6eef]        # 1fc10 <scentral+0xe30>
   18d21:	mov    rbx,rax
   18d24:	call   12d0 <puts@plt>
   18d29:	mov    rdx,QWORD PTR [rip+0xb820]        # 24550 <stdin@@GLIBC_2.2.5>
   18d30:	mov    esi,0x100
   18d35:	mov    rdi,r12
   18d38:	call   18c30 <rinput>
   18d3d:	cmp    BYTE PTR [rsp],0x79
   18d41:	je     18da0 <tree_debug+0xe0>
   18d43:	mov    DWORD PTR [rip+0x5095b],0x0        # 696a8 <raw_nodes>
   18d4d:	mov    edi,ebx
   18d4f:	call   116b0 <perft>
   18d54:	lea    r9,[rip+0xb7a5]        # 24500 <divider>
   18d5b:	xor    eax,eax
   18d5d:	mov    ecx,ebx
   18d5f:	mov    r8d,DWORD PTR [rip+0x50942]        # 696a8 <raw_nodes>
   18d66:	mov    rdx,r9
   18d69:	mov    edi,0x1
   18d6e:	lea    rsi,[rip+0x6f23]        # 1fc98 <scentral+0xeb8>
   18d75:	call   1420 <__printf_chk@plt>
   18d7a:	mov    rax,QWORD PTR [rsp+0x108]
   18d82:	xor    rax,QWORD PTR fs:0x28
   18d8b:	jne    18e2f <tree_debug+0x16f>
   18d91:	add    rsp,0x110
   18d98:	pop    rbx
   18d99:	pop    r12
   18d9b:	pop    r13
   18d9d:	ret    
   18d9e:	xchg   ax,ax
   18da0:	lea    rdi,[rip+0x6e91]        # 1fc38 <scentral+0xe58>
   18da7:	call   12d0 <puts@plt>
   18dac:	mov    rdx,QWORD PTR [rip+0xb79d]        # 24550 <stdin@@GLIBC_2.2.5>
   18db3:	mov    esi,0x100
   18db8:	mov    rdi,r12
   18dbb:	call   18c30 <rinput>
   18dc0:	lea    rsi,[rip+0x6362]        # 1f129 <scentral+0x349>
   18dc7:	mov    rdi,r12
   18dca:	call   1430 <fopen@plt>
   18dcf:	mov    r13,rax
   18dd2:	test   rax,rax
   18dd5:	je     18e10 <tree_debug+0x150>
   18dd7:	lea    rdi,[rip+0x6e92]        # 1fc70 <scentral+0xe90>
   18dde:	call   12d0 <puts@plt>
   18de3:	mov    rdx,QWORD PTR [rip+0xb766]        # 24550 <stdin@@GLIBC_2.2.5>
   18dea:	mov    rdi,r12
   18ded:	mov    esi,0x100
   18df2:	call   18c30 <rinput>
   18df7:	mov    rcx,r12
   18dfa:	mov    rdx,r13
   18dfd:	xor    esi,esi
   18dff:	mov    edi,ebx
   18e01:	call   15170 <tree>
   18e06:	jmp    18d43 <tree_debug+0x83>
   18e0b:	nop    DWORD PTR [rax+rax*1+0x0]
   18e10:	mov    rdi,QWORD PTR [rip+0xb749]        # 24560 <stderr@@GLIBC_2.2.5>
   18e17:	mov    rcx,r12
   18e1a:	mov    esi,0x1
   18e1f:	xor    eax,eax
   18e21:	lea    rdx,[rip+0x6bec]        # 1fa14 <scentral+0xc34>
   18e28:	call   1460 <__fprintf_chk@plt>
   18e2d:	jmp    18dd7 <tree_debug+0x117>
   18e2f:	call   1310 <__stack_chk_fail@plt>
   18e34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   18e3f:	nop

0000000000018e40 <verify_coord>:
   18e40:	endbr64 
   18e44:	push   r15
   18e46:	push   r14
   18e48:	push   r13
   18e4a:	push   r12
   18e4c:	push   rbp
   18e4d:	push   rbx
   18e4e:	sub    rsp,0x1000
   18e55:	or     QWORD PTR [rsp],0x0
   18e5a:	sub    rsp,0x1000
   18e61:	or     QWORD PTR [rsp],0x0
   18e66:	sub    rsp,0x1000
   18e6d:	or     QWORD PTR [rsp],0x0
   18e72:	sub    rsp,0x28
   18e76:	mov    QWORD PTR [rsp+0x8],rsi
   18e7b:	mov    r13,rdi
   18e7e:	mov    rax,QWORD PTR fs:0x28
   18e87:	mov    QWORD PTR [rsp+0x3018],rax
   18e8f:	xor    eax,eax
   18e91:	cmp    DWORD PTR [rip+0x262928],0x4        # 27b7c0 <Variant>
   18e98:	je     18fa0 <verify_coord+0x160>
   18e9e:	lea    rbx,[rsp+0x10]
   18ea3:	mov    rdi,rbx
   18ea6:	call   9b80 <gen>
   18eab:	mov    r12d,DWORD PTR [rip+0x25856]        # 3e708 <numb_moves>
   18eb2:	test   r12d,r12d
   18eb5:	jle    1903a <verify_coord+0x1fa>
   18ebb:	mov    DWORD PTR [rsp+0x4],0x0
   18ec3:	xor    r15d,r15d
   18ec6:	lea    rbp,[rsp+0x3012]
   18ece:	jmp    18edd <verify_coord+0x9d>
   18ed0:	add    r15,0x1
   18ed4:	cmp    r12d,r15d
   18ed7:	jle    18f6f <verify_coord+0x12f>
   18edd:	movsxd rax,r15d
   18ee0:	sub    rsp,0x8
   18ee4:	mov    rdi,rbp
   18ee7:	mov    r14d,r15d
   18eea:	lea    rax,[rax+rax*2]
   18eee:	shl    rax,0x3
   18ef2:	push   QWORD PTR [rsp+rax*1+0x28]
   18ef6:	push   QWORD PTR [rsp+rax*1+0x28]
   18efa:	push   QWORD PTR [rsp+rax*1+0x28]
   18efe:	call   17690 <comp_to_coord>
   18f03:	add    rsp,0x20
   18f07:	mov    rsi,rbp
   18f0a:	mov    rdi,r13
   18f0d:	call   13a0 <strcmp@plt>
   18f12:	test   eax,eax
   18f14:	jne    18ed0 <verify_coord+0x90>
   18f16:	mov    esi,r15d
   18f19:	mov    rdi,rbx
   18f1c:	call   8e00 <make>
   18f21:	mov    edx,0x1
   18f26:	mov    esi,r15d
   18f29:	mov    rdi,rbx
   18f2c:	call   6f70 <check_legal>
   18f31:	test   eax,eax
   18f33:	je     18f57 <verify_coord+0x117>
   18f35:	lea    rax,[r15+r15*2]
   18f39:	mov    rcx,QWORD PTR [rsp+0x8]
   18f3e:	mov    DWORD PTR [rsp+0x4],0x1
   18f46:	movdqu xmm0,XMMWORD PTR [rbx+rax*8]
   18f4b:	mov    rax,QWORD PTR [rbx+rax*8+0x10]
   18f50:	mov    QWORD PTR [rcx+0x10],rax
   18f54:	movups XMMWORD PTR [rcx],xmm0
   18f57:	mov    esi,r14d
   18f5a:	mov    rdi,rbx
   18f5d:	add    r15,0x1
   18f61:	call   ae30 <unmake>
   18f66:	cmp    r12d,r15d
   18f69:	jg     18edd <verify_coord+0x9d>
   18f6f:	mov    rax,QWORD PTR [rsp+0x3018]
   18f77:	xor    rax,QWORD PTR fs:0x28
   18f80:	jne    19047 <verify_coord+0x207>
   18f86:	mov    eax,DWORD PTR [rsp+0x4]
   18f8a:	add    rsp,0x3028
   18f91:	pop    rbx
   18f92:	pop    rbp
   18f93:	pop    r12
   18f95:	pop    r13
   18f97:	pop    r14
   18f99:	pop    r15
   18f9b:	ret    
   18f9c:	nop    DWORD PTR [rax+0x0]
   18fa0:	mov    DWORD PTR [rip+0x26281a],0x1        # 27b7c4 <captures>
   18faa:	lea    rbx,[rsp+0x10]
   18faf:	mov    rdi,rbx
   18fb2:	call   9b80 <gen>
   18fb7:	mov    r12d,DWORD PTR [rip+0x2574a]        # 3e708 <numb_moves>
   18fbe:	mov    DWORD PTR [rip+0x2627fc],0x0        # 27b7c4 <captures>
   18fc8:	test   r12d,r12d
   18fcb:	jle    19018 <verify_coord+0x1d8>
   18fcd:	xor    ebp,ebp
   18fcf:	jmp    18fe5 <verify_coord+0x1a5>
   18fd1:	nop    DWORD PTR [rax+0x0]
   18fd8:	call   ae30 <unmake>
   18fdd:	add    ebp,0x1
   18fe0:	cmp    r12d,ebp
   18fe3:	je     19018 <verify_coord+0x1d8>
   18fe5:	mov    esi,ebp
   18fe7:	mov    rdi,rbx
   18fea:	call   8e00 <make>
   18fef:	mov    esi,ebp
   18ff1:	mov    rdi,rbx
   18ff4:	mov    edx,0x1
   18ff9:	call   6f70 <check_legal>
   18ffe:	mov    esi,ebp
   19000:	mov    rdi,rbx
   19003:	test   eax,eax
   19005:	je     18fd8 <verify_coord+0x198>
   19007:	call   ae30 <unmake>
   1900c:	jmp    18ebb <verify_coord+0x7b>
   19011:	nop    DWORD PTR [rax+0x0]
   19018:	mov    DWORD PTR [rip+0x2627a2],0x0        # 27b7c4 <captures>
   19022:	mov    rdi,rbx
   19025:	call   9b80 <gen>
   1902a:	mov    r12d,DWORD PTR [rip+0x256d7]        # 3e708 <numb_moves>
   19031:	test   r12d,r12d
   19034:	jg     18ebb <verify_coord+0x7b>
   1903a:	mov    DWORD PTR [rsp+0x4],0x0
   19042:	jmp    18f6f <verify_coord+0x12f>
   19047:	call   1310 <__stack_chk_fail@plt>
   1904c:	nop    DWORD PTR [rax+0x0]

0000000000019050 <perft_debug>:
   19050:	endbr64 
   19054:	push   r13
   19056:	lea    r13,[rip+0x6cb3]        # 1fd10 <scentral+0xf30>
   1905d:	push   r12
   1905f:	push   rbp
   19060:	push   rbx
   19061:	sub    rsp,0x138
   19068:	mov    rax,QWORD PTR fs:0x28
   19071:	mov    QWORD PTR [rsp+0x128],rax
   19079:	xor    eax,eax
   1907b:	lea    rbp,[rsp+0x20]
   19080:	call   18a40 <init_game>
   19085:	lea    rdi,[rip+0x6c34]        # 1fcc0 <scentral+0xee0>
   1908c:	call   12d0 <puts@plt>
   19091:	mov    rdx,QWORD PTR [rip+0xb4b8]        # 24550 <stdin@@GLIBC_2.2.5>
   19098:	mov    esi,0x100
   1909d:	mov    rdi,rbp
   190a0:	call   18c30 <rinput>
   190a5:	mov    edx,0xa
   190aa:	xor    esi,esi
   190ac:	mov    rdi,rbp
   190af:	call   13d0 <strtol@plt>
   190b4:	mov    DWORD PTR [rip+0x505ea],0x0        # 696a8 <raw_nodes>
   190be:	mov    edi,eax
   190c0:	mov    rbx,rax
   190c3:	call   116b0 <perft>
   190c8:	mov    ecx,DWORD PTR [rip+0x505da]        # 696a8 <raw_nodes>
   190ce:	mov    edx,ebx
   190d0:	xor    eax,eax
   190d2:	lea    rsi,[rip+0x6c17]        # 1fcf0 <scentral+0xf10>
   190d9:	mov    edi,0x1
   190de:	call   1420 <__printf_chk@plt>
   190e3:	mov    rdi,QWORD PTR [rip+0xb456]        # 24540 <stdout@@GLIBC_2.2.5>
   190ea:	mov    esi,0x1
   190ef:	call   178e0 <display_board>
   190f4:	lea    rdi,[rip+0x6930]        # 1fa2b <scentral+0xc4b>
   190fb:	call   12d0 <puts@plt>
   19100:	mov    rdx,QWORD PTR [rip+0xb449]        # 24550 <stdin@@GLIBC_2.2.5>
   19107:	mov    esi,0x100
   1910c:	mov    rdi,rbp
   1910f:	call   18c30 <rinput>
   19114:	movsx  rbx,BYTE PTR [rsp+0x20]
   1911a:	test   bl,bl
   1911c:	je     19142 <perft_debug+0xf2>
   1911e:	call   1490 <__ctype_tolower_loc@plt>
   19123:	mov    rcx,QWORD PTR [rax]
   19126:	mov    rax,rbp
   19129:	nop    DWORD PTR [rax+0x0]
   19130:	mov    edx,DWORD PTR [rcx+rbx*4]
   19133:	add    rax,0x1
   19137:	mov    BYTE PTR [rax-0x1],dl
   1913a:	movsx  rbx,BYTE PTR [rax]
   1913e:	test   bl,bl
   19140:	jne    19130 <perft_debug+0xe0>
   19142:	cmp    DWORD PTR [rbp+0x0],0x74697865
   19149:	je     19218 <perft_debug+0x1c8>
   1914f:	cmp    DWORD PTR [rbp+0x0],0x74697571
   19156:	je     19223 <perft_debug+0x1d3>
   1915c:	mov    r12,rsp
   1915f:	mov    rdi,rbp
   19162:	mov    rsi,r12
   19165:	call   18e40 <verify_coord>
   1916a:	test   eax,eax
   1916c:	je     191a8 <perft_debug+0x158>
   1916e:	xor    esi,esi
   19170:	mov    rdi,r12
   19173:	call   8e00 <make>
   19178:	jmp    19085 <perft_debug+0x35>
   1917d:	nop    DWORD PTR [rax]
   19180:	cmp    DWORD PTR [rbp+0x0],0x74697865
   19187:	je     191fb <perft_debug+0x1ab>
   19189:	nop    DWORD PTR [rax+0x0]
   19190:	cmp    DWORD PTR [rbp+0x0],0x74697571
   19197:	je     19210 <perft_debug+0x1c0>
   19199:	mov    rsi,r12
   1919c:	mov    rdi,rbp
   1919f:	call   18e40 <verify_coord>
   191a4:	test   eax,eax
   191a6:	jne    1916e <perft_debug+0x11e>
   191a8:	mov    rdi,r13
   191ab:	call   12d0 <puts@plt>
   191b0:	mov    rdx,QWORD PTR [rip+0xb399]        # 24550 <stdin@@GLIBC_2.2.5>
   191b7:	mov    esi,0x100
   191bc:	mov    rdi,rbp
   191bf:	call   18c30 <rinput>
   191c4:	movsx  rbx,BYTE PTR [rsp+0x20]
   191ca:	test   bl,bl
   191cc:	je     19180 <perft_debug+0x130>
   191ce:	call   1490 <__ctype_tolower_loc@plt>
   191d3:	mov    rcx,QWORD PTR [rax]
   191d6:	mov    rax,rbp
   191d9:	nop    DWORD PTR [rax+0x0]
   191e0:	mov    edx,DWORD PTR [rcx+rbx*4]
   191e3:	add    rax,0x1
   191e7:	mov    BYTE PTR [rax-0x1],dl
   191ea:	movsx  rbx,BYTE PTR [rax]
   191ee:	test   bl,bl
   191f0:	jne    191e0 <perft_debug+0x190>
   191f2:	cmp    DWORD PTR [rbp+0x0],0x74697865
   191f9:	jne    19190 <perft_debug+0x140>
   191fb:	cmp    BYTE PTR [rbp+0x4],0x0
   191ff:	jne    19190 <perft_debug+0x140>
   19201:	xor    edi,edi
   19203:	call   1440 <exit@plt>
   19208:	nop    DWORD PTR [rax+rax*1+0x0]
   19210:	cmp    BYTE PTR [rbp+0x4],0x0
   19214:	je     19201 <perft_debug+0x1b1>
   19216:	jmp    19199 <perft_debug+0x149>
   19218:	cmp    BYTE PTR [rbp+0x4],0x0
   1921c:	je     19201 <perft_debug+0x1b1>
   1921e:	jmp    1914f <perft_debug+0xff>
   19223:	cmp    BYTE PTR [rbp+0x4],0x0
   19227:	je     19201 <perft_debug+0x1b1>
   19229:	jmp    1915c <perft_debug+0x10c>
   1922e:	xchg   ax,ax

0000000000019230 <interrupt>:
   19230:	endbr64 
   19234:	xor    eax,eax
   19236:	ret    
   19237:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019240 <PutPiece>:
   19240:	endbr64 
   19244:	lea    eax,[rcx+rcx*2-0x93]
   1924b:	movsx  edx,dl
   1924e:	lea    ecx,[rdx+rax*4-0x47]
   19252:	test   edi,edi
   19254:	je     19280 <PutPiece+0x40>
   19256:	cmp    edi,0x1
   19259:	je     19260 <PutPiece+0x20>
   1925b:	ret    
   1925c:	nop    DWORD PTR [rax+0x0]
   19260:	sub    esi,0x62
   19263:	cmp    sil,0x16
   19267:	ja     1925b <PutPiece+0x1b>
   19269:	lea    rdx,[rip+0x6d30]        # 1ffa0 <scentral+0x11c0>
   19270:	movzx  esi,sil
   19274:	movsxd rax,DWORD PTR [rdx+rsi*4]
   19278:	add    rax,rdx
   1927b:	notrack jmp rax
   1927e:	xchg   ax,ax
   19280:	sub    esi,0x62
   19283:	cmp    sil,0x16
   19287:	ja     1925b <PutPiece+0x1b>
   19289:	lea    rdx,[rip+0x6d6c]        # 1fffc <scentral+0x121c>
   19290:	movzx  esi,sil
   19294:	movsxd rax,DWORD PTR [rdx+rsi*4]
   19298:	add    rax,rdx
   1929b:	notrack jmp rax
   1929e:	movsxd rcx,ecx
   192a1:	lea    rax,[rip+0x264618]        # 27d8c0 <board>
   192a8:	mov    DWORD PTR [rax+rcx*4],0xd
   192af:	ret    
   192b0:	movsxd rcx,ecx
   192b3:	lea    rax,[rip+0x264606]        # 27d8c0 <board>
   192ba:	mov    DWORD PTR [rax+rcx*4],0xb
   192c1:	ret    
   192c2:	movsxd rcx,ecx
   192c5:	lea    rax,[rip+0x2645f4]        # 27d8c0 <board>
   192cc:	mov    DWORD PTR [rax+rcx*4],0x5
   192d3:	ret    
   192d4:	movsxd rcx,ecx
   192d7:	lea    rax,[rip+0x2645e2]        # 27d8c0 <board>
   192de:	mov    DWORD PTR [rax+rcx*4],0x3
   192e5:	ret    
   192e6:	movsxd rcx,ecx
   192e9:	lea    rax,[rip+0x2645d0]        # 27d8c0 <board>
   192f0:	mov    DWORD PTR [rax+rcx*4],0x1
   192f7:	ret    
   192f8:	movsxd rcx,ecx
   192fb:	lea    rax,[rip+0x2645be]        # 27d8c0 <board>
   19302:	mov    DWORD PTR [rax+rcx*4],0x9
   19309:	ret    
   1930a:	movsxd rcx,ecx
   1930d:	lea    rax,[rip+0x2645ac]        # 27d8c0 <board>
   19314:	mov    DWORD PTR [rax+rcx*4],0x7
   1931b:	ret    
   1931c:	movsxd rcx,ecx
   1931f:	lea    rax,[rip+0x26459a]        # 27d8c0 <board>
   19326:	mov    DWORD PTR [rax+rcx*4],0xc
   1932d:	ret    
   1932e:	movsxd rcx,ecx
   19331:	lea    rax,[rip+0x264588]        # 27d8c0 <board>
   19338:	mov    DWORD PTR [rax+rcx*4],0x8
   1933f:	ret    
   19340:	movsxd rcx,ecx
   19343:	lea    rax,[rip+0x264576]        # 27d8c0 <board>
   1934a:	mov    DWORD PTR [rax+rcx*4],0xa
   19351:	ret    
   19352:	movsxd rcx,ecx
   19355:	lea    rax,[rip+0x264564]        # 27d8c0 <board>
   1935c:	mov    DWORD PTR [rax+rcx*4],0x2
   19363:	ret    
   19364:	movsxd rcx,ecx
   19367:	lea    rax,[rip+0x264552]        # 27d8c0 <board>
   1936e:	mov    DWORD PTR [rax+rcx*4],0x4
   19375:	ret    
   19376:	movsxd rcx,ecx
   19379:	lea    rax,[rip+0x264540]        # 27d8c0 <board>
   19380:	mov    DWORD PTR [rax+rcx*4],0x6
   19387:	ret    
   19388:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019390 <reset_board>:
   19390:	endbr64 
   19394:	sub    rsp,0x258
   1939b:	lea    rsi,[rip+0x6cbe]        # 20060 <scentral+0x1280>
   193a2:	mov    ecx,0x48
   193a7:	mov    rax,QWORD PTR fs:0x28
   193b0:	mov    QWORD PTR [rsp+0x248],rax
   193b8:	xor    eax,eax
   193ba:	mov    rdi,rsp
   193bd:	lea    rax,[rip+0x2644fc]        # 27d8c0 <board>
   193c4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   193c7:	lea    rdi,[rax+0x8]
   193cb:	mov    rsi,rsp
   193ce:	and    rdi,0xfffffffffffffff8
   193d2:	mov    rdx,QWORD PTR [rsp]
   193d6:	sub    rax,rdi
   193d9:	sub    rsi,rax
   193dc:	add    eax,0x240
   193e1:	mov    QWORD PTR [rip+0x2644d8],rdx        # 27d8c0 <board>
   193e8:	mov    rdx,QWORD PTR [rsp+0x238]
   193f0:	shr    eax,0x3
   193f3:	mov    ecx,eax
   193f5:	lea    rax,[rip+0x27a7c4]        # 293bc0 <moved>
   193fc:	mov    QWORD PTR [rip+0x2646f5],rdx        # 27daf8 <board+0x238>
   19403:	lea    rdx,[rax+0x240]
   1940a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1940d:	nop    DWORD PTR [rax]
   19410:	mov    DWORD PTR [rax],0x0
   19416:	add    rax,0x4
   1941a:	cmp    rax,rdx
   1941d:	jne    19410 <reset_board+0x80>
   1941f:	lea    rdi,[rip+0x50762]        # 69b88 <is_promoted+0x8>
   19426:	xor    eax,eax
   19428:	lea    rcx,[rip+0x50751]        # 69b80 <is_promoted>
   1942f:	mov    DWORD PTR [rip+0x27a2a7],0x0        # 2936e0 <ep_square>
   19439:	mov    DWORD PTR [rip+0x52461],0x0        # 6b8a4 <piece_count>
   19443:	and    rdi,0xfffffffffffffff8
   19447:	mov    DWORD PTR [rip+0x1b08f],0x0        # 344e0 <Material>
   19451:	sub    rcx,rdi
   19454:	add    ecx,0xf8
   1945a:	mov    QWORD PTR [rip+0x5071b],0x0        # 69b80 <is_promoted>
   19465:	mov    QWORD PTR [rip+0x50800],0x0        # 69c70 <is_promoted+0xf0>
   19470:	shr    ecx,0x3
   19473:	rep stos QWORD PTR es:[rdi],rax
   19476:	lea    rdi,[rip+0xbbab]        # 25028 <holding+0x8>
   1947d:	lea    rcx,[rip+0xbb9c]        # 25020 <holding>
   19484:	mov    QWORD PTR [rip+0xbb91],0x0        # 25020 <holding>
   1948f:	mov    QWORD PTR [rip+0xbbfe],0x0        # 25098 <holding+0x78>
   1949a:	and    rdi,0xfffffffffffffff8
   1949e:	sub    rcx,rdi
   194a1:	sub    ecx,0xffffff80
   194a4:	shr    ecx,0x3
   194a7:	rep stos QWORD PTR es:[rdi],rax
   194aa:	mov    DWORD PTR [rip+0xbcf8],0x0        # 251ac <white_hand_eval>
   194b4:	mov    DWORD PTR [rip+0xbce2],0x0        # 251a0 <black_hand_eval>
   194be:	mov    DWORD PTR [rip+0x27e2a0],0x0        # 297768 <bookidx>
   194c8:	mov    DWORD PTR [rip+0x264632],0x0        # 27db04 <fifty>
   194d2:	mov    rax,QWORD PTR [rsp+0x248]
   194da:	xor    rax,QWORD PTR fs:0x28
   194e3:	jne    194f1 <reset_board+0x161>
   194e5:	add    rsp,0x258
   194ec:	jmp    18860 <reset_piece_square>
   194f1:	call   1310 <__stack_chk_fail@plt>
   194f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019500 <seedMT>:
   19500:	endbr64 
   19504:	or     edi,0x1
   19507:	lea    rax,[rip+0xb116]        # 24624 <state+0x4>
   1950e:	mov    DWORD PTR [rip+0xb01c],0x0        # 24534 <left>
   19518:	mov    DWORD PTR [rip+0xb102],edi        # 24620 <state>
   1951e:	lea    rdx,[rax+0x9bc]
   19525:	nop    DWORD PTR [rax]
   19528:	imul   edi,edi,0x10dcd
   1952e:	add    rax,0x4
   19532:	mov    DWORD PTR [rax-0x4],edi
   19535:	cmp    rax,rdx
   19538:	jne    19528 <seedMT+0x28>
   1953a:	ret    
   1953b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019540 <reloadMT>:
   19540:	endbr64 
   19544:	cmp    DWORD PTR [rip+0xafe9],0xffffffff        # 24534 <left>
   1954b:	jl     19661 <reloadMT+0x121>
   19551:	lea    rsi,[rip+0xb0cc]        # 24624 <state+0x4>
   19558:	lea    rcx,[rip+0xb0c1]        # 24620 <state>
   1955f:	mov    QWORD PTR [rip+0xb09a],rsi        # 24600 <next>
   19566:	mov    edx,DWORD PTR [rip+0xb0b4]        # 24620 <state>
   1956c:	mov    DWORD PTR [rip+0xafbe],0x26f        # 24534 <left>
   19576:	mov    eax,DWORD PTR [rip+0xb0a8]        # 24624 <state+0x4>
   1957c:	lea    rdi,[rcx+0x38c]
   19583:	jmp    1958a <reloadMT+0x4a>
   19585:	nop    DWORD PTR [rax]
   19588:	mov    eax,esi
   1958a:	mov    esi,eax
   1958c:	and    edx,0x80000000
   19592:	and    esi,0x7fffffff
   19598:	or     edx,esi
   1959a:	shr    edx,1
   1959c:	xor    edx,DWORD PTR [rcx+0x634]
   195a2:	mov    esi,edx
   195a4:	xor    esi,0x9908b0df
   195aa:	test   al,0x1
   195ac:	cmovne edx,esi
   195af:	add    rcx,0x4
   195b3:	mov    esi,DWORD PTR [rcx+0x4]
   195b6:	mov    DWORD PTR [rcx-0x4],edx
   195b9:	mov    edx,eax
   195bb:	cmp    rcx,rdi
   195be:	jne    19588 <reloadMT+0x48>
   195c0:	lea    rdi,[rip+0xba15]        # 24fdc <state+0x9bc>
   195c7:	jmp    195d2 <reloadMT+0x92>
   195c9:	nop    DWORD PTR [rax+0x0]
   195d0:	mov    esi,edx
   195d2:	mov    edx,esi
   195d4:	and    eax,0x80000000
   195d9:	and    edx,0x7fffffff
   195df:	or     eax,edx
   195e1:	shr    eax,1
   195e3:	xor    eax,DWORD PTR [rcx-0x38c]
   195e9:	mov    edx,eax
   195eb:	xor    edx,0x9908b0df
   195f1:	test   sil,0x1
   195f5:	cmovne eax,edx
   195f8:	add    rcx,0x4
   195fc:	mov    edx,DWORD PTR [rcx+0x4]
   195ff:	mov    DWORD PTR [rcx-0x4],eax
   19602:	mov    eax,esi
   19604:	cmp    rcx,rdi
   19607:	jne    195d0 <reloadMT+0x90>
   19609:	mov    ecx,DWORD PTR [rip+0xb011]        # 24620 <state>
   1960f:	and    eax,0x80000000
   19614:	mov    esi,ecx
   19616:	and    esi,0x7fffffff
   1961c:	or     eax,esi
   1961e:	shr    eax,1
   19620:	xor    eax,DWORD PTR [rip+0xb62a]        # 24c50 <state+0x630>
   19626:	mov    edx,eax
   19628:	xor    edx,0x9908b0df
   1962e:	test   cl,0x1
   19631:	cmovne eax,edx
   19634:	mov    edx,ecx
   19636:	shr    edx,0xb
   19639:	xor    edx,ecx
   1963b:	mov    DWORD PTR [rip+0xb99b],eax        # 24fdc <state+0x9bc>
   19641:	mov    eax,edx
   19643:	shl    eax,0x7
   19646:	and    eax,0x9d2c5680
   1964b:	xor    edx,eax
   1964d:	mov    eax,edx
   1964f:	shl    eax,0xf
   19652:	and    eax,0xefc60000
   19657:	xor    eax,edx
   19659:	mov    edx,eax
   1965b:	shr    edx,0x12
   1965e:	xor    eax,edx
   19660:	ret    
   19661:	mov    DWORD PTR [rip+0xafb5],0x1105        # 24620 <state>
   1966b:	lea    rsi,[rip+0xafb2]        # 24624 <state+0x4>
   19672:	mov    edx,0x1105
   19677:	mov    rax,rsi
   1967a:	lea    rcx,[rsi+0x9bc]
   19681:	nop    DWORD PTR [rax+0x0]
   19688:	imul   edx,edx,0x10dcd
   1968e:	add    rax,0x4
   19692:	mov    DWORD PTR [rax-0x4],edx
   19695:	cmp    rax,rcx
   19698:	jne    19688 <reloadMT+0x148>
   1969a:	jmp    19558 <reloadMT+0x18>
   1969f:	nop

00000000000196a0 <randomMT>:
   196a0:	endbr64 
   196a4:	sub    DWORD PTR [rip+0xae89],0x1        # 24534 <left>
   196ab:	js     196f0 <randomMT+0x50>
   196ad:	mov    rax,QWORD PTR [rip+0xaf4c]        # 24600 <next>
   196b4:	lea    rdx,[rax+0x4]
   196b8:	mov    eax,DWORD PTR [rax]
   196ba:	mov    QWORD PTR [rip+0xaf3f],rdx        # 24600 <next>
   196c1:	mov    edx,eax
   196c3:	shr    edx,0xb
   196c6:	xor    edx,eax
   196c8:	mov    eax,edx
   196ca:	shl    eax,0x7
   196cd:	and    eax,0x9d2c5680
   196d2:	xor    edx,eax
   196d4:	mov    eax,edx
   196d6:	shl    eax,0xf
   196d9:	and    eax,0xefc60000
   196de:	xor    eax,edx
   196e0:	mov    edx,eax
   196e2:	shr    edx,0x12
   196e5:	xor    eax,edx
   196e7:	ret    
   196e8:	nop    DWORD PTR [rax+rax*1+0x0]
   196f0:	jmp    19540 <reloadMT>
   196f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
   196ff:	nop

0000000000019700 <__libc_csu_init>:
   19700:	endbr64 
   19704:	push   r15
   19706:	lea    r15,[rip+0xa543]        # 23c50 <__frame_dummy_init_array_entry>
   1970d:	push   r14
   1970f:	mov    r14,rdx
   19712:	push   r13
   19714:	mov    r13,rsi
   19717:	push   r12
   19719:	mov    r12d,edi
   1971c:	push   rbp
   1971d:	lea    rbp,[rip+0xa534]        # 23c58 <__do_global_dtors_aux_fini_array_entry>
   19724:	push   rbx
   19725:	sub    rbp,r15
   19728:	sub    rsp,0x8
   1972c:	call   1000 <_init>
   19731:	sar    rbp,0x3
   19735:	je     19756 <__libc_csu_init+0x56>
   19737:	xor    ebx,ebx
   19739:	nop    DWORD PTR [rax+0x0]
   19740:	mov    rdx,r14
   19743:	mov    rsi,r13
   19746:	mov    edi,r12d
   19749:	call   QWORD PTR [r15+rbx*8]
   1974d:	add    rbx,0x1
   19751:	cmp    rbp,rbx
   19754:	jne    19740 <__libc_csu_init+0x40>
   19756:	add    rsp,0x8
   1975a:	pop    rbx
   1975b:	pop    rbp
   1975c:	pop    r12
   1975e:	pop    r13
   19760:	pop    r14
   19762:	pop    r15
   19764:	ret    
   19765:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019770 <__libc_csu_fini>:
   19770:	endbr64 
   19774:	ret    

Disassembly of section .fini:

0000000000019778 <_fini>:
   19778:	endbr64 
   1977c:	sub    rsp,0x8
   19780:	add    rsp,0x8
   19784:	ret    
