
milc:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	endbr64 
    2004:	sub    rsp,0x8
    2008:	mov    rax,QWORD PTR [rip+0x1ffd9]        # 21fe8 <__gmon_start__>
    200f:	test   rax,rax
    2012:	je     2016 <_init+0x16>
    2014:	call   rax
    2016:	add    rsp,0x8
    201a:	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	push   QWORD PTR [rip+0x1fe72]        # 21e98 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	bnd jmp QWORD PTR [rip+0x1fe73]        # 21ea0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	nop    DWORD PTR [rax]
    2030:	endbr64 
    2034:	push   0x0
    2039:	bnd jmp 2020 <.plt>
    203f:	nop
    2040:	endbr64 
    2044:	push   0x1
    2049:	bnd jmp 2020 <.plt>
    204f:	nop
    2050:	endbr64 
    2054:	push   0x2
    2059:	bnd jmp 2020 <.plt>
    205f:	nop
    2060:	endbr64 
    2064:	push   0x3
    2069:	bnd jmp 2020 <.plt>
    206f:	nop
    2070:	endbr64 
    2074:	push   0x4
    2079:	bnd jmp 2020 <.plt>
    207f:	nop
    2080:	endbr64 
    2084:	push   0x5
    2089:	bnd jmp 2020 <.plt>
    208f:	nop
    2090:	endbr64 
    2094:	push   0x6
    2099:	bnd jmp 2020 <.plt>
    209f:	nop
    20a0:	endbr64 
    20a4:	push   0x7
    20a9:	bnd jmp 2020 <.plt>
    20af:	nop
    20b0:	endbr64 
    20b4:	push   0x8
    20b9:	bnd jmp 2020 <.plt>
    20bf:	nop
    20c0:	endbr64 
    20c4:	push   0x9
    20c9:	bnd jmp 2020 <.plt>
    20cf:	nop
    20d0:	endbr64 
    20d4:	push   0xa
    20d9:	bnd jmp 2020 <.plt>
    20df:	nop
    20e0:	endbr64 
    20e4:	push   0xb
    20e9:	bnd jmp 2020 <.plt>
    20ef:	nop
    20f0:	endbr64 
    20f4:	push   0xc
    20f9:	bnd jmp 2020 <.plt>
    20ff:	nop
    2100:	endbr64 
    2104:	push   0xd
    2109:	bnd jmp 2020 <.plt>
    210f:	nop
    2110:	endbr64 
    2114:	push   0xe
    2119:	bnd jmp 2020 <.plt>
    211f:	nop
    2120:	endbr64 
    2124:	push   0xf
    2129:	bnd jmp 2020 <.plt>
    212f:	nop
    2130:	endbr64 
    2134:	push   0x10
    2139:	bnd jmp 2020 <.plt>
    213f:	nop
    2140:	endbr64 
    2144:	push   0x11
    2149:	bnd jmp 2020 <.plt>
    214f:	nop
    2150:	endbr64 
    2154:	push   0x12
    2159:	bnd jmp 2020 <.plt>
    215f:	nop
    2160:	endbr64 
    2164:	push   0x13
    2169:	bnd jmp 2020 <.plt>
    216f:	nop
    2170:	endbr64 
    2174:	push   0x14
    2179:	bnd jmp 2020 <.plt>
    217f:	nop
    2180:	endbr64 
    2184:	push   0x15
    2189:	bnd jmp 2020 <.plt>
    218f:	nop
    2190:	endbr64 
    2194:	push   0x16
    2199:	bnd jmp 2020 <.plt>
    219f:	nop
    21a0:	endbr64 
    21a4:	push   0x17
    21a9:	bnd jmp 2020 <.plt>
    21af:	nop
    21b0:	endbr64 
    21b4:	push   0x18
    21b9:	bnd jmp 2020 <.plt>
    21bf:	nop
    21c0:	endbr64 
    21c4:	push   0x19
    21c9:	bnd jmp 2020 <.plt>
    21cf:	nop
    21d0:	endbr64 
    21d4:	push   0x1a
    21d9:	bnd jmp 2020 <.plt>
    21df:	nop
    21e0:	endbr64 
    21e4:	push   0x1b
    21e9:	bnd jmp 2020 <.plt>
    21ef:	nop
    21f0:	endbr64 
    21f4:	push   0x1c
    21f9:	bnd jmp 2020 <.plt>
    21ff:	nop
    2200:	endbr64 
    2204:	push   0x1d
    2209:	bnd jmp 2020 <.plt>
    220f:	nop
    2210:	endbr64 
    2214:	push   0x1e
    2219:	bnd jmp 2020 <.plt>
    221f:	nop
    2220:	endbr64 
    2224:	push   0x1f
    2229:	bnd jmp 2020 <.plt>
    222f:	nop
    2230:	endbr64 
    2234:	push   0x20
    2239:	bnd jmp 2020 <.plt>
    223f:	nop
    2240:	endbr64 
    2244:	push   0x21
    2249:	bnd jmp 2020 <.plt>
    224f:	nop
    2250:	endbr64 
    2254:	push   0x22
    2259:	bnd jmp 2020 <.plt>
    225f:	nop
    2260:	endbr64 
    2264:	push   0x23
    2269:	bnd jmp 2020 <.plt>
    226f:	nop
    2270:	endbr64 
    2274:	push   0x24
    2279:	bnd jmp 2020 <.plt>
    227f:	nop
    2280:	endbr64 
    2284:	push   0x25
    2289:	bnd jmp 2020 <.plt>
    228f:	nop

Disassembly of section .plt.got:

0000000000002290 <__cxa_finalize@plt>:
    2290:	endbr64 
    2294:	bnd jmp QWORD PTR [rip+0x1fd5d]        # 21ff8 <__cxa_finalize@GLIBC_2.2.5>
    229b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000022a0 <free@plt>:
    22a0:	endbr64 
    22a4:	bnd jmp QWORD PTR [rip+0x1fbfd]        # 21ea8 <free@GLIBC_2.2.5>
    22ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000022b0 <putchar@plt>:
    22b0:	endbr64 
    22b4:	bnd jmp QWORD PTR [rip+0x1fbf5]        # 21eb0 <putchar@GLIBC_2.2.5>
    22bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000022c0 <__errno_location@plt>:
    22c0:	endbr64 
    22c4:	bnd jmp QWORD PTR [rip+0x1fbed]        # 21eb8 <__errno_location@GLIBC_2.2.5>
    22cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000022d0 <strcpy@plt>:
    22d0:	endbr64 
    22d4:	bnd jmp QWORD PTR [rip+0x1fbe5]        # 21ec0 <strcpy@GLIBC_2.2.5>
    22db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000022e0 <__isoc99_fscanf@plt>:
    22e0:	endbr64 
    22e4:	bnd jmp QWORD PTR [rip+0x1fbdd]        # 21ec8 <__isoc99_fscanf@GLIBC_2.7>
    22eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000022f0 <puts@plt>:
    22f0:	endbr64 
    22f4:	bnd jmp QWORD PTR [rip+0x1fbd5]        # 21ed0 <puts@GLIBC_2.2.5>
    22fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002300 <fread@plt>:
    2300:	endbr64 
    2304:	bnd jmp QWORD PTR [rip+0x1fbcd]        # 21ed8 <fread@GLIBC_2.2.5>
    230b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002310 <write@plt>:
    2310:	endbr64 
    2314:	bnd jmp QWORD PTR [rip+0x1fbc5]        # 21ee0 <write@GLIBC_2.2.5>
    231b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002320 <fclose@plt>:
    2320:	endbr64 
    2324:	bnd jmp QWORD PTR [rip+0x1fbbd]        # 21ee8 <fclose@GLIBC_2.2.5>
    232b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002330 <ctime@plt>:
    2330:	endbr64 
    2334:	bnd jmp QWORD PTR [rip+0x1fbb5]        # 21ef0 <ctime@GLIBC_2.2.5>
    233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002340 <strlen@plt>:
    2340:	endbr64 
    2344:	bnd jmp QWORD PTR [rip+0x1fbad]        # 21ef8 <strlen@GLIBC_2.2.5>
    234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002350 <__stack_chk_fail@plt>:
    2350:	endbr64 
    2354:	bnd jmp QWORD PTR [rip+0x1fba5]        # 21f00 <__stack_chk_fail@GLIBC_2.4>
    235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002360 <strchr@plt>:
    2360:	endbr64 
    2364:	bnd jmp QWORD PTR [rip+0x1fb9d]        # 21f08 <strchr@GLIBC_2.2.5>
    236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002370 <lseek@plt>:
    2370:	endbr64 
    2374:	bnd jmp QWORD PTR [rip+0x1fb95]        # 21f10 <lseek@GLIBC_2.2.5>
    237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002380 <close@plt>:
    2380:	endbr64 
    2384:	bnd jmp QWORD PTR [rip+0x1fb8d]        # 21f18 <close@GLIBC_2.2.5>
    238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002390 <log@plt>:
    2390:	endbr64 
    2394:	bnd jmp QWORD PTR [rip+0x1fb85]        # 21f20 <log@GLIBC_2.29>
    239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000023a0 <fputc@plt>:
    23a0:	endbr64 
    23a4:	bnd jmp QWORD PTR [rip+0x1fb7d]        # 21f28 <fputc@GLIBC_2.2.5>
    23ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000023b0 <read@plt>:
    23b0:	endbr64 
    23b4:	bnd jmp QWORD PTR [rip+0x1fb75]        # 21f30 <read@GLIBC_2.2.5>
    23bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000023c0 <fgets@plt>:
    23c0:	endbr64 
    23c4:	bnd jmp QWORD PTR [rip+0x1fb6d]        # 21f38 <fgets@GLIBC_2.2.5>
    23cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000023d0 <calloc@plt>:
    23d0:	endbr64 
    23d4:	bnd jmp QWORD PTR [rip+0x1fb65]        # 21f40 <calloc@GLIBC_2.2.5>
    23db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000023e0 <strcmp@plt>:
    23e0:	endbr64 
    23e4:	bnd jmp QWORD PTR [rip+0x1fb5d]        # 21f48 <strcmp@GLIBC_2.2.5>
    23eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000023f0 <__memcpy_chk@plt>:
    23f0:	endbr64 
    23f4:	bnd jmp QWORD PTR [rip+0x1fb55]        # 21f50 <__memcpy_chk@GLIBC_2.3.4>
    23fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002400 <time@plt>:
    2400:	endbr64 
    2404:	bnd jmp QWORD PTR [rip+0x1fb4d]        # 21f58 <time@GLIBC_2.2.5>
    240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002410 <__stpcpy_chk@plt>:
    2410:	endbr64 
    2414:	bnd jmp QWORD PTR [rip+0x1fb45]        # 21f60 <__stpcpy_chk@GLIBC_2.3.4>
    241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002420 <fflush@plt>:
    2420:	endbr64 
    2424:	bnd jmp QWORD PTR [rip+0x1fb3d]        # 21f68 <fflush@GLIBC_2.2.5>
    242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002430 <__isoc99_sscanf@plt>:
    2430:	endbr64 
    2434:	bnd jmp QWORD PTR [rip+0x1fb35]        # 21f70 <__isoc99_sscanf@GLIBC_2.7>
    243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002440 <fseek@plt>:
    2440:	endbr64 
    2444:	bnd jmp QWORD PTR [rip+0x1fb2d]        # 21f78 <fseek@GLIBC_2.2.5>
    244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002450 <realloc@plt>:
    2450:	endbr64 
    2454:	bnd jmp QWORD PTR [rip+0x1fb25]        # 21f80 <realloc@GLIBC_2.2.5>
    245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002460 <__strcpy_chk@plt>:
    2460:	endbr64 
    2464:	bnd jmp QWORD PTR [rip+0x1fb1d]        # 21f88 <__strcpy_chk@GLIBC_2.3.4>
    246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <__printf_chk@plt>:
    2470:	endbr64 
    2474:	bnd jmp QWORD PTR [rip+0x1fb15]        # 21f90 <__printf_chk@GLIBC_2.3.4>
    247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <open@plt>:
    2480:	endbr64 
    2484:	bnd jmp QWORD PTR [rip+0x1fb0d]        # 21f98 <open@GLIBC_2.2.5>
    248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <fopen@plt>:
    2490:	endbr64 
    2494:	bnd jmp QWORD PTR [rip+0x1fb05]        # 21fa0 <fopen@GLIBC_2.2.5>
    249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <__isoc99_scanf@plt>:
    24a0:	endbr64 
    24a4:	bnd jmp QWORD PTR [rip+0x1fafd]        # 21fa8 <__isoc99_scanf@GLIBC_2.7>
    24ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <exit@plt>:
    24b0:	endbr64 
    24b4:	bnd jmp QWORD PTR [rip+0x1faf5]        # 21fb0 <exit@GLIBC_2.2.5>
    24bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <fwrite@plt>:
    24c0:	endbr64 
    24c4:	bnd jmp QWORD PTR [rip+0x1faed]        # 21fb8 <fwrite@GLIBC_2.2.5>
    24cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <__fprintf_chk@plt>:
    24d0:	endbr64 
    24d4:	bnd jmp QWORD PTR [rip+0x1fae5]        # 21fc0 <__fprintf_chk@GLIBC_2.3.4>
    24db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <sqrt@plt>:
    24e0:	endbr64 
    24e4:	bnd jmp QWORD PTR [rip+0x1fadd]        # 21fc8 <sqrt@GLIBC_2.2.5>
    24eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <__sprintf_chk@plt>:
    24f0:	endbr64 
    24f4:	bnd jmp QWORD PTR [rip+0x1fad5]        # 21fd0 <__sprintf_chk@GLIBC_2.3.4>
    24fb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002500 <main>:
    2500:	endbr64 
    2504:	push   r15
    2506:	push   r14
    2508:	push   r13
    250a:	lea    r13,[rip+0x17af3]        # 1a004 <_IO_stdin_used+0x4>
    2511:	push   r12
    2513:	push   rbp
    2514:	push   rbx
    2515:	sub    rsp,0x8
    2519:	call   18d50 <initialize_machine>
    251e:	xor    eax,eax
    2520:	call   193d0 <g_sync>
    2525:	xor    eax,eax
    2527:	call   33b0 <setup>
    252c:	mov    r12d,eax
    252f:	nop
    2530:	mov    edi,r12d
    2533:	call   2fb0 <readin>
    2538:	mov    ebx,eax
    253a:	test   eax,eax
    253c:	jne    26a9 <main+0x1a9>
    2542:	xor    eax,eax
    2544:	call   194f0 <dclock>
    2549:	mov    r9d,DWORD PTR [rip+0x203a8]        # 228f8 <warms>
    2550:	test   r9d,r9d
    2553:	jle    2572 <main+0x72>
    2555:	xor    ebp,ebp
    2557:	nop    WORD PTR [rax+rax*1+0x0]
    2560:	xor    eax,eax
    2562:	add    ebp,0x1
    2565:	call   34b0 <update>
    256a:	cmp    DWORD PTR [rip+0x20388],ebp        # 228f8 <warms>
    2570:	jg     2560 <main+0x60>
    2572:	mov    r8d,DWORD PTR [rip+0x2036b]        # 228e4 <this_node>
    2579:	test   r8d,r8d
    257c:	je     26e0 <main+0x1e0>
    2582:	mov    rdi,QWORD PTR [rip+0x1fd57]        # 222e0 <stdout@@GLIBC_2.2.5>
    2589:	call   2420 <fflush@plt>
    258e:	mov    edi,DWORD PTR [rip+0x200ec]        # 22680 <trajecs>
    2594:	test   edi,edi
    2596:	jle    2740 <main+0x240>
    259c:	xor    r14d,r14d
    259f:	xor    ebp,ebp
    25a1:	jmp    25b5 <main+0xb5>
    25a3:	nop    DWORD PTR [rax+rax*1+0x0]
    25a8:	add    r14d,0x1
    25ac:	cmp    DWORD PTR [rip+0x200cd],r14d        # 22680 <trajecs>
    25b3:	jle    261e <main+0x11e>
    25b5:	xor    eax,eax
    25b7:	call   34b0 <update>
    25bc:	mov    ecx,DWORD PTR [rip+0x1fe1e]        # 223e0 <propinterval>
    25c2:	mov    r15d,eax
    25c5:	mov    eax,r14d
    25c8:	cdq    
    25c9:	idiv   ecx
    25cb:	sub    ecx,0x1
    25ce:	cmp    edx,ecx
    25d0:	jne    25a8 <main+0xa8>
    25d2:	xor    edi,edi
    25d4:	add    ebx,r15d
    25d7:	add    ebp,0x1
    25da:	add    r14d,0x1
    25de:	call   13de0 <rephase>
    25e3:	call   fac0 <g_measure>
    25e8:	mov    edi,0x1
    25ed:	call   13de0 <rephase>
    25f2:	mov    esi,0x4a0
    25f7:	mov    edi,0x410
    25fc:	movsd  xmm0,QWORD PTR [rip+0x202fc]        # 22900 <mass>
    2604:	call   2860 <f_meas_imp>
    2609:	mov    rdi,QWORD PTR [rip+0x1fcd0]        # 222e0 <stdout@@GLIBC_2.2.5>
    2610:	call   2420 <fflush@plt>
    2615:	cmp    DWORD PTR [rip+0x20064],r14d        # 22680 <trajecs>
    261c:	jg     25b5 <main+0xb5>
    261e:	mov    esi,DWORD PTR [rip+0x202c0]        # 228e4 <this_node>
    2624:	test   esi,esi
    2626:	je     26f0 <main+0x1f0>
    262c:	mov    rdi,QWORD PTR [rip+0x1fcad]        # 222e0 <stdout@@GLIBC_2.2.5>
    2633:	call   2420 <fflush@plt>
    2638:	test   ebp,ebp
    263a:	je     264a <main+0x14a>
    263c:	mov    ecx,DWORD PTR [rip+0x202a2]        # 228e4 <this_node>
    2642:	test   ecx,ecx
    2644:	je     2708 <main+0x208>
    264a:	xor    eax,eax
    264c:	call   194f0 <dclock>
    2651:	mov    edx,DWORD PTR [rip+0x2028d]        # 228e4 <this_node>
    2657:	test   edx,edx
    2659:	je     26c0 <main+0x1c0>
    265b:	mov    rdi,QWORD PTR [rip+0x1fc7e]        # 222e0 <stdout@@GLIBC_2.2.5>
    2662:	call   2420 <fflush@plt>
    2667:	cmp    DWORD PTR [rip+0x20272],0x14        # 228e0 <saveflag>
    266e:	je     2530 <main+0x30>
    2674:	xor    edi,edi
    2676:	call   13de0 <rephase>
    267b:	mov    edi,DWORD PTR [rip+0x2025f]        # 228e0 <saveflag>
    2681:	lea    rsi,[rip+0x20018]        # 226a0 <savefile>
    2688:	call   57c0 <save_lattice>
    268d:	mov    edi,0x1
    2692:	call   13de0 <rephase>
    2697:	mov    edi,r12d
    269a:	call   2fb0 <readin>
    269f:	mov    ebx,eax
    26a1:	test   eax,eax
    26a3:	je     2542 <main+0x42>
    26a9:	add    rsp,0x8
    26ad:	xor    eax,eax
    26af:	pop    rbx
    26b0:	pop    rbp
    26b1:	pop    r12
    26b3:	pop    r13
    26b5:	pop    r14
    26b7:	pop    r15
    26b9:	ret    
    26ba:	nop    WORD PTR [rax+rax*1+0x0]
    26c0:	mov    edx,DWORD PTR [rip+0x1fd26]        # 223ec <total_iters>
    26c6:	lea    rsi,[rip+0x1795b]        # 1a028 <_IO_stdin_used+0x28>
    26cd:	mov    edi,0x1
    26d2:	xor    eax,eax
    26d4:	call   2470 <__printf_chk@plt>
    26d9:	jmp    265b <main+0x15b>
    26db:	nop    DWORD PTR [rax+rax*1+0x0]
    26e0:	mov    rdi,r13
    26e3:	call   22f0 <puts@plt>
    26e8:	jmp    2582 <main+0x82>
    26ed:	nop    DWORD PTR [rax]
    26f0:	lea    rdi,[rip+0x1791f]        # 1a016 <_IO_stdin_used+0x16>
    26f7:	call   22f0 <puts@plt>
    26fc:	jmp    262c <main+0x12c>
    2701:	nop    DWORD PTR [rax+0x0]
    2708:	pxor   xmm0,xmm0
    270c:	pxor   xmm1,xmm1
    2710:	mov    edi,0x1
    2715:	mov    eax,0x1
    271a:	cvtsi2sd xmm0,ebx
    271e:	lea    rsi,[rip+0x17b03]        # 1a228 <_IO_stdin_used+0x228>
    2725:	cvtsi2sd xmm1,ebp
    2729:	divsd  xmm0,xmm1
    272d:	call   2470 <__printf_chk@plt>
    2732:	jmp    264a <main+0x14a>
    2737:	nop    WORD PTR [rax+rax*1+0x0]
    2740:	mov    eax,DWORD PTR [rip+0x2019e]        # 228e4 <this_node>
    2746:	test   eax,eax
    2748:	je     275b <main+0x25b>
    274a:	mov    rdi,QWORD PTR [rip+0x1fb8f]        # 222e0 <stdout@@GLIBC_2.2.5>
    2751:	call   2420 <fflush@plt>
    2756:	jmp    264a <main+0x14a>
    275b:	lea    rdi,[rip+0x178b4]        # 1a016 <_IO_stdin_used+0x16>
    2762:	call   22f0 <puts@plt>
    2767:	jmp    274a <main+0x24a>
    2769:	nop    DWORD PTR [rax+0x0]

0000000000002770 <_start>:
    2770:	endbr64 
    2774:	xor    ebp,ebp
    2776:	mov    r9,rdx
    2779:	pop    rsi
    277a:	mov    rdx,rsp
    277d:	and    rsp,0xfffffffffffffff0
    2781:	push   rax
    2782:	push   rsp
    2783:	lea    r8,[rip+0x176c6]        # 19e50 <__libc_csu_fini>
    278a:	lea    rcx,[rip+0x1764f]        # 19de0 <__libc_csu_init>
    2791:	lea    rdi,[rip+0xfffffffffffffd68]        # 2500 <main>
    2798:	call   QWORD PTR [rip+0x1f842]        # 21fe0 <__libc_start_main@GLIBC_2.2.5>
    279e:	hlt    
    279f:	nop

00000000000027a0 <deregister_tm_clones>:
    27a0:	lea    rdi,[rip+0x1fb21]        # 222c8 <__TMC_END__>
    27a7:	lea    rax,[rip+0x1fb1a]        # 222c8 <__TMC_END__>
    27ae:	cmp    rax,rdi
    27b1:	je     27c8 <deregister_tm_clones+0x28>
    27b3:	mov    rax,QWORD PTR [rip+0x1f81e]        # 21fd8 <_ITM_deregisterTMCloneTable>
    27ba:	test   rax,rax
    27bd:	je     27c8 <deregister_tm_clones+0x28>
    27bf:	jmp    rax
    27c1:	nop    DWORD PTR [rax+0x0]
    27c8:	ret    
    27c9:	nop    DWORD PTR [rax+0x0]

00000000000027d0 <register_tm_clones>:
    27d0:	lea    rdi,[rip+0x1faf1]        # 222c8 <__TMC_END__>
    27d7:	lea    rsi,[rip+0x1faea]        # 222c8 <__TMC_END__>
    27de:	sub    rsi,rdi
    27e1:	mov    rax,rsi
    27e4:	shr    rsi,0x3f
    27e8:	sar    rax,0x3
    27ec:	add    rsi,rax
    27ef:	sar    rsi,1
    27f2:	je     2808 <register_tm_clones+0x38>
    27f4:	mov    rax,QWORD PTR [rip+0x1f7f5]        # 21ff0 <_ITM_registerTMCloneTable>
    27fb:	test   rax,rax
    27fe:	je     2808 <register_tm_clones+0x38>
    2800:	jmp    rax
    2802:	nop    WORD PTR [rax+rax*1+0x0]
    2808:	ret    
    2809:	nop    DWORD PTR [rax+0x0]

0000000000002810 <__do_global_dtors_aux>:
    2810:	endbr64 
    2814:	cmp    BYTE PTR [rip+0x1faed],0x0        # 22308 <completed.8061>
    281b:	jne    2848 <__do_global_dtors_aux+0x38>
    281d:	push   rbp
    281e:	cmp    QWORD PTR [rip+0x1f7d2],0x0        # 21ff8 <__cxa_finalize@GLIBC_2.2.5>
    2826:	mov    rbp,rsp
    2829:	je     2837 <__do_global_dtors_aux+0x27>
    282b:	mov    rdi,QWORD PTR [rip+0x1f7d6]        # 22008 <__dso_handle>
    2832:	call   2290 <__cxa_finalize@plt>
    2837:	call   27a0 <deregister_tm_clones>
    283c:	mov    BYTE PTR [rip+0x1fac5],0x1        # 22308 <completed.8061>
    2843:	pop    rbp
    2844:	ret    
    2845:	nop    DWORD PTR [rax]
    2848:	ret    
    2849:	nop    DWORD PTR [rax+0x0]

0000000000002850 <frame_dummy>:
    2850:	endbr64 
    2854:	jmp    27d0 <register_tm_clones>
    2859:	nop    DWORD PTR [rax+0x0]

0000000000002860 <f_meas_imp>:
    2860:	endbr64 
    2864:	push   r15
    2866:	push   r14
    2868:	push   r13
    286a:	push   r12
    286c:	movsxd r12,edi
    286f:	push   rbp
    2870:	push   rbx
    2871:	sub    rsp,0x48
    2875:	mov    DWORD PTR [rsp+0x10],esi
    2879:	movsd  QWORD PTR [rsp+0x8],xmm0
    287f:	mov    rax,QWORD PTR fs:0x28
    2888:	mov    QWORD PTR [rsp+0x38],rax
    288d:	xor    eax,eax
    288f:	cmp    DWORD PTR [rip+0x1ff12],0x1        # 227a8 <valid_longlinks>
    2896:	je     289d <f_meas_imp+0x3d>
    2898:	call   11b30 <load_longlinks>
    289d:	cmp    DWORD PTR [rip+0x1ff94],0x1        # 22838 <valid_fatlinks>
    28a4:	je     28ad <f_meas_imp+0x4d>
    28a6:	xor    eax,eax
    28a8:	call   121d0 <load_fatlinks>
    28ad:	movsd  xmm0,QWORD PTR [rsp+0x8]
    28b3:	mov    esi,0x3
    28b8:	mov    edi,r12d
    28bb:	mov    QWORD PTR [rsp+0x30],0x0
    28c4:	mov    QWORD PTR [rsp+0x28],0x0
    28cd:	mov    QWORD PTR [rsp+0x20],0x0
    28d6:	call   fee0 <grsource_imp>
    28db:	mov    r15d,DWORD PTR [rsp+0x10]
    28e0:	movsd  xmm0,QWORD PTR [rsp+0x8]
    28e6:	mov    edx,r12d
    28e9:	mov    edi,0x500
    28ee:	mov    esi,r15d
    28f1:	call   10200 <mat_invert_uml>
    28f6:	mov    ebp,DWORD PTR [rip+0x1fd88]        # 22684 <even_sites_on_node>
    28fc:	mov    rbx,QWORD PTR [rip+0x1fec5]        # 227c8 <lattice>
    2903:	test   ebp,ebp
    2905:	jle    2975 <f_meas_imp+0x115>
    2907:	movsxd r13,r15d
    290a:	mov    r15d,0x500
    2910:	add    rbx,r12
    2913:	xor    r14d,r14d
    2916:	sub    r15,r12
    2919:	nop    DWORD PTR [rax+0x0]
    2920:	mov    rbp,r13
    2923:	mov    rdi,rbx
    2926:	add    r14d,0x1
    292a:	sub    rbp,r12
    292d:	add    rbp,rbx
    2930:	mov    rsi,rbp
    2933:	call   14a60 <su3_dot>
    2938:	addsd  xmm0,QWORD PTR [rsp+0x30]
    293e:	lea    rdi,[r15+rbx*1]
    2942:	mov    rsi,rbp
    2945:	add    rbx,0x800
    294c:	movsd  QWORD PTR [rsp+0x30],xmm0
    2952:	call   14a60 <su3_dot>
    2957:	addsd  xmm0,QWORD PTR [rsp+0x20]
    295d:	mov    ebp,DWORD PTR [rip+0x1fd21]        # 22684 <even_sites_on_node>
    2963:	movsd  QWORD PTR [rsp+0x20],xmm0
    2969:	cmp    ebp,r14d
    296c:	jg     2920 <f_meas_imp+0xc0>
    296e:	mov    rbx,QWORD PTR [rip+0x1fe53]        # 227c8 <lattice>
    2975:	movsxd rax,ebp
    2978:	shl    rax,0xb
    297c:	cmp    ebp,DWORD PTR [rip+0x1fb7e]        # 22500 <sites_on_node>
    2982:	jge    29ca <f_meas_imp+0x16a>
    2984:	movsxd r14,DWORD PTR [rsp+0x10]
    2989:	lea    rbx,[rbx+rax*1+0x500]
    2991:	lea    r12,[r14-0x500]
    2998:	nop    DWORD PTR [rax+rax*1+0x0]
    29a0:	lea    rsi,[r12+rbx*1]
    29a4:	mov    rdi,rbx
    29a7:	add    ebp,0x1
    29aa:	add    rbx,0x800
    29b1:	call   14a60 <su3_dot>
    29b6:	addsd  xmm0,QWORD PTR [rsp+0x28]
    29bc:	cmp    DWORD PTR [rip+0x1fb3e],ebp        # 22500 <sites_on_node>
    29c2:	movsd  QWORD PTR [rsp+0x28],xmm0
    29c8:	jg     29a0 <f_meas_imp+0x140>
    29ca:	lea    rdi,[rsp+0x28]
    29cf:	call   193f0 <g_doublesum>
    29d4:	lea    rdi,[rsp+0x20]
    29d9:	call   193f0 <g_doublesum>
    29de:	lea    rdi,[rsp+0x30]
    29e3:	call   193f0 <g_doublesum>
    29e8:	mov    edx,DWORD PTR [rip+0x1fef6]        # 228e4 <this_node>
    29ee:	test   edx,edx
    29f0:	je     2a18 <f_meas_imp+0x1b8>
    29f2:	mov    rax,QWORD PTR [rsp+0x38]
    29f7:	xor    rax,QWORD PTR fs:0x28
    2a00:	jne    2ac9 <f_meas_imp+0x269>
    2a06:	add    rsp,0x48
    2a0a:	pop    rbx
    2a0b:	pop    rbp
    2a0c:	pop    r12
    2a0e:	pop    r13
    2a10:	pop    r14
    2a12:	pop    r15
    2a14:	ret    
    2a15:	nop    DWORD PTR [rax]
    2a18:	pxor   xmm3,xmm3
    2a1c:	movsd  xmm1,QWORD PTR [rip+0x17874]        # 1a298 <_IO_stdin_used+0x298>
    2a24:	movsd  xmm2,QWORD PTR [rsp+0x28]
    2a2a:	mov    ecx,0x1
    2a2f:	movsd  xmm4,QWORD PTR [rsp+0x30]
    2a35:	movsd  xmm0,QWORD PTR [rsp+0x8]
    2a3b:	cvtsi2sd xmm3,DWORD PTR [rip+0x1f9ad]        # 223f0 <volume>
    2a43:	mov    edx,0x1
    2a48:	lea    rsi,[rip+0x177f9]        # 1a248 <_IO_stdin_used+0x248>
    2a4f:	mov    edi,0x1
    2a54:	mov    eax,0x3
    2a59:	movsd  QWORD PTR [rsp+0x10],xmm4
    2a5f:	divsd  xmm1,xmm3
    2a63:	movsd  QWORD PTR [rsp+0x18],xmm3
    2a69:	mulsd  xmm2,xmm1
    2a6d:	mulsd  xmm1,QWORD PTR [rsp+0x20]
    2a73:	call   2470 <__printf_chk@plt>
    2a78:	mov    eax,DWORD PTR [rip+0x1fe66]        # 228e4 <this_node>
    2a7e:	test   eax,eax
    2a80:	jne    29f2 <f_meas_imp+0x192>
    2a86:	movsd  xmm3,QWORD PTR [rsp+0x18]
    2a8c:	movsd  xmm0,QWORD PTR [rsp+0x8]
    2a92:	mov    ecx,0x1
    2a97:	mov    edx,0x1
    2a9c:	movsd  xmm1,QWORD PTR [rip+0x177fc]        # 1a2a0 <_IO_stdin_used+0x2a0>
    2aa4:	mov    edi,0x1
    2aa9:	mov    eax,0x2
    2aae:	lea    rsi,[rip+0x177bb]        # 1a270 <_IO_stdin_used+0x270>
    2ab5:	divsd  xmm1,xmm3
    2ab9:	mulsd  xmm1,QWORD PTR [rsp+0x10]
    2abf:	call   2470 <__printf_chk@plt>
    2ac4:	jmp    29f2 <f_meas_imp+0x192>
    2ac9:	call   2350 <__stack_chk_fail@plt>
    2ace:	xchg   ax,ax

0000000000002ad0 <write_appl_gauge_info>:
    2ad0:	endbr64 
    2ad4:	push   rbp
    2ad5:	xor    r9d,r9d
    2ad8:	mov    rbp,rdi
    2adb:	xor    r8d,r8d
    2ade:	lea    rcx,[rip+0x177c3]        # 1a2a8 <_IO_stdin_used+0x2a8>
    2ae5:	lea    rdx,[rip+0x177dc]        # 1a2c8 <_IO_stdin_used+0x2c8>
    2aec:	lea    rsi,[rip+0x1755d]        # 1a050 <_IO_stdin_used+0x50>
    2af3:	call   75c0 <write_gauge_info_item>
    2af8:	mov    rdi,rbp
    2afb:	xor    r9d,r9d
    2afe:	xor    r8d,r8d
    2b01:	lea    rcx,[rip+0x20178]        # 22c80 <gauge_action_description>
    2b08:	lea    rdx,[rip+0x177b9]        # 1a2c8 <_IO_stdin_used+0x2c8>
    2b0f:	lea    rsi,[rip+0x1754d]        # 1a063 <_IO_stdin_used+0x63>
    2b16:	call   75c0 <write_gauge_info_item>
    2b1b:	mov    rdi,rbp
    2b1e:	xor    r9d,r9d
    2b21:	xor    r8d,r8d
    2b24:	lea    rcx,[rip+0x1f661]        # 2218c <gauge_action_nloops>
    2b2b:	lea    rdx,[rip+0x18678]        # 1b1aa <_IO_stdin_used+0x11aa>
    2b32:	lea    rsi,[rip+0x17567]        # 1a0a0 <_IO_stdin_used+0xa0>
    2b39:	call   75c0 <write_gauge_info_item>
    2b3e:	mov    rdi,rbp
    2b41:	xor    r9d,r9d
    2b44:	xor    r8d,r8d
    2b47:	lea    rcx,[rip+0x1f63a]        # 22188 <gauge_action_nreps>
    2b4e:	lea    rdx,[rip+0x18655]        # 1b1aa <_IO_stdin_used+0x11aa>
    2b55:	lea    rsi,[rip+0x17551]        # 1a0ad <_IO_stdin_used+0xad>
    2b5c:	call   75c0 <write_gauge_info_item>
    2b61:	mov    rdi,rbp
    2b64:	xor    r9d,r9d
    2b67:	xor    r8d,r8d
    2b6a:	lea    rcx,[rip+0x1fc4f]        # 227c0 <beta>
    2b71:	lea    rdx,[rip+0x17753]        # 1a2cb <_IO_stdin_used+0x2cb>
    2b78:	lea    rsi,[rip+0x174f6]        # 1a075 <_IO_stdin_used+0x75>
    2b7f:	call   75c0 <write_gauge_info_item>
    2b84:	mov    rdi,rbp
    2b87:	xor    r9d,r9d
    2b8a:	xor    r8d,r8d
    2b8d:	lea    rcx,[rip+0x1fc1c]        # 227b0 <u0>
    2b94:	lea    rdx,[rip+0x17730]        # 1a2cb <_IO_stdin_used+0x2cb>
    2b9b:	lea    rsi,[rip+0x174ed]        # 1a08f <_IO_stdin_used+0x8f>
    2ba2:	call   75c0 <write_gauge_info_item>
    2ba7:	mov    rdi,rbp
    2baa:	xor    r9d,r9d
    2bad:	xor    r8d,r8d
    2bb0:	lea    rcx,[rip+0x1f589]        # 22140 <quark_action_description>
    2bb7:	lea    rdx,[rip+0x1770a]        # 1a2c8 <_IO_stdin_used+0x2c8>
    2bbe:	lea    rsi,[rip+0x175a6]        # 1a16b <_IO_stdin_used+0x16b>
    2bc5:	call   75c0 <write_gauge_info_item>
    2bca:	mov    rdi,rbp
    2bcd:	xor    r9d,r9d
    2bd0:	xor    r8d,r8d
    2bd3:	lea    rcx,[rip+0x1fd22]        # 228fc <nflavors>
    2bda:	lea    rdx,[rip+0x185c9]        # 1b1aa <_IO_stdin_used+0x11aa>
    2be1:	lea    rsi,[rip+0x17595]        # 1a17d <_IO_stdin_used+0x17d>
    2be8:	call   75c0 <write_gauge_info_item>
    2bed:	mov    rdi,rbp
    2bf0:	xor    r9d,r9d
    2bf3:	xor    r8d,r8d
    2bf6:	lea    rcx,[rip+0x1fd03]        # 22900 <mass>
    2bfd:	lea    rdx,[rip+0x176c7]        # 1a2cb <_IO_stdin_used+0x2cb>
    2c04:	pop    rbp
    2c05:	lea    rsi,[rip+0x1759d]        # 1a1a9 <_IO_stdin_used+0x1a9>
    2c0c:	jmp    75c0 <write_gauge_info_item>
    2c11:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2c1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002c20 <third_neighbor>:
    2c20:	endbr64 
    2c24:	push   rbp
    2c25:	mov    eax,0x7
    2c2a:	push   rbx
    2c2b:	sub    rsp,0x8
    2c2f:	mov    r8d,DWORD PTR [r8]
    2c32:	mov    rbp,QWORD PTR [rsp+0x20]
    2c37:	mov    rbx,QWORD PTR [rsp+0x28]
    2c3c:	sub    eax,r8d
    2c3f:	cmp    r9d,0x1
    2c43:	mov    r11,QWORD PTR [rsp+0x30]
    2c48:	mov    r10,QWORD PTR [rsp+0x38]
    2c4d:	cmovne r8,rax
    2c51:	mov    DWORD PTR [rbp+0x0],edi
    2c54:	mov    DWORD PTR [rbx],esi
    2c56:	mov    DWORD PTR [r11],edx
    2c59:	mov    DWORD PTR [r10],ecx
    2c5c:	cmp    r8d,0x7
    2c60:	ja     2d57 <third_neighbor+0x137>
    2c66:	lea    r9,[rip+0x177a7]        # 1a414 <_IO_stdin_used+0x414>
    2c6d:	movsxd rax,DWORD PTR [r9+r8*4]
    2c71:	add    rax,r9
    2c74:	notrack jmp rax
    2c77:	nop    WORD PTR [rax+rax*1+0x0]
    2c80:	mov    ecx,DWORD PTR [rip+0x1fbb6]        # 2283c <ny>
    2c86:	lea    eax,[rsi+rcx*4-0x3]
    2c8a:	cdq    
    2c8b:	idiv   ecx
    2c8d:	mov    DWORD PTR [rbx],edx
    2c8f:	add    rsp,0x8
    2c93:	pop    rbx
    2c94:	pop    rbp
    2c95:	ret    
    2c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2ca0:	mov    ecx,DWORD PTR [rip+0x1f732]        # 223d8 <nx>
    2ca6:	lea    eax,[rdi+rcx*4-0x3]
    2caa:	cdq    
    2cab:	idiv   ecx
    2cad:	mov    DWORD PTR [rbp+0x0],edx
    2cb0:	add    rsp,0x8
    2cb4:	pop    rbx
    2cb5:	pop    rbp
    2cb6:	ret    
    2cb7:	nop    WORD PTR [rax+rax*1+0x0]
    2cc0:	lea    eax,[rdi+0x3]
    2cc3:	cdq    
    2cc4:	idiv   DWORD PTR [rip+0x1f70e]        # 223d8 <nx>
    2cca:	mov    DWORD PTR [rbp+0x0],edx
    2ccd:	add    rsp,0x8
    2cd1:	pop    rbx
    2cd2:	pop    rbp
    2cd3:	ret    
    2cd4:	nop    DWORD PTR [rax+0x0]
    2cd8:	lea    eax,[rsi+0x3]
    2cdb:	cdq    
    2cdc:	idiv   DWORD PTR [rip+0x1fb5a]        # 2283c <ny>
    2ce2:	mov    DWORD PTR [rbx],edx
    2ce4:	add    rsp,0x8
    2ce8:	pop    rbx
    2ce9:	pop    rbp
    2cea:	ret    
    2ceb:	nop    DWORD PTR [rax+rax*1+0x0]
    2cf0:	lea    eax,[rdx+0x3]
    2cf3:	cdq    
    2cf4:	idiv   DWORD PTR [rip+0x1f6da]        # 223d4 <nz>
    2cfa:	mov    DWORD PTR [r11],edx
    2cfd:	add    rsp,0x8
    2d01:	pop    rbx
    2d02:	pop    rbp
    2d03:	ret    
    2d04:	nop    DWORD PTR [rax+0x0]
    2d08:	lea    eax,[rcx+0x3]
    2d0b:	cdq    
    2d0c:	idiv   DWORD PTR [rip+0x1f6be]        # 223d0 <nt>
    2d12:	mov    DWORD PTR [r10],edx
    2d15:	add    rsp,0x8
    2d19:	pop    rbx
    2d1a:	pop    rbp
    2d1b:	ret    
    2d1c:	nop    DWORD PTR [rax+0x0]
    2d20:	mov    esi,DWORD PTR [rip+0x1f6aa]        # 223d0 <nt>
    2d26:	lea    eax,[rcx+rsi*4-0x3]
    2d2a:	cdq    
    2d2b:	idiv   esi
    2d2d:	mov    DWORD PTR [r10],edx
    2d30:	add    rsp,0x8
    2d34:	pop    rbx
    2d35:	pop    rbp
    2d36:	ret    
    2d37:	nop    WORD PTR [rax+rax*1+0x0]
    2d40:	mov    ecx,DWORD PTR [rip+0x1f68e]        # 223d4 <nz>
    2d46:	lea    eax,[rdx+rcx*4-0x3]
    2d4a:	cdq    
    2d4b:	idiv   ecx
    2d4d:	mov    DWORD PTR [r11],edx
    2d50:	add    rsp,0x8
    2d54:	pop    rbx
    2d55:	pop    rbp
    2d56:	ret    
    2d57:	lea    rdi,[rip+0x17570]        # 1a2ce <_IO_stdin_used+0x2ce>
    2d5e:	call   22f0 <puts@plt>
    2d63:	mov    edi,0x1
    2d68:	call   24b0 <exit@plt>
    2d6d:	nop    DWORD PTR [rax]

0000000000002d70 <initial_set>:
    2d70:	endbr64 
    2d74:	push   r12
    2d76:	sub    rsp,0x10
    2d7a:	mov    rax,QWORD PTR fs:0x28
    2d83:	mov    QWORD PTR [rsp+0x8],rax
    2d88:	xor    eax,eax
    2d8a:	call   193b0 <mynode>
    2d8f:	test   eax,eax
    2d91:	je     2e68 <initial_set+0xf8>
    2d97:	mov    esi,0x280
    2d9c:	lea    rdi,[rip+0x1fb7d]        # 22920 <par_buf>
    2da3:	call   194c0 <broadcast_bytes>
    2da8:	mov    eax,DWORD PTR [rip+0x1fb72]        # 22920 <par_buf>
    2dae:	test   eax,eax
    2db0:	jne    2ee8 <initial_set+0x178>
    2db6:	mov    eax,DWORD PTR [rip+0x1fb68]        # 22924 <par_buf+0x4>
    2dbc:	mov    DWORD PTR [rip+0x1f616],eax        # 223d8 <nx>
    2dc2:	mov    eax,DWORD PTR [rip+0x1fb60]        # 22928 <par_buf+0x8>
    2dc8:	mov    DWORD PTR [rip+0x1fa6e],eax        # 2283c <ny>
    2dce:	mov    eax,DWORD PTR [rip+0x1fb58]        # 2292c <par_buf+0xc>
    2dd4:	mov    DWORD PTR [rip+0x1f5fa],eax        # 223d4 <nz>
    2dda:	mov    eax,DWORD PTR [rip+0x1fb50]        # 22930 <par_buf+0x10>
    2de0:	mov    DWORD PTR [rip+0x1f5ea],eax        # 223d0 <nt>
    2de6:	mov    eax,DWORD PTR [rip+0x1fb48]        # 22934 <par_buf+0x14>
    2dec:	mov    DWORD PTR [rip+0x1f71e],eax        # 22510 <iseed>
    2df2:	mov    eax,DWORD PTR [rip+0x1fb40]        # 22938 <par_buf+0x18>
    2df8:	mov    DWORD PTR [rip+0x1fafe],eax        # 228fc <nflavors>
    2dfe:	xor    eax,eax
    2e00:	call   193b0 <mynode>
    2e05:	mov    DWORD PTR [rip+0x1fad9],eax        # 228e4 <this_node>
    2e0b:	xor    eax,eax
    2e0d:	call   193c0 <numnodes>
    2e12:	mov    DWORD PTR [rip+0x1f5d0],0x0        # 223ec <total_iters>
    2e1c:	mov    DWORD PTR [rip+0x1f85a],eax        # 2267c <number_of_nodes>
    2e22:	mov    eax,DWORD PTR [rip+0x1f5b0]        # 223d8 <nx>
    2e28:	imul   eax,DWORD PTR [rip+0x1fa0d]        # 2283c <ny>
    2e2f:	imul   eax,DWORD PTR [rip+0x1f59e]        # 223d4 <nz>
    2e36:	imul   eax,DWORD PTR [rip+0x1f593]        # 223d0 <nt>
    2e3d:	mov    DWORD PTR [rip+0x1f5ad],eax        # 223f0 <volume>
    2e43:	mov    eax,DWORD PTR [rsp+0x4]
    2e47:	mov    rcx,QWORD PTR [rsp+0x8]
    2e4c:	xor    rcx,QWORD PTR fs:0x28
    2e55:	jne    2fa3 <initial_set+0x233>
    2e5b:	add    rsp,0x10
    2e5f:	pop    r12
    2e61:	ret    
    2e62:	nop    WORD PTR [rax+rax*1+0x0]
    2e68:	lea    rdi,[rip+0x1747b]        # 1a2ea <_IO_stdin_used+0x2ea>
    2e6f:	call   22f0 <puts@plt>
    2e74:	lea    rdi,[rip+0x175bd]        # 1a438 <_IO_stdin_used+0x438>
    2e7b:	call   22f0 <puts@plt>
    2e80:	lea    rdi,[rip+0x1747f]        # 1a306 <_IO_stdin_used+0x306>
    2e87:	call   22f0 <puts@plt>
    2e8c:	xor    eax,eax
    2e8e:	call   193c0 <numnodes>
    2e93:	mov    r12d,eax
    2e96:	xor    eax,eax
    2e98:	call   193a0 <machine_type>
    2e9d:	mov    ecx,r12d
    2ea0:	mov    edi,0x1
    2ea5:	lea    rsi,[rip+0x17469]        # 1a315 <_IO_stdin_used+0x315>
    2eac:	mov    rdx,rax
    2eaf:	xor    eax,eax
    2eb1:	call   2470 <__printf_chk@plt>
    2eb6:	lea    rdi,[rip+0x17475]        # 1a332 <_IO_stdin_used+0x332>
    2ebd:	call   22f0 <puts@plt>
    2ec2:	lea    rdi,[rsp+0x4]
    2ec7:	call   6940 <get_prompt>
    2ecc:	test   eax,eax
    2ece:	je     2ef8 <initial_set+0x188>
    2ed0:	test   eax,eax
    2ed2:	setg   al
    2ed5:	movzx  eax,al
    2ed8:	mov    DWORD PTR [rip+0x1fa42],eax        # 22920 <par_buf>
    2ede:	jmp    2d97 <initial_set+0x27>
    2ee3:	nop    DWORD PTR [rax+rax*1+0x0]
    2ee8:	xor    edi,edi
    2eea:	call   19bf0 <normal_exit>
    2eef:	jmp    2db6 <initial_set+0x46>
    2ef4:	nop    DWORD PTR [rax+0x0]
    2ef8:	mov    edi,DWORD PTR [rsp+0x4]
    2efc:	lea    rdx,[rip+0x1fa35]        # 22938 <par_buf+0x18>
    2f03:	lea    rsi,[rip+0x17434]        # 1a33e <_IO_stdin_used+0x33e>
    2f0a:	call   6540 <get_i>
    2f0f:	test   eax,eax
    2f11:	jne    2ed0 <initial_set+0x160>
    2f13:	mov    edi,DWORD PTR [rsp+0x4]
    2f17:	lea    rdx,[rip+0x1fa06]        # 22924 <par_buf+0x4>
    2f1e:	lea    rsi,[rip+0x17122]        # 1a047 <_IO_stdin_used+0x47>
    2f25:	call   6540 <get_i>
    2f2a:	test   eax,eax
    2f2c:	jne    2ed0 <initial_set+0x160>
    2f2e:	mov    edi,DWORD PTR [rsp+0x4]
    2f32:	lea    rdx,[rip+0x1f9ef]        # 22928 <par_buf+0x8>
    2f39:	lea    rsi,[rip+0x1710a]        # 1a04a <_IO_stdin_used+0x4a>
    2f40:	call   6540 <get_i>
    2f45:	test   eax,eax
    2f47:	jne    2ed0 <initial_set+0x160>
    2f49:	mov    edi,DWORD PTR [rsp+0x4]
    2f4d:	lea    rdx,[rip+0x1f9d8]        # 2292c <par_buf+0xc>
    2f54:	lea    rsi,[rip+0x170f2]        # 1a04d <_IO_stdin_used+0x4d>
    2f5b:	call   6540 <get_i>
    2f60:	test   eax,eax
    2f62:	jne    2ed0 <initial_set+0x160>
    2f68:	mov    edi,DWORD PTR [rsp+0x4]
    2f6c:	lea    rdx,[rip+0x1f9bd]        # 22930 <par_buf+0x10>
    2f73:	lea    rsi,[rip+0x1811f]        # 1b099 <_IO_stdin_used+0x1099>
    2f7a:	call   6540 <get_i>
    2f7f:	test   eax,eax
    2f81:	jne    2ed0 <initial_set+0x160>
    2f87:	mov    edi,DWORD PTR [rsp+0x4]
    2f8b:	lea    rdx,[rip+0x1f9a2]        # 22934 <par_buf+0x14>
    2f92:	lea    rsi,[rip+0x173ae]        # 1a347 <_IO_stdin_used+0x347>
    2f99:	call   6540 <get_i>
    2f9e:	jmp    2ed0 <initial_set+0x160>
    2fa3:	call   2350 <__stack_chk_fail@plt>
    2fa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002fb0 <readin>:
    2fb0:	endbr64 
    2fb4:	push   r12
    2fb6:	push   rbp
    2fb7:	sub    rsp,0x18
    2fbb:	mov    edx,DWORD PTR [rip+0x1f923]        # 228e4 <this_node>
    2fc1:	mov    rax,QWORD PTR fs:0x28
    2fca:	mov    QWORD PTR [rsp+0x8],rax
    2fcf:	xor    eax,eax
    2fd1:	test   edx,edx
    2fd3:	je     3150 <readin+0x1a0>
    2fd9:	mov    esi,0x280
    2fde:	lea    rdi,[rip+0x1f93b]        # 22920 <par_buf>
    2fe5:	call   194c0 <broadcast_bytes>
    2fea:	mov    eax,DWORD PTR [rip+0x1f930]        # 22920 <par_buf>
    2ff0:	test   eax,eax
    2ff2:	jne    3190 <readin+0x1e0>
    2ff8:	mov    eax,DWORD PTR [rip+0x1f93e]        # 2293c <par_buf+0x1c>
    2ffe:	mov    ebp,DWORD PTR [rip+0x1f990]        # 22994 <par_buf+0x74>
    3004:	mov    edx,0x100
    3009:	lea    rsi,[rip+0x1f98c]        # 2299c <par_buf+0x7c>
    3010:	movsd  xmm0,QWORD PTR [rip+0x1f958]        # 22970 <par_buf+0x50>
    3018:	lea    rdi,[rip+0x1f3e1]        # 22400 <startfile>
    301f:	mov    DWORD PTR [rip+0x1f8d3],eax        # 228f8 <warms>
    3025:	mov    eax,DWORD PTR [rip+0x1f915]        # 22940 <par_buf+0x20>
    302b:	movsd  QWORD PTR [rip+0x1f79d],xmm0        # 227d0 <rsqmin>
    3033:	movsd  xmm0,QWORD PTR [rip+0x1f93d]        # 22978 <par_buf+0x58>
    303b:	mov    DWORD PTR [rip+0x1f63f],eax        # 22680 <trajecs>
    3041:	mov    eax,DWORD PTR [rip+0x1f8fd]        # 22944 <par_buf+0x24>
    3047:	movsd  QWORD PTR [rip+0x1f379],xmm0        # 223c8 <rsqprop>
    304f:	movsd  xmm0,QWORD PTR [rip+0x1f929]        # 22980 <par_buf+0x60>
    3057:	mov    DWORD PTR [rip+0x1f38b],eax        # 223e8 <steps>
    305d:	mov    eax,DWORD PTR [rip+0x1f8e5]        # 22948 <par_buf+0x28>
    3063:	movsd  QWORD PTR [rip+0x1f885],xmm0        # 228f0 <epsilon>
    306b:	movsd  xmm0,QWORD PTR [rip+0x1f8dd]        # 22950 <par_buf+0x30>
    3073:	mov    DWORD PTR [rip+0x1f367],eax        # 223e0 <propinterval>
    3079:	mov    eax,DWORD PTR [rip+0x1f8e9]        # 22968 <par_buf+0x48>
    307f:	movsd  QWORD PTR [rip+0x1f739],xmm0        # 227c0 <beta>
    3087:	movsd  xmm0,QWORD PTR [rip+0x1f8c9]        # 22958 <par_buf+0x38>
    308f:	mov    DWORD PTR [rip+0x1f5f3],eax        # 22688 <niter>
    3095:	mov    eax,DWORD PTR [rip+0x1f8fd]        # 22998 <par_buf+0x78>
    309b:	movsd  QWORD PTR [rip+0x1f85d],xmm0        # 22900 <mass>
    30a3:	movsd  xmm0,QWORD PTR [rip+0x1f8b5]        # 22960 <par_buf+0x40>
    30ab:	mov    DWORD PTR [rip+0x1f6ef],ebp        # 227a0 <startflag>
    30b1:	mov    DWORD PTR [rip+0x1f829],eax        # 228e0 <saveflag>
    30b7:	movsd  QWORD PTR [rip+0x1f6f1],xmm0        # 227b0 <u0>
    30bf:	call   2460 <__strcpy_chk@plt>
    30c4:	mov    edx,0x100
    30c9:	lea    rsi,[rip+0x1f9cc]        # 22a9c <par_buf+0x17c>
    30d0:	lea    rdi,[rip+0x1f5c9]        # 226a0 <savefile>
    30d7:	call   2460 <__strcpy_chk@plt>
    30dc:	cmp    ebp,0xa
    30df:	je     31a0 <readin+0x1f0>
    30e5:	lea    rsi,[rip+0x1f314]        # 22400 <startfile>
    30ec:	mov    edi,ebp
    30ee:	call   5fc0 <reload_lattice>
    30f3:	mov    edi,0x1
    30f8:	mov    DWORD PTR [rip+0x1f6a6],0x0        # 227a8 <valid_longlinks>
    3102:	mov    QWORD PTR [rip+0x1f2b7],rax        # 223c0 <startlat_p>
    3109:	mov    DWORD PTR [rip+0x1f725],0x0        # 22838 <valid_fatlinks>
    3113:	mov    DWORD PTR [rip+0x1f2c7],0x0        # 223e4 <phases_in>
    311d:	call   13de0 <rephase>
    3122:	xor    eax,eax
    3124:	call   ee60 <make_loop_table>
    3129:	xor    eax,eax
    312b:	call   10a10 <make_path_table>
    3130:	mov    rax,QWORD PTR [rsp+0x8]
    3135:	xor    rax,QWORD PTR fs:0x28
    313e:	jne    3323 <readin+0x373>
    3144:	add    rsp,0x18
    3148:	xor    eax,eax
    314a:	pop    rbp
    314b:	pop    r12
    314d:	ret    
    314e:	xchg   ax,ax
    3150:	mov    ebp,edi
    3152:	lea    rdi,[rip+0x18060]        # 1b1b9 <_IO_stdin_used+0x11b9>
    3159:	call   22f0 <puts@plt>
    315e:	lea    rdx,[rip+0x1f7d7]        # 2293c <par_buf+0x1c>
    3165:	lea    rsi,[rip+0x171e1]        # 1a34d <_IO_stdin_used+0x34d>
    316c:	mov    edi,ebp
    316e:	call   6540 <get_i>
    3173:	test   eax,eax
    3175:	je     31b8 <readin+0x208>
    3177:	test   eax,eax
    3179:	setg   al
    317c:	movzx  eax,al
    317f:	mov    DWORD PTR [rip+0x1f79b],eax        # 22920 <par_buf>
    3185:	jmp    2fd9 <readin+0x29>
    318a:	nop    WORD PTR [rax+rax*1+0x0]
    3190:	xor    edi,edi
    3192:	call   19bf0 <normal_exit>
    3197:	jmp    2ff8 <readin+0x48>
    319c:	nop    DWORD PTR [rax+0x0]
    31a0:	xor    edi,edi
    31a2:	call   13de0 <rephase>
    31a7:	mov    ebp,DWORD PTR [rip+0x1f5f3]        # 227a0 <startflag>
    31ad:	jmp    30e5 <readin+0x135>
    31b2:	nop    WORD PTR [rax+rax*1+0x0]
    31b8:	lea    rdx,[rip+0x1f781]        # 22940 <par_buf+0x20>
    31bf:	lea    rsi,[rip+0x1718d]        # 1a353 <_IO_stdin_used+0x353>
    31c6:	mov    edi,ebp
    31c8:	call   6540 <get_i>
    31cd:	test   eax,eax
    31cf:	jne    3177 <readin+0x1c7>
    31d1:	lea    rdx,[rip+0x1f770]        # 22948 <par_buf+0x28>
    31d8:	lea    rsi,[rip+0x1717c]        # 1a35b <_IO_stdin_used+0x35b>
    31df:	mov    edi,ebp
    31e1:	call   6540 <get_i>
    31e6:	test   eax,eax
    31e8:	jne    3177 <readin+0x1c7>
    31ea:	lea    rdx,[rip+0x1f75f]        # 22950 <par_buf+0x30>
    31f1:	lea    rsi,[rip+0x17175]        # 1a36d <_IO_stdin_used+0x36d>
    31f8:	mov    edi,ebp
    31fa:	call   6330 <get_f>
    31ff:	test   eax,eax
    3201:	jne    3177 <readin+0x1c7>
    3207:	lea    rdx,[rip+0x1f74a]        # 22958 <par_buf+0x38>
    320e:	lea    rsi,[rip+0x16f9a]        # 1a1af <_IO_stdin_used+0x1af>
    3215:	mov    edi,ebp
    3217:	call   6330 <get_f>
    321c:	test   eax,eax
    321e:	jne    3177 <readin+0x1c7>
    3224:	lea    rdx,[rip+0x1f735]        # 22960 <par_buf+0x40>
    322b:	lea    rsi,[rip+0x16e6b]        # 1a09d <_IO_stdin_used+0x9d>
    3232:	mov    edi,ebp
    3234:	call   6330 <get_f>
    3239:	test   eax,eax
    323b:	jne    3177 <readin+0x1c7>
    3241:	lea    rdx,[rip+0x1f738]        # 22980 <par_buf+0x60>
    3248:	lea    rsi,[rip+0x17123]        # 1a372 <_IO_stdin_used+0x372>
    324f:	mov    edi,ebp
    3251:	call   6330 <get_f>
    3256:	test   eax,eax
    3258:	jne    3177 <readin+0x1c7>
    325e:	lea    rdx,[rip+0x1f6df]        # 22944 <par_buf+0x24>
    3265:	lea    rsi,[rip+0x1711f]        # 1a38b <_IO_stdin_used+0x38b>
    326c:	mov    edi,ebp
    326e:	call   6540 <get_i>
    3273:	test   eax,eax
    3275:	jne    3177 <readin+0x1c7>
    327b:	lea    rdx,[rip+0x1f6e6]        # 22968 <par_buf+0x48>
    3282:	lea    rsi,[rip+0x17117]        # 1a3a0 <_IO_stdin_used+0x3a0>
    3289:	mov    edi,ebp
    328b:	call   6540 <get_i>
    3290:	test   eax,eax
    3292:	jne    3177 <readin+0x1c7>
    3298:	mov    r12,rsp
    329b:	lea    rsi,[rip+0x17110]        # 1a3b2 <_IO_stdin_used+0x3b2>
    32a2:	mov    edi,ebp
    32a4:	mov    rdx,r12
    32a7:	call   6330 <get_f>
    32ac:	test   eax,eax
    32ae:	jne    3177 <readin+0x1c7>
    32b4:	movsd  xmm0,QWORD PTR [rsp]
    32b9:	mov    rdx,r12
    32bc:	lea    rsi,[rip+0x170fe]        # 1a3c1 <_IO_stdin_used+0x3c1>
    32c3:	mov    edi,ebp
    32c5:	mulsd  xmm0,xmm0
    32c9:	movsd  QWORD PTR [rip+0x1f69f],xmm0        # 22970 <par_buf+0x50>
    32d1:	call   6330 <get_f>
    32d6:	test   eax,eax
    32d8:	jne    3177 <readin+0x1c7>
    32de:	movsd  xmm0,QWORD PTR [rsp]
    32e3:	lea    rdx,[rip+0x1f6b2]        # 2299c <par_buf+0x7c>
    32ea:	mov    edi,ebp
    32ec:	lea    rsi,[rdx-0x8]
    32f0:	mulsd  xmm0,xmm0
    32f4:	movsd  QWORD PTR [rip+0x1f67c],xmm0        # 22978 <par_buf+0x58>
    32fc:	call   5950 <ask_starting_lattice>
    3301:	test   eax,eax
    3303:	jne    3177 <readin+0x1c7>
    3309:	lea    rdx,[rip+0x1f78c]        # 22a9c <par_buf+0x17c>
    3310:	mov    edi,ebp
    3312:	lea    rsi,[rdx-0x104]
    3319:	call   5bb0 <ask_ending_lattice>
    331e:	jmp    3177 <readin+0x1c7>
    3323:	call   2350 <__stack_chk_fail@plt>
    3328:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003330 <make_3n_gathers>:
    3330:	endbr64 
    3334:	push   rbp
    3335:	push   rbx
    3336:	lea    rbx,[rip+0xfffffffffffff8e3]        # 2c20 <third_neighbor>
    333d:	sub    rsp,0x18
    3341:	mov    rax,QWORD PTR fs:0x28
    334a:	mov    QWORD PTR [rsp+0x8],rax
    334f:	xor    eax,eax
    3351:	mov    DWORD PTR [rsp+0x4],0x0
    3359:	lea    rbp,[rsp+0x4]
    335e:	xchg   ax,ax
    3360:	mov    r8d,0x1
    3366:	xor    ecx,ecx
    3368:	mov    edx,0x1
    336d:	mov    rsi,rbp
    3370:	mov    rdi,rbx
    3373:	call   195c0 <make_gather>
    3378:	mov    eax,DWORD PTR [rsp+0x4]
    337c:	add    eax,0x1
    337f:	mov    DWORD PTR [rsp+0x4],eax
    3383:	cmp    eax,0x3
    3386:	jle    3360 <make_3n_gathers+0x30>
    3388:	mov    edi,0x8
    338d:	call   18de0 <sort_eight_neighborlists>
    3392:	mov    rax,QWORD PTR [rsp+0x8]
    3397:	xor    rax,QWORD PTR fs:0x28
    33a0:	jne    33a9 <make_3n_gathers+0x79>
    33a2:	add    rsp,0x18
    33a6:	pop    rbx
    33a7:	pop    rbp
    33a8:	ret    
    33a9:	call   2350 <__stack_chk_fail@plt>
    33ae:	xchg   ax,ax

00000000000033b0 <setup>:
    33b0:	endbr64 
    33b4:	push   r12
    33b6:	xor    eax,eax
    33b8:	call   2d70 <initial_set>
    33bd:	mov    r12d,eax
    33c0:	xor    eax,eax
    33c2:	call   193b0 <mynode>
    33c7:	mov    esi,DWORD PTR [rip+0x1f143]        # 22510 <iseed>
    33cd:	add    eax,DWORD PTR [rip+0x1f01d]        # 223f0 <volume>
    33d3:	lea    rdi,[rip+0x1f406]        # 227e0 <node_prn>
    33da:	mov    edx,eax
    33dc:	call   e170 <initialize_prn>
    33e1:	call   38a0 <setup_layout>
    33e6:	xor    eax,eax
    33e8:	call   d2c0 <make_lattice>
    33ed:	mov    esi,DWORD PTR [rip+0x1f4f1]        # 228e4 <this_node>
    33f3:	test   esi,esi
    33f5:	je     3460 <setup+0xb0>
    33f7:	mov    rdi,QWORD PTR [rip+0x1eee2]        # 222e0 <stdout@@GLIBC_2.2.5>
    33fe:	call   2420 <fflush@plt>
    3403:	xor    eax,eax
    3405:	call   19b50 <make_nn_gathers>
    340a:	mov    ecx,DWORD PTR [rip+0x1f4d4]        # 228e4 <this_node>
    3410:	test   ecx,ecx
    3412:	je     3490 <setup+0xe0>
    3414:	mov    rdi,QWORD PTR [rip+0x1eec5]        # 222e0 <stdout@@GLIBC_2.2.5>
    341b:	call   2420 <fflush@plt>
    3420:	xor    eax,eax
    3422:	call   3330 <make_3n_gathers>
    3427:	mov    edx,DWORD PTR [rip+0x1f4b7]        # 228e4 <this_node>
    342d:	test   edx,edx
    342f:	je     3480 <setup+0xd0>
    3431:	mov    rdi,QWORD PTR [rip+0x1eea8]        # 222e0 <stdout@@GLIBC_2.2.5>
    3438:	call   2420 <fflush@plt>
    343d:	xor    eax,eax
    343f:	call   13cf0 <phaseset>
    3444:	mov    eax,DWORD PTR [rip+0x1f49a]        # 228e4 <this_node>
    344a:	test   eax,eax
    344c:	je     3470 <setup+0xc0>
    344e:	mov    rdi,QWORD PTR [rip+0x1ee8b]        # 222e0 <stdout@@GLIBC_2.2.5>
    3455:	call   2420 <fflush@plt>
    345a:	mov    eax,r12d
    345d:	pop    r12
    345f:	ret    
    3460:	lea    rdi,[rip+0x16f6f]        # 1a3d6 <_IO_stdin_used+0x3d6>
    3467:	call   22f0 <puts@plt>
    346c:	jmp    33f7 <setup+0x47>
    346e:	xchg   ax,ax
    3470:	lea    rdi,[rip+0x16f8d]        # 1a404 <_IO_stdin_used+0x404>
    3477:	call   22f0 <puts@plt>
    347c:	jmp    344e <setup+0x9e>
    347e:	xchg   ax,ax
    3480:	lea    rdi,[rip+0x16f6c]        # 1a3f3 <_IO_stdin_used+0x3f3>
    3487:	call   22f0 <puts@plt>
    348c:	jmp    3431 <setup+0x81>
    348e:	xchg   ax,ax
    3490:	lea    rdi,[rip+0x16f4c]        # 1a3e3 <_IO_stdin_used+0x3e3>
    3497:	call   22f0 <puts@plt>
    349c:	jmp    3414 <setup+0x64>
    34a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
    34ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000034b0 <update>:
    34b0:	endbr64 
    34b4:	push   r12
    34b6:	push   rbp
    34b7:	xor    ebp,ebp
    34b9:	push   rbx
    34ba:	mov    ebx,0x1
    34bf:	sub    rsp,0x10
    34c3:	mov    rax,QWORD PTR fs:0x28
    34cc:	mov    QWORD PTR [rsp+0x8],rax
    34d1:	xor    eax,eax
    34d3:	mov    r12,rsp
    34d6:	call   e0f0 <ranmom>
    34db:	mov    eax,DWORD PTR [rip+0x1ef07]        # 223e8 <steps>
    34e1:	test   eax,eax
    34e3:	jle    35f8 <update+0x148>
    34e9:	nop    DWORD PTR [rax+0x0]
    34f0:	pxor   xmm0,xmm0
    34f4:	movsd  xmm2,QWORD PTR [rip+0x16f74]        # 1a470 <_IO_stdin_used+0x470>
    34fc:	add    ebx,0x1
    34ff:	cvtsi2sd xmm0,DWORD PTR [rip+0x1f3f5]        # 228fc <nflavors>
    3507:	mulsd  xmm0,QWORD PTR [rip+0x16f59]        # 1a468 <_IO_stdin_used+0x468>
    350f:	subsd  xmm2,xmm0
    3513:	movsd  xmm0,QWORD PTR [rip+0x1f3d5]        # 228f0 <epsilon>
    351b:	mulsd  xmm0,xmm2
    351f:	call   3670 <update_u>
    3524:	mov    esi,0x2
    3529:	mov    edi,0x410
    352e:	movsd  xmm0,QWORD PTR [rip+0x1f3ca]        # 22900 <mass>
    3536:	call   fee0 <grsource_imp>
    353b:	pxor   xmm0,xmm0
    353f:	cvtsi2sd xmm0,DWORD PTR [rip+0x1f3b5]        # 228fc <nflavors>
    3547:	mulsd  xmm0,QWORD PTR [rip+0x1f3a1]        # 228f0 <epsilon>
    354f:	mulsd  xmm0,QWORD PTR [rip+0x16f11]        # 1a468 <_IO_stdin_used+0x468>
    3557:	call   3670 <update_u>
    355c:	movsd  xmm1,QWORD PTR [rip+0x1f26c]        # 227d0 <rsqmin>
    3564:	mov    edx,DWORD PTR [rip+0x1f11e]        # 22688 <niter>
    356a:	mov    ecx,0x2
    356f:	movsd  xmm0,QWORD PTR [rip+0x1f389]        # 22900 <mass>
    3577:	mov    r8,r12
    357a:	mov    esi,0x4a0
    357f:	mov    edi,0x410
    3584:	call   17c10 <ks_congrad>
    3589:	movsd  xmm0,QWORD PTR [rip+0x1f35f]        # 228f0 <epsilon>
    3591:	add    ebp,eax
    3593:	call   3610 <update_h>
    3598:	movsd  xmm0,QWORD PTR [rip+0x16ed0]        # 1a470 <_IO_stdin_used+0x470>
    35a0:	mulsd  xmm0,QWORD PTR [rip+0x1f348]        # 228f0 <epsilon>
    35a8:	call   3670 <update_u>
    35ad:	xor    edi,edi
    35af:	call   13de0 <rephase>
    35b4:	call   eb90 <reunitarize>
    35b9:	mov    edi,0x1
    35be:	call   13de0 <rephase>
    35c3:	mov    ecx,DWORD PTR [rip+0x1ee1f]        # 223e8 <steps>
    35c9:	cmp    ecx,ebx
    35cb:	jge    34f0 <update+0x40>
    35d1:	test   ecx,ecx
    35d3:	jle    35f8 <update+0x148>
    35d5:	mov    eax,ebp
    35d7:	cdq    
    35d8:	idiv   ecx
    35da:	mov    rdx,QWORD PTR [rsp+0x8]
    35df:	xor    rdx,QWORD PTR fs:0x28
    35e8:	jne    35ff <update+0x14f>
    35ea:	add    rsp,0x10
    35ee:	pop    rbx
    35ef:	pop    rbp
    35f0:	pop    r12
    35f2:	ret    
    35f3:	nop    DWORD PTR [rax+rax*1+0x0]
    35f8:	mov    eax,0xffffff9d
    35fd:	jmp    35da <update+0x12a>
    35ff:	call   2350 <__stack_chk_fail@plt>
    3604:	nop    WORD PTR cs:[rax+rax*1+0x0]
    360e:	xchg   ax,ax

0000000000003610 <update_h>:
    3610:	endbr64 
    3614:	sub    rsp,0x18
    3618:	xor    edi,edi
    361a:	movsd  QWORD PTR [rsp+0x8],xmm0
    3620:	call   13de0 <rephase>
    3625:	movsd  xmm0,QWORD PTR [rsp+0x8]
    362b:	mov    edi,0x2b0
    3630:	call   f630 <imp_gauge_force>
    3635:	mov    edi,0x1
    363a:	call   13de0 <rephase>
    363f:	mov    esi,0x4a0
    3644:	mov    edi,0x4a0
    3649:	mov    edx,0x1
    364e:	call   164d0 <dslash_fn>
    3653:	mov    edi,DWORD PTR [rip+0x1f2a3]        # 228fc <nflavors>
    3659:	movsd  xmm0,QWORD PTR [rsp+0x8]
    365f:	mov    esi,0x4a0
    3664:	add    rsp,0x18
    3668:	jmp    12a90 <eo_fermion_force>
    366d:	nop    DWORD PTR [rax]

0000000000003670 <update_u>:
    3670:	endbr64 
    3674:	push   r15
    3676:	movapd xmm1,xmm0
    367a:	movapd xmm3,xmm0
    367e:	movapd xmm5,xmm0
    3682:	push   r14
    3684:	push   r13
    3686:	push   r12
    3688:	push   rbp
    3689:	push   rbx
    368a:	sub    rsp,0x208
    3691:	movsd  xmm2,QWORD PTR [rip+0x16dd7]        # 1a470 <_IO_stdin_used+0x470>
    3699:	movsd  xmm4,QWORD PTR [rip+0x16ddf]        # 1a480 <_IO_stdin_used+0x480>
    36a1:	divsd  xmm3,QWORD PTR [rip+0x16dcf]        # 1a478 <_IO_stdin_used+0x478>
    36a9:	movsd  QWORD PTR [rsp+0x30],xmm0
    36af:	divsd  xmm5,QWORD PTR [rip+0x16dd1]        # 1a488 <_IO_stdin_used+0x488>
    36b7:	divsd  xmm1,QWORD PTR [rip+0x16dd1]        # 1a490 <_IO_stdin_used+0x490>
    36bf:	mov    r14,QWORD PTR [rip+0x1f102]        # 227c8 <lattice>
    36c6:	mov    rax,QWORD PTR fs:0x28
    36cf:	mov    QWORD PTR [rsp+0x1f8],rax
    36d7:	xor    eax,eax
    36d9:	mulsd  xmm2,xmm0
    36dd:	mov    eax,DWORD PTR [rip+0x1ee1d]        # 22500 <sites_on_node>
    36e3:	movsd  QWORD PTR [rsp+0x10],xmm3
    36e9:	mulsd  xmm4,xmm0
    36ed:	movsd  QWORD PTR [rsp+0x20],xmm5
    36f3:	movsd  QWORD PTR [rsp+0x28],xmm1
    36f9:	movsd  QWORD PTR [rsp+0x8],xmm2
    36ff:	movsd  QWORD PTR [rsp+0x18],xmm4
    3705:	test   eax,eax
    3707:	jle    3858 <update_u+0x1e8>
    370d:	mov    DWORD PTR [rsp+0x3c],0x0
    3715:	add    r14,0x3f0
    371c:	lea    r13,[rsp+0x160]
    3724:	lea    rbp,[rsp+0x40]
    3729:	lea    rbx,[rsp+0xd0]
    3731:	nop    DWORD PTR [rax+0x0]
    3738:	lea    r15,[r14-0x140]
    373f:	lea    r12,[r14-0x380]
    3746:	mov    rdi,r15
    3749:	mov    rsi,r13
    374c:	add    r15,0x50
    3750:	call   14d10 <uncompress_anti_hermitian>
    3755:	mov    rsi,r12
    3758:	mov    rdx,rbp
    375b:	mov    rdi,r13
    375e:	call   14440 <mult_su3_nn>
    3763:	mov    rdi,r12
    3766:	mov    rdx,rbx
    3769:	mov    rsi,rbp
    376c:	movsd  xmm0,QWORD PTR [rsp+0x28]
    3772:	call   147d0 <scalar_mult_add_su3_matrix>
    3777:	mov    rdx,rbp
    377a:	mov    rsi,rbx
    377d:	mov    rdi,r13
    3780:	call   14440 <mult_su3_nn>
    3785:	mov    rdi,r12
    3788:	mov    rdx,rbx
    378b:	mov    rsi,rbp
    378e:	movsd  xmm0,QWORD PTR [rsp+0x20]
    3794:	call   147d0 <scalar_mult_add_su3_matrix>
    3799:	mov    rdx,rbp
    379c:	mov    rsi,rbx
    379f:	mov    rdi,r13
    37a2:	call   14440 <mult_su3_nn>
    37a7:	mov    rdi,r12
    37aa:	mov    rdx,rbx
    37ad:	mov    rsi,rbp
    37b0:	movsd  xmm0,QWORD PTR [rsp+0x18]
    37b6:	call   147d0 <scalar_mult_add_su3_matrix>
    37bb:	mov    rdx,rbp
    37be:	mov    rsi,rbx
    37c1:	mov    rdi,r13
    37c4:	call   14440 <mult_su3_nn>
    37c9:	mov    rdi,r12
    37cc:	mov    rdx,rbx
    37cf:	mov    rsi,rbp
    37d2:	movsd  xmm0,QWORD PTR [rsp+0x10]
    37d8:	call   147d0 <scalar_mult_add_su3_matrix>
    37dd:	mov    rdx,rbp
    37e0:	mov    rsi,rbx
    37e3:	mov    rdi,r13
    37e6:	call   14440 <mult_su3_nn>
    37eb:	mov    rdi,r12
    37ee:	mov    rdx,rbx
    37f1:	mov    rsi,rbp
    37f4:	movsd  xmm0,QWORD PTR [rsp+0x8]
    37fa:	call   147d0 <scalar_mult_add_su3_matrix>
    37ff:	mov    rdx,rbp
    3802:	mov    rsi,rbx
    3805:	mov    rdi,r13
    3808:	call   14440 <mult_su3_nn>
    380d:	mov    rdi,r12
    3810:	mov    rdx,rbx
    3813:	mov    rsi,rbp
    3816:	movsd  xmm0,QWORD PTR [rsp+0x30]
    381c:	call   147d0 <scalar_mult_add_su3_matrix>
    3821:	mov    rsi,r12
    3824:	mov    rdi,rbx
    3827:	add    r12,0x90
    382e:	call   14bf0 <su3mat_copy>
    3833:	cmp    r15,r14
    3836:	jne    3746 <update_u+0xd6>
    383c:	add    DWORD PTR [rsp+0x3c],0x1
    3841:	add    r14,0x800
    3848:	mov    eax,DWORD PTR [rsp+0x3c]
    384c:	cmp    DWORD PTR [rip+0x1ecae],eax        # 22500 <sites_on_node>
    3852:	jg     3738 <update_u+0xc8>
    3858:	mov    DWORD PTR [rip+0x1ef46],0x0        # 227a8 <valid_longlinks>
    3862:	mov    DWORD PTR [rip+0x1efcc],0x0        # 22838 <valid_fatlinks>
    386c:	mov    rax,QWORD PTR [rsp+0x1f8]
    3874:	xor    rax,QWORD PTR fs:0x28
    387d:	jne    3891 <update_u+0x221>
    387f:	add    rsp,0x208
    3886:	pop    rbx
    3887:	pop    rbp
    3888:	pop    r12
    388a:	pop    r13
    388c:	pop    r14
    388e:	pop    r15
    3890:	ret    
    3891:	call   2350 <__stack_chk_fail@plt>
    3896:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000038a0 <setup_layout>:
    38a0:	endbr64 
    38a4:	push   r13
    38a6:	xor    eax,eax
    38a8:	push   r12
    38aa:	push   rbp
    38ab:	push   rbx
    38ac:	sub    rsp,0x8
    38b0:	call   193b0 <mynode>
    38b5:	test   eax,eax
    38b7:	je     3a59 <setup_layout+0x1b9>
    38bd:	mov    eax,DWORD PTR [rip+0x1eb15]        # 223d8 <nx>
    38c3:	lea    r12,[rip+0x1f2f6]        # 22bc0 <squaresize>
    38ca:	mov    ebx,0x1
    38cf:	lea    rbp,[rip+0x1f2da]        # 22bb0 <nsquares>
    38d6:	lea    r13,[r12+0x10]
    38db:	mov    DWORD PTR [rip+0x1f2df],eax        # 22bc0 <squaresize>
    38e1:	mov    eax,DWORD PTR [rip+0x1ef55]        # 2283c <ny>
    38e7:	mov    DWORD PTR [rip+0x1f2d7],eax        # 22bc4 <squaresize+0x4>
    38ed:	mov    eax,DWORD PTR [rip+0x1eae1]        # 223d4 <nz>
    38f3:	mov    DWORD PTR [rip+0x1f2cf],eax        # 22bc8 <squaresize+0x8>
    38f9:	mov    eax,DWORD PTR [rip+0x1ead1]        # 223d0 <nt>
    38ff:	mov    DWORD PTR [rip+0x1f2c7],eax        # 22bcc <squaresize+0xc>
    3905:	movabs rax,0x100000001
    390f:	mov    QWORD PTR [rip+0x1f29a],rax        # 22bb0 <nsquares>
    3916:	mov    QWORD PTR [rip+0x1f29b],rax        # 22bb8 <nsquares+0x8>
    391d:	xor    eax,eax
    391f:	call   193c0 <numnodes>
    3924:	cmp    eax,ebx
    3926:	jle    39d1 <setup_layout+0x131>
    392c:	nop    DWORD PTR [rax+0x0]
    3930:	lea    rax,[rip+0x1f289]        # 22bc0 <squaresize>
    3937:	mov    edx,0x1
    393c:	mov    ecx,DWORD PTR [rax]
    393e:	cmp    ecx,edx
    3940:	jle    3948 <setup_layout+0xa8>
    3942:	test   cl,0x1
    3945:	cmove  edx,ecx
    3948:	add    rax,0x4
    394c:	cmp    r13,rax
    394f:	jne    393c <setup_layout+0x9c>
    3951:	xor    eax,eax
    3953:	movsxd rcx,eax
    3956:	cmp    DWORD PTR [r12+rax*4],edx
    395a:	je     3a30 <setup_layout+0x190>
    3960:	add    rax,0x1
    3964:	cmp    rax,0x4
    3968:	jne    3953 <setup_layout+0xb3>
    396a:	xor    eax,eax
    396c:	movsxd rcx,eax
    396f:	cmp    DWORD PTR [r12+rax*4],edx
    3973:	je     3a8c <setup_layout+0x1ec>
    3979:	add    rax,0x1
    397d:	cmp    rax,0x4
    3981:	jne    396c <setup_layout+0xcc>
    3983:	xor    eax,eax
    3985:	call   193b0 <mynode>
    398a:	test   eax,eax
    398c:	je     3a48 <setup_layout+0x1a8>
    3992:	mov    edi,0x1
    3997:	call   19570 <terminate>
    399c:	mov    edx,DWORD PTR [rip+0x1f22e]        # 22bd0 <sumvecp>
    39a2:	mov    esi,DWORD PTR [rip+0x1f218]        # 22bc0 <squaresize>
    39a8:	mov    ecx,0x4
    39ad:	mov    eax,edx
    39af:	add    esi,esi
    39b1:	add    ebx,ebx
    39b3:	shr    eax,0x1f
    39b6:	mov    DWORD PTR [rbp+rcx*4+0x0],esi
    39ba:	add    edx,eax
    39bc:	xor    eax,eax
    39be:	sar    edx,1
    39c0:	mov    DWORD PTR [r12+rcx*4],edx
    39c4:	call   193c0 <numnodes>
    39c9:	cmp    eax,ebx
    39cb:	jg     3930 <setup_layout+0x90>
    39d1:	mov    eax,DWORD PTR [rip+0x1f1e9]        # 22bc0 <squaresize>
    39d7:	imul   eax,DWORD PTR [rip+0x1f1e6]        # 22bc4 <squaresize+0x4>
    39de:	imul   eax,DWORD PTR [rip+0x1f1e3]        # 22bc8 <squaresize+0x8>
    39e5:	imul   eax,DWORD PTR [rip+0x1f1e0]        # 22bcc <squaresize+0xc>
    39ec:	mov    DWORD PTR [rip+0x1eb0e],eax        # 22500 <sites_on_node>
    39f2:	xor    eax,eax
    39f4:	call   193b0 <mynode>
    39f9:	mov    edx,DWORD PTR [rip+0x1eb01]        # 22500 <sites_on_node>
    39ff:	test   eax,eax
    3a01:	jne    3a0c <setup_layout+0x16c>
    3a03:	test   dl,0x1
    3a06:	jne    3a95 <setup_layout+0x1f5>
    3a0c:	mov    eax,edx
    3a0e:	shr    eax,0x1f
    3a11:	add    eax,edx
    3a13:	sar    eax,1
    3a15:	mov    DWORD PTR [rip+0x1ed89],eax        # 227a4 <odd_sites_on_node>
    3a1b:	mov    DWORD PTR [rip+0x1ec63],eax        # 22684 <even_sites_on_node>
    3a21:	add    rsp,0x8
    3a25:	pop    rbx
    3a26:	pop    rbp
    3a27:	pop    r12
    3a29:	pop    r13
    3a2b:	ret    
    3a2c:	nop    DWORD PTR [rax+0x0]
    3a30:	mov    esi,DWORD PTR [rbp+rax*4+0x0]
    3a34:	cmp    esi,0x1
    3a37:	jle    3960 <setup_layout+0xc0>
    3a3d:	jmp    39ad <setup_layout+0x10d>
    3a42:	nop    WORD PTR [rax+rax*1+0x0]
    3a48:	lea    rdi,[rip+0x16a69]        # 1a4b8 <_IO_stdin_used+0x4b8>
    3a4f:	call   22f0 <puts@plt>
    3a54:	jmp    3992 <setup_layout+0xf2>
    3a59:	lea    rsi,[rip+0x16a38]        # 1a498 <_IO_stdin_used+0x498>
    3a60:	mov    edi,0x1
    3a65:	call   2470 <__printf_chk@plt>
    3a6a:	lea    rsi,[rip+0x16aa9]        # 1a51a <_IO_stdin_used+0x51a>
    3a71:	mov    edi,0x1
    3a76:	xor    eax,eax
    3a78:	call   2470 <__printf_chk@plt>
    3a7d:	mov    edi,0xa
    3a82:	call   22b0 <putchar@plt>
    3a87:	jmp    38bd <setup_layout+0x1d>
    3a8c:	mov    esi,DWORD PTR [rbp+rcx*4+0x0]
    3a90:	jmp    39ad <setup_layout+0x10d>
    3a95:	lea    rdi,[rip+0x16a5c]        # 1a4f8 <_IO_stdin_used+0x4f8>
    3a9c:	call   22f0 <puts@plt>
    3aa1:	xor    edi,edi
    3aa3:	call   19570 <terminate>
    3aa8:	mov    edx,DWORD PTR [rip+0x1ea52]        # 22500 <sites_on_node>
    3aae:	jmp    3a0c <setup_layout+0x16c>
    3ab3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    3abe:	xchg   ax,ax

0000000000003ac0 <node_number>:
    3ac0:	endbr64 
    3ac4:	mov    eax,ecx
    3ac6:	lea    r8,[rip+0x1f0f3]        # 22bc0 <squaresize>
    3acd:	mov    r9d,edx
    3ad0:	mov    ecx,DWORD PTR [rip+0x1f0e2]        # 22bb8 <nsquares+0x8>
    3ad6:	cdq    
    3ad7:	idiv   DWORD PTR [r8+0xc]
    3adb:	imul   ecx,eax
    3ade:	mov    eax,r9d
    3ae1:	cdq    
    3ae2:	idiv   DWORD PTR [r8+0x8]
    3ae6:	add    ecx,eax
    3ae8:	imul   ecx,DWORD PTR [rip+0x1f0c5]        # 22bb4 <nsquares+0x4>
    3aef:	mov    eax,esi
    3af1:	cdq    
    3af2:	idiv   DWORD PTR [r8+0x4]
    3af6:	add    ecx,eax
    3af8:	imul   ecx,DWORD PTR [rip+0x1f0b1]        # 22bb0 <nsquares>
    3aff:	mov    eax,edi
    3b01:	cdq    
    3b02:	idiv   DWORD PTR [r8]
    3b05:	add    eax,ecx
    3b07:	ret    
    3b08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003b10 <node_index>:
    3b10:	endbr64 
    3b14:	mov    eax,ecx
    3b16:	mov    r9d,edx
    3b19:	push   rbx
    3b1a:	mov    ebx,DWORD PTR [rip+0x1f0a8]        # 22bc8 <squaresize+0x8>
    3b20:	cdq    
    3b21:	mov    r11d,DWORD PTR [rip+0x1f09c]        # 22bc4 <squaresize+0x4>
    3b28:	mov    r10d,DWORD PTR [rip+0x1f091]        # 22bc0 <squaresize>
    3b2f:	idiv   DWORD PTR [rip+0x1f097]        # 22bcc <squaresize+0xc>
    3b35:	mov    eax,r9d
    3b38:	mov    r8d,edx
    3b3b:	cdq    
    3b3c:	idiv   ebx
    3b3e:	imul   r8d,ebx
    3b42:	mov    eax,esi
    3b44:	add    r8d,edx
    3b47:	cdq    
    3b48:	idiv   r11d
    3b4b:	imul   r8d,r11d
    3b4f:	mov    eax,edi
    3b51:	add    edx,r8d
    3b54:	imul   edx,r10d
    3b58:	mov    r8d,edx
    3b5b:	cdq    
    3b5c:	idiv   r10d
    3b5f:	lea    eax,[rdi+rsi*1]
    3b62:	add    eax,r9d
    3b65:	add    eax,ecx
    3b67:	add    edx,r8d
    3b6a:	test   al,0x1
    3b6c:	je     3b74 <node_index+0x64>
    3b6e:	add    edx,DWORD PTR [rip+0x1e98c]        # 22500 <sites_on_node>
    3b74:	mov    eax,edx
    3b76:	pop    rbx
    3b77:	shr    eax,0x1f
    3b7a:	add    eax,edx
    3b7c:	sar    eax,1
    3b7e:	ret    
    3b7f:	nop

0000000000003b80 <num_sites>:
    3b80:	endbr64 
    3b84:	mov    eax,DWORD PTR [rip+0x1e976]        # 22500 <sites_on_node>
    3b8a:	ret    
    3b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003b90 <check_su3>:
    3b90:	endbr64 
    3b94:	push   rbp
    3b95:	pxor   xmm3,xmm3
    3b99:	lea    rbp,[rdi+0x90]
    3ba0:	push   rbx
    3ba1:	movapd xmm2,xmm3
    3ba5:	mov    rbx,rdi
    3ba8:	sub    rsp,0x28
    3bac:	movsd  xmm6,QWORD PTR [rip+0x166ec]        # 1a2a0 <_IO_stdin_used+0x2a0>
    3bb4:	movq   xmm5,QWORD PTR [rip+0x16a14]        # 1a5d0 <_IO_stdin_used+0x5d0>
    3bbc:	movsd  xmm1,QWORD PTR [rbx]
    3bc0:	movsd  xmm9,QWORD PTR [rbx+0x8]
    3bc6:	movsd  xmm0,QWORD PTR [rbx+0x10]
    3bcb:	movsd  xmm8,QWORD PTR [rbx+0x18]
    3bd1:	mulsd  xmm1,xmm1
    3bd5:	movsd  xmm7,QWORD PTR [rbx+0x20]
    3bda:	movsd  xmm4,QWORD PTR [rbx+0x28]
    3bdf:	mulsd  xmm9,xmm9
    3be4:	mulsd  xmm0,xmm0
    3be8:	mulsd  xmm7,xmm7
    3bec:	mulsd  xmm4,xmm4
    3bf0:	addsd  xmm1,xmm9
    3bf5:	addsd  xmm1,xmm0
    3bf9:	movapd xmm0,xmm8
    3bfe:	mulsd  xmm0,xmm8
    3c03:	addsd  xmm0,xmm1
    3c07:	addsd  xmm0,xmm7
    3c0b:	addsd  xmm0,xmm4
    3c0f:	ucomisd xmm3,xmm0
    3c13:	movapd xmm1,xmm0
    3c17:	sqrtsd xmm1,xmm1
    3c1b:	ja     3ed3 <check_su3+0x343>
    3c21:	subsd  xmm1,xmm6
    3c25:	add    rbx,0x30
    3c29:	andpd  xmm1,xmm5
    3c2d:	maxsd  xmm1,xmm2
    3c31:	movapd xmm2,xmm1
    3c35:	cmp    rbp,rbx
    3c38:	jne    3bbc <check_su3+0x2c>
    3c3a:	movsd  xmm1,QWORD PTR [rdi]
    3c3e:	movsd  xmm14,QWORD PTR [rdi+0x8]
    3c44:	movsd  xmm15,QWORD PTR [rdi+0x30]
    3c4a:	movsd  xmm6,QWORD PTR [rdi+0x38]
    3c4f:	movapd xmm4,xmm1
    3c53:	movapd xmm5,xmm14
    3c58:	movsd  xmm0,QWORD PTR [rdi+0x10]
    3c5d:	movsd  xmm9,QWORD PTR [rdi+0x40]
    3c63:	mulsd  xmm5,xmm6
    3c67:	movsd  xmm13,QWORD PTR [rdi+0x18]
    3c6d:	movsd  xmm7,QWORD PTR [rdi+0x50]
    3c72:	movsd  xmm10,QWORD PTR [rdi+0x48]
    3c78:	movsd  xmm12,QWORD PTR [rdi+0x20]
    3c7e:	mulsd  xmm6,xmm1
    3c82:	mulsd  xmm4,xmm15
    3c87:	movsd  xmm11,QWORD PTR [rdi+0x28]
    3c8d:	movsd  xmm8,QWORD PTR [rdi+0x58]
    3c93:	mulsd  xmm15,xmm14
    3c98:	addsd  xmm4,xmm5
    3c9c:	movapd xmm5,xmm0
    3ca0:	mulsd  xmm5,xmm9
    3ca5:	mulsd  xmm9,xmm13
    3caa:	addsd  xmm4,xmm5
    3cae:	movapd xmm5,xmm13
    3cb3:	mulsd  xmm5,xmm10
    3cb8:	mulsd  xmm10,xmm0
    3cbd:	addsd  xmm4,xmm5
    3cc1:	movapd xmm5,xmm12
    3cc6:	mulsd  xmm5,xmm7
    3cca:	mulsd  xmm7,xmm11
    3ccf:	addsd  xmm4,xmm5
    3cd3:	movapd xmm5,xmm11
    3cd8:	mulsd  xmm5,xmm8
    3cdd:	mulsd  xmm8,xmm12
    3ce2:	addsd  xmm4,xmm5
    3ce6:	movapd xmm5,xmm6
    3cea:	subsd  xmm5,xmm15
    3cef:	mulsd  xmm4,xmm4
    3cf3:	addsd  xmm5,xmm10
    3cf8:	subsd  xmm5,xmm9
    3cfd:	addsd  xmm5,xmm8
    3d02:	subsd  xmm5,xmm7
    3d06:	mulsd  xmm5,xmm5
    3d0a:	addsd  xmm5,xmm4
    3d0e:	ucomisd xmm3,xmm5
    3d12:	movapd xmm4,xmm5
    3d16:	sqrtsd xmm4,xmm4
    3d1a:	ja     3f8c <check_su3+0x3fc>
    3d20:	movsd  xmm8,QWORD PTR [rdi+0x60]
    3d26:	movsd  xmm9,QWORD PTR [rdi+0x68]
    3d2c:	maxsd  xmm4,xmm2
    3d30:	movsd  xmm6,QWORD PTR [rdi+0x70]
    3d35:	movsd  xmm7,QWORD PTR [rdi+0x78]
    3d3a:	movapd xmm10,xmm8
    3d3f:	movapd xmm15,xmm9
    3d44:	movsd  xmm5,QWORD PTR [rdi+0x88]
    3d4c:	mulsd  xmm15,xmm14
    3d51:	movapd xmm2,xmm4
    3d55:	movsd  xmm4,QWORD PTR [rdi+0x80]
    3d5d:	mulsd  xmm10,xmm1
    3d62:	mulsd  xmm14,xmm8
    3d67:	mulsd  xmm1,xmm9
    3d6c:	addsd  xmm10,xmm15
    3d71:	movapd xmm15,xmm6
    3d76:	mulsd  xmm15,xmm0
    3d7b:	mulsd  xmm0,xmm7
    3d7f:	subsd  xmm1,xmm14
    3d84:	addsd  xmm10,xmm15
    3d89:	movapd xmm15,xmm7
    3d8e:	mulsd  xmm15,xmm13
    3d93:	addsd  xmm0,xmm1
    3d97:	mulsd  xmm13,xmm6
    3d9c:	addsd  xmm10,xmm15
    3da1:	movapd xmm15,xmm4
    3da6:	mulsd  xmm15,xmm12
    3dab:	subsd  xmm0,xmm13
    3db0:	mulsd  xmm12,xmm5
    3db5:	addsd  xmm10,xmm15
    3dba:	movapd xmm15,xmm5
    3dbf:	mulsd  xmm15,xmm11
    3dc4:	addsd  xmm0,xmm12
    3dc9:	mulsd  xmm11,xmm4
    3dce:	addsd  xmm10,xmm15
    3dd3:	subsd  xmm0,xmm11
    3dd8:	mulsd  xmm10,xmm10
    3ddd:	mulsd  xmm0,xmm0
    3de1:	addsd  xmm0,xmm10
    3de6:	ucomisd xmm3,xmm0
    3dea:	movapd xmm1,xmm0
    3dee:	sqrtsd xmm1,xmm1
    3df2:	ja     3f36 <check_su3+0x3a6>
    3df8:	maxsd  xmm1,xmm2
    3dfc:	movsd  xmm14,QWORD PTR [rdi+0x38]
    3e02:	movsd  xmm13,QWORD PTR [rdi+0x40]
    3e08:	movsd  xmm12,QWORD PTR [rdi+0x48]
    3e0e:	movsd  xmm11,QWORD PTR [rdi+0x50]
    3e14:	movapd xmm15,xmm14
    3e19:	movsd  xmm10,QWORD PTR [rdi+0x58]
    3e1f:	mulsd  xmm15,xmm9
    3e24:	movapd xmm2,xmm1
    3e28:	movsd  xmm1,QWORD PTR [rdi+0x30]
    3e2d:	movapd xmm0,xmm1
    3e31:	mulsd  xmm0,xmm8
    3e36:	mulsd  xmm1,xmm9
    3e3b:	mulsd  xmm8,xmm14
    3e40:	addsd  xmm0,xmm15
    3e45:	movapd xmm15,xmm13
    3e4a:	mulsd  xmm15,xmm6
    3e4f:	subsd  xmm1,xmm8
    3e54:	mulsd  xmm6,xmm12
    3e59:	addsd  xmm0,xmm15
    3e5e:	movapd xmm15,xmm12
    3e63:	mulsd  xmm15,xmm7
    3e68:	mulsd  xmm7,xmm13
    3e6d:	addsd  xmm0,xmm15
    3e72:	movapd xmm15,xmm11
    3e77:	mulsd  xmm15,xmm4
    3e7c:	addsd  xmm7,xmm1
    3e80:	mulsd  xmm4,xmm10
    3e85:	subsd  xmm7,xmm6
    3e89:	addsd  xmm0,xmm15
    3e8e:	movapd xmm15,xmm10
    3e93:	mulsd  xmm15,xmm5
    3e98:	mulsd  xmm5,xmm11
    3e9d:	addsd  xmm0,xmm15
    3ea2:	addsd  xmm5,xmm7
    3ea6:	mulsd  xmm0,xmm0
    3eaa:	subsd  xmm5,xmm4
    3eae:	mulsd  xmm5,xmm5
    3eb2:	addsd  xmm0,xmm5
    3eb6:	ucomisd xmm3,xmm0
    3eba:	movapd xmm1,xmm0
    3ebe:	sqrtsd xmm1,xmm1
    3ec2:	ja     3f17 <check_su3+0x387>
    3ec4:	maxsd  xmm1,xmm2
    3ec8:	add    rsp,0x28
    3ecc:	pop    rbx
    3ecd:	pop    rbp
    3ece:	movapd xmm0,xmm1
    3ed2:	ret    
    3ed3:	mov    QWORD PTR [rsp+0x18],rdi
    3ed8:	movsd  QWORD PTR [rsp+0x10],xmm2
    3ede:	movsd  QWORD PTR [rsp+0x8],xmm1
    3ee4:	call   24e0 <sqrt@plt>
    3ee9:	mov    rax,QWORD PTR [rip+0x163b0]        # 1a2a0 <_IO_stdin_used+0x2a0>
    3ef0:	mov    rdi,QWORD PTR [rsp+0x18]
    3ef5:	pxor   xmm3,xmm3
    3ef9:	movq   xmm5,QWORD PTR [rip+0x166cf]        # 1a5d0 <_IO_stdin_used+0x5d0>
    3f01:	movsd  xmm2,QWORD PTR [rsp+0x10]
    3f07:	movsd  xmm1,QWORD PTR [rsp+0x8]
    3f0d:	movq   xmm6,rax
    3f12:	jmp    3c21 <check_su3+0x91>
    3f17:	movsd  QWORD PTR [rsp+0x10],xmm2
    3f1d:	movsd  QWORD PTR [rsp+0x8],xmm1
    3f23:	call   24e0 <sqrt@plt>
    3f28:	movsd  xmm2,QWORD PTR [rsp+0x10]
    3f2e:	movsd  xmm1,QWORD PTR [rsp+0x8]
    3f34:	jmp    3ec4 <check_su3+0x334>
    3f36:	mov    QWORD PTR [rsp+0x18],rdi
    3f3b:	movsd  QWORD PTR [rsp+0x10],xmm2
    3f41:	movsd  QWORD PTR [rsp+0x8],xmm1
    3f47:	call   24e0 <sqrt@plt>
    3f4c:	mov    rdi,QWORD PTR [rsp+0x18]
    3f51:	movsd  xmm2,QWORD PTR [rsp+0x10]
    3f57:	pxor   xmm3,xmm3
    3f5b:	movsd  xmm1,QWORD PTR [rsp+0x8]
    3f61:	movsd  xmm8,QWORD PTR [rdi+0x60]
    3f67:	movsd  xmm9,QWORD PTR [rdi+0x68]
    3f6d:	movsd  xmm6,QWORD PTR [rdi+0x70]
    3f72:	movsd  xmm7,QWORD PTR [rdi+0x78]
    3f77:	movsd  xmm4,QWORD PTR [rdi+0x80]
    3f7f:	movsd  xmm5,QWORD PTR [rdi+0x88]
    3f87:	jmp    3df8 <check_su3+0x268>
    3f8c:	movapd xmm0,xmm5
    3f90:	mov    QWORD PTR [rsp+0x18],rdi
    3f95:	movsd  QWORD PTR [rsp+0x10],xmm2
    3f9b:	movsd  QWORD PTR [rsp+0x8],xmm4
    3fa1:	call   24e0 <sqrt@plt>
    3fa6:	mov    rdi,QWORD PTR [rsp+0x18]
    3fab:	movsd  xmm2,QWORD PTR [rsp+0x10]
    3fb1:	pxor   xmm3,xmm3
    3fb5:	movsd  xmm4,QWORD PTR [rsp+0x8]
    3fbb:	movsd  xmm1,QWORD PTR [rdi]
    3fbf:	movsd  xmm14,QWORD PTR [rdi+0x8]
    3fc5:	movsd  xmm0,QWORD PTR [rdi+0x10]
    3fca:	movsd  xmm13,QWORD PTR [rdi+0x18]
    3fd0:	movsd  xmm12,QWORD PTR [rdi+0x20]
    3fd6:	movsd  xmm11,QWORD PTR [rdi+0x28]
    3fdc:	jmp    3d20 <check_su3+0x190>
    3fe1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    3fec:	nop    DWORD PTR [rax+0x0]

0000000000003ff0 <check_unitarity>:
    3ff0:	endbr64 
    3ff4:	push   r15
    3ff6:	push   r14
    3ff8:	push   r13
    3ffa:	push   r12
    3ffc:	push   rbp
    3ffd:	push   rbx
    3ffe:	sub    rsp,0x48
    4002:	mov    rax,QWORD PTR [rip+0x1e7bf]        # 227c8 <lattice>
    4009:	mov    QWORD PTR [rsp+0x38],rax
    400e:	mov    eax,DWORD PTR [rip+0x1e4ec]        # 22500 <sites_on_node>
    4014:	test   eax,eax
    4016:	jle    4276 <check_unitarity+0x286>
    401c:	movsd  xmm1,QWORD PTR [rip+0x165a4]        # 1a5c8 <_IO_stdin_used+0x5c8>
    4024:	mov    DWORD PTR [rsp+0x30],0x0
    402c:	lea    r13,[rip+0x16575]        # 1a5a8 <_IO_stdin_used+0x5a8>
    4033:	lea    r12,[rip+0x16581]        # 1a5bb <_IO_stdin_used+0x5bb>
    403a:	mov    QWORD PTR [rsp+0x10],0x0
    4043:	mov    QWORD PTR [rsp+0x8],0x0
    404c:	movsd  QWORD PTR [rsp+0x28],xmm1
    4052:	nop    WORD PTR [rax+rax*1+0x0]
    4058:	mov    rax,QWORD PTR [rsp+0x38]
    405d:	xor    ebx,ebx
    405f:	lea    rbp,[rax+0x70]
    4063:	mov    rdi,rbp
    4066:	call   3b90 <check_su3>
    406b:	comisd xmm0,QWORD PTR [rsp+0x28]
    4071:	movsd  QWORD PTR [rsp],xmm0
    4076:	ja     4140 <check_unitarity+0x150>
    407c:	movsd  xmm2,QWORD PTR [rsp]
    4081:	add    rbx,0x1
    4085:	add    rbp,0x90
    408c:	movapd xmm0,xmm2
    4090:	movapd xmm3,xmm2
    4094:	maxsd  xmm3,QWORD PTR [rsp+0x8]
    409a:	mulsd  xmm0,xmm2
    409e:	addsd  xmm0,QWORD PTR [rsp+0x10]
    40a4:	movsd  QWORD PTR [rsp+0x8],xmm3
    40aa:	movsd  QWORD PTR [rsp+0x10],xmm0
    40b0:	cmp    rbx,0x4
    40b4:	jne    4063 <check_unitarity+0x73>
    40b6:	add    DWORD PTR [rsp+0x30],0x1
    40bb:	mov    eax,DWORD PTR [rsp+0x30]
    40bf:	add    QWORD PTR [rsp+0x38],0x800
    40c8:	cmp    DWORD PTR [rip+0x1e432],eax        # 22500 <sites_on_node>
    40ce:	jg     4058 <check_unitarity+0x68>
    40d0:	shl    eax,0x2
    40d3:	pxor   xmm0,xmm0
    40d7:	movsd  xmm1,QWORD PTR [rsp+0x10]
    40dd:	cvtsi2sd xmm0,eax
    40e1:	divsd  xmm1,xmm0
    40e5:	movapd xmm0,xmm1
    40e9:	pxor   xmm1,xmm1
    40ed:	ucomisd xmm1,xmm0
    40f1:	ja     42a0 <check_unitarity+0x2b0>
    40f7:	movsd  xmm1,QWORD PTR [rsp+0x8]
    40fd:	comisd xmm1,QWORD PTR [rsp+0x28]
    4103:	jbe    412a <check_unitarity+0x13a>
    4105:	xor    eax,eax
    4107:	call   193b0 <mynode>
    410c:	movsd  xmm0,QWORD PTR [rsp+0x8]
    4112:	mov    edi,0x1
    4117:	lea    rsi,[rip+0x1644a]        # 1a568 <_IO_stdin_used+0x568>
    411e:	mov    edx,eax
    4120:	mov    eax,0x1
    4125:	call   2470 <__printf_chk@plt>
    412a:	movsd  xmm0,QWORD PTR [rsp+0x8]
    4130:	add    rsp,0x48
    4134:	pop    rbx
    4135:	pop    rbp
    4136:	pop    r12
    4138:	pop    r13
    413a:	pop    r14
    413c:	pop    r15
    413e:	ret    
    413f:	nop
    4140:	xor    eax,eax
    4142:	call   193b0 <mynode>
    4147:	movsd  xmm0,QWORD PTR [rsp]
    414c:	mov    ecx,DWORD PTR [rsp+0x30]
    4150:	mov    r8d,ebx
    4153:	mov    edx,eax
    4155:	lea    rsi,[rip+0x163cc]        # 1a528 <_IO_stdin_used+0x528>
    415c:	mov    edi,0x1
    4161:	mov    eax,0x1
    4166:	call   2470 <__printf_chk@plt>
    416b:	lea    rdi,[rip+0x1642a]        # 1a59c <_IO_stdin_used+0x59c>
    4172:	call   22f0 <puts@plt>
    4177:	lea    rax,[rbp-0x70]
    417b:	mov    DWORD PTR [rsp+0x34],0x3
    4183:	mov    QWORD PTR [rsp+0x18],rax
    4188:	mov    QWORD PTR [rsp+0x20],rax
    418d:	mov    r15,QWORD PTR [rsp+0x20]
    4192:	mov    r14d,0x3
    4198:	movsd  xmm0,QWORD PTR [r15+0x70]
    419e:	mov    rsi,r13
    41a1:	mov    edi,0x1
    41a6:	mov    eax,0x1
    41ab:	add    r15,0x10
    41af:	call   2470 <__printf_chk@plt>
    41b4:	movsd  xmm0,QWORD PTR [r15+0x68]
    41ba:	mov    rsi,r13
    41bd:	mov    edi,0x1
    41c2:	mov    eax,0x1
    41c7:	call   2470 <__printf_chk@plt>
    41cc:	sub    r14d,0x1
    41d0:	jne    4198 <check_unitarity+0x1a8>
    41d2:	mov    edi,0xa
    41d7:	call   22b0 <putchar@plt>
    41dc:	add    QWORD PTR [rsp+0x20],0x30
    41e2:	sub    DWORD PTR [rsp+0x34],0x1
    41e7:	jne    418d <check_unitarity+0x19d>
    41e9:	lea    rdi,[rip+0x163bc]        # 1a5ac <_IO_stdin_used+0x5ac>
    41f0:	call   22f0 <puts@plt>
    41f5:	mov    DWORD PTR [rsp+0x20],0x3
    41fd:	mov    r14,QWORD PTR [rsp+0x18]
    4202:	mov    r15d,0x3
    4208:	mov    edx,DWORD PTR [r14+0x70]
    420c:	mov    rsi,r12
    420f:	mov    edi,0x1
    4214:	xor    eax,eax
    4216:	add    r14,0x10
    421a:	call   2470 <__printf_chk@plt>
    421f:	mov    edx,DWORD PTR [r14+0x68]
    4223:	mov    rsi,r12
    4226:	xor    eax,eax
    4228:	mov    edi,0x1
    422d:	call   2470 <__printf_chk@plt>
    4232:	sub    r15d,0x1
    4236:	jne    4208 <check_unitarity+0x218>
    4238:	mov    edi,0xa
    423d:	call   22b0 <putchar@plt>
    4242:	add    QWORD PTR [rsp+0x18],0x30
    4248:	sub    DWORD PTR [rsp+0x20],0x1
    424d:	jne    41fd <check_unitarity+0x20d>
    424f:	lea    rdi,[rip+0x1636b]        # 1a5c1 <_IO_stdin_used+0x5c1>
    4256:	call   22f0 <puts@plt>
    425b:	mov    rdi,QWORD PTR [rip+0x1e07e]        # 222e0 <stdout@@GLIBC_2.2.5>
    4262:	call   2420 <fflush@plt>
    4267:	mov    edi,0x1
    426c:	call   19570 <terminate>
    4271:	jmp    407c <check_unitarity+0x8c>
    4276:	pxor   xmm1,xmm1
    427a:	movapd xmm0,xmm1
    427e:	movsd  QWORD PTR [rsp+0x8],xmm1
    4284:	divsd  xmm0,xmm1
    4288:	ucomisd xmm1,xmm0
    428c:	jbe    412a <check_unitarity+0x13a>
    4292:	movsd  xmm1,QWORD PTR [rip+0x1632e]        # 1a5c8 <_IO_stdin_used+0x5c8>
    429a:	movsd  QWORD PTR [rsp+0x28],xmm1
    42a0:	call   24e0 <sqrt@plt>
    42a5:	jmp    40f7 <check_unitarity+0x107>
    42aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000042b0 <d_plaquette>:
    42b0:	endbr64 
    42b4:	push   r15
    42b6:	push   r14
    42b8:	push   r13
    42ba:	push   r12
    42bc:	push   rbp
    42bd:	push   rbx
    42be:	sub    rsp,0x108
    42c5:	mov    QWORD PTR [rsp+0x40],rdi
    42ca:	movsxd rdi,DWORD PTR [rip+0x1e22f]        # 22500 <sites_on_node>
    42d1:	mov    QWORD PTR [rsp+0x48],rsi
    42d6:	mov    esi,0x90
    42db:	mov    rax,QWORD PTR fs:0x28
    42e4:	mov    QWORD PTR [rsp+0xf8],rax
    42ec:	xor    eax,eax
    42ee:	mov    QWORD PTR [rsp+0x58],0x0
    42f7:	mov    QWORD PTR [rsp+0x50],0x0
    4300:	call   23d0 <calloc@plt>
    4305:	mov    QWORD PTR [rsp+0x28],rax
    430a:	test   rax,rax
    430d:	je     4552 <d_plaquette+0x2a2>
    4313:	mov    QWORD PTR [rsp+0x38],0x90
    431c:	lea    r12,[rip+0x1e53d]        # 22860 <gen_pt>
    4323:	lea    r15,[rsp+0x60]
    4328:	mov    DWORD PTR [rsp+0xc],0x1
    4330:	mov    rbp,QWORD PTR [rsp+0x38]
    4335:	mov    DWORD PTR [rsp+0x8],0x0
    433d:	mov    QWORD PTR [rsp+0x20],0x70
    4346:	lea    rax,[rbp+0x70]
    434a:	mov    QWORD PTR [rsp+0x30],rax
    434f:	mov    r8,QWORD PTR [r12]
    4353:	mov    edx,DWORD PTR [rsp+0xc]
    4357:	mov    ecx,0x3
    435c:	xor    r14d,r14d
    435f:	mov    rbx,QWORD PTR [rsp+0x20]
    4364:	mov    esi,0x90
    4369:	mov    edi,ebx
    436b:	call   18f40 <start_gather>
    4370:	mov    edx,DWORD PTR [rsp+0x8]
    4374:	mov    edi,DWORD PTR [rsp+0x30]
    4378:	mov    ecx,0x3
    437d:	mov    r8,QWORD PTR [rip+0x1e4e4]        # 22868 <gen_pt+0x8>
    4384:	mov    esi,0x90
    4389:	mov    QWORD PTR [rsp+0x10],rax
    438e:	call   18f40 <start_gather>
    4393:	mov    edx,DWORD PTR [rip+0x1e167]        # 22500 <sites_on_node>
    4399:	mov    r13,QWORD PTR [rsp+0x28]
    439e:	mov    QWORD PTR [rsp+0x18],rax
    43a3:	add    rbx,QWORD PTR [rip+0x1e41e]        # 227c8 <lattice>
    43aa:	test   edx,edx
    43ac:	jle    43db <d_plaquette+0x12b>
    43ae:	xchg   ax,ax
    43b0:	lea    rsi,[rbp+rbx*1+0x0]
    43b5:	mov    rdx,r13
    43b8:	mov    rdi,rbx
    43bb:	add    r14d,0x1
    43bf:	call   140e0 <mult_su3_an>
    43c4:	add    rbx,0x800
    43cb:	add    r13,0x90
    43d2:	cmp    DWORD PTR [rip+0x1e127],r14d        # 22500 <sites_on_node>
    43d9:	jg     43b0 <d_plaquette+0x100>
    43db:	mov    rdi,QWORD PTR [rsp+0x10]
    43e0:	xor    r14d,r14d
    43e3:	call   19170 <wait_gather>
    43e8:	mov    rdi,QWORD PTR [rsp+0x18]
    43ed:	call   19170 <wait_gather>
    43f2:	mov    eax,DWORD PTR [rip+0x1e108]        # 22500 <sites_on_node>
    43f8:	mov    rbx,QWORD PTR [rsp+0x28]
    43fd:	mov    r13d,DWORD PTR [rsp+0xc]
    4402:	test   eax,eax
    4404:	jg     4435 <d_plaquette+0x185>
    4406:	jmp    4470 <d_plaquette+0x1c0>
    4408:	nop    DWORD PTR [rax+rax*1+0x0]
    4410:	call   14780 <realtrace_su3>
    4415:	addsd  xmm0,QWORD PTR [rsp+0x50]
    441b:	movsd  QWORD PTR [rsp+0x50],xmm0
    4421:	add    r14,0x1
    4425:	add    rbx,0x90
    442c:	cmp    DWORD PTR [rip+0x1e0cd],r14d        # 22500 <sites_on_node>
    4433:	jle    4470 <d_plaquette+0x1c0>
    4435:	mov    rax,QWORD PTR [r12]
    4439:	mov    rdi,rbx
    443c:	mov    rdx,r15
    443f:	mov    rsi,QWORD PTR [rax+r14*8]
    4443:	call   14440 <mult_su3_nn>
    4448:	mov    rax,QWORD PTR [rip+0x1e419]        # 22868 <gen_pt+0x8>
    444f:	mov    rsi,r15
    4452:	mov    rdi,QWORD PTR [rax+r14*8]
    4456:	cmp    r13d,0x3
    445a:	jne    4410 <d_plaquette+0x160>
    445c:	call   14780 <realtrace_su3>
    4461:	addsd  xmm0,QWORD PTR [rsp+0x58]
    4467:	movsd  QWORD PTR [rsp+0x58],xmm0
    446d:	jmp    4421 <d_plaquette+0x171>
    446f:	nop
    4470:	mov    rdi,QWORD PTR [rsp+0x10]
    4475:	sub    rbp,0x90
    447c:	call   19180 <cleanup_gather>
    4481:	mov    rdi,QWORD PTR [rsp+0x18]
    4486:	call   19180 <cleanup_gather>
    448b:	add    DWORD PTR [rsp+0x8],0x1
    4490:	mov    eax,DWORD PTR [rsp+0x8]
    4494:	add    QWORD PTR [rsp+0x20],0x90
    449d:	cmp    eax,DWORD PTR [rsp+0xc]
    44a1:	jne    434f <d_plaquette+0x9f>
    44a7:	add    QWORD PTR [rsp+0x38],0x90
    44b0:	mov    eax,DWORD PTR [rsp+0x8]
    44b4:	lea    ecx,[rax+0x1]
    44b7:	mov    DWORD PTR [rsp+0xc],ecx
    44bb:	cmp    eax,0x3
    44be:	jne    4330 <d_plaquette+0x80>
    44c4:	lea    rdi,[rsp+0x50]
    44c9:	call   193f0 <g_doublesum>
    44ce:	lea    rdi,[rsp+0x58]
    44d3:	call   193f0 <g_doublesum>
    44d8:	mov    eax,DWORD PTR [rip+0x1defa]        # 223d8 <nx>
    44de:	pxor   xmm0,xmm0
    44e2:	imul   eax,DWORD PTR [rip+0x1e353]        # 2283c <ny>
    44e9:	imul   eax,DWORD PTR [rip+0x1dee4]        # 223d4 <nz>
    44f0:	movsd  xmm1,QWORD PTR [rsp+0x50]
    44f6:	imul   eax,DWORD PTR [rip+0x1ded3]        # 223d0 <nt>
    44fd:	lea    eax,[rax+rax*2]
    4500:	cvtsi2sd xmm0,eax
    4504:	mov    rax,QWORD PTR [rsp+0x40]
    4509:	divsd  xmm1,xmm0
    450d:	movsd  QWORD PTR [rax],xmm1
    4511:	movsd  xmm1,QWORD PTR [rsp+0x58]
    4517:	mov    rax,QWORD PTR [rsp+0x48]
    451c:	divsd  xmm1,xmm0
    4520:	movsd  QWORD PTR [rax],xmm1
    4524:	mov    rax,QWORD PTR [rsp+0xf8]
    452c:	xor    rax,QWORD PTR fs:0x28
    4535:	jne    4579 <d_plaquette+0x2c9>
    4537:	mov    rdi,QWORD PTR [rsp+0x28]
    453c:	add    rsp,0x108
    4543:	pop    rbx
    4544:	pop    rbp
    4545:	pop    r12
    4547:	pop    r13
    4549:	pop    r14
    454b:	pop    r15
    454d:	jmp    22a0 <free@plt>
    4552:	lea    rdi,[rip+0x16087]        # 1a5e0 <_IO_stdin_used+0x5e0>
    4559:	call   22f0 <puts@plt>
    455e:	mov    rdi,QWORD PTR [rip+0x1dd7b]        # 222e0 <stdout@@GLIBC_2.2.5>
    4565:	call   2420 <fflush@plt>
    456a:	mov    edi,0x1
    456f:	call   19570 <terminate>
    4574:	jmp    4313 <d_plaquette+0x63>
    4579:	call   2350 <__stack_chk_fail@plt>
    457e:	xchg   ax,ax

0000000000004580 <accum_gauge_hit>:
    4580:	endbr64 
    4584:	push   r15
    4586:	push   r14
    4588:	push   r13
    458a:	push   r12
    458c:	push   rbp
    458d:	push   rbx
    458e:	mov    ebx,edi
    4590:	sub    rsp,0x28
    4594:	mov    DWORD PTR [rsp+0x18],esi
    4598:	cmp    esi,0x1
    459b:	je     490f <accum_gauge_hit+0x38f>
    45a1:	xor    r12d,r12d
    45a4:	xor    r14d,r14d
    45a7:	xor    eax,eax
    45a9:	lea    rbp,[rax+rax*2]
    45ad:	add    r12,QWORD PTR [rip+0x1e214]        # 227c8 <lattice>
    45b4:	shl    rbp,0x4
    45b8:	jmp    45ea <accum_gauge_hit+0x6a>
    45ba:	nop    WORD PTR [rax+rax*1+0x0]
    45c0:	add    rdi,r12
    45c3:	call   13f80 <clear_su3mat>
    45c8:	movsxd rdi,DWORD PTR [rip+0x1e609]        # 22bd8 <sumvec_offset>
    45cf:	test   edi,edi
    45d1:	js     462c <accum_gauge_hit+0xac>
    45d3:	add    rdi,r12
    45d6:	call   13fd0 <clearvec>
    45db:	add    r14d,0x1
    45df:	add    r12,0x800
    45e6:	add    rbp,0x30
    45ea:	mov    r13d,DWORD PTR [rip+0x1e093]        # 22684 <even_sites_on_node>
    45f1:	cmp    DWORD PTR [rsp+0x18],0x2
    45f6:	mov    eax,r13d
    45f9:	cmovne eax,DWORD PTR [rip+0x1df00]        # 22500 <sites_on_node>
    4600:	cmp    r14d,eax
    4603:	jge    4640 <accum_gauge_hit+0xc0>
    4605:	movsxd rdi,DWORD PTR [rip+0x1e5dc]        # 22be8 <diffmat_offset>
    460c:	test   edi,edi
    460e:	jns    45c0 <accum_gauge_hit+0x40>
    4610:	lea    rdi,[rbp+rbp*2+0x0]
    4615:	add    rdi,QWORD PTR [rip+0x1e5c4]        # 22be0 <diffmatp>
    461c:	call   13f80 <clear_su3mat>
    4621:	movsxd rdi,DWORD PTR [rip+0x1e5b0]        # 22bd8 <sumvec_offset>
    4628:	test   edi,edi
    462a:	jns    45d3 <accum_gauge_hit+0x53>
    462c:	mov    rdi,QWORD PTR [rip+0x1e59d]        # 22bd0 <sumvecp>
    4633:	add    rdi,rbp
    4636:	call   13fd0 <clearvec>
    463b:	jmp    45db <accum_gauge_hit+0x5b>
    463d:	nop    DWORD PTR [rax]
    4640:	cmp    DWORD PTR [rsp+0x18],0x1
    4645:	je     4939 <accum_gauge_hit+0x3b9>
    464b:	xor    ebp,ebp
    464d:	xor    r13d,r13d
    4650:	xor    eax,eax
    4652:	lea    r12,[rax+rax*2]
    4656:	add    rbp,QWORD PTR [rip+0x1e16b]        # 227c8 <lattice>
    465d:	shl    r12,0x4
    4661:	nop    DWORD PTR [rax+0x0]
    4668:	mov    r14d,DWORD PTR [rip+0x1e015]        # 22684 <even_sites_on_node>
    466f:	cmp    DWORD PTR [rsp+0x18],0x2
    4674:	mov    eax,r14d
    4677:	cmovne eax,DWORD PTR [rip+0x1de82]        # 22500 <sites_on_node>
    467e:	cmp    r13d,eax
    4681:	jge    4790 <accum_gauge_hit+0x210>
    4687:	lea    rax,[r12+r12*2]
    468b:	lea    r14,[rbp+0x70]
    468f:	xor    r15d,r15d
    4692:	mov    QWORD PTR [rsp+0x8],rax
    4697:	cmp    ebx,r15d
    469a:	je     4700 <accum_gauge_hit+0x180>
    469c:	movsxd rdi,DWORD PTR [rip+0x1e545]        # 22be8 <diffmat_offset>
    46a3:	test   edi,edi
    46a5:	js     4770 <accum_gauge_hit+0x1f0>
    46ab:	add    rdi,rbp
    46ae:	mov    rsi,r14
    46b1:	mov    rdx,rdi
    46b4:	call   14c50 <sub_su3_matrix>
    46b9:	mov    eax,DWORD PTR [rip+0x1e519]        # 22bd8 <sumvec_offset>
    46bf:	test   eax,eax
    46c1:	js     4728 <accum_gauge_hit+0x1a8>
    46c3:	movsxd rdx,eax
    46c6:	lea    rdi,[r14-0x70]
    46ca:	add    rdx,rbp
    46cd:	lea    rax,[rdx+0x8]
    46d1:	add    rdx,0x38
    46d5:	movsd  xmm0,QWORD PTR [rax-0x8]
    46da:	addsd  xmm0,QWORD PTR [rdi+0x70]
    46df:	add    rax,0x10
    46e3:	add    rdi,0x40
    46e7:	movsd  QWORD PTR [rax-0x18],xmm0
    46ec:	movsd  xmm0,QWORD PTR [rax-0x10]
    46f1:	addsd  xmm0,QWORD PTR [rdi+0x38]
    46f6:	movsd  QWORD PTR [rax-0x10],xmm0
    46fb:	cmp    rax,rdx
    46fe:	jne    46d5 <accum_gauge_hit+0x155>
    4700:	add    r15d,0x1
    4704:	add    r14,0x90
    470b:	cmp    r15d,0x4
    470f:	jne    4697 <accum_gauge_hit+0x117>
    4711:	add    r13d,0x1
    4715:	add    rbp,0x800
    471c:	add    r12,0x30
    4720:	jmp    4668 <accum_gauge_hit+0xe8>
    4725:	nop    DWORD PTR [rax]
    4728:	mov    rdi,QWORD PTR [rip+0x1e4a1]        # 22bd0 <sumvecp>
    472f:	lea    rdx,[r14-0x70]
    4733:	add    rdi,r12
    4736:	lea    rax,[rdi+0x8]
    473a:	add    rdi,0x38
    473e:	movsd  xmm0,QWORD PTR [rax-0x8]
    4743:	addsd  xmm0,QWORD PTR [rdx+0x70]
    4748:	add    rax,0x10
    474c:	add    rdx,0x40
    4750:	movsd  QWORD PTR [rax-0x18],xmm0
    4755:	movsd  xmm0,QWORD PTR [rax-0x10]
    475a:	addsd  xmm0,QWORD PTR [rdx+0x38]
    475f:	movsd  QWORD PTR [rax-0x10],xmm0
    4764:	cmp    rax,rdi
    4767:	jne    473e <accum_gauge_hit+0x1be>
    4769:	jmp    4700 <accum_gauge_hit+0x180>
    476b:	nop    DWORD PTR [rax+rax*1+0x0]
    4770:	mov    rdi,QWORD PTR [rsp+0x8]
    4775:	add    rdi,QWORD PTR [rip+0x1e464]        # 22be0 <diffmatp>
    477c:	mov    rsi,r14
    477f:	mov    rdx,rdi
    4782:	call   14c50 <sub_su3_matrix>
    4787:	jmp    46b9 <accum_gauge_hit+0x139>
    478c:	nop    DWORD PTR [rax+0x0]
    4790:	cmp    DWORD PTR [rsp+0x18],0x1
    4795:	je     4925 <accum_gauge_hit+0x3a5>
    479b:	mov    DWORD PTR [rsp+0x1c],0x0
    47a3:	xor    ebp,ebp
    47a5:	xor    r12d,r12d
    47a8:	add    rbp,QWORD PTR [rip+0x1e019]        # 227c8 <lattice>
    47af:	lea    r13,[r12+r12*2]
    47b3:	lea    r14,[rip+0x1e0a6]        # 22860 <gen_pt>
    47ba:	shl    r12,0x3
    47be:	mov    QWORD PTR [rsp+0x8],rbp
    47c3:	shl    r13,0x4
    47c7:	nop    WORD PTR [rax+rax*1+0x0]
    47d0:	mov    eax,DWORD PTR [rip+0x1deae]        # 22684 <even_sites_on_node>
    47d6:	cmp    DWORD PTR [rsp+0x18],0x2
    47db:	cmovne eax,DWORD PTR [rip+0x1dd1e]        # 22500 <sites_on_node>
    47e2:	cmp    DWORD PTR [rsp+0x1c],eax
    47e6:	jge    4900 <accum_gauge_hit+0x380>
    47ec:	lea    rax,[r13+r13*2+0x0]
    47f1:	xor    r15d,r15d
    47f4:	mov    QWORD PTR [rsp+0x10],rax
    47f9:	cmp    ebx,r15d
    47fc:	je     4863 <accum_gauge_hit+0x2e3>
    47fe:	mov    rax,QWORD PTR [r14+r15*8]
    4802:	movsxd rdi,DWORD PTR [rip+0x1e3df]        # 22be8 <diffmat_offset>
    4809:	mov    rbp,QWORD PTR [rax+r12*1]
    480d:	test   edi,edi
    480f:	js     48e0 <accum_gauge_hit+0x360>
    4815:	add    rdi,QWORD PTR [rsp+0x8]
    481a:	mov    rsi,rbp
    481d:	mov    rdx,rdi
    4820:	call   13ef0 <add_su3_matrix>
    4825:	movsxd rdx,DWORD PTR [rip+0x1e3ac]        # 22bd8 <sumvec_offset>
    482c:	test   edx,edx
    482e:	js     4890 <accum_gauge_hit+0x310>
    4830:	add    rdx,QWORD PTR [rsp+0x8]
    4835:	xor    eax,eax
    4837:	movsd  xmm0,QWORD PTR [rdx+rax*1]
    483c:	addsd  xmm0,QWORD PTR [rbp+rax*4+0x0]
    4842:	movsd  QWORD PTR [rdx+rax*1],xmm0
    4847:	movsd  xmm0,QWORD PTR [rdx+rax*1+0x8]
    484d:	addsd  xmm0,QWORD PTR [rbp+rax*4+0x8]
    4853:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm0
    4859:	add    rax,0x10
    485d:	cmp    rax,0x30
    4861:	jne    4837 <accum_gauge_hit+0x2b7>
    4863:	add    r15,0x1
    4867:	cmp    r15,0x4
    486b:	jne    47f9 <accum_gauge_hit+0x279>
    486d:	add    DWORD PTR [rsp+0x1c],0x1
    4872:	add    r13,0x30
    4876:	add    r12,0x8
    487a:	add    QWORD PTR [rsp+0x8],0x800
    4883:	jmp    47d0 <accum_gauge_hit+0x250>
    4888:	nop    DWORD PTR [rax+rax*1+0x0]
    4890:	mov    rdx,QWORD PTR [rip+0x1e339]        # 22bd0 <sumvecp>
    4897:	xor    eax,eax
    4899:	add    rdx,r13
    489c:	movsd  xmm0,QWORD PTR [rdx+rax*1]
    48a1:	addsd  xmm0,QWORD PTR [rbp+rax*4+0x0]
    48a7:	movsd  QWORD PTR [rdx+rax*1],xmm0
    48ac:	movsd  xmm0,QWORD PTR [rdx+rax*1+0x8]
    48b2:	addsd  xmm0,QWORD PTR [rbp+rax*4+0x8]
    48b8:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm0
    48be:	add    rax,0x10
    48c2:	cmp    rax,0x30
    48c6:	jne    489c <accum_gauge_hit+0x31c>
    48c8:	add    r15,0x1
    48cc:	cmp    r15,0x4
    48d0:	jne    47f9 <accum_gauge_hit+0x279>
    48d6:	jmp    486d <accum_gauge_hit+0x2ed>
    48d8:	nop    DWORD PTR [rax+rax*1+0x0]
    48e0:	mov    rdi,QWORD PTR [rsp+0x10]
    48e5:	add    rdi,QWORD PTR [rip+0x1e2f4]        # 22be0 <diffmatp>
    48ec:	mov    rsi,rbp
    48ef:	mov    rdx,rdi
    48f2:	call   13ef0 <add_su3_matrix>
    48f7:	jmp    4825 <accum_gauge_hit+0x2a5>
    48fc:	nop    DWORD PTR [rax+0x0]
    4900:	add    rsp,0x28
    4904:	pop    rbx
    4905:	pop    rbp
    4906:	pop    r12
    4908:	pop    r13
    490a:	pop    r14
    490c:	pop    r15
    490e:	ret    
    490f:	movsxd rax,DWORD PTR [rip+0x1dd6e]        # 22684 <even_sites_on_node>
    4916:	mov    r12,rax
    4919:	mov    r14,rax
    491c:	shl    r12,0xb
    4920:	jmp    45a9 <accum_gauge_hit+0x29>
    4925:	movsxd r12,r14d
    4928:	mov    rbp,r12
    492b:	mov    DWORD PTR [rsp+0x1c],r12d
    4930:	shl    rbp,0xb
    4934:	jmp    47a8 <accum_gauge_hit+0x228>
    4939:	movsxd rax,r13d
    493c:	mov    rbp,rax
    493f:	shl    rbp,0xb
    4943:	jmp    4652 <accum_gauge_hit+0xd2>
    4948:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004950 <do_hit>:
    4950:	endbr64 
    4954:	push   r15
    4956:	push   r14
    4958:	mov    r14d,esi
    495b:	push   r13
    495d:	mov    r13d,ecx
    4960:	push   r12
    4962:	mov    r12d,edx
    4965:	push   rbp
    4966:	push   rbx
    4967:	sub    rsp,0x198
    496e:	mov    rax,QWORD PTR [rsp+0x1d0]
    4976:	mov    DWORD PTR [rsp+0x5c],r8d
    497b:	mov    QWORD PTR [rsp+0x78],r9
    4980:	mov    QWORD PTR [rsp+0x60],rax
    4985:	mov    rax,QWORD PTR [rsp+0x1e0]
    498d:	movsd  QWORD PTR [rsp+0x70],xmm0
    4993:	mov    QWORD PTR [rsp+0x80],rax
    499b:	mov    rax,QWORD PTR [rsp+0x1e8]
    49a3:	mov    QWORD PTR [rsp+0x68],rax
    49a8:	mov    rax,QWORD PTR fs:0x28
    49b1:	mov    QWORD PTR [rsp+0x188],rax
    49b9:	xor    eax,eax
    49bb:	call   4580 <accum_gauge_hit>
    49c0:	cmp    r14d,0x1
    49c4:	je     4ed1 <do_hit+0x581>
    49ca:	mov    DWORD PTR [rsp+0x58],0x0
    49d2:	xor    eax,eax
    49d4:	xor    edx,edx
    49d6:	movsxd rcx,r13d
    49d9:	add    rax,QWORD PTR [rip+0x1dde8]        # 227c8 <lattice>
    49e0:	mov    rdi,rcx
    49e3:	add    rax,0x2b0
    49e9:	mov    QWORD PTR [rsp+0x38],rcx
    49ee:	shl    rdi,0x4
    49f2:	mov    QWORD PTR [rsp+0x28],rax
    49f7:	mov    eax,DWORD PTR [rsp+0x5c]
    49fb:	mov    QWORD PTR [rsp+0x90],rdi
    4a03:	movsxd rdi,r12d
    4a06:	mov    rbx,rdi
    4a09:	sub    eax,0x1
    4a0c:	mov    QWORD PTR [rsp+0x30],rdi
    4a11:	shl    rbx,0x4
    4a15:	mov    QWORD PTR [rsp+0x20],rbx
    4a1a:	lea    rbx,[rdx*8+0x0]
    4a22:	mov    QWORD PTR [rsp+0x18],rbx
    4a27:	mov    rbx,QWORD PTR [rsp+0x60]
    4a2c:	lea    rax,[rbx+rax*4+0x4]
    4a31:	mov    rbx,QWORD PTR [rsp+0x68]
    4a36:	mov    QWORD PTR [rsp+0x98],rax
    4a3e:	mov    eax,DWORD PTR [rsp+0x1d8]
    4a45:	sub    eax,0x1
    4a48:	lea    rax,[rbx+rax*4+0x4]
    4a4d:	mov    QWORD PTR [rsp+0x8],rax
    4a52:	lea    rax,[rcx+rcx*2]
    4a56:	add    rax,rdi
    4a59:	mov    QWORD PTR [rsp+0x88],rax
    4a61:	nop    DWORD PTR [rax+0x0]
    4a68:	mov    rax,QWORD PTR [rsp+0x28]
    4a6d:	sub    rax,0x2b0
    4a73:	cmp    r14d,0x2
    4a77:	mov    QWORD PTR [rsp],rax
    4a7b:	mov    eax,DWORD PTR [rip+0x1dc03]        # 22684 <even_sites_on_node>
    4a81:	cmovne eax,DWORD PTR [rip+0x1da78]        # 22500 <sites_on_node>
    4a88:	cmp    DWORD PTR [rsp+0x58],eax
    4a8c:	jge    4ea8 <do_hit+0x558>
    4a92:	movsxd rax,DWORD PTR [rip+0x1e13f]        # 22bd8 <sumvec_offset>
    4a99:	test   eax,eax
    4a9b:	js     4e88 <do_hit+0x538>
    4aa1:	add    rax,QWORD PTR [rsp]
    4aa5:	mov    rcx,QWORD PTR [rsp+0x30]
    4aaa:	mov    rdx,QWORD PTR [rsp+0x38]
    4aaf:	shl    rcx,0x4
    4ab3:	shl    rdx,0x4
    4ab7:	movsd  xmm4,QWORD PTR [rax+rcx*1]
    4abc:	addsd  xmm4,QWORD PTR [rax+rdx*1]
    4ac1:	movsxd rax,DWORD PTR [rip+0x1e120]        # 22be8 <diffmat_offset>
    4ac8:	test   eax,eax
    4aca:	js     4e18 <do_hit+0x4c8>
    4ad0:	mov    rdi,QWORD PTR [rsp+0x30]
    4ad5:	mov    rbx,QWORD PTR [rsp+0x38]
    4ada:	mov    rcx,QWORD PTR [rsp+0x88]
    4ae2:	add    rax,QWORD PTR [rsp]
    4ae6:	lea    rdx,[rdi+rdi*2]
    4aea:	add    rdx,rbx
    4aed:	shl    rcx,0x4
    4af1:	shl    rdx,0x4
    4af5:	add    rcx,rax
    4af8:	shl    rbx,0x6
    4afc:	add    rdx,rax
    4aff:	movsd  xmm1,QWORD PTR [rcx+0x8]
    4b04:	movsd  xmm3,QWORD PTR [rdx]
    4b08:	subsd  xmm3,QWORD PTR [rcx]
    4b0c:	mov    rcx,rdi
    4b0f:	shl    rcx,0x6
    4b13:	addsd  xmm1,QWORD PTR [rdx+0x8]
    4b18:	movsd  xmm6,QWORD PTR [rax+rcx*1+0x8]
    4b1e:	subsd  xmm6,QWORD PTR [rax+rbx*1+0x8]
    4b24:	movapd xmm2,xmm3
    4b28:	movapd xmm0,xmm1
    4b2c:	movapd xmm7,xmm4
    4b30:	mulsd  xmm2,xmm3
    4b34:	mulsd  xmm0,xmm1
    4b38:	mulsd  xmm7,xmm4
    4b3c:	addsd  xmm0,xmm2
    4b40:	movapd xmm2,xmm6
    4b44:	mulsd  xmm2,xmm6
    4b48:	addsd  xmm0,xmm2
    4b4c:	movsd  xmm2,QWORD PTR [rsp+0x70]
    4b52:	mulsd  xmm2,xmm7
    4b56:	movapd xmm5,xmm0
    4b5a:	addsd  xmm5,xmm7
    4b5e:	addsd  xmm2,xmm0
    4b62:	divsd  xmm2,xmm5
    4b66:	movapd xmm5,xmm2
    4b6a:	mulsd  xmm5,xmm2
    4b6e:	mulsd  xmm0,xmm5
    4b72:	addsd  xmm0,xmm7
    4b76:	pxor   xmm7,xmm7
    4b7a:	ucomisd xmm7,xmm0
    4b7e:	movapd xmm5,xmm0
    4b82:	sqrtsd xmm5,xmm5
    4b86:	ja     4ee8 <do_hit+0x598>
    4b8c:	divsd  xmm2,xmm5
    4b90:	lea    rbx,[rsp+0xb0]
    4b98:	divsd  xmm4,xmm5
    4b9c:	movapd xmm5,xmm1
    4ba0:	mulsd  xmm3,xmm2
    4ba4:	mulsd  xmm5,xmm2
    4ba8:	mulsd  xmm2,xmm6
    4bac:	movsd  QWORD PTR [rsp+0x10],xmm3
    4bb2:	movsd  QWORD PTR [rsp+0x40],xmm5
    4bb8:	movapd xmm1,xmm2
    4bbc:	movsd  QWORD PTR [rsp+0x50],xmm2
    4bc2:	movapd xmm0,xmm4
    4bc6:	movsd  QWORD PTR [rsp+0x48],xmm4
    4bcc:	call   13ee0 <cmplx>
    4bd1:	movsd  xmm5,QWORD PTR [rsp+0x40]
    4bd7:	movsd  QWORD PTR [rsp+0xb0],xmm0
    4be0:	movsd  xmm0,QWORD PTR [rsp+0x10]
    4be6:	movsd  QWORD PTR [rsp+0xb8],xmm1
    4bef:	movapd xmm1,xmm5
    4bf3:	call   13ee0 <cmplx>
    4bf8:	movsd  xmm5,QWORD PTR [rsp+0x40]
    4bfe:	movsd  QWORD PTR [rsp+0xc0],xmm0
    4c07:	movsd  xmm0,QWORD PTR [rsp+0x10]
    4c0d:	xorpd  xmm0,XMMWORD PTR [rip+0x15a6b]        # 1a680 <_IO_stdin_used+0x680>
    4c15:	movsd  QWORD PTR [rsp+0xc8],xmm1
    4c1e:	movapd xmm1,xmm5
    4c22:	call   13ee0 <cmplx>
    4c27:	movsd  xmm2,QWORD PTR [rsp+0x50]
    4c2d:	movsd  xmm4,QWORD PTR [rsp+0x48]
    4c33:	movsd  QWORD PTR [rsp+0xd8],xmm1
    4c3c:	movsd  QWORD PTR [rsp+0xd0],xmm0
    4c45:	movapd xmm1,xmm2
    4c49:	xorpd  xmm1,XMMWORD PTR [rip+0x15a2f]        # 1a680 <_IO_stdin_used+0x680>
    4c51:	movapd xmm0,xmm4
    4c55:	call   13ee0 <cmplx>
    4c5a:	mov    r15,QWORD PTR [rsp+0x28]
    4c5f:	movsd  QWORD PTR [rsp+0xe0],xmm0
    4c68:	movsd  QWORD PTR [rsp+0xe8],xmm1
    4c71:	lea    rbp,[r15-0x240]
    4c78:	mov    rcx,rbp
    4c7b:	mov    edx,r13d
    4c7e:	mov    esi,r12d
    4c81:	mov    rdi,rbx
    4c84:	call   15670 <left_su2_hit_n>
    4c89:	add    rbp,0x90
    4c90:	cmp    rbp,r15
    4c93:	jne    4c78 <do_hit+0x328>
    4c95:	lea    r15,[rip+0x1dbc4]        # 22860 <gen_pt>
    4c9c:	lea    rbp,[r15+0x20]
    4ca0:	mov    rax,QWORD PTR [r15]
    4ca3:	mov    rcx,QWORD PTR [rsp+0x18]
    4ca8:	mov    edx,r13d
    4cab:	mov    esi,r12d
    4cae:	mov    rdi,rbx
    4cb1:	add    r15,0x8
    4cb5:	mov    rcx,QWORD PTR [rax+rcx*1]
    4cb9:	call   156d0 <right_su2_hit_a>
    4cbe:	cmp    rbp,r15
    4cc1:	jne    4ca0 <do_hit+0x350>
    4cc3:	mov    ecx,DWORD PTR [rsp+0x5c]
    4cc7:	mov    r15,QWORD PTR [rsp+0x78]
    4ccc:	mov    rbp,QWORD PTR [rsp+0x60]
    4cd1:	test   ecx,ecx
    4cd3:	jle    4d4d <do_hit+0x3fd>
    4cd5:	mov    DWORD PTR [rsp+0x10],r12d
    4cda:	mov    r12,rbp
    4cdd:	mov    rbp,QWORD PTR [rsp+0x98]
    4ce5:	mov    DWORD PTR [rsp+0x40],r13d
    4cea:	mov    r13,rbx
    4ced:	mov    rbx,r15
    4cf0:	mov    r15,QWORD PTR [rsp+0x90]
    4cf8:	jmp    4d12 <do_hit+0x3c2>
    4cfa:	nop    WORD PTR [rax+rax*1+0x0]
    4d00:	cmp    edx,r14d
    4d03:	je     4d1b <do_hit+0x3cb>
    4d05:	add    r12,0x4
    4d09:	add    rbx,0x4
    4d0d:	cmp    rbp,r12
    4d10:	je     4d40 <do_hit+0x3f0>
    4d12:	mov    edx,DWORD PTR [r12]
    4d16:	cmp    edx,0x3
    4d19:	jne    4d00 <do_hit+0x3b0>
    4d1b:	movsxd rsi,DWORD PTR [rbx]
    4d1e:	add    rsi,QWORD PTR [rsp]
    4d22:	mov    rdi,r13
    4d25:	add    r12,0x4
    4d29:	lea    rdx,[rsi+r15*1]
    4d2d:	add    rsi,QWORD PTR [rsp+0x20]
    4d32:	add    rbx,0x4
    4d36:	call   15570 <mult_su2_mat_vec_elem_n>
    4d3b:	cmp    rbp,r12
    4d3e:	jne    4d12 <do_hit+0x3c2>
    4d40:	mov    rbx,r13
    4d43:	mov    r12d,DWORD PTR [rsp+0x10]
    4d48:	mov    r13d,DWORD PTR [rsp+0x40]
    4d4d:	mov    edx,DWORD PTR [rsp+0x1d8]
    4d54:	mov    r15,QWORD PTR [rsp+0x80]
    4d5c:	lea    rbp,[rsp+0xf0]
    4d64:	mov    rax,QWORD PTR [rsp+0x68]
    4d69:	test   edx,edx
    4d6b:	jle    4df9 <do_hit+0x4a9>
    4d71:	mov    r9d,r14d
    4d74:	mov    r14,rbx
    4d77:	mov    rbx,r15
    4d7a:	mov    r15,rax
    4d7d:	jmp    4d94 <do_hit+0x444>
    4d7f:	nop
    4d80:	cmp    edx,0x3
    4d83:	je     4d9c <do_hit+0x44c>
    4d85:	add    r15,0x4
    4d89:	add    rbx,0x4
    4d8d:	cmp    QWORD PTR [rsp+0x8],r15
    4d92:	je     4df6 <do_hit+0x4a6>
    4d94:	mov    edx,DWORD PTR [r15]
    4d97:	cmp    edx,r9d
    4d9a:	jne    4d80 <do_hit+0x430>
    4d9c:	movsxd rdi,DWORD PTR [rbx]
    4d9f:	mov    rsi,rbp
    4da2:	add    rdi,QWORD PTR [rsp]
    4da6:	mov    DWORD PTR [rsp+0x10],r9d
    4dab:	call   14d10 <uncompress_anti_hermitian>
    4db0:	mov    rcx,rbp
    4db3:	mov    edx,r13d
    4db6:	mov    esi,r12d
    4db9:	mov    rdi,r14
    4dbc:	add    r15,0x4
    4dc0:	add    rbx,0x4
    4dc4:	call   15670 <left_su2_hit_n>
    4dc9:	mov    rcx,rbp
    4dcc:	mov    edx,r13d
    4dcf:	mov    esi,r12d
    4dd2:	mov    rdi,r14
    4dd5:	call   156d0 <right_su2_hit_a>
    4dda:	movsxd rsi,DWORD PTR [rbx-0x4]
    4dde:	mov    rdi,rbp
    4de1:	add    rsi,QWORD PTR [rsp]
    4de5:	call   14610 <make_anti_hermitian>
    4dea:	mov    r9d,DWORD PTR [rsp+0x10]
    4def:	cmp    QWORD PTR [rsp+0x8],r15
    4df4:	jne    4d94 <do_hit+0x444>
    4df6:	mov    r14d,r9d
    4df9:	add    DWORD PTR [rsp+0x58],0x1
    4dfe:	add    QWORD PTR [rsp+0x18],0x8
    4e04:	add    QWORD PTR [rsp+0x28],0x800
    4e0d:	jmp    4a68 <do_hit+0x118>
    4e12:	nop    WORD PTR [rax+rax*1+0x0]
    4e18:	mov    rax,QWORD PTR [rsp+0x18]
    4e1d:	mov    rdi,QWORD PTR [rsp+0x30]
    4e22:	mov    rdx,QWORD PTR [rip+0x1ddb7]        # 22be0 <diffmatp>
    4e29:	mov    rbx,QWORD PTR [rsp+0x38]
    4e2e:	lea    rax,[rax+rax*8]
    4e32:	mov    rcx,QWORD PTR [rsp+0x88]
    4e3a:	lea    rdx,[rdx+rax*2]
    4e3e:	lea    rax,[rdi+rdi*2]
    4e42:	shl    rdi,0x6
    4e46:	add    rax,rbx
    4e49:	shl    rcx,0x4
    4e4d:	movsd  xmm6,QWORD PTR [rdx+rdi*1+0x8]
    4e53:	shl    rax,0x4
    4e57:	add    rcx,rdx
    4e5a:	add    rax,rdx
    4e5d:	movsd  xmm1,QWORD PTR [rcx+0x8]
    4e62:	movsd  xmm3,QWORD PTR [rax]
    4e66:	addsd  xmm1,QWORD PTR [rax+0x8]
    4e6b:	mov    rax,rbx
    4e6e:	shl    rax,0x6
    4e72:	subsd  xmm3,QWORD PTR [rcx]
    4e76:	subsd  xmm6,QWORD PTR [rdx+rax*1+0x8]
    4e7c:	jmp    4b24 <do_hit+0x1d4>
    4e81:	nop    DWORD PTR [rax+0x0]
    4e88:	mov    rax,QWORD PTR [rsp+0x18]
    4e8d:	mov    rdx,QWORD PTR [rip+0x1dd3c]        # 22bd0 <sumvecp>
    4e94:	lea    rax,[rax+rax*2]
    4e98:	lea    rax,[rdx+rax*2]
    4e9c:	jmp    4aa5 <do_hit+0x155>
    4ea1:	nop    DWORD PTR [rax+0x0]
    4ea8:	mov    rax,QWORD PTR [rsp+0x188]
    4eb0:	xor    rax,QWORD PTR fs:0x28
    4eb9:	jne    4f46 <do_hit+0x5f6>
    4ebf:	add    rsp,0x198
    4ec6:	pop    rbx
    4ec7:	pop    rbp
    4ec8:	pop    r12
    4eca:	pop    r13
    4ecc:	pop    r14
    4ece:	pop    r15
    4ed0:	ret    
    4ed1:	movsxd rdx,DWORD PTR [rip+0x1d7ac]        # 22684 <even_sites_on_node>
    4ed8:	mov    rax,rdx
    4edb:	mov    DWORD PTR [rsp+0x58],edx
    4edf:	shl    rax,0xb
    4ee3:	jmp    49d6 <do_hit+0x86>
    4ee8:	movsd  QWORD PTR [rsp+0xa8],xmm5
    4ef1:	movsd  QWORD PTR [rsp+0xa0],xmm2
    4efa:	movsd  QWORD PTR [rsp+0x50],xmm6
    4f00:	movsd  QWORD PTR [rsp+0x48],xmm3
    4f06:	movsd  QWORD PTR [rsp+0x40],xmm1
    4f0c:	movsd  QWORD PTR [rsp+0x10],xmm4
    4f12:	call   24e0 <sqrt@plt>
    4f17:	movsd  xmm6,QWORD PTR [rsp+0x50]
    4f1d:	movsd  xmm5,QWORD PTR [rsp+0xa8]
    4f26:	movsd  xmm2,QWORD PTR [rsp+0xa0]
    4f2f:	movsd  xmm3,QWORD PTR [rsp+0x48]
    4f35:	movsd  xmm1,QWORD PTR [rsp+0x40]
    4f3b:	movsd  xmm4,QWORD PTR [rsp+0x10]
    4f41:	jmp    4b8c <do_hit+0x23c>
    4f46:	call   2350 <__stack_chk_fail@plt>
    4f4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004f50 <get_gauge_fix_action>:
    4f50:	endbr64 
    4f54:	push   r15
    4f56:	mov    eax,esi
    4f58:	push   r14
    4f5a:	push   r13
    4f5c:	push   r12
    4f5e:	mov    r12d,edi
    4f61:	push   rbp
    4f62:	push   rbx
    4f63:	sub    rsp,0x28
    4f67:	mov    DWORD PTR [rsp+0xc],esi
    4f6b:	mov    rsi,QWORD PTR fs:0x28
    4f74:	mov    QWORD PTR [rsp+0x18],rsi
    4f79:	xor    esi,esi
    4f7b:	mov    QWORD PTR [rsp+0x10],0x0
    4f84:	cmp    eax,0x1
    4f87:	je     50a4 <get_gauge_fix_action+0x154>
    4f8d:	mov    DWORD PTR [rsp+0x8],0x0
    4f95:	xor    eax,eax
    4f97:	xor    ebp,ebp
    4f99:	mov    rdx,QWORD PTR [rip+0x1d828]        # 227c8 <lattice>
    4fa0:	shl    rbp,0x3
    4fa4:	lea    r15,[rip+0x1d8b5]        # 22860 <gen_pt>
    4fab:	lea    rax,[rdx+rax*1+0x70]
    4fb0:	mov    QWORD PTR [rsp],rax
    4fb4:	nop    DWORD PTR [rax+0x0]
    4fb8:	mov    eax,DWORD PTR [rip+0x1d6c6]        # 22684 <even_sites_on_node>
    4fbe:	cmp    DWORD PTR [rsp+0xc],0x2
    4fc3:	cmovne eax,DWORD PTR [rip+0x1d536]        # 22500 <sites_on_node>
    4fca:	cmp    DWORD PTR [rsp+0x8],eax
    4fce:	jge    5030 <get_gauge_fix_action+0xe0>
    4fd0:	mov    r14,QWORD PTR [rsp]
    4fd4:	xor    ebx,ebx
    4fd6:	cmp    r12d,ebx
    4fd9:	je     500b <get_gauge_fix_action+0xbb>
    4fdb:	mov    rdx,QWORD PTR [r15+rbx*8]
    4fdf:	mov    rdi,r14
    4fe2:	mov    r13,QWORD PTR [rdx+rbp*1]
    4fe6:	call   14ce0 <trace_su3>
    4feb:	addsd  xmm0,QWORD PTR [rsp+0x10]
    4ff1:	mov    rdi,r13
    4ff4:	movsd  QWORD PTR [rsp+0x10],xmm0
    4ffa:	call   14ce0 <trace_su3>
    4fff:	addsd  xmm0,QWORD PTR [rsp+0x10]
    5005:	movsd  QWORD PTR [rsp+0x10],xmm0
    500b:	add    rbx,0x1
    500f:	add    r14,0x90
    5016:	cmp    rbx,0x4
    501a:	jne    4fd6 <get_gauge_fix_action+0x86>
    501c:	add    DWORD PTR [rsp+0x8],0x1
    5021:	add    rbp,0x8
    5025:	add    QWORD PTR [rsp],0x800
    502d:	jmp    4fb8 <get_gauge_fix_action+0x68>
    502f:	nop
    5030:	xor    ebx,ebx
    5032:	xor    eax,eax
    5034:	xor    edx,edx
    5036:	cmp    r12d,eax
    5039:	setne  dl
    503c:	add    eax,0x1
    503f:	add    ebx,edx
    5041:	cmp    eax,0x4
    5044:	jne    5034 <get_gauge_fix_action+0xe4>
    5046:	lea    rdi,[rsp+0x10]
    504b:	call   193f0 <g_doublesum>
    5050:	mov    eax,DWORD PTR [rip+0x1d382]        # 223d8 <nx>
    5056:	pxor   xmm1,xmm1
    505a:	movsd  xmm0,QWORD PTR [rsp+0x10]
    5060:	imul   eax,ebx
    5063:	imul   eax,DWORD PTR [rip+0x1d7d2]        # 2283c <ny>
    506a:	imul   eax,DWORD PTR [rip+0x1d363]        # 223d4 <nz>
    5071:	imul   eax,DWORD PTR [rip+0x1d358]        # 223d0 <nt>
    5078:	lea    eax,[rax+rax*2]
    507b:	add    eax,eax
    507d:	cvtsi2sd xmm1,eax
    5081:	mov    rax,QWORD PTR [rsp+0x18]
    5086:	xor    rax,QWORD PTR fs:0x28
    508f:	divsd  xmm0,xmm1
    5093:	jne    50bb <get_gauge_fix_action+0x16b>
    5095:	add    rsp,0x28
    5099:	pop    rbx
    509a:	pop    rbp
    509b:	pop    r12
    509d:	pop    r13
    509f:	pop    r14
    50a1:	pop    r15
    50a3:	ret    
    50a4:	movsxd rbp,DWORD PTR [rip+0x1d5d9]        # 22684 <even_sites_on_node>
    50ab:	mov    rax,rbp
    50ae:	mov    DWORD PTR [rsp+0x8],ebp
    50b2:	shl    rax,0xb
    50b6:	jmp    4f99 <get_gauge_fix_action+0x49>
    50bb:	call   2350 <__stack_chk_fail@plt>

00000000000050c0 <gaugefixstep>:
    50c0:	endbr64 
    50c4:	push   r15
    50c6:	push   r14
    50c8:	push   r13
    50ca:	push   r12
    50cc:	push   rbp
    50cd:	push   rbx
    50ce:	mov    ebx,0x1
    50d3:	sub    rsp,0xb8
    50da:	mov    rax,QWORD PTR [rsp+0xf0]
    50e2:	mov    DWORD PTR [rsp+0x34],edi
    50e6:	mov    QWORD PTR [rsp+0x38],rsi
    50eb:	mov    QWORD PTR [rsp+0x20],rax
    50f0:	mov    rax,QWORD PTR [rsp+0xf8]
    50f8:	mov    DWORD PTR [rsp+0x50],edx
    50fc:	mov    QWORD PTR [rsp+0x40],rcx
    5101:	mov    QWORD PTR [rsp+0x48],r8
    5106:	mov    DWORD PTR [rsp+0x54],r9d
    510b:	mov    QWORD PTR [rsp+0x28],rax
    5110:	movsd  QWORD PTR [rsp+0x18],xmm0
    5116:	mov    rax,QWORD PTR fs:0x28
    511f:	mov    QWORD PTR [rsp+0xa8],rax
    5127:	xor    eax,eax
    5129:	mov    QWORD PTR [rsi],0x0
    5130:	call   193d0 <g_sync>
    5135:	mov    rdi,QWORD PTR [rip+0x1d1a4]        # 222e0 <stdout@@GLIBC_2.2.5>
    513c:	call   2420 <fflush@plt>
    5141:	lea    rax,[rsp+0x60]
    5146:	mov    QWORD PTR [rsp+0x10],rax
    514b:	lea    rax,[rsp+0x80]
    5153:	mov    QWORD PTR [rsp+0x58],rax
    5158:	mov    r13,QWORD PTR [rsp+0x10]
    515d:	mov    r12d,0x70
    5163:	xor    ebp,ebp
    5165:	mov    edx,0x7
    516a:	mov    edi,r12d
    516d:	mov    ecx,ebx
    516f:	mov    esi,0x90
    5174:	lea    rax,[rip+0x1d6e5]        # 22860 <gen_pt>
    517b:	sub    edx,ebp
    517d:	add    r12,0x90
    5184:	mov    r8,QWORD PTR [rax+rbp*8]
    5188:	call   18f40 <start_gather>
    518d:	mov    QWORD PTR [r13+rbp*8+0x0],rax
    5192:	add    rbp,0x1
    5196:	cmp    rbp,0x4
    519a:	jne    5165 <gaugefixstep+0xa5>
    519c:	mov    rbp,QWORD PTR [rsp+0x10]
    51a1:	mov    r12,QWORD PTR [rsp+0x58]
    51a6:	mov    rdi,QWORD PTR [rbp+0x0]
    51aa:	add    rbp,0x8
    51ae:	call   19170 <wait_gather>
    51b3:	cmp    rbp,r12
    51b6:	jne    51a6 <gaugefixstep+0xe6>
    51b8:	mov    r15d,DWORD PTR [rsp+0x34]
    51bd:	mov    esi,ebx
    51bf:	mov    edi,r15d
    51c2:	call   4f50 <get_gauge_fix_action>
    51c7:	push   QWORD PTR [rsp+0x28]
    51cb:	mov    ecx,0x1
    51d0:	xor    edx,edx
    51d2:	push   QWORD PTR [rsp+0x28]
    51d6:	mov    esi,ebx
    51d8:	mov    edi,r15d
    51db:	mov    r14d,DWORD PTR [rsp+0x64]
    51e0:	push   r14
    51e2:	mov    r13,QWORD PTR [rsp+0x60]
    51e7:	push   r13
    51e9:	mov    r12,QWORD PTR [rsp+0x60]
    51ee:	mov    ebp,DWORD PTR [rsp+0x70]
    51f2:	movsd  xmm0,QWORD PTR [rsp+0x38]
    51f8:	mov    r9,r12
    51fb:	mov    r8d,ebp
    51fe:	call   4950 <do_hit>
    5203:	add    rsp,0x20
    5207:	mov    r9,r12
    520a:	mov    r8d,ebp
    520d:	push   QWORD PTR [rsp+0x28]
    5211:	mov    ecx,0x2
    5216:	mov    edx,0x1
    521b:	mov    esi,ebx
    521d:	push   QWORD PTR [rsp+0x28]
    5221:	mov    edi,r15d
    5224:	push   r14
    5226:	push   r13
    5228:	movsd  xmm0,QWORD PTR [rsp+0x38]
    522e:	call   4950 <do_hit>
    5233:	add    rsp,0x20
    5237:	mov    r9,r12
    523a:	mov    r8d,ebp
    523d:	push   QWORD PTR [rsp+0x28]
    5241:	xor    ecx,ecx
    5243:	mov    edx,0x2
    5248:	mov    esi,ebx
    524a:	push   QWORD PTR [rsp+0x28]
    524e:	mov    edi,r15d
    5251:	lea    rbp,[rip+0x1d608]        # 22860 <gen_pt>
    5258:	xor    r12d,r12d
    525b:	push   r14
    525d:	push   r13
    525f:	movsd  xmm0,QWORD PTR [rsp+0x38]
    5265:	call   4950 <do_hit>
    526a:	add    rsp,0x20
    526e:	mov    esi,ebx
    5270:	mov    edi,r15d
    5273:	call   4f50 <get_gauge_fix_action>
    5278:	mov    rax,QWORD PTR [rsp+0x38]
    527d:	mov    QWORD PTR [rsp+0x8],0x70
    5286:	addsd  xmm0,QWORD PTR [rax]
    528a:	movsd  QWORD PTR [rax],xmm0
    528e:	mov    eax,ebx
    5290:	xor    eax,0x3
    5293:	mov    DWORD PTR [rsp+0x30],eax
    5297:	xor    eax,eax
    5299:	mov    DWORD PTR [rsp],r12d
    529d:	call   193d0 <g_sync>
    52a2:	cmp    ebx,0x1
    52a5:	je     5458 <gaugefixstep+0x398>
    52ab:	xor    r8d,r8d
    52ae:	xor    r13d,r13d
    52b1:	xor    edx,edx
    52b3:	add    r8,QWORD PTR [rip+0x1d50e]        # 227c8 <lattice>
    52ba:	lea    r14,[rdx*8+0x0]
    52c2:	mov    r15,r8
    52c5:	jmp    52e7 <gaugefixstep+0x227>
    52c7:	nop    WORD PTR [rax+rax*1+0x0]
    52d0:	add    rsi,r15
    52d3:	call   14bf0 <su3mat_copy>
    52d8:	add    r13d,0x1
    52dc:	add    r15,0x800
    52e3:	add    r14,0x8
    52e7:	mov    eax,DWORD PTR [rip+0x1d397]        # 22684 <even_sites_on_node>
    52ed:	cmp    ebx,0x2
    52f0:	cmovne eax,DWORD PTR [rip+0x1d209]        # 22500 <sites_on_node>
    52f7:	cmp    r13d,eax
    52fa:	jge    5328 <gaugefixstep+0x268>
    52fc:	mov    rax,QWORD PTR [rbp+0x0]
    5300:	movsxd rsi,DWORD PTR [rip+0x1d8e1]        # 22be8 <diffmat_offset>
    5307:	mov    rdi,QWORD PTR [rax+r14*1]
    530b:	test   esi,esi
    530d:	jns    52d0 <gaugefixstep+0x210>
    530f:	mov    rdx,QWORD PTR [rip+0x1d8ca]        # 22be0 <diffmatp>
    5316:	lea    rax,[r14+r14*8]
    531a:	lea    rsi,[rdx+rax*2]
    531e:	call   14bf0 <su3mat_copy>
    5323:	jmp    52d8 <gaugefixstep+0x218>
    5325:	nop    DWORD PTR [rax]
    5328:	mov    r15,QWORD PTR [rsp+0x10]
    532d:	mov    rdi,QWORD PTR [r15+r12*8]
    5331:	call   19180 <cleanup_gather>
    5336:	xor    eax,eax
    5338:	call   193d0 <g_sync>
    533d:	mov    edi,DWORD PTR [rip+0x1d8a5]        # 22be8 <diffmat_offset>
    5343:	mov    edx,DWORD PTR [rsp]
    5346:	mov    esi,0x90
    534b:	mov    r8,QWORD PTR [rbp+0x0]
    534f:	mov    ecx,DWORD PTR [rsp+0x30]
    5353:	test   edi,edi
    5355:	js     5410 <gaugefixstep+0x350>
    535b:	call   18f40 <start_gather>
    5360:	mov    QWORD PTR [r15+r12*8],rax
    5364:	mov    QWORD PTR [rsp],rax
    5368:	mov    rdi,QWORD PTR [rsp]
    536c:	call   19170 <wait_gather>
    5371:	cmp    ebx,0x2
    5374:	je     543b <gaugefixstep+0x37b>
    537a:	xor    edx,edx
    537c:	xor    r13d,r13d
    537f:	xor    ecx,ecx
    5381:	add    rdx,QWORD PTR [rsp+0x8]
    5386:	add    rdx,QWORD PTR [rip+0x1d43b]        # 227c8 <lattice>
    538d:	lea    r15,[rcx*8+0x0]
    5395:	mov    r14,rdx
    5398:	jmp    53bf <gaugefixstep+0x2ff>
    539a:	nop    WORD PTR [rax+rax*1+0x0]
    53a0:	mov    rax,QWORD PTR [rbp+0x0]
    53a4:	mov    rsi,r14
    53a7:	add    r13d,0x1
    53ab:	add    r14,0x800
    53b2:	mov    rdi,QWORD PTR [rax+r15*1]
    53b6:	add    r15,0x8
    53ba:	call   14bf0 <su3mat_copy>
    53bf:	mov    eax,DWORD PTR [rip+0x1d2bf]        # 22684 <even_sites_on_node>
    53c5:	cmp    ebx,0x1
    53c8:	cmovne eax,DWORD PTR [rip+0x1d131]        # 22500 <sites_on_node>
    53cf:	cmp    r13d,eax
    53d2:	jl     53a0 <gaugefixstep+0x2e0>
    53d4:	mov    rdi,QWORD PTR [rsp]
    53d8:	add    r12,0x1
    53dc:	add    rbp,0x8
    53e0:	call   19180 <cleanup_gather>
    53e5:	add    QWORD PTR [rsp+0x8],0x90
    53ee:	cmp    r12,0x4
    53f2:	jne    5297 <gaugefixstep+0x1d7>
    53f8:	cmp    ebx,0x2
    53fb:	je     5470 <gaugefixstep+0x3b0>
    53fd:	mov    ebx,0x2
    5402:	jmp    5158 <gaugefixstep+0x98>
    5407:	nop    WORD PTR [rax+rax*1+0x0]
    5410:	mov    rdi,QWORD PTR [rip+0x1d7c9]        # 22be0 <diffmatp>
    5417:	call   19070 <start_gather_from_temp>
    541c:	mov    rcx,QWORD PTR [rsp+0x10]
    5421:	mov    QWORD PTR [rsp],rax
    5425:	mov    rdi,QWORD PTR [rsp]
    5429:	mov    QWORD PTR [rcx+r12*8],rax
    542d:	call   19170 <wait_gather>
    5432:	cmp    ebx,0x2
    5435:	jne    537a <gaugefixstep+0x2ba>
    543b:	movsxd rcx,DWORD PTR [rip+0x1d242]        # 22684 <even_sites_on_node>
    5442:	mov    rdx,rcx
    5445:	mov    r13,rcx
    5448:	shl    rdx,0xb
    544c:	jmp    5381 <gaugefixstep+0x2c1>
    5451:	nop    DWORD PTR [rax+0x0]
    5458:	movsxd rdx,DWORD PTR [rip+0x1d225]        # 22684 <even_sites_on_node>
    545f:	mov    r8,rdx
    5462:	mov    r13,rdx
    5465:	shl    r8,0xb
    5469:	jmp    52b3 <gaugefixstep+0x1f3>
    546e:	xchg   ax,ax
    5470:	mov    rax,QWORD PTR [rsp+0xa8]
    5478:	xor    rax,QWORD PTR fs:0x28
    5481:	jne    5495 <gaugefixstep+0x3d5>
    5483:	add    rsp,0xb8
    548a:	pop    rbx
    548b:	pop    rbp
    548c:	pop    r12
    548e:	pop    r13
    5490:	pop    r14
    5492:	pop    r15
    5494:	ret    
    5495:	call   2350 <__stack_chk_fail@plt>
    549a:	nop    WORD PTR [rax+rax*1+0x0]

00000000000054a0 <gaugefixscratch>:
    54a0:	endbr64 
    54a4:	push   rbx
    54a5:	mov    ebx,esi
    54a7:	mov    DWORD PTR [rip+0x1d73b],edi        # 22be8 <diffmat_offset>
    54ad:	mov    QWORD PTR [rip+0x1d728],0x0        # 22be0 <diffmatp>
    54b8:	test   edi,edi
    54ba:	js     5518 <gaugefixscratch+0x78>
    54bc:	mov    DWORD PTR [rip+0x1d716],ebx        # 22bd8 <sumvec_offset>
    54c2:	mov    QWORD PTR [rip+0x1d703],0x0        # 22bd0 <sumvecp>
    54cd:	test   ebx,ebx
    54cf:	js     54d8 <gaugefixscratch+0x38>
    54d1:	pop    rbx
    54d2:	ret    
    54d3:	nop    DWORD PTR [rax+rax*1+0x0]
    54d8:	movsxd rdi,DWORD PTR [rip+0x1d021]        # 22500 <sites_on_node>
    54df:	mov    esi,0x30
    54e4:	call   23d0 <calloc@plt>
    54e9:	mov    QWORD PTR [rip+0x1d6e0],rax        # 22bd0 <sumvecp>
    54f0:	test   rax,rax
    54f3:	jne    54d1 <gaugefixscratch+0x31>
    54f5:	cmp    DWORD PTR [rip+0x1d3e8],0x0        # 228e4 <this_node>
    54fc:	je     5567 <gaugefixscratch+0xc7>
    54fe:	mov    rdi,QWORD PTR [rip+0x1cddb]        # 222e0 <stdout@@GLIBC_2.2.5>
    5505:	call   2420 <fflush@plt>
    550a:	mov    edi,0x1
    550f:	pop    rbx
    5510:	jmp    19570 <terminate>
    5515:	nop    DWORD PTR [rax]
    5518:	movsxd rdi,DWORD PTR [rip+0x1cfe1]        # 22500 <sites_on_node>
    551f:	mov    esi,0x90
    5524:	call   23d0 <calloc@plt>
    5529:	mov    QWORD PTR [rip+0x1d6b0],rax        # 22be0 <diffmatp>
    5530:	test   rax,rax
    5533:	jne    54bc <gaugefixscratch+0x1c>
    5535:	cmp    DWORD PTR [rip+0x1d3a8],0x0        # 228e4 <this_node>
    553c:	je     5559 <gaugefixscratch+0xb9>
    553e:	mov    rdi,QWORD PTR [rip+0x1cd9b]        # 222e0 <stdout@@GLIBC_2.2.5>
    5545:	call   2420 <fflush@plt>
    554a:	mov    edi,0x1
    554f:	call   19570 <terminate>
    5554:	jmp    54bc <gaugefixscratch+0x1c>
    5559:	lea    rdi,[rip+0x150a0]        # 1a600 <_IO_stdin_used+0x600>
    5560:	call   22f0 <puts@plt>
    5565:	jmp    553e <gaugefixscratch+0x9e>
    5567:	lea    rdi,[rip+0x150e9]        # 1a657 <_IO_stdin_used+0x657>
    556e:	call   22f0 <puts@plt>
    5573:	jmp    54fe <gaugefixscratch+0x5e>
    5575:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000005580 <gaugefix>:
    5580:	endbr64 
    5584:	push   r15
    5586:	push   r14
    5588:	mov    r14d,esi
    558b:	push   r13
    558d:	push   r12
    558f:	mov    r12,r9
    5592:	push   rbp
    5593:	mov    ebp,r8d
    5596:	push   rbx
    5597:	mov    ebx,edi
    5599:	mov    edi,edx
    559b:	sub    rsp,0x58
    559f:	mov    rax,QWORD PTR [rsp+0xa0]
    55a7:	mov    DWORD PTR [rsp+0x2c],esi
    55ab:	mov    esi,ecx
    55ad:	movsd  QWORD PTR [rsp+0x10],xmm0
    55b3:	mov    r13,QWORD PTR [rsp+0x90]
    55bb:	mov    QWORD PTR [rsp+0x18],rax
    55c0:	mov    rax,QWORD PTR [rsp+0xa8]
    55c8:	movsd  QWORD PTR [rsp+0x30],xmm1
    55ce:	mov    QWORD PTR [rsp+0x20],rax
    55d3:	mov    rax,QWORD PTR fs:0x28
    55dc:	mov    QWORD PTR [rsp+0x48],rax
    55e1:	xor    eax,eax
    55e3:	call   54a0 <gaugefixscratch>
    55e8:	test   r14d,r14d
    55eb:	mov    r14d,0x0
    55f1:	jle    56e7 <gaugefix+0x167>
    55f7:	lea    r15,[rsp+0x40]
    55fc:	mov    rax,r15
    55ff:	mov    r15d,r14d
    5602:	mov    r14,rax
    5605:	jmp    5679 <gaugefix+0xf9>
    5607:	nop    WORD PTR [rax+rax*1+0x0]
    5610:	movsd  xmm0,QWORD PTR [rsp+0x40]
    5616:	mov    eax,r15d
    5619:	mov    edx,0xcccccccd
    561e:	mov    ecx,r15d
    5621:	imul   rax,rdx
    5625:	movsd  xmm4,QWORD PTR [rsp+0x30]
    562b:	movapd xmm2,xmm0
    562f:	subsd  xmm2,QWORD PTR [rsp+0x8]
    5635:	shr    rax,0x24
    5639:	lea    eax,[rax+rax*4]
    563c:	movapd xmm1,xmm2
    5640:	andpd  xmm1,XMMWORD PTR [rip+0x14f88]        # 1a5d0 <_IO_stdin_used+0x5d0>
    5648:	movsd  QWORD PTR [rsp+0x38],xmm2
    564e:	shl    eax,0x2
    5651:	sub    ecx,eax
    5653:	comisd xmm4,xmm1
    5657:	mov    eax,ecx
    5659:	ja     57a8 <gaugefix+0x228>
    565f:	movsd  QWORD PTR [rsp+0x8],xmm0
    5665:	cmp    ecx,0x13
    5668:	je     5730 <gaugefix+0x1b0>
    566e:	add    r15d,0x1
    5672:	cmp    DWORD PTR [rsp+0x2c],r15d
    5677:	je     56c3 <gaugefix+0x143>
    5679:	push   QWORD PTR [rsp+0x20]
    567d:	mov    rsi,r14
    5680:	mov    edi,ebx
    5682:	mov    r8,r13
    5685:	push   QWORD PTR [rsp+0x20]
    5689:	mov    rcx,r12
    568c:	mov    edx,ebp
    568e:	mov    r9d,DWORD PTR [rsp+0xa8]
    5696:	movsd  xmm0,QWORD PTR [rsp+0x20]
    569c:	call   50c0 <gaugefixstep>
    56a1:	pop    rsi
    56a2:	pop    rdi
    56a3:	test   r15d,r15d
    56a6:	jne    5610 <gaugefix+0x90>
    56ac:	movsd  xmm5,QWORD PTR [rsp+0x40]
    56b2:	add    r15d,0x1
    56b6:	movsd  QWORD PTR [rsp+0x8],xmm5
    56bc:	cmp    DWORD PTR [rsp+0x2c],r15d
    56c1:	jne    5679 <gaugefix+0xf9>
    56c3:	mov    eax,r15d
    56c6:	mov    edx,0xcccccccd
    56cb:	mov    r14,rax
    56ce:	imul   rax,rdx
    56d2:	mov    ebx,r14d
    56d5:	shr    rax,0x24
    56d9:	lea    eax,[rax+rax*4]
    56dc:	shl    eax,0x2
    56df:	sub    ebx,eax
    56e1:	mov    eax,ebx
    56e3:	test   eax,eax
    56e5:	jne    5740 <gaugefix+0x1c0>
    56e7:	mov    ecx,DWORD PTR [rip+0x1d4fb]        # 22be8 <diffmat_offset>
    56ed:	test   ecx,ecx
    56ef:	js     574f <gaugefix+0x1cf>
    56f1:	mov    edx,DWORD PTR [rip+0x1d4e1]        # 22bd8 <sumvec_offset>
    56f7:	test   edx,edx
    56f9:	js     5765 <gaugefix+0x1e5>
    56fb:	mov    eax,DWORD PTR [rip+0x1d1e3]        # 228e4 <this_node>
    5701:	test   eax,eax
    5703:	je     577b <gaugefix+0x1fb>
    5705:	mov    rax,QWORD PTR [rsp+0x48]
    570a:	xor    rax,QWORD PTR fs:0x28
    5713:	jne    57b0 <gaugefix+0x230>
    5719:	add    rsp,0x58
    571d:	pop    rbx
    571e:	pop    rbp
    571f:	pop    r12
    5721:	pop    r13
    5723:	pop    r14
    5725:	pop    r15
    5727:	ret    
    5728:	nop    DWORD PTR [rax+rax*1+0x0]
    5730:	call   eb90 <reunitarize>
    5735:	jmp    566e <gaugefix+0xee>
    573a:	nop    WORD PTR [rax+rax*1+0x0]
    5740:	call   eb90 <reunitarize>
    5745:	mov    ecx,DWORD PTR [rip+0x1d49d]        # 22be8 <diffmat_offset>
    574b:	test   ecx,ecx
    574d:	jns    56f1 <gaugefix+0x171>
    574f:	mov    rdi,QWORD PTR [rip+0x1d48a]        # 22be0 <diffmatp>
    5756:	call   22a0 <free@plt>
    575b:	mov    edx,DWORD PTR [rip+0x1d477]        # 22bd8 <sumvec_offset>
    5761:	test   edx,edx
    5763:	jns    56fb <gaugefix+0x17b>
    5765:	mov    rdi,QWORD PTR [rip+0x1d464]        # 22bd0 <sumvecp>
    576c:	call   22a0 <free@plt>
    5771:	mov    eax,DWORD PTR [rip+0x1d16d]        # 228e4 <this_node>
    5777:	test   eax,eax
    5779:	jne    5705 <gaugefix+0x185>
    577b:	movsd  xmm1,QWORD PTR [rsp+0x38]
    5781:	movsd  xmm0,QWORD PTR [rsp+0x40]
    5787:	mov    edx,r14d
    578a:	lea    rsi,[rip+0x14e8f]        # 1a620 <_IO_stdin_used+0x620>
    5791:	mov    edi,0x1
    5796:	mov    eax,0x2
    579b:	call   2470 <__printf_chk@plt>
    57a0:	jmp    5705 <gaugefix+0x185>
    57a5:	nop    DWORD PTR [rax]
    57a8:	mov    r14d,r15d
    57ab:	jmp    56e3 <gaugefix+0x163>
    57b0:	call   2350 <__stack_chk_fail@plt>
    57b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    57bf:	nop

00000000000057c0 <save_lattice>:
    57c0:	endbr64 
    57c4:	push   r12
    57c6:	push   rbp
    57c7:	mov    rbp,rsi
    57ca:	push   rbx
    57cb:	mov    ebx,edi
    57cd:	sub    rsp,0x30
    57d1:	mov    rax,QWORD PTR fs:0x28
    57da:	mov    QWORD PTR [rsp+0x28],rax
    57df:	xor    eax,eax
    57e1:	call   194f0 <dclock>
    57e6:	lea    edi,[rbx-0x14]
    57e9:	movsd  QWORD PTR [rsp+0x8],xmm0
    57ef:	cmp    edi,0xb
    57f2:	ja     5808 <save_lattice+0x48>
    57f4:	lea    rdx,[rip+0x15629]        # 1ae24 <_IO_stdin_used+0xe24>
    57fb:	movsxd rax,DWORD PTR [rdx+rdi*4]
    57ff:	add    rax,rdx
    5802:	notrack jmp rax
    5805:	nop    DWORD PTR [rax]
    5808:	lea    rdi,[rip+0x14e81]        # 1a690 <_IO_stdin_used+0x690>
    580f:	call   22f0 <puts@plt>
    5814:	mov    edi,0x1
    5819:	call   19570 <terminate>
    581e:	xchg   ax,ax
    5820:	xor    eax,eax
    5822:	call   194f0 <dclock>
    5827:	mov    eax,DWORD PTR [rip+0x1d0b7]        # 228e4 <this_node>
    582d:	test   eax,eax
    582f:	je     5920 <save_lattice+0x160>
    5835:	lea    rsi,[rsp+0x20]
    583a:	lea    rdi,[rsp+0x18]
    583f:	call   42b0 <d_plaquette>
    5844:	mov    edx,DWORD PTR [rip+0x1d09a]        # 228e4 <this_node>
    584a:	test   edx,edx
    584c:	je     58f0 <save_lattice+0x130>
    5852:	mov    rax,QWORD PTR [rsp+0x28]
    5857:	xor    rax,QWORD PTR fs:0x28
    5860:	jne    5941 <save_lattice+0x181>
    5866:	add    rsp,0x30
    586a:	mov    rax,r12
    586d:	pop    rbx
    586e:	pop    rbp
    586f:	pop    r12
    5871:	ret    
    5872:	nop    WORD PTR [rax+rax*1+0x0]
    5878:	xor    eax,eax
    587a:	xor    r12d,r12d
    587d:	call   194f0 <dclock>
    5882:	jmp    5835 <save_lattice+0x75>
    5884:	nop    DWORD PTR [rax+0x0]
    5888:	mov    rdi,rbp
    588b:	call   c1b0 <save_ascii>
    5890:	mov    r12,rax
    5893:	jmp    5820 <save_lattice+0x60>
    5895:	nop    DWORD PTR [rax]
    5898:	mov    rdi,rbp
    589b:	call   c840 <save_serial>
    58a0:	mov    r12,rax
    58a3:	jmp    5820 <save_lattice+0x60>
    58a8:	nop    DWORD PTR [rax+rax*1+0x0]
    58b0:	mov    rdi,rbp
    58b3:	call   c8a0 <save_checkpoint>
    58b8:	mov    r12,rax
    58bb:	jmp    5820 <save_lattice+0x60>
    58c0:	mov    rdi,rbp
    58c3:	call   c870 <save_parallel>
    58c8:	mov    r12,rax
    58cb:	jmp    5820 <save_lattice+0x60>
    58d0:	mov    rdi,rbp
    58d3:	call   c8d0 <save_serial_archive>
    58d8:	mov    r12,rax
    58db:	jmp    5820 <save_lattice+0x60>
    58e0:	mov    rdi,rbp
    58e3:	call   d2a0 <save_parallel_archive>
    58e8:	mov    r12,rax
    58eb:	jmp    5820 <save_lattice+0x60>
    58f0:	movsd  xmm1,QWORD PTR [rsp+0x20]
    58f6:	movsd  xmm0,QWORD PTR [rsp+0x18]
    58fc:	mov    edi,0x1
    5901:	lea    rsi,[rip+0x15426]        # 1ad2e <_IO_stdin_used+0xd2e>
    5908:	mov    eax,0x2
    590d:	call   2470 <__printf_chk@plt>
    5912:	jmp    5852 <save_lattice+0x92>
    5917:	nop    WORD PTR [rax+rax*1+0x0]
    5920:	subsd  xmm0,QWORD PTR [rsp+0x8]
    5926:	mov    edi,0x1
    592b:	mov    eax,0x1
    5930:	lea    rsi,[rip+0x153e4]        # 1ad1b <_IO_stdin_used+0xd1b>
    5937:	call   2470 <__printf_chk@plt>
    593c:	jmp    5835 <save_lattice+0x75>
    5941:	call   2350 <__stack_chk_fail@plt>
    5946:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005950 <ask_starting_lattice>:
    5950:	endbr64 
    5954:	push   r14
    5956:	mov    r14,rdx
    5959:	push   r13
    595b:	push   r12
    595d:	push   rbp
    595e:	mov    rbp,rsi
    5961:	push   rbx
    5962:	mov    ebx,edi
    5964:	sub    rsp,0x110
    596b:	mov    rax,QWORD PTR fs:0x28
    5974:	mov    QWORD PTR [rsp+0x108],rax
    597c:	xor    eax,eax
    597e:	test   edi,edi
    5980:	jne    5aa0 <ask_starting_lattice+0x150>
    5986:	mov    r13,rsp
    5989:	lea    rdi,[rip+0x14938]        # 1a2c8 <_IO_stdin_used+0x2c8>
    5990:	xor    eax,eax
    5992:	mov    rsi,r13
    5995:	call   24a0 <__isoc99_scanf@plt>
    599a:	mov    r12d,eax
    599d:	cmp    eax,0x1
    59a0:	je     59e0 <ask_starting_lattice+0x90>
    59a2:	lea    rdi,[rip+0x14d77]        # 1a720 <_IO_stdin_used+0x720>
    59a9:	mov    r12d,0x1
    59af:	call   22f0 <puts@plt>
    59b4:	mov    rax,QWORD PTR [rsp+0x108]
    59bc:	xor    rax,QWORD PTR fs:0x28
    59c5:	jne    5bab <ask_starting_lattice+0x25b>
    59cb:	add    rsp,0x110
    59d2:	mov    eax,r12d
    59d5:	pop    rbx
    59d6:	pop    rbp
    59d7:	pop    r12
    59d9:	pop    r13
    59db:	pop    r14
    59dd:	ret    
    59de:	xchg   ax,ax
    59e0:	xor    eax,eax
    59e2:	mov    rdx,r13
    59e5:	mov    edi,0x1
    59ea:	lea    rsi,[rip+0x153fa]        # 1adeb <_IO_stdin_used+0xdeb>
    59f1:	call   2470 <__printf_chk@plt>
    59f6:	cmp    DWORD PTR [rsp],0x73657266
    59fd:	je     5ab8 <ask_starting_lattice+0x168>
    5a03:	movabs rax,0x65756e69746e6f63
    5a0d:	cmp    QWORD PTR [rsp],rax
    5a11:	je     5b28 <ask_starting_lattice+0x1d8>
    5a17:	movabs rax,0x615f64616f6c6572
    5a21:	cmp    QWORD PTR [rsp],rax
    5a25:	je     5af0 <ask_starting_lattice+0x1a0>
    5a2b:	movabs rax,0x735f64616f6c6572
    5a35:	cmp    QWORD PTR [rsp],rax
    5a39:	je     5b68 <ask_starting_lattice+0x218>
    5a3f:	movabs rdx,0x6c656c6c617261
    5a49:	xor    rdx,QWORD PTR [rsp+0x8]
    5a4e:	movabs rax,0x705f64616f6c6572
    5a58:	xor    rax,QWORD PTR [rsp]
    5a5c:	or     rdx,rax
    5a5f:	jne    5b90 <ask_starting_lattice+0x240>
    5a65:	mov    DWORD PTR [rbp+0x0],0x13
    5a6c:	test   ebx,ebx
    5a6e:	jne    5b50 <ask_starting_lattice+0x200>
    5a74:	xor    eax,eax
    5a76:	mov    rsi,r14
    5a79:	lea    rdi,[rip+0x14848]        # 1a2c8 <_IO_stdin_used+0x2c8>
    5a80:	call   24a0 <__isoc99_scanf@plt>
    5a85:	cmp    eax,0x1
    5a88:	je     5b18 <ask_starting_lattice+0x1c8>
    5a8e:	lea    rdi,[rip+0x14d3b]        # 1a7d0 <_IO_stdin_used+0x7d0>
    5a95:	call   22f0 <puts@plt>
    5a9a:	jmp    59b4 <ask_starting_lattice+0x64>
    5a9f:	nop
    5aa0:	lea    rdi,[rip+0x14c21]        # 1a6c8 <_IO_stdin_used+0x6c8>
    5aa7:	call   22f0 <puts@plt>
    5aac:	jmp    5986 <ask_starting_lattice+0x36>
    5ab1:	nop    DWORD PTR [rax+0x0]
    5ab8:	cmp    WORD PTR [r13+0x4],0x68
    5abe:	jne    5a03 <ask_starting_lattice+0xb3>
    5ac4:	mov    DWORD PTR [rbp+0x0],0xb
    5acb:	mov    edi,0xa
    5ad0:	call   22b0 <putchar@plt>
    5ad5:	mov    eax,DWORD PTR [rbp+0x0]
    5ad8:	sub    eax,0xa
    5adb:	cmp    eax,0x1
    5ade:	ja     5a6c <ask_starting_lattice+0x11c>
    5ae0:	xor    r12d,r12d
    5ae3:	jmp    59b4 <ask_starting_lattice+0x64>
    5ae8:	nop    DWORD PTR [rax+rax*1+0x0]
    5af0:	cmp    DWORD PTR [rsp+0x8],0x69696373
    5af8:	jne    5a2b <ask_starting_lattice+0xdb>
    5afe:	cmp    BYTE PTR [r13+0xc],0x0
    5b03:	jne    5a2b <ask_starting_lattice+0xdb>
    5b09:	mov    DWORD PTR [rbp+0x0],0xc
    5b10:	jmp    5a6c <ask_starting_lattice+0x11c>
    5b15:	nop    DWORD PTR [rax]
    5b18:	mov    rdi,r14
    5b1b:	call   22f0 <puts@plt>
    5b20:	jmp    5ae0 <ask_starting_lattice+0x190>
    5b22:	nop    WORD PTR [rax+rax*1+0x0]
    5b28:	cmp    BYTE PTR [rsp+0x8],0x0
    5b2d:	jne    5a17 <ask_starting_lattice+0xc7>
    5b33:	mov    DWORD PTR [rbp+0x0],0xa
    5b3a:	mov    edi,0xa
    5b3f:	call   22b0 <putchar@plt>
    5b44:	jmp    5ad5 <ask_starting_lattice+0x185>
    5b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5b50:	lea    rdi,[rip+0x14c51]        # 1a7a8 <_IO_stdin_used+0x7a8>
    5b57:	call   22f0 <puts@plt>
    5b5c:	jmp    5a74 <ask_starting_lattice+0x124>
    5b61:	nop    DWORD PTR [rax+0x0]
    5b68:	cmp    DWORD PTR [rsp+0x8],0x61697265
    5b70:	jne    5a3f <ask_starting_lattice+0xef>
    5b76:	cmp    WORD PTR [r13+0xc],0x6c
    5b7c:	jne    5a3f <ask_starting_lattice+0xef>
    5b82:	mov    DWORD PTR [rbp+0x0],0xd
    5b89:	jmp    5a6c <ask_starting_lattice+0x11c>
    5b8e:	xchg   ax,ax
    5b90:	mov    rdx,r13
    5b93:	lea    rsi,[rip+0x14bc6]        # 1a760 <_IO_stdin_used+0x760>
    5b9a:	mov    edi,0x1
    5b9f:	xor    eax,eax
    5ba1:	call   2470 <__printf_chk@plt>
    5ba6:	jmp    59b4 <ask_starting_lattice+0x64>
    5bab:	call   2350 <__stack_chk_fail@plt>

0000000000005bb0 <ask_ending_lattice>:
    5bb0:	endbr64 
    5bb4:	push   r13
    5bb6:	mov    r13,rsi
    5bb9:	push   r12
    5bbb:	push   rbp
    5bbc:	mov    rbp,rdx
    5bbf:	push   rbx
    5bc0:	mov    ebx,edi
    5bc2:	sub    rsp,0x118
    5bc9:	mov    rax,QWORD PTR fs:0x28
    5bd2:	mov    QWORD PTR [rsp+0x108],rax
    5bda:	xor    eax,eax
    5bdc:	test   edi,edi
    5bde:	jne    5cf8 <ask_ending_lattice+0x148>
    5be4:	mov    r12,rsp
    5be7:	xor    eax,eax
    5be9:	lea    rdi,[rip+0x146d8]        # 1a2c8 <_IO_stdin_used+0x2c8>
    5bf0:	mov    rsi,r12
    5bf3:	call   24a0 <__isoc99_scanf@plt>
    5bf8:	cmp    eax,0x1
    5bfb:	je     5c40 <ask_ending_lattice+0x90>
    5bfd:	lea    rdi,[rip+0x14c94]        # 1a898 <_IO_stdin_used+0x898>
    5c04:	mov    r12d,0x1
    5c0a:	call   22f0 <puts@plt>
    5c0f:	mov    rax,QWORD PTR [rsp+0x108]
    5c17:	xor    rax,QWORD PTR fs:0x28
    5c20:	jne    5e8b <ask_ending_lattice+0x2db>
    5c26:	add    rsp,0x118
    5c2d:	mov    eax,r12d
    5c30:	pop    rbx
    5c31:	pop    rbp
    5c32:	pop    r12
    5c34:	pop    r13
    5c36:	ret    
    5c37:	nop    WORD PTR [rax+rax*1+0x0]
    5c40:	mov    rdx,r12
    5c43:	lea    rsi,[rip+0x151a1]        # 1adeb <_IO_stdin_used+0xdeb>
    5c4a:	mov    edi,0x1
    5c4f:	xor    eax,eax
    5c51:	call   2470 <__printf_chk@plt>
    5c56:	movabs rax,0x6373615f65766173
    5c60:	cmp    QWORD PTR [rsp],rax
    5c64:	je     5d10 <ask_ending_lattice+0x160>
    5c6a:	movabs rax,0x7265735f65766173
    5c74:	cmp    QWORD PTR [rsp],rax
    5c78:	je     5d68 <ask_ending_lattice+0x1b8>
    5c7e:	movabs rax,0x7261705f65766173
    5c88:	cmp    QWORD PTR [rsp],rax
    5c8c:	je     5d88 <ask_ending_lattice+0x1d8>
    5c92:	movabs rdx,0x746e696f706b63
    5c9c:	xor    rdx,QWORD PTR [rsp+0x8]
    5ca1:	movabs rax,0x6568635f65766173
    5cab:	xor    rax,QWORD PTR [rsp]
    5caf:	or     rdx,rax
    5cb2:	jne    5db0 <ask_ending_lattice+0x200>
    5cb8:	mov    DWORD PTR [r13+0x0],0x17
    5cc0:	test   ebx,ebx
    5cc2:	jne    5d50 <ask_ending_lattice+0x1a0>
    5cc8:	xor    eax,eax
    5cca:	mov    rsi,rbp
    5ccd:	lea    rdi,[rip+0x145f4]        # 1a2c8 <_IO_stdin_used+0x2c8>
    5cd4:	call   24a0 <__isoc99_scanf@plt>
    5cd9:	cmp    eax,0x1
    5cdc:	je     5d38 <ask_ending_lattice+0x188>
    5cde:	lea    rdi,[rip+0x14c3b]        # 1a920 <_IO_stdin_used+0x920>
    5ce5:	mov    r12d,0x1
    5ceb:	call   22f0 <puts@plt>
    5cf0:	jmp    5c0f <ask_ending_lattice+0x5f>
    5cf5:	nop    DWORD PTR [rax]
    5cf8:	lea    rdi,[rip+0x14b09]        # 1a808 <_IO_stdin_used+0x808>
    5cff:	call   22f0 <puts@plt>
    5d04:	jmp    5be4 <ask_ending_lattice+0x34>
    5d09:	nop    DWORD PTR [rax+0x0]
    5d10:	cmp    WORD PTR [r12+0x8],0x6969
    5d18:	jne    5c6a <ask_ending_lattice+0xba>
    5d1e:	cmp    BYTE PTR [r12+0xa],0x0
    5d24:	jne    5c6a <ask_ending_lattice+0xba>
    5d2a:	mov    DWORD PTR [r13+0x0],0x15
    5d32:	jmp    5cc0 <ask_ending_lattice+0x110>
    5d34:	nop    DWORD PTR [rax+0x0]
    5d38:	mov    rdi,rbp
    5d3b:	xor    r12d,r12d
    5d3e:	call   22f0 <puts@plt>
    5d43:	jmp    5c0f <ask_ending_lattice+0x5f>
    5d48:	nop    DWORD PTR [rax+rax*1+0x0]
    5d50:	lea    rdi,[rip+0x1507f]        # 1add6 <_IO_stdin_used+0xdd6>
    5d57:	call   22f0 <puts@plt>
    5d5c:	jmp    5cc8 <ask_ending_lattice+0x118>
    5d61:	nop    DWORD PTR [rax+0x0]
    5d68:	cmp    DWORD PTR [rsp+0x8],0x6c6169
    5d70:	jne    5c7e <ask_ending_lattice+0xce>
    5d76:	mov    DWORD PTR [r13+0x0],0x16
    5d7e:	jmp    5cc0 <ask_ending_lattice+0x110>
    5d83:	nop    DWORD PTR [rax+rax*1+0x0]
    5d88:	cmp    DWORD PTR [rsp+0x8],0x656c6c61
    5d90:	jne    5c92 <ask_ending_lattice+0xe2>
    5d96:	cmp    WORD PTR [r12+0xc],0x6c
    5d9d:	jne    5c92 <ask_ending_lattice+0xe2>
    5da3:	mov    DWORD PTR [r13+0x0],0x1c
    5dab:	jmp    5cc0 <ask_ending_lattice+0x110>
    5db0:	movabs rdx,0x686372615f6c6169
    5dba:	xor    rdx,QWORD PTR [rsp+0x8]
    5dbf:	movabs rax,0x7265735f65766173
    5dc9:	xor    rax,QWORD PTR [rsp]
    5dcd:	or     rdx,rax
    5dd0:	jne    5ddc <ask_ending_lattice+0x22c>
    5dd2:	cmp    DWORD PTR [rsp+0x10],0x657669
    5dda:	je     5e32 <ask_ending_lattice+0x282>
    5ddc:	movabs rdx,0x72615f6c656c6c61
    5de6:	xor    rdx,QWORD PTR [rsp+0x8]
    5deb:	movabs rax,0x7261705f65766173
    5df5:	xor    rax,QWORD PTR [rsp]
    5df9:	or     rdx,rax
    5dfc:	jne    5e08 <ask_ending_lattice+0x258>
    5dfe:	cmp    DWORD PTR [rsp+0x10],0x76696863
    5e06:	je     5e3f <ask_ending_lattice+0x28f>
    5e08:	cmp    DWORD PTR [rsp],0x67726f66
    5e0f:	je     5e55 <ask_ending_lattice+0x2a5>
    5e11:	mov    rdx,r12
    5e14:	lea    rsi,[rip+0x14abd]        # 1a8d8 <_IO_stdin_used+0x8d8>
    5e1b:	mov    edi,0x1
    5e20:	xor    eax,eax
    5e22:	call   2470 <__printf_chk@plt>
    5e27:	mov    r12d,0x1
    5e2d:	jmp    5c0f <ask_ending_lattice+0x5f>
    5e32:	mov    DWORD PTR [r13+0x0],0x1e
    5e3a:	jmp    5cc0 <ask_ending_lattice+0x110>
    5e3f:	cmp    WORD PTR [r12+0x14],0x65
    5e46:	jne    5e08 <ask_ending_lattice+0x258>
    5e48:	mov    DWORD PTR [r13+0x0],0x1f
    5e50:	jmp    5cc0 <ask_ending_lattice+0x110>
    5e55:	cmp    WORD PTR [rsp+0x4],0x7465
    5e5c:	jne    5e11 <ask_ending_lattice+0x261>
    5e5e:	cmp    BYTE PTR [r12+0x6],0x0
    5e64:	jne    5e11 <ask_ending_lattice+0x261>
    5e66:	mov    DWORD PTR [r13+0x0],0x14
    5e6e:	mov    edi,0xa
    5e73:	xor    r12d,r12d
    5e76:	call   22b0 <putchar@plt>
    5e7b:	cmp    DWORD PTR [r13+0x0],0x14
    5e80:	je     5c0f <ask_ending_lattice+0x5f>
    5e86:	jmp    5cc0 <ask_ending_lattice+0x110>
    5e8b:	call   2350 <__stack_chk_fail@plt>

0000000000005e90 <coldlat>:
    5e90:	endbr64 
    5e94:	push   r15
    5e96:	push   r14
    5e98:	push   r13
    5e9a:	push   r12
    5e9c:	push   rbp
    5e9d:	push   rbx
    5e9e:	sub    rsp,0x18
    5ea2:	mov    edx,DWORD PTR [rip+0x1c658]        # 22500 <sites_on_node>
    5ea8:	mov    r12,QWORD PTR [rip+0x1c919]        # 227c8 <lattice>
    5eaf:	mov    DWORD PTR [rsp+0xc],0x0
    5eb7:	test   edx,edx
    5eb9:	jle    5f4e <coldlat+0xbe>
    5ebf:	nop
    5ec0:	mov    DWORD PTR [rsp+0x8],0x0
    5ec8:	movsxd rax,DWORD PTR [rsp+0x8]
    5ecd:	xor    r14d,r14d
    5ed0:	lea    rbp,[rax+rax*8]
    5ed4:	xor    r15d,r15d
    5ed7:	movsxd r13,r14d
    5eda:	cmp    r14d,r15d
    5edd:	je     5f70 <coldlat+0xe0>
    5ee3:	lea    rax,[r13+r13*2+0x0]
    5ee8:	movsxd rdx,r15d
    5eeb:	pxor   xmm1,xmm1
    5eef:	add    rax,rbp
    5ef2:	movapd xmm0,xmm1
    5ef6:	lea    rbx,[rdx+rax*1+0x7]
    5efb:	call   13ee0 <cmplx>
    5f00:	shl    rbx,0x4
    5f04:	add    rbx,r12
    5f07:	movsd  QWORD PTR [rbx],xmm0
    5f0b:	movsd  QWORD PTR [rbx+0x8],xmm1
    5f10:	add    r15d,0x1
    5f14:	cmp    r15d,0x3
    5f18:	jne    5eda <coldlat+0x4a>
    5f1a:	add    r14d,0x1
    5f1e:	cmp    r14d,0x3
    5f22:	jne    5ed4 <coldlat+0x44>
    5f24:	add    DWORD PTR [rsp+0x8],0x1
    5f29:	mov    eax,DWORD PTR [rsp+0x8]
    5f2d:	cmp    eax,0x4
    5f30:	jne    5ec8 <coldlat+0x38>
    5f32:	add    DWORD PTR [rsp+0xc],0x1
    5f37:	add    r12,0x800
    5f3e:	mov    eax,DWORD PTR [rsp+0xc]
    5f42:	cmp    DWORD PTR [rip+0x1c5b8],eax        # 22500 <sites_on_node>
    5f48:	jg     5ec0 <coldlat+0x30>
    5f4e:	mov    eax,DWORD PTR [rip+0x1c990]        # 228e4 <this_node>
    5f54:	test   eax,eax
    5f56:	je     5f9f <coldlat+0x10f>
    5f58:	add    rsp,0x18
    5f5c:	pop    rbx
    5f5d:	pop    rbp
    5f5e:	pop    r12
    5f60:	pop    r13
    5f62:	pop    r14
    5f64:	pop    r15
    5f66:	ret    
    5f67:	nop    WORD PTR [rax+rax*1+0x0]
    5f70:	mov    rax,QWORD PTR [rip+0x14329]        # 1a2a0 <_IO_stdin_used+0x2a0>
    5f77:	lea    rbx,[rbp+r13*4+0x7]
    5f7c:	pxor   xmm1,xmm1
    5f80:	shl    rbx,0x4
    5f84:	movq   xmm0,rax
    5f89:	add    rbx,r12
    5f8c:	call   13ee0 <cmplx>
    5f91:	movsd  QWORD PTR [rbx],xmm0
    5f95:	movsd  QWORD PTR [rbx+0x8],xmm1
    5f9a:	jmp    5f10 <coldlat+0x80>
    5f9f:	add    rsp,0x18
    5fa3:	lea    rdi,[rip+0x149ae]        # 1a958 <_IO_stdin_used+0x958>
    5faa:	pop    rbx
    5fab:	pop    rbp
    5fac:	pop    r12
    5fae:	pop    r13
    5fb0:	pop    r14
    5fb2:	pop    r15
    5fb4:	jmp    22f0 <puts@plt>
    5fb9:	nop    DWORD PTR [rax+0x0]

0000000000005fc0 <reload_lattice>:
    5fc0:	endbr64 
    5fc4:	push   r12
    5fc6:	mov    r12d,edi
    5fc9:	push   rbp
    5fca:	mov    rbp,rsi
    5fcd:	push   rbx
    5fce:	lea    ebx,[r12-0xa]
    5fd3:	sub    rsp,0x30
    5fd7:	mov    rax,QWORD PTR fs:0x28
    5fe0:	mov    QWORD PTR [rsp+0x28],rax
    5fe5:	xor    eax,eax
    5fe7:	call   194f0 <dclock>
    5fec:	movsd  QWORD PTR [rsp+0x8],xmm0
    5ff2:	cmp    ebx,0x9
    5ff5:	ja     6010 <reload_lattice+0x50>
    5ff7:	lea    rcx,[rip+0x14e56]        # 1ae54 <_IO_stdin_used+0xe54>
    5ffe:	mov    edx,ebx
    6000:	movsxd rax,DWORD PTR [rcx+rdx*4]
    6004:	add    rax,rcx
    6007:	notrack jmp rax
    600a:	nop    WORD PTR [rax+rax*1+0x0]
    6010:	mov    esi,DWORD PTR [rip+0x1c8ce]        # 228e4 <this_node>
    6016:	test   esi,esi
    6018:	je     61a0 <reload_lattice+0x1e0>
    601e:	mov    edi,0x1
    6023:	call   19570 <terminate>
    6028:	xor    eax,eax
    602a:	xor    r12d,r12d
    602d:	call   194f0 <dclock>
    6032:	cmp    ebx,0x1
    6035:	ja     6190 <reload_lattice+0x1d0>
    603b:	lea    rsi,[rsp+0x18]
    6040:	lea    rdi,[rsp+0x10]
    6045:	call   42b0 <d_plaquette>
    604a:	mov    edx,DWORD PTR [rip+0x1c894]        # 228e4 <this_node>
    6050:	test   edx,edx
    6052:	je     60d0 <reload_lattice+0x110>
    6054:	xor    eax,eax
    6056:	call   194f0 <dclock>
    605b:	call   3ff0 <check_unitarity>
    6060:	lea    rdi,[rsp+0x20]
    6065:	movsd  QWORD PTR [rsp+0x20],xmm0
    606b:	call   19470 <g_doublemax>
    6070:	xor    eax,eax
    6072:	call   194f0 <dclock>
    6077:	mov    eax,DWORD PTR [rip+0x1c867]        # 228e4 <this_node>
    607d:	test   eax,eax
    607f:	je     60b0 <reload_lattice+0xf0>
    6081:	mov    rdi,QWORD PTR [rip+0x1c258]        # 222e0 <stdout@@GLIBC_2.2.5>
    6088:	call   2420 <fflush@plt>
    608d:	mov    rax,QWORD PTR [rsp+0x28]
    6092:	xor    rax,QWORD PTR fs:0x28
    609b:	jne    61bb <reload_lattice+0x1fb>
    60a1:	add    rsp,0x30
    60a5:	mov    rax,r12
    60a8:	pop    rbx
    60a9:	pop    rbp
    60aa:	pop    r12
    60ac:	ret    
    60ad:	nop    DWORD PTR [rax]
    60b0:	movsd  xmm0,QWORD PTR [rsp+0x20]
    60b6:	mov    edi,0x1
    60bb:	mov    eax,0x1
    60c0:	lea    rsi,[rip+0x14909]        # 1a9d0 <_IO_stdin_used+0x9d0>
    60c7:	call   2470 <__printf_chk@plt>
    60cc:	jmp    6081 <reload_lattice+0xc1>
    60ce:	xchg   ax,ax
    60d0:	movsd  xmm1,QWORD PTR [rsp+0x18]
    60d6:	movsd  xmm0,QWORD PTR [rsp+0x10]
    60dc:	mov    edi,0x1
    60e1:	lea    rsi,[rip+0x14c46]        # 1ad2e <_IO_stdin_used+0xd2e>
    60e8:	mov    eax,0x2
    60ed:	call   2470 <__printf_chk@plt>
    60f2:	mov    rdi,QWORD PTR [rip+0x1c1e7]        # 222e0 <stdout@@GLIBC_2.2.5>
    60f9:	call   2420 <fflush@plt>
    60fe:	jmp    6054 <reload_lattice+0x94>
    6103:	nop    DWORD PTR [rax+rax*1+0x0]
    6108:	mov    rdi,rbp
    610b:	call   bb10 <restore_ascii>
    6110:	mov    r12,rax
    6113:	xor    eax,eax
    6115:	call   194f0 <dclock>
    611a:	subsd  xmm0,QWORD PTR [rsp+0x8]
    6120:	mov    ecx,DWORD PTR [rip+0x1c7be]        # 228e4 <this_node>
    6126:	test   ecx,ecx
    6128:	jne    603b <reload_lattice+0x7b>
    612e:	lea    rsi,[rip+0x1486b]        # 1a9a0 <_IO_stdin_used+0x9a0>
    6135:	mov    edi,0x1
    613a:	mov    eax,0x1
    613f:	call   2470 <__printf_chk@plt>
    6144:	jmp    603b <reload_lattice+0x7b>
    6149:	nop    DWORD PTR [rax+0x0]
    6150:	mov    rdi,rbp
    6153:	call   c7c0 <restore_serial>
    6158:	mov    r12,rax
    615b:	jmp    6113 <reload_lattice+0x153>
    615d:	nop    DWORD PTR [rax]
    6160:	xor    eax,eax
    6162:	xor    r12d,r12d
    6165:	call   5e90 <coldlat>
    616a:	xor    eax,eax
    616c:	call   194f0 <dclock>
    6171:	jmp    603b <reload_lattice+0x7b>
    6176:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6180:	mov    rdi,rbp
    6183:	call   c810 <restore_parallel>
    6188:	mov    r12,rax
    618b:	jmp    6113 <reload_lattice+0x153>
    618d:	nop    DWORD PTR [rax]
    6190:	subsd  xmm0,QWORD PTR [rsp+0x8]
    6196:	jmp    6120 <reload_lattice+0x160>
    6198:	nop    DWORD PTR [rax+rax*1+0x0]
    61a0:	mov    edx,r12d
    61a3:	lea    rsi,[rip+0x147ce]        # 1a978 <_IO_stdin_used+0x978>
    61aa:	mov    edi,0x1
    61af:	xor    eax,eax
    61b1:	call   2470 <__printf_chk@plt>
    61b6:	jmp    601e <reload_lattice+0x5e>
    61bb:	call   2350 <__stack_chk_fail@plt>

00000000000061c0 <funnylat>:
    61c0:	endbr64 
    61c4:	push   r15
    61c6:	push   r14
    61c8:	push   r13
    61ca:	push   r12
    61cc:	push   rbp
    61cd:	push   rbx
    61ce:	sub    rsp,0x18
    61d2:	mov    eax,DWORD PTR [rip+0x1c328]        # 22500 <sites_on_node>
    61d8:	mov    r13,QWORD PTR [rip+0x1c5e9]        # 227c8 <lattice>
    61df:	mov    DWORD PTR [rsp+0xc],0x0
    61e7:	test   eax,eax
    61e9:	jle    631e <funnylat+0x15e>
    61ef:	nop
    61f0:	lea    r15,[r13+0x70]
    61f4:	xor    r12d,r12d
    61f7:	movsxd rax,r12d
    61fa:	xor    r14d,r14d
    61fd:	lea    rbp,[rax+rax*8]
    6201:	shl    rbp,0x4
    6205:	mov    QWORD PTR [rsp],rbp
    6209:	movsxd rax,r14d
    620c:	pxor   xmm1,xmm1
    6210:	add    r14d,0x1
    6214:	lea    rbx,[rax+rax*2]
    6218:	movapd xmm0,xmm1
    621c:	shl    rbx,0x4
    6220:	add    rbx,QWORD PTR [rsp]
    6224:	call   13ee0 <cmplx>
    6229:	add    rbx,r13
    622c:	movsd  QWORD PTR [rbx+0x78],xmm1
    6231:	pxor   xmm1,xmm1
    6235:	movsd  QWORD PTR [rbx+0x70],xmm0
    623a:	movapd xmm0,xmm1
    623e:	call   13ee0 <cmplx>
    6243:	movsd  QWORD PTR [rbx+0x88],xmm1
    624b:	pxor   xmm1,xmm1
    624f:	movsd  QWORD PTR [rbx+0x80],xmm0
    6257:	movapd xmm0,xmm1
    625b:	call   13ee0 <cmplx>
    6260:	movsd  QWORD PTR [rbx+0x90],xmm0
    6268:	movsd  QWORD PTR [rbx+0x98],xmm1
    6270:	cmp    r14d,0x3
    6274:	jne    6209 <funnylat+0x49>
    6276:	movsx  eax,WORD PTR [r13+0x0]
    627b:	pxor   xmm0,xmm0
    627f:	pxor   xmm1,xmm1
    6283:	add    r15,0x90
    628a:	cvtsi2sd xmm1,r12d
    628f:	add    r12d,0x1
    6293:	lea    eax,[rax+rax*4]
    6296:	add    eax,eax
    6298:	cvtsi2sd xmm0,eax
    629c:	movsx  eax,WORD PTR [r13+0x2]
    62a1:	movsd  QWORD PTR [r15-0x90],xmm1
    62aa:	movsd  QWORD PTR [r15-0x88],xmm1
    62b3:	imul   eax,eax,0x64
    62b6:	movsd  QWORD PTR [r15-0x50],xmm0
    62bc:	pxor   xmm0,xmm0
    62c0:	cvtsi2sd xmm0,eax
    62c4:	movsx  eax,WORD PTR [r13+0x4]
    62c9:	lea    eax,[rax+rax*4]
    62cc:	add    eax,eax
    62ce:	movsd  QWORD PTR [r15-0x10],xmm0
    62d4:	pxor   xmm0,xmm0
    62d8:	cvtsi2sd xmm0,eax
    62dc:	movsx  eax,WORD PTR [r13+0x6]
    62e1:	imul   eax,eax,0x64
    62e4:	movsd  QWORD PTR [r15-0x48],xmm0
    62ea:	pxor   xmm0,xmm0
    62ee:	cvtsi2sd xmm0,eax
    62f2:	movsd  QWORD PTR [r15-0x8],xmm0
    62f8:	cmp    r12d,0x4
    62fc:	jne    61f7 <funnylat+0x37>
    6302:	add    DWORD PTR [rsp+0xc],0x1
    6307:	add    r13,0x800
    630e:	mov    eax,DWORD PTR [rsp+0xc]
    6312:	cmp    DWORD PTR [rip+0x1c1e8],eax        # 22500 <sites_on_node>
    6318:	jg     61f0 <funnylat+0x30>
    631e:	add    rsp,0x18
    6322:	pop    rbx
    6323:	pop    rbp
    6324:	pop    r12
    6326:	pop    r13
    6328:	pop    r14
    632a:	pop    r15
    632c:	ret    
    632d:	nop    DWORD PTR [rax]

0000000000006330 <get_f>:
    6330:	endbr64 
    6334:	push   r14
    6336:	push   r13
    6338:	push   r12
    633a:	mov    r12,rsi
    633d:	push   rbp
    633e:	mov    rbp,rdx
    6341:	push   rbx
    6342:	sub    rsp,0x60
    6346:	mov    rax,QWORD PTR fs:0x28
    634f:	mov    QWORD PTR [rsp+0x58],rax
    6354:	xor    eax,eax
    6356:	test   edi,edi
    6358:	je     6400 <get_f+0xd0>
    635e:	mov    rbx,rsp
    6361:	lea    r13,[rip+0x14a7d]        # 1ade5 <_IO_stdin_used+0xde5>
    6368:	nop    DWORD PTR [rax+rax*1+0x0]
    6370:	mov    rdx,r12
    6373:	mov    rsi,r13
    6376:	mov    edi,0x1
    637b:	xor    eax,eax
    637d:	call   2470 <__printf_chk@plt>
    6382:	mov    rsi,rbx
    6385:	lea    rdi,[rip+0x13f3c]        # 1a2c8 <_IO_stdin_used+0x2c8>
    638c:	xor    eax,eax
    638e:	call   24a0 <__isoc99_scanf@plt>
    6393:	xor    eax,eax
    6395:	mov    rdx,rbp
    6398:	mov    rdi,rbx
    639b:	lea    rsi,[rip+0x14a4d]        # 1adef <_IO_stdin_used+0xdef>
    63a2:	call   2430 <__isoc99_sscanf@plt>
    63a7:	cmp    eax,0x1
    63aa:	je     63c0 <get_f+0x90>
    63ac:	lea    rdi,[rip+0x14a47]        # 1adfa <_IO_stdin_used+0xdfa>
    63b3:	call   22f0 <puts@plt>
    63b8:	jmp    6370 <get_f+0x40>
    63ba:	nop    WORD PTR [rax+rax*1+0x0]
    63c0:	movsd  xmm0,QWORD PTR [rbp+0x0]
    63c5:	mov    rdx,r12
    63c8:	mov    edi,0x1
    63cd:	xor    r13d,r13d
    63d0:	lea    rsi,[rip+0x14a1c]        # 1adf3 <_IO_stdin_used+0xdf3>
    63d7:	call   2470 <__printf_chk@plt>
    63dc:	mov    rax,QWORD PTR [rsp+0x58]
    63e1:	xor    rax,QWORD PTR fs:0x28
    63ea:	jne    6534 <get_f+0x204>
    63f0:	add    rsp,0x60
    63f4:	mov    eax,r13d
    63f7:	pop    rbx
    63f8:	pop    rbp
    63f9:	pop    r12
    63fb:	pop    r13
    63fd:	pop    r14
    63ff:	ret    
    6400:	mov    r14,rsp
    6403:	xor    eax,eax
    6405:	lea    rdi,[rip+0x13ebc]        # 1a2c8 <_IO_stdin_used+0x2c8>
    640c:	mov    rsi,r14
    640f:	call   24a0 <__isoc99_scanf@plt>
    6414:	cmp    eax,0xffffffff
    6417:	je     64f2 <get_f+0x1c2>
    641d:	test   eax,eax
    641f:	je     64b4 <get_f+0x184>
    6425:	mov    rsi,r12
    6428:	mov    rdi,r14
    642b:	call   23e0 <strcmp@plt>
    6430:	mov    r13d,eax
    6433:	test   eax,eax
    6435:	jne    6490 <get_f+0x160>
    6437:	lea    rsi,[rip+0x149ad]        # 1adeb <_IO_stdin_used+0xdeb>
    643e:	mov    edi,0x1
    6443:	xor    eax,eax
    6445:	mov    rdx,r12
    6448:	call   2470 <__printf_chk@plt>
    644d:	xor    eax,eax
    644f:	mov    rsi,rbp
    6452:	lea    rdi,[rip+0x14996]        # 1adef <_IO_stdin_used+0xdef>
    6459:	call   24a0 <__isoc99_scanf@plt>
    645e:	cmp    eax,0xffffffff
    6461:	je     6513 <get_f+0x1e3>
    6467:	test   eax,eax
    6469:	je     64d3 <get_f+0x1a3>
    646b:	movsd  xmm0,QWORD PTR [rbp+0x0]
    6470:	mov    edi,0x1
    6475:	mov    eax,0x1
    647a:	lea    rsi,[rip+0x14975]        # 1adf6 <_IO_stdin_used+0xdf6>
    6481:	call   2470 <__printf_chk@plt>
    6486:	jmp    63dc <get_f+0xac>
    648b:	nop    DWORD PTR [rax+rax*1+0x0]
    6490:	mov    rcx,r14
    6493:	mov    rdx,r12
    6496:	lea    rsi,[rip+0x145b3]        # 1aa50 <_IO_stdin_used+0xa50>
    649d:	xor    eax,eax
    649f:	mov    edi,0x1
    64a4:	mov    r13d,0x1
    64aa:	call   2470 <__printf_chk@plt>
    64af:	jmp    63dc <get_f+0xac>
    64b4:	mov    rdx,r12
    64b7:	lea    rsi,[rip+0x1456a]        # 1aa28 <_IO_stdin_used+0xa28>
    64be:	mov    edi,0x1
    64c3:	mov    r13d,0x1
    64c9:	call   2470 <__printf_chk@plt>
    64ce:	jmp    63dc <get_f+0xac>
    64d3:	mov    rdx,r12
    64d6:	lea    rsi,[rip+0x145db]        # 1aab8 <_IO_stdin_used+0xab8>
    64dd:	mov    edi,0x1
    64e2:	mov    r13d,0x1
    64e8:	call   2470 <__printf_chk@plt>
    64ed:	jmp    63dc <get_f+0xac>
    64f2:	mov    rdx,r12
    64f5:	mov    edi,0x1
    64fa:	xor    eax,eax
    64fc:	mov    r13d,0x1
    6502:	lea    rsi,[rip+0x144ef]        # 1a9f8 <_IO_stdin_used+0x9f8>
    6509:	call   2470 <__printf_chk@plt>
    650e:	jmp    63dc <get_f+0xac>
    6513:	mov    rdx,r12
    6516:	mov    edi,0x1
    651b:	xor    eax,eax
    651d:	mov    r13d,0x1
    6523:	lea    rsi,[rip+0x1455e]        # 1aa88 <_IO_stdin_used+0xa88>
    652a:	call   2470 <__printf_chk@plt>
    652f:	jmp    63dc <get_f+0xac>
    6534:	call   2350 <__stack_chk_fail@plt>
    6539:	nop    DWORD PTR [rax+0x0]

0000000000006540 <get_i>:
    6540:	endbr64 
    6544:	push   r14
    6546:	push   r13
    6548:	push   r12
    654a:	mov    r12,rsi
    654d:	push   rbp
    654e:	mov    rbp,rdx
    6551:	push   rbx
    6552:	sub    rsp,0x60
    6556:	mov    rax,QWORD PTR fs:0x28
    655f:	mov    QWORD PTR [rsp+0x58],rax
    6564:	xor    eax,eax
    6566:	test   edi,edi
    6568:	je     6610 <get_i+0xd0>
    656e:	mov    rbx,rsp
    6571:	lea    r13,[rip+0x1486d]        # 1ade5 <_IO_stdin_used+0xde5>
    6578:	nop    DWORD PTR [rax+rax*1+0x0]
    6580:	mov    rdx,r12
    6583:	mov    rsi,r13
    6586:	mov    edi,0x1
    658b:	xor    eax,eax
    658d:	call   2470 <__printf_chk@plt>
    6592:	mov    rsi,rbx
    6595:	lea    rdi,[rip+0x13d2c]        # 1a2c8 <_IO_stdin_used+0x2c8>
    659c:	xor    eax,eax
    659e:	call   24a0 <__isoc99_scanf@plt>
    65a3:	xor    eax,eax
    65a5:	mov    rdx,rbp
    65a8:	mov    rdi,rbx
    65ab:	lea    rsi,[rip+0x14bf8]        # 1b1aa <_IO_stdin_used+0x11aa>
    65b2:	call   2430 <__isoc99_sscanf@plt>
    65b7:	cmp    eax,0x1
    65ba:	je     65d0 <get_i+0x90>
    65bc:	lea    rdi,[rip+0x14837]        # 1adfa <_IO_stdin_used+0xdfa>
    65c3:	call   22f0 <puts@plt>
    65c8:	jmp    6580 <get_i+0x40>
    65ca:	nop    WORD PTR [rax+rax*1+0x0]
    65d0:	mov    ecx,DWORD PTR [rbp+0x0]
    65d3:	mov    rdx,r12
    65d6:	lea    rsi,[rip+0x14830]        # 1ae0d <_IO_stdin_used+0xe0d>
    65dd:	xor    eax,eax
    65df:	mov    edi,0x1
    65e4:	xor    r13d,r13d
    65e7:	call   2470 <__printf_chk@plt>
    65ec:	mov    rax,QWORD PTR [rsp+0x58]
    65f1:	xor    rax,QWORD PTR fs:0x28
    65fa:	jne    6744 <get_i+0x204>
    6600:	add    rsp,0x60
    6604:	mov    eax,r13d
    6607:	pop    rbx
    6608:	pop    rbp
    6609:	pop    r12
    660b:	pop    r13
    660d:	pop    r14
    660f:	ret    
    6610:	mov    r14,rsp
    6613:	xor    eax,eax
    6615:	lea    rdi,[rip+0x13cac]        # 1a2c8 <_IO_stdin_used+0x2c8>
    661c:	mov    rsi,r14
    661f:	call   24a0 <__isoc99_scanf@plt>
    6624:	cmp    eax,0xffffffff
    6627:	je     6702 <get_i+0x1c2>
    662d:	test   eax,eax
    662f:	je     66c4 <get_i+0x184>
    6635:	mov    rsi,r12
    6638:	mov    rdi,r14
    663b:	call   23e0 <strcmp@plt>
    6640:	mov    r13d,eax
    6643:	test   eax,eax
    6645:	jne    66a0 <get_i+0x160>
    6647:	lea    rsi,[rip+0x1479d]        # 1adeb <_IO_stdin_used+0xdeb>
    664e:	mov    edi,0x1
    6653:	xor    eax,eax
    6655:	mov    rdx,r12
    6658:	call   2470 <__printf_chk@plt>
    665d:	xor    eax,eax
    665f:	mov    rsi,rbp
    6662:	lea    rdi,[rip+0x14b41]        # 1b1aa <_IO_stdin_used+0x11aa>
    6669:	call   24a0 <__isoc99_scanf@plt>
    666e:	cmp    eax,0xffffffff
    6671:	je     6723 <get_i+0x1e3>
    6677:	test   eax,eax
    6679:	je     66e3 <get_i+0x1a3>
    667b:	mov    edx,DWORD PTR [rbp+0x0]
    667e:	lea    rsi,[rip+0x14b5b]        # 1b1e0 <_IO_stdin_used+0x11e0>
    6685:	mov    edi,0x1
    668a:	xor    eax,eax
    668c:	call   2470 <__printf_chk@plt>
    6691:	jmp    65ec <get_i+0xac>
    6696:	nop    WORD PTR cs:[rax+rax*1+0x0]
    66a0:	mov    rcx,r14
    66a3:	mov    rdx,r12
    66a6:	lea    rsi,[rip+0x14493]        # 1ab40 <_IO_stdin_used+0xb40>
    66ad:	xor    eax,eax
    66af:	mov    edi,0x1
    66b4:	mov    r13d,0x1
    66ba:	call   2470 <__printf_chk@plt>
    66bf:	jmp    65ec <get_i+0xac>
    66c4:	mov    rdx,r12
    66c7:	lea    rsi,[rip+0x1444a]        # 1ab18 <_IO_stdin_used+0xb18>
    66ce:	mov    edi,0x1
    66d3:	mov    r13d,0x1
    66d9:	call   2470 <__printf_chk@plt>
    66de:	jmp    65ec <get_i+0xac>
    66e3:	mov    rdx,r12
    66e6:	lea    rsi,[rip+0x144bb]        # 1aba8 <_IO_stdin_used+0xba8>
    66ed:	mov    edi,0x1
    66f2:	mov    r13d,0x1
    66f8:	call   2470 <__printf_chk@plt>
    66fd:	jmp    65ec <get_i+0xac>
    6702:	mov    rdx,r12
    6705:	mov    edi,0x1
    670a:	xor    eax,eax
    670c:	mov    r13d,0x1
    6712:	lea    rsi,[rip+0x143cf]        # 1aae8 <_IO_stdin_used+0xae8>
    6719:	call   2470 <__printf_chk@plt>
    671e:	jmp    65ec <get_i+0xac>
    6723:	mov    rdx,r12
    6726:	mov    edi,0x1
    672b:	xor    eax,eax
    672d:	mov    r13d,0x1
    6733:	lea    rsi,[rip+0x1443e]        # 1ab78 <_IO_stdin_used+0xb78>
    673a:	call   2470 <__printf_chk@plt>
    673f:	jmp    65ec <get_i+0xac>
    6744:	call   2350 <__stack_chk_fail@plt>
    6749:	nop    DWORD PTR [rax+0x0]

0000000000006750 <get_s>:
    6750:	endbr64 
    6754:	push   r15
    6756:	push   r14
    6758:	push   r13
    675a:	mov    r13,rdx
    675d:	push   r12
    675f:	mov    r12,rsi
    6762:	push   rbx
    6763:	sub    rsp,0x60
    6767:	mov    rax,QWORD PTR fs:0x28
    6770:	mov    QWORD PTR [rsp+0x58],rax
    6775:	xor    eax,eax
    6777:	test   edi,edi
    6779:	je     6818 <get_s+0xc8>
    677f:	lea    rbx,[rip+0x1465f]        # 1ade5 <_IO_stdin_used+0xde5>
    6786:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6790:	mov    rsi,rbx
    6793:	mov    edi,0x1
    6798:	xor    eax,eax
    679a:	mov    rdx,r12
    679d:	call   2470 <__printf_chk@plt>
    67a2:	xor    eax,eax
    67a4:	mov    rsi,r13
    67a7:	lea    rdi,[rip+0x13b1a]        # 1a2c8 <_IO_stdin_used+0x2c8>
    67ae:	call   24a0 <__isoc99_scanf@plt>
    67b3:	cmp    eax,0x1
    67b6:	je     67d0 <get_s+0x80>
    67b8:	lea    rdi,[rip+0x1463b]        # 1adfa <_IO_stdin_used+0xdfa>
    67bf:	call   22f0 <puts@plt>
    67c4:	jmp    6790 <get_s+0x40>
    67c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    67d0:	mov    rcx,r13
    67d3:	mov    rdx,r12
    67d6:	lea    rsi,[rip+0x14637]        # 1ae14 <_IO_stdin_used+0xe14>
    67dd:	xor    eax,eax
    67df:	mov    edi,0x1
    67e4:	xor    r14d,r14d
    67e7:	call   2470 <__printf_chk@plt>
    67ec:	mov    rax,QWORD PTR [rsp+0x58]
    67f1:	xor    rax,QWORD PTR fs:0x28
    67fa:	jne    6934 <get_s+0x1e4>
    6800:	add    rsp,0x60
    6804:	mov    eax,r14d
    6807:	pop    rbx
    6808:	pop    r12
    680a:	pop    r13
    680c:	pop    r14
    680e:	pop    r15
    6810:	ret    
    6811:	nop    DWORD PTR [rax+0x0]
    6818:	mov    r15,rsp
    681b:	xor    eax,eax
    681d:	lea    rdi,[rip+0x13aa4]        # 1a2c8 <_IO_stdin_used+0x2c8>
    6824:	mov    rsi,r15
    6827:	call   24a0 <__isoc99_scanf@plt>
    682c:	cmp    eax,0xffffffff
    682f:	je     68f2 <get_s+0x1a2>
    6835:	test   eax,eax
    6837:	je     68b4 <get_s+0x164>
    6839:	mov    rsi,r12
    683c:	mov    rdi,r15
    683f:	call   23e0 <strcmp@plt>
    6844:	mov    r14d,eax
    6847:	test   eax,eax
    6849:	jne    6890 <get_s+0x140>
    684b:	lea    rsi,[rip+0x14599]        # 1adeb <_IO_stdin_used+0xdeb>
    6852:	mov    edi,0x1
    6857:	xor    eax,eax
    6859:	mov    rdx,r12
    685c:	call   2470 <__printf_chk@plt>
    6861:	xor    eax,eax
    6863:	mov    rsi,r13
    6866:	lea    rdi,[rip+0x13a5b]        # 1a2c8 <_IO_stdin_used+0x2c8>
    686d:	call   24a0 <__isoc99_scanf@plt>
    6872:	cmp    eax,0xffffffff
    6875:	je     6913 <get_s+0x1c3>
    687b:	test   eax,eax
    687d:	je     68d3 <get_s+0x183>
    687f:	mov    rdi,r13
    6882:	call   22f0 <puts@plt>
    6887:	jmp    67ec <get_s+0x9c>
    688c:	nop    DWORD PTR [rax+0x0]
    6890:	mov    rcx,r15
    6893:	mov    rdx,r12
    6896:	lea    rsi,[rip+0x14393]        # 1ac30 <_IO_stdin_used+0xc30>
    689d:	xor    eax,eax
    689f:	mov    edi,0x1
    68a4:	mov    r14d,0x1
    68aa:	call   2470 <__printf_chk@plt>
    68af:	jmp    67ec <get_s+0x9c>
    68b4:	mov    rdx,r12
    68b7:	lea    rsi,[rip+0x1434a]        # 1ac08 <_IO_stdin_used+0xc08>
    68be:	mov    edi,0x1
    68c3:	mov    r14d,0x1
    68c9:	call   2470 <__printf_chk@plt>
    68ce:	jmp    67ec <get_s+0x9c>
    68d3:	mov    rdx,r12
    68d6:	lea    rsi,[rip+0x143bb]        # 1ac98 <_IO_stdin_used+0xc98>
    68dd:	mov    edi,0x1
    68e2:	mov    r14d,0x1
    68e8:	call   2470 <__printf_chk@plt>
    68ed:	jmp    67ec <get_s+0x9c>
    68f2:	mov    rdx,r12
    68f5:	mov    edi,0x1
    68fa:	xor    eax,eax
    68fc:	mov    r14d,0x1
    6902:	lea    rsi,[rip+0x142cf]        # 1abd8 <_IO_stdin_used+0xbd8>
    6909:	call   2470 <__printf_chk@plt>
    690e:	jmp    67ec <get_s+0x9c>
    6913:	mov    rdx,r12
    6916:	mov    edi,0x1
    691b:	xor    eax,eax
    691d:	mov    r14d,0x1
    6923:	lea    rsi,[rip+0x1433e]        # 1ac68 <_IO_stdin_used+0xc68>
    692a:	call   2470 <__printf_chk@plt>
    692f:	jmp    67ec <get_s+0x9c>
    6934:	call   2350 <__stack_chk_fail@plt>
    6939:	nop    DWORD PTR [rax+0x0]

0000000000006940 <get_prompt>:
    6940:	endbr64 
    6944:	push   rbp
    6945:	push   rbx
    6946:	mov    rbx,rdi
    6949:	sub    rsp,0x68
    694d:	mov    rax,QWORD PTR fs:0x28
    6956:	mov    QWORD PTR [rsp+0x58],rax
    695b:	xor    eax,eax
    695d:	mov    DWORD PTR [rdi],0xffffffff
    6963:	mov    rbp,rsp
    6966:	lea    rdi,[rip+0x1435b]        # 1acc8 <_IO_stdin_used+0xcc8>
    696d:	call   22f0 <puts@plt>
    6972:	xor    eax,eax
    6974:	mov    rsi,rbp
    6977:	lea    rdi,[rip+0x1394a]        # 1a2c8 <_IO_stdin_used+0x2c8>
    697e:	call   24a0 <__isoc99_scanf@plt>
    6983:	cmp    DWORD PTR [rsp],0x6d6f7270
    698a:	je     69e0 <get_prompt+0xa0>
    698c:	cmp    WORD PTR [rsp],0x30
    6991:	je     69d0 <get_prompt+0x90>
    6993:	cmp    WORD PTR [rsp],0x31
    6998:	je     6a08 <get_prompt+0xc8>
    699a:	cmp    DWORD PTR [rbx],0x1
    699d:	jbe    69d6 <get_prompt+0x96>
    699f:	lea    rdi,[rip+0x1434a]        # 1acf0 <_IO_stdin_used+0xcf0>
    69a6:	call   22f0 <puts@plt>
    69ab:	mov    eax,0x1
    69b0:	mov    rdx,QWORD PTR [rsp+0x58]
    69b5:	xor    rdx,QWORD PTR fs:0x28
    69be:	jne    6a12 <get_prompt+0xd2>
    69c0:	add    rsp,0x68
    69c4:	pop    rbx
    69c5:	pop    rbp
    69c6:	ret    
    69c7:	nop    WORD PTR [rax+rax*1+0x0]
    69d0:	mov    DWORD PTR [rbx],0x0
    69d6:	xor    eax,eax
    69d8:	jmp    69b0 <get_prompt+0x70>
    69da:	nop    WORD PTR [rax+rax*1+0x0]
    69e0:	cmp    WORD PTR [rsp+0x4],0x7470
    69e7:	jne    698c <get_prompt+0x4c>
    69e9:	cmp    BYTE PTR [rbp+0x6],0x0
    69ed:	jne    698c <get_prompt+0x4c>
    69ef:	mov    rsi,rbx
    69f2:	lea    rdi,[rip+0x147b1]        # 1b1aa <_IO_stdin_used+0x11aa>
    69f9:	xor    eax,eax
    69fb:	call   24a0 <__isoc99_scanf@plt>
    6a00:	jmp    699a <get_prompt+0x5a>
    6a02:	nop    WORD PTR [rax+rax*1+0x0]
    6a08:	mov    DWORD PTR [rbx],0x1
    6a0e:	xor    eax,eax
    6a10:	jmp    69b0 <get_prompt+0x70>
    6a12:	call   2350 <__stack_chk_fail@plt>
    6a17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006a20 <qcdhdr_destroy_hdr.part.0>:
    6a20:	push   rbp
    6a21:	mov    rbp,rdi
    6a24:	push   rbx
    6a25:	sub    rsp,0x8
    6a29:	mov    eax,DWORD PTR [rdi]
    6a2b:	test   eax,eax
    6a2d:	jle    6a5b <qcdhdr_destroy_hdr.part.0+0x3b>
    6a2f:	xor    ebx,ebx
    6a31:	nop    DWORD PTR [rax+0x0]
    6a38:	mov    rax,QWORD PTR [rbp+0x10]
    6a3c:	mov    rdi,QWORD PTR [rax+rbx*8]
    6a40:	call   22a0 <free@plt>
    6a45:	mov    rax,QWORD PTR [rbp+0x8]
    6a49:	mov    rdi,QWORD PTR [rax+rbx*8]
    6a4d:	add    rbx,0x1
    6a51:	call   22a0 <free@plt>
    6a56:	cmp    DWORD PTR [rbp+0x0],ebx
    6a59:	jg     6a38 <qcdhdr_destroy_hdr.part.0+0x18>
    6a5b:	mov    rdi,QWORD PTR [rbp+0x8]
    6a5f:	call   22a0 <free@plt>
    6a64:	mov    rdi,QWORD PTR [rbp+0x10]
    6a68:	call   22a0 <free@plt>
    6a6d:	add    rsp,0x8
    6a71:	mov    rdi,rbp
    6a74:	pop    rbx
    6a75:	pop    rbp
    6a76:	jmp    22a0 <free@plt>
    6a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006a80 <pread_data.part.0>:
    6a80:	push   r12
    6a82:	mov    r12,rdi
    6a85:	push   rbx
    6a86:	mov    rbx,rsi
    6a89:	sub    rsp,0x8
    6a8d:	call   22c0 <__errno_location@plt>
    6a92:	mov    r8,rbx
    6a95:	mov    rdx,r12
    6a98:	mov    edi,0x1
    6a9d:	mov    r9d,DWORD PTR [rax]
    6aa0:	mov    ecx,DWORD PTR [rip+0x1be3e]        # 228e4 <this_node>
    6aa6:	lea    rsi,[rip+0x143cf]        # 1ae7c <_IO_stdin_used+0xe7c>
    6aad:	xor    eax,eax
    6aaf:	call   2470 <__printf_chk@plt>
    6ab4:	mov    rdi,QWORD PTR [rip+0x1b825]        # 222e0 <stdout@@GLIBC_2.2.5>
    6abb:	call   2420 <fflush@plt>
    6ac0:	add    rsp,0x8
    6ac4:	mov    eax,0x1
    6ac9:	pop    rbx
    6aca:	pop    r12
    6acc:	ret    
    6acd:	nop    DWORD PTR [rax]

0000000000006ad0 <read_site_list.part.0>:
    6ad0:	push   rbp
    6ad1:	mov    ebp,edi
    6ad3:	push   rbx
    6ad4:	mov    rbx,rsi
    6ad7:	mov    esi,0x4
    6adc:	sub    rsp,0x8
    6ae0:	movsxd rdi,DWORD PTR [rip+0x1b909]        # 223f0 <volume>
    6ae7:	call   23d0 <calloc@plt>
    6aec:	mov    QWORD PTR [rbx+0x20],rax
    6af0:	test   rax,rax
    6af3:	je     6bab <read_site_list.part.0+0xdb>
    6af9:	mov    rdi,rax
    6afc:	mov    eax,DWORD PTR [rip+0x1bde2]        # 228e4 <this_node>
    6b02:	movsxd rdx,DWORD PTR [rip+0x1b8e7]        # 223f0 <volume>
    6b09:	test   eax,eax
    6b0b:	jne    6b35 <read_site_list.part.0+0x65>
    6b0d:	mov    rcx,QWORD PTR [rbx]
    6b10:	mov    esi,0x4
    6b15:	test   ebp,ebp
    6b17:	jne    6b50 <read_site_list.part.0+0x80>
    6b19:	call   2300 <fread@plt>
    6b1e:	mov    esi,DWORD PTR [rip+0x1b8cc]        # 223f0 <volume>
    6b24:	cmp    esi,eax
    6b26:	jne    6b5f <read_site_list.part.0+0x8f>
    6b28:	cmp    DWORD PTR [rbx+0x18],0x1
    6b2c:	mov    rdi,QWORD PTR [rbx+0x20]
    6b30:	je     6b99 <read_site_list.part.0+0xc9>
    6b32:	movsxd rdx,esi
    6b35:	add    rsp,0x8
    6b39:	lea    esi,[rdx*4+0x0]
    6b40:	pop    rbx
    6b41:	pop    rbp
    6b42:	jmp    194c0 <broadcast_bytes>
    6b47:	nop    WORD PTR [rax+rax*1+0x0]
    6b50:	call   19d90 <g_read>
    6b55:	mov    esi,DWORD PTR [rip+0x1b895]        # 223f0 <volume>
    6b5b:	cmp    esi,eax
    6b5d:	je     6b28 <read_site_list.part.0+0x58>
    6b5f:	call   22c0 <__errno_location@plt>
    6b64:	mov    edx,DWORD PTR [rip+0x1bd7a]        # 228e4 <this_node>
    6b6a:	mov    edi,0x1
    6b6f:	lea    rsi,[rip+0x14832]        # 1b3a8 <_IO_stdin_used+0x13a8>
    6b76:	mov    ecx,DWORD PTR [rax]
    6b78:	xor    eax,eax
    6b7a:	call   2470 <__printf_chk@plt>
    6b7f:	mov    edi,0x1
    6b84:	call   19570 <terminate>
    6b89:	cmp    DWORD PTR [rbx+0x18],0x1
    6b8d:	mov    esi,DWORD PTR [rip+0x1b85d]        # 223f0 <volume>
    6b93:	mov    rdi,QWORD PTR [rbx+0x20]
    6b97:	jne    6b32 <read_site_list.part.0+0x62>
    6b99:	call   15960 <byterevn>
    6b9e:	mov    rdi,QWORD PTR [rbx+0x20]
    6ba2:	movsxd rdx,DWORD PTR [rip+0x1b847]        # 223f0 <volume>
    6ba9:	jmp    6b35 <read_site_list.part.0+0x65>
    6bab:	lea    rdi,[rip+0x147c6]        # 1b378 <_IO_stdin_used+0x1378>
    6bb2:	call   22f0 <puts@plt>
    6bb7:	mov    edi,0x1
    6bbc:	call   19570 <terminate>
    6bc1:	mov    rdi,QWORD PTR [rbx+0x20]
    6bc5:	jmp    6afc <read_site_list.part.0+0x2c>
    6bca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006bd0 <qcdhdr_get_str>:
    6bd0:	endbr64 
    6bd4:	push   r15
    6bd6:	push   r14
    6bd8:	push   r13
    6bda:	mov    r13,rdx
    6bdd:	push   r12
    6bdf:	push   rbp
    6be0:	push   rbx
    6be1:	sub    rsp,0x8
    6be5:	mov    eax,DWORD PTR [rsi]
    6be7:	test   al,al
    6be9:	jle    6c48 <qcdhdr_get_str+0x78>
    6beb:	movsx  eax,al
    6bee:	mov    r15,QWORD PTR [rsi+0x8]
    6bf2:	mov    rbx,rdi
    6bf5:	mov    r12,rsi
    6bf8:	sub    eax,0x1
    6bfb:	xor    r14d,r14d
    6bfe:	lea    rbp,[rax*8+0x8]
    6c06:	jmp    6c19 <qcdhdr_get_str+0x49>
    6c08:	nop    DWORD PTR [rax+rax*1+0x0]
    6c10:	add    r14,0x8
    6c14:	cmp    r14,rbp
    6c17:	je     6c48 <qcdhdr_get_str+0x78>
    6c19:	mov    rsi,QWORD PTR [r15+r14*1]
    6c1d:	mov    rdi,rbx
    6c20:	call   23e0 <strcmp@plt>
    6c25:	test   eax,eax
    6c27:	jne    6c10 <qcdhdr_get_str+0x40>
    6c29:	mov    rdx,QWORD PTR [r12+0x10]
    6c2e:	mov    rdx,QWORD PTR [rdx+r14*1]
    6c32:	mov    QWORD PTR [r13+0x0],rdx
    6c36:	add    rsp,0x8
    6c3a:	pop    rbx
    6c3b:	pop    rbp
    6c3c:	pop    r12
    6c3e:	pop    r13
    6c40:	pop    r14
    6c42:	pop    r15
    6c44:	ret    
    6c45:	nop    DWORD PTR [rax]
    6c48:	mov    QWORD PTR [r13+0x0],0x0
    6c50:	add    rsp,0x8
    6c54:	mov    eax,0xffffffff
    6c59:	pop    rbx
    6c5a:	pop    rbp
    6c5b:	pop    r12
    6c5d:	pop    r13
    6c5f:	pop    r14
    6c61:	pop    r15
    6c63:	ret    
    6c64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6c6f:	nop

0000000000006c70 <qcdhdr_get_int>:
    6c70:	endbr64 
    6c74:	push   r12
    6c76:	mov    r12,rdx
    6c79:	sub    rsp,0x10
    6c7d:	mov    rax,QWORD PTR fs:0x28
    6c86:	mov    QWORD PTR [rsp+0x8],rax
    6c8b:	xor    eax,eax
    6c8d:	mov    rdx,rsp
    6c90:	call   6bd0 <qcdhdr_get_str>
    6c95:	mov    rdi,QWORD PTR [rsp]
    6c99:	test   rdi,rdi
    6c9c:	je     6cc8 <qcdhdr_get_int+0x58>
    6c9e:	mov    rdx,r12
    6ca1:	lea    rsi,[rip+0x14502]        # 1b1aa <_IO_stdin_used+0x11aa>
    6ca8:	xor    eax,eax
    6caa:	call   2430 <__isoc99_sscanf@plt>
    6caf:	xor    eax,eax
    6cb1:	mov    rcx,QWORD PTR [rsp+0x8]
    6cb6:	xor    rcx,QWORD PTR fs:0x28
    6cbf:	jne    6ccf <qcdhdr_get_int+0x5f>
    6cc1:	add    rsp,0x10
    6cc5:	pop    r12
    6cc7:	ret    
    6cc8:	mov    eax,0xffffffff
    6ccd:	jmp    6cb1 <qcdhdr_get_int+0x41>
    6ccf:	call   2350 <__stack_chk_fail@plt>
    6cd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6cdf:	nop

0000000000006ce0 <qcdhdr_get_int32x>:
    6ce0:	endbr64 
    6ce4:	push   rbx
    6ce5:	mov    rbx,rdx
    6ce8:	sub    rsp,0x20
    6cec:	mov    rax,QWORD PTR fs:0x28
    6cf5:	mov    QWORD PTR [rsp+0x18],rax
    6cfa:	xor    eax,eax
    6cfc:	lea    rdx,[rsp+0x10]
    6d01:	call   6bd0 <qcdhdr_get_str>
    6d06:	mov    rdi,QWORD PTR [rsp+0x10]
    6d0b:	test   rdi,rdi
    6d0e:	je     6d41 <qcdhdr_get_int32x+0x61>
    6d10:	lea    rdx,[rsp+0xc]
    6d15:	lea    rsi,[rip+0x141c2]        # 1aede <_IO_stdin_used+0xede>
    6d1c:	xor    eax,eax
    6d1e:	call   2430 <__isoc99_sscanf@plt>
    6d23:	mov    eax,DWORD PTR [rsp+0xc]
    6d27:	mov    DWORD PTR [rbx],eax
    6d29:	xor    eax,eax
    6d2b:	mov    rcx,QWORD PTR [rsp+0x18]
    6d30:	xor    rcx,QWORD PTR fs:0x28
    6d39:	jne    6d48 <qcdhdr_get_int32x+0x68>
    6d3b:	add    rsp,0x20
    6d3f:	pop    rbx
    6d40:	ret    
    6d41:	mov    eax,0xffffffff
    6d46:	jmp    6d2b <qcdhdr_get_int32x+0x4b>
    6d48:	call   2350 <__stack_chk_fail@plt>
    6d4d:	nop    DWORD PTR [rax]

0000000000006d50 <qcdhdr_get_double>:
    6d50:	endbr64 
    6d54:	push   r12
    6d56:	mov    r12,rdx
    6d59:	sub    rsp,0x10
    6d5d:	mov    rax,QWORD PTR fs:0x28
    6d66:	mov    QWORD PTR [rsp+0x8],rax
    6d6b:	xor    eax,eax
    6d6d:	mov    rdx,rsp
    6d70:	call   6bd0 <qcdhdr_get_str>
    6d75:	mov    rdi,QWORD PTR [rsp]
    6d79:	test   rdi,rdi
    6d7c:	je     6da8 <qcdhdr_get_double+0x58>
    6d7e:	mov    rdx,r12
    6d81:	lea    rsi,[rip+0x14067]        # 1adef <_IO_stdin_used+0xdef>
    6d88:	xor    eax,eax
    6d8a:	call   2430 <__isoc99_sscanf@plt>
    6d8f:	xor    eax,eax
    6d91:	mov    rcx,QWORD PTR [rsp+0x8]
    6d96:	xor    rcx,QWORD PTR fs:0x28
    6d9f:	jne    6daf <qcdhdr_get_double+0x5f>
    6da1:	add    rsp,0x10
    6da5:	pop    r12
    6da7:	ret    
    6da8:	mov    eax,0xffffffff
    6dad:	jmp    6d91 <qcdhdr_get_double+0x41>
    6daf:	call   2350 <__stack_chk_fail@plt>
    6db4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6dbf:	nop

0000000000006dc0 <error_exit>:
    6dc0:	endbr64 
    6dc4:	sub    rsp,0x8
    6dc8:	call   22f0 <puts@plt>
    6dcd:	mov    edi,0x1
    6dd2:	add    rsp,0x8
    6dd6:	jmp    19570 <terminate>
    6ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006de0 <complete_U>:
    6de0:	endbr64 
    6de4:	movsd  xmm0,QWORD PTR [rdi+0x10]
    6de9:	movsd  xmm12,QWORD PTR [rdi+0x20]
    6def:	movsd  xmm11,QWORD PTR [rdi+0x50]
    6df5:	movsd  xmm2,QWORD PTR [rdi+0x40]
    6dfa:	movapd xmm5,xmm0
    6dfe:	movapd xmm6,xmm12
    6e03:	movsd  xmm3,QWORD PTR [rdi+0x18]
    6e08:	movsd  xmm1,QWORD PTR [rdi+0x58]
    6e0d:	mulsd  xmm6,xmm2
    6e11:	movsd  xmm10,QWORD PTR [rdi+0x28]
    6e17:	movsd  xmm4,QWORD PTR [rdi+0x48]
    6e1c:	movapd xmm9,xmm12
    6e21:	mulsd  xmm5,xmm11
    6e26:	movsd  xmm7,QWORD PTR [rdi]
    6e2a:	movapd xmm13,xmm11
    6e2f:	movsd  xmm8,QWORD PTR [rdi+0x38]
    6e35:	mulsd  xmm13,xmm7
    6e3a:	subsd  xmm5,xmm6
    6e3e:	movapd xmm6,xmm3
    6e42:	mulsd  xmm6,xmm1
    6e46:	subsd  xmm5,xmm6
    6e4a:	movapd xmm6,xmm10
    6e4f:	mulsd  xmm6,xmm4
    6e53:	addsd  xmm5,xmm6
    6e57:	movapd xmm6,xmm0
    6e5b:	mulsd  xmm6,xmm1
    6e5f:	movsd  QWORD PTR [rdi+0x60],xmm5
    6e64:	movapd xmm5,xmm12
    6e69:	mulsd  xmm5,xmm4
    6e6d:	mulsd  xmm12,xmm8
    6e72:	subsd  xmm5,xmm6
    6e76:	movapd xmm6,xmm2
    6e7a:	mulsd  xmm6,xmm10
    6e7f:	addsd  xmm5,xmm6
    6e83:	movapd xmm6,xmm11
    6e88:	mulsd  xmm6,xmm3
    6e8c:	subsd  xmm5,xmm6
    6e90:	movsd  xmm6,QWORD PTR [rdi+0x30]
    6e95:	mulsd  xmm9,xmm6
    6e9a:	movsd  QWORD PTR [rdi+0x68],xmm5
    6e9f:	movsd  xmm5,QWORD PTR [rdi+0x8]
    6ea4:	mulsd  xmm11,xmm5
    6ea9:	subsd  xmm9,xmm13
    6eae:	movapd xmm13,xmm10
    6eb3:	mulsd  xmm13,xmm8
    6eb8:	mulsd  xmm10,xmm6
    6ebd:	subsd  xmm9,xmm13
    6ec2:	movapd xmm13,xmm1
    6ec7:	mulsd  xmm1,xmm7
    6ecb:	mulsd  xmm13,xmm5
    6ed0:	subsd  xmm1,xmm12
    6ed5:	addsd  xmm9,xmm13
    6eda:	addsd  xmm1,xmm11
    6edf:	movsd  QWORD PTR [rdi+0x70],xmm9
    6ee5:	movapd xmm9,xmm0
    6eea:	mulsd  xmm9,xmm6
    6eef:	subsd  xmm1,xmm10
    6ef4:	mulsd  xmm0,xmm8
    6ef9:	movsd  QWORD PTR [rdi+0x78],xmm1
    6efe:	movapd xmm1,xmm2
    6f02:	mulsd  xmm1,xmm7
    6f06:	mulsd  xmm2,xmm5
    6f0a:	subsd  xmm1,xmm9
    6f0f:	movapd xmm9,xmm4
    6f14:	mulsd  xmm9,xmm5
    6f19:	mulsd  xmm4,xmm7
    6f1d:	subsd  xmm1,xmm9
    6f22:	movapd xmm9,xmm3
    6f27:	mulsd  xmm3,xmm6
    6f2b:	subsd  xmm0,xmm4
    6f2f:	mulsd  xmm9,xmm8
    6f34:	addsd  xmm0,xmm3
    6f38:	addsd  xmm1,xmm9
    6f3d:	subsd  xmm0,xmm2
    6f41:	movsd  QWORD PTR [rdi+0x80],xmm1
    6f49:	movsd  QWORD PTR [rdi+0x88],xmm0
    6f51:	ret    
    6f52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6f5d:	nop    DWORD PTR [rax]

0000000000006f60 <big_endian>:
    6f60:	endbr64 
    6f64:	xor    eax,eax
    6f66:	ret    
    6f67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006f70 <qcdhdr_get_hdr>:
    6f70:	endbr64 
    6f74:	push   r15
    6f76:	mov    rdx,rdi
    6f79:	mov    esi,0x400
    6f7e:	push   r14
    6f80:	push   r13
    6f82:	mov    r13,rdi
    6f85:	push   r12
    6f87:	push   rbp
    6f88:	push   rbx
    6f89:	sub    rsp,0x418
    6f90:	mov    rax,QWORD PTR fs:0x28
    6f99:	mov    QWORD PTR [rsp+0x408],rax
    6fa1:	xor    eax,eax
    6fa3:	mov    rbx,rsp
    6fa6:	mov    rdi,rbx
    6fa9:	call   23c0 <fgets@plt>
    6fae:	mov    esi,0x8
    6fb3:	mov    edi,0x200
    6fb8:	call   23d0 <calloc@plt>
    6fbd:	mov    esi,0x8
    6fc2:	mov    edi,0x200
    6fc7:	mov    r14,rax
    6fca:	call   23d0 <calloc@plt>
    6fcf:	mov    esi,0x18
    6fd4:	mov    edi,0x1
    6fd9:	mov    rbp,rax
    6fdc:	call   23d0 <calloc@plt>
    6fe1:	lea    rdi,[rip+0x13eb2]        # 1ae9a <_IO_stdin_used+0xe9a>
    6fe8:	mov    QWORD PTR [rax+0x10],rbp
    6fec:	mov    r12,rax
    6fef:	xor    ebp,ebp
    6ff1:	mov    QWORD PTR [rax+0x8],r14
    6ff5:	call   22f0 <puts@plt>
    6ffa:	jmp    708c <qcdhdr_get_hdr+0x11c>
    6fff:	nop
    7000:	mov    esi,0x20
    7005:	mov    rdi,rbx
    7008:	call   2360 <strchr@plt>
    700d:	mov    esi,0x8
    7012:	mov    r15,rax
    7015:	mov    BYTE PTR [rax],0x0
    7018:	sub    eax,ebx
    701a:	lea    edi,[rax+0x8]
    701d:	add    eax,0x1
    7020:	cmovns edi,eax
    7023:	sar    edi,0x3
    7026:	add    edi,0x1
    7029:	movsxd rdi,edi
    702c:	call   23d0 <calloc@plt>
    7031:	mov    rsi,rbx
    7034:	mov    rdi,rax
    7037:	mov    rax,QWORD PTR [r12+0x8]
    703c:	mov    QWORD PTR [rax+rbp*8],rdi
    7040:	call   22d0 <strcpy@plt>
    7045:	lea    rdi,[r15+0x1]
    7049:	mov    esi,0x3d
    704e:	call   2360 <strchr@plt>
    7053:	lea    r14,[rax+0x1]
    7057:	mov    r15,rax
    705a:	mov    rdi,r14
    705d:	call   2340 <strlen@plt>
    7062:	mov    esi,0x1
    7067:	movsxd rdi,eax
    706a:	mov    BYTE PTR [r15+rdi*1],0x0
    706f:	call   23d0 <calloc@plt>
    7074:	mov    rsi,r14
    7077:	mov    rdi,rax
    707a:	mov    rax,QWORD PTR [r12+0x10]
    707f:	mov    QWORD PTR [rax+rbp*8],rdi
    7083:	add    rbp,0x1
    7087:	call   22d0 <strcpy@plt>
    708c:	mov    rdx,r13
    708f:	mov    esi,0x400
    7094:	mov    rdi,rbx
    7097:	call   23c0 <fgets@plt>
    709c:	mov    rdx,rbx
    709f:	mov    edi,0x1
    70a4:	xor    eax,eax
    70a6:	lea    rsi,[rip+0x1321b]        # 1a2c8 <_IO_stdin_used+0x2c8>
    70ad:	call   2470 <__printf_chk@plt>
    70b2:	movabs rax,0x444145485f444e45
    70bc:	cmp    QWORD PTR [rbx],rax
    70bf:	jne    7000 <qcdhdr_get_hdr+0x90>
    70c5:	cmp    DWORD PTR [rbx+0x8],0xa5245
    70cc:	jne    7000 <qcdhdr_get_hdr+0x90>
    70d2:	mov    DWORD PTR [r12],ebp
    70d6:	mov    rax,QWORD PTR [rsp+0x408]
    70de:	xor    rax,QWORD PTR fs:0x28
    70e7:	jne    70fe <qcdhdr_get_hdr+0x18e>
    70e9:	add    rsp,0x418
    70f0:	mov    rax,r12
    70f3:	pop    rbx
    70f4:	pop    rbp
    70f5:	pop    r12
    70f7:	pop    r13
    70f9:	pop    r14
    70fb:	pop    r15
    70fd:	ret    
    70fe:	call   2350 <__stack_chk_fail@plt>
    7103:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    710e:	xchg   ax,ax

0000000000007110 <qcdhdr_destroy_hdr>:
    7110:	endbr64 
    7114:	test   rdi,rdi
    7117:	je     7120 <qcdhdr_destroy_hdr+0x10>
    7119:	jmp    6a20 <qcdhdr_destroy_hdr.part.0>
    711e:	xchg   ax,ax
    7120:	ret    
    7121:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    712c:	nop    DWORD PTR [rax+0x0]

0000000000007130 <swrite_data>:
    7130:	endbr64 
    7134:	push   r12
    7136:	mov    r9,rdi
    7139:	mov    r12,rcx
    713c:	mov    rdi,rsi
    713f:	push   rbx
    7140:	mov    rsi,rdx
    7143:	mov    rcx,r9
    7146:	mov    edx,0x1
    714b:	mov    rbx,r8
    714e:	sub    rsp,0x8
    7152:	call   24c0 <fwrite@plt>
    7157:	cmp    rax,0x1
    715b:	jne    7168 <swrite_data+0x38>
    715d:	add    rsp,0x8
    7161:	pop    rbx
    7162:	pop    r12
    7164:	ret    
    7165:	nop    DWORD PTR [rax]
    7168:	call   22c0 <__errno_location@plt>
    716d:	mov    r8,rbx
    7170:	mov    rdx,r12
    7173:	mov    edi,0x1
    7178:	mov    r9d,DWORD PTR [rax]
    717b:	mov    ecx,DWORD PTR [rip+0x1b763]        # 228e4 <this_node>
    7181:	lea    rsi,[rip+0x14258]        # 1b3e0 <_IO_stdin_used+0x13e0>
    7188:	xor    eax,eax
    718a:	call   2470 <__printf_chk@plt>
    718f:	mov    rdi,QWORD PTR [rip+0x1b14a]        # 222e0 <stdout@@GLIBC_2.2.5>
    7196:	call   2420 <fflush@plt>
    719b:	add    rsp,0x8
    719f:	mov    edi,0x1
    71a4:	pop    rbx
    71a5:	pop    r12
    71a7:	jmp    19570 <terminate>
    71ac:	nop    DWORD PTR [rax+0x0]

00000000000071b0 <pwrite_data>:
    71b0:	endbr64 
    71b4:	push   r12
    71b6:	mov    r9,rdi
    71b9:	mov    r12,rcx
    71bc:	mov    rdi,rsi
    71bf:	push   rbx
    71c0:	mov    rsi,rdx
    71c3:	mov    rcx,r9
    71c6:	mov    edx,0x1
    71cb:	mov    rbx,r8
    71ce:	sub    rsp,0x8
    71d2:	call   19d70 <g_write>
    71d7:	cmp    rax,0x1
    71db:	jne    71e8 <pwrite_data+0x38>
    71dd:	add    rsp,0x8
    71e1:	pop    rbx
    71e2:	pop    r12
    71e4:	ret    
    71e5:	nop    DWORD PTR [rax]
    71e8:	call   22c0 <__errno_location@plt>
    71ed:	mov    r8,rbx
    71f0:	mov    rdx,r12
    71f3:	mov    edi,0x1
    71f8:	mov    r9d,DWORD PTR [rax]
    71fb:	mov    ecx,DWORD PTR [rip+0x1b6e3]        # 228e4 <this_node>
    7201:	lea    rsi,[rip+0x141f8]        # 1b400 <_IO_stdin_used+0x1400>
    7208:	xor    eax,eax
    720a:	call   2470 <__printf_chk@plt>
    720f:	mov    rdi,QWORD PTR [rip+0x1b0ca]        # 222e0 <stdout@@GLIBC_2.2.5>
    7216:	call   2420 <fflush@plt>
    721b:	add    rsp,0x8
    721f:	mov    edi,0x1
    7224:	pop    rbx
    7225:	pop    r12
    7227:	jmp    19570 <terminate>
    722c:	nop    DWORD PTR [rax+0x0]

0000000000007230 <pswrite_data>:
    7230:	endbr64 
    7234:	mov    r10d,edi
    7237:	mov    rdi,rsi
    723a:	mov    rsi,rdx
    723d:	mov    rdx,rcx
    7240:	mov    rcx,r8
    7243:	mov    r8,r9
    7246:	test   r10d,r10d
    7249:	je     7250 <pswrite_data+0x20>
    724b:	jmp    71b0 <pwrite_data>
    7250:	jmp    7130 <swrite_data>
    7255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000007260 <sread_data>:
    7260:	endbr64 
    7264:	push   r12
    7266:	mov    r9,rdi
    7269:	mov    rdi,rsi
    726c:	mov    rsi,rdx
    726f:	push   rbp
    7270:	mov    edx,0x1
    7275:	mov    rbp,rcx
    7278:	mov    rcx,r9
    727b:	mov    r12,r8
    727e:	sub    rsp,0x8
    7282:	call   2300 <fread@plt>
    7287:	cmp    rax,0x1
    728b:	jne    72a0 <sread_data+0x40>
    728d:	add    rsp,0x8
    7291:	xor    eax,eax
    7293:	pop    rbp
    7294:	pop    r12
    7296:	ret    
    7297:	nop    WORD PTR [rax+rax*1+0x0]
    72a0:	add    rsp,0x8
    72a4:	mov    rsi,r12
    72a7:	mov    rdi,rbp
    72aa:	pop    rbp
    72ab:	pop    r12
    72ad:	jmp    6a80 <pread_data.part.0>
    72b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    72bd:	nop    DWORD PTR [rax]

00000000000072c0 <pread_data>:
    72c0:	endbr64 
    72c4:	push   r12
    72c6:	mov    r9,rdi
    72c9:	mov    rdi,rsi
    72cc:	mov    rsi,rdx
    72cf:	push   rbp
    72d0:	mov    edx,0x1
    72d5:	mov    rbp,rcx
    72d8:	mov    rcx,r9
    72db:	mov    r12,r8
    72de:	sub    rsp,0x8
    72e2:	call   19d90 <g_read>
    72e7:	cmp    rax,0x1
    72eb:	jne    7300 <pread_data+0x40>
    72ed:	add    rsp,0x8
    72f1:	xor    eax,eax
    72f3:	pop    rbp
    72f4:	pop    r12
    72f6:	ret    
    72f7:	nop    WORD PTR [rax+rax*1+0x0]
    7300:	add    rsp,0x8
    7304:	mov    rsi,r12
    7307:	mov    rdi,rbp
    730a:	pop    rbp
    730b:	pop    r12
    730d:	jmp    6a80 <pread_data.part.0>
    7312:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    731d:	nop    DWORD PTR [rax]

0000000000007320 <pread_byteorder>:
    7320:	endbr64 
    7324:	push   r12
    7326:	mov    r12d,edi
    7329:	mov    rdi,rsi
    732c:	push   rbp
    732d:	mov    rbp,rdx
    7330:	push   rbx
    7331:	mov    rbx,rcx
    7334:	mov    rsi,rbp
    7337:	mov    rcx,r8
    733a:	mov    rdx,rbx
    733d:	mov    r8,r9
    7340:	sub    rsp,0x10
    7344:	call   72c0 <pread_data>
    7349:	cmp    r12d,0x1
    734d:	je     7360 <pread_byteorder+0x40>
    734f:	add    rsp,0x10
    7353:	pop    rbx
    7354:	pop    rbp
    7355:	pop    r12
    7357:	ret    
    7358:	nop    DWORD PTR [rax+rax*1+0x0]
    7360:	shr    rbx,0x2
    7364:	mov    rdi,rbp
    7367:	mov    DWORD PTR [rsp+0xc],eax
    736b:	mov    rsi,rbx
    736e:	call   15960 <byterevn>
    7373:	mov    eax,DWORD PTR [rsp+0xc]
    7377:	add    rsp,0x10
    737b:	pop    rbx
    737c:	pop    rbp
    737d:	pop    r12
    737f:	ret    

0000000000007380 <sread_byteorder>:
    7380:	endbr64 
    7384:	push   r12
    7386:	mov    r12d,edi
    7389:	mov    rdi,rsi
    738c:	push   rbp
    738d:	mov    rbp,rdx
    7390:	push   rbx
    7391:	mov    rbx,rcx
    7394:	mov    rsi,rbp
    7397:	mov    rcx,r8
    739a:	mov    rdx,rbx
    739d:	mov    r8,r9
    73a0:	sub    rsp,0x10
    73a4:	call   7260 <sread_data>
    73a9:	cmp    r12d,0x1
    73ad:	je     73c0 <sread_byteorder+0x40>
    73af:	add    rsp,0x10
    73b3:	pop    rbx
    73b4:	pop    rbp
    73b5:	pop    r12
    73b7:	ret    
    73b8:	nop    DWORD PTR [rax+rax*1+0x0]
    73c0:	shr    rbx,0x2
    73c4:	mov    rdi,rbp
    73c7:	mov    DWORD PTR [rsp+0xc],eax
    73cb:	mov    rsi,rbx
    73ce:	call   15960 <byterevn>
    73d3:	mov    eax,DWORD PTR [rsp+0xc]
    73d7:	add    rsp,0x10
    73db:	pop    rbx
    73dc:	pop    rbp
    73dd:	pop    r12
    73df:	ret    

00000000000073e0 <psread_data>:
    73e0:	endbr64 
    73e4:	mov    r10d,edi
    73e7:	mov    rdi,rsi
    73ea:	mov    rsi,rdx
    73ed:	mov    rdx,rcx
    73f0:	mov    rcx,r8
    73f3:	mov    r8,r9
    73f6:	test   r10d,r10d
    73f9:	je     7400 <psread_data+0x20>
    73fb:	jmp    72c0 <pread_data>
    7400:	jmp    7260 <sread_data>
    7405:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000007410 <psread_byteorder>:
    7410:	endbr64 
    7414:	mov    r10d,esi
    7417:	mov    rsi,rdx
    741a:	mov    rdx,rcx
    741d:	mov    rcx,r8
    7420:	mov    r8,r9
    7423:	mov    r9,QWORD PTR [rsp+0x8]
    7428:	test   r10d,r10d
    742b:	je     7438 <psread_byteorder+0x28>
    742d:	jmp    7320 <pread_byteorder>
    7432:	nop    WORD PTR [rax+rax*1+0x0]
    7438:	jmp    7380 <sread_byteorder>
    743d:	nop    DWORD PTR [rax]

0000000000007440 <pwrite_gauge_hdr>:
    7440:	endbr64 
    7444:	push   r12
    7446:	lea    r8,[rip+0x12bed]        # 1a03a <_IO_stdin_used+0x3a>
    744d:	mov    edx,0x4
    7452:	push   rbp
    7453:	mov    rbp,rdi
    7456:	push   rbx
    7457:	mov    rbx,rsi
    745a:	sub    rsp,0x20
    745e:	movdqa xmm0,XMMWORD PTR [rip+0x14e4a]        # 1c2b0 <_IO_stdin_used+0x22b0>
    7466:	mov    rax,QWORD PTR fs:0x28
    746f:	mov    QWORD PTR [rsp+0x18],rax
    7474:	xor    eax,eax
    7476:	mov    r12,rsp
    7479:	mov    BYTE PTR [rsp+0x10],0x0
    747e:	mov    rcx,r12
    7481:	movaps XMMWORD PTR [rsp],xmm0
    7485:	call   71b0 <pwrite_data>
    748a:	lea    rsi,[rbx+0x44]
    748e:	mov    rcx,r12
    7491:	mov    rdi,rbp
    7494:	lea    r8,[rip+0x13d5a]        # 1b1f5 <_IO_stdin_used+0x11f5>
    749b:	mov    edx,0x10
    74a0:	call   71b0 <pwrite_data>
    74a5:	lea    rsi,[rbx+0x4]
    74a9:	mov    rcx,r12
    74ac:	mov    rdi,rbp
    74af:	lea    r8,[rip+0x12c2a]        # 1a0e0 <_IO_stdin_used+0xe0>
    74b6:	mov    edx,0x40
    74bb:	call   71b0 <pwrite_data>
    74c0:	lea    rsi,[rbx+0x58]
    74c4:	mov    rcx,r12
    74c7:	mov    rdi,rbp
    74ca:	lea    r8,[rip+0x139ed]        # 1aebe <_IO_stdin_used+0xebe>
    74d1:	mov    edx,0x4
    74d6:	call   71b0 <pwrite_data>
    74db:	mov    DWORD PTR [rbx+0x54],0x58
    74e2:	mov    rax,QWORD PTR [rsp+0x18]
    74e7:	xor    rax,QWORD PTR fs:0x28
    74f0:	jne    74fb <pwrite_gauge_hdr+0xbb>
    74f2:	add    rsp,0x20
    74f6:	pop    rbx
    74f7:	pop    rbp
    74f8:	pop    r12
    74fa:	ret    
    74fb:	call   2350 <__stack_chk_fail@plt>

0000000000007500 <swrite_gauge_hdr>:
    7500:	endbr64 
    7504:	push   r12
    7506:	lea    r8,[rip+0x12b2d]        # 1a03a <_IO_stdin_used+0x3a>
    750d:	mov    edx,0x4
    7512:	push   rbp
    7513:	mov    rbp,rdi
    7516:	push   rbx
    7517:	mov    rbx,rsi
    751a:	sub    rsp,0x20
    751e:	movdqa xmm0,XMMWORD PTR [rip+0x14d9a]        # 1c2c0 <_IO_stdin_used+0x22c0>
    7526:	mov    rax,QWORD PTR fs:0x28
    752f:	mov    QWORD PTR [rsp+0x18],rax
    7534:	xor    eax,eax
    7536:	mov    r12,rsp
    7539:	mov    BYTE PTR [rsp+0x10],0x0
    753e:	mov    rcx,r12
    7541:	movaps XMMWORD PTR [rsp],xmm0
    7545:	call   7130 <swrite_data>
    754a:	lea    rsi,[rbx+0x44]
    754e:	mov    rcx,r12
    7551:	mov    rdi,rbp
    7554:	lea    r8,[rip+0x13c9a]        # 1b1f5 <_IO_stdin_used+0x11f5>
    755b:	mov    edx,0x10
    7560:	call   7130 <swrite_data>
    7565:	lea    rsi,[rbx+0x4]
    7569:	mov    rcx,r12
    756c:	mov    rdi,rbp
    756f:	lea    r8,[rip+0x12b6a]        # 1a0e0 <_IO_stdin_used+0xe0>
    7576:	mov    edx,0x40
    757b:	call   7130 <swrite_data>
    7580:	lea    rsi,[rbx+0x58]
    7584:	mov    rcx,r12
    7587:	mov    rdi,rbp
    758a:	lea    r8,[rip+0x1392d]        # 1aebe <_IO_stdin_used+0xebe>
    7591:	mov    edx,0x4
    7596:	call   7130 <swrite_data>
    759b:	mov    DWORD PTR [rbx+0x54],0x58
    75a2:	mov    rax,QWORD PTR [rsp+0x18]
    75a7:	xor    rax,QWORD PTR fs:0x28
    75b0:	jne    75bb <swrite_gauge_hdr+0xbb>
    75b2:	add    rsp,0x20
    75b6:	pop    rbx
    75b7:	pop    rbp
    75b8:	pop    r12
    75ba:	ret    
    75bb:	call   2350 <__stack_chk_fail@plt>

00000000000075c0 <write_gauge_info_item>:
    75c0:	endbr64 
    75c4:	push   r15
    75c6:	mov    r15,rsi
    75c9:	push   r14
    75cb:	mov    r14d,r8d
    75ce:	push   r13
    75d0:	mov    r13,rdi
    75d3:	push   r12
    75d5:	mov    r12,rdx
    75d8:	push   rbp
    75d9:	lea    rbp,[rip+0x1aa48]        # 22028 <gauge_info_keyword+0x8>
    75e0:	push   rbx
    75e1:	mov    rbx,rcx
    75e4:	sub    rsp,0x18
    75e8:	mov    rdi,QWORD PTR [rip+0x1aa31]        # 22020 <gauge_info_keyword>
    75ef:	mov    DWORD PTR [rsp+0xc],r9d
    75f4:	cmp    BYTE PTR [rdi],0x0
    75f7:	jne    7611 <write_gauge_info_item+0x51>
    75f9:	jmp    7790 <write_gauge_info_item+0x1d0>
    75fe:	xchg   ax,ax
    7600:	mov    rdi,QWORD PTR [rbp+0x0]
    7604:	add    rbp,0x8
    7608:	cmp    BYTE PTR [rdi],0x0
    760b:	je     7790 <write_gauge_info_item+0x1d0>
    7611:	mov    rsi,r15
    7614:	call   23e0 <strcmp@plt>
    7619:	test   eax,eax
    761b:	jne    7600 <write_gauge_info_item+0x40>
    761d:	xor    eax,eax
    761f:	mov    rcx,r15
    7622:	lea    rdx,[rip+0x1389b]        # 1aec4 <_IO_stdin_used+0xec4>
    7629:	mov    rdi,r13
    762c:	mov    esi,0x1
    7631:	call   24d0 <__fprintf_chk@plt>
    7636:	cmp    r14d,0x1
    763a:	jg     7768 <write_gauge_info_item+0x1a8>
    7640:	test   r14d,r14d
    7643:	jne    77ab <write_gauge_info_item+0x1eb>
    7649:	mov    r14d,0x1
    764f:	movsxd r15,DWORD PTR [rsp+0xc]
    7654:	xor    ebp,ebp
    7656:	jmp    7680 <write_gauge_info_item+0xc0>
    7658:	nop    DWORD PTR [rax+rax*1+0x0]
    7660:	mov    rcx,rbx
    7663:	mov    rdx,r12
    7666:	mov    esi,0x1
    766b:	mov    rdi,r13
    766e:	xor    eax,eax
    7670:	call   24d0 <__fprintf_chk@plt>
    7675:	add    ebp,0x1
    7678:	add    rbx,r15
    767b:	cmp    r14d,ebp
    767e:	jle    76d0 <write_gauge_info_item+0x110>
    7680:	mov    rsi,r13
    7683:	mov    edi,0x20
    7688:	call   23a0 <fputc@plt>
    768d:	mov    esi,0x73
    7692:	mov    rdi,r12
    7695:	call   2360 <strchr@plt>
    769a:	test   rax,rax
    769d:	jne    7660 <write_gauge_info_item+0xa0>
    769f:	mov    esi,0x64
    76a4:	mov    rdi,r12
    76a7:	call   2360 <strchr@plt>
    76ac:	test   rax,rax
    76af:	je     76f0 <write_gauge_info_item+0x130>
    76b1:	mov    ecx,DWORD PTR [rbx]
    76b3:	mov    rdx,r12
    76b6:	mov    esi,0x1
    76bb:	mov    rdi,r13
    76be:	xor    eax,eax
    76c0:	add    ebp,0x1
    76c3:	add    rbx,r15
    76c6:	call   24d0 <__fprintf_chk@plt>
    76cb:	cmp    r14d,ebp
    76ce:	jg     7680 <write_gauge_info_item+0xc0>
    76d0:	mov    rsi,r13
    76d3:	mov    edi,0xa
    76d8:	call   23a0 <fputc@plt>
    76dd:	xor    eax,eax
    76df:	add    rsp,0x18
    76e3:	pop    rbx
    76e4:	pop    rbp
    76e5:	pop    r12
    76e7:	pop    r13
    76e9:	pop    r14
    76eb:	pop    r15
    76ed:	ret    
    76ee:	xchg   ax,ax
    76f0:	mov    esi,0x65
    76f5:	mov    rdi,r12
    76f8:	call   2360 <strchr@plt>
    76fd:	test   rax,rax
    7700:	je     7720 <write_gauge_info_item+0x160>
    7702:	movsd  xmm0,QWORD PTR [rbx]
    7706:	mov    rdx,r12
    7709:	mov    esi,0x1
    770e:	mov    rdi,r13
    7711:	mov    eax,0x1
    7716:	call   24d0 <__fprintf_chk@plt>
    771b:	jmp    7675 <write_gauge_info_item+0xb5>
    7720:	mov    esi,0x66
    7725:	mov    rdi,r12
    7728:	call   2360 <strchr@plt>
    772d:	test   rax,rax
    7730:	jne    7702 <write_gauge_info_item+0x142>
    7732:	mov    esi,0x67
    7737:	mov    rdi,r12
    773a:	call   2360 <strchr@plt>
    773f:	test   rax,rax
    7742:	jne    7702 <write_gauge_info_item+0x142>
    7744:	mov    rdx,r12
    7747:	lea    rsi,[rip+0x13cda]        # 1b428 <_IO_stdin_used+0x1428>
    774e:	mov    edi,0x1
    7753:	xor    eax,eax
    7755:	call   2470 <__printf_chk@plt>
    775a:	mov    eax,0x1
    775f:	jmp    76df <write_gauge_info_item+0x11f>
    7764:	nop    DWORD PTR [rax+0x0]
    7768:	mov    ecx,r14d
    776b:	lea    rdx,[rip+0x13757]        # 1aec9 <_IO_stdin_used+0xec9>
    7772:	mov    rdi,r13
    7775:	xor    eax,eax
    7777:	mov    esi,0x1
    777c:	call   24d0 <__fprintf_chk@plt>
    7781:	jmp    764f <write_gauge_info_item+0x8f>
    7786:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7790:	mov    rdx,r15
    7793:	lea    rsi,[rip+0x13cc6]        # 1b460 <_IO_stdin_used+0x1460>
    779a:	mov    edi,0x1
    779f:	xor    eax,eax
    77a1:	call   2470 <__printf_chk@plt>
    77a6:	jmp    761d <write_gauge_info_item+0x5d>
    77ab:	cmp    r14d,0x1
    77af:	jne    76d0 <write_gauge_info_item+0x110>
    77b5:	jmp    764f <write_gauge_info_item+0x8f>
    77ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000000077c0 <write_gauge_info_file>:
    77c0:	endbr64 
    77c4:	push   r13
    77c6:	mov    edx,0x100
    77cb:	push   r12
    77cd:	push   rbp
    77ce:	push   rbx
    77cf:	mov    rbx,rdi
    77d2:	sub    rsp,0x138
    77d9:	mov    rsi,QWORD PTR [rdi+0x10]
    77dd:	mov    r13,QWORD PTR [rdi+0x8]
    77e1:	mov    rax,QWORD PTR fs:0x28
    77ea:	mov    QWORD PTR [rsp+0x128],rax
    77f2:	xor    eax,eax
    77f4:	lea    r12,[rsp+0x20]
    77f9:	mov    rdi,r12
    77fc:	call   2410 <__stpcpy_chk@plt>
    7801:	mov    rcx,r12
    7804:	mov    edx,0x6
    7809:	lea    rsi,[rip+0x136be]        # 1aece <_IO_stdin_used+0xece>
    7810:	sub    rcx,rax
    7813:	mov    rdi,rax
    7816:	add    rcx,0x100
    781d:	call   23f0 <__memcpy_chk@plt>
    7822:	lea    rsi,[rip+0x136ab]        # 1aed4 <_IO_stdin_used+0xed4>
    7829:	mov    rdi,r12
    782c:	call   2490 <fopen@plt>
    7831:	test   rax,rax
    7834:	je     7998 <write_gauge_info_file+0x1d8>
    783a:	mov    rbp,rax
    783d:	mov    rcx,r13
    7840:	xor    r9d,r9d
    7843:	xor    r8d,r8d
    7846:	lea    rdx,[rip+0x1395d]        # 1b1aa <_IO_stdin_used+0x11aa>
    784d:	lea    rsi,[rip+0x127e6]        # 1a03a <_IO_stdin_used+0x3a>
    7854:	mov    rdi,rax
    7857:	call   75c0 <write_gauge_info_item>
    785c:	lea    rcx,[r13+0x4]
    7860:	xor    r9d,r9d
    7863:	xor    r8d,r8d
    7866:	lea    rdx,[rip+0x13669]        # 1aed6 <_IO_stdin_used+0xed6>
    786d:	lea    rsi,[rip+0x1286c]        # 1a0e0 <_IO_stdin_used+0xe0>
    7874:	mov    rdi,rbp
    7877:	mov    r13,rsp
    787a:	call   75c0 <write_gauge_info_item>
    787f:	mov    r9d,DWORD PTR [rbx+0x2c]
    7883:	mov    r8d,DWORD PTR [rbx+0x30]
    7887:	mov    rdi,r13
    788a:	lea    rcx,[rip+0x1364a]        # 1aedb <_IO_stdin_used+0xedb>
    7891:	mov    edx,0x14
    7896:	mov    esi,0x1
    789b:	xor    eax,eax
    789d:	call   24f0 <__sprintf_chk@plt>
    78a2:	xor    r9d,r9d
    78a5:	xor    r8d,r8d
    78a8:	mov    rcx,r13
    78ab:	lea    rdx,[rip+0x13624]        # 1aed6 <_IO_stdin_used+0xed6>
    78b2:	lea    rsi,[rip+0x12841]        # 1a0fa <_IO_stdin_used+0xfa>
    78b9:	mov    rdi,rbp
    78bc:	call   75c0 <write_gauge_info_item>
    78c1:	xor    r9d,r9d
    78c4:	xor    r8d,r8d
    78c7:	mov    rdi,rbp
    78ca:	lea    rcx,[rip+0x1ab07]        # 223d8 <nx>
    78d1:	lea    rdx,[rip+0x138d2]        # 1b1aa <_IO_stdin_used+0x11aa>
    78d8:	lea    rsi,[rip+0x12768]        # 1a047 <_IO_stdin_used+0x47>
    78df:	call   75c0 <write_gauge_info_item>
    78e4:	xor    r9d,r9d
    78e7:	xor    r8d,r8d
    78ea:	mov    rdi,rbp
    78ed:	lea    rcx,[rip+0x1af48]        # 2283c <ny>
    78f4:	lea    rdx,[rip+0x138af]        # 1b1aa <_IO_stdin_used+0x11aa>
    78fb:	lea    rsi,[rip+0x12748]        # 1a04a <_IO_stdin_used+0x4a>
    7902:	call   75c0 <write_gauge_info_item>
    7907:	xor    r9d,r9d
    790a:	xor    r8d,r8d
    790d:	mov    rdi,rbp
    7910:	lea    rcx,[rip+0x1aabd]        # 223d4 <nz>
    7917:	lea    rdx,[rip+0x1388c]        # 1b1aa <_IO_stdin_used+0x11aa>
    791e:	lea    rsi,[rip+0x12728]        # 1a04d <_IO_stdin_used+0x4d>
    7925:	call   75c0 <write_gauge_info_item>
    792a:	xor    r9d,r9d
    792d:	xor    r8d,r8d
    7930:	mov    rdi,rbp
    7933:	lea    rdx,[rip+0x13870]        # 1b1aa <_IO_stdin_used+0x11aa>
    793a:	lea    rsi,[rip+0x13758]        # 1b099 <_IO_stdin_used+0x1099>
    7941:	lea    rcx,[rip+0x1aa88]        # 223d0 <nt>
    7948:	call   75c0 <write_gauge_info_item>
    794d:	mov    rdi,rbp
    7950:	call   2ad0 <write_appl_gauge_info>
    7955:	mov    rdi,rbp
    7958:	call   2320 <fclose@plt>
    795d:	mov    rdx,r12
    7960:	mov    edi,0x1
    7965:	xor    eax,eax
    7967:	lea    rsi,[rip+0x13573]        # 1aee1 <_IO_stdin_used+0xee1>
    796e:	call   2470 <__printf_chk@plt>
    7973:	mov    rax,QWORD PTR [rsp+0x128]
    797b:	xor    rax,QWORD PTR fs:0x28
    7984:	jne    79b0 <write_gauge_info_file+0x1f0>
    7986:	add    rsp,0x138
    798d:	pop    rbx
    798e:	pop    rbp
    798f:	pop    r12
    7991:	pop    r13
    7993:	ret    
    7994:	nop    DWORD PTR [rax+0x0]
    7998:	mov    rdx,r12
    799b:	lea    rsi,[rip+0x13afe]        # 1b4a0 <_IO_stdin_used+0x14a0>
    79a2:	mov    edi,0x1
    79a7:	xor    eax,eax
    79a9:	call   2470 <__printf_chk@plt>
    79ae:	jmp    7973 <write_gauge_info_file+0x1b3>
    79b0:	call   2350 <__stack_chk_fail@plt>
    79b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000079c0 <setup_input_gauge_file>:
    79c0:	endbr64 
    79c4:	push   r12
    79c6:	mov    esi,0x38
    79cb:	push   rbx
    79cc:	mov    rbx,rdi
    79cf:	mov    edi,0x1
    79d4:	sub    rsp,0x28
    79d8:	movdqa xmm0,XMMWORD PTR [rip+0x148f0]        # 1c2d0 <_IO_stdin_used+0x22d0>
    79e0:	mov    rax,QWORD PTR fs:0x28
    79e9:	mov    QWORD PTR [rsp+0x18],rax
    79ee:	xor    eax,eax
    79f0:	mov    eax,0x656c
    79f5:	mov    DWORD PTR [rsp+0x10],0x69665f65
    79fd:	mov    WORD PTR [rsp+0x14],ax
    7a02:	mov    BYTE PTR [rsp+0x16],0x0
    7a07:	movaps XMMWORD PTR [rsp],xmm0
    7a0b:	call   23d0 <calloc@plt>
    7a10:	mov    r12,rax
    7a13:	test   rax,rax
    7a16:	je     7a5d <setup_input_gauge_file+0x9d>
    7a18:	mov    esi,0x5c
    7a1d:	mov    edi,0x1
    7a22:	mov    QWORD PTR [r12+0x10],rbx
    7a27:	call   23d0 <calloc@plt>
    7a2c:	mov    rbx,rax
    7a2f:	test   rax,rax
    7a32:	je     7a84 <setup_input_gauge_file+0xc4>
    7a34:	mov    QWORD PTR [r12+0x8],rbx
    7a39:	mov    QWORD PTR [r12+0x2c],0x0
    7a42:	mov    rax,QWORD PTR [rsp+0x18]
    7a47:	xor    rax,QWORD PTR fs:0x28
    7a50:	jne    7a7f <setup_input_gauge_file+0xbf>
    7a52:	add    rsp,0x28
    7a56:	mov    rax,r12
    7a59:	pop    rbx
    7a5a:	pop    r12
    7a5c:	ret    
    7a5d:	mov    rdx,rsp
    7a60:	lea    rsi,[rip+0x1348e]        # 1aef5 <_IO_stdin_used+0xef5>
    7a67:	mov    edi,0x1
    7a6c:	xor    eax,eax
    7a6e:	call   2470 <__printf_chk@plt>
    7a73:	mov    edi,0x1
    7a78:	call   19570 <terminate>
    7a7d:	jmp    7a18 <setup_input_gauge_file+0x58>
    7a7f:	call   2350 <__stack_chk_fail@plt>
    7a84:	mov    rdx,rsp
    7a87:	lea    rsi,[rip+0x1347c]        # 1af0a <_IO_stdin_used+0xf0a>
    7a8e:	mov    edi,0x1
    7a93:	xor    eax,eax
    7a95:	call   2470 <__printf_chk@plt>
    7a9a:	mov    edi,0x1
    7a9f:	call   19570 <terminate>
    7aa4:	jmp    7a34 <setup_input_gauge_file+0x74>
    7aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ab0 <setup_output_gauge_file>:
    7ab0:	endbr64 
    7ab4:	push   r13
    7ab6:	mov    esi,0x38
    7abb:	mov    edi,0x1
    7ac0:	push   r12
    7ac2:	push   rbp
    7ac3:	push   rbx
    7ac4:	sub    rsp,0x38
    7ac8:	movdqa xmm0,XMMWORD PTR [rip+0x14810]        # 1c2e0 <_IO_stdin_used+0x22e0>
    7ad0:	mov    rax,QWORD PTR fs:0x28
    7ad9:	mov    QWORD PTR [rsp+0x28],rax
    7ade:	xor    eax,eax
    7ae0:	movabs rax,0x656c69665f6567
    7aea:	mov    QWORD PTR [rsp+0x20],rax
    7aef:	movaps XMMWORD PTR [rsp+0x10],xmm0
    7af4:	call   23d0 <calloc@plt>
    7af9:	mov    r12,rax
    7afc:	test   rax,rax
    7aff:	je     7c27 <setup_output_gauge_file+0x177>
    7b05:	mov    esi,0x5c
    7b0a:	mov    edi,0x1
    7b0f:	call   23d0 <calloc@plt>
    7b14:	mov    rbx,rax
    7b17:	test   rax,rax
    7b1a:	je     7c00 <setup_output_gauge_file+0x150>
    7b20:	mov    eax,DWORD PTR [rip+0x1a8b2]        # 223d8 <nx>
    7b26:	mov    QWORD PTR [r12+0x8],rbx
    7b2b:	lea    rbp,[rbx+0x4]
    7b2f:	mov    QWORD PTR [r12+0x2c],0x0
    7b38:	mov    DWORD PTR [rbx+0x44],eax
    7b3b:	mov    eax,DWORD PTR [rip+0x1acfb]        # 2283c <ny>
    7b41:	mov    DWORD PTR [rbx],0x4e87
    7b47:	mov    DWORD PTR [rbx+0x48],eax
    7b4a:	mov    eax,DWORD PTR [rip+0x1a884]        # 223d4 <nz>
    7b50:	mov    DWORD PTR [rbx+0x4c],eax
    7b53:	mov    eax,DWORD PTR [rip+0x1a877]        # 223d0 <nt>
    7b59:	mov    DWORD PTR [rbx+0x50],eax
    7b5c:	mov    eax,DWORD PTR [rip+0x1ad82]        # 228e4 <this_node>
    7b62:	test   eax,eax
    7b64:	je     7b98 <setup_output_gauge_file+0xe8>
    7b66:	mov    esi,0x40
    7b6b:	mov    rdi,rbp
    7b6e:	call   194c0 <broadcast_bytes>
    7b73:	mov    rax,QWORD PTR [rsp+0x28]
    7b78:	xor    rax,QWORD PTR fs:0x28
    7b81:	jne    7bfb <setup_output_gauge_file+0x14b>
    7b83:	add    rsp,0x38
    7b87:	mov    rax,r12
    7b8a:	pop    rbx
    7b8b:	pop    rbp
    7b8c:	pop    r12
    7b8e:	pop    r13
    7b90:	ret    
    7b91:	nop    DWORD PTR [rax+0x0]
    7b98:	lea    r13,[rsp+0x8]
    7b9d:	mov    rdi,r13
    7ba0:	call   2400 <time@plt>
    7ba5:	mov    rdi,r13
    7ba8:	call   2330 <ctime@plt>
    7bad:	mov    edx,0x40
    7bb2:	mov    rdi,rbp
    7bb5:	mov    rsi,rax
    7bb8:	call   2410 <__stpcpy_chk@plt>
    7bbd:	sub    rax,rbp
    7bc0:	lea    edx,[rax+0x1]
    7bc3:	cmp    edx,0x3f
    7bc6:	jg     7be6 <setup_output_gauge_file+0x136>
    7bc8:	movsxd rax,edx
    7bcb:	nop    DWORD PTR [rax+rax*1+0x0]
    7bd0:	mov    BYTE PTR [rbx+rax*1+0x4],0x0
    7bd5:	add    rax,0x1
    7bd9:	cmp    eax,0x3f
    7bdc:	jle    7bd0 <setup_output_gauge_file+0x120>
    7bde:	mov    rdi,rbp
    7be1:	call   2340 <strlen@plt>
    7be6:	cmp    BYTE PTR [rbx+rax*1+0x3],0xa
    7beb:	jne    7b66 <setup_output_gauge_file+0xb6>
    7bf1:	mov    BYTE PTR [rbx+rax*1+0x3],0x0
    7bf6:	jmp    7b66 <setup_output_gauge_file+0xb6>
    7bfb:	call   2350 <__stack_chk_fail@plt>
    7c00:	lea    rdx,[rsp+0x10]
    7c05:	lea    rsi,[rip+0x132fe]        # 1af0a <_IO_stdin_used+0xf0a>
    7c0c:	mov    edi,0x1
    7c11:	xor    eax,eax
    7c13:	call   2470 <__printf_chk@plt>
    7c18:	mov    edi,0x1
    7c1d:	call   19570 <terminate>
    7c22:	jmp    7b20 <setup_output_gauge_file+0x70>
    7c27:	lea    rdx,[rsp+0x10]
    7c2c:	lea    rsi,[rip+0x132c2]        # 1aef5 <_IO_stdin_used+0xef5>
    7c33:	mov    edi,0x1
    7c38:	xor    eax,eax
    7c3a:	call   2470 <__printf_chk@plt>
    7c3f:	mov    edi,0x1
    7c44:	call   19570 <terminate>
    7c49:	jmp    7b05 <setup_output_gauge_file+0x55>
    7c4e:	xchg   ax,ax

0000000000007c50 <w_serial_i>:
    7c50:	endbr64 
    7c54:	push   r13
    7c56:	mov    edx,0x695f
    7c5b:	push   r12
    7c5d:	push   rbp
    7c5e:	push   rbx
    7c5f:	mov    rbx,rdi
    7c62:	sub    rsp,0x28
    7c66:	mov    rax,QWORD PTR fs:0x28
    7c6f:	mov    QWORD PTR [rsp+0x18],rax
    7c74:	xor    eax,eax
    7c76:	mov    WORD PTR [rsp+0x15],dx
    7c7b:	movabs rax,0x6c61697265735f77
    7c85:	mov    QWORD PTR [rsp+0xd],rax
    7c8a:	xor    eax,eax
    7c8c:	mov    BYTE PTR [rsp+0x17],0x0
    7c91:	call   7ab0 <setup_output_gauge_file>
    7c96:	mov    ecx,DWORD PTR [rip+0x1ac48]        # 228e4 <this_node>
    7c9c:	mov    r13,QWORD PTR [rax+0x8]
    7ca0:	mov    r12,rax
    7ca3:	mov    DWORD PTR [r13+0x58],0x0
    7cab:	test   ecx,ecx
    7cad:	je     7d00 <w_serial_i+0xb0>
    7caf:	xor    ebp,ebp
    7cb1:	mov    QWORD PTR [r12],rbp
    7cb5:	mov    QWORD PTR [r12+0x10],rbx
    7cba:	mov    DWORD PTR [r12+0x18],0x0
    7cc3:	mov    QWORD PTR [r12+0x20],0x0
    7ccc:	mov    DWORD PTR [r12+0x28],0x0
    7cd5:	mov    rax,QWORD PTR [rsp+0x18]
    7cda:	xor    rax,QWORD PTR fs:0x28
    7ce3:	jne    7d71 <w_serial_i+0x121>
    7ce9:	add    rsp,0x28
    7ced:	mov    rax,r12
    7cf0:	pop    rbx
    7cf1:	pop    rbp
    7cf2:	pop    r12
    7cf4:	pop    r13
    7cf6:	ret    
    7cf7:	nop    WORD PTR [rax+rax*1+0x0]
    7d00:	lea    rsi,[rip+0x13218]        # 1af1f <_IO_stdin_used+0xf1f>
    7d07:	mov    rdi,rbx
    7d0a:	call   2490 <fopen@plt>
    7d0f:	mov    rbp,rax
    7d12:	test   rax,rax
    7d15:	je     7d30 <w_serial_i+0xe0>
    7d17:	mov    rsi,r13
    7d1a:	mov    rdi,rbp
    7d1d:	call   7500 <swrite_gauge_hdr>
    7d22:	mov    eax,DWORD PTR [rip+0x1abbc]        # 228e4 <this_node>
    7d28:	test   eax,eax
    7d2a:	je     7cb1 <w_serial_i+0x61>
    7d2c:	jmp    7caf <w_serial_i+0x5f>
    7d2e:	xchg   ax,ax
    7d30:	call   22c0 <__errno_location@plt>
    7d35:	mov    ecx,DWORD PTR [rip+0x1aba9]        # 228e4 <this_node>
    7d3b:	mov    r8,rbx
    7d3e:	lea    rdx,[rsp+0xd]
    7d43:	mov    r9d,DWORD PTR [rax]
    7d46:	lea    rsi,[rip+0x1378b]        # 1b4d8 <_IO_stdin_used+0x14d8>
    7d4d:	mov    edi,0x1
    7d52:	xor    eax,eax
    7d54:	call   2470 <__printf_chk@plt>
    7d59:	mov    rdi,QWORD PTR [rip+0x1a580]        # 222e0 <stdout@@GLIBC_2.2.5>
    7d60:	call   2420 <fflush@plt>
    7d65:	mov    edi,0x1
    7d6a:	call   19570 <terminate>
    7d6f:	jmp    7d17 <w_serial_i+0xc7>
    7d71:	call   2350 <__stack_chk_fail@plt>
    7d76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007d80 <read_checksum>:
    7d80:	endbr64 
    7d84:	push   r14
    7d86:	lea    r14,[rip+0x13195]        # 1af22 <_IO_stdin_used+0xf22>
    7d8d:	lea    rcx,[rsi+0x30]
    7d91:	mov    r8d,0x4
    7d97:	push   r13
    7d99:	push   r12
    7d9b:	mov    r12d,edi
    7d9e:	mov    edi,0x6d
    7da3:	push   rbp
    7da4:	mov    rbp,rdx
    7da7:	push   rbx
    7da8:	mov    rbx,rsi
    7dab:	sub    rsp,0x20
    7daf:	mov    rdx,QWORD PTR [rsi]
    7db2:	mov    rax,QWORD PTR fs:0x28
    7dbb:	mov    QWORD PTR [rsp+0x18],rax
    7dc0:	xor    eax,eax
    7dc2:	lea    r13,[rsp+0xa]
    7dc7:	mov    WORD PTR [rsp+0x16],di
    7dcc:	movabs rax,0x6568635f64616572
    7dd6:	mov    QWORD PTR [rsp+0xa],rax
    7ddb:	sub    rsp,0x8
    7ddf:	mov    edi,DWORD PTR [rsi+0x18]
    7de2:	mov    r9,r13
    7de5:	mov    DWORD PTR [rsp+0x1a],0x75736b63
    7ded:	mov    esi,r12d
    7df0:	push   r14
    7df2:	call   7410 <psread_byteorder>
    7df7:	pop    r8
    7df9:	pop    r9
    7dfb:	test   eax,eax
    7dfd:	jne    7e90 <read_checksum+0x110>
    7e03:	sub    rsp,0x8
    7e07:	mov    edi,DWORD PTR [rbx+0x18]
    7e0a:	mov    rdx,QWORD PTR [rbx]
    7e0d:	lea    rcx,[rbx+0x2c]
    7e11:	push   r14
    7e13:	mov    esi,r12d
    7e16:	mov    r9,r13
    7e19:	mov    r8d,0x4
    7e1f:	call   7410 <psread_byteorder>
    7e24:	pop    rcx
    7e25:	pop    rsi
    7e26:	test   eax,eax
    7e28:	jne    7e80 <read_checksum+0x100>
    7e2a:	mov    r9d,DWORD PTR [rbx+0x30]
    7e2e:	mov    ecx,DWORD PTR [rbp+0x4]
    7e31:	mov    eax,DWORD PTR [rbx+0x2c]
    7e34:	mov    r8d,DWORD PTR [rbp+0x0]
    7e38:	cmp    r9d,ecx
    7e3b:	jne    7e42 <read_checksum+0xc2>
    7e3d:	cmp    r8d,eax
    7e40:	je     7ea0 <read_checksum+0x120>
    7e42:	sub    rsp,0x8
    7e46:	mov    rdx,r13
    7e49:	mov    edi,0x1
    7e4e:	push   rax
    7e4f:	lea    rsi,[rip+0x136b2]        # 1b508 <_IO_stdin_used+0x1508>
    7e56:	xor    eax,eax
    7e58:	call   2470 <__printf_chk@plt>
    7e5d:	pop    rax
    7e5e:	pop    rdx
    7e5f:	mov    rax,QWORD PTR [rsp+0x18]
    7e64:	xor    rax,QWORD PTR fs:0x28
    7e6d:	jne    7ec7 <read_checksum+0x147>
    7e6f:	add    rsp,0x20
    7e73:	pop    rbx
    7e74:	pop    rbp
    7e75:	pop    r12
    7e77:	pop    r13
    7e79:	pop    r14
    7e7b:	ret    
    7e7c:	nop    DWORD PTR [rax+0x0]
    7e80:	mov    edi,0x1
    7e85:	call   19570 <terminate>
    7e8a:	jmp    7e2a <read_checksum+0xaa>
    7e8c:	nop    DWORD PTR [rax+0x0]
    7e90:	mov    edi,0x1
    7e95:	call   19570 <terminate>
    7e9a:	jmp    7e03 <read_checksum+0x83>
    7e9f:	nop
    7ea0:	mov    ecx,r8d
    7ea3:	mov    edx,r9d
    7ea6:	lea    rsi,[rip+0x1307e]        # 1af2b <_IO_stdin_used+0xf2b>
    7ead:	xor    eax,eax
    7eaf:	mov    edi,0x1
    7eb4:	call   2470 <__printf_chk@plt>
    7eb9:	mov    rdi,QWORD PTR [rip+0x1a420]        # 222e0 <stdout@@GLIBC_2.2.5>
    7ec0:	call   2420 <fflush@plt>
    7ec5:	jmp    7e5f <read_checksum+0xdf>
    7ec7:	call   2350 <__stack_chk_fail@plt>
    7ecc:	nop    DWORD PTR [rax+0x0]

0000000000007ed0 <write_checksum>:
    7ed0:	endbr64 
    7ed4:	push   r12
    7ed6:	lea    rdx,[rsi+0x30]
    7eda:	mov    ecx,0x4
    7edf:	lea    r9,[rip+0x1303c]        # 1af22 <_IO_stdin_used+0xf22>
    7ee6:	push   rbp
    7ee7:	mov    ebp,edi
    7ee9:	push   rbx
    7eea:	mov    rbx,rsi
    7eed:	sub    rsp,0x20
    7ef1:	mov    rsi,QWORD PTR [rsi]
    7ef4:	mov    rax,QWORD PTR fs:0x28
    7efd:	mov    QWORD PTR [rsp+0x18],rax
    7f02:	xor    eax,eax
    7f04:	lea    r12,[rsp+0x9]
    7f09:	mov    DWORD PTR [rsp+0x11],0x736b6365
    7f11:	movabs rax,0x68635f6574697277
    7f1b:	mov    QWORD PTR [rsp+0x9],rax
    7f20:	mov    r8,r12
    7f23:	mov    eax,0x6d75
    7f28:	mov    WORD PTR [rsp+0x15],ax
    7f2d:	mov    BYTE PTR [rsp+0x17],0x0
    7f32:	call   7230 <pswrite_data>
    7f37:	mov    rsi,QWORD PTR [rbx]
    7f3a:	lea    rdx,[rbx+0x2c]
    7f3e:	mov    r8,r12
    7f41:	lea    r9,[rip+0x12fda]        # 1af22 <_IO_stdin_used+0xf22>
    7f48:	mov    ecx,0x4
    7f4d:	mov    edi,ebp
    7f4f:	call   7230 <pswrite_data>
    7f54:	mov    ecx,DWORD PTR [rbx+0x2c]
    7f57:	mov    edx,DWORD PTR [rbx+0x30]
    7f5a:	xor    eax,eax
    7f5c:	lea    rsi,[rip+0x12fdc]        # 1af3f <_IO_stdin_used+0xf3f>
    7f63:	mov    edi,0x1
    7f68:	call   2470 <__printf_chk@plt>
    7f6d:	mov    rax,QWORD PTR [rsp+0x18]
    7f72:	xor    rax,QWORD PTR fs:0x28
    7f7b:	jne    7f86 <write_checksum+0xb6>
    7f7d:	add    rsp,0x20
    7f81:	pop    rbx
    7f82:	pop    rbp
    7f83:	pop    r12
    7f85:	ret    
    7f86:	call   2350 <__stack_chk_fail@plt>
    7f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007f90 <w_serial>:
    7f90:	endbr64 
    7f94:	push   r15
    7f96:	push   r14
    7f98:	push   r13
    7f9a:	push   r12
    7f9c:	push   rbp
    7f9d:	push   rbx
    7f9e:	sub    rsp,0x298
    7fa5:	mov    QWORD PTR [rsp+0x8],rdi
    7faa:	mov    rax,QWORD PTR fs:0x28
    7fb3:	mov    QWORD PTR [rsp+0x288],rax
    7fbb:	xor    eax,eax
    7fbd:	movsxd rax,DWORD PTR [rip+0x1a920]        # 228e4 <this_node>
    7fc4:	test   eax,eax
    7fc6:	jne    802b <w_serial+0x9b>
    7fc8:	mov    r8d,DWORD PTR [rdi+0x28]
    7fcc:	test   r8d,r8d
    7fcf:	jne    8533 <w_serial+0x5a3>
    7fd5:	mov    esi,0x90
    7fda:	mov    edi,0x4000
    7fdf:	call   23d0 <calloc@plt>
    7fe4:	mov    QWORD PTR [rsp+0x10],rax
    7fe9:	test   rax,rax
    7fec:	je     85d0 <w_serial+0x640>
    7ff2:	mov    rax,QWORD PTR [rsp+0x8]
    7ff7:	xor    edx,edx
    7ff9:	mov    rdi,QWORD PTR [rax]
    7ffc:	mov    rax,QWORD PTR [rax+0x8]
    8000:	mov    QWORD PTR [rsp+0x38],rax
    8005:	movsxd rax,DWORD PTR [rax+0x54]
    8009:	mov    QWORD PTR [rsp+0x28],rdi
    800e:	lea    rsi,[rax+0x8]
    8012:	mov    QWORD PTR [rsp+0x30],rax
    8017:	call   2440 <fseek@plt>
    801c:	test   eax,eax
    801e:	js     8585 <w_serial+0x5f5>
    8024:	movsxd rax,DWORD PTR [rip+0x1a8b9]        # 228e4 <this_node>
    802b:	movsxd rdx,DWORD PTR [rip+0x1a4ce]        # 22500 <sites_on_node>
    8032:	mov    rbx,QWORD PTR [rsp+0x8]
    8037:	imul   rax,rdx
    803b:	mov    QWORD PTR [rbx+0x2c],0x0
    8043:	movabs rdx,0x1a7b9611a7b9611b
    804d:	lea    rbx,[rax+rax*8]
    8051:	shl    rbx,0x4
    8055:	mov    rax,rbx
    8058:	mov    r13d,ebx
    805b:	mul    rdx
    805e:	mov    rax,rbx
    8061:	sub    rax,rdx
    8064:	shr    rax,1
    8067:	add    rax,rdx
    806a:	shr    rax,0x4
    806e:	lea    rdx,[rax*8+0x0]
    8076:	sub    rdx,rax
    8079:	lea    rax,[rax+rdx*4]
    807d:	movabs rdx,0x842108421084211
    8087:	sub    r13d,eax
    808a:	mov    rax,rbx
    808d:	mul    rdx
    8090:	mov    rax,rbx
    8093:	sub    rax,rdx
    8096:	shr    rax,1
    8099:	add    rax,rdx
    809c:	shr    rax,0x4
    80a0:	mov    rdx,rax
    80a3:	shl    rdx,0x5
    80a7:	sub    rdx,rax
    80aa:	xor    eax,eax
    80ac:	sub    ebx,edx
    80ae:	call   193d0 <g_sync>
    80b3:	mov    edi,DWORD PTR [rip+0x1a317]        # 223d0 <nt>
    80b9:	test   edi,edi
    80bb:	jle    81b3 <w_serial+0x223>
    80c1:	mov    DWORD PTR [rsp+0x20],0x0
    80c9:	xor    ebp,ebp
    80cb:	mov    r14d,ebx
    80ce:	mov    DWORD PTR [rsp+0x4],0x0
    80d6:	mov    DWORD PTR [rsp],0x0
    80dd:	mov    edx,DWORD PTR [rip+0x1a2f1]        # 223d4 <nz>
    80e3:	xor    r15d,r15d
    80e6:	mov    r12d,r14d
    80e9:	test   edx,edx
    80eb:	jle    819e <w_serial+0x20e>
    80f1:	mov    ecx,DWORD PTR [rip+0x1a745]        # 2283c <ny>
    80f7:	xor    ebx,ebx
    80f9:	mov    r14d,r12d
    80fc:	test   ecx,ecx
    80fe:	jle    818a <w_serial+0x1fa>
    8104:	mov    esi,DWORD PTR [rip+0x1a2ce]        # 223d8 <nx>
    810a:	xor    r12d,r12d
    810d:	test   esi,esi
    810f:	jle    8178 <w_serial+0x1e8>
    8111:	mov    eax,r12d
    8114:	mov    r12d,r14d
    8117:	mov    r14d,ebx
    811a:	mov    ebx,eax
    811c:	nop    DWORD PTR [rax+0x0]
    8120:	mov    ecx,DWORD PTR [rsp+0x20]
    8124:	mov    edx,r15d
    8127:	mov    esi,r14d
    812a:	mov    edi,ebx
    812c:	call   3ac0 <node_number>
    8131:	mov    edx,DWORD PTR [rip+0x1a7ad]        # 228e4 <this_node>
    8137:	cmp    eax,ebp
    8139:	je     8338 <w_serial+0x3a8>
    813f:	test   edx,edx
    8141:	jne    814b <w_serial+0x1bb>
    8143:	test   eax,eax
    8145:	jne    8450 <w_serial+0x4c0>
    814b:	cmp    edx,eax
    814d:	je     837e <w_serial+0x3ee>
    8153:	test   edx,edx
    8155:	je     81f1 <w_serial+0x261>
    815b:	mov    ebp,eax
    815d:	mov    eax,DWORD PTR [rsp+0x4]
    8161:	add    ebx,0x1
    8164:	add    eax,ebx
    8166:	cmp    DWORD PTR [rip+0x1a26c],ebx        # 223d8 <nx>
    816c:	jg     8120 <w_serial+0x190>
    816e:	mov    DWORD PTR [rsp+0x4],eax
    8172:	mov    ebx,r14d
    8175:	mov    r14d,r12d
    8178:	add    ebx,0x1
    817b:	cmp    DWORD PTR [rip+0x1a6bb],ebx        # 2283c <ny>
    8181:	jg     8104 <w_serial+0x174>
    8187:	mov    r12d,r14d
    818a:	add    r15d,0x1
    818e:	cmp    DWORD PTR [rip+0x1a23f],r15d        # 223d4 <nz>
    8195:	jg     80f1 <w_serial+0x161>
    819b:	mov    r14d,r12d
    819e:	add    DWORD PTR [rsp+0x20],0x1
    81a3:	mov    eax,DWORD PTR [rsp+0x20]
    81a7:	cmp    DWORD PTR [rip+0x1a223],eax        # 223d0 <nt>
    81ad:	jg     80dd <w_serial+0x14d>
    81b3:	xor    eax,eax
    81b5:	call   193d0 <g_sync>
    81ba:	mov    eax,DWORD PTR [rip+0x1a724]        # 228e4 <this_node>
    81c0:	test   eax,eax
    81c2:	je     84cb <w_serial+0x53b>
    81c8:	mov    rax,QWORD PTR [rsp+0x288]
    81d0:	xor    rax,QWORD PTR fs:0x28
    81d9:	jne    85f7 <w_serial+0x667>
    81df:	add    rsp,0x298
    81e6:	pop    rbx
    81e7:	pop    rbp
    81e8:	pop    r12
    81ea:	pop    r13
    81ec:	pop    r14
    81ee:	pop    r15
    81f0:	ret    
    81f1:	lea    r8,[rsp+0x40]
    81f6:	test   eax,eax
    81f8:	je     838b <w_serial+0x3fb>
    81fe:	mov    rdi,r8
    8201:	mov    esi,0x240
    8206:	mov    DWORD PTR [rsp+0x24],eax
    820a:	mov    QWORD PTR [rsp+0x18],r8
    820f:	call   19390 <get_field>
    8214:	mov    eax,DWORD PTR [rsp+0x24]
    8218:	mov    r8,QWORD PTR [rsp+0x18]
    821d:	mov    ebp,eax
    821f:	mov    eax,DWORD PTR [rsp]
    8222:	mov    rsi,r8
    8225:	mov    ecx,0x48
    822a:	xor    r8d,r8d
    822d:	shl    eax,0x2
    8230:	cdqe   
    8232:	lea    rdx,[rax+rax*8]
    8236:	mov    rax,QWORD PTR [rsp+0x8]
    823b:	shl    rdx,0x4
    823f:	add    rdx,QWORD PTR [rsp+0x10]
    8244:	mov    rdi,rdx
    8247:	lea    r11,[rdx+0x240]
    824e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    8251:	mov    edi,DWORD PTR [rax+0x30]
    8254:	mov    esi,DWORD PTR [rax+0x2c]
    8257:	nop    WORD PTR [rax+rax*1+0x0]
    8260:	mov    eax,DWORD PTR [rdx]
    8262:	mov    ecx,r13d
    8265:	add    r13d,0x1
    8269:	mov    r9d,eax
    826c:	rol    r9d,cl
    826f:	mov    ecx,r12d
    8272:	rol    eax,cl
    8274:	xor    edi,r9d
    8277:	xor    esi,eax
    8279:	cmp    r13d,0x1d
    827d:	cmove  r13d,r8d
    8281:	add    r12d,0x1
    8285:	cmp    r12d,0x1f
    8289:	cmove  r12d,r8d
    828d:	add    rdx,0x4
    8291:	cmp    r11,rdx
    8294:	jne    8260 <w_serial+0x2d0>
    8296:	mov    rax,QWORD PTR [rsp+0x8]
    829b:	add    DWORD PTR [rsp],0x1
    829f:	mov    DWORD PTR [rax+0x30],edi
    82a2:	mov    DWORD PTR [rax+0x2c],esi
    82a5:	mov    eax,DWORD PTR [rsp]
    82a8:	cmp    eax,0x1000
    82ad:	je     82c7 <w_serial+0x337>
    82af:	mov    eax,DWORD PTR [rsp+0x4]
    82b3:	lea    edx,[rax+rbx*1]
    82b6:	mov    eax,DWORD PTR [rip+0x1a134]        # 223f0 <volume>
    82bc:	sub    eax,0x1
    82bf:	cmp    eax,edx
    82c1:	jne    815d <w_serial+0x1cd>
    82c7:	movsxd rdx,DWORD PTR [rsp]
    82cb:	mov    rcx,QWORD PTR [rsp+0x28]
    82d0:	mov    esi,0x240
    82d5:	mov    rdi,QWORD PTR [rsp+0x10]
    82da:	call   24c0 <fwrite@plt>
    82df:	cmp    DWORD PTR [rsp],eax
    82e2:	je     84bf <w_serial+0x52f>
    82e8:	call   22c0 <__errno_location@plt>
    82ed:	mov    rsi,QWORD PTR [rsp+0x8]
    82f2:	mov    edx,DWORD PTR [rip+0x1a5ec]        # 228e4 <this_node>
    82f8:	mov    edi,0x1
    82fd:	mov    ecx,DWORD PTR [rax]
    82ff:	xor    eax,eax
    8301:	mov    r8,QWORD PTR [rsi+0x10]
    8305:	lea    rsi,[rip+0x132cc]        # 1b5d8 <_IO_stdin_used+0x15d8>
    830c:	call   2470 <__printf_chk@plt>
    8311:	mov    rdi,QWORD PTR [rip+0x19fc8]        # 222e0 <stdout@@GLIBC_2.2.5>
    8318:	call   2420 <fflush@plt>
    831d:	mov    edi,0x1
    8322:	call   19570 <terminate>
    8327:	mov    DWORD PTR [rsp],0x0
    832e:	jmp    815d <w_serial+0x1cd>
    8333:	nop    DWORD PTR [rax+rax*1+0x0]
    8338:	test   edx,edx
    833a:	je     81f1 <w_serial+0x261>
    8340:	mov    ebp,eax
    8342:	cmp    edx,eax
    8344:	jne    815d <w_serial+0x1cd>
    834a:	mov    ecx,DWORD PTR [rsp+0x20]
    834e:	mov    edx,r15d
    8351:	mov    esi,r14d
    8354:	mov    edi,ebx
    8356:	call   3b10 <node_index>
    835b:	xor    edx,edx
    835d:	mov    esi,0x240
    8362:	movsxd rdi,eax
    8365:	shl    rdi,0xb
    8369:	add    rdi,QWORD PTR [rip+0x1a458]        # 227c8 <lattice>
    8370:	add    rdi,0x70
    8374:	call   19380 <send_field>
    8379:	jmp    815d <w_serial+0x1cd>
    837e:	lea    r8,[rsp+0x40]
    8383:	test   eax,eax
    8385:	jne    848d <w_serial+0x4fd>
    838b:	mov    ecx,DWORD PTR [rsp+0x20]
    838f:	mov    edx,r15d
    8392:	mov    esi,r14d
    8395:	mov    edi,ebx
    8397:	call   3b10 <node_index>
    839c:	lea    r8,[rsp+0x40]
    83a1:	movsxd rdx,eax
    83a4:	xor    eax,eax
    83a6:	shl    rdx,0xb
    83aa:	add    rdx,QWORD PTR [rip+0x1a417]        # 227c8 <lattice>
    83b1:	movdqu xmm0,XMMWORD PTR [rdx+rax*1+0x70]
    83b7:	movaps XMMWORD PTR [r8+rax*1],xmm0
    83bc:	movdqu xmm1,XMMWORD PTR [rdx+rax*1+0x80]
    83c5:	movaps XMMWORD PTR [r8+rax*1+0x10],xmm1
    83cb:	movdqu xmm2,XMMWORD PTR [rdx+rax*1+0x90]
    83d4:	movaps XMMWORD PTR [r8+rax*1+0x20],xmm2
    83da:	movdqu xmm3,XMMWORD PTR [rdx+rax*1+0xa0]
    83e3:	movaps XMMWORD PTR [r8+rax*1+0x30],xmm3
    83e9:	movdqu xmm4,XMMWORD PTR [rdx+rax*1+0xb0]
    83f2:	movaps XMMWORD PTR [r8+rax*1+0x40],xmm4
    83f8:	movdqu xmm5,XMMWORD PTR [rdx+rax*1+0xc0]
    8401:	movaps XMMWORD PTR [r8+rax*1+0x50],xmm5
    8407:	movdqu xmm6,XMMWORD PTR [rdx+rax*1+0xd0]
    8410:	movaps XMMWORD PTR [r8+rax*1+0x60],xmm6
    8416:	movdqu xmm7,XMMWORD PTR [rdx+rax*1+0xe0]
    841f:	movaps XMMWORD PTR [r8+rax*1+0x70],xmm7
    8425:	movdqu xmm0,XMMWORD PTR [rdx+rax*1+0xf0]
    842e:	movaps XMMWORD PTR [r8+rax*1+0x80],xmm0
    8437:	add    rax,0x90
    843d:	cmp    rax,0x240
    8443:	jne    83b1 <w_serial+0x421>
    8449:	xor    ebp,ebp
    844b:	jmp    821f <w_serial+0x28f>
    8450:	lea    r8,[rsp+0x40]
    8455:	mov    edx,eax
    8457:	mov    esi,0x4
    845c:	mov    DWORD PTR [rsp+0x24],eax
    8460:	mov    rdi,r8
    8463:	mov    QWORD PTR [rsp+0x18],r8
    8468:	call   19380 <send_field>
    846d:	mov    edx,DWORD PTR [rip+0x1a471]        # 228e4 <this_node>
    8473:	mov    eax,DWORD PTR [rsp+0x24]
    8477:	mov    r8,QWORD PTR [rsp+0x18]
    847c:	cmp    edx,eax
    847e:	je     848d <w_serial+0x4fd>
    8480:	test   edx,edx
    8482:	jne    815b <w_serial+0x1cb>
    8488:	jmp    81fe <w_serial+0x26e>
    848d:	mov    rdi,r8
    8490:	mov    esi,0x4
    8495:	mov    DWORD PTR [rsp+0x24],eax
    8499:	mov    QWORD PTR [rsp+0x18],r8
    849e:	call   19390 <get_field>
    84a3:	mov    edx,DWORD PTR [rip+0x1a43b]        # 228e4 <this_node>
    84a9:	mov    r8,QWORD PTR [rsp+0x18]
    84ae:	mov    eax,DWORD PTR [rsp+0x24]
    84b2:	test   edx,edx
    84b4:	jne    8340 <w_serial+0x3b0>
    84ba:	jmp    81fe <w_serial+0x26e>
    84bf:	mov    DWORD PTR [rsp],0x0
    84c6:	jmp    815d <w_serial+0x1cd>
    84cb:	mov    rdi,QWORD PTR [rsp+0x10]
    84d0:	call   22a0 <free@plt>
    84d5:	mov    rax,QWORD PTR [rsp+0x8]
    84da:	mov    edi,0x1
    84df:	lea    rsi,[rip+0x13132]        # 1b618 <_IO_stdin_used+0x1618>
    84e6:	mov    rdx,QWORD PTR [rax+0x10]
    84ea:	xor    eax,eax
    84ec:	call   2470 <__printf_chk@plt>
    84f1:	mov    rdx,QWORD PTR [rsp+0x38]
    84f6:	lea    rsi,[rip+0x12a53]        # 1af50 <_IO_stdin_used+0xf50>
    84fd:	xor    eax,eax
    84ff:	mov    edi,0x1
    8504:	add    rdx,0x4
    8508:	call   2470 <__printf_chk@plt>
    850d:	mov    rsi,QWORD PTR [rsp+0x30]
    8512:	mov    rdi,QWORD PTR [rsp+0x28]
    8517:	xor    edx,edx
    8519:	call   2440 <fseek@plt>
    851e:	test   eax,eax
    8520:	js     8544 <w_serial+0x5b4>
    8522:	mov    rsi,QWORD PTR [rsp+0x8]
    8527:	xor    edi,edi
    8529:	call   7ed0 <write_checksum>
    852e:	jmp    81c8 <w_serial+0x238>
    8533:	lea    rdi,[rip+0x13006]        # 1b540 <_IO_stdin_used+0x1540>
    853a:	call   22f0 <puts@plt>
    853f:	jmp    7fd5 <w_serial+0x45>
    8544:	call   22c0 <__errno_location@plt>
    8549:	mov    rbx,QWORD PTR [rsp+0x8]
    854e:	mov    edx,DWORD PTR [rip+0x1a390]        # 228e4 <this_node>
    8554:	lea    rsi,[rip+0x13045]        # 1b5a0 <_IO_stdin_used+0x15a0>
    855b:	mov    ecx,DWORD PTR [rax]
    855d:	mov    edi,0x1
    8562:	xor    eax,eax
    8564:	mov    r8,QWORD PTR [rbx+0x10]
    8568:	call   2470 <__printf_chk@plt>
    856d:	mov    rdi,QWORD PTR [rip+0x19d6c]        # 222e0 <stdout@@GLIBC_2.2.5>
    8574:	call   2420 <fflush@plt>
    8579:	mov    edi,0x1
    857e:	call   19570 <terminate>
    8583:	jmp    8522 <w_serial+0x592>
    8585:	call   22c0 <__errno_location@plt>
    858a:	mov    rbx,QWORD PTR [rsp+0x8]
    858f:	mov    edx,DWORD PTR [rip+0x1a34f]        # 228e4 <this_node>
    8595:	lea    rsi,[rip+0x13004]        # 1b5a0 <_IO_stdin_used+0x15a0>
    859c:	mov    ecx,DWORD PTR [rax]
    859e:	mov    edi,0x1
    85a3:	xor    eax,eax
    85a5:	mov    r8,QWORD PTR [rbx+0x10]
    85a9:	call   2470 <__printf_chk@plt>
    85ae:	mov    rdi,QWORD PTR [rip+0x19d2b]        # 222e0 <stdout@@GLIBC_2.2.5>
    85b5:	call   2420 <fflush@plt>
    85ba:	mov    edi,0x1
    85bf:	call   19570 <terminate>
    85c4:	movsxd rax,DWORD PTR [rip+0x1a319]        # 228e4 <this_node>
    85cb:	jmp    802b <w_serial+0x9b>
    85d0:	lea    rdi,[rip+0x12fa1]        # 1b578 <_IO_stdin_used+0x1578>
    85d7:	call   22f0 <puts@plt>
    85dc:	mov    rdi,QWORD PTR [rip+0x19cfd]        # 222e0 <stdout@@GLIBC_2.2.5>
    85e3:	call   2420 <fflush@plt>
    85e8:	mov    edi,0x1
    85ed:	call   19570 <terminate>
    85f2:	jmp    7ff2 <w_serial+0x62>
    85f7:	call   2350 <__stack_chk_fail@plt>
    85fc:	nop    DWORD PTR [rax+0x0]

0000000000008600 <w_serial_f>:
    8600:	endbr64 
    8604:	push   rbp
    8605:	xor    eax,eax
    8607:	mov    rbp,rdi
    860a:	call   193d0 <g_sync>
    860f:	mov    ecx,DWORD PTR [rip+0x1a2cf]        # 228e4 <this_node>
    8615:	test   ecx,ecx
    8617:	jne    8640 <w_serial_f+0x40>
    8619:	mov    edx,DWORD PTR [rbp+0x28]
    861c:	test   edx,edx
    861e:	jne    8648 <w_serial_f+0x48>
    8620:	mov    rdi,QWORD PTR [rbp+0x0]
    8624:	call   2320 <fclose@plt>
    8629:	mov    eax,DWORD PTR [rip+0x1a2b5]        # 228e4 <this_node>
    862f:	test   eax,eax
    8631:	jne    8640 <w_serial_f+0x40>
    8633:	mov    rdi,rbp
    8636:	pop    rbp
    8637:	jmp    77c0 <write_gauge_info_file>
    863c:	nop    DWORD PTR [rax+0x0]
    8640:	pop    rbp
    8641:	ret    
    8642:	nop    WORD PTR [rax+rax*1+0x0]
    8648:	lea    rdi,[rip+0x13001]        # 1b650 <_IO_stdin_used+0x1650>
    864f:	call   22f0 <puts@plt>
    8654:	jmp    8620 <w_serial_f+0x20>
    8656:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008660 <read_site_list>:
    8660:	endbr64 
    8664:	mov    rax,QWORD PTR [rsi+0x8]
    8668:	mov    eax,DWORD PTR [rax+0x58]
    866b:	test   eax,eax
    866d:	jne    8680 <read_site_list+0x20>
    866f:	mov    QWORD PTR [rsi+0x20],0x0
    8677:	ret    
    8678:	nop    DWORD PTR [rax+rax*1+0x0]
    8680:	jmp    6ad0 <read_site_list.part.0>
    8685:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000008690 <read_v3_gauge_hdr>:
    8690:	endbr64 
    8694:	push   r15
    8696:	mov    ecx,0x72
    869b:	push   r14
    869d:	push   r13
    869f:	push   r12
    86a1:	mov    r12d,esi
    86a4:	push   rbp
    86a5:	push   rbx
    86a6:	sub    rsp,0x58
    86aa:	movdqa xmm0,XMMWORD PTR [rip+0x13c3e]        # 1c2f0 <_IO_stdin_used+0x22f0>
    86b2:	mov    rbp,QWORD PTR [rdi+0x8]
    86b6:	mov    QWORD PTR [rsp+0x10],rdx
    86bb:	mov    r13,QWORD PTR [rdi]
    86be:	mov    rax,QWORD PTR fs:0x28
    86c7:	mov    QWORD PTR [rsp+0x48],rax
    86cc:	xor    eax,eax
    86ce:	mov    WORD PTR [rsp+0x40],cx
    86d3:	movaps XMMWORD PTR [rsp+0x30],xmm0
    86d8:	mov    ebx,DWORD PTR [rbp+0x0]
    86db:	mov    DWORD PTR [rsp+0x4],0x0
    86e3:	test   ebx,ebx
    86e5:	je     89c0 <read_v3_gauge_hdr+0x330>
    86eb:	cmp    ebx,0xe7da
    86f1:	je     89a0 <read_v3_gauge_hdr+0x310>
    86f7:	mov    esi,0x1
    86fc:	mov    rdi,rbp
    86ff:	call   15960 <byterevn>
    8704:	cmp    DWORD PTR [rbp+0x0],0xe7da
    870b:	je     8740 <read_v3_gauge_hdr+0xb0>
    870d:	mov    DWORD PTR [rbp+0x0],ebx
    8710:	mov    eax,0x1
    8715:	mov    rcx,QWORD PTR [rsp+0x48]
    871a:	xor    rcx,QWORD PTR fs:0x28
    8723:	jne    8a85 <read_v3_gauge_hdr+0x3f5>
    8729:	add    rsp,0x58
    872d:	pop    rbx
    872e:	pop    rbp
    872f:	pop    r12
    8731:	pop    r13
    8733:	pop    r14
    8735:	pop    r15
    8737:	ret    
    8738:	nop    DWORD PTR [rax+rax*1+0x0]
    8740:	mov    rbx,QWORD PTR [rsp+0x10]
    8745:	lea    rdi,[rip+0x12fbc]        # 1b708 <_IO_stdin_used+0x1708>
    874c:	mov    DWORD PTR [rbx],0x1
    8752:	call   22f0 <puts@plt>
    8757:	lea    rdi,[rip+0x12ff2]        # 1b750 <_IO_stdin_used+0x1750>
    875e:	call   22f0 <puts@plt>
    8763:	mov    ecx,0x8
    8768:	mov    edx,0x4
    876d:	xor    eax,eax
    876f:	lea    rsi,[rip+0x13002]        # 1b778 <_IO_stdin_used+0x1778>
    8776:	mov    edi,0x1
    877b:	call   2470 <__printf_chk@plt>
    8780:	mov    edi,0x1
    8785:	call   19570 <terminate>
    878a:	mov    edi,DWORD PTR [rbx]
    878c:	lea    rbx,[rbp+0x44]
    8790:	lea    rax,[rbp+0x54]
    8794:	mov    r15,QWORD PTR [rsp+0x10]
    8799:	mov    QWORD PTR [rsp+0x8],rax
    879e:	lea    r14,[rsp+0x30]
    87a3:	mov    QWORD PTR [rsp+0x18],rbx
    87a8:	sub    rsp,0x8
    87ac:	mov    rdx,r13
    87af:	mov    r9,r14
    87b2:	mov    r8d,0x4
    87b8:	lea    rax,[rip+0x12a36]        # 1b1f5 <_IO_stdin_used+0x11f5>
    87bf:	mov    rcx,rbx
    87c2:	mov    esi,r12d
    87c5:	push   rax
    87c6:	call   7410 <psread_byteorder>
    87cb:	pop    r11
    87cd:	pop    rdx
    87ce:	test   eax,eax
    87d0:	jne    87f0 <read_v3_gauge_hdr+0x160>
    87d2:	mov    r10d,DWORD PTR [rsp+0x4]
    87d7:	test   r10d,r10d
    87da:	jne    8804 <read_v3_gauge_hdr+0x174>
    87dc:	add    rbx,0x4
    87e0:	cmp    QWORD PTR [rsp+0x8],rbx
    87e5:	je     8850 <read_v3_gauge_hdr+0x1c0>
    87e7:	mov    edi,DWORD PTR [r15]
    87ea:	jmp    87a8 <read_v3_gauge_hdr+0x118>
    87ec:	nop    DWORD PTR [rax+0x0]
    87f0:	mov    edi,0x1
    87f5:	call   19570 <terminate>
    87fa:	mov    r10d,DWORD PTR [rsp+0x4]
    87ff:	test   r10d,r10d
    8802:	je     87dc <read_v3_gauge_hdr+0x14c>
    8804:	sub    rsp,0x8
    8808:	mov    edi,DWORD PTR [r15]
    880b:	mov    r9,r14
    880e:	mov    r8d,0x4
    8814:	lea    rax,[rip+0x129da]        # 1b1f5 <_IO_stdin_used+0x11f5>
    881b:	mov    rcx,rbx
    881e:	mov    rdx,r13
    8821:	mov    esi,r12d
    8824:	push   rax
    8825:	call   7410 <psread_byteorder>
    882a:	pop    r8
    882c:	pop    r9
    882e:	test   eax,eax
    8830:	je     87dc <read_v3_gauge_hdr+0x14c>
    8832:	mov    edi,0x1
    8837:	add    rbx,0x4
    883b:	call   19570 <terminate>
    8840:	cmp    QWORD PTR [rsp+0x8],rbx
    8845:	jne    87e7 <read_v3_gauge_hdr+0x157>
    8847:	nop    WORD PTR [rax+rax*1+0x0]
    8850:	mov    edx,DWORD PTR [rbp+0x44]
    8853:	mov    eax,DWORD PTR [rip+0x19b7f]        # 223d8 <nx>
    8859:	mov    rbx,QWORD PTR [rsp+0x18]
    885e:	mov    ecx,DWORD PTR [rip+0x19fd8]        # 2283c <ny>
    8864:	mov    esi,DWORD PTR [rip+0x19b6a]        # 223d4 <nz>
    886a:	mov    edi,DWORD PTR [rip+0x19b60]        # 223d0 <nt>
    8870:	cmp    edx,eax
    8872:	je     8a00 <read_v3_gauge_hdr+0x370>
    8878:	and    eax,ecx
    887a:	and    eax,esi
    887c:	and    eax,edi
    887e:	cmp    eax,0xffffffff
    8881:	je     8a50 <read_v3_gauge_hdr+0x3c0>
    8887:	lea    rsi,[rip+0x12f22]        # 1b7b0 <_IO_stdin_used+0x17b0>
    888e:	mov    edi,0x1
    8893:	xor    eax,eax
    8895:	call   2470 <__printf_chk@plt>
    889a:	mov    QWORD PTR [rsp+0x18],rbp
    889f:	mov    rbp,rbx
    88a2:	mov    rbx,QWORD PTR [rsp+0x8]
    88a7:	lea    r15,[rip+0x126be]        # 1af6c <_IO_stdin_used+0xf6c>
    88ae:	mov    edx,DWORD PTR [rbp+0x0]
    88b1:	mov    rsi,r15
    88b4:	mov    edi,0x1
    88b9:	xor    eax,eax
    88bb:	add    rbp,0x4
    88bf:	call   2470 <__printf_chk@plt>
    88c4:	cmp    rbp,rbx
    88c7:	jne    88ae <read_v3_gauge_hdr+0x21e>
    88c9:	mov    edi,0xa
    88ce:	mov    rbp,QWORD PTR [rsp+0x18]
    88d3:	call   22b0 <putchar@plt>
    88d8:	mov    rdi,QWORD PTR [rip+0x19a01]        # 222e0 <stdout@@GLIBC_2.2.5>
    88df:	call   2420 <fflush@plt>
    88e4:	mov    edi,0x1
    88e9:	call   19570 <terminate>
    88ee:	cmp    DWORD PTR [rsp+0x4],0x1
    88f3:	lea    rcx,[rsp+0x20]
    88f8:	mov    esi,r12d
    88fb:	mov    r9,r14
    88fe:	sbb    eax,eax
    8900:	sub    rsp,0x8
    8904:	mov    r8d,0x8
    890a:	mov    rdx,r13
    890d:	and    eax,0xffffffec
    8910:	mov    DWORD PTR [rbp+0x58],0x0
    8917:	add    eax,0x30
    891a:	mov    DWORD PTR [rbp+0x54],eax
    891d:	lea    rax,[rip+0x118bf]        # 1a1e3 <_IO_stdin_used+0x1e3>
    8924:	push   rax
    8925:	mov    rax,QWORD PTR [rsp+0x20]
    892a:	mov    edi,DWORD PTR [rax]
    892c:	call   7410 <psread_byteorder>
    8931:	pop    rsi
    8932:	pop    rdi
    8933:	test   eax,eax
    8935:	jne    8a30 <read_v3_gauge_hdr+0x3a0>
    893b:	lea    rcx,[rsp+0x28]
    8940:	sub    rsp,0x8
    8944:	mov    rdx,r13
    8947:	mov    r9,r14
    894a:	lea    rax,[rip+0x1261f]        # 1af70 <_IO_stdin_used+0xf70>
    8951:	mov    r8d,0x8
    8957:	mov    esi,r12d
    895a:	push   rax
    895b:	mov    rax,QWORD PTR [rsp+0x20]
    8960:	mov    edi,DWORD PTR [rax]
    8962:	call   7410 <psread_byteorder>
    8967:	pop    rdx
    8968:	pop    rcx
    8969:	test   eax,eax
    896b:	jne    8a20 <read_v3_gauge_hdr+0x390>
    8971:	movsd  xmm1,QWORD PTR [rsp+0x28]
    8977:	movsd  xmm0,QWORD PTR [rsp+0x20]
    897d:	mov    edi,0x1
    8982:	lea    rsi,[rip+0x12e5f]        # 1b7e8 <_IO_stdin_used+0x17e8>
    8989:	mov    eax,0x2
    898e:	call   2470 <__printf_chk@plt>
    8993:	xor    eax,eax
    8995:	jmp    8715 <read_v3_gauge_hdr+0x85>
    899a:	nop    WORD PTR [rax+rax*1+0x0]
    89a0:	lea    rdi,[rip+0x12d31]        # 1b6d8 <_IO_stdin_used+0x16d8>
    89a7:	call   22f0 <puts@plt>
    89ac:	mov    rax,QWORD PTR [rsp+0x10]
    89b1:	xor    edi,edi
    89b3:	mov    DWORD PTR [rax],0x0
    89b9:	jmp    878c <read_v3_gauge_hdr+0xfc>
    89be:	xchg   ax,ax
    89c0:	lea    rdi,[rip+0x12cc1]        # 1b688 <_IO_stdin_used+0x1688>
    89c7:	call   22f0 <puts@plt>
    89cc:	lea    r8,[rsp+0x30]
    89d1:	mov    rdx,rbp
    89d4:	mov    rsi,r13
    89d7:	lea    r9,[rip+0x12581]        # 1af5f <_IO_stdin_used+0xf5f>
    89de:	mov    ecx,0x4
    89e3:	mov    edi,r12d
    89e6:	call   73e0 <psread_data>
    89eb:	test   eax,eax
    89ed:	jne    8a40 <read_v3_gauge_hdr+0x3b0>
    89ef:	mov    DWORD PTR [rsp+0x4],0x1
    89f7:	mov    ebx,DWORD PTR [rbp+0x0]
    89fa:	jmp    86eb <read_v3_gauge_hdr+0x5b>
    89ff:	nop
    8a00:	cmp    DWORD PTR [rbp+0x48],ecx
    8a03:	jne    8878 <read_v3_gauge_hdr+0x1e8>
    8a09:	cmp    DWORD PTR [rbp+0x4c],esi
    8a0c:	jne    8878 <read_v3_gauge_hdr+0x1e8>
    8a12:	cmp    DWORD PTR [rbp+0x50],edi
    8a15:	jne    8878 <read_v3_gauge_hdr+0x1e8>
    8a1b:	jmp    88ee <read_v3_gauge_hdr+0x25e>
    8a20:	mov    edi,0x1
    8a25:	call   19570 <terminate>
    8a2a:	jmp    8971 <read_v3_gauge_hdr+0x2e1>
    8a2f:	nop
    8a30:	mov    edi,0x1
    8a35:	call   19570 <terminate>
    8a3a:	jmp    893b <read_v3_gauge_hdr+0x2ab>
    8a3f:	nop
    8a40:	mov    edi,0x1
    8a45:	call   19570 <terminate>
    8a4a:	jmp    89ef <read_v3_gauge_hdr+0x35f>
    8a4c:	nop    DWORD PTR [rax+0x0]
    8a50:	mov    eax,DWORD PTR [rbp+0x48]
    8a53:	mov    esi,DWORD PTR [rbp+0x4c]
    8a56:	mov    DWORD PTR [rip+0x1997c],edx        # 223d8 <nx>
    8a5c:	mov    ecx,DWORD PTR [rbp+0x50]
    8a5f:	mov    DWORD PTR [rip+0x19dd7],eax        # 2283c <ny>
    8a65:	imul   eax,edx
    8a68:	mov    DWORD PTR [rip+0x19966],esi        # 223d4 <nz>
    8a6e:	mov    DWORD PTR [rip+0x1995c],ecx        # 223d0 <nt>
    8a74:	imul   eax,esi
    8a77:	imul   eax,ecx
    8a7a:	mov    DWORD PTR [rip+0x19970],eax        # 223f0 <volume>
    8a80:	jmp    88ee <read_v3_gauge_hdr+0x25e>
    8a85:	call   2350 <__stack_chk_fail@plt>
    8a8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008a90 <read_1996_gauge_hdr>:
    8a90:	endbr64 
    8a94:	push   r15
    8a96:	push   r14
    8a98:	push   r13
    8a9a:	push   r12
    8a9c:	mov    r12,rdx
    8a9f:	push   rbp
    8aa0:	push   rbx
    8aa1:	mov    ebx,esi
    8aa3:	sub    rsp,0x118
    8aaa:	mov    rbp,QWORD PTR [rdi+0x8]
    8aae:	mov    r13,QWORD PTR [rdi]
    8ab1:	mov    rax,QWORD PTR fs:0x28
    8aba:	mov    QWORD PTR [rsp+0x108],rax
    8ac2:	xor    eax,eax
    8ac4:	movdqa xmm0,XMMWORD PTR [rip+0x13834]        # 1c300 <_IO_stdin_used+0x2300>
    8acc:	mov    DWORD PTR [rsp+0x100],0x726468
    8ad7:	movaps XMMWORD PTR [rsp+0xf0],xmm0
    8adf:	mov    r14d,DWORD PTR [rbp+0x0]
    8ae3:	cmp    r14d,0xd12a
    8aea:	je     8e10 <read_1996_gauge_hdr+0x380>
    8af0:	mov    esi,0x1
    8af5:	mov    rdi,rbp
    8af8:	call   15960 <byterevn>
    8afd:	cmp    DWORD PTR [rbp+0x0],0xd12a
    8b04:	je     8b40 <read_1996_gauge_hdr+0xb0>
    8b06:	mov    DWORD PTR [rbp+0x0],r14d
    8b0a:	mov    eax,0x1
    8b0f:	mov    rbx,QWORD PTR [rsp+0x108]
    8b17:	xor    rbx,QWORD PTR fs:0x28
    8b20:	jne    8f8e <read_1996_gauge_hdr+0x4fe>
    8b26:	add    rsp,0x118
    8b2d:	pop    rbx
    8b2e:	pop    rbp
    8b2f:	pop    r12
    8b31:	pop    r13
    8b33:	pop    r14
    8b35:	pop    r15
    8b37:	ret    
    8b38:	nop    DWORD PTR [rax+rax*1+0x0]
    8b40:	mov    DWORD PTR [r12],0x1
    8b48:	lea    rdi,[rip+0x12cf9]        # 1b848 <_IO_stdin_used+0x1848>
    8b4f:	call   22f0 <puts@plt>
    8b54:	lea    rdi,[rip+0x12d35]        # 1b890 <_IO_stdin_used+0x1890>
    8b5b:	call   22f0 <puts@plt>
    8b60:	mov    ecx,0x8
    8b65:	mov    edx,0x4
    8b6a:	xor    eax,eax
    8b6c:	lea    rsi,[rip+0x12c05]        # 1b778 <_IO_stdin_used+0x1778>
    8b73:	mov    edi,0x1
    8b78:	call   2470 <__printf_chk@plt>
    8b7d:	mov    edi,0x1
    8b82:	call   19570 <terminate>
    8b87:	mov    edi,DWORD PTR [r12]
    8b8b:	lea    rax,[rip+0x12663]        # 1b1f5 <_IO_stdin_used+0x11f5>
    8b92:	lea    r15,[rbp+0x44]
    8b96:	mov    esi,ebx
    8b98:	mov    rdx,r13
    8b9b:	lea    r14,[rsp+0xf0]
    8ba3:	sub    rsp,0x8
    8ba7:	mov    rcx,r15
    8baa:	mov    r8d,0x10
    8bb0:	push   rax
    8bb1:	mov    r9,r14
    8bb4:	call   7410 <psread_byteorder>
    8bb9:	pop    rcx
    8bba:	pop    rsi
    8bbb:	test   eax,eax
    8bbd:	jne    8e60 <read_1996_gauge_hdr+0x3d0>
    8bc3:	mov    edx,DWORD PTR [rbp+0x44]
    8bc6:	mov    eax,DWORD PTR [rip+0x1980c]        # 223d8 <nx>
    8bcc:	mov    ecx,DWORD PTR [rip+0x19c6a]        # 2283c <ny>
    8bd2:	mov    esi,DWORD PTR [rip+0x197fc]        # 223d4 <nz>
    8bd8:	mov    edi,DWORD PTR [rip+0x197f2]        # 223d0 <nt>
    8bde:	cmp    edx,eax
    8be0:	je     8e30 <read_1996_gauge_hdr+0x3a0>
    8be6:	and    eax,ecx
    8be8:	and    eax,esi
    8bea:	and    eax,edi
    8bec:	cmp    eax,0xffffffff
    8bef:	je     8f50 <read_1996_gauge_hdr+0x4c0>
    8bf5:	lea    rsi,[rip+0x12cbc]        # 1b8b8 <_IO_stdin_used+0x18b8>
    8bfc:	mov    edi,0x1
    8c01:	xor    eax,eax
    8c03:	call   2470 <__printf_chk@plt>
    8c08:	lea    rax,[rbp+0x54]
    8c0c:	mov    QWORD PTR [rsp+0x8],rax
    8c11:	mov    edx,DWORD PTR [r15]
    8c14:	lea    rsi,[rip+0x12351]        # 1af6c <_IO_stdin_used+0xf6c>
    8c1b:	xor    eax,eax
    8c1d:	add    r15,0x4
    8c21:	mov    edi,0x1
    8c26:	call   2470 <__printf_chk@plt>
    8c2b:	cmp    r15,QWORD PTR [rsp+0x8]
    8c30:	jne    8c11 <read_1996_gauge_hdr+0x181>
    8c32:	mov    edi,0xa
    8c37:	call   22b0 <putchar@plt>
    8c3c:	mov    rdi,QWORD PTR [rip+0x1969d]        # 222e0 <stdout@@GLIBC_2.2.5>
    8c43:	call   2420 <fflush@plt>
    8c48:	mov    edi,0x1
    8c4d:	call   19570 <terminate>
    8c52:	sub    rsp,0x8
    8c56:	lea    rax,[rip+0x12316]        # 1af73 <_IO_stdin_used+0xf73>
    8c5d:	mov    rdx,r13
    8c60:	mov    esi,ebx
    8c62:	push   rax
    8c63:	mov    edi,DWORD PTR [r12]
    8c67:	mov    r9,r14
    8c6a:	mov    r8d,0x4
    8c70:	mov    rcx,QWORD PTR [rsp+0x18]
    8c75:	call   7410 <psread_byteorder>
    8c7a:	pop    r15
    8c7c:	pop    rdx
    8c7d:	test   eax,eax
    8c7f:	jne    8f40 <read_1996_gauge_hdr+0x4b0>
    8c85:	sub    rsp,0x8
    8c89:	lea    rax,[rip+0x1222e]        # 1aebe <_IO_stdin_used+0xebe>
    8c90:	mov    r9,r14
    8c93:	mov    esi,ebx
    8c95:	push   rax
    8c96:	mov    edi,DWORD PTR [r12]
    8c9a:	lea    rcx,[rbp+0x58]
    8c9e:	mov    r8d,0x4
    8ca4:	mov    rdx,r13
    8ca7:	call   7410 <psread_byteorder>
    8cac:	pop    r10
    8cae:	pop    r11
    8cb0:	test   eax,eax
    8cb2:	jne    8f30 <read_1996_gauge_hdr+0x4a0>
    8cb8:	lea    rcx,[rsp+0x10]
    8cbd:	sub    rsp,0x8
    8cc1:	mov    edi,DWORD PTR [r12]
    8cc5:	mov    r9,r14
    8cc8:	lea    rax,[rip+0x122b0]        # 1af7f <_IO_stdin_used+0xf7f>
    8ccf:	mov    r8d,0x4
    8cd5:	mov    rdx,r13
    8cd8:	mov    esi,ebx
    8cda:	push   rax
    8cdb:	call   7410 <psread_byteorder>
    8ce0:	pop    r8
    8ce2:	pop    r9
    8ce4:	test   eax,eax
    8ce6:	jne    8f20 <read_1996_gauge_hdr+0x490>
    8cec:	mov    edx,DWORD PTR [rsp+0x10]
    8cf0:	cmp    edx,0xc8
    8cf6:	jg     8ee0 <read_1996_gauge_hdr+0x450>
    8cfc:	lea    r15,[rsp+0x14]
    8d01:	mov    r8,r14
    8d04:	mov    ecx,0xc8
    8d09:	mov    rsi,r13
    8d0c:	lea    r9,[rip+0x12294]        # 1afa7 <_IO_stdin_used+0xfa7>
    8d13:	mov    rdx,r15
    8d16:	mov    edi,ebx
    8d18:	call   73e0 <psread_data>
    8d1d:	test   eax,eax
    8d1f:	jne    8ed0 <read_1996_gauge_hdr+0x440>
    8d25:	mov    eax,DWORD PTR [rsp+0x10]
    8d29:	mov    rdx,r15
    8d2c:	mov    edi,0x1
    8d31:	lea    rsi,[rip+0x12277]        # 1afaf <_IO_stdin_used+0xfaf>
    8d38:	sub    eax,0x1
    8d3b:	cdqe   
    8d3d:	mov    BYTE PTR [rsp+rax*1+0x14],0x0
    8d42:	xor    eax,eax
    8d44:	call   2470 <__printf_chk@plt>
    8d49:	mov    edi,DWORD PTR [r12]
    8d4d:	mov    esi,ebx
    8d4f:	mov    r9,r14
    8d52:	lea    rax,[rip+0x12270]        # 1afc9 <_IO_stdin_used+0xfc9>
    8d59:	lea    rcx,[rsp+0xdc]
    8d61:	sub    rsp,0x8
    8d65:	mov    r8d,0x4
    8d6b:	push   rax
    8d6c:	mov    rdx,r13
    8d6f:	call   7410 <psread_byteorder>
    8d74:	pop    rsi
    8d75:	pop    rdi
    8d76:	test   eax,eax
    8d78:	jne    8eb8 <read_1996_gauge_hdr+0x428>
    8d7e:	mov    edx,DWORD PTR [rsp+0xdc]
    8d85:	cmp    edx,0x2
    8d88:	jg     8e70 <read_1996_gauge_hdr+0x3e0>
    8d8e:	lea    rbp,[rsp+0xe0]
    8d96:	xor    r15d,r15d
    8d99:	test   edx,edx
    8d9b:	jle    8df9 <read_1996_gauge_hdr+0x369>
    8d9d:	sub    rsp,0x8
    8da1:	lea    rax,[rip+0x12229]        # 1afd1 <_IO_stdin_used+0xfd1>
    8da8:	mov    rcx,rbp
    8dab:	mov    esi,ebx
    8dad:	push   rax
    8dae:	mov    edi,DWORD PTR [r12]
    8db2:	mov    rdx,r13
    8db5:	mov    r9,r14
    8db8:	mov    r8d,0x8
    8dbe:	call   7410 <psread_byteorder>
    8dc3:	pop    rdx
    8dc4:	pop    rcx
    8dc5:	test   eax,eax
    8dc7:	jne    8e00 <read_1996_gauge_hdr+0x370>
    8dc9:	movsd  xmm0,QWORD PTR [rbp+0x0]
    8dce:	mov    edx,r15d
    8dd1:	mov    edi,0x1
    8dd6:	lea    rsi,[rip+0x12200]        # 1afdd <_IO_stdin_used+0xfdd>
    8ddd:	mov    eax,0x1
    8de2:	add    r15d,0x1
    8de6:	add    rbp,0x8
    8dea:	call   2470 <__printf_chk@plt>
    8def:	cmp    DWORD PTR [rsp+0xdc],r15d
    8df7:	jg     8d9d <read_1996_gauge_hdr+0x30d>
    8df9:	xor    eax,eax
    8dfb:	jmp    8b0f <read_1996_gauge_hdr+0x7f>
    8e00:	mov    edi,0x1
    8e05:	call   19570 <terminate>
    8e0a:	jmp    8dc9 <read_1996_gauge_hdr+0x339>
    8e0c:	nop    DWORD PTR [rax+0x0]
    8e10:	lea    rdi,[rip+0x129f9]        # 1b810 <_IO_stdin_used+0x1810>
    8e17:	call   22f0 <puts@plt>
    8e1c:	mov    DWORD PTR [r12],0x0
    8e24:	xor    edi,edi
    8e26:	jmp    8b8b <read_1996_gauge_hdr+0xfb>
    8e2b:	nop    DWORD PTR [rax+rax*1+0x0]
    8e30:	cmp    DWORD PTR [rbp+0x48],ecx
    8e33:	jne    8be6 <read_1996_gauge_hdr+0x156>
    8e39:	cmp    DWORD PTR [rbp+0x4c],esi
    8e3c:	jne    8be6 <read_1996_gauge_hdr+0x156>
    8e42:	lea    r10,[rbp+0x54]
    8e46:	mov    QWORD PTR [rsp+0x8],r10
    8e4b:	cmp    DWORD PTR [rbp+0x50],edi
    8e4e:	jne    8be6 <read_1996_gauge_hdr+0x156>
    8e54:	jmp    8c52 <read_1996_gauge_hdr+0x1c2>
    8e59:	nop    DWORD PTR [rax+0x0]
    8e60:	mov    edi,0x1
    8e65:	call   19570 <terminate>
    8e6a:	jmp    8bc3 <read_1996_gauge_hdr+0x133>
    8e6f:	nop
    8e70:	lea    rsi,[rip+0x12ab1]        # 1b928 <_IO_stdin_used+0x1928>
    8e77:	mov    edi,0x1
    8e7c:	xor    eax,eax
    8e7e:	call   2470 <__printf_chk@plt>
    8e83:	mov    edx,0x2
    8e88:	lea    rsi,[rip+0x120fb]        # 1af8a <_IO_stdin_used+0xf8a>
    8e8f:	xor    eax,eax
    8e91:	mov    edi,0x1
    8e96:	call   2470 <__printf_chk@plt>
    8e9b:	mov    edi,0x1
    8ea0:	call   19570 <terminate>
    8ea5:	mov    edx,DWORD PTR [rsp+0xdc]
    8eac:	jmp    8d8e <read_1996_gauge_hdr+0x2fe>
    8eb1:	nop    DWORD PTR [rax+0x0]
    8eb8:	mov    edi,0x1
    8ebd:	call   19570 <terminate>
    8ec2:	jmp    8d7e <read_1996_gauge_hdr+0x2ee>
    8ec7:	nop    WORD PTR [rax+rax*1+0x0]
    8ed0:	mov    edi,0x1
    8ed5:	call   19570 <terminate>
    8eda:	jmp    8d25 <read_1996_gauge_hdr+0x295>
    8edf:	nop
    8ee0:	lea    rsi,[rip+0x12a09]        # 1b8f0 <_IO_stdin_used+0x18f0>
    8ee7:	mov    edi,0x1
    8eec:	xor    eax,eax
    8eee:	call   2470 <__printf_chk@plt>
    8ef3:	mov    edx,0xc8
    8ef8:	lea    rsi,[rip+0x1208b]        # 1af8a <_IO_stdin_used+0xf8a>
    8eff:	xor    eax,eax
    8f01:	mov    edi,0x1
    8f06:	call   2470 <__printf_chk@plt>
    8f0b:	mov    edi,0x1
    8f10:	call   19570 <terminate>
    8f15:	jmp    8cfc <read_1996_gauge_hdr+0x26c>
    8f1a:	nop    WORD PTR [rax+rax*1+0x0]
    8f20:	mov    edi,0x1
    8f25:	call   19570 <terminate>
    8f2a:	jmp    8cec <read_1996_gauge_hdr+0x25c>
    8f2f:	nop
    8f30:	mov    edi,0x1
    8f35:	call   19570 <terminate>
    8f3a:	jmp    8cb8 <read_1996_gauge_hdr+0x228>
    8f3f:	nop
    8f40:	mov    edi,0x1
    8f45:	call   19570 <terminate>
    8f4a:	jmp    8c85 <read_1996_gauge_hdr+0x1f5>
    8f4f:	nop
    8f50:	mov    eax,DWORD PTR [rbp+0x48]
    8f53:	mov    esi,DWORD PTR [rbp+0x4c]
    8f56:	mov    DWORD PTR [rip+0x1947c],edx        # 223d8 <nx>
    8f5c:	mov    ecx,DWORD PTR [rbp+0x50]
    8f5f:	mov    DWORD PTR [rip+0x198d7],eax        # 2283c <ny>
    8f65:	imul   eax,edx
    8f68:	mov    DWORD PTR [rip+0x19466],esi        # 223d4 <nz>
    8f6e:	mov    DWORD PTR [rip+0x1945c],ecx        # 223d0 <nt>
    8f74:	imul   eax,esi
    8f77:	imul   eax,ecx
    8f7a:	mov    DWORD PTR [rip+0x19470],eax        # 223f0 <volume>
    8f80:	lea    rax,[rbp+0x54]
    8f84:	mov    QWORD PTR [rsp+0x8],rax
    8f89:	jmp    8c52 <read_1996_gauge_hdr+0x1c2>
    8f8e:	call   2350 <__stack_chk_fail@plt>
    8f93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    8f9e:	xchg   ax,ax

0000000000008fa0 <read_gauge_hdr>:
    8fa0:	endbr64 
    8fa4:	push   r15
    8fa6:	mov    r9d,0x7264
    8fac:	mov    ecx,0x4
    8fb1:	push   r14
    8fb3:	mov    r14,rdi
    8fb6:	push   r13
    8fb8:	push   r12
    8fba:	push   rbp
    8fbb:	mov    ebp,esi
    8fbd:	push   rbx
    8fbe:	sub    rsp,0x68
    8fc2:	mov    r15,QWORD PTR [rdi]
    8fc5:	mov    rbx,QWORD PTR [rdi+0x8]
    8fc9:	mov    edi,ebp
    8fcb:	mov    rax,QWORD PTR fs:0x28
    8fd4:	mov    QWORD PTR [rsp+0x58],rax
    8fd9:	xor    eax,eax
    8fdb:	lea    r12,[rsp+0x49]
    8fe0:	mov    WORD PTR [rsp+0x55],r9w
    8fe6:	movabs rax,0x7561675f64616572
    8ff0:	lea    r9,[rip+0x11f68]        # 1af5f <_IO_stdin_used+0xf5f>
    8ff7:	mov    r8,r12
    8ffa:	mov    rdx,rbx
    8ffd:	mov    rsi,r15
    9000:	mov    QWORD PTR [rsp+0x49],rax
    9005:	mov    DWORD PTR [rsp+0x51],0x685f6567
    900d:	mov    BYTE PTR [rsp+0x57],0x0
    9012:	call   73e0 <psread_data>
    9017:	test   eax,eax
    9019:	jne    91f0 <read_gauge_hdr+0x250>
    901f:	mov    r13d,DWORD PTR [rbx]
    9022:	lea    rdi,[rsp+0x24]
    9027:	mov    esi,0x1
    902c:	mov    DWORD PTR [rsp+0x24],r13d
    9031:	call   15960 <byterevn>
    9036:	cmp    r13d,0x42454749
    903d:	je     9320 <read_gauge_hdr+0x380>
    9043:	mov    eax,DWORD PTR [rsp+0x24]
    9047:	cmp    eax,0x42454749
    904c:	je     9430 <read_gauge_hdr+0x490>
    9052:	cmp    r13d,0x4e87
    9059:	je     91e0 <read_gauge_hdr+0x240>
    905f:	cmp    eax,0x4e87
    9064:	jne    9290 <read_gauge_hdr+0x2f0>
    906a:	mov    DWORD PTR [rsp+0x28],0x1
    9072:	lea    rdi,[rip+0x11fb2]        # 1b02b <_IO_stdin_used+0x102b>
    9079:	mov    DWORD PTR [rbx],0x4e87
    907f:	call   22f0 <puts@plt>
    9084:	mov    rdx,r12
    9087:	mov    edi,0x1
    908c:	xor    eax,eax
    908e:	lea    rsi,[rip+0x11f7e]        # 1b013 <_IO_stdin_used+0x1013>
    9095:	call   2470 <__printf_chk@plt>
    909a:	mov    ecx,0x8
    909f:	mov    edx,0x4
    90a4:	xor    eax,eax
    90a6:	lea    rsi,[rip+0x126cb]        # 1b778 <_IO_stdin_used+0x1778>
    90ad:	mov    edi,0x1
    90b2:	call   2470 <__printf_chk@plt>
    90b7:	mov    edi,0x1
    90bc:	call   19570 <terminate>
    90c1:	mov    edi,DWORD PTR [rsp+0x28]
    90c5:	sub    rsp,0x8
    90c9:	lea    rax,[rip+0x12125]        # 1b1f5 <_IO_stdin_used+0x11f5>
    90d0:	mov    r9,r12
    90d3:	mov    esi,ebp
    90d5:	push   rax
    90d6:	mov    r8d,0x10
    90dc:	lea    rcx,[rbx+0x44]
    90e0:	mov    rdx,r15
    90e3:	call   7410 <psread_byteorder>
    90e8:	mov    DWORD PTR [rsp+0x2c],eax
    90ec:	pop    rdi
    90ed:	pop    r8
    90ef:	test   eax,eax
    90f1:	jne    94d0 <read_gauge_hdr+0x530>
    90f7:	mov    edx,DWORD PTR [rbx+0x44]
    90fa:	mov    eax,DWORD PTR [rip+0x192d8]        # 223d8 <nx>
    9100:	mov    ecx,DWORD PTR [rip+0x19736]        # 2283c <ny>
    9106:	mov    esi,DWORD PTR [rip+0x192c8]        # 223d4 <nz>
    910c:	mov    edi,DWORD PTR [rip+0x192be]        # 223d0 <nt>
    9112:	cmp    edx,eax
    9114:	je     9200 <read_gauge_hdr+0x260>
    911a:	and    eax,ecx
    911c:	and    eax,esi
    911e:	and    eax,edi
    9120:	cmp    eax,0xffffffff
    9123:	je     9590 <read_gauge_hdr+0x5f0>
    9129:	mov    rdx,r12
    912c:	lea    rsi,[rip+0x128e5]        # 1ba18 <_IO_stdin_used+0x1a18>
    9133:	lea    r13,[rbx+0x44]
    9137:	xor    eax,eax
    9139:	mov    edi,0x1
    913e:	lea    r14,[rip+0x11e27]        # 1af6c <_IO_stdin_used+0xf6c>
    9145:	call   2470 <__printf_chk@plt>
    914a:	lea    rax,[rbx+0x54]
    914e:	mov    QWORD PTR [rsp+0x8],rax
    9153:	mov    edx,DWORD PTR [r13+0x0]
    9157:	mov    rsi,r14
    915a:	mov    edi,0x1
    915f:	xor    eax,eax
    9161:	add    r13,0x4
    9165:	call   2470 <__printf_chk@plt>
    916a:	cmp    QWORD PTR [rsp+0x8],r13
    916f:	jne    9153 <read_gauge_hdr+0x1b3>
    9171:	mov    edi,0xa
    9176:	call   22b0 <putchar@plt>
    917b:	mov    rdi,QWORD PTR [rip+0x1915e]        # 222e0 <stdout@@GLIBC_2.2.5>
    9182:	call   2420 <fflush@plt>
    9187:	mov    edi,0x1
    918c:	call   19570 <terminate>
    9191:	mov    esi,DWORD PTR [rsp+0x1c]
    9195:	test   esi,esi
    9197:	je     9220 <read_gauge_hdr+0x280>
    919d:	mov    rax,QWORD PTR [rsp+0x10]
    91a2:	test   rax,rax
    91a5:	je     91af <read_gauge_hdr+0x20f>
    91a7:	mov    rdi,rax
    91aa:	call   6a20 <qcdhdr_destroy_hdr.part.0>
    91af:	mov    rcx,QWORD PTR [rsp+0x58]
    91b4:	xor    rcx,QWORD PTR fs:0x28
    91bd:	mov    eax,DWORD PTR [rsp+0x28]
    91c1:	jne    95c5 <read_gauge_hdr+0x625>
    91c7:	add    rsp,0x68
    91cb:	pop    rbx
    91cc:	pop    rbp
    91cd:	pop    r12
    91cf:	pop    r13
    91d1:	pop    r14
    91d3:	pop    r15
    91d5:	ret    
    91d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    91e0:	mov    DWORD PTR [rsp+0x28],0x0
    91e8:	xor    edi,edi
    91ea:	jmp    90c5 <read_gauge_hdr+0x125>
    91ef:	nop
    91f0:	mov    edi,0x1
    91f5:	call   19570 <terminate>
    91fa:	jmp    901f <read_gauge_hdr+0x7f>
    91ff:	nop
    9200:	cmp    DWORD PTR [rbx+0x48],ecx
    9203:	jne    911a <read_gauge_hdr+0x17a>
    9209:	cmp    DWORD PTR [rbx+0x4c],esi
    920c:	jne    911a <read_gauge_hdr+0x17a>
    9212:	cmp    DWORD PTR [rbx+0x50],edi
    9215:	jne    911a <read_gauge_hdr+0x17a>
    921b:	jmp    9191 <read_gauge_hdr+0x1f1>
    9220:	lea    rdx,[rbx+0x4]
    9224:	lea    r9,[rip+0x11fa1]        # 1b1cc <_IO_stdin_used+0x11cc>
    922b:	mov    r8,r12
    922e:	mov    edi,ebp
    9230:	mov    ecx,0x40
    9235:	mov    rsi,r15
    9238:	call   73e0 <psread_data>
    923d:	test   eax,eax
    923f:	jne    9418 <read_gauge_hdr+0x478>
    9245:	sub    rsp,0x8
    9249:	lea    rax,[rip+0x11ed6]        # 1b126 <_IO_stdin_used+0x1126>
    9250:	mov    rdx,r15
    9253:	mov    esi,ebp
    9255:	mov    DWORD PTR [rbx+0x54],0x58
    925c:	lea    rcx,[rbx+0x58]
    9260:	mov    r9,r12
    9263:	mov    r8d,0x4
    9269:	push   rax
    926a:	mov    edi,DWORD PTR [rsp+0x38]
    926e:	call   7410 <psread_byteorder>
    9273:	pop    rdx
    9274:	pop    rcx
    9275:	test   eax,eax
    9277:	je     91af <read_gauge_hdr+0x20f>
    927d:	mov    edi,0x1
    9282:	call   19570 <terminate>
    9287:	jmp    91af <read_gauge_hdr+0x20f>
    928c:	nop    DWORD PTR [rax+0x0]
    9290:	lea    r15,[rsp+0x28]
    9295:	mov    esi,ebp
    9297:	mov    rdi,r14
    929a:	mov    rdx,r15
    929d:	call   8690 <read_v3_gauge_hdr>
    92a2:	test   eax,eax
    92a4:	je     91af <read_gauge_hdr+0x20f>
    92aa:	mov    rdx,r15
    92ad:	mov    esi,ebp
    92af:	mov    rdi,r14
    92b2:	call   8a90 <read_1996_gauge_hdr>
    92b7:	test   eax,eax
    92b9:	je     91af <read_gauge_hdr+0x20f>
    92bf:	mov    rdx,r12
    92c2:	lea    rsi,[rip+0x126cf]        # 1b998 <_IO_stdin_used+0x1998>
    92c9:	mov    edi,0x1
    92ce:	xor    eax,eax
    92d0:	call   2470 <__printf_chk@plt>
    92d5:	mov    ecx,r13d
    92d8:	mov    edx,0x4e87
    92dd:	xor    eax,eax
    92df:	lea    rsi,[rip+0x11d60]        # 1b046 <_IO_stdin_used+0x1046>
    92e6:	mov    edi,0x1
    92eb:	call   2470 <__printf_chk@plt>
    92f0:	movsxd rcx,r13d
    92f3:	mov    edx,0x4e87
    92f8:	xor    eax,eax
    92fa:	lea    rsi,[rip+0x11d5e]        # 1b05f <_IO_stdin_used+0x105f>
    9301:	mov    edi,0x1
    9306:	call   2470 <__printf_chk@plt>
    930b:	mov    edi,0x1
    9310:	call   19570 <terminate>
    9315:	jmp    91af <read_gauge_hdr+0x20f>
    931a:	nop    WORD PTR [rax+rax*1+0x0]
    9320:	lea    rdi,[rip+0x11cd2]        # 1aff9 <_IO_stdin_used+0xff9>
    9327:	call   22f0 <puts@plt>
    932c:	mov    rax,QWORD PTR [r14+0x8]
    9330:	mov    DWORD PTR [rsp+0x28],0x0
    9338:	mov    DWORD PTR [rax+0x58],0x0
    933f:	test   ebp,ebp
    9341:	jne    949a <read_gauge_hdr+0x4fa>
    9347:	mov    rdi,r15
    934a:	call   6f70 <qcdhdr_get_hdr>
    934f:	lea    rdx,[rsp+0x30]
    9354:	lea    rdi,[rip+0x11d1d]        # 1b078 <_IO_stdin_used+0x1078>
    935b:	mov    rsi,rax
    935e:	mov    QWORD PTR [rsp+0x10],rax
    9363:	call   6c70 <qcdhdr_get_int>
    9368:	cmp    eax,0xffffffff
    936b:	je     9570 <read_gauge_hdr+0x5d0>
    9371:	mov    rsi,QWORD PTR [rsp+0x10]
    9376:	lea    rdx,[rsp+0x34]
    937b:	lea    rdi,[rip+0x11d1a]        # 1b09c <_IO_stdin_used+0x109c>
    9382:	call   6c70 <qcdhdr_get_int>
    9387:	cmp    eax,0xffffffff
    938a:	je     9550 <read_gauge_hdr+0x5b0>
    9390:	mov    rsi,QWORD PTR [rsp+0x10]
    9395:	lea    rdx,[rsp+0x38]
    939a:	lea    rdi,[rip+0x11d1f]        # 1b0c0 <_IO_stdin_used+0x10c0>
    93a1:	call   6c70 <qcdhdr_get_int>
    93a6:	cmp    eax,0xffffffff
    93a9:	je     9530 <read_gauge_hdr+0x590>
    93af:	mov    rsi,QWORD PTR [rsp+0x10]
    93b4:	lea    rdx,[rsp+0x3c]
    93b9:	lea    rdi,[rip+0x11d24]        # 1b0e4 <_IO_stdin_used+0x10e4>
    93c0:	call   6c70 <qcdhdr_get_int>
    93c5:	cmp    eax,0xffffffff
    93c8:	je     9510 <read_gauge_hdr+0x570>
    93ce:	mov    rax,QWORD PTR [rsp+0x30]
    93d3:	mov    rsi,QWORD PTR [rsp+0x10]
    93d8:	lea    rdx,[rsp+0x2c]
    93dd:	lea    rdi,[rip+0x11d24]        # 1b108 <_IO_stdin_used+0x1108>
    93e4:	mov    QWORD PTR [rbx+0x44],rax
    93e8:	mov    rax,QWORD PTR [rsp+0x38]
    93ed:	mov    QWORD PTR [rbx+0x4c],rax
    93f1:	call   6ce0 <qcdhdr_get_int32x>
    93f6:	cmp    eax,0xffffffff
    93f9:	je     94f0 <read_gauge_hdr+0x550>
    93ff:	mov    eax,DWORD PTR [rsp+0x2c]
    9403:	mov    DWORD PTR [rsp+0x1c],0x1
    940b:	mov    DWORD PTR [r14+0x2c],eax
    940f:	jmp    90f7 <read_gauge_hdr+0x157>
    9414:	nop    DWORD PTR [rax+0x0]
    9418:	mov    edi,0x1
    941d:	call   19570 <terminate>
    9422:	jmp    9245 <read_gauge_hdr+0x2a5>
    9427:	nop    WORD PTR [rax+rax*1+0x0]
    9430:	lea    rdi,[rip+0x12531]        # 1b968 <_IO_stdin_used+0x1968>
    9437:	call   22f0 <puts@plt>
    943c:	mov    eax,DWORD PTR [rsp+0x24]
    9440:	mov    rdx,r12
    9443:	mov    DWORD PTR [rsp+0x28],0x1
    944b:	lea    rsi,[rip+0x11bc1]        # 1b013 <_IO_stdin_used+0x1013>
    9452:	mov    edi,0x1
    9457:	mov    DWORD PTR [rbx],eax
    9459:	xor    eax,eax
    945b:	call   2470 <__printf_chk@plt>
    9460:	mov    ecx,0x8
    9465:	mov    edx,0x4
    946a:	xor    eax,eax
    946c:	lea    rsi,[rip+0x12305]        # 1b778 <_IO_stdin_used+0x1778>
    9473:	mov    edi,0x1
    9478:	call   2470 <__printf_chk@plt>
    947d:	mov    edi,0x1
    9482:	call   19570 <terminate>
    9487:	mov    rax,QWORD PTR [r14+0x8]
    948b:	mov    DWORD PTR [rax+0x58],0x0
    9492:	test   ebp,ebp
    9494:	je     9347 <read_gauge_hdr+0x3a7>
    949a:	mov    rdi,QWORD PTR [rip+0x18e5f]        # 22300 <stderr@@GLIBC_2.2.5>
    94a1:	mov    rcx,r12
    94a4:	mov    esi,0x1
    94a9:	xor    eax,eax
    94ab:	lea    rdx,[rip+0x1252e]        # 1b9e0 <_IO_stdin_used+0x19e0>
    94b2:	call   24d0 <__fprintf_chk@plt>
    94b7:	mov    edi,0x1
    94bc:	call   19570 <terminate>
    94c1:	jmp    9347 <read_gauge_hdr+0x3a7>
    94c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    94d0:	mov    edi,0x1
    94d5:	call   19570 <terminate>
    94da:	mov    DWORD PTR [rsp+0x1c],0x0
    94e2:	jmp    90f7 <read_gauge_hdr+0x157>
    94e7:	nop    WORD PTR [rax+rax*1+0x0]
    94f0:	lea    rdi,[rip+0x11c1a]        # 1b111 <_IO_stdin_used+0x1111>
    94f7:	call   22f0 <puts@plt>
    94fc:	mov    edi,0x1
    9501:	call   19570 <terminate>
    9506:	jmp    93ff <read_gauge_hdr+0x45f>
    950b:	nop    DWORD PTR [rax+rax*1+0x0]
    9510:	lea    rdi,[rip+0x11bd9]        # 1b0f0 <_IO_stdin_used+0x10f0>
    9517:	call   22f0 <puts@plt>
    951c:	mov    edi,0x1
    9521:	call   19570 <terminate>
    9526:	jmp    93ce <read_gauge_hdr+0x42e>
    952b:	nop    DWORD PTR [rax+rax*1+0x0]
    9530:	lea    rdi,[rip+0x11b95]        # 1b0cc <_IO_stdin_used+0x10cc>
    9537:	call   22f0 <puts@plt>
    953c:	mov    edi,0x1
    9541:	call   19570 <terminate>
    9546:	jmp    93af <read_gauge_hdr+0x40f>
    954b:	nop    DWORD PTR [rax+rax*1+0x0]
    9550:	lea    rdi,[rip+0x11b51]        # 1b0a8 <_IO_stdin_used+0x10a8>
    9557:	call   22f0 <puts@plt>
    955c:	mov    edi,0x1
    9561:	call   19570 <terminate>
    9566:	jmp    9390 <read_gauge_hdr+0x3f0>
    956b:	nop    DWORD PTR [rax+rax*1+0x0]
    9570:	lea    rdi,[rip+0x11b0d]        # 1b084 <_IO_stdin_used+0x1084>
    9577:	call   22f0 <puts@plt>
    957c:	mov    edi,0x1
    9581:	call   19570 <terminate>
    9586:	jmp    9371 <read_gauge_hdr+0x3d1>
    958b:	nop    DWORD PTR [rax+rax*1+0x0]
    9590:	mov    eax,DWORD PTR [rbx+0x48]
    9593:	mov    esi,DWORD PTR [rbx+0x4c]
    9596:	mov    DWORD PTR [rip+0x18e3c],edx        # 223d8 <nx>
    959c:	mov    ecx,DWORD PTR [rbx+0x50]
    959f:	mov    DWORD PTR [rip+0x19297],eax        # 2283c <ny>
    95a5:	imul   eax,edx
    95a8:	mov    DWORD PTR [rip+0x18e26],esi        # 223d4 <nz>
    95ae:	mov    DWORD PTR [rip+0x18e1c],ecx        # 223d0 <nt>
    95b4:	imul   eax,esi
    95b7:	imul   eax,ecx
    95ba:	mov    DWORD PTR [rip+0x18e30],eax        # 223f0 <volume>
    95c0:	jmp    9191 <read_gauge_hdr+0x1f1>
    95c5:	call   2350 <__stack_chk_fail@plt>
    95ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000095d0 <r_serial_i>:
    95d0:	endbr64 
    95d4:	push   r13
    95d6:	mov    r13,rdi
    95d9:	push   r12
    95db:	push   rbp
    95dc:	push   rbx
    95dd:	sub    rsp,0x18
    95e1:	mov    rax,QWORD PTR fs:0x28
    95ea:	mov    QWORD PTR [rsp+0x8],rax
    95ef:	xor    eax,eax
    95f1:	call   79c0 <setup_input_gauge_file>
    95f6:	mov    edx,DWORD PTR [rip+0x192e8]        # 228e4 <this_node>
    95fc:	mov    DWORD PTR [rax+0x28],0x0
    9603:	mov    rbp,QWORD PTR [rax+0x8]
    9607:	mov    r12,rax
    960a:	test   edx,edx
    960c:	je     9678 <r_serial_i+0xa8>
    960e:	mov    QWORD PTR [rax],0x0
    9615:	lea    rdi,[rsp+0x4]
    961a:	mov    esi,0x4
    961f:	call   194c0 <broadcast_bytes>
    9624:	mov    eax,DWORD PTR [rsp+0x4]
    9628:	mov    esi,0x5c
    962d:	mov    rdi,rbp
    9630:	mov    DWORD PTR [r12+0x18],eax
    9635:	call   194c0 <broadcast_bytes>
    963a:	mov    rax,QWORD PTR [r12+0x8]
    963f:	mov    eax,DWORD PTR [rax+0x58]
    9642:	test   eax,eax
    9644:	jne    96b0 <r_serial_i+0xe0>
    9646:	mov    QWORD PTR [r12+0x20],0x0
    964f:	mov    rax,QWORD PTR [rsp+0x8]
    9654:	xor    rax,QWORD PTR fs:0x28
    965d:	jne    96fc <r_serial_i+0x12c>
    9663:	add    rsp,0x18
    9667:	mov    rax,r12
    966a:	pop    rbx
    966b:	pop    rbp
    966c:	pop    r12
    966e:	pop    r13
    9670:	ret    
    9671:	nop    DWORD PTR [rax+0x0]
    9678:	lea    rsi,[rip+0x11ab7]        # 1b136 <_IO_stdin_used+0x1136>
    967f:	mov    rdi,r13
    9682:	call   2490 <fopen@plt>
    9687:	mov    rbx,rax
    968a:	test   rax,rax
    968d:	je     96c0 <r_serial_i+0xf0>
    968f:	mov    QWORD PTR [r12],rbx
    9693:	xor    esi,esi
    9695:	mov    rdi,r12
    9698:	call   8fa0 <read_gauge_hdr>
    969d:	mov    DWORD PTR [rsp+0x4],eax
    96a1:	jmp    9615 <r_serial_i+0x45>
    96a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    96b0:	mov    rsi,r12
    96b3:	xor    edi,edi
    96b5:	call   6ad0 <read_site_list.part.0>
    96ba:	jmp    964f <r_serial_i+0x7f>
    96bc:	nop    DWORD PTR [rax+0x0]
    96c0:	call   22c0 <__errno_location@plt>
    96c5:	mov    edx,DWORD PTR [rip+0x19219]        # 228e4 <this_node>
    96cb:	mov    rcx,r13
    96ce:	lea    rsi,[rip+0x1236b]        # 1ba40 <_IO_stdin_used+0x1a40>
    96d5:	mov    r8d,DWORD PTR [rax]
    96d8:	mov    edi,0x1
    96dd:	xor    eax,eax
    96df:	call   2470 <__printf_chk@plt>
    96e4:	mov    rdi,QWORD PTR [rip+0x18bf5]        # 222e0 <stdout@@GLIBC_2.2.5>
    96eb:	call   2420 <fflush@plt>
    96f0:	mov    edi,0x1
    96f5:	call   19570 <terminate>
    96fa:	jmp    968f <r_serial_i+0xbf>
    96fc:	call   2350 <__stack_chk_fail@plt>
    9701:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    970c:	nop    DWORD PTR [rax+0x0]

0000000000009710 <r_serial>:
    9710:	endbr64 
    9714:	push   r15
    9716:	push   r14
    9718:	push   r13
    971a:	push   r12
    971c:	push   rbp
    971d:	push   rbx
    971e:	sub    rsp,0x78
    9722:	mov    rdx,QWORD PTR [rdi+0x10]
    9726:	mov    eax,DWORD PTR [rdi+0x18]
    9729:	mov    QWORD PTR [rsp+0x8],rdi
    972e:	mov    r9d,DWORD PTR [rip+0x191af]        # 228e4 <this_node>
    9735:	mov    rsi,QWORD PTR fs:0x28
    973e:	mov    QWORD PTR [rsp+0x68],rsi
    9743:	xor    esi,esi
    9745:	mov    BYTE PTR [rsp+0x67],0x0
    974a:	movabs rsi,0x6c61697265735f72
    9754:	mov    QWORD PTR [rsp+0x5f],rsi
    9759:	mov    rsi,QWORD PTR [rdi]
    975c:	mov    QWORD PTR [rsp+0x38],rdx
    9761:	mov    QWORD PTR [rsp+0x28],rsi
    9766:	mov    rsi,QWORD PTR [rdi+0x8]
    976a:	mov    DWORD PTR [rsp+0x40],eax
    976e:	mov    QWORD PTR [rsp+0x30],rsi
    9773:	test   r9d,r9d
    9776:	jne    9805 <r_serial+0xf5>
    977c:	mov    eax,DWORD PTR [rsi]
    977e:	mov    ebp,0x8
    9783:	cmp    eax,0x4e87
    9788:	je     9799 <r_serial+0x89>
    978a:	xor    ebp,ebp
    978c:	cmp    eax,0xd12a
    9791:	sete   bpl
    9795:	shl    rbp,0x2
    9799:	mov    rsi,QWORD PTR [rsp+0x30]
    979e:	xor    eax,eax
    97a0:	mov    r8d,DWORD PTR [rsi+0x58]
    97a4:	test   r8d,r8d
    97a7:	jne    9bb1 <r_serial+0x4a1>
    97ad:	mov    rsi,QWORD PTR [rsp+0x30]
    97b2:	movsxd rdx,DWORD PTR [rsi+0x54]
    97b6:	add    rax,rdx
    97b9:	mov    QWORD PTR [rsp+0x48],rax
    97be:	add    rbp,rax
    97c1:	mov    rax,QWORD PTR [rsp+0x8]
    97c6:	mov    edi,DWORD PTR [rax+0x28]
    97c9:	test   edi,edi
    97cb:	jne    9c3f <r_serial+0x52f>
    97d1:	mov    esi,0x90
    97d6:	mov    edi,0x4000
    97db:	call   23d0 <calloc@plt>
    97e0:	mov    QWORD PTR [rsp+0x18],rax
    97e5:	test   rax,rax
    97e8:	je     9d1f <r_serial+0x60f>
    97ee:	mov    rdi,QWORD PTR [rsp+0x28]
    97f3:	xor    edx,edx
    97f5:	mov    rsi,rbp
    97f8:	call   2440 <fseek@plt>
    97fd:	test   eax,eax
    97ff:	js     9c5c <r_serial+0x54c>
    9805:	mov    QWORD PTR [rsp+0x54],0x0
    980e:	xor    eax,eax
    9810:	call   193d0 <g_sync>
    9815:	mov    esi,DWORD PTR [rip+0x18bd5]        # 223f0 <volume>
    981b:	test   esi,esi
    981d:	jle    9a86 <r_serial+0x376>
    9823:	mov    DWORD PTR [rsp+0x14],0x0
    982b:	xor    r13d,r13d
    982e:	xor    ebx,ebx
    9830:	xor    ebp,ebp
    9832:	mov    DWORD PTR [rsp+0x20],0x0
    983a:	xor    r14d,r14d
    983d:	jmp    9945 <r_serial+0x235>
    9842:	nop    WORD PTR [rax+rax*1+0x0]
    9848:	mov    esi,DWORD PTR [rsp+0x14]
    984c:	mov    eax,DWORD PTR [rsp+0x20]
    9850:	cmp    esi,eax
    9852:	je     9af0 <r_serial+0x3e0>
    9858:	lea    eax,[rsi*4+0x0]
    985f:	add    esi,0x1
    9862:	cdqe   
    9864:	mov    DWORD PTR [rsp+0x14],esi
    9868:	lea    r15,[rax+rax*8]
    986c:	shl    r15,0x4
    9870:	add    r15,QWORD PTR [rsp+0x18]
    9875:	test   r10d,r10d
    9878:	jne    9ad0 <r_serial+0x3c0>
    987e:	mov    edx,DWORD PTR [rsp+0x4]
    9882:	mov    esi,DWORD PTR [rsp]
    9885:	mov    ecx,r11d
    9888:	mov    edi,r12d
    988b:	mov    DWORD PTR [rsp+0x10],r10d
    9890:	call   3b10 <node_index>
    9895:	mov    rsi,r15
    9898:	mov    DWORD PTR [rsp+0x24],eax
    989c:	movsxd rdi,eax
    989f:	mov    rdx,QWORD PTR [r15]
    98a2:	shl    rdi,0xb
    98a6:	add    rdi,QWORD PTR [rip+0x18f1b]        # 227c8 <lattice>
    98ad:	mov    QWORD PTR [rdi+0x70],rdx
    98b1:	mov    rdx,QWORD PTR [r15+0x238]
    98b8:	lea    rax,[rdi+0x70]
    98bc:	add    rdi,0x78
    98c0:	mov    QWORD PTR [rdi+0x230],rdx
    98c7:	and    rdi,0xfffffffffffffff8
    98cb:	sub    rax,rdi
    98ce:	sub    rsi,rax
    98d1:	add    eax,0x240
    98d6:	shr    eax,0x3
    98d9:	mov    ecx,eax
    98db:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    98de:	mov    r10d,DWORD PTR [rsp+0x10]
    98e3:	cmp    DWORD PTR [rip+0x18ffa],r10d        # 228e4 <this_node>
    98ea:	je     9a06 <r_serial+0x2f6>
    98f0:	add    ebp,0x90
    98f6:	mov    esi,0x8d3dcb09
    98fb:	lea    eax,[rbx+0x90]
    9901:	add    r13,0x1
    9905:	mov    rdx,rbp
    9908:	imul   rbp,rsi
    990c:	movsxd rbx,eax
    990f:	imul   rbx,rbx,0xffffffff84210843
    9916:	shr    rbp,0x24
    991a:	imul   ebp,ebp,0x1d
    991d:	shr    rbx,0x20
    9921:	add    ebx,eax
    9923:	sar    ebx,0x4
    9926:	sub    edx,ebp
    9928:	mov    ebp,edx
    992a:	cdq    
    992b:	sub    ebx,edx
    992d:	mov    edx,ebx
    992f:	shl    edx,0x5
    9932:	sub    edx,ebx
    9934:	sub    eax,edx
    9936:	cmp    DWORD PTR [rip+0x18ab3],r13d        # 223f0 <volume>
    993d:	mov    ebx,eax
    993f:	jle    9a86 <r_serial+0x376>
    9945:	mov    rsi,QWORD PTR [rsp+0x8]
    994a:	mov    r15d,r13d
    994d:	mov    eax,r13d
    9950:	mov    rdx,QWORD PTR [rsi+0x8]
    9954:	mov    edx,DWORD PTR [rdx+0x58]
    9957:	test   edx,edx
    9959:	je     9963 <r_serial+0x253>
    995b:	mov    rax,QWORD PTR [rsi+0x20]
    995f:	mov    eax,DWORD PTR [rax+r13*4]
    9963:	cdq    
    9964:	idiv   DWORD PTR [rip+0x18a6e]        # 223d8 <nx>
    996a:	mov    r12d,edx
    996d:	cdq    
    996e:	idiv   DWORD PTR [rip+0x18ec8]        # 2283c <ny>
    9974:	mov    edi,r12d
    9977:	mov    DWORD PTR [rsp],edx
    997a:	cdq    
    997b:	mov    esi,DWORD PTR [rsp]
    997e:	idiv   DWORD PTR [rip+0x18a50]        # 223d4 <nz>
    9984:	mov    DWORD PTR [rsp+0x4],edx
    9988:	cdq    
    9989:	idiv   DWORD PTR [rip+0x18a41]        # 223d0 <nt>
    998f:	mov    DWORD PTR [rsp+0x10],edx
    9993:	mov    ecx,edx
    9995:	mov    edx,DWORD PTR [rsp+0x4]
    9999:	call   3ac0 <node_number>
    999e:	mov    r11d,DWORD PTR [rsp+0x10]
    99a3:	mov    r10d,eax
    99a6:	mov    eax,DWORD PTR [rip+0x18f38]        # 228e4 <this_node>
    99ac:	test   eax,eax
    99ae:	je     9848 <r_serial+0x138>
    99b4:	cmp    eax,r10d
    99b7:	jne    98f0 <r_serial+0x1e0>
    99bd:	mov    edx,DWORD PTR [rsp+0x4]
    99c1:	mov    esi,DWORD PTR [rsp]
    99c4:	mov    ecx,r11d
    99c7:	mov    edi,r12d
    99ca:	mov    DWORD PTR [rsp+0x10],r10d
    99cf:	call   3b10 <node_index>
    99d4:	mov    esi,0x240
    99d9:	movsxd rdi,eax
    99dc:	mov    DWORD PTR [rsp+0x24],eax
    99e0:	shl    rdi,0xb
    99e4:	add    rdi,QWORD PTR [rip+0x18ddd]        # 227c8 <lattice>
    99eb:	add    rdi,0x70
    99ef:	call   19390 <get_field>
    99f4:	mov    r10d,DWORD PTR [rsp+0x10]
    99f9:	cmp    DWORD PTR [rip+0x18ee4],r10d        # 228e4 <this_node>
    9a00:	jne    98f0 <r_serial+0x1e0>
    9a06:	movsxd r12,DWORD PTR [rsp+0x24]
    9a0b:	mov    rdi,QWORD PTR [rip+0x18db6]        # 227c8 <lattice>
    9a12:	shl    r12,0xb
    9a16:	add    rdi,r12
    9a19:	add    rdi,0x70
    9a1d:	cmp    DWORD PTR [rsp+0x40],0x1
    9a22:	je     9c22 <r_serial+0x512>
    9a28:	mov    esi,DWORD PTR [rsp+0x58]
    9a2c:	mov    edx,DWORD PTR [rsp+0x54]
    9a30:	lea    r8,[rdi+0x240]
    9a37:	nop    WORD PTR [rax+rax*1+0x0]
    9a40:	mov    eax,DWORD PTR [rdi]
    9a42:	mov    ecx,ebp
    9a44:	add    ebp,0x1
    9a47:	rol    eax,cl
    9a49:	mov    ecx,ebx
    9a4b:	xor    esi,eax
    9a4d:	mov    DWORD PTR [rsp+0x58],esi
    9a51:	mov    eax,DWORD PTR [rdi]
    9a53:	rol    eax,cl
    9a55:	xor    edx,eax
    9a57:	cmp    ebp,0x1d
    9a5a:	cmove  ebp,r14d
    9a5e:	add    ebx,0x1
    9a61:	mov    DWORD PTR [rsp+0x54],edx
    9a65:	cmp    ebx,0x1f
    9a68:	cmovge ebx,r14d
    9a6c:	add    rdi,0x4
    9a70:	cmp    rdi,r8
    9a73:	jne    9a40 <r_serial+0x330>
    9a75:	add    r13,0x1
    9a79:	cmp    DWORD PTR [rip+0x18970],r13d        # 223f0 <volume>
    9a80:	jg     9945 <r_serial+0x235>
    9a86:	lea    rdi,[rsp+0x58]
    9a8b:	lea    r12,[rsp+0x54]
    9a90:	call   19450 <g_xor32>
    9a95:	mov    rdi,r12
    9a98:	call   19450 <g_xor32>
    9a9d:	mov    ecx,DWORD PTR [rip+0x18e41]        # 228e4 <this_node>
    9aa3:	test   ecx,ecx
    9aa5:	je     9bc1 <r_serial+0x4b1>
    9aab:	mov    rax,QWORD PTR [rsp+0x68]
    9ab0:	xor    rax,QWORD PTR fs:0x28
    9ab9:	jne    9d1a <r_serial+0x60a>
    9abf:	add    rsp,0x78
    9ac3:	pop    rbx
    9ac4:	pop    rbp
    9ac5:	pop    r12
    9ac7:	pop    r13
    9ac9:	pop    r14
    9acb:	pop    r15
    9acd:	ret    
    9ace:	xchg   ax,ax
    9ad0:	mov    edx,r10d
    9ad3:	mov    esi,0x240
    9ad8:	mov    rdi,r15
    9adb:	mov    DWORD PTR [rsp],r10d
    9adf:	call   19380 <send_field>
    9ae4:	mov    r10d,DWORD PTR [rsp]
    9ae8:	jmp    98e3 <r_serial+0x1d3>
    9aed:	nop    DWORD PTR [rax]
    9af0:	mov    eax,DWORD PTR [rip+0x188fa]        # 223f0 <volume>
    9af6:	mov    esi,0x1000
    9afb:	mov    rcx,QWORD PTR [rsp+0x28]
    9b00:	mov    DWORD PTR [rsp+0x14],r11d
    9b05:	mov    rdi,QWORD PTR [rsp+0x18]
    9b0a:	mov    DWORD PTR [rsp+0x10],r10d
    9b0f:	sub    eax,r15d
    9b12:	cmp    eax,0x1000
    9b17:	cmovg  eax,esi
    9b1a:	mov    esi,0x240
    9b1f:	movsxd rdx,eax
    9b22:	mov    r15,rdx
    9b25:	mov    DWORD PTR [rsp+0x20],edx
    9b29:	call   2300 <fread@plt>
    9b2e:	mov    r10d,DWORD PTR [rsp+0x10]
    9b33:	mov    r11d,DWORD PTR [rsp+0x14]
    9b38:	cmp    r15d,eax
    9b3b:	je     9b9f <r_serial+0x48f>
    9b3d:	mov    DWORD PTR [rsp+0x44],r11d
    9b42:	call   22c0 <__errno_location@plt>
    9b47:	mov    r9,QWORD PTR [rsp+0x38]
    9b4c:	mov    ecx,DWORD PTR [rip+0x18d92]        # 228e4 <this_node>
    9b52:	lea    rdx,[rsp+0x5f]
    9b57:	mov    r8d,DWORD PTR [rax]
    9b5a:	lea    rsi,[rip+0x11f97]        # 1baf8 <_IO_stdin_used+0x1af8>
    9b61:	mov    edi,0x1
    9b66:	xor    eax,eax
    9b68:	call   2470 <__printf_chk@plt>
    9b6d:	mov    rdi,QWORD PTR [rip+0x1876c]        # 222e0 <stdout@@GLIBC_2.2.5>
    9b74:	call   2420 <fflush@plt>
    9b79:	mov    edi,0x1
    9b7e:	call   19570 <terminate>
    9b83:	mov    r15,QWORD PTR [rsp+0x18]
    9b88:	mov    r10d,DWORD PTR [rsp+0x10]
    9b8d:	mov    DWORD PTR [rsp+0x14],0x1
    9b95:	mov    r11d,DWORD PTR [rsp+0x44]
    9b9a:	jmp    9875 <r_serial+0x165>
    9b9f:	mov    DWORD PTR [rsp+0x14],0x1
    9ba7:	mov    r15,QWORD PTR [rsp+0x18]
    9bac:	jmp    9875 <r_serial+0x165>
    9bb1:	movsxd rax,DWORD PTR [rip+0x18838]        # 223f0 <volume>
    9bb8:	shl    rax,0x2
    9bbc:	jmp    97ad <r_serial+0x9d>
    9bc1:	mov    rdx,QWORD PTR [rsp+0x38]
    9bc6:	xor    eax,eax
    9bc8:	mov    edi,0x1
    9bcd:	lea    rsi,[rip+0x11f5c]        # 1bb30 <_IO_stdin_used+0x1b30>
    9bd4:	call   2470 <__printf_chk@plt>
    9bd9:	mov    rax,QWORD PTR [rsp+0x30]
    9bde:	cmp    DWORD PTR [rax],0x4e87
    9be4:	je     9c9b <r_serial+0x58b>
    9bea:	mov    rdi,QWORD PTR [rip+0x186ef]        # 222e0 <stdout@@GLIBC_2.2.5>
    9bf1:	call   2420 <fflush@plt>
    9bf6:	mov    rax,QWORD PTR [rsp+0x68]
    9bfb:	xor    rax,QWORD PTR fs:0x28
    9c04:	jne    9d1a <r_serial+0x60a>
    9c0a:	mov    rdi,QWORD PTR [rsp+0x18]
    9c0f:	add    rsp,0x78
    9c13:	pop    rbx
    9c14:	pop    rbp
    9c15:	pop    r12
    9c17:	pop    r13
    9c19:	pop    r14
    9c1b:	pop    r15
    9c1d:	jmp    22a0 <free@plt>
    9c22:	mov    esi,0x90
    9c27:	call   15960 <byterevn>
    9c2c:	mov    rdi,QWORD PTR [rip+0x18b95]        # 227c8 <lattice>
    9c33:	add    rdi,r12
    9c36:	add    rdi,0x70
    9c3a:	jmp    9a28 <r_serial+0x318>
    9c3f:	lea    rdx,[rsp+0x5f]
    9c44:	lea    rsi,[rip+0x11e2d]        # 1ba78 <_IO_stdin_used+0x1a78>
    9c4b:	mov    edi,0x1
    9c50:	xor    eax,eax
    9c52:	call   2470 <__printf_chk@plt>
    9c57:	jmp    97d1 <r_serial+0xc1>
    9c5c:	call   22c0 <__errno_location@plt>
    9c61:	mov    r8,QWORD PTR [rsp+0x38]
    9c66:	lea    rdx,[rsp+0x5f]
    9c6b:	lea    rsi,[rip+0x11e56]        # 1bac8 <_IO_stdin_used+0x1ac8>
    9c72:	mov    ecx,DWORD PTR [rax]
    9c74:	mov    edi,0x1
    9c79:	xor    eax,eax
    9c7b:	call   2470 <__printf_chk@plt>
    9c80:	mov    rdi,QWORD PTR [rip+0x18659]        # 222e0 <stdout@@GLIBC_2.2.5>
    9c87:	call   2420 <fflush@plt>
    9c8c:	mov    edi,0x1
    9c91:	call   19570 <terminate>
    9c96:	jmp    9805 <r_serial+0xf5>
    9c9b:	mov    rdx,rax
    9c9e:	lea    rsi,[rip+0x112ab]        # 1af50 <_IO_stdin_used+0xf50>
    9ca5:	mov    edi,0x1
    9caa:	xor    eax,eax
    9cac:	add    rdx,0x4
    9cb0:	call   2470 <__printf_chk@plt>
    9cb5:	mov    rsi,QWORD PTR [rsp+0x48]
    9cba:	mov    rdi,QWORD PTR [rsp+0x28]
    9cbf:	xor    edx,edx
    9cc1:	call   2440 <fseek@plt>
    9cc6:	test   eax,eax
    9cc8:	js     9cde <r_serial+0x5ce>
    9cca:	mov    rsi,QWORD PTR [rsp+0x8]
    9ccf:	mov    rdx,r12
    9cd2:	xor    edi,edi
    9cd4:	call   7d80 <read_checksum>
    9cd9:	jmp    9bea <r_serial+0x4da>
    9cde:	call   22c0 <__errno_location@plt>
    9ce3:	mov    r8,QWORD PTR [rsp+0x38]
    9ce8:	lea    rdx,[rsp+0x5f]
    9ced:	lea    rsi,[rip+0x11dd4]        # 1bac8 <_IO_stdin_used+0x1ac8>
    9cf4:	mov    ecx,DWORD PTR [rax]
    9cf6:	mov    edi,0x1
    9cfb:	xor    eax,eax
    9cfd:	call   2470 <__printf_chk@plt>
    9d02:	mov    rdi,QWORD PTR [rip+0x185d7]        # 222e0 <stdout@@GLIBC_2.2.5>
    9d09:	call   2420 <fflush@plt>
    9d0e:	mov    edi,0x1
    9d13:	call   19570 <terminate>
    9d18:	jmp    9cca <r_serial+0x5ba>
    9d1a:	call   2350 <__stack_chk_fail@plt>
    9d1f:	mov    ecx,DWORD PTR [rip+0x18bbf]        # 228e4 <this_node>
    9d25:	lea    rdx,[rsp+0x5f]
    9d2a:	mov    edi,0x1
    9d2f:	lea    rsi,[rip+0x11d72]        # 1baa8 <_IO_stdin_used+0x1aa8>
    9d36:	call   2470 <__printf_chk@plt>
    9d3b:	mov    rdi,QWORD PTR [rip+0x1859e]        # 222e0 <stdout@@GLIBC_2.2.5>
    9d42:	call   2420 <fflush@plt>
    9d47:	mov    edi,0x1
    9d4c:	call   19570 <terminate>
    9d51:	jmp    97ee <r_serial+0xde>
    9d56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009d60 <r_serial_arch>:
    9d60:	endbr64 
    9d64:	push   r15
    9d66:	mov    r8d,0x68
    9d6c:	push   r14
    9d6e:	push   r13
    9d70:	push   r12
    9d72:	push   rbp
    9d73:	push   rbx
    9d74:	sub    rsp,0x4f8
    9d7b:	mov    r9d,DWORD PTR [rip+0x18b62]        # 228e4 <this_node>
    9d82:	mov    QWORD PTR [rsp+0x38],rdi
    9d87:	mov    rbx,QWORD PTR fs:0x28
    9d90:	mov    QWORD PTR [rsp+0x4e8],rbx
    9d98:	xor    ebx,ebx
    9d9a:	movabs rbx,0x6c61697265735f72
    9da4:	mov    DWORD PTR [rsp+0x4e2],0x6372615f
    9daf:	mov    QWORD PTR [rsp+0x4da],rbx
    9db7:	mov    rbx,QWORD PTR [rdi]
    9dba:	mov    WORD PTR [rsp+0x4e6],r8w
    9dc3:	mov    QWORD PTR [rsp+0x28],rbx
    9dc8:	mov    rbx,QWORD PTR [rdi+0x10]
    9dcc:	mov    QWORD PTR [rsp+0x30],rbx
    9dd1:	test   r9d,r9d
    9dd4:	jne    9e16 <r_serial_arch+0xb6>
    9dd6:	mov    esi,DWORD PTR [rdi+0x28]
    9dd9:	test   esi,esi
    9ddb:	jne    a20c <r_serial_arch+0x4ac>
    9de1:	mov    eax,DWORD PTR [rip+0x185f1]        # 223d8 <nx>
    9de7:	imul   eax,DWORD PTR [rip+0x18a4e]        # 2283c <ny>
    9dee:	mov    esi,0x8
    9df3:	imul   eax,DWORD PTR [rip+0x185da]        # 223d4 <nz>
    9dfa:	lea    edi,[rax+rax*2]
    9dfd:	shl    edi,0x4
    9e00:	movsxd rdi,edi
    9e03:	call   23d0 <calloc@plt>
    9e08:	mov    QWORD PTR [rsp+0x18],rax
    9e0d:	test   rax,rax
    9e10:	je     a241 <r_serial_arch+0x4e1>
    9e16:	mov    QWORD PTR [rsp+0x48],0x0
    9e1f:	xor    eax,eax
    9e21:	xor    ebx,ebx
    9e23:	call   193d0 <g_sync>
    9e28:	mov    ecx,DWORD PTR [rip+0x185c2]        # 223f0 <volume>
    9e2e:	test   ecx,ecx
    9e30:	jle    a160 <r_serial_arch+0x400>
    9e36:	mov    DWORD PTR [rsp+0x4],0x0
    9e3e:	xor    r14d,r14d
    9e41:	xor    r15d,r15d
    9e44:	xor    r13d,r13d
    9e47:	lea    r12,[rsp+0x290]
    9e4f:	jmp    9ec6 <r_serial_arch+0x166>
    9e51:	nop    DWORD PTR [rax+0x0]
    9e58:	cmp    eax,DWORD PTR [rsp+0x8]
    9e5c:	je     a110 <r_serial_arch+0x3b0>
    9e62:	add    r15d,0x90
    9e69:	mov    edi,0x8d3dcb09
    9e6e:	lea    eax,[r14+0x90]
    9e75:	mov    rdx,r15
    9e78:	imul   r15,rdi
    9e7c:	movsxd r14,eax
    9e7f:	imul   r14,r14,0xffffffff84210843
    9e86:	shr    r15,0x24
    9e8a:	imul   r15d,r15d,0x1d
    9e8e:	shr    r14,0x20
    9e92:	add    r14d,eax
    9e95:	sar    r14d,0x4
    9e99:	sub    edx,r15d
    9e9c:	mov    r15d,edx
    9e9f:	cdq    
    9ea0:	sub    r14d,edx
    9ea3:	mov    edx,r14d
    9ea6:	shl    edx,0x5
    9ea9:	sub    edx,r14d
    9eac:	sub    eax,edx
    9eae:	mov    r14d,eax
    9eb1:	add    DWORD PTR [rsp+0x4],0x1
    9eb6:	mov    eax,DWORD PTR [rsp+0x4]
    9eba:	cmp    DWORD PTR [rip+0x18530],eax        # 223f0 <volume>
    9ec0:	jle    a160 <r_serial_arch+0x400>
    9ec6:	mov    eax,DWORD PTR [rsp+0x4]
    9eca:	cdq    
    9ecb:	idiv   DWORD PTR [rip+0x18507]        # 223d8 <nx>
    9ed1:	mov    DWORD PTR [rsp+0xc],edx
    9ed5:	cdq    
    9ed6:	mov    edi,DWORD PTR [rsp+0xc]
    9eda:	idiv   DWORD PTR [rip+0x1895c]        # 2283c <ny>
    9ee0:	mov    DWORD PTR [rsp+0x10],edx
    9ee4:	cdq    
    9ee5:	mov    esi,DWORD PTR [rsp+0x10]
    9ee9:	idiv   DWORD PTR [rip+0x184e5]        # 223d4 <nz>
    9eef:	mov    DWORD PTR [rsp+0x14],edx
    9ef3:	cdq    
    9ef4:	idiv   DWORD PTR [rip+0x184d6]        # 223d0 <nt>
    9efa:	mov    DWORD PTR [rsp+0x20],edx
    9efe:	mov    ecx,edx
    9f00:	mov    edx,DWORD PTR [rsp+0x14]
    9f04:	call   3ac0 <node_number>
    9f09:	mov    DWORD PTR [rsp+0x8],eax
    9f0d:	mov    eax,DWORD PTR [rip+0x189d1]        # 228e4 <this_node>
    9f13:	test   eax,eax
    9f15:	jne    9e58 <r_serial_arch+0xf8>
    9f1b:	mov    rcx,QWORD PTR [rsp+0x28]
    9f20:	mov    rdi,QWORD PTR [rsp+0x18]
    9f25:	mov    edx,0x1
    9f2a:	mov    esi,0x180
    9f2f:	call   2300 <fread@plt>
    9f34:	cmp    eax,0x1
    9f37:	je     9f7d <r_serial_arch+0x21d>
    9f39:	call   22c0 <__errno_location@plt>
    9f3e:	mov    r9,QWORD PTR [rsp+0x30]
    9f43:	mov    ecx,DWORD PTR [rip+0x1899b]        # 228e4 <this_node>
    9f49:	lea    rdx,[rsp+0x4da]
    9f51:	mov    r8d,DWORD PTR [rax]
    9f54:	lea    rsi,[rip+0x11b9d]        # 1baf8 <_IO_stdin_used+0x1af8>
    9f5b:	mov    edi,0x1
    9f60:	xor    eax,eax
    9f62:	call   2470 <__printf_chk@plt>
    9f67:	mov    rdi,QWORD PTR [rip+0x18372]        # 222e0 <stdout@@GLIBC_2.2.5>
    9f6e:	call   2420 <fflush@plt>
    9f73:	mov    edi,0x1
    9f78:	call   19570 <terminate>
    9f7d:	mov    rbp,QWORD PTR [rsp+0x18]
    9f82:	mov    esi,0x30
    9f87:	mov    rdi,rbp
    9f8a:	call   15960 <byterevn>
    9f8f:	mov    r8,rbp
    9f92:	mov    rsi,r12
    9f95:	xor    r10d,r10d
    9f98:	xor    r9d,r9d
    9f9b:	lea    rbp,[rsp+0x50]
    9fa0:	xor    eax,eax
    9fa2:	nop    WORD PTR [rax+rax*1+0x0]
    9fa8:	movsd  xmm0,QWORD PTR [r8+rax*1]
    9fae:	add    ebx,DWORD PTR [r8+rax*1]
    9fb2:	movsd  QWORD PTR [rsi+rax*1],xmm0
    9fb7:	add    rax,0x8
    9fbb:	cmp    rax,0x60
    9fbf:	jne    9fa8 <r_serial_arch+0x248>
    9fc1:	mov    rdi,rsi
    9fc4:	add    r8,0x60
    9fc8:	call   6de0 <complete_U>
    9fcd:	xor    r11d,r11d
    9fd0:	mov    rdi,r9
    9fd3:	lea    rdx,[rdi+r12*1]
    9fd7:	lea    rax,[rbp+rdi*1+0x0]
    9fdc:	mov    ecx,0x3
    9fe1:	movsd  xmm0,QWORD PTR [rdx]
    9fe5:	add    rax,0x10
    9fe9:	add    rdx,0x10
    9fed:	movsd  QWORD PTR [rax-0x10],xmm0
    9ff2:	movsd  xmm0,QWORD PTR [rdx-0x8]
    9ff7:	movsd  QWORD PTR [rax-0x8],xmm0
    9ffc:	sub    ecx,0x1
    9fff:	jne    9fe1 <r_serial_arch+0x281>
    a001:	add    r11d,0x3
    a005:	add    rdi,0x30
    a009:	cmp    r11d,0x9
    a00d:	jne    9fd3 <r_serial_arch+0x273>
    a00f:	add    r10,0x9
    a013:	add    r9,0x90
    a01a:	add    rsi,0x90
    a021:	cmp    r10,0x24
    a025:	jne    9fa0 <r_serial_arch+0x240>
    a02b:	mov    edx,DWORD PTR [rsp+0x8]
    a02f:	test   edx,edx
    a031:	jne    a14a <r_serial_arch+0x3ea>
    a037:	mov    ecx,DWORD PTR [rsp+0x20]
    a03b:	mov    edx,DWORD PTR [rsp+0x14]
    a03f:	mov    esi,DWORD PTR [rsp+0x10]
    a043:	mov    edi,DWORD PTR [rsp+0xc]
    a047:	call   3b10 <node_index>
    a04c:	mov    rsi,rbp
    a04f:	mov    DWORD PTR [rsp+0x24],eax
    a053:	movsxd rdi,eax
    a056:	mov    rdx,QWORD PTR [rbp+0x0]
    a05a:	shl    rdi,0xb
    a05e:	add    rdi,QWORD PTR [rip+0x18763]        # 227c8 <lattice>
    a065:	mov    QWORD PTR [rdi+0x70],rdx
    a069:	mov    rdx,QWORD PTR [rsp+0x288]
    a071:	lea    rax,[rdi+0x70]
    a075:	add    rdi,0x78
    a079:	mov    QWORD PTR [rdi+0x230],rdx
    a080:	and    rdi,0xfffffffffffffff8
    a084:	sub    rax,rdi
    a087:	sub    rsi,rax
    a08a:	add    eax,0x240
    a08f:	shr    eax,0x3
    a092:	mov    ecx,eax
    a094:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    a097:	mov    eax,DWORD PTR [rsp+0x8]
    a09b:	cmp    DWORD PTR [rip+0x18843],eax        # 228e4 <this_node>
    a0a1:	jne    9e62 <r_serial_arch+0x102>
    a0a7:	movsxd r8,DWORD PTR [rsp+0x24]
    a0ac:	mov    edi,DWORD PTR [rsp+0x4c]
    a0b0:	mov    esi,DWORD PTR [rsp+0x48]
    a0b4:	shl    r8,0xb
    a0b8:	add    r8,QWORD PTR [rip+0x18709]        # 227c8 <lattice>
    a0bf:	lea    rax,[r8+0x70]
    a0c3:	add    r8,0x2b0
    a0ca:	nop    WORD PTR [rax+rax*1+0x0]
    a0d0:	mov    edx,DWORD PTR [rax]
    a0d2:	mov    ecx,r15d
    a0d5:	add    r15d,0x1
    a0d9:	rol    edx,cl
    a0db:	mov    ecx,r14d
    a0de:	xor    edi,edx
    a0e0:	mov    DWORD PTR [rsp+0x4c],edi
    a0e4:	mov    edx,DWORD PTR [rax]
    a0e6:	rol    edx,cl
    a0e8:	xor    esi,edx
    a0ea:	cmp    r15d,0x1d
    a0ee:	cmove  r15d,r13d
    a0f2:	add    r14d,0x1
    a0f6:	mov    DWORD PTR [rsp+0x48],esi
    a0fa:	cmp    r14d,0x1f
    a0fe:	cmovge r14d,r13d
    a102:	add    rax,0x4
    a106:	cmp    rax,r8
    a109:	jne    a0d0 <r_serial_arch+0x370>
    a10b:	jmp    9eb1 <r_serial_arch+0x151>
    a110:	mov    esi,DWORD PTR [rsp+0x10]
    a114:	mov    edi,DWORD PTR [rsp+0xc]
    a118:	mov    ecx,DWORD PTR [rsp+0x20]
    a11c:	mov    edx,DWORD PTR [rsp+0x14]
    a120:	call   3b10 <node_index>
    a125:	mov    esi,0x240
    a12a:	movsxd rdi,eax
    a12d:	mov    DWORD PTR [rsp+0x24],eax
    a131:	shl    rdi,0xb
    a135:	add    rdi,QWORD PTR [rip+0x1868c]        # 227c8 <lattice>
    a13c:	add    rdi,0x70
    a140:	call   19390 <get_field>
    a145:	jmp    a097 <r_serial_arch+0x337>
    a14a:	mov    edx,DWORD PTR [rsp+0x8]
    a14e:	mov    esi,0x240
    a153:	mov    rdi,rbp
    a156:	call   19380 <send_field>
    a15b:	jmp    a097 <r_serial_arch+0x337>
    a160:	lea    rdi,[rsp+0x4c]
    a165:	lea    rbp,[rsp+0x48]
    a16a:	call   19450 <g_xor32>
    a16f:	mov    rdi,rbp
    a172:	call   19450 <g_xor32>
    a177:	mov    eax,DWORD PTR [rip+0x18767]        # 228e4 <this_node>
    a17d:	test   eax,eax
    a17f:	je     a1aa <r_serial_arch+0x44a>
    a181:	mov    rax,QWORD PTR [rsp+0x4e8]
    a189:	xor    rax,QWORD PTR fs:0x28
    a192:	jne    a287 <r_serial_arch+0x527>
    a198:	add    rsp,0x4f8
    a19f:	pop    rbx
    a1a0:	pop    rbp
    a1a1:	pop    r12
    a1a3:	pop    r13
    a1a5:	pop    r14
    a1a7:	pop    r15
    a1a9:	ret    
    a1aa:	mov    rdx,QWORD PTR [rsp+0x30]
    a1af:	lea    rsi,[rip+0x11a1a]        # 1bbd0 <_IO_stdin_used+0x1bd0>
    a1b6:	mov    edi,0x1
    a1bb:	xor    eax,eax
    a1bd:	call   2470 <__printf_chk@plt>
    a1c2:	mov    rax,QWORD PTR [rsp+0x38]
    a1c7:	mov    edx,ebx
    a1c9:	mov    ecx,DWORD PTR [rax+0x2c]
    a1cc:	cmp    ecx,ebx
    a1ce:	je     a22c <r_serial_arch+0x4cc>
    a1d0:	lea    rsi,[rip+0x11a39]        # 1bc10 <_IO_stdin_used+0x1c10>
    a1d7:	mov    edi,0x1
    a1dc:	xor    eax,eax
    a1de:	call   2470 <__printf_chk@plt>
    a1e3:	mov    rdi,QWORD PTR [rip+0x180f6]        # 222e0 <stdout@@GLIBC_2.2.5>
    a1ea:	call   2420 <fflush@plt>
    a1ef:	mov    rdi,QWORD PTR [rsp+0x18]
    a1f4:	call   22a0 <free@plt>
    a1f9:	mov    rax,QWORD PTR [rsp+0x48]
    a1fe:	mov    rbx,QWORD PTR [rsp+0x38]
    a203:	mov    QWORD PTR [rbx+0x2c],rax
    a207:	jmp    a181 <r_serial_arch+0x421>
    a20c:	lea    rdx,[rsp+0x4da]
    a214:	lea    rsi,[rip+0x1185d]        # 1ba78 <_IO_stdin_used+0x1a78>
    a21b:	mov    edi,0x1
    a220:	xor    eax,eax
    a222:	call   2470 <__printf_chk@plt>
    a227:	jmp    9de1 <r_serial_arch+0x81>
    a22c:	lea    rsi,[rip+0x11a15]        # 1bc48 <_IO_stdin_used+0x1c48>
    a233:	mov    edi,0x1
    a238:	xor    eax,eax
    a23a:	call   2470 <__printf_chk@plt>
    a23f:	jmp    a1e3 <r_serial_arch+0x483>
    a241:	mov    ecx,DWORD PTR [rip+0x1869d]        # 228e4 <this_node>
    a247:	lea    rdx,[rsp+0x4da]
    a24f:	mov    edi,0x1
    a254:	lea    rsi,[rip+0x11915]        # 1bb70 <_IO_stdin_used+0x1b70>
    a25b:	call   2470 <__printf_chk@plt>
    a260:	lea    rdi,[rip+0x11941]        # 1bba8 <_IO_stdin_used+0x1ba8>
    a267:	call   22f0 <puts@plt>
    a26c:	mov    rdi,QWORD PTR [rip+0x1806d]        # 222e0 <stdout@@GLIBC_2.2.5>
    a273:	call   2420 <fflush@plt>
    a278:	mov    edi,0x1
    a27d:	call   19570 <terminate>
    a282:	jmp    9e16 <r_serial_arch+0xb6>
    a287:	call   2350 <__stack_chk_fail@plt>
    a28c:	nop    DWORD PTR [rax+0x0]

000000000000a290 <r_serial_f>:
    a290:	endbr64 
    a294:	push   rbx
    a295:	xor    eax,eax
    a297:	mov    rbx,rdi
    a29a:	call   193d0 <g_sync>
    a29f:	mov    edx,DWORD PTR [rip+0x1863f]        # 228e4 <this_node>
    a2a5:	test   edx,edx
    a2a7:	jne    a2b8 <r_serial_f+0x28>
    a2a9:	mov    eax,DWORD PTR [rbx+0x28]
    a2ac:	test   eax,eax
    a2ae:	jne    a2d8 <r_serial_f+0x48>
    a2b0:	mov    rdi,QWORD PTR [rbx]
    a2b3:	call   2320 <fclose@plt>
    a2b8:	mov    rdi,QWORD PTR [rbx+0x20]
    a2bc:	test   rdi,rdi
    a2bf:	je     a2d0 <r_serial_f+0x40>
    a2c1:	pop    rbx
    a2c2:	jmp    22a0 <free@plt>
    a2c7:	nop    WORD PTR [rax+rax*1+0x0]
    a2d0:	pop    rbx
    a2d1:	ret    
    a2d2:	nop    WORD PTR [rax+rax*1+0x0]
    a2d8:	lea    rdi,[rip+0x11989]        # 1bc68 <_IO_stdin_used+0x1c68>
    a2df:	call   22f0 <puts@plt>
    a2e4:	jmp    a2b0 <r_serial_f+0x20>
    a2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a2f0 <write_site_list>:
    a2f0:	endbr64 
    a2f4:	push   r13
    a2f6:	movsxd rax,DWORD PTR [rip+0x185e7]        # 228e4 <this_node>
    a2fd:	push   r12
    a2ff:	mov    r12,rdi
    a302:	movsxd rdi,DWORD PTR [rip+0x181f7]        # 22500 <sites_on_node>
    a309:	push   rbp
    a30a:	movsxd rdx,DWORD PTR [rsi+0x54]
    a30e:	mov    esi,0x4
    a313:	imul   rax,rdi
    a317:	lea    r13,[rdx+rax*4]
    a31b:	call   23d0 <calloc@plt>
    a320:	mov    rbp,rax
    a323:	test   rax,rax
    a326:	je     a45f <write_site_list+0x16f>
    a32c:	xor    edx,edx
    a32e:	mov    rsi,r13
    a331:	mov    rdi,r12
    a334:	call   19d50 <g_seek>
    a339:	test   eax,eax
    a33b:	js     a420 <write_site_list+0x130>
    a341:	movsxd rdx,DWORD PTR [rip+0x181b8]        # 22500 <sites_on_node>
    a348:	mov    rcx,QWORD PTR [rip+0x18479]        # 227c8 <lattice>
    a34f:	test   edx,edx
    a351:	jle    a3c1 <write_site_list+0xd1>
    a353:	lea    edi,[rdx-0x1]
    a356:	mov    r10d,DWORD PTR [rip+0x18077]        # 223d4 <nz>
    a35d:	mov    rsi,rbp
    a360:	mov    r9d,DWORD PTR [rip+0x184d5]        # 2283c <ny>
    a367:	add    rdi,0x1
    a36b:	mov    r8d,DWORD PTR [rip+0x18066]        # 223d8 <nx>
    a372:	shl    rdi,0xb
    a376:	add    rdi,rcx
    a379:	nop    DWORD PTR [rax+0x0]
    a380:	movsx  eax,WORD PTR [rcx+0x6]
    a384:	movsx  r11d,WORD PTR [rcx+0x4]
    a389:	add    rcx,0x800
    a390:	add    rsi,0x4
    a394:	imul   eax,r10d
    a398:	add    eax,r11d
    a39b:	movsx  r11d,WORD PTR [rcx-0x7fe]
    a3a3:	imul   eax,r9d
    a3a7:	add    eax,r11d
    a3aa:	movsx  r11d,WORD PTR [rcx-0x800]
    a3b2:	imul   eax,r8d
    a3b6:	add    eax,r11d
    a3b9:	mov    DWORD PTR [rsi-0x4],eax
    a3bc:	cmp    rcx,rdi
    a3bf:	jne    a380 <write_site_list+0x90>
    a3c1:	mov    rcx,r12
    a3c4:	mov    esi,0x4
    a3c9:	mov    rdi,rbp
    a3cc:	call   19d70 <g_write>
    a3d1:	cmp    DWORD PTR [rip+0x18129],eax        # 22500 <sites_on_node>
    a3d7:	je     a40f <write_site_list+0x11f>
    a3d9:	call   22c0 <__errno_location@plt>
    a3de:	mov    edx,DWORD PTR [rip+0x18500]        # 228e4 <this_node>
    a3e4:	mov    edi,0x1
    a3e9:	lea    rsi,[rip+0x11918]        # 1bd08 <_IO_stdin_used+0x1d08>
    a3f0:	mov    ecx,DWORD PTR [rax]
    a3f2:	xor    eax,eax
    a3f4:	call   2470 <__printf_chk@plt>
    a3f9:	mov    rdi,QWORD PTR [rip+0x17ee0]        # 222e0 <stdout@@GLIBC_2.2.5>
    a400:	call   2420 <fflush@plt>
    a405:	mov    edi,0x1
    a40a:	call   19570 <terminate>
    a40f:	mov    rdi,rbp
    a412:	pop    rbp
    a413:	pop    r12
    a415:	pop    r13
    a417:	jmp    22a0 <free@plt>
    a41c:	nop    DWORD PTR [rax+0x0]
    a420:	call   22c0 <__errno_location@plt>
    a425:	mov    edx,DWORD PTR [rip+0x184b9]        # 228e4 <this_node>
    a42b:	mov    rcx,r13
    a42e:	lea    rsi,[rip+0x1189b]        # 1bcd0 <_IO_stdin_used+0x1cd0>
    a435:	mov    r8d,DWORD PTR [rax]
    a438:	mov    edi,0x1
    a43d:	xor    eax,eax
    a43f:	call   2470 <__printf_chk@plt>
    a444:	mov    rdi,QWORD PTR [rip+0x17e95]        # 222e0 <stdout@@GLIBC_2.2.5>
    a44b:	call   2420 <fflush@plt>
    a450:	mov    edi,0x1
    a455:	call   19570 <terminate>
    a45a:	jmp    a341 <write_site_list+0x51>
    a45f:	mov    edx,DWORD PTR [rip+0x1847f]        # 228e4 <this_node>
    a465:	lea    rsi,[rip+0x11834]        # 1bca0 <_IO_stdin_used+0x1ca0>
    a46c:	mov    edi,0x1
    a471:	xor    eax,eax
    a473:	call   2470 <__printf_chk@plt>
    a478:	mov    rdi,QWORD PTR [rip+0x17e61]        # 222e0 <stdout@@GLIBC_2.2.5>
    a47f:	call   2420 <fflush@plt>
    a484:	mov    edi,0x1
    a489:	call   19570 <terminate>
    a48e:	jmp    a32c <write_site_list+0x3c>
    a493:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    a49e:	xchg   ax,ax

000000000000a4a0 <parallel_open>:
    a4a0:	endbr64 
    a4a4:	push   r14
    a4a6:	xor    eax,eax
    a4a8:	push   r13
    a4aa:	mov    r13d,edi
    a4ad:	push   r12
    a4af:	push   rbp
    a4b0:	mov    rbp,rsi
    a4b3:	push   rbx
    a4b4:	call   7ab0 <setup_output_gauge_file>
    a4b9:	lea    rsi,[rip+0x10a5f]        # 1af1f <_IO_stdin_used+0xf1f>
    a4c0:	mov    rdi,rbp
    a4c3:	mov    r14,QWORD PTR [rax+0x8]
    a4c7:	mov    r12,rax
    a4ca:	mov    DWORD PTR [r14+0x58],r13d
    a4ce:	call   19c00 <g_open>
    a4d3:	mov    rbx,rax
    a4d6:	test   rax,rax
    a4d9:	je     a540 <parallel_open+0xa0>
    a4db:	mov    eax,DWORD PTR [rip+0x18403]        # 228e4 <this_node>
    a4e1:	test   eax,eax
    a4e3:	je     a520 <parallel_open+0x80>
    a4e5:	lea    rdi,[r14+0x54]
    a4e9:	mov    esi,0x4
    a4ee:	call   194c0 <broadcast_bytes>
    a4f3:	test   r13d,r13d
    a4f6:	jne    a530 <parallel_open+0x90>
    a4f8:	mov    QWORD PTR [r12],rbx
    a4fc:	mov    rax,r12
    a4ff:	mov    QWORD PTR [r12+0x10],rbp
    a504:	mov    DWORD PTR [r12+0x18],0x0
    a50d:	mov    DWORD PTR [r12+0x28],0x1
    a516:	pop    rbx
    a517:	pop    rbp
    a518:	pop    r12
    a51a:	pop    r13
    a51c:	pop    r14
    a51e:	ret    
    a51f:	nop
    a520:	mov    rsi,r14
    a523:	mov    rdi,rbx
    a526:	call   7440 <pwrite_gauge_hdr>
    a52b:	jmp    a4e5 <parallel_open+0x45>
    a52d:	nop    DWORD PTR [rax]
    a530:	mov    rsi,r14
    a533:	mov    rdi,rbx
    a536:	call   a2f0 <write_site_list>
    a53b:	jmp    a4f8 <parallel_open+0x58>
    a53d:	nop    DWORD PTR [rax]
    a540:	call   22c0 <__errno_location@plt>
    a545:	mov    edx,DWORD PTR [rip+0x18399]        # 228e4 <this_node>
    a54b:	mov    rcx,rbp
    a54e:	lea    rsi,[rip+0x117e3]        # 1bd38 <_IO_stdin_used+0x1d38>
    a555:	mov    r8d,DWORD PTR [rax]
    a558:	mov    edi,0x1
    a55d:	xor    eax,eax
    a55f:	call   2470 <__printf_chk@plt>
    a564:	mov    rdi,QWORD PTR [rip+0x17d75]        # 222e0 <stdout@@GLIBC_2.2.5>
    a56b:	call   2420 <fflush@plt>
    a570:	mov    edi,0x1
    a575:	call   19570 <terminate>
    a57a:	jmp    a4db <parallel_open+0x3b>
    a57f:	nop

000000000000a580 <w_parallel_i>:
    a580:	endbr64 
    a584:	mov    rsi,rdi
    a587:	xor    edi,edi
    a589:	jmp    a4a0 <parallel_open>
    a58e:	xchg   ax,ax

000000000000a590 <w_checkpoint_i>:
    a590:	endbr64 
    a594:	mov    rsi,rdi
    a597:	mov    edi,0x1
    a59c:	jmp    a4a0 <parallel_open>
    a5a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    a5ac:	nop    DWORD PTR [rax+0x0]

000000000000a5b0 <w_parallel_setup>:
    a5b0:	endbr64 
    a5b4:	push   r12
    a5b6:	push   rbp
    a5b7:	mov    rbp,rsi
    a5ba:	push   rbx
    a5bb:	mov    rbx,rdi
    a5be:	sub    rsp,0x20
    a5c2:	movdqa xmm0,XMMWORD PTR [rip+0x11d46]        # 1c310 <_IO_stdin_used+0x2310>
    a5ca:	mov    r9d,DWORD PTR [rdi+0x28]
    a5ce:	mov    rax,QWORD PTR fs:0x28
    a5d7:	mov    QWORD PTR [rsp+0x18],rax
    a5dc:	xor    eax,eax
    a5de:	mov    BYTE PTR [rsp+0x10],0x0
    a5e3:	movaps XMMWORD PTR [rsp],xmm0
    a5e7:	test   r9d,r9d
    a5ea:	je     a690 <w_parallel_setup+0xe0>
    a5f0:	mov    esi,0x90
    a5f5:	mov    edi,0x4000
    a5fa:	call   23d0 <calloc@plt>
    a5ff:	mov    r12,rax
    a602:	test   rax,rax
    a605:	je     a700 <w_parallel_setup+0x150>
    a60b:	mov    eax,DWORD PTR [rip+0x17eef]        # 22500 <sites_on_node>
    a611:	mov    rsi,QWORD PTR [rbx+0x8]
    a615:	mov    rdi,QWORD PTR [rbx]
    a618:	shl    eax,0x2
    a61b:	mov    r8d,DWORD PTR [rsi+0x58]
    a61f:	cdqe   
    a621:	lea    rdx,[rax+rax*8]
    a625:	mov    rcx,rdx
    a628:	xor    edx,edx
    a62a:	shl    rcx,0x4
    a62e:	test   r8d,r8d
    a631:	je     a642 <w_parallel_setup+0x92>
    a633:	movsxd rax,DWORD PTR [rip+0x17db6]        # 223f0 <volume>
    a63a:	lea    rdx,[rax*4+0x0]
    a642:	movsxd rax,DWORD PTR [rsi+0x54]
    a646:	add    rax,rdx
    a649:	movsxd rdx,DWORD PTR [rip+0x18294]        # 228e4 <this_node>
    a650:	mov    QWORD PTR [rbp+0x0],rax
    a654:	imul   rdx,rcx
    a658:	lea    rbp,[rax+rdx*1+0x8]
    a65d:	xor    edx,edx
    a65f:	mov    rsi,rbp
    a662:	call   19d50 <g_seek>
    a667:	test   eax,eax
    a669:	js     a6b0 <w_parallel_setup+0x100>
    a66b:	mov    rax,QWORD PTR [rsp+0x18]
    a670:	xor    rax,QWORD PTR fs:0x28
    a679:	jne    a6fb <w_parallel_setup+0x14b>
    a67f:	add    rsp,0x20
    a683:	mov    rax,r12
    a686:	pop    rbx
    a687:	pop    rbp
    a688:	pop    r12
    a68a:	ret    
    a68b:	nop    DWORD PTR [rax+rax*1+0x0]
    a690:	mov    rdx,rsp
    a693:	lea    rsi,[rip+0x116d6]        # 1bd70 <_IO_stdin_used+0x1d70>
    a69a:	mov    edi,0x1
    a69f:	call   2470 <__printf_chk@plt>
    a6a4:	jmp    a5f0 <w_parallel_setup+0x40>
    a6a9:	nop    DWORD PTR [rax+0x0]
    a6b0:	call   22c0 <__errno_location@plt>
    a6b5:	mov    rdx,rsp
    a6b8:	sub    rsp,0x8
    a6bc:	push   QWORD PTR [rbx+0x10]
    a6bf:	mov    r9d,DWORD PTR [rax]
    a6c2:	mov    r8,rbp
    a6c5:	mov    edi,0x1
    a6ca:	xor    eax,eax
    a6cc:	mov    ecx,DWORD PTR [rip+0x18212]        # 228e4 <this_node>
    a6d2:	lea    rsi,[rip+0x116c7]        # 1bda0 <_IO_stdin_used+0x1da0>
    a6d9:	call   2470 <__printf_chk@plt>
    a6de:	mov    rdi,QWORD PTR [rip+0x17bfb]        # 222e0 <stdout@@GLIBC_2.2.5>
    a6e5:	call   2420 <fflush@plt>
    a6ea:	mov    edi,0x1
    a6ef:	call   19570 <terminate>
    a6f4:	pop    rax
    a6f5:	pop    rdx
    a6f6:	jmp    a66b <w_parallel_setup+0xbb>
    a6fb:	call   2350 <__stack_chk_fail@plt>
    a700:	mov    ecx,DWORD PTR [rip+0x181de]        # 228e4 <this_node>
    a706:	mov    rdx,rsp
    a709:	mov    edi,0x1
    a70e:	xor    eax,eax
    a710:	lea    rsi,[rip+0x11391]        # 1baa8 <_IO_stdin_used+0x1aa8>
    a717:	call   2470 <__printf_chk@plt>
    a71c:	mov    rdi,QWORD PTR [rip+0x17bbd]        # 222e0 <stdout@@GLIBC_2.2.5>
    a723:	call   2420 <fflush@plt>
    a728:	mov    edi,0x1
    a72d:	call   19570 <terminate>
    a732:	jmp    a60b <w_parallel_setup+0x5b>
    a737:	nop    WORD PTR [rax+rax*1+0x0]

000000000000a740 <w_parallel>:
    a740:	endbr64 
    a744:	push   r15
    a746:	mov    r8d,0x6c65
    a74c:	push   r14
    a74e:	push   r13
    a750:	push   r12
    a752:	push   rbp
    a753:	push   rbx
    a754:	mov    rbx,rdi
    a757:	sub    rsp,0x2b8
    a75e:	mov    QWORD PTR [rsp+0x18],rdi
    a763:	lea    rsi,[rsp+0x48]
    a768:	mov    rdi,QWORD PTR fs:0x28
    a771:	mov    QWORD PTR [rsp+0x2a8],rdi
    a779:	xor    edi,edi
    a77b:	mov    BYTE PTR [rsp+0x2a7],0x0
    a783:	movabs rdi,0x6c6c617261705f77
    a78d:	mov    QWORD PTR [rsp+0x29d],rdi
    a795:	mov    rdi,QWORD PTR [rbx]
    a798:	mov    WORD PTR [rsp+0x2a5],r8w
    a7a1:	mov    QWORD PTR [rsp+0x28],rdi
    a7a6:	mov    rdi,rbx
    a7a9:	call   a5b0 <w_parallel_setup>
    a7ae:	mov    QWORD PTR [rbx+0x2c],0x0
    a7b6:	mov    r14,rax
    a7b9:	mov    QWORD PTR [rsp+0x20],rax
    a7be:	xor    eax,eax
    a7c0:	lea    r12,[r14+0x90090]
    a7c7:	call   193d0 <g_sync>
    a7cc:	lea    rdx,[r14+0x90]
    a7d3:	mov    QWORD PTR [rsp+0x38],rdx
    a7d8:	lea    rax,[rdx-0x90]
    a7df:	mov    QWORD PTR [rax+0x8],0x0
    a7e7:	add    rax,0x30
    a7eb:	mov    QWORD PTR [rax-0x30],0x0
    a7f3:	mov    QWORD PTR [rax-0x18],0x0
    a7fb:	mov    QWORD PTR [rax-0x20],0x0
    a803:	mov    QWORD PTR [rax-0x8],0x0
    a80b:	mov    QWORD PTR [rax-0x10],0x0
    a813:	cmp    rdx,rax
    a816:	jne    a7df <w_parallel+0x9f>
    a818:	add    rdx,0x90
    a81f:	cmp    r12,rdx
    a822:	jne    a7d8 <w_parallel+0x98>
    a824:	mov    edi,DWORD PTR [rip+0x17cd6]        # 22500 <sites_on_node>
    a82a:	mov    DWORD PTR [rsp+0x30],0x0
    a832:	xor    r15d,r15d
    a835:	mov    DWORD PTR [rsp+0xc],0x0
    a83d:	mov    DWORD PTR [rsp+0x14],0x0
    a845:	test   edi,edi
    a847:	jle    a9b4 <w_parallel+0x274>
    a84d:	mov    eax,DWORD PTR [rsp+0xc]
    a851:	mov    esi,DWORD PTR [rip+0x17e25]        # 2267c <number_of_nodes>
    a857:	xor    ebp,ebp
    a859:	mov    DWORD PTR [rsp+0x34],eax
    a85d:	add    eax,0x1000
    a862:	mov    DWORD PTR [rsp+0xc],eax
    a866:	mov    eax,DWORD PTR [rip+0x17c94]        # 22500 <sites_on_node>
    a86c:	test   esi,esi
    a86e:	jle    a995 <w_parallel+0x255>
    a874:	mov    r14d,DWORD PTR [rsp+0x34]
    a879:	cmp    eax,DWORD PTR [rsp+0x30]
    a87d:	jg     a8ae <w_parallel+0x16e>
    a87f:	jmp    a986 <w_parallel+0x246>
    a884:	nop    DWORD PTR [rax+0x0]
    a888:	mov    eax,DWORD PTR [rip+0x17c72]        # 22500 <sites_on_node>
    a88e:	cmp    esi,ebp
    a890:	je     aa0c <w_parallel+0x2cc>
    a896:	add    r14d,0x1
    a89a:	cmp    r14d,eax
    a89d:	jge    a986 <w_parallel+0x246>
    a8a3:	cmp    r14d,DWORD PTR [rsp+0xc]
    a8a8:	je     a986 <w_parallel+0x246>
    a8ae:	imul   eax,ebp
    a8b1:	add    eax,r14d
    a8b4:	cdq    
    a8b5:	mov    DWORD PTR [rsp+0x10],eax
    a8b9:	idiv   DWORD PTR [rip+0x17b19]        # 223d8 <nx>
    a8bf:	mov    r13d,edx
    a8c2:	cdq    
    a8c3:	idiv   DWORD PTR [rip+0x17f73]        # 2283c <ny>
    a8c9:	mov    edi,r13d
    a8cc:	mov    ebx,edx
    a8ce:	cdq    
    a8cf:	idiv   DWORD PTR [rip+0x17aff]        # 223d4 <nz>
    a8d5:	mov    esi,ebx
    a8d7:	mov    r9d,edx
    a8da:	cdq    
    a8db:	idiv   DWORD PTR [rip+0x17aef]        # 223d0 <nt>
    a8e1:	mov    DWORD PTR [rsp+0x4],r9d
    a8e6:	mov    DWORD PTR [rsp+0x8],edx
    a8ea:	mov    ecx,edx
    a8ec:	mov    edx,r9d
    a8ef:	call   3ac0 <node_number>
    a8f4:	mov    esi,DWORD PTR [rip+0x17fea]        # 228e4 <this_node>
    a8fa:	mov    r9d,DWORD PTR [rsp+0x4]
    a8ff:	cmp    ebp,eax
    a901:	mov    r8d,DWORD PTR [rsp+0x8]
    a906:	mov    edx,eax
    a908:	je     a888 <w_parallel+0x148>
    a90e:	cmp    esi,eax
    a910:	jne    a888 <w_parallel+0x148>
    a916:	mov    ecx,r8d
    a919:	mov    edx,r9d
    a91c:	mov    esi,ebx
    a91e:	mov    edi,r13d
    a921:	mov    WORD PTR [rsp+0x54],r9w
    a927:	add    r14d,0x1
    a92b:	mov    WORD PTR [rsp+0x56],r8w
    a931:	mov    WORD PTR [rsp+0x50],r13w
    a937:	mov    WORD PTR [rsp+0x52],bx
    a93c:	call   3b10 <node_index>
    a941:	mov    ecx,0x48
    a946:	lea    r8,[rsp+0x50]
    a94b:	mov    edx,ebp
    a94d:	movsxd rsi,eax
    a950:	lea    rax,[rsp+0x58]
    a955:	shl    rsi,0xb
    a959:	add    rsi,QWORD PTR [rip+0x17e68]        # 227c8 <lattice>
    a960:	mov    rdi,rax
    a963:	add    rsi,0x70
    a967:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    a96a:	mov    esi,0x248
    a96f:	mov    rdi,r8
    a972:	call   19380 <send_field>
    a977:	mov    eax,DWORD PTR [rip+0x17b83]        # 22500 <sites_on_node>
    a97d:	cmp    r14d,eax
    a980:	jl     a8a3 <w_parallel+0x163>
    a986:	add    ebp,0x1
    a989:	cmp    DWORD PTR [rip+0x17ced],ebp        # 2267c <number_of_nodes>
    a98f:	jg     a874 <w_parallel+0x134>
    a995:	xor    eax,eax
    a997:	call   193d0 <g_sync>
    a99c:	add    DWORD PTR [rsp+0x30],0x1000
    a9a4:	mov    eax,DWORD PTR [rsp+0xc]
    a9a8:	cmp    DWORD PTR [rip+0x17b52],eax        # 22500 <sites_on_node>
    a9ae:	jg     a84d <w_parallel+0x10d>
    a9b4:	mov    rdi,QWORD PTR [rsp+0x20]
    a9b9:	call   22a0 <free@plt>
    a9be:	mov    rbx,QWORD PTR [rsp+0x18]
    a9c3:	lea    rdi,[rbx+0x30]
    a9c7:	call   19450 <g_xor32>
    a9cc:	lea    rdi,[rbx+0x2c]
    a9d0:	call   19450 <g_xor32>
    a9d5:	mov    ecx,DWORD PTR [rip+0x17f09]        # 228e4 <this_node>
    a9db:	test   ecx,ecx
    a9dd:	je     accc <w_parallel+0x58c>
    a9e3:	mov    rax,QWORD PTR [rsp+0x2a8]
    a9eb:	xor    rax,QWORD PTR fs:0x28
    a9f4:	jne    ad81 <w_parallel+0x641>
    a9fa:	add    rsp,0x2b8
    aa01:	pop    rbx
    aa02:	pop    rbp
    aa03:	pop    r12
    aa05:	pop    r13
    aa07:	pop    r14
    aa09:	pop    r15
    aa0b:	ret    
    aa0c:	cmp    ebp,edx
    aa0e:	je     ac4f <w_parallel+0x50f>
    aa14:	lea    rdi,[rsp+0x50]
    aa19:	mov    esi,0x248
    aa1e:	call   19390 <get_field>
    aa23:	movsx  r9d,WORD PTR [rsp+0x56]
    aa29:	movsx  eax,WORD PTR [rsp+0x54]
    aa2e:	lea    rsi,[rsp+0x58]
    aa33:	imul   r9d,DWORD PTR [rip+0x17999]        # 223d4 <nz>
    aa3b:	add    r9d,eax
    aa3e:	imul   r9d,DWORD PTR [rip+0x17df6]        # 2283c <ny>
    aa46:	movsx  eax,WORD PTR [rsp+0x52]
    aa4b:	add    r9d,eax
    aa4e:	imul   r9d,DWORD PTR [rip+0x17982]        # 223d8 <nx>
    aa56:	movsx  eax,WORD PTR [rsp+0x50]
    aa5b:	add    r9d,eax
    aa5e:	mov    eax,r9d
    aa61:	cdq    
    aa62:	idiv   DWORD PTR [rip+0x17a98]        # 22500 <sites_on_node>
    aa68:	mov    ecx,edx
    aa6a:	sar    ecx,0x1f
    aa6d:	shr    ecx,0x14
    aa70:	lea    eax,[rdx+rcx*1]
    aa73:	and    eax,0xfff
    aa78:	sub    eax,ecx
    aa7a:	shl    eax,0x2
    aa7d:	cdqe   
    aa7f:	lea    r8,[rax+rax*8]
    aa83:	mov    rax,QWORD PTR [rsp+0x58]
    aa88:	shl    r8,0x4
    aa8c:	add    r8,QWORD PTR [rsp+0x20]
    aa91:	mov    QWORD PTR [r8],rax
    aa94:	mov    rax,QWORD PTR [rsp+0x290]
    aa9c:	lea    rdi,[r8+0x8]
    aaa0:	and    rdi,0xfffffffffffffff8
    aaa4:	mov    QWORD PTR [r8+0x238],rax
    aaab:	mov    rax,r8
    aaae:	sub    rax,rdi
    aab1:	lea    ecx,[rax+0x240]
    aab7:	sub    rsi,rax
    aaba:	shr    ecx,0x3
    aabd:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    aac0:	lea    ecx,[r9+r9*8]
    aac4:	shl    ecx,0x4
    aac7:	movsxd rax,ecx
    aaca:	mov    esi,ecx
    aacc:	lea    r11,[r8+0x240]
    aad3:	mov    edi,ecx
    aad5:	imul   rdx,rax,0xffffffff8d3dcb09
    aadc:	sar    esi,0x1f
    aadf:	imul   rax,rax,0xffffffff84210843
    aae6:	shr    rdx,0x20
    aaea:	add    edx,ecx
    aaec:	shr    rax,0x20
    aaf0:	sar    edx,0x4
    aaf3:	add    eax,ecx
    aaf5:	sub    edx,esi
    aaf7:	sar    eax,0x4
    aafa:	imul   edx,edx,0x1d
    aafd:	sub    eax,esi
    aaff:	mov    esi,eax
    ab01:	shl    esi,0x5
    ab04:	sub    edi,edx
    ab06:	sub    esi,eax
    ab08:	mov    edx,edi
    ab0a:	mov    rdi,QWORD PTR [rsp+0x18]
    ab0f:	sub    ecx,esi
    ab11:	mov    eax,ecx
    ab13:	mov    r9d,DWORD PTR [rdi+0x30]
    ab17:	mov    edi,DWORD PTR [rdi+0x2c]
    ab1a:	nop    WORD PTR [rax+rax*1+0x0]
    ab20:	mov    esi,DWORD PTR [r8]
    ab23:	mov    ecx,edx
    ab25:	add    edx,0x1
    ab28:	mov    ebx,esi
    ab2a:	rol    ebx,cl
    ab2c:	mov    ecx,eax
    ab2e:	rol    esi,cl
    ab30:	xor    r9d,ebx
    ab33:	xor    edi,esi
    ab35:	cmp    edx,0x1d
    ab38:	cmove  edx,r15d
    ab3c:	add    eax,0x1
    ab3f:	cmp    eax,0x1f
    ab42:	cmove  eax,r15d
    ab46:	add    r8,0x4
    ab4a:	cmp    r8,r11
    ab4d:	jne    ab20 <w_parallel+0x3e0>
    ab4f:	mov    rax,QWORD PTR [rsp+0x18]
    ab54:	add    DWORD PTR [rsp+0x14],0x1
    ab59:	mov    DWORD PTR [rax+0x30],r9d
    ab5d:	mov    DWORD PTR [rax+0x2c],edi
    ab60:	mov    eax,DWORD PTR [rsp+0x14]
    ab64:	cmp    eax,0x1000
    ab69:	je     ab7d <w_parallel+0x43d>
    ab6b:	mov    eax,DWORD PTR [rip+0x1798f]        # 22500 <sites_on_node>
    ab71:	lea    edx,[rax-0x1]
    ab74:	cmp    edx,r14d
    ab77:	jne    a896 <w_parallel+0x156>
    ab7d:	movsxd rdx,DWORD PTR [rsp+0x14]
    ab82:	mov    rcx,QWORD PTR [rsp+0x28]
    ab87:	mov    esi,0x240
    ab8c:	mov    rdi,QWORD PTR [rsp+0x20]
    ab91:	mov    rbx,rdx
    ab94:	call   19d70 <g_write>
    ab99:	cmp    ebx,eax
    ab9b:	je     abe5 <w_parallel+0x4a5>
    ab9d:	call   22c0 <__errno_location@plt>
    aba2:	mov    rdi,QWORD PTR [rsp+0x18]
    aba7:	mov    ecx,DWORD PTR [rip+0x17d37]        # 228e4 <this_node>
    abad:	lea    rdx,[rsp+0x29d]
    abb5:	mov    r8d,DWORD PTR [rax]
    abb8:	lea    rsi,[rip+0x11211]        # 1bdd0 <_IO_stdin_used+0x1dd0>
    abbf:	xor    eax,eax
    abc1:	mov    r9,QWORD PTR [rdi+0x10]
    abc5:	mov    edi,0x1
    abca:	call   2470 <__printf_chk@plt>
    abcf:	mov    rdi,QWORD PTR [rip+0x1770a]        # 222e0 <stdout@@GLIBC_2.2.5>
    abd6:	call   2420 <fflush@plt>
    abdb:	mov    edi,0x1
    abe0:	call   19570 <terminate>
    abe5:	mov    rdx,QWORD PTR [rsp+0x38]
    abea:	nop    WORD PTR [rax+rax*1+0x0]
    abf0:	lea    rax,[rdx-0x90]
    abf7:	mov    QWORD PTR [rax+0x8],0x0
    abff:	add    rax,0x30
    ac03:	mov    QWORD PTR [rax-0x30],0x0
    ac0b:	mov    QWORD PTR [rax-0x18],0x0
    ac13:	mov    QWORD PTR [rax-0x20],0x0
    ac1b:	mov    QWORD PTR [rax-0x8],0x0
    ac23:	mov    QWORD PTR [rax-0x10],0x0
    ac2b:	cmp    rdx,rax
    ac2e:	jne    abf7 <w_parallel+0x4b7>
    ac30:	add    rdx,0x90
    ac37:	cmp    r12,rdx
    ac3a:	jne    abf0 <w_parallel+0x4b0>
    ac3c:	mov    DWORD PTR [rsp+0x14],0x0
    ac44:	mov    eax,DWORD PTR [rip+0x178b6]        # 22500 <sites_on_node>
    ac4a:	jmp    a896 <w_parallel+0x156>
    ac4f:	mov    ecx,r8d
    ac52:	mov    edx,r9d
    ac55:	mov    esi,ebx
    ac57:	mov    edi,r13d
    ac5a:	call   3b10 <node_index>
    ac5f:	mov    edi,DWORD PTR [rsp+0x14]
    ac63:	cdqe   
    ac65:	lea    edx,[rdi*4+0x0]
    ac6c:	shl    rax,0xb
    ac70:	add    rax,QWORD PTR [rip+0x17b51]        # 227c8 <lattice>
    ac77:	movsxd rdx,edx
    ac7a:	lea    rsi,[rax+0x70]
    ac7e:	lea    r8,[rdx+rdx*8]
    ac82:	mov    rdx,QWORD PTR [rax+0x70]
    ac86:	shl    r8,0x4
    ac8a:	add    r8,QWORD PTR [rsp+0x20]
    ac8f:	mov    QWORD PTR [r8],rdx
    ac92:	mov    rax,QWORD PTR [rax+0x2a8]
    ac99:	lea    rdi,[r8+0x8]
    ac9d:	and    rdi,0xfffffffffffffff8
    aca1:	mov    QWORD PTR [r8+0x238],rax
    aca8:	mov    rax,r8
    acab:	sub    rax,rdi
    acae:	lea    ecx,[rax+0x240]
    acb4:	sub    rsi,rax
    acb7:	shr    ecx,0x3
    acba:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    acbd:	mov    eax,DWORD PTR [rsp+0x10]
    acc1:	lea    ecx,[rax+rax*8]
    acc4:	shl    ecx,0x4
    acc7:	jmp    aac7 <w_parallel+0x387>
    accc:	mov    rsi,QWORD PTR [rsp+0x48]
    acd1:	mov    rdi,QWORD PTR [rsp+0x28]
    acd6:	xor    edx,edx
    acd8:	call   19d50 <g_seek>
    acdd:	test   eax,eax
    acdf:	js     ad2a <w_parallel+0x5ea>
    ace1:	mov    rbx,QWORD PTR [rsp+0x18]
    ace6:	mov    edi,0x1
    aceb:	mov    rsi,rbx
    acee:	call   7ed0 <write_checksum>
    acf3:	mov    rdx,QWORD PTR [rbx+0x10]
    acf7:	mov    edi,0x1
    acfc:	xor    eax,eax
    acfe:	lea    rsi,[rip+0x11143]        # 1be48 <_IO_stdin_used+0x1e48>
    ad05:	call   2470 <__printf_chk@plt>
    ad0a:	mov    rdx,QWORD PTR [rbx+0x8]
    ad0e:	mov    edi,0x1
    ad13:	xor    eax,eax
    ad15:	lea    rsi,[rip+0x10234]        # 1af50 <_IO_stdin_used+0xf50>
    ad1c:	add    rdx,0x4
    ad20:	call   2470 <__printf_chk@plt>
    ad25:	jmp    a9e3 <w_parallel+0x2a3>
    ad2a:	call   22c0 <__errno_location@plt>
    ad2f:	lea    rdx,[rsp+0x29d]
    ad37:	sub    rsp,0x8
    ad3b:	mov    ecx,DWORD PTR [rip+0x17ba3]        # 228e4 <this_node>
    ad41:	mov    rdi,QWORD PTR [rsp+0x20]
    ad46:	mov    r9d,DWORD PTR [rax]
    ad49:	lea    rsi,[rip+0x110b8]        # 1be08 <_IO_stdin_used+0x1e08>
    ad50:	xor    eax,eax
    ad52:	push   QWORD PTR [rdi+0x10]
    ad55:	mov    r8,QWORD PTR [rsp+0x58]
    ad5a:	mov    edi,0x1
    ad5f:	call   2470 <__printf_chk@plt>
    ad64:	mov    rdi,QWORD PTR [rip+0x17575]        # 222e0 <stdout@@GLIBC_2.2.5>
    ad6b:	call   2420 <fflush@plt>
    ad70:	mov    edi,0x1
    ad75:	call   19570 <terminate>
    ad7a:	pop    rax
    ad7b:	pop    rdx
    ad7c:	jmp    ace1 <w_parallel+0x5a1>
    ad81:	call   2350 <__stack_chk_fail@plt>
    ad86:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ad90 <w_checkpoint>:
    ad90:	endbr64 
    ad94:	push   r15
    ad96:	mov    r15,rdi
    ad99:	push   r14
    ad9b:	xor    r14d,r14d
    ad9e:	push   r13
    ada0:	push   r12
    ada2:	xor    r12d,r12d
    ada5:	push   rbp
    ada6:	push   rbx
    ada7:	sub    rsp,0x38
    adab:	mov    rax,QWORD PTR fs:0x28
    adb4:	mov    QWORD PTR [rsp+0x28],rax
    adb9:	xor    eax,eax
    adbb:	lea    rsi,[rsp+0x10]
    adc0:	mov    DWORD PTR [rsp+0x23],0x746e696f
    adc8:	movabs rax,0x706b636568635f77
    add2:	mov    QWORD PTR [rsp+0x1b],rax
    add7:	mov    rax,QWORD PTR [rdi]
    adda:	mov    BYTE PTR [rsp+0x27],0x0
    addf:	mov    QWORD PTR [rsp+0x8],rax
    ade4:	call   a5b0 <w_parallel_setup>
    ade9:	movsxd rdx,DWORD PTR [rip+0x17710]        # 22500 <sites_on_node>
    adf0:	mov    QWORD PTR [r15+0x2c],0x0
    adf8:	xor    r10d,r10d
    adfb:	mov    r13,rax
    adfe:	movsxd rax,DWORD PTR [rip+0x17adf]        # 228e4 <this_node>
    ae05:	mov    r9,rdx
    ae08:	imul   rax,rdx
    ae0c:	movabs rdx,0x1a7b9611a7b9611b
    ae16:	lea    rbx,[rax+rax*8]
    ae1a:	shl    rbx,0x4
    ae1e:	mov    rax,rbx
    ae21:	mov    ebp,ebx
    ae23:	mul    rdx
    ae26:	mov    rax,rbx
    ae29:	sub    rax,rdx
    ae2c:	shr    rax,1
    ae2f:	add    rax,rdx
    ae32:	shr    rax,0x4
    ae36:	lea    rdx,[rax*8+0x0]
    ae3e:	sub    rdx,rax
    ae41:	lea    rax,[rax+rdx*4]
    ae45:	movabs rdx,0x842108421084211
    ae4f:	sub    ebp,eax
    ae51:	mov    rax,rbx
    ae54:	mul    rdx
    ae57:	mov    rax,rbx
    ae5a:	sub    rax,rdx
    ae5d:	shr    rax,1
    ae60:	add    rax,rdx
    ae63:	shr    rax,0x4
    ae67:	mov    rdx,rax
    ae6a:	shl    rdx,0x5
    ae6e:	sub    rdx,rax
    ae71:	sub    ebx,edx
    ae73:	test   r9d,r9d
    ae76:	jle    af43 <w_checkpoint+0x1b3>
    ae7c:	lea    eax,[r14*4+0x0]
    ae84:	cdqe   
    ae86:	lea    rdx,[rax+rax*8]
    ae8a:	mov    rax,r10
    ae8d:	shl    rax,0xb
    ae91:	add    rax,QWORD PTR [rip+0x17930]        # 227c8 <lattice>
    ae98:	shl    rdx,0x4
    ae9c:	mov    rcx,QWORD PTR [rax+0x70]
    aea0:	add    rdx,r13
    aea3:	lea    rsi,[rax+0x70]
    aea7:	lea    rdi,[rdx+0x8]
    aeab:	lea    r11,[rdx+0x240]
    aeb2:	mov    QWORD PTR [rdx],rcx
    aeb5:	mov    rax,QWORD PTR [rax+0x2a8]
    aebc:	and    rdi,0xfffffffffffffff8
    aec0:	mov    QWORD PTR [rdx+0x238],rax
    aec7:	mov    rax,rdx
    aeca:	sub    rax,rdi
    aecd:	sub    rsi,rax
    aed0:	add    eax,0x240
    aed5:	shr    eax,0x3
    aed8:	mov    ecx,eax
    aeda:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    aedd:	mov    edi,DWORD PTR [r15+0x30]
    aee1:	mov    esi,DWORD PTR [r15+0x2c]
    aee5:	nop    DWORD PTR [rax]
    aee8:	mov    eax,DWORD PTR [rdx]
    aeea:	mov    ecx,ebp
    aeec:	add    ebp,0x1
    aeef:	mov    r8d,eax
    aef2:	rol    r8d,cl
    aef5:	mov    ecx,ebx
    aef7:	rol    eax,cl
    aef9:	xor    edi,r8d
    aefc:	xor    esi,eax
    aefe:	cmp    ebp,0x1d
    af01:	cmove  ebp,r12d
    af05:	add    ebx,0x1
    af08:	cmp    ebx,0x1f
    af0b:	cmove  ebx,r12d
    af0f:	add    rdx,0x4
    af13:	cmp    rdx,r11
    af16:	jne    aee8 <w_checkpoint+0x158>
    af18:	add    r14d,0x1
    af1c:	mov    DWORD PTR [r15+0x30],edi
    af20:	mov    DWORD PTR [r15+0x2c],esi
    af24:	cmp    r14d,0x1000
    af2b:	je     af8e <w_checkpoint+0x1fe>
    af2d:	lea    eax,[r9-0x1]
    af31:	cmp    eax,r10d
    af34:	je     af8e <w_checkpoint+0x1fe>
    af36:	add    r10,0x1
    af3a:	cmp    r9d,r10d
    af3d:	jg     ae7c <w_checkpoint+0xec>
    af43:	mov    rdi,r13
    af46:	call   22a0 <free@plt>
    af4b:	lea    rdi,[r15+0x30]
    af4f:	call   19450 <g_xor32>
    af54:	lea    rdi,[r15+0x2c]
    af58:	call   19450 <g_xor32>
    af5d:	mov    ecx,DWORD PTR [rip+0x17981]        # 228e4 <this_node>
    af63:	test   ecx,ecx
    af65:	je     b01e <w_checkpoint+0x28e>
    af6b:	mov    rax,QWORD PTR [rsp+0x28]
    af70:	xor    rax,QWORD PTR fs:0x28
    af79:	jne    b0c7 <w_checkpoint+0x337>
    af7f:	add    rsp,0x38
    af83:	pop    rbx
    af84:	pop    rbp
    af85:	pop    r12
    af87:	pop    r13
    af89:	pop    r14
    af8b:	pop    r15
    af8d:	ret    
    af8e:	mov    rdi,QWORD PTR [rip+0x1734b]        # 222e0 <stdout@@GLIBC_2.2.5>
    af95:	mov    QWORD PTR [rsp],r10
    af99:	call   2420 <fflush@plt>
    af9e:	mov    rcx,QWORD PTR [rsp+0x8]
    afa3:	movsxd rdx,r14d
    afa6:	mov    rdi,r13
    afa9:	mov    esi,0x240
    afae:	call   19d70 <g_write>
    afb3:	mov    r10,QWORD PTR [rsp]
    afb7:	cmp    r14d,eax
    afba:	je     b00f <w_checkpoint+0x27f>
    afbc:	call   22c0 <__errno_location@plt>
    afc1:	mov    r9,QWORD PTR [r15+0x10]
    afc5:	xor    r14d,r14d
    afc8:	mov    ecx,DWORD PTR [rip+0x17916]        # 228e4 <this_node>
    afce:	mov    r8d,DWORD PTR [rax]
    afd1:	lea    rdx,[rsp+0x1b]
    afd6:	lea    rsi,[rip+0x10df3]        # 1bdd0 <_IO_stdin_used+0x1dd0>
    afdd:	xor    eax,eax
    afdf:	mov    edi,0x1
    afe4:	call   2470 <__printf_chk@plt>
    afe9:	mov    rdi,QWORD PTR [rip+0x172f0]        # 222e0 <stdout@@GLIBC_2.2.5>
    aff0:	call   2420 <fflush@plt>
    aff5:	mov    edi,0x1
    affa:	call   19570 <terminate>
    afff:	mov    r9d,DWORD PTR [rip+0x174fa]        # 22500 <sites_on_node>
    b006:	mov    r10,QWORD PTR [rsp]
    b00a:	jmp    af36 <w_checkpoint+0x1a6>
    b00f:	mov    r9d,DWORD PTR [rip+0x174ea]        # 22500 <sites_on_node>
    b016:	xor    r14d,r14d
    b019:	jmp    af36 <w_checkpoint+0x1a6>
    b01e:	mov    rsi,QWORD PTR [rsp+0x10]
    b023:	mov    rdi,QWORD PTR [rsp+0x8]
    b028:	xor    edx,edx
    b02a:	call   19d50 <g_seek>
    b02f:	test   eax,eax
    b031:	js     b077 <w_checkpoint+0x2e7>
    b033:	mov    rsi,r15
    b036:	mov    edi,0x1
    b03b:	call   7ed0 <write_checksum>
    b040:	mov    rdx,QWORD PTR [r15+0x10]
    b044:	mov    edi,0x1
    b049:	xor    eax,eax
    b04b:	lea    rsi,[rip+0x10e36]        # 1be88 <_IO_stdin_used+0x1e88>
    b052:	call   2470 <__printf_chk@plt>
    b057:	mov    rdx,QWORD PTR [r15+0x8]
    b05b:	mov    edi,0x1
    b060:	xor    eax,eax
    b062:	lea    rsi,[rip+0xfee7]        # 1af50 <_IO_stdin_used+0xf50>
    b069:	add    rdx,0x4
    b06d:	call   2470 <__printf_chk@plt>
    b072:	jmp    af6b <w_checkpoint+0x1db>
    b077:	call   22c0 <__errno_location@plt>
    b07c:	lea    rdx,[rsp+0x1b]
    b081:	sub    rsp,0x8
    b085:	push   QWORD PTR [r15+0x10]
    b089:	mov    r9d,DWORD PTR [rax]
    b08c:	lea    rsi,[rip+0x10d75]        # 1be08 <_IO_stdin_used+0x1e08>
    b093:	mov    edi,0x1
    b098:	xor    eax,eax
    b09a:	mov    r8,QWORD PTR [rsp+0x20]
    b09f:	mov    ecx,DWORD PTR [rip+0x1783f]        # 228e4 <this_node>
    b0a5:	call   2470 <__printf_chk@plt>
    b0aa:	mov    rdi,QWORD PTR [rip+0x1722f]        # 222e0 <stdout@@GLIBC_2.2.5>
    b0b1:	call   2420 <fflush@plt>
    b0b6:	mov    edi,0x1
    b0bb:	call   19570 <terminate>
    b0c0:	pop    rax
    b0c1:	pop    rdx
    b0c2:	jmp    b033 <w_checkpoint+0x2a3>
    b0c7:	call   2350 <__stack_chk_fail@plt>
    b0cc:	nop    DWORD PTR [rax+0x0]

000000000000b0d0 <w_parallel_f>:
    b0d0:	endbr64 
    b0d4:	push   rbp
    b0d5:	xor    eax,eax
    b0d7:	mov    rbp,rdi
    b0da:	call   193d0 <g_sync>
    b0df:	mov    rdi,QWORD PTR [rbp+0x0]
    b0e3:	test   rdi,rdi
    b0e6:	je     b0fc <w_parallel_f+0x2c>
    b0e8:	mov    edx,DWORD PTR [rbp+0x28]
    b0eb:	test   edx,edx
    b0ed:	je     b110 <w_parallel_f+0x40>
    b0ef:	call   19db0 <g_close>
    b0f4:	mov    QWORD PTR [rbp+0x0],0x0
    b0fc:	mov    eax,DWORD PTR [rip+0x177e2]        # 228e4 <this_node>
    b102:	test   eax,eax
    b104:	je     b128 <w_parallel_f+0x58>
    b106:	pop    rbp
    b107:	ret    
    b108:	nop    DWORD PTR [rax+rax*1+0x0]
    b110:	lea    rdi,[rip+0x10da1]        # 1beb8 <_IO_stdin_used+0x1eb8>
    b117:	call   22f0 <puts@plt>
    b11c:	mov    rdi,QWORD PTR [rbp+0x0]
    b120:	jmp    b0ef <w_parallel_f+0x1f>
    b122:	nop    WORD PTR [rax+rax*1+0x0]
    b128:	mov    rdi,rbp
    b12b:	pop    rbp
    b12c:	jmp    77c0 <write_gauge_info_file>
    b131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    b13c:	nop    DWORD PTR [rax+0x0]

000000000000b140 <r_parallel_i>:
    b140:	endbr64 
    b144:	push   r13
    b146:	mov    r13,rdi
    b149:	push   r12
    b14b:	push   rbp
    b14c:	push   rbx
    b14d:	sub    rsp,0x18
    b151:	mov    rax,QWORD PTR fs:0x28
    b15a:	mov    QWORD PTR [rsp+0x8],rax
    b15f:	xor    eax,eax
    b161:	call   79c0 <setup_input_gauge_file>
    b166:	lea    rsi,[rip+0xffc9]        # 1b136 <_IO_stdin_used+0x1136>
    b16d:	mov    rdi,r13
    b170:	mov    DWORD PTR [rax+0x28],0x1
    b177:	mov    rbp,QWORD PTR [rax+0x8]
    b17b:	mov    r12,rax
    b17e:	call   19c00 <g_open>
    b183:	mov    rbx,rax
    b186:	test   rax,rax
    b189:	je     b220 <r_parallel_i+0xe0>
    b18f:	mov    edx,DWORD PTR [rip+0x1774f]        # 228e4 <this_node>
    b195:	mov    QWORD PTR [r12],rbx
    b199:	test   edx,edx
    b19b:	je     b1f8 <r_parallel_i+0xb8>
    b19d:	lea    rdi,[rsp+0x4]
    b1a2:	mov    esi,0x4
    b1a7:	call   194c0 <broadcast_bytes>
    b1ac:	mov    eax,DWORD PTR [rsp+0x4]
    b1b0:	mov    esi,0x5c
    b1b5:	mov    rdi,rbp
    b1b8:	mov    DWORD PTR [r12+0x18],eax
    b1bd:	call   194c0 <broadcast_bytes>
    b1c2:	mov    rax,QWORD PTR [r12+0x8]
    b1c7:	mov    eax,DWORD PTR [rax+0x58]
    b1ca:	test   eax,eax
    b1cc:	jne    b210 <r_parallel_i+0xd0>
    b1ce:	mov    QWORD PTR [r12+0x20],0x0
    b1d7:	mov    rax,QWORD PTR [rsp+0x8]
    b1dc:	xor    rax,QWORD PTR fs:0x28
    b1e5:	jne    b25f <r_parallel_i+0x11f>
    b1e7:	add    rsp,0x18
    b1eb:	mov    rax,r12
    b1ee:	pop    rbx
    b1ef:	pop    rbp
    b1f0:	pop    r12
    b1f2:	pop    r13
    b1f4:	ret    
    b1f5:	nop    DWORD PTR [rax]
    b1f8:	mov    esi,0x1
    b1fd:	mov    rdi,r12
    b200:	call   8fa0 <read_gauge_hdr>
    b205:	mov    DWORD PTR [rsp+0x4],eax
    b209:	jmp    b19d <r_parallel_i+0x5d>
    b20b:	nop    DWORD PTR [rax+rax*1+0x0]
    b210:	mov    rsi,r12
    b213:	mov    edi,0x1
    b218:	call   6ad0 <read_site_list.part.0>
    b21d:	jmp    b1d7 <r_parallel_i+0x97>
    b21f:	nop
    b220:	call   22c0 <__errno_location@plt>
    b225:	mov    edx,DWORD PTR [rip+0x176b9]        # 228e4 <this_node>
    b22b:	mov    rcx,r13
    b22e:	lea    rsi,[rip+0x10cbb]        # 1bef0 <_IO_stdin_used+0x1ef0>
    b235:	mov    r8d,DWORD PTR [rax]
    b238:	mov    edi,0x1
    b23d:	xor    eax,eax
    b23f:	call   2470 <__printf_chk@plt>
    b244:	mov    rdi,QWORD PTR [rip+0x17095]        # 222e0 <stdout@@GLIBC_2.2.5>
    b24b:	call   2420 <fflush@plt>
    b250:	mov    edi,0x1
    b255:	call   19570 <terminate>
    b25a:	jmp    b18f <r_parallel_i+0x4f>
    b25f:	call   2350 <__stack_chk_fail@plt>
    b264:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    b26f:	nop

000000000000b270 <r_parallel>:
    b270:	endbr64 
    b274:	push   r15
    b276:	mov    r15,rdi
    b279:	push   r14
    b27b:	push   r13
    b27d:	push   r12
    b27f:	push   rbp
    b280:	push   rbx
    b281:	mov    ebx,0x6c65
    b286:	sub    rsp,0x2e8
    b28d:	mov    ebp,DWORD PTR [rdi+0x28]
    b290:	mov    rax,QWORD PTR fs:0x28
    b299:	mov    QWORD PTR [rsp+0x2d8],rax
    b2a1:	xor    eax,eax
    b2a3:	mov    WORD PTR [rsp+0x2d5],bx
    b2ab:	movabs rax,0x6c6c617261705f72
    b2b5:	mov    QWORD PTR [rsp+0x2cd],rax
    b2bd:	mov    rax,QWORD PTR [rdi]
    b2c0:	mov    BYTE PTR [rsp+0x2d7],0x0
    b2c8:	mov    QWORD PTR [rsp+0x40],rax
    b2cd:	mov    rax,QWORD PTR [rdi+0x8]
    b2d1:	mov    QWORD PTR [rsp+0x50],rax
    b2d6:	mov    rax,QWORD PTR [rdi+0x10]
    b2da:	mov    QWORD PTR [rsp+0x48],rax
    b2df:	test   ebp,ebp
    b2e1:	je     b945 <r_parallel+0x6d5>
    b2e7:	mov    esi,0x90
    b2ec:	mov    edi,0x4000
    b2f1:	call   23d0 <calloc@plt>
    b2f6:	mov    QWORD PTR [rsp+0x30],rax
    b2fb:	test   rax,rax
    b2fe:	je     ba7e <r_parallel+0x80e>
    b304:	mov    eax,DWORD PTR [rip+0x171f6]        # 22500 <sites_on_node>
    b30a:	shl    eax,0x2
    b30d:	cdqe   
    b30f:	lea    rdx,[rax+rax*8]
    b313:	mov    rax,QWORD PTR [rsp+0x50]
    b318:	shl    rdx,0x4
    b31c:	mov    rcx,rdx
    b31f:	mov    edx,DWORD PTR [rax]
    b321:	mov    eax,0x8
    b326:	cmp    edx,0x4e87
    b32c:	je     b33d <r_parallel+0xcd>
    b32e:	xor    eax,eax
    b330:	cmp    edx,0xd12a
    b336:	sete   al
    b339:	shl    rax,0x2
    b33d:	mov    rsi,QWORD PTR [r15+0x8]
    b341:	xor    edx,edx
    b343:	mov    r11d,DWORD PTR [rsi+0x58]
    b347:	test   r11d,r11d
    b34a:	je     b357 <r_parallel+0xe7>
    b34c:	movsxd rdx,DWORD PTR [rip+0x1709d]        # 223f0 <volume>
    b353:	shl    rdx,0x2
    b357:	movsxd rsi,DWORD PTR [rsi+0x54]
    b35b:	mov    rdi,QWORD PTR [rsp+0x40]
    b360:	lea    rbx,[rsi+rdx*1]
    b364:	movsxd rdx,DWORD PTR [rip+0x17579]        # 228e4 <this_node>
    b36b:	add    rax,rbx
    b36e:	mov    QWORD PTR [rsp+0x68],rbx
    b373:	imul   rdx,rcx
    b377:	add    rax,rdx
    b37a:	xor    edx,edx
    b37c:	mov    rsi,rax
    b37f:	mov    QWORD PTR [rsp+0x60],rax
    b384:	call   19d50 <g_seek>
    b389:	test   eax,eax
    b38b:	js     b99b <r_parallel+0x72b>
    b391:	movsxd rdx,DWORD PTR [rip+0x1754c]        # 228e4 <this_node>
    b398:	movsxd rax,DWORD PTR [rip+0x17161]        # 22500 <sites_on_node>
    b39f:	mov    QWORD PTR [rsp+0x78],0x0
    b3a8:	imul   rax,rdx
    b3ac:	movabs rdx,0x1a7b9611a7b9611b
    b3b6:	lea    rcx,[rax+rax*8]
    b3ba:	shl    rcx,0x4
    b3be:	mov    rax,rcx
    b3c1:	mov    r13d,ecx
    b3c4:	mov    r14d,ecx
    b3c7:	mul    rdx
    b3ca:	mov    rax,rcx
    b3cd:	sub    rax,rdx
    b3d0:	shr    rax,1
    b3d3:	add    rax,rdx
    b3d6:	shr    rax,0x4
    b3da:	lea    rdx,[rax*8+0x0]
    b3e2:	sub    rdx,rax
    b3e5:	lea    rax,[rax+rdx*4]
    b3e9:	movabs rdx,0x842108421084211
    b3f3:	sub    r13d,eax
    b3f6:	mov    rax,rcx
    b3f9:	mul    rdx
    b3fc:	mov    rax,rcx
    b3ff:	sub    rax,rdx
    b402:	shr    rax,1
    b405:	add    rax,rdx
    b408:	shr    rax,0x4
    b40c:	mov    rdx,rax
    b40f:	shl    rdx,0x5
    b413:	sub    rdx,rax
    b416:	xor    eax,eax
    b418:	sub    r14d,edx
    b41b:	call   193d0 <g_sync>
    b420:	mov    r8d,DWORD PTR [rip+0x170d9]        # 22500 <sites_on_node>
    b427:	test   r8d,r8d
    b42a:	jle    b591 <r_parallel+0x321>
    b430:	mov    DWORD PTR [rsp+0x20],0x0
    b438:	mov    ebp,r13d
    b43b:	xor    r12d,r12d
    b43e:	mov    r13d,r14d
    b441:	mov    DWORD PTR [rsp+0x14],0x0
    b449:	mov    r14,r15
    b44c:	mov    DWORD PTR [rsp+0x38],0x0
    b454:	mov    DWORD PTR [rsp+0x3c],0x0
    b45c:	mov    eax,DWORD PTR [rsp+0x14]
    b460:	mov    edx,DWORD PTR [rip+0x17216]        # 2267c <number_of_nodes>
    b466:	xor    r15d,r15d
    b469:	mov    r11d,DWORD PTR [rip+0x17090]        # 22500 <sites_on_node>
    b470:	mov    DWORD PTR [rsp+0x24],eax
    b474:	add    eax,0x4
    b477:	mov    DWORD PTR [rsp+0x14],eax
    b47b:	lea    rax,[rsp+0x80]
    b483:	mov    QWORD PTR [rsp+0x28],rax
    b488:	test   edx,edx
    b48a:	jle    b572 <r_parallel+0x302>
    b490:	mov    rbx,r14
    b493:	mov    r14d,r15d
    b496:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b4a0:	lea    rax,[rsp+0x88]
    b4a8:	mov    r15d,DWORD PTR [rsp+0x24]
    b4ad:	mov    QWORD PTR [rsp+0x18],rax
    b4b2:	cmp    r11d,DWORD PTR [rsp+0x20]
    b4b7:	jle    b55e <r_parallel+0x2ee>
    b4bd:	mov    DWORD PTR [rsp],r14d
    b4c1:	mov    rdx,QWORD PTR [rbx+0x8]
    b4c5:	imul   r11d,DWORD PTR [rsp]
    b4ca:	mov    edi,DWORD PTR [rdx+0x58]
    b4cd:	lea    eax,[r11+r15*1]
    b4d1:	test   edi,edi
    b4d3:	je     b4de <r_parallel+0x26e>
    b4d5:	mov    rdx,QWORD PTR [rbx+0x20]
    b4d9:	cdqe   
    b4db:	mov    eax,DWORD PTR [rdx+rax*4]
    b4de:	cdq    
    b4df:	idiv   DWORD PTR [rip+0x16ef3]        # 223d8 <nx>
    b4e5:	mov    r11d,edx
    b4e8:	cdq    
    b4e9:	idiv   DWORD PTR [rip+0x1734d]        # 2283c <ny>
    b4ef:	mov    DWORD PTR [rsp+0x8],r11d
    b4f4:	mov    edi,r11d
    b4f7:	mov    DWORD PTR [rsp+0x4],edx
    b4fb:	cdq    
    b4fc:	mov    esi,DWORD PTR [rsp+0x4]
    b500:	idiv   DWORD PTR [rip+0x16ece]        # 223d4 <nz>
    b506:	mov    DWORD PTR [rsp+0x10],edx
    b50a:	cdq    
    b50b:	idiv   DWORD PTR [rip+0x16ebf]        # 223d0 <nt>
    b511:	mov    ecx,edx
    b513:	mov    r14d,edx
    b516:	mov    edx,DWORD PTR [rsp+0x10]
    b51a:	call   3ac0 <node_number>
    b51f:	mov    r11d,DWORD PTR [rsp+0x8]
    b524:	mov    r10d,eax
    b527:	mov    eax,DWORD PTR [rip+0x173b7]        # 228e4 <this_node>
    b52d:	cmp    eax,DWORD PTR [rsp]
    b530:	je     b6f5 <r_parallel+0x485>
    b536:	cmp    eax,r10d
    b539:	je     b5f0 <r_parallel+0x380>
    b53f:	mov    r11d,DWORD PTR [rip+0x16fba]        # 22500 <sites_on_node>
    b546:	add    r15d,0x1
    b54a:	cmp    r11d,r15d
    b54d:	jle    b55a <r_parallel+0x2ea>
    b54f:	cmp    r15d,DWORD PTR [rsp+0x14]
    b554:	jne    b4c1 <r_parallel+0x251>
    b55a:	mov    r14d,DWORD PTR [rsp]
    b55e:	add    r14d,0x1
    b562:	cmp    DWORD PTR [rip+0x17113],r14d        # 2267c <number_of_nodes>
    b569:	jg     b4a0 <r_parallel+0x230>
    b56f:	mov    r14,rbx
    b572:	xor    eax,eax
    b574:	call   193d0 <g_sync>
    b579:	add    DWORD PTR [rsp+0x20],0x4
    b57e:	mov    eax,DWORD PTR [rsp+0x14]
    b582:	cmp    DWORD PTR [rip+0x16f78],eax        # 22500 <sites_on_node>
    b588:	jg     b45c <r_parallel+0x1ec>
    b58e:	mov    r15,r14
    b591:	mov    rdi,QWORD PTR [rsp+0x30]
    b596:	lea    r12,[rsp+0x78]
    b59b:	call   22a0 <free@plt>
    b5a0:	lea    rdi,[rsp+0x7c]
    b5a5:	call   19450 <g_xor32>
    b5aa:	mov    rdi,r12
    b5ad:	call   19450 <g_xor32>
    b5b2:	mov    eax,DWORD PTR [rip+0x1732c]        # 228e4 <this_node>
    b5b8:	test   eax,eax
    b5ba:	je     b965 <r_parallel+0x6f5>
    b5c0:	mov    rax,QWORD PTR [rsp+0x2d8]
    b5c8:	xor    rax,QWORD PTR fs:0x28
    b5d1:	jne    ba79 <r_parallel+0x809>
    b5d7:	add    rsp,0x2e8
    b5de:	pop    rbx
    b5df:	pop    rbp
    b5e0:	pop    r12
    b5e2:	pop    r13
    b5e4:	pop    r14
    b5e6:	pop    r15
    b5e8:	ret    
    b5e9:	nop    DWORD PTR [rax+0x0]
    b5f0:	mov    rdi,QWORD PTR [rsp+0x28]
    b5f5:	mov    esi,0x248
    b5fa:	call   19390 <get_field>
    b5ff:	movsx  ecx,WORD PTR [rsp+0x86]
    b607:	movsx  edx,WORD PTR [rsp+0x84]
    b60f:	movsx  esi,WORD PTR [rsp+0x82]
    b617:	movsx  edi,WORD PTR [rsp+0x80]
    b61f:	call   3b10 <node_index>
    b624:	movsx  edx,WORD PTR [rsp+0x84]
    b62c:	movsx  ecx,WORD PTR [rsp+0x86]
    b634:	movsx  esi,WORD PTR [rsp+0x82]
    b63c:	movsx  edi,WORD PTR [rsp+0x80]
    b644:	mov    r14d,eax
    b647:	call   3ac0 <node_number>
    b64c:	mov    edx,DWORD PTR [rip+0x17292]        # 228e4 <this_node>
    b652:	cmp    eax,edx
    b654:	je     b6a8 <r_parallel+0x438>
    b656:	sub    rsp,0x8
    b65a:	movsx  ecx,WORD PTR [rsp+0x88]
    b662:	mov    edi,0x1
    b667:	lea    rsi,[rip+0x108ea]        # 1bf58 <_IO_stdin_used+0x1f58>
    b66e:	movsx  eax,WORD PTR [rsp+0x8e]
    b676:	push   rax
    b677:	xor    eax,eax
    b679:	movsx  r9d,WORD PTR [rsp+0x94]
    b682:	movsx  r8d,WORD PTR [rsp+0x92]
    b68b:	call   2470 <__printf_chk@plt>
    b690:	mov    rdi,QWORD PTR [rip+0x16c49]        # 222e0 <stdout@@GLIBC_2.2.5>
    b697:	call   2420 <fflush@plt>
    b69c:	mov    edi,0x1
    b6a1:	call   19570 <terminate>
    b6a6:	pop    rcx
    b6a7:	pop    rsi
    b6a8:	mov    rsi,QWORD PTR [rsp+0x18]
    b6ad:	movsxd rdi,r14d
    b6b0:	shl    rdi,0xb
    b6b4:	add    rdi,QWORD PTR [rip+0x1710d]        # 227c8 <lattice>
    b6bb:	mov    rdx,QWORD PTR [rsi]
    b6be:	lea    rax,[rdi+0x70]
    b6c2:	add    rdi,0x78
    b6c6:	mov    QWORD PTR [rdi-0x8],rdx
    b6ca:	mov    rdx,QWORD PTR [rsp+0x2c0]
    b6d2:	mov    QWORD PTR [rdi+0x230],rdx
    b6d9:	and    rdi,0xfffffffffffffff8
    b6dd:	sub    rax,rdi
    b6e0:	sub    rsi,rax
    b6e3:	add    eax,0x240
    b6e8:	shr    eax,0x3
    b6eb:	mov    ecx,eax
    b6ed:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    b6f0:	jmp    b53f <r_parallel+0x2cf>
    b6f5:	mov    esi,DWORD PTR [rsp+0x38]
    b6f9:	cmp    DWORD PTR [rsp+0x3c],esi
    b6fd:	je     b875 <r_parallel+0x605>
    b703:	lea    eax,[rsi*4+0x0]
    b70a:	add    esi,0x1
    b70d:	cdqe   
    b70f:	mov    DWORD PTR [rsp+0x38],esi
    b713:	lea    r8,[rax+rax*8]
    b717:	shl    r8,0x4
    b71b:	add    r8,QWORD PTR [rsp+0x30]
    b720:	cmp    DWORD PTR [rbx+0x18],0x1
    b724:	je     b845 <r_parallel+0x5d5>
    b72a:	mov    edi,DWORD PTR [rsp+0x7c]
    b72e:	mov    esi,DWORD PTR [rsp+0x78]
    b732:	mov    QWORD PTR [rsp+0x8],r8
    b737:	mov    rdx,r8
    b73a:	lea    r9,[r8+0x240]
    b741:	nop    DWORD PTR [rax+0x0]
    b748:	mov    eax,DWORD PTR [rdx]
    b74a:	mov    ecx,ebp
    b74c:	add    ebp,0x1
    b74f:	mov    r8d,eax
    b752:	rol    r8d,cl
    b755:	mov    ecx,r13d
    b758:	rol    eax,cl
    b75a:	xor    edi,r8d
    b75d:	xor    esi,eax
    b75f:	cmp    ebp,0x1d
    b762:	cmove  ebp,r12d
    b766:	add    r13d,0x1
    b76a:	cmp    r13d,0x1f
    b76e:	cmove  r13d,r12d
    b772:	add    rdx,0x4
    b776:	cmp    rdx,r9
    b779:	jne    b748 <r_parallel+0x4d8>
    b77b:	mov    DWORD PTR [rsp+0x7c],edi
    b77f:	mov    r8,QWORD PTR [rsp+0x8]
    b784:	mov    DWORD PTR [rsp+0x78],esi
    b788:	cmp    r10d,DWORD PTR [rsp]
    b78c:	je     b7e4 <r_parallel+0x574>
    b78e:	mov    rsi,r8
    b791:	mov    ecx,0x48
    b796:	movzx  eax,WORD PTR [rsp+0x4]
    b79b:	mov    edx,r10d
    b79e:	lea    rdi,[rsp+0x88]
    b7a6:	mov    WORD PTR [rsp+0x80],r11w
    b7af:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    b7b2:	mov    rdi,QWORD PTR [rsp+0x28]
    b7b7:	mov    WORD PTR [rsp+0x82],ax
    b7bf:	mov    esi,0x248
    b7c4:	mov    WORD PTR [rsp+0x86],r14w
    b7cd:	movzx  eax,WORD PTR [rsp+0x10]
    b7d2:	mov    WORD PTR [rsp+0x84],ax
    b7da:	call   19380 <send_field>
    b7df:	jmp    b53f <r_parallel+0x2cf>
    b7e4:	mov    edx,DWORD PTR [rsp+0x10]
    b7e8:	mov    esi,DWORD PTR [rsp+0x4]
    b7ec:	mov    ecx,r14d
    b7ef:	mov    edi,r11d
    b7f2:	call   3b10 <node_index>
    b7f7:	mov    r8,QWORD PTR [rsp+0x8]
    b7fc:	movsxd rdi,eax
    b7ff:	mov    rdx,QWORD PTR [r8]
    b802:	shl    rdi,0xb
    b806:	add    rdi,QWORD PTR [rip+0x16fbb]        # 227c8 <lattice>
    b80d:	mov    rsi,r8
    b810:	lea    rax,[rdi+0x70]
    b814:	add    rdi,0x78
    b818:	mov    QWORD PTR [rdi-0x8],rdx
    b81c:	mov    rdx,QWORD PTR [r8+0x238]
    b823:	mov    QWORD PTR [rdi+0x230],rdx
    b82a:	and    rdi,0xfffffffffffffff8
    b82e:	sub    rax,rdi
    b831:	lea    ecx,[rax+0x240]
    b837:	sub    rsi,rax
    b83a:	shr    ecx,0x3
    b83d:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    b840:	jmp    b53f <r_parallel+0x2cf>
    b845:	mov    rdi,r8
    b848:	mov    esi,0x90
    b84d:	mov    DWORD PTR [rsp+0x5c],r11d
    b852:	mov    DWORD PTR [rsp+0x58],r10d
    b857:	mov    QWORD PTR [rsp+0x8],r8
    b85c:	call   15960 <byterevn>
    b861:	mov    r11d,DWORD PTR [rsp+0x5c]
    b866:	mov    r10d,DWORD PTR [rsp+0x58]
    b86b:	mov    r8,QWORD PTR [rsp+0x8]
    b870:	jmp    b72a <r_parallel+0x4ba>
    b875:	mov    eax,DWORD PTR [rip+0x16c85]        # 22500 <sites_on_node>
    b87b:	mov    edx,0x1000
    b880:	mov    rcx,QWORD PTR [rsp+0x40]
    b885:	mov    DWORD PTR [rsp+0x38],r11d
    b88a:	mov    rdi,QWORD PTR [rsp+0x30]
    b88f:	mov    DWORD PTR [rsp+0x8],r10d
    b894:	sub    eax,r15d
    b897:	cmp    eax,0x1000
    b89c:	cmovle edx,eax
    b89f:	lea    eax,[rdx*4+0x0]
    b8a6:	mov    DWORD PTR [rsp+0x3c],edx
    b8aa:	mov    edx,0x1
    b8af:	cdqe   
    b8b1:	lea    rsi,[rax+rax*8]
    b8b5:	shl    rsi,0x4
    b8b9:	call   19d90 <g_read>
    b8be:	mov    r10d,DWORD PTR [rsp+0x8]
    b8c3:	mov    r11d,DWORD PTR [rsp+0x38]
    b8c8:	cmp    rax,0x1
    b8cc:	je     b933 <r_parallel+0x6c3>
    b8ce:	mov    DWORD PTR [rsp+0x58],r11d
    b8d3:	call   22c0 <__errno_location@plt>
    b8d8:	mov    r9,QWORD PTR [rsp+0x48]
    b8dd:	mov    ecx,DWORD PTR [rip+0x17001]        # 228e4 <this_node>
    b8e3:	lea    rdx,[rsp+0x2cd]
    b8eb:	mov    r8d,DWORD PTR [rax]
    b8ee:	lea    rsi,[rip+0x10203]        # 1baf8 <_IO_stdin_used+0x1af8>
    b8f5:	mov    edi,0x1
    b8fa:	xor    eax,eax
    b8fc:	call   2470 <__printf_chk@plt>
    b901:	mov    rdi,QWORD PTR [rip+0x169d8]        # 222e0 <stdout@@GLIBC_2.2.5>
    b908:	call   2420 <fflush@plt>
    b90d:	mov    edi,0x1
    b912:	call   19570 <terminate>
    b917:	mov    r8,QWORD PTR [rsp+0x30]
    b91c:	mov    r10d,DWORD PTR [rsp+0x8]
    b921:	mov    DWORD PTR [rsp+0x38],0x1
    b929:	mov    r11d,DWORD PTR [rsp+0x58]
    b92e:	jmp    b720 <r_parallel+0x4b0>
    b933:	mov    DWORD PTR [rsp+0x38],0x1
    b93b:	mov    r8,QWORD PTR [rsp+0x30]
    b940:	jmp    b720 <r_parallel+0x4b0>
    b945:	lea    rdx,[rsp+0x2cd]
    b94d:	lea    rsi,[rip+0x105d4]        # 1bf28 <_IO_stdin_used+0x1f28>
    b954:	mov    edi,0x1
    b959:	xor    eax,eax
    b95b:	call   2470 <__printf_chk@plt>
    b960:	jmp    b2e7 <r_parallel+0x77>
    b965:	mov    rdx,QWORD PTR [rsp+0x48]
    b96a:	xor    eax,eax
    b96c:	mov    edi,0x1
    b971:	lea    rsi,[rip+0x10608]        # 1bf80 <_IO_stdin_used+0x1f80>
    b978:	call   2470 <__printf_chk@plt>
    b97d:	mov    rax,QWORD PTR [rsp+0x50]
    b982:	cmp    DWORD PTR [rax],0x4e87
    b988:	je     b9f0 <r_parallel+0x780>
    b98a:	mov    rdi,QWORD PTR [rip+0x1694f]        # 222e0 <stdout@@GLIBC_2.2.5>
    b991:	call   2420 <fflush@plt>
    b996:	jmp    b5c0 <r_parallel+0x350>
    b99b:	call   22c0 <__errno_location@plt>
    b9a0:	mov    ecx,DWORD PTR [rip+0x16f3e]        # 228e4 <this_node>
    b9a6:	mov    edi,0x1
    b9ab:	lea    rdx,[rsp+0x2cd]
    b9b3:	sub    rsp,0x8
    b9b7:	mov    r9d,DWORD PTR [rax]
    b9ba:	lea    rsi,[rip+0x103df]        # 1bda0 <_IO_stdin_used+0x1da0>
    b9c1:	xor    eax,eax
    b9c3:	push   QWORD PTR [rsp+0x50]
    b9c7:	mov    r8,QWORD PTR [rsp+0x70]
    b9cc:	call   2470 <__printf_chk@plt>
    b9d1:	mov    rdi,QWORD PTR [rip+0x16908]        # 222e0 <stdout@@GLIBC_2.2.5>
    b9d8:	call   2420 <fflush@plt>
    b9dd:	mov    edi,0x1
    b9e2:	call   19570 <terminate>
    b9e7:	pop    r9
    b9e9:	pop    r10
    b9eb:	jmp    b391 <r_parallel+0x121>
    b9f0:	mov    rdx,rax
    b9f3:	lea    rsi,[rip+0xf556]        # 1af50 <_IO_stdin_used+0xf50>
    b9fa:	mov    edi,0x1
    b9ff:	xor    eax,eax
    ba01:	add    rdx,0x4
    ba05:	call   2470 <__printf_chk@plt>
    ba0a:	mov    rsi,QWORD PTR [rsp+0x68]
    ba0f:	mov    rdi,QWORD PTR [rsp+0x40]
    ba14:	xor    edx,edx
    ba16:	call   19d50 <g_seek>
    ba1b:	test   eax,eax
    ba1d:	js     ba34 <r_parallel+0x7c4>
    ba1f:	mov    rdx,r12
    ba22:	mov    rsi,r15
    ba25:	mov    edi,0x1
    ba2a:	call   7d80 <read_checksum>
    ba2f:	jmp    b98a <r_parallel+0x71a>
    ba34:	call   22c0 <__errno_location@plt>
    ba39:	mov    r9,QWORD PTR [rsp+0x48]
    ba3e:	mov    rcx,QWORD PTR [rsp+0x60]
    ba43:	lea    rdx,[rsp+0x2cd]
    ba4b:	mov    r8d,DWORD PTR [rax]
    ba4e:	lea    rsi,[rip+0x1056b]        # 1bfc0 <_IO_stdin_used+0x1fc0>
    ba55:	mov    edi,0x1
    ba5a:	xor    eax,eax
    ba5c:	call   2470 <__printf_chk@plt>
    ba61:	mov    rdi,QWORD PTR [rip+0x16878]        # 222e0 <stdout@@GLIBC_2.2.5>
    ba68:	call   2420 <fflush@plt>
    ba6d:	mov    edi,0x1
    ba72:	call   19570 <terminate>
    ba77:	jmp    ba1f <r_parallel+0x7af>
    ba79:	call   2350 <__stack_chk_fail@plt>
    ba7e:	mov    ecx,DWORD PTR [rip+0x16e60]        # 228e4 <this_node>
    ba84:	lea    rdx,[rsp+0x2cd]
    ba8c:	mov    edi,0x1
    ba91:	lea    rsi,[rip+0x10010]        # 1baa8 <_IO_stdin_used+0x1aa8>
    ba98:	call   2470 <__printf_chk@plt>
    ba9d:	mov    rdi,QWORD PTR [rip+0x1683c]        # 222e0 <stdout@@GLIBC_2.2.5>
    baa4:	call   2420 <fflush@plt>
    baa9:	mov    edi,0x1
    baae:	call   19570 <terminate>
    bab3:	jmp    b304 <r_parallel+0x94>
    bab8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000bac0 <r_parallel_f>:
    bac0:	endbr64 
    bac4:	push   rbx
    bac5:	xor    eax,eax
    bac7:	mov    rbx,rdi
    baca:	call   193d0 <g_sync>
    bacf:	mov    rdi,QWORD PTR [rbx]
    bad2:	test   rdi,rdi
    bad5:	je     baea <r_parallel_f+0x2a>
    bad7:	mov    eax,DWORD PTR [rbx+0x28]
    bada:	test   eax,eax
    badc:	je     baf0 <r_parallel_f+0x30>
    bade:	call   19db0 <g_close>
    bae3:	mov    QWORD PTR [rbx],0x0
    baea:	pop    rbx
    baeb:	ret    
    baec:	nop    DWORD PTR [rax+0x0]
    baf0:	lea    rdi,[rip+0x10509]        # 1c000 <_IO_stdin_used+0x2000>
    baf7:	call   22f0 <puts@plt>
    bafc:	mov    rdi,QWORD PTR [rbx]
    baff:	call   19db0 <g_close>
    bb04:	mov    QWORD PTR [rbx],0x0
    bb0b:	jmp    baea <r_parallel_f+0x2a>
    bb0d:	nop    DWORD PTR [rax]

000000000000bb10 <restore_ascii>:
    bb10:	endbr64 
    bb14:	push   r15
    bb16:	push   r14
    bb18:	push   r13
    bb1a:	push   r12
    bb1c:	push   rbp
    bb1d:	push   rbx
    bb1e:	sub    rsp,0x2a8
    bb25:	mov    QWORD PTR [rsp+0x28],rdi
    bb2a:	mov    rax,QWORD PTR fs:0x28
    bb33:	mov    QWORD PTR [rsp+0x298],rax
    bb3b:	xor    eax,eax
    bb3d:	call   79c0 <setup_input_gauge_file>
    bb42:	mov    ebx,DWORD PTR [rip+0x16d9c]        # 228e4 <this_node>
    bb48:	mov    rsi,QWORD PTR [rax+0x8]
    bb4c:	mov    QWORD PTR [rsp+0x20],rax
    bb51:	mov    DWORD PTR [rax+0x28],0x0
    bb58:	mov    QWORD PTR [rsp+0x18],rsi
    bb5d:	test   ebx,ebx
    bb5f:	je     bef0 <restore_ascii+0x3e0>
    bb65:	mov    rax,QWORD PTR [rsp+0x20]
    bb6a:	mov    QWORD PTR [rax],0x0
    bb71:	mov    rax,QWORD PTR [rsp+0x20]
    bb76:	mov    rdi,QWORD PTR [rsp+0x18]
    bb7b:	mov    esi,0x5c
    bb80:	lea    r13,[rip+0xf626]        # 1b1ad <_IO_stdin_used+0x11ad>
    bb87:	mov    DWORD PTR [rax+0x18],0x0
    bb8e:	call   194c0 <broadcast_bytes>
    bb93:	xor    eax,eax
    bb95:	call   193d0 <g_sync>
    bb9a:	mov    r11d,DWORD PTR [rip+0x1682f]        # 223d0 <nt>
    bba1:	mov    DWORD PTR [rsp+0x4c],0x0
    bba9:	xor    ecx,ecx
    bbab:	test   r11d,r11d
    bbae:	jle    bd20 <restore_ascii+0x210>
    bbb4:	mov    r9d,DWORD PTR [rip+0x16819]        # 223d4 <nz>
    bbbb:	mov    DWORD PTR [rsp+0x48],0x0
    bbc3:	test   r9d,r9d
    bbc6:	jle    bd0d <restore_ascii+0x1fd>
    bbcc:	xor    edx,edx
    bbce:	mov    r8d,DWORD PTR [rip+0x16c67]        # 2283c <ny>
    bbd5:	mov    DWORD PTR [rsp+0x44],0x0
    bbdd:	test   r8d,r8d
    bbe0:	jle    bcfa <restore_ascii+0x1ea>
    bbe6:	xor    esi,esi
    bbe8:	mov    edi,DWORD PTR [rip+0x167ea]        # 223d8 <nx>
    bbee:	mov    DWORD PTR [rsp+0x40],0x0
    bbf6:	test   edi,edi
    bbf8:	jle    bce7 <restore_ascii+0x1d7>
    bbfe:	xor    edi,edi
    bc00:	jmp    bc35 <restore_ascii+0x125>
    bc02:	nop    WORD PTR [rax+rax*1+0x0]
    bc08:	cmp    eax,DWORD PTR [rsp+0x14]
    bc0c:	je     be24 <restore_ascii+0x314>
    bc12:	mov    eax,DWORD PTR [rsp+0x40]
    bc16:	mov    esi,DWORD PTR [rsp+0x44]
    bc1a:	mov    edx,DWORD PTR [rsp+0x48]
    bc1e:	mov    ecx,DWORD PTR [rsp+0x4c]
    bc22:	lea    edi,[rax+0x1]
    bc25:	cmp    edi,DWORD PTR [rip+0x167ad]        # 223d8 <nx>
    bc2b:	mov    DWORD PTR [rsp+0x40],edi
    bc2f:	jge    bce7 <restore_ascii+0x1d7>
    bc35:	call   3ac0 <node_number>
    bc3a:	mov    DWORD PTR [rsp+0x14],eax
    bc3e:	mov    eax,DWORD PTR [rip+0x16ca0]        # 228e4 <this_node>
    bc44:	test   eax,eax
    bc46:	jne    bc08 <restore_ascii+0xf8>
    bc48:	lea    rax,[rsp+0x80]
    bc50:	mov    r14d,0x9
    bc56:	mov    QWORD PTR [rsp+0x8],rax
    bc5b:	mov    rbx,QWORD PTR [rsp+0x8]
    bc60:	lea    rbp,[r14-0x9]
    bc64:	lea    r15,[rbx-0x30]
    bc68:	xor    eax,eax
    bc6a:	lea    rcx,[r15+0x8]
    bc6e:	mov    rdx,r15
    bc71:	mov    rsi,r13
    bc74:	mov    rdi,r12
    bc77:	call   22e0 <__isoc99_fscanf@plt>
    bc7c:	cmp    eax,0x2
    bc7f:	je     bc97 <restore_ascii+0x187>
    bc81:	lea    rdi,[rip+0x104b0]        # 1c138 <_IO_stdin_used+0x2138>
    bc88:	call   22f0 <puts@plt>
    bc8d:	mov    edi,0x1
    bc92:	call   19570 <terminate>
    bc97:	add    r15,0x10
    bc9b:	cmp    rbx,r15
    bc9e:	jne    bc68 <restore_ascii+0x158>
    bca0:	add    rbp,0x3
    bca4:	add    rbx,0x30
    bca8:	cmp    r14,rbp
    bcab:	jne    bc64 <restore_ascii+0x154>
    bcad:	add    QWORD PTR [rsp+0x8],0x90
    bcb6:	add    r14,0x9
    bcba:	cmp    r14,0x2d
    bcbe:	jne    bc5b <restore_ascii+0x14b>
    bcc0:	mov    eax,DWORD PTR [rsp+0x14]
    bcc4:	test   eax,eax
    bcc6:	je     bd65 <restore_ascii+0x255>
    bccc:	lea    rbp,[rsp+0x50]
    bcd1:	mov    edx,DWORD PTR [rsp+0x14]
    bcd5:	mov    esi,0x240
    bcda:	mov    rdi,rbp
    bcdd:	call   19380 <send_field>
    bce2:	jmp    bc12 <restore_ascii+0x102>
    bce7:	add    esi,0x1
    bcea:	cmp    esi,DWORD PTR [rip+0x16b4c]        # 2283c <ny>
    bcf0:	mov    DWORD PTR [rsp+0x44],esi
    bcf4:	jl     bbe8 <restore_ascii+0xd8>
    bcfa:	add    edx,0x1
    bcfd:	cmp    edx,DWORD PTR [rip+0x166d1]        # 223d4 <nz>
    bd03:	mov    DWORD PTR [rsp+0x48],edx
    bd07:	jl     bbce <restore_ascii+0xbe>
    bd0d:	add    ecx,0x1
    bd10:	cmp    ecx,DWORD PTR [rip+0x166ba]        # 223d0 <nt>
    bd16:	mov    DWORD PTR [rsp+0x4c],ecx
    bd1a:	jl     bbb4 <restore_ascii+0xa4>
    bd20:	xor    eax,eax
    bd22:	call   193d0 <g_sync>
    bd27:	mov    r10d,DWORD PTR [rip+0x16bb6]        # 228e4 <this_node>
    bd2e:	test   r10d,r10d
    bd31:	je     c025 <restore_ascii+0x515>
    bd37:	mov    rax,QWORD PTR [rsp+0x298]
    bd3f:	xor    rax,QWORD PTR fs:0x28
    bd48:	jne    c19f <restore_ascii+0x68f>
    bd4e:	mov    rax,QWORD PTR [rsp+0x20]
    bd53:	add    rsp,0x2a8
    bd5a:	pop    rbx
    bd5b:	pop    rbp
    bd5c:	pop    r12
    bd5e:	pop    r13
    bd60:	pop    r14
    bd62:	pop    r15
    bd64:	ret    
    bd65:	mov    edx,DWORD PTR [rsp+0x48]
    bd69:	mov    ecx,DWORD PTR [rsp+0x4c]
    bd6d:	lea    rbp,[rsp+0x50]
    bd72:	mov    esi,DWORD PTR [rsp+0x44]
    bd76:	mov    edi,DWORD PTR [rsp+0x40]
    bd7a:	call   3b10 <node_index>
    bd7f:	movsxd rdx,eax
    bd82:	xor    eax,eax
    bd84:	shl    rdx,0xb
    bd88:	add    rdx,QWORD PTR [rip+0x16a39]        # 227c8 <lattice>
    bd8f:	movdqa xmm0,XMMWORD PTR [rbp+rax*1+0x0]
    bd95:	movups XMMWORD PTR [rdx+rax*1+0x70],xmm0
    bd9a:	movdqa xmm1,XMMWORD PTR [rbp+rax*1+0x10]
    bda0:	movups XMMWORD PTR [rdx+rax*1+0x80],xmm1
    bda8:	movdqa xmm2,XMMWORD PTR [rbp+rax*1+0x20]
    bdae:	movups XMMWORD PTR [rdx+rax*1+0x90],xmm2
    bdb6:	movdqa xmm3,XMMWORD PTR [rbp+rax*1+0x30]
    bdbc:	movups XMMWORD PTR [rdx+rax*1+0xa0],xmm3
    bdc4:	movdqa xmm4,XMMWORD PTR [rbp+rax*1+0x40]
    bdca:	movups XMMWORD PTR [rdx+rax*1+0xb0],xmm4
    bdd2:	movdqa xmm5,XMMWORD PTR [rbp+rax*1+0x50]
    bdd8:	movups XMMWORD PTR [rdx+rax*1+0xc0],xmm5
    bde0:	movdqa xmm6,XMMWORD PTR [rbp+rax*1+0x60]
    bde6:	movups XMMWORD PTR [rdx+rax*1+0xd0],xmm6
    bdee:	movdqa xmm7,XMMWORD PTR [rbp+rax*1+0x70]
    bdf4:	movups XMMWORD PTR [rdx+rax*1+0xe0],xmm7
    bdfc:	movdqa xmm0,XMMWORD PTR [rbp+rax*1+0x80]
    be05:	movups XMMWORD PTR [rdx+rax*1+0xf0],xmm0
    be0d:	add    rax,0x90
    be13:	cmp    rax,0x240
    be19:	jne    bd8f <restore_ascii+0x27f>
    be1f:	jmp    bc12 <restore_ascii+0x102>
    be24:	lea    rbp,[rsp+0x50]
    be29:	mov    esi,0x240
    be2e:	mov    rdi,rbp
    be31:	call   19390 <get_field>
    be36:	mov    edx,DWORD PTR [rsp+0x48]
    be3a:	mov    ecx,DWORD PTR [rsp+0x4c]
    be3e:	mov    esi,DWORD PTR [rsp+0x44]
    be42:	mov    edi,DWORD PTR [rsp+0x40]
    be46:	call   3b10 <node_index>
    be4b:	movsxd rdx,eax
    be4e:	xor    eax,eax
    be50:	shl    rdx,0xb
    be54:	add    rdx,QWORD PTR [rip+0x1696d]        # 227c8 <lattice>
    be5b:	movdqa xmm1,XMMWORD PTR [rbp+rax*1+0x0]
    be61:	movups XMMWORD PTR [rdx+rax*1+0x70],xmm1
    be66:	movdqa xmm2,XMMWORD PTR [rbp+rax*1+0x10]
    be6c:	movups XMMWORD PTR [rdx+rax*1+0x80],xmm2
    be74:	movdqa xmm3,XMMWORD PTR [rbp+rax*1+0x20]
    be7a:	movups XMMWORD PTR [rdx+rax*1+0x90],xmm3
    be82:	movdqa xmm4,XMMWORD PTR [rbp+rax*1+0x30]
    be88:	movups XMMWORD PTR [rdx+rax*1+0xa0],xmm4
    be90:	movdqa xmm5,XMMWORD PTR [rbp+rax*1+0x40]
    be96:	movups XMMWORD PTR [rdx+rax*1+0xb0],xmm5
    be9e:	movdqa xmm6,XMMWORD PTR [rbp+rax*1+0x50]
    bea4:	movups XMMWORD PTR [rdx+rax*1+0xc0],xmm6
    beac:	movdqa xmm7,XMMWORD PTR [rbp+rax*1+0x60]
    beb2:	movups XMMWORD PTR [rdx+rax*1+0xd0],xmm7
    beba:	movdqa xmm1,XMMWORD PTR [rbp+rax*1+0x70]
    bec0:	movups XMMWORD PTR [rdx+rax*1+0xe0],xmm1
    bec8:	movdqa xmm2,XMMWORD PTR [rbp+rax*1+0x80]
    bed1:	movups XMMWORD PTR [rdx+rax*1+0xf0],xmm2
    bed9:	add    rax,0x90
    bedf:	cmp    rax,0x240
    bee5:	jne    be5b <restore_ascii+0x34b>
    beeb:	jmp    bc12 <restore_ascii+0x102>
    bef0:	mov    rdi,QWORD PTR [rsp+0x28]
    bef5:	lea    rsi,[rip+0xf06e]        # 1af6a <_IO_stdin_used+0xf6a>
    befc:	call   2490 <fopen@plt>
    bf01:	mov    r12,rax
    bf04:	test   rax,rax
    bf07:	je     c07e <restore_ascii+0x56e>
    bf0d:	mov    rax,QWORD PTR [rsp+0x20]
    bf12:	lea    rdx,[rsp+0x3c]
    bf17:	lea    rsi,[rip+0xf28c]        # 1b1aa <_IO_stdin_used+0x11aa>
    bf1e:	mov    rdi,r12
    bf21:	mov    QWORD PTR [rax],r12
    bf24:	xor    eax,eax
    bf26:	call   22e0 <__isoc99_fscanf@plt>
    bf2b:	cmp    eax,0x1
    bf2e:	jne    c154 <restore_ascii+0x644>
    bf34:	mov    eax,DWORD PTR [rsp+0x3c]
    bf38:	mov    rbx,QWORD PTR [rsp+0x18]
    bf3d:	mov    DWORD PTR [rbx],eax
    bf3f:	cmp    eax,0x4e87
    bf44:	jne    c11f <restore_ascii+0x60f>
    bf4a:	mov    rax,QWORD PTR [rsp+0x18]
    bf4f:	lea    rsi,[rip+0xf21c]        # 1b172 <_IO_stdin_used+0x1172>
    bf56:	mov    rdi,r12
    bf59:	lea    r14,[rax+0x4]
    bf5d:	xor    eax,eax
    bf5f:	mov    rdx,r14
    bf62:	call   22e0 <__isoc99_fscanf@plt>
    bf67:	mov    r13d,eax
    bf6a:	cmp    eax,0x1
    bf6d:	jne    c0eb <restore_ascii+0x5db>
    bf73:	xor    eax,eax
    bf75:	lea    rcx,[rsp+0x44]
    bf7a:	lea    rdx,[rsp+0x40]
    bf7f:	mov    rdi,r12
    bf82:	lea    r9,[rsp+0x4c]
    bf87:	lea    r8,[rsp+0x48]
    bf8c:	lea    rsi,[rip+0xf211]        # 1b1a4 <_IO_stdin_used+0x11a4>
    bf93:	call   22e0 <__isoc99_fscanf@plt>
    bf98:	cmp    eax,0x4
    bf9b:	jne    c0d0 <restore_ascii+0x5c0>
    bfa1:	mov    rax,QWORD PTR [rsp+0x18]
    bfa6:	mov    edx,DWORD PTR [rsp+0x40]
    bfaa:	mov    ecx,DWORD PTR [rsp+0x44]
    bfae:	mov    r8d,DWORD PTR [rsp+0x48]
    bfb3:	mov    r9d,DWORD PTR [rsp+0x4c]
    bfb8:	mov    r10d,DWORD PTR [rip+0x1687d]        # 2283c <ny>
    bfbf:	mov    DWORD PTR [rax+0x44],edx
    bfc2:	mov    edi,DWORD PTR [rip+0x1640c]        # 223d4 <nz>
    bfc8:	mov    esi,DWORD PTR [rip+0x16402]        # 223d0 <nt>
    bfce:	mov    DWORD PTR [rax+0x48],ecx
    bfd1:	mov    DWORD PTR [rax+0x4c],r8d
    bfd5:	mov    DWORD PTR [rax+0x50],r9d
    bfd9:	mov    eax,DWORD PTR [rip+0x163f9]        # 223d8 <nx>
    bfdf:	cmp    edx,eax
    bfe1:	je     c0ac <restore_ascii+0x59c>
    bfe7:	and    eax,r10d
    bfea:	and    eax,edi
    bfec:	and    eax,esi
    bfee:	cmp    eax,0xffffffff
    bff1:	je     c16f <restore_ascii+0x65f>
    bff7:	mov    edi,0x1
    bffc:	lea    rsi,[rip+0x100fd]        # 1c100 <_IO_stdin_used+0x2100>
    c003:	xor    eax,eax
    c005:	call   2470 <__printf_chk@plt>
    c00a:	mov    edi,0x1
    c00f:	call   19570 <terminate>
    c014:	mov    rax,QWORD PTR [rsp+0x18]
    c019:	mov    DWORD PTR [rax+0x58],0x0
    c020:	jmp    bb71 <restore_ascii+0x61>
    c025:	mov    rdx,QWORD PTR [rsp+0x28]
    c02a:	lea    rsi,[rip+0x1012f]        # 1c160 <_IO_stdin_used+0x2160>
    c031:	mov    edi,0x1
    c036:	xor    eax,eax
    c038:	call   2470 <__printf_chk@plt>
    c03d:	mov    rdx,QWORD PTR [rsp+0x18]
    c042:	lea    rsi,[rip+0xef07]        # 1af50 <_IO_stdin_used+0xf50>
    c049:	xor    eax,eax
    c04b:	mov    edi,0x1
    c050:	add    rdx,0x4
    c054:	call   2470 <__printf_chk@plt>
    c059:	mov    rdi,r12
    c05c:	call   2320 <fclose@plt>
    c061:	mov    rax,QWORD PTR [rsp+0x20]
    c066:	mov    rdi,QWORD PTR [rip+0x16273]        # 222e0 <stdout@@GLIBC_2.2.5>
    c06d:	mov    QWORD PTR [rax],0x0
    c074:	call   2420 <fflush@plt>
    c079:	jmp    bd37 <restore_ascii+0x227>
    c07e:	call   22c0 <__errno_location@plt>
    c083:	mov    rdx,QWORD PTR [rsp+0x28]
    c088:	mov    edi,0x1
    c08d:	lea    rsi,[rip+0xf0a5]        # 1b139 <_IO_stdin_used+0x1139>
    c094:	mov    ecx,DWORD PTR [rax]
    c096:	xor    eax,eax
    c098:	call   2470 <__printf_chk@plt>
    c09d:	mov    edi,0x1
    c0a2:	call   19570 <terminate>
    c0a7:	jmp    bf0d <restore_ascii+0x3fd>
    c0ac:	cmp    ecx,r10d
    c0af:	jne    bfe7 <restore_ascii+0x4d7>
    c0b5:	cmp    r8d,edi
    c0b8:	jne    bfe7 <restore_ascii+0x4d7>
    c0be:	cmp    r9d,esi
    c0c1:	jne    bfe7 <restore_ascii+0x4d7>
    c0c7:	jmp    c014 <restore_ascii+0x504>
    c0cc:	nop    DWORD PTR [rax+0x0]
    c0d0:	lea    rdi,[rip+0xfff9]        # 1c0d0 <_IO_stdin_used+0x20d0>
    c0d7:	call   22f0 <puts@plt>
    c0dc:	mov    edi,0x1
    c0e1:	call   19570 <terminate>
    c0e6:	jmp    bfa1 <restore_ascii+0x491>
    c0eb:	lea    rdi,[rip+0xffb6]        # 1c0a8 <_IO_stdin_used+0x20a8>
    c0f2:	call   22f0 <puts@plt>
    c0f7:	mov    rcx,r14
    c0fa:	mov    edx,r13d
    c0fd:	mov    edi,0x1
    c102:	lea    rsi,[rip+0xf083]        # 1b18c <_IO_stdin_used+0x118c>
    c109:	xor    eax,eax
    c10b:	call   2470 <__printf_chk@plt>
    c110:	mov    edi,0x1
    c115:	call   19570 <terminate>
    c11a:	jmp    bf73 <restore_ascii+0x463>
    c11f:	lea    rdi,[rip+0xff42]        # 1c068 <_IO_stdin_used+0x2068>
    c126:	call   22f0 <puts@plt>
    c12b:	mov    edx,DWORD PTR [rbx]
    c12d:	mov    ecx,0x4e87
    c132:	xor    eax,eax
    c134:	lea    rsi,[rip+0xf01c]        # 1b157 <_IO_stdin_used+0x1157>
    c13b:	mov    edi,0x1
    c140:	call   2470 <__printf_chk@plt>
    c145:	mov    edi,0x1
    c14a:	call   19570 <terminate>
    c14f:	jmp    bf4a <restore_ascii+0x43a>
    c154:	lea    rdi,[rip+0xfedd]        # 1c038 <_IO_stdin_used+0x2038>
    c15b:	call   22f0 <puts@plt>
    c160:	mov    edi,0x1
    c165:	call   19570 <terminate>
    c16a:	jmp    bf34 <restore_ascii+0x424>
    c16f:	mov    DWORD PTR [rip+0x16263],edx        # 223d8 <nx>
    c175:	imul   edx,ecx
    c178:	mov    DWORD PTR [rip+0x166be],ecx        # 2283c <ny>
    c17e:	mov    DWORD PTR [rip+0x1624f],r8d        # 223d4 <nz>
    c185:	imul   edx,r8d
    c189:	mov    DWORD PTR [rip+0x16240],r9d        # 223d0 <nt>
    c190:	imul   edx,r9d
    c194:	mov    DWORD PTR [rip+0x16256],edx        # 223f0 <volume>
    c19a:	jmp    c014 <restore_ascii+0x504>
    c19f:	call   2350 <__stack_chk_fail@plt>
    c1a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    c1af:	nop

000000000000c1b0 <save_ascii>:
    c1b0:	endbr64 
    c1b4:	push   r15
    c1b6:	push   r14
    c1b8:	push   r13
    c1ba:	push   r12
    c1bc:	push   rbp
    c1bd:	push   rbx
    c1be:	mov    rbx,rdi
    c1c1:	sub    rsp,0x288
    c1c8:	mov    rax,QWORD PTR fs:0x28
    c1d1:	mov    QWORD PTR [rsp+0x278],rax
    c1d9:	xor    eax,eax
    c1db:	call   7ab0 <setup_output_gauge_file>
    c1e0:	mov    r10d,DWORD PTR [rip+0x166fd]        # 228e4 <this_node>
    c1e7:	mov    QWORD PTR [rsp+0x20],rax
    c1ec:	mov    rax,QWORD PTR [rax+0x8]
    c1f0:	mov    QWORD PTR [rsp+0x28],rax
    c1f5:	test   r10d,r10d
    c1f8:	je     c614 <save_ascii+0x464>
    c1fe:	xor    eax,eax
    c200:	lea    r15,[rip+0xeff9]        # 1b200 <_IO_stdin_used+0x1200>
    c207:	mov    r14,r12
    c20a:	call   193d0 <g_sync>
    c20f:	mov    edi,DWORD PTR [rip+0x161bb]        # 223d0 <nt>
    c215:	mov    DWORD PTR [rsp+0x18],0x0
    c21d:	mov    DWORD PTR [rsp+0x10],0x0
    c225:	test   edi,edi
    c227:	jle    c586 <save_ascii+0x3d6>
    c22d:	mov    edx,DWORD PTR [rip+0x161a1]        # 223d4 <nz>
    c233:	mov    DWORD PTR [rsp+0x1c],0x0
    c23b:	test   edx,edx
    c23d:	jle    c56e <save_ascii+0x3be>
    c243:	mov    ecx,DWORD PTR [rip+0x165f3]        # 2283c <ny>
    c249:	mov    DWORD PTR [rsp+0x14],0x0
    c251:	test   ecx,ecx
    c253:	jle    c559 <save_ascii+0x3a9>
    c259:	mov    esi,DWORD PTR [rip+0x16179]        # 223d8 <nx>
    c25f:	mov    DWORD PTR [rsp+0x4],0x0
    c267:	test   esi,esi
    c269:	jg     c2a5 <save_ascii+0xf5>
    c26b:	jmp    c544 <save_ascii+0x394>
    c270:	test   eax,eax
    c272:	jne    c27c <save_ascii+0xcc>
    c274:	test   ebx,ebx
    c276:	jne    c5c9 <save_ascii+0x419>
    c27c:	cmp    eax,ebx
    c27e:	je     c470 <save_ascii+0x2c0>
    c284:	test   eax,eax
    c286:	je     c3b0 <save_ascii+0x200>
    c28c:	mov    DWORD PTR [rsp+0x10],ebx
    c290:	add    DWORD PTR [rsp+0x4],0x1
    c295:	mov    eax,DWORD PTR [rsp+0x4]
    c299:	cmp    DWORD PTR [rip+0x16139],eax        # 223d8 <nx>
    c29f:	jle    c544 <save_ascii+0x394>
    c2a5:	mov    ecx,DWORD PTR [rsp+0x18]
    c2a9:	mov    edx,DWORD PTR [rsp+0x1c]
    c2ad:	mov    esi,DWORD PTR [rsp+0x14]
    c2b1:	mov    edi,DWORD PTR [rsp+0x4]
    c2b5:	call   3ac0 <node_number>
    c2ba:	mov    ebx,eax
    c2bc:	mov    eax,DWORD PTR [rip+0x16622]        # 228e4 <this_node>
    c2c2:	cmp    DWORD PTR [rsp+0x10],ebx
    c2c6:	jne    c270 <save_ascii+0xc0>
    c2c8:	test   eax,eax
    c2ca:	je     c3b0 <save_ascii+0x200>
    c2d0:	mov    DWORD PTR [rsp+0x10],ebx
    c2d4:	cmp    eax,ebx
    c2d6:	jne    c290 <save_ascii+0xe0>
    c2d8:	mov    edx,DWORD PTR [rsp+0x1c]
    c2dc:	mov    ecx,DWORD PTR [rsp+0x18]
    c2e0:	lea    rbp,[rsp+0x30]
    c2e5:	mov    esi,DWORD PTR [rsp+0x14]
    c2e9:	mov    edi,DWORD PTR [rsp+0x4]
    c2ed:	call   3b10 <node_index>
    c2f2:	movsxd rdx,eax
    c2f5:	xor    eax,eax
    c2f7:	shl    rdx,0xb
    c2fb:	add    rdx,QWORD PTR [rip+0x164c6]        # 227c8 <lattice>
    c302:	movdqu xmm5,XMMWORD PTR [rdx+rax*1+0x70]
    c308:	movaps XMMWORD PTR [rbp+rax*1+0x0],xmm5
    c30d:	movdqu xmm6,XMMWORD PTR [rdx+rax*1+0x80]
    c316:	movaps XMMWORD PTR [rbp+rax*1+0x10],xmm6
    c31b:	movdqu xmm7,XMMWORD PTR [rdx+rax*1+0x90]
    c324:	movaps XMMWORD PTR [rbp+rax*1+0x20],xmm7
    c329:	movdqu xmm5,XMMWORD PTR [rdx+rax*1+0xa0]
    c332:	movaps XMMWORD PTR [rbp+rax*1+0x30],xmm5
    c337:	movdqu xmm6,XMMWORD PTR [rdx+rax*1+0xb0]
    c340:	movaps XMMWORD PTR [rbp+rax*1+0x40],xmm6
    c345:	movdqu xmm7,XMMWORD PTR [rdx+rax*1+0xc0]
    c34e:	movaps XMMWORD PTR [rbp+rax*1+0x50],xmm7
    c353:	movdqu xmm2,XMMWORD PTR [rdx+rax*1+0xd0]
    c35c:	movaps XMMWORD PTR [rbp+rax*1+0x60],xmm2
    c361:	movdqu xmm3,XMMWORD PTR [rdx+rax*1+0xe0]
    c36a:	movaps XMMWORD PTR [rbp+rax*1+0x70],xmm3
    c36f:	movdqu xmm4,XMMWORD PTR [rdx+rax*1+0xf0]
    c378:	movaps XMMWORD PTR [rbp+rax*1+0x80],xmm4
    c380:	add    rax,0x90
    c386:	cmp    rax,0x240
    c38c:	jne    c302 <save_ascii+0x152>
    c392:	xor    edx,edx
    c394:	mov    esi,0x240
    c399:	mov    rdi,rbp
    c39c:	call   19380 <send_field>
    c3a1:	jmp    c28c <save_ascii+0xdc>
    c3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c3b0:	lea    rbp,[rsp+0x30]
    c3b5:	test   ebx,ebx
    c3b7:	je     c47d <save_ascii+0x2cd>
    c3bd:	mov    esi,0x240
    c3c2:	mov    rdi,rbp
    c3c5:	call   19390 <get_field>
    c3ca:	mov    DWORD PTR [rsp+0x10],ebx
    c3ce:	mov    QWORD PTR [rsp+0x8],0x0
    c3d7:	lea    r12,[rsp+0xc0]
    c3df:	lea    rbp,[r12-0x90]
    c3e7:	mov    rbx,rbp
    c3ea:	mov    r13d,0x3
    c3f0:	movsd  xmm1,QWORD PTR [rbx+0x8]
    c3f5:	movsd  xmm0,QWORD PTR [rbx]
    c3f9:	mov    rdx,r15
    c3fc:	mov    rdi,r14
    c3ff:	mov    esi,0x1
    c404:	mov    eax,0x2
    c409:	call   24d0 <__fprintf_chk@plt>
    c40e:	cmp    eax,0xffffffff
    c411:	je     c450 <save_ascii+0x2a0>
    c413:	add    rbx,0x10
    c417:	sub    r13d,0x1
    c41b:	jne    c3f0 <save_ascii+0x240>
    c41d:	add    rbp,0x30
    c421:	cmp    r12,rbp
    c424:	jne    c3e7 <save_ascii+0x237>
    c426:	add    QWORD PTR [rsp+0x8],0x90
    c42f:	mov    rax,QWORD PTR [rsp+0x8]
    c434:	add    r12,0x90
    c43b:	cmp    rax,0x240
    c441:	jne    c3df <save_ascii+0x22f>
    c443:	jmp    c290 <save_ascii+0xe0>
    c448:	nop    DWORD PTR [rax+rax*1+0x0]
    c450:	lea    rdi,[rip+0xedb4]        # 1b20b <_IO_stdin_used+0x120b>
    c457:	call   22f0 <puts@plt>
    c45c:	mov    edi,0x1
    c461:	call   19570 <terminate>
    c466:	jmp    c413 <save_ascii+0x263>
    c468:	nop    DWORD PTR [rax+rax*1+0x0]
    c470:	lea    rbp,[rsp+0x30]
    c475:	test   ebx,ebx
    c477:	jne    c5f4 <save_ascii+0x444>
    c47d:	mov    edx,DWORD PTR [rsp+0x1c]
    c481:	mov    ecx,DWORD PTR [rsp+0x18]
    c485:	lea    rbp,[rsp+0x30]
    c48a:	mov    esi,DWORD PTR [rsp+0x14]
    c48e:	mov    edi,DWORD PTR [rsp+0x4]
    c492:	call   3b10 <node_index>
    c497:	movsxd rdx,eax
    c49a:	xor    eax,eax
    c49c:	shl    rdx,0xb
    c4a0:	add    rdx,QWORD PTR [rip+0x16321]        # 227c8 <lattice>
    c4a7:	movdqu xmm2,XMMWORD PTR [rdx+rax*1+0x70]
    c4ad:	movaps XMMWORD PTR [rbp+rax*1+0x0],xmm2
    c4b2:	movdqu xmm3,XMMWORD PTR [rdx+rax*1+0x80]
    c4bb:	movaps XMMWORD PTR [rbp+rax*1+0x10],xmm3
    c4c0:	movdqu xmm4,XMMWORD PTR [rdx+rax*1+0x90]
    c4c9:	movaps XMMWORD PTR [rbp+rax*1+0x20],xmm4
    c4ce:	movdqu xmm5,XMMWORD PTR [rdx+rax*1+0xa0]
    c4d7:	movaps XMMWORD PTR [rbp+rax*1+0x30],xmm5
    c4dc:	movdqu xmm6,XMMWORD PTR [rdx+rax*1+0xb0]
    c4e5:	movaps XMMWORD PTR [rbp+rax*1+0x40],xmm6
    c4ea:	movdqu xmm7,XMMWORD PTR [rdx+rax*1+0xc0]
    c4f3:	movaps XMMWORD PTR [rbp+rax*1+0x50],xmm7
    c4f8:	movdqu xmm2,XMMWORD PTR [rdx+rax*1+0xd0]
    c501:	movaps XMMWORD PTR [rbp+rax*1+0x60],xmm2
    c506:	movdqu xmm3,XMMWORD PTR [rdx+rax*1+0xe0]
    c50f:	movaps XMMWORD PTR [rbp+rax*1+0x70],xmm3
    c514:	movdqu xmm4,XMMWORD PTR [rdx+rax*1+0xf0]
    c51d:	movaps XMMWORD PTR [rbp+rax*1+0x80],xmm4
    c525:	add    rax,0x90
    c52b:	cmp    rax,0x240
    c531:	jne    c4a7 <save_ascii+0x2f7>
    c537:	mov    DWORD PTR [rsp+0x10],0x0
    c53f:	jmp    c3ce <save_ascii+0x21e>
    c544:	add    DWORD PTR [rsp+0x14],0x1
    c549:	mov    eax,DWORD PTR [rsp+0x14]
    c54d:	cmp    DWORD PTR [rip+0x162e9],eax        # 2283c <ny>
    c553:	jg     c259 <save_ascii+0xa9>
    c559:	add    DWORD PTR [rsp+0x1c],0x1
    c55e:	mov    eax,DWORD PTR [rsp+0x1c]
    c562:	cmp    DWORD PTR [rip+0x15e6c],eax        # 223d4 <nz>
    c568:	jg     c243 <save_ascii+0x93>
    c56e:	add    DWORD PTR [rsp+0x18],0x1
    c573:	mov    eax,DWORD PTR [rsp+0x18]
    c577:	cmp    DWORD PTR [rip+0x15e53],eax        # 223d0 <nt>
    c57d:	jg     c22d <save_ascii+0x7d>
    c583:	mov    r12,r14
    c586:	xor    eax,eax
    c588:	call   193d0 <g_sync>
    c58d:	mov    eax,DWORD PTR [rip+0x16351]        # 228e4 <this_node>
    c593:	test   eax,eax
    c595:	je     c6e3 <save_ascii+0x533>
    c59b:	mov    rax,QWORD PTR [rsp+0x278]
    c5a3:	xor    rax,QWORD PTR fs:0x28
    c5ac:	jne    c7b9 <save_ascii+0x609>
    c5b2:	mov    rax,QWORD PTR [rsp+0x20]
    c5b7:	add    rsp,0x288
    c5be:	pop    rbx
    c5bf:	pop    rbp
    c5c0:	pop    r12
    c5c2:	pop    r13
    c5c4:	pop    r14
    c5c6:	pop    r15
    c5c8:	ret    
    c5c9:	lea    rbp,[rsp+0x30]
    c5ce:	mov    edx,ebx
    c5d0:	mov    esi,0x4
    c5d5:	mov    rdi,rbp
    c5d8:	call   19380 <send_field>
    c5dd:	mov    eax,DWORD PTR [rip+0x16301]        # 228e4 <this_node>
    c5e3:	cmp    eax,ebx
    c5e5:	je     c5f4 <save_ascii+0x444>
    c5e7:	test   eax,eax
    c5e9:	jne    c28c <save_ascii+0xdc>
    c5ef:	jmp    c3bd <save_ascii+0x20d>
    c5f4:	mov    esi,0x4
    c5f9:	mov    rdi,rbp
    c5fc:	call   19390 <get_field>
    c601:	mov    eax,DWORD PTR [rip+0x162dd]        # 228e4 <this_node>
    c607:	test   eax,eax
    c609:	jne    c2d0 <save_ascii+0x120>
    c60f:	jmp    c3bd <save_ascii+0x20d>
    c614:	lea    rsi,[rip+0xe8b9]        # 1aed4 <_IO_stdin_used+0xed4>
    c61b:	mov    rdi,rbx
    c61e:	call   2490 <fopen@plt>
    c623:	mov    r12,rax
    c626:	test   rax,rax
    c629:	je     c73c <save_ascii+0x58c>
    c62f:	mov    rax,QWORD PTR [rsp+0x20]
    c634:	mov    ecx,0x4e87
    c639:	mov    esi,0x1
    c63e:	mov    rdi,r12
    c641:	lea    rdx,[rip+0xeb98]        # 1b1e0 <_IO_stdin_used+0x11e0>
    c648:	mov    QWORD PTR [rax],r12
    c64b:	mov    DWORD PTR [rax+0x28],0x0
    c652:	mov    QWORD PTR [rax+0x10],rbx
    c656:	mov    DWORD PTR [rax+0x18],0x0
    c65d:	xor    eax,eax
    c65f:	call   24d0 <__fprintf_chk@plt>
    c664:	test   eax,eax
    c666:	je     c79e <save_ascii+0x5ee>
    c66c:	mov    rax,QWORD PTR [rsp+0x28]
    c671:	lea    rdx,[rip+0xeb3d]        # 1b1b5 <_IO_stdin_used+0x11b5>
    c678:	mov    esi,0x1
    c67d:	mov    rdi,r12
    c680:	lea    rcx,[rax+0x4]
    c684:	xor    eax,eax
    c686:	call   24d0 <__fprintf_chk@plt>
    c68b:	test   eax,eax
    c68d:	je     c783 <save_ascii+0x5d3>
    c693:	mov    eax,DWORD PTR [rip+0x15d37]        # 223d0 <nt>
    c699:	sub    rsp,0x8
    c69d:	mov    rdi,r12
    c6a0:	mov    r9d,DWORD PTR [rip+0x15d2d]        # 223d4 <nz>
    c6a7:	mov    r8d,DWORD PTR [rip+0x1618e]        # 2283c <ny>
    c6ae:	mov    ecx,DWORD PTR [rip+0x15d24]        # 223d8 <nx>
    c6b4:	mov    esi,0x1
    c6b9:	lea    rdx,[rip+0xeb17]        # 1b1d7 <_IO_stdin_used+0x11d7>
    c6c0:	push   rax
    c6c1:	xor    eax,eax
    c6c3:	call   24d0 <__fprintf_chk@plt>
    c6c8:	pop    r8
    c6ca:	pop    r9
    c6cc:	test   eax,eax
    c6ce:	je     c768 <save_ascii+0x5b8>
    c6d4:	mov    rdi,QWORD PTR [rsp+0x20]
    c6d9:	call   77c0 <write_gauge_info_file>
    c6de:	jmp    c1fe <save_ascii+0x4e>
    c6e3:	mov    rdi,r12
    c6e6:	call   2420 <fflush@plt>
    c6eb:	mov    rax,QWORD PTR [rsp+0x20]
    c6f0:	mov    edi,0x1
    c6f5:	lea    rsi,[rip+0xfabc]        # 1c1b8 <_IO_stdin_used+0x21b8>
    c6fc:	mov    rdx,QWORD PTR [rax+0x10]
    c700:	xor    eax,eax
    c702:	call   2470 <__printf_chk@plt>
    c707:	mov    rdx,QWORD PTR [rsp+0x28]
    c70c:	lea    rsi,[rip+0xe83d]        # 1af50 <_IO_stdin_used+0xf50>
    c713:	xor    eax,eax
    c715:	mov    edi,0x1
    c71a:	add    rdx,0x4
    c71e:	call   2470 <__printf_chk@plt>
    c723:	mov    rdi,r12
    c726:	call   2320 <fclose@plt>
    c72b:	mov    rdi,QWORD PTR [rip+0x15bae]        # 222e0 <stdout@@GLIBC_2.2.5>
    c732:	call   2420 <fflush@plt>
    c737:	jmp    c59b <save_ascii+0x3eb>
    c73c:	call   22c0 <__errno_location@plt>
    c741:	mov    rdx,rbx
    c744:	mov    edi,0x1
    c749:	lea    rsi,[rip+0xe9e9]        # 1b139 <_IO_stdin_used+0x1139>
    c750:	mov    ecx,DWORD PTR [rax]
    c752:	xor    eax,eax
    c754:	call   2470 <__printf_chk@plt>
    c759:	mov    edi,0x1
    c75e:	call   19570 <terminate>
    c763:	jmp    c62f <save_ascii+0x47f>
    c768:	lea    rdi,[rip+0xea75]        # 1b1e4 <_IO_stdin_used+0x11e4>
    c76f:	call   22f0 <puts@plt>
    c774:	mov    edi,0x1
    c779:	call   19570 <terminate>
    c77e:	jmp    c6d4 <save_ascii+0x524>
    c783:	lea    rdi,[rip+0xea31]        # 1b1bb <_IO_stdin_used+0x11bb>
    c78a:	call   22f0 <puts@plt>
    c78f:	mov    edi,0x1
    c794:	call   19570 <terminate>
    c799:	jmp    c693 <save_ascii+0x4e3>
    c79e:	lea    rdi,[rip+0xf9f3]        # 1c198 <_IO_stdin_used+0x2198>
    c7a5:	call   22f0 <puts@plt>
    c7aa:	mov    edi,0x1
    c7af:	call   19570 <terminate>
    c7b4:	jmp    c66c <save_ascii+0x4bc>
    c7b9:	call   2350 <__stack_chk_fail@plt>
    c7be:	xchg   ax,ax

000000000000c7c0 <restore_serial>:
    c7c0:	endbr64 
    c7c4:	push   r12
    c7c6:	call   95d0 <r_serial_i>
    c7cb:	mov    r12,rax
    c7ce:	mov    rax,QWORD PTR [rax+0x8]
    c7d2:	mov    rdi,r12
    c7d5:	cmp    DWORD PTR [rax],0x42454749
    c7db:	je     c7f0 <restore_serial+0x30>
    c7dd:	call   9710 <r_serial>
    c7e2:	mov    rdi,r12
    c7e5:	call   a290 <r_serial_f>
    c7ea:	mov    rax,r12
    c7ed:	pop    r12
    c7ef:	ret    
    c7f0:	call   9d60 <r_serial_arch>
    c7f5:	mov    rdi,r12
    c7f8:	call   a290 <r_serial_f>
    c7fd:	mov    rax,r12
    c800:	pop    r12
    c802:	ret    
    c803:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    c80e:	xchg   ax,ax

000000000000c810 <restore_parallel>:
    c810:	endbr64 
    c814:	push   r12
    c816:	call   b140 <r_parallel_i>
    c81b:	mov    r12,rax
    c81e:	mov    rdi,rax
    c821:	call   b270 <r_parallel>
    c826:	mov    rdi,r12
    c829:	call   bac0 <r_parallel_f>
    c82e:	mov    rax,r12
    c831:	pop    r12
    c833:	ret    
    c834:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    c83f:	nop

000000000000c840 <save_serial>:
    c840:	endbr64 
    c844:	push   r12
    c846:	call   7c50 <w_serial_i>
    c84b:	mov    r12,rax
    c84e:	mov    rdi,rax
    c851:	call   7f90 <w_serial>
    c856:	mov    rdi,r12
    c859:	call   8600 <w_serial_f>
    c85e:	mov    rax,r12
    c861:	pop    r12
    c863:	ret    
    c864:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    c86f:	nop

000000000000c870 <save_parallel>:
    c870:	endbr64 
    c874:	push   r12
    c876:	mov    rsi,rdi
    c879:	xor    edi,edi
    c87b:	call   a4a0 <parallel_open>
    c880:	mov    r12,rax
    c883:	mov    rdi,rax
    c886:	call   a740 <w_parallel>
    c88b:	mov    rdi,r12
    c88e:	call   b0d0 <w_parallel_f>
    c893:	mov    rax,r12
    c896:	pop    r12
    c898:	ret    
    c899:	nop    DWORD PTR [rax+0x0]

000000000000c8a0 <save_checkpoint>:
    c8a0:	endbr64 
    c8a4:	push   r12
    c8a6:	mov    rsi,rdi
    c8a9:	mov    edi,0x1
    c8ae:	call   a4a0 <parallel_open>
    c8b3:	mov    r12,rax
    c8b6:	mov    rdi,rax
    c8b9:	call   ad90 <w_checkpoint>
    c8be:	mov    rdi,r12
    c8c1:	call   b0d0 <w_parallel_f>
    c8c6:	mov    rax,r12
    c8c9:	pop    r12
    c8cb:	ret    
    c8cc:	nop    DWORD PTR [rax+0x0]

000000000000c8d0 <save_serial_archive>:
    c8d0:	endbr64 
    c8d4:	push   r15
    c8d6:	push   r14
    c8d8:	xor    r14d,r14d
    c8db:	push   r13
    c8dd:	push   r12
    c8df:	push   rbp
    c8e0:	push   rbx
    c8e1:	sub    rsp,0x2d8
    c8e8:	mov    QWORD PTR [rsp+0x20],rdi
    c8ed:	mov    rax,QWORD PTR fs:0x28
    c8f6:	mov    QWORD PTR [rsp+0x2c8],rax
    c8fe:	xor    eax,eax
    c900:	call   7ab0 <setup_output_gauge_file>
    c905:	lea    rsi,[rsp+0x50]
    c90a:	lea    rdi,[rsp+0x48]
    c90f:	mov    QWORD PTR [rsp+0x28],rax
    c914:	mov    r12,QWORD PTR [rax+0x8]
    c918:	call   42b0 <d_plaquette>
    c91d:	movsd  xmm5,QWORD PTR [rsp+0x48]
    c923:	movsd  xmm6,QWORD PTR [rsp+0x50]
    c929:	mov    QWORD PTR [rsp+0x58],0x0
    c932:	mov    rax,QWORD PTR [rip+0x15e8f]        # 227c8 <lattice>
    c939:	mov    r10d,DWORD PTR [rip+0x15bc0]        # 22500 <sites_on_node>
    c940:	mov    DWORD PTR [rsp+0x40],0x0
    c948:	movsd  QWORD PTR [rsp],xmm5
    c94d:	movsd  QWORD PTR [rsp+0x8],xmm6
    c953:	lea    r13,[rax+0x2b0]
    c95a:	test   r10d,r10d
    c95d:	jle    c9ce <save_serial_archive+0xfe>
    c95f:	lea    rbp,[r13-0x240]
    c966:	mov    rdi,rbp
    c969:	add    rbp,0x90
    c970:	call   14ce0 <trace_su3>
    c975:	addsd  xmm0,QWORD PTR [rsp+0x58]
    c97b:	movsd  QWORD PTR [rsp+0x58],xmm0
    c981:	mov    eax,DWORD PTR [rbp-0x90]
    c987:	mov    edx,DWORD PTR [rbp-0x60]
    c98a:	add    eax,DWORD PTR [rbp-0x88]
    c990:	add    edx,DWORD PTR [rbp-0x58]
    c993:	add    eax,DWORD PTR [rsp+0x40]
    c997:	add    edx,DWORD PTR [rbp-0x50]
    c99a:	add    eax,DWORD PTR [rbp-0x80]
    c99d:	add    edx,DWORD PTR [rbp-0x48]
    c9a0:	add    eax,DWORD PTR [rbp-0x78]
    c9a3:	add    edx,DWORD PTR [rbp-0x40]
    c9a6:	add    eax,DWORD PTR [rbp-0x70]
    c9a9:	add    edx,DWORD PTR [rbp-0x38]
    c9ac:	add    eax,DWORD PTR [rbp-0x68]
    c9af:	add    eax,edx
    c9b1:	mov    DWORD PTR [rsp+0x40],eax
    c9b5:	cmp    rbp,r13
    c9b8:	jne    c966 <save_serial_archive+0x96>
    c9ba:	add    r14d,0x1
    c9be:	add    r13,0x800
    c9c5:	cmp    DWORD PTR [rip+0x15b34],r14d        # 22500 <sites_on_node>
    c9cc:	jg     c95f <save_serial_archive+0x8f>
    c9ce:	lea    rdi,[rsp+0x58]
    c9d3:	mov    ebp,0x1
    c9d8:	lea    r14,[rsp+0x60]
    c9dd:	call   193f0 <g_doublesum>
    c9e2:	movsd  xmm7,QWORD PTR [rsp+0x58]
    c9e8:	mov    r13d,DWORD PTR [rip+0x15a01]        # 223f0 <volume>
    c9ef:	movsd  QWORD PTR [rsp+0x30],xmm7
    c9f5:	jmp    ca02 <save_serial_archive+0x132>
    c9f7:	cmp    eax,ebp
    c9f9:	je     ce72 <save_serial_archive+0x5a2>
    c9ff:	add    ebp,0x1
    ca02:	xor    eax,eax
    ca04:	call   193c0 <numnodes>
    ca09:	cmp    eax,ebp
    ca0b:	jle    ca4c <save_serial_archive+0x17c>
    ca0d:	mov    eax,DWORD PTR [rip+0x15ed1]        # 228e4 <this_node>
    ca13:	test   eax,eax
    ca15:	jne    c9f7 <save_serial_archive+0x127>
    ca17:	mov    edx,ebp
    ca19:	mov    esi,0x4
    ca1e:	mov    rdi,r14
    ca21:	call   19380 <send_field>
    ca26:	mov    eax,DWORD PTR [rip+0x15eb8]        # 228e4 <this_node>
    ca2c:	cmp    eax,ebp
    ca2e:	je     ce72 <save_serial_archive+0x5a2>
    ca34:	test   eax,eax
    ca36:	jne    c9ff <save_serial_archive+0x12f>
    ca38:	lea    rdi,[rsp+0x44]
    ca3d:	call   194e0 <receive_integer>
    ca42:	mov    eax,DWORD PTR [rsp+0x44]
    ca46:	add    DWORD PTR [rsp+0x40],eax
    ca4a:	jmp    c9ff <save_serial_archive+0x12f>
    ca4c:	mov    r9d,DWORD PTR [rip+0x15e91]        # 228e4 <this_node>
    ca53:	test   r9d,r9d
    ca56:	je     ce96 <save_serial_archive+0x5c6>
    ca5c:	xor    eax,eax
    ca5e:	call   193d0 <g_sync>
    ca63:	mov    r8d,DWORD PTR [rip+0x15966]        # 223d0 <nt>
    ca6a:	test   r8d,r8d
    ca6d:	jle    cd01 <save_serial_archive+0x431>
    ca73:	lea    eax,[rbx+rbx*2]
    ca76:	xor    ebp,ebp
    ca78:	lea    rbx,[rsp+0x60]
    ca7d:	xor    r15d,r15d
    ca80:	shl    eax,0x4
    ca83:	mov    DWORD PTR [rsp+0x3c],eax
    ca87:	cdqe   
    ca89:	shl    rax,0x3
    ca8d:	mov    QWORD PTR [rsp+0x30],rax
    ca92:	mov    edx,DWORD PTR [rip+0x1593c]        # 223d4 <nz>
    ca98:	mov    DWORD PTR [rsp+0x8],0x0
    caa0:	xor    r13d,r13d
    caa3:	test   edx,edx
    caa5:	jle    cce4 <save_serial_archive+0x414>
    caab:	mov    esi,DWORD PTR [rip+0x15d8b]        # 2283c <ny>
    cab1:	xor    r12d,r12d
    cab4:	test   esi,esi
    cab6:	jle    ccd3 <save_serial_archive+0x403>
    cabc:	mov    DWORD PTR [rsp],r15d
    cac0:	mov    edi,DWORD PTR [rip+0x15912]        # 223d8 <nx>
    cac6:	xor    r14d,r14d
    cac9:	test   edi,edi
    cacb:	jg     cb0b <save_serial_archive+0x23b>
    cacd:	jmp    ccbe <save_serial_archive+0x3ee>
    cad2:	nop    WORD PTR [rax+rax*1+0x0]
    cad8:	test   eax,eax
    cada:	jne    cae5 <save_serial_archive+0x215>
    cadc:	test   r15d,r15d
    cadf:	jne    cd48 <save_serial_archive+0x478>
    cae5:	cmp    eax,r15d
    cae8:	je     ce00 <save_serial_archive+0x530>
    caee:	test   eax,eax
    caf0:	je     cc00 <save_serial_archive+0x330>
    caf6:	mov    DWORD PTR [rsp],r15d
    cafa:	add    r14d,0x1
    cafe:	cmp    DWORD PTR [rip+0x158d3],r14d        # 223d8 <nx>
    cb05:	jle    ccbe <save_serial_archive+0x3ee>
    cb0b:	mov    ecx,ebp
    cb0d:	mov    edx,r13d
    cb10:	mov    esi,r12d
    cb13:	mov    edi,r14d
    cb16:	call   3ac0 <node_number>
    cb1b:	mov    r15d,eax
    cb1e:	mov    eax,DWORD PTR [rip+0x15dc0]        # 228e4 <this_node>
    cb24:	cmp    r15d,DWORD PTR [rsp]
    cb28:	jne    cad8 <save_serial_archive+0x208>
    cb2a:	test   eax,eax
    cb2c:	je     cc00 <save_serial_archive+0x330>
    cb32:	mov    DWORD PTR [rsp],r15d
    cb36:	cmp    eax,r15d
    cb39:	jne    cafa <save_serial_archive+0x22a>
    cb3b:	mov    edx,r13d
    cb3e:	mov    ecx,ebp
    cb40:	mov    esi,r12d
    cb43:	mov    edi,r14d
    cb46:	call   3b10 <node_index>
    cb4b:	movsxd rdx,eax
    cb4e:	xor    eax,eax
    cb50:	shl    rdx,0xb
    cb54:	add    rdx,QWORD PTR [rip+0x15c6d]        # 227c8 <lattice>
    cb5b:	movdqu xmm2,XMMWORD PTR [rdx+rax*1+0x70]
    cb61:	movaps XMMWORD PTR [rbx+rax*1],xmm2
    cb65:	movdqu xmm3,XMMWORD PTR [rdx+rax*1+0x80]
    cb6e:	movaps XMMWORD PTR [rbx+rax*1+0x10],xmm3
    cb73:	movdqu xmm4,XMMWORD PTR [rdx+rax*1+0x90]
    cb7c:	movaps XMMWORD PTR [rbx+rax*1+0x20],xmm4
    cb81:	movdqu xmm5,XMMWORD PTR [rdx+rax*1+0xa0]
    cb8a:	movaps XMMWORD PTR [rbx+rax*1+0x30],xmm5
    cb8f:	movdqu xmm6,XMMWORD PTR [rdx+rax*1+0xb0]
    cb98:	movaps XMMWORD PTR [rbx+rax*1+0x40],xmm6
    cb9d:	movdqu xmm7,XMMWORD PTR [rdx+rax*1+0xc0]
    cba6:	movaps XMMWORD PTR [rbx+rax*1+0x50],xmm7
    cbab:	movdqu xmm1,XMMWORD PTR [rdx+rax*1+0xd0]
    cbb4:	movaps XMMWORD PTR [rbx+rax*1+0x60],xmm1
    cbb9:	movdqu xmm2,XMMWORD PTR [rdx+rax*1+0xe0]
    cbc2:	movaps XMMWORD PTR [rbx+rax*1+0x70],xmm2
    cbc7:	movdqu xmm3,XMMWORD PTR [rdx+rax*1+0xf0]
    cbd0:	movaps XMMWORD PTR [rbx+rax*1+0x80],xmm3
    cbd8:	add    rax,0x90
    cbde:	cmp    rax,0x240
    cbe4:	jne    cb5b <save_serial_archive+0x28b>
    cbea:	xor    edx,edx
    cbec:	mov    esi,0x240
    cbf1:	mov    rdi,rbx
    cbf4:	call   19380 <send_field>
    cbf9:	jmp    caf6 <save_serial_archive+0x226>
    cbfe:	xchg   ax,ax
    cc00:	test   r15d,r15d
    cc03:	jne    cd70 <save_serial_archive+0x4a0>
    cc09:	mov    edi,r14d
    cc0c:	mov    ecx,ebp
    cc0e:	mov    edx,r13d
    cc11:	mov    esi,r12d
    cc14:	mov    r15,QWORD PTR [rip+0x15bad]        # 227c8 <lattice>
    cc1b:	call   3b10 <node_index>
    cc20:	mov    rdi,QWORD PTR [rsp+0x10]
    cc25:	xor    r11d,r11d
    cc28:	xor    r10d,r10d
    cc2b:	cdqe   
    cc2d:	shl    rax,0xb
    cc31:	add    r15,rax
    cc34:	mov    eax,DWORD PTR [rsp+0x8]
    cc38:	lea    eax,[rax+rax*2]
    cc3b:	shl    eax,0x4
    cc3e:	cdqe   
    cc40:	lea    r9,[rdi+rax*8]
    cc44:	lea    r8,[r15+r11*1]
    cc48:	mov    rsi,r9
    cc4b:	mov    rcx,r9
    cc4e:	xor    edi,edi
    cc50:	mov    rdx,r8
    cc53:	xor    eax,eax
    cc55:	movsd  xmm0,QWORD PTR [rdx+0x70]
    cc5a:	add    rdx,0x10
    cc5e:	movsd  QWORD PTR [rcx+rax*1],xmm0
    cc63:	movsd  xmm0,QWORD PTR [rdx+0x68]
    cc68:	movsd  QWORD PTR [rsi+rax*1+0x8],xmm0
    cc6e:	add    rax,0x10
    cc72:	cmp    rax,0x30
    cc76:	jne    cc55 <save_serial_archive+0x385>
    cc78:	add    edi,0x3
    cc7b:	add    r8,0x30
    cc7f:	add    rcx,0x30
    cc83:	add    rsi,0x30
    cc87:	cmp    edi,0x6
    cc8a:	jne    cc50 <save_serial_archive+0x380>
    cc8c:	add    r10,0xc
    cc90:	add    r9,0x60
    cc94:	add    r11,0x90
    cc9b:	cmp    r10,0x30
    cc9f:	jne    cc44 <save_serial_archive+0x374>
    cca1:	mov    DWORD PTR [rsp],0x0
    cca8:	add    DWORD PTR [rsp+0x8],0x1
    ccad:	add    r14d,0x1
    ccb1:	cmp    DWORD PTR [rip+0x15720],r14d        # 223d8 <nx>
    ccb8:	jg     cb0b <save_serial_archive+0x23b>
    ccbe:	add    r12d,0x1
    ccc2:	cmp    DWORD PTR [rip+0x15b73],r12d        # 2283c <ny>
    ccc9:	jg     cac0 <save_serial_archive+0x1f0>
    cccf:	mov    r15d,DWORD PTR [rsp]
    ccd3:	add    r13d,0x1
    ccd7:	cmp    DWORD PTR [rip+0x156f6],r13d        # 223d4 <nz>
    ccde:	jg     caab <save_serial_archive+0x1db>
    cce4:	mov    ecx,DWORD PTR [rip+0x15bfa]        # 228e4 <this_node>
    ccea:	test   ecx,ecx
    ccec:	je     ce29 <save_serial_archive+0x559>
    ccf2:	add    ebp,0x1
    ccf5:	cmp    DWORD PTR [rip+0x156d5],ebp        # 223d0 <nt>
    ccfb:	jg     ca92 <save_serial_archive+0x1c2>
    cd01:	mov    eax,DWORD PTR [rip+0x15bdd]        # 228e4 <this_node>
    cd07:	test   eax,eax
    cd09:	je     d240 <save_serial_archive+0x970>
    cd0f:	xor    eax,eax
    cd11:	call   193d0 <g_sync>
    cd16:	mov    rax,QWORD PTR [rsp+0x2c8]
    cd1e:	xor    rax,QWORD PTR fs:0x28
    cd27:	jne    d296 <save_serial_archive+0x9c6>
    cd2d:	mov    rax,QWORD PTR [rsp+0x28]
    cd32:	add    rsp,0x2d8
    cd39:	pop    rbx
    cd3a:	pop    rbp
    cd3b:	pop    r12
    cd3d:	pop    r13
    cd3f:	pop    r14
    cd41:	pop    r15
    cd43:	ret    
    cd44:	nop    DWORD PTR [rax+0x0]
    cd48:	mov    edx,r15d
    cd4b:	mov    esi,0x4
    cd50:	mov    rdi,rbx
    cd53:	call   19380 <send_field>
    cd58:	mov    eax,DWORD PTR [rip+0x15b86]        # 228e4 <this_node>
    cd5e:	cmp    eax,r15d
    cd61:	je     ce09 <save_serial_archive+0x539>
    cd67:	test   eax,eax
    cd69:	jne    caf6 <save_serial_archive+0x226>
    cd6f:	nop
    cd70:	mov    rdi,rbx
    cd73:	mov    esi,0x240
    cd78:	call   19390 <get_field>
    cd7d:	mov    eax,DWORD PTR [rsp+0x8]
    cd81:	xor    r11d,r11d
    cd84:	xor    r10d,r10d
    cd87:	mov    rdi,QWORD PTR [rsp+0x10]
    cd8c:	lea    eax,[rax+rax*2]
    cd8f:	shl    eax,0x4
    cd92:	cdqe   
    cd94:	lea    r9,[rdi+rax*8]
    cd98:	lea    r8,[rbx+r11*1]
    cd9c:	mov    rsi,r9
    cd9f:	mov    rcx,r9
    cda2:	xor    edi,edi
    cda4:	mov    rdx,r8
    cda7:	xor    eax,eax
    cda9:	movsd  xmm0,QWORD PTR [rdx]
    cdad:	add    rdx,0x10
    cdb1:	movsd  QWORD PTR [rcx+rax*1],xmm0
    cdb6:	movsd  xmm0,QWORD PTR [rdx-0x8]
    cdbb:	movsd  QWORD PTR [rsi+rax*1+0x8],xmm0
    cdc1:	add    rax,0x10
    cdc5:	cmp    rax,0x30
    cdc9:	jne    cda9 <save_serial_archive+0x4d9>
    cdcb:	add    edi,0x3
    cdce:	add    r8,0x30
    cdd2:	add    rcx,0x30
    cdd6:	add    rsi,0x30
    cdda:	cmp    edi,0x6
    cddd:	jne    cda4 <save_serial_archive+0x4d4>
    cddf:	add    r10,0xc
    cde3:	add    r9,0x60
    cde7:	add    r11,0x90
    cdee:	cmp    r10,0x30
    cdf2:	jne    cd98 <save_serial_archive+0x4c8>
    cdf4:	mov    DWORD PTR [rsp],r15d
    cdf8:	jmp    cca8 <save_serial_archive+0x3d8>
    cdfd:	nop    DWORD PTR [rax]
    ce00:	test   r15d,r15d
    ce03:	je     cc09 <save_serial_archive+0x339>
    ce09:	mov    esi,0x4
    ce0e:	mov    rdi,rbx
    ce11:	call   19390 <get_field>
    ce16:	mov    eax,DWORD PTR [rip+0x15ac8]        # 228e4 <this_node>
    ce1c:	test   eax,eax
    ce1e:	je     cd70 <save_serial_archive+0x4a0>
    ce24:	jmp    cb32 <save_serial_archive+0x262>
    ce29:	mov    r14,QWORD PTR [rsp+0x10]
    ce2e:	mov    esi,DWORD PTR [rsp+0x3c]
    ce32:	mov    rdi,r14
    ce35:	call   15960 <byterevn>
    ce3a:	mov    rcx,QWORD PTR [rsp+0x18]
    ce3f:	mov    rsi,QWORD PTR [rsp+0x30]
    ce44:	mov    rdi,r14
    ce47:	mov    edx,0x1
    ce4c:	call   24c0 <fwrite@plt>
    ce51:	cmp    rax,0x1
    ce55:	je     ce63 <save_serial_archive+0x593>
    ce57:	lea    rdi,[rip+0xe4ec]        # 1b34a <_IO_stdin_used+0x134a>
    ce5e:	call   22f0 <puts@plt>
    ce63:	mov    rdi,QWORD PTR [rsp+0x18]
    ce68:	call   2420 <fflush@plt>
    ce6d:	jmp    ccf2 <save_serial_archive+0x422>
    ce72:	mov    esi,0x4
    ce77:	mov    rdi,r14
    ce7a:	call   19390 <get_field>
    ce7f:	lea    rsi,[rsp+0x40]
    ce84:	xor    edi,edi
    ce86:	call   194d0 <send_integer>
    ce8b:	mov    eax,DWORD PTR [rip+0x15a53]        # 228e4 <this_node>
    ce91:	jmp    ca34 <save_serial_archive+0x164>
    ce96:	lea    eax,[r13+r13*2+0x0]
    ce9b:	movsd  xmm0,QWORD PTR [rsp]
    cea0:	addsd  xmm0,QWORD PTR [rsp+0x8]
    cea6:	divsd  xmm0,QWORD PTR [rip+0xd5e2]        # 1a490 <_IO_stdin_used+0x490>
    ceae:	shl    eax,0x2
    ceb1:	movsd  QWORD PTR [rsp],xmm0
    ceb6:	pxor   xmm0,xmm0
    ceba:	movsd  xmm4,QWORD PTR [rsp+0x30]
    cec0:	cvtsi2sd xmm0,eax
    cec4:	lea    rsi,[rip+0xe35a]        # 1b225 <_IO_stdin_used+0x1225>
    cecb:	mov    edi,0x1
    ced0:	mov    eax,0x1
    ced5:	divsd  xmm4,xmm0
    ced9:	movapd xmm0,xmm4
    cedd:	movsd  QWORD PTR [rsp+0x8],xmm4
    cee3:	call   2470 <__printf_chk@plt>
    cee8:	mov    edx,DWORD PTR [rsp+0x40]
    ceec:	mov    edi,0x1
    cef1:	xor    eax,eax
    cef3:	lea    rsi,[rip+0xe337]        # 1b231 <_IO_stdin_used+0x1231>
    cefa:	call   2470 <__printf_chk@plt>
    ceff:	mov    edx,DWORD PTR [rsp+0x40]
    cf03:	mov    edi,0x1
    cf08:	xor    eax,eax
    cf0a:	lea    rsi,[rip+0xe32f]        # 1b240 <_IO_stdin_used+0x1240>
    cf11:	call   2470 <__printf_chk@plt>
    cf16:	movsd  xmm0,QWORD PTR [rsp]
    cf1b:	mov    edi,0x1
    cf20:	lea    rsi,[rip+0xe32a]        # 1b251 <_IO_stdin_used+0x1251>
    cf27:	mov    eax,0x1
    cf2c:	call   2470 <__printf_chk@plt>
    cf31:	mov    rbx,QWORD PTR [rsp+0x20]
    cf36:	lea    rsi,[rip+0xf2ab]        # 1c1e8 <_IO_stdin_used+0x21e8>
    cf3d:	xor    eax,eax
    cf3f:	mov    edi,0x1
    cf44:	mov    rdx,rbx
    cf47:	call   2470 <__printf_chk@plt>
    cf4c:	lea    rsi,[rip+0xdf81]        # 1aed4 <_IO_stdin_used+0xed4>
    cf53:	mov    rdi,rbx
    cf56:	call   2490 <fopen@plt>
    cf5b:	mov    QWORD PTR [rsp+0x18],rax
    cf60:	test   rax,rax
    cf63:	je     d271 <save_serial_archive+0x9a1>
    cf69:	mov    rbx,QWORD PTR [rsp+0x18]
    cf6e:	mov    edx,0xd
    cf73:	mov    esi,0x1
    cf78:	lea    rdi,[rip+0xe2e2]        # 1b261 <_IO_stdin_used+0x1261>
    cf7f:	mov    rcx,rbx
    cf82:	call   24c0 <fwrite@plt>
    cf87:	mov    rcx,rbx
    cf8a:	mov    edx,0x18
    cf8f:	mov    esi,0x1
    cf94:	lea    rdi,[rip+0xe2d4]        # 1b26f <_IO_stdin_used+0x126f>
    cf9b:	call   24c0 <fwrite@plt>
    cfa0:	mov    ecx,DWORD PTR [rip+0x15432]        # 223d8 <nx>
    cfa6:	mov    rdi,rbx
    cfa9:	xor    eax,eax
    cfab:	lea    rdx,[rip+0xe2d6]        # 1b288 <_IO_stdin_used+0x1288>
    cfb2:	mov    esi,0x1
    cfb7:	call   24d0 <__fprintf_chk@plt>
    cfbc:	mov    ecx,DWORD PTR [rip+0x1587a]        # 2283c <ny>
    cfc2:	mov    rdi,rbx
    cfc5:	xor    eax,eax
    cfc7:	lea    rdx,[rip+0xe2cc]        # 1b29a <_IO_stdin_used+0x129a>
    cfce:	mov    esi,0x1
    cfd3:	call   24d0 <__fprintf_chk@plt>
    cfd8:	mov    ecx,DWORD PTR [rip+0x153f6]        # 223d4 <nz>
    cfde:	mov    rdi,rbx
    cfe1:	xor    eax,eax
    cfe3:	lea    rdx,[rip+0xe2c2]        # 1b2ac <_IO_stdin_used+0x12ac>
    cfea:	mov    esi,0x1
    cfef:	call   24d0 <__fprintf_chk@plt>
    cff4:	mov    ecx,DWORD PTR [rip+0x153d6]        # 223d0 <nt>
    cffa:	mov    rdi,rbx
    cffd:	xor    eax,eax
    cfff:	lea    rdx,[rip+0xe2b8]        # 1b2be <_IO_stdin_used+0x12be>
    d006:	mov    esi,0x1
    d00b:	call   24d0 <__fprintf_chk@plt>
    d010:	mov    ecx,DWORD PTR [rsp+0x40]
    d014:	mov    rdi,rbx
    d017:	xor    eax,eax
    d019:	lea    rdx,[rip+0xe2b0]        # 1b2d0 <_IO_stdin_used+0x12d0>
    d020:	mov    esi,0x1
    d025:	call   24d0 <__fprintf_chk@plt>
    d02a:	movsd  xmm0,QWORD PTR [rsp+0x8]
    d030:	mov    rdi,rbx
    d033:	lea    rdx,[rip+0xe2a5]        # 1b2df <_IO_stdin_used+0x12df>
    d03a:	mov    esi,0x1
    d03f:	mov    eax,0x1
    d044:	call   24d0 <__fprintf_chk@plt>
    d049:	movsd  xmm0,QWORD PTR [rsp]
    d04e:	mov    rdi,rbx
    d051:	lea    rdx,[rip+0xe29b]        # 1b2f3 <_IO_stdin_used+0x12f3>
    d058:	mov    esi,0x1
    d05d:	mov    eax,0x1
    d062:	call   24d0 <__fprintf_chk@plt>
    d067:	mov    rdi,rbx
    d06a:	mov    esi,0x1
    d06f:	xor    eax,eax
    d071:	lea    rcx,[rip+0x154a8]        # 22520 <ensemble_id>
    d078:	lea    rdx,[rip+0xe287]        # 1b306 <_IO_stdin_used+0x1306>
    d07f:	call   24d0 <__fprintf_chk@plt>
    d084:	mov    ecx,DWORD PTR [rip+0x15862]        # 228ec <sequence_number>
    d08a:	mov    rdi,rbx
    d08d:	xor    eax,eax
    d08f:	lea    rdx,[rip+0xe282]        # 1b318 <_IO_stdin_used+0x1318>
    d096:	mov    esi,0x1
    d09b:	call   24d0 <__fprintf_chk@plt>
    d0a0:	mov    rcx,rbx
    d0a3:	mov    edx,0x20
    d0a8:	mov    esi,0x1
    d0ad:	lea    rdi,[rip+0xf17c]        # 1c230 <_IO_stdin_used+0x2230>
    d0b4:	call   24c0 <fwrite@plt>
    d0b9:	lea    rcx,[r12+0x4]
    d0be:	xor    r9d,r9d
    d0c1:	xor    r8d,r8d
    d0c4:	mov    rdi,rbx
    d0c7:	lea    rdx,[rip+0xde08]        # 1aed6 <_IO_stdin_used+0xed6>
    d0ce:	lea    rsi,[rip+0xd00b]        # 1a0e0 <_IO_stdin_used+0xe0>
    d0d5:	call   75c0 <write_gauge_info_item>
    d0da:	mov    rax,QWORD PTR [rsp+0x28]
    d0df:	mov    edx,0x1e
    d0e4:	lea    r12,[rsp+0x2a0]
    d0ec:	lea    rcx,[rip+0xdde8]        # 1aedb <_IO_stdin_used+0xedb>
    d0f3:	mov    esi,0x1
    d0f8:	mov    rdi,r12
    d0fb:	mov    r9d,DWORD PTR [rax+0x2c]
    d0ff:	mov    r8d,DWORD PTR [rax+0x30]
    d103:	xor    eax,eax
    d105:	call   24f0 <__sprintf_chk@plt>
    d10a:	xor    r9d,r9d
    d10d:	xor    r8d,r8d
    d110:	mov    rdi,rbx
    d113:	mov    rcx,r12
    d116:	lea    rdx,[rip+0xddb9]        # 1aed6 <_IO_stdin_used+0xed6>
    d11d:	lea    rsi,[rip+0xcfd6]        # 1a0fa <_IO_stdin_used+0xfa>
    d124:	call   75c0 <write_gauge_info_item>
    d129:	xor    r9d,r9d
    d12c:	xor    r8d,r8d
    d12f:	mov    rdi,rbx
    d132:	lea    rcx,[rip+0x1529f]        # 223d8 <nx>
    d139:	lea    rdx,[rip+0xe06a]        # 1b1aa <_IO_stdin_used+0x11aa>
    d140:	lea    rsi,[rip+0xcf00]        # 1a047 <_IO_stdin_used+0x47>
    d147:	call   75c0 <write_gauge_info_item>
    d14c:	mov    rdi,rbx
    d14f:	xor    r9d,r9d
    d152:	xor    r8d,r8d
    d155:	lea    rcx,[rip+0x156e0]        # 2283c <ny>
    d15c:	lea    rdx,[rip+0xe047]        # 1b1aa <_IO_stdin_used+0x11aa>
    d163:	lea    rsi,[rip+0xcee0]        # 1a04a <_IO_stdin_used+0x4a>
    d16a:	call   75c0 <write_gauge_info_item>
    d16f:	mov    rdi,rbx
    d172:	xor    r9d,r9d
    d175:	xor    r8d,r8d
    d178:	lea    rcx,[rip+0x15255]        # 223d4 <nz>
    d17f:	lea    rdx,[rip+0xe024]        # 1b1aa <_IO_stdin_used+0x11aa>
    d186:	lea    rsi,[rip+0xcec0]        # 1a04d <_IO_stdin_used+0x4d>
    d18d:	call   75c0 <write_gauge_info_item>
    d192:	xor    r9d,r9d
    d195:	xor    r8d,r8d
    d198:	mov    rdi,rbx
    d19b:	lea    rcx,[rip+0x1522e]        # 223d0 <nt>
    d1a2:	lea    rdx,[rip+0xe001]        # 1b1aa <_IO_stdin_used+0x11aa>
    d1a9:	lea    rsi,[rip+0xdee9]        # 1b099 <_IO_stdin_used+0x1099>
    d1b0:	call   75c0 <write_gauge_info_item>
    d1b5:	mov    rdi,rbx
    d1b8:	call   2ad0 <write_appl_gauge_info>
    d1bd:	mov    rcx,rbx
    d1c0:	mov    edx,0x20
    d1c5:	mov    esi,0x1
    d1ca:	lea    rdi,[rip+0xf087]        # 1c258 <_IO_stdin_used+0x2258>
    d1d1:	call   24c0 <fwrite@plt>
    d1d6:	mov    rcx,rbx
    d1d9:	mov    edx,0xb
    d1de:	mov    esi,0x1
    d1e3:	lea    rdi,[rip+0xdcc8]        # 1aeb2 <_IO_stdin_used+0xeb2>
    d1ea:	call   24c0 <fwrite@plt>
    d1ef:	mov    ebx,DWORD PTR [rip+0x151e3]        # 223d8 <nx>
    d1f5:	mov    esi,0x8
    d1fa:	imul   ebx,DWORD PTR [rip+0x1563b]        # 2283c <ny>
    d201:	imul   ebx,DWORD PTR [rip+0x151cc]        # 223d4 <nz>
    d208:	lea    edi,[rbx+rbx*2]
    d20b:	shl    edi,0x4
    d20e:	movsxd rdi,edi
    d211:	call   23d0 <calloc@plt>
    d216:	mov    QWORD PTR [rsp+0x10],rax
    d21b:	test   rax,rax
    d21e:	jne    ca5c <save_serial_archive+0x18c>
    d224:	lea    rdi,[rip+0xe103]        # 1b32e <_IO_stdin_used+0x132e>
    d22b:	call   22f0 <puts@plt>
    d230:	mov    edi,0x1
    d235:	call   19570 <terminate>
    d23a:	jmp    ca5c <save_serial_archive+0x18c>
    d23f:	nop
    d240:	mov    rdi,QWORD PTR [rsp+0x18]
    d245:	call   2320 <fclose@plt>
    d24a:	mov    rdx,QWORD PTR [rsp+0x20]
    d24f:	lea    rsi,[rip+0xe105]        # 1b35b <_IO_stdin_used+0x135b>
    d256:	xor    eax,eax
    d258:	mov    edi,0x1
    d25d:	call   2470 <__printf_chk@plt>
    d262:	mov    rdi,QWORD PTR [rsp+0x10]
    d267:	call   22a0 <free@plt>
    d26c:	jmp    cd0f <save_serial_archive+0x43f>
    d271:	mov    rdx,QWORD PTR [rsp+0x20]
    d276:	lea    rsi,[rip+0xef93]        # 1c210 <_IO_stdin_used+0x2210>
    d27d:	mov    edi,0x1
    d282:	call   2470 <__printf_chk@plt>
    d287:	mov    edi,0x1
    d28c:	call   19570 <terminate>
    d291:	jmp    cf69 <save_serial_archive+0x699>
    d296:	call   2350 <__stack_chk_fail@plt>
    d29b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d2a0 <save_parallel_archive>:
    d2a0:	endbr64 
    d2a4:	sub    rsp,0x8
    d2a8:	lea    rdi,[rip+0xefd1]        # 1c280 <_IO_stdin_used+0x2280>
    d2af:	call   22f0 <puts@plt>
    d2b4:	xor    eax,eax
    d2b6:	add    rsp,0x8
    d2ba:	ret    
    d2bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d2c0 <make_lattice>:
    d2c0:	endbr64 
    d2c4:	push   r15
    d2c6:	mov    esi,0x800
    d2cb:	push   r14
    d2cd:	push   r13
    d2cf:	push   r12
    d2d1:	push   rbp
    d2d2:	push   rbx
    d2d3:	sub    rsp,0x18
    d2d7:	movsxd rdi,DWORD PTR [rip+0x15222]        # 22500 <sites_on_node>
    d2de:	call   23d0 <calloc@plt>
    d2e3:	mov    QWORD PTR [rip+0x154de],rax        # 227c8 <lattice>
    d2ea:	test   rax,rax
    d2ed:	je     d4dd <make_lattice+0x21d>
    d2f3:	lea    rbx,[rip+0x15566]        # 22860 <gen_pt>
    d2fa:	lea    r12,[rip+0xf03f]        # 1c340 <_IO_stdin_used+0x2340>
    d301:	lea    rbp,[rbx+0x80]
    d308:	movsxd rdi,DWORD PTR [rip+0x151f1]        # 22500 <sites_on_node>
    d30f:	mov    esi,0x8
    d314:	call   23d0 <calloc@plt>
    d319:	mov    QWORD PTR [rbx],rax
    d31c:	test   rax,rax
    d31f:	je     d560 <make_lattice+0x2a0>
    d325:	add    rbx,0x8
    d329:	cmp    rbp,rbx
    d32c:	jne    d308 <make_lattice+0x48>
    d32e:	mov    esi,DWORD PTR [rip+0x1509c]        # 223d0 <nt>
    d334:	xor    r12d,r12d
    d337:	test   esi,esi
    d339:	jle    d47e <make_lattice+0x1be>
    d33f:	mov    eax,DWORD PTR [rip+0x1508f]        # 223d4 <nz>
    d345:	test   eax,eax
    d347:	jle    d46d <make_lattice+0x1ad>
    d34d:	mov    DWORD PTR [rsp+0xc],r12d
    d352:	xor    ebp,ebp
    d354:	nop    DWORD PTR [rax+0x0]
    d358:	mov    edx,DWORD PTR [rip+0x154de]        # 2283c <ny>
    d35e:	xor    r15d,r15d
    d361:	test   edx,edx
    d363:	jle    d459 <make_lattice+0x199>
    d369:	nop    DWORD PTR [rax+0x0]
    d370:	mov    eax,DWORD PTR [rsp+0xc]
    d374:	mov    ecx,DWORD PTR [rip+0x1505e]        # 223d8 <nx>
    d37a:	xor    r14d,r14d
    d37d:	lea    r13d,[r15+rax*1]
    d381:	test   ecx,ecx
    d383:	jg     d3a1 <make_lattice+0xe1>
    d385:	jmp    d448 <make_lattice+0x188>
    d38a:	nop    WORD PTR [rax+rax*1+0x0]
    d390:	add    r14d,0x1
    d394:	cmp    DWORD PTR [rip+0x1503d],r14d        # 223d8 <nx>
    d39b:	jle    d448 <make_lattice+0x188>
    d3a1:	mov    ecx,r12d
    d3a4:	mov    edx,ebp
    d3a6:	mov    esi,r15d
    d3a9:	mov    edi,r14d
    d3ac:	call   3ac0 <node_number>
    d3b1:	mov    ebx,eax
    d3b3:	xor    eax,eax
    d3b5:	call   193b0 <mynode>
    d3ba:	cmp    ebx,eax
    d3bc:	jne    d390 <make_lattice+0xd0>
    d3be:	mov    edi,r14d
    d3c1:	mov    ecx,r12d
    d3c4:	mov    edx,ebp
    d3c6:	mov    esi,r15d
    d3c9:	call   3b10 <node_index>
    d3ce:	mov    edx,DWORD PTR [rip+0x15000]        # 223d4 <nz>
    d3d4:	mov    ecx,0x2
    d3d9:	mov    esi,DWORD PTR [rip+0x15131]        # 22510 <iseed>
    d3df:	movsxd rdi,eax
    d3e2:	lea    eax,[r13+r14*1+0x0]
    d3e7:	imul   edx,r12d
    d3eb:	and    eax,0x1
    d3ee:	shl    rdi,0xb
    d3f2:	add    rdi,QWORD PTR [rip+0x153cf]        # 227c8 <lattice>
    d3f9:	sub    ecx,eax
    d3fb:	mov    WORD PTR [rdi],r14w
    d3ff:	add    rdi,0x10
    d403:	mov    WORD PTR [rdi-0xe],r15w
    d408:	add    edx,ebp
    d40a:	imul   edx,DWORD PTR [rip+0x1542b]        # 2283c <ny>
    d411:	mov    WORD PTR [rdi-0xc],bp
    d415:	mov    WORD PTR [rdi-0xa],r12w
    d41a:	mov    BYTE PTR [rdi-0x8],cl
    d41d:	add    edx,r15d
    d420:	imul   edx,DWORD PTR [rip+0x14fb1]        # 223d8 <nx>
    d427:	add    edx,r14d
    d42a:	add    r14d,0x1
    d42e:	mov    DWORD PTR [rdi-0x4],edx
    d431:	call   e170 <initialize_prn>
    d436:	cmp    DWORD PTR [rip+0x14f9b],r14d        # 223d8 <nx>
    d43d:	jg     d3a1 <make_lattice+0xe1>
    d443:	nop    DWORD PTR [rax+rax*1+0x0]
    d448:	add    r15d,0x1
    d44c:	cmp    DWORD PTR [rip+0x153e9],r15d        # 2283c <ny>
    d453:	jg     d370 <make_lattice+0xb0>
    d459:	add    DWORD PTR [rsp+0xc],0x1
    d45e:	add    ebp,0x1
    d461:	cmp    DWORD PTR [rip+0x14f6d],ebp        # 223d4 <nz>
    d467:	jg     d358 <make_lattice+0x98>
    d46d:	add    r12d,0x1
    d471:	cmp    DWORD PTR [rip+0x14f58],r12d        # 223d0 <nt>
    d478:	jg     d33f <make_lattice+0x7f>
    d47e:	mov    eax,DWORD PTR [rip+0x1507c]        # 22500 <sites_on_node>
    d484:	mov    esi,0x90
    d489:	lea    edi,[rax*4+0x0]
    d490:	movsxd rdi,edi
    d493:	call   23d0 <calloc@plt>
    d498:	mov    QWORD PTR [rip+0x15069],rax        # 22508 <t_longlink>
    d49f:	test   rax,rax
    d4a2:	je     d532 <make_lattice+0x272>
    d4a8:	mov    eax,DWORD PTR [rip+0x15052]        # 22500 <sites_on_node>
    d4ae:	mov    esi,0x90
    d4b3:	lea    edi,[rax*4+0x0]
    d4ba:	movsxd rdi,edi
    d4bd:	call   23d0 <calloc@plt>
    d4c2:	mov    QWORD PTR [rip+0x152ef],rax        # 227b8 <t_fatlink>
    d4c9:	test   rax,rax
    d4cc:	je     d503 <make_lattice+0x243>
    d4ce:	add    rsp,0x18
    d4d2:	pop    rbx
    d4d3:	pop    rbp
    d4d4:	pop    r12
    d4d6:	pop    r13
    d4d8:	pop    r14
    d4da:	pop    r15
    d4dc:	ret    
    d4dd:	mov    edx,DWORD PTR [rip+0x15401]        # 228e4 <this_node>
    d4e3:	lea    rsi,[rip+0xee36]        # 1c320 <_IO_stdin_used+0x2320>
    d4ea:	mov    edi,0x1
    d4ef:	call   2470 <__printf_chk@plt>
    d4f4:	mov    edi,0x1
    d4f9:	call   19570 <terminate>
    d4fe:	jmp    d2f3 <make_lattice+0x33>
    d503:	mov    edx,DWORD PTR [rip+0x153db]        # 228e4 <this_node>
    d509:	mov    edi,0x1
    d50e:	lea    rsi,[rip+0xee7b]        # 1c390 <_IO_stdin_used+0x2390>
    d515:	call   2470 <__printf_chk@plt>
    d51a:	add    rsp,0x18
    d51e:	mov    edi,0x1
    d523:	pop    rbx
    d524:	pop    rbp
    d525:	pop    r12
    d527:	pop    r13
    d529:	pop    r14
    d52b:	pop    r15
    d52d:	jmp    19570 <terminate>
    d532:	mov    edx,DWORD PTR [rip+0x153ac]        # 228e4 <this_node>
    d538:	lea    rsi,[rip+0xee29]        # 1c368 <_IO_stdin_used+0x2368>
    d53f:	mov    edi,0x1
    d544:	call   2470 <__printf_chk@plt>
    d549:	mov    edi,0x1
    d54e:	call   19570 <terminate>
    d553:	jmp    d4a8 <make_lattice+0x1e8>
    d558:	nop    DWORD PTR [rax+rax*1+0x0]
    d560:	mov    edx,DWORD PTR [rip+0x1537e]        # 228e4 <this_node>
    d566:	mov    rsi,r12
    d569:	mov    edi,0x1
    d56e:	call   2470 <__printf_chk@plt>
    d573:	mov    edi,0x1
    d578:	call   19570 <terminate>
    d57d:	jmp    d325 <make_lattice+0x65>
    d582:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d58c:	nop    DWORD PTR [rax+0x0]

000000000000d590 <path_product>:
    d590:	endbr64 
    d594:	push   r15
    d596:	push   r14
    d598:	push   r13
    d59a:	push   r12
    d59c:	push   rbp
    d59d:	push   rbx
    d59e:	mov    rbx,rdi
    d5a1:	sub    rsp,0x38
    d5a5:	mov    QWORD PTR [rsp+0x10],rdi
    d5aa:	movsxd rdi,DWORD PTR [rip+0x14f4f]        # 22500 <sites_on_node>
    d5b1:	mov    DWORD PTR [rsp+0x28],esi
    d5b5:	mov    esi,0x90
    d5ba:	call   23d0 <calloc@plt>
    d5bf:	movsxd rdi,DWORD PTR [rip+0x14f3a]        # 22500 <sites_on_node>
    d5c6:	mov    esi,0x90
    d5cb:	mov    QWORD PTR [rsp+0x18],rax
    d5d0:	call   23d0 <calloc@plt>
    d5d5:	mov    r13,QWORD PTR [rip+0x151ec]        # 227c8 <lattice>
    d5dc:	mov    QWORD PTR [rsp],rax
    d5e0:	movsxd rax,DWORD PTR [rbx]
    d5e3:	cmp    eax,0x3
    d5e6:	jle    dc28 <path_product+0x698>
    d5ec:	mov    edx,DWORD PTR [rip+0x14f0e]        # 22500 <sites_on_node>
    d5f2:	test   edx,edx
    d5f4:	jle    d63f <path_product+0xaf>
    d5f6:	lea    ebx,[rdx-0x1]
    d5f9:	mov    r14,QWORD PTR [rsp+0x10]
    d5fe:	mov    ebp,0x7
    d603:	add    rbx,0x1
    d607:	shl    rbx,0xb
    d60b:	add    rbx,r13
    d60e:	jmp    d613 <path_product+0x83>
    d610:	mov    eax,DWORD PTR [r14]
    d613:	mov    ecx,ebp
    d615:	lea    rsi,[r13+0x6e0]
    d61c:	sub    ecx,eax
    d61e:	movsxd rax,ecx
    d621:	lea    rax,[rax+rax*8]
    d625:	shl    rax,0x4
    d629:	lea    rdi,[r13+rax*1+0x70]
    d62e:	add    r13,0x800
    d635:	call   14a00 <su3_adjoint>
    d63a:	cmp    r13,rbx
    d63d:	jne    d610 <path_product+0x80>
    d63f:	mov    rax,QWORD PTR [rsp+0x10]
    d644:	cmp    DWORD PTR [rsp+0x28],0x1
    d649:	mov    r13d,0x1
    d64f:	lea    rbp,[rip+0x1520a]        # 22860 <gen_pt>
    d656:	mov    r14d,0x7
    d65c:	lea    rbx,[rax+0x4]
    d660:	jle    d733 <path_product+0x1a3>
    d666:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d670:	mov    edx,DWORD PTR [rbx-0x4]
    d673:	movsxd rax,DWORD PTR [rbx]
    d676:	test   r13b,0x1
    d67a:	je     d7d0 <path_product+0x240>
    d680:	cmp    eax,0x3
    d683:	jg     d948 <path_product+0x3b8>
    d689:	cmp    edx,0x3
    d68c:	jle    da10 <path_product+0x480>
    d692:	mov    ecx,DWORD PTR [rip+0x14e68]        # 22500 <sites_on_node>
    d698:	mov    r15,QWORD PTR [rip+0x15129]        # 227c8 <lattice>
    d69f:	test   ecx,ecx
    d6a1:	jle    d701 <path_product+0x171>
    d6a3:	lea    edx,[rcx-0x1]
    d6a6:	mov    r12,QWORD PTR [rsp]
    d6aa:	mov    QWORD PTR [rsp+0x8],rbp
    d6af:	add    rdx,0x1
    d6b3:	shl    rdx,0xb
    d6b7:	mov    rbp,r12
    d6ba:	lea    rcx,[r15+rdx*1]
    d6be:	mov    r12,rcx
    d6c1:	jmp    d6cb <path_product+0x13b>
    d6c3:	nop    DWORD PTR [rax+rax*1+0x0]
    d6c8:	movsxd rax,DWORD PTR [rbx]
    d6cb:	lea    rax,[rax+rax*8]
    d6cf:	lea    rdi,[r15+0x6e0]
    d6d6:	mov    rdx,rbp
    d6d9:	add    rbp,0x90
    d6e0:	shl    rax,0x4
    d6e4:	lea    rsi,[r15+rax*1+0x70]
    d6e9:	add    r15,0x800
    d6f0:	call   14440 <mult_su3_nn>
    d6f5:	cmp    r15,r12
    d6f8:	jne    d6c8 <path_product+0x138>
    d6fa:	mov    rbp,QWORD PTR [rsp+0x8]
    d6ff:	mov    eax,DWORD PTR [rbx]
    d701:	mov    r8,QWORD PTR [rbp+0x0]
    d705:	mov    rdi,QWORD PTR [rsp]
    d709:	mov    edx,r14d
    d70c:	mov    ecx,0x3
    d711:	sub    edx,eax
    d713:	mov    esi,0x90
    d718:	call   19070 <start_gather_from_temp>
    d71d:	mov    r12,rax
    d720:	add    r13d,0x1
    d724:	add    rbx,0x4
    d728:	cmp    DWORD PTR [rsp+0x28],r13d
    d72d:	jne    d670 <path_product+0xe0>
    d733:	movsxd rax,DWORD PTR [rsp+0x28]
    d738:	mov    rbx,QWORD PTR [rsp+0x10]
    d73d:	mov    rcx,rax
    d740:	mov    eax,DWORD PTR [rbx+rax*4-0x4]
    d744:	and    ecx,0x1
    d747:	jne    db68 <path_product+0x5d8>
    d74d:	cmp    eax,0x3
    d750:	jle    dd9a <path_product+0x80a>
    d756:	mov    eax,DWORD PTR [rip+0x14da4]        # 22500 <sites_on_node>
    d75c:	mov    rdx,QWORD PTR [rip+0x15065]        # 227c8 <lattice>
    d763:	test   eax,eax
    d765:	jle    d7a6 <path_product+0x216>
    d767:	sub    eax,0x1
    d76a:	mov    rbp,QWORD PTR [rsp]
    d76e:	lea    rbx,[rdx+0x6e0]
    d775:	shl    rax,0xb
    d779:	lea    r12,[rdx+rax*1+0xee0]
    d781:	nop    DWORD PTR [rax+0x0]
    d788:	mov    rsi,rbx
    d78b:	mov    rdi,rbp
    d78e:	add    rbx,0x800
    d795:	add    rbp,0x90
    d79c:	call   14bf0 <su3mat_copy>
    d7a1:	cmp    r12,rbx
    d7a4:	jne    d788 <path_product+0x1f8>
    d7a6:	mov    rdi,QWORD PTR [rsp+0x18]
    d7ab:	call   22a0 <free@plt>
    d7b0:	mov    rdi,QWORD PTR [rsp]
    d7b4:	add    rsp,0x38
    d7b8:	pop    rbx
    d7b9:	pop    rbp
    d7ba:	pop    r12
    d7bc:	pop    r13
    d7be:	pop    r14
    d7c0:	pop    r15
    d7c2:	jmp    22a0 <free@plt>
    d7c7:	nop    WORD PTR [rax+rax*1+0x0]
    d7d0:	cmp    eax,0x3
    d7d3:	jg     d880 <path_product+0x2f0>
    d7d9:	cmp    edx,0x3
    d7dc:	jle    dac8 <path_product+0x538>
    d7e2:	mov    edx,DWORD PTR [rip+0x14d18]        # 22500 <sites_on_node>
    d7e8:	mov    r15,QWORD PTR [rip+0x14fd9]        # 227c8 <lattice>
    d7ef:	test   edx,edx
    d7f1:	jle    d851 <path_product+0x2c1>
    d7f3:	sub    edx,0x1
    d7f6:	mov    r12,QWORD PTR [rsp]
    d7fa:	mov    QWORD PTR [rsp+0x8],rbp
    d7ff:	add    rdx,0x1
    d803:	shl    rdx,0xb
    d807:	mov    rbp,r12
    d80a:	lea    rcx,[r15+rdx*1]
    d80e:	mov    r12,rcx
    d811:	jmp    d81b <path_product+0x28b>
    d813:	nop    DWORD PTR [rax+rax*1+0x0]
    d818:	movsxd rax,DWORD PTR [rbx]
    d81b:	lea    rax,[rax+rax*8]
    d81f:	lea    rdx,[r15+0x6e0]
    d826:	mov    rdi,rbp
    d829:	add    rbp,0x90
    d830:	shl    rax,0x4
    d834:	lea    rsi,[r15+rax*1+0x70]
    d839:	add    r15,0x800
    d840:	call   14440 <mult_su3_nn>
    d845:	cmp    r12,r15
    d848:	jne    d818 <path_product+0x288>
    d84a:	mov    rbp,QWORD PTR [rsp+0x8]
    d84f:	mov    eax,DWORD PTR [rbx]
    d851:	mov    r8,QWORD PTR [rbp+0x0]
    d855:	mov    edx,r14d
    d858:	mov    ecx,0x3
    d85d:	mov    esi,0x90
    d862:	sub    edx,eax
    d864:	mov    edi,0x6e0
    d869:	call   18f40 <start_gather>
    d86e:	mov    r12,rax
    d871:	jmp    d720 <path_product+0x190>
    d876:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d880:	cmp    edx,0x3
    d883:	jle    dd00 <path_product+0x770>
    d889:	mov    r8,QWORD PTR [rbp+0x0]
    d88d:	mov    rdi,QWORD PTR [rsp]
    d891:	mov    edx,r14d
    d894:	mov    ecx,0x3
    d899:	sub    edx,eax
    d89b:	mov    esi,0x90
    d8a0:	call   19070 <start_gather_from_temp>
    d8a5:	mov    r12,rax
    d8a8:	mov    rdi,r12
    d8ab:	call   19170 <wait_gather>
    d8b0:	mov    edx,DWORD PTR [rip+0x14c4a]        # 22500 <sites_on_node>
    d8b6:	mov    rax,QWORD PTR [rip+0x14f0b]        # 227c8 <lattice>
    d8bd:	test   edx,edx
    d8bf:	jle    d935 <path_product+0x3a5>
    d8c1:	lea    r15d,[rdx-0x1]
    d8c5:	mov    QWORD PTR [rsp+0x8],r12
    d8ca:	add    r15,0x1
    d8ce:	mov    DWORD PTR [rsp+0x20],r13d
    d8d3:	mov    r13,rbp
    d8d6:	shl    r15,0xb
    d8da:	lea    rcx,[rax+r15*1]
    d8de:	xor    r15d,r15d
    d8e1:	mov    r12,r15
    d8e4:	mov    rbp,rcx
    d8e7:	mov    r15,rax
    d8ea:	nop    WORD PTR [rax+rax*1+0x0]
    d8f0:	mov    eax,r14d
    d8f3:	sub    eax,DWORD PTR [rbx]
    d8f5:	lea    rdx,[r15+0x6e0]
    d8fc:	cdqe   
    d8fe:	lea    rax,[rax+rax*8]
    d902:	shl    rax,0x4
    d906:	lea    rsi,[r15+rax*1+0x70]
    d90b:	mov    rax,QWORD PTR [r13+0x0]
    d90f:	add    r15,0x800
    d916:	mov    rdi,QWORD PTR [rax+r12*1]
    d91a:	add    r12,0x8
    d91e:	call   14350 <mult_su3_na>
    d923:	cmp    r15,rbp
    d926:	jne    d8f0 <path_product+0x360>
    d928:	mov    rbp,r13
    d92b:	mov    r12,QWORD PTR [rsp+0x8]
    d930:	mov    r13d,DWORD PTR [rsp+0x20]
    d935:	mov    rdi,r12
    d938:	call   19180 <cleanup_gather>
    d93d:	jmp    d720 <path_product+0x190>
    d942:	nop    WORD PTR [rax+rax*1+0x0]
    d948:	cmp    edx,0x3
    d94b:	jle    dc60 <path_product+0x6d0>
    d951:	mov    r8,QWORD PTR [rbp+0x0]
    d955:	mov    edx,r14d
    d958:	mov    ecx,0x3
    d95d:	mov    esi,0x90
    d962:	sub    edx,eax
    d964:	mov    edi,0x6e0
    d969:	call   18f40 <start_gather>
    d96e:	mov    r12,rax
    d971:	mov    rdi,r12
    d974:	call   19170 <wait_gather>
    d979:	mov    eax,DWORD PTR [rip+0x14b81]        # 22500 <sites_on_node>
    d97f:	mov    rcx,QWORD PTR [rip+0x14e42]        # 227c8 <lattice>
    d986:	test   eax,eax
    d988:	jle    d935 <path_product+0x3a5>
    d98a:	lea    r15d,[rax-0x1]
    d98e:	mov    rdx,QWORD PTR [rsp]
    d992:	mov    QWORD PTR [rsp+0x20],r12
    d997:	add    r15,0x1
    d99b:	mov    DWORD PTR [rsp+0x2c],r13d
    d9a0:	shl    r15,0xb
    d9a4:	mov    r12,rdx
    d9a7:	lea    rax,[rcx+r15*1]
    d9ab:	xor    r15d,r15d
    d9ae:	mov    QWORD PTR [rsp+0x8],rax
    d9b3:	mov    r13,r15
    d9b6:	mov    r15,rbp
    d9b9:	mov    rbp,rcx
    d9bc:	nop    DWORD PTR [rax+0x0]
    d9c0:	mov    eax,r14d
    d9c3:	sub    eax,DWORD PTR [rbx]
    d9c5:	mov    rdx,r12
    d9c8:	add    r12,0x90
    d9cf:	cdqe   
    d9d1:	lea    rax,[rax+rax*8]
    d9d5:	shl    rax,0x4
    d9d9:	lea    rsi,[rbp+rax*1+0x70]
    d9de:	mov    rax,QWORD PTR [r15]
    d9e1:	add    rbp,0x800
    d9e8:	mov    rdi,QWORD PTR [rax+r13*1]
    d9ec:	add    r13,0x8
    d9f0:	call   14350 <mult_su3_na>
    d9f5:	cmp    rbp,QWORD PTR [rsp+0x8]
    d9fa:	jne    d9c0 <path_product+0x430>
    d9fc:	mov    r12,QWORD PTR [rsp+0x20]
    da01:	mov    r13d,DWORD PTR [rsp+0x2c]
    da06:	mov    rbp,r15
    da09:	jmp    d935 <path_product+0x3a5>
    da0e:	xchg   ax,ax
    da10:	mov    rdi,r12
    da13:	call   19170 <wait_gather>
    da18:	mov    edx,DWORD PTR [rip+0x14ae2]        # 22500 <sites_on_node>
    da1e:	mov    rax,QWORD PTR [rip+0x14da3]        # 227c8 <lattice>
    da25:	test   edx,edx
    da27:	jle    dab4 <path_product+0x524>
    da2d:	lea    r15d,[rdx-0x1]
    da31:	mov    r8,QWORD PTR [rsp]
    da35:	mov    DWORD PTR [rsp+0x2c],r13d
    da3a:	add    r15,0x1
    da3e:	mov    QWORD PTR [rsp+0x20],r12
    da43:	shl    r15,0xb
    da47:	mov    r12,r8
    da4a:	lea    rcx,[rax+r15*1]
    da4e:	xor    r15d,r15d
    da51:	mov    QWORD PTR [rsp+0x8],rcx
    da56:	mov    r13,r15
    da59:	mov    r15,rax
    da5c:	mov    rax,rbp
    da5f:	mov    rbp,rbx
    da62:	mov    rbx,rax
    da65:	nop    DWORD PTR [rax]
    da68:	movsxd rax,DWORD PTR [rbp+0x0]
    da6c:	mov    rdx,r12
    da6f:	add    r12,0x90
    da76:	lea    rax,[rax+rax*8]
    da7a:	shl    rax,0x4
    da7e:	lea    rsi,[r15+rax*1+0x70]
    da83:	mov    rax,QWORD PTR [rbx]
    da86:	add    r15,0x800
    da8d:	mov    rdi,QWORD PTR [rax+r13*1]
    da91:	add    r13,0x8
    da95:	call   14440 <mult_su3_nn>
    da9a:	cmp    r15,QWORD PTR [rsp+0x8]
    da9f:	jne    da68 <path_product+0x4d8>
    daa1:	mov    rax,rbx
    daa4:	mov    r12,QWORD PTR [rsp+0x20]
    daa9:	mov    r13d,DWORD PTR [rsp+0x2c]
    daae:	mov    rbx,rbp
    dab1:	mov    rbp,rax
    dab4:	mov    rdi,r12
    dab7:	call   19180 <cleanup_gather>
    dabc:	mov    eax,DWORD PTR [rbx]
    dabe:	jmp    d701 <path_product+0x171>
    dac3:	nop    DWORD PTR [rax+rax*1+0x0]
    dac8:	mov    rdi,r12
    dacb:	call   19170 <wait_gather>
    dad0:	mov    edx,DWORD PTR [rip+0x14a2a]        # 22500 <sites_on_node>
    dad6:	mov    rax,QWORD PTR [rip+0x14ceb]        # 227c8 <lattice>
    dadd:	test   edx,edx
    dadf:	jle    db55 <path_product+0x5c5>
    dae1:	lea    r15d,[rdx-0x1]
    dae5:	mov    QWORD PTR [rsp+0x8],r12
    daea:	add    r15,0x1
    daee:	mov    DWORD PTR [rsp+0x20],r13d
    daf3:	mov    r13,rbp
    daf6:	mov    rbp,rbx
    daf9:	shl    r15,0xb
    dafd:	lea    rcx,[rax+r15*1]
    db01:	xor    r15d,r15d
    db04:	mov    r12,r15
    db07:	mov    rbx,rcx
    db0a:	mov    r15,rax
    db0d:	nop    DWORD PTR [rax]
    db10:	movsxd rax,DWORD PTR [rbp+0x0]
    db14:	lea    rdx,[r15+0x6e0]
    db1b:	lea    rax,[rax+rax*8]
    db1f:	shl    rax,0x4
    db23:	lea    rsi,[r15+rax*1+0x70]
    db28:	mov    rax,QWORD PTR [r13+0x0]
    db2c:	add    r15,0x800
    db33:	mov    rdi,QWORD PTR [rax+r12*1]
    db37:	add    r12,0x8
    db3b:	call   14440 <mult_su3_nn>
    db40:	cmp    rbx,r15
    db43:	jne    db10 <path_product+0x580>
    db45:	mov    rbx,rbp
    db48:	mov    r12,QWORD PTR [rsp+0x8]
    db4d:	mov    rbp,r13
    db50:	mov    r13d,DWORD PTR [rsp+0x20]
    db55:	mov    rdi,r12
    db58:	call   19180 <cleanup_gather>
    db5d:	mov    eax,DWORD PTR [rbx]
    db5f:	jmp    d851 <path_product+0x2c1>
    db64:	nop    DWORD PTR [rax+0x0]
    db68:	cmp    eax,0x3
    db6b:	jg     d7a6 <path_product+0x216>
    db71:	mov    rdi,r12
    db74:	call   19170 <wait_gather>
    db79:	mov    eax,DWORD PTR [rip+0x14981]        # 22500 <sites_on_node>
    db7f:	test   eax,eax
    db81:	jle    dbc0 <path_product+0x630>
    db83:	sub    eax,0x1
    db86:	mov    r14,QWORD PTR [rsp+0x18]
    db8b:	xor    ebx,ebx
    db8d:	lea    rbp,[rip+0x14ccc]        # 22860 <gen_pt>
    db94:	lea    r13,[rax*8+0x8]
    db9c:	nop    DWORD PTR [rax+0x0]
    dba0:	mov    rax,QWORD PTR [rbp+0x0]
    dba4:	mov    rsi,r14
    dba7:	add    r14,0x90
    dbae:	mov    rdi,QWORD PTR [rax+rbx*1]
    dbb2:	add    rbx,0x8
    dbb6:	call   14bf0 <su3mat_copy>
    dbbb:	cmp    r13,rbx
    dbbe:	jne    dba0 <path_product+0x610>
    dbc0:	mov    rdi,r12
    dbc3:	call   19180 <cleanup_gather>
    dbc8:	mov    eax,DWORD PTR [rip+0x14932]        # 22500 <sites_on_node>
    dbce:	mov    rdx,QWORD PTR [rip+0x14bf3]        # 227c8 <lattice>
    dbd5:	test   eax,eax
    dbd7:	jle    d7a6 <path_product+0x216>
    dbdd:	sub    eax,0x1
    dbe0:	mov    rbp,QWORD PTR [rsp+0x18]
    dbe5:	lea    rbx,[rdx+0x6e0]
    dbec:	shl    rax,0xb
    dbf0:	lea    r12,[rdx+rax*1+0xee0]
    dbf8:	nop    DWORD PTR [rax+rax*1+0x0]
    dc00:	mov    rsi,rbx
    dc03:	mov    rdi,rbp
    dc06:	add    rbx,0x800
    dc0d:	add    rbp,0x90
    dc14:	call   14bf0 <su3mat_copy>
    dc19:	cmp    r12,rbx
    dc1c:	jne    dc00 <path_product+0x670>
    dc1e:	jmp    d7a6 <path_product+0x216>
    dc23:	nop    DWORD PTR [rax+rax*1+0x0]
    dc28:	lea    rdi,[rax+rax*8]
    dc2c:	mov    edx,0x7
    dc31:	mov    ecx,0x3
    dc36:	mov    r8,QWORD PTR [rip+0x14c23]        # 22860 <gen_pt>
    dc3d:	shl    rdi,0x4
    dc41:	sub    edx,eax
    dc43:	mov    esi,0x90
    dc48:	add    rdi,0x70
    dc4c:	call   18f40 <start_gather>
    dc51:	mov    r12,rax
    dc54:	jmp    d63f <path_product+0xaf>
    dc59:	nop    DWORD PTR [rax+0x0]
    dc60:	mov    rdi,r12
    dc63:	call   19170 <wait_gather>
    dc68:	mov    eax,DWORD PTR [rip+0x14892]        # 22500 <sites_on_node>
    dc6e:	test   eax,eax
    dc70:	jle    dccd <path_product+0x73d>
    dc72:	mov    rdx,QWORD PTR [rsp+0x18]
    dc77:	sub    eax,0x1
    dc7a:	mov    QWORD PTR [rsp+0x8],r12
    dc7f:	xor    r15d,r15d
    dc82:	lea    rax,[rax*8+0x8]
    dc8a:	mov    QWORD PTR [rsp+0x20],rbx
    dc8f:	mov    r12,rbp
    dc92:	mov    rbx,rax
    dc95:	mov    rbp,rdx
    dc98:	nop    DWORD PTR [rax+rax*1+0x0]
    dca0:	mov    rax,QWORD PTR [r12]
    dca4:	mov    rsi,rbp
    dca7:	add    rbp,0x90
    dcae:	mov    rdi,QWORD PTR [rax+r15*1]
    dcb2:	add    r15,0x8
    dcb6:	call   14bf0 <su3mat_copy>
    dcbb:	cmp    rbx,r15
    dcbe:	jne    dca0 <path_product+0x710>
    dcc0:	mov    rbp,r12
    dcc3:	mov    rbx,QWORD PTR [rsp+0x20]
    dcc8:	mov    r12,QWORD PTR [rsp+0x8]
    dccd:	mov    rdi,r12
    dcd0:	call   19180 <cleanup_gather>
    dcd5:	mov    r8,QWORD PTR [rbp+0x0]
    dcd9:	mov    rdi,QWORD PTR [rsp+0x18]
    dcde:	mov    edx,r14d
    dce1:	mov    ecx,0x3
    dce6:	sub    edx,DWORD PTR [rbx]
    dce8:	mov    esi,0x90
    dced:	call   19070 <start_gather_from_temp>
    dcf2:	mov    r12,rax
    dcf5:	jmp    d971 <path_product+0x3e1>
    dcfa:	nop    WORD PTR [rax+rax*1+0x0]
    dd00:	mov    rdi,r12
    dd03:	call   19170 <wait_gather>
    dd08:	mov    eax,DWORD PTR [rip+0x147f2]        # 22500 <sites_on_node>
    dd0e:	test   eax,eax
    dd10:	jle    dd6d <path_product+0x7dd>
    dd12:	mov    rdx,QWORD PTR [rsp+0x18]
    dd17:	sub    eax,0x1
    dd1a:	mov    QWORD PTR [rsp+0x8],r12
    dd1f:	xor    r15d,r15d
    dd22:	lea    rax,[rax*8+0x8]
    dd2a:	mov    QWORD PTR [rsp+0x20],rbx
    dd2f:	mov    r12,rbp
    dd32:	mov    rbx,rax
    dd35:	mov    rbp,rdx
    dd38:	nop    DWORD PTR [rax+rax*1+0x0]
    dd40:	mov    rax,QWORD PTR [r12]
    dd44:	mov    rsi,rbp
    dd47:	add    rbp,0x90
    dd4e:	mov    rdi,QWORD PTR [rax+r15*1]
    dd52:	add    r15,0x8
    dd56:	call   14bf0 <su3mat_copy>
    dd5b:	cmp    rbx,r15
    dd5e:	jne    dd40 <path_product+0x7b0>
    dd60:	mov    rbp,r12
    dd63:	mov    rbx,QWORD PTR [rsp+0x20]
    dd68:	mov    r12,QWORD PTR [rsp+0x8]
    dd6d:	mov    rdi,r12
    dd70:	call   19180 <cleanup_gather>
    dd75:	mov    r8,QWORD PTR [rbp+0x0]
    dd79:	mov    rdi,QWORD PTR [rsp+0x18]
    dd7e:	mov    edx,r14d
    dd81:	mov    ecx,0x3
    dd86:	sub    edx,DWORD PTR [rbx]
    dd88:	mov    esi,0x90
    dd8d:	call   19070 <start_gather_from_temp>
    dd92:	mov    r12,rax
    dd95:	jmp    d8a8 <path_product+0x318>
    dd9a:	mov    rdi,r12
    dd9d:	call   19170 <wait_gather>
    dda2:	mov    eax,DWORD PTR [rip+0x14758]        # 22500 <sites_on_node>
    dda8:	mov    r14,QWORD PTR [rip+0x14a19]        # 227c8 <lattice>
    ddaf:	test   eax,eax
    ddb1:	jle    ddf0 <path_product+0x860>
    ddb3:	sub    eax,0x1
    ddb6:	add    r14,0x6e0
    ddbd:	xor    ebx,ebx
    ddbf:	lea    r13,[rax*8+0x8]
    ddc7:	lea    rbp,[rip+0x14a92]        # 22860 <gen_pt>
    ddce:	xchg   ax,ax
    ddd0:	mov    rax,QWORD PTR [rbp+0x0]
    ddd4:	mov    rsi,r14
    ddd7:	add    r14,0x800
    ddde:	mov    rdi,QWORD PTR [rax+rbx*1]
    dde2:	add    rbx,0x8
    dde6:	call   14bf0 <su3mat_copy>
    ddeb:	cmp    rbx,r13
    ddee:	jne    ddd0 <path_product+0x840>
    ddf0:	mov    rdi,r12
    ddf3:	call   19180 <cleanup_gather>
    ddf8:	jmp    d7a6 <path_product+0x216>
    ddfd:	nop    DWORD PTR [rax]

000000000000de00 <ploop>:
    de00:	endbr64 
    de04:	push   r15
    de06:	pxor   xmm1,xmm1
    de0a:	push   r14
    de0c:	movapd xmm0,xmm1
    de10:	push   r13
    de12:	push   r12
    de14:	push   rbp
    de15:	push   rbx
    de16:	sub    rsp,0xd8
    de1d:	mov    rax,QWORD PTR fs:0x28
    de26:	mov    QWORD PTR [rsp+0xc8],rax
    de2e:	xor    eax,eax
    de30:	call   13ee0 <cmplx>
    de35:	mov    ecx,0x2
    de3a:	mov    edx,0x3
    de3f:	mov    r8,QWORD PTR [rip+0x14a1a]        # 22860 <gen_pt>
    de46:	mov    esi,0x90
    de4b:	mov    edi,0x220
    de50:	movsd  QWORD PTR [rsp+0x10],xmm0
    de56:	movsd  QWORD PTR [rsp+0x18],xmm1
    de5c:	mov    QWORD PTR [rsp+0x20],0x0
    de65:	mov    DWORD PTR [rsp+0x28],0x0
    de6d:	call   18f40 <start_gather>
    de72:	mov    rdi,rax
    de75:	mov    r13,rax
    de78:	call   19170 <wait_gather>
    de7d:	mov    ecx,DWORD PTR [rip+0x14801]        # 22684 <even_sites_on_node>
    de83:	mov    rbp,QWORD PTR [rip+0x1493e]        # 227c8 <lattice>
    de8a:	test   ecx,ecx
    de8c:	jle    deca <ploop+0xca>
    de8e:	add    rbp,0x6e0
    de95:	xor    r12d,r12d
    de98:	lea    rbx,[rip+0x149c1]        # 22860 <gen_pt>
    de9f:	nop
    dea0:	mov    rax,QWORD PTR [rbx]
    dea3:	lea    rdi,[rbp-0x4c0]
    deaa:	mov    rdx,rbp
    dead:	add    rbp,0x800
    deb4:	mov    rsi,QWORD PTR [rax+r12*8]
    deb8:	add    r12,0x1
    debc:	call   14440 <mult_su3_nn>
    dec1:	cmp    DWORD PTR [rip+0x147bc],r12d        # 22684 <even_sites_on_node>
    dec8:	jg     dea0 <ploop+0xa0>
    deca:	mov    rdi,r13
    decd:	call   19180 <cleanup_gather>
    ded2:	cmp    DWORD PTR [rip+0x144f7],0x2        # 223d0 <nt>
    ded9:	jle    e031 <ploop+0x231>
    dedf:	lea    rax,[rsp+0x20]
    dee4:	mov    r12d,0x2
    deea:	lea    r13,[rsp+0x30]
    deef:	mov    QWORD PTR [rsp+0x8],rax
    def4:	lea    rbx,[rip+0x14965]        # 22860 <gen_pt>
    defb:	nop    DWORD PTR [rax+rax*1+0x0]
    df00:	mov    rdx,QWORD PTR [rsp+0x8]
    df05:	mov    r8,QWORD PTR [rbx]
    df08:	mov    ecx,0x2
    df0d:	mov    esi,0x90
    df12:	mov    edi,0x6e0
    df17:	mov    DWORD PTR [rsp+0x2c],r12d
    df1c:	call   19190 <start_general_gather>
    df21:	mov    rdi,rax
    df24:	mov    rbp,rax
    df27:	call   192f0 <wait_general_gather>
    df2c:	mov    edx,DWORD PTR [rip+0x14752]        # 22684 <even_sites_on_node>
    df32:	mov    rcx,QWORD PTR [rip+0x1488f]        # 227c8 <lattice>
    df39:	test   edx,edx
    df3b:	jle    e018 <ploop+0x218>
    df41:	lea    r14,[rcx+0x6e0]
    df48:	xor    r15d,r15d
    df4b:	nop    DWORD PTR [rax+rax*1+0x0]
    df50:	cmp    WORD PTR [r14-0x6da],0x1
    df59:	jg     e000 <ploop+0x200>
    df5f:	mov    rax,QWORD PTR [rbx]
    df62:	mov    rdx,r13
    df65:	mov    rdi,r14
    df68:	mov    rsi,QWORD PTR [rax+r15*8]
    df6c:	call   14440 <mult_su3_nn>
    df71:	movdqa xmm3,XMMWORD PTR [rsp+0x30]
    df77:	mov    rax,r15
    df7a:	movdqa xmm4,XMMWORD PTR [rsp+0x40]
    df80:	shl    rax,0xb
    df84:	add    rax,QWORD PTR [rip+0x1483d]        # 227c8 <lattice>
    df8b:	movdqa xmm5,XMMWORD PTR [rsp+0x50]
    df91:	movdqa xmm6,XMMWORD PTR [rsp+0x60]
    df97:	movdqa xmm7,XMMWORD PTR [rsp+0x70]
    df9d:	movups XMMWORD PTR [rax+0x6e0],xmm3
    dfa4:	movdqa xmm2,XMMWORD PTR [rsp+0x80]
    dfad:	movups XMMWORD PTR [rax+0x6f0],xmm4
    dfb4:	movdqa xmm0,XMMWORD PTR [rsp+0x90]
    dfbd:	movdqa xmm1,XMMWORD PTR [rsp+0xa0]
    dfc6:	movups XMMWORD PTR [rax+0x700],xmm5
    dfcd:	movdqa xmm3,XMMWORD PTR [rsp+0xb0]
    dfd6:	movups XMMWORD PTR [rax+0x710],xmm6
    dfdd:	movups XMMWORD PTR [rax+0x720],xmm7
    dfe4:	movups XMMWORD PTR [rax+0x730],xmm2
    dfeb:	movups XMMWORD PTR [rax+0x740],xmm0
    dff2:	movups XMMWORD PTR [rax+0x750],xmm1
    dff9:	movups XMMWORD PTR [rax+0x760],xmm3
    e000:	add    r15,0x1
    e004:	add    r14,0x800
    e00b:	cmp    DWORD PTR [rip+0x14672],r15d        # 22684 <even_sites_on_node>
    e012:	jg     df50 <ploop+0x150>
    e018:	mov    rdi,rbp
    e01b:	add    r12d,0x2
    e01f:	call   19300 <cleanup_general_gather>
    e024:	cmp    DWORD PTR [rip+0x143a5],r12d        # 223d0 <nt>
    e02b:	jg     df00 <ploop+0x100>
    e031:	mov    eax,DWORD PTR [rip+0x1464d]        # 22684 <even_sites_on_node>
    e037:	mov    rbx,QWORD PTR [rip+0x1478a]        # 227c8 <lattice>
    e03e:	test   eax,eax
    e040:	jle    e085 <ploop+0x285>
    e042:	xor    ebp,ebp
    e044:	nop    DWORD PTR [rax+0x0]
    e048:	cmp    WORD PTR [rbx+0x6],0x1
    e04d:	jg     e073 <ploop+0x273>
    e04f:	lea    rdi,[rbx+0x6e0]
    e056:	call   14ce0 <trace_su3>
    e05b:	addsd  xmm0,QWORD PTR [rsp+0x10]
    e061:	addsd  xmm1,QWORD PTR [rsp+0x18]
    e067:	movsd  QWORD PTR [rsp+0x10],xmm0
    e06d:	movsd  QWORD PTR [rsp+0x18],xmm1
    e073:	add    ebp,0x1
    e076:	add    rbx,0x800
    e07d:	cmp    DWORD PTR [rip+0x14601],ebp        # 22684 <even_sites_on_node>
    e083:	jg     e048 <ploop+0x248>
    e085:	lea    rdi,[rsp+0x10]
    e08a:	call   19410 <g_complexsum>
    e08f:	mov    eax,DWORD PTR [rip+0x14343]        # 223d8 <nx>
    e095:	pxor   xmm2,xmm2
    e099:	imul   eax,DWORD PTR [rip+0x1479c]        # 2283c <ny>
    e0a0:	imul   eax,DWORD PTR [rip+0x1432d]        # 223d4 <nz>
    e0a7:	movsd  xmm1,QWORD PTR [rsp+0x18]
    e0ad:	movsd  xmm0,QWORD PTR [rsp+0x10]
    e0b3:	cvtsi2sd xmm2,eax
    e0b7:	mov    rax,QWORD PTR [rsp+0xc8]
    e0bf:	xor    rax,QWORD PTR fs:0x28
    e0c8:	divsd  xmm1,xmm2
    e0cc:	divsd  xmm0,xmm2
    e0d0:	jne    e0e4 <ploop+0x2e4>
    e0d2:	add    rsp,0xd8
    e0d9:	pop    rbx
    e0da:	pop    rbp
    e0db:	pop    r12
    e0dd:	pop    r13
    e0df:	pop    r14
    e0e1:	pop    r15
    e0e3:	ret    
    e0e4:	call   2350 <__stack_chk_fail@plt>
    e0e9:	nop    DWORD PTR [rax+0x0]

000000000000e0f0 <ranmom>:
    e0f0:	endbr64 
    e0f4:	mov    edx,DWORD PTR [rip+0x14406]        # 22500 <sites_on_node>
    e0fa:	mov    rax,QWORD PTR [rip+0x146c7]        # 227c8 <lattice>
    e101:	test   edx,edx
    e103:	jle    e16d <ranmom+0x7d>
    e105:	push   r12
    e107:	xor    r12d,r12d
    e10a:	push   rbp
    e10b:	push   rbx
    e10c:	lea    rbx,[rax+0x2b0]
    e113:	nop    DWORD PTR [rax+rax*1+0x0]
    e118:	lea    rbp,[rbx-0x2a0]
    e11f:	mov    rdi,rbx
    e122:	add    r12d,0x1
    e126:	mov    rsi,rbp
    e129:	call   146d0 <random_anti_hermitian>
    e12e:	lea    rdi,[rbx+0x50]
    e132:	mov    rsi,rbp
    e135:	call   146d0 <random_anti_hermitian>
    e13a:	lea    rdi,[rbx+0xa0]
    e141:	mov    rsi,rbp
    e144:	call   146d0 <random_anti_hermitian>
    e149:	lea    rdi,[rbx+0xf0]
    e150:	mov    rsi,rbp
    e153:	add    rbx,0x800
    e15a:	call   146d0 <random_anti_hermitian>
    e15f:	cmp    DWORD PTR [rip+0x1439a],r12d        # 22500 <sites_on_node>
    e166:	jg     e118 <ranmom+0x28>
    e168:	pop    rbx
    e169:	pop    rbp
    e16a:	pop    r12
    e16c:	ret    
    e16d:	ret    
    e16e:	xchg   ax,ax

000000000000e170 <initialize_prn>:
    e170:	endbr64 
    e174:	shl    edx,0x3
    e177:	mov    QWORD PTR [rdi+0x40],0x3039
    e17f:	lea    r8d,[rdx+0x10fe7]
    e186:	add    edx,0x186a5
    e18c:	imul   esi,r8d
    e190:	movsxd rdx,edx
    e193:	mov    QWORD PTR [rdi+0x38],rdx
    e197:	lea    ecx,[rsi+0x3039]
    e19d:	mov    eax,ecx
    e19f:	imul   ecx,r8d
    e1a3:	shr    eax,0x8
    e1a6:	mov    QWORD PTR [rdi],rax
    e1a9:	add    ecx,0x3039
    e1af:	mov    eax,ecx
    e1b1:	imul   ecx,r8d
    e1b5:	shr    eax,0x8
    e1b8:	mov    QWORD PTR [rdi+0x8],rax
    e1bc:	add    ecx,0x3039
    e1c2:	mov    eax,ecx
    e1c4:	imul   ecx,r8d
    e1c8:	shr    eax,0x8
    e1cb:	mov    QWORD PTR [rdi+0x10],rax
    e1cf:	add    ecx,0x3039
    e1d5:	mov    eax,ecx
    e1d7:	imul   ecx,r8d
    e1db:	shr    eax,0x8
    e1de:	mov    QWORD PTR [rdi+0x18],rax
    e1e2:	add    ecx,0x3039
    e1e8:	mov    eax,ecx
    e1ea:	imul   ecx,r8d
    e1ee:	shr    eax,0x8
    e1f1:	mov    QWORD PTR [rdi+0x20],rax
    e1f5:	add    ecx,0x3039
    e1fb:	mov    eax,ecx
    e1fd:	imul   ecx,r8d
    e201:	shr    eax,0x8
    e204:	mov    QWORD PTR [rdi+0x28],rax
    e208:	lea    eax,[rcx+0x3039]
    e20e:	mov    ecx,eax
    e210:	imul   eax,r8d
    e214:	shr    ecx,0x8
    e217:	mov    esi,ecx
    e219:	add    eax,0x3039
    e21e:	mov    QWORD PTR [rdi+0x30],rsi
    e222:	cdqe   
    e224:	mov    QWORD PTR [rdi+0x48],rax
    e228:	mov    rax,QWORD PTR [rip+0xe181]        # 1c3b0 <_IO_stdin_used+0x23b0>
    e22f:	mov    QWORD PTR [rdi+0x50],rax
    e233:	ret    
    e234:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    e23f:	nop

000000000000e240 <myrand>:
    e240:	endbr64 
    e244:	mov    rcx,QWORD PTR [rdi+0x28]
    e248:	mov    edx,DWORD PTR [rdi+0x30]
    e24b:	pxor   xmm0,xmm0
    e24f:	mov    rsi,QWORD PTR [rdi+0x20]
    e253:	mov    rax,rcx
    e256:	shl    edx,0x11
    e259:	mov    QWORD PTR [rdi+0x30],rcx
    e25d:	shr    rax,0x7
    e261:	mov    r8,rsi
    e264:	mov    QWORD PTR [rdi+0x28],rsi
    e268:	or     edx,eax
    e26a:	mov    eax,ecx
    e26c:	shr    r8,1
    e26f:	shl    eax,0x17
    e272:	or     eax,r8d
    e275:	xor    edx,eax
    e277:	mov    rax,QWORD PTR [rdi+0x18]
    e27b:	mov    r8d,edx
    e27e:	and    edx,0xffffff
    e284:	mov    QWORD PTR [rdi+0x20],rax
    e288:	mov    rax,QWORD PTR [rdi+0x10]
    e28c:	and    r8d,0xffffff
    e293:	mov    QWORD PTR [rdi+0x18],rax
    e297:	mov    rax,QWORD PTR [rdi+0x8]
    e29b:	mov    QWORD PTR [rdi+0x10],rax
    e29f:	mov    rax,QWORD PTR [rdi]
    e2a2:	mov    QWORD PTR [rdi],rdx
    e2a5:	mov    rdx,QWORD PTR [rdi+0x38]
    e2a9:	imul   edx,DWORD PTR [rdi+0x48]
    e2ad:	mov    QWORD PTR [rdi+0x8],rax
    e2b1:	mov    eax,DWORD PTR [rdi+0x40]
    e2b4:	add    eax,edx
    e2b6:	movsxd rdx,eax
    e2b9:	shr    eax,0x8
    e2bc:	xor    eax,r8d
    e2bf:	mov    QWORD PTR [rdi+0x48],rdx
    e2c3:	cvtsi2sd xmm0,eax
    e2c7:	mulsd  xmm0,QWORD PTR [rdi+0x50]
    e2cc:	ret    
    e2cd:	nop    DWORD PTR [rax]

000000000000e2d0 <check_deviation>:
    e2d0:	endbr64 
    e2d4:	comisd xmm0,QWORD PTR [rip+0x14914]        # 22bf0 <max_deviation>
    e2dc:	jbe    e2e6 <check_deviation+0x16>
    e2de:	movsd  QWORD PTR [rip+0x1490a],xmm0        # 22bf0 <max_deviation>
    e2e6:	movapd xmm1,xmm0
    e2ea:	xor    eax,eax
    e2ec:	mulsd  xmm1,xmm0
    e2f0:	comisd xmm0,QWORD PTR [rip+0xc2d0]        # 1a5c8 <_IO_stdin_used+0x5c8>
    e2f8:	addsd  xmm1,QWORD PTR [rip+0x148f8]        # 22bf8 <av_deviation>
    e300:	seta   al
    e303:	movsd  QWORD PTR [rip+0x148ed],xmm1        # 22bf8 <av_deviation>
    e30b:	ret    
    e30c:	nop    DWORD PTR [rax+0x0]

000000000000e310 <reunit_report_problem_matrix>:
    e310:	endbr64 
    e314:	push   r14
    e316:	xor    eax,eax
    e318:	push   r13
    e31a:	mov    r13,rdi
    e31d:	push   r12
    e31f:	mov    r12d,esi
    e322:	push   rbp
    e323:	lea    rbp,[r13+0x30]
    e327:	add    r13,0xc0
    e32e:	push   rbx
    e32f:	mov    ebx,edx
    e331:	mov    r14,rbp
    e334:	call   193b0 <mynode>
    e339:	mov    ecx,r12d
    e33c:	mov    r8d,ebx
    e33f:	mov    edi,0x1
    e344:	mov    edx,eax
    e346:	movsd  xmm0,QWORD PTR [rip+0xc27a]        # 1a5c8 <_IO_stdin_used+0x5c8>
    e34e:	lea    rsi,[rip+0xe063]        # 1c3b8 <_IO_stdin_used+0x23b8>
    e355:	mov    eax,0x1
    e35a:	lea    r12,[rip+0xc247]        # 1a5a8 <_IO_stdin_used+0x5a8>
    e361:	call   2470 <__printf_chk@plt>
    e366:	lea    rdi,[rip+0xc22f]        # 1a59c <_IO_stdin_used+0x59c>
    e36d:	call   22f0 <puts@plt>
    e372:	lea    rbx,[r14-0x30]
    e376:	movsd  xmm0,QWORD PTR [rbx]
    e37a:	mov    rsi,r12
    e37d:	mov    edi,0x1
    e382:	add    rbx,0x10
    e386:	mov    eax,0x1
    e38b:	call   2470 <__printf_chk@plt>
    e390:	movsd  xmm0,QWORD PTR [rbx-0x8]
    e395:	mov    rsi,r12
    e398:	mov    edi,0x1
    e39d:	mov    eax,0x1
    e3a2:	call   2470 <__printf_chk@plt>
    e3a7:	cmp    rbx,r14
    e3aa:	jne    e376 <reunit_report_problem_matrix+0x66>
    e3ac:	mov    edi,0xa
    e3b1:	lea    r14,[rbx+0x30]
    e3b5:	call   22b0 <putchar@plt>
    e3ba:	cmp    r14,r13
    e3bd:	jne    e372 <reunit_report_problem_matrix+0x62>
    e3bf:	lea    rdi,[rip+0xc1e6]        # 1a5ac <_IO_stdin_used+0x5ac>
    e3c6:	lea    r12,[rip+0xc1ee]        # 1a5bb <_IO_stdin_used+0x5bb>
    e3cd:	call   22f0 <puts@plt>
    e3d2:	lea    rbx,[rbp-0x30]
    e3d6:	mov    edx,DWORD PTR [rbx]
    e3d8:	mov    rsi,r12
    e3db:	mov    edi,0x1
    e3e0:	xor    eax,eax
    e3e2:	add    rbx,0x10
    e3e6:	call   2470 <__printf_chk@plt>
    e3eb:	mov    edx,DWORD PTR [rbx-0x8]
    e3ee:	mov    rsi,r12
    e3f1:	mov    edi,0x1
    e3f6:	xor    eax,eax
    e3f8:	call   2470 <__printf_chk@plt>
    e3fd:	cmp    rbx,rbp
    e400:	jne    e3d6 <reunit_report_problem_matrix+0xc6>
    e402:	mov    edi,0xa
    e407:	lea    rbp,[rbx+0x30]
    e40b:	call   22b0 <putchar@plt>
    e410:	cmp    rbp,r13
    e413:	jne    e3d2 <reunit_report_problem_matrix+0xc2>
    e415:	lea    rdi,[rip+0xc1a5]        # 1a5c1 <_IO_stdin_used+0x5c1>
    e41c:	call   22f0 <puts@plt>
    e421:	mov    rdi,QWORD PTR [rip+0x13eb8]        # 222e0 <stdout@@GLIBC_2.2.5>
    e428:	pop    rbx
    e429:	pop    rbp
    e42a:	pop    r12
    e42c:	pop    r13
    e42e:	pop    r14
    e430:	jmp    2420 <fflush@plt>
    e435:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000e440 <reunit_su3>:
    e440:	endbr64 
    e444:	push   rbp
    e445:	push   rbx
    e446:	sub    rsp,0x48
    e44a:	movsd  xmm10,QWORD PTR [rdi]
    e44f:	movsd  xmm9,QWORD PTR [rdi+0x8]
    e455:	movsd  xmm8,QWORD PTR [rdi+0x10]
    e45b:	movsd  xmm2,QWORD PTR [rdi+0x18]
    e460:	movapd xmm5,xmm10
    e465:	movapd xmm0,xmm9
    e46a:	movsd  xmm6,QWORD PTR [rdi+0x20]
    e46f:	movsd  xmm7,QWORD PTR [rdi+0x28]
    e474:	mulsd  xmm0,xmm9
    e479:	mulsd  xmm5,xmm10
    e47e:	addsd  xmm5,xmm0
    e482:	movapd xmm0,xmm8
    e487:	mulsd  xmm0,xmm8
    e48c:	addsd  xmm5,xmm0
    e490:	movapd xmm0,xmm2
    e494:	mulsd  xmm0,xmm2
    e498:	addsd  xmm5,xmm0
    e49c:	movapd xmm0,xmm6
    e4a0:	mulsd  xmm0,xmm6
    e4a4:	addsd  xmm5,xmm0
    e4a8:	movapd xmm0,xmm7
    e4ac:	mulsd  xmm0,xmm7
    e4b0:	addsd  xmm5,xmm0
    e4b4:	movapd xmm12,xmm5
    e4b9:	subsd  xmm12,QWORD PTR [rip+0xbdde]        # 1a2a0 <_IO_stdin_used+0x2a0>
    e4c2:	movapd xmm0,xmm12
    e4c7:	andpd  xmm0,XMMWORD PTR [rip+0xc101]        # 1a5d0 <_IO_stdin_used+0x5d0>
    e4cf:	comisd xmm0,QWORD PTR [rip+0x14719]        # 22bf0 <max_deviation>
    e4d7:	jbe    e4e1 <reunit_su3+0xa1>
    e4d9:	movsd  QWORD PTR [rip+0x1470f],xmm0        # 22bf0 <max_deviation>
    e4e1:	mulsd  xmm12,xmm12
    e4e6:	pxor   xmm4,xmm4
    e4ea:	movapd xmm1,xmm5
    e4ee:	xor    ebp,ebp
    e4f0:	comisd xmm0,QWORD PTR [rip+0xc0d0]        # 1a5c8 <_IO_stdin_used+0x5c8>
    e4f8:	sqrtsd xmm1,xmm1
    e4fc:	addsd  xmm12,QWORD PTR [rip+0x146f3]        # 22bf8 <av_deviation>
    e505:	movsd  QWORD PTR [rip+0x146ea],xmm12        # 22bf8 <av_deviation>
    e50e:	seta   bpl
    e512:	ucomisd xmm4,xmm5
    e516:	ja     ead0 <reunit_su3+0x690>
    e51c:	movsd  xmm4,QWORD PTR [rip+0xbd7c]        # 1a2a0 <_IO_stdin_used+0x2a0>
    e524:	movsd  xmm3,QWORD PTR [rdi+0x38]
    e529:	movsd  xmm0,QWORD PTR [rdi+0x48]
    e52e:	movsd  xmm5,QWORD PTR [rdi+0x50]
    e533:	divsd  xmm4,xmm1
    e537:	movsd  xmm14,QWORD PTR [rdi+0x58]
    e53d:	movsd  QWORD PTR [rsp+0x8],xmm14
    e544:	mulsd  xmm2,xmm4
    e548:	movapd xmm1,xmm4
    e54c:	mulsd  xmm10,xmm4
    e551:	mulsd  xmm9,xmm4
    e556:	mulsd  xmm1,xmm7
    e55a:	mulsd  xmm8,xmm4
    e55f:	movsd  QWORD PTR [rdi+0x18],xmm2
    e564:	mulsd  xmm6,xmm4
    e568:	movapd xmm15,xmm2
    e56d:	movsd  xmm2,QWORD PTR [rdi+0x30]
    e572:	movapd xmm7,xmm10
    e577:	movsd  xmm4,QWORD PTR [rdi+0x40]
    e57c:	movsd  QWORD PTR [rdi],xmm10
    e581:	movapd xmm11,xmm9
    e586:	movapd xmm13,xmm9
    e58b:	movsd  QWORD PTR [rdi+0x8],xmm9
    e591:	mulsd  xmm11,xmm3
    e596:	movsd  QWORD PTR [rdi+0x28],xmm1
    e59b:	mulsd  xmm7,xmm2
    e59f:	movsd  QWORD PTR [rdi+0x10],xmm8
    e5a5:	mulsd  xmm13,xmm2
    e5aa:	movsd  QWORD PTR [rdi+0x20],xmm6
    e5af:	addsd  xmm7,xmm11
    e5b4:	movapd xmm11,xmm8
    e5b9:	mulsd  xmm11,xmm4
    e5be:	addsd  xmm11,xmm7
    e5c3:	movapd xmm7,xmm15
    e5c8:	mulsd  xmm7,xmm0
    e5cc:	addsd  xmm11,xmm7
    e5d1:	movapd xmm7,xmm6
    e5d5:	mulsd  xmm7,xmm5
    e5d9:	addsd  xmm7,xmm11
    e5de:	movapd xmm11,xmm14
    e5e3:	mulsd  xmm11,xmm1
    e5e8:	mulsd  xmm14,xmm6
    e5ed:	addsd  xmm7,xmm11
    e5f2:	movapd xmm11,xmm10
    e5f7:	mulsd  xmm11,xmm3
    e5fc:	subsd  xmm11,xmm13
    e601:	movapd xmm13,xmm11
    e606:	movapd xmm11,xmm8
    e60b:	mulsd  xmm11,xmm0
    e610:	addsd  xmm11,xmm13
    e615:	movapd xmm13,xmm15
    e61a:	mulsd  xmm13,xmm4
    e61f:	subsd  xmm11,xmm13
    e624:	movapd xmm13,xmm1
    e629:	mulsd  xmm13,xmm5
    e62e:	addsd  xmm11,xmm14
    e633:	movapd xmm14,xmm7
    e638:	mulsd  xmm14,xmm7
    e63d:	subsd  xmm11,xmm13
    e642:	movapd xmm13,xmm11
    e647:	mulsd  xmm13,xmm11
    e64c:	addsd  xmm13,xmm14
    e651:	movsd  xmm14,QWORD PTR [rip+0x14596]        # 22bf0 <max_deviation>
    e65a:	movsd  QWORD PTR [rsp],xmm14
    e660:	comisd xmm13,xmm14
    e665:	jbe    e676 <reunit_su3+0x236>
    e667:	movsd  QWORD PTR [rip+0x14580],xmm13        # 22bf0 <max_deviation>
    e670:	movsd  QWORD PTR [rsp],xmm13
    e676:	movapd xmm14,xmm13
    e67b:	xor    ebx,ebx
    e67d:	mulsd  xmm14,xmm13
    e682:	comisd xmm13,QWORD PTR [rip+0xbf3d]        # 1a5c8 <_IO_stdin_used+0x5c8>
    e68b:	movapd xmm13,xmm9
    e690:	mulsd  xmm13,xmm11
    e695:	seta   bl
    e698:	add    ebx,ebp
    e69a:	addsd  xmm14,xmm12
    e69f:	movapd xmm12,xmm10
    e6a4:	mulsd  xmm12,xmm7
    e6a9:	movsd  QWORD PTR [rsp+0x10],xmm14
    e6b0:	subsd  xmm12,xmm13
    e6b5:	movapd xmm13,xmm10
    e6ba:	mulsd  xmm13,xmm11
    e6bf:	subsd  xmm2,xmm12
    e6c4:	movapd xmm12,xmm9
    e6c9:	mulsd  xmm12,xmm7
    e6ce:	movsd  QWORD PTR [rdi+0x30],xmm2
    e6d3:	addsd  xmm12,xmm13
    e6d8:	movapd xmm13,xmm15
    e6dd:	mulsd  xmm13,xmm11
    e6e2:	subsd  xmm3,xmm12
    e6e7:	movapd xmm12,xmm8
    e6ec:	mulsd  xmm12,xmm7
    e6f1:	movsd  QWORD PTR [rdi+0x38],xmm3
    e6f6:	subsd  xmm12,xmm13
    e6fb:	movapd xmm13,xmm8
    e700:	mulsd  xmm13,xmm11
    e705:	subsd  xmm4,xmm12
    e70a:	movapd xmm12,xmm15
    e70f:	mulsd  xmm12,xmm7
    e714:	movsd  QWORD PTR [rdi+0x40],xmm4
    e719:	addsd  xmm12,xmm13
    e71e:	movapd xmm13,xmm1
    e723:	mulsd  xmm13,xmm11
    e728:	mulsd  xmm11,xmm6
    e72d:	subsd  xmm0,xmm12
    e732:	movapd xmm12,xmm6
    e737:	mulsd  xmm12,xmm7
    e73c:	mulsd  xmm7,xmm1
    e740:	movsd  QWORD PTR [rdi+0x48],xmm0
    e745:	subsd  xmm12,xmm13
    e74a:	addsd  xmm7,xmm11
    e74f:	movsd  xmm11,QWORD PTR [rsp+0x8]
    e756:	subsd  xmm5,xmm12
    e75b:	movapd xmm12,xmm3
    e760:	subsd  xmm11,xmm7
    e765:	mulsd  xmm12,xmm3
    e76a:	movapd xmm7,xmm2
    e76e:	mulsd  xmm7,xmm2
    e772:	movsd  QWORD PTR [rdi+0x50],xmm5
    e777:	movsd  QWORD PTR [rdi+0x58],xmm11
    e77d:	addsd  xmm7,xmm12
    e782:	movapd xmm12,xmm4
    e787:	mulsd  xmm12,xmm4
    e78c:	addsd  xmm12,xmm7
    e791:	movapd xmm7,xmm0
    e795:	mulsd  xmm7,xmm0
    e799:	addsd  xmm12,xmm7
    e79e:	movapd xmm7,xmm5
    e7a2:	mulsd  xmm7,xmm5
    e7a6:	addsd  xmm7,xmm12
    e7ab:	movapd xmm12,xmm11
    e7b0:	mulsd  xmm12,xmm11
    e7b5:	addsd  xmm7,xmm12
    e7ba:	movapd xmm14,xmm7
    e7bf:	subsd  xmm14,QWORD PTR [rip+0xbad8]        # 1a2a0 <_IO_stdin_used+0x2a0>
    e7c8:	movapd xmm13,xmm14
    e7cd:	andpd  xmm13,XMMWORD PTR [rip+0xbdfa]        # 1a5d0 <_IO_stdin_used+0x5d0>
    e7d6:	comisd xmm13,QWORD PTR [rsp]
    e7dc:	jbe    e7e7 <reunit_su3+0x3a7>
    e7de:	movsd  QWORD PTR [rip+0x14409],xmm13        # 22bf0 <max_deviation>
    e7e7:	mulsd  xmm14,xmm14
    e7ec:	xor    eax,eax
    e7ee:	movapd xmm12,xmm7
    e7f3:	addsd  xmm14,QWORD PTR [rsp+0x10]
    e7fa:	sqrtsd xmm12,xmm12
    e7ff:	comisd xmm13,QWORD PTR [rip+0xbdc0]        # 1a5c8 <_IO_stdin_used+0x5c8>
    e808:	movsd  QWORD PTR [rsp],xmm14
    e80e:	movsd  QWORD PTR [rip+0x143e1],xmm14        # 22bf8 <av_deviation>
    e817:	seta   al
    e81a:	pxor   xmm14,xmm14
    e81f:	add    ebx,eax
    e821:	ucomisd xmm14,xmm7
    e826:	ja     eb1b <reunit_su3+0x6db>
    e82c:	movsd  xmm7,QWORD PTR [rip+0xba6c]        # 1a2a0 <_IO_stdin_used+0x2a0>
    e834:	movsd  xmm14,QWORD PTR [rdi+0x60]
    e83a:	movsd  xmm13,QWORD PTR [rdi+0x68]
    e840:	divsd  xmm7,xmm12
    e845:	movsd  QWORD PTR [rsp+0x8],xmm14
    e84c:	movsd  xmm12,QWORD PTR [rdi+0x88]
    e855:	movsd  QWORD PTR [rsp+0x10],xmm13
    e85c:	movsd  xmm13,QWORD PTR [rdi+0x70]
    e862:	movsd  QWORD PTR [rsp+0x30],xmm12
    e869:	movsd  QWORD PTR [rsp+0x18],xmm13
    e870:	movq   xmm13,QWORD PTR [rip+0xbe07]        # 1a680 <_IO_stdin_used+0x680>
    e879:	mulsd  xmm2,xmm7
    e87d:	mulsd  xmm3,xmm7
    e881:	mulsd  xmm4,xmm7
    e885:	mulsd  xmm0,xmm7
    e889:	mulsd  xmm5,xmm7
    e88d:	mulsd  xmm7,xmm11
    e892:	movsd  xmm11,QWORD PTR [rdi+0x78]
    e898:	movsd  QWORD PTR [rdi+0x30],xmm2
    e89d:	movsd  QWORD PTR [rdi+0x38],xmm3
    e8a2:	movsd  QWORD PTR [rsp+0x20],xmm11
    e8a9:	movsd  xmm11,QWORD PTR [rdi+0x80]
    e8b2:	movapd xmm12,xmm0
    e8b7:	movsd  QWORD PTR [rdi+0x40],xmm4
    e8bc:	mulsd  xmm12,xmm1
    e8c1:	movapd xmm14,xmm5
    e8c6:	movsd  QWORD PTR [rdi+0x50],xmm5
    e8cb:	movsd  QWORD PTR [rsp+0x28],xmm11
    e8d2:	mulsd  xmm14,xmm8
    e8d7:	movapd xmm11,xmm7
    e8dc:	mulsd  xmm11,xmm15
    e8e1:	movsd  QWORD PTR [rdi+0x58],xmm7
    e8e6:	movsd  QWORD PTR [rdi+0x48],xmm0
    e8eb:	subsd  xmm14,xmm11
    e8f0:	movapd xmm11,xmm4
    e8f5:	mulsd  xmm11,xmm6
    e8fa:	subsd  xmm14,xmm11
    e8ff:	movapd xmm11,xmm7
    e904:	mulsd  xmm11,xmm8
    e909:	addsd  xmm14,xmm12
    e90e:	movapd xmm12,xmm5
    e913:	mulsd  xmm12,xmm15
    e918:	movsd  QWORD PTR [rdi+0x60],xmm14
    e91e:	addsd  xmm12,xmm11
    e923:	movapd xmm11,xmm0
    e928:	mulsd  xmm11,xmm6
    e92d:	subsd  xmm12,xmm11
    e932:	movapd xmm11,xmm4
    e937:	mulsd  xmm11,xmm1
    e93c:	subsd  xmm12,xmm11
    e941:	movapd xmm11,xmm12
    e946:	movsd  QWORD PTR [rsp+0x38],xmm12
    e94d:	movapd xmm12,xmm3
    e952:	mulsd  xmm12,xmm1
    e957:	xorpd  xmm11,xmm13
    e95c:	movsd  QWORD PTR [rdi+0x68],xmm11
    e962:	mulsd  xmm1,xmm2
    e966:	movapd xmm11,xmm2
    e96b:	mulsd  xmm11,xmm6
    e970:	mulsd  xmm6,xmm3
    e974:	subsd  xmm11,xmm12
    e979:	movapd xmm12,xmm5
    e97e:	mulsd  xmm12,xmm10
    e983:	addsd  xmm6,xmm1
    e987:	mulsd  xmm5,xmm9
    e98c:	subsd  xmm11,xmm12
    e991:	movapd xmm12,xmm7
    e996:	mulsd  xmm7,xmm10
    e99b:	mulsd  xmm12,xmm9
    e9a0:	subsd  xmm6,xmm7
    e9a4:	addsd  xmm11,xmm12
    e9a9:	movsd  xmm12,QWORD PTR [rsp+0x38]
    e9b0:	addsd  xmm12,QWORD PTR [rsp+0x10]
    e9b7:	subsd  xmm6,xmm5
    e9bb:	movapd xmm5,xmm4
    e9bf:	mulsd  xmm5,xmm10
    e9c4:	movsd  QWORD PTR [rdi+0x70],xmm11
    e9ca:	mulsd  xmm4,xmm9
    e9cf:	mulsd  xmm12,xmm12
    e9d4:	movapd xmm1,xmm6
    e9d8:	addsd  xmm6,QWORD PTR [rsp+0x20]
    e9de:	xorpd  xmm1,xmm13
    e9e3:	movsd  QWORD PTR [rdi+0x78],xmm1
    e9e8:	movapd xmm1,xmm0
    e9ec:	mulsd  xmm1,xmm9
    e9f1:	mulsd  xmm0,xmm10
    e9f6:	mulsd  xmm6,xmm6
    e9fa:	subsd  xmm5,xmm1
    e9fe:	movapd xmm1,xmm2
    ea02:	mulsd  xmm1,xmm8
    ea07:	addsd  xmm0,xmm4
    ea0b:	mulsd  xmm2,xmm15
    ea10:	subsd  xmm5,xmm1
    ea14:	movapd xmm1,xmm3
    ea18:	mulsd  xmm3,xmm8
    ea1d:	mulsd  xmm1,xmm15
    ea22:	subsd  xmm0,xmm3
    ea26:	addsd  xmm5,xmm1
    ea2a:	movsd  xmm1,QWORD PTR [rsp+0x18]
    ea30:	subsd  xmm0,xmm2
    ea34:	movsd  xmm2,QWORD PTR [rsp+0x8]
    ea3a:	subsd  xmm1,xmm11
    ea3f:	movsd  QWORD PTR [rdi+0x80],xmm5
    ea47:	subsd  xmm2,xmm14
    ea4c:	mulsd  xmm1,xmm1
    ea50:	xorpd  xmm13,xmm0
    ea55:	movsd  QWORD PTR [rdi+0x88],xmm13
    ea5e:	movsd  xmm3,QWORD PTR [rsp+0x28]
    ea64:	addsd  xmm0,QWORD PTR [rsp+0x30]
    ea6a:	mulsd  xmm2,xmm2
    ea6e:	subsd  xmm3,xmm5
    ea72:	mulsd  xmm0,xmm0
    ea76:	mulsd  xmm3,xmm3
    ea7a:	addsd  xmm2,xmm12
    ea7f:	addsd  xmm2,xmm1
    ea83:	addsd  xmm6,xmm2
    ea87:	addsd  xmm6,xmm3
    ea8b:	addsd  xmm0,xmm6
    ea8f:	comisd xmm0,QWORD PTR [rip+0x14159]        # 22bf0 <max_deviation>
    ea97:	jbe    eaa1 <reunit_su3+0x661>
    ea99:	movsd  QWORD PTR [rip+0x1414f],xmm0        # 22bf0 <max_deviation>
    eaa1:	movapd xmm12,xmm0
    eaa6:	xor    eax,eax
    eaa8:	mulsd  xmm12,xmm0
    eaad:	comisd xmm0,QWORD PTR [rip+0xbb13]        # 1a5c8 <_IO_stdin_used+0x5c8>
    eab5:	addsd  xmm12,QWORD PTR [rsp]
    eabb:	seta   al
    eabe:	movsd  QWORD PTR [rip+0x14131],xmm12        # 22bf8 <av_deviation>
    eac7:	add    rsp,0x48
    eacb:	add    eax,ebx
    eacd:	pop    rbx
    eace:	pop    rbp
    eacf:	ret    
    ead0:	movapd xmm0,xmm5
    ead4:	mov    QWORD PTR [rsp+0x8],rdi
    ead9:	movsd  QWORD PTR [rsp],xmm1
    eade:	call   24e0 <sqrt@plt>
    eae3:	mov    rdi,QWORD PTR [rsp+0x8]
    eae8:	movsd  xmm1,QWORD PTR [rsp]
    eaed:	movsd  xmm12,QWORD PTR [rip+0x14102]        # 22bf8 <av_deviation>
    eaf6:	movsd  xmm10,QWORD PTR [rdi]
    eafb:	movsd  xmm9,QWORD PTR [rdi+0x8]
    eb01:	movsd  xmm8,QWORD PTR [rdi+0x10]
    eb07:	movsd  xmm2,QWORD PTR [rdi+0x18]
    eb0c:	movsd  xmm6,QWORD PTR [rdi+0x20]
    eb11:	movsd  xmm7,QWORD PTR [rdi+0x28]
    eb16:	jmp    e51c <reunit_su3+0xdc>
    eb1b:	movapd xmm0,xmm7
    eb1f:	mov    QWORD PTR [rsp],rdi
    eb23:	movsd  QWORD PTR [rsp+0x8],xmm12
    eb2a:	call   24e0 <sqrt@plt>
    eb2f:	mov    rdi,QWORD PTR [rsp]
    eb33:	movsd  xmm7,QWORD PTR [rip+0x140bd]        # 22bf8 <av_deviation>
    eb3b:	movsd  xmm12,QWORD PTR [rsp+0x8]
    eb42:	movsd  xmm2,QWORD PTR [rdi+0x30]
    eb47:	movsd  xmm3,QWORD PTR [rdi+0x38]
    eb4c:	movsd  QWORD PTR [rsp],xmm7
    eb51:	movsd  xmm4,QWORD PTR [rdi+0x40]
    eb56:	movsd  xmm0,QWORD PTR [rdi+0x48]
    eb5b:	movsd  xmm5,QWORD PTR [rdi+0x50]
    eb60:	movsd  xmm11,QWORD PTR [rdi+0x58]
    eb66:	movsd  xmm10,QWORD PTR [rdi]
    eb6b:	movsd  xmm9,QWORD PTR [rdi+0x8]
    eb71:	movsd  xmm8,QWORD PTR [rdi+0x10]
    eb77:	movsd  xmm15,QWORD PTR [rdi+0x18]
    eb7d:	movsd  xmm6,QWORD PTR [rdi+0x20]
    eb82:	movsd  xmm1,QWORD PTR [rdi+0x28]
    eb87:	jmp    e82c <reunit_su3+0x3ec>
    eb8c:	nop    DWORD PTR [rax+0x0]

000000000000eb90 <reunitarize>:
    eb90:	endbr64 
    eb94:	mov    edx,DWORD PTR [rip+0x13966]        # 22500 <sites_on_node>
    eb9a:	mov    rax,QWORD PTR [rip+0x13c27]        # 227c8 <lattice>
    eba1:	mov    QWORD PTR [rip+0x14044],0x0        # 22bf0 <max_deviation>
    ebac:	mov    QWORD PTR [rip+0x14041],0x0        # 22bf8 <av_deviation>
    ebb7:	test   edx,edx
    ebb9:	jle    ecbb <reunitarize+0x12b>
    ebbf:	push   r15
    ebc1:	push   r14
    ebc3:	lea    r14,[rip+0xd82e]        # 1c3f8 <_IO_stdin_used+0x23f8>
    ebca:	push   r13
    ebcc:	lea    r13,[rax+0x70]
    ebd0:	push   r12
    ebd2:	xor    r12d,r12d
    ebd5:	push   rbp
    ebd6:	xor    ebp,ebp
    ebd8:	push   rbx
    ebd9:	sub    rsp,0x18
    ebdd:	nop    DWORD PTR [rax]
    ebe0:	mov    r15,r13
    ebe3:	xor    ebx,ebx
    ebe5:	mov    rdi,r15
    ebe8:	call   e440 <reunit_su3>
    ebed:	add    ebp,eax
    ebef:	test   eax,eax
    ebf1:	jne    ec58 <reunitarize+0xc8>
    ebf3:	cmp    ebp,0x64
    ebf6:	jg     ec40 <reunitarize+0xb0>
    ebf8:	add    ebx,0x1
    ebfb:	add    r15,0x90
    ec02:	cmp    ebx,0x4
    ec05:	jne    ebe5 <reunitarize+0x55>
    ec07:	add    r12d,0x1
    ec0b:	add    r13,0x800
    ec12:	cmp    DWORD PTR [rip+0x138e7],r12d        # 22500 <sites_on_node>
    ec19:	jg     ebe0 <reunitarize+0x50>
    ec1b:	movsd  xmm0,QWORD PTR [rip+0x13fcd]        # 22bf0 <max_deviation>
    ec23:	comisd xmm0,QWORD PTR [rip+0xb99d]        # 1a5c8 <_IO_stdin_used+0x5c8>
    ec2b:	ja     ec67 <reunitarize+0xd7>
    ec2d:	add    rsp,0x18
    ec31:	pop    rbx
    ec32:	pop    rbp
    ec33:	pop    r12
    ec35:	pop    r13
    ec37:	pop    r14
    ec39:	pop    r15
    ec3b:	ret    
    ec3c:	nop    DWORD PTR [rax+0x0]
    ec40:	mov    rdi,r14
    ec43:	call   22f0 <puts@plt>
    ec48:	mov    edi,0x1
    ec4d:	call   19570 <terminate>
    ec52:	jmp    ebf8 <reunitarize+0x68>
    ec54:	nop    DWORD PTR [rax+0x0]
    ec58:	mov    edx,ebx
    ec5a:	mov    esi,r12d
    ec5d:	mov    rdi,r15
    ec60:	call   e310 <reunit_report_problem_matrix>
    ec65:	jmp    ebf3 <reunitarize+0x63>
    ec67:	xor    eax,eax
    ec69:	movsd  QWORD PTR [rsp+0x8],xmm0
    ec6f:	call   193b0 <mynode>
    ec74:	movsd  xmm0,QWORD PTR [rsp+0x8]
    ec7a:	mov    edi,0x1
    ec7f:	lea    rsi,[rip+0xd792]        # 1c418 <_IO_stdin_used+0x2418>
    ec86:	mov    edx,eax
    ec88:	mov    eax,0x1
    ec8d:	call   2470 <__printf_chk@plt>
    ec92:	cmp    ebp,0x63
    ec95:	jle    ec2d <reunitarize+0x9d>
    ec97:	lea    rdi,[rip+0xd75a]        # 1c3f8 <_IO_stdin_used+0x23f8>
    ec9e:	call   22f0 <puts@plt>
    eca3:	add    rsp,0x18
    eca7:	mov    edi,0x1
    ecac:	pop    rbx
    ecad:	pop    rbp
    ecae:	pop    r12
    ecb0:	pop    r13
    ecb2:	pop    r14
    ecb4:	pop    r15
    ecb6:	jmp    19570 <terminate>
    ecbb:	ret    
    ecbc:	nop    DWORD PTR [rax+0x0]

000000000000ecc0 <char_num>:
    ecc0:	endbr64 
    ecc4:	push   r13
    ecc6:	lea    r10d,[rdx-0x1]
    ecca:	push   r12
    eccc:	push   rbp
    eccd:	mov    ebp,edx
    eccf:	push   rbx
    ecd0:	sub    rsp,0x28
    ecd4:	mov    rax,QWORD PTR fs:0x28
    ecdd:	mov    QWORD PTR [rsp+0x18],rax
    ece2:	xor    eax,eax
    ece4:	test   r10d,r10d
    ece7:	jle    ee28 <char_num+0x168>
    eced:	mov    ecx,0x1
    ecf2:	nop    WORD PTR [rax+rax*1+0x0]
    ecf8:	lea    ecx,[rcx+rcx*4]
    ecfb:	add    eax,0x1
    ecfe:	add    ecx,ecx
    ed00:	cmp    eax,r10d
    ed03:	jne    ecf8 <char_num+0x38>
    ed05:	movsxd rax,ebp
    ed08:	mov    edx,ebp
    ed0a:	shl    rax,0x2
    ed0e:	lea    rbx,[rax-0x4]
    ed12:	mov    eax,DWORD PTR [rdi+rax*1-0x4]
    ed16:	mov    DWORD PTR [rsi],eax
    ed18:	sub    edx,0x2
    ed1b:	js     ed40 <char_num+0x80>
    ed1d:	movsxd r8,edx
    ed20:	lea    r9d,[rax+rax*4]
    ed24:	mov    eax,DWORD PTR [rdi+r8*4]
    ed28:	sub    r8,0x1
    ed2c:	lea    eax,[rax+r9*2]
    ed30:	mov    DWORD PTR [rsi],eax
    ed32:	test   r8d,r8d
    ed35:	jns    ed20 <char_num+0x60>
    ed37:	test   r10d,r10d
    ed3a:	jle    ee50 <char_num+0x190>
    ed40:	movsxd r12,r10d
    ed43:	mov    r11d,eax
    ed46:	mov    r8,r12
    ed49:	nop    DWORD PTR [rax+0x0]
    ed50:	mov    r9d,DWORD PTR [rdi+r8*4]
    ed54:	mov    r13d,r9d
    ed57:	imul   r13d,ecx
    ed5b:	sub    eax,r13d
    ed5e:	lea    eax,[rax+rax*4]
    ed61:	lea    eax,[r9+rax*2]
    ed65:	cmp    eax,r11d
    ed68:	jge    ed6f <char_num+0xaf>
    ed6a:	mov    DWORD PTR [rsi],eax
    ed6c:	mov    r11d,eax
    ed6f:	sub    r8,0x1
    ed73:	test   r8d,r8d
    ed76:	jg     ed50 <char_num+0x90>
    ed78:	test   ebp,ebp
    ed7a:	jle    eda7 <char_num+0xe7>
    ed7c:	mov    r8d,r10d
    ed7f:	add    rdi,rbx
    ed82:	mov    rax,rsp
    ed85:	mov    r9d,0x7
    ed8b:	lea    rbx,[rsp+r8*4+0x4]
    ed90:	mov    r8d,r9d
    ed93:	sub    r8d,DWORD PTR [rdi]
    ed96:	add    rax,0x4
    ed9a:	sub    rdi,0x4
    ed9e:	mov    DWORD PTR [rax-0x4],r8d
    eda2:	cmp    rbx,rax
    eda5:	jne    ed90 <char_num+0xd0>
    eda7:	mov    r8d,DWORD PTR [rsp+r12*4]
    edab:	mov    eax,r8d
    edae:	test   edx,edx
    edb0:	js     edd3 <char_num+0x113>
    edb2:	movsxd rdi,edx
    edb5:	mov    rbx,rsp
    edb8:	nop    DWORD PTR [rax+rax*1+0x0]
    edc0:	lea    r9d,[rax+rax*4]
    edc4:	mov    eax,DWORD PTR [rbx+rdi*4]
    edc7:	sub    rdi,0x1
    edcb:	lea    eax,[rax+r9*2]
    edcf:	test   edi,edi
    edd1:	jns    edc0 <char_num+0x100>
    edd3:	cmp    eax,r11d
    edd6:	jge    edda <char_num+0x11a>
    edd8:	mov    DWORD PTR [rsi],eax
    edda:	test   r10d,r10d
    eddd:	jle    ee09 <char_num+0x149>
    eddf:	movsxd rdx,edx
    ede2:	jmp    edf0 <char_num+0x130>
    ede4:	nop    DWORD PTR [rax+0x0]
    ede8:	mov    r8d,DWORD PTR [rsp+rdx*4]
    edec:	sub    rdx,0x1
    edf0:	mov    edi,ecx
    edf2:	imul   edi,r8d
    edf6:	sub    eax,edi
    edf8:	lea    eax,[rax+rax*4]
    edfb:	lea    eax,[r8+rax*2]
    edff:	cmp    DWORD PTR [rsi],eax
    ee01:	jle    ee05 <char_num+0x145>
    ee03:	mov    DWORD PTR [rsi],eax
    ee05:	test   edx,edx
    ee07:	jg     ede8 <char_num+0x128>
    ee09:	mov    rax,QWORD PTR [rsp+0x18]
    ee0e:	xor    rax,QWORD PTR fs:0x28
    ee17:	jne    ee5b <char_num+0x19b>
    ee19:	add    rsp,0x28
    ee1d:	pop    rbx
    ee1e:	pop    rbp
    ee1f:	pop    r12
    ee21:	pop    r13
    ee23:	ret    
    ee24:	nop    DWORD PTR [rax+0x0]
    ee28:	movsxd rax,edx
    ee2b:	mov    ecx,0x1
    ee30:	shl    rax,0x2
    ee34:	lea    rbx,[rax-0x4]
    ee38:	mov    eax,DWORD PTR [rdi+rax*1-0x4]
    ee3c:	mov    DWORD PTR [rsi],eax
    ee3e:	sub    edx,0x2
    ee41:	jns    ed1d <char_num+0x5d>
    ee47:	nop    WORD PTR [rax+rax*1+0x0]
    ee50:	mov    r11d,eax
    ee53:	movsxd r12,r10d
    ee56:	jmp    ed78 <char_num+0xb8>
    ee5b:	call   2350 <__stack_chk_fail@plt>

000000000000ee60 <make_loop_table>:
    ee60:	endbr64 
    ee64:	push   r15
    ee66:	push   r14
    ee68:	push   r13
    ee6a:	push   r12
    ee6c:	push   rbp
    ee6d:	push   rbx
    ee6e:	sub    rsp,0xe8
    ee75:	movsd  xmm1,QWORD PTR [rip+0x13933]        # 227b0 <u0>
    ee7d:	mov    rax,QWORD PTR fs:0x28
    ee86:	mov    QWORD PTR [rsp+0xd8],rax
    ee8e:	xor    eax,eax
    ee90:	movabs rax,0x600000004
    ee9a:	mov    QWORD PTR [rip+0x13d63],0x0        # 22c08 <loop_coeff+0x8>
    eea5:	mov    QWORD PTR [rip+0x13db4],rax        # 22c60 <loop_length>
    eeac:	movapd xmm0,xmm1
    eeb0:	mov    rax,QWORD PTR [rip+0xb3e9]        # 1a2a0 <_IO_stdin_used+0x2a0>
    eeb7:	movsd  QWORD PTR [rsp],xmm1
    eebc:	mov    QWORD PTR [rip+0x13d3d],rax        # 22c00 <loop_coeff>
    eec3:	mov    QWORD PTR [rip+0x13fb2],0x0        # 22e80 <loop_num>
    eece:	mov    DWORD PTR [rip+0x13fb0],0x0        # 22e88 <loop_num+0x8>
    eed8:	mov    DWORD PTR [rip+0x13d86],0x6        # 22c68 <loop_length+0x8>
    eee2:	mov    QWORD PTR [rip+0x13d23],0x0        # 22c10 <loop_coeff+0x10>
    eeed:	call   2390 <log@plt>
    eef2:	movsd  xmm1,QWORD PTR [rsp]
    eef7:	movsd  xmm2,QWORD PTR [rip+0xd6a9]        # 1c5a8 <loop_ind.5567+0x48>
    eeff:	mulsd  xmm0,QWORD PTR [rip+0xd6b1]        # 1c5b8 <loop_ind.5567+0x58>
    ef07:	movsd  xmm3,QWORD PTR [rip+0xb391]        # 1a2a0 <_IO_stdin_used+0x2a0>
    ef0f:	mulsd  xmm2,xmm1
    ef13:	subsd  xmm3,xmm0
    ef17:	mulsd  xmm2,xmm1
    ef1b:	movsd  xmm1,QWORD PTR [rip+0xd68d]        # 1c5b0 <loop_ind.5567+0x50>
    ef23:	divsd  xmm1,xmm2
    ef27:	mulsd  xmm1,xmm3
    ef2b:	movsd  QWORD PTR [rip+0x13cd5],xmm1        # 22c08 <loop_coeff+0x8>
    ef33:	movsd  xmm1,QWORD PTR [rip+0x13875]        # 227b0 <u0>
    ef3b:	movapd xmm0,xmm1
    ef3f:	movsd  QWORD PTR [rsp],xmm1
    ef44:	call   2390 <log@plt>
    ef49:	movsd  xmm1,QWORD PTR [rsp]
    ef4e:	mov    edx,DWORD PTR [rip+0x13990]        # 228e4 <this_node>
    ef54:	mov    DWORD PTR [rip+0x13d42],0x226e6f        # 22ca0 <gauge_action_description+0x20>
    ef5e:	movapd xmm2,xmm0
    ef62:	movsd  xmm0,QWORD PTR [rip+0xb336]        # 1a2a0 <_IO_stdin_used+0x2a0>
    ef6a:	mulsd  xmm1,xmm1
    ef6e:	divsd  xmm0,xmm1
    ef72:	mulsd  xmm0,QWORD PTR [rip+0xd646]        # 1c5c0 <loop_ind.5567+0x60>
    ef7a:	mulsd  xmm0,xmm2
    ef7e:	movsd  QWORD PTR [rip+0x13c8a],xmm0        # 22c10 <loop_coeff+0x10>
    ef86:	movdqa xmm0,XMMWORD PTR [rip+0xd642]        # 1c5d0 <loop_ind.5567+0x70>
    ef8e:	movaps XMMWORD PTR [rip+0x13ceb],xmm0        # 22c80 <gauge_action_description>
    ef95:	movdqa xmm0,XMMWORD PTR [rip+0xd643]        # 1c5e0 <loop_ind.5567+0x80>
    ef9d:	movaps XMMWORD PTR [rip+0x13cec],xmm0        # 22c90 <gauge_action_description+0x10>
    efa4:	test   edx,edx
    efa6:	je     f441 <make_loop_table+0x5e1>
    efac:	lea    rax,[rip+0x13cad]        # 22c60 <loop_length>
    efb3:	lea    r12,[rip+0xd5a6]        # 1c560 <loop_ind.5567>
    efba:	mov    QWORD PTR [rsp+0x28],0x0
    efc3:	mov    QWORD PTR [rsp+0x38],rax
    efc8:	lea    rax,[rip+0x13eb1]        # 22e80 <loop_num>
    efcf:	mov    QWORD PTR [rsp+0x20],rax
    efd4:	mov    rax,QWORD PTR [rsp+0x38]
    efd9:	mov    DWORD PTR [rsp+0x14],0x0
    efe1:	xor    ebp,ebp
    efe3:	mov    DWORD PTR [rsp+0x90],0x0
    efee:	mov    r13d,DWORD PTR [rax]
    eff1:	mov    rax,r12
    eff4:	mov    r12d,ebp
    eff7:	mov    ebp,r13d
    effa:	mov    r13,rax
    effd:	mov    DWORD PTR [rsp+0x94],0x0
    f008:	mov    rax,r13
    f00b:	mov    r13d,r12d
    f00e:	mov    DWORD PTR [rsp+0x10],0x0
    f016:	mov    r12,rax
    f019:	mov    DWORD PTR [rsp+0x30],0x0
    f021:	mov    ebx,DWORD PTR [rsp+0x10]
    f025:	mov    r14,r12
    f028:	mov    r12d,ebp
    f02b:	mov    DWORD PTR [rsp+0x98],0x0
    f036:	cmp    DWORD PTR [rsp+0x14],ebx
    f03a:	setne  BYTE PTR [rsp+0x37]
    f03f:	mov    ebx,DWORD PTR [rsp+0x30]
    f043:	mov    eax,DWORD PTR [rsp+0x10]
    f047:	mov    DWORD PTR [rsp+0x9c],0x0
    f052:	cmp    ebx,eax
    f054:	setne  al
    f057:	cmp    DWORD PTR [rsp+0x14],ebx
    f05b:	setne  dl
    f05e:	xor    ebp,ebp
    f060:	and    eax,edx
    f062:	and    al,BYTE PTR [rsp+0x37]
    f066:	mov    r15d,ebp
    f069:	mov    rbp,r14
    f06c:	mov    BYTE PTR [rsp+0x36],al
    f070:	jmp    f08e <make_loop_table+0x22e>
    f072:	nop    WORD PTR [rax+rax*1+0x0]
    f078:	add    r15d,0x1
    f07c:	mov    DWORD PTR [rsp+0x9c],r15d
    f084:	cmp    r15d,0x4
    f088:	je     f2ea <make_loop_table+0x48a>
    f08e:	cmp    r15d,DWORD PTR [rsp+0x10]
    f093:	setne  al
    f096:	cmp    DWORD PTR [rsp+0x14],r15d
    f09b:	setne  dl
    f09e:	and    eax,edx
    f0a0:	test   BYTE PTR [rsp+0x36],al
    f0a4:	je     f078 <make_loop_table+0x218>
    f0a6:	cmp    r15d,DWORD PTR [rsp+0x30]
    f0ab:	je     f078 <make_loop_table+0x218>
    f0ad:	lea    rax,[rsp+0x5c]
    f0b2:	mov    DWORD PTR [rsp+0x60],0x0
    f0ba:	lea    r8,[rsp+0x90]
    f0c2:	mov    r14d,0x1
    f0c8:	mov    DWORD PTR [rsp+0x44],0x0
    f0d0:	lea    r9,[rsp+0xb0]
    f0d8:	lea    rdi,[rsp+0x70]
    f0dd:	mov    QWORD PTR [rsp+0x18],rax
    f0e2:	mov    DWORD PTR [rsp+0x4c],r15d
    f0e7:	mov    r15d,r13d
    f0ea:	mov    r13,r8
    f0ed:	mov    DWORD PTR [rsp+0x64],0x0
    f0f5:	mov    r11d,DWORD PTR [rsp+0x44]
    f0fa:	mov    r10,r13
    f0fd:	mov    r13,rbp
    f100:	mov    DWORD PTR [rsp+0x48],0x2
    f108:	mov    ebp,r15d
    f10b:	mov    r15,r9
    f10e:	mov    DWORD PTR [rsp+0x68],0x0
    f116:	mov    r8d,0x7
    f11c:	mov    DWORD PTR [rsp+0x40],0x1
    f124:	mov    DWORD PTR [rsp+0x6c],0x0
    f12c:	xor    ebx,ebx
    f12e:	xchg   ax,ax
    f130:	xor    eax,eax
    f132:	mov    esi,r8d
    f135:	mov    rdx,r15
    f138:	mov    ecx,DWORD PTR [r10+rax*1]
    f13c:	sub    esi,ecx
    f13e:	cmp    r11d,0x1
    f142:	je     f16d <make_loop_table+0x30d>
    f144:	mov    DWORD PTR [r15+rax*1],ecx
    f148:	add    rax,0x4
    f14c:	mov    DWORD PTR [rdx+0x1c],esi
    f14f:	sub    rdx,0x4
    f153:	cmp    rax,0x10
    f157:	je     f178 <make_loop_table+0x318>
    f159:	mov    ecx,DWORD PTR [r10+rax*1]
    f15d:	mov    r11d,DWORD PTR [rsp+rax*1+0x60]
    f162:	mov    esi,r8d
    f165:	sub    esi,ecx
    f167:	cmp    r11d,0x1
    f16b:	jne    f144 <make_loop_table+0x2e4>
    f16d:	mov    DWORD PTR [r15+rax*1],esi
    f171:	mov    esi,ecx
    f173:	jmp    f148 <make_loop_table+0x2e8>
    f175:	nop    DWORD PTR [rax]
    f178:	test   r12d,r12d
    f17b:	jle    f288 <make_loop_table+0x428>
    f181:	xor    eax,eax
    f183:	nop    DWORD PTR [rax+rax*1+0x0]
    f188:	movsxd rdx,DWORD PTR [r13+rax*4+0x0]
    f18d:	mov    edx,DWORD PTR [rsp+rdx*4+0xb0]
    f194:	mov    DWORD PTR [rdi+rax*4],edx
    f197:	add    rax,0x1
    f19b:	cmp    r12d,eax
    f19e:	jg     f188 <make_loop_table+0x328>
    f1a0:	mov    rsi,QWORD PTR [rsp+0x18]
    f1a5:	mov    edx,r12d
    f1a8:	mov    QWORD PTR [rsp+0x8],r10
    f1ad:	mov    QWORD PTR [rsp],rdi
    f1b1:	call   ecc0 <char_num>
    f1b6:	test   ebp,ebp
    f1b8:	mov    rdi,QWORD PTR [rsp]
    f1bc:	mov    r10,QWORD PTR [rsp+0x8]
    f1c1:	mov    r8d,0x7
    f1c7:	je     f2d0 <make_loop_table+0x470>
    f1cd:	lea    rax,[rip+0x13a4c]        # 22c20 <loop_char>
    f1d4:	lea    edx,[rbp-0x1]
    f1d7:	mov    ecx,DWORD PTR [rsp+0x5c]
    f1db:	lea    rsi,[rax+0x4]
    f1df:	lea    rsi,[rsi+rdx*4]
    f1e3:	xor    edx,edx
    f1e5:	nop    DWORD PTR [rax]
    f1e8:	cmp    DWORD PTR [rax],ecx
    f1ea:	cmove  edx,r14d
    f1ee:	add    rax,0x4
    f1f2:	cmp    rsi,rax
    f1f5:	jne    f1e8 <make_loop_table+0x388>
    f1f7:	test   edx,edx
    f1f9:	je     f228 <make_loop_table+0x3c8>
    f1fb:	mov    rax,QWORD PTR [rsp+0x20]
    f200:	add    ebx,0x1
    f203:	mov    DWORD PTR [rsp+0x6c],ebx
    f207:	mov    DWORD PTR [rax],ebp
    f209:	cmp    ebx,0x2
    f20c:	je     f3fe <make_loop_table+0x59e>
    f212:	mov    r11d,DWORD PTR [rsp+0x60]
    f217:	mov    ebx,0x1
    f21c:	jmp    f130 <make_loop_table+0x2d0>
    f221:	nop    DWORD PTR [rax+0x0]
    f228:	movsxd rax,ebp
    f22b:	lea    rsi,[rip+0x139ee]        # 22c20 <loop_char>
    f232:	lea    r9d,[rbp+0x1]
    f236:	mov    DWORD PTR [rsi+rax*4],ecx
    f239:	test   r12d,r12d
    f23c:	jle    f26f <make_loop_table+0x40f>
    f23e:	mov    rcx,QWORD PTR [rsp+0x28]
    f243:	lea    rax,[rax+rax*2]
    f247:	lea    rcx,[rcx+rax*8]
    f24b:	lea    rax,[rip+0x13cae]        # 22f00 <loop_table>
    f252:	add    rcx,rax
    f255:	xor    eax,eax
    f257:	nop    WORD PTR [rax+rax*1+0x0]
    f260:	mov    edx,DWORD PTR [rdi+rax*4]
    f263:	mov    DWORD PTR [rcx+rax*4],edx
    f266:	add    rax,0x1
    f26a:	cmp    r12d,eax
    f26d:	jg     f260 <make_loop_table+0x400>
    f26f:	cmp    r9d,0x11
    f273:	je     f41d <make_loop_table+0x5bd>
    f279:	mov    ebp,r9d
    f27c:	jmp    f1fb <make_loop_table+0x39b>
    f281:	nop    DWORD PTR [rax+0x0]
    f288:	mov    rsi,QWORD PTR [rsp+0x18]
    f28d:	mov    edx,r12d
    f290:	mov    QWORD PTR [rsp+0x8],r10
    f295:	mov    QWORD PTR [rsp],rdi
    f299:	call   ecc0 <char_num>
    f29e:	test   ebp,ebp
    f2a0:	mov    rdi,QWORD PTR [rsp]
    f2a4:	mov    r10,QWORD PTR [rsp+0x8]
    f2a9:	mov    r8d,0x7
    f2af:	jne    f1cd <make_loop_table+0x36d>
    f2b5:	mov    eax,DWORD PTR [rsp+0x5c]
    f2b9:	lea    rcx,[rip+0x13960]        # 22c20 <loop_char>
    f2c0:	mov    ebp,0x1
    f2c5:	mov    DWORD PTR [rcx],eax
    f2c7:	jmp    f1fb <make_loop_table+0x39b>
    f2cc:	nop    DWORD PTR [rax+0x0]
    f2d0:	mov    eax,DWORD PTR [rsp+0x5c]
    f2d4:	lea    rcx,[rip+0x13945]        # 22c20 <loop_char>
    f2db:	mov    r9d,0x1
    f2e1:	mov    DWORD PTR [rcx],eax
    f2e3:	xor    eax,eax
    f2e5:	jmp    f23e <make_loop_table+0x3de>
    f2ea:	add    DWORD PTR [rsp+0x30],0x1
    f2ef:	mov    eax,DWORD PTR [rsp+0x30]
    f2f3:	mov    r14,rbp
    f2f6:	mov    DWORD PTR [rsp+0x98],eax
    f2fd:	cmp    eax,0x4
    f300:	jne    f03f <make_loop_table+0x1df>
    f306:	add    DWORD PTR [rsp+0x10],0x1
    f30b:	mov    eax,DWORD PTR [rsp+0x10]
    f30f:	mov    ebp,r12d
    f312:	mov    r12,r14
    f315:	mov    DWORD PTR [rsp+0x94],eax
    f31c:	cmp    eax,0x4
    f31f:	jne    f019 <make_loop_table+0x1b9>
    f325:	add    DWORD PTR [rsp+0x14],0x1
    f32a:	mov    eax,DWORD PTR [rsp+0x14]
    f32e:	mov    r12d,r13d
    f331:	mov    r13,r14
    f334:	mov    DWORD PTR [rsp+0x90],eax
    f33b:	cmp    eax,0x4
    f33e:	jne    effd <make_loop_table+0x19d>
    f344:	add    QWORD PTR [rsp+0x28],0x180
    f34d:	mov    rax,QWORD PTR [rsp+0x28]
    f352:	mov    r12,r14
    f355:	add    QWORD PTR [rsp+0x38],0x4
    f35b:	add    r12,0x18
    f35f:	add    QWORD PTR [rsp+0x20],0x4
    f365:	cmp    rax,0x480
    f36b:	jne    efd4 <make_loop_table+0x174>
    f371:	mov    eax,DWORD PTR [rip+0x1356d]        # 228e4 <this_node>
    f377:	test   eax,eax
    f379:	je     f478 <make_loop_table+0x618>
    f37f:	xor    ebx,ebx
    f381:	lea    rbp,[rip+0x13878]        # 22c00 <loop_coeff>
    f388:	test   eax,eax
    f38a:	je     f3a0 <make_loop_table+0x540>
    f38c:	add    rbx,0x1
    f390:	cmp    rbx,0x3
    f394:	je     f3d5 <make_loop_table+0x575>
    f396:	mov    eax,DWORD PTR [rip+0x13548]        # 228e4 <this_node>
    f39c:	test   eax,eax
    f39e:	jne    f38c <make_loop_table+0x52c>
    f3a0:	lea    rax,[rip+0x13ad9]        # 22e80 <loop_num>
    f3a7:	mov    edx,ebx
    f3a9:	xor    ecx,ecx
    f3ab:	mov    edi,0x1
    f3b0:	mov    r8d,DWORD PTR [rax+rbx*4]
    f3b4:	movsd  xmm0,QWORD PTR [rbp+rbx*8+0x0]
    f3ba:	add    rbx,0x1
    f3be:	lea    rsi,[rip+0xd0f3]        # 1c4b8 <_IO_stdin_used+0x24b8>
    f3c5:	mov    eax,0x1
    f3ca:	call   2470 <__printf_chk@plt>
    f3cf:	cmp    rbx,0x3
    f3d3:	jne    f396 <make_loop_table+0x536>
    f3d5:	mov    rax,QWORD PTR [rsp+0xd8]
    f3dd:	xor    rax,QWORD PTR fs:0x28
    f3e6:	jne    f4c4 <make_loop_table+0x664>
    f3ec:	add    rsp,0xe8
    f3f3:	pop    rbx
    f3f4:	pop    rbp
    f3f5:	pop    r12
    f3f7:	pop    r13
    f3f9:	pop    r14
    f3fb:	pop    r15
    f3fd:	ret    
    f3fe:	mov    eax,DWORD PTR [rsp+0x40]
    f402:	mov    DWORD PTR [rsp+0x68],eax
    f406:	cmp    eax,0x2
    f409:	je     f452 <make_loop_table+0x5f2>
    f40b:	mov    DWORD PTR [rsp+0x40],0x2
    f413:	mov    r11d,DWORD PTR [rsp+0x60]
    f418:	jmp    f124 <make_loop_table+0x2c4>
    f41d:	mov    eax,DWORD PTR [rip+0x134c1]        # 228e4 <this_node>
    f423:	test   eax,eax
    f425:	je     f42e <make_loop_table+0x5ce>
    f427:	xor    edi,edi
    f429:	call   24b0 <exit@plt>
    f42e:	lea    rdi,[rip+0xd0ad]        # 1c4e2 <_IO_stdin_used+0x24e2>
    f435:	call   22f0 <puts@plt>
    f43a:	xor    edi,edi
    f43c:	call   24b0 <exit@plt>
    f441:	lea    rdi,[rip+0xd010]        # 1c458 <_IO_stdin_used+0x2458>
    f448:	call   22f0 <puts@plt>
    f44d:	jmp    efac <make_loop_table+0x14c>
    f452:	mov    ebx,DWORD PTR [rsp+0x48]
    f456:	mov    eax,0x3
    f45b:	sub    eax,ebx
    f45d:	mov    DWORD PTR [rsp+0x64],eax
    f461:	cmp    ebx,0x1
    f464:	je     f48f <make_loop_table+0x62f>
    f466:	mov    DWORD PTR [rsp+0x48],0x1
    f46e:	mov    r11d,DWORD PTR [rsp+0x60]
    f473:	jmp    f10e <make_loop_table+0x2ae>
    f478:	lea    rdi,[rip+0xd001]        # 1c480 <_IO_stdin_used+0x2480>
    f47f:	call   22f0 <puts@plt>
    f484:	mov    eax,DWORD PTR [rip+0x1345a]        # 228e4 <this_node>
    f48a:	jmp    f37f <make_loop_table+0x51f>
    f48f:	mov    eax,DWORD PTR [rsp+0x44]
    f493:	mov    r9,r15
    f496:	mov    DWORD PTR [rsp+0x44],0x1
    f49e:	mov    r15d,ebp
    f4a1:	mov    rbp,r13
    f4a4:	mov    r13,r10
    f4a7:	add    eax,0x1
    f4aa:	mov    DWORD PTR [rsp+0x60],eax
    f4ae:	cmp    eax,0x2
    f4b1:	jne    f0ed <make_loop_table+0x28d>
    f4b7:	mov    r13d,r15d
    f4ba:	mov    r15d,DWORD PTR [rsp+0x4c]
    f4bf:	jmp    f078 <make_loop_table+0x218>
    f4c4:	call   2350 <__stack_chk_fail@plt>
    f4c9:	nop    DWORD PTR [rax+0x0]

000000000000f4d0 <imp_gauge_action>:
    f4d0:	endbr64 
    f4d4:	push   r15
    f4d6:	push   r14
    f4d8:	push   r13
    f4da:	push   r12
    f4dc:	push   rbp
    f4dd:	push   rbx
    f4de:	lea    rbx,[rip+0x1371b]        # 22c00 <loop_coeff>
    f4e5:	sub    rsp,0x38
    f4e9:	mov    rax,QWORD PTR fs:0x28
    f4f2:	mov    QWORD PTR [rsp+0x28],rax
    f4f7:	xor    eax,eax
    f4f9:	lea    rax,[rip+0x13760]        # 22c60 <loop_length>
    f500:	mov    QWORD PTR [rsp+0x20],0x0
    f509:	mov    QWORD PTR [rsp+0x18],rax
    f50e:	lea    rax,[rip+0x1396b]        # 22e80 <loop_num>
    f515:	mov    QWORD PTR [rsp+0x8],rax
    f51a:	mov    QWORD PTR [rsp+0x10],0x0
    f523:	mov    rax,QWORD PTR [rsp+0x18]
    f528:	mov    r14d,DWORD PTR [rax]
    f52b:	mov    rax,QWORD PTR [rsp+0x8]
    f530:	mov    ecx,DWORD PTR [rax]
    f532:	test   ecx,ecx
    f534:	jle    f5cc <imp_gauge_action+0xfc>
    f53a:	lea    r12,[rip+0x139bf]        # 22f00 <loop_table>
    f541:	xor    ebp,ebp
    f543:	add    r12,QWORD PTR [rsp+0x10]
    f548:	nop    DWORD PTR [rax+rax*1+0x0]
    f550:	mov    esi,r14d
    f553:	mov    rdi,r12
    f556:	call   d590 <path_product>
    f55b:	mov    edx,DWORD PTR [rip+0x12f9f]        # 22500 <sites_on_node>
    f561:	mov    rax,QWORD PTR [rip+0x13260]        # 227c8 <lattice>
    f568:	test   edx,edx
    f56a:	jle    f5bc <imp_gauge_action+0xec>
    f56c:	lea    r13,[rax+0x6e0]
    f573:	xor    r15d,r15d
    f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f580:	mov    rdi,r13
    f583:	add    r15d,0x1
    f587:	add    r13,0x800
    f58e:	call   14ce0 <trace_su3>
    f593:	movsd  xmm2,QWORD PTR [rip+0xaedd]        # 1a478 <_IO_stdin_used+0x478>
    f59b:	cmp    DWORD PTR [rip+0x12f5e],r15d        # 22500 <sites_on_node>
    f5a2:	subsd  xmm2,xmm0
    f5a6:	movsd  xmm0,QWORD PTR [rbx]
    f5aa:	mulsd  xmm0,xmm2
    f5ae:	addsd  xmm0,QWORD PTR [rsp+0x20]
    f5b4:	movsd  QWORD PTR [rsp+0x20],xmm0
    f5ba:	jg     f580 <imp_gauge_action+0xb0>
    f5bc:	mov    rax,QWORD PTR [rsp+0x8]
    f5c1:	add    ebp,0x1
    f5c4:	add    r12,0x18
    f5c8:	cmp    DWORD PTR [rax],ebp
    f5ca:	jg     f550 <imp_gauge_action+0x80>
    f5cc:	add    QWORD PTR [rsp+0x10],0x180
    f5d5:	mov    rax,QWORD PTR [rsp+0x10]
    f5da:	add    rbx,0x8
    f5de:	add    QWORD PTR [rsp+0x18],0x4
    f5e4:	add    QWORD PTR [rsp+0x8],0x4
    f5ea:	cmp    rax,0x480
    f5f0:	jne    f523 <imp_gauge_action+0x53>
    f5f6:	lea    rdi,[rsp+0x20]
    f5fb:	call   193f0 <g_doublesum>
    f600:	movsd  xmm0,QWORD PTR [rsp+0x20]
    f606:	mov    rax,QWORD PTR [rsp+0x28]
    f60b:	xor    rax,QWORD PTR fs:0x28
    f614:	jne    f625 <imp_gauge_action+0x155>
    f616:	add    rsp,0x38
    f61a:	pop    rbx
    f61b:	pop    rbp
    f61c:	pop    r12
    f61e:	pop    r13
    f620:	pop    r14
    f622:	pop    r15
    f624:	ret    
    f625:	call   2350 <__stack_chk_fail@plt>
    f62a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f630 <imp_gauge_force>:
    f630:	endbr64 
    f634:	push   r15
    f636:	push   r14
    f638:	push   r13
    f63a:	push   r12
    f63c:	push   rbp
    f63d:	push   rbx
    f63e:	sub    rsp,0x1e8
    f645:	mov    rax,QWORD PTR fs:0x28
    f64e:	mov    QWORD PTR [rsp+0x1d8],rax
    f656:	xor    eax,eax
    f658:	movsxd rax,edi
    f65b:	mov    DWORD PTR [rsp+0x20],0x7
    f663:	mov    QWORD PTR [rsp+0x68],rax
    f668:	mulsd  xmm0,QWORD PTR [rip+0x13150]        # 227c0 <beta>
    f670:	mov    DWORD PTR [rsp+0x14],0x0
    f678:	divsd  xmm0,QWORD PTR [rip+0xadf8]        # 1a478 <_IO_stdin_used+0x478>
    f680:	mov    QWORD PTR [rsp+0x60],0x0
    f689:	movsd  QWORD PTR [rsp+0x50],xmm0
    f68f:	mov    r9d,DWORD PTR [rip+0x12e6a]        # 22500 <sites_on_node>
    f696:	mov    rbx,QWORD PTR [rip+0x1312b]        # 227c8 <lattice>
    f69d:	xor    ebp,ebp
    f69f:	test   r9d,r9d
    f6a2:	jle    f744 <imp_gauge_force+0x114>
    f6a8:	nop    DWORD PTR [rax+rax*1+0x0]
    f6b0:	xor    r13d,r13d
    f6b3:	movsxd rax,r13d
    f6b6:	pxor   xmm1,xmm1
    f6ba:	add    r13d,0x1
    f6be:	lea    r12,[rax+rax*2]
    f6c2:	movapd xmm0,xmm1
    f6c6:	call   13ee0 <cmplx>
    f6cb:	shl    r12,0x4
    f6cf:	add    r12,rbx
    f6d2:	movsd  QWORD PTR [r12+0x778],xmm1
    f6dc:	pxor   xmm1,xmm1
    f6e0:	movsd  QWORD PTR [r12+0x770],xmm0
    f6ea:	movapd xmm0,xmm1
    f6ee:	call   13ee0 <cmplx>
    f6f3:	movsd  QWORD PTR [r12+0x788],xmm1
    f6fd:	pxor   xmm1,xmm1
    f701:	movsd  QWORD PTR [r12+0x780],xmm0
    f70b:	movapd xmm0,xmm1
    f70f:	call   13ee0 <cmplx>
    f714:	movsd  QWORD PTR [r12+0x790],xmm0
    f71e:	movsd  QWORD PTR [r12+0x798],xmm1
    f728:	cmp    r13d,0x3
    f72c:	jne    f6b3 <imp_gauge_force+0x83>
    f72e:	add    ebp,0x1
    f731:	add    rbx,0x800
    f738:	cmp    DWORD PTR [rip+0x12dc2],ebp        # 22500 <sites_on_node>
    f73e:	jg     f6b0 <imp_gauge_force+0x80>
    f744:	lea    rax,[rip+0x13515]        # 22c60 <loop_length>
    f74b:	lea    r14,[rip+0x134ae]        # 22c00 <loop_coeff>
    f752:	mov    QWORD PTR [rsp+0x48],0x0
    f75b:	mov    QWORD PTR [rsp+0x58],rax
    f760:	lea    rax,[rip+0x13719]        # 22e80 <loop_num>
    f767:	mov    QWORD PTR [rsp+0x38],rax
    f76c:	lea    rax,[rsp+0x90]
    f774:	mov    QWORD PTR [rsp+0x28],rax
    f779:	mov    rax,QWORD PTR [rsp+0x58]
    f77e:	mov    r12d,DWORD PTR [rax]
    f781:	mov    rax,QWORD PTR [rsp+0x38]
    f786:	mov    r8d,DWORD PTR [rax]
    f789:	test   r8d,r8d
    f78c:	jle    f93f <imp_gauge_force+0x30f>
    f792:	mov    rsi,QWORD PTR [rsp+0x28]
    f797:	lea    rax,[rip+0x13762]        # 22f00 <loop_table>
    f79e:	add    rax,QWORD PTR [rsp+0x48]
    f7a3:	mov    DWORD PTR [rsp+0x24],0x0
    f7ab:	mov    QWORD PTR [rsp+0x30],rax
    f7b0:	movsxd rax,r12d
    f7b3:	lea    rax,[rsi+rax*4]
    f7b7:	mov    QWORD PTR [rsp+0x40],rax
    f7bc:	nop    DWORD PTR [rax+0x0]
    f7c0:	lea    rax,[rsp+0x70]
    f7c5:	xor    edx,edx
    f7c7:	mov    QWORD PTR [rsp+0x8],rax
    f7cc:	test   r12d,r12d
    f7cf:	jle    f923 <imp_gauge_force+0x2f3>
    f7d5:	mov    edi,DWORD PTR [rsp+0x14]
    f7d9:	mov    rcx,QWORD PTR [rsp+0x30]
    f7de:	mov    rsi,QWORD PTR [rsp+0x8]
    f7e3:	jmp    f80a <imp_gauge_force+0x1da>
    f7e5:	nop    DWORD PTR [rax]
    f7e8:	add    eax,edi
    f7ea:	mov    r8d,eax
    f7ed:	sar    r8d,0x1f
    f7f1:	shr    r8d,0x1e
    f7f5:	add    eax,r8d
    f7f8:	and    eax,0x3
    f7fb:	sub    eax,r8d
    f7fe:	mov    DWORD PTR [rsi+rdx*4],eax
    f801:	add    rdx,0x1
    f805:	cmp    r12d,edx
    f808:	jle    f846 <imp_gauge_force+0x216>
    f80a:	mov    eax,DWORD PTR [rcx+rdx*4]
    f80d:	cmp    eax,0x3
    f810:	jle    f7e8 <imp_gauge_force+0x1b8>
    f812:	mov    ebx,0x7
    f817:	sub    ebx,eax
    f819:	mov    eax,ebx
    f81b:	mov    ebx,0x7
    f820:	add    eax,edi
    f822:	mov    r8d,eax
    f825:	sar    r8d,0x1f
    f829:	shr    r8d,0x1e
    f82d:	add    eax,r8d
    f830:	and    eax,0x3
    f833:	sub    eax,r8d
    f836:	sub    ebx,eax
    f838:	mov    eax,ebx
    f83a:	mov    DWORD PTR [rsi+rdx*4],eax
    f83d:	add    rdx,0x1
    f841:	cmp    r12d,edx
    f844:	jg     f80a <imp_gauge_force+0x1da>
    f846:	lea    eax,[r12-0x1]
    f84b:	xor    ebx,ebx
    f84d:	mov    DWORD PTR [rsp+0x18],eax
    f851:	jmp    f86f <imp_gauge_force+0x23f>
    f853:	nop    DWORD PTR [rax+rax*1+0x0]
    f858:	cmp    eax,DWORD PTR [rsp+0x20]
    f85c:	je     fa70 <imp_gauge_force+0x440>
    f862:	add    rbx,0x1
    f866:	cmp    r12d,ebx
    f869:	jle    f923 <imp_gauge_force+0x2f3>
    f86f:	mov    rax,QWORD PTR [rsp+0x8]
    f874:	mov    edx,ebx
    f876:	mov    eax,DWORD PTR [rax+rbx*4]
    f879:	cmp    eax,DWORD PTR [rsp+0x14]
    f87d:	jne    f858 <imp_gauge_force+0x228>
    f87f:	mov    edi,DWORD PTR [rsp+0x18]
    f883:	test   edi,edi
    f885:	je     f8ae <imp_gauge_force+0x27e>
    f887:	mov    rdi,QWORD PTR [rsp+0x28]
    f88c:	lea    ecx,[rdx+0x1]
    f88f:	lea    esi,[r12+rdx*1]
    f893:	mov    eax,ecx
    f895:	add    ecx,0x1
    f898:	add    rdi,0x4
    f89c:	cdq    
    f89d:	idiv   r12d
    f8a0:	movsxd rdx,edx
    f8a3:	mov    eax,DWORD PTR [rsp+rdx*4+0x70]
    f8a7:	mov    DWORD PTR [rdi-0x4],eax
    f8aa:	cmp    ecx,esi
    f8ac:	jne    f893 <imp_gauge_force+0x263>
    f8ae:	mov    esi,DWORD PTR [rsp+0x18]
    f8b2:	mov    rdi,QWORD PTR [rsp+0x28]
    f8b7:	xor    r15d,r15d
    f8ba:	lea    rbp,[rsp+0xb0]
    f8c2:	call   d590 <path_product>
    f8c7:	mov    rax,QWORD PTR [rip+0x12efa]        # 227c8 <lattice>
    f8ce:	mov    esi,DWORD PTR [rip+0x12c2c]        # 22500 <sites_on_node>
    f8d4:	lea    r13,[rax+0x6e0]
    f8db:	test   esi,esi
    f8dd:	jle    f862 <imp_gauge_force+0x232>
    f8df:	nop
    f8e0:	mov    rdi,r13
    f8e3:	mov    rsi,rbp
    f8e6:	add    r15d,0x1
    f8ea:	call   14a00 <su3_adjoint>
    f8ef:	lea    rdi,[r13+0x90]
    f8f6:	movsd  xmm0,QWORD PTR [r14]
    f8fb:	mov    rsi,rbp
    f8fe:	mov    rdx,rdi
    f901:	add    r13,0x800
    f908:	call   147d0 <scalar_mult_add_su3_matrix>
    f90d:	cmp    DWORD PTR [rip+0x12bec],r15d        # 22500 <sites_on_node>
    f914:	jg     f8e0 <imp_gauge_force+0x2b0>
    f916:	add    rbx,0x1
    f91a:	cmp    r12d,ebx
    f91d:	jg     f86f <imp_gauge_force+0x23f>
    f923:	mov    rsi,QWORD PTR [rsp+0x38]
    f928:	add    DWORD PTR [rsp+0x24],0x1
    f92d:	add    QWORD PTR [rsp+0x30],0x18
    f933:	mov    eax,DWORD PTR [rsp+0x24]
    f937:	cmp    DWORD PTR [rsi],eax
    f939:	jg     f7c0 <imp_gauge_force+0x190>
    f93f:	add    QWORD PTR [rsp+0x48],0x180
    f948:	mov    rax,QWORD PTR [rsp+0x48]
    f94d:	add    r14,0x8
    f951:	add    QWORD PTR [rsp+0x58],0x4
    f957:	add    QWORD PTR [rsp+0x38],0x4
    f95d:	cmp    rax,0x480
    f963:	jne    f779 <imp_gauge_force+0x149>
    f969:	mov    edx,DWORD PTR [rip+0x12b91]        # 22500 <sites_on_node>
    f96f:	mov    rax,QWORD PTR [rip+0x12e52]        # 227c8 <lattice>
    f976:	test   edx,edx
    f978:	jle    fa1e <imp_gauge_force+0x3ee>
    f97e:	mov    rsi,QWORD PTR [rsp+0x60]
    f983:	xor    r12d,r12d
    f986:	lea    rbp,[rsp+0xb0]
    f98e:	lea    rbx,[rsp+0x140]
    f996:	sub    rax,rsi
    f999:	lea    r14,[rax+0x70]
    f99d:	lea    rax,[rsi+0x700]
    f9a4:	mov    QWORD PTR [rsp+0x8],rax
    f9a9:	mov    rax,QWORD PTR [rsp+0x68]
    f9ae:	lea    r15,[rax-0x70]
    f9b2:	mov    QWORD PTR [rsp+0x18],r15
    f9b7:	nop    WORD PTR [rax+rax*1+0x0]
    f9c0:	mov    rax,QWORD PTR [rsp+0x8]
    f9c5:	mov    rdx,rbp
    f9c8:	mov    rdi,r14
    f9cb:	add    r12d,0x1
    f9cf:	lea    r13,[rax+r14*1]
    f9d3:	mov    rsi,r13
    f9d6:	call   14350 <mult_su3_na>
    f9db:	mov    rax,QWORD PTR [rsp+0x18]
    f9e0:	mov    rsi,rbx
    f9e3:	lea    r15,[rax+r14*1]
    f9e7:	add    r14,0x800
    f9ee:	mov    rdi,r15
    f9f1:	call   14d10 <uncompress_anti_hermitian>
    f9f6:	mov    rdx,r13
    f9f9:	mov    rsi,rbp
    f9fc:	mov    rdi,rbx
    f9ff:	movsd  xmm0,QWORD PTR [rsp+0x50]
    fa05:	call   14860 <scalar_mult_sub_su3_matrix>
    fa0a:	mov    rsi,r15
    fa0d:	mov    rdi,r13
    fa10:	call   14610 <make_anti_hermitian>
    fa15:	cmp    DWORD PTR [rip+0x12ae4],r12d        # 22500 <sites_on_node>
    fa1c:	jg     f9c0 <imp_gauge_force+0x390>
    fa1e:	add    DWORD PTR [rsp+0x14],0x1
    fa23:	mov    eax,DWORD PTR [rsp+0x14]
    fa27:	sub    QWORD PTR [rsp+0x60],0x90
    fa30:	sub    QWORD PTR [rsp+0x68],0x40
    fa36:	sub    DWORD PTR [rsp+0x20],0x1
    fa3b:	cmp    eax,0x4
    fa3e:	jne    f68f <imp_gauge_force+0x5f>
    fa44:	mov    rax,QWORD PTR [rsp+0x1d8]
    fa4c:	xor    rax,QWORD PTR fs:0x28
    fa55:	jne    fab8 <imp_gauge_force+0x488>
    fa57:	add    rsp,0x1e8
    fa5e:	pop    rbx
    fa5f:	pop    rbp
    fa60:	pop    r12
    fa62:	pop    r13
    fa64:	pop    r14
    fa66:	pop    r15
    fa68:	ret    
    fa69:	nop    DWORD PTR [rax+0x0]
    fa70:	cmp    DWORD PTR [rsp+0x20],0x3
    fa75:	jle    f87f <imp_gauge_force+0x24f>
    fa7b:	mov    ecx,DWORD PTR [rsp+0x18]
    fa7f:	test   ecx,ecx
    fa81:	je     f8ae <imp_gauge_force+0x27e>
    fa87:	mov    rdi,QWORD PTR [rsp+0x40]
    fa8c:	lea    ecx,[rbx+0x1]
    fa8f:	lea    esi,[r12+rbx*1]
    fa93:	mov    eax,ecx
    fa95:	add    ecx,0x1
    fa98:	sub    rdi,0x4
    fa9c:	cdq    
    fa9d:	idiv   r12d
    faa0:	mov    eax,0x7
    faa5:	movsxd rdx,edx
    faa8:	sub    eax,DWORD PTR [rsp+rdx*4+0x70]
    faac:	mov    DWORD PTR [rdi-0x4],eax
    faaf:	cmp    ecx,esi
    fab1:	jne    fa93 <imp_gauge_force+0x463>
    fab3:	jmp    f8ae <imp_gauge_force+0x27e>
    fab8:	call   2350 <__stack_chk_fail@plt>
    fabd:	nop    DWORD PTR [rax]

000000000000fac0 <g_measure>:
    fac0:	endbr64 
    fac4:	push   r15
    fac6:	push   r14
    fac8:	push   r13
    faca:	push   r12
    facc:	push   rbp
    facd:	push   rbx
    face:	sub    rsp,0x58
    fad2:	mov    rax,QWORD PTR fs:0x28
    fadb:	mov    QWORD PTR [rsp+0x48],rax
    fae0:	xor    eax,eax
    fae2:	lea    rsi,[rsp+0x30]
    fae7:	lea    rdi,[rsp+0x28]
    faec:	call   42b0 <d_plaquette>
    faf1:	mov    r8d,DWORD PTR [rip+0x12dec]        # 228e4 <this_node>
    faf8:	test   r8d,r8d
    fafb:	je     fde8 <g_measure+0x328>
    fb01:	call   de00 <ploop>
    fb06:	mov    edi,DWORD PTR [rip+0x12dd8]        # 228e4 <this_node>
    fb0c:	test   edi,edi
    fb0e:	je     fdc8 <g_measure+0x308>
    fb14:	mov    QWORD PTR [rsp+0x38],0x0
    fb1d:	xor    r13d,r13d
    fb20:	lea    r15,[rip+0x130d9]        # 22c00 <loop_coeff>
    fb27:	mov    QWORD PTR [rsp+0x8],0x0
    fb30:	lea    rax,[rip+0x13349]        # 22e80 <loop_num>
    fb37:	mov    DWORD PTR [rsp+0x14],r13d
    fb3c:	mov    esi,DWORD PTR [rax+r13*4]
    fb40:	test   esi,esi
    fb42:	jg     fb98 <g_measure+0xd8>
    fb44:	add    QWORD PTR [rsp+0x8],0x180
    fb4d:	add    r13,0x1
    fb51:	cmp    r13,0x3
    fb55:	jne    fb30 <g_measure+0x70>
    fb57:	lea    rdi,[rsp+0x38]
    fb5c:	call   193f0 <g_doublesum>
    fb61:	mov    edx,DWORD PTR [rip+0x12d7d]        # 228e4 <this_node>
    fb67:	test   edx,edx
    fb69:	je     fd78 <g_measure+0x2b8>
    fb6f:	mov    rax,QWORD PTR [rsp+0x48]
    fb74:	xor    rax,QWORD PTR fs:0x28
    fb7d:	jne    fe0f <g_measure+0x34f>
    fb83:	add    rsp,0x58
    fb87:	pop    rbx
    fb88:	pop    rbp
    fb89:	pop    r12
    fb8b:	pop    r13
    fb8d:	pop    r14
    fb8f:	pop    r15
    fb91:	ret    
    fb92:	nop    WORD PTR [rax+rax*1+0x0]
    fb98:	lea    rax,[rip+0x130c1]        # 22c60 <loop_length>
    fb9f:	mov    DWORD PTR [rsp+0x10],0x0
    fba7:	lea    rbp,[rip+0x13352]        # 22f00 <loop_table>
    fbae:	add    rbp,QWORD PTR [rsp+0x8]
    fbb3:	mov    ebx,DWORD PTR [rax+r13*4]
    fbb7:	lea    rax,[rsp+0x40]
    fbbc:	mov    QWORD PTR [rsp+0x18],rax
    fbc1:	mov    esi,ebx
    fbc3:	mov    rdi,rbp
    fbc6:	xor    r14d,r14d
    fbc9:	call   d590 <path_product>
    fbce:	mov    rax,QWORD PTR [rip+0x12bf3]        # 227c8 <lattice>
    fbd5:	mov    ecx,DWORD PTR [rip+0x12925]        # 22500 <sites_on_node>
    fbdb:	mov    QWORD PTR [rsp+0x40],0x0
    fbe4:	lea    r12,[rax+0x6e0]
    fbeb:	test   ecx,ecx
    fbed:	jle    fc3e <g_measure+0x17e>
    fbef:	nop
    fbf0:	mov    rdi,r12
    fbf3:	add    r14d,0x1
    fbf7:	add    r12,0x800
    fbfe:	call   14ce0 <trace_su3>
    fc03:	movsd  xmm2,QWORD PTR [rip+0xa86d]        # 1a478 <_IO_stdin_used+0x478>
    fc0b:	movsd  xmm1,QWORD PTR [rsp+0x40]
    fc11:	cmp    DWORD PTR [rip+0x128e8],r14d        # 22500 <sites_on_node>
    fc18:	subsd  xmm2,xmm0
    fc1c:	addsd  xmm1,xmm0
    fc20:	movsd  xmm0,QWORD PTR [r15+r13*8]
    fc26:	mulsd  xmm0,xmm2
    fc2a:	movsd  QWORD PTR [rsp+0x40],xmm1
    fc30:	addsd  xmm0,QWORD PTR [rsp+0x38]
    fc36:	movsd  QWORD PTR [rsp+0x38],xmm0
    fc3c:	jg     fbf0 <g_measure+0x130>
    fc3e:	mov    rdi,QWORD PTR [rsp+0x18]
    fc43:	mov    esi,0x1
    fc48:	call   19400 <g_vecdoublesum>
    fc4d:	mov    eax,DWORD PTR [rip+0x12c91]        # 228e4 <this_node>
    fc53:	test   eax,eax
    fc55:	je     fcd0 <g_measure+0x210>
    fc57:	nop    WORD PTR [rax+rax*1+0x0]
    fc60:	test   ebx,ebx
    fc62:	jle    fcaa <g_measure+0x1ea>
    fc64:	xor    r14d,r14d
    fc67:	jmp    fc79 <g_measure+0x1b9>
    fc69:	nop    DWORD PTR [rax+0x0]
    fc70:	add    r14,0x1
    fc74:	cmp    ebx,r14d
    fc77:	jle    fca2 <g_measure+0x1e2>
    fc79:	test   eax,eax
    fc7b:	jne    fc70 <g_measure+0x1b0>
    fc7d:	mov    edx,DWORD PTR [rbp+r14*4+0x0]
    fc82:	lea    rsi,[rip+0xb2e3]        # 1af6c <_IO_stdin_used+0xf6c>
    fc89:	mov    edi,0x1
    fc8e:	add    r14,0x1
    fc92:	call   2470 <__printf_chk@plt>
    fc97:	mov    eax,DWORD PTR [rip+0x12c47]        # 228e4 <this_node>
    fc9d:	cmp    ebx,r14d
    fca0:	jg     fc79 <g_measure+0x1b9>
    fca2:	test   eax,eax
    fca4:	je     fd60 <g_measure+0x2a0>
    fcaa:	lea    rcx,[rip+0x131cf]        # 22e80 <loop_num>
    fcb1:	add    DWORD PTR [rsp+0x10],0x1
    fcb6:	add    rbp,0x18
    fcba:	mov    eax,DWORD PTR [rsp+0x10]
    fcbe:	cmp    DWORD PTR [rcx+r13*4],eax
    fcc2:	jle    fb44 <g_measure+0x84>
    fcc8:	jmp    fbc1 <g_measure+0x101>
    fccd:	nop    DWORD PTR [rax]
    fcd0:	mov    ecx,DWORD PTR [rsp+0x10]
    fcd4:	mov    edx,DWORD PTR [rsp+0x14]
    fcd8:	mov    r8d,ebx
    fcdb:	mov    edi,0x1
    fce0:	lea    rsi,[rip+0xc82f]        # 1c516 <_IO_stdin_used+0x2516>
    fce7:	xor    eax,eax
    fce9:	call   2470 <__printf_chk@plt>
    fcee:	mov    eax,DWORD PTR [rip+0x12bf0]        # 228e4 <this_node>
    fcf4:	test   eax,eax
    fcf6:	jne    fc60 <g_measure+0x1a0>
    fcfc:	pxor   xmm1,xmm1
    fd00:	movsd  xmm0,QWORD PTR [rsp+0x40]
    fd06:	mov    edi,0x1
    fd0b:	lea    rsi,[rip+0xc81b]        # 1c52d <_IO_stdin_used+0x252d>
    fd12:	cvtsi2sd xmm1,DWORD PTR [rip+0x126d6]        # 223f0 <volume>
    fd1a:	mov    eax,0x1
    fd1f:	divsd  xmm0,xmm1
    fd23:	call   2470 <__printf_chk@plt>
    fd28:	mov    eax,DWORD PTR [rip+0x12bb6]        # 228e4 <this_node>
    fd2e:	test   eax,eax
    fd30:	jne    fc60 <g_measure+0x1a0>
    fd36:	lea    rsi,[rip+0xc7f4]        # 1c531 <_IO_stdin_used+0x2531>
    fd3d:	mov    edi,0x1
    fd42:	call   2470 <__printf_chk@plt>
    fd47:	mov    eax,DWORD PTR [rip+0x12b97]        # 228e4 <this_node>
    fd4d:	test   ebx,ebx
    fd4f:	jg     fc64 <g_measure+0x1a4>
    fd55:	jmp    fca2 <g_measure+0x1e2>
    fd5a:	nop    WORD PTR [rax+rax*1+0x0]
    fd60:	lea    rdi,[rip+0xc7ce]        # 1c535 <_IO_stdin_used+0x2535>
    fd67:	call   22f0 <puts@plt>
    fd6c:	jmp    fcaa <g_measure+0x1ea>
    fd71:	nop    DWORD PTR [rax+0x0]
    fd78:	pxor   xmm1,xmm1
    fd7c:	movsd  xmm0,QWORD PTR [rsp+0x38]
    fd82:	mov    edi,0x1
    fd87:	lea    rsi,[rip+0xc7aa]        # 1c538 <_IO_stdin_used+0x2538>
    fd8e:	cvtsi2sd xmm1,DWORD PTR [rip+0x1265a]        # 223f0 <volume>
    fd96:	mov    eax,0x1
    fd9b:	divsd  xmm0,xmm1
    fd9f:	call   2470 <__printf_chk@plt>
    fda4:	mov    eax,DWORD PTR [rip+0x12b3a]        # 228e4 <this_node>
    fdaa:	test   eax,eax
    fdac:	jne    fb6f <g_measure+0xaf>
    fdb2:	mov    rdi,QWORD PTR [rip+0x12527]        # 222e0 <stdout@@GLIBC_2.2.5>
    fdb9:	call   2420 <fflush@plt>
    fdbe:	jmp    fb6f <g_measure+0xaf>
    fdc3:	nop    DWORD PTR [rax+rax*1+0x0]
    fdc8:	lea    rsi,[rip+0xc738]        # 1c507 <_IO_stdin_used+0x2507>
    fdcf:	mov    edi,0x1
    fdd4:	mov    eax,0x2
    fdd9:	call   2470 <__printf_chk@plt>
    fdde:	jmp    fb14 <g_measure+0x54>
    fde3:	nop    DWORD PTR [rax+rax*1+0x0]
    fde8:	movsd  xmm1,QWORD PTR [rsp+0x30]
    fdee:	movsd  xmm0,QWORD PTR [rsp+0x28]
    fdf4:	mov    edi,0x1
    fdf9:	lea    rsi,[rip+0xc6fa]        # 1c4fa <_IO_stdin_used+0x24fa>
    fe00:	mov    eax,0x2
    fe05:	call   2470 <__printf_chk@plt>
    fe0a:	jmp    fb01 <g_measure+0x41>
    fe0f:	call   2350 <__stack_chk_fail@plt>
    fe14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    fe1f:	nop

000000000000fe20 <printpath>:
    fe20:	endbr64 
    fe24:	push   r13
    fe26:	push   r12
    fe28:	mov    r12d,esi
    fe2b:	push   rbp
    fe2c:	push   rbx
    fe2d:	mov    rbx,rdi
    fe30:	sub    rsp,0x8
    fe34:	mov    eax,DWORD PTR [rip+0x12aaa]        # 228e4 <this_node>
    fe3a:	test   eax,eax
    fe3c:	je     fe98 <printpath+0x78>
    fe3e:	test   esi,esi
    fe40:	jle    fe87 <printpath+0x67>
    fe42:	lea    edx,[r12-0x1]
    fe47:	lea    r13,[rip+0xb11e]        # 1af6c <_IO_stdin_used+0xf6c>
    fe4e:	lea    rbp,[rbx+rdx*4+0x4]
    fe53:	jmp    fe61 <printpath+0x41>
    fe55:	nop    DWORD PTR [rax]
    fe58:	add    rbx,0x4
    fe5c:	cmp    rbx,rbp
    fe5f:	je     fe83 <printpath+0x63>
    fe61:	test   eax,eax
    fe63:	jne    fe58 <printpath+0x38>
    fe65:	mov    edx,DWORD PTR [rbx]
    fe67:	mov    rsi,r13
    fe6a:	mov    edi,0x1
    fe6f:	add    rbx,0x4
    fe73:	call   2470 <__printf_chk@plt>
    fe78:	mov    eax,DWORD PTR [rip+0x12a66]        # 228e4 <this_node>
    fe7e:	cmp    rbx,rbp
    fe81:	jne    fe61 <printpath+0x41>
    fe83:	test   eax,eax
    fe85:	je     fec0 <printpath+0xa0>
    fe87:	add    rsp,0x8
    fe8b:	pop    rbx
    fe8c:	pop    rbp
    fe8d:	pop    r12
    fe8f:	pop    r13
    fe91:	ret    
    fe92:	nop    WORD PTR [rax+rax*1+0x0]
    fe98:	lea    rsi,[rip+0xc692]        # 1c531 <_IO_stdin_used+0x2531>
    fe9f:	mov    edi,0x1
    fea4:	call   2470 <__printf_chk@plt>
    fea9:	mov    eax,DWORD PTR [rip+0x12a35]        # 228e4 <this_node>
    feaf:	test   r12d,r12d
    feb2:	jg     fe42 <printpath+0x22>
    feb4:	jmp    fe83 <printpath+0x63>
    feb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    fec0:	add    rsp,0x8
    fec4:	mov    edx,r12d
    fec7:	mov    edi,0x1
    fecc:	pop    rbx
    fecd:	lea    rsi,[rip+0xc671]        # 1c545 <_IO_stdin_used+0x2545>
    fed4:	pop    rbp
    fed5:	pop    r12
    fed7:	pop    r13
    fed9:	jmp    2470 <__printf_chk@plt>
    fede:	xchg   ax,ax

000000000000fee0 <grsource_imp>:
    fee0:	endbr64 
    fee4:	push   r15
    fee6:	mov    r15d,esi
    fee9:	push   r14
    feeb:	mov    r14d,edi
    feee:	push   r13
    fef0:	xor    r13d,r13d
    fef3:	push   r12
    fef5:	push   rbp
    fef6:	push   rbx
    fef7:	sub    rsp,0x18
    fefb:	mov    rax,QWORD PTR [rip+0x128c6]        # 227c8 <lattice>
    ff02:	mov    ecx,DWORD PTR [rip+0x125f8]        # 22500 <sites_on_node>
    ff08:	movsd  QWORD PTR [rsp+0x8],xmm0
    ff0e:	lea    rbp,[rax+0x530]
    ff15:	test   ecx,ecx
    ff17:	jle    ff62 <grsource_imp+0x82>
    ff19:	nop    DWORD PTR [rax+0x0]
    ff20:	lea    r12,[rbp-0x520]
    ff27:	lea    rbx,[rbp-0x30]
    ff2b:	mov    rdi,r12
    ff2e:	add    rbx,0x10
    ff32:	call   15830 <gaussian_rand_no>
    ff37:	mov    rdi,r12
    ff3a:	movsd  QWORD PTR [rbx-0x10],xmm0
    ff3f:	call   15830 <gaussian_rand_no>
    ff44:	movsd  QWORD PTR [rbx-0x8],xmm0
    ff49:	cmp    rbx,rbp
    ff4c:	jne    ff2b <grsource_imp+0x4b>
    ff4e:	add    r13d,0x1
    ff52:	add    rbp,0x800
    ff59:	cmp    DWORD PTR [rip+0x125a0],r13d        # 22500 <sites_on_node>
    ff60:	jg     ff20 <grsource_imp+0x40>
    ff62:	mov    edx,DWORD PTR [rip+0x12840]        # 227a8 <valid_longlinks>
    ff68:	test   edx,edx
    ff6a:	je     ffd0 <grsource_imp+0xf0>
    ff6c:	mov    eax,DWORD PTR [rip+0x128c6]        # 22838 <valid_fatlinks>
    ff72:	test   eax,eax
    ff74:	je     ffe1 <grsource_imp+0x101>
    ff76:	mov    edx,r15d
    ff79:	mov    esi,r14d
    ff7c:	mov    edi,0x500
    ff81:	call   164d0 <dslash_fn>
    ff86:	mov    edx,r15d
    ff89:	mov    esi,r14d
    ff8c:	mov    edi,r14d
    ff8f:	movsd  xmm0,QWORD PTR [rip+0xc619]        # 1c5b0 <loop_ind.5567+0x50>
    ff97:	call   18ac0 <scalar_mult_latvec>
    ff9c:	mov    ecx,r15d
    ff9f:	mov    edx,r14d
    ffa2:	mov    edi,r14d
    ffa5:	movsd  xmm0,QWORD PTR [rsp+0x8]
    ffab:	add    rsp,0x18
    ffaf:	mov    esi,0x500
    ffb4:	pop    rbx
    ffb5:	pop    rbp
    ffb6:	addsd  xmm0,xmm0
    ffba:	pop    r12
    ffbc:	pop    r13
    ffbe:	pop    r14
    ffc0:	pop    r15
    ffc2:	jmp    188c0 <scalar_mult_add_latvec>
    ffc7:	nop    WORD PTR [rax+rax*1+0x0]
    ffd0:	xor    eax,eax
    ffd2:	call   11b30 <load_longlinks>
    ffd7:	mov    eax,DWORD PTR [rip+0x1285b]        # 22838 <valid_fatlinks>
    ffdd:	test   eax,eax
    ffdf:	jne    ff76 <grsource_imp+0x96>
    ffe1:	xor    eax,eax
    ffe3:	call   121d0 <load_fatlinks>
    ffe8:	jmp    ff76 <grsource_imp+0x96>
    ffea:	nop    WORD PTR [rax+rax*1+0x0]

000000000000fff0 <checkmul_imp>:
    fff0:	endbr64 
    fff4:	push   r14
    fff6:	mov    edx,0x3
    fffb:	mov    esi,0x4d0
   10000:	push   r13
   10002:	push   r12
   10004:	push   rbp
   10005:	mov    ebp,edi
   10007:	push   rbx
   10008:	sub    rsp,0x10
   1000c:	movsd  QWORD PTR [rsp+0x8],xmm0
   10012:	call   164d0 <dslash_fn>
   10017:	movsd  xmm0,QWORD PTR [rsp+0x8]
   1001d:	mov    ecx,0x3
   10022:	mov    esi,ebp
   10024:	mov    edx,0x4d0
   10029:	mov    edi,0x4d0
   1002e:	addsd  xmm0,xmm0
   10032:	call   188c0 <scalar_mult_add_latvec>
   10037:	mov    eax,DWORD PTR [rip+0x124c3]        # 22500 <sites_on_node>
   1003d:	mov    r13,QWORD PTR [rip+0x12784]        # 227c8 <lattice>
   10044:	test   eax,eax
   10046:	jle    10117 <checkmul_imp+0x127>
   1004c:	add    r13,0x4d0
   10053:	xor    r12d,r12d
   10056:	lea    r14,[rip+0xc5a5]        # 1c602 <loop_ind.5567+0xa2>
   1005d:	nop    DWORD PTR [rax]
   10060:	movsx  ecx,WORD PTR [r13-0x4ce]
   10068:	movsx  edx,WORD PTR [r13-0x4d0]
   10070:	lea    rsi,[rip+0xc579]        # 1c5f0 <loop_ind.5567+0x90>
   10077:	mov    edi,0x1
   1007c:	movsx  r9d,WORD PTR [r13-0x4ca]
   10084:	xor    eax,eax
   10086:	mov    rbx,r13
   10089:	xor    ebp,ebp
   1008b:	movsx  r8d,WORD PTR [r13-0x4cc]
   10093:	call   2470 <__printf_chk@plt>
   10098:	movsd  xmm0,QWORD PTR [rbx+0x30]
   1009d:	movsd  xmm1,QWORD PTR [rbx]
   100a1:	mov    ecx,ebp
   100a3:	mov    edx,r12d
   100a6:	mov    rsi,r14
   100a9:	mov    edi,0x1
   100ae:	mov    eax,0x3
   100b3:	add    rbx,0x10
   100b7:	movapd xmm2,xmm0
   100bb:	subsd  xmm2,xmm1
   100bf:	call   2470 <__printf_chk@plt>
   100c4:	movsd  xmm0,QWORD PTR [rbx+0x28]
   100c9:	mov    ecx,ebp
   100cb:	mov    edx,r12d
   100ce:	movsd  xmm1,QWORD PTR [rbx-0x8]
   100d3:	mov    rsi,r14
   100d6:	mov    edi,0x1
   100db:	add    ebp,0x1
   100de:	movapd xmm2,xmm0
   100e2:	mov    eax,0x3
   100e7:	subsd  xmm2,xmm1
   100eb:	call   2470 <__printf_chk@plt>
   100f0:	cmp    ebp,0x3
   100f3:	jne    10098 <checkmul_imp+0xa8>
   100f5:	mov    edi,0xa
   100fa:	add    r12d,0x1
   100fe:	add    r13,0x800
   10105:	call   22b0 <putchar@plt>
   1010a:	cmp    DWORD PTR [rip+0x123ef],r12d        # 22500 <sites_on_node>
   10111:	jg     10060 <checkmul_imp+0x70>
   10117:	add    rsp,0x10
   1011b:	pop    rbx
   1011c:	pop    rbp
   1011d:	pop    r12
   1011f:	pop    r13
   10121:	pop    r14
   10123:	ret    
   10124:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1012e:	xchg   ax,ax

0000000000010130 <mat_invert_cg>:
   10130:	endbr64 
   10134:	push   r12
   10136:	mov    r12d,edi
   10139:	push   rbp
   1013a:	mov    ebp,esi
   1013c:	mov    esi,0x3
   10141:	mov    edi,ebp
   10143:	sub    rsp,0x28
   10147:	movsd  QWORD PTR [rsp+0x8],xmm0
   1014d:	mov    rax,QWORD PTR fs:0x28
   10156:	mov    QWORD PTR [rsp+0x18],rax
   1015b:	xor    eax,eax
   1015d:	call   18580 <clear_latvec>
   10162:	movsd  xmm0,QWORD PTR [rsp+0x8]
   10168:	mov    edi,r12d
   1016b:	mov    esi,ebp
   1016d:	mov    edx,DWORD PTR [rip+0x12515]        # 22688 <niter>
   10173:	lea    r8,[rsp+0x10]
   10178:	mov    ecx,0x3
   1017d:	movsd  xmm1,QWORD PTR [rip+0x12243]        # 223c8 <rsqprop>
   10185:	call   17c10 <ks_congrad>
   1018a:	mov    edx,0x3
   1018f:	mov    esi,0x4d0
   10194:	mov    edi,ebp
   10196:	mov    r12d,eax
   10199:	call   164d0 <dslash_fn>
   1019e:	movsd  xmm0,QWORD PTR [rsp+0x8]
   101a4:	mov    ecx,0x3
   101a9:	mov    esi,ebp
   101ab:	mulsd  xmm0,QWORD PTR [rip+0xc4bd]        # 1c670 <loop_ind.5567+0x110>
   101b3:	mov    edx,0x4d0
   101b8:	mov    edi,0x4d0
   101bd:	call   188c0 <scalar_mult_add_latvec>
   101c2:	movsd  xmm0,QWORD PTR [rip+0xc3e6]        # 1c5b0 <loop_ind.5567+0x50>
   101ca:	mov    edx,0x3
   101cf:	mov    esi,ebp
   101d1:	mov    edi,0x4d0
   101d6:	call   18ac0 <scalar_mult_latvec>
   101db:	mov    rax,QWORD PTR [rsp+0x18]
   101e0:	xor    rax,QWORD PTR fs:0x28
   101e9:	jne    101f6 <mat_invert_cg+0xc6>
   101eb:	add    rsp,0x28
   101ef:	mov    eax,r12d
   101f2:	pop    rbp
   101f3:	pop    r12
   101f5:	ret    
   101f6:	call   2350 <__stack_chk_fail@plt>
   101fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010200 <mat_invert_uml>:
   10200:	endbr64 
   10204:	push   r15
   10206:	push   r14
   10208:	push   r13
   1020a:	push   r12
   1020c:	push   rbp
   1020d:	push   rbx
   1020e:	movsxd rbx,edi
   10211:	sub    rsp,0x28
   10215:	movsd  QWORD PTR [rsp],xmm0
   1021a:	mov    rax,QWORD PTR fs:0x28
   10223:	mov    QWORD PTR [rsp+0x18],rax
   10228:	xor    eax,eax
   1022a:	cmp    ebx,edx
   1022c:	je     10370 <mat_invert_uml+0x170>
   10232:	mov    ebp,edx
   10234:	movsxd r12,esi
   10237:	mov    edx,0x2
   1023c:	mov    esi,0x4d0
   10241:	mov    edi,ebx
   10243:	call   164d0 <dslash_fn>
   10248:	movsd  xmm0,QWORD PTR [rsp]
   1024d:	mov    edx,ebp
   1024f:	mov    esi,ebx
   10251:	mulsd  xmm0,QWORD PTR [rip+0xc417]        # 1c670 <loop_ind.5567+0x110>
   10259:	mov    ecx,0x2
   1025e:	mov    edi,0x4d0
   10263:	call   188c0 <scalar_mult_add_latvec>
   10268:	mov    edx,0x2
   1026d:	mov    esi,ebp
   1026f:	mov    edi,ebp
   10271:	movsd  xmm0,QWORD PTR [rip+0xc337]        # 1c5b0 <loop_ind.5567+0x50>
   10279:	call   18ac0 <scalar_mult_latvec>
   1027e:	mov    edx,DWORD PTR [rip+0x12404]        # 22688 <niter>
   10284:	mov    esi,r12d
   10287:	mov    edi,ebp
   10289:	movsd  xmm0,QWORD PTR [rsp]
   1028e:	lea    r8,[rsp+0x10]
   10293:	mov    ecx,0x2
   10298:	movsd  xmm1,QWORD PTR [rip+0x12128]        # 223c8 <rsqprop>
   102a0:	call   17c10 <ks_congrad>
   102a5:	mov    edx,0x1
   102aa:	mov    esi,0x4d0
   102af:	mov    edi,r12d
   102b2:	mov    DWORD PTR [rsp+0xc],eax
   102b6:	call   164d0 <dslash_fn>
   102bb:	movsxd r15,DWORD PTR [rip+0x123c2]        # 22684 <even_sites_on_node>
   102c2:	mov    rax,QWORD PTR [rip+0x124ff]        # 227c8 <lattice>
   102c9:	mov    r14,r15
   102cc:	shl    r15,0xb
   102d0:	cmp    r14d,DWORD PTR [rip+0x12229]        # 22500 <sites_on_node>
   102d7:	jge    10345 <mat_invert_uml+0x145>
   102d9:	movsd  xmm3,QWORD PTR [rsp]
   102de:	add    r15,rbx
   102e1:	mov    r13d,0x4d0
   102e7:	add    r15,rax
   102ea:	sub    r13,rbx
   102ed:	addsd  xmm3,xmm3
   102f1:	movsd  QWORD PTR [rsp],xmm3
   102f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10300:	mov    rbp,r12
   10303:	lea    rsi,[r13+r15*1+0x0]
   10308:	mov    rdi,r15
   1030b:	add    r14d,0x1
   1030f:	sub    rbp,rbx
   10312:	add    rbp,r15
   10315:	add    r15,0x800
   1031c:	mov    rdx,rbp
   1031f:	call   14ca0 <sub_su3_vector>
   10324:	mov    rsi,rbp
   10327:	mov    rdi,rbp
   1032a:	movsd  xmm0,QWORD PTR [rip+0x9f6e]        # 1a2a0 <_IO_stdin_used+0x2a0>
   10332:	divsd  xmm0,QWORD PTR [rsp]
   10337:	call   148c0 <scalar_mult_su3_vector>
   1033c:	cmp    DWORD PTR [rip+0x121bd],r14d        # 22500 <sites_on_node>
   10343:	jg     10300 <mat_invert_uml+0x100>
   10345:	mov    rax,QWORD PTR [rsp+0x18]
   1034a:	xor    rax,QWORD PTR fs:0x28
   10353:	jne    10383 <mat_invert_uml+0x183>
   10355:	mov    eax,DWORD PTR [rsp+0xc]
   10359:	add    rsp,0x28
   1035d:	pop    rbx
   1035e:	pop    rbp
   1035f:	pop    r12
   10361:	pop    r13
   10363:	pop    r14
   10365:	pop    r15
   10367:	ret    
   10368:	nop    DWORD PTR [rax+rax*1+0x0]
   10370:	lea    rdi,[rip+0xc29b]        # 1c612 <loop_ind.5567+0xb2>
   10377:	call   22f0 <puts@plt>
   1037c:	xor    edi,edi
   1037e:	call   24b0 <exit@plt>
   10383:	call   2350 <__stack_chk_fail@plt>
   10388:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010390 <check_invert>:
   10390:	endbr64 
   10394:	push   r15
   10396:	mov    edx,0x3
   1039b:	push   r14
   1039d:	push   r13
   1039f:	push   r12
   103a1:	mov    r12d,esi
   103a4:	mov    esi,0x470
   103a9:	push   rbp
   103aa:	mov    ebp,edi
   103ac:	push   rbx
   103ad:	sub    rsp,0x48
   103b1:	movsd  QWORD PTR [rsp],xmm0
   103b6:	movsd  QWORD PTR [rsp+0x10],xmm1
   103bc:	mov    rax,QWORD PTR fs:0x28
   103c5:	mov    QWORD PTR [rsp+0x38],rax
   103ca:	xor    eax,eax
   103cc:	call   164d0 <dslash_fn>
   103d1:	mov    edx,DWORD PTR [rip+0x12129]        # 22500 <sites_on_node>
   103d7:	mov    rbx,QWORD PTR [rip+0x123ea]        # 227c8 <lattice>
   103de:	test   edx,edx
   103e0:	jle    10606 <check_invert+0x276>
   103e6:	movsd  xmm0,QWORD PTR [rsp]
   103eb:	movsxd rdi,ebp
   103ee:	add    rbx,0x470
   103f5:	xor    ebp,ebp
   103f7:	lea    r13,[rdi-0x470]
   103fe:	addsd  xmm0,xmm0
   10402:	movsd  QWORD PTR [rsp],xmm0
   10407:	nop    WORD PTR [rax+rax*1+0x0]
   10410:	movsd  xmm0,QWORD PTR [rsp]
   10415:	lea    rsi,[r13+rbx*1+0x0]
   1041a:	mov    rdx,rbx
   1041d:	mov    rdi,rbx
   10420:	add    ebp,0x1
   10423:	add    rbx,0x800
   1042a:	call   14820 <scalar_mult_add_su3_vector>
   1042f:	mov    eax,DWORD PTR [rip+0x120cb]        # 22500 <sites_on_node>
   10435:	cmp    eax,ebp
   10437:	jg     10410 <check_invert+0x80>
   10439:	mov    QWORD PTR [rsp+0x28],0x0
   10442:	mov    r13,QWORD PTR [rip+0x1237f]        # 227c8 <lattice>
   10449:	mov    QWORD PTR [rsp+0x30],0x0
   10452:	test   eax,eax
   10454:	jle    10577 <check_invert+0x1e7>
   1045a:	movsxd rsi,r12d
   1045d:	mov    r15d,0x478
   10463:	lea    r14,[rip+0xc1ae]        # 1c618 <loop_ind.5567+0xb8>
   1046a:	xor    r12d,r12d
   1046d:	sub    r15,rsi
   10470:	add    r13,rsi
   10473:	mov    QWORD PTR [rsp+0x18],r15
   10478:	nop    DWORD PTR [rax+rax*1+0x0]
   10480:	mov    rax,QWORD PTR [rsp+0x18]
   10485:	lea    rbp,[r13+0x8]
   10489:	xor    r15d,r15d
   1048c:	lea    rbx,[rax+r13*1]
   10490:	xor    eax,eax
   10492:	movsd  xmm0,QWORD PTR [rbp-0x8]
   10497:	movsd  xmm2,QWORD PTR [rbx-0x8]
   1049c:	movsd  xmm7,QWORD PTR [rsp+0x10]
   104a2:	movsd  xmm1,QWORD PTR [rbp+0x0]
   104a7:	movapd xmm4,xmm0
   104ab:	movsd  xmm3,QWORD PTR [rbx]
   104af:	subsd  xmm4,xmm2
   104b3:	movapd xmm5,xmm1
   104b7:	subsd  xmm5,xmm3
   104bb:	movapd xmm6,xmm4
   104bf:	andpd  xmm6,XMMWORD PTR [rip+0xa109]        # 1a5d0 <_IO_stdin_used+0x5d0>
   104c7:	comisd xmm6,xmm7
   104cb:	ja     104e3 <check_invert+0x153>
   104cd:	movapd xmm6,xmm5
   104d1:	andpd  xmm6,XMMWORD PTR [rip+0xa0f7]        # 1a5d0 <_IO_stdin_used+0x5d0>
   104d9:	comisd xmm6,xmm7
   104dd:	ja     104e3 <check_invert+0x153>
   104df:	test   eax,eax
   104e1:	je     1051d <check_invert+0x18d>
   104e3:	mov    ecx,r15d
   104e6:	mov    edx,r12d
   104e9:	mov    rsi,r14
   104ec:	mov    edi,0x1
   104f1:	mov    eax,0x4
   104f6:	movsd  QWORD PTR [rsp+0x8],xmm5
   104fc:	movsd  QWORD PTR [rsp],xmm4
   10501:	call   2470 <__printf_chk@plt>
   10506:	xor    edi,edi
   10508:	call   19570 <terminate>
   1050d:	movsd  xmm5,QWORD PTR [rsp+0x8]
   10513:	movsd  xmm4,QWORD PTR [rsp]
   10518:	mov    eax,0x1
   1051d:	mulsd  xmm4,xmm4
   10521:	add    r15d,0x1
   10525:	add    rbp,0x10
   10529:	add    rbx,0x10
   1052d:	mulsd  xmm5,xmm5
   10531:	addsd  xmm4,xmm5
   10535:	addsd  xmm4,QWORD PTR [rsp+0x28]
   1053b:	movsd  QWORD PTR [rsp+0x28],xmm4
   10541:	cmp    r15d,0x3
   10545:	jne    10492 <check_invert+0x102>
   1054b:	mov    rdi,r13
   1054e:	add    r12d,0x1
   10552:	add    r13,0x800
   10559:	call   14dc0 <magsq_su3vec>
   1055e:	addsd  xmm0,QWORD PTR [rsp+0x30]
   10564:	cmp    DWORD PTR [rip+0x11f95],r12d        # 22500 <sites_on_node>
   1056b:	movsd  QWORD PTR [rsp+0x30],xmm0
   10571:	jg     10480 <check_invert+0xf0>
   10577:	lea    rdi,[rsp+0x28]
   1057c:	call   193f0 <g_doublesum>
   10581:	lea    rdi,[rsp+0x30]
   10586:	call   193f0 <g_doublesum>
   1058b:	xor    eax,eax
   1058d:	call   193d0 <g_sync>
   10592:	mov    eax,DWORD PTR [rip+0x1234c]        # 228e4 <this_node>
   10598:	test   eax,eax
   1059a:	je     105c0 <check_invert+0x230>
   1059c:	mov    rax,QWORD PTR [rsp+0x38]
   105a1:	xor    rax,QWORD PTR fs:0x28
   105aa:	jne    1062e <check_invert+0x29e>
   105b0:	add    rsp,0x48
   105b4:	pop    rbx
   105b5:	pop    rbp
   105b6:	pop    r12
   105b8:	pop    r13
   105ba:	pop    r14
   105bc:	pop    r15
   105be:	ret    
   105bf:	nop
   105c0:	pxor   xmm2,xmm2
   105c4:	movsd  xmm0,QWORD PTR [rsp+0x28]
   105ca:	divsd  xmm0,QWORD PTR [rsp+0x30]
   105d0:	movapd xmm1,xmm0
   105d4:	ucomisd xmm2,xmm0
   105d8:	sqrtsd xmm1,xmm1
   105dc:	ja     1061d <check_invert+0x28d>
   105de:	movapd xmm0,xmm1
   105e2:	mov    edi,0x1
   105e7:	mov    eax,0x1
   105ec:	lea    rsi,[rip+0xc055]        # 1c648 <loop_ind.5567+0xe8>
   105f3:	call   2470 <__printf_chk@plt>
   105f8:	mov    rdi,QWORD PTR [rip+0x11ce1]        # 222e0 <stdout@@GLIBC_2.2.5>
   105ff:	call   2420 <fflush@plt>
   10604:	jmp    1059c <check_invert+0x20c>
   10606:	mov    QWORD PTR [rsp+0x28],0x0
   1060f:	mov    QWORD PTR [rsp+0x30],0x0
   10618:	jmp    10577 <check_invert+0x1e7>
   1061d:	movsd  QWORD PTR [rsp],xmm1
   10622:	call   24e0 <sqrt@plt>
   10627:	movsd  xmm1,QWORD PTR [rsp]
   1062c:	jmp    105de <check_invert+0x24e>
   1062e:	call   2350 <__stack_chk_fail@plt>
   10633:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1063d:	nop    DWORD PTR [rax]

0000000000010640 <add_basic_path>:
   10640:	endbr64 
   10644:	push   r15
   10646:	movapd xmm2,xmm0
   1064a:	mov    r15,rdi
   1064d:	xor    ecx,ecx
   1064f:	push   r14
   10651:	mov    r14d,esi
   10654:	push   r13
   10656:	push   r12
   10658:	push   rbp
   10659:	push   rbx
   1065a:	sub    rsp,0xa8
   10661:	xorpd  xmm2,XMMWORD PTR [rip+0xa017]        # 1a680 <_IO_stdin_used+0x680>
   10669:	movsd  xmm1,QWORD PTR [rip+0xbf3f]        # 1c5b0 <loop_ind.5567+0x50>
   10671:	mov    rax,QWORD PTR fs:0x28
   1067a:	mov    QWORD PTR [rsp+0x98],rax
   10682:	xor    eax,eax
   10684:	mov    DWORD PTR [rsp+0x50],0x0
   1068c:	mov    DWORD PTR [rsp+0x4],0x0
   10694:	mov    DWORD PTR [rsp+0x54],0x0
   1069c:	mov    eax,r14d
   1069f:	mov    r14,r15
   106a2:	mov    DWORD PTR [rsp+0x8],0x0
   106aa:	mov    r15d,eax
   106ad:	mov    DWORD PTR [rsp+0x58],0x0
   106b5:	mov    eax,r15d
   106b8:	mov    ebx,DWORD PTR [rsp+0x4]
   106bc:	mov    r15,r14
   106bf:	mov    DWORD PTR [rsp+0xc],0x0
   106c7:	cmp    DWORD PTR [rsp+0x8],ebx
   106cb:	mov    r14d,eax
   106ce:	setne  BYTE PTR [rsp+0x17]
   106d3:	mov    ebx,DWORD PTR [rsp+0xc]
   106d7:	mov    eax,DWORD PTR [rsp+0x4]
   106db:	mov    DWORD PTR [rsp+0x5c],0x0
   106e3:	cmp    ebx,eax
   106e5:	setne  al
   106e8:	cmp    DWORD PTR [rsp+0x8],ebx
   106ec:	setne  dl
   106ef:	xor    r13d,r13d
   106f2:	and    eax,edx
   106f4:	and    al,BYTE PTR [rsp+0x17]
   106f8:	mov    BYTE PTR [rsp+0x16],al
   106fc:	jmp    10711 <add_basic_path+0xd1>
   106fe:	add    r13d,0x1
   10702:	mov    DWORD PTR [rsp+0x5c],r13d
   10707:	cmp    r13d,0x4
   1070b:	je     1092b <add_basic_path+0x2eb>
   10711:	cmp    r13d,DWORD PTR [rsp+0x4]
   10716:	setne  al
   10719:	cmp    DWORD PTR [rsp+0x8],r13d
   1071e:	setne  dl
   10721:	and    eax,edx
   10723:	test   BYTE PTR [rsp+0x16],al
   10727:	je     106fe <add_basic_path+0xbe>
   10729:	cmp    r13d,DWORD PTR [rsp+0xc]
   1072e:	je     106fe <add_basic_path+0xbe>
   10730:	mov    DWORD PTR [rsp+0x18],r13d
   10735:	movsd  xmm3,QWORD PTR [rip+0x9b63]        # 1a2a0 <_IO_stdin_used+0x2a0>
   1073d:	xor    r12d,r12d
   10740:	lea    r9,[rsp+0x70]
   10745:	lea    r10,[rsp+0x50]
   1074a:	lea    rax,[rsp+0x30]
   1074f:	lea    rbp,[rip+0x12c5a]        # 233b0 <q_paths+0x30>
   10756:	mov    DWORD PTR [rsp+0x24],0x0
   1075e:	mov    DWORD PTR [rsp+0x10],0x1
   10766:	mov    DWORD PTR [rsp+0x28],0x0
   1076e:	mov    r13d,0x1
   10774:	mov    DWORD PTR [rsp+0x1c],r13d
   10779:	mov    ebx,0x1
   1077e:	mov    r11d,0x7
   10784:	mov    r13d,ecx
   10787:	mov    DWORD PTR [rsp+0x2c],0x0
   1078f:	nop
   10790:	xor    edx,edx
   10792:	mov    edi,r11d
   10795:	mov    r8d,r12d
   10798:	mov    rcx,r9
   1079b:	mov    esi,DWORD PTR [r10+rdx*1]
   1079f:	sub    edi,esi
   107a1:	cmp    r8d,0x1
   107a5:	je     107d0 <add_basic_path+0x190>
   107a7:	mov    DWORD PTR [r9+rdx*1],esi
   107ab:	add    rdx,0x4
   107af:	mov    DWORD PTR [rcx+0x1c],edi
   107b2:	sub    rcx,0x4
   107b6:	cmp    rdx,0x10
   107ba:	je     107e0 <add_basic_path+0x1a0>
   107bc:	mov    esi,DWORD PTR [r10+rdx*1]
   107c0:	mov    r8d,DWORD PTR [rsp+rdx*1+0x20]
   107c5:	mov    edi,r11d
   107c8:	sub    edi,esi
   107ca:	cmp    r8d,0x1
   107ce:	jne    107a7 <add_basic_path+0x167>
   107d0:	mov    DWORD PTR [r9+rdx*1],edi
   107d4:	mov    edi,esi
   107d6:	jmp    107ab <add_basic_path+0x16b>
   107d8:	nop    DWORD PTR [rax+rax*1+0x0]
   107e0:	xor    edx,edx
   107e2:	test   r14d,r14d
   107e5:	jle    1080a <add_basic_path+0x1ca>
   107e7:	nop    WORD PTR [rax+rax*1+0x0]
   107f0:	movsxd rcx,DWORD PTR [r15+rdx*4]
   107f4:	mov    ecx,DWORD PTR [rsp+rcx*4+0x70]
   107f8:	mov    DWORD PTR [rax+rdx*4],ecx
   107fb:	add    rdx,0x1
   107ff:	cmp    r14d,edx
   10802:	jg     107f0 <add_basic_path+0x1b0>
   10804:	cmp    r14d,0x6
   10808:	jg     10820 <add_basic_path+0x1e0>
   1080a:	movsxd rdx,r14d
   1080d:	nop    DWORD PTR [rax]
   10810:	mov    DWORD PTR [rax+rdx*4],0xffffffff
   10817:	add    rdx,0x1
   1081b:	cmp    edx,0x6
   1081e:	jle    10810 <add_basic_path+0x1d0>
   10820:	mov    ecx,DWORD PTR [rip+0x1ac5e]        # 2b484 <num_q_paths>
   10826:	test   ecx,ecx
   10828:	jle    1088d <add_basic_path+0x24d>
   1082a:	lea    edx,[rcx-0x1]
   1082d:	lea    rsi,[rip+0x12b4c]        # 23380 <q_paths>
   10834:	lea    rdi,[rdx+rdx*2]
   10838:	shl    rdi,0x4
   1083c:	add    rdi,rbp
   1083f:	nop
   10840:	xor    edx,edx
   10842:	nop    WORD PTR [rax+rax*1+0x0]
   10848:	mov    r8d,DWORD PTR [rsi+rdx*1]
   1084c:	cmp    DWORD PTR [rax+rdx*1],r8d
   10850:	jne    10878 <add_basic_path+0x238>
   10852:	add    rdx,0x4
   10856:	cmp    rdx,0x1c
   1085a:	jne    10848 <add_basic_path+0x208>
   1085c:	mov    DWORD PTR [rsp+0x2c],ebx
   10860:	cmp    ebx,0x2
   10863:	je     108fd <add_basic_path+0x2bd>
   10869:	mov    ebx,0x2
   1086e:	jmp    10790 <add_basic_path+0x150>
   10873:	nop    DWORD PTR [rax+rax*1+0x0]
   10878:	add    rsi,0x30
   1087c:	cmp    rsi,rdi
   1087f:	jne    10840 <add_basic_path+0x200>
   10881:	cmp    ecx,0x2af
   10887:	jg     109b0 <add_basic_path+0x370>
   1088d:	movsxd rdi,ecx
   10890:	lea    rdx,[rip+0x12ae9]        # 23380 <q_paths>
   10897:	lea    rsi,[rdi+rdi*2]
   1089b:	shl    rsi,0x4
   1089f:	add    rsi,rdx
   108a2:	xor    edx,edx
   108a4:	mov    DWORD PTR [rsi+0x1c],r14d
   108a8:	nop    DWORD PTR [rax+rax*1+0x0]
   108b0:	mov    r8d,DWORD PTR [rax+rdx*1]
   108b4:	mov    DWORD PTR [rsi+rdx*1],r8d
   108b8:	add    rdx,0x4
   108bc:	cmp    rdx,0x1c
   108c0:	jne    108b0 <add_basic_path+0x270>
   108c2:	lea    rdx,[rdi+rdi*2]
   108c6:	lea    rdi,[rip+0x12ab3]        # 23380 <q_paths>
   108cd:	shl    rdx,0x4
   108d1:	add    rdx,rdi
   108d4:	test   r12d,r12d
   108d7:	jne    1091f <add_basic_path+0x2df>
   108d9:	movsd  QWORD PTR [rdx+0x20],xmm0
   108de:	movsd  QWORD PTR [rdx+0x28],xmm3
   108e3:	add    ecx,0x1
   108e6:	mov    DWORD PTR [rsp+0x2c],ebx
   108ea:	add    r13d,0x1
   108ee:	mov    DWORD PTR [rip+0x1ab90],ecx        # 2b484 <num_q_paths>
   108f4:	cmp    ebx,0x2
   108f7:	jne    10869 <add_basic_path+0x229>
   108fd:	mov    ecx,r13d
   10900:	mov    r13d,DWORD PTR [rsp+0x1c]
   10905:	mov    DWORD PTR [rsp+0x28],r13d
   1090a:	cmp    r13d,0x2
   1090e:	je     109c1 <add_basic_path+0x381>
   10914:	mov    r13d,0x2
   1091a:	jmp    10774 <add_basic_path+0x134>
   1091f:	movsd  QWORD PTR [rdx+0x20],xmm2
   10924:	movsd  QWORD PTR [rdx+0x28],xmm1
   10929:	jmp    108e3 <add_basic_path+0x2a3>
   1092b:	add    DWORD PTR [rsp+0xc],0x1
   10930:	mov    eax,DWORD PTR [rsp+0xc]
   10934:	mov    DWORD PTR [rsp+0x58],eax
   10938:	cmp    eax,0x4
   1093b:	jne    106d3 <add_basic_path+0x93>
   10941:	mov    eax,r14d
   10944:	add    DWORD PTR [rsp+0x8],0x1
   10949:	mov    r14,r15
   1094c:	mov    r15d,eax
   1094f:	mov    eax,DWORD PTR [rsp+0x8]
   10953:	mov    DWORD PTR [rsp+0x54],eax
   10957:	cmp    eax,0x4
   1095a:	jne    106ad <add_basic_path+0x6d>
   10960:	mov    eax,r15d
   10963:	add    DWORD PTR [rsp+0x4],0x1
   10968:	mov    r15,r14
   1096b:	mov    r14d,eax
   1096e:	mov    eax,DWORD PTR [rsp+0x4]
   10972:	mov    DWORD PTR [rsp+0x50],eax
   10976:	cmp    eax,0x4
   10979:	jne    10694 <add_basic_path+0x54>
   1097f:	add    DWORD PTR [rip+0x1aafa],0x1        # 2b480 <num_basic_paths>
   10986:	mov    rax,QWORD PTR [rsp+0x98]
   1098e:	xor    rax,QWORD PTR fs:0x28
   10997:	jne    10a04 <add_basic_path+0x3c4>
   10999:	add    rsp,0xa8
   109a0:	mov    eax,ecx
   109a2:	pop    rbx
   109a3:	pop    rbp
   109a4:	pop    r12
   109a6:	pop    r13
   109a8:	pop    r14
   109aa:	pop    r15
   109ac:	ret    
   109ad:	nop    DWORD PTR [rax]
   109b0:	mov    eax,DWORD PTR [rip+0x11f2e]        # 228e4 <this_node>
   109b6:	test   eax,eax
   109b8:	je     109db <add_basic_path+0x39b>
   109ba:	xor    edi,edi
   109bc:	call   24b0 <exit@plt>
   109c1:	mov    ebx,DWORD PTR [rsp+0x10]
   109c5:	mov    DWORD PTR [rsp+0x24],ebx
   109c9:	cmp    ebx,0x2
   109cc:	je     109e9 <add_basic_path+0x3a9>
   109ce:	mov    DWORD PTR [rsp+0x10],0x2
   109d6:	jmp    10766 <add_basic_path+0x126>
   109db:	lea    rdi,[rip+0xbb00]        # 1c4e2 <_IO_stdin_used+0x24e2>
   109e2:	call   22f0 <puts@plt>
   109e7:	jmp    109ba <add_basic_path+0x37a>
   109e9:	cmp    r12d,0x1
   109ed:	je     109fa <add_basic_path+0x3ba>
   109ef:	mov    r12d,0x1
   109f5:	jmp    10756 <add_basic_path+0x116>
   109fa:	mov    r13d,DWORD PTR [rsp+0x18]
   109ff:	jmp    106fe <add_basic_path+0xbe>
   10a04:	call   2350 <__stack_chk_fail@plt>
   10a09:	nop    DWORD PTR [rax+0x0]

0000000000010a10 <make_path_table>:
   10a10:	endbr64 
   10a14:	push   r14
   10a16:	push   r13
   10a18:	push   r12
   10a1a:	push   rbp
   10a1b:	push   rbx
   10a1c:	sub    rsp,0x10
   10a20:	mov    esi,DWORD PTR [rip+0x11ebe]        # 228e4 <this_node>
   10a26:	test   esi,esi
   10a28:	je     10b05 <make_path_table+0xf5>
   10a2e:	mov    DWORD PTR [rip+0x1aa4c],0x0        # 2b484 <num_q_paths>
   10a38:	mov    DWORD PTR [rip+0x1aa3e],0x0        # 2b480 <num_basic_paths>
   10a42:	movsd  xmm0,QWORD PTR [rip+0xbd3e]        # 1c788 <path_length_in+0x18>
   10a4a:	lea    r14,[rip+0x117af]        # 22200 <path_ind>
   10a51:	xor    ebx,ebx
   10a53:	mov    esi,0x1
   10a58:	lea    rbp,[rip+0x118c1]        # 22320 <act_path_coeff>
   10a5f:	lea    r13,[rip+0xbce2]        # 1c748 <path_coeff+0x8>
   10a66:	lea    r12,[rip+0xbd07]        # 1c774 <path_length_in+0x4>
   10a6d:	nop    DWORD PTR [rax]
   10a70:	mov    rdi,r14
   10a73:	movsd  QWORD PTR [rbp+rbx*8+0x0],xmm0
   10a79:	movsd  QWORD PTR [rsp+0x8],xmm0
   10a7f:	call   10640 <add_basic_path>
   10a84:	mov    edx,DWORD PTR [rip+0x11e5a]        # 228e4 <this_node>
   10a8a:	movsd  xmm0,QWORD PTR [rsp+0x8]
   10a90:	test   edx,edx
   10a92:	je     10ad8 <make_path_table+0xc8>
   10a94:	cmp    rbx,0x5
   10a98:	je     10af8 <make_path_table+0xe8>
   10a9a:	mov    esi,DWORD PTR [r12+rbx*4]
   10a9e:	movsd  xmm0,QWORD PTR [r13+rbx*8+0x0]
   10aa5:	cmp    esi,0x1
   10aa8:	jle    10acb <make_path_table+0xbb>
   10aaa:	movsd  xmm1,QWORD PTR [rip+0x11cfe]        # 227b0 <u0>
   10ab2:	mov    eax,0x1
   10ab7:	nop    WORD PTR [rax+rax*1+0x0]
   10ac0:	divsd  xmm0,xmm1
   10ac4:	add    eax,0x1
   10ac7:	cmp    eax,esi
   10ac9:	jne    10ac0 <make_path_table+0xb0>
   10acb:	add    rbx,0x1
   10acf:	add    r14,0x1c
   10ad3:	jmp    10a70 <make_path_table+0x60>
   10ad5:	nop    DWORD PTR [rax]
   10ad8:	mov    ecx,eax
   10ada:	mov    edx,ebx
   10adc:	lea    rsi,[rip+0xbbcd]        # 1c6b0 <loop_ind.5567+0x150>
   10ae3:	mov    edi,0x1
   10ae8:	mov    eax,0x1
   10aed:	call   2470 <__printf_chk@plt>
   10af2:	cmp    rbx,0x5
   10af6:	jne    10a9a <make_path_table+0x8a>
   10af8:	add    rsp,0x10
   10afc:	pop    rbx
   10afd:	pop    rbp
   10afe:	pop    r12
   10b00:	pop    r13
   10b02:	pop    r14
   10b04:	ret    
   10b05:	lea    rdi,[rip+0x11694]        # 221a0 <quark_action_description>
   10b0c:	call   22f0 <puts@plt>
   10b11:	mov    ecx,DWORD PTR [rip+0x11dcd]        # 228e4 <this_node>
   10b17:	mov    DWORD PTR [rip+0x1a963],0x0        # 2b484 <num_q_paths>
   10b21:	mov    DWORD PTR [rip+0x1a955],0x0        # 2b480 <num_basic_paths>
   10b2b:	test   ecx,ecx
   10b2d:	jne    10a42 <make_path_table+0x32>
   10b33:	lea    rdi,[rip+0xbb3e]        # 1c678 <loop_ind.5567+0x118>
   10b3a:	call   22f0 <puts@plt>
   10b3f:	jmp    10a42 <make_path_table+0x32>
   10b44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   10b4f:	nop

0000000000010b50 <path_transport>:
   10b50:	endbr64 
   10b54:	push   r15
   10b56:	push   r14
   10b58:	push   r13
   10b5a:	push   r12
   10b5c:	push   rbp
   10b5d:	push   rbx
   10b5e:	sub    rsp,0x58
   10b62:	mov    DWORD PTR [rsp+0x4c],edi
   10b66:	mov    DWORD PTR [rsp+0x48],esi
   10b6a:	mov    DWORD PTR [rsp+0x40],edx
   10b6e:	mov    QWORD PTR [rsp+0x38],rcx
   10b73:	test   r8d,r8d
   10b76:	jg     10c18 <path_transport+0xc8>
   10b7c:	mov    esi,DWORD PTR [rsp+0x48]
   10b80:	cmp    DWORD PTR [rsp+0x4c],esi
   10b84:	je     10c06 <path_transport+0xb6>
   10b8a:	xor    eax,eax
   10b8c:	xor    ecx,ecx
   10b8e:	cmp    DWORD PTR [rsp+0x40],0x1
   10b93:	jne    10ba3 <path_transport+0x53>
   10b95:	movsxd rax,DWORD PTR [rip+0x11ae8]        # 22684 <even_sites_on_node>
   10b9c:	mov    rcx,rax
   10b9f:	shl    rax,0xb
   10ba3:	movsxd rdi,DWORD PTR [rsp+0x4c]
   10ba8:	movsxd rsi,DWORD PTR [rsp+0x48]
   10bad:	mov    r8d,DWORD PTR [rsp+0x40]
   10bb2:	add    rax,rdi
   10bb5:	add    rax,QWORD PTR [rip+0x11c0c]        # 227c8 <lattice>
   10bbc:	jmp    10bf1 <path_transport+0xa1>
   10bbe:	xchg   ax,ax
   10bc0:	movdqu xmm6,XMMWORD PTR [rax]
   10bc4:	mov    rdx,rax
   10bc7:	add    ecx,0x1
   10bca:	add    rax,0x800
   10bd0:	sub    rdx,rdi
   10bd3:	movups XMMWORD PTR [rdx+rsi*1],xmm6
   10bd7:	movdqu xmm7,XMMWORD PTR [rax-0x7f0]
   10bdf:	movups XMMWORD PTR [rdx+rsi*1+0x10],xmm7
   10be4:	movdqu xmm6,XMMWORD PTR [rax-0x7e0]
   10bec:	movups XMMWORD PTR [rdx+rsi*1+0x20],xmm6
   10bf1:	mov    edx,DWORD PTR [rip+0x11a8d]        # 22684 <even_sites_on_node>
   10bf7:	cmp    r8d,0x2
   10bfb:	cmovne edx,DWORD PTR [rip+0x118fe]        # 22500 <sites_on_node>
   10c02:	cmp    ecx,edx
   10c04:	jl     10bc0 <path_transport+0x70>
   10c06:	add    rsp,0x58
   10c0a:	pop    rbx
   10c0b:	pop    rbp
   10c0c:	pop    r12
   10c0e:	pop    r13
   10c10:	pop    r14
   10c12:	pop    r15
   10c14:	ret    
   10c15:	nop    DWORD PTR [rax]
   10c18:	movsxd rdi,DWORD PTR [rip+0x118e1]        # 22500 <sites_on_node>
   10c1f:	mov    esi,0x30
   10c24:	mov    ebp,r8d
   10c27:	call   23d0 <calloc@plt>
   10c2c:	movsxd rdi,DWORD PTR [rip+0x118cd]        # 22500 <sites_on_node>
   10c33:	mov    esi,0x30
   10c38:	mov    QWORD PTR [rsp+0x20],rax
   10c3d:	call   23d0 <calloc@plt>
   10c42:	movsxd rdi,DWORD PTR [rip+0x118b7]        # 22500 <sites_on_node>
   10c49:	mov    esi,0x30
   10c4e:	mov    QWORD PTR [rsp+0x18],rax
   10c53:	call   23d0 <calloc@plt>
   10c58:	mov    QWORD PTR [rsp+0x28],rax
   10c5d:	lea    eax,[rbp-0x1]
   10c60:	lea    rbp,[rip+0x11bf9]        # 22860 <gen_pt>
   10c67:	mov    DWORD PTR [rsp+0x44],eax
   10c6b:	cdqe   
   10c6d:	mov    QWORD PTR [rsp+0x8],rax
   10c72:	mov    eax,DWORD PTR [rsp+0x40]
   10c76:	test   BYTE PTR [rsp+0x8],0x1
   10c7b:	jne    10e2d <path_transport+0x2dd>
   10c81:	nop    DWORD PTR [rax+0x0]
   10c88:	cmp    eax,0x2
   10c8b:	je     111a0 <path_transport+0x650>
   10c91:	cmp    eax,0x3
   10c94:	je     11130 <path_transport+0x5e0>
   10c9a:	cmp    eax,0x1
   10c9d:	je     110e8 <path_transport+0x598>
   10ca3:	mov    esi,DWORD PTR [rsp+0x8]
   10ca7:	cmp    DWORD PTR [rsp+0x44],esi
   10cab:	je     112c0 <path_transport+0x770>
   10cb1:	mov    rax,QWORD PTR [rsp+0x38]
   10cb6:	mov    rsi,QWORD PTR [rsp+0x8]
   10cbb:	mov    edx,DWORD PTR [rax+rsi*4]
   10cbe:	lea    rbx,[rax+rsi*4]
   10cc2:	mov    QWORD PTR [rsp+0x10],rbx
   10cc7:	cmp    edx,0x3
   10cca:	jle    1123a <path_transport+0x6ea>
   10cd0:	mov    ebx,DWORD PTR [rsp+0x40]
   10cd4:	cmp    DWORD PTR [rsp+0x4],0x1
   10cd9:	je     11022 <path_transport+0x4d2>
   10cdf:	xor    ecx,ecx
   10ce1:	xor    r14d,r14d
   10ce4:	xor    eax,eax
   10ce6:	lea    r15,[rax+rax*2]
   10cea:	mov    rax,QWORD PTR [rsp+0x20]
   10cef:	add    rcx,QWORD PTR [rip+0x11ad2]        # 227c8 <lattice>
   10cf6:	mov    DWORD PTR [rsp+0x30],ebx
   10cfa:	shl    r15,0x4
   10cfe:	mov    rbx,rcx
   10d01:	lea    r13,[rax+r15*1]
   10d05:	add    r15,QWORD PTR [rsp+0x28]
   10d0a:	mov    r12,r13
   10d0d:	mov    r13,QWORD PTR [rsp+0x10]
   10d12:	jmp    10d50 <path_transport+0x200>
   10d14:	nop    DWORD PTR [rax+0x0]
   10d18:	mov    eax,0x7
   10d1d:	mov    rsi,r12
   10d20:	add    r14d,0x1
   10d24:	add    r12,0x30
   10d28:	sub    eax,edx
   10d2a:	mov    rdx,r15
   10d2d:	add    r15,0x30
   10d31:	cdqe   
   10d33:	lea    rax,[rax+rax*8]
   10d37:	shl    rax,0x4
   10d3b:	lea    rdi,[rbx+rax*1+0x70]
   10d40:	add    rbx,0x800
   10d47:	call   14010 <mult_adj_su3_mat_vec>
   10d4c:	mov    edx,DWORD PTR [r13+0x0]
   10d50:	mov    eax,DWORD PTR [rip+0x1192e]        # 22684 <even_sites_on_node>
   10d56:	cmp    DWORD PTR [rsp+0x4],0x2
   10d5b:	cmovne eax,DWORD PTR [rip+0x1179e]        # 22500 <sites_on_node>
   10d62:	cmp    r14d,eax
   10d65:	jl     10d18 <path_transport+0x1c8>
   10d67:	mov    ebx,DWORD PTR [rsp+0x30]
   10d6b:	mov    r8,QWORD PTR [rbp+0x0]
   10d6f:	mov    esi,0x30
   10d74:	mov    rdi,QWORD PTR [rsp+0x28]
   10d79:	mov    ecx,ebx
   10d7b:	call   19070 <start_gather_from_temp>
   10d80:	mov    rdi,rax
   10d83:	mov    r12,rax
   10d86:	call   19170 <wait_gather>
   10d8b:	cmp    ebx,0x1
   10d8e:	mov    ecx,0x0
   10d93:	cmove  ecx,DWORD PTR [rip+0x118ea]        # 22684 <even_sites_on_node>
   10d9a:	movsxd rcx,ecx
   10d9d:	lea    rdx,[rcx+rcx*2]
   10da1:	shl    rdx,0x4
   10da5:	add    rdx,QWORD PTR [rsp+0x18]
   10daa:	jmp    10dda <path_transport+0x28a>
   10dac:	nop    DWORD PTR [rax+0x0]
   10db0:	mov    rax,QWORD PTR [rbp+0x0]
   10db4:	add    rdx,0x30
   10db8:	mov    rax,QWORD PTR [rax+rcx*8]
   10dbc:	add    rcx,0x1
   10dc0:	movdqu xmm0,XMMWORD PTR [rax]
   10dc4:	movups XMMWORD PTR [rdx-0x30],xmm0
   10dc8:	movdqu xmm1,XMMWORD PTR [rax+0x10]
   10dcd:	movups XMMWORD PTR [rdx-0x20],xmm1
   10dd1:	movdqu xmm2,XMMWORD PTR [rax+0x20]
   10dd6:	movups XMMWORD PTR [rdx-0x10],xmm2
   10dda:	mov    eax,DWORD PTR [rip+0x118a4]        # 22684 <even_sites_on_node>
   10de0:	cmp    ebx,0x2
   10de3:	cmovne eax,DWORD PTR [rip+0x11716]        # 22500 <sites_on_node>
   10dea:	cmp    eax,ecx
   10dec:	jg     10db0 <path_transport+0x260>
   10dee:	mov    rdi,r12
   10df1:	call   19180 <cleanup_gather>
   10df6:	sub    QWORD PTR [rsp+0x8],0x1
   10dfc:	mov    rax,QWORD PTR [rsp+0x8]
   10e01:	cmp    eax,0xffffffff
   10e04:	je     10f4b <path_transport+0x3fb>
   10e0a:	mov    rax,QWORD PTR [rsp+0x20]
   10e0f:	mov    rsi,QWORD PTR [rsp+0x18]
   10e14:	mov    QWORD PTR [rsp+0x18],rax
   10e19:	mov    eax,DWORD PTR [rsp+0x40]
   10e1d:	mov    QWORD PTR [rsp+0x20],rsi
   10e22:	test   BYTE PTR [rsp+0x8],0x1
   10e27:	je     10c88 <path_transport+0x138>
   10e2d:	cmp    eax,0x2
   10e30:	je     110d0 <path_transport+0x580>
   10e36:	cmp    eax,0x3
   10e39:	je     11040 <path_transport+0x4f0>
   10e3f:	cmp    eax,0x1
   10e42:	je     10ff0 <path_transport+0x4a0>
   10e48:	mov    DWORD PTR [rsp+0x4],eax
   10e4c:	mov    esi,DWORD PTR [rsp+0x8]
   10e50:	cmp    DWORD PTR [rsp+0x44],esi
   10e54:	je     1105b <path_transport+0x50b>
   10e5a:	mov    rax,QWORD PTR [rsp+0x38]
   10e5f:	mov    rsi,QWORD PTR [rsp+0x8]
   10e64:	mov    edx,DWORD PTR [rax+rsi*4]
   10e67:	lea    rdi,[rax+rsi*4]
   10e6b:	mov    QWORD PTR [rsp+0x10],rdi
   10e70:	cmp    edx,0x3
   10e73:	jg     10cd4 <path_transport+0x184>
   10e79:	mov    rdi,QWORD PTR [rsp+0x20]
   10e7e:	mov    r8,QWORD PTR [rbp+0x0]
   10e82:	mov    ecx,ebx
   10e84:	mov    esi,0x30
   10e89:	call   19070 <start_gather_from_temp>
   10e8e:	mov    rdi,rax
   10e91:	mov    QWORD PTR [rsp+0x30],rax
   10e96:	call   19170 <wait_gather>
   10e9b:	cmp    ebx,0x1
   10e9e:	je     11209 <path_transport+0x6b9>
   10ea4:	xor    ecx,ecx
   10ea6:	xor    r15d,r15d
   10ea9:	xor    eax,eax
   10eab:	lea    r13,[rax*8+0x0]
   10eb3:	lea    rdx,[rax+rax*2]
   10eb7:	mov    rax,QWORD PTR [rsp+0x18]
   10ebc:	add    rcx,QWORD PTR [rip+0x11905]        # 227c8 <lattice>
   10ec3:	shl    rdx,0x4
   10ec7:	mov    r14,rcx
   10eca:	lea    r12,[rax+rdx*1]
   10ece:	mov    rax,r13
   10ed1:	mov    r13,r12
   10ed4:	mov    r12,rax
   10ed7:	jmp    10f18 <path_transport+0x3c8>
   10ed9:	nop    DWORD PTR [rax+0x0]
   10ee0:	mov    rax,QWORD PTR [rbp+0x0]
   10ee4:	mov    rdx,r13
   10ee7:	add    r15d,0x1
   10eeb:	add    r13,0x30
   10eef:	mov    rsi,QWORD PTR [rax+r12*1]
   10ef3:	mov    rax,QWORD PTR [rsp+0x10]
   10ef8:	add    r12,0x8
   10efc:	movsxd rax,DWORD PTR [rax]
   10eff:	lea    rax,[rax+rax*8]
   10f03:	shl    rax,0x4
   10f07:	lea    rdi,[r14+rax*1+0x70]
   10f0c:	add    r14,0x800
   10f13:	call   14530 <mult_su3_mat_vec>
   10f18:	mov    eax,DWORD PTR [rip+0x11766]        # 22684 <even_sites_on_node>
   10f1e:	cmp    ebx,0x2
   10f21:	cmovne eax,DWORD PTR [rip+0x115d8]        # 22500 <sites_on_node>
   10f28:	cmp    r15d,eax
   10f2b:	jl     10ee0 <path_transport+0x390>
   10f2d:	mov    rdi,QWORD PTR [rsp+0x30]
   10f32:	call   19180 <cleanup_gather>
   10f37:	sub    QWORD PTR [rsp+0x8],0x1
   10f3d:	mov    rax,QWORD PTR [rsp+0x8]
   10f42:	cmp    eax,0xffffffff
   10f45:	jne    10e0a <path_transport+0x2ba>
   10f4b:	cmp    DWORD PTR [rsp+0x40],0x1
   10f50:	je     11224 <path_transport+0x6d4>
   10f56:	xor    ecx,ecx
   10f58:	xor    esi,esi
   10f5a:	xor    edx,edx
   10f5c:	movsxd rax,DWORD PTR [rsp+0x48]
   10f61:	lea    rdx,[rdx+rdx*2]
   10f65:	mov    edi,DWORD PTR [rsp+0x40]
   10f69:	shl    rdx,0x4
   10f6d:	add    rdx,QWORD PTR [rsp+0x18]
   10f72:	add    rax,rcx
   10f75:	add    rax,QWORD PTR [rip+0x1184c]        # 227c8 <lattice>
   10f7c:	jmp    10fb0 <path_transport+0x460>
   10f7e:	xchg   ax,ax
   10f80:	movdqu xmm3,XMMWORD PTR [rdx]
   10f84:	add    esi,0x1
   10f87:	add    rdx,0x30
   10f8b:	add    rax,0x800
   10f91:	movups XMMWORD PTR [rax-0x800],xmm3
   10f98:	movdqu xmm4,XMMWORD PTR [rdx-0x20]
   10f9d:	movups XMMWORD PTR [rax-0x7f0],xmm4
   10fa4:	movdqu xmm5,XMMWORD PTR [rdx-0x10]
   10fa9:	movups XMMWORD PTR [rax-0x7e0],xmm5
   10fb0:	mov    ecx,DWORD PTR [rip+0x116ce]        # 22684 <even_sites_on_node>
   10fb6:	cmp    edi,0x2
   10fb9:	cmovne ecx,DWORD PTR [rip+0x11540]        # 22500 <sites_on_node>
   10fc0:	cmp    esi,ecx
   10fc2:	jl     10f80 <path_transport+0x430>
   10fc4:	mov    rdi,QWORD PTR [rsp+0x18]
   10fc9:	call   22a0 <free@plt>
   10fce:	mov    rdi,QWORD PTR [rsp+0x20]
   10fd3:	call   22a0 <free@plt>
   10fd8:	mov    rdi,QWORD PTR [rsp+0x28]
   10fdd:	add    rsp,0x58
   10fe1:	pop    rbx
   10fe2:	pop    rbp
   10fe3:	pop    r12
   10fe5:	pop    r13
   10fe7:	pop    r14
   10fe9:	pop    r15
   10feb:	jmp    22a0 <free@plt>
   10ff0:	mov    ebx,DWORD PTR [rsp+0x8]
   10ff4:	cmp    DWORD PTR [rsp+0x44],ebx
   10ff8:	je     11285 <path_transport+0x735>
   10ffe:	mov    rax,QWORD PTR [rsp+0x38]
   11003:	mov    rbx,QWORD PTR [rsp+0x8]
   11008:	mov    edx,DWORD PTR [rax+rbx*4]
   1100b:	lea    rsi,[rax+rbx*4]
   1100f:	mov    QWORD PTR [rsp+0x10],rsi
   11014:	cmp    edx,0x3
   11017:	jle    11247 <path_transport+0x6f7>
   1101d:	mov    ebx,0x2
   11022:	movsxd rax,DWORD PTR [rip+0x1165b]        # 22684 <even_sites_on_node>
   11029:	mov    DWORD PTR [rsp+0x4],0x1
   11031:	mov    rcx,rax
   11034:	mov    r14,rax
   11037:	shl    rcx,0xb
   1103b:	jmp    10ce6 <path_transport+0x196>
   11040:	mov    DWORD PTR [rsp+0x4],0x3
   11048:	mov    esi,DWORD PTR [rsp+0x8]
   1104c:	mov    ebx,0x3
   11051:	cmp    DWORD PTR [rsp+0x44],esi
   11055:	jne    10e5a <path_transport+0x30a>
   1105b:	xor    ecx,ecx
   1105d:	xor    esi,esi
   1105f:	xor    eax,eax
   11061:	movsxd rdx,DWORD PTR [rsp+0x4c]
   11066:	lea    rax,[rax+rax*2]
   1106a:	mov    edi,DWORD PTR [rsp+0x4]
   1106e:	shl    rax,0x4
   11072:	add    rax,QWORD PTR [rsp+0x20]
   11077:	add    rdx,rcx
   1107a:	add    rdx,QWORD PTR [rip+0x11747]        # 227c8 <lattice>
   11081:	jmp    110b6 <path_transport+0x566>
   11083:	nop    DWORD PTR [rax+rax*1+0x0]
   11088:	movdqu xmm7,XMMWORD PTR [rdx]
   1108c:	add    esi,0x1
   1108f:	add    rax,0x30
   11093:	add    rdx,0x800
   1109a:	movups XMMWORD PTR [rax-0x30],xmm7
   1109e:	movdqu xmm3,XMMWORD PTR [rdx-0x7f0]
   110a6:	movups XMMWORD PTR [rax-0x20],xmm3
   110aa:	movdqu xmm4,XMMWORD PTR [rdx-0x7e0]
   110b2:	movups XMMWORD PTR [rax-0x10],xmm4
   110b6:	mov    ecx,DWORD PTR [rip+0x115c8]        # 22684 <even_sites_on_node>
   110bc:	cmp    edi,0x2
   110bf:	cmovne ecx,DWORD PTR [rip+0x1143a]        # 22500 <sites_on_node>
   110c6:	cmp    esi,ecx
   110c8:	jl     11088 <path_transport+0x538>
   110ca:	jmp    10e5a <path_transport+0x30a>
   110cf:	nop
   110d0:	mov    DWORD PTR [rsp+0x4],0x2
   110d8:	mov    ebx,0x1
   110dd:	jmp    10e4c <path_transport+0x2fc>
   110e2:	nop    WORD PTR [rax+rax*1+0x0]
   110e8:	mov    ebx,DWORD PTR [rsp+0x8]
   110ec:	cmp    DWORD PTR [rsp+0x44],ebx
   110f0:	je     112a8 <path_transport+0x758>
   110f6:	mov    rax,QWORD PTR [rsp+0x38]
   110fb:	mov    rsi,QWORD PTR [rsp+0x8]
   11100:	mov    edx,DWORD PTR [rax+rsi*4]
   11103:	lea    rbx,[rax+rsi*4]
   11107:	mov    QWORD PTR [rsp+0x10],rbx
   1110c:	cmp    edx,0x3
   1110f:	jle    111dc <path_transport+0x68c>
   11115:	mov    DWORD PTR [rsp+0x4],0x2
   1111d:	xor    ecx,ecx
   1111f:	xor    r14d,r14d
   11122:	xor    eax,eax
   11124:	mov    ebx,0x1
   11129:	jmp    10ce6 <path_transport+0x196>
   1112e:	xchg   ax,ax
   11130:	mov    ebx,DWORD PTR [rsp+0x8]
   11134:	cmp    DWORD PTR [rsp+0x44],ebx
   11138:	je     112d0 <path_transport+0x780>
   1113e:	mov    rbx,QWORD PTR [rsp+0x8]
   11143:	mov    rax,QWORD PTR [rsp+0x38]
   11148:	mov    DWORD PTR [rsp+0x4],0x3
   11150:	mov    edx,DWORD PTR [rax+rbx*4]
   11153:	lea    rsi,[rax+rbx*4]
   11157:	mov    ebx,0x3
   1115c:	mov    QWORD PTR [rsp+0x10],rsi
   11161:	cmp    edx,0x3
   11164:	jg     10cdf <path_transport+0x18f>
   1116a:	mov    r8,QWORD PTR [rbp+0x0]
   1116e:	mov    rdi,QWORD PTR [rsp+0x20]
   11173:	mov    ecx,ebx
   11175:	mov    esi,0x30
   1117a:	xor    r15d,r15d
   1117d:	call   19070 <start_gather_from_temp>
   11182:	mov    rdi,rax
   11185:	mov    QWORD PTR [rsp+0x30],rax
   1118a:	call   19170 <wait_gather>
   1118f:	xor    ecx,ecx
   11191:	xor    eax,eax
   11193:	jmp    10eab <path_transport+0x35b>
   11198:	nop    DWORD PTR [rax+rax*1+0x0]
   111a0:	mov    ebx,DWORD PTR [rsp+0x8]
   111a4:	cmp    DWORD PTR [rsp+0x44],ebx
   111a8:	je     11285 <path_transport+0x735>
   111ae:	mov    rax,QWORD PTR [rsp+0x38]
   111b3:	mov    rsi,QWORD PTR [rsp+0x8]
   111b8:	mov    edx,DWORD PTR [rax+rsi*4]
   111bb:	lea    rbx,[rax+rsi*4]
   111bf:	mov    QWORD PTR [rsp+0x10],rbx
   111c4:	cmp    edx,0x3
   111c7:	jg     1101d <path_transport+0x4cd>
   111cd:	mov    DWORD PTR [rsp+0x4],0x1
   111d5:	mov    ebx,0x2
   111da:	jmp    1116a <path_transport+0x61a>
   111dc:	mov    r8,QWORD PTR [rbp+0x0]
   111e0:	mov    rdi,QWORD PTR [rsp+0x20]
   111e5:	mov    ecx,0x1
   111ea:	mov    esi,0x30
   111ef:	call   19070 <start_gather_from_temp>
   111f4:	mov    rdi,rax
   111f7:	mov    QWORD PTR [rsp+0x30],rax
   111fc:	call   19170 <wait_gather>
   11201:	mov    DWORD PTR [rsp+0x4],0x2
   11209:	movsxd rax,DWORD PTR [rip+0x11474]        # 22684 <even_sites_on_node>
   11210:	mov    ebx,0x1
   11215:	mov    rcx,rax
   11218:	mov    r15,rax
   1121b:	shl    rcx,0xb
   1121f:	jmp    10eab <path_transport+0x35b>
   11224:	movsxd rdx,DWORD PTR [rip+0x11459]        # 22684 <even_sites_on_node>
   1122b:	mov    rcx,rdx
   1122e:	mov    rsi,rdx
   11231:	shl    rcx,0xb
   11235:	jmp    10f5c <path_transport+0x40c>
   1123a:	mov    r8,QWORD PTR [rbp+0x0]
   1123e:	mov    ebx,DWORD PTR [rsp+0x40]
   11242:	jmp    1116e <path_transport+0x61e>
   11247:	mov    r8,QWORD PTR [rbp+0x0]
   1124b:	mov    rdi,QWORD PTR [rsp+0x20]
   11250:	mov    ecx,0x2
   11255:	xor    r15d,r15d
   11258:	mov    esi,0x30
   1125d:	mov    ebx,0x2
   11262:	call   19070 <start_gather_from_temp>
   11267:	mov    rdi,rax
   1126a:	mov    QWORD PTR [rsp+0x30],rax
   1126f:	call   19170 <wait_gather>
   11274:	mov    DWORD PTR [rsp+0x4],0x1
   1127c:	xor    ecx,ecx
   1127e:	xor    eax,eax
   11280:	jmp    10eab <path_transport+0x35b>
   11285:	mov    ebx,0x2
   1128a:	movsxd rax,DWORD PTR [rip+0x113f3]        # 22684 <even_sites_on_node>
   11291:	mov    DWORD PTR [rsp+0x4],0x1
   11299:	mov    rcx,rax
   1129c:	mov    rsi,rax
   1129f:	shl    rcx,0xb
   112a3:	jmp    11061 <path_transport+0x511>
   112a8:	mov    DWORD PTR [rsp+0x4],0x2
   112b0:	xor    ecx,ecx
   112b2:	xor    esi,esi
   112b4:	xor    eax,eax
   112b6:	mov    ebx,0x1
   112bb:	jmp    11061 <path_transport+0x511>
   112c0:	cmp    DWORD PTR [rsp+0x4],0x1
   112c5:	mov    ebx,DWORD PTR [rsp+0x40]
   112c9:	je     1128a <path_transport+0x73a>
   112cb:	jmp    1105b <path_transport+0x50b>
   112d0:	mov    DWORD PTR [rsp+0x4],0x3
   112d8:	xor    ecx,ecx
   112da:	xor    esi,esi
   112dc:	xor    eax,eax
   112de:	mov    ebx,0x3
   112e3:	jmp    11061 <path_transport+0x511>
   112e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112f0 <path_transport_hwv>:
   112f0:	endbr64 
   112f4:	push   r15
   112f6:	push   r14
   112f8:	push   r13
   112fa:	push   r12
   112fc:	push   rbp
   112fd:	push   rbx
   112fe:	sub    rsp,0x58
   11302:	mov    DWORD PTR [rsp+0x4c],edi
   11306:	mov    DWORD PTR [rsp+0x48],esi
   1130a:	mov    DWORD PTR [rsp+0x40],edx
   1130e:	mov    QWORD PTR [rsp+0x38],rcx
   11313:	test   r8d,r8d
   11316:	jg     113e0 <path_transport_hwv+0xf0>
   1131c:	mov    ecx,DWORD PTR [rsp+0x48]
   11320:	cmp    DWORD PTR [rsp+0x4c],ecx
   11324:	je     113cd <path_transport_hwv+0xdd>
   1132a:	xor    eax,eax
   1132c:	xor    ecx,ecx
   1132e:	cmp    DWORD PTR [rsp+0x40],0x1
   11333:	jne    11343 <path_transport_hwv+0x53>
   11335:	movsxd rax,DWORD PTR [rip+0x11348]        # 22684 <even_sites_on_node>
   1133c:	mov    rcx,rax
   1133f:	shl    rax,0xb
   11343:	movsxd rdi,DWORD PTR [rsp+0x4c]
   11348:	movsxd rsi,DWORD PTR [rsp+0x48]
   1134d:	mov    r8d,DWORD PTR [rsp+0x40]
   11352:	add    rax,rdi
   11355:	add    rax,QWORD PTR [rip+0x1146c]        # 227c8 <lattice>
   1135c:	jmp    113b8 <path_transport_hwv+0xc8>
   1135e:	xchg   ax,ax
   11360:	movdqu xmm6,XMMWORD PTR [rax]
   11364:	mov    rdx,rax
   11367:	add    ecx,0x1
   1136a:	add    rax,0x800
   11370:	sub    rdx,rdi
   11373:	movups XMMWORD PTR [rdx+rsi*1],xmm6
   11377:	movdqu xmm7,XMMWORD PTR [rax-0x7f0]
   1137f:	movups XMMWORD PTR [rdx+rsi*1+0x10],xmm7
   11384:	movdqu xmm6,XMMWORD PTR [rax-0x7e0]
   1138c:	movups XMMWORD PTR [rdx+rsi*1+0x20],xmm6
   11391:	movdqu xmm7,XMMWORD PTR [rax-0x7d0]
   11399:	movups XMMWORD PTR [rdx+rsi*1+0x30],xmm7
   1139e:	movdqu xmm6,XMMWORD PTR [rax-0x7c0]
   113a6:	movups XMMWORD PTR [rdx+rsi*1+0x40],xmm6
   113ab:	movdqu xmm7,XMMWORD PTR [rax-0x7b0]
   113b3:	movups XMMWORD PTR [rdx+rsi*1+0x50],xmm7
   113b8:	mov    edx,DWORD PTR [rip+0x112c6]        # 22684 <even_sites_on_node>
   113be:	cmp    r8d,0x2
   113c2:	cmovne edx,DWORD PTR [rip+0x11137]        # 22500 <sites_on_node>
   113c9:	cmp    ecx,edx
   113cb:	jl     11360 <path_transport_hwv+0x70>
   113cd:	add    rsp,0x58
   113d1:	pop    rbx
   113d2:	pop    rbp
   113d3:	pop    r12
   113d5:	pop    r13
   113d7:	pop    r14
   113d9:	pop    r15
   113db:	ret    
   113dc:	nop    DWORD PTR [rax+0x0]
   113e0:	movsxd rdi,DWORD PTR [rip+0x11119]        # 22500 <sites_on_node>
   113e7:	mov    esi,0x60
   113ec:	mov    ebp,r8d
   113ef:	call   23d0 <calloc@plt>
   113f4:	movsxd rdi,DWORD PTR [rip+0x11105]        # 22500 <sites_on_node>
   113fb:	mov    esi,0x60
   11400:	mov    QWORD PTR [rsp+0x20],rax
   11405:	call   23d0 <calloc@plt>
   1140a:	movsxd rdi,DWORD PTR [rip+0x110ef]        # 22500 <sites_on_node>
   11411:	mov    esi,0x60
   11416:	mov    QWORD PTR [rsp+0x18],rax
   1141b:	call   23d0 <calloc@plt>
   11420:	mov    QWORD PTR [rsp+0x28],rax
   11425:	lea    eax,[rbp-0x1]
   11428:	lea    rbp,[rip+0x11431]        # 22860 <gen_pt>
   1142f:	mov    DWORD PTR [rsp+0x44],eax
   11433:	cdqe   
   11435:	mov    QWORD PTR [rsp+0x8],rax
   1143a:	mov    eax,DWORD PTR [rsp+0x40]
   1143e:	test   BYTE PTR [rsp+0x8],0x1
   11443:	jne    11610 <path_transport_hwv+0x320>
   11449:	nop    DWORD PTR [rax+0x0]
   11450:	cmp    eax,0x2
   11453:	je     119e0 <path_transport_hwv+0x6f0>
   11459:	cmp    eax,0x3
   1145c:	je     11970 <path_transport_hwv+0x680>
   11462:	cmp    eax,0x1
   11465:	je     11920 <path_transport_hwv+0x630>
   1146b:	mov    ecx,DWORD PTR [rsp+0x8]
   1146f:	cmp    DWORD PTR [rsp+0x44],ecx
   11473:	je     11b00 <path_transport_hwv+0x810>
   11479:	mov    rax,QWORD PTR [rsp+0x38]
   1147e:	mov    rcx,QWORD PTR [rsp+0x8]
   11483:	mov    edx,DWORD PTR [rax+rcx*4]
   11486:	lea    rbx,[rax+rcx*4]
   1148a:	mov    QWORD PTR [rsp+0x10],rbx
   1148f:	cmp    edx,0x3
   11492:	jle    11a7a <path_transport_hwv+0x78a>
   11498:	mov    ebx,DWORD PTR [rsp+0x40]
   1149c:	cmp    DWORD PTR [rsp+0x4],0x1
   114a1:	je     1182a <path_transport_hwv+0x53a>
   114a7:	xor    ecx,ecx
   114a9:	xor    r14d,r14d
   114ac:	xor    eax,eax
   114ae:	lea    r15,[rax+rax*2]
   114b2:	mov    rax,QWORD PTR [rsp+0x20]
   114b7:	add    rcx,QWORD PTR [rip+0x1130a]        # 227c8 <lattice>
   114be:	mov    DWORD PTR [rsp+0x30],ebx
   114c2:	shl    r15,0x5
   114c6:	mov    rbx,rcx
   114c9:	lea    r13,[rax+r15*1]
   114cd:	add    r15,QWORD PTR [rsp+0x28]
   114d2:	mov    r12,r13
   114d5:	mov    r13,QWORD PTR [rsp+0x10]
   114da:	jmp    11518 <path_transport_hwv+0x228>
   114dc:	nop    DWORD PTR [rax+0x0]
   114e0:	mov    eax,0x7
   114e5:	mov    rsi,r12
   114e8:	add    r14d,0x1
   114ec:	add    r12,0x60
   114f0:	sub    eax,edx
   114f2:	mov    rdx,r15
   114f5:	add    r15,0x60
   114f9:	cdqe   
   114fb:	lea    rax,[rax+rax*8]
   114ff:	shl    rax,0x4
   11503:	lea    rdi,[rbx+rax*1+0x70]
   11508:	add    rbx,0x800
   1150f:	call   15ec0 <mult_adj_su3_mat_hwvec>
   11514:	mov    edx,DWORD PTR [r13+0x0]
   11518:	mov    eax,DWORD PTR [rip+0x11166]        # 22684 <even_sites_on_node>
   1151e:	cmp    DWORD PTR [rsp+0x4],0x2
   11523:	cmovne eax,DWORD PTR [rip+0x10fd6]        # 22500 <sites_on_node>
   1152a:	cmp    r14d,eax
   1152d:	jl     114e0 <path_transport_hwv+0x1f0>
   1152f:	mov    ebx,DWORD PTR [rsp+0x30]
   11533:	mov    r8,QWORD PTR [rbp+0x0]
   11537:	mov    esi,0x60
   1153c:	mov    rdi,QWORD PTR [rsp+0x28]
   11541:	mov    ecx,ebx
   11543:	call   19070 <start_gather_from_temp>
   11548:	mov    rdi,rax
   1154b:	mov    r12,rax
   1154e:	call   19170 <wait_gather>
   11553:	cmp    ebx,0x1
   11556:	mov    esi,0x0
   1155b:	cmove  esi,DWORD PTR [rip+0x11122]        # 22684 <even_sites_on_node>
   11562:	movsxd rsi,esi
   11565:	lea    rdx,[rsi+rsi*2]
   11569:	shl    rdx,0x5
   1156d:	add    rdx,QWORD PTR [rsp+0x18]
   11572:	jmp    115bd <path_transport_hwv+0x2cd>
   11574:	nop    DWORD PTR [rax+0x0]
   11578:	mov    rax,QWORD PTR [rbp+0x0]
   1157c:	add    rdx,0x60
   11580:	mov    rax,QWORD PTR [rax+rsi*8]
   11584:	add    rsi,0x1
   11588:	movdqu xmm0,XMMWORD PTR [rax]
   1158c:	movups XMMWORD PTR [rdx-0x60],xmm0
   11590:	movdqu xmm1,XMMWORD PTR [rax+0x10]
   11595:	movups XMMWORD PTR [rdx-0x50],xmm1
   11599:	movdqu xmm2,XMMWORD PTR [rax+0x20]
   1159e:	movups XMMWORD PTR [rdx-0x40],xmm2
   115a2:	movdqu xmm3,XMMWORD PTR [rax+0x30]
   115a7:	movups XMMWORD PTR [rdx-0x30],xmm3
   115ab:	movdqu xmm4,XMMWORD PTR [rax+0x40]
   115b0:	movups XMMWORD PTR [rdx-0x20],xmm4
   115b4:	movdqu xmm5,XMMWORD PTR [rax+0x50]
   115b9:	movups XMMWORD PTR [rdx-0x10],xmm5
   115bd:	mov    eax,DWORD PTR [rip+0x110c1]        # 22684 <even_sites_on_node>
   115c3:	cmp    ebx,0x2
   115c6:	cmovne eax,DWORD PTR [rip+0x10f33]        # 22500 <sites_on_node>
   115cd:	cmp    eax,esi
   115cf:	jg     11578 <path_transport_hwv+0x288>
   115d1:	mov    rdi,r12
   115d4:	call   19180 <cleanup_gather>
   115d9:	sub    QWORD PTR [rsp+0x8],0x1
   115df:	mov    rax,QWORD PTR [rsp+0x8]
   115e4:	cmp    eax,0xffffffff
   115e7:	je     1172b <path_transport_hwv+0x43b>
   115ed:	mov    rax,QWORD PTR [rsp+0x20]
   115f2:	mov    rcx,QWORD PTR [rsp+0x18]
   115f7:	mov    QWORD PTR [rsp+0x18],rax
   115fc:	mov    eax,DWORD PTR [rsp+0x40]
   11600:	mov    QWORD PTR [rsp+0x20],rcx
   11605:	test   BYTE PTR [rsp+0x8],0x1
   1160a:	je     11450 <path_transport_hwv+0x160>
   11610:	cmp    eax,0x2
   11613:	je     11908 <path_transport_hwv+0x618>
   11619:	cmp    eax,0x3
   1161c:	je     11850 <path_transport_hwv+0x560>
   11622:	cmp    eax,0x1
   11625:	je     117f8 <path_transport_hwv+0x508>
   1162b:	mov    DWORD PTR [rsp+0x4],eax
   1162f:	mov    ecx,DWORD PTR [rsp+0x8]
   11633:	cmp    DWORD PTR [rsp+0x44],ecx
   11637:	je     1186b <path_transport_hwv+0x57b>
   1163d:	mov    rax,QWORD PTR [rsp+0x38]
   11642:	mov    rcx,QWORD PTR [rsp+0x8]
   11647:	mov    edx,DWORD PTR [rax+rcx*4]
   1164a:	lea    rdi,[rax+rcx*4]
   1164e:	mov    QWORD PTR [rsp+0x10],rdi
   11653:	cmp    edx,0x3
   11656:	jg     1149c <path_transport_hwv+0x1ac>
   1165c:	mov    rdi,QWORD PTR [rsp+0x20]
   11661:	mov    r8,QWORD PTR [rbp+0x0]
   11665:	mov    ecx,ebx
   11667:	mov    esi,0x60
   1166c:	call   19070 <start_gather_from_temp>
   11671:	mov    rdi,rax
   11674:	mov    QWORD PTR [rsp+0x30],rax
   11679:	call   19170 <wait_gather>
   1167e:	cmp    ebx,0x1
   11681:	je     11a49 <path_transport_hwv+0x759>
   11687:	xor    ecx,ecx
   11689:	xor    r15d,r15d
   1168c:	xor    eax,eax
   1168e:	lea    r13,[rax*8+0x0]
   11696:	lea    rdx,[rax+rax*2]
   1169a:	mov    rax,QWORD PTR [rsp+0x18]
   1169f:	add    rcx,QWORD PTR [rip+0x11122]        # 227c8 <lattice>
   116a6:	shl    rdx,0x5
   116aa:	mov    r14,rcx
   116ad:	lea    r12,[rax+rdx*1]
   116b1:	mov    rax,r13
   116b4:	mov    r13,r12
   116b7:	mov    r12,rax
   116ba:	jmp    116f8 <path_transport_hwv+0x408>
   116bc:	nop    DWORD PTR [rax+0x0]
   116c0:	mov    rax,QWORD PTR [rbp+0x0]
   116c4:	mov    rdx,r13
   116c7:	add    r15d,0x1
   116cb:	add    r13,0x60
   116cf:	mov    rsi,QWORD PTR [rax+r12*1]
   116d3:	mov    rax,QWORD PTR [rsp+0x10]
   116d8:	add    r12,0x8
   116dc:	movsxd rax,DWORD PTR [rax]
   116df:	lea    rax,[rax+rax*8]
   116e3:	shl    rax,0x4
   116e7:	lea    rdi,[r14+rax*1+0x70]
   116ec:	add    r14,0x800
   116f3:	call   15990 <mult_su3_mat_hwvec>
   116f8:	mov    eax,DWORD PTR [rip+0x10f86]        # 22684 <even_sites_on_node>
   116fe:	cmp    ebx,0x2
   11701:	cmovne eax,DWORD PTR [rip+0x10df8]        # 22500 <sites_on_node>
   11708:	cmp    r15d,eax
   1170b:	jl     116c0 <path_transport_hwv+0x3d0>
   1170d:	mov    rdi,QWORD PTR [rsp+0x30]
   11712:	call   19180 <cleanup_gather>
   11717:	sub    QWORD PTR [rsp+0x8],0x1
   1171d:	mov    rax,QWORD PTR [rsp+0x8]
   11722:	cmp    eax,0xffffffff
   11725:	jne    115ed <path_transport_hwv+0x2fd>
   1172b:	cmp    DWORD PTR [rsp+0x40],0x1
   11730:	je     11a64 <path_transport_hwv+0x774>
   11736:	xor    ecx,ecx
   11738:	xor    esi,esi
   1173a:	xor    edx,edx
   1173c:	movsxd rax,DWORD PTR [rsp+0x48]
   11741:	lea    rdx,[rdx+rdx*2]
   11745:	mov    edi,DWORD PTR [rsp+0x40]
   11749:	shl    rdx,0x5
   1174d:	add    rdx,QWORD PTR [rsp+0x18]
   11752:	add    rax,rcx
   11755:	add    rax,QWORD PTR [rip+0x1106c]        # 227c8 <lattice>
   1175c:	jmp    117b4 <path_transport_hwv+0x4c4>
   1175e:	xchg   ax,ax
   11760:	movdqu xmm6,XMMWORD PTR [rdx]
   11764:	add    esi,0x1
   11767:	add    rdx,0x60
   1176b:	add    rax,0x800
   11771:	movups XMMWORD PTR [rax-0x800],xmm6
   11778:	movdqu xmm7,XMMWORD PTR [rdx-0x50]
   1177d:	movups XMMWORD PTR [rax-0x7f0],xmm7
   11784:	movdqu xmm6,XMMWORD PTR [rdx-0x40]
   11789:	movups XMMWORD PTR [rax-0x7e0],xmm6
   11790:	movdqu xmm7,XMMWORD PTR [rdx-0x30]
   11795:	movups XMMWORD PTR [rax-0x7d0],xmm7
   1179c:	movdqu xmm6,XMMWORD PTR [rdx-0x20]
   117a1:	movups XMMWORD PTR [rax-0x7c0],xmm6
   117a8:	movdqu xmm7,XMMWORD PTR [rdx-0x10]
   117ad:	movups XMMWORD PTR [rax-0x7b0],xmm7
   117b4:	mov    ecx,DWORD PTR [rip+0x10eca]        # 22684 <even_sites_on_node>
   117ba:	cmp    edi,0x2
   117bd:	cmovne ecx,DWORD PTR [rip+0x10d3c]        # 22500 <sites_on_node>
   117c4:	cmp    esi,ecx
   117c6:	jl     11760 <path_transport_hwv+0x470>
   117c8:	mov    rdi,QWORD PTR [rsp+0x18]
   117cd:	call   22a0 <free@plt>
   117d2:	mov    rdi,QWORD PTR [rsp+0x20]
   117d7:	call   22a0 <free@plt>
   117dc:	mov    rdi,QWORD PTR [rsp+0x28]
   117e1:	add    rsp,0x58
   117e5:	pop    rbx
   117e6:	pop    rbp
   117e7:	pop    r12
   117e9:	pop    r13
   117eb:	pop    r14
   117ed:	pop    r15
   117ef:	jmp    22a0 <free@plt>
   117f4:	nop    DWORD PTR [rax+0x0]
   117f8:	mov    ebx,DWORD PTR [rsp+0x8]
   117fc:	cmp    DWORD PTR [rsp+0x44],ebx
   11800:	je     11ac5 <path_transport_hwv+0x7d5>
   11806:	mov    rax,QWORD PTR [rsp+0x38]
   1180b:	mov    rcx,QWORD PTR [rsp+0x8]
   11810:	mov    edx,DWORD PTR [rax+rcx*4]
   11813:	lea    rbx,[rax+rcx*4]
   11817:	mov    QWORD PTR [rsp+0x10],rbx
   1181c:	cmp    edx,0x3
   1181f:	jle    11a87 <path_transport_hwv+0x797>
   11825:	mov    ebx,0x2
   1182a:	movsxd rax,DWORD PTR [rip+0x10e53]        # 22684 <even_sites_on_node>
   11831:	mov    DWORD PTR [rsp+0x4],0x1
   11839:	mov    rcx,rax
   1183c:	mov    r14,rax
   1183f:	shl    rcx,0xb
   11843:	jmp    114ae <path_transport_hwv+0x1be>
   11848:	nop    DWORD PTR [rax+rax*1+0x0]
   11850:	mov    DWORD PTR [rsp+0x4],0x3
   11858:	mov    ecx,DWORD PTR [rsp+0x8]
   1185c:	mov    ebx,0x3
   11861:	cmp    DWORD PTR [rsp+0x44],ecx
   11865:	jne    1163d <path_transport_hwv+0x34d>
   1186b:	xor    ecx,ecx
   1186d:	xor    esi,esi
   1186f:	xor    eax,eax
   11871:	movsxd rdx,DWORD PTR [rsp+0x4c]
   11876:	lea    rax,[rax+rax*2]
   1187a:	mov    edi,DWORD PTR [rsp+0x4]
   1187e:	shl    rax,0x5
   11882:	add    rax,QWORD PTR [rsp+0x20]
   11887:	add    rdx,rcx
   1188a:	add    rdx,QWORD PTR [rip+0x10f37]        # 227c8 <lattice>
   11891:	jmp    118ea <path_transport_hwv+0x5fa>
   11893:	nop    DWORD PTR [rax+rax*1+0x0]
   11898:	movdqu xmm0,XMMWORD PTR [rdx]
   1189c:	add    esi,0x1
   1189f:	add    rax,0x60
   118a3:	add    rdx,0x800
   118aa:	movups XMMWORD PTR [rax-0x60],xmm0
   118ae:	movdqu xmm1,XMMWORD PTR [rdx-0x7f0]
   118b6:	movups XMMWORD PTR [rax-0x50],xmm1
   118ba:	movdqu xmm2,XMMWORD PTR [rdx-0x7e0]
   118c2:	movups XMMWORD PTR [rax-0x40],xmm2
   118c6:	movdqu xmm3,XMMWORD PTR [rdx-0x7d0]
   118ce:	movups XMMWORD PTR [rax-0x30],xmm3
   118d2:	movdqu xmm4,XMMWORD PTR [rdx-0x7c0]
   118da:	movups XMMWORD PTR [rax-0x20],xmm4
   118de:	movdqu xmm5,XMMWORD PTR [rdx-0x7b0]
   118e6:	movups XMMWORD PTR [rax-0x10],xmm5
   118ea:	mov    ecx,DWORD PTR [rip+0x10d94]        # 22684 <even_sites_on_node>
   118f0:	cmp    edi,0x2
   118f3:	cmovne ecx,DWORD PTR [rip+0x10c06]        # 22500 <sites_on_node>
   118fa:	cmp    esi,ecx
   118fc:	jl     11898 <path_transport_hwv+0x5a8>
   118fe:	jmp    1163d <path_transport_hwv+0x34d>
   11903:	nop    DWORD PTR [rax+rax*1+0x0]
   11908:	mov    DWORD PTR [rsp+0x4],0x2
   11910:	mov    ebx,0x1
   11915:	jmp    1162f <path_transport_hwv+0x33f>
   1191a:	nop    WORD PTR [rax+rax*1+0x0]
   11920:	mov    ecx,DWORD PTR [rsp+0x8]
   11924:	cmp    DWORD PTR [rsp+0x44],ecx
   11928:	je     11ae8 <path_transport_hwv+0x7f8>
   1192e:	mov    rax,QWORD PTR [rsp+0x38]
   11933:	mov    rcx,QWORD PTR [rsp+0x8]
   11938:	mov    edx,DWORD PTR [rax+rcx*4]
   1193b:	lea    rbx,[rax+rcx*4]
   1193f:	mov    QWORD PTR [rsp+0x10],rbx
   11944:	cmp    edx,0x3
   11947:	jle    11a1c <path_transport_hwv+0x72c>
   1194d:	mov    DWORD PTR [rsp+0x4],0x2
   11955:	xor    ecx,ecx
   11957:	xor    r14d,r14d
   1195a:	xor    eax,eax
   1195c:	mov    ebx,0x1
   11961:	jmp    114ae <path_transport_hwv+0x1be>
   11966:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11970:	mov    ecx,DWORD PTR [rsp+0x8]
   11974:	cmp    DWORD PTR [rsp+0x44],ecx
   11978:	je     11b10 <path_transport_hwv+0x820>
   1197e:	mov    rax,QWORD PTR [rsp+0x38]
   11983:	mov    rcx,QWORD PTR [rsp+0x8]
   11988:	mov    DWORD PTR [rsp+0x4],0x3
   11990:	mov    edx,DWORD PTR [rax+rcx*4]
   11993:	lea    rbx,[rax+rcx*4]
   11997:	mov    QWORD PTR [rsp+0x10],rbx
   1199c:	mov    ebx,0x3
   119a1:	cmp    edx,0x3
   119a4:	jg     114a7 <path_transport_hwv+0x1b7>
   119aa:	mov    r8,QWORD PTR [rbp+0x0]
   119ae:	mov    rdi,QWORD PTR [rsp+0x20]
   119b3:	mov    ecx,ebx
   119b5:	mov    esi,0x60
   119ba:	xor    r15d,r15d
   119bd:	call   19070 <start_gather_from_temp>
   119c2:	mov    rdi,rax
   119c5:	mov    QWORD PTR [rsp+0x30],rax
   119ca:	call   19170 <wait_gather>
   119cf:	xor    ecx,ecx
   119d1:	xor    eax,eax
   119d3:	jmp    1168e <path_transport_hwv+0x39e>
   119d8:	nop    DWORD PTR [rax+rax*1+0x0]
   119e0:	mov    ecx,DWORD PTR [rsp+0x8]
   119e4:	cmp    DWORD PTR [rsp+0x44],ecx
   119e8:	je     11ac5 <path_transport_hwv+0x7d5>
   119ee:	mov    rax,QWORD PTR [rsp+0x38]
   119f3:	mov    rcx,QWORD PTR [rsp+0x8]
   119f8:	mov    edx,DWORD PTR [rax+rcx*4]
   119fb:	lea    rbx,[rax+rcx*4]
   119ff:	mov    QWORD PTR [rsp+0x10],rbx
   11a04:	cmp    edx,0x3
   11a07:	jg     11825 <path_transport_hwv+0x535>
   11a0d:	mov    DWORD PTR [rsp+0x4],0x1
   11a15:	mov    ebx,0x2
   11a1a:	jmp    119aa <path_transport_hwv+0x6ba>
   11a1c:	mov    r8,QWORD PTR [rbp+0x0]
   11a20:	mov    rdi,QWORD PTR [rsp+0x20]
   11a25:	mov    ecx,0x1
   11a2a:	mov    esi,0x60
   11a2f:	call   19070 <start_gather_from_temp>
   11a34:	mov    rdi,rax
   11a37:	mov    QWORD PTR [rsp+0x30],rax
   11a3c:	call   19170 <wait_gather>
   11a41:	mov    DWORD PTR [rsp+0x4],0x2
   11a49:	movsxd rax,DWORD PTR [rip+0x10c34]        # 22684 <even_sites_on_node>
   11a50:	mov    ebx,0x1
   11a55:	mov    rcx,rax
   11a58:	mov    r15,rax
   11a5b:	shl    rcx,0xb
   11a5f:	jmp    1168e <path_transport_hwv+0x39e>
   11a64:	movsxd rdx,DWORD PTR [rip+0x10c19]        # 22684 <even_sites_on_node>
   11a6b:	mov    rcx,rdx
   11a6e:	mov    rsi,rdx
   11a71:	shl    rcx,0xb
   11a75:	jmp    1173c <path_transport_hwv+0x44c>
   11a7a:	mov    r8,QWORD PTR [rbp+0x0]
   11a7e:	mov    ebx,DWORD PTR [rsp+0x40]
   11a82:	jmp    119ae <path_transport_hwv+0x6be>
   11a87:	mov    r8,QWORD PTR [rbp+0x0]
   11a8b:	mov    rdi,QWORD PTR [rsp+0x20]
   11a90:	mov    ecx,0x2
   11a95:	xor    r15d,r15d
   11a98:	mov    esi,0x60
   11a9d:	mov    ebx,0x2
   11aa2:	call   19070 <start_gather_from_temp>
   11aa7:	mov    rdi,rax
   11aaa:	mov    QWORD PTR [rsp+0x30],rax
   11aaf:	call   19170 <wait_gather>
   11ab4:	mov    DWORD PTR [rsp+0x4],0x1
   11abc:	xor    ecx,ecx
   11abe:	xor    eax,eax
   11ac0:	jmp    1168e <path_transport_hwv+0x39e>
   11ac5:	mov    ebx,0x2
   11aca:	movsxd rax,DWORD PTR [rip+0x10bb3]        # 22684 <even_sites_on_node>
   11ad1:	mov    DWORD PTR [rsp+0x4],0x1
   11ad9:	mov    rcx,rax
   11adc:	mov    rsi,rax
   11adf:	shl    rcx,0xb
   11ae3:	jmp    11871 <path_transport_hwv+0x581>
   11ae8:	mov    DWORD PTR [rsp+0x4],0x2
   11af0:	xor    ecx,ecx
   11af2:	xor    esi,esi
   11af4:	xor    eax,eax
   11af6:	mov    ebx,0x1
   11afb:	jmp    11871 <path_transport_hwv+0x581>
   11b00:	cmp    DWORD PTR [rsp+0x4],0x1
   11b05:	mov    ebx,DWORD PTR [rsp+0x40]
   11b09:	je     11aca <path_transport_hwv+0x7da>
   11b0b:	jmp    1186b <path_transport_hwv+0x57b>
   11b10:	mov    DWORD PTR [rsp+0x4],0x3
   11b18:	xor    ecx,ecx
   11b1a:	xor    esi,esi
   11b1c:	xor    eax,eax
   11b1e:	mov    ebx,0x3
   11b23:	jmp    11871 <path_transport_hwv+0x581>
   11b28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b30 <load_longlinks>:
   11b30:	endbr64 
   11b34:	push   r15
   11b36:	push   r14
   11b38:	push   r13
   11b3a:	push   r12
   11b3c:	push   rbp
   11b3d:	push   rbx
   11b3e:	sub    rsp,0x58
   11b42:	mov    rax,QWORD PTR fs:0x28
   11b4b:	mov    QWORD PTR [rsp+0x48],rax
   11b50:	xor    eax,eax
   11b52:	cmp    DWORD PTR [rip+0x1088b],0x1        # 223e4 <phases_in>
   11b59:	je     11b70 <load_longlinks+0x40>
   11b5b:	mov    esi,DWORD PTR [rip+0x10d83]        # 228e4 <this_node>
   11b61:	test   esi,esi
   11b63:	je     11d4b <load_longlinks+0x21b>
   11b69:	xor    edi,edi
   11b6b:	call   19570 <terminate>
   11b70:	lea    rax,[rsp+0x30]
   11b75:	mov    DWORD PTR [rsp+0x2c],0x0
   11b7d:	mov    ebp,0x7
   11b82:	mov    QWORD PTR [rsp+0x18],rax
   11b87:	mov    QWORD PTR [rsp+0x10],rax
   11b8c:	mov    QWORD PTR [rsp+0x20],0x0
   11b95:	mov    edx,DWORD PTR [rip+0x10965]        # 22500 <sites_on_node>
   11b9b:	mov    r12,QWORD PTR [rsp+0x20]
   11ba0:	xor    ebx,ebx
   11ba2:	test   edx,edx
   11ba4:	jle    11bd1 <load_longlinks+0xa1>
   11ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11bb0:	mov    rdi,QWORD PTR [rip+0x10951]        # 22508 <t_longlink>
   11bb7:	add    ebx,0x1
   11bba:	add    rdi,r12
   11bbd:	add    r12,0x240
   11bc4:	call   13f80 <clear_su3mat>
   11bc9:	cmp    DWORD PTR [rip+0x10931],ebx        # 22500 <sites_on_node>
   11bcf:	jg     11bb0 <load_longlinks+0x80>
   11bd1:	mov    ecx,DWORD PTR [rip+0x198ad]        # 2b484 <num_q_paths>
   11bd7:	test   ecx,ecx
   11bd9:	jle    11d01 <load_longlinks+0x1d1>
   11bdf:	mov    rax,QWORD PTR [rsp+0x18]
   11be4:	lea    r15,[rip+0x11795]        # 23380 <q_paths>
   11beb:	xor    r13d,r13d
   11bee:	add    rax,0x10
   11bf2:	mov    QWORD PTR [rsp],rax
   11bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11c00:	mov    QWORD PTR [rsp+0x30],0x0
   11c09:	mov    esi,DWORD PTR [r15+0x1c]
   11c0d:	xor    edx,edx
   11c0f:	mov    QWORD PTR [rsp+0x38],0x0
   11c18:	test   esi,esi
   11c1a:	jg     11c2d <load_longlinks+0xfd>
   11c1c:	jmp    11c4a <load_longlinks+0x11a>
   11c1e:	xchg   ax,ax
   11c20:	add    rdx,0x1
   11c24:	add    DWORD PTR [rsp+rax*4+0x30],0x1
   11c29:	cmp    esi,edx
   11c2b:	jle    11c4a <load_longlinks+0x11a>
   11c2d:	movsxd rax,DWORD PTR [r15+rdx*4]
   11c31:	cmp    eax,0x3
   11c34:	jle    11c20 <load_longlinks+0xf0>
   11c36:	mov    ecx,ebp
   11c38:	add    rdx,0x1
   11c3c:	sub    ecx,eax
   11c3e:	movsxd rax,ecx
   11c41:	sub    DWORD PTR [rsp+rax*4+0x30],0x1
   11c46:	cmp    esi,edx
   11c48:	jg     11c2d <load_longlinks+0xfd>
   11c4a:	mov    rax,QWORD PTR [rsp+0x10]
   11c4f:	add    DWORD PTR [rax],0x3
   11c52:	mov    rax,QWORD PTR [rsp+0x18]
   11c57:	mov    r12d,DWORD PTR [rax]
   11c5a:	test   r12d,r12d
   11c5d:	jne    11cec <load_longlinks+0x1bc>
   11c63:	add    rax,0x4
   11c67:	cmp    rax,QWORD PTR [rsp]
   11c6b:	jne    11c57 <load_longlinks+0x127>
   11c6d:	mov    rdi,r15
   11c70:	call   d590 <path_product>
   11c75:	mov    rax,QWORD PTR [rip+0x10b4c]        # 227c8 <lattice>
   11c7c:	mov    rbx,QWORD PTR [rsp+0x20]
   11c81:	lea    r14,[rax+0x6e0]
   11c88:	mov    eax,DWORD PTR [rip+0x10872]        # 22500 <sites_on_node>
   11c8e:	test   eax,eax
   11c90:	jle    11cec <load_longlinks+0x1bc>
   11c92:	nop    WORD PTR [rax+rax*1+0x0]
   11c98:	lea    rsi,[r14+0x90]
   11c9f:	mov    rdi,r14
   11ca2:	add    r12d,0x1
   11ca6:	add    r14,0x800
   11cad:	mov    QWORD PTR [rsp+0x8],rsi
   11cb2:	call   14a00 <su3_adjoint>
   11cb7:	movsd  xmm0,QWORD PTR [r15+0x20]
   11cbd:	mov    rsi,QWORD PTR [rsp+0x8]
   11cc2:	mov    rdi,QWORD PTR [rip+0x1083f]        # 22508 <t_longlink>
   11cc9:	xorpd  xmm0,XMMWORD PTR [rip+0x89af]        # 1a680 <_IO_stdin_used+0x680>
   11cd1:	add    rdi,rbx
   11cd4:	add    rbx,0x240
   11cdb:	mov    rdx,rdi
   11cde:	call   147d0 <scalar_mult_add_su3_matrix>
   11ce3:	cmp    DWORD PTR [rip+0x10816],r12d        # 22500 <sites_on_node>
   11cea:	jg     11c98 <load_longlinks+0x168>
   11cec:	add    r13d,0x1
   11cf0:	add    r15,0x30
   11cf4:	cmp    DWORD PTR [rip+0x19789],r13d        # 2b484 <num_q_paths>
   11cfb:	jg     11c00 <load_longlinks+0xd0>
   11d01:	add    DWORD PTR [rsp+0x2c],0x1
   11d06:	mov    eax,DWORD PTR [rsp+0x2c]
   11d0a:	add    QWORD PTR [rsp+0x20],0x90
   11d13:	add    QWORD PTR [rsp+0x10],0x4
   11d19:	cmp    eax,0x4
   11d1c:	jne    11b95 <load_longlinks+0x65>
   11d22:	mov    DWORD PTR [rip+0x10a7c],0x1        # 227a8 <valid_longlinks>
   11d2c:	mov    rax,QWORD PTR [rsp+0x48]
   11d31:	xor    rax,QWORD PTR fs:0x28
   11d3a:	jne    11d5c <load_longlinks+0x22c>
   11d3c:	add    rsp,0x58
   11d40:	pop    rbx
   11d41:	pop    rbp
   11d42:	pop    r12
   11d44:	pop    r13
   11d46:	pop    r14
   11d48:	pop    r15
   11d4a:	ret    
   11d4b:	lea    rdi,[rip+0xa986]        # 1c6d8 <loop_ind.5567+0x178>
   11d52:	call   22f0 <puts@plt>
   11d57:	jmp    11b69 <load_longlinks+0x39>
   11d5c:	call   2350 <__stack_chk_fail@plt>
   11d61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   11d6c:	nop    DWORD PTR [rax+0x0]

0000000000011d70 <is_path_equal>:
   11d70:	endbr64 
   11d74:	test   edx,edx
   11d76:	jle    11da0 <is_path_equal+0x30>
   11d78:	lea    ecx,[rdx-0x1]
   11d7b:	xor    eax,eax
   11d7d:	jmp    11d8c <is_path_equal+0x1c>
   11d7f:	nop
   11d80:	lea    rdx,[rax+0x1]
   11d84:	cmp    rax,rcx
   11d87:	je     11da0 <is_path_equal+0x30>
   11d89:	mov    rax,rdx
   11d8c:	mov    edx,DWORD PTR [rsi+rax*4]
   11d8f:	cmp    DWORD PTR [rdi+rax*4],edx
   11d92:	je     11d80 <is_path_equal+0x10>
   11d94:	xor    eax,eax
   11d96:	ret    
   11d97:	nop    WORD PTR [rax+rax*1+0x0]
   11da0:	mov    eax,0x1
   11da5:	ret    
   11da6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011db0 <compute_gen_staple>:
   11db0:	endbr64 
   11db4:	push   r15
   11db6:	mov    r15d,edi
   11db9:	push   r14
   11dbb:	push   r13
   11dbd:	push   r12
   11dbf:	push   rbp
   11dc0:	mov    ebp,esi
   11dc2:	push   rbx
   11dc3:	mov    ebx,edx
   11dc5:	sub    rsp,0x178
   11dcc:	mov    r8,QWORD PTR [rip+0x10a8d]        # 22860 <gen_pt>
   11dd3:	mov    DWORD PTR [rsp+0x24],edi
   11dd7:	mov    edi,ecx
   11dd9:	mov    DWORD PTR [rsp+0x20],esi
   11ddd:	mov    esi,0x90
   11de2:	mov    DWORD PTR [rsp+0x38],edx
   11de6:	mov    DWORD PTR [rsp+0x3c],ecx
   11dea:	mov    ecx,0x3
   11def:	movsd  QWORD PTR [rsp+0x8],xmm0
   11df5:	mov    rax,QWORD PTR fs:0x28
   11dfe:	mov    QWORD PTR [rsp+0x168],rax
   11e06:	xor    eax,eax
   11e08:	call   18f40 <start_gather>
   11e0d:	mov    r8,QWORD PTR [rip+0x10a54]        # 22868 <gen_pt+0x8>
   11e14:	mov    edx,ebp
   11e16:	mov    esi,0x90
   11e1b:	mov    QWORD PTR [rsp+0x10],rax
   11e20:	mov    r14,rax
   11e23:	movsxd rax,ebx
   11e26:	lea    rax,[rax+rax*8]
   11e2a:	shl    rax,0x4
   11e2e:	mov    rcx,rax
   11e31:	mov    QWORD PTR [rsp+0x28],rax
   11e36:	add    rcx,0x70
   11e3a:	mov    rbx,rcx
   11e3d:	mov    QWORD PTR [rsp+0x18],rcx
   11e42:	mov    ecx,0x3
   11e47:	mov    edi,ebx
   11e49:	call   18f40 <start_gather>
   11e4e:	mov    rdi,r14
   11e51:	mov    rbx,rax
   11e54:	mov    QWORD PTR [rsp+0x30],rax
   11e59:	call   19170 <wait_gather>
   11e5e:	mov    rdi,rbx
   11e61:	call   19170 <wait_gather>
   11e66:	cmp    r15d,0xffffffff
   11e6a:	je     120b8 <compute_gen_staple+0x308>
   11e70:	mov    edi,DWORD PTR [rip+0x1068a]        # 22500 <sites_on_node>
   11e76:	mov    r13,QWORD PTR [rip+0x1094b]        # 227c8 <lattice>
   11e7d:	test   edi,edi
   11e7f:	jle    11ee6 <compute_gen_staple+0x136>
   11e81:	movsxd rax,DWORD PTR [rsp+0x24]
   11e86:	add    r13,QWORD PTR [rsp+0x18]
   11e8b:	xor    r12d,r12d
   11e8e:	lea    rbx,[rsp+0x40]
   11e93:	lea    r15,[rip+0x109c6]        # 22860 <gen_pt>
   11e9a:	lea    rbp,[rax-0x70]
   11e9e:	sub    rbp,QWORD PTR [rsp+0x28]
   11ea3:	nop    DWORD PTR [rax+rax*1+0x0]
   11ea8:	mov    rax,QWORD PTR [rip+0x109b9]        # 22868 <gen_pt+0x8>
   11eaf:	mov    rdx,rbx
   11eb2:	mov    rsi,QWORD PTR [rax+r12*8]
   11eb6:	mov    rax,QWORD PTR [r15]
   11eb9:	mov    rdi,QWORD PTR [rax+r12*8]
   11ebd:	add    r12,0x1
   11ec1:	call   14350 <mult_su3_na>
   11ec6:	lea    rdx,[rbp+r13*1+0x0]
   11ecb:	mov    rdi,r13
   11ece:	mov    rsi,rbx
   11ed1:	call   14440 <mult_su3_nn>
   11ed6:	add    r13,0x800
   11edd:	cmp    DWORD PTR [rip+0x1061c],r12d        # 22500 <sites_on_node>
   11ee4:	jg     11ea8 <compute_gen_staple+0xf8>
   11ee6:	mov    rdi,QWORD PTR [rsp+0x10]
   11eeb:	call   19180 <cleanup_gather>
   11ef0:	mov    rdi,QWORD PTR [rsp+0x30]
   11ef5:	call   19180 <cleanup_gather>
   11efa:	movsxd rdi,DWORD PTR [rip+0x105ff]        # 22500 <sites_on_node>
   11f01:	mov    esi,0x90
   11f06:	call   23d0 <calloc@plt>
   11f0b:	mov    r8,QWORD PTR [rip+0x1094e]        # 22860 <gen_pt>
   11f12:	mov    edx,DWORD PTR [rsp+0x20]
   11f16:	mov    esi,0x90
   11f1b:	mov    edi,DWORD PTR [rsp+0x18]
   11f1f:	mov    ecx,0x3
   11f24:	mov    QWORD PTR [rsp+0x10],rax
   11f29:	call   18f40 <start_gather>
   11f2e:	mov    rdi,rax
   11f31:	mov    QWORD PTR [rsp+0x30],rax
   11f36:	call   19170 <wait_gather>
   11f3b:	mov    esi,DWORD PTR [rip+0x105bf]        # 22500 <sites_on_node>
   11f41:	mov    rax,QWORD PTR [rip+0x10880]        # 227c8 <lattice>
   11f48:	test   esi,esi
   11f4a:	jle    11fb4 <compute_gen_staple+0x204>
   11f4c:	movsxd rcx,DWORD PTR [rsp+0x3c]
   11f51:	mov    r14,QWORD PTR [rsp+0x18]
   11f56:	xor    ebp,ebp
   11f58:	lea    rbx,[rsp+0x40]
   11f5d:	mov    r12,QWORD PTR [rsp+0x10]
   11f62:	lea    r15,[rip+0x108f7]        # 22860 <gen_pt>
   11f69:	lea    r13,[rcx-0x70]
   11f6d:	add    r14,rax
   11f70:	sub    r13,QWORD PTR [rsp+0x28]
   11f75:	nop    DWORD PTR [rax]
   11f78:	lea    rsi,[r13+r14*1+0x0]
   11f7d:	mov    rdi,r14
   11f80:	mov    rdx,rbx
   11f83:	add    r14,0x800
   11f8a:	call   140e0 <mult_su3_an>
   11f8f:	mov    rax,QWORD PTR [r15]
   11f92:	mov    rdx,r12
   11f95:	mov    rdi,rbx
   11f98:	add    r12,0x90
   11f9f:	mov    rsi,QWORD PTR [rax+rbp*8]
   11fa3:	add    rbp,0x1
   11fa7:	call   14440 <mult_su3_nn>
   11fac:	cmp    DWORD PTR [rip+0x1054e],ebp        # 22500 <sites_on_node>
   11fb2:	jg     11f78 <compute_gen_staple+0x1c8>
   11fb4:	mov    rdi,QWORD PTR [rsp+0x30]
   11fb9:	call   19180 <cleanup_gather>
   11fbe:	mov    rdi,QWORD PTR [rsp+0x10]
   11fc3:	mov    ecx,0x3
   11fc8:	mov    r8,QWORD PTR [rip+0x10891]        # 22860 <gen_pt>
   11fcf:	mov    esi,0x90
   11fd4:	mov    edx,0x7
   11fd9:	sub    edx,DWORD PTR [rsp+0x38]
   11fdd:	call   19070 <start_gather_from_temp>
   11fe2:	mov    rdi,rax
   11fe5:	mov    rbp,rax
   11fe8:	call   19170 <wait_gather>
   11fed:	cmp    DWORD PTR [rsp+0x24],0xffffffff
   11ff2:	je     12168 <compute_gen_staple+0x3b8>
   11ff8:	mov    eax,DWORD PTR [rip+0x10502]        # 22500 <sites_on_node>
   11ffe:	mov    rbx,QWORD PTR [rip+0x107c3]        # 227c8 <lattice>
   12005:	test   eax,eax
   12007:	jle    12078 <compute_gen_staple+0x2c8>
   12009:	movsxd rsi,DWORD PTR [rsp+0x20]
   1200e:	movsxd rdi,DWORD PTR [rsp+0x24]
   12013:	xor    r12d,r12d
   12016:	lea    r15,[rip+0x10843]        # 22860 <gen_pt>
   1201d:	lea    r13,[rsi+rsi*8]
   12021:	add    rbx,rdi
   12024:	shl    r13,0x4
   12028:	nop    DWORD PTR [rax+rax*1+0x0]
   12030:	mov    rax,QWORD PTR [r15]
   12033:	mov    rdx,rbx
   12036:	mov    rdi,rbx
   12039:	mov    rsi,QWORD PTR [rax+r12*8]
   1203d:	add    r12,0x1
   12041:	call   13ef0 <add_su3_matrix>
   12046:	mov    rdi,QWORD PTR [rip+0x1076b]        # 227b8 <t_fatlink>
   1204d:	movsd  xmm0,QWORD PTR [rsp+0x8]
   12053:	mov    rsi,rbx
   12056:	add    rbx,0x800
   1205d:	add    rdi,r13
   12060:	add    r13,0x240
   12067:	mov    rdx,rdi
   1206a:	call   147d0 <scalar_mult_add_su3_matrix>
   1206f:	cmp    DWORD PTR [rip+0x1048a],r12d        # 22500 <sites_on_node>
   12076:	jg     12030 <compute_gen_staple+0x280>
   12078:	mov    rdi,QWORD PTR [rsp+0x10]
   1207d:	call   22a0 <free@plt>
   12082:	mov    rdi,rbp
   12085:	call   19180 <cleanup_gather>
   1208a:	mov    rax,QWORD PTR [rsp+0x168]
   12092:	xor    rax,QWORD PTR fs:0x28
   1209b:	jne    121c7 <compute_gen_staple+0x417>
   120a1:	add    rsp,0x178
   120a8:	pop    rbx
   120a9:	pop    rbp
   120aa:	pop    r12
   120ac:	pop    r13
   120ae:	pop    r14
   120b0:	pop    r15
   120b2:	ret    
   120b3:	nop    DWORD PTR [rax+rax*1+0x0]
   120b8:	mov    ecx,DWORD PTR [rip+0x10442]        # 22500 <sites_on_node>
   120be:	mov    rbp,QWORD PTR [rip+0x10703]        # 227c8 <lattice>
   120c5:	test   ecx,ecx
   120c7:	jle    11ee6 <compute_gen_staple+0x136>
   120cd:	movsxd rax,DWORD PTR [rsp+0x20]
   120d2:	add    rbp,QWORD PTR [rsp+0x18]
   120d7:	xor    r14d,r14d
   120da:	lea    rbx,[rsp+0x40]
   120df:	lea    r15,[rip+0x1077a]        # 22860 <gen_pt>
   120e6:	lea    r13,[rsp+0xd0]
   120ee:	lea    r12,[rax+rax*8]
   120f2:	shl    r12,0x4
   120f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12100:	mov    rax,QWORD PTR [rip+0x10761]        # 22868 <gen_pt+0x8>
   12107:	mov    rdx,rbx
   1210a:	mov    rsi,QWORD PTR [rax+r14*8]
   1210e:	mov    rax,QWORD PTR [r15]
   12111:	mov    rdi,QWORD PTR [rax+r14*8]
   12115:	add    r14,0x1
   12119:	call   14350 <mult_su3_na>
   1211e:	mov    rdi,rbp
   12121:	mov    rdx,r13
   12124:	mov    rsi,rbx
   12127:	call   14440 <mult_su3_nn>
   1212c:	mov    rdi,QWORD PTR [rip+0x10685]        # 227b8 <t_fatlink>
   12133:	mov    rsi,r13
   12136:	movsd  xmm0,QWORD PTR [rsp+0x8]
   1213c:	add    rbp,0x800
   12143:	add    rdi,r12
   12146:	add    r12,0x240
   1214d:	mov    rdx,rdi
   12150:	call   147d0 <scalar_mult_add_su3_matrix>
   12155:	cmp    DWORD PTR [rip+0x103a4],r14d        # 22500 <sites_on_node>
   1215c:	jg     12100 <compute_gen_staple+0x350>
   1215e:	jmp    11ee6 <compute_gen_staple+0x136>
   12163:	nop    DWORD PTR [rax+rax*1+0x0]
   12168:	mov    edx,DWORD PTR [rip+0x10392]        # 22500 <sites_on_node>
   1216e:	test   edx,edx
   12170:	jle    12078 <compute_gen_staple+0x2c8>
   12176:	movsxd rsi,DWORD PTR [rsp+0x20]
   1217b:	xor    ebx,ebx
   1217d:	lea    r15,[rip+0x106dc]        # 22860 <gen_pt>
   12184:	lea    r12,[rsi+rsi*8]
   12188:	shl    r12,0x4
   1218c:	nop    DWORD PTR [rax+0x0]
   12190:	mov    rdi,QWORD PTR [rip+0x10621]        # 227b8 <t_fatlink>
   12197:	mov    rax,QWORD PTR [r15]
   1219a:	movsd  xmm0,QWORD PTR [rsp+0x8]
   121a0:	add    rdi,r12
   121a3:	mov    rsi,QWORD PTR [rax+rbx*8]
   121a7:	add    r12,0x240
   121ae:	add    rbx,0x1
   121b2:	mov    rdx,rdi
   121b5:	call   147d0 <scalar_mult_add_su3_matrix>
   121ba:	cmp    DWORD PTR [rip+0x10340],ebx        # 22500 <sites_on_node>
   121c0:	jg     12190 <compute_gen_staple+0x3e0>
   121c2:	jmp    12078 <compute_gen_staple+0x2c8>
   121c7:	call   2350 <__stack_chk_fail@plt>
   121cc:	nop    DWORD PTR [rax+0x0]

00000000000121d0 <load_fatlinks>:
   121d0:	endbr64 
   121d4:	push   r14
   121d6:	push   r13
   121d8:	push   r12
   121da:	push   rbp
   121db:	push   rbx
   121dc:	sub    rsp,0x10
   121e0:	cmp    DWORD PTR [rip+0x101fd],0x1        # 223e4 <phases_in>
   121e7:	je     121fe <load_fatlinks+0x2e>
   121e9:	mov    edx,DWORD PTR [rip+0x106f5]        # 228e4 <this_node>
   121ef:	test   edx,edx
   121f1:	je     1235d <load_fatlinks+0x18d>
   121f7:	xor    edi,edi
   121f9:	call   19570 <terminate>
   121fe:	movsd  xmm0,QWORD PTR [rip+0x828a]        # 1a490 <_IO_stdin_used+0x490>
   12206:	mulsd  xmm0,QWORD PTR [rip+0x1013a]        # 22348 <act_path_coeff+0x28>
   1220e:	mov    r13d,0x70
   12214:	xor    r12d,r12d
   12217:	movsd  xmm1,QWORD PTR [rip+0x10101]        # 22320 <act_path_coeff>
   1221f:	subsd  xmm1,xmm0
   12223:	movsd  QWORD PTR [rsp+0x8],xmm1
   12229:	mov    rbp,QWORD PTR [rip+0x10598]        # 227c8 <lattice>
   12230:	mov    eax,DWORD PTR [rip+0x102ca]        # 22500 <sites_on_node>
   12236:	lea    r14,[r13-0x70]
   1223a:	xor    ebx,ebx
   1223c:	add    rbp,r13
   1223f:	test   eax,eax
   12241:	jle    12279 <load_fatlinks+0xa9>
   12243:	nop    DWORD PTR [rax+rax*1+0x0]
   12248:	mov    rsi,QWORD PTR [rip+0x10569]        # 227b8 <t_fatlink>
   1224f:	movsd  xmm0,QWORD PTR [rsp+0x8]
   12255:	mov    rdi,rbp
   12258:	add    ebx,0x1
   1225b:	add    rbp,0x800
   12262:	add    rsi,r14
   12265:	add    r14,0x240
   1226c:	call   148f0 <scalar_mult_su3_matrix>
   12271:	cmp    DWORD PTR [rip+0x10289],ebx        # 22500 <sites_on_node>
   12277:	jg     12248 <load_fatlinks+0x78>
   12279:	xor    ebp,ebp
   1227b:	cmp    r12d,ebp
   1227e:	jne    122b0 <load_fatlinks+0xe0>
   12280:	add    ebp,0x1
   12283:	cmp    ebp,0x4
   12286:	jne    1227b <load_fatlinks+0xab>
   12288:	add    r12d,0x1
   1228c:	add    r13,0x90
   12293:	cmp    r12d,0x4
   12297:	jne    12229 <load_fatlinks+0x59>
   12299:	mov    DWORD PTR [rip+0x10595],0x1        # 22838 <valid_fatlinks>
   122a3:	add    rsp,0x10
   122a7:	pop    rbx
   122a8:	pop    rbp
   122a9:	pop    r12
   122ab:	pop    r13
   122ad:	pop    r14
   122af:	ret    
   122b0:	movsd  xmm0,QWORD PTR [rip+0x10078]        # 22330 <act_path_coeff+0x10>
   122b8:	mov    ecx,r13d
   122bb:	mov    edx,ebp
   122bd:	mov    esi,r12d
   122c0:	mov    edi,0x770
   122c5:	xor    ebx,ebx
   122c7:	call   11db0 <compute_gen_staple>
   122cc:	mov    ecx,0x770
   122d1:	mov    edx,ebp
   122d3:	mov    esi,r12d
   122d6:	movsd  xmm0,QWORD PTR [rip+0x1006a]        # 22348 <act_path_coeff+0x28>
   122de:	mov    edi,0xffffffff
   122e3:	call   11db0 <compute_gen_staple>
   122e8:	cmp    r12d,ebx
   122eb:	je     122f1 <load_fatlinks+0x121>
   122ed:	cmp    ebp,ebx
   122ef:	jne    12300 <load_fatlinks+0x130>
   122f1:	add    ebx,0x1
   122f4:	cmp    ebx,0x4
   122f7:	jne    122e8 <load_fatlinks+0x118>
   122f9:	jmp    12280 <load_fatlinks+0xb0>
   122fe:	xchg   ax,ax
   12300:	movsd  xmm0,QWORD PTR [rip+0x10030]        # 22338 <act_path_coeff+0x18>
   12308:	mov    edx,ebx
   1230a:	mov    esi,r12d
   1230d:	xor    r14d,r14d
   12310:	mov    ecx,0x770
   12315:	mov    edi,0x6e0
   1231a:	call   11db0 <compute_gen_staple>
   1231f:	cmp    r12d,r14d
   12322:	setne  dl
   12325:	cmp    ebp,r14d
   12328:	setne  al
   1232b:	test   dl,al
   1232d:	je     12351 <load_fatlinks+0x181>
   1232f:	cmp    ebx,r14d
   12332:	je     12351 <load_fatlinks+0x181>
   12334:	mov    ecx,0x6e0
   12339:	mov    edx,r14d
   1233c:	mov    esi,r12d
   1233f:	mov    edi,0xffffffff
   12344:	movsd  xmm0,QWORD PTR [rip+0xfff4]        # 22340 <act_path_coeff+0x20>
   1234c:	call   11db0 <compute_gen_staple>
   12351:	add    r14d,0x1
   12355:	cmp    r14d,0x4
   12359:	jne    1231f <load_fatlinks+0x14f>
   1235b:	jmp    122f1 <load_fatlinks+0x121>
   1235d:	lea    rdi,[rip+0xa39c]        # 1c700 <loop_ind.5567+0x1a0>
   12364:	call   22f0 <puts@plt>
   12369:	jmp    121f7 <load_fatlinks+0x27>
   1236e:	xchg   ax,ax

0000000000012370 <u_shift_fermion>:
   12370:	endbr64 
   12374:	push   r15
   12376:	push   r14
   12378:	movsxd r14,edx
   1237b:	push   r13
   1237d:	push   r12
   1237f:	push   rbp
   12380:	mov    rbp,rdi
   12383:	push   rbx
   12384:	sub    rsp,0x18
   12388:	mov    QWORD PTR [rsp+0x8],rsi
   1238d:	cmp    r14d,0x3
   12391:	jg     12430 <u_shift_fermion+0xc0>
   12397:	mov    r8,QWORD PTR [rip+0x104c2]        # 22860 <gen_pt>
   1239e:	mov    ecx,0x3
   123a3:	mov    edx,r14d
   123a6:	mov    esi,0x30
   123ab:	call   19070 <start_gather_from_temp>
   123b0:	mov    rdi,rax
   123b3:	mov    r13,rax
   123b6:	call   19170 <wait_gather>
   123bb:	mov    ecx,DWORD PTR [rip+0x1013f]        # 22500 <sites_on_node>
   123c1:	mov    rdx,QWORD PTR [rip+0x10400]        # 227c8 <lattice>
   123c8:	test   ecx,ecx
   123ca:	jle    12419 <u_shift_fermion+0xa9>
   123cc:	lea    rax,[r14+r14*8]
   123d0:	mov    rbx,QWORD PTR [rsp+0x8]
   123d5:	xor    ebp,ebp
   123d7:	lea    r14,[rip+0x10482]        # 22860 <gen_pt>
   123de:	shl    rax,0x4
   123e2:	lea    r12,[rdx+rax*1+0x70]
   123e7:	nop    WORD PTR [rax+rax*1+0x0]
   123f0:	mov    rax,QWORD PTR [r14]
   123f3:	mov    rdx,rbx
   123f6:	mov    rdi,r12
   123f9:	add    rbx,0x30
   123fd:	add    r12,0x800
   12404:	mov    rsi,QWORD PTR [rax+rbp*8]
   12408:	add    rbp,0x1
   1240c:	call   14530 <mult_su3_mat_vec>
   12411:	cmp    DWORD PTR [rip+0x100e9],ebp        # 22500 <sites_on_node>
   12417:	jg     123f0 <u_shift_fermion+0x80>
   12419:	add    rsp,0x18
   1241d:	mov    rdi,r13
   12420:	pop    rbx
   12421:	pop    rbp
   12422:	pop    r12
   12424:	pop    r13
   12426:	pop    r14
   12428:	pop    r15
   1242a:	jmp    19180 <cleanup_gather>
   1242f:	nop
   12430:	movsxd rdi,DWORD PTR [rip+0x100c9]        # 22500 <sites_on_node>
   12437:	mov    esi,0x30
   1243c:	call   23d0 <calloc@plt>
   12441:	mov    rdx,QWORD PTR [rip+0x10380]        # 227c8 <lattice>
   12448:	mov    r12,rax
   1244b:	mov    eax,DWORD PTR [rip+0x100af]        # 22500 <sites_on_node>
   12451:	test   eax,eax
   12453:	jle    124a2 <u_shift_fermion+0x132>
   12455:	mov    eax,0x7
   1245a:	mov    r15,r12
   1245d:	xor    r13d,r13d
   12460:	sub    eax,r14d
   12463:	cdqe   
   12465:	lea    rax,[rax+rax*8]
   12469:	shl    rax,0x4
   1246d:	lea    rbx,[rdx+rax*1+0x70]
   12472:	nop    WORD PTR [rax+rax*1+0x0]
   12478:	mov    rdx,r15
   1247b:	mov    rsi,rbp
   1247e:	mov    rdi,rbx
   12481:	add    r13d,0x1
   12485:	call   14010 <mult_adj_su3_mat_vec>
   1248a:	add    rbx,0x800
   12491:	add    rbp,0x30
   12495:	add    r15,0x30
   12499:	cmp    r13d,DWORD PTR [rip+0x10060]        # 22500 <sites_on_node>
   124a0:	jl     12478 <u_shift_fermion+0x108>
   124a2:	mov    ecx,0x3
   124a7:	mov    edx,r14d
   124aa:	mov    esi,0x30
   124af:	mov    rdi,r12
   124b2:	mov    r8,QWORD PTR [rip+0x103a7]        # 22860 <gen_pt>
   124b9:	call   19070 <start_gather_from_temp>
   124be:	mov    rdi,rax
   124c1:	mov    rbp,rax
   124c4:	call   19170 <wait_gather>
   124c9:	mov    eax,DWORD PTR [rip+0x10031]        # 22500 <sites_on_node>
   124cf:	test   eax,eax
   124d1:	jle    1251d <u_shift_fermion+0x1ad>
   124d3:	mov    rdx,QWORD PTR [rip+0x10386]        # 22860 <gen_pt>
   124da:	sub    eax,0x1
   124dd:	mov    rsi,QWORD PTR [rsp+0x8]
   124e2:	lea    rcx,[rdx+0x8]
   124e6:	lea    r8,[rcx+rax*8]
   124ea:	jmp    124f4 <u_shift_fermion+0x184>
   124ec:	nop    DWORD PTR [rax+0x0]
   124f0:	add    rcx,0x8
   124f4:	mov    rdx,QWORD PTR [rdx]
   124f7:	add    rsi,0x30
   124fb:	movdqu xmm0,XMMWORD PTR [rdx]
   124ff:	movups XMMWORD PTR [rsi-0x30],xmm0
   12503:	movdqu xmm1,XMMWORD PTR [rdx+0x10]
   12508:	movups XMMWORD PTR [rsi-0x20],xmm1
   1250c:	movdqu xmm2,XMMWORD PTR [rdx+0x20]
   12511:	mov    rdx,rcx
   12514:	movups XMMWORD PTR [rsi-0x10],xmm2
   12518:	cmp    rcx,r8
   1251b:	jne    124f0 <u_shift_fermion+0x180>
   1251d:	mov    rdi,rbp
   12520:	call   19180 <cleanup_gather>
   12525:	add    rsp,0x18
   12529:	mov    rdi,r12
   1252c:	pop    rbx
   1252d:	pop    rbp
   1252e:	pop    r12
   12530:	pop    r13
   12532:	pop    r14
   12534:	pop    r15
   12536:	jmp    22a0 <free@plt>
   1253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012540 <u_shift_hw_fermion>:
   12540:	endbr64 
   12544:	push   r15
   12546:	push   r14
   12548:	movsxd r14,edx
   1254b:	push   r13
   1254d:	push   r12
   1254f:	push   rbp
   12550:	mov    rbp,rdi
   12553:	push   rbx
   12554:	sub    rsp,0x18
   12558:	mov    QWORD PTR [rsp+0x8],rsi
   1255d:	cmp    r14d,0x3
   12561:	jg     12600 <u_shift_hw_fermion+0xc0>
   12567:	mov    r8,QWORD PTR [rip+0x102f2]        # 22860 <gen_pt>
   1256e:	mov    ecx,0x3
   12573:	mov    edx,r14d
   12576:	mov    esi,0x60
   1257b:	call   19070 <start_gather_from_temp>
   12580:	mov    rdi,rax
   12583:	mov    r13,rax
   12586:	call   19170 <wait_gather>
   1258b:	mov    ecx,DWORD PTR [rip+0xff6f]        # 22500 <sites_on_node>
   12591:	mov    rdx,QWORD PTR [rip+0x10230]        # 227c8 <lattice>
   12598:	test   ecx,ecx
   1259a:	jle    125e9 <u_shift_hw_fermion+0xa9>
   1259c:	lea    rax,[r14+r14*8]
   125a0:	mov    rbx,QWORD PTR [rsp+0x8]
   125a5:	xor    ebp,ebp
   125a7:	lea    r14,[rip+0x102b2]        # 22860 <gen_pt>
   125ae:	shl    rax,0x4
   125b2:	lea    r12,[rdx+rax*1+0x70]
   125b7:	nop    WORD PTR [rax+rax*1+0x0]
   125c0:	mov    rax,QWORD PTR [r14]
   125c3:	mov    rdx,rbx
   125c6:	mov    rdi,r12
   125c9:	add    rbx,0x60
   125cd:	add    r12,0x800
   125d4:	mov    rsi,QWORD PTR [rax+rbp*8]
   125d8:	add    rbp,0x1
   125dc:	call   15990 <mult_su3_mat_hwvec>
   125e1:	cmp    DWORD PTR [rip+0xff19],ebp        # 22500 <sites_on_node>
   125e7:	jg     125c0 <u_shift_hw_fermion+0x80>
   125e9:	add    rsp,0x18
   125ed:	mov    rdi,r13
   125f0:	pop    rbx
   125f1:	pop    rbp
   125f2:	pop    r12
   125f4:	pop    r13
   125f6:	pop    r14
   125f8:	pop    r15
   125fa:	jmp    19180 <cleanup_gather>
   125ff:	nop
   12600:	movsxd rdi,DWORD PTR [rip+0xfef9]        # 22500 <sites_on_node>
   12607:	mov    esi,0x60
   1260c:	call   23d0 <calloc@plt>
   12611:	mov    rdx,QWORD PTR [rip+0x101b0]        # 227c8 <lattice>
   12618:	mov    r12,rax
   1261b:	mov    eax,DWORD PTR [rip+0xfedf]        # 22500 <sites_on_node>
   12621:	test   eax,eax
   12623:	jle    12672 <u_shift_hw_fermion+0x132>
   12625:	mov    eax,0x7
   1262a:	mov    r15,r12
   1262d:	xor    r13d,r13d
   12630:	sub    eax,r14d
   12633:	cdqe   
   12635:	lea    rax,[rax+rax*8]
   12639:	shl    rax,0x4
   1263d:	lea    rbx,[rdx+rax*1+0x70]
   12642:	nop    WORD PTR [rax+rax*1+0x0]
   12648:	mov    rdx,r15
   1264b:	mov    rsi,rbp
   1264e:	mov    rdi,rbx
   12651:	add    r13d,0x1
   12655:	call   15ec0 <mult_adj_su3_mat_hwvec>
   1265a:	add    rbx,0x800
   12661:	add    rbp,0x60
   12665:	add    r15,0x60
   12669:	cmp    r13d,DWORD PTR [rip+0xfe90]        # 22500 <sites_on_node>
   12670:	jl     12648 <u_shift_hw_fermion+0x108>
   12672:	mov    ecx,0x3
   12677:	mov    edx,r14d
   1267a:	mov    esi,0x60
   1267f:	mov    rdi,r12
   12682:	mov    r8,QWORD PTR [rip+0x101d7]        # 22860 <gen_pt>
   12689:	call   19070 <start_gather_from_temp>
   1268e:	mov    rdi,rax
   12691:	mov    rbp,rax
   12694:	call   19170 <wait_gather>
   12699:	mov    eax,DWORD PTR [rip+0xfe61]        # 22500 <sites_on_node>
   1269f:	test   eax,eax
   126a1:	jle    12708 <u_shift_hw_fermion+0x1c8>
   126a3:	mov    rdx,QWORD PTR [rip+0x101b6]        # 22860 <gen_pt>
   126aa:	sub    eax,0x1
   126ad:	mov    rsi,QWORD PTR [rsp+0x8]
   126b2:	lea    rcx,[rdx+0x8]
   126b6:	lea    r8,[rcx+rax*8]
   126ba:	jmp    126c4 <u_shift_hw_fermion+0x184>
   126bc:	nop    DWORD PTR [rax+0x0]
   126c0:	add    rcx,0x8
   126c4:	mov    rdx,QWORD PTR [rdx]
   126c7:	add    rsi,0x60
   126cb:	movdqu xmm0,XMMWORD PTR [rdx]
   126cf:	movups XMMWORD PTR [rsi-0x60],xmm0
   126d3:	movdqu xmm1,XMMWORD PTR [rdx+0x10]
   126d8:	movups XMMWORD PTR [rsi-0x50],xmm1
   126dc:	movdqu xmm2,XMMWORD PTR [rdx+0x20]
   126e1:	movups XMMWORD PTR [rsi-0x40],xmm2
   126e5:	movdqu xmm3,XMMWORD PTR [rdx+0x30]
   126ea:	movups XMMWORD PTR [rsi-0x30],xmm3
   126ee:	movdqu xmm4,XMMWORD PTR [rdx+0x40]
   126f3:	movups XMMWORD PTR [rsi-0x20],xmm4
   126f7:	movdqu xmm5,XMMWORD PTR [rdx+0x50]
   126fc:	mov    rdx,rcx
   126ff:	movups XMMWORD PTR [rsi-0x10],xmm5
   12703:	cmp    rcx,r8
   12706:	jne    126c0 <u_shift_hw_fermion+0x180>
   12708:	mov    rdi,rbp
   1270b:	call   19180 <cleanup_gather>
   12710:	add    rsp,0x18
   12714:	mov    rdi,r12
   12717:	pop    rbx
   12718:	pop    rbp
   12719:	pop    r12
   1271b:	pop    r13
   1271d:	pop    r14
   1271f:	pop    r15
   12721:	jmp    22a0 <free@plt>
   12726:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012730 <add_force_to_mom>:
   12730:	endbr64 
   12734:	push   r15
   12736:	push   r14
   12738:	push   r13
   1273a:	push   r12
   1273c:	push   rbp
   1273d:	push   rbx
   1273e:	sub    rsp,0x158
   12745:	movsd  QWORD PTR [rsp+0x10],xmm0
   1274b:	mov    rax,QWORD PTR fs:0x28
   12754:	mov    QWORD PTR [rsp+0x148],rax
   1275c:	xor    eax,eax
   1275e:	cmp    edx,0x3
   12761:	jle    1277a <add_force_to_mom+0x4a>
   12763:	xorpd  xmm0,XMMWORD PTR [rip+0x7f15]        # 1a680 <_IO_stdin_used+0x680>
   1276b:	mov    eax,0x7
   12770:	sub    eax,edx
   12772:	mov    edx,eax
   12774:	movsd  QWORD PTR [rsp+0x10],xmm0
   1277a:	mov    eax,DWORD PTR [rip+0xfd80]        # 22500 <sites_on_node>
   12780:	mov    rbx,QWORD PTR [rip+0x10041]        # 227c8 <lattice>
   12787:	test   eax,eax
   12789:	jle    1283f <add_force_to_mom+0x10f>
   1278f:	movsxd rdx,edx
   12792:	mov    r13,rdi
   12795:	lea    r14,[rsp+0x20]
   1279a:	mov    r12,rsi
   1279d:	lea    r15,[rdx+rdx*4]
   127a1:	lea    rbp,[rsp+0xb0]
   127a9:	shl    r15,0x4
   127ad:	lea    rax,[r15+0x2b0]
   127b4:	xor    r15d,r15d
   127b7:	mov    QWORD PTR [rsp+0x18],rax
   127bc:	nop    DWORD PTR [rax+0x0]
   127c0:	cmp    BYTE PTR [rbx+0x8],0x1
   127c4:	movsd  xmm0,QWORD PTR [rsp+0x10]
   127ca:	jne    127d4 <add_force_to_mom+0xa4>
   127cc:	xorpd  xmm0,XMMWORD PTR [rip+0x7eac]        # 1a680 <_IO_stdin_used+0x680>
   127d4:	mov    rax,QWORD PTR [rsp+0x18]
   127d9:	mov    rsi,rbp
   127dc:	movsd  QWORD PTR [rsp+0x8],xmm0
   127e2:	add    r15d,0x1
   127e6:	lea    r8,[rbx+rax*1]
   127ea:	add    rbx,0x800
   127f1:	mov    rdi,r8
   127f4:	mov    QWORD PTR [rsp],r8
   127f8:	call   14d10 <uncompress_anti_hermitian>
   127fd:	mov    rsi,r12
   12800:	mov    rdi,r13
   12803:	mov    rdx,r14
   12806:	call   14b80 <su3_projector>
   1280b:	mov    rdx,rbp
   1280e:	mov    rsi,r14
   12811:	mov    rdi,rbp
   12814:	movsd  xmm0,QWORD PTR [rsp+0x8]
   1281a:	add    r13,0x30
   1281e:	add    r12,0x30
   12822:	call   147d0 <scalar_mult_add_su3_matrix>
   12827:	mov    r8,QWORD PTR [rsp]
   1282b:	mov    rdi,rbp
   1282e:	mov    rsi,r8
   12831:	call   14610 <make_anti_hermitian>
   12836:	cmp    DWORD PTR [rip+0xfcc3],r15d        # 22500 <sites_on_node>
   1283d:	jg     127c0 <add_force_to_mom+0x90>
   1283f:	mov    rax,QWORD PTR [rsp+0x148]
   12847:	xor    rax,QWORD PTR fs:0x28
   12850:	jne    12864 <add_force_to_mom+0x134>
   12852:	add    rsp,0x158
   12859:	pop    rbx
   1285a:	pop    rbp
   1285b:	pop    r12
   1285d:	pop    r13
   1285f:	pop    r14
   12861:	pop    r15
   12863:	ret    
   12864:	call   2350 <__stack_chk_fail@plt>
   12869:	nop    DWORD PTR [rax+0x0]

0000000000012870 <add_3f_force_to_mom>:
   12870:	endbr64 
   12874:	push   r15
   12876:	push   r14
   12878:	push   r13
   1287a:	push   r12
   1287c:	push   rbp
   1287d:	push   rbx
   1287e:	sub    rsp,0x168
   12885:	mov    rax,QWORD PTR fs:0x28
   1288e:	mov    QWORD PTR [rsp+0x158],rax
   12896:	xor    eax,eax
   12898:	cmp    edx,0x3
   1289b:	jle    128c8 <add_3f_force_to_mom+0x58>
   1289d:	movsd  xmm1,QWORD PTR [rcx]
   128a1:	movsd  xmm0,QWORD PTR [rcx+0x8]
   128a6:	mov    eax,0x7
   128ab:	movq   xmm2,QWORD PTR [rip+0x7dcd]        # 1a680 <_IO_stdin_used+0x680>
   128b3:	sub    eax,edx
   128b5:	mov    edx,eax
   128b7:	xorpd  xmm1,xmm2
   128bb:	xorpd  xmm0,xmm2
   128bf:	movsd  QWORD PTR [rcx],xmm1
   128c3:	movsd  QWORD PTR [rcx+0x8],xmm0
   128c8:	mov    eax,DWORD PTR [rip+0xfc32]        # 22500 <sites_on_node>
   128ce:	mov    r13,QWORD PTR [rip+0xfef3]        # 227c8 <lattice>
   128d5:	test   eax,eax
   128d7:	jle    129db <add_3f_force_to_mom+0x16b>
   128dd:	movsxd rdx,edx
   128e0:	mov    r12,rdi
   128e3:	lea    r14,[rsp+0x30]
   128e8:	mov    rbp,rsi
   128eb:	lea    r15,[rdx+rdx*4]
   128ef:	lea    rbx,[rsp+0xc0]
   128f7:	shl    r15,0x4
   128fb:	lea    rax,[r15+0x2b0]
   12902:	xor    r15d,r15d
   12905:	mov    QWORD PTR [rsp+0x28],rax
   1290a:	nop    WORD PTR [rax+rax*1+0x0]
   12910:	cmp    BYTE PTR [r13+0x8],0x1
   12915:	movsd  xmm0,QWORD PTR [rcx]
   12919:	movsd  xmm1,QWORD PTR [rcx+0x8]
   1291e:	jne    12930 <add_3f_force_to_mom+0xc0>
   12920:	xorpd  xmm0,XMMWORD PTR [rip+0x7d58]        # 1a680 <_IO_stdin_used+0x680>
   12928:	xorpd  xmm1,XMMWORD PTR [rip+0x7d50]        # 1a680 <_IO_stdin_used+0x680>
   12930:	mov    rax,QWORD PTR [rsp+0x28]
   12935:	mov    rsi,rbx
   12938:	add    r15d,0x1
   1293c:	mov    QWORD PTR [rsp+0x20],rcx
   12941:	movsd  QWORD PTR [rsp+0x10],xmm1
   12947:	lea    r8,[r13+rax*1+0x0]
   1294c:	movsd  QWORD PTR [rsp+0x18],xmm0
   12952:	add    r13,0x800
   12959:	mov    rdi,r8
   1295c:	mov    QWORD PTR [rsp+0x8],r8
   12961:	call   14d10 <uncompress_anti_hermitian>
   12966:	mov    rsi,rbp
   12969:	mov    rdi,r12
   1296c:	mov    rdx,r14
   1296f:	call   14b80 <su3_projector>
   12974:	mov    rdx,rbx
   12977:	mov    rsi,r14
   1297a:	mov    rdi,rbx
   1297d:	movsd  xmm0,QWORD PTR [rsp+0x18]
   12983:	call   147d0 <scalar_mult_add_su3_matrix>
   12988:	lea    rsi,[rbp+0x30]
   1298c:	lea    rdi,[r12+0x30]
   12991:	mov    rdx,r14
   12994:	call   14b80 <su3_projector>
   12999:	mov    rdx,rbx
   1299c:	mov    rsi,r14
   1299f:	mov    rdi,rbx
   129a2:	movsd  xmm1,QWORD PTR [rsp+0x10]
   129a8:	add    r12,0x60
   129ac:	add    rbp,0x60
   129b0:	movapd xmm0,xmm1
   129b4:	call   147d0 <scalar_mult_add_su3_matrix>
   129b9:	mov    r8,QWORD PTR [rsp+0x8]
   129be:	mov    rdi,rbx
   129c1:	mov    rsi,r8
   129c4:	call   14610 <make_anti_hermitian>
   129c9:	cmp    DWORD PTR [rip+0xfb30],r15d        # 22500 <sites_on_node>
   129d0:	mov    rcx,QWORD PTR [rsp+0x20]
   129d5:	jg     12910 <add_3f_force_to_mom+0xa0>
   129db:	mov    rax,QWORD PTR [rsp+0x158]
   129e3:	xor    rax,QWORD PTR fs:0x28
   129ec:	jne    12a00 <add_3f_force_to_mom+0x190>
   129ee:	add    rsp,0x168
   129f5:	pop    rbx
   129f6:	pop    rbp
   129f7:	pop    r12
   129f9:	pop    r13
   129fb:	pop    r14
   129fd:	pop    r15
   129ff:	ret    
   12a00:	call   2350 <__stack_chk_fail@plt>
   12a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000012a10 <side_link_force>:
   12a10:	endbr64 
   12a14:	mov    r10d,edi
   12a17:	mov    rdi,rdx
   12a1a:	cmp    r10d,0x3
   12a1e:	jg     12a38 <side_link_force+0x28>
   12a20:	cmp    esi,0x3
   12a23:	jg     12a70 <side_link_force+0x60>
   12a25:	mov    rsi,rdi
   12a28:	mov    edx,r10d
   12a2b:	mov    rdi,r9
   12a2e:	jmp    12730 <add_force_to_mom>
   12a33:	nop    DWORD PTR [rax+rax*1+0x0]
   12a38:	cmp    esi,0x3
   12a3b:	jg     12a58 <side_link_force+0x48>
   12a3d:	xorpd  xmm0,XMMWORD PTR [rip+0x7c3b]        # 1a680 <_IO_stdin_used+0x680>
   12a45:	mov    edx,r10d
   12a48:	mov    rsi,r8
   12a4b:	mov    rdi,rcx
   12a4e:	jmp    12730 <add_force_to_mom>
   12a53:	nop    DWORD PTR [rax+rax*1+0x0]
   12a58:	mov    edx,0x7
   12a5d:	mov    rsi,rcx
   12a60:	mov    rdi,r8
   12a63:	sub    edx,r10d
   12a66:	jmp    12730 <add_force_to_mom>
   12a6b:	nop    DWORD PTR [rax+rax*1+0x0]
   12a70:	mov    edx,0x7
   12a75:	xorpd  xmm0,XMMWORD PTR [rip+0x7c03]        # 1a680 <_IO_stdin_used+0x680>
   12a7d:	mov    rsi,r9
   12a80:	sub    edx,r10d
   12a83:	jmp    12730 <add_force_to_mom>
   12a88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012a90 <eo_fermion_force>:
   12a90:	endbr64 
   12a94:	push   r15
   12a96:	movapd xmm1,xmm0
   12a9a:	pxor   xmm0,xmm0
   12a9e:	push   r14
   12aa0:	cvtsi2sd xmm0,edi
   12aa4:	push   r13
   12aa6:	push   r12
   12aa8:	push   rbp
   12aa9:	movsxd rbp,esi
   12aac:	push   rbx
   12aad:	sub    rsp,0x128
   12ab4:	movsd  xmm7,QWORD PTR [rip+0xf864]        # 22320 <act_path_coeff>
   12abc:	mulsd  xmm0,QWORD PTR [rip+0x79bc]        # 1a480 <_IO_stdin_used+0x480>
   12ac4:	lea    r12,[rsp+0x110]
   12acc:	lea    rbx,[rsp+0xd0]
   12ad4:	mov    rax,QWORD PTR fs:0x28
   12add:	mov    QWORD PTR [rsp+0x118],rax
   12ae5:	xor    eax,eax
   12ae7:	mov    QWORD PTR [rsp+0xa8],r12
   12aef:	mov    QWORD PTR [rsp+0xb0],0x0
   12afb:	mov    QWORD PTR [rsp+0xb8],0x0
   12b07:	mov    QWORD PTR [rsp+0xc0],0x0
   12b13:	mov    QWORD PTR [rsp+0xc8],0x0
   12b1f:	addsd  xmm0,xmm0
   12b23:	mulsd  xmm0,xmm1
   12b27:	movsd  xmm1,QWORD PTR [rip+0xf7f9]        # 22328 <act_path_coeff+0x8>
   12b2f:	mulsd  xmm7,xmm0
   12b33:	mulsd  xmm1,xmm0
   12b37:	movsd  QWORD PTR [rsp+0xa0],xmm7
   12b40:	movsd  xmm7,QWORD PTR [rip+0xf7e8]        # 22330 <act_path_coeff+0x10>
   12b48:	movsd  QWORD PTR [rsp+0x98],xmm1
   12b51:	movsd  xmm1,QWORD PTR [rip+0xf7df]        # 22338 <act_path_coeff+0x18>
   12b59:	mulsd  xmm7,xmm0
   12b5d:	mulsd  xmm1,xmm0
   12b61:	movsd  QWORD PTR [rsp+0x68],xmm7
   12b67:	movsd  xmm7,QWORD PTR [rip+0xf7d1]        # 22340 <act_path_coeff+0x20>
   12b6f:	movsd  QWORD PTR [rsp+0x48],xmm1
   12b75:	mulsd  xmm7,xmm0
   12b79:	mulsd  xmm0,QWORD PTR [rip+0xf7c7]        # 22348 <act_path_coeff+0x28>
   12b81:	movsd  QWORD PTR [rsp+0x70],xmm7
   12b87:	movsd  QWORD PTR [rsp+0x80],xmm0
   12b90:	movsxd rdi,DWORD PTR [rip+0xf969]        # 22500 <sites_on_node>
   12b97:	mov    esi,0x30
   12b9c:	add    rbx,0x8
   12ba0:	call   23d0 <calloc@plt>
   12ba5:	mov    QWORD PTR [rbx-0x8],rax
   12ba9:	cmp    rbx,r12
   12bac:	jne    12b90 <eo_fermion_force+0x100>
   12bae:	movsxd rdi,DWORD PTR [rip+0xf94b]        # 22500 <sites_on_node>
   12bb5:	mov    esi,0x30
   12bba:	call   23d0 <calloc@plt>
   12bbf:	mov    ecx,DWORD PTR [rip+0xf93b]        # 22500 <sites_on_node>
   12bc5:	mov    rdx,QWORD PTR [rip+0xfbfc]        # 227c8 <lattice>
   12bcc:	mov    QWORD PTR [rsp+0x78],rax
   12bd1:	test   ecx,ecx
   12bd3:	jle    12c20 <eo_fermion_force+0x190>
   12bd5:	sub    ecx,0x1
   12bd8:	mov    rdi,QWORD PTR [rsp+0x78]
   12bdd:	add    rdx,rbp
   12be0:	lea    rcx,[rcx+rcx*2+0x3]
   12be5:	shl    rcx,0x4
   12be9:	mov    rax,rdi
   12bec:	add    rcx,rdi
   12bef:	nop
   12bf0:	movdqu xmm6,XMMWORD PTR [rdx]
   12bf4:	add    rax,0x30
   12bf8:	add    rdx,0x800
   12bff:	movups XMMWORD PTR [rax-0x30],xmm6
   12c03:	movdqu xmm7,XMMWORD PTR [rdx-0x7f0]
   12c0b:	movups XMMWORD PTR [rax-0x20],xmm7
   12c0f:	movdqu xmm1,XMMWORD PTR [rdx-0x7e0]
   12c17:	movups XMMWORD PTR [rax-0x10],xmm1
   12c1b:	cmp    rax,rcx
   12c1e:	jne    12bf0 <eo_fermion_force+0x160>
   12c20:	mov    rax,QWORD PTR [rsp+0xd0]
   12c28:	mov    DWORD PTR [rsp+0x14],0x7
   12c30:	xor    r14d,r14d
   12c33:	mov    r15d,r14d
   12c36:	mov    QWORD PTR [rsp+0x30],rax
   12c3b:	nop    DWORD PTR [rax+rax*1+0x0]
   12c40:	mov    ebx,0x7
   12c45:	xor    r13d,r13d
   12c48:	jmp    12c5f <eo_fermion_force+0x1cf>
   12c4a:	nop    WORD PTR [rax+rax*1+0x0]
   12c50:	test   ebx,ebx
   12c52:	je     13120 <eo_fermion_force+0x690>
   12c58:	add    r13,0x1
   12c5c:	sub    ebx,0x1
   12c5f:	mov    DWORD PTR [rsp+0x88],r13d
   12c67:	mov    DWORD PTR [rsp+0x10],r13d
   12c6c:	cmp    r15d,r13d
   12c6f:	je     12c50 <eo_fermion_force+0x1c0>
   12c71:	cmp    DWORD PTR [rsp+0x14],r13d
   12c76:	je     12c50 <eo_fermion_force+0x1c0>
   12c78:	mov    rbp,QWORD PTR [rsp+0x30]
   12c7d:	mov    eax,0x7
   12c82:	mov    rdi,QWORD PTR [rsp+0x78]
   12c87:	sub    eax,r13d
   12c8a:	mov    edx,eax
   12c8c:	mov    rsi,rbp
   12c8f:	mov    DWORD PTR [rsp+0x8c],eax
   12c96:	call   12370 <u_shift_fermion>
   12c9b:	mov    r14,QWORD PTR [rsp+0x108]
   12ca3:	mov    edx,r15d
   12ca6:	mov    rdi,rbp
   12ca9:	mov    rsi,r14
   12cac:	mov    QWORD PTR [rsp+0x60],r14
   12cb1:	call   12370 <u_shift_fermion>
   12cb6:	movq   xmm6,QWORD PTR [rip+0x79c2]        # 1a680 <_IO_stdin_used+0x680>
   12cbe:	movaps XMMWORD PTR [rsp+0x50],xmm6
   12cc3:	cmp    r15d,0x3
   12cc7:	jg     12ce1 <eo_fermion_force+0x251>
   12cc9:	movsd  xmm0,QWORD PTR [rsp+0x68]
   12ccf:	mov    edx,r15d
   12cd2:	mov    rsi,rbp
   12cd5:	mov    rdi,r14
   12cd8:	xorpd  xmm0,xmm6
   12cdc:	call   12730 <add_force_to_mom>
   12ce1:	mov    rax,QWORD PTR [rsp+0xd8]
   12ce9:	mov    QWORD PTR [rsp+0x90],r13
   12cf1:	xor    ebp,ebp
   12cf3:	mov    DWORD PTR [rsp+0x8],ebx
   12cf7:	mov    QWORD PTR [rsp+0x28],rax
   12cfc:	mov    rax,QWORD PTR [rsp+0x100]
   12d04:	mov    QWORD PTR [rsp+0x38],rax
   12d09:	mov    rax,QWORD PTR [rsp+0xe8]
   12d11:	mov    QWORD PTR [rsp+0x40],rax
   12d16:	jmp    12d2c <eo_fermion_force+0x29c>
   12d18:	nop    DWORD PTR [rax+rax*1+0x0]
   12d20:	add    ebp,0x1
   12d23:	cmp    ebp,0x8
   12d26:	je     12e88 <eo_fermion_force+0x3f8>
   12d2c:	cmp    ebp,DWORD PTR [rsp+0x10]
   12d30:	setne  al
   12d33:	cmp    DWORD PTR [rsp+0x8],ebp
   12d37:	setne  dl
   12d3a:	and    eax,edx
   12d3c:	cmp    ebp,r15d
   12d3f:	setne  dl
   12d42:	test   al,dl
   12d44:	je     12d20 <eo_fermion_force+0x290>
   12d46:	cmp    DWORD PTR [rsp+0x14],ebp
   12d4a:	je     12d20 <eo_fermion_force+0x290>
   12d4c:	mov    rbx,QWORD PTR [rsp+0x28]
   12d51:	mov    eax,0x7
   12d56:	mov    rdi,QWORD PTR [rsp+0x30]
   12d5b:	sub    eax,ebp
   12d5d:	mov    edx,eax
   12d5f:	mov    rsi,rbx
   12d62:	mov    DWORD PTR [rsp+0x18],eax
   12d66:	call   12370 <u_shift_fermion>
   12d6b:	mov    r14,QWORD PTR [rsp+0x38]
   12d70:	mov    edx,r15d
   12d73:	mov    rdi,rbx
   12d76:	mov    rsi,r14
   12d79:	call   12370 <u_shift_fermion>
   12d7e:	cmp    r15d,0x3
   12d82:	jg     12d98 <eo_fermion_force+0x308>
   12d84:	movsd  xmm0,QWORD PTR [rsp+0x48]
   12d8a:	mov    edx,r15d
   12d8d:	mov    rsi,rbx
   12d90:	mov    rdi,r14
   12d93:	call   12730 <add_force_to_mom>
   12d98:	xor    r12d,r12d
   12d9b:	nop    DWORD PTR [rax+rax*1+0x0]
   12da0:	cmp    DWORD PTR [rsp+0x8],r12d
   12da5:	setne  dl
   12da8:	cmp    r12d,DWORD PTR [rsp+0x10]
   12dad:	setne  cl
   12db0:	and    edx,ecx
   12db2:	cmp    ebp,r12d
   12db5:	setne  cl
   12db8:	and    edx,ecx
   12dba:	cmp    DWORD PTR [rsp+0x18],r12d
   12dbf:	setne  cl
   12dc2:	and    edx,ecx
   12dc4:	cmp    r12d,r15d
   12dc7:	setne  cl
   12dca:	test   dl,cl
   12dcc:	je     12dd9 <eo_fermion_force+0x349>
   12dce:	cmp    DWORD PTR [rsp+0x14],r12d
   12dd3:	jne    13030 <eo_fermion_force+0x5a0>
   12dd9:	add    r12d,0x1
   12ddd:	cmp    r12d,0x8
   12de1:	jne    12da0 <eo_fermion_force+0x310>
   12de3:	mov    r12,QWORD PTR [rsp+0x40]
   12de8:	mov    rbx,QWORD PTR [rsp+0x38]
   12ded:	mov    edx,ebp
   12def:	mov    rsi,r12
   12df2:	mov    rdi,rbx
   12df5:	call   12370 <u_shift_fermion>
   12dfa:	movsd  xmm0,QWORD PTR [rsp+0x48]
   12e00:	mov    edi,ebp
   12e02:	mov    r9,r12
   12e05:	mov    r8,QWORD PTR [rsp+0x28]
   12e0a:	mov    rdx,QWORD PTR [rsp+0x30]
   12e0f:	mov    rcx,rbx
   12e12:	mov    esi,r15d
   12e15:	xorpd  xmm0,XMMWORD PTR [rsp+0x50]
   12e1b:	call   12a10 <side_link_force>
   12e20:	mov    edi,DWORD PTR [rip+0xf6da]        # 22500 <sites_on_node>
   12e26:	movsd  xmm0,QWORD PTR [rsp+0x48]
   12e2c:	divsd  xmm0,QWORD PTR [rsp+0x68]
   12e32:	movsd  QWORD PTR [rsp+0x18],xmm0
   12e38:	test   edi,edi
   12e3a:	jle    12d20 <eo_fermion_force+0x290>
   12e40:	mov    r13,QWORD PTR [rsp+0x60]
   12e45:	xor    r14d,r14d
   12e48:	nop    DWORD PTR [rax+rax*1+0x0]
   12e50:	movsd  xmm0,QWORD PTR [rsp+0x18]
   12e56:	mov    rdx,r13
   12e59:	mov    rsi,r12
   12e5c:	mov    rdi,r13
   12e5f:	add    r14d,0x1
   12e63:	add    r13,0x30
   12e67:	add    r12,0x30
   12e6b:	call   14820 <scalar_mult_add_su3_vector>
   12e70:	cmp    DWORD PTR [rip+0xf689],r14d        # 22500 <sites_on_node>
   12e77:	jg     12e50 <eo_fermion_force+0x3c0>
   12e79:	add    ebp,0x1
   12e7c:	cmp    ebp,0x8
   12e7f:	jne    12d2c <eo_fermion_force+0x29c>
   12e85:	nop    DWORD PTR [rax]
   12e88:	mov    r14,QWORD PTR [rsp+0x28]
   12e8d:	mov    edx,DWORD PTR [rsp+0x8c]
   12e94:	mov    rdi,QWORD PTR [rsp+0x30]
   12e99:	mov    r13,QWORD PTR [rsp+0x90]
   12ea1:	mov    rsi,r14
   12ea4:	mov    ebx,DWORD PTR [rsp+0x8]
   12ea8:	call   12370 <u_shift_fermion>
   12ead:	mov    rbp,QWORD PTR [rsp+0x38]
   12eb2:	mov    edx,r15d
   12eb5:	mov    rdi,r14
   12eb8:	mov    rsi,rbp
   12ebb:	call   12370 <u_shift_fermion>
   12ec0:	cmp    r15d,0x3
   12ec4:	jg     12edd <eo_fermion_force+0x44d>
   12ec6:	movsd  xmm0,QWORD PTR [rsp+0x80]
   12ecf:	mov    edx,r15d
   12ed2:	mov    rsi,r14
   12ed5:	mov    rdi,rbp
   12ed8:	call   12730 <add_force_to_mom>
   12edd:	mov    r14,QWORD PTR [rsp+0x40]
   12ee2:	mov    r12d,DWORD PTR [rsp+0x88]
   12eea:	mov    rbp,QWORD PTR [rsp+0x38]
   12eef:	mov    edx,r12d
   12ef2:	mov    rsi,r14
   12ef5:	mov    rdi,rbp
   12ef8:	call   12370 <u_shift_fermion>
   12efd:	mov    r8,QWORD PTR [rsp+0x28]
   12f02:	mov    r9,r14
   12f05:	mov    rcx,rbp
   12f08:	mov    rdx,QWORD PTR [rsp+0x30]
   12f0d:	mov    esi,r15d
   12f10:	mov    edi,r12d
   12f13:	mov    rbp,r14
   12f16:	movsd  xmm0,QWORD PTR [rsp+0x80]
   12f1f:	xorpd  xmm0,XMMWORD PTR [rsp+0x50]
   12f25:	call   12a10 <side_link_force>
   12f2a:	mov    esi,DWORD PTR [rip+0xf5d0]        # 22500 <sites_on_node>
   12f30:	xor    eax,eax
   12f32:	movsd  xmm0,QWORD PTR [rsp+0x80]
   12f3b:	mov    r12,QWORD PTR [rsp+0x60]
   12f40:	divsd  xmm0,QWORD PTR [rsp+0x68]
   12f46:	mov    r14d,eax
   12f49:	movsd  QWORD PTR [rsp+0x8],xmm0
   12f4f:	test   esi,esi
   12f51:	jle    12f81 <eo_fermion_force+0x4f1>
   12f53:	nop    DWORD PTR [rax+rax*1+0x0]
   12f58:	movsd  xmm0,QWORD PTR [rsp+0x8]
   12f5e:	mov    rdx,r12
   12f61:	mov    rsi,rbp
   12f64:	mov    rdi,r12
   12f67:	add    r14d,0x1
   12f6b:	add    r12,0x30
   12f6f:	add    rbp,0x30
   12f73:	call   14820 <scalar_mult_add_su3_vector>
   12f78:	cmp    DWORD PTR [rip+0xf581],r14d        # 22500 <sites_on_node>
   12f7f:	jg     12f58 <eo_fermion_force+0x4c8>
   12f81:	cmp    DWORD PTR [rsp+0x10],0x3
   12f86:	jg     13198 <eo_fermion_force+0x708>
   12f8c:	mov    r12d,DWORD PTR [rsp+0x88]
   12f94:	mov    rbp,QWORD PTR [rsp+0x40]
   12f99:	mov    r14,QWORD PTR [rsp+0x60]
   12f9e:	mov    edx,r12d
   12fa1:	mov    rsi,rbp
   12fa4:	mov    rdi,r14
   12fa7:	call   12370 <u_shift_fermion>
   12fac:	mov    rdx,QWORD PTR [rsp+0x78]
   12fb1:	mov    r9,rbp
   12fb4:	mov    rcx,r14
   12fb7:	mov    r8,QWORD PTR [rsp+0x30]
   12fbc:	movsd  xmm0,QWORD PTR [rsp+0x68]
   12fc2:	mov    esi,r15d
   12fc5:	mov    edi,r12d
   12fc8:	call   12a10 <side_link_force>
   12fcd:	mov    edx,DWORD PTR [rsp+r13*4+0xb0]
   12fd5:	test   edx,edx
   12fd7:	jne    12c50 <eo_fermion_force+0x1c0>
   12fdd:	lea    rax,[rsp+0xb0]
   12fe5:	mov    rbp,QWORD PTR [rsp+0xf0]
   12fed:	mov    rdi,QWORD PTR [rsp+0x78]
   12ff2:	mov    r14d,DWORD PTR [rsp+0x88]
   12ffa:	mov    DWORD PTR [rax+r13*4],0x1
   13002:	mov    rsi,rbp
   13005:	mov    edx,r14d
   13008:	call   12370 <u_shift_fermion>
   1300d:	mov    rsi,QWORD PTR [rsp+0x28]
   13012:	mov    edx,r14d
   13015:	mov    rdi,rbp
   13018:	movsd  xmm0,QWORD PTR [rsp+0x98]
   13021:	call   12730 <add_force_to_mom>
   13026:	jmp    12c58 <eo_fermion_force+0x1c8>
   1302b:	nop    DWORD PTR [rax+rax*1+0x0]
   13030:	mov    rbx,QWORD PTR [rsp+0xe0]
   13038:	mov    rdi,QWORD PTR [rsp+0x28]
   1303d:	mov    edx,0x7
   13042:	sub    edx,r12d
   13045:	mov    rsi,rbx
   13048:	call   12370 <u_shift_fermion>
   1304d:	mov    r14,QWORD PTR [rsp+0x40]
   13052:	mov    edx,r15d
   13055:	mov    rdi,rbx
   13058:	mov    rsi,r14
   1305b:	call   12370 <u_shift_fermion>
   13060:	cmp    r15d,0x3
   13064:	jg     13080 <eo_fermion_force+0x5f0>
   13066:	movsd  xmm0,QWORD PTR [rsp+0x70]
   1306c:	mov    edx,r15d
   1306f:	mov    rsi,rbx
   13072:	mov    rdi,r14
   13075:	xorpd  xmm0,XMMWORD PTR [rsp+0x50]
   1307b:	call   12730 <add_force_to_mom>
   13080:	mov    r14,QWORD PTR [rsp+0xf0]
   13088:	mov    r13,QWORD PTR [rsp+0x40]
   1308d:	mov    edx,r12d
   13090:	mov    rsi,r14
   13093:	mov    rdi,r13
   13096:	call   12370 <u_shift_fermion>
   1309b:	mov    rdx,QWORD PTR [rsp+0x28]
   130a0:	mov    r8,rbx
   130a3:	mov    r9,r14
   130a6:	movsd  xmm0,QWORD PTR [rsp+0x70]
   130ac:	mov    rcx,r13
   130af:	mov    esi,r15d
   130b2:	mov    edi,r12d
   130b5:	call   12a10 <side_link_force>
   130ba:	mov    r8d,DWORD PTR [rip+0xf43f]        # 22500 <sites_on_node>
   130c1:	movsd  xmm2,QWORD PTR [rsp+0x70]
   130c7:	divsd  xmm2,QWORD PTR [rsp+0x48]
   130cd:	movsd  QWORD PTR [rsp+0x20],xmm2
   130d3:	test   r8d,r8d
   130d6:	jle    12dd9 <eo_fermion_force+0x349>
   130dc:	mov    rbx,QWORD PTR [rsp+0x38]
   130e1:	xor    r13d,r13d
   130e4:	nop    DWORD PTR [rax+0x0]
   130e8:	movsd  xmm0,QWORD PTR [rsp+0x20]
   130ee:	mov    rdx,rbx
   130f1:	mov    rsi,r14
   130f4:	mov    rdi,rbx
   130f7:	add    r13d,0x1
   130fb:	add    rbx,0x30
   130ff:	add    r14,0x30
   13103:	call   14820 <scalar_mult_add_su3_vector>
   13108:	cmp    DWORD PTR [rip+0xf3f1],r13d        # 22500 <sites_on_node>
   1310f:	jg     130e8 <eo_fermion_force+0x658>
   13111:	jmp    12dd9 <eo_fermion_force+0x349>
   13116:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13120:	add    r15d,0x1
   13124:	sub    DWORD PTR [rsp+0x14],0x1
   13129:	cmp    r15d,0x8
   1312d:	jne    12c40 <eo_fermion_force+0x1b0>
   13133:	mov    rdi,QWORD PTR [rsp+0x78]
   13138:	lea    rbx,[rsp+0xd8]
   13140:	call   22a0 <free@plt>
   13145:	mov    rdi,QWORD PTR [rsp+0x30]
   1314a:	mov    rbp,QWORD PTR [rsp+0xa8]
   13152:	jmp    1315f <eo_fermion_force+0x6cf>
   13154:	nop    DWORD PTR [rax+0x0]
   13158:	mov    rdi,QWORD PTR [rbx]
   1315b:	add    rbx,0x8
   1315f:	call   22a0 <free@plt>
   13164:	cmp    rbx,rbp
   13167:	jne    13158 <eo_fermion_force+0x6c8>
   13169:	mov    rax,QWORD PTR [rsp+0x118]
   13171:	xor    rax,QWORD PTR fs:0x28
   1317a:	jne    13270 <eo_fermion_force+0x7e0>
   13180:	add    rsp,0x128
   13187:	pop    rbx
   13188:	pop    rbp
   13189:	pop    r12
   1318b:	pop    r13
   1318d:	pop    r14
   1318f:	pop    r15
   13191:	ret    
   13192:	nop    WORD PTR [rax+rax*1+0x0]
   13198:	mov    r9,QWORD PTR [rsp+0x40]
   1319d:	mov    r8,QWORD PTR [rsp+0x30]
   131a2:	mov    esi,r15d
   131a5:	mov    rcx,QWORD PTR [rsp+0x60]
   131aa:	mov    rdx,QWORD PTR [rsp+0x78]
   131af:	movsd  xmm0,QWORD PTR [rsp+0x68]
   131b5:	mov    edi,DWORD PTR [rsp+0x88]
   131bc:	call   12a10 <side_link_force>
   131c1:	mov    eax,DWORD PTR [rsp+r13*4+0xb0]
   131c9:	test   eax,eax
   131cb:	jne    12c50 <eo_fermion_force+0x1c0>
   131d1:	lea    rax,[rsp+0xb0]
   131d9:	mov    r12,QWORD PTR [rsp+0x78]
   131de:	mov    r14d,DWORD PTR [rsp+0x8c]
   131e6:	mov    DWORD PTR [rax+r13*4],0x1
   131ee:	mov    rdi,QWORD PTR [rsp+0x30]
   131f3:	movsd  xmm0,QWORD PTR [rsp+0xa0]
   131fc:	mov    edx,r14d
   131ff:	mov    rsi,r12
   13202:	call   12730 <add_force_to_mom>
   13207:	mov    rbp,QWORD PTR [rsp+0xf0]
   1320f:	mov    edx,DWORD PTR [rsp+0x88]
   13216:	mov    rdi,r12
   13219:	mov    rsi,rbp
   1321c:	call   12370 <u_shift_fermion>
   13221:	mov    rdi,QWORD PTR [rsp+0x28]
   13226:	mov    edx,r14d
   13229:	mov    rsi,rbp
   1322c:	movsd  xmm3,QWORD PTR [rsp+0x98]
   13235:	xorpd  xmm3,XMMWORD PTR [rsp+0x50]
   1323b:	movapd xmm0,xmm3
   1323f:	call   12730 <add_force_to_mom>
   13244:	mov    rdi,QWORD PTR [rsp+0x28]
   13249:	mov    edx,r14d
   1324c:	mov    rsi,rbp
   1324f:	call   12370 <u_shift_fermion>
   13254:	mov    edx,r14d
   13257:	mov    rsi,r12
   1325a:	mov    rdi,rbp
   1325d:	movsd  xmm0,QWORD PTR [rsp+0x98]
   13266:	call   12730 <add_force_to_mom>
   1326b:	jmp    12c50 <eo_fermion_force+0x1c0>
   13270:	call   2350 <__stack_chk_fail@plt>
   13275:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000013280 <side_link_3f_force>:
   13280:	endbr64 
   13284:	push   rbp
   13285:	mov    r11d,edi
   13288:	mov    r10,rdx
   1328b:	sub    rsp,0x20
   1328f:	movq   xmm2,QWORD PTR [rip+0x73e9]        # 1a680 <_IO_stdin_used+0x680>
   13297:	movsd  xmm1,QWORD PTR [rdx]
   1329b:	mov    rax,QWORD PTR fs:0x28
   132a4:	mov    QWORD PTR [rsp+0x18],rax
   132a9:	xor    eax,eax
   132ab:	movsd  xmm0,QWORD PTR [rdx+0x8]
   132b0:	mov    rbp,QWORD PTR [rsp+0x30]
   132b5:	xorpd  xmm1,xmm2
   132b9:	xorpd  xmm0,xmm2
   132bd:	movsd  QWORD PTR [rsp],xmm1
   132c2:	movsd  QWORD PTR [rsp+0x8],xmm0
   132c8:	cmp    edi,0x3
   132cb:	jg     132f0 <side_link_3f_force+0x70>
   132cd:	mov    rdi,rcx
   132d0:	cmp    esi,0x3
   132d3:	jg     13338 <side_link_3f_force+0xb8>
   132d5:	mov    rcx,rdx
   132d8:	mov    rsi,rdi
   132db:	mov    edx,r11d
   132de:	mov    rdi,rbp
   132e1:	call   12870 <add_3f_force_to_mom>
   132e6:	jmp    1330a <side_link_3f_force+0x8a>
   132e8:	nop    DWORD PTR [rax+rax*1+0x0]
   132f0:	cmp    esi,0x3
   132f3:	jle    13320 <side_link_3f_force+0xa0>
   132f5:	mov    edx,0x7
   132fa:	mov    rcx,r10
   132fd:	mov    rsi,r8
   13300:	sub    edx,edi
   13302:	mov    rdi,r9
   13305:	call   12870 <add_3f_force_to_mom>
   1330a:	mov    rax,QWORD PTR [rsp+0x18]
   1330f:	xor    rax,QWORD PTR fs:0x28
   13318:	jne    1334d <side_link_3f_force+0xcd>
   1331a:	add    rsp,0x20
   1331e:	pop    rbp
   1331f:	ret    
   13320:	mov    edx,edi
   13322:	mov    rcx,rsp
   13325:	mov    rsi,r9
   13328:	mov    rdi,r8
   1332b:	call   12870 <add_3f_force_to_mom>
   13330:	jmp    1330a <side_link_3f_force+0x8a>
   13332:	nop    WORD PTR [rax+rax*1+0x0]
   13338:	mov    edx,0x7
   1333d:	mov    rcx,rsp
   13340:	mov    rsi,rbp
   13343:	sub    edx,r11d
   13346:	call   12870 <add_3f_force_to_mom>
   1334b:	jmp    1330a <side_link_3f_force+0x8a>
   1334d:	call   2350 <__stack_chk_fail@plt>
   13352:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1335d:	nop    DWORD PTR [rax]

0000000000013360 <eo_fermion_force_3f>:
   13360:	endbr64 
   13364:	push   r15
   13366:	movapd xmm7,xmm0
   1336a:	pxor   xmm0,xmm0
   1336e:	push   r14
   13370:	cvtsi2sd xmm0,edi
   13374:	push   r13
   13376:	push   r12
   13378:	movsxd r12,esi
   1337b:	push   rbp
   1337c:	mov    ebp,ecx
   1337e:	push   rbx
   1337f:	sub    rsp,0x198
   13386:	movsd  xmm6,QWORD PTR [rip+0xef9a]        # 22328 <act_path_coeff+0x8>
   1338e:	movsd  xmm9,QWORD PTR [rip+0x70e9]        # 1a480 <_IO_stdin_used+0x480>
   13397:	mov    rax,QWORD PTR fs:0x28
   133a0:	mov    QWORD PTR [rsp+0x188],rax
   133a8:	xor    eax,eax
   133aa:	movsd  xmm5,QWORD PTR [rip+0xef7e]        # 22330 <act_path_coeff+0x10>
   133b2:	movsd  xmm8,QWORD PTR [rip+0xef65]        # 22320 <act_path_coeff>
   133bb:	lea    r13,[rsp+0x180]
   133c3:	mulsd  xmm0,xmm9
   133c8:	movapd xmm2,xmm6
   133cc:	movsd  xmm4,QWORD PTR [rip+0xef64]        # 22338 <act_path_coeff+0x18>
   133d4:	movsd  xmm3,QWORD PTR [rip+0xef64]        # 22340 <act_path_coeff+0x20>
   133dc:	movapd xmm1,xmm8
   133e1:	lea    rbx,[rsp+0x140]
   133e9:	addsd  xmm0,xmm0
   133ed:	mulsd  xmm0,xmm7
   133f1:	mulsd  xmm1,xmm0
   133f5:	mulsd  xmm2,xmm0
   133f9:	movsd  QWORD PTR [rsp+0x70],xmm1
   133ff:	movq   xmm1,QWORD PTR [rip+0x7279]        # 1a680 <_IO_stdin_used+0x680>
   13407:	movsd  QWORD PTR [rsp+0x90],xmm2
   13410:	xorpd  xmm2,xmm1
   13414:	movsd  QWORD PTR [rsp+0xd0],xmm2
   1341d:	movapd xmm2,xmm5
   13421:	mulsd  xmm2,xmm0
   13425:	movsd  QWORD PTR [rsp+0xb0],xmm2
   1342e:	xorpd  xmm2,xmm1
   13432:	movsd  QWORD PTR [rsp+0x100],xmm2
   1343b:	movapd xmm2,xmm4
   1343f:	mulsd  xmm2,xmm0
   13443:	movsd  QWORD PTR [rsp+0xa0],xmm2
   1344c:	xorpd  xmm2,xmm1
   13450:	movsd  QWORD PTR [rsp+0xf0],xmm2
   13459:	movapd xmm2,xmm3
   1345d:	mulsd  xmm2,xmm0
   13461:	movsd  QWORD PTR [rsp+0xc0],xmm2
   1346a:	xorpd  xmm2,xmm1
   1346e:	movsd  QWORD PTR [rsp+0x110],xmm2
   13477:	movsd  xmm2,QWORD PTR [rip+0xeec9]        # 22348 <act_path_coeff+0x28>
   1347f:	mulsd  xmm0,xmm2
   13483:	movsd  QWORD PTR [rsp+0x80],xmm0
   1348c:	xorpd  xmm0,xmm1
   13490:	movsd  QWORD PTR [rsp+0xe0],xmm0
   13499:	pxor   xmm0,xmm0
   1349d:	cvtsi2sd xmm0,edx
   134a1:	mulsd  xmm0,xmm9
   134a6:	addsd  xmm0,xmm0
   134aa:	mulsd  xmm0,xmm7
   134ae:	mulsd  xmm6,xmm0
   134b2:	mulsd  xmm5,xmm0
   134b6:	mulsd  xmm8,xmm0
   134bb:	mulsd  xmm4,xmm0
   134bf:	mulsd  xmm3,xmm0
   134c3:	movsd  QWORD PTR [rsp+0x98],xmm6
   134cc:	mulsd  xmm0,xmm2
   134d0:	xorpd  xmm6,xmm1
   134d4:	movsd  QWORD PTR [rsp+0xb8],xmm5
   134dd:	xorpd  xmm5,xmm1
   134e1:	movsd  QWORD PTR [rsp+0x78],xmm8
   134e8:	movsd  QWORD PTR [rsp+0xd8],xmm6
   134f1:	movsd  QWORD PTR [rsp+0x108],xmm5
   134fa:	mov    QWORD PTR [rsp+0x120],0x0
   13506:	mov    QWORD PTR [rsp+0x128],0x0
   13512:	mov    QWORD PTR [rsp+0x130],0x0
   1351e:	mov    QWORD PTR [rsp+0x138],0x0
   1352a:	mov    QWORD PTR [rsp+0x68],r13
   1352f:	movsd  QWORD PTR [rsp+0xa8],xmm4
   13538:	xorpd  xmm4,xmm1
   1353c:	movsd  QWORD PTR [rsp+0xc8],xmm3
   13545:	xorpd  xmm3,xmm1
   13549:	movsd  QWORD PTR [rsp+0x88],xmm0
   13552:	xorpd  xmm0,xmm1
   13556:	movsd  QWORD PTR [rsp+0xf8],xmm4
   1355f:	movsd  QWORD PTR [rsp+0x118],xmm3
   13568:	movsd  QWORD PTR [rsp+0xe8],xmm0
   13571:	nop    DWORD PTR [rax+0x0]
   13578:	movsxd rdi,DWORD PTR [rip+0xef81]        # 22500 <sites_on_node>
   1357f:	mov    esi,0x60
   13584:	add    rbx,0x8
   13588:	call   23d0 <calloc@plt>
   1358d:	mov    QWORD PTR [rbx-0x8],rax
   13591:	cmp    rbx,r13
   13594:	jne    13578 <eo_fermion_force_3f+0x218>
   13596:	movsxd rdi,DWORD PTR [rip+0xef63]        # 22500 <sites_on_node>
   1359d:	mov    esi,0x60
   135a2:	call   23d0 <calloc@plt>
   135a7:	mov    edi,DWORD PTR [rip+0xef53]        # 22500 <sites_on_node>
   135ad:	mov    rcx,QWORD PTR [rip+0xf214]        # 227c8 <lattice>
   135b4:	mov    QWORD PTR [rsp+0x58],rax
   135b9:	test   edi,edi
   135bb:	jle    13633 <eo_fermion_force_3f+0x2d3>
   135bd:	sub    edi,0x1
   135c0:	lea    rdx,[rcx+r12*1]
   135c4:	mov    rax,QWORD PTR [rsp+0x58]
   135c9:	movsxd rsi,ebp
   135cc:	lea    rcx,[rcx+r12*1+0x800]
   135d4:	shl    rdi,0xb
   135d8:	add    rdi,rcx
   135db:	nop    DWORD PTR [rax+rax*1+0x0]
   135e0:	movdqu xmm7,XMMWORD PTR [rdx]
   135e4:	mov    rcx,rdx
   135e7:	add    rdx,0x800
   135ee:	add    rax,0x60
   135f2:	sub    rcx,r12
   135f5:	movups XMMWORD PTR [rax-0x60],xmm7
   135f9:	movdqu xmm3,XMMWORD PTR [rdx-0x7f0]
   13601:	movups XMMWORD PTR [rax-0x50],xmm3
   13605:	movdqu xmm4,XMMWORD PTR [rdx-0x7e0]
   1360d:	movups XMMWORD PTR [rax-0x40],xmm4
   13611:	movdqu xmm5,XMMWORD PTR [rcx+rsi*1]
   13616:	movups XMMWORD PTR [rax-0x30],xmm5
   1361a:	movdqu xmm6,XMMWORD PTR [rcx+rsi*1+0x10]
   13620:	movups XMMWORD PTR [rax-0x20],xmm6
   13624:	movdqu xmm1,XMMWORD PTR [rcx+rsi*1+0x20]
   1362a:	movups XMMWORD PTR [rax-0x10],xmm1
   1362e:	cmp    rdx,rdi
   13631:	jne    135e0 <eo_fermion_force_3f+0x280>
   13633:	mov    rax,QWORD PTR [rsp+0x140]
   1363b:	mov    DWORD PTR [rsp+0xc],0x7
   13643:	xor    r13d,r13d
   13646:	mov    r15d,r13d
   13649:	mov    QWORD PTR [rsp+0x38],rax
   1364e:	xchg   ax,ax
   13650:	mov    QWORD PTR [rsp+0x20],0x0
   13659:	mov    r13d,0x7
   1365f:	jmp    1367b <eo_fermion_force_3f+0x31b>
   13661:	nop    DWORD PTR [rax+0x0]
   13668:	test   r13d,r13d
   1366b:	je     13ba8 <eo_fermion_force_3f+0x848>
   13671:	add    QWORD PTR [rsp+0x20],0x1
   13677:	sub    r13d,0x1
   1367b:	mov    rax,QWORD PTR [rsp+0x20]
   13680:	mov    DWORD PTR [rsp+0x60],eax
   13684:	mov    ecx,eax
   13686:	mov    DWORD PTR [rsp+0x8],eax
   1368a:	cmp    eax,r15d
   1368d:	je     13668 <eo_fermion_force_3f+0x308>
   1368f:	mov    esi,DWORD PTR [rsp+0xc]
   13693:	cmp    eax,esi
   13695:	je     13668 <eo_fermion_force_3f+0x308>
   13697:	mov    r14,QWORD PTR [rsp+0x38]
   1369c:	mov    eax,0x7
   136a1:	mov    rdi,QWORD PTR [rsp+0x58]
   136a6:	sub    eax,ecx
   136a8:	mov    edx,eax
   136aa:	mov    rsi,r14
   136ad:	mov    DWORD PTR [rsp+0x64],eax
   136b1:	call   12540 <u_shift_hw_fermion>
   136b6:	mov    rbx,QWORD PTR [rsp+0x178]
   136be:	mov    edx,r15d
   136c1:	mov    rdi,r14
   136c4:	mov    rsi,rbx
   136c7:	mov    QWORD PTR [rsp+0x50],rbx
   136cc:	call   12540 <u_shift_hw_fermion>
   136d1:	cmp    r15d,0x3
   136d5:	jg     136ed <eo_fermion_force_3f+0x38d>
   136d7:	lea    rcx,[rsp+0x100]
   136df:	mov    edx,r15d
   136e2:	mov    rsi,r14
   136e5:	mov    rdi,rbx
   136e8:	call   12870 <add_3f_force_to_mom>
   136ed:	mov    rax,QWORD PTR [rsp+0x148]
   136f5:	xor    r14d,r14d
   136f8:	mov    DWORD PTR [rsp],r13d
   136fc:	mov    r12d,r14d
   136ff:	mov    QWORD PTR [rsp+0x30],rax
   13704:	mov    rax,QWORD PTR [rsp+0x170]
   1370c:	mov    QWORD PTR [rsp+0x40],rax
   13711:	mov    rax,QWORD PTR [rsp+0x158]
   13719:	mov    QWORD PTR [rsp+0x48],rax
   1371e:	jmp    1372e <eo_fermion_force_3f+0x3ce>
   13720:	add    r12d,0x1
   13724:	cmp    r12d,0x8
   13728:	je     138c0 <eo_fermion_force_3f+0x560>
   1372e:	cmp    DWORD PTR [rsp+0x8],r12d
   13733:	setne  al
   13736:	cmp    DWORD PTR [rsp],r12d
   1373a:	setne  dl
   1373d:	and    eax,edx
   1373f:	cmp    r12d,r15d
   13742:	setne  dl
   13745:	test   al,dl
   13747:	je     13720 <eo_fermion_force_3f+0x3c0>
   13749:	cmp    r12d,DWORD PTR [rsp+0xc]
   1374e:	je     13720 <eo_fermion_force_3f+0x3c0>
   13750:	mov    rbx,QWORD PTR [rsp+0x30]
   13755:	mov    eax,0x7
   1375a:	mov    rdi,QWORD PTR [rsp+0x38]
   1375f:	sub    eax,r12d
   13762:	mov    edx,eax
   13764:	mov    rsi,rbx
   13767:	mov    DWORD PTR [rsp+0x10],eax
   1376b:	call   12540 <u_shift_hw_fermion>
   13770:	mov    r14,QWORD PTR [rsp+0x40]
   13775:	mov    edx,r15d
   13778:	mov    rdi,rbx
   1377b:	mov    rsi,r14
   1377e:	call   12540 <u_shift_hw_fermion>
   13783:	cmp    r15d,0x3
   13787:	jg     1379f <eo_fermion_force_3f+0x43f>
   13789:	lea    rcx,[rsp+0xa0]
   13791:	mov    edx,r15d
   13794:	mov    rsi,rbx
   13797:	mov    rdi,r14
   1379a:	call   12870 <add_3f_force_to_mom>
   1379f:	xor    ebx,ebx
   137a1:	nop    DWORD PTR [rax+0x0]
   137a8:	cmp    DWORD PTR [rsp],ebx
   137ab:	setne  dl
   137ae:	cmp    DWORD PTR [rsp+0x8],ebx
   137b2:	setne  cl
   137b5:	and    edx,ecx
   137b7:	cmp    r12d,ebx
   137ba:	setne  cl
   137bd:	and    edx,ecx
   137bf:	cmp    ebx,DWORD PTR [rsp+0x10]
   137c3:	setne  cl
   137c6:	and    edx,ecx
   137c8:	cmp    ebx,r15d
   137cb:	setne  cl
   137ce:	test   dl,cl
   137d0:	je     137dc <eo_fermion_force_3f+0x47c>
   137d2:	cmp    ebx,DWORD PTR [rsp+0xc]
   137d6:	jne    13a88 <eo_fermion_force_3f+0x728>
   137dc:	add    ebx,0x1
   137df:	cmp    ebx,0x8
   137e2:	jne    137a8 <eo_fermion_force_3f+0x448>
   137e4:	mov    r14,QWORD PTR [rsp+0x40]
   137e9:	mov    rbx,QWORD PTR [rsp+0x48]
   137ee:	mov    edx,r12d
   137f1:	mov    rdi,r14
   137f4:	mov    rsi,rbx
   137f7:	call   12540 <u_shift_hw_fermion>
   137fc:	mov    r8,r14
   137ff:	mov    esi,r15d
   13802:	mov    edi,r12d
   13805:	lea    rdx,[rsp+0xf0]
   1380d:	sub    rsp,0x8
   13811:	push   rbx
   13812:	mov    r9,QWORD PTR [rsp+0x40]
   13817:	mov    rcx,QWORD PTR [rsp+0x48]
   1381c:	call   13280 <side_link_3f_force>
   13821:	mov    r14d,DWORD PTR [rip+0xecd8]        # 22500 <sites_on_node>
   13828:	movsd  xmm0,QWORD PTR [rsp+0xb0]
   13831:	divsd  xmm0,QWORD PTR [rsp+0xc0]
   1383a:	movsd  QWORD PTR [rsp+0x20],xmm0
   13840:	movsd  xmm0,QWORD PTR [rsp+0xb8]
   13849:	divsd  xmm0,QWORD PTR [rsp+0xc8]
   13852:	movsd  QWORD PTR [rsp+0x28],xmm0
   13858:	pop    rbp
   13859:	pop    r13
   1385b:	test   r14d,r14d
   1385e:	jle    13720 <eo_fermion_force_3f+0x3c0>
   13864:	mov    rbp,QWORD PTR [rsp+0x50]
   13869:	xor    r14d,r14d
   1386c:	nop    DWORD PTR [rax+0x0]
   13870:	movsd  xmm0,QWORD PTR [rsp+0x10]
   13876:	mov    rdx,rbp
   13879:	mov    rsi,rbx
   1387c:	mov    rdi,rbp
   1387f:	add    r14d,0x1
   13883:	call   14820 <scalar_mult_add_su3_vector>
   13888:	lea    rdi,[rbp+0x30]
   1388c:	movsd  xmm0,QWORD PTR [rsp+0x18]
   13892:	lea    rsi,[rbx+0x30]
   13896:	mov    rdx,rdi
   13899:	add    rbp,0x60
   1389d:	add    rbx,0x60
   138a1:	call   14820 <scalar_mult_add_su3_vector>
   138a6:	cmp    DWORD PTR [rip+0xec53],r14d        # 22500 <sites_on_node>
   138ad:	jg     13870 <eo_fermion_force_3f+0x510>
   138af:	add    r12d,0x1
   138b3:	cmp    r12d,0x8
   138b7:	jne    1372e <eo_fermion_force_3f+0x3ce>
   138bd:	nop    DWORD PTR [rax]
   138c0:	mov    rbx,QWORD PTR [rsp+0x30]
   138c5:	mov    edx,DWORD PTR [rsp+0x64]
   138c9:	mov    rdi,QWORD PTR [rsp+0x38]
   138ce:	mov    r13d,DWORD PTR [rsp]
   138d2:	mov    rsi,rbx
   138d5:	call   12540 <u_shift_hw_fermion>
   138da:	mov    r14,QWORD PTR [rsp+0x40]
   138df:	mov    edx,r15d
   138e2:	mov    rdi,rbx
   138e5:	mov    rsi,r14
   138e8:	call   12540 <u_shift_hw_fermion>
   138ed:	cmp    r15d,0x3
   138f1:	jg     13909 <eo_fermion_force_3f+0x5a9>
   138f3:	lea    rcx,[rsp+0x80]
   138fb:	mov    edx,r15d
   138fe:	mov    rsi,rbx
   13901:	mov    rdi,r14
   13904:	call   12870 <add_3f_force_to_mom>
   13909:	mov    rbx,QWORD PTR [rsp+0x40]
   1390e:	mov    ebp,DWORD PTR [rsp+0x60]
   13912:	mov    r14,QWORD PTR [rsp+0x48]
   13917:	mov    rdi,rbx
   1391a:	mov    edx,ebp
   1391c:	mov    rsi,r14
   1391f:	call   12540 <u_shift_hw_fermion>
   13924:	mov    r8,rbx
   13927:	mov    esi,r15d
   1392a:	mov    edi,ebp
   1392c:	lea    rdx,[rsp+0xe0]
   13934:	sub    rsp,0x8
   13938:	push   r14
   1393a:	mov    rcx,QWORD PTR [rsp+0x48]
   1393f:	mov    r9,QWORD PTR [rsp+0x40]
   13944:	call   13280 <side_link_3f_force>
   13949:	mov    r11d,DWORD PTR [rip+0xebb0]        # 22500 <sites_on_node>
   13950:	xor    ecx,ecx
   13952:	movsd  xmm0,QWORD PTR [rsp+0x90]
   1395b:	divsd  xmm0,QWORD PTR [rsp+0xc0]
   13964:	mov    ebx,ecx
   13966:	movsd  QWORD PTR [rsp+0x10],xmm0
   1396c:	movsd  xmm0,QWORD PTR [rsp+0x98]
   13975:	divsd  xmm0,QWORD PTR [rsp+0xc8]
   1397e:	movsd  QWORD PTR [rsp+0x20],xmm0
   13984:	pop    r9
   13986:	pop    r10
   13988:	mov    r12,QWORD PTR [rsp+0x50]
   1398d:	test   r11d,r11d
   13990:	jle    139d5 <eo_fermion_force_3f+0x675>
   13992:	nop    WORD PTR [rax+rax*1+0x0]
   13998:	movsd  xmm0,QWORD PTR [rsp]
   1399d:	mov    rdx,r12
   139a0:	mov    rsi,r14
   139a3:	mov    rdi,r12
   139a6:	add    ebx,0x1
   139a9:	call   14820 <scalar_mult_add_su3_vector>
   139ae:	lea    rdi,[r12+0x30]
   139b3:	movsd  xmm0,QWORD PTR [rsp+0x10]
   139b9:	lea    rsi,[r14+0x30]
   139bd:	mov    rdx,rdi
   139c0:	add    r12,0x60
   139c4:	add    r14,0x60
   139c8:	call   14820 <scalar_mult_add_su3_vector>
   139cd:	cmp    DWORD PTR [rip+0xeb2d],ebx        # 22500 <sites_on_node>
   139d3:	jg     13998 <eo_fermion_force_3f+0x638>
   139d5:	cmp    DWORD PTR [rsp+0x8],0x3
   139da:	jg     13c20 <eo_fermion_force_3f+0x8c0>
   139e0:	mov    ebp,DWORD PTR [rsp+0x60]
   139e4:	mov    rbx,QWORD PTR [rsp+0x50]
   139e9:	mov    r14,QWORD PTR [rsp+0x48]
   139ee:	mov    edx,ebp
   139f0:	mov    rdi,rbx
   139f3:	mov    rsi,r14
   139f6:	call   12540 <u_shift_hw_fermion>
   139fb:	mov    r8,rbx
   139fe:	mov    esi,r15d
   13a01:	mov    edi,ebp
   13a03:	lea    rdx,[rsp+0xb0]
   13a0b:	sub    rsp,0x8
   13a0f:	push   r14
   13a11:	mov    r9,QWORD PTR [rsp+0x48]
   13a16:	mov    rcx,QWORD PTR [rsp+0x68]
   13a1b:	call   13280 <side_link_3f_force>
   13a20:	pop    rsi
   13a21:	pop    rdi
   13a22:	mov    rax,QWORD PTR [rsp+0x20]
   13a27:	mov    r8d,DWORD PTR [rsp+rax*4+0x120]
   13a2f:	test   r8d,r8d
   13a32:	jne    13668 <eo_fermion_force_3f+0x308>
   13a38:	mov    rcx,QWORD PTR [rsp+0x20]
   13a3d:	lea    rax,[rsp+0x120]
   13a45:	mov    ebx,DWORD PTR [rsp+0x60]
   13a49:	mov    rbp,QWORD PTR [rsp+0x160]
   13a51:	mov    rdi,QWORD PTR [rsp+0x58]
   13a56:	mov    DWORD PTR [rax+rcx*4],0x1
   13a5d:	mov    edx,ebx
   13a5f:	mov    rsi,rbp
   13a62:	call   12540 <u_shift_hw_fermion>
   13a67:	mov    rsi,QWORD PTR [rsp+0x30]
   13a6c:	mov    edx,ebx
   13a6e:	mov    rdi,rbp
   13a71:	lea    rcx,[rsp+0x90]
   13a79:	call   12870 <add_3f_force_to_mom>
   13a7e:	jmp    13671 <eo_fermion_force_3f+0x311>
   13a83:	nop    DWORD PTR [rax+rax*1+0x0]
   13a88:	mov    rbp,QWORD PTR [rsp+0x150]
   13a90:	mov    rdi,QWORD PTR [rsp+0x30]
   13a95:	mov    edx,0x7
   13a9a:	sub    edx,ebx
   13a9c:	mov    rsi,rbp
   13a9f:	call   12540 <u_shift_hw_fermion>
   13aa4:	mov    r14,QWORD PTR [rsp+0x48]
   13aa9:	mov    edx,r15d
   13aac:	mov    rdi,rbp
   13aaf:	mov    rsi,r14
   13ab2:	call   12540 <u_shift_hw_fermion>
   13ab7:	cmp    r15d,0x3
   13abb:	jg     13ad3 <eo_fermion_force_3f+0x773>
   13abd:	lea    rcx,[rsp+0x110]
   13ac5:	mov    edx,r15d
   13ac8:	mov    rsi,rbp
   13acb:	mov    rdi,r14
   13ace:	call   12870 <add_3f_force_to_mom>
   13ad3:	mov    r14,QWORD PTR [rsp+0x48]
   13ad8:	mov    r13,QWORD PTR [rsp+0x160]
   13ae0:	mov    edx,ebx
   13ae2:	mov    rsi,r13
   13ae5:	mov    rdi,r14
   13ae8:	call   12540 <u_shift_hw_fermion>
   13aed:	mov    r9,rbp
   13af0:	mov    r8,r14
   13af3:	mov    esi,r15d
   13af6:	lea    rdx,[rsp+0xc0]
   13afe:	sub    rsp,0x8
   13b02:	mov    edi,ebx
   13b04:	push   r13
   13b06:	mov    rcx,QWORD PTR [rsp+0x40]
   13b0b:	call   13280 <side_link_3f_force>
   13b10:	mov    ecx,DWORD PTR [rip+0xe9ea]        # 22500 <sites_on_node>
   13b16:	movsd  xmm0,QWORD PTR [rsp+0xd0]
   13b1f:	divsd  xmm0,QWORD PTR [rsp+0xb0]
   13b28:	movsd  QWORD PTR [rsp+0x28],xmm0
   13b2e:	movsd  xmm0,QWORD PTR [rsp+0xd8]
   13b37:	divsd  xmm0,QWORD PTR [rsp+0xb8]
   13b40:	movsd  QWORD PTR [rsp+0x38],xmm0
   13b46:	pop    rax
   13b47:	pop    rdx
   13b48:	test   ecx,ecx
   13b4a:	jle    137dc <eo_fermion_force_3f+0x47c>
   13b50:	mov    r14,QWORD PTR [rsp+0x40]
   13b55:	xor    ebp,ebp
   13b57:	nop    WORD PTR [rax+rax*1+0x0]
   13b60:	movsd  xmm0,QWORD PTR [rsp+0x18]
   13b66:	mov    rdx,r14
   13b69:	mov    rsi,r13
   13b6c:	mov    rdi,r14
   13b6f:	add    ebp,0x1
   13b72:	call   14820 <scalar_mult_add_su3_vector>
   13b77:	lea    rdi,[r14+0x30]
   13b7b:	movsd  xmm0,QWORD PTR [rsp+0x28]
   13b81:	lea    rsi,[r13+0x30]
   13b85:	mov    rdx,rdi
   13b88:	add    r14,0x60
   13b8c:	add    r13,0x60
   13b90:	call   14820 <scalar_mult_add_su3_vector>
   13b95:	cmp    DWORD PTR [rip+0xe965],ebp        # 22500 <sites_on_node>
   13b9b:	jg     13b60 <eo_fermion_force_3f+0x800>
   13b9d:	jmp    137dc <eo_fermion_force_3f+0x47c>
   13ba2:	nop    WORD PTR [rax+rax*1+0x0]
   13ba8:	add    r15d,0x1
   13bac:	sub    DWORD PTR [rsp+0xc],0x1
   13bb1:	cmp    r15d,0x8
   13bb5:	jne    13650 <eo_fermion_force_3f+0x2f0>
   13bbb:	mov    rdi,QWORD PTR [rsp+0x58]
   13bc0:	lea    rbx,[rsp+0x148]
   13bc8:	call   22a0 <free@plt>
   13bcd:	mov    rdi,QWORD PTR [rsp+0x38]
   13bd2:	mov    rbp,QWORD PTR [rsp+0x68]
   13bd7:	jmp    13be7 <eo_fermion_force_3f+0x887>
   13bd9:	nop    DWORD PTR [rax+0x0]
   13be0:	mov    rdi,QWORD PTR [rbx]
   13be3:	add    rbx,0x8
   13be7:	call   22a0 <free@plt>
   13bec:	cmp    rbx,rbp
   13bef:	jne    13be0 <eo_fermion_force_3f+0x880>
   13bf1:	mov    rax,QWORD PTR [rsp+0x188]
   13bf9:	xor    rax,QWORD PTR fs:0x28
   13c02:	jne    13cea <eo_fermion_force_3f+0x98a>
   13c08:	add    rsp,0x198
   13c0f:	pop    rbx
   13c10:	pop    rbp
   13c11:	pop    r12
   13c13:	pop    r13
   13c15:	pop    r14
   13c17:	pop    r15
   13c19:	ret    
   13c1a:	nop    WORD PTR [rax+rax*1+0x0]
   13c20:	lea    rdx,[rsp+0xb0]
   13c28:	sub    rsp,0x8
   13c2c:	mov    esi,r15d
   13c2f:	push   QWORD PTR [rsp+0x50]
   13c33:	mov    rcx,QWORD PTR [rsp+0x68]
   13c38:	mov    r9,QWORD PTR [rsp+0x48]
   13c3d:	mov    r8,QWORD PTR [rsp+0x60]
   13c42:	mov    edi,DWORD PTR [rsp+0x70]
   13c46:	call   13280 <side_link_3f_force>
   13c4b:	pop    rax
   13c4c:	pop    rdx
   13c4d:	mov    rax,QWORD PTR [rsp+0x20]
   13c52:	mov    ecx,DWORD PTR [rsp+rax*4+0x120]
   13c59:	test   ecx,ecx
   13c5b:	jne    13668 <eo_fermion_force_3f+0x308>
   13c61:	mov    rcx,QWORD PTR [rsp+0x20]
   13c66:	lea    rax,[rsp+0x120]
   13c6e:	mov    ebx,DWORD PTR [rsp+0x64]
   13c72:	mov    r14,QWORD PTR [rsp+0x58]
   13c77:	mov    rdi,QWORD PTR [rsp+0x38]
   13c7c:	mov    DWORD PTR [rax+rcx*4],0x1
   13c83:	mov    edx,ebx
   13c85:	lea    rcx,[rsp+0x70]
   13c8a:	mov    rsi,r14
   13c8d:	call   12870 <add_3f_force_to_mom>
   13c92:	mov    rbp,QWORD PTR [rsp+0x160]
   13c9a:	mov    edx,DWORD PTR [rsp+0x60]
   13c9e:	mov    rdi,r14
   13ca1:	mov    rsi,rbp
   13ca4:	call   12540 <u_shift_hw_fermion>
   13ca9:	mov    r12,QWORD PTR [rsp+0x30]
   13cae:	mov    edx,ebx
   13cb0:	mov    rsi,rbp
   13cb3:	lea    rcx,[rsp+0xd0]
   13cbb:	mov    rdi,r12
   13cbe:	call   12870 <add_3f_force_to_mom>
   13cc3:	mov    edx,ebx
   13cc5:	mov    rsi,rbp
   13cc8:	mov    rdi,r12
   13ccb:	call   12540 <u_shift_hw_fermion>
   13cd0:	mov    edx,ebx
   13cd2:	mov    rsi,r14
   13cd5:	mov    rdi,rbp
   13cd8:	lea    rcx,[rsp+0x90]
   13ce0:	call   12870 <add_3f_force_to_mom>
   13ce5:	jmp    13668 <eo_fermion_force_3f+0x308>
   13cea:	call   2350 <__stack_chk_fail@plt>
   13cef:	nop

0000000000013cf0 <phaseset>:
   13cf0:	endbr64 
   13cf4:	mov    edx,DWORD PTR [rip+0xe806]        # 22500 <sites_on_node>
   13cfa:	mov    rax,QWORD PTR [rip+0xeac7]        # 227c8 <lattice>
   13d01:	test   edx,edx
   13d03:	jle    13ddc <phaseset+0xec>
   13d09:	lea    esi,[rdx-0x1]
   13d0c:	mov    edi,DWORD PTR [rip+0xe6be]        # 223d0 <nt>
   13d12:	movsd  xmm2,QWORD PTR [rip+0x8896]        # 1c5b0 <loop_ind.5567+0x50>
   13d1a:	movq   xmm3,QWORD PTR [rip+0x695e]        # 1a680 <_IO_stdin_used+0x680>
   13d22:	add    rsi,0x1
   13d26:	movsd  xmm1,QWORD PTR [rip+0x6572]        # 1a2a0 <_IO_stdin_used+0x2a0>
   13d2e:	shl    rsi,0xb
   13d32:	sub    edi,0x1
   13d35:	movapd xmm4,xmm2
   13d39:	add    rsi,rax
   13d3c:	movapd xmm5,xmm3
   13d40:	movsx  ecx,WORD PTR [rax+0x6]
   13d44:	movsd  QWORD PTR [rax+0x408],xmm1
   13d4c:	movapd xmm0,xmm2
   13d50:	mov    r8d,ecx
   13d53:	shr    r8w,0xf
   13d58:	lea    edx,[rcx+r8*1]
   13d5c:	and    edx,0x1
   13d5f:	sub    edx,r8d
   13d62:	cmp    dx,0x1
   13d66:	je     13d6c <phaseset+0x7c>
   13d68:	movapd xmm0,xmm1
   13d6c:	movzx  edx,WORD PTR [rax]
   13d6f:	movsd  QWORD PTR [rax+0x3f0],xmm0
   13d77:	mov    r8d,edx
   13d7a:	shr    r8w,0xf
   13d7f:	add    edx,r8d
   13d82:	and    edx,0x1
   13d85:	sub    edx,r8d
   13d88:	cmp    dx,0x1
   13d8c:	jne    13d92 <phaseset+0xa2>
   13d8e:	xorpd  xmm0,xmm3
   13d92:	movzx  edx,WORD PTR [rax+0x2]
   13d96:	movsd  QWORD PTR [rax+0x3f8],xmm0
   13d9e:	mov    r8d,edx
   13da1:	shr    r8w,0xf
   13da6:	add    edx,r8d
   13da9:	and    edx,0x1
   13dac:	sub    edx,r8d
   13daf:	cmp    dx,0x1
   13db3:	jne    13db9 <phaseset+0xc9>
   13db5:	xorpd  xmm0,xmm5
   13db9:	movsd  QWORD PTR [rax+0x400],xmm0
   13dc1:	cmp    ecx,edi
   13dc3:	jne    13dcd <phaseset+0xdd>
   13dc5:	movsd  QWORD PTR [rax+0x408],xmm4
   13dcd:	add    rax,0x800
   13dd3:	cmp    rsi,rax
   13dd6:	jne    13d40 <phaseset+0x50>
   13ddc:	ret    
   13ddd:	nop    DWORD PTR [rax]

0000000000013de0 <rephase>:
   13de0:	endbr64 
   13de4:	push   rbx
   13de5:	mov    ebx,edi
   13de7:	cmp    edi,0x1
   13dea:	je     13ebe <rephase+0xde>
   13df0:	test   edi,edi
   13df2:	jne    13dfd <rephase+0x1d>
   13df4:	cmp    DWORD PTR [rip+0xe5e9],0x1        # 223e4 <phases_in>
   13dfb:	je     13e15 <rephase+0x35>
   13dfd:	mov    eax,DWORD PTR [rip+0xeae1]        # 228e4 <this_node>
   13e03:	test   eax,eax
   13e05:	je     13ead <rephase+0xcd>
   13e0b:	mov    edi,0x1
   13e10:	call   19570 <terminate>
   13e15:	mov    eax,DWORD PTR [rip+0xe6e5]        # 22500 <sites_on_node>
   13e1b:	mov    r9,QWORD PTR [rip+0xe9a6]        # 227c8 <lattice>
   13e22:	test   eax,eax
   13e24:	jle    13ea5 <rephase+0xc5>
   13e26:	lea    r10d,[rax-0x1]
   13e2a:	add    r10,0x1
   13e2e:	shl    r10,0xb
   13e32:	add    r10,r9
   13e35:	nop    DWORD PTR [rax]
   13e38:	lea    r8,[r9+0x3f0]
   13e3f:	xor    edi,edi
   13e41:	movsd  xmm0,QWORD PTR [r8]
   13e46:	lea    rsi,[r9+rdi*1]
   13e4a:	mov    ecx,0x3
   13e4f:	mov    rax,rsi
   13e52:	mov    edx,0x3
   13e57:	movsd  xmm1,QWORD PTR [rax+0x70]
   13e5c:	add    rax,0x10
   13e60:	mulsd  xmm1,xmm0
   13e64:	movsd  QWORD PTR [rax+0x60],xmm1
   13e69:	movsd  xmm1,QWORD PTR [rax+0x68]
   13e6e:	mulsd  xmm1,xmm0
   13e72:	movsd  QWORD PTR [rax+0x68],xmm1
   13e77:	sub    edx,0x1
   13e7a:	jne    13e57 <rephase+0x77>
   13e7c:	add    rsi,0x30
   13e80:	sub    ecx,0x1
   13e83:	jne    13e4f <rephase+0x6f>
   13e85:	add    rdi,0x90
   13e8c:	add    r8,0x8
   13e90:	cmp    rdi,0x240
   13e97:	jne    13e41 <rephase+0x61>
   13e99:	add    r9,0x800
   13ea0:	cmp    r9,r10
   13ea3:	jne    13e38 <rephase+0x58>
   13ea5:	mov    DWORD PTR [rip+0xe539],ebx        # 223e4 <phases_in>
   13eab:	pop    rbx
   13eac:	ret    
   13ead:	lea    rdi,[rip+0x88dc]        # 1c790 <path_length_in+0x20>
   13eb4:	call   22f0 <puts@plt>
   13eb9:	jmp    13e0b <rephase+0x2b>
   13ebe:	mov    edx,DWORD PTR [rip+0xe520]        # 223e4 <phases_in>
   13ec4:	test   edx,edx
   13ec6:	je     13e15 <rephase+0x35>
   13ecc:	mov    eax,DWORD PTR [rip+0xea12]        # 228e4 <this_node>
   13ed2:	test   eax,eax
   13ed4:	jne    13e0b <rephase+0x2b>
   13eda:	jmp    13ead <rephase+0xcd>
   13edc:	nop    DWORD PTR [rax+0x0]

0000000000013ee0 <cmplx>:
   13ee0:	endbr64 
   13ee4:	ret    
   13ee5:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13eef:	nop

0000000000013ef0 <add_su3_matrix>:
   13ef0:	endbr64 
   13ef4:	mov    ecx,0x30
   13ef9:	lea    rax,[rcx-0x30]
   13efd:	movsd  xmm0,QWORD PTR [rdi+rax*1]
   13f02:	addsd  xmm0,QWORD PTR [rsi+rax*1]
   13f07:	movsd  QWORD PTR [rdx+rax*1],xmm0
   13f0c:	movsd  xmm0,QWORD PTR [rdi+rax*1+0x8]
   13f12:	addsd  xmm0,QWORD PTR [rsi+rax*1+0x8]
   13f18:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm0
   13f1e:	add    rax,0x10
   13f22:	cmp    rax,rcx
   13f25:	jne    13efd <add_su3_matrix+0xd>
   13f27:	lea    rcx,[rax+0x30]
   13f2b:	cmp    rax,0x90
   13f31:	jne    13ef9 <add_su3_matrix+0x9>
   13f33:	ret    
   13f34:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13f3e:	xchg   ax,ax

0000000000013f40 <add_su3_vector>:
   13f40:	endbr64 
   13f44:	xor    eax,eax
   13f46:	movsd  xmm0,QWORD PTR [rdi+rax*1]
   13f4b:	addsd  xmm0,QWORD PTR [rsi+rax*1]
   13f50:	movsd  QWORD PTR [rdx+rax*1],xmm0
   13f55:	movsd  xmm0,QWORD PTR [rdi+rax*1+0x8]
   13f5b:	addsd  xmm0,QWORD PTR [rsi+rax*1+0x8]
   13f61:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm0
   13f67:	add    rax,0x10
   13f6b:	cmp    rax,0x30
   13f6f:	jne    13f46 <add_su3_vector+0x6>
   13f71:	ret    
   13f72:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13f7c:	nop    DWORD PTR [rax+0x0]

0000000000013f80 <clear_su3mat>:
   13f80:	endbr64 
   13f84:	lea    rax,[rdi+0x90]
   13f8b:	mov    QWORD PTR [rdi+0x8],0x0
   13f93:	add    rdi,0x30
   13f97:	mov    QWORD PTR [rdi-0x30],0x0
   13f9f:	mov    QWORD PTR [rdi-0x18],0x0
   13fa7:	mov    QWORD PTR [rdi-0x20],0x0
   13faf:	mov    QWORD PTR [rdi-0x8],0x0
   13fb7:	mov    QWORD PTR [rdi-0x10],0x0
   13fbf:	cmp    rdi,rax
   13fc2:	jne    13f8b <clear_su3mat+0xb>
   13fc4:	ret    
   13fc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13fcf:	nop

0000000000013fd0 <clearvec>:
   13fd0:	endbr64 
   13fd4:	mov    QWORD PTR [rdi+0x8],0x0
   13fdc:	mov    QWORD PTR [rdi],0x0
   13fe3:	mov    QWORD PTR [rdi+0x18],0x0
   13feb:	mov    QWORD PTR [rdi+0x10],0x0
   13ff3:	mov    QWORD PTR [rdi+0x28],0x0
   13ffb:	mov    QWORD PTR [rdi+0x20],0x0
   14003:	ret    
   14004:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1400e:	xchg   ax,ax

0000000000014010 <mult_adj_su3_mat_vec>:
   14010:	endbr64 
   14014:	lea    rax,[rdi+0x30]
   14018:	movsd  xmm1,QWORD PTR [rdi]
   1401c:	movsd  xmm6,QWORD PTR [rsi]
   14020:	add    rdi,0x10
   14024:	add    rdx,0x10
   14028:	movsd  xmm3,QWORD PTR [rdi-0x8]
   1402d:	movsd  xmm0,QWORD PTR [rsi+0x8]
   14032:	movapd xmm4,xmm1
   14036:	movsd  xmm2,QWORD PTR [rsi+0x10]
   1403b:	mulsd  xmm4,xmm6
   1403f:	movapd xmm5,xmm3
   14043:	mulsd  xmm5,xmm0
   14047:	mulsd  xmm0,xmm1
   1404b:	movsd  xmm1,QWORD PTR [rdi+0x20]
   14050:	mulsd  xmm3,xmm6
   14054:	movsd  xmm6,QWORD PTR [rsi+0x18]
   14059:	addsd  xmm4,xmm5
   1405d:	movapd xmm5,xmm1
   14061:	mulsd  xmm5,xmm2
   14065:	mulsd  xmm1,xmm6
   14069:	subsd  xmm0,xmm3
   1406d:	movsd  xmm3,QWORD PTR [rdi+0x28]
   14072:	addsd  xmm5,xmm4
   14076:	movapd xmm4,xmm3
   1407a:	mulsd  xmm4,xmm6
   1407e:	addsd  xmm0,xmm1
   14082:	movsd  xmm6,QWORD PTR [rsi+0x20]
   14087:	mulsd  xmm3,xmm2
   1408b:	movsd  xmm2,QWORD PTR [rsi+0x28]
   14090:	movapd xmm1,xmm0
   14094:	movsd  xmm0,QWORD PTR [rdi+0x50]
   14099:	addsd  xmm5,xmm4
   1409d:	movapd xmm4,xmm0
   140a1:	mulsd  xmm4,xmm6
   140a5:	subsd  xmm1,xmm3
   140a9:	movsd  xmm3,QWORD PTR [rdi+0x58]
   140ae:	mulsd  xmm0,xmm2
   140b2:	mulsd  xmm2,xmm3
   140b6:	mulsd  xmm3,xmm6
   140ba:	addsd  xmm4,xmm5
   140be:	addsd  xmm0,xmm1
   140c2:	addsd  xmm2,xmm4
   140c6:	subsd  xmm0,xmm3
   140ca:	movsd  QWORD PTR [rdx-0x10],xmm2
   140cf:	movsd  QWORD PTR [rdx-0x8],xmm0
   140d4:	cmp    rax,rdi
   140d7:	jne    14018 <mult_adj_su3_mat_vec+0x8>
   140dd:	ret    
   140de:	xchg   ax,ax

00000000000140e0 <mult_su3_an>:
   140e0:	endbr64 
   140e4:	lea    rax,[rsi+0x30]
   140e8:	movsd  xmm2,QWORD PTR [rdi]
   140ec:	movsd  xmm10,QWORD PTR [rdi+0x8]
   140f2:	add    rsi,0x10
   140f6:	add    rdx,0x10
   140fa:	movsd  xmm11,QWORD PTR [rsi-0x10]
   14100:	movsd  xmm12,QWORD PTR [rsi-0x8]
   14106:	movapd xmm0,xmm2
   1410a:	movapd xmm13,xmm10
   1410f:	movsd  xmm5,QWORD PTR [rsi+0x20]
   14114:	movsd  xmm9,QWORD PTR [rdi+0x30]
   1411a:	mulsd  xmm13,xmm12
   1411f:	movsd  xmm8,QWORD PTR [rdi+0x38]
   14125:	movsd  xmm6,QWORD PTR [rsi+0x28]
   1412a:	mulsd  xmm0,xmm11
   1412f:	movsd  xmm7,QWORD PTR [rdi+0x60]
   14134:	movsd  xmm3,QWORD PTR [rsi+0x50]
   14139:	mulsd  xmm10,xmm11
   1413e:	movsd  xmm4,QWORD PTR [rsi+0x58]
   14143:	movsd  xmm1,QWORD PTR [rdi+0x68]
   14148:	mulsd  xmm2,xmm12
   1414d:	addsd  xmm0,xmm13
   14152:	movapd xmm13,xmm9
   14157:	mulsd  xmm13,xmm5
   1415c:	mulsd  xmm9,xmm6
   14161:	subsd  xmm2,xmm10
   14166:	addsd  xmm0,xmm13
   1416b:	movapd xmm13,xmm8
   14170:	mulsd  xmm13,xmm6
   14175:	addsd  xmm2,xmm9
   1417a:	mulsd  xmm8,xmm5
   1417f:	addsd  xmm0,xmm13
   14184:	movapd xmm13,xmm7
   14189:	mulsd  xmm13,xmm3
   1418e:	subsd  xmm2,xmm8
   14193:	mulsd  xmm7,xmm4
   14197:	addsd  xmm0,xmm13
   1419c:	movapd xmm13,xmm1
   141a1:	mulsd  xmm13,xmm4
   141a6:	addsd  xmm2,xmm7
   141aa:	mulsd  xmm1,xmm3
   141ae:	addsd  xmm0,xmm13
   141b3:	subsd  xmm2,xmm1
   141b7:	movsd  QWORD PTR [rdx-0x10],xmm0
   141bc:	movsd  QWORD PTR [rdx-0x8],xmm2
   141c1:	movsd  xmm1,QWORD PTR [rdi+0x10]
   141c6:	movsd  xmm12,QWORD PTR [rdi+0x18]
   141cc:	movsd  xmm2,QWORD PTR [rsi-0x10]
   141d1:	movsd  xmm0,QWORD PTR [rsi-0x8]
   141d6:	movapd xmm7,xmm1
   141da:	movapd xmm13,xmm12
   141df:	movsd  xmm11,QWORD PTR [rdi+0x40]
   141e5:	movsd  xmm10,QWORD PTR [rdi+0x48]
   141eb:	mulsd  xmm7,xmm2
   141ef:	movsd  xmm9,QWORD PTR [rdi+0x70]
   141f5:	movsd  xmm8,QWORD PTR [rdi+0x78]
   141fb:	mulsd  xmm13,xmm0
   14200:	mulsd  xmm12,xmm2
   14205:	mulsd  xmm1,xmm0
   14209:	addsd  xmm7,xmm13
   1420e:	movapd xmm13,xmm5
   14213:	mulsd  xmm13,xmm11
   14218:	subsd  xmm1,xmm12
   1421d:	mulsd  xmm5,xmm10
   14222:	addsd  xmm7,xmm13
   14227:	movapd xmm13,xmm6
   1422c:	mulsd  xmm13,xmm10
   14231:	mulsd  xmm6,xmm11
   14236:	addsd  xmm7,xmm13
   1423b:	movapd xmm13,xmm3
   14240:	mulsd  xmm13,xmm9
   14245:	addsd  xmm1,xmm6
   14249:	mulsd  xmm9,xmm4
   1424e:	subsd  xmm1,xmm5
   14252:	addsd  xmm7,xmm13
   14257:	movapd xmm13,xmm4
   1425c:	mulsd  xmm13,xmm8
   14261:	addsd  xmm1,xmm9
   14266:	mulsd  xmm8,xmm3
   1426b:	addsd  xmm7,xmm13
   14270:	movapd xmm13,xmm0
   14275:	subsd  xmm1,xmm8
   1427a:	movsd  QWORD PTR [rdx+0x20],xmm7
   1427f:	movsd  QWORD PTR [rdx+0x28],xmm1
   14284:	movsd  xmm12,QWORD PTR [rdi+0x20]
   1428a:	movsd  xmm11,QWORD PTR [rdi+0x28]
   14290:	movapd xmm1,xmm2
   14294:	movsd  xmm6,QWORD PTR [rdi+0x50]
   14299:	movsd  xmm9,QWORD PTR [rsi+0x20]
   1429f:	mulsd  xmm13,xmm11
   142a4:	movsd  xmm5,QWORD PTR [rdi+0x58]
   142a9:	movsd  xmm10,QWORD PTR [rsi+0x28]
   142af:	mulsd  xmm1,xmm12
   142b4:	movsd  xmm8,QWORD PTR [rdi+0x80]
   142bd:	movsd  xmm7,QWORD PTR [rdi+0x88]
   142c5:	mulsd  xmm0,xmm12
   142ca:	mulsd  xmm2,xmm11
   142cf:	addsd  xmm1,xmm13
   142d4:	movapd xmm13,xmm6
   142d9:	mulsd  xmm13,xmm9
   142de:	mulsd  xmm6,xmm10
   142e3:	subsd  xmm0,xmm2
   142e7:	addsd  xmm1,xmm13
   142ec:	movapd xmm13,xmm5
   142f1:	mulsd  xmm13,xmm10
   142f6:	addsd  xmm0,xmm6
   142fa:	mulsd  xmm5,xmm9
   142ff:	addsd  xmm1,xmm13
   14304:	movapd xmm13,xmm3
   14309:	mulsd  xmm13,xmm8
   1430e:	subsd  xmm0,xmm5
   14312:	mulsd  xmm3,xmm7
   14316:	addsd  xmm1,xmm13
   1431b:	movapd xmm13,xmm4
   14320:	mulsd  xmm4,xmm8
   14325:	mulsd  xmm13,xmm7
   1432a:	addsd  xmm0,xmm4
   1432e:	addsd  xmm1,xmm13
   14333:	subsd  xmm0,xmm3
   14337:	movsd  QWORD PTR [rdx+0x50],xmm1
   1433c:	movsd  QWORD PTR [rdx+0x58],xmm0
   14341:	cmp    rax,rsi
   14344:	jne    140e8 <mult_su3_an+0x8>
   1434a:	ret    
   1434b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000014350 <mult_su3_na>:
   14350:	endbr64 
   14354:	lea    r9,[rdi+0x90]
   1435b:	lea    r8,[rsi+0x90]
   14362:	mov    rax,rsi
   14365:	mov    rcx,rdx
   14368:	movsd  xmm3,QWORD PTR [rdi]
   1436c:	movsd  xmm1,QWORD PTR [rax]
   14370:	add    rax,0x30
   14374:	add    rcx,0x10
   14378:	movsd  xmm6,QWORD PTR [rax-0x28]
   1437d:	movsd  xmm0,QWORD PTR [rdi+0x8]
   14382:	movapd xmm4,xmm3
   14386:	movsd  xmm2,QWORD PTR [rax-0x20]
   1438b:	mulsd  xmm3,xmm6
   1438f:	movapd xmm5,xmm0
   14393:	mulsd  xmm4,xmm1
   14397:	mulsd  xmm1,xmm0
   1439b:	movsd  xmm0,QWORD PTR [rdi+0x18]
   143a0:	mulsd  xmm5,xmm6
   143a4:	movsd  xmm6,QWORD PTR [rax-0x18]
   143a9:	subsd  xmm1,xmm3
   143ad:	movsd  xmm3,QWORD PTR [rdi+0x10]
   143b2:	addsd  xmm4,xmm5
   143b6:	movapd xmm5,xmm3
   143ba:	mulsd  xmm5,xmm2
   143be:	mulsd  xmm3,xmm6
   143c2:	addsd  xmm5,xmm4
   143c6:	movapd xmm4,xmm0
   143ca:	mulsd  xmm4,xmm6
   143ce:	subsd  xmm1,xmm3
   143d2:	movsd  xmm3,QWORD PTR [rdi+0x20]
   143d7:	movsd  xmm6,QWORD PTR [rax-0x10]
   143dc:	mulsd  xmm0,xmm2
   143e0:	movsd  xmm2,QWORD PTR [rax-0x8]
   143e5:	addsd  xmm5,xmm4
   143e9:	movapd xmm4,xmm3
   143ed:	mulsd  xmm4,xmm6
   143f1:	addsd  xmm0,xmm1
   143f5:	movsd  xmm1,QWORD PTR [rdi+0x28]
   143fa:	mulsd  xmm3,xmm2
   143fe:	mulsd  xmm2,xmm1
   14402:	mulsd  xmm1,xmm6
   14406:	addsd  xmm4,xmm5
   1440a:	subsd  xmm0,xmm3
   1440e:	addsd  xmm2,xmm4
   14412:	addsd  xmm0,xmm1
   14416:	movsd  QWORD PTR [rcx-0x10],xmm2
   1441b:	movsd  QWORD PTR [rcx-0x8],xmm0
   14420:	cmp    r8,rax
   14423:	jne    14368 <mult_su3_na+0x18>
   14429:	add    rdi,0x30
   1442d:	add    rdx,0x30
   14431:	cmp    r9,rdi
   14434:	jne    14362 <mult_su3_na+0x12>
   1443a:	ret    
   1443b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000014440 <mult_su3_nn>:
   14440:	endbr64 
   14444:	lea    r9,[rdi+0x90]
   1444b:	lea    r8,[rsi+0x30]
   1444f:	mov    rax,rsi
   14452:	mov    rcx,rdx
   14455:	movsd  xmm0,QWORD PTR [rdi]
   14459:	movsd  xmm1,QWORD PTR [rax]
   1445d:	add    rax,0x10
   14461:	add    rcx,0x10
   14465:	movsd  xmm4,QWORD PTR [rdi+0x8]
   1446a:	movsd  xmm2,QWORD PTR [rax-0x8]
   1446f:	movapd xmm5,xmm0
   14473:	movsd  xmm6,QWORD PTR [rax+0x28]
   14478:	mulsd  xmm5,xmm1
   1447c:	movapd xmm3,xmm4
   14480:	mulsd  xmm3,xmm2
   14484:	mulsd  xmm0,xmm2
   14488:	movsd  xmm2,QWORD PTR [rdi+0x18]
   1448d:	mulsd  xmm1,xmm4
   14491:	subsd  xmm5,xmm3
   14495:	movsd  xmm3,QWORD PTR [rdi+0x10]
   1449a:	addsd  xmm1,xmm0
   1449e:	movsd  xmm0,QWORD PTR [rax+0x20]
   144a3:	movapd xmm4,xmm3
   144a7:	mulsd  xmm3,xmm6
   144ab:	mulsd  xmm4,xmm0
   144af:	addsd  xmm1,xmm3
   144b3:	addsd  xmm4,xmm5
   144b7:	movapd xmm5,xmm2
   144bb:	mulsd  xmm2,xmm0
   144bf:	movsd  xmm0,QWORD PTR [rdi+0x28]
   144c4:	mulsd  xmm5,xmm6
   144c8:	movsd  xmm6,QWORD PTR [rax+0x50]
   144cd:	addsd  xmm2,xmm1
   144d1:	movsd  xmm1,QWORD PTR [rdi+0x20]
   144d6:	subsd  xmm4,xmm5
   144da:	movsd  xmm5,QWORD PTR [rax+0x58]
   144df:	movapd xmm3,xmm1
   144e3:	mulsd  xmm3,xmm6
   144e7:	mulsd  xmm1,xmm5
   144eb:	mulsd  xmm5,xmm0
   144ef:	mulsd  xmm0,xmm6
   144f3:	addsd  xmm3,xmm4
   144f7:	addsd  xmm1,xmm2
   144fb:	movapd xmm2,xmm3
   144ff:	subsd  xmm2,xmm5
   14503:	addsd  xmm0,xmm1
   14507:	movsd  QWORD PTR [rcx-0x10],xmm2
   1450c:	movsd  QWORD PTR [rcx-0x8],xmm0
   14511:	cmp    r8,rax
   14514:	jne    14455 <mult_su3_nn+0x15>
   1451a:	add    rdi,0x30
   1451e:	add    rdx,0x30
   14522:	cmp    r9,rdi
   14525:	jne    1444f <mult_su3_nn+0xf>
   1452b:	ret    
   1452c:	nop    DWORD PTR [rax+0x0]

0000000000014530 <mult_su3_mat_vec>:
   14530:	endbr64 
   14534:	lea    rax,[rdi+0x90]
   1453b:	movsd  xmm0,QWORD PTR [rdi]
   1453f:	movsd  xmm1,QWORD PTR [rsi]
   14543:	add    rdi,0x30
   14547:	add    rdx,0x10
   1454b:	movsd  xmm4,QWORD PTR [rdi-0x28]
   14550:	movsd  xmm2,QWORD PTR [rsi+0x8]
   14555:	movapd xmm5,xmm0
   14559:	movsd  xmm6,QWORD PTR [rsi+0x18]
   1455e:	mulsd  xmm5,xmm1
   14562:	movapd xmm3,xmm4
   14566:	mulsd  xmm3,xmm2
   1456a:	mulsd  xmm0,xmm2
   1456e:	movsd  xmm2,QWORD PTR [rdi-0x18]
   14573:	mulsd  xmm1,xmm4
   14577:	subsd  xmm5,xmm3
   1457b:	movsd  xmm3,QWORD PTR [rdi-0x20]
   14580:	addsd  xmm1,xmm0
   14584:	movsd  xmm0,QWORD PTR [rsi+0x10]
   14589:	movapd xmm4,xmm3
   1458d:	mulsd  xmm3,xmm6
   14591:	mulsd  xmm4,xmm0
   14595:	addsd  xmm1,xmm3
   14599:	addsd  xmm4,xmm5
   1459d:	movapd xmm5,xmm2
   145a1:	mulsd  xmm2,xmm0
   145a5:	movsd  xmm0,QWORD PTR [rdi-0x8]
   145aa:	mulsd  xmm5,xmm6
   145ae:	movsd  xmm6,QWORD PTR [rsi+0x20]
   145b3:	addsd  xmm2,xmm1
   145b7:	movsd  xmm1,QWORD PTR [rdi-0x10]
   145bc:	subsd  xmm4,xmm5
   145c0:	movsd  xmm5,QWORD PTR [rsi+0x28]
   145c5:	movapd xmm3,xmm1
   145c9:	mulsd  xmm3,xmm6
   145cd:	mulsd  xmm1,xmm5
   145d1:	mulsd  xmm5,xmm0
   145d5:	mulsd  xmm0,xmm6
   145d9:	addsd  xmm3,xmm4
   145dd:	addsd  xmm1,xmm2
   145e1:	movapd xmm2,xmm3
   145e5:	subsd  xmm2,xmm5
   145e9:	addsd  xmm0,xmm1
   145ed:	movsd  QWORD PTR [rdx-0x10],xmm2
   145f2:	movsd  QWORD PTR [rdx-0x8],xmm0
   145f7:	cmp    rax,rdi
   145fa:	jne    1453b <mult_su3_mat_vec+0xb>
   14600:	ret    
   14601:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1460b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000014610 <make_anti_hermitian>:
   14610:	endbr64 
   14614:	movsd  xmm3,QWORD PTR [rdi+0x8]
   14619:	movsd  xmm2,QWORD PTR [rdi+0x48]
   1461e:	movsd  xmm1,QWORD PTR [rdi+0x88]
   14626:	movapd xmm0,xmm3
   1462a:	addsd  xmm0,xmm2
   1462e:	addsd  xmm0,xmm1
   14632:	mulsd  xmm0,QWORD PTR [rip+0x8176]        # 1c7b0 <path_length_in+0x40>
   1463a:	subsd  xmm1,xmm0
   1463e:	subsd  xmm3,xmm0
   14642:	subsd  xmm2,xmm0
   14646:	movsd  xmm0,QWORD PTR [rip+0x5e22]        # 1a470 <_IO_stdin_used+0x470>
   1464e:	movsd  QWORD PTR [rsi+0x40],xmm1
   14653:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14658:	subsd  xmm1,QWORD PTR [rdi+0x30]
   1465d:	movsd  QWORD PTR [rsi+0x30],xmm3
   14662:	movsd  QWORD PTR [rsi+0x38],xmm2
   14667:	mulsd  xmm1,xmm0
   1466b:	movsd  QWORD PTR [rsi],xmm1
   1466f:	movsd  xmm1,QWORD PTR [rdi+0x20]
   14674:	subsd  xmm1,QWORD PTR [rdi+0x60]
   14679:	mulsd  xmm1,xmm0
   1467d:	movsd  QWORD PTR [rsi+0x10],xmm1
   14682:	movsd  xmm1,QWORD PTR [rdi+0x50]
   14687:	subsd  xmm1,QWORD PTR [rdi+0x70]
   1468c:	mulsd  xmm1,xmm0
   14690:	movsd  QWORD PTR [rsi+0x20],xmm1
   14695:	movsd  xmm1,QWORD PTR [rdi+0x18]
   1469a:	addsd  xmm1,QWORD PTR [rdi+0x38]
   1469f:	mulsd  xmm1,xmm0
   146a3:	movsd  QWORD PTR [rsi+0x8],xmm1
   146a8:	movsd  xmm1,QWORD PTR [rdi+0x28]
   146ad:	addsd  xmm1,QWORD PTR [rdi+0x68]
   146b2:	mulsd  xmm1,xmm0
   146b6:	movsd  QWORD PTR [rsi+0x18],xmm1
   146bb:	movsd  xmm1,QWORD PTR [rdi+0x58]
   146c0:	addsd  xmm1,QWORD PTR [rdi+0x78]
   146c5:	mulsd  xmm0,xmm1
   146c9:	movsd  QWORD PTR [rsi+0x28],xmm0
   146ce:	ret    
   146cf:	nop

00000000000146d0 <random_anti_hermitian>:
   146d0:	endbr64 
   146d4:	push   rbp
   146d5:	mov    rbp,rsi
   146d8:	push   rbx
   146d9:	mov    rbx,rdi
   146dc:	mov    rdi,rsi
   146df:	sub    rsp,0x18
   146e3:	call   15830 <gaussian_rand_no>
   146e8:	mov    rdi,rbp
   146eb:	movsd  QWORD PTR [rsp+0x8],xmm0
   146f1:	call   15830 <gaussian_rand_no>
   146f6:	movsd  xmm1,QWORD PTR [rip+0x80ba]        # 1c7b8 <path_length_in+0x48>
   146fe:	movsd  xmm2,QWORD PTR [rsp+0x8]
   14704:	mov    rdi,rbp
   14707:	mulsd  xmm1,xmm0
   1470b:	mulsd  xmm0,QWORD PTR [rip+0x80ad]        # 1c7c0 <path_length_in+0x50>
   14713:	movapd xmm3,xmm1
   14717:	subsd  xmm1,xmm2
   1471b:	addsd  xmm3,xmm2
   1471f:	movsd  QWORD PTR [rbx+0x40],xmm0
   14724:	movsd  QWORD PTR [rbx+0x38],xmm1
   14729:	movsd  QWORD PTR [rbx+0x30],xmm3
   1472e:	call   15830 <gaussian_rand_no>
   14733:	mov    rdi,rbp
   14736:	movsd  QWORD PTR [rbx],xmm0
   1473a:	call   15830 <gaussian_rand_no>
   1473f:	mov    rdi,rbp
   14742:	movsd  QWORD PTR [rbx+0x10],xmm0
   14747:	call   15830 <gaussian_rand_no>
   1474c:	mov    rdi,rbp
   1474f:	movsd  QWORD PTR [rbx+0x20],xmm0
   14754:	call   15830 <gaussian_rand_no>
   14759:	mov    rdi,rbp
   1475c:	movsd  QWORD PTR [rbx+0x8],xmm0
   14761:	call   15830 <gaussian_rand_no>
   14766:	mov    rdi,rbp
   14769:	movsd  QWORD PTR [rbx+0x18],xmm0
   1476e:	call   15830 <gaussian_rand_no>
   14773:	movsd  QWORD PTR [rbx+0x28],xmm0
   14778:	add    rsp,0x18
   1477c:	pop    rbx
   1477d:	pop    rbp
   1477e:	ret    
   1477f:	nop

0000000000014780 <realtrace_su3>:
   14780:	endbr64 
   14784:	mov    edx,0x30
   14789:	pxor   xmm2,xmm2
   1478d:	lea    rax,[rdx-0x30]
   14791:	movsd  xmm0,QWORD PTR [rdi+rax*1]
   14796:	movsd  xmm1,QWORD PTR [rdi+rax*1+0x8]
   1479c:	mulsd  xmm0,QWORD PTR [rsi+rax*1]
   147a1:	mulsd  xmm1,QWORD PTR [rsi+rax*1+0x8]
   147a7:	add    rax,0x10
   147ab:	addsd  xmm0,xmm1
   147af:	addsd  xmm2,xmm0
   147b3:	cmp    rdx,rax
   147b6:	jne    14791 <realtrace_su3+0x11>
   147b8:	add    rdx,0x30
   147bc:	cmp    rdx,0xc0
   147c3:	jne    1478d <realtrace_su3+0xd>
   147c5:	movapd xmm0,xmm2
   147c9:	ret    
   147ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000147d0 <scalar_mult_add_su3_matrix>:
   147d0:	endbr64 
   147d4:	mov    ecx,0x30
   147d9:	lea    rax,[rcx-0x30]
   147dd:	movsd  xmm1,QWORD PTR [rsi+rax*1]
   147e2:	mulsd  xmm1,xmm0
   147e6:	addsd  xmm1,QWORD PTR [rdi+rax*1]
   147eb:	movsd  QWORD PTR [rdx+rax*1],xmm1
   147f0:	movsd  xmm1,QWORD PTR [rsi+rax*1+0x8]
   147f6:	mulsd  xmm1,xmm0
   147fa:	addsd  xmm1,QWORD PTR [rdi+rax*1+0x8]
   14800:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm1
   14806:	add    rax,0x10
   1480a:	cmp    rcx,rax
   1480d:	jne    147dd <scalar_mult_add_su3_matrix+0xd>
   1480f:	add    rcx,0x30
   14813:	cmp    rcx,0xc0
   1481a:	jne    147d9 <scalar_mult_add_su3_matrix+0x9>
   1481c:	ret    
   1481d:	nop    DWORD PTR [rax]

0000000000014820 <scalar_mult_add_su3_vector>:
   14820:	endbr64 
   14824:	xor    eax,eax
   14826:	movsd  xmm1,QWORD PTR [rsi+rax*1]
   1482b:	mulsd  xmm1,xmm0
   1482f:	addsd  xmm1,QWORD PTR [rdi+rax*1]
   14834:	movsd  QWORD PTR [rdx+rax*1],xmm1
   14839:	movsd  xmm1,QWORD PTR [rsi+rax*1+0x8]
   1483f:	mulsd  xmm1,xmm0
   14843:	addsd  xmm1,QWORD PTR [rdi+rax*1+0x8]
   14849:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm1
   1484f:	add    rax,0x10
   14853:	cmp    rax,0x30
   14857:	jne    14826 <scalar_mult_add_su3_vector+0x6>
   14859:	ret    
   1485a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000014860 <scalar_mult_sub_su3_matrix>:
   14860:	endbr64 
   14864:	mov    ecx,0x30
   14869:	lea    rax,[rcx-0x30]
   1486d:	movsd  xmm2,QWORD PTR [rsi+rax*1]
   14872:	movsd  xmm1,QWORD PTR [rdi+rax*1]
   14877:	mulsd  xmm2,xmm0
   1487b:	subsd  xmm1,xmm2
   1487f:	movsd  QWORD PTR [rdx+rax*1],xmm1
   14884:	movsd  xmm2,QWORD PTR [rsi+rax*1+0x8]
   1488a:	movsd  xmm1,QWORD PTR [rdi+rax*1+0x8]
   14890:	mulsd  xmm2,xmm0
   14894:	subsd  xmm1,xmm2
   14898:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm1
   1489e:	add    rax,0x10
   148a2:	cmp    rcx,rax
   148a5:	jne    1486d <scalar_mult_sub_su3_matrix+0xd>
   148a7:	add    rcx,0x30
   148ab:	cmp    rcx,0xc0
   148b2:	jne    14869 <scalar_mult_sub_su3_matrix+0x9>
   148b4:	ret    
   148b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
   148bf:	nop

00000000000148c0 <scalar_mult_su3_vector>:
   148c0:	endbr64 
   148c4:	xor    eax,eax
   148c6:	movsd  xmm1,QWORD PTR [rdi+rax*1]
   148cb:	mulsd  xmm1,xmm0
   148cf:	movsd  QWORD PTR [rsi+rax*1],xmm1
   148d4:	movsd  xmm1,QWORD PTR [rdi+rax*1+0x8]
   148da:	mulsd  xmm1,xmm0
   148de:	movsd  QWORD PTR [rsi+rax*1+0x8],xmm1
   148e4:	add    rax,0x10
   148e8:	cmp    rax,0x30
   148ec:	jne    148c6 <scalar_mult_su3_vector+0x6>
   148ee:	ret    
   148ef:	nop

00000000000148f0 <scalar_mult_su3_matrix>:
   148f0:	endbr64 
   148f4:	movsd  xmm1,QWORD PTR [rdi]
   148f8:	mulsd  xmm1,xmm0
   148fc:	movsd  QWORD PTR [rsi],xmm1
   14900:	movsd  xmm1,QWORD PTR [rdi+0x8]
   14905:	mulsd  xmm1,xmm0
   14909:	movsd  QWORD PTR [rsi+0x8],xmm1
   1490e:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14913:	mulsd  xmm1,xmm0
   14917:	movsd  QWORD PTR [rsi+0x10],xmm1
   1491c:	movsd  xmm1,QWORD PTR [rdi+0x18]
   14921:	mulsd  xmm1,xmm0
   14925:	movsd  QWORD PTR [rsi+0x18],xmm1
   1492a:	movsd  xmm1,QWORD PTR [rdi+0x20]
   1492f:	mulsd  xmm1,xmm0
   14933:	movsd  QWORD PTR [rsi+0x20],xmm1
   14938:	movsd  xmm1,QWORD PTR [rdi+0x28]
   1493d:	mulsd  xmm1,xmm0
   14941:	movsd  QWORD PTR [rsi+0x28],xmm1
   14946:	movsd  xmm1,QWORD PTR [rdi+0x30]
   1494b:	mulsd  xmm1,xmm0
   1494f:	movsd  QWORD PTR [rsi+0x30],xmm1
   14954:	movsd  xmm1,QWORD PTR [rdi+0x38]
   14959:	mulsd  xmm1,xmm0
   1495d:	movsd  QWORD PTR [rsi+0x38],xmm1
   14962:	movsd  xmm1,QWORD PTR [rdi+0x40]
   14967:	mulsd  xmm1,xmm0
   1496b:	movsd  QWORD PTR [rsi+0x40],xmm1
   14970:	movsd  xmm1,QWORD PTR [rdi+0x48]
   14975:	mulsd  xmm1,xmm0
   14979:	movsd  QWORD PTR [rsi+0x48],xmm1
   1497e:	movsd  xmm1,QWORD PTR [rdi+0x50]
   14983:	mulsd  xmm1,xmm0
   14987:	movsd  QWORD PTR [rsi+0x50],xmm1
   1498c:	movsd  xmm1,QWORD PTR [rdi+0x58]
   14991:	mulsd  xmm1,xmm0
   14995:	movsd  QWORD PTR [rsi+0x58],xmm1
   1499a:	movsd  xmm1,QWORD PTR [rdi+0x60]
   1499f:	mulsd  xmm1,xmm0
   149a3:	movsd  QWORD PTR [rsi+0x60],xmm1
   149a8:	movsd  xmm1,QWORD PTR [rdi+0x68]
   149ad:	mulsd  xmm1,xmm0
   149b1:	movsd  QWORD PTR [rsi+0x68],xmm1
   149b6:	movsd  xmm1,QWORD PTR [rdi+0x70]
   149bb:	mulsd  xmm1,xmm0
   149bf:	movsd  QWORD PTR [rsi+0x70],xmm1
   149c4:	movsd  xmm1,QWORD PTR [rdi+0x78]
   149c9:	mulsd  xmm1,xmm0
   149cd:	movsd  QWORD PTR [rsi+0x78],xmm1
   149d2:	movsd  xmm1,QWORD PTR [rdi+0x80]
   149da:	mulsd  xmm1,xmm0
   149de:	mulsd  xmm0,QWORD PTR [rdi+0x88]
   149e6:	movsd  QWORD PTR [rsi+0x80],xmm1
   149ee:	movsd  QWORD PTR [rsi+0x88],xmm0
   149f6:	ret    
   149f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000014a00 <su3_adjoint>:
   14a00:	endbr64 
   14a04:	movq   xmm1,QWORD PTR [rip+0x5c74]        # 1a680 <_IO_stdin_used+0x680>
   14a0c:	lea    rcx,[rdi+0x90]
   14a13:	add    rdi,0xc0
   14a1a:	lea    rax,[rcx-0x90]
   14a21:	mov    rdx,rsi
   14a24:	movsd  xmm0,QWORD PTR [rax]
   14a28:	add    rax,0x30
   14a2c:	add    rdx,0x10
   14a30:	movsd  QWORD PTR [rdx-0x10],xmm0
   14a35:	movsd  xmm0,QWORD PTR [rax-0x28]
   14a3a:	xorpd  xmm0,xmm1
   14a3e:	movsd  QWORD PTR [rdx-0x8],xmm0
   14a43:	cmp    rax,rcx
   14a46:	jne    14a24 <su3_adjoint+0x24>
   14a48:	lea    rcx,[rax+0x10]
   14a4c:	add    rsi,0x30
   14a50:	cmp    rcx,rdi
   14a53:	jne    14a1a <su3_adjoint+0x1a>
   14a55:	ret    
   14a56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014a60 <su3_dot>:
   14a60:	endbr64 
   14a64:	movsd  xmm1,QWORD PTR [rsi+0x8]
   14a69:	movsd  xmm2,QWORD PTR [rdi]
   14a6d:	movsd  xmm6,QWORD PTR [rsi]
   14a71:	movsd  xmm4,QWORD PTR [rdi+0x8]
   14a76:	movapd xmm3,xmm2
   14a7a:	movsd  xmm7,QWORD PTR [rsi+0x18]
   14a7f:	mulsd  xmm2,xmm1
   14a83:	movapd xmm5,xmm4
   14a87:	mulsd  xmm4,xmm6
   14a8b:	mulsd  xmm3,xmm6
   14a8f:	movsd  xmm6,QWORD PTR [rsi+0x10]
   14a94:	mulsd  xmm5,xmm1
   14a98:	movapd xmm1,xmm2
   14a9c:	movsd  xmm2,QWORD PTR [rdi+0x10]
   14aa1:	subsd  xmm1,xmm4
   14aa5:	movsd  xmm4,QWORD PTR [rdi+0x18]
   14aaa:	movapd xmm0,xmm2
   14aae:	addsd  xmm5,xmm3
   14ab2:	mulsd  xmm0,xmm6
   14ab6:	movapd xmm3,xmm4
   14aba:	mulsd  xmm3,xmm7
   14abe:	mulsd  xmm4,xmm6
   14ac2:	movsd  xmm6,QWORD PTR [rsi+0x28]
   14ac7:	mulsd  xmm2,xmm7
   14acb:	addsd  xmm0,xmm3
   14acf:	subsd  xmm2,xmm4
   14ad3:	movsd  xmm4,QWORD PTR [rdi+0x28]
   14ad8:	movapd xmm3,xmm0
   14adc:	addsd  xmm3,xmm5
   14ae0:	movsd  xmm5,QWORD PTR [rsi+0x20]
   14ae5:	movapd xmm7,xmm4
   14ae9:	addsd  xmm2,xmm1
   14aed:	movsd  xmm1,QWORD PTR [rdi+0x20]
   14af2:	mulsd  xmm7,xmm6
   14af6:	mulsd  xmm4,xmm5
   14afa:	movapd xmm0,xmm1
   14afe:	mulsd  xmm0,xmm5
   14b02:	mulsd  xmm1,xmm6
   14b06:	addsd  xmm0,xmm7
   14b0a:	subsd  xmm1,xmm4
   14b0e:	addsd  xmm0,xmm3
   14b12:	addsd  xmm1,xmm2
   14b16:	ret    
   14b17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000014b20 <su3_rdot>:
   14b20:	endbr64 
   14b24:	movsd  xmm0,QWORD PTR [rdi]
   14b28:	movsd  xmm1,QWORD PTR [rsi]
   14b2c:	mulsd  xmm1,xmm0
   14b30:	movsd  xmm0,QWORD PTR [rdi+0x8]
   14b35:	mulsd  xmm0,QWORD PTR [rsi+0x8]
   14b3a:	addsd  xmm0,xmm1
   14b3e:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14b43:	mulsd  xmm1,QWORD PTR [rsi+0x10]
   14b48:	addsd  xmm0,xmm1
   14b4c:	movsd  xmm1,QWORD PTR [rdi+0x18]
   14b51:	mulsd  xmm1,QWORD PTR [rsi+0x18]
   14b56:	addsd  xmm1,xmm0
   14b5a:	movsd  xmm0,QWORD PTR [rdi+0x20]
   14b5f:	mulsd  xmm0,QWORD PTR [rsi+0x20]
   14b64:	addsd  xmm1,xmm0
   14b68:	movsd  xmm0,QWORD PTR [rdi+0x28]
   14b6d:	mulsd  xmm0,QWORD PTR [rsi+0x28]
   14b72:	addsd  xmm0,xmm1
   14b76:	ret    
   14b77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000014b80 <su3_projector>:
   14b80:	endbr64 
   14b84:	lea    r8,[rsi+0x8]
   14b88:	lea    r9,[rdx+0x90]
   14b8f:	add    rsi,0x38
   14b93:	movsd  xmm4,QWORD PTR [rdi]
   14b97:	movsd  xmm3,QWORD PTR [rdi+0x8]
   14b9c:	mov    rax,r8
   14b9f:	mov    rcx,rdx
   14ba2:	movsd  xmm1,QWORD PTR [rax]
   14ba6:	movapd xmm2,xmm4
   14baa:	movapd xmm5,xmm3
   14bae:	add    rax,0x10
   14bb2:	movsd  xmm0,QWORD PTR [rax-0x18]
   14bb7:	add    rcx,0x10
   14bbb:	mulsd  xmm5,xmm1
   14bbf:	mulsd  xmm2,xmm0
   14bc3:	mulsd  xmm1,xmm4
   14bc7:	mulsd  xmm0,xmm3
   14bcb:	addsd  xmm2,xmm5
   14bcf:	subsd  xmm0,xmm1
   14bd3:	movsd  QWORD PTR [rcx-0x10],xmm2
   14bd8:	movsd  QWORD PTR [rcx-0x8],xmm0
   14bdd:	cmp    rsi,rax
   14be0:	jne    14ba2 <su3_projector+0x22>
   14be2:	add    rdx,0x30
   14be6:	add    rdi,0x10
   14bea:	cmp    rdx,r9
   14bed:	jne    14b93 <su3_projector+0x13>
   14bef:	ret    

0000000000014bf0 <su3mat_copy>:
   14bf0:	endbr64 
   14bf4:	lea    rax,[rdi+0x90]
   14bfb:	movsd  xmm0,QWORD PTR [rdi]
   14bff:	add    rdi,0x30
   14c03:	add    rsi,0x30
   14c07:	movsd  QWORD PTR [rsi-0x30],xmm0
   14c0c:	movsd  xmm0,QWORD PTR [rdi-0x28]
   14c11:	movsd  QWORD PTR [rsi-0x28],xmm0
   14c16:	movsd  xmm0,QWORD PTR [rdi-0x20]
   14c1b:	movsd  QWORD PTR [rsi-0x20],xmm0
   14c20:	movsd  xmm0,QWORD PTR [rdi-0x18]
   14c25:	movsd  QWORD PTR [rsi-0x18],xmm0
   14c2a:	movsd  xmm0,QWORD PTR [rdi-0x10]
   14c2f:	movsd  QWORD PTR [rsi-0x10],xmm0
   14c34:	movsd  xmm0,QWORD PTR [rdi-0x8]
   14c39:	movsd  QWORD PTR [rsi-0x8],xmm0
   14c3e:	cmp    rdi,rax
   14c41:	jne    14bfb <su3mat_copy+0xb>
   14c43:	ret    
   14c44:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14c4e:	xchg   ax,ax

0000000000014c50 <sub_su3_matrix>:
   14c50:	endbr64 
   14c54:	mov    ecx,0x30
   14c59:	lea    rax,[rcx-0x30]
   14c5d:	movsd  xmm0,QWORD PTR [rdi+rax*1]
   14c62:	subsd  xmm0,QWORD PTR [rsi+rax*1]
   14c67:	movsd  QWORD PTR [rdx+rax*1],xmm0
   14c6c:	movsd  xmm0,QWORD PTR [rdi+rax*1+0x8]
   14c72:	subsd  xmm0,QWORD PTR [rsi+rax*1+0x8]
   14c78:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm0
   14c7e:	add    rax,0x10
   14c82:	cmp    rax,rcx
   14c85:	jne    14c5d <sub_su3_matrix+0xd>
   14c87:	lea    rcx,[rax+0x30]
   14c8b:	cmp    rax,0x90
   14c91:	jne    14c59 <sub_su3_matrix+0x9>
   14c93:	ret    
   14c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14c9e:	xchg   ax,ax

0000000000014ca0 <sub_su3_vector>:
   14ca0:	endbr64 
   14ca4:	xor    eax,eax
   14ca6:	movsd  xmm0,QWORD PTR [rdi+rax*1]
   14cab:	subsd  xmm0,QWORD PTR [rsi+rax*1]
   14cb0:	movsd  QWORD PTR [rdx+rax*1],xmm0
   14cb5:	movsd  xmm0,QWORD PTR [rdi+rax*1+0x8]
   14cbb:	subsd  xmm0,QWORD PTR [rsi+rax*1+0x8]
   14cc1:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm0
   14cc7:	add    rax,0x10
   14ccb:	cmp    rax,0x30
   14ccf:	jne    14ca6 <sub_su3_vector+0x6>
   14cd1:	ret    
   14cd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14cdc:	nop    DWORD PTR [rax+0x0]

0000000000014ce0 <trace_su3>:
   14ce0:	endbr64 
   14ce4:	movsd  xmm1,QWORD PTR [rdi+0x8]
   14ce9:	movsd  xmm0,QWORD PTR [rdi]
   14ced:	addsd  xmm1,QWORD PTR [rdi+0x48]
   14cf2:	addsd  xmm0,QWORD PTR [rdi+0x40]
   14cf7:	addsd  xmm1,QWORD PTR [rdi+0x88]
   14cff:	addsd  xmm0,QWORD PTR [rdi+0x80]
   14d07:	ret    
   14d08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000014d10 <uncompress_anti_hermitian>:
   14d10:	endbr64 
   14d14:	movsd  xmm0,QWORD PTR [rdi+0x30]
   14d19:	movsd  xmm1,QWORD PTR [rdi]
   14d1d:	mov    QWORD PTR [rsi],0x0
   14d24:	movq   xmm2,QWORD PTR [rip+0x5954]        # 1a680 <_IO_stdin_used+0x680>
   14d2c:	movsd  QWORD PTR [rsi+0x8],xmm0
   14d31:	movsd  xmm0,QWORD PTR [rdi+0x38]
   14d36:	mov    QWORD PTR [rsi+0x40],0x0
   14d3e:	movsd  QWORD PTR [rsi+0x48],xmm0
   14d43:	movsd  xmm0,QWORD PTR [rdi+0x40]
   14d48:	mov    QWORD PTR [rsi+0x80],0x0
   14d53:	movsd  QWORD PTR [rsi+0x88],xmm0
   14d5b:	movsd  xmm0,QWORD PTR [rdi+0x8]
   14d60:	movsd  QWORD PTR [rsi+0x10],xmm1
   14d65:	xorpd  xmm1,xmm2
   14d69:	movsd  QWORD PTR [rsi+0x18],xmm0
   14d6e:	movsd  QWORD PTR [rsi+0x30],xmm1
   14d73:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14d78:	movsd  QWORD PTR [rsi+0x38],xmm0
   14d7d:	movsd  xmm0,QWORD PTR [rdi+0x18]
   14d82:	movsd  QWORD PTR [rsi+0x20],xmm1
   14d87:	xorpd  xmm1,xmm2
   14d8b:	movsd  QWORD PTR [rsi+0x28],xmm0
   14d90:	movsd  QWORD PTR [rsi+0x68],xmm0
   14d95:	movsd  xmm0,QWORD PTR [rdi+0x20]
   14d9a:	movsd  QWORD PTR [rsi+0x60],xmm1
   14d9f:	movsd  xmm1,QWORD PTR [rdi+0x28]
   14da4:	movsd  QWORD PTR [rsi+0x50],xmm0
   14da9:	xorpd  xmm0,xmm2
   14dad:	movsd  QWORD PTR [rsi+0x58],xmm1
   14db2:	movsd  QWORD PTR [rsi+0x70],xmm0
   14db7:	movsd  QWORD PTR [rsi+0x78],xmm1
   14dbc:	ret    
   14dbd:	nop    DWORD PTR [rax]

0000000000014dc0 <magsq_su3vec>:
   14dc0:	endbr64 
   14dc4:	movsd  xmm0,QWORD PTR [rdi]
   14dc8:	pxor   xmm1,xmm1
   14dcc:	mulsd  xmm0,xmm0
   14dd0:	addsd  xmm1,xmm0
   14dd4:	movsd  xmm0,QWORD PTR [rdi+0x8]
   14dd9:	mulsd  xmm0,xmm0
   14ddd:	addsd  xmm0,xmm1
   14de1:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14de6:	mulsd  xmm1,xmm1
   14dea:	addsd  xmm0,xmm1
   14dee:	movsd  xmm1,QWORD PTR [rdi+0x18]
   14df3:	mulsd  xmm1,xmm1
   14df7:	addsd  xmm1,xmm0
   14dfb:	movsd  xmm0,QWORD PTR [rdi+0x20]
   14e00:	mulsd  xmm0,xmm0
   14e04:	addsd  xmm1,xmm0
   14e08:	movsd  xmm0,QWORD PTR [rdi+0x28]
   14e0d:	mulsd  xmm0,xmm0
   14e11:	addsd  xmm0,xmm1
   14e15:	ret    
   14e16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014e20 <sub_four_su3_vecs>:
   14e20:	endbr64 
   14e24:	movsd  xmm5,QWORD PTR [rdi]
   14e28:	subsd  xmm5,QWORD PTR [rsi]
   14e2c:	movsd  xmm4,QWORD PTR [rdi+0x8]
   14e31:	movsd  xmm3,QWORD PTR [rdi+0x10]
   14e36:	subsd  xmm4,QWORD PTR [rsi+0x8]
   14e3b:	subsd  xmm3,QWORD PTR [rsi+0x10]
   14e40:	movsd  QWORD PTR [rdi],xmm5
   14e44:	movsd  xmm2,QWORD PTR [rdi+0x18]
   14e49:	subsd  xmm5,QWORD PTR [rdx]
   14e4d:	subsd  xmm2,QWORD PTR [rsi+0x18]
   14e52:	movsd  xmm1,QWORD PTR [rdi+0x20]
   14e57:	movsd  xmm0,QWORD PTR [rdi+0x28]
   14e5c:	subsd  xmm1,QWORD PTR [rsi+0x20]
   14e61:	movsd  QWORD PTR [rdi+0x8],xmm4
   14e66:	subsd  xmm0,QWORD PTR [rsi+0x28]
   14e6b:	subsd  xmm4,QWORD PTR [rdx+0x8]
   14e70:	movsd  QWORD PTR [rdi+0x10],xmm3
   14e75:	movsd  QWORD PTR [rdi+0x18],xmm2
   14e7a:	subsd  xmm3,QWORD PTR [rdx+0x10]
   14e7f:	subsd  xmm2,QWORD PTR [rdx+0x18]
   14e84:	movsd  QWORD PTR [rdi+0x20],xmm1
   14e89:	subsd  xmm1,QWORD PTR [rdx+0x20]
   14e8e:	movsd  QWORD PTR [rdi+0x28],xmm0
   14e93:	subsd  xmm0,QWORD PTR [rdx+0x28]
   14e98:	movsd  QWORD PTR [rdi],xmm5
   14e9c:	subsd  xmm5,QWORD PTR [rcx]
   14ea0:	movsd  QWORD PTR [rdi+0x10],xmm3
   14ea5:	movsd  QWORD PTR [rdi+0x18],xmm2
   14eaa:	movsd  QWORD PTR [rdi+0x20],xmm1
   14eaf:	movsd  QWORD PTR [rdi+0x28],xmm0
   14eb4:	movsd  QWORD PTR [rdi],xmm5
   14eb8:	movsd  QWORD PTR [rdi+0x8],xmm4
   14ebd:	subsd  xmm4,QWORD PTR [rcx+0x8]
   14ec2:	subsd  xmm3,QWORD PTR [rcx+0x10]
   14ec7:	subsd  xmm2,QWORD PTR [rcx+0x18]
   14ecc:	subsd  xmm1,QWORD PTR [rcx+0x20]
   14ed1:	subsd  xmm0,QWORD PTR [rcx+0x28]
   14ed6:	subsd  xmm5,QWORD PTR [r8]
   14edb:	movsd  QWORD PTR [rdi+0x8],xmm4
   14ee0:	subsd  xmm4,QWORD PTR [r8+0x8]
   14ee6:	movsd  QWORD PTR [rdi+0x10],xmm3
   14eeb:	subsd  xmm3,QWORD PTR [r8+0x10]
   14ef1:	movsd  QWORD PTR [rdi+0x18],xmm2
   14ef6:	subsd  xmm2,QWORD PTR [r8+0x18]
   14efc:	movsd  QWORD PTR [rdi+0x20],xmm1
   14f01:	subsd  xmm1,QWORD PTR [r8+0x20]
   14f07:	movsd  QWORD PTR [rdi+0x28],xmm0
   14f0c:	subsd  xmm0,QWORD PTR [r8+0x28]
   14f12:	movsd  QWORD PTR [rdi],xmm5
   14f16:	movsd  QWORD PTR [rdi+0x8],xmm4
   14f1b:	movsd  QWORD PTR [rdi+0x10],xmm3
   14f20:	movsd  QWORD PTR [rdi+0x18],xmm2
   14f25:	movsd  QWORD PTR [rdi+0x20],xmm1
   14f2a:	movsd  QWORD PTR [rdi+0x28],xmm0
   14f2f:	ret    

0000000000014f30 <mult_adj_su3_mat_vec_4dir>:
   14f30:	endbr64 
   14f34:	lea    rax,[rdi+0x240]
   14f3b:	movsd  xmm2,QWORD PTR [rsi]
   14f3f:	movsd  xmm3,QWORD PTR [rsi+0x8]
   14f44:	add    rdx,0x30
   14f48:	add    rdi,0x90
   14f4f:	movsd  xmm1,QWORD PTR [rdi-0x68]
   14f54:	movsd  xmm5,QWORD PTR [rdi-0x70]
   14f59:	movsd  xmm13,QWORD PTR [rdi-0x78]
   14f5f:	movapd xmm0,xmm2
   14f63:	movapd xmm6,xmm2
   14f67:	movapd xmm4,xmm2
   14f6b:	movapd xmm9,xmm3
   14f70:	movapd xmm8,xmm3
   14f75:	movsd  xmm11,QWORD PTR [rdi-0x80]
   14f7b:	movsd  xmm14,QWORD PTR [rdi-0x88]
   14f84:	movsd  xmm10,QWORD PTR [rdi-0x90]
   14f8d:	mulsd  xmm0,xmm5
   14f91:	movsd  xmm7,QWORD PTR [rdi-0x50]
   14f96:	mulsd  xmm5,xmm3
   14f9a:	mulsd  xmm9,xmm14
   14f9f:	mulsd  xmm8,xmm13
   14fa4:	mulsd  xmm14,xmm2
   14fa9:	mulsd  xmm13,xmm2
   14fae:	mulsd  xmm2,xmm1
   14fb2:	mulsd  xmm6,xmm10
   14fb7:	mulsd  xmm10,xmm3
   14fbc:	mulsd  xmm4,xmm11
   14fc1:	mulsd  xmm11,xmm3
   14fc6:	subsd  xmm5,xmm2
   14fca:	movsd  xmm2,QWORD PTR [rsi+0x10]
   14fcf:	mulsd  xmm3,xmm1
   14fd3:	addsd  xmm9,xmm6
   14fd8:	movsd  xmm6,QWORD PTR [rdi-0x40]
   14fdd:	movapd xmm12,xmm10
   14fe2:	movsd  xmm10,QWORD PTR [rdi-0x60]
   14fe8:	movapd xmm1,xmm2
   14fec:	addsd  xmm8,xmm4
   14ff1:	subsd  xmm12,xmm14
   14ff6:	movsd  xmm4,QWORD PTR [rdi-0x48]
   14ffb:	mulsd  xmm1,xmm10
   15000:	subsd  xmm11,xmm13
   15005:	addsd  xmm3,xmm0
   15009:	movsd  xmm0,QWORD PTR [rsi+0x18]
   1500e:	mulsd  xmm10,xmm0
   15013:	addsd  xmm9,xmm1
   15018:	movapd xmm1,xmm2
   1501c:	mulsd  xmm1,xmm7
   15020:	mulsd  xmm7,xmm0
   15024:	addsd  xmm10,xmm12
   15029:	movsd  xmm12,QWORD PTR [rdi-0x58]
   1502f:	addsd  xmm8,xmm1
   15034:	movapd xmm1,xmm2
   15038:	mulsd  xmm1,xmm6
   1503c:	addsd  xmm7,xmm11
   15041:	mulsd  xmm6,xmm0
   15045:	addsd  xmm3,xmm1
   15049:	movsd  xmm1,QWORD PTR [rdi-0x38]
   1504e:	addsd  xmm6,xmm5
   15052:	movapd xmm5,xmm0
   15056:	mulsd  xmm5,xmm12
   1505b:	mulsd  xmm12,xmm2
   15060:	addsd  xmm9,xmm5
   15065:	movapd xmm5,xmm0
   15069:	mulsd  xmm5,xmm4
   1506d:	subsd  xmm10,xmm12
   15072:	mulsd  xmm4,xmm2
   15076:	mulsd  xmm2,xmm1
   1507a:	mulsd  xmm0,xmm1
   1507e:	movsd  xmm1,QWORD PTR [rdi-0x10]
   15083:	addsd  xmm8,xmm5
   15088:	movsd  xmm5,QWORD PTR [rsi+0x20]
   1508d:	subsd  xmm7,xmm4
   15091:	movsd  xmm4,QWORD PTR [rdi-0x30]
   15096:	movapd xmm11,xmm5
   1509b:	subsd  xmm6,xmm2
   1509f:	movsd  xmm2,QWORD PTR [rdi-0x20]
   150a4:	mulsd  xmm11,xmm4
   150a9:	addsd  xmm3,xmm0
   150ad:	movsd  xmm0,QWORD PTR [rsi+0x28]
   150b2:	mulsd  xmm4,xmm0
   150b6:	addsd  xmm9,xmm11
   150bb:	movapd xmm11,xmm5
   150c0:	mulsd  xmm11,xmm2
   150c5:	addsd  xmm10,xmm4
   150ca:	movsd  xmm4,QWORD PTR [rdi-0x28]
   150cf:	mulsd  xmm2,xmm0
   150d3:	addsd  xmm8,xmm11
   150d8:	movapd xmm11,xmm5
   150dd:	mulsd  xmm11,xmm1
   150e2:	addsd  xmm7,xmm2
   150e6:	movsd  xmm2,QWORD PTR [rdi-0x18]
   150eb:	mulsd  xmm1,xmm0
   150ef:	addsd  xmm3,xmm11
   150f4:	movapd xmm11,xmm0
   150f9:	mulsd  xmm11,xmm4
   150fe:	addsd  xmm1,xmm6
   15102:	movsd  xmm6,QWORD PTR [rdi-0x8]
   15107:	mulsd  xmm4,xmm5
   1510b:	addsd  xmm9,xmm11
   15110:	subsd  xmm10,xmm4
   15115:	movapd xmm4,xmm0
   15119:	mulsd  xmm4,xmm2
   1511d:	mulsd  xmm0,xmm6
   15121:	movsd  QWORD PTR [rdx-0x30],xmm9
   15127:	mulsd  xmm2,xmm5
   1512b:	movsd  QWORD PTR [rdx-0x28],xmm10
   15131:	mulsd  xmm5,xmm6
   15135:	addsd  xmm8,xmm4
   1513a:	addsd  xmm0,xmm3
   1513e:	subsd  xmm7,xmm2
   15142:	subsd  xmm1,xmm5
   15146:	movsd  QWORD PTR [rdx-0x20],xmm8
   1514c:	movsd  QWORD PTR [rdx-0x10],xmm0
   15151:	movsd  QWORD PTR [rdx-0x18],xmm7
   15156:	movsd  QWORD PTR [rdx-0x8],xmm1
   1515b:	cmp    rdi,rax
   1515e:	jne    14f3b <mult_adj_su3_mat_vec_4dir+0xb>
   15164:	ret    
   15165:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1516f:	nop

0000000000015170 <mult_adj_su3_mat_4vec>:
   15170:	endbr64 
   15174:	sub    rsp,0x38
   15178:	mov    rax,QWORD PTR fs:0x28
   15181:	mov    QWORD PTR [rsp+0x28],rax
   15186:	xor    eax,eax
   15188:	mov    QWORD PTR [rsp+0x10],r8
   1518d:	mov    rax,rsp
   15190:	mov    QWORD PTR [rsp+0x18],r9
   15195:	mov    QWORD PTR [rsp+0x8],rcx
   1519a:	lea    rcx,[rsp+0x20]
   1519f:	movsd  xmm2,QWORD PTR [rsi]
   151a3:	movsd  xmm3,QWORD PTR [rsi+0x8]
   151a8:	add    rax,0x8
   151ac:	add    rdi,0x90
   151b3:	movsd  xmm1,QWORD PTR [rdi-0x68]
   151b8:	movsd  xmm5,QWORD PTR [rdi-0x70]
   151bd:	movsd  xmm13,QWORD PTR [rdi-0x78]
   151c3:	movapd xmm0,xmm2
   151c7:	movapd xmm6,xmm2
   151cb:	movapd xmm4,xmm2
   151cf:	movapd xmm9,xmm3
   151d4:	movapd xmm8,xmm3
   151d9:	movsd  xmm11,QWORD PTR [rdi-0x80]
   151df:	movsd  xmm14,QWORD PTR [rdi-0x88]
   151e8:	movsd  xmm10,QWORD PTR [rdi-0x90]
   151f1:	mulsd  xmm0,xmm5
   151f5:	movsd  xmm7,QWORD PTR [rdi-0x50]
   151fa:	mulsd  xmm5,xmm3
   151fe:	mulsd  xmm9,xmm14
   15203:	mulsd  xmm8,xmm13
   15208:	mulsd  xmm14,xmm2
   1520d:	mulsd  xmm13,xmm2
   15212:	mulsd  xmm2,xmm1
   15216:	mulsd  xmm6,xmm10
   1521b:	mulsd  xmm10,xmm3
   15220:	mulsd  xmm4,xmm11
   15225:	mulsd  xmm11,xmm3
   1522a:	subsd  xmm5,xmm2
   1522e:	movsd  xmm2,QWORD PTR [rsi+0x10]
   15233:	mulsd  xmm3,xmm1
   15237:	addsd  xmm9,xmm6
   1523c:	movsd  xmm6,QWORD PTR [rdi-0x40]
   15241:	movapd xmm12,xmm10
   15246:	movsd  xmm10,QWORD PTR [rdi-0x60]
   1524c:	movapd xmm1,xmm2
   15250:	addsd  xmm8,xmm4
   15255:	subsd  xmm12,xmm14
   1525a:	movsd  xmm4,QWORD PTR [rdi-0x48]
   1525f:	mulsd  xmm1,xmm10
   15264:	subsd  xmm11,xmm13
   15269:	addsd  xmm3,xmm0
   1526d:	movsd  xmm0,QWORD PTR [rsi+0x18]
   15272:	mulsd  xmm10,xmm0
   15277:	addsd  xmm9,xmm1
   1527c:	movapd xmm1,xmm2
   15280:	mulsd  xmm1,xmm7
   15284:	mulsd  xmm7,xmm0
   15288:	addsd  xmm10,xmm12
   1528d:	movsd  xmm12,QWORD PTR [rdi-0x58]
   15293:	addsd  xmm8,xmm1
   15298:	movapd xmm1,xmm2
   1529c:	mulsd  xmm1,xmm6
   152a0:	addsd  xmm7,xmm11
   152a5:	mulsd  xmm6,xmm0
   152a9:	addsd  xmm3,xmm1
   152ad:	movsd  xmm1,QWORD PTR [rdi-0x38]
   152b2:	addsd  xmm6,xmm5
   152b6:	movapd xmm5,xmm0
   152ba:	mulsd  xmm5,xmm12
   152bf:	mulsd  xmm12,xmm2
   152c4:	addsd  xmm9,xmm5
   152c9:	movapd xmm5,xmm0
   152cd:	mulsd  xmm5,xmm4
   152d1:	subsd  xmm10,xmm12
   152d6:	mulsd  xmm4,xmm2
   152da:	mulsd  xmm2,xmm1
   152de:	mulsd  xmm0,xmm1
   152e2:	movsd  xmm1,QWORD PTR [rdi-0x10]
   152e7:	addsd  xmm8,xmm5
   152ec:	movsd  xmm5,QWORD PTR [rsi+0x20]
   152f1:	subsd  xmm7,xmm4
   152f5:	movsd  xmm4,QWORD PTR [rdi-0x30]
   152fa:	movapd xmm11,xmm5
   152ff:	subsd  xmm6,xmm2
   15303:	movsd  xmm2,QWORD PTR [rdi-0x20]
   15308:	mulsd  xmm11,xmm4
   1530d:	addsd  xmm3,xmm0
   15311:	movsd  xmm0,QWORD PTR [rsi+0x28]
   15316:	mulsd  xmm4,xmm0
   1531a:	addsd  xmm9,xmm11
   1531f:	movapd xmm11,xmm5
   15324:	mulsd  xmm11,xmm2
   15329:	addsd  xmm10,xmm4
   1532e:	movsd  xmm4,QWORD PTR [rdi-0x28]
   15333:	mulsd  xmm2,xmm0
   15337:	addsd  xmm8,xmm11
   1533c:	movapd xmm11,xmm5
   15341:	mulsd  xmm11,xmm1
   15346:	addsd  xmm7,xmm2
   1534a:	movsd  xmm2,QWORD PTR [rdi-0x18]
   1534f:	mulsd  xmm1,xmm0
   15353:	addsd  xmm3,xmm11
   15358:	movapd xmm11,xmm0
   1535d:	mulsd  xmm11,xmm4
   15362:	addsd  xmm1,xmm6
   15366:	movsd  xmm6,QWORD PTR [rdi-0x8]
   1536b:	mulsd  xmm4,xmm5
   1536f:	addsd  xmm9,xmm11
   15374:	subsd  xmm10,xmm4
   15379:	movapd xmm4,xmm0
   1537d:	mulsd  xmm4,xmm2
   15381:	mulsd  xmm0,xmm6
   15385:	movsd  QWORD PTR [rdx],xmm9
   1538a:	mulsd  xmm2,xmm5
   1538e:	movsd  QWORD PTR [rdx+0x8],xmm10
   15394:	mulsd  xmm5,xmm6
   15398:	addsd  xmm8,xmm4
   1539d:	addsd  xmm0,xmm3
   153a1:	subsd  xmm7,xmm2
   153a5:	subsd  xmm1,xmm5
   153a9:	movsd  QWORD PTR [rdx+0x10],xmm8
   153af:	movsd  QWORD PTR [rdx+0x20],xmm0
   153b4:	movsd  QWORD PTR [rdx+0x18],xmm7
   153b9:	movsd  QWORD PTR [rdx+0x28],xmm1
   153be:	cmp    rcx,rax
   153c1:	je     153d0 <mult_adj_su3_mat_4vec+0x260>
   153c3:	mov    rdx,QWORD PTR [rax]
   153c6:	jmp    1519f <mult_adj_su3_mat_4vec+0x2f>
   153cb:	nop    DWORD PTR [rax+rax*1+0x0]
   153d0:	mov    rax,QWORD PTR [rsp+0x28]
   153d5:	xor    rax,QWORD PTR fs:0x28
   153de:	jne    153e5 <mult_adj_su3_mat_4vec+0x275>
   153e0:	add    rsp,0x38
   153e4:	ret    
   153e5:	call   2350 <__stack_chk_fail@plt>
   153ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000000153f0 <mult_su3_mat_vec_sum_4dir>:
   153f0:	endbr64 
   153f4:	mov    QWORD PTR [r9],0x0
   153fb:	lea    r11,[rdi+0x90]
   15402:	pxor   xmm6,xmm6
   15406:	mov    QWORD PTR [r9+0x8],0x0
   1540e:	mov    QWORD PTR [r9+0x10],0x0
   15416:	mov    QWORD PTR [r9+0x18],0x0
   1541e:	mov    QWORD PTR [r9+0x20],0x0
   15426:	mov    QWORD PTR [r9+0x28],0x0
   1542e:	push   rbx
   1542f:	mov    rbx,rdx
   15432:	xor    edx,edx
   15434:	mov    rdi,rcx
   15437:	cmp    edx,0x2
   1543a:	je     1544e <mult_su3_mat_vec_sum_4dir+0x5e>
   1543c:	mov    rdi,r8
   1543f:	cmp    edx,0x3
   15442:	je     1544e <mult_su3_mat_vec_sum_4dir+0x5e>
   15444:	cmp    edx,0x1
   15447:	mov    rdi,rsi
   1544a:	cmove  rdi,rbx
   1544e:	lea    rax,[r11-0x90]
   15455:	mov    r10,r9
   15458:	movsd  xmm4,QWORD PTR [rax]
   1545c:	movsd  xmm2,QWORD PTR [rdi]
   15460:	add    rax,0x30
   15464:	add    r10,0x10
   15468:	movsd  xmm5,QWORD PTR [rax-0x28]
   1546d:	movsd  xmm3,QWORD PTR [rdi+0x8]
   15472:	movapd xmm1,xmm4
   15476:	movsd  xmm8,QWORD PTR [rdi+0x18]
   1547c:	mulsd  xmm1,xmm2
   15480:	movapd xmm0,xmm5
   15484:	mulsd  xmm4,xmm3
   15488:	mulsd  xmm2,xmm5
   1548c:	mulsd  xmm0,xmm3
   15490:	movsd  xmm3,QWORD PTR [rax-0x18]
   15495:	movapd xmm7,xmm1
   15499:	movapd xmm5,xmm3
   1549d:	mulsd  xmm5,xmm8
   154a2:	addsd  xmm2,xmm4
   154a6:	movsd  xmm4,QWORD PTR [rax-0x20]
   154ab:	subsd  xmm7,xmm0
   154af:	movsd  xmm0,QWORD PTR [rdi+0x10]
   154b4:	movapd xmm1,xmm4
   154b8:	mulsd  xmm1,xmm0
   154bc:	mulsd  xmm4,xmm8
   154c1:	mulsd  xmm3,xmm0
   154c5:	movsd  xmm0,QWORD PTR [rax-0x8]
   154ca:	addsd  xmm1,xmm7
   154ce:	movsd  xmm7,QWORD PTR [rdi+0x20]
   154d3:	addsd  xmm2,xmm4
   154d7:	movsd  xmm4,QWORD PTR [rdi+0x28]
   154dc:	subsd  xmm1,xmm5
   154e0:	addsd  xmm3,xmm2
   154e4:	movsd  xmm2,QWORD PTR [rax-0x10]
   154e9:	movapd xmm5,xmm1
   154ed:	movapd xmm1,xmm2
   154f1:	mulsd  xmm1,xmm7
   154f5:	mulsd  xmm2,xmm4
   154f9:	mulsd  xmm4,xmm0
   154fd:	mulsd  xmm0,xmm7
   15501:	addsd  xmm1,xmm5
   15505:	addsd  xmm2,xmm3
   15509:	subsd  xmm1,xmm4
   1550d:	addsd  xmm0,xmm2
   15511:	addsd  xmm0,QWORD PTR [r10-0x8]
   15517:	addsd  xmm1,xmm6
   1551b:	movsd  QWORD PTR [r10-0x8],xmm0
   15521:	movsd  QWORD PTR [r10-0x10],xmm1
   15527:	cmp    r11,rax
   1552a:	je     15540 <mult_su3_mat_vec_sum_4dir+0x150>
   1552c:	movsd  xmm6,QWORD PTR [r10]
   15531:	jmp    15458 <mult_su3_mat_vec_sum_4dir+0x68>
   15536:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15540:	add    edx,0x1
   15543:	add    r11,0x90
   1554a:	cmp    edx,0x4
   1554d:	je     15560 <mult_su3_mat_vec_sum_4dir+0x170>
   1554f:	movsd  xmm6,QWORD PTR [r9]
   15554:	jmp    15434 <mult_su3_mat_vec_sum_4dir+0x44>
   15559:	nop    DWORD PTR [rax+0x0]
   15560:	pop    rbx
   15561:	ret    
   15562:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1556c:	nop    DWORD PTR [rax+0x0]

0000000000015570 <mult_su2_mat_vec_elem_n>:
   15570:	endbr64 
   15574:	movsd  xmm1,QWORD PTR [rdi]
   15578:	movsd  xmm8,QWORD PTR [rdi+0x8]
   1557e:	movsd  xmm5,QWORD PTR [rsi]
   15582:	movsd  xmm6,QWORD PTR [rsi+0x8]
   15587:	movapd xmm0,xmm1
   1558b:	movapd xmm9,xmm8
   15590:	movsd  xmm2,QWORD PTR [rdi+0x10]
   15595:	movsd  xmm7,QWORD PTR [rdi+0x18]
   1559a:	mulsd  xmm0,xmm5
   1559e:	movsd  xmm3,QWORD PTR [rdx]
   155a2:	movsd  xmm4,QWORD PTR [rdx+0x8]
   155a7:	mulsd  xmm9,xmm6
   155ac:	movapd xmm10,xmm7
   155b1:	mulsd  xmm8,xmm5
   155b6:	mulsd  xmm7,xmm3
   155ba:	mulsd  xmm10,xmm4
   155bf:	mulsd  xmm1,xmm6
   155c3:	subsd  xmm0,xmm9
   155c8:	movapd xmm9,xmm2
   155cd:	mulsd  xmm9,xmm3
   155d2:	mulsd  xmm2,xmm4
   155d6:	addsd  xmm1,xmm8
   155db:	subsd  xmm9,xmm10
   155e0:	addsd  xmm2,xmm7
   155e4:	addsd  xmm0,xmm9
   155e9:	addsd  xmm1,xmm2
   155ed:	movsd  QWORD PTR [rsi],xmm0
   155f1:	movsd  xmm0,QWORD PTR [rdi+0x20]
   155f6:	movsd  QWORD PTR [rsi+0x8],xmm1
   155fb:	movsd  xmm8,QWORD PTR [rdi+0x28]
   15601:	movsd  xmm1,QWORD PTR [rdi+0x30]
   15606:	movapd xmm2,xmm0
   1560a:	movsd  xmm7,QWORD PTR [rdi+0x38]
   1560f:	mulsd  xmm2,xmm5
   15613:	movapd xmm9,xmm8
   15618:	mulsd  xmm9,xmm6
   1561d:	movapd xmm10,xmm7
   15622:	mulsd  xmm10,xmm4
   15627:	mulsd  xmm0,xmm6
   1562b:	mulsd  xmm5,xmm8
   15630:	subsd  xmm2,xmm9
   15635:	movapd xmm9,xmm1
   1563a:	mulsd  xmm9,xmm3
   1563f:	mulsd  xmm1,xmm4
   15643:	mulsd  xmm3,xmm7
   15647:	addsd  xmm0,xmm5
   1564b:	subsd  xmm9,xmm10
   15650:	addsd  xmm1,xmm3
   15654:	addsd  xmm2,xmm9
   15659:	addsd  xmm0,xmm1
   1565d:	movsd  QWORD PTR [rdx],xmm2
   15661:	movsd  QWORD PTR [rdx+0x8],xmm0
   15666:	ret    
   15667:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015670 <left_su2_hit_n>:
   15670:	endbr64 
   15674:	movsxd rsi,esi
   15677:	push   r13
   15679:	movsxd rdx,edx
   1567c:	mov    r13,rdi
   1567f:	push   r12
   15681:	sub    rdx,rsi
   15684:	push   rbp
   15685:	lea    rbp,[rdx+rdx*2]
   15689:	push   rbx
   1568a:	lea    rbx,[rsi+rsi*2]
   1568e:	shl    rbp,0x4
   15692:	shl    rbx,0x4
   15696:	add    rbx,rcx
   15699:	sub    rsp,0x8
   1569d:	lea    r12,[rbx+0x30]
   156a1:	lea    rdx,[rbx+rbp*1]
   156a5:	mov    rsi,rbx
   156a8:	mov    rdi,r13
   156ab:	add    rbx,0x10
   156af:	call   15570 <mult_su2_mat_vec_elem_n>
   156b4:	cmp    rbx,r12
   156b7:	jne    156a1 <left_su2_hit_n+0x31>
   156b9:	add    rsp,0x8
   156bd:	pop    rbx
   156be:	pop    rbp
   156bf:	pop    r12
   156c1:	pop    r13
   156c3:	ret    
   156c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
   156ce:	xchg   ax,ax

00000000000156d0 <right_su2_hit_a>:
   156d0:	endbr64 
   156d4:	push   r13
   156d6:	movsxd rsi,esi
   156d9:	mov    r13,rdi
   156dc:	push   r12
   156de:	mov    rax,rsi
   156e1:	push   rbp
   156e2:	movsxd rbp,edx
   156e5:	shl    rax,0x4
   156e9:	push   rbx
   156ea:	sub    rbp,rsi
   156ed:	lea    rbx,[rcx+rax*1]
   156f1:	lea    r12,[rcx+rax*1+0x90]
   156f9:	shl    rbp,0x4
   156fd:	sub    rsp,0x8
   15701:	lea    rdx,[rbx+rbp*1]
   15705:	mov    rsi,rbx
   15708:	mov    rdi,r13
   1570b:	add    rbx,0x30
   1570f:	call   15730 <mult_su2_mat_vec_elem_a>
   15714:	cmp    rbx,r12
   15717:	jne    15701 <right_su2_hit_a+0x31>
   15719:	add    rsp,0x8
   1571d:	pop    rbx
   1571e:	pop    rbp
   1571f:	pop    r12
   15721:	pop    r13
   15723:	ret    
   15724:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1572e:	xchg   ax,ax

0000000000015730 <mult_su2_mat_vec_elem_a>:
   15730:	endbr64 
   15734:	movsd  xmm1,QWORD PTR [rdi]
   15738:	movsd  xmm8,QWORD PTR [rdi+0x8]
   1573e:	movsd  xmm5,QWORD PTR [rsi]
   15742:	movsd  xmm6,QWORD PTR [rsi+0x8]
   15747:	movapd xmm0,xmm1
   1574b:	movapd xmm9,xmm8
   15750:	movsd  xmm2,QWORD PTR [rdi+0x10]
   15755:	movsd  xmm7,QWORD PTR [rdi+0x18]
   1575a:	mulsd  xmm0,xmm5
   1575e:	movsd  xmm3,QWORD PTR [rdx]
   15762:	movsd  xmm4,QWORD PTR [rdx+0x8]
   15767:	mulsd  xmm9,xmm6
   1576c:	movapd xmm10,xmm7
   15771:	mulsd  xmm8,xmm5
   15776:	mulsd  xmm7,xmm3
   1577a:	mulsd  xmm10,xmm4
   1577f:	mulsd  xmm1,xmm6
   15783:	addsd  xmm0,xmm9
   15788:	movapd xmm9,xmm2
   1578d:	mulsd  xmm9,xmm3
   15792:	mulsd  xmm2,xmm4
   15796:	subsd  xmm1,xmm8
   1579b:	addsd  xmm9,xmm10
   157a0:	subsd  xmm2,xmm7
   157a4:	addsd  xmm0,xmm9
   157a9:	addsd  xmm1,xmm2
   157ad:	movsd  QWORD PTR [rsi],xmm0
   157b1:	movsd  xmm0,QWORD PTR [rdi+0x20]
   157b6:	movsd  QWORD PTR [rsi+0x8],xmm1
   157bb:	movsd  xmm8,QWORD PTR [rdi+0x28]
   157c1:	movsd  xmm1,QWORD PTR [rdi+0x30]
   157c6:	movapd xmm2,xmm0
   157ca:	movsd  xmm7,QWORD PTR [rdi+0x38]
   157cf:	mulsd  xmm2,xmm5
   157d3:	movapd xmm9,xmm8
   157d8:	mulsd  xmm9,xmm6
   157dd:	movapd xmm10,xmm7
   157e2:	mulsd  xmm10,xmm4
   157e7:	mulsd  xmm0,xmm6
   157eb:	mulsd  xmm5,xmm8
   157f0:	addsd  xmm2,xmm9
   157f5:	movapd xmm9,xmm1
   157fa:	mulsd  xmm9,xmm3
   157ff:	mulsd  xmm1,xmm4
   15803:	mulsd  xmm3,xmm7
   15807:	subsd  xmm0,xmm5
   1580b:	addsd  xmm9,xmm10
   15810:	subsd  xmm1,xmm3
   15814:	addsd  xmm2,xmm9
   15819:	addsd  xmm0,xmm1
   1581d:	movsd  QWORD PTR [rdx],xmm2
   15821:	movsd  QWORD PTR [rdx+0x8],xmm0
   15826:	ret    
   15827:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015830 <gaussian_rand_no>:
   15830:	endbr64 
   15834:	mov    eax,DWORD PTR [rip+0xcb1e]        # 22358 <iset.3473>
   1583a:	test   eax,eax
   1583c:	jne    15920 <gaussian_rand_no+0xf0>
   15842:	push   rbx
   15843:	mov    rbx,rdi
   15846:	sub    rsp,0x20
   1584a:	nop    WORD PTR [rax+rax*1+0x0]
   15850:	mov    rdi,rbx
   15853:	call   e240 <myrand>
   15858:	mov    rdi,rbx
   1585b:	addsd  xmm0,xmm0
   1585f:	movapd xmm2,xmm0
   15863:	subsd  xmm2,QWORD PTR [rip+0x4a35]        # 1a2a0 <_IO_stdin_used+0x2a0>
   1586b:	movsd  QWORD PTR [rsp+0x8],xmm2
   15871:	call   e240 <myrand>
   15876:	movsd  xmm2,QWORD PTR [rsp+0x8]
   1587c:	addsd  xmm0,xmm0
   15880:	movapd xmm3,xmm2
   15884:	mulsd  xmm3,xmm2
   15888:	movapd xmm1,xmm0
   1588c:	subsd  xmm1,QWORD PTR [rip+0x4a0c]        # 1a2a0 <_IO_stdin_used+0x2a0>
   15894:	movapd xmm0,xmm1
   15898:	mulsd  xmm0,xmm1
   1589c:	addsd  xmm3,xmm0
   158a0:	comisd xmm3,QWORD PTR [rip+0x49f8]        # 1a2a0 <_IO_stdin_used+0x2a0>
   158a8:	jae    15850 <gaussian_rand_no+0x20>
   158aa:	movapd xmm0,xmm3
   158ae:	movsd  QWORD PTR [rsp+0x18],xmm1
   158b4:	movsd  QWORD PTR [rsp+0x10],xmm2
   158ba:	movsd  QWORD PTR [rsp+0x8],xmm3
   158c0:	call   2390 <log@plt>
   158c5:	movsd  xmm3,QWORD PTR [rsp+0x8]
   158cb:	pxor   xmm4,xmm4
   158cf:	xorpd  xmm0,XMMWORD PTR [rip+0x4da9]        # 1a680 <_IO_stdin_used+0x680>
   158d7:	movsd  xmm2,QWORD PTR [rsp+0x10]
   158dd:	movsd  xmm1,QWORD PTR [rsp+0x18]
   158e3:	divsd  xmm0,xmm3
   158e7:	ucomisd xmm4,xmm0
   158eb:	movapd xmm3,xmm0
   158ef:	sqrtsd xmm3,xmm3
   158f3:	ja     15933 <gaussian_rand_no+0x103>
   158f5:	mov    DWORD PTR [rip+0xca59],0x1        # 22358 <iset.3473>
   158ff:	mulsd  xmm2,xmm3
   15903:	mulsd  xmm1,xmm3
   15907:	movsd  QWORD PTR [rip+0xca41],xmm2        # 22350 <gset.3474>
   1590f:	add    rsp,0x20
   15913:	movapd xmm0,xmm1
   15917:	pop    rbx
   15918:	ret    
   15919:	nop    DWORD PTR [rax+0x0]
   15920:	mov    DWORD PTR [rip+0xca2e],0x0        # 22358 <iset.3473>
   1592a:	movsd  xmm0,QWORD PTR [rip+0xca1e]        # 22350 <gset.3474>
   15932:	ret    
   15933:	movsd  QWORD PTR [rsp+0x18],xmm3
   15939:	movsd  QWORD PTR [rsp+0x10],xmm1
   1593f:	movsd  QWORD PTR [rsp+0x8],xmm2
   15945:	call   24e0 <sqrt@plt>
   1594a:	movsd  xmm3,QWORD PTR [rsp+0x18]
   15950:	movsd  xmm1,QWORD PTR [rsp+0x10]
   15956:	movsd  xmm2,QWORD PTR [rsp+0x8]
   1595c:	jmp    158f5 <gaussian_rand_no+0xc5>
   1595e:	xchg   ax,ax

0000000000015960 <byterevn>:
   15960:	endbr64 
   15964:	test   esi,esi
   15966:	jle    15980 <byterevn+0x20>
   15968:	lea    eax,[rsi-0x1]
   1596b:	lea    rdx,[rdi+rax*4+0x4]
   15970:	mov    eax,DWORD PTR [rdi]
   15972:	add    rdi,0x4
   15976:	bswap  eax
   15978:	mov    DWORD PTR [rdi-0x4],eax
   1597b:	cmp    rdi,rdx
   1597e:	jne    15970 <byterevn+0x10>
   15980:	ret    
   15981:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1598b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015990 <mult_su3_mat_hwvec>:
   15990:	endbr64 
   15994:	movsd  xmm10,QWORD PTR [rdi]
   15999:	movsd  xmm3,QWORD PTR [rdi+0x8]
   1599e:	movsd  xmm9,QWORD PTR [rsi]
   159a3:	movsd  xmm5,QWORD PTR [rsi+0x8]
   159a8:	movapd xmm8,xmm10
   159ad:	movapd xmm11,xmm3
   159b2:	movsd  xmm2,QWORD PTR [rdi+0x10]
   159b7:	movsd  xmm6,QWORD PTR [rsi+0x10]
   159bc:	mulsd  xmm11,xmm5
   159c1:	movsd  xmm1,QWORD PTR [rdi+0x18]
   159c6:	movsd  xmm7,QWORD PTR [rsi+0x18]
   159cb:	mulsd  xmm8,xmm9
   159d0:	movsd  xmm4,QWORD PTR [rsi+0x20]
   159d5:	movsd  xmm0,QWORD PTR [rsi+0x28]
   159da:	movsd  xmm12,QWORD PTR [rdi+0x20]
   159e0:	movsd  xmm14,QWORD PTR [rdi+0x28]
   159e6:	mulsd  xmm9,xmm3
   159eb:	mulsd  xmm5,xmm10
   159f0:	movsd  xmm15,QWORD PTR [rdi+0x30]
   159f6:	movapd xmm13,xmm14
   159fb:	movsd  QWORD PTR [rsp-0x40],xmm12
   15a02:	mulsd  xmm13,xmm4
   15a07:	movsd  QWORD PTR [rsp-0x38],xmm14
   15a0e:	subsd  xmm8,xmm11
   15a13:	movapd xmm11,xmm2
   15a18:	movsd  QWORD PTR [rsp-0x20],xmm15
   15a1f:	mulsd  xmm11,xmm6
   15a24:	addsd  xmm5,xmm9
   15a29:	movsd  xmm9,QWORD PTR [rdi+0x40]
   15a2f:	movsd  QWORD PTR [rsp-0x50],xmm9
   15a36:	movapd xmm9,xmm15
   15a3b:	addsd  xmm8,xmm11
   15a40:	movapd xmm11,xmm1
   15a45:	mulsd  xmm11,xmm7
   15a4a:	subsd  xmm8,xmm11
   15a4f:	movapd xmm11,xmm12
   15a54:	mulsd  xmm11,xmm4
   15a59:	addsd  xmm8,xmm11
   15a5e:	movapd xmm11,xmm14
   15a63:	movsd  xmm14,QWORD PTR [rdi+0x58]
   15a69:	mulsd  xmm11,xmm0
   15a6e:	subsd  xmm8,xmm11
   15a73:	movsd  xmm11,QWORD PTR [rdi+0x38]
   15a79:	movsd  QWORD PTR [rsp-0x18],xmm11
   15a80:	movsd  QWORD PTR [rdx],xmm8
   15a85:	movapd xmm8,xmm2
   15a8a:	mulsd  xmm8,xmm7
   15a8f:	addsd  xmm5,xmm8
   15a94:	movapd xmm8,xmm1
   15a99:	mulsd  xmm8,xmm6
   15a9e:	addsd  xmm5,xmm8
   15aa3:	movapd xmm8,xmm12
   15aa8:	movsd  xmm12,QWORD PTR [rdi+0x48]
   15aae:	mulsd  xmm8,xmm0
   15ab3:	movsd  QWORD PTR [rsp-0x48],xmm12
   15aba:	movsd  xmm12,QWORD PTR [rdi+0x50]
   15ac0:	addsd  xmm5,xmm8
   15ac5:	movapd xmm8,xmm11
   15aca:	addsd  xmm5,xmm13
   15acf:	movsd  QWORD PTR [rdx+0x8],xmm5
   15ad4:	movsd  xmm5,QWORD PTR [rsi]
   15ad8:	movsd  xmm13,QWORD PTR [rsi+0x8]
   15ade:	mulsd  xmm9,xmm5
   15ae3:	mulsd  xmm8,xmm13
   15ae8:	subsd  xmm9,xmm8
   15aed:	movsd  xmm8,QWORD PTR [rsp-0x50]
   15af4:	mulsd  xmm8,xmm6
   15af9:	addsd  xmm8,xmm9
   15afe:	movsd  xmm9,QWORD PTR [rsp-0x48]
   15b05:	mulsd  xmm9,xmm7
   15b0a:	mulsd  xmm7,QWORD PTR [rsp-0x50]
   15b10:	subsd  xmm8,xmm9
   15b15:	movapd xmm9,xmm8
   15b1a:	movapd xmm8,xmm12
   15b1f:	mulsd  xmm8,xmm4
   15b24:	addsd  xmm8,xmm9
   15b29:	movapd xmm9,xmm14
   15b2e:	mulsd  xmm9,xmm0
   15b33:	subsd  xmm8,xmm9
   15b38:	movapd xmm9,xmm15
   15b3d:	mulsd  xmm9,xmm13
   15b42:	movsd  QWORD PTR [rdx+0x10],xmm8
   15b48:	movapd xmm8,xmm11
   15b4d:	mulsd  xmm8,xmm5
   15b52:	addsd  xmm8,xmm9
   15b57:	addsd  xmm8,xmm7
   15b5c:	movsd  xmm7,QWORD PTR [rsp-0x48]
   15b62:	movsd  QWORD PTR [rsp-0x8],xmm14
   15b69:	movsd  xmm9,QWORD PTR [rdi+0x70]
   15b6f:	movsd  xmm11,QWORD PTR [rsi+0x10]
   15b75:	movsd  QWORD PTR [rsp-0x10],xmm12
   15b7c:	mulsd  xmm7,xmm6
   15b80:	movapd xmm6,xmm12
   15b85:	mulsd  xmm6,xmm0
   15b89:	addsd  xmm7,xmm8
   15b8e:	movsd  xmm8,QWORD PTR [rdi+0x78]
   15b94:	addsd  xmm7,xmm6
   15b98:	movapd xmm6,xmm14
   15b9d:	mulsd  xmm6,xmm4
   15ba1:	addsd  xmm7,xmm6
   15ba5:	movsd  xmm6,QWORD PTR [rdi+0x88]
   15bad:	movsd  QWORD PTR [rdx+0x18],xmm7
   15bb2:	movsd  xmm7,QWORD PTR [rdi+0x60]
   15bb7:	movsd  xmm12,QWORD PTR [rsi+0x18]
   15bbd:	movapd xmm15,xmm7
   15bc2:	movsd  xmm7,QWORD PTR [rdi+0x68]
   15bc7:	movsd  QWORD PTR [rsp-0x30],xmm15
   15bce:	mulsd  xmm15,xmm5
   15bd3:	movapd xmm14,xmm7
   15bd8:	movsd  xmm7,QWORD PTR [rdi+0x80]
   15be0:	movsd  QWORD PTR [rsp-0x28],xmm14
   15be7:	mulsd  xmm14,xmm13
   15bec:	mulsd  xmm5,QWORD PTR [rsp-0x28]
   15bf2:	mulsd  xmm13,QWORD PTR [rsp-0x30]
   15bf9:	subsd  xmm15,xmm14
   15bfe:	movapd xmm14,xmm9
   15c03:	mulsd  xmm14,xmm11
   15c08:	addsd  xmm13,xmm5
   15c0d:	mulsd  xmm11,xmm8
   15c12:	movapd xmm5,xmm10
   15c17:	addsd  xmm14,xmm15
   15c1c:	movapd xmm15,xmm8
   15c21:	mulsd  xmm15,xmm12
   15c26:	mulsd  xmm12,xmm9
   15c2b:	subsd  xmm14,xmm15
   15c30:	addsd  xmm13,xmm12
   15c35:	movsd  xmm12,QWORD PTR [rsi+0x48]
   15c3b:	movapd xmm15,xmm14
   15c40:	movapd xmm14,xmm4
   15c45:	mulsd  xmm14,xmm7
   15c4a:	addsd  xmm13,xmm11
   15c4f:	movsd  xmm11,QWORD PTR [rsi+0x40]
   15c55:	mulsd  xmm4,xmm6
   15c59:	addsd  xmm14,xmm15
   15c5e:	movapd xmm15,xmm0
   15c63:	mulsd  xmm0,xmm7
   15c67:	mulsd  xmm15,xmm6
   15c6c:	addsd  xmm13,xmm0
   15c71:	movsd  xmm0,QWORD PTR [rsi+0x50]
   15c76:	subsd  xmm14,xmm15
   15c7b:	addsd  xmm13,xmm4
   15c80:	movsd  xmm4,QWORD PTR [rsi+0x58]
   15c85:	movsd  QWORD PTR [rdx+0x20],xmm14
   15c8b:	movsd  xmm14,QWORD PTR [rsi+0x38]
   15c91:	movsd  QWORD PTR [rdx+0x28],xmm13
   15c97:	movsd  xmm13,QWORD PTR [rsi+0x30]
   15c9d:	mulsd  xmm10,xmm14
   15ca2:	mulsd  xmm5,xmm13
   15ca7:	movapd xmm15,xmm5
   15cac:	movapd xmm5,xmm3
   15cb0:	mulsd  xmm5,xmm14
   15cb5:	mulsd  xmm3,xmm13
   15cba:	subsd  xmm15,xmm5
   15cbf:	movapd xmm5,xmm2
   15cc3:	mulsd  xmm5,xmm11
   15cc8:	addsd  xmm10,xmm3
   15ccd:	mulsd  xmm2,xmm12
   15cd2:	addsd  xmm5,xmm15
   15cd7:	movapd xmm15,xmm1
   15cdc:	mulsd  xmm15,xmm12
   15ce1:	addsd  xmm10,xmm2
   15ce6:	mulsd  xmm1,xmm11
   15ceb:	subsd  xmm5,xmm15
   15cf0:	addsd  xmm10,xmm1
   15cf5:	movsd  xmm1,QWORD PTR [rsp-0x40]
   15cfb:	mulsd  xmm1,xmm4
   15cff:	movapd xmm15,xmm5
   15d04:	movsd  xmm5,QWORD PTR [rsp-0x40]
   15d0a:	mulsd  xmm5,xmm0
   15d0e:	addsd  xmm10,xmm1
   15d13:	movsd  xmm1,QWORD PTR [rsp-0x38]
   15d19:	addsd  xmm5,xmm15
   15d1e:	movsd  xmm15,QWORD PTR [rsp-0x38]
   15d25:	mulsd  xmm1,xmm0
   15d29:	mulsd  xmm15,xmm4
   15d2e:	addsd  xmm10,xmm1
   15d33:	subsd  xmm5,xmm15
   15d38:	movsd  QWORD PTR [rdx+0x38],xmm10
   15d3e:	movsd  xmm3,QWORD PTR [rsi+0x38]
   15d43:	movsd  QWORD PTR [rdx+0x30],xmm5
   15d48:	movsd  xmm2,QWORD PTR [rsi+0x30]
   15d4d:	movsd  xmm10,QWORD PTR [rsp-0x20]
   15d54:	movsd  xmm14,QWORD PTR [rsp-0x18]
   15d5b:	movsd  xmm13,QWORD PTR [rsp-0x10]
   15d62:	movapd xmm5,xmm10
   15d67:	movsd  xmm15,QWORD PTR [rsp-0x8]
   15d6e:	mulsd  xmm5,xmm2
   15d72:	movapd xmm1,xmm14
   15d77:	mulsd  xmm1,xmm3
   15d7b:	subsd  xmm5,xmm1
   15d7f:	movsd  xmm1,QWORD PTR [rsp-0x50]
   15d85:	mulsd  xmm1,xmm11
   15d8a:	mulsd  xmm11,QWORD PTR [rsp-0x48]
   15d91:	addsd  xmm1,xmm5
   15d95:	movsd  xmm5,QWORD PTR [rsp-0x48]
   15d9b:	mulsd  xmm5,xmm12
   15da0:	mulsd  xmm12,QWORD PTR [rsp-0x50]
   15da7:	subsd  xmm1,xmm5
   15dab:	movapd xmm5,xmm1
   15daf:	movapd xmm1,xmm13
   15db4:	mulsd  xmm1,xmm0
   15db8:	mulsd  xmm13,xmm4
   15dbd:	addsd  xmm1,xmm5
   15dc1:	movapd xmm5,xmm15
   15dc6:	mulsd  xmm5,xmm4
   15dca:	mulsd  xmm15,xmm0
   15dcf:	subsd  xmm1,xmm5
   15dd3:	movapd xmm5,xmm14
   15dd8:	mulsd  xmm5,xmm2
   15ddc:	movsd  QWORD PTR [rdx+0x40],xmm1
   15de1:	movapd xmm1,xmm10
   15de6:	mulsd  xmm1,xmm3
   15dea:	addsd  xmm1,xmm5
   15dee:	movsd  xmm5,QWORD PTR [rsi+0x40]
   15df3:	addsd  xmm1,xmm12
   15df8:	movsd  xmm12,QWORD PTR [rsp-0x30]
   15dff:	addsd  xmm1,xmm11
   15e04:	addsd  xmm1,xmm13
   15e09:	movsd  xmm13,QWORD PTR [rsp-0x28]
   15e10:	movapd xmm11,xmm13
   15e15:	addsd  xmm1,xmm15
   15e1a:	mulsd  xmm11,xmm3
   15e1f:	mulsd  xmm3,xmm12
   15e24:	movsd  QWORD PTR [rdx+0x48],xmm1
   15e29:	movapd xmm1,xmm12
   15e2e:	movsd  xmm10,QWORD PTR [rsi+0x48]
   15e34:	mulsd  xmm1,xmm2
   15e38:	mulsd  xmm2,xmm13
   15e3d:	subsd  xmm1,xmm11
   15e42:	movapd xmm11,xmm9
   15e47:	mulsd  xmm11,xmm5
   15e4c:	addsd  xmm2,xmm3
   15e50:	mulsd  xmm9,xmm10
   15e55:	addsd  xmm1,xmm11
   15e5a:	movapd xmm11,xmm8
   15e5f:	mulsd  xmm11,xmm10
   15e64:	addsd  xmm9,xmm2
   15e69:	mulsd  xmm8,xmm5
   15e6e:	subsd  xmm1,xmm11
   15e73:	movapd xmm11,xmm7
   15e78:	mulsd  xmm11,xmm0
   15e7d:	addsd  xmm8,xmm9
   15e82:	mulsd  xmm7,xmm4
   15e86:	addsd  xmm1,xmm11
   15e8b:	movapd xmm11,xmm6
   15e90:	mulsd  xmm11,xmm4
   15e95:	addsd  xmm7,xmm8
   15e9a:	mulsd  xmm6,xmm0
   15e9e:	subsd  xmm1,xmm11
   15ea3:	addsd  xmm6,xmm7
   15ea7:	movsd  QWORD PTR [rdx+0x50],xmm1
   15eac:	movsd  QWORD PTR [rdx+0x58],xmm6
   15eb1:	ret    
   15eb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15ebc:	nop    DWORD PTR [rax+0x0]

0000000000015ec0 <mult_adj_su3_mat_hwvec>:
   15ec0:	endbr64 
   15ec4:	movsd  xmm2,QWORD PTR [rdi]
   15ec8:	movsd  xmm11,QWORD PTR [rdi+0x8]
   15ece:	movsd  xmm8,QWORD PTR [rsi]
   15ed3:	movsd  xmm5,QWORD PTR [rsi+0x8]
   15ed8:	movapd xmm7,xmm2
   15edc:	movapd xmm9,xmm11
   15ee1:	movsd  xmm1,QWORD PTR [rdi+0x30]
   15ee6:	movsd  xmm6,QWORD PTR [rsi+0x10]
   15eeb:	mulsd  xmm9,xmm5
   15ef0:	movsd  xmm10,QWORD PTR [rdi+0x38]
   15ef6:	movsd  xmm4,QWORD PTR [rsi+0x18]
   15efb:	mulsd  xmm7,xmm8
   15f00:	movsd  xmm3,QWORD PTR [rsi+0x20]
   15f05:	movsd  xmm0,QWORD PTR [rsi+0x28]
   15f0a:	movsd  xmm14,QWORD PTR [rdi+0x60]
   15f10:	movsd  xmm13,QWORD PTR [rdi+0x68]
   15f16:	mulsd  xmm8,xmm11
   15f1b:	mulsd  xmm5,xmm2
   15f1f:	movsd  xmm15,QWORD PTR [rdi+0x10]
   15f25:	movsd  QWORD PTR [rsp-0x38],xmm14
   15f2c:	movsd  QWORD PTR [rsp-0x30],xmm13
   15f33:	addsd  xmm7,xmm9
   15f38:	movapd xmm9,xmm1
   15f3d:	movsd  QWORD PTR [rsp-0x20],xmm15
   15f44:	mulsd  xmm9,xmm6
   15f49:	subsd  xmm5,xmm8
   15f4e:	movsd  xmm8,QWORD PTR [rdi+0x40]
   15f54:	movsd  QWORD PTR [rsp-0x50],xmm8
   15f5b:	movapd xmm8,xmm15
   15f60:	addsd  xmm7,xmm9
   15f65:	movapd xmm9,xmm10
   15f6a:	mulsd  xmm9,xmm4
   15f6f:	addsd  xmm7,xmm9
   15f74:	movapd xmm9,xmm14
   15f79:	mulsd  xmm9,xmm3
   15f7e:	addsd  xmm7,xmm9
   15f83:	movapd xmm9,xmm13
   15f88:	mulsd  xmm9,xmm0
   15f8d:	addsd  xmm7,xmm9
   15f92:	movsd  xmm9,QWORD PTR [rdi+0x18]
   15f98:	movsd  QWORD PTR [rsp-0x18],xmm9
   15f9f:	movsd  QWORD PTR [rdx],xmm7
   15fa3:	movapd xmm7,xmm1
   15fa7:	movsd  xmm12,QWORD PTR [rsi]
   15fac:	mulsd  xmm7,xmm4
   15fb0:	mulsd  xmm8,xmm12
   15fb5:	addsd  xmm5,xmm7
   15fb9:	movapd xmm7,xmm10
   15fbe:	mulsd  xmm7,xmm6
   15fc2:	subsd  xmm5,xmm7
   15fc6:	movapd xmm7,xmm14
   15fcb:	movsd  xmm14,QWORD PTR [rdi+0x48]
   15fd1:	mulsd  xmm7,xmm0
   15fd5:	movsd  QWORD PTR [rsp-0x48],xmm14
   15fdc:	movsd  xmm14,QWORD PTR [rdi+0x78]
   15fe2:	addsd  xmm5,xmm7
   15fe6:	movapd xmm7,xmm13
   15feb:	movsd  xmm13,QWORD PTR [rdi+0x70]
   15ff1:	mulsd  xmm7,xmm3
   15ff5:	subsd  xmm5,xmm7
   15ff9:	movapd xmm7,xmm8
   15ffe:	movapd xmm8,xmm9
   16003:	movsd  QWORD PTR [rdx+0x8],xmm5
   16008:	movsd  xmm5,QWORD PTR [rsi+0x8]
   1600d:	mulsd  xmm8,xmm5
   16012:	addsd  xmm7,xmm8
   16017:	movsd  xmm8,QWORD PTR [rsp-0x50]
   1601e:	mulsd  xmm8,xmm6
   16023:	addsd  xmm8,xmm7
   16028:	movsd  xmm7,QWORD PTR [rsp-0x48]
   1602e:	mulsd  xmm7,xmm4
   16032:	mulsd  xmm4,QWORD PTR [rsp-0x50]
   16038:	addsd  xmm8,xmm7
   1603d:	movapd xmm7,xmm13
   16042:	mulsd  xmm7,xmm3
   16046:	addsd  xmm7,xmm8
   1604b:	movapd xmm8,xmm14
   16050:	mulsd  xmm8,xmm0
   16055:	addsd  xmm7,xmm8
   1605a:	movapd xmm8,xmm15
   1605f:	mulsd  xmm8,xmm5
   16064:	movsd  QWORD PTR [rdx+0x10],xmm7
   16069:	mulsd  xmm6,QWORD PTR [rsp-0x48]
   1606f:	movsd  QWORD PTR [rsp-0x10],xmm13
   16076:	movsd  QWORD PTR [rsp-0x8],xmm14
   1607d:	movapd xmm7,xmm8
   16082:	movapd xmm8,xmm9
   16087:	movsd  xmm9,QWORD PTR [rdi+0x50]
   1608d:	mulsd  xmm8,xmm12
   16092:	subsd  xmm7,xmm8
   16097:	movsd  xmm8,QWORD PTR [rdi+0x58]
   1609d:	addsd  xmm7,xmm4
   160a1:	movapd xmm4,xmm14
   160a6:	movsd  xmm14,QWORD PTR [rsi+0x10]
   160ac:	mulsd  xmm4,xmm3
   160b0:	subsd  xmm7,xmm6
   160b4:	movapd xmm6,xmm13
   160b9:	mulsd  xmm6,xmm0
   160bd:	addsd  xmm7,xmm6
   160c1:	movsd  xmm6,QWORD PTR [rdi+0x20]
   160c6:	movapd xmm15,xmm6
   160cb:	movsd  xmm6,QWORD PTR [rdi+0x28]
   160d0:	movsd  QWORD PTR [rsp-0x28],xmm15
   160d7:	movapd xmm13,xmm15
   160dc:	subsd  xmm7,xmm4
   160e0:	movsd  QWORD PTR [rsp-0x40],xmm6
   160e6:	movsd  xmm15,QWORD PTR [rsp-0x40]
   160ed:	mulsd  xmm13,xmm12
   160f2:	movsd  xmm6,QWORD PTR [rdi+0x88]
   160fa:	mulsd  xmm12,QWORD PTR [rsp-0x40]
   16101:	mulsd  xmm15,xmm5
   16106:	movsd  QWORD PTR [rdx+0x18],xmm7
   1610b:	movsd  xmm4,QWORD PTR [rsi+0x18]
   16110:	movsd  xmm7,QWORD PTR [rdi+0x80]
   16118:	mulsd  xmm5,QWORD PTR [rsp-0x28]
   1611e:	addsd  xmm13,xmm15
   16123:	movapd xmm15,xmm9
   16128:	mulsd  xmm15,xmm14
   1612d:	subsd  xmm5,xmm12
   16132:	movsd  xmm12,QWORD PTR [rsi+0x48]
   16138:	mulsd  xmm14,xmm8
   1613d:	addsd  xmm15,xmm13
   16142:	movapd xmm13,xmm8
   16147:	mulsd  xmm13,xmm4
   1614c:	mulsd  xmm4,xmm9
   16151:	addsd  xmm15,xmm13
   16156:	movapd xmm13,xmm3
   1615b:	mulsd  xmm13,xmm7
   16160:	addsd  xmm5,xmm4
   16164:	movapd xmm4,xmm2
   16168:	mulsd  xmm3,xmm6
   1616c:	subsd  xmm5,xmm14
   16171:	movsd  xmm14,QWORD PTR [rsi+0x38]
   16177:	addsd  xmm13,xmm15
   1617c:	mulsd  xmm2,xmm14
   16181:	movapd xmm15,xmm0
   16186:	mulsd  xmm15,xmm6
   1618b:	mulsd  xmm0,xmm7
   1618f:	addsd  xmm13,xmm15
   16194:	movapd xmm15,xmm11
   16199:	addsd  xmm5,xmm0
   1619d:	mulsd  xmm15,xmm14
   161a2:	movsd  xmm0,QWORD PTR [rsi+0x50]
   161a7:	movsd  QWORD PTR [rdx+0x20],xmm13
   161ad:	movsd  xmm13,QWORD PTR [rsi+0x30]
   161b3:	subsd  xmm5,xmm3
   161b7:	movsd  xmm3,QWORD PTR [rsi+0x58]
   161bc:	mulsd  xmm4,xmm13
   161c1:	mulsd  xmm11,xmm13
   161c6:	movsd  QWORD PTR [rdx+0x28],xmm5
   161cb:	movsd  xmm5,QWORD PTR [rsi+0x40]
   161d0:	addsd  xmm4,xmm15
   161d5:	movapd xmm15,xmm1
   161da:	mulsd  xmm15,xmm5
   161df:	subsd  xmm2,xmm11
   161e4:	mulsd  xmm1,xmm12
   161e9:	addsd  xmm15,xmm4
   161ee:	movapd xmm4,xmm10
   161f3:	mulsd  xmm4,xmm12
   161f8:	addsd  xmm2,xmm1
   161fc:	movsd  xmm1,QWORD PTR [rsp-0x38]
   16202:	mulsd  xmm10,xmm5
   16207:	mulsd  xmm1,xmm3
   1620b:	addsd  xmm15,xmm4
   16210:	movsd  xmm4,QWORD PTR [rsp-0x38]
   16216:	subsd  xmm2,xmm10
   1621b:	mulsd  xmm4,xmm0
   1621f:	addsd  xmm2,xmm1
   16223:	movsd  xmm1,QWORD PTR [rsp-0x30]
   16229:	mulsd  xmm1,xmm0
   1622d:	addsd  xmm4,xmm15
   16232:	movsd  xmm15,QWORD PTR [rsp-0x30]
   16239:	mulsd  xmm15,xmm3
   1623e:	subsd  xmm2,xmm1
   16242:	addsd  xmm4,xmm15
   16247:	movsd  QWORD PTR [rdx+0x38],xmm2
   1624c:	movsd  QWORD PTR [rdx+0x30],xmm4
   16251:	movsd  xmm2,QWORD PTR [rsi+0x30]
   16256:	movsd  xmm4,QWORD PTR [rsi+0x38]
   1625b:	movsd  xmm14,QWORD PTR [rsp-0x20]
   16262:	movsd  xmm11,QWORD PTR [rsp-0x18]
   16269:	movsd  xmm13,QWORD PTR [rsp-0x10]
   16270:	movsd  xmm15,QWORD PTR [rsp-0x8]
   16277:	movapd xmm1,xmm14
   1627c:	movapd xmm10,xmm11
   16281:	mulsd  xmm10,xmm4
   16286:	mulsd  xmm1,xmm2
   1628a:	mulsd  xmm11,xmm2
   1628f:	addsd  xmm1,xmm10
   16294:	movsd  xmm10,QWORD PTR [rsp-0x50]
   1629b:	mulsd  xmm10,xmm5
   162a0:	mulsd  xmm5,QWORD PTR [rsp-0x48]
   162a6:	addsd  xmm10,xmm1
   162ab:	movsd  xmm1,QWORD PTR [rsp-0x48]
   162b1:	mulsd  xmm1,xmm12
   162b6:	mulsd  xmm12,QWORD PTR [rsp-0x50]
   162bd:	addsd  xmm10,xmm1
   162c2:	movapd xmm1,xmm13
   162c7:	mulsd  xmm1,xmm0
   162cb:	addsd  xmm1,xmm10
   162d0:	movapd xmm10,xmm15
   162d5:	mulsd  xmm10,xmm3
   162da:	addsd  xmm1,xmm10
   162df:	movsd  QWORD PTR [rdx+0x40],xmm1
   162e4:	movapd xmm1,xmm14
   162e9:	movsd  xmm14,QWORD PTR [rsp-0x40]
   162f0:	mulsd  xmm1,xmm4
   162f4:	subsd  xmm1,xmm11
   162f9:	movapd xmm11,xmm14
   162fe:	mulsd  xmm11,xmm4
   16303:	addsd  xmm1,xmm12
   16308:	movapd xmm12,xmm13
   1630d:	mulsd  xmm12,xmm3
   16312:	subsd  xmm1,xmm5
   16316:	movapd xmm5,xmm15
   1631b:	mulsd  xmm5,xmm0
   1631f:	addsd  xmm1,xmm12
   16324:	movsd  xmm12,QWORD PTR [rsp-0x28]
   1632b:	mulsd  xmm4,xmm12
   16330:	subsd  xmm1,xmm5
   16334:	movsd  xmm5,QWORD PTR [rsi+0x40]
   16339:	movsd  QWORD PTR [rdx+0x48],xmm1
   1633e:	movapd xmm1,xmm12
   16343:	movsd  xmm10,QWORD PTR [rsi+0x48]
   16349:	mulsd  xmm1,xmm2
   1634d:	mulsd  xmm2,xmm14
   16352:	addsd  xmm1,xmm11
   16357:	movapd xmm11,xmm9
   1635c:	mulsd  xmm11,xmm5
   16361:	subsd  xmm4,xmm2
   16365:	mulsd  xmm9,xmm10
   1636a:	addsd  xmm1,xmm11
   1636f:	movapd xmm11,xmm8
   16374:	mulsd  xmm11,xmm10
   16379:	addsd  xmm9,xmm4
   1637e:	mulsd  xmm8,xmm5
   16383:	addsd  xmm1,xmm11
   16388:	movapd xmm11,xmm7
   1638d:	mulsd  xmm11,xmm0
   16392:	subsd  xmm9,xmm8
   16397:	mulsd  xmm7,xmm3
   1639b:	addsd  xmm1,xmm11
   163a0:	movapd xmm11,xmm6
   163a5:	mulsd  xmm11,xmm3
   163aa:	addsd  xmm7,xmm9
   163af:	mulsd  xmm6,xmm0
   163b3:	addsd  xmm1,xmm11
   163b8:	subsd  xmm7,xmm6
   163bc:	movsd  QWORD PTR [rdx+0x50],xmm1
   163c1:	movsd  QWORD PTR [rdx+0x58],xmm7
   163c6:	ret    
   163c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000163d0 <cleanup_gathers>:
   163d0:	endbr64 
   163d4:	push   r13
   163d6:	push   r12
   163d8:	mov    r12,rsi
   163db:	push   rbp
   163dc:	mov    rbp,rdi
   163df:	push   rbx
   163e0:	xor    ebx,ebx
   163e2:	sub    rsp,0x8
   163e6:	mov    r13,rbx
   163e9:	neg    r13
   163ec:	mov    rdi,QWORD PTR [rbp+r13*1+0x0]
   163f1:	call   19180 <cleanup_gather>
   163f6:	mov    rdi,QWORD PTR [rbp+rbx*1+0x38]
   163fb:	call   19180 <cleanup_gather>
   16400:	mov    rdi,QWORD PTR [r12+r13*1]
   16404:	call   19180 <cleanup_gather>
   16409:	mov    rdi,QWORD PTR [r12+rbx*1+0x38]
   1640e:	sub    rbx,0x8
   16412:	call   19180 <cleanup_gather>
   16417:	cmp    rbx,0xffffffffffffffe0
   1641b:	jne    163e6 <cleanup_gathers+0x16>
   1641d:	mov    ebx,0x40
   16422:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
   16427:	mov    r13,rbx
   1642a:	neg    r13
   1642d:	call   19180 <cleanup_gather>
   16432:	mov    rdi,QWORD PTR [rbp+r13*1+0xb8]
   1643a:	call   19180 <cleanup_gather>
   1643f:	mov    rdi,QWORD PTR [r12+rbx*1]
   16443:	add    rbx,0x8
   16447:	call   19180 <cleanup_gather>
   1644c:	mov    rdi,QWORD PTR [r12+r13*1+0xb8]
   16454:	call   19180 <cleanup_gather>
   16459:	cmp    rbx,0x60
   1645d:	jne    16422 <cleanup_gathers+0x52>
   1645f:	add    rsp,0x8
   16463:	pop    rbx
   16464:	pop    rbp
   16465:	pop    r12
   16467:	pop    r13
   16469:	ret    
   1646a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016470 <cleanup_dslash_temps>:
   16470:	endbr64 
   16474:	mov    eax,DWORD PTR [rip+0xbe2e]        # 222a8 <temp_not_allocated>
   1647a:	test   eax,eax
   1647c:	jne    164b8 <cleanup_dslash_temps+0x48>
   1647e:	push   rbp
   1647f:	push   rbx
   16480:	lea    rbx,[rip+0xbed9]        # 22360 <temp>
   16487:	lea    rbp,[rbx+0x48]
   1648b:	sub    rsp,0x8
   1648f:	nop
   16490:	mov    rdi,QWORD PTR [rbx]
   16493:	add    rbx,0x8
   16497:	call   22a0 <free@plt>
   1649c:	cmp    rbx,rbp
   1649f:	jne    16490 <cleanup_dslash_temps+0x20>
   164a1:	mov    DWORD PTR [rip+0xbdfd],0x1        # 222a8 <temp_not_allocated>
   164ab:	add    rsp,0x8
   164af:	pop    rbx
   164b0:	pop    rbp
   164b1:	ret    
   164b2:	nop    WORD PTR [rax+rax*1+0x0]
   164b8:	mov    DWORD PTR [rip+0xbde6],0x1        # 222a8 <temp_not_allocated>
   164c2:	ret    
   164c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   164ce:	xchg   ax,ax

00000000000164d0 <dslash_fn>:
   164d0:	endbr64 
   164d4:	push   r15
   164d6:	push   r14
   164d8:	push   r13
   164da:	movsxd r13,edi
   164dd:	push   r12
   164df:	push   rbp
   164e0:	mov    ebp,edx
   164e2:	push   rbx
   164e3:	sub    rsp,0xb8
   164ea:	mov    edx,DWORD PTR [rip+0xc2b8]        # 227a8 <valid_longlinks>
   164f0:	mov    DWORD PTR [rsp+0x18],esi
   164f4:	mov    rax,QWORD PTR fs:0x28
   164fd:	mov    QWORD PTR [rsp+0xa8],rax
   16505:	xor    eax,eax
   16507:	test   edx,edx
   16509:	je     169b0 <dslash_fn+0x4e0>
   1650f:	mov    eax,DWORD PTR [rip+0xc323]        # 22838 <valid_fatlinks>
   16515:	test   eax,eax
   16517:	je     169a0 <dslash_fn+0x4d0>
   1651d:	lea    eax,[rbp-0x1]
   16520:	cmp    eax,0x2
   16523:	ja     16532 <dslash_fn+0x62>
   16525:	lea    rdx,[rip+0x629c]        # 1c7c8 <CSWTCH.77>
   1652c:	mov    eax,DWORD PTR [rdx+rax*4]
   1652f:	mov    DWORD PTR [rsp],eax
   16532:	lea    r12,[rip+0xc327]        # 22860 <gen_pt>
   16539:	xor    r15d,r15d
   1653c:	lea    rbx,[rsp+0x20]
   16541:	lea    r14,[r12+0x40]
   16546:	mov    r8,QWORD PTR [r12+r15*8]
   1654a:	mov    edx,r15d
   1654d:	mov    ecx,ebp
   1654f:	mov    esi,0x30
   16554:	mov    edi,r13d
   16557:	call   18f40 <start_gather>
   1655c:	mov    r8,QWORD PTR [r14+r15*8]
   16560:	lea    edx,[r15+0x8]
   16564:	mov    ecx,ebp
   16566:	mov    esi,0x30
   1656b:	mov    edi,r13d
   1656e:	mov    QWORD PTR [rbx+r15*8],rax
   16572:	call   18f40 <start_gather>
   16577:	mov    QWORD PTR [rbx+r15*8+0x40],rax
   1657c:	add    r15,0x1
   16580:	cmp    r15,0x4
   16584:	jne    16546 <dslash_fn+0x76>
   16586:	cmp    DWORD PTR [rsp],0x2
   1658a:	je     16990 <dslash_fn+0x4c0>
   16590:	cmp    DWORD PTR [rsp],0x1
   16594:	mov    edx,DWORD PTR [rip+0xbf66]        # 22500 <sites_on_node>
   1659a:	jne    16970 <dslash_fn+0x4a0>
   165a0:	movsxd rcx,DWORD PTR [rip+0xc0dd]        # 22684 <even_sites_on_node>
   165a7:	mov    rsi,rcx
   165aa:	shl    rcx,0xb
   165ae:	add    rcx,QWORD PTR [rip+0xc213]        # 227c8 <lattice>
   165b5:	cmp    esi,edx
   165b7:	jge    16651 <dslash_fn+0x181>
   165bd:	lea    eax,[rsi*4+0x0]
   165c4:	sub    edx,0x1
   165c7:	lea    r15,[rcx+0x530]
   165ce:	cdqe   
   165d0:	sub    edx,esi
   165d2:	lea    rax,[rax+rax*8]
   165d6:	shl    rdx,0xb
   165da:	shl    rax,0x4
   165de:	mov    r14,rax
   165e1:	lea    rax,[rcx+rdx*1+0xd30]
   165e9:	mov    QWORD PTR [rsp+0x8],rax
   165ee:	lea    rax,[r13-0x530]
   165f5:	mov    QWORD PTR [rsp+0x10],rax
   165fa:	nop    WORD PTR [rax+rax*1+0x0]
   16600:	mov    rax,QWORD PTR [rsp+0x10]
   16605:	mov    rdi,QWORD PTR [rip+0xc1ac]        # 227b8 <t_fatlink>
   1660c:	mov    rdx,r15
   1660f:	mov    r13,QWORD PTR [rip+0xbef2]        # 22508 <t_longlink>
   16616:	lea    rsi,[rax+r15*1]
   1661a:	add    rdi,r14
   1661d:	mov    QWORD PTR [rsp],rsi
   16621:	add    r13,r14
   16624:	add    r14,0x240
   1662b:	call   14f30 <mult_adj_su3_mat_vec_4dir>
   16630:	mov    rsi,QWORD PTR [rsp]
   16634:	lea    rdx,[r15+0xc0]
   1663b:	mov    rdi,r13
   1663e:	add    r15,0x800
   16645:	call   14f30 <mult_adj_su3_mat_vec_4dir>
   1664a:	cmp    r15,QWORD PTR [rsp+0x8]
   1664f:	jne    16600 <dslash_fn+0x130>
   16651:	mov    r13d,0x38
   16657:	mov    r14d,0x7
   1665d:	mov    rcx,r13
   16660:	mov    r8,QWORD PTR [r12+r13*1]
   16664:	mov    edx,r14d
   16667:	mov    esi,0x30
   1666c:	lea    rax,[r13*4+0x0]
   16674:	sub    r14d,0x1
   16678:	sub    rcx,rax
   1667b:	lea    rdi,[rcx+rcx*1+0x680]
   16683:	mov    ecx,ebp
   16685:	call   18f40 <start_gather>
   1668a:	mov    QWORD PTR [rbx+r13*1],rax
   1668e:	sub    r13,0x8
   16692:	cmp    r13,0x18
   16696:	jne    1665d <dslash_fn+0x18d>
   16698:	mov    r14d,0x78
   1669e:	mov    r15d,0xf
   166a4:	mov    r13d,0x5f0
   166aa:	mov    r8,QWORD PTR [r12+r14*1]
   166ae:	mov    edx,r15d
   166b1:	mov    edi,r13d
   166b4:	mov    ecx,ebp
   166b6:	mov    esi,0x30
   166bb:	add    r13,0x30
   166bf:	sub    r15d,0x1
   166c3:	call   18f40 <start_gather>
   166c8:	mov    QWORD PTR [rbx+r14*1],rax
   166cc:	sub    r14,0x8
   166d0:	cmp    r13,0x6b0
   166d7:	jne    166aa <dslash_fn+0x1da>
   166d9:	lea    rax,[rsp+0x40]
   166de:	mov    r13,rbx
   166e1:	mov    r15,rbx
   166e4:	mov    QWORD PTR [rsp+0x8],rax
   166e9:	mov    rdi,QWORD PTR [r15]
   166ec:	add    r15,0x8
   166f0:	call   19170 <wait_gather>
   166f5:	mov    rdi,QWORD PTR [r15+0x38]
   166f9:	call   19170 <wait_gather>
   166fe:	cmp    QWORD PTR [rsp+0x8],r15
   16703:	jne    166e9 <dslash_fn+0x219>
   16705:	mov    rdi,QWORD PTR [rsp+0x58]
   1670a:	call   19170 <wait_gather>
   1670f:	mov    rdi,QWORD PTR [rsp+0x50]
   16714:	call   19170 <wait_gather>
   16719:	mov    rdi,QWORD PTR [rsp+0x48]
   1671e:	call   19170 <wait_gather>
   16723:	mov    rdi,QWORD PTR [rsp+0x40]
   16728:	call   19170 <wait_gather>
   1672d:	mov    rdi,QWORD PTR [rsp+0x98]
   16735:	call   19170 <wait_gather>
   1673a:	mov    rdi,QWORD PTR [rsp+0x90]
   16742:	call   19170 <wait_gather>
   16747:	mov    rdi,QWORD PTR [rsp+0x88]
   1674f:	call   19170 <wait_gather>
   16754:	mov    rdi,QWORD PTR [rsp+0x80]
   1675c:	call   19170 <wait_gather>
   16761:	cmp    ebp,0x2
   16764:	je     16980 <dslash_fn+0x4b0>
   1676a:	mov    edx,DWORD PTR [rip+0xbd90]        # 22500 <sites_on_node>
   16770:	cmp    ebp,0x1
   16773:	jne    169c0 <dslash_fn+0x4f0>
   16779:	movsxd rcx,DWORD PTR [rip+0xbf04]        # 22684 <even_sites_on_node>
   16780:	mov    rdi,rcx
   16783:	shl    rcx,0xb
   16787:	add    rcx,QWORD PTR [rip+0xc03a]        # 227c8 <lattice>
   1678e:	cmp    edi,edx
   16790:	jge    168f6 <dslash_fn+0x426>
   16796:	movsxd rsi,DWORD PTR [rsp+0x18]
   1679b:	lea    ebp,[rdx-0x1]
   1679e:	movsxd rax,edi
   167a1:	sub    ebp,edi
   167a3:	lea    r15,[rax*8+0x0]
   167ab:	shl    rbp,0xb
   167af:	lea    rdx,[rcx+rsi*1+0x800]
   167b7:	lea    r14,[rcx+rsi*1]
   167bb:	lea    rax,[rbp+rdx*1+0x0]
   167c0:	mov    QWORD PTR [rsp+0x10],rax
   167c5:	mov    eax,0x6b0
   167ca:	sub    rax,rsi
   167cd:	mov    QWORD PTR [rsp+0x18],rax
   167d2:	nop    WORD PTR [rax+rax*1+0x0]
   167d8:	mov    rdx,QWORD PTR [rip+0xc091]        # 22870 <gen_pt+0x10>
   167df:	mov    rsi,QWORD PTR [r12]
   167e3:	lea    rdi,[r15+r15*8]
   167e7:	mov    r9,r14
   167ea:	mov    r8,QWORD PTR [rip+0xc087]        # 22878 <gen_pt+0x18>
   167f1:	mov    r11,QWORD PTR [rip+0xbd10]        # 22508 <t_longlink>
   167f8:	shl    rdi,0x3
   167fc:	mov    rcx,QWORD PTR [rdx+r15*1]
   16800:	mov    rdx,QWORD PTR [rip+0xc061]        # 22868 <gen_pt+0x8>
   16807:	mov    rsi,QWORD PTR [rsi+r15*1]
   1680b:	mov    r8,QWORD PTR [r8+r15*1]
   1680f:	add    r11,rdi
   16812:	mov    rdx,QWORD PTR [rdx+r15*1]
   16816:	add    rdi,QWORD PTR [rip+0xbf9b]        # 227b8 <t_fatlink>
   1681d:	mov    QWORD PTR [rsp],r11
   16821:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   16826:	mov    rdx,QWORD PTR [rip+0xc083]        # 228b0 <gen_pt+0x50>
   1682d:	mov    r11,QWORD PTR [rsp]
   16831:	mov    rax,QWORD PTR [rsp+0x18]
   16836:	mov    rdi,QWORD PTR [rip+0xc07b]        # 228b8 <gen_pt+0x58>
   1683d:	mov    rcx,QWORD PTR [rdx+r15*1]
   16841:	mov    rsi,QWORD PTR [rip+0xc058]        # 228a0 <gen_pt+0x40>
   16848:	mov    rdx,QWORD PTR [rip+0xc059]        # 228a8 <gen_pt+0x48>
   1684f:	lea    rbp,[rax+r14*1]
   16853:	mov    r8,QWORD PTR [rdi+r15*1]
   16857:	mov    rdi,r11
   1685a:	mov    rsi,QWORD PTR [rsi+r15*1]
   1685e:	mov    r9,rbp
   16861:	mov    rdx,QWORD PTR [rdx+r15*1]
   16865:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   1686a:	mov    rdx,QWORD PTR [rip+0xc017]        # 22888 <gen_pt+0x28>
   16871:	mov    rdi,QWORD PTR [rip+0xc008]        # 22880 <gen_pt+0x20>
   16878:	mov    rsi,QWORD PTR [rip+0xc019]        # 22898 <gen_pt+0x38>
   1687f:	mov    rcx,QWORD PTR [rdx+r15*1]
   16883:	mov    rdx,QWORD PTR [rip+0xc006]        # 22890 <gen_pt+0x30>
   1688a:	mov    r8,QWORD PTR [rdi+r15*1]
   1688e:	mov    rsi,QWORD PTR [rsi+r15*1]
   16892:	mov    rdi,r14
   16895:	mov    rdx,QWORD PTR [rdx+r15*1]
   16899:	call   14e20 <sub_four_su3_vecs>
   1689e:	mov    rdx,QWORD PTR [rip+0xc023]        # 228c8 <gen_pt+0x68>
   168a5:	mov    rdi,QWORD PTR [rip+0xc014]        # 228c0 <gen_pt+0x60>
   168ac:	mov    rsi,QWORD PTR [rip+0xc025]        # 228d8 <gen_pt+0x78>
   168b3:	mov    rcx,QWORD PTR [rdx+r15*1]
   168b7:	mov    rdx,QWORD PTR [rip+0xc012]        # 228d0 <gen_pt+0x70>
   168be:	mov    r8,QWORD PTR [rdi+r15*1]
   168c2:	mov    rsi,QWORD PTR [rsi+r15*1]
   168c6:	mov    rdi,rbp
   168c9:	mov    rdx,QWORD PTR [rdx+r15*1]
   168cd:	add    r15,0x8
   168d1:	call   14e20 <sub_four_su3_vecs>
   168d6:	mov    rdx,r14
   168d9:	mov    rdi,r14
   168dc:	mov    rsi,rbp
   168df:	call   13f40 <add_su3_vector>
   168e4:	add    r14,0x800
   168eb:	cmp    r14,QWORD PTR [rsp+0x10]
   168f0:	jne    167d8 <dslash_fn+0x308>
   168f6:	mov    r12,rbx
   168f9:	mov    rbp,rbx
   168fc:	mov    rdi,QWORD PTR [rbp+0x0]
   16900:	sub    r12,0x8
   16904:	add    rbp,0x8
   16908:	call   19180 <cleanup_gather>
   1690d:	mov    rdi,QWORD PTR [r12+0x40]
   16912:	call   19180 <cleanup_gather>
   16917:	cmp    rbp,QWORD PTR [rsp+0x8]
   1691c:	jne    168fc <dslash_fn+0x42c>
   1691e:	mov    rdi,QWORD PTR [r13+0x40]
   16922:	sub    rbx,0x8
   16926:	add    r13,0x8
   1692a:	call   19180 <cleanup_gather>
   1692f:	mov    rdi,QWORD PTR [rbx+0x80]
   16936:	call   19180 <cleanup_gather>
   1693b:	cmp    r13,QWORD PTR [rsp+0x8]
   16940:	jne    1691e <dslash_fn+0x44e>
   16942:	mov    rax,QWORD PTR [rsp+0xa8]
   1694a:	xor    rax,QWORD PTR fs:0x28
   16953:	jne    169c9 <dslash_fn+0x4f9>
   16955:	add    rsp,0xb8
   1695c:	pop    rbx
   1695d:	pop    rbp
   1695e:	pop    r12
   16960:	pop    r13
   16962:	pop    r14
   16964:	pop    r15
   16966:	ret    
   16967:	nop    WORD PTR [rax+rax*1+0x0]
   16970:	xor    ecx,ecx
   16972:	xor    esi,esi
   16974:	jmp    165ae <dslash_fn+0xde>
   16979:	nop    DWORD PTR [rax+0x0]
   16980:	mov    edx,DWORD PTR [rip+0xbcfe]        # 22684 <even_sites_on_node>
   16986:	xor    ecx,ecx
   16988:	xor    edi,edi
   1698a:	jmp    16787 <dslash_fn+0x2b7>
   1698f:	nop
   16990:	mov    edx,DWORD PTR [rip+0xbcee]        # 22684 <even_sites_on_node>
   16996:	xor    ecx,ecx
   16998:	xor    esi,esi
   1699a:	jmp    165ae <dslash_fn+0xde>
   1699f:	nop
   169a0:	xor    eax,eax
   169a2:	call   121d0 <load_fatlinks>
   169a7:	jmp    1651d <dslash_fn+0x4d>
   169ac:	nop    DWORD PTR [rax+0x0]
   169b0:	call   11b30 <load_longlinks>
   169b5:	jmp    1650f <dslash_fn+0x3f>
   169ba:	nop    WORD PTR [rax+rax*1+0x0]
   169c0:	xor    ecx,ecx
   169c2:	xor    edi,edi
   169c4:	jmp    16787 <dslash_fn+0x2b7>
   169c9:	call   2350 <__stack_chk_fail@plt>
   169ce:	xchg   ax,ax

00000000000169d0 <dslash_fn_special>:
   169d0:	endbr64 
   169d4:	push   r15
   169d6:	push   r14
   169d8:	push   r13
   169da:	mov    r13d,r8d
   169dd:	push   r12
   169df:	mov    r12d,edx
   169e2:	push   rbp
   169e3:	mov    rbp,rcx
   169e6:	push   rbx
   169e7:	movsxd rbx,edi
   169ea:	sub    rsp,0x28
   169ee:	mov    edx,DWORD PTR [rip+0xbdb4]        # 227a8 <valid_longlinks>
   169f4:	mov    DWORD PTR [rsp+0x1c],esi
   169f8:	test   edx,edx
   169fa:	je     16f10 <dslash_fn_special+0x540>
   16a00:	mov    eax,DWORD PTR [rip+0xbe32]        # 22838 <valid_fatlinks>
   16a06:	test   eax,eax
   16a08:	je     16f25 <dslash_fn_special+0x555>
   16a0e:	lea    eax,[r12-0x1]
   16a13:	cmp    eax,0x2
   16a16:	ja     16a25 <dslash_fn_special+0x55>
   16a18:	lea    rdx,[rip+0x5da9]        # 1c7c8 <CSWTCH.77>
   16a1f:	mov    eax,DWORD PTR [rdx+rax*4]
   16a22:	mov    DWORD PTR [rsp],eax
   16a25:	xor    r15d,r15d
   16a28:	lea    r14,[rip+0xbe31]        # 22860 <gen_pt>
   16a2f:	mov    r8,QWORD PTR [r14+r15*8]
   16a33:	cmp    r13d,0x1
   16a37:	je     16e80 <dslash_fn_special+0x4b0>
   16a3d:	mov    r9,QWORD PTR [rbp+r15*8+0x0]
   16a42:	mov    ecx,r12d
   16a45:	mov    edx,r15d
   16a48:	mov    esi,0x30
   16a4d:	mov    edi,ebx
   16a4f:	call   19060 <restart_gather>
   16a54:	add    r15,0x1
   16a58:	cmp    r15,0x4
   16a5c:	jne    16a2f <dslash_fn_special+0x5f>
   16a5e:	mov    r15d,0x8
   16a64:	mov    r8,QWORD PTR [r14+r15*8]
   16a68:	cmp    r13d,0x1
   16a6c:	je     16e60 <dslash_fn_special+0x490>
   16a72:	mov    r9,QWORD PTR [rbp+r15*8+0x0]
   16a77:	mov    ecx,r12d
   16a7a:	mov    edx,r15d
   16a7d:	mov    esi,0x30
   16a82:	mov    edi,ebx
   16a84:	call   19060 <restart_gather>
   16a89:	add    r15,0x1
   16a8d:	cmp    r15,0xc
   16a91:	jne    16a64 <dslash_fn_special+0x94>
   16a93:	cmp    DWORD PTR [rsp],0x2
   16a97:	je     16ef0 <dslash_fn_special+0x520>
   16a9d:	cmp    DWORD PTR [rsp],0x1
   16aa1:	mov    edx,DWORD PTR [rip+0xba59]        # 22500 <sites_on_node>
   16aa7:	jne    16ea0 <dslash_fn_special+0x4d0>
   16aad:	movsxd rcx,DWORD PTR [rip+0xbbd0]        # 22684 <even_sites_on_node>
   16ab4:	mov    rsi,rcx
   16ab7:	shl    rcx,0xb
   16abb:	add    rcx,QWORD PTR [rip+0xbd06]        # 227c8 <lattice>
   16ac2:	cmp    esi,edx
   16ac4:	jge    16b6e <dslash_fn_special+0x19e>
   16aca:	lea    eax,[rsi*4+0x0]
   16ad1:	sub    edx,0x1
   16ad4:	mov    DWORD PTR [rsp],r12d
   16ad8:	lea    r15,[rcx+0x530]
   16adf:	cdqe   
   16ae1:	sub    edx,esi
   16ae3:	mov    DWORD PTR [rsp+0x10],r13d
   16ae8:	lea    rax,[rax+rax*8]
   16aec:	shl    rdx,0xb
   16af0:	mov    QWORD PTR [rsp+0x8],rbp
   16af5:	shl    rax,0x4
   16af9:	mov    r14,rax
   16afc:	lea    rax,[rcx+rdx*1+0xd30]
   16b04:	lea    rcx,[rbx-0x530]
   16b0b:	mov    rbp,r14
   16b0e:	mov    rbx,rax
   16b11:	mov    r14,rcx
   16b14:	nop    DWORD PTR [rax+0x0]
   16b18:	mov    r12,QWORD PTR [rip+0xb9e9]        # 22508 <t_longlink>
   16b1f:	mov    rdi,QWORD PTR [rip+0xbc92]        # 227b8 <t_fatlink>
   16b26:	lea    r13,[r14+r15*1]
   16b2a:	mov    rdx,r15
   16b2d:	mov    rsi,r13
   16b30:	add    rdi,rbp
   16b33:	add    r12,rbp
   16b36:	add    rbp,0x240
   16b3d:	call   14f30 <mult_adj_su3_mat_vec_4dir>
   16b42:	lea    rdx,[r15+0xc0]
   16b49:	mov    rsi,r13
   16b4c:	mov    rdi,r12
   16b4f:	call   14f30 <mult_adj_su3_mat_vec_4dir>
   16b54:	add    r15,0x800
   16b5b:	cmp    rbx,r15
   16b5e:	jne    16b18 <dslash_fn_special+0x148>
   16b60:	mov    r12d,DWORD PTR [rsp]
   16b64:	mov    rbp,QWORD PTR [rsp+0x8]
   16b69:	mov    r13d,DWORD PTR [rsp+0x10]
   16b6e:	lea    r15,[rip+0xbceb]        # 22860 <gen_pt>
   16b75:	lea    r11,[rbp+0x38]
   16b79:	mov    edx,0x7
   16b7e:	mov    QWORD PTR [rsp+0x8],rbp
   16b83:	mov    r14,r15
   16b86:	mov    QWORD PTR [rsp],r15
   16b8a:	mov    ebx,0x530
   16b8f:	mov    r15d,r12d
   16b92:	mov    QWORD PTR [rsp+0x10],r14
   16b97:	mov    rbp,r14
   16b9a:	mov    r12,r11
   16b9d:	mov    r14d,edx
   16ba0:	mov    r8,QWORD PTR [rbp+0x38]
   16ba4:	cmp    r13d,0x1
   16ba8:	je     16ed0 <dslash_fn_special+0x500>
   16bae:	mov    r9,QWORD PTR [r12]
   16bb2:	mov    ecx,r15d
   16bb5:	mov    edx,r14d
   16bb8:	mov    esi,0x30
   16bbd:	mov    edi,ebx
   16bbf:	call   19060 <restart_gather>
   16bc4:	add    rbx,0x30
   16bc8:	sub    rbp,0x8
   16bcc:	sub    r14d,0x1
   16bd0:	sub    r12,0x8
   16bd4:	cmp    rbx,0x5f0
   16bdb:	jne    16ba0 <dslash_fn_special+0x1d0>
   16bdd:	mov    rbp,QWORD PTR [rsp+0x8]
   16be2:	mov    r14,QWORD PTR [rsp+0x10]
   16be7:	mov    r12d,r15d
   16bea:	mov    edx,0xf
   16bef:	mov    r15,QWORD PTR [rsp]
   16bf3:	lea    r10,[rbp+0x78]
   16bf7:	mov    QWORD PTR [rsp],rbp
   16bfb:	mov    ebp,r13d
   16bfe:	mov    r13d,edx
   16c01:	mov    QWORD PTR [rsp+0x8],r14
   16c06:	mov    r14d,r12d
   16c09:	mov    r12,r10
   16c0c:	mov    r8,QWORD PTR [r15+0x78]
   16c10:	cmp    ebp,0x1
   16c13:	je     16eb0 <dslash_fn_special+0x4e0>
   16c19:	mov    r9,QWORD PTR [r12]
   16c1d:	mov    ecx,r14d
   16c20:	mov    edx,r13d
   16c23:	mov    esi,0x30
   16c28:	mov    edi,ebx
   16c2a:	call   19060 <restart_gather>
   16c2f:	add    rbx,0x30
   16c33:	sub    r15,0x8
   16c37:	sub    r13d,0x1
   16c3b:	sub    r12,0x8
   16c3f:	cmp    rbx,0x6b0
   16c46:	jne    16c0c <dslash_fn_special+0x23c>
   16c48:	mov    rbp,QWORD PTR [rsp]
   16c4c:	mov    r12d,r14d
   16c4f:	mov    r14,QWORD PTR [rsp+0x8]
   16c54:	lea    r13,[rbp+0x20]
   16c58:	mov    rbx,rbp
   16c5b:	mov    rdi,QWORD PTR [rbx]
   16c5e:	add    rbx,0x8
   16c62:	call   19170 <wait_gather>
   16c67:	cmp    rbx,r13
   16c6a:	jne    16c5b <dslash_fn_special+0x28b>
   16c6c:	lea    rbx,[rbp+0x40]
   16c70:	lea    r13,[rbp+0x60]
   16c74:	mov    rdi,QWORD PTR [rbx]
   16c77:	add    rbx,0x8
   16c7b:	call   19170 <wait_gather>
   16c80:	cmp    r13,rbx
   16c83:	jne    16c74 <dslash_fn_special+0x2a4>
   16c85:	mov    rdi,QWORD PTR [rbp+0x38]
   16c89:	call   19170 <wait_gather>
   16c8e:	mov    rdi,QWORD PTR [rbp+0x30]
   16c92:	call   19170 <wait_gather>
   16c97:	mov    rdi,QWORD PTR [rbp+0x28]
   16c9b:	call   19170 <wait_gather>
   16ca0:	mov    rdi,QWORD PTR [rbp+0x20]
   16ca4:	call   19170 <wait_gather>
   16ca9:	mov    rdi,QWORD PTR [rbp+0x78]
   16cad:	call   19170 <wait_gather>
   16cb2:	mov    rdi,QWORD PTR [rbp+0x70]
   16cb6:	call   19170 <wait_gather>
   16cbb:	mov    rdi,QWORD PTR [rbp+0x68]
   16cbf:	call   19170 <wait_gather>
   16cc4:	mov    rdi,QWORD PTR [rbp+0x60]
   16cc8:	call   19170 <wait_gather>
   16ccd:	cmp    r12d,0x2
   16cd1:	je     16f00 <dslash_fn_special+0x530>
   16cd7:	mov    eax,DWORD PTR [rip+0xb823]        # 22500 <sites_on_node>
   16cdd:	cmp    r12d,0x1
   16ce1:	jne    16f38 <dslash_fn_special+0x568>
   16ce7:	movsxd rdx,DWORD PTR [rip+0xb996]        # 22684 <even_sites_on_node>
   16cee:	mov    rcx,rdx
   16cf1:	shl    rdx,0xb
   16cf5:	add    rdx,QWORD PTR [rip+0xbacc]        # 227c8 <lattice>
   16cfc:	cmp    ecx,eax
   16cfe:	jge    16e50 <dslash_fn_special+0x480>
   16d04:	movsxd rsi,DWORD PTR [rsp+0x1c]
   16d09:	lea    r12d,[rax-0x1]
   16d0d:	movsxd rbx,ecx
   16d10:	mov    r13d,0x6b0
   16d16:	sub    r12d,ecx
   16d19:	shl    rbx,0x3
   16d1d:	shl    r12,0xb
   16d21:	lea    rax,[rdx+rsi*1+0x800]
   16d29:	lea    rbp,[rdx+rsi*1]
   16d2d:	sub    r13,rsi
   16d30:	add    rax,r12
   16d33:	mov    QWORD PTR [rsp],rax
   16d37:	nop    WORD PTR [rax+rax*1+0x0]
   16d40:	mov    rax,QWORD PTR [rip+0xbb29]        # 22870 <gen_pt+0x10>
   16d47:	lea    rdi,[rbx+rbx*8]
   16d4b:	mov    r9,rbp
   16d4e:	lea    r15,[r13+rbp*1+0x0]
   16d53:	mov    r12,QWORD PTR [rip+0xb7ae]        # 22508 <t_longlink>
   16d5a:	shl    rdi,0x3
   16d5e:	mov    rcx,QWORD PTR [rax+rbx*1]
   16d62:	mov    rax,QWORD PTR [rip+0xbaff]        # 22868 <gen_pt+0x8>
   16d69:	add    r12,rdi
   16d6c:	add    rdi,QWORD PTR [rip+0xba45]        # 227b8 <t_fatlink>
   16d73:	mov    rdx,QWORD PTR [rax+rbx*1]
   16d77:	mov    rax,QWORD PTR [r14]
   16d7a:	mov    rsi,QWORD PTR [rax+rbx*1]
   16d7e:	mov    rax,QWORD PTR [rip+0xbaf3]        # 22878 <gen_pt+0x18>
   16d85:	mov    r8,QWORD PTR [rax+rbx*1]
   16d89:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   16d8e:	mov    rax,QWORD PTR [rip+0xbb1b]        # 228b0 <gen_pt+0x50>
   16d95:	mov    r9,r15
   16d98:	mov    rdi,r12
   16d9b:	mov    rcx,QWORD PTR [rax+rbx*1]
   16d9f:	mov    rax,QWORD PTR [rip+0xbb02]        # 228a8 <gen_pt+0x48>
   16da6:	mov    rdx,QWORD PTR [rax+rbx*1]
   16daa:	mov    rax,QWORD PTR [rip+0xbaef]        # 228a0 <gen_pt+0x40>
   16db1:	mov    rsi,QWORD PTR [rax+rbx*1]
   16db5:	mov    rax,QWORD PTR [rip+0xbafc]        # 228b8 <gen_pt+0x58>
   16dbc:	mov    r8,QWORD PTR [rax+rbx*1]
   16dc0:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   16dc5:	mov    rax,QWORD PTR [rip+0xbabc]        # 22888 <gen_pt+0x28>
   16dcc:	mov    rdi,rbp
   16dcf:	mov    rcx,QWORD PTR [rax+rbx*1]
   16dd3:	mov    rax,QWORD PTR [rip+0xbab6]        # 22890 <gen_pt+0x30>
   16dda:	mov    rdx,QWORD PTR [rax+rbx*1]
   16dde:	mov    rax,QWORD PTR [rip+0xbab3]        # 22898 <gen_pt+0x38>
   16de5:	mov    rsi,QWORD PTR [rax+rbx*1]
   16de9:	mov    rax,QWORD PTR [rip+0xba90]        # 22880 <gen_pt+0x20>
   16df0:	mov    r8,QWORD PTR [rax+rbx*1]
   16df4:	call   14e20 <sub_four_su3_vecs>
   16df9:	mov    rax,QWORD PTR [rip+0xbac8]        # 228c8 <gen_pt+0x68>
   16e00:	mov    rdi,r15
   16e03:	mov    rcx,QWORD PTR [rax+rbx*1]
   16e07:	mov    rax,QWORD PTR [rip+0xbac2]        # 228d0 <gen_pt+0x70>
   16e0e:	mov    rdx,QWORD PTR [rax+rbx*1]
   16e12:	mov    rax,QWORD PTR [rip+0xbabf]        # 228d8 <gen_pt+0x78>
   16e19:	mov    rsi,QWORD PTR [rax+rbx*1]
   16e1d:	mov    rax,QWORD PTR [rip+0xba9c]        # 228c0 <gen_pt+0x60>
   16e24:	mov    r8,QWORD PTR [rax+rbx*1]
   16e28:	add    rbx,0x8
   16e2c:	call   14e20 <sub_four_su3_vecs>
   16e31:	mov    rdx,rbp
   16e34:	mov    rdi,rbp
   16e37:	mov    rsi,r15
   16e3a:	call   13f40 <add_su3_vector>
   16e3f:	add    rbp,0x800
   16e46:	cmp    QWORD PTR [rsp],rbp
   16e4a:	jne    16d40 <dslash_fn_special+0x370>
   16e50:	add    rsp,0x28
   16e54:	pop    rbx
   16e55:	pop    rbp
   16e56:	pop    r12
   16e58:	pop    r13
   16e5a:	pop    r14
   16e5c:	pop    r15
   16e5e:	ret    
   16e5f:	nop
   16e60:	mov    ecx,r12d
   16e63:	mov    edx,r15d
   16e66:	mov    esi,0x30
   16e6b:	mov    edi,ebx
   16e6d:	call   18f40 <start_gather>
   16e72:	mov    QWORD PTR [rbp+r15*8+0x0],rax
   16e77:	jmp    16a89 <dslash_fn_special+0xb9>
   16e7c:	nop    DWORD PTR [rax+0x0]
   16e80:	mov    ecx,r12d
   16e83:	mov    edx,r15d
   16e86:	mov    esi,0x30
   16e8b:	mov    edi,ebx
   16e8d:	call   18f40 <start_gather>
   16e92:	mov    QWORD PTR [rbp+r15*8+0x0],rax
   16e97:	jmp    16a54 <dslash_fn_special+0x84>
   16e9c:	nop    DWORD PTR [rax+0x0]
   16ea0:	xor    ecx,ecx
   16ea2:	xor    esi,esi
   16ea4:	jmp    16abb <dslash_fn_special+0xeb>
   16ea9:	nop    DWORD PTR [rax+0x0]
   16eb0:	mov    ecx,r14d
   16eb3:	mov    edx,r13d
   16eb6:	mov    esi,0x30
   16ebb:	mov    edi,ebx
   16ebd:	call   18f40 <start_gather>
   16ec2:	mov    QWORD PTR [r12],rax
   16ec6:	jmp    16c2f <dslash_fn_special+0x25f>
   16ecb:	nop    DWORD PTR [rax+rax*1+0x0]
   16ed0:	mov    ecx,r15d
   16ed3:	mov    edx,r14d
   16ed6:	mov    esi,0x30
   16edb:	mov    edi,ebx
   16edd:	call   18f40 <start_gather>
   16ee2:	mov    QWORD PTR [r12],rax
   16ee6:	jmp    16bc4 <dslash_fn_special+0x1f4>
   16eeb:	nop    DWORD PTR [rax+rax*1+0x0]
   16ef0:	mov    edx,DWORD PTR [rip+0xb78e]        # 22684 <even_sites_on_node>
   16ef6:	xor    ecx,ecx
   16ef8:	xor    esi,esi
   16efa:	jmp    16abb <dslash_fn_special+0xeb>
   16eff:	nop
   16f00:	mov    eax,DWORD PTR [rip+0xb77e]        # 22684 <even_sites_on_node>
   16f06:	xor    edx,edx
   16f08:	xor    ecx,ecx
   16f0a:	jmp    16cf5 <dslash_fn_special+0x325>
   16f0f:	nop
   16f10:	xor    eax,eax
   16f12:	call   11b30 <load_longlinks>
   16f17:	mov    eax,DWORD PTR [rip+0xb91b]        # 22838 <valid_fatlinks>
   16f1d:	test   eax,eax
   16f1f:	jne    16a0e <dslash_fn_special+0x3e>
   16f25:	xor    eax,eax
   16f27:	call   121d0 <load_fatlinks>
   16f2c:	jmp    16a0e <dslash_fn_special+0x3e>
   16f31:	nop    DWORD PTR [rax+0x0]
   16f38:	xor    edx,edx
   16f3a:	xor    ecx,ecx
   16f3c:	jmp    16cf5 <dslash_fn_special+0x325>
   16f41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   16f4c:	nop    DWORD PTR [rax+0x0]

0000000000016f50 <dslash_fn_on_temp>:
   16f50:	endbr64 
   16f54:	push   r15
   16f56:	push   r14
   16f58:	push   r13
   16f5a:	push   r12
   16f5c:	mov    r12d,edx
   16f5f:	push   rbp
   16f60:	mov    rbp,rdi
   16f63:	push   rbx
   16f64:	xor    ebx,ebx
   16f66:	sub    rsp,0x148
   16f6d:	mov    QWORD PTR [rsp+0x48],rsi
   16f72:	lea    r13,[rsp+0x70]
   16f77:	lea    r14,[rsp+0x90]
   16f7f:	mov    rax,QWORD PTR fs:0x28
   16f88:	mov    QWORD PTR [rsp+0x138],rax
   16f90:	xor    eax,eax
   16f92:	mov    QWORD PTR [rsp+0x50],r13
   16f97:	mov    QWORD PTR [rsp+0x58],r14
   16f9c:	movsxd rdi,DWORD PTR [rip+0xb55d]        # 22500 <sites_on_node>
   16fa3:	mov    esi,0x30
   16fa8:	call   23d0 <calloc@plt>
   16fad:	movsxd rdi,DWORD PTR [rip+0xb54c]        # 22500 <sites_on_node>
   16fb4:	mov    esi,0x30
   16fb9:	mov    QWORD PTR [r13+rbx*1+0x0],rax
   16fbe:	call   23d0 <calloc@plt>
   16fc3:	mov    QWORD PTR [r14+rbx*1],rax
   16fc7:	add    rbx,0x8
   16fcb:	cmp    rbx,0x20
   16fcf:	jne    16f9c <dslash_fn_on_temp+0x4c>
   16fd1:	movsxd rdi,DWORD PTR [rip+0xb528]        # 22500 <sites_on_node>
   16fd8:	mov    esi,0x30
   16fdd:	call   23d0 <calloc@plt>
   16fe2:	mov    edx,DWORD PTR [rip+0xb7c0]        # 227a8 <valid_longlinks>
   16fe8:	mov    QWORD PTR [rsp+0x40],rax
   16fed:	test   edx,edx
   16fef:	je     175c0 <dslash_fn_on_temp+0x670>
   16ff5:	mov    eax,DWORD PTR [rip+0xb83d]        # 22838 <valid_fatlinks>
   16ffb:	test   eax,eax
   16ffd:	je     175b0 <dslash_fn_on_temp+0x660>
   17003:	lea    eax,[r12-0x1]
   17008:	cmp    eax,0x2
   1700b:	ja     1701a <dslash_fn_on_temp+0xca>
   1700d:	lea    rdx,[rip+0x57b4]        # 1c7c8 <CSWTCH.77>
   17014:	mov    eax,DWORD PTR [rdx+rax*4]
   17017:	mov    DWORD PTR [rsp],eax
   1701a:	lea    r13,[rip+0xb83f]        # 22860 <gen_pt>
   17021:	xor    r15d,r15d
   17024:	lea    rbx,[rsp+0xb0]
   1702c:	lea    r14,[r13+0x40]
   17030:	mov    r8,QWORD PTR [r13+r15*8+0x0]
   17035:	mov    edx,r15d
   17038:	mov    ecx,r12d
   1703b:	mov    esi,0x30
   17040:	mov    rdi,rbp
   17043:	call   19070 <start_gather_from_temp>
   17048:	mov    r8,QWORD PTR [r14+r15*8]
   1704c:	lea    edx,[r15+0x8]
   17050:	mov    ecx,r12d
   17053:	mov    QWORD PTR [rbx+r15*8],rax
   17057:	mov    esi,0x30
   1705c:	mov    rdi,rbp
   1705f:	call   19070 <start_gather_from_temp>
   17064:	mov    QWORD PTR [rbx+r15*8+0x40],rax
   17069:	add    r15,0x1
   1706d:	cmp    r15,0x4
   17071:	jne    17030 <dslash_fn_on_temp+0xe0>
   17073:	xor    ecx,ecx
   17075:	cmp    DWORD PTR [rsp],0x2
   17079:	mov    edx,DWORD PTR [rip+0xb605]        # 22684 <even_sites_on_node>
   1707f:	je     17097 <dslash_fn_on_temp+0x147>
   17081:	cmp    DWORD PTR [rsp],0x1
   17085:	mov    ecx,0x0
   1708a:	mov    edx,DWORD PTR [rip+0xb470]        # 22500 <sites_on_node>
   17090:	cmove  ecx,DWORD PTR [rip+0xb5ed]        # 22684 <even_sites_on_node>
   17097:	mov    rax,QWORD PTR [rsp+0x70]
   1709c:	mov    r14,QWORD PTR [rsp+0x90]
   170a4:	mov    QWORD PTR [rsp],rax
   170a8:	cmp    ecx,edx
   170aa:	jge    171b7 <dslash_fn_on_temp+0x267>
   170b0:	mov    rax,QWORD PTR [rsp+0x88]
   170b8:	movsxd rsi,ecx
   170bb:	sub    edx,0x1
   170be:	mov    DWORD PTR [rsp+0x64],r12d
   170c3:	sub    edx,ecx
   170c5:	mov    QWORD PTR [rsp+0x68],rbx
   170ca:	mov    QWORD PTR [rsp+0x8],rax
   170cf:	mov    rax,QWORD PTR [rsp+0x80]
   170d7:	lea    rdx,[rsi+rdx*1+0x1]
   170dc:	mov    QWORD PTR [rsp+0x10],rax
   170e1:	mov    rax,QWORD PTR [rsp+0x78]
   170e6:	mov    QWORD PTR [rsp+0x18],rax
   170eb:	mov    rax,QWORD PTR [rsp+0xa8]
   170f3:	mov    QWORD PTR [rsp+0x20],rax
   170f8:	mov    rax,QWORD PTR [rsp+0xa0]
   17100:	mov    QWORD PTR [rsp+0x28],rax
   17105:	mov    rax,QWORD PTR [rsp+0x98]
   1710d:	mov    QWORD PTR [rsp+0x30],rax
   17112:	lea    rax,[rsi+rsi*2]
   17116:	shl    rax,0x4
   1711a:	mov    r15,rax
   1711d:	lea    rax,[rdx+rdx*2]
   17121:	shl    rax,0x4
   17125:	mov    rbx,r15
   17128:	mov    r15,rbp
   1712b:	mov    QWORD PTR [rsp+0x38],rax
   17130:	mov    rax,QWORD PTR [rsp+0x18]
   17135:	mov    rbp,QWORD PTR [rip+0xb3cc]        # 22508 <t_longlink>
   1713c:	lea    rdi,[rbx+rbx*2]
   17140:	lea    r12,[r15+rbx*1]
   17144:	shl    rdi,0x2
   17148:	mov    rsi,r12
   1714b:	lea    rcx,[rax+rbx*1]
   1714f:	mov    rax,QWORD PTR [rsp]
   17153:	add    rbp,rdi
   17156:	add    rdi,QWORD PTR [rip+0xb65b]        # 227b8 <t_fatlink>
   1715d:	lea    rdx,[rax+rbx*1]
   17161:	mov    rax,QWORD PTR [rsp+0x8]
   17166:	lea    r9,[rax+rbx*1]
   1716a:	mov    rax,QWORD PTR [rsp+0x10]
   1716f:	lea    r8,[rax+rbx*1]
   17173:	call   15170 <mult_adj_su3_mat_4vec>
   17178:	mov    rax,QWORD PTR [rsp+0x30]
   1717d:	mov    rsi,r12
   17180:	mov    rdi,rbp
   17183:	lea    rdx,[r14+rbx*1]
   17187:	lea    rcx,[rax+rbx*1]
   1718b:	mov    rax,QWORD PTR [rsp+0x20]
   17190:	lea    r9,[rax+rbx*1]
   17194:	mov    rax,QWORD PTR [rsp+0x28]
   17199:	lea    r8,[rax+rbx*1]
   1719d:	add    rbx,0x30
   171a1:	call   15170 <mult_adj_su3_mat_4vec>
   171a6:	cmp    rbx,QWORD PTR [rsp+0x38]
   171ab:	jne    17130 <dslash_fn_on_temp+0x1e0>
   171ad:	mov    r12d,DWORD PTR [rsp+0x64]
   171b2:	mov    rbx,QWORD PTR [rsp+0x68]
   171b7:	mov    rdi,QWORD PTR [rsp]
   171bb:	mov    r15d,0x38
   171c1:	mov    ebp,0x7
   171c6:	mov    r8,QWORD PTR [r13+r15*1+0x0]
   171cb:	mov    edx,ebp
   171cd:	mov    ecx,r12d
   171d0:	mov    esi,0x30
   171d5:	sub    ebp,0x1
   171d8:	call   19070 <start_gather_from_temp>
   171dd:	mov    QWORD PTR [rbx+r15*1],rax
   171e1:	lea    rax,[r15-0x8]
   171e5:	cmp    ebp,0x3
   171e8:	je     17200 <dslash_fn_on_temp+0x2b0>
   171ea:	mov    edx,0x8
   171ef:	sub    rdx,r15
   171f2:	mov    r15,rax
   171f5:	mov    rdi,QWORD PTR [rsp+rdx*1+0xa8]
   171fd:	jmp    171c6 <dslash_fn_on_temp+0x276>
   171ff:	nop
   17200:	mov    r15d,0x78
   17206:	mov    ebp,0xf
   1720b:	mov    rdi,r14
   1720e:	mov    r8,QWORD PTR [r13+r15*1+0x0]
   17213:	mov    edx,ebp
   17215:	mov    ecx,r12d
   17218:	mov    esi,0x30
   1721d:	sub    ebp,0x1
   17220:	call   19070 <start_gather_from_temp>
   17225:	mov    QWORD PTR [rbx+r15*1],rax
   17229:	lea    rax,[r15-0x8]
   1722d:	cmp    ebp,0xb
   17230:	je     17250 <dslash_fn_on_temp+0x300>
   17232:	mov    edx,0x8
   17237:	sub    rdx,r15
   1723a:	mov    r15,rax
   1723d:	mov    rdi,QWORD PTR [rsp+rdx*1+0x108]
   17245:	jmp    1720e <dslash_fn_on_temp+0x2be>
   17247:	nop    WORD PTR [rax+rax*1+0x0]
   17250:	lea    r14,[rsp+0xd0]
   17258:	mov    QWORD PTR [rsp+0x10],rbx
   1725d:	mov    rbp,rbx
   17260:	mov    QWORD PTR [rsp+0x8],r14
   17265:	mov    rdi,QWORD PTR [rbp+0x0]
   17269:	add    rbp,0x8
   1726d:	call   19170 <wait_gather>
   17272:	mov    rdi,QWORD PTR [rbp+0x38]
   17276:	call   19170 <wait_gather>
   1727b:	cmp    rbp,r14
   1727e:	jne    17265 <dslash_fn_on_temp+0x315>
   17280:	mov    edx,DWORD PTR [rip+0xb3fe]        # 22684 <even_sites_on_node>
   17286:	xor    ecx,ecx
   17288:	cmp    r12d,0x2
   1728c:	je     172a4 <dslash_fn_on_temp+0x354>
   1728e:	cmp    r12d,0x1
   17292:	mov    ecx,0x0
   17297:	mov    edx,DWORD PTR [rip+0xb263]        # 22500 <sites_on_node>
   1729d:	cmove  ecx,DWORD PTR [rip+0xb3e0]        # 22684 <even_sites_on_node>
   172a4:	cmp    ecx,edx
   172a6:	jge    17390 <dslash_fn_on_temp+0x440>
   172ac:	movsxd rsi,ecx
   172af:	sub    edx,0x1
   172b2:	mov    rax,QWORD PTR [rsp+0x48]
   172b7:	mov    DWORD PTR [rsp+0x18],r12d
   172bc:	lea    rbp,[rsi+rsi*2]
   172c0:	sub    edx,ecx
   172c2:	mov    QWORD PTR [rsp+0x20],rbx
   172c7:	lea    r14,[rsi*8+0x0]
   172cf:	shl    rbp,0x4
   172d3:	lea    rdx,[rsi+rdx*1+0x1]
   172d8:	lea    r15,[rax+rbp*1]
   172dc:	lea    rax,[rdx*8+0x0]
   172e4:	add    rbp,QWORD PTR [rsp+0x40]
   172e9:	mov    rbx,r15
   172ec:	mov    r15,rax
   172ef:	nop
   172f0:	mov    rdx,QWORD PTR [rip+0xb579]        # 22870 <gen_pt+0x10>
   172f7:	mov    rsi,QWORD PTR [r13+0x0]
   172fb:	lea    rdi,[r14+r14*8]
   172ff:	mov    r9,rbx
   17302:	mov    r8,QWORD PTR [rip+0xb56f]        # 22878 <gen_pt+0x18>
   17309:	mov    r12,QWORD PTR [rip+0xb1f8]        # 22508 <t_longlink>
   17310:	shl    rdi,0x3
   17314:	add    rbx,0x30
   17318:	mov    rcx,QWORD PTR [rdx+r14*1]
   1731c:	mov    rdx,QWORD PTR [rip+0xb545]        # 22868 <gen_pt+0x8>
   17323:	mov    rsi,QWORD PTR [rsi+r14*1]
   17327:	mov    r8,QWORD PTR [r8+r14*1]
   1732b:	add    r12,rdi
   1732e:	mov    rdx,QWORD PTR [rdx+r14*1]
   17332:	add    rdi,QWORD PTR [rip+0xb47f]        # 227b8 <t_fatlink>
   17339:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   1733e:	mov    rdx,QWORD PTR [rip+0xb56b]        # 228b0 <gen_pt+0x50>
   17345:	mov    rdi,QWORD PTR [rip+0xb56c]        # 228b8 <gen_pt+0x58>
   1734c:	mov    r9,rbp
   1734f:	mov    rsi,QWORD PTR [rip+0xb54a]        # 228a0 <gen_pt+0x40>
   17356:	add    rbp,0x30
   1735a:	mov    rcx,QWORD PTR [rdx+r14*1]
   1735e:	mov    rdx,QWORD PTR [rip+0xb543]        # 228a8 <gen_pt+0x48>
   17365:	mov    r8,QWORD PTR [rdi+r14*1]
   17369:	mov    rsi,QWORD PTR [rsi+r14*1]
   1736d:	mov    rdi,r12
   17370:	mov    rdx,QWORD PTR [rdx+r14*1]
   17374:	add    r14,0x8
   17378:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   1737d:	cmp    r15,r14
   17380:	jne    172f0 <dslash_fn_on_temp+0x3a0>
   17386:	mov    r12d,DWORD PTR [rsp+0x18]
   1738b:	mov    rbx,QWORD PTR [rsp+0x20]
   17390:	mov    rdi,QWORD PTR [rsp+0xe8]
   17398:	call   19170 <wait_gather>
   1739d:	mov    rdi,QWORD PTR [rsp+0xe0]
   173a5:	call   19170 <wait_gather>
   173aa:	mov    rdi,QWORD PTR [rsp+0xd8]
   173b2:	call   19170 <wait_gather>
   173b7:	mov    rdi,QWORD PTR [rsp+0xd0]
   173bf:	call   19170 <wait_gather>
   173c4:	mov    rdi,QWORD PTR [rsp+0x128]
   173cc:	call   19170 <wait_gather>
   173d1:	mov    rdi,QWORD PTR [rsp+0x120]
   173d9:	call   19170 <wait_gather>
   173de:	mov    rdi,QWORD PTR [rsp+0x118]
   173e6:	call   19170 <wait_gather>
   173eb:	mov    rdi,QWORD PTR [rsp+0x110]
   173f3:	call   19170 <wait_gather>
   173f8:	cmp    r12d,0x2
   173fc:	je     175a0 <dslash_fn_on_temp+0x650>
   17402:	cmp    r12d,0x1
   17406:	mov    ecx,0x0
   1740b:	mov    edx,DWORD PTR [rip+0xb0ef]        # 22500 <sites_on_node>
   17411:	cmove  ecx,DWORD PTR [rip+0xb26c]        # 22684 <even_sites_on_node>
   17418:	cmp    ecx,edx
   1741a:	jge    174e3 <dslash_fn_on_temp+0x593>
   17420:	movsxd rsi,ecx
   17423:	sub    edx,0x1
   17426:	mov    r12,QWORD PTR [rsp+0x48]
   1742b:	lea    rbp,[rsi+rsi*2]
   1742f:	sub    edx,ecx
   17431:	lea    r13,[rsi*8+0x0]
   17439:	shl    rbp,0x4
   1743d:	lea    rax,[rsi+rdx*1+0x1]
   17442:	add    r12,rbp
   17445:	lea    r14,[rax*8+0x0]
   1744d:	add    rbp,QWORD PTR [rsp+0x40]
   17452:	nop    WORD PTR [rax+rax*1+0x0]
   17458:	mov    rax,QWORD PTR [rip+0xb429]        # 22888 <gen_pt+0x28>
   1745f:	mov    rdi,r12
   17462:	mov    rcx,QWORD PTR [rax+r13*1]
   17466:	mov    rax,QWORD PTR [rip+0xb423]        # 22890 <gen_pt+0x30>
   1746d:	mov    rdx,QWORD PTR [rax+r13*1]
   17471:	mov    rax,QWORD PTR [rip+0xb420]        # 22898 <gen_pt+0x38>
   17478:	mov    rsi,QWORD PTR [rax+r13*1]
   1747c:	mov    rax,QWORD PTR [rip+0xb3fd]        # 22880 <gen_pt+0x20>
   17483:	mov    r8,QWORD PTR [rax+r13*1]
   17487:	call   14e20 <sub_four_su3_vecs>
   1748c:	mov    rax,QWORD PTR [rip+0xb435]        # 228c8 <gen_pt+0x68>
   17493:	mov    rdi,rbp
   17496:	mov    rcx,QWORD PTR [rax+r13*1]
   1749a:	mov    rax,QWORD PTR [rip+0xb42f]        # 228d0 <gen_pt+0x70>
   174a1:	mov    rdx,QWORD PTR [rax+r13*1]
   174a5:	mov    rax,QWORD PTR [rip+0xb42c]        # 228d8 <gen_pt+0x78>
   174ac:	mov    rsi,QWORD PTR [rax+r13*1]
   174b0:	mov    rax,QWORD PTR [rip+0xb409]        # 228c0 <gen_pt+0x60>
   174b7:	mov    r8,QWORD PTR [rax+r13*1]
   174bb:	add    r13,0x8
   174bf:	call   14e20 <sub_four_su3_vecs>
   174c4:	mov    rdx,r12
   174c7:	mov    rsi,rbp
   174ca:	mov    rdi,r12
   174cd:	call   13f40 <add_su3_vector>
   174d2:	add    r12,0x30
   174d6:	add    rbp,0x30
   174da:	cmp    r13,r14
   174dd:	jne    17458 <dslash_fn_on_temp+0x508>
   174e3:	mov    r13,QWORD PTR [rsp+0x8]
   174e8:	mov    rbp,rbx
   174eb:	mov    r12,rbx
   174ee:	mov    rdi,QWORD PTR [r12]
   174f2:	add    r12,0x8
   174f6:	sub    rbp,0x8
   174fa:	call   19180 <cleanup_gather>
   174ff:	mov    rdi,QWORD PTR [rbp+0x40]
   17503:	call   19180 <cleanup_gather>
   17508:	cmp    r12,r13
   1750b:	jne    174ee <dslash_fn_on_temp+0x59e>
   1750d:	mov    rbp,QWORD PTR [rsp+0x10]
   17512:	mov    r12,QWORD PTR [rsp+0x8]
   17517:	mov    rdi,QWORD PTR [rbp+0x40]
   1751b:	add    rbp,0x8
   1751f:	sub    rbx,0x8
   17523:	call   19180 <cleanup_gather>
   17528:	mov    rdi,QWORD PTR [rbx+0x80]
   1752f:	call   19180 <cleanup_gather>
   17534:	cmp    rbp,r12
   17537:	jne    17517 <dslash_fn_on_temp+0x5c7>
   17539:	mov    rdi,QWORD PTR [rsp]
   1753d:	mov    r12,QWORD PTR [rsp+0x50]
   17542:	xor    ebx,ebx
   17544:	mov    rbp,QWORD PTR [rsp+0x58]
   17549:	call   22a0 <free@plt>
   1754e:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
   17553:	add    rbx,0x8
   17557:	call   22a0 <free@plt>
   1755c:	cmp    rbx,0x20
   17560:	je     17570 <dslash_fn_on_temp+0x620>
   17562:	mov    rdi,QWORD PTR [r12+rbx*1]
   17566:	jmp    17549 <dslash_fn_on_temp+0x5f9>
   17568:	nop    DWORD PTR [rax+rax*1+0x0]
   17570:	mov    rax,QWORD PTR [rsp+0x138]
   17578:	xor    rax,QWORD PTR fs:0x28
   17581:	jne    175cc <dslash_fn_on_temp+0x67c>
   17583:	mov    rdi,QWORD PTR [rsp+0x40]
   17588:	add    rsp,0x148
   1758f:	pop    rbx
   17590:	pop    rbp
   17591:	pop    r12
   17593:	pop    r13
   17595:	pop    r14
   17597:	pop    r15
   17599:	jmp    22a0 <free@plt>
   1759e:	xchg   ax,ax
   175a0:	mov    edx,DWORD PTR [rip+0xb0de]        # 22684 <even_sites_on_node>
   175a6:	xor    ecx,ecx
   175a8:	jmp    17418 <dslash_fn_on_temp+0x4c8>
   175ad:	nop    DWORD PTR [rax]
   175b0:	xor    eax,eax
   175b2:	call   121d0 <load_fatlinks>
   175b7:	jmp    17003 <dslash_fn_on_temp+0xb3>
   175bc:	nop    DWORD PTR [rax+0x0]
   175c0:	xor    eax,eax
   175c2:	call   11b30 <load_longlinks>
   175c7:	jmp    16ff5 <dslash_fn_on_temp+0xa5>
   175cc:	call   2350 <__stack_chk_fail@plt>
   175d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   175dc:	nop    DWORD PTR [rax+0x0]

00000000000175e0 <dslash_fn_on_temp_special>:
   175e0:	endbr64 
   175e4:	push   r15
   175e6:	push   r14
   175e8:	push   r13
   175ea:	mov    r13,rdi
   175ed:	push   r12
   175ef:	mov    r12,rsi
   175f2:	push   rbp
   175f3:	mov    rbp,rcx
   175f6:	push   rbx
   175f7:	mov    ebx,edx
   175f9:	sub    rsp,0x28
   175fd:	mov    ecx,DWORD PTR [rip+0xaca5]        # 222a8 <temp_not_allocated>
   17603:	mov    DWORD PTR [rsp+0x4],r8d
   17608:	test   ecx,ecx
   1760a:	je     1766f <dslash_fn_on_temp_special+0x8f>
   1760c:	lea    r14,[rip+0xad4d]        # 22360 <temp>
   17613:	movsxd rdi,DWORD PTR [rip+0xaee6]        # 22500 <sites_on_node>
   1761a:	mov    esi,0x30
   1761f:	add    r14,0x8
   17623:	call   23d0 <calloc@plt>
   17628:	movsxd rdi,DWORD PTR [rip+0xaed1]        # 22500 <sites_on_node>
   1762f:	mov    esi,0x30
   17634:	mov    QWORD PTR [r14-0x8],rax
   17638:	call   23d0 <calloc@plt>
   1763d:	mov    QWORD PTR [r14+0x18],rax
   17641:	lea    rax,[rip+0xad38]        # 22380 <temp+0x20>
   17648:	cmp    rax,r14
   1764b:	jne    17613 <dslash_fn_on_temp_special+0x33>
   1764d:	movsxd rdi,DWORD PTR [rip+0xaeac]        # 22500 <sites_on_node>
   17654:	mov    esi,0x30
   17659:	call   23d0 <calloc@plt>
   1765e:	mov    DWORD PTR [rip+0xac40],0x0        # 222a8 <temp_not_allocated>
   17668:	mov    QWORD PTR [rip+0xad31],rax        # 223a0 <temp+0x40>
   1766f:	mov    edx,DWORD PTR [rip+0xb133]        # 227a8 <valid_longlinks>
   17675:	test   edx,edx
   17677:	je     17c00 <dslash_fn_on_temp_special+0x620>
   1767d:	mov    eax,DWORD PTR [rip+0xb1b5]        # 22838 <valid_fatlinks>
   17683:	test   eax,eax
   17685:	je     17bf0 <dslash_fn_on_temp_special+0x610>
   1768b:	lea    eax,[rbx-0x1]
   1768e:	cmp    eax,0x2
   17691:	ja     176a1 <dslash_fn_on_temp_special+0xc1>
   17693:	lea    rdx,[rip+0x512e]        # 1c7c8 <CSWTCH.77>
   1769a:	mov    eax,DWORD PTR [rdx+rax*4]
   1769d:	mov    DWORD PTR [rsp+0x8],eax
   176a1:	lea    r14,[rip+0xb1b8]        # 22860 <gen_pt>
   176a8:	mov    QWORD PTR [rsp+0x10],r12
   176ad:	xor    r15d,r15d
   176b0:	mov    rax,r14
   176b3:	mov    r14,r15
   176b6:	mov    r15,rax
   176b9:	cmp    DWORD PTR [rsp+0x4],0x1
   176be:	mov    r8,QWORD PTR [r15+r14*8]
   176c2:	lea    r12d,[r14+0x8]
   176c6:	je     17ba0 <dslash_fn_on_temp_special+0x5c0>
   176cc:	mov    r9,QWORD PTR [rbp+r14*8+0x0]
   176d1:	mov    ecx,ebx
   176d3:	mov    edx,r14d
   176d6:	mov    esi,0x30
   176db:	mov    rdi,r13
   176de:	call   19160 <restart_gather_from_temp>
   176e3:	mov    r9,QWORD PTR [rbp+r14*8+0x40]
   176e8:	mov    ecx,ebx
   176ea:	mov    edx,r12d
   176ed:	lea    rax,[rip+0xb1ac]        # 228a0 <gen_pt+0x40>
   176f4:	mov    esi,0x30
   176f9:	mov    rdi,r13
   176fc:	mov    r8,QWORD PTR [rax+r14*8]
   17700:	call   19160 <restart_gather_from_temp>
   17705:	add    r14,0x1
   17709:	cmp    r14,0x4
   1770d:	jne    176b9 <dslash_fn_on_temp_special+0xd9>
   1770f:	xor    ecx,ecx
   17711:	cmp    DWORD PTR [rsp+0x8],0x2
   17716:	mov    r12,QWORD PTR [rsp+0x10]
   1771b:	mov    edx,DWORD PTR [rip+0xaf63]        # 22684 <even_sites_on_node>
   17721:	je     1773a <dslash_fn_on_temp_special+0x15a>
   17723:	cmp    DWORD PTR [rsp+0x8],0x1
   17728:	mov    ecx,0x0
   1772d:	mov    edx,DWORD PTR [rip+0xadcd]        # 22500 <sites_on_node>
   17733:	cmove  ecx,DWORD PTR [rip+0xaf4a]        # 22684 <even_sites_on_node>
   1773a:	cmp    ecx,edx
   1773c:	jge    1780b <dslash_fn_on_temp_special+0x22b>
   17742:	sub    edx,0x1
   17745:	movsxd rsi,ecx
   17748:	mov    QWORD PTR [rsp+0x8],r12
   1774d:	sub    edx,ecx
   1774f:	lea    rax,[rsi+rsi*2]
   17753:	mov    QWORD PTR [rsp+0x10],rbp
   17758:	lea    rdx,[rsi+rdx*1+0x1]
   1775d:	shl    rax,0x4
   17761:	lea    r14,[rdx+rdx*2]
   17765:	mov    r15,rax
   17768:	shl    r14,0x4
   1776c:	nop    DWORD PTR [rax+0x0]
   17770:	lea    rax,[rip+0xabe9]        # 22360 <temp>
   17777:	mov    rbp,QWORD PTR [rip+0xad8a]        # 22508 <t_longlink>
   1777e:	mov    rcx,QWORD PTR [rip+0xabe3]        # 22368 <temp+0x8>
   17785:	lea    rdi,[r15+r15*2]
   17789:	mov    rdx,QWORD PTR [rax]
   1778c:	mov    r9,QWORD PTR [rip+0xabe5]        # 22378 <temp+0x18>
   17793:	lea    r12,[r13+r15*1+0x0]
   17798:	shl    rdi,0x2
   1779c:	mov    r8,QWORD PTR [rip+0xabcd]        # 22370 <temp+0x10>
   177a3:	add    rcx,r15
   177a6:	add    rbp,rdi
   177a9:	mov    rsi,r12
   177ac:	add    rdx,r15
   177af:	add    r9,r15
   177b2:	add    rdi,QWORD PTR [rip+0xafff]        # 227b8 <t_fatlink>
   177b9:	add    r8,r15
   177bc:	call   15170 <mult_adj_su3_mat_4vec>
   177c1:	mov    rcx,QWORD PTR [rip+0xabc0]        # 22388 <temp+0x28>
   177c8:	mov    rsi,r12
   177cb:	mov    rdx,QWORD PTR [rip+0xabae]        # 22380 <temp+0x20>
   177d2:	mov    r9,QWORD PTR [rip+0xabbf]        # 22398 <temp+0x38>
   177d9:	mov    r8,QWORD PTR [rip+0xabb0]        # 22390 <temp+0x30>
   177e0:	mov    rdi,rbp
   177e3:	add    rcx,r15
   177e6:	add    rdx,r15
   177e9:	add    r9,r15
   177ec:	add    r8,r15
   177ef:	add    r15,0x30
   177f3:	call   15170 <mult_adj_su3_mat_4vec>
   177f8:	cmp    r14,r15
   177fb:	jne    17770 <dslash_fn_on_temp_special+0x190>
   17801:	mov    r12,QWORD PTR [rsp+0x8]
   17806:	mov    rbp,QWORD PTR [rsp+0x10]
   1780b:	lea    r13,[rip+0xb04e]        # 22860 <gen_pt>
   17812:	lea    r11,[rbp+0x38]
   17816:	mov    edx,0x7
   1781b:	mov    QWORD PTR [rsp+0x10],r12
   17820:	lea    r10,[rip+0xab39]        # 22360 <temp>
   17827:	mov    QWORD PTR [rsp+0x8],r13
   1782c:	mov    r14,r13
   1782f:	mov    r12,r13
   17832:	mov    QWORD PTR [rsp+0x18],rbp
   17837:	mov    r13d,ebx
   1783a:	mov    r15,r10
   1783d:	mov    ebx,edx
   1783f:	mov    rbp,r11
   17842:	cmp    DWORD PTR [rsp+0x4],0x1
   17847:	mov    r8,QWORD PTR [r12+0x38]
   1784c:	mov    rdi,QWORD PTR [r15]
   1784f:	je     17b80 <dslash_fn_on_temp_special+0x5a0>
   17855:	mov    r9,QWORD PTR [rbp+0x0]
   17859:	mov    ecx,r13d
   1785c:	mov    edx,ebx
   1785e:	mov    esi,0x30
   17863:	call   19160 <restart_gather_from_temp>
   17868:	sub    ebx,0x1
   1786b:	sub    r12,0x8
   1786f:	add    r15,0x8
   17873:	sub    rbp,0x8
   17877:	cmp    ebx,0x3
   1787a:	jne    17842 <dslash_fn_on_temp_special+0x262>
   1787c:	mov    r12,QWORD PTR [rsp+0x10]
   17881:	mov    rbp,QWORD PTR [rsp+0x18]
   17886:	mov    ebx,r13d
   17889:	xor    r15d,r15d
   1788c:	mov    r13,QWORD PTR [rsp+0x8]
   17891:	lea    r11,[rbp+0x78]
   17895:	mov    QWORD PTR [rsp+0x8],r12
   1789a:	mov    r12d,ebx
   1789d:	mov    ebx,DWORD PTR [rsp+0x4]
   178a1:	mov    QWORD PTR [rsp+0x10],rbp
   178a6:	mov    rbp,r11
   178a9:	mov    edx,0xf
   178ae:	lea    rax,[rip+0xaacb]        # 22380 <temp+0x20>
   178b5:	mov    r8,QWORD PTR [r13+0x78]
   178b9:	mov    rdi,QWORD PTR [rax+r15*8]
   178bd:	sub    edx,r15d
   178c0:	cmp    ebx,0x1
   178c3:	je     17b60 <dslash_fn_on_temp_special+0x580>
   178c9:	mov    r9,QWORD PTR [rbp+0x0]
   178cd:	mov    ecx,r12d
   178d0:	mov    esi,0x30
   178d5:	call   19160 <restart_gather_from_temp>
   178da:	add    r15,0x1
   178de:	sub    r13,0x8
   178e2:	sub    rbp,0x8
   178e6:	cmp    r15,0x4
   178ea:	jne    178a9 <dslash_fn_on_temp_special+0x2c9>
   178ec:	mov    rbp,QWORD PTR [rsp+0x10]
   178f1:	mov    ebx,r12d
   178f4:	mov    r12,QWORD PTR [rsp+0x8]
   178f9:	mov    r13,rbp
   178fc:	lea    r15,[rbp+0x20]
   17900:	mov    rdi,QWORD PTR [r13+0x0]
   17904:	add    r13,0x8
   17908:	call   19170 <wait_gather>
   1790d:	mov    rdi,QWORD PTR [r13+0x38]
   17911:	call   19170 <wait_gather>
   17916:	cmp    r15,r13
   17919:	jne    17900 <dslash_fn_on_temp_special+0x320>
   1791b:	mov    edx,DWORD PTR [rip+0xad63]        # 22684 <even_sites_on_node>
   17921:	xor    ecx,ecx
   17923:	cmp    ebx,0x2
   17926:	je     1793d <dslash_fn_on_temp_special+0x35d>
   17928:	cmp    ebx,0x1
   1792b:	mov    ecx,0x0
   17930:	mov    edx,DWORD PTR [rip+0xabca]        # 22500 <sites_on_node>
   17936:	cmove  ecx,DWORD PTR [rip+0xad47]        # 22684 <even_sites_on_node>
   1793d:	cmp    ecx,edx
   1793f:	jge    17a1a <dslash_fn_on_temp_special+0x43a>
   17945:	sub    edx,0x1
   17948:	movsxd rsi,ecx
   1794b:	mov    QWORD PTR [rsp+0x8],rbp
   17950:	sub    edx,ecx
   17952:	lea    r13,[rsi+rsi*2]
   17956:	mov    DWORD PTR [rsp+0x4],ebx
   1795a:	lea    r15,[rsi*8+0x0]
   17962:	lea    rax,[rsi+rdx*1+0x1]
   17967:	mov    rbx,r14
   1796a:	shl    r13,0x4
   1796e:	shl    rax,0x3
   17972:	mov    r14,rax
   17975:	nop    DWORD PTR [rax]
   17978:	mov    rdx,QWORD PTR [rip+0xaef1]        # 22870 <gen_pt+0x10>
   1797f:	mov    rsi,QWORD PTR [rbx]
   17982:	lea    rdi,[r15+r15*8]
   17986:	lea    r9,[r12+r13*1]
   1798a:	mov    r8,QWORD PTR [rip+0xaee7]        # 22878 <gen_pt+0x18>
   17991:	mov    rbp,QWORD PTR [rip+0xab70]        # 22508 <t_longlink>
   17998:	shl    rdi,0x3
   1799c:	mov    rcx,QWORD PTR [rdx+r15*1]
   179a0:	mov    rdx,QWORD PTR [rip+0xaec1]        # 22868 <gen_pt+0x8>
   179a7:	mov    rsi,QWORD PTR [rsi+r15*1]
   179ab:	mov    r8,QWORD PTR [r8+r15*1]
   179af:	add    rbp,rdi
   179b2:	mov    rdx,QWORD PTR [rdx+r15*1]
   179b6:	add    rdi,QWORD PTR [rip+0xadfb]        # 227b8 <t_fatlink>
   179bd:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   179c2:	mov    rdx,QWORD PTR [rip+0xaee7]        # 228b0 <gen_pt+0x50>
   179c9:	mov    rdi,QWORD PTR [rip+0xaee8]        # 228b8 <gen_pt+0x58>
   179d0:	mov    rsi,QWORD PTR [rip+0xaec9]        # 228a0 <gen_pt+0x40>
   179d7:	mov    r9,QWORD PTR [rip+0xa9c2]        # 223a0 <temp+0x40>
   179de:	mov    rcx,QWORD PTR [rdx+r15*1]
   179e2:	mov    rdx,QWORD PTR [rip+0xaebf]        # 228a8 <gen_pt+0x48>
   179e9:	mov    r8,QWORD PTR [rdi+r15*1]
   179ed:	mov    rsi,QWORD PTR [rsi+r15*1]
   179f1:	add    r9,r13
   179f4:	mov    rdi,rbp
   179f7:	mov    rdx,QWORD PTR [rdx+r15*1]
   179fb:	add    r15,0x8
   179ff:	add    r13,0x30
   17a03:	call   153f0 <mult_su3_mat_vec_sum_4dir>
   17a08:	cmp    r14,r15
   17a0b:	jne    17978 <dslash_fn_on_temp_special+0x398>
   17a11:	mov    ebx,DWORD PTR [rsp+0x4]
   17a15:	mov    rbp,QWORD PTR [rsp+0x8]
   17a1a:	mov    rdi,QWORD PTR [rbp+0x38]
   17a1e:	call   19170 <wait_gather>
   17a23:	mov    rdi,QWORD PTR [rbp+0x30]
   17a27:	call   19170 <wait_gather>
   17a2c:	mov    rdi,QWORD PTR [rbp+0x28]
   17a30:	call   19170 <wait_gather>
   17a35:	mov    rdi,QWORD PTR [rbp+0x20]
   17a39:	call   19170 <wait_gather>
   17a3e:	mov    rdi,QWORD PTR [rbp+0x78]
   17a42:	call   19170 <wait_gather>
   17a47:	mov    rdi,QWORD PTR [rbp+0x70]
   17a4b:	call   19170 <wait_gather>
   17a50:	mov    rdi,QWORD PTR [rbp+0x68]
   17a54:	call   19170 <wait_gather>
   17a59:	mov    rdi,QWORD PTR [rbp+0x60]
   17a5d:	call   19170 <wait_gather>
   17a62:	cmp    ebx,0x2
   17a65:	je     17be0 <dslash_fn_on_temp_special+0x600>
   17a6b:	cmp    ebx,0x1
   17a6e:	mov    edx,0x0
   17a73:	mov    eax,DWORD PTR [rip+0xaa87]        # 22500 <sites_on_node>
   17a79:	cmove  edx,DWORD PTR [rip+0xac04]        # 22684 <even_sites_on_node>
   17a80:	cmp    edx,eax
   17a82:	jge    17b49 <dslash_fn_on_temp_special+0x569>
   17a88:	sub    eax,0x1
   17a8b:	movsxd rcx,edx
   17a8e:	sub    eax,edx
   17a90:	lea    rbp,[rcx+rcx*2]
   17a94:	lea    rbx,[rcx*8+0x0]
   17a9c:	lea    r14,[rcx+rax*1+0x1]
   17aa1:	shl    rbp,0x4
   17aa5:	shl    r14,0x3
   17aa9:	nop    DWORD PTR [rax+0x0]
   17ab0:	mov    rax,QWORD PTR [rip+0xadd1]        # 22888 <gen_pt+0x28>
   17ab7:	lea    r13,[r12+rbp*1]
   17abb:	mov    rdi,r13
   17abe:	mov    rcx,QWORD PTR [rax+rbx*1]
   17ac2:	mov    rax,QWORD PTR [rip+0xadc7]        # 22890 <gen_pt+0x30>
   17ac9:	mov    rdx,QWORD PTR [rax+rbx*1]
   17acd:	mov    rax,QWORD PTR [rip+0xadc4]        # 22898 <gen_pt+0x38>
   17ad4:	mov    rsi,QWORD PTR [rax+rbx*1]
   17ad8:	mov    rax,QWORD PTR [rip+0xada1]        # 22880 <gen_pt+0x20>
   17adf:	mov    r8,QWORD PTR [rax+rbx*1]
   17ae3:	call   14e20 <sub_four_su3_vecs>
   17ae8:	mov    rax,QWORD PTR [rip+0xadd9]        # 228c8 <gen_pt+0x68>
   17aef:	mov    rdi,QWORD PTR [rip+0xa8aa]        # 223a0 <temp+0x40>
   17af6:	mov    rcx,QWORD PTR [rax+rbx*1]
   17afa:	mov    rax,QWORD PTR [rip+0xadcf]        # 228d0 <gen_pt+0x70>
   17b01:	add    rdi,rbp
   17b04:	mov    rdx,QWORD PTR [rax+rbx*1]
   17b08:	mov    rax,QWORD PTR [rip+0xadc9]        # 228d8 <gen_pt+0x78>
   17b0f:	mov    rsi,QWORD PTR [rax+rbx*1]
   17b13:	mov    rax,QWORD PTR [rip+0xada6]        # 228c0 <gen_pt+0x60>
   17b1a:	mov    r8,QWORD PTR [rax+rbx*1]
   17b1e:	add    rbx,0x8
   17b22:	call   14e20 <sub_four_su3_vecs>
   17b27:	mov    rsi,QWORD PTR [rip+0xa872]        # 223a0 <temp+0x40>
   17b2e:	mov    rdx,r13
   17b31:	mov    rdi,r13
   17b34:	add    rsi,rbp
   17b37:	add    rbp,0x30
   17b3b:	call   13f40 <add_su3_vector>
   17b40:	cmp    r14,rbx
   17b43:	jne    17ab0 <dslash_fn_on_temp_special+0x4d0>
   17b49:	add    rsp,0x28
   17b4d:	pop    rbx
   17b4e:	pop    rbp
   17b4f:	pop    r12
   17b51:	pop    r13
   17b53:	pop    r14
   17b55:	pop    r15
   17b57:	ret    
   17b58:	nop    DWORD PTR [rax+rax*1+0x0]
   17b60:	mov    ecx,r12d
   17b63:	mov    esi,0x30
   17b68:	call   19070 <start_gather_from_temp>
   17b6d:	mov    QWORD PTR [rbp+0x0],rax
   17b71:	jmp    178da <dslash_fn_on_temp_special+0x2fa>
   17b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17b80:	mov    ecx,r13d
   17b83:	mov    edx,ebx
   17b85:	mov    esi,0x30
   17b8a:	call   19070 <start_gather_from_temp>
   17b8f:	mov    QWORD PTR [rbp+0x0],rax
   17b93:	jmp    17868 <dslash_fn_on_temp_special+0x288>
   17b98:	nop    DWORD PTR [rax+rax*1+0x0]
   17ba0:	mov    ecx,ebx
   17ba2:	mov    edx,r14d
   17ba5:	mov    esi,0x30
   17baa:	mov    rdi,r13
   17bad:	call   19070 <start_gather_from_temp>
   17bb2:	mov    ecx,ebx
   17bb4:	mov    edx,r12d
   17bb7:	mov    esi,0x30
   17bbc:	mov    QWORD PTR [rbp+r14*8+0x0],rax
   17bc1:	lea    rax,[rip+0xacd8]        # 228a0 <gen_pt+0x40>
   17bc8:	mov    rdi,r13
   17bcb:	mov    r8,QWORD PTR [rax+r14*8]
   17bcf:	call   19070 <start_gather_from_temp>
   17bd4:	mov    QWORD PTR [rbp+r14*8+0x40],rax
   17bd9:	jmp    17705 <dslash_fn_on_temp_special+0x125>
   17bde:	xchg   ax,ax
   17be0:	mov    eax,DWORD PTR [rip+0xaa9e]        # 22684 <even_sites_on_node>
   17be6:	xor    edx,edx
   17be8:	jmp    17a80 <dslash_fn_on_temp_special+0x4a0>
   17bed:	nop    DWORD PTR [rax]
   17bf0:	xor    eax,eax
   17bf2:	call   121d0 <load_fatlinks>
   17bf7:	jmp    1768b <dslash_fn_on_temp_special+0xab>
   17bfc:	nop    DWORD PTR [rax+0x0]
   17c00:	xor    eax,eax
   17c02:	call   11b30 <load_longlinks>
   17c07:	jmp    1767d <dslash_fn_on_temp_special+0x9d>
   17c0c:	nop    DWORD PTR [rax+0x0]

0000000000017c10 <ks_congrad>:
   17c10:	endbr64 
   17c14:	push   r15
   17c16:	push   r14
   17c18:	push   r13
   17c1a:	push   r12
   17c1c:	push   rbp
   17c1d:	push   rbx
   17c1e:	mov    ebx,esi
   17c20:	sub    rsp,0x1a8
   17c27:	mov    DWORD PTR [rsp+0x60],edi
   17c2b:	mov    DWORD PTR [rsp+0x38],edx
   17c2f:	mov    DWORD PTR [rsp+0x3c],ecx
   17c33:	mov    QWORD PTR [rsp+0x68],r8
   17c38:	movsd  QWORD PTR [rsp+0x40],xmm1
   17c3e:	mov    rax,QWORD PTR fs:0x28
   17c47:	mov    QWORD PTR [rsp+0x198],rax
   17c4f:	xor    eax,eax
   17c51:	lea    eax,[rcx-0x1]
   17c54:	cmp    eax,0x2
   17c57:	ja     17c71 <ks_congrad+0x61>
   17c59:	lea    rdx,[rip+0x4bc8]        # 1c828 <CSWTCH.106>
   17c60:	mov    ebp,DWORD PTR [rdx+rax*4]
   17c63:	lea    rdx,[rip+0x4bae]        # 1c818 <CSWTCH.107>
   17c6a:	mov    eax,DWORD PTR [rdx+rax*4]
   17c6d:	mov    DWORD PTR [rsp+0x14],eax
   17c71:	movsd  xmm1,QWORD PTR [rip+0x4bbf]        # 1c838 <CSWTCH.106+0x10>
   17c79:	mov    esi,DWORD PTR [rip+0xab29]        # 227a8 <valid_longlinks>
   17c7f:	mulsd  xmm1,xmm0
   17c83:	mulsd  xmm1,xmm0
   17c87:	movsd  QWORD PTR [rsp+0x30],xmm1
   17c8d:	test   esi,esi
   17c8f:	je     1851f <ks_congrad+0x90f>
   17c95:	mov    ecx,DWORD PTR [rip+0xab9d]        # 22838 <valid_fatlinks>
   17c9b:	test   ecx,ecx
   17c9d:	je     18513 <ks_congrad+0x903>
   17ca3:	mov    edx,DWORD PTR [rip+0xa603]        # 222ac <first_congrad>
   17ca9:	mov    ecx,DWORD PTR [rip+0xa851]        # 22500 <sites_on_node>
   17caf:	test   edx,edx
   17cb1:	jne    1849c <ks_congrad+0x88c>
   17cb7:	mov    rdi,QWORD PTR [rip+0x137f2]        # 2b4b0 <t_dest>
   17cbe:	mov    r12,QWORD PTR [rip+0x137fb]        # 2b4c0 <ttt>
   17cc5:	mov    rdx,QWORD PTR [rip+0xaafc]        # 227c8 <lattice>
   17ccc:	test   ecx,ecx
   17cce:	jle    17d20 <ks_congrad+0x110>
   17cd0:	sub    ecx,0x1
   17cd3:	movsxd rax,ebx
   17cd6:	lea    rcx,[rcx+rcx*2]
   17cda:	add    rdx,rax
   17cdd:	mov    rax,rdi
   17ce0:	shl    rcx,0x4
   17ce4:	lea    rcx,[rdi+rcx*1+0x30]
   17ce9:	nop    DWORD PTR [rax+0x0]
   17cf0:	movdqu xmm6,XMMWORD PTR [rdx]
   17cf4:	add    rax,0x30
   17cf8:	add    rdx,0x800
   17cff:	movups XMMWORD PTR [rax-0x30],xmm6
   17d03:	movdqu xmm7,XMMWORD PTR [rdx-0x7f0]
   17d0b:	movups XMMWORD PTR [rax-0x20],xmm7
   17d0f:	movdqu xmm5,XMMWORD PTR [rdx-0x7e0]
   17d17:	movups XMMWORD PTR [rax-0x10],xmm5
   17d1b:	cmp    rax,rcx
   17d1e:	jne    17cf0 <ks_congrad+0xe0>
   17d20:	mov    eax,DWORD PTR [rsp+0x38]
   17d24:	mov    DWORD PTR [rsp+0x10],0x0
   17d2c:	mov    rsi,r12
   17d2f:	lea    r14,[rsp+0x110]
   17d37:	lea    r13,[rsp+0x90]
   17d3f:	lea    eax,[rax+rax*4]
   17d42:	mov    DWORD PTR [rsp+0x64],eax
   17d46:	lea    rax,[rsp+0x88]
   17d4e:	mov    QWORD PTR [rsp+0x48],rax
   17d53:	lea    rax,[rsp+0x78]
   17d58:	mov    QWORD PTR [rsp+0x28],rax
   17d5d:	movsxd rax,ebx
   17d60:	mov    QWORD PTR [rsp+0x50],rax
   17d65:	add    rax,0x800
   17d6b:	mov    QWORD PTR [rsp+0x58],rax
   17d70:	mov    edx,DWORD PTR [rsp+0x14]
   17d74:	mov    rcx,r14
   17d77:	mov    r8d,0x1
   17d7d:	mov    QWORD PTR [rsp+0x88],0x0
   17d89:	mov    QWORD PTR [rsp+0x78],0x0
   17d92:	call   175e0 <dslash_fn_on_temp_special>
   17d97:	mov    r8d,0x1
   17d9d:	mov    rcx,r13
   17da0:	mov    edx,ebp
   17da2:	mov    rdi,QWORD PTR [rip+0x13717]        # 2b4c0 <ttt>
   17da9:	mov    rsi,rdi
   17dac:	call   175e0 <dslash_fn_on_temp_special>
   17db1:	mov    rsi,r14
   17db4:	mov    rdi,r13
   17db7:	call   163d0 <cleanup_gathers>
   17dbc:	cmp    ebp,0x2
   17dbf:	je     18280 <ks_congrad+0x670>
   17dc5:	mov    edx,DWORD PTR [rip+0xa735]        # 22500 <sites_on_node>
   17dcb:	cmp    ebp,0x1
   17dce:	jne    18290 <ks_congrad+0x680>
   17dd4:	movsxd rbx,DWORD PTR [rip+0xa8a9]        # 22684 <even_sites_on_node>
   17ddb:	mov    rcx,rbx
   17dde:	shl    rbx,0xb
   17de2:	mov    r8,QWORD PTR [rip+0xa9df]        # 227c8 <lattice>
   17de9:	cmp    ecx,edx
   17deb:	jge    17ee9 <ks_congrad+0x2d9>
   17df1:	sub    edx,0x1
   17df4:	movsxd rsi,ecx
   17df7:	movsxd rdi,DWORD PTR [rsp+0x60]
   17dfc:	movsd  xmm6,QWORD PTR [rsp+0x30]
   17e02:	sub    edx,ecx
   17e04:	xorpd  xmm6,XMMWORD PTR [rip+0x2874]        # 1a680 <_IO_stdin_used+0x680>
   17e0c:	lea    rax,[rsi+rsi*2]
   17e10:	lea    rdx,[rsi+rdx*1+0x1]
   17e15:	shl    rax,0x4
   17e19:	add    rdi,rbx
   17e1c:	lea    r12,[rdx+rdx*2]
   17e20:	movsd  QWORD PTR [rsp],xmm6
   17e25:	mov    r15,rax
   17e28:	lea    rbx,[r8+rdi*1]
   17e2c:	shl    r12,0x4
   17e30:	mov    rdi,QWORD PTR [rip+0x13689]        # 2b4c0 <ttt>
   17e37:	mov    rsi,QWORD PTR [rip+0x13672]        # 2b4b0 <t_dest>
   17e3e:	movsd  xmm0,QWORD PTR [rsp]
   17e43:	add    rdi,r15
   17e46:	add    rsi,r15
   17e49:	mov    rdx,rdi
   17e4c:	call   14820 <scalar_mult_add_su3_vector>
   17e51:	mov    rdx,QWORD PTR [rip+0x13650]        # 2b4a8 <resid>
   17e58:	mov    rsi,QWORD PTR [rip+0x13661]        # 2b4c0 <ttt>
   17e5f:	mov    rdi,rbx
   17e62:	add    rsi,r15
   17e65:	add    rdx,r15
   17e68:	call   13f40 <add_su3_vector>
   17e6d:	mov    rdx,QWORD PTR [rip+0x13634]        # 2b4a8 <resid>
   17e74:	mov    rax,QWORD PTR [rip+0x1363d]        # 2b4b8 <cg_p>
   17e7b:	mov    rdi,rbx
   17e7e:	add    rbx,0x800
   17e85:	movdqu xmm2,XMMWORD PTR [rdx+r15*1]
   17e8b:	movups XMMWORD PTR [rax+r15*1],xmm2
   17e90:	movdqu xmm3,XMMWORD PTR [rdx+r15*1+0x10]
   17e97:	movups XMMWORD PTR [rax+r15*1+0x10],xmm3
   17e9d:	movdqu xmm4,XMMWORD PTR [rdx+r15*1+0x20]
   17ea4:	movups XMMWORD PTR [rax+r15*1+0x20],xmm4
   17eaa:	call   14dc0 <magsq_su3vec>
   17eaf:	mov    rdi,QWORD PTR [rip+0x135f2]        # 2b4a8 <resid>
   17eb6:	addsd  xmm0,QWORD PTR [rsp+0x88]
   17ebf:	add    rdi,r15
   17ec2:	add    r15,0x30
   17ec6:	movsd  QWORD PTR [rsp+0x88],xmm0
   17ecf:	call   14dc0 <magsq_su3vec>
   17ed4:	addsd  xmm0,QWORD PTR [rsp+0x78]
   17eda:	movsd  QWORD PTR [rsp+0x78],xmm0
   17ee0:	cmp    r15,r12
   17ee3:	jne    17e30 <ks_congrad+0x220>
   17ee9:	mov    rdi,QWORD PTR [rsp+0x48]
   17eee:	call   193f0 <g_doublesum>
   17ef3:	mov    rdi,QWORD PTR [rsp+0x28]
   17ef8:	call   193f0 <g_doublesum>
   17efd:	movsd  xmm1,QWORD PTR [rsp+0x40]
   17f03:	mulsd  xmm1,QWORD PTR [rsp+0x88]
   17f0c:	movsd  xmm7,QWORD PTR [rsp+0x78]
   17f12:	add    DWORD PTR [rsp+0x10],0x1
   17f17:	add    DWORD PTR [rip+0xa4ce],0x1        # 223ec <total_iters>
   17f1e:	movsd  QWORD PTR [rsp+0x8],xmm7
   17f24:	comisd xmm1,xmm7
   17f28:	movsd  QWORD PTR [rsp+0x20],xmm1
   17f2e:	jb     17f70 <ks_congrad+0x360>
   17f30:	cmp    DWORD PTR [rsp+0x3c],0x3
   17f35:	jne    18460 <ks_congrad+0x850>
   17f3b:	mov    DWORD PTR [rsp+0x14],0x2
   17f43:	mov    ebp,0x1
   17f48:	mov    DWORD PTR [rsp+0x10],0x0
   17f50:	mov    DWORD PTR [rsp+0x3c],0x2
   17f58:	mov    rsi,QWORD PTR [rip+0x13561]        # 2b4c0 <ttt>
   17f5f:	mov    rdi,QWORD PTR [rip+0x1354a]        # 2b4b0 <t_dest>
   17f66:	jmp    17d70 <ks_congrad+0x160>
   17f6b:	nop    DWORD PTR [rax+rax*1+0x0]
   17f70:	mov    edx,DWORD PTR [rsp+0x14]
   17f74:	mov    r8d,0x1
   17f7a:	mov    rcx,r14
   17f7d:	xor    r12d,r12d
   17f80:	mov    rsi,QWORD PTR [rip+0x13539]        # 2b4c0 <ttt>
   17f87:	mov    rdi,QWORD PTR [rip+0x1352a]        # 2b4b8 <cg_p>
   17f8e:	mov    QWORD PTR [rsp+0x80],0x0
   17f9a:	call   175e0 <dslash_fn_on_temp_special>
   17f9f:	mov    r8d,0x1
   17fa5:	mov    rcx,r13
   17fa8:	mov    edx,ebp
   17faa:	mov    rdi,QWORD PTR [rip+0x1350f]        # 2b4c0 <ttt>
   17fb1:	mov    rsi,rdi
   17fb4:	call   175e0 <dslash_fn_on_temp_special>
   17fb9:	lea    rax,[rsp+0x80]
   17fc1:	mov    QWORD PTR [rsp+0x18],rax
   17fc6:	mov    QWORD PTR [rsp+0x80],0x0
   17fd2:	mov    edx,DWORD PTR [rip+0xa6ac]        # 22684 <even_sites_on_node>
   17fd8:	xor    ecx,ecx
   17fda:	cmp    ebp,0x2
   17fdd:	je     17ff2 <ks_congrad+0x3e2>
   17fdf:	cmp    ebp,0x1
   17fe2:	mov    ecx,r12d
   17fe5:	mov    edx,DWORD PTR [rip+0xa515]        # 22500 <sites_on_node>
   17feb:	cmove  ecx,DWORD PTR [rip+0xa692]        # 22684 <even_sites_on_node>
   17ff2:	cmp    ecx,edx
   17ff4:	jge    18085 <ks_congrad+0x475>
   17ffa:	sub    edx,0x1
   17ffd:	movsxd rsi,ecx
   18000:	movsd  xmm5,QWORD PTR [rsp+0x30]
   18006:	xorpd  xmm5,XMMWORD PTR [rip+0x2672]        # 1a680 <_IO_stdin_used+0x680>
   1800e:	sub    edx,ecx
   18010:	lea    rax,[rsi+rsi*2]
   18014:	lea    rdx,[rsi+rdx*1+0x1]
   18019:	shl    rax,0x4
   1801d:	movsd  QWORD PTR [rsp],xmm5
   18022:	lea    rbx,[rdx+rdx*2]
   18026:	mov    r15,rax
   18029:	shl    rbx,0x4
   1802d:	nop    DWORD PTR [rax]
   18030:	mov    rdi,QWORD PTR [rip+0x13489]        # 2b4c0 <ttt>
   18037:	mov    rsi,QWORD PTR [rip+0x1347a]        # 2b4b8 <cg_p>
   1803e:	movsd  xmm0,QWORD PTR [rsp]
   18043:	add    rdi,r15
   18046:	add    rsi,r15
   18049:	mov    rdx,rdi
   1804c:	call   14820 <scalar_mult_add_su3_vector>
   18051:	mov    rsi,QWORD PTR [rip+0x13468]        # 2b4c0 <ttt>
   18058:	mov    rdi,QWORD PTR [rip+0x13459]        # 2b4b8 <cg_p>
   1805f:	add    rsi,r15
   18062:	add    rdi,r15
   18065:	add    r15,0x30
   18069:	call   14b20 <su3_rdot>
   1806e:	addsd  xmm0,QWORD PTR [rsp+0x80]
   18077:	movsd  QWORD PTR [rsp+0x80],xmm0
   18080:	cmp    r15,rbx
   18083:	jne    18030 <ks_congrad+0x420>
   18085:	mov    rdi,QWORD PTR [rsp+0x18]
   1808a:	call   193f0 <g_doublesum>
   1808f:	movsd  xmm0,QWORD PTR [rsp+0x78]
   18095:	add    DWORD PTR [rsp+0x10],0x1
   1809a:	xorpd  xmm0,XMMWORD PTR [rip+0x25de]        # 1a680 <_IO_stdin_used+0x680>
   180a2:	add    DWORD PTR [rip+0xa343],0x1        # 223ec <total_iters>
   180a9:	divsd  xmm0,QWORD PTR [rsp+0x80]
   180b2:	mov    QWORD PTR [rsp+0x78],0x0
   180bb:	movsd  QWORD PTR [rsp],xmm0
   180c0:	cmp    ebp,0x2
   180c3:	je     18270 <ks_congrad+0x660>
   180c9:	cmp    ebp,0x1
   180cc:	mov    ecx,r12d
   180cf:	mov    edx,DWORD PTR [rip+0xa42b]        # 22500 <sites_on_node>
   180d5:	cmove  ecx,DWORD PTR [rip+0xa5a8]        # 22684 <even_sites_on_node>
   180dc:	cmp    ecx,edx
   180de:	jge    1816e <ks_congrad+0x55e>
   180e4:	sub    edx,0x1
   180e7:	movsxd rsi,ecx
   180ea:	sub    edx,ecx
   180ec:	lea    rax,[rsi+rsi*2]
   180f0:	lea    rdx,[rsi+rdx*1+0x1]
   180f5:	shl    rax,0x4
   180f9:	lea    rbx,[rdx+rdx*2]
   180fd:	mov    r15,rax
   18100:	shl    rbx,0x4
   18104:	nop    DWORD PTR [rax+0x0]
   18108:	mov    rdi,QWORD PTR [rip+0x133a1]        # 2b4b0 <t_dest>
   1810f:	mov    rsi,QWORD PTR [rip+0x133a2]        # 2b4b8 <cg_p>
   18116:	movsd  xmm0,QWORD PTR [rsp]
   1811b:	add    rdi,r15
   1811e:	add    rsi,r15
   18121:	mov    rdx,rdi
   18124:	call   14820 <scalar_mult_add_su3_vector>
   18129:	mov    rdi,QWORD PTR [rip+0x13378]        # 2b4a8 <resid>
   18130:	movsd  xmm0,QWORD PTR [rsp]
   18135:	mov    rsi,QWORD PTR [rip+0x13384]        # 2b4c0 <ttt>
   1813c:	add    rdi,r15
   1813f:	add    rsi,r15
   18142:	mov    rdx,rdi
   18145:	call   14820 <scalar_mult_add_su3_vector>
   1814a:	mov    rdi,QWORD PTR [rip+0x13357]        # 2b4a8 <resid>
   18151:	add    rdi,r15
   18154:	add    r15,0x30
   18158:	call   14dc0 <magsq_su3vec>
   1815d:	addsd  xmm0,QWORD PTR [rsp+0x78]
   18163:	movsd  QWORD PTR [rsp+0x78],xmm0
   18169:	cmp    r15,rbx
   1816c:	jne    18108 <ks_congrad+0x4f8>
   1816e:	mov    rdi,QWORD PTR [rsp+0x28]
   18173:	call   193f0 <g_doublesum>
   18178:	movsd  xmm0,QWORD PTR [rsp+0x78]
   1817e:	movsd  xmm6,QWORD PTR [rsp+0x20]
   18184:	comisd xmm6,xmm0
   18188:	jae    18299 <ks_congrad+0x689>
   1818e:	divsd  xmm0,QWORD PTR [rsp+0x8]
   18194:	mov    edx,DWORD PTR [rip+0xa4ea]        # 22684 <even_sites_on_node>
   1819a:	movsd  QWORD PTR [rsp],xmm0
   1819f:	xor    ecx,ecx
   181a1:	cmp    ebp,0x2
   181a4:	je     181b9 <ks_congrad+0x5a9>
   181a6:	cmp    ebp,0x1
   181a9:	mov    ecx,r12d
   181ac:	mov    edx,DWORD PTR [rip+0xa34e]        # 22500 <sites_on_node>
   181b2:	cmove  ecx,DWORD PTR [rip+0xa4cb]        # 22684 <even_sites_on_node>
   181b9:	cmp    ecx,edx
   181bb:	jge    1820a <ks_congrad+0x5fa>
   181bd:	sub    edx,0x1
   181c0:	movsxd rsi,ecx
   181c3:	sub    edx,ecx
   181c5:	lea    rax,[rsi+rsi*2]
   181c9:	lea    rdx,[rsi+rdx*1+0x1]
   181ce:	shl    rax,0x4
   181d2:	lea    rbx,[rdx+rdx*2]
   181d6:	mov    r15,rax
   181d9:	shl    rbx,0x4
   181dd:	nop    DWORD PTR [rax]
   181e0:	mov    rsi,QWORD PTR [rip+0x132d1]        # 2b4b8 <cg_p>
   181e7:	mov    rdi,QWORD PTR [rip+0x132ba]        # 2b4a8 <resid>
   181ee:	movsd  xmm0,QWORD PTR [rsp]
   181f3:	add    rsi,r15
   181f6:	add    rdi,r15
   181f9:	add    r15,0x30
   181fd:	mov    rdx,rsi
   18200:	call   14820 <scalar_mult_add_su3_vector>
   18205:	cmp    rbx,r15
   18208:	jne    181e0 <ks_congrad+0x5d0>
   1820a:	mov    eax,DWORD PTR [rsp+0x10]
   1820e:	cdq    
   1820f:	idiv   DWORD PTR [rsp+0x38]
   18213:	test   edx,edx
   18215:	je     18362 <ks_congrad+0x752>
   1821b:	movsd  xmm1,QWORD PTR [rsp+0x78]
   18221:	mov    edx,DWORD PTR [rsp+0x14]
   18225:	xor    r8d,r8d
   18228:	mov    rcx,r14
   1822b:	mov    rsi,QWORD PTR [rip+0x1328e]        # 2b4c0 <ttt>
   18232:	mov    rdi,QWORD PTR [rip+0x1327f]        # 2b4b8 <cg_p>
   18239:	mov    QWORD PTR [rsp+0x80],0x0
   18245:	movsd  QWORD PTR [rsp+0x8],xmm1
   1824b:	call   175e0 <dslash_fn_on_temp_special>
   18250:	xor    r8d,r8d
   18253:	mov    rcx,r13
   18256:	mov    edx,ebp
   18258:	mov    rdi,QWORD PTR [rip+0x13261]        # 2b4c0 <ttt>
   1825f:	mov    rsi,rdi
   18262:	call   175e0 <dslash_fn_on_temp_special>
   18267:	jmp    17fc6 <ks_congrad+0x3b6>
   1826c:	nop    DWORD PTR [rax+0x0]
   18270:	mov    edx,DWORD PTR [rip+0xa40e]        # 22684 <even_sites_on_node>
   18276:	xor    ecx,ecx
   18278:	jmp    180dc <ks_congrad+0x4cc>
   1827d:	nop    DWORD PTR [rax]
   18280:	mov    edx,DWORD PTR [rip+0xa3fe]        # 22684 <even_sites_on_node>
   18286:	xor    ebx,ebx
   18288:	xor    ecx,ecx
   1828a:	jmp    17de2 <ks_congrad+0x1d2>
   1828f:	nop
   18290:	xor    ebx,ebx
   18292:	xor    ecx,ecx
   18294:	jmp    17de2 <ks_congrad+0x1d2>
   18299:	cmp    ebp,0x2
   1829c:	je     18448 <ks_congrad+0x838>
   182a2:	mov    ecx,DWORD PTR [rip+0xa258]        # 22500 <sites_on_node>
   182a8:	cmp    ebp,0x1
   182ab:	jne    18457 <ks_congrad+0x847>
   182b1:	movsxd rsi,DWORD PTR [rip+0xa3cc]        # 22684 <even_sites_on_node>
   182b8:	mov    rdi,rsi
   182bb:	shl    rsi,0xb
   182bf:	add    rsi,QWORD PTR [rip+0xa502]        # 227c8 <lattice>
   182c6:	cmp    edi,ecx
   182c8:	jge    1832a <ks_congrad+0x71a>
   182ca:	movsxd rax,edi
   182cd:	sub    ecx,0x1
   182d0:	lea    rdx,[rax+rax*2]
   182d4:	mov    rax,QWORD PTR [rsp+0x50]
   182d9:	sub    ecx,edi
   182db:	shl    rcx,0xb
   182df:	shl    rdx,0x4
   182e3:	add    rdx,QWORD PTR [rip+0x131c6]        # 2b4b0 <t_dest>
   182ea:	add    rax,rsi
   182ed:	add    rsi,QWORD PTR [rsp+0x58]
   182f2:	add    rcx,rsi
   182f5:	nop    DWORD PTR [rax]
   182f8:	movdqu xmm5,XMMWORD PTR [rdx]
   182fc:	add    rax,0x800
   18302:	add    rdx,0x30
   18306:	movups XMMWORD PTR [rax-0x800],xmm5
   1830d:	movdqu xmm6,XMMWORD PTR [rdx-0x20]
   18312:	movups XMMWORD PTR [rax-0x7f0],xmm6
   18319:	movdqu xmm5,XMMWORD PTR [rdx-0x10]
   1831e:	movups XMMWORD PTR [rax-0x7e0],xmm5
   18325:	cmp    rcx,rax
   18328:	jne    182f8 <ks_congrad+0x6e8>
   1832a:	cmp    DWORD PTR [rsp+0x3c],0x3
   1832f:	jne    1852b <ks_congrad+0x91b>
   18335:	mov    DWORD PTR [rsp+0x14],0x2
   1833d:	mov    ebp,0x1
   18342:	mov    DWORD PTR [rsp+0x10],0x0
   1834a:	mov    DWORD PTR [rsp+0x3c],0x2
   18352:	mov    rsi,r14
   18355:	mov    rdi,r13
   18358:	call   163d0 <cleanup_gathers>
   1835d:	jmp    17f58 <ks_congrad+0x348>
   18362:	mov    ecx,DWORD PTR [rsp+0x10]
   18366:	cmp    DWORD PTR [rsp+0x64],ecx
   1836a:	jg     18352 <ks_congrad+0x742>
   1836c:	mov    esi,DWORD PTR [rip+0xa312]        # 22684 <even_sites_on_node>
   18372:	xor    edi,edi
   18374:	cmp    ebp,0x2
   18377:	je     18394 <ks_congrad+0x784>
   18379:	mov    esi,DWORD PTR [rip+0xa181]        # 22500 <sites_on_node>
   1837f:	xor    edi,edi
   18381:	cmp    ebp,0x1
   18384:	jne    18394 <ks_congrad+0x784>
   18386:	movsxd rdi,DWORD PTR [rip+0xa2f7]        # 22684 <even_sites_on_node>
   1838d:	mov    rdx,rdi
   18390:	shl    rdi,0xb
   18394:	add    rdi,QWORD PTR [rip+0xa42d]        # 227c8 <lattice>
   1839b:	cmp    edx,esi
   1839d:	jge    18402 <ks_congrad+0x7f2>
   1839f:	sub    esi,0x1
   183a2:	movsxd rax,edx
   183a5:	mov    ebx,esi
   183a7:	lea    rcx,[rax+rax*2]
   183ab:	mov    rax,QWORD PTR [rsp+0x50]
   183b0:	sub    ebx,edx
   183b2:	shl    rcx,0x4
   183b6:	add    rcx,QWORD PTR [rip+0x130f3]        # 2b4b0 <t_dest>
   183bd:	mov    rdx,rbx
   183c0:	add    rax,rdi
   183c3:	add    rdi,QWORD PTR [rsp+0x58]
   183c8:	shl    rdx,0xb
   183cc:	add    rdx,rdi
   183cf:	nop
   183d0:	movdqu xmm6,XMMWORD PTR [rcx]
   183d4:	add    rax,0x800
   183da:	add    rcx,0x30
   183de:	movups XMMWORD PTR [rax-0x800],xmm6
   183e5:	movdqu xmm6,XMMWORD PTR [rcx-0x20]
   183ea:	movups XMMWORD PTR [rax-0x7f0],xmm6
   183f1:	movdqu xmm5,XMMWORD PTR [rcx-0x10]
   183f6:	movups XMMWORD PTR [rax-0x7e0],xmm5
   183fd:	cmp    rax,rdx
   18400:	jne    183d0 <ks_congrad+0x7c0>
   18402:	cmp    DWORD PTR [rsp+0x3c],0x3
   18407:	je     18335 <ks_congrad+0x725>
   1840d:	mov    rax,QWORD PTR [rsp+0x68]
   18412:	movsd  xmm0,QWORD PTR [rsp+0x78]
   18418:	mov    rsi,r14
   1841b:	mov    rdi,r13
   1841e:	movsd  QWORD PTR [rax],xmm0
   18422:	call   163d0 <cleanup_gathers>
   18427:	mov    eax,DWORD PTR [rip+0xa4b7]        # 228e4 <this_node>
   1842d:	test   eax,eax
   1842f:	je     18544 <ks_congrad+0x934>
   18435:	mov    rdi,QWORD PTR [rip+0x9ea4]        # 222e0 <stdout@@GLIBC_2.2.5>
   1843c:	call   2420 <fflush@plt>
   18441:	jmp    1846f <ks_congrad+0x85f>
   18443:	nop    DWORD PTR [rax+rax*1+0x0]
   18448:	mov    ecx,DWORD PTR [rip+0xa236]        # 22684 <even_sites_on_node>
   1844e:	xor    esi,esi
   18450:	xor    edi,edi
   18452:	jmp    182bf <ks_congrad+0x6af>
   18457:	xor    esi,esi
   18459:	xor    edi,edi
   1845b:	jmp    182bf <ks_congrad+0x6af>
   18460:	mov    rax,QWORD PTR [rsp+0x68]
   18465:	movsd  xmm6,QWORD PTR [rsp+0x8]
   1846b:	movsd  QWORD PTR [rax],xmm6
   1846f:	mov    rax,QWORD PTR [rsp+0x198]
   18477:	xor    rax,QWORD PTR fs:0x28
   18480:	jne    1856f <ks_congrad+0x95f>
   18486:	mov    eax,DWORD PTR [rsp+0x10]
   1848a:	add    rsp,0x1a8
   18491:	pop    rbx
   18492:	pop    rbp
   18493:	pop    r12
   18495:	pop    r13
   18497:	pop    r14
   18499:	pop    r15
   1849b:	ret    
   1849c:	movsxd rdi,ecx
   1849f:	mov    esi,0x30
   184a4:	call   23d0 <calloc@plt>
   184a9:	movsxd rdi,DWORD PTR [rip+0xa050]        # 22500 <sites_on_node>
   184b0:	mov    esi,0x30
   184b5:	mov    QWORD PTR [rip+0x13004],rax        # 2b4c0 <ttt>
   184bc:	mov    r12,rax
   184bf:	call   23d0 <calloc@plt>
   184c4:	movsxd rdi,DWORD PTR [rip+0xa035]        # 22500 <sites_on_node>
   184cb:	mov    esi,0x30
   184d0:	mov    QWORD PTR [rip+0x12fe1],rax        # 2b4b8 <cg_p>
   184d7:	call   23d0 <calloc@plt>
   184dc:	movsxd rdi,DWORD PTR [rip+0xa01d]        # 22500 <sites_on_node>
   184e3:	mov    esi,0x30
   184e8:	mov    QWORD PTR [rip+0x12fb9],rax        # 2b4a8 <resid>
   184ef:	call   23d0 <calloc@plt>
   184f4:	mov    ecx,DWORD PTR [rip+0xa006]        # 22500 <sites_on_node>
   184fa:	mov    DWORD PTR [rip+0x9da8],0x0        # 222ac <first_congrad>
   18504:	mov    QWORD PTR [rip+0x12fa5],rax        # 2b4b0 <t_dest>
   1850b:	mov    rdi,rax
   1850e:	jmp    17cc5 <ks_congrad+0xb5>
   18513:	xor    eax,eax
   18515:	call   121d0 <load_fatlinks>
   1851a:	jmp    17ca3 <ks_congrad+0x93>
   1851f:	xor    eax,eax
   18521:	call   11b30 <load_longlinks>
   18526:	jmp    17c95 <ks_congrad+0x85>
   1852b:	mov    rax,QWORD PTR [rsp+0x68]
   18530:	mov    rsi,r14
   18533:	mov    rdi,r13
   18536:	movsd  QWORD PTR [rax],xmm0
   1853a:	call   163d0 <cleanup_gathers>
   1853f:	jmp    1846f <ks_congrad+0x85f>
   18544:	movsd  xmm1,QWORD PTR [rsp+0x20]
   1854a:	mov    edx,DWORD PTR [rsp+0x10]
   1854e:	lea    rsi,[rip+0x4283]        # 1c7d8 <CSWTCH.77+0x10>
   18555:	mov    edi,0x1
   1855a:	movsd  xmm0,QWORD PTR [rsp+0x78]
   18560:	mov    eax,0x2
   18565:	call   2470 <__printf_chk@plt>
   1856a:	jmp    18435 <ks_congrad+0x825>
   1856f:	call   2350 <__stack_chk_fail@plt>
   18574:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1857f:	nop

0000000000018580 <clear_latvec>:
   18580:	endbr64 
   18584:	cmp    esi,0x2
   18587:	je     186b0 <clear_latvec+0x130>
   1858d:	cmp    esi,0x3
   18590:	je     18630 <clear_latvec+0xb0>
   18596:	cmp    esi,0x1
   18599:	je     185a0 <clear_latvec+0x20>
   1859b:	ret    
   1859c:	nop    DWORD PTR [rax+0x0]
   185a0:	movsxd rcx,DWORD PTR [rip+0xa0dd]        # 22684 <even_sites_on_node>
   185a7:	mov    edx,DWORD PTR [rip+0x9f53]        # 22500 <sites_on_node>
   185ad:	mov    rsi,rcx
   185b0:	shl    rcx,0xb
   185b4:	add    rcx,QWORD PTR [rip+0xa20d]        # 227c8 <lattice>
   185bb:	cmp    edx,esi
   185bd:	jle    1859b <clear_latvec+0x1b>
   185bf:	sub    edx,0x1
   185c2:	movsxd rdi,edi
   185c5:	sub    edx,esi
   185c7:	lea    rax,[rcx+rdi*1]
   185cb:	lea    rcx,[rcx+rdi*1+0x800]
   185d3:	shl    rdx,0xb
   185d7:	add    rdx,rcx
   185da:	nop    WORD PTR [rax+rax*1+0x0]
   185e0:	mov    QWORD PTR [rax+0x8],0x0
   185e8:	add    rax,0x800
   185ee:	mov    QWORD PTR [rax-0x800],0x0
   185f9:	mov    QWORD PTR [rax-0x7e8],0x0
   18604:	mov    QWORD PTR [rax-0x7f0],0x0
   1860f:	mov    QWORD PTR [rax-0x7d8],0x0
   1861a:	mov    QWORD PTR [rax-0x7e0],0x0
   18625:	cmp    rax,rdx
   18628:	jne    185e0 <clear_latvec+0x60>
   1862a:	ret    
   1862b:	nop    DWORD PTR [rax+rax*1+0x0]
   18630:	mov    edx,DWORD PTR [rip+0x9eca]        # 22500 <sites_on_node>
   18636:	mov    rcx,QWORD PTR [rip+0xa18b]        # 227c8 <lattice>
   1863d:	test   edx,edx
   1863f:	jle    1859b <clear_latvec+0x1b>
   18645:	movsxd rdi,edi
   18648:	sub    edx,0x1
   1864b:	lea    rax,[rcx+rdi*1]
   1864f:	shl    rdx,0xb
   18653:	lea    rcx,[rcx+rdi*1+0x800]
   1865b:	add    rdx,rcx
   1865e:	xchg   ax,ax
   18660:	mov    QWORD PTR [rax+0x8],0x0
   18668:	add    rax,0x800
   1866e:	mov    QWORD PTR [rax-0x800],0x0
   18679:	mov    QWORD PTR [rax-0x7e8],0x0
   18684:	mov    QWORD PTR [rax-0x7f0],0x0
   1868f:	mov    QWORD PTR [rax-0x7d8],0x0
   1869a:	mov    QWORD PTR [rax-0x7e0],0x0
   186a5:	cmp    rax,rdx
   186a8:	jne    18660 <clear_latvec+0xe0>
   186aa:	ret    
   186ab:	nop    DWORD PTR [rax+rax*1+0x0]
   186b0:	mov    edx,DWORD PTR [rip+0x9fce]        # 22684 <even_sites_on_node>
   186b6:	mov    rcx,QWORD PTR [rip+0xa10b]        # 227c8 <lattice>
   186bd:	test   edx,edx
   186bf:	jle    1859b <clear_latvec+0x1b>
   186c5:	movsxd rdi,edi
   186c8:	sub    edx,0x1
   186cb:	lea    rax,[rcx+rdi*1]
   186cf:	shl    rdx,0xb
   186d3:	lea    rcx,[rcx+rdi*1+0x800]
   186db:	add    rdx,rcx
   186de:	xchg   ax,ax
   186e0:	mov    QWORD PTR [rax+0x8],0x0
   186e8:	add    rax,0x800
   186ee:	mov    QWORD PTR [rax-0x800],0x0
   186f9:	mov    QWORD PTR [rax-0x7e8],0x0
   18704:	mov    QWORD PTR [rax-0x7f0],0x0
   1870f:	mov    QWORD PTR [rax-0x7d8],0x0
   1871a:	mov    QWORD PTR [rax-0x7e0],0x0
   18725:	cmp    rax,rdx
   18728:	jne    186e0 <clear_latvec+0x160>
   1872a:	ret    
   1872b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000018730 <copy_latvec>:
   18730:	endbr64 
   18734:	cmp    edx,0x2
   18737:	je     18848 <copy_latvec+0x118>
   1873d:	cmp    edx,0x3
   18740:	je     187d8 <copy_latvec+0xa8>
   18746:	cmp    edx,0x1
   18749:	je     18750 <copy_latvec+0x20>
   1874b:	ret    
   1874c:	nop    DWORD PTR [rax+0x0]
   18750:	mov    r8d,DWORD PTR [rip+0x9f2d]        # 22684 <even_sites_on_node>
   18757:	mov    edx,DWORD PTR [rip+0x9da3]        # 22500 <sites_on_node>
   1875d:	mov    r9,QWORD PTR [rip+0xa064]        # 227c8 <lattice>
   18764:	cmp    r8d,edx
   18767:	jge    1874b <copy_latvec+0x1b>
   18769:	movsxd r10,r8d
   1876c:	lea    ecx,[rdx-0x1]
   1876f:	movsxd rdi,edi
   18772:	movsxd rsi,esi
   18775:	mov    rax,r10
   18778:	sub    ecx,r8d
   1877b:	lea    rdx,[r9+rdi*1+0x800]
   18783:	shl    rax,0xb
   18787:	add    rcx,r10
   1878a:	add    rax,rdi
   1878d:	shl    rcx,0xb
   18791:	add    rax,r9
   18794:	add    rcx,rdx
   18797:	nop    WORD PTR [rax+rax*1+0x0]
   187a0:	movdqu xmm3,XMMWORD PTR [rax]
   187a4:	mov    rdx,rax
   187a7:	add    rax,0x800
   187ad:	sub    rdx,rdi
   187b0:	movups XMMWORD PTR [rdx+rsi*1],xmm3
   187b4:	movdqu xmm4,XMMWORD PTR [rax-0x7f0]
   187bc:	movups XMMWORD PTR [rdx+rsi*1+0x10],xmm4
   187c1:	movdqu xmm5,XMMWORD PTR [rax-0x7e0]
   187c9:	movups XMMWORD PTR [rdx+rsi*1+0x20],xmm5
   187ce:	cmp    rax,rcx
   187d1:	jne    187a0 <copy_latvec+0x70>
   187d3:	ret    
   187d4:	nop    DWORD PTR [rax+0x0]
   187d8:	mov    ecx,DWORD PTR [rip+0x9d22]        # 22500 <sites_on_node>
   187de:	mov    rdx,QWORD PTR [rip+0x9fe3]        # 227c8 <lattice>
   187e5:	test   ecx,ecx
   187e7:	jle    1874b <copy_latvec+0x1b>
   187ed:	movsxd rdi,edi
   187f0:	sub    ecx,0x1
   187f3:	movsxd rsi,esi
   187f6:	lea    rax,[rdx+rdi*1]
   187fa:	shl    rcx,0xb
   187fe:	lea    rdx,[rdx+rdi*1+0x800]
   18806:	add    rcx,rdx
   18809:	nop    DWORD PTR [rax+0x0]
   18810:	movdqu xmm6,XMMWORD PTR [rax]
   18814:	mov    rdx,rax
   18817:	add    rax,0x800
   1881d:	sub    rdx,rdi
   18820:	movups XMMWORD PTR [rdx+rsi*1],xmm6
   18824:	movdqu xmm7,XMMWORD PTR [rax-0x7f0]
   1882c:	movups XMMWORD PTR [rdx+rsi*1+0x10],xmm7
   18831:	movdqu xmm0,XMMWORD PTR [rax-0x7e0]
   18839:	movups XMMWORD PTR [rdx+rsi*1+0x20],xmm0
   1883e:	cmp    rax,rcx
   18841:	jne    18810 <copy_latvec+0xe0>
   18843:	ret    
   18844:	nop    DWORD PTR [rax+0x0]
   18848:	mov    ecx,DWORD PTR [rip+0x9e36]        # 22684 <even_sites_on_node>
   1884e:	mov    rdx,QWORD PTR [rip+0x9f73]        # 227c8 <lattice>
   18855:	test   ecx,ecx
   18857:	jle    1874b <copy_latvec+0x1b>
   1885d:	movsxd rdi,edi
   18860:	sub    ecx,0x1
   18863:	movsxd rsi,esi
   18866:	lea    rax,[rdx+rdi*1]
   1886a:	shl    rcx,0xb
   1886e:	lea    rdx,[rdx+rdi*1+0x800]
   18876:	add    rcx,rdx
   18879:	nop    DWORD PTR [rax+0x0]
   18880:	movdqu xmm0,XMMWORD PTR [rax]
   18884:	mov    rdx,rax
   18887:	add    rax,0x800
   1888d:	sub    rdx,rdi
   18890:	movups XMMWORD PTR [rdx+rsi*1],xmm0
   18894:	movdqu xmm1,XMMWORD PTR [rax-0x7f0]
   1889c:	movups XMMWORD PTR [rdx+rsi*1+0x10],xmm1
   188a1:	movdqu xmm2,XMMWORD PTR [rax-0x7e0]
   188a9:	movups XMMWORD PTR [rdx+rsi*1+0x20],xmm2
   188ae:	cmp    rax,rcx
   188b1:	jne    18880 <copy_latvec+0x150>
   188b3:	ret    
   188b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   188bf:	nop

00000000000188c0 <scalar_mult_add_latvec>:
   188c0:	endbr64 
   188c4:	push   r14
   188c6:	push   r13
   188c8:	push   r12
   188ca:	push   rbp
   188cb:	push   rbx
   188cc:	sub    rsp,0x10
   188d0:	movsd  QWORD PTR [rsp+0x8],xmm0
   188d6:	cmp    ecx,0x2
   188d9:	je     18970 <scalar_mult_add_latvec+0xb0>
   188df:	mov    eax,DWORD PTR [rip+0x9c1b]        # 22500 <sites_on_node>
   188e5:	cmp    ecx,0x1
   188e8:	jne    18968 <scalar_mult_add_latvec+0xa8>
   188ea:	movsxd rcx,DWORD PTR [rip+0x9d93]        # 22684 <even_sites_on_node>
   188f1:	mov    r8,rcx
   188f4:	shl    rcx,0xb
   188f8:	add    rcx,QWORD PTR [rip+0x9ec9]        # 227c8 <lattice>
   188ff:	cmp    r8d,eax
   18902:	jge    18958 <scalar_mult_add_latvec+0x98>
   18904:	lea    ebp,[rax-0x1]
   18907:	movsxd r12,edi
   1890a:	movsxd r13,edx
   1890d:	movsxd r14,esi
   18910:	sub    ebp,r8d
   18913:	lea    rax,[rcx+r12*1+0x800]
   1891b:	lea    rbx,[rcx+r12*1]
   1891f:	sub    r13,r12
   18922:	shl    rbp,0xb
   18926:	add    rbp,rax
   18929:	nop    DWORD PTR [rax+0x0]
   18930:	mov    rsi,r14
   18933:	movsd  xmm0,QWORD PTR [rsp+0x8]
   18939:	lea    rdx,[r13+rbx*1+0x0]
   1893e:	mov    rdi,rbx
   18941:	sub    rsi,r12
   18944:	add    rsi,rbx
   18947:	add    rbx,0x800
   1894e:	call   14820 <scalar_mult_add_su3_vector>
   18953:	cmp    rbx,rbp
   18956:	jne    18930 <scalar_mult_add_latvec+0x70>
   18958:	add    rsp,0x10
   1895c:	pop    rbx
   1895d:	pop    rbp
   1895e:	pop    r12
   18960:	pop    r13
   18962:	pop    r14
   18964:	ret    
   18965:	nop    DWORD PTR [rax]
   18968:	xor    ecx,ecx
   1896a:	xor    r8d,r8d
   1896d:	jmp    188f8 <scalar_mult_add_latvec+0x38>
   1896f:	nop
   18970:	mov    eax,DWORD PTR [rip+0x9d0e]        # 22684 <even_sites_on_node>
   18976:	xor    ecx,ecx
   18978:	xor    r8d,r8d
   1897b:	jmp    188f8 <scalar_mult_add_latvec+0x38>

0000000000018980 <scalar2_mult_add_su3_vector>:
   18980:	endbr64 
   18984:	xor    eax,eax
   18986:	movsd  xmm2,QWORD PTR [rdi+rax*1]
   1898b:	movsd  xmm3,QWORD PTR [rsi+rax*1]
   18990:	mulsd  xmm2,xmm0
   18994:	mulsd  xmm3,xmm1
   18998:	addsd  xmm2,xmm3
   1899c:	movsd  QWORD PTR [rdx+rax*1],xmm2
   189a1:	movsd  xmm2,QWORD PTR [rdi+rax*1+0x8]
   189a7:	movsd  xmm3,QWORD PTR [rsi+rax*1+0x8]
   189ad:	mulsd  xmm2,xmm0
   189b1:	mulsd  xmm3,xmm1
   189b5:	addsd  xmm2,xmm3
   189b9:	movsd  QWORD PTR [rdx+rax*1+0x8],xmm2
   189bf:	add    rax,0x10
   189c3:	cmp    rax,0x30
   189c7:	jne    18986 <scalar2_mult_add_su3_vector+0x6>
   189c9:	ret    
   189ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000189d0 <scalar2_mult_add_latvec>:
   189d0:	endbr64 
   189d4:	cmp    ecx,0x2
   189d7:	je     18aa0 <scalar2_mult_add_latvec+0xd0>
   189dd:	mov    eax,DWORD PTR [rip+0x9b1d]        # 22500 <sites_on_node>
   189e3:	cmp    ecx,0x1
   189e6:	jne    18a92 <scalar2_mult_add_latvec+0xc2>
   189ec:	movsxd r10,DWORD PTR [rip+0x9c91]        # 22684 <even_sites_on_node>
   189f3:	mov    r11,r10
   189f6:	shl    r10,0xb
   189fa:	add    r10,QWORD PTR [rip+0x9dc7]        # 227c8 <lattice>
   18a01:	cmp    r11d,eax
   18a04:	jge    18a91 <scalar2_mult_add_latvec+0xc1>
   18a0a:	movsxd rcx,edi
   18a0d:	lea    edi,[rax-0x1]
   18a10:	movsxd r8,edx
   18a13:	movsxd r9,esi
   18a16:	sub    edi,r11d
   18a19:	lea    rdx,[r10+rcx*1]
   18a1d:	sub    r9,rcx
   18a20:	sub    r8,rcx
   18a23:	shl    rdi,0xb
   18a27:	lea    rax,[r10+rcx*1+0x800]
   18a2f:	add    rdi,rax
   18a32:	nop    WORD PTR [rax+rax*1+0x0]
   18a38:	lea    rsi,[r9+rdx*1]
   18a3c:	lea    rcx,[r8+rdx*1]
   18a40:	xor    eax,eax
   18a42:	movsd  xmm2,QWORD PTR [rdx+rax*1]
   18a47:	movsd  xmm3,QWORD PTR [rsi+rax*1]
   18a4c:	mulsd  xmm2,xmm0
   18a50:	mulsd  xmm3,xmm1
   18a54:	addsd  xmm2,xmm3
   18a58:	movsd  QWORD PTR [rcx+rax*1],xmm2
   18a5d:	movsd  xmm2,QWORD PTR [rdx+rax*1+0x8]
   18a63:	movsd  xmm3,QWORD PTR [rsi+rax*1+0x8]
   18a69:	mulsd  xmm2,xmm0
   18a6d:	mulsd  xmm3,xmm1
   18a71:	addsd  xmm2,xmm3
   18a75:	movsd  QWORD PTR [rcx+rax*1+0x8],xmm2
   18a7b:	add    rax,0x10
   18a7f:	cmp    rax,0x30
   18a83:	jne    18a42 <scalar2_mult_add_latvec+0x72>
   18a85:	add    rdx,0x800
   18a8c:	cmp    rdi,rdx
   18a8f:	jne    18a38 <scalar2_mult_add_latvec+0x68>
   18a91:	ret    
   18a92:	xor    r10d,r10d
   18a95:	xor    r11d,r11d
   18a98:	jmp    189fa <scalar2_mult_add_latvec+0x2a>
   18a9d:	nop    DWORD PTR [rax]
   18aa0:	mov    eax,DWORD PTR [rip+0x9bde]        # 22684 <even_sites_on_node>
   18aa6:	xor    r10d,r10d
   18aa9:	xor    r11d,r11d
   18aac:	jmp    189fa <scalar2_mult_add_latvec+0x2a>
   18ab1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   18abc:	nop    DWORD PTR [rax+0x0]

0000000000018ac0 <scalar_mult_latvec>:
   18ac0:	endbr64 
   18ac4:	push   r12
   18ac6:	push   rbp
   18ac7:	push   rbx
   18ac8:	sub    rsp,0x10
   18acc:	movsd  QWORD PTR [rsp+0x8],xmm0
   18ad2:	cmp    edx,0x2
   18ad5:	je     18af0 <scalar_mult_latvec+0x30>
   18ad7:	cmp    edx,0x3
   18ada:	je     18ba0 <scalar_mult_latvec+0xe0>
   18ae0:	cmp    edx,0x1
   18ae3:	je     18b40 <scalar_mult_latvec+0x80>
   18ae5:	add    rsp,0x10
   18ae9:	pop    rbx
   18aea:	pop    rbp
   18aeb:	pop    r12
   18aed:	ret    
   18aee:	xchg   ax,ax
   18af0:	mov    edx,DWORD PTR [rip+0x9b8e]        # 22684 <even_sites_on_node>
   18af6:	mov    rbp,QWORD PTR [rip+0x9ccb]        # 227c8 <lattice>
   18afd:	test   edx,edx
   18aff:	jle    18ae5 <scalar_mult_latvec+0x25>
   18b01:	movsxd rdi,edi
   18b04:	movsxd rbx,esi
   18b07:	xor    r12d,r12d
   18b0a:	add    rbp,rdi
   18b0d:	sub    rbx,rdi
   18b10:	movsd  xmm0,QWORD PTR [rsp+0x8]
   18b16:	lea    rsi,[rbx+rbp*1]
   18b1a:	mov    rdi,rbp
   18b1d:	add    r12d,0x1
   18b21:	add    rbp,0x800
   18b28:	call   148c0 <scalar_mult_su3_vector>
   18b2d:	cmp    DWORD PTR [rip+0x9b50],r12d        # 22684 <even_sites_on_node>
   18b34:	jg     18b10 <scalar_mult_latvec+0x50>
   18b36:	add    rsp,0x10
   18b3a:	pop    rbx
   18b3b:	pop    rbp
   18b3c:	pop    r12
   18b3e:	ret    
   18b3f:	nop
   18b40:	movsxd rbp,DWORD PTR [rip+0x9b3d]        # 22684 <even_sites_on_node>
   18b47:	mov    rax,QWORD PTR [rip+0x9c7a]        # 227c8 <lattice>
   18b4e:	mov    r12,rbp
   18b51:	shl    rbp,0xb
   18b55:	cmp    r12d,DWORD PTR [rip+0x99a4]        # 22500 <sites_on_node>
   18b5c:	jge    18ae5 <scalar_mult_latvec+0x25>
   18b5e:	movsxd rdi,edi
   18b61:	movsxd rbx,esi
   18b64:	add    rbp,rdi
   18b67:	sub    rbx,rdi
   18b6a:	add    rbp,rax
   18b6d:	nop    DWORD PTR [rax]
   18b70:	movsd  xmm0,QWORD PTR [rsp+0x8]
   18b76:	lea    rsi,[rbx+rbp*1]
   18b7a:	mov    rdi,rbp
   18b7d:	add    r12d,0x1
   18b81:	add    rbp,0x800
   18b88:	call   148c0 <scalar_mult_su3_vector>
   18b8d:	cmp    DWORD PTR [rip+0x996c],r12d        # 22500 <sites_on_node>
   18b94:	jg     18b70 <scalar_mult_latvec+0xb0>
   18b96:	add    rsp,0x10
   18b9a:	pop    rbx
   18b9b:	pop    rbp
   18b9c:	pop    r12
   18b9e:	ret    
   18b9f:	nop
   18ba0:	mov    eax,DWORD PTR [rip+0x995a]        # 22500 <sites_on_node>
   18ba6:	mov    rbp,QWORD PTR [rip+0x9c1b]        # 227c8 <lattice>
   18bad:	test   eax,eax
   18baf:	jle    18ae5 <scalar_mult_latvec+0x25>
   18bb5:	movsxd rdi,edi
   18bb8:	movsxd rbx,esi
   18bbb:	xor    r12d,r12d
   18bbe:	add    rbp,rdi
   18bc1:	sub    rbx,rdi
   18bc4:	nop    DWORD PTR [rax+0x0]
   18bc8:	movsd  xmm0,QWORD PTR [rsp+0x8]
   18bce:	lea    rsi,[rbx+rbp*1]
   18bd2:	mov    rdi,rbp
   18bd5:	add    r12d,0x1
   18bd9:	add    rbp,0x800
   18be0:	call   148c0 <scalar_mult_su3_vector>
   18be5:	cmp    DWORD PTR [rip+0x9914],r12d        # 22500 <sites_on_node>
   18bec:	jg     18bc8 <scalar_mult_latvec+0x108>
   18bee:	add    rsp,0x10
   18bf2:	pop    rbx
   18bf3:	pop    rbp
   18bf4:	pop    r12
   18bf6:	ret    
   18bf7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000018c00 <neighbor_coords_special>:
   18c00:	endbr64 
   18c04:	push   rbp
   18c05:	mov    eax,0x7
   18c0a:	push   rbx
   18c0b:	sub    rsp,0x8
   18c0f:	mov    r8d,DWORD PTR [r8]
   18c12:	mov    rbp,QWORD PTR [rsp+0x20]
   18c17:	mov    rbx,QWORD PTR [rsp+0x28]
   18c1c:	sub    eax,r8d
   18c1f:	cmp    r9d,0x1
   18c23:	mov    r11,QWORD PTR [rsp+0x30]
   18c28:	mov    r10,QWORD PTR [rsp+0x38]
   18c2d:	cmovne r8,rax
   18c31:	mov    DWORD PTR [rbp+0x0],edi
   18c34:	mov    DWORD PTR [rbx],esi
   18c36:	mov    DWORD PTR [r11],edx
   18c39:	mov    DWORD PTR [r10],ecx
   18c3c:	cmp    r8d,0x7
   18c40:	ja     18d37 <neighbor_coords_special+0x137>
   18c46:	lea    r9,[rip+0x3c53]        # 1c8a0 <CSWTCH.106+0x78>
   18c4d:	movsxd rax,DWORD PTR [r9+r8*4]
   18c51:	add    rax,r9
   18c54:	notrack jmp rax
   18c57:	nop    WORD PTR [rax+rax*1+0x0]
   18c60:	mov    ecx,DWORD PTR [rip+0x9bd6]        # 2283c <ny>
   18c66:	lea    eax,[rcx+rsi*1-0x1]
   18c6a:	cdq    
   18c6b:	idiv   ecx
   18c6d:	mov    DWORD PTR [rbx],edx
   18c6f:	add    rsp,0x8
   18c73:	pop    rbx
   18c74:	pop    rbp
   18c75:	ret    
   18c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
   18c80:	mov    ecx,DWORD PTR [rip+0x9752]        # 223d8 <nx>
   18c86:	lea    eax,[rcx+rdi*1-0x1]
   18c8a:	cdq    
   18c8b:	idiv   ecx
   18c8d:	mov    DWORD PTR [rbp+0x0],edx
   18c90:	add    rsp,0x8
   18c94:	pop    rbx
   18c95:	pop    rbp
   18c96:	ret    
   18c97:	nop    WORD PTR [rax+rax*1+0x0]
   18ca0:	lea    eax,[rdi+0x1]
   18ca3:	cdq    
   18ca4:	idiv   DWORD PTR [rip+0x972e]        # 223d8 <nx>
   18caa:	mov    DWORD PTR [rbp+0x0],edx
   18cad:	add    rsp,0x8
   18cb1:	pop    rbx
   18cb2:	pop    rbp
   18cb3:	ret    
   18cb4:	nop    DWORD PTR [rax+0x0]
   18cb8:	lea    eax,[rsi+0x1]
   18cbb:	cdq    
   18cbc:	idiv   DWORD PTR [rip+0x9b7a]        # 2283c <ny>
   18cc2:	mov    DWORD PTR [rbx],edx
   18cc4:	add    rsp,0x8
   18cc8:	pop    rbx
   18cc9:	pop    rbp
   18cca:	ret    
   18ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   18cd0:	lea    eax,[rdx+0x1]
   18cd3:	cdq    
   18cd4:	idiv   DWORD PTR [rip+0x96fa]        # 223d4 <nz>
   18cda:	mov    DWORD PTR [r11],edx
   18cdd:	add    rsp,0x8
   18ce1:	pop    rbx
   18ce2:	pop    rbp
   18ce3:	ret    
   18ce4:	nop    DWORD PTR [rax+0x0]
   18ce8:	lea    eax,[rcx+0x1]
   18ceb:	cdq    
   18cec:	idiv   DWORD PTR [rip+0x96de]        # 223d0 <nt>
   18cf2:	mov    DWORD PTR [r10],edx
   18cf5:	add    rsp,0x8
   18cf9:	pop    rbx
   18cfa:	pop    rbp
   18cfb:	ret    
   18cfc:	nop    DWORD PTR [rax+0x0]
   18d00:	mov    esi,DWORD PTR [rip+0x96ca]        # 223d0 <nt>
   18d06:	lea    eax,[rsi+rcx*1-0x1]
   18d0a:	cdq    
   18d0b:	idiv   esi
   18d0d:	mov    DWORD PTR [r10],edx
   18d10:	add    rsp,0x8
   18d14:	pop    rbx
   18d15:	pop    rbp
   18d16:	ret    
   18d17:	nop    WORD PTR [rax+rax*1+0x0]
   18d20:	mov    ecx,DWORD PTR [rip+0x96ae]        # 223d4 <nz>
   18d26:	lea    eax,[rcx+rdx*1-0x1]
   18d2a:	cdq    
   18d2b:	idiv   ecx
   18d2d:	mov    DWORD PTR [r11],edx
   18d30:	add    rsp,0x8
   18d34:	pop    rbx
   18d35:	pop    rbp
   18d36:	ret    
   18d37:	lea    rdi,[rip+0x3b02]        # 1c840 <CSWTCH.106+0x18>
   18d3e:	call   22f0 <puts@plt>
   18d43:	mov    edi,0x1
   18d48:	call   24b0 <exit@plt>
   18d4d:	nop    DWORD PTR [rax]

0000000000018d50 <initialize_machine>:
   18d50:	endbr64 
   18d54:	ret    
   18d55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000018d60 <sort_eight_special>:
   18d60:	endbr64 
   18d64:	sub    rsp,0x58
   18d68:	mov    rax,QWORD PTR fs:0x28
   18d71:	mov    QWORD PTR [rsp+0x48],rax
   18d76:	xor    eax,eax
   18d78:	mov    rdx,rsp
   18d7b:	nop    DWORD PTR [rax+rax*1+0x0]
   18d80:	mov    rcx,QWORD PTR [rdi+rax*1]
   18d84:	mov    QWORD PTR [rdx+rax*1],rcx
   18d88:	add    rax,0x8
   18d8c:	cmp    rax,0x40
   18d90:	jne    18d80 <sort_eight_special+0x20>
   18d92:	mov    rax,rdx
   18d95:	xor    edx,edx
   18d97:	mov    rsi,QWORD PTR [rax]
   18d9a:	mov    rcx,rdx
   18d9d:	add    rax,0x10
   18da1:	neg    rcx
   18da4:	mov    QWORD PTR [rdi+rcx*1],rsi
   18da8:	mov    rcx,QWORD PTR [rax-0x8]
   18dac:	mov    QWORD PTR [rdi+rdx*1+0x38],rcx
   18db1:	sub    rdx,0x8
   18db5:	cmp    rdx,0xffffffffffffffe0
   18db9:	jne    18d97 <sort_eight_special+0x37>
   18dbb:	mov    rax,QWORD PTR [rsp+0x48]
   18dc0:	xor    rax,QWORD PTR fs:0x28
   18dc9:	jne    18dd0 <sort_eight_special+0x70>
   18dcb:	add    rsp,0x58
   18dcf:	ret    
   18dd0:	call   2350 <__stack_chk_fail@plt>
   18dd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000018de0 <sort_eight_neighborlists>:
   18de0:	endbr64 
   18de4:	mov    rax,QWORD PTR [rip+0x126e5]        # 2b4d0 <neighbor>
   18deb:	movsxd rdi,edi
   18dee:	lea    rdi,[rax+rdi*8]
   18df2:	jmp    18d60 <sort_eight_special>
   18df7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000018e00 <neighbor_coords>:
   18e00:	endbr64 
   18e04:	push   rbp
   18e05:	push   rbx
   18e06:	sub    rsp,0x8
   18e0a:	mov    DWORD PTR [r9],edi
   18e0d:	mov    rbp,QWORD PTR [rsp+0x20]
   18e12:	mov    rbx,QWORD PTR [rsp+0x28]
   18e17:	mov    r11,QWORD PTR [rsp+0x30]
   18e1c:	mov    DWORD PTR [rbp+0x0],esi
   18e1f:	mov    DWORD PTR [rbx],edx
   18e21:	mov    DWORD PTR [r11],ecx
   18e24:	cmp    r8d,0x7
   18e28:	ja     18f16 <neighbor_coords+0x116>
   18e2e:	lea    r10,[rip+0x3a8b]        # 1c8c0 <CSWTCH.106+0x98>
   18e35:	mov    r8d,r8d
   18e38:	movsxd rax,DWORD PTR [r10+r8*4]
   18e3c:	add    rax,r10
   18e3f:	notrack jmp rax
   18e42:	nop    WORD PTR [rax+rax*1+0x0]
   18e48:	mov    ecx,DWORD PTR [rip+0x99ee]        # 2283c <ny>
   18e4e:	lea    eax,[rcx+rsi*1-0x1]
   18e52:	cdq    
   18e53:	idiv   ecx
   18e55:	mov    DWORD PTR [rbp+0x0],edx
   18e58:	add    rsp,0x8
   18e5c:	pop    rbx
   18e5d:	pop    rbp
   18e5e:	ret    
   18e5f:	nop
   18e60:	mov    ecx,DWORD PTR [rip+0x9572]        # 223d8 <nx>
   18e66:	lea    eax,[rcx+rdi*1-0x1]
   18e6a:	cdq    
   18e6b:	idiv   ecx
   18e6d:	mov    DWORD PTR [r9],edx
   18e70:	add    rsp,0x8
   18e74:	pop    rbx
   18e75:	pop    rbp
   18e76:	ret    
   18e77:	nop    WORD PTR [rax+rax*1+0x0]
   18e80:	lea    eax,[rdi+0x1]
   18e83:	cdq    
   18e84:	idiv   DWORD PTR [rip+0x954e]        # 223d8 <nx>
   18e8a:	mov    DWORD PTR [r9],edx
   18e8d:	add    rsp,0x8
   18e91:	pop    rbx
   18e92:	pop    rbp
   18e93:	ret    
   18e94:	nop    DWORD PTR [rax+0x0]
   18e98:	lea    eax,[rsi+0x1]
   18e9b:	cdq    
   18e9c:	idiv   DWORD PTR [rip+0x999a]        # 2283c <ny>
   18ea2:	mov    DWORD PTR [rbp+0x0],edx
   18ea5:	add    rsp,0x8
   18ea9:	pop    rbx
   18eaa:	pop    rbp
   18eab:	ret    
   18eac:	nop    DWORD PTR [rax+0x0]
   18eb0:	lea    eax,[rdx+0x1]
   18eb3:	cdq    
   18eb4:	idiv   DWORD PTR [rip+0x951a]        # 223d4 <nz>
   18eba:	mov    DWORD PTR [rbx],edx
   18ebc:	add    rsp,0x8
   18ec0:	pop    rbx
   18ec1:	pop    rbp
   18ec2:	ret    
   18ec3:	nop    DWORD PTR [rax+rax*1+0x0]
   18ec8:	lea    eax,[rcx+0x1]
   18ecb:	cdq    
   18ecc:	idiv   DWORD PTR [rip+0x94fe]        # 223d0 <nt>
   18ed2:	mov    DWORD PTR [r11],edx
   18ed5:	add    rsp,0x8
   18ed9:	pop    rbx
   18eda:	pop    rbp
   18edb:	ret    
   18edc:	nop    DWORD PTR [rax+0x0]
   18ee0:	mov    esi,DWORD PTR [rip+0x94ea]        # 223d0 <nt>
   18ee6:	lea    eax,[rsi+rcx*1-0x1]
   18eea:	cdq    
   18eeb:	idiv   esi
   18eed:	mov    DWORD PTR [r11],edx
   18ef0:	add    rsp,0x8
   18ef4:	pop    rbx
   18ef5:	pop    rbp
   18ef6:	ret    
   18ef7:	nop    WORD PTR [rax+rax*1+0x0]
   18f00:	mov    ecx,DWORD PTR [rip+0x94ce]        # 223d4 <nz>
   18f06:	lea    eax,[rcx+rdx*1-0x1]
   18f0a:	cdq    
   18f0b:	idiv   ecx
   18f0d:	mov    DWORD PTR [rbx],edx
   18f0f:	add    rsp,0x8
   18f13:	pop    rbx
   18f14:	pop    rbp
   18f15:	ret    
   18f16:	lea    rdi,[rip+0x3923]        # 1c840 <CSWTCH.106+0x18>
   18f1d:	call   22f0 <puts@plt>
   18f22:	mov    edi,0x1
   18f27:	call   24b0 <exit@plt>
   18f2c:	nop    DWORD PTR [rax+0x0]

0000000000018f30 <start_handlers>:
   18f30:	endbr64 
   18f34:	ret    
   18f35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000018f40 <start_gather>:
   18f40:	endbr64 
   18f44:	cmp    ecx,0x2
   18f47:	je     18f60 <start_gather+0x20>
   18f49:	cmp    ecx,0x3
   18f4c:	je     19008 <start_gather+0xc8>
   18f52:	cmp    ecx,0x1
   18f55:	je     18fb8 <start_gather+0x78>
   18f57:	xor    eax,eax
   18f59:	ret    
   18f5a:	nop    WORD PTR [rax+rax*1+0x0]
   18f60:	mov    eax,DWORD PTR [rip+0x971e]        # 22684 <even_sites_on_node>
   18f66:	mov    rcx,QWORD PTR [rip+0x985b]        # 227c8 <lattice>
   18f6d:	test   eax,eax
   18f6f:	jle    18f57 <start_gather+0x17>
   18f71:	mov    rsi,QWORD PTR [rip+0x12558]        # 2b4d0 <neighbor>
   18f78:	movsxd rdx,edx
   18f7b:	movsxd rdi,edi
   18f7e:	mov    r9,QWORD PTR [rsi+rdx*8]
   18f82:	lea    esi,[rax-0x1]
   18f85:	xor    edx,edx
   18f87:	nop    WORD PTR [rax+rax*1+0x0]
   18f90:	movsxd rax,DWORD PTR [r9+rdx*4]
   18f94:	shl    rax,0xb
   18f98:	add    rax,rdi
   18f9b:	add    rax,rcx
   18f9e:	mov    QWORD PTR [r8+rdx*8],rax
   18fa2:	mov    rax,rdx
   18fa5:	add    rdx,0x1
   18fa9:	cmp    rsi,rax
   18fac:	jne    18f90 <start_gather+0x50>
   18fae:	xor    eax,eax
   18fb0:	ret    
   18fb1:	nop    DWORD PTR [rax+0x0]
   18fb8:	mov    eax,DWORD PTR [rip+0x96c6]        # 22684 <even_sites_on_node>
   18fbe:	mov    ecx,DWORD PTR [rip+0x953c]        # 22500 <sites_on_node>
   18fc4:	mov    rsi,QWORD PTR [rip+0x97fd]        # 227c8 <lattice>
   18fcb:	cmp    eax,ecx
   18fcd:	jge    18f57 <start_gather+0x17>
   18fcf:	mov    r9,QWORD PTR [rip+0x124fa]        # 2b4d0 <neighbor>
   18fd6:	movsxd rdx,edx
   18fd9:	movsxd rdi,edi
   18fdc:	mov    r9,QWORD PTR [r9+rdx*8]
   18fe0:	movsxd rdx,eax
   18fe3:	nop    DWORD PTR [rax+rax*1+0x0]
   18fe8:	movsxd rax,DWORD PTR [r9+rdx*4]
   18fec:	shl    rax,0xb
   18ff0:	add    rax,rdi
   18ff3:	add    rax,rsi
   18ff6:	mov    QWORD PTR [r8+rdx*8],rax
   18ffa:	add    rdx,0x1
   18ffe:	cmp    ecx,edx
   19000:	jg     18fe8 <start_gather+0xa8>
   19002:	xor    eax,eax
   19004:	ret    
   19005:	nop    DWORD PTR [rax]
   19008:	mov    eax,DWORD PTR [rip+0x94f2]        # 22500 <sites_on_node>
   1900e:	mov    rcx,QWORD PTR [rip+0x97b3]        # 227c8 <lattice>
   19015:	test   eax,eax
   19017:	jle    18f57 <start_gather+0x17>
   1901d:	mov    rsi,QWORD PTR [rip+0x124ac]        # 2b4d0 <neighbor>
   19024:	movsxd rdx,edx
   19027:	movsxd rdi,edi
   1902a:	mov    r9,QWORD PTR [rsi+rdx*8]
   1902e:	lea    esi,[rax-0x1]
   19031:	xor    edx,edx
   19033:	nop    DWORD PTR [rax+rax*1+0x0]
   19038:	movsxd rax,DWORD PTR [r9+rdx*4]
   1903c:	shl    rax,0xb
   19040:	add    rax,rdi
   19043:	add    rax,rcx
   19046:	mov    QWORD PTR [r8+rdx*8],rax
   1904a:	mov    rax,rdx
   1904d:	add    rdx,0x1
   19051:	cmp    rsi,rax
   19054:	jne    19038 <start_gather+0xf8>
   19056:	xor    eax,eax
   19058:	ret    
   19059:	nop    DWORD PTR [rax+0x0]

0000000000019060 <restart_gather>:
   19060:	endbr64 
   19064:	ret    
   19065:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019070 <start_gather_from_temp>:
   19070:	endbr64 
   19074:	cmp    ecx,0x2
   19077:	je     19090 <start_gather_from_temp+0x20>
   19079:	cmp    ecx,0x3
   1907c:	je     19118 <start_gather_from_temp+0xa8>
   19082:	cmp    ecx,0x1
   19085:	je     190d0 <start_gather_from_temp+0x60>
   19087:	xor    eax,eax
   19089:	ret    
   1908a:	nop    WORD PTR [rax+rax*1+0x0]
   19090:	mov    eax,DWORD PTR [rip+0x95ee]        # 22684 <even_sites_on_node>
   19096:	test   eax,eax
   19098:	jle    19087 <start_gather_from_temp+0x17>
   1909a:	mov    rcx,QWORD PTR [rip+0x1242f]        # 2b4d0 <neighbor>
   190a1:	movsxd rdx,edx
   190a4:	mov    r9,QWORD PTR [rcx+rdx*8]
   190a8:	lea    ecx,[rax-0x1]
   190ab:	xor    edx,edx
   190ad:	nop    DWORD PTR [rax]
   190b0:	mov    eax,DWORD PTR [r9+rdx*4]
   190b4:	imul   eax,esi
   190b7:	cdqe   
   190b9:	add    rax,rdi
   190bc:	mov    QWORD PTR [r8+rdx*8],rax
   190c0:	mov    rax,rdx
   190c3:	add    rdx,0x1
   190c7:	cmp    rcx,rax
   190ca:	jne    190b0 <start_gather_from_temp+0x40>
   190cc:	xor    eax,eax
   190ce:	ret    
   190cf:	nop
   190d0:	mov    eax,DWORD PTR [rip+0x95ae]        # 22684 <even_sites_on_node>
   190d6:	mov    ecx,DWORD PTR [rip+0x9424]        # 22500 <sites_on_node>
   190dc:	cmp    eax,ecx
   190de:	jge    19087 <start_gather_from_temp+0x17>
   190e0:	mov    r9,QWORD PTR [rip+0x123e9]        # 2b4d0 <neighbor>
   190e7:	movsxd rdx,edx
   190ea:	mov    r9,QWORD PTR [r9+rdx*8]
   190ee:	movsxd rdx,eax
   190f1:	nop    DWORD PTR [rax+0x0]
   190f8:	mov    eax,DWORD PTR [r9+rdx*4]
   190fc:	imul   eax,esi
   190ff:	cdqe   
   19101:	add    rax,rdi
   19104:	mov    QWORD PTR [r8+rdx*8],rax
   19108:	add    rdx,0x1
   1910c:	cmp    ecx,edx
   1910e:	jg     190f8 <start_gather_from_temp+0x88>
   19110:	xor    eax,eax
   19112:	ret    
   19113:	nop    DWORD PTR [rax+rax*1+0x0]
   19118:	mov    eax,DWORD PTR [rip+0x93e2]        # 22500 <sites_on_node>
   1911e:	test   eax,eax
   19120:	jle    19087 <start_gather_from_temp+0x17>
   19126:	mov    rcx,QWORD PTR [rip+0x123a3]        # 2b4d0 <neighbor>
   1912d:	movsxd rdx,edx
   19130:	mov    r9,QWORD PTR [rcx+rdx*8]
   19134:	lea    ecx,[rax-0x1]
   19137:	xor    edx,edx
   19139:	nop    DWORD PTR [rax+0x0]
   19140:	mov    eax,DWORD PTR [r9+rdx*4]
   19144:	imul   eax,esi
   19147:	cdqe   
   19149:	add    rax,rdi
   1914c:	mov    QWORD PTR [r8+rdx*8],rax
   19150:	mov    rax,rdx
   19153:	add    rdx,0x1
   19157:	cmp    rcx,rax
   1915a:	jne    19140 <start_gather_from_temp+0xd0>
   1915c:	xor    eax,eax
   1915e:	ret    
   1915f:	nop

0000000000019160 <restart_gather_from_temp>:
   19160:	endbr64 
   19164:	ret    
   19165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019170 <wait_gather>:
   19170:	endbr64 
   19174:	ret    
   19175:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019180 <cleanup_gather>:
   19180:	endbr64 
   19184:	ret    
   19185:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019190 <start_general_gather>:
   19190:	endbr64 
   19194:	push   r15
   19196:	push   r14
   19198:	push   r13
   1919a:	push   r12
   1919c:	push   rbp
   1919d:	push   rbx
   1919e:	sub    rsp,0x18
   191a2:	mov    eax,DWORD PTR [rip+0x9200]        # 223a8 <g_gather_flag>
   191a8:	test   eax,eax
   191aa:	jne    192c6 <start_general_gather+0x136>
   191b0:	mov    r13,r8
   191b3:	mov    r15,rdx
   191b6:	mov    r12d,ecx
   191b9:	xor    r14d,r14d
   191bc:	xor    r8d,r8d
   191bf:	cmp    ecx,0x1
   191c2:	jne    191d2 <start_general_gather+0x42>
   191c4:	movsxd r8,DWORD PTR [rip+0x94b9]        # 22684 <even_sites_on_node>
   191cb:	mov    r14,r8
   191ce:	shl    r14,0xb
   191d2:	movsxd rax,edi
   191d5:	add    r14,QWORD PTR [rip+0x95ec]        # 227c8 <lattice>
   191dc:	mov    rbp,r8
   191df:	mov    QWORD PTR [rsp+0x8],rax
   191e4:	jmp    19292 <start_general_gather+0x102>
   191e9:	nop    DWORD PTR [rax+0x0]
   191f0:	mov    eax,DWORD PTR [r15]
   191f3:	movsx  edi,WORD PTR [r14]
   191f7:	test   eax,eax
   191f9:	je     1920b <start_general_gather+0x7b>
   191fb:	mov    ebx,DWORD PTR [rip+0x91d7]        # 223d8 <nx>
   19201:	add    edi,eax
   19203:	lea    eax,[rdi+rbx*1]
   19206:	cdq    
   19207:	idiv   ebx
   19209:	mov    edi,edx
   1920b:	mov    eax,DWORD PTR [r15+0x4]
   1920f:	movsx  esi,WORD PTR [r14+0x2]
   19214:	test   eax,eax
   19216:	je     19228 <start_general_gather+0x98>
   19218:	mov    ebx,DWORD PTR [rip+0x961e]        # 2283c <ny>
   1921e:	add    esi,eax
   19220:	lea    eax,[rsi+rbx*1]
   19223:	cdq    
   19224:	idiv   ebx
   19226:	mov    esi,edx
   19228:	mov    eax,DWORD PTR [r15+0x8]
   1922c:	movsx  r10d,WORD PTR [r14+0x4]
   19231:	test   eax,eax
   19233:	je     19246 <start_general_gather+0xb6>
   19235:	mov    ebx,DWORD PTR [rip+0x9199]        # 223d4 <nz>
   1923b:	add    eax,r10d
   1923e:	add    eax,ebx
   19240:	cdq    
   19241:	idiv   ebx
   19243:	mov    r10d,edx
   19246:	mov    r9d,DWORD PTR [r15+0xc]
   1924a:	movsx  ecx,WORD PTR [r14+0x6]
   1924f:	test   r9d,r9d
   19252:	je     19265 <start_general_gather+0xd5>
   19254:	mov    ebx,DWORD PTR [rip+0x9176]        # 223d0 <nt>
   1925a:	lea    eax,[r9+rcx*1]
   1925e:	add    eax,ebx
   19260:	cdq    
   19261:	idiv   ebx
   19263:	mov    ecx,edx
   19265:	mov    edx,r10d
   19268:	mov    rbx,QWORD PTR [rip+0x9559]        # 227c8 <lattice>
   1926f:	add    r14,0x800
   19276:	call   3b10 <node_index>
   1927b:	cdqe   
   1927d:	shl    rax,0xb
   19281:	add    rax,QWORD PTR [rsp+0x8]
   19286:	add    rax,rbx
   19289:	mov    QWORD PTR [r13+rbp*8+0x0],rax
   1928e:	add    rbp,0x1
   19292:	mov    eax,DWORD PTR [rip+0x93ec]        # 22684 <even_sites_on_node>
   19298:	cmp    r12d,0x2
   1929c:	cmovne eax,DWORD PTR [rip+0x925d]        # 22500 <sites_on_node>
   192a3:	cmp    eax,ebp
   192a5:	jg     191f0 <start_general_gather+0x60>
   192ab:	mov    DWORD PTR [rip+0x90f3],0x1        # 223a8 <g_gather_flag>
   192b5:	add    rsp,0x18
   192b9:	xor    eax,eax
   192bb:	pop    rbx
   192bc:	pop    rbp
   192bd:	pop    r12
   192bf:	pop    r13
   192c1:	pop    r14
   192c3:	pop    r15
   192c5:	ret    
   192c6:	mov    rdi,QWORD PTR [rip+0x9033]        # 22300 <stderr@@GLIBC_2.2.5>
   192cd:	xor    ecx,ecx
   192cf:	mov    esi,0x1
   192d4:	xor    eax,eax
   192d6:	lea    rdx,[rip+0x3603]        # 1c8e0 <CSWTCH.106+0xb8>
   192dd:	call   24d0 <__fprintf_chk@plt>
   192e2:	mov    edi,0x1
   192e7:	call   24b0 <exit@plt>
   192ec:	nop    DWORD PTR [rax+0x0]

00000000000192f0 <wait_general_gather>:
   192f0:	endbr64 
   192f4:	mov    DWORD PTR [rip+0x90aa],0x0        # 223a8 <g_gather_flag>
   192fe:	ret    
   192ff:	nop

0000000000019300 <cleanup_general_gather>:
   19300:	endbr64 
   19304:	ret    
   19305:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019310 <field_pointer_at_coordinates>:
   19310:	endbr64 
   19314:	push   rbx
   19315:	mov    esi,ecx
   19317:	movsxd rbx,edi
   1931a:	mov    ecx,r9d
   1931d:	mov    edi,edx
   1931f:	mov    edx,r8d
   19322:	call   3b10 <node_index>
   19327:	cdqe   
   19329:	shl    rax,0xb
   1932d:	add    rax,rbx
   19330:	pop    rbx
   19331:	add    rax,QWORD PTR [rip+0x9490]        # 227c8 <lattice>
   19338:	ret    
   19339:	nop    DWORD PTR [rax+0x0]

0000000000019340 <field_pointer_at_direction>:
   19340:	endbr64 
   19344:	mov    rax,QWORD PTR [rip+0x12185]        # 2b4d0 <neighbor>
   1934b:	movsxd rcx,ecx
   1934e:	sub    rdx,QWORD PTR [rip+0x9473]        # 227c8 <lattice>
   19355:	movsxd rdi,edi
   19358:	sar    rdx,0xb
   1935c:	mov    rax,QWORD PTR [rax+rcx*8]
   19360:	movsxd rax,DWORD PTR [rax+rdx*4]
   19364:	add    rax,rdi
   19367:	ret    
   19368:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019370 <cleanup_field_pointer>:
   19370:	endbr64 
   19374:	ret    
   19375:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019380 <send_field>:
   19380:	endbr64 
   19384:	lea    rdi,[rip+0x34ca]        # 1c855 <CSWTCH.106+0x2d>
   1938b:	jmp    22f0 <puts@plt>

0000000000019390 <get_field>:
   19390:	endbr64 
   19394:	lea    rdi,[rip+0x34ba]        # 1c855 <CSWTCH.106+0x2d>
   1939b:	jmp    22f0 <puts@plt>

00000000000193a0 <machine_type>:
   193a0:	endbr64 
   193a4:	lea    rax,[rip+0x8f05]        # 222b0 <name>
   193ab:	ret    
   193ac:	nop    DWORD PTR [rax+0x0]

00000000000193b0 <mynode>:
   193b0:	endbr64 
   193b4:	xor    eax,eax
   193b6:	ret    
   193b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000193c0 <numnodes>:
   193c0:	endbr64 
   193c4:	mov    eax,0x1
   193c9:	ret    
   193ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000193d0 <g_sync>:
   193d0:	endbr64 
   193d4:	ret    
   193d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000193e0 <g_floatsum>:
   193e0:	endbr64 
   193e4:	ret    
   193e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000193f0 <g_doublesum>:
   193f0:	endbr64 
   193f4:	ret    
   193f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019400 <g_vecdoublesum>:
   19400:	endbr64 
   19404:	ret    
   19405:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019410 <g_complexsum>:
   19410:	endbr64 
   19414:	ret    
   19415:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019420 <g_dcomplexsum>:
   19420:	endbr64 
   19424:	ret    
   19425:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019430 <g_veccomplexsum>:
   19430:	endbr64 
   19434:	ret    
   19435:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019440 <g_wvectorsum>:
   19440:	endbr64 
   19444:	ret    
   19445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019450 <g_xor32>:
   19450:	endbr64 
   19454:	ret    
   19455:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019460 <g_floatmax>:
   19460:	endbr64 
   19464:	ret    
   19465:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019470 <g_doublemax>:
   19470:	endbr64 
   19474:	ret    
   19475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019480 <broadcast_float>:
   19480:	endbr64 
   19484:	ret    
   19485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019490 <broadcast_double>:
   19490:	endbr64 
   19494:	ret    
   19495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000194a0 <broadcast_complex>:
   194a0:	endbr64 
   194a4:	ret    
   194a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000194b0 <broadcast_dcomplex>:
   194b0:	endbr64 
   194b4:	ret    
   194b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000194c0 <broadcast_bytes>:
   194c0:	endbr64 
   194c4:	ret    
   194c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000194d0 <send_integer>:
   194d0:	endbr64 
   194d4:	lea    rdi,[rip+0x337a]        # 1c855 <CSWTCH.106+0x2d>
   194db:	jmp    22f0 <puts@plt>

00000000000194e0 <receive_integer>:
   194e0:	endbr64 
   194e4:	lea    rdi,[rip+0x336a]        # 1c855 <CSWTCH.106+0x2d>
   194eb:	jmp    22f0 <puts@plt>

00000000000194f0 <dclock>:
   194f0:	endbr64 
   194f4:	pxor   xmm0,xmm0
   194f8:	ret    
   194f9:	nop    DWORD PTR [rax+0x0]

0000000000019500 <time_stamp>:
   19500:	endbr64 
   19504:	push   r12
   19506:	mov    r12,rdi
   19509:	push   rbp
   1950a:	sub    rsp,0x18
   1950e:	mov    rax,QWORD PTR fs:0x28
   19517:	mov    QWORD PTR [rsp+0x8],rax
   1951c:	xor    eax,eax
   1951e:	mov    rbp,rsp
   19521:	mov    rdi,rbp
   19524:	call   2400 <time@plt>
   19529:	mov    rdi,rbp
   1952c:	call   2330 <ctime@plt>
   19531:	mov    rdx,r12
   19534:	mov    edi,0x1
   19539:	lea    rsi,[rip+0x332f]        # 1c86f <CSWTCH.106+0x47>
   19540:	mov    rcx,rax
   19543:	xor    eax,eax
   19545:	call   2470 <__printf_chk@plt>
   1954a:	mov    rax,QWORD PTR [rsp+0x8]
   1954f:	xor    rax,QWORD PTR fs:0x28
   19558:	jne    19562 <time_stamp+0x62>
   1955a:	add    rsp,0x18
   1955e:	pop    rbp
   1955f:	pop    r12
   19561:	ret    
   19562:	call   2350 <__stack_chk_fail@plt>
   19567:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019570 <terminate>:
   19570:	endbr64 
   19574:	push   rbp
   19575:	mov    ebp,edi
   19577:	lea    rdi,[rip+0x32f9]        # 1c877 <CSWTCH.106+0x4f>
   1957e:	call   19500 <time_stamp>
   19583:	mov    edx,ebp
   19585:	lea    rsi,[rip+0x32f7]        # 1c883 <CSWTCH.106+0x5b>
   1958c:	xor    eax,eax
   1958e:	mov    edi,0x1
   19593:	call   2470 <__printf_chk@plt>
   19598:	mov    rdi,QWORD PTR [rip+0x8d41]        # 222e0 <stdout@@GLIBC_2.2.5>
   1959f:	call   2420 <fflush@plt>
   195a4:	mov    rdi,QWORD PTR [rip+0x8d55]        # 22300 <stderr@@GLIBC_2.2.5>
   195ab:	call   2420 <fflush@plt>
   195b0:	mov    edi,ebp
   195b2:	call   24b0 <exit@plt>
   195b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000195c0 <make_gather>:
   195c0:	endbr64 
   195c4:	push   r15
   195c6:	push   r14
   195c8:	push   r13
   195ca:	mov    r13d,r8d
   195cd:	push   r12
   195cf:	mov    r12,rsi
   195d2:	push   rbp
   195d3:	mov    rbp,rdi
   195d6:	push   rbx
   195d7:	sub    rsp,0x68
   195db:	mov    DWORD PTR [rsp+0x18],edx
   195df:	mov    rax,QWORD PTR fs:0x28
   195e8:	mov    QWORD PTR [rsp+0x58],rax
   195ed:	xor    eax,eax
   195ef:	mov    eax,DWORD PTR [rip+0x11ed3]        # 2b4c8 <n_gathers>
   195f5:	cmp    edx,0x1
   195f8:	je     199c8 <make_gather+0x408>
   195fe:	add    eax,0x1
   19601:	mov    DWORD PTR [rip+0x11ec1],eax        # 2b4c8 <n_gathers>
   19607:	cmp    eax,0x20
   1960a:	jg     19ae3 <make_gather+0x523>
   19610:	mov    rdi,QWORD PTR [rip+0x11eb9]        # 2b4d0 <neighbor>
   19617:	cdqe   
   19619:	lea    rsi,[rax*8+0x0]
   19621:	call   2450 <realloc@plt>
   19626:	mov    r14d,DWORD PTR [rip+0x11e9b]        # 2b4c8 <n_gathers>
   1962d:	mov    esi,0x4
   19632:	movsxd rdi,DWORD PTR [rip+0x8ec7]        # 22500 <sites_on_node>
   19639:	mov    rbx,rax
   1963c:	mov    QWORD PTR [rip+0x11e8d],rax        # 2b4d0 <neighbor>
   19643:	call   23d0 <calloc@plt>
   19648:	movsxd rdx,r14d
   1964b:	mov    QWORD PTR [rbx+rdx*8-0x8],rax
   19650:	test   rax,rax
   19653:	je     19b25 <make_gather+0x565>
   19659:	lea    eax,[r14-0x1]
   1965d:	mov    DWORD PTR [rsp+0x2c],eax
   19661:	mov    edx,DWORD PTR [rip+0x8e99]        # 22500 <sites_on_node>
   19667:	mov    r14,QWORD PTR [rip+0x915a]        # 227c8 <lattice>
   1966e:	test   edx,edx
   19670:	jle    198ff <make_gather+0x33f>
   19676:	lea    rax,[rsp+0x40]
   1967b:	xor    ebx,ebx
   1967d:	lea    r15,[rsp+0x44]
   19682:	mov    QWORD PTR [rsp+0x10],rax
   19687:	lea    rax,[rsp+0x3c]
   1968c:	mov    QWORD PTR [rsp+0x8],rax
   19691:	lea    rax,[rsp+0x38]
   19696:	mov    QWORD PTR [rsp],rax
   1969a:	lea    rax,[rsp+0x54]
   1969f:	mov    QWORD PTR [rsp+0x20],rax
   196a4:	jmp    1974b <make_gather+0x18b>
   196a9:	nop    DWORD PTR [rax+0x0]
   196b0:	test   al,0x1
   196b2:	jne    196bf <make_gather+0xff>
   196b4:	cmp    BYTE PTR [r14+0x8],0x1
   196b9:	je     19831 <make_gather+0x271>
   196bf:	cmp    edx,0x1
   196c2:	je     19840 <make_gather+0x280>
   196c8:	mov    eax,DWORD PTR [rsp+0x18]
   196cc:	test   eax,eax
   196ce:	jne    19733 <make_gather+0x173>
   196d0:	push   QWORD PTR [rsp+0x20]
   196d4:	mov    r9d,0x1
   196da:	mov    r8,r12
   196dd:	mov    edx,r10d
   196e0:	lea    rax,[rsp+0x58]
   196e5:	push   rax
   196e6:	lea    rax,[rsp+0x5c]
   196eb:	push   rax
   196ec:	lea    rax,[rsp+0x60]
   196f1:	push   rax
   196f2:	call   rbp
   196f4:	movsx  eax,WORD PTR [r14]
   196f8:	add    rsp,0x20
   196fc:	cmp    eax,DWORD PTR [rsp+0x48]
   19700:	jne    19aa7 <make_gather+0x4e7>
   19706:	movsx  eax,WORD PTR [r14+0x2]
   1970b:	cmp    eax,DWORD PTR [rsp+0x4c]
   1970f:	jne    19aa7 <make_gather+0x4e7>
   19715:	movsx  eax,WORD PTR [r14+0x4]
   1971a:	cmp    eax,DWORD PTR [rsp+0x50]
   1971e:	jne    19aa7 <make_gather+0x4e7>
   19724:	movsx  eax,WORD PTR [r14+0x6]
   19729:	cmp    eax,DWORD PTR [rsp+0x54]
   1972d:	jne    19aa7 <make_gather+0x4e7>
   19733:	mov    eax,DWORD PTR [rip+0x8dc7]        # 22500 <sites_on_node>
   19739:	add    ebx,0x1
   1973c:	add    r14,0x800
   19743:	cmp    eax,ebx
   19745:	jle    19850 <make_gather+0x290>
   1974b:	movsx  ecx,WORD PTR [r14+0x6]
   19750:	movsx  edx,WORD PTR [r14+0x4]
   19755:	mov    r9d,0x1
   1975b:	mov    r8,r12
   1975e:	movsx  esi,WORD PTR [r14+0x2]
   19763:	movsx  edi,WORD PTR [r14]
   19767:	push   r15
   19769:	push   QWORD PTR [rsp+0x18]
   1976d:	push   QWORD PTR [rsp+0x18]
   19771:	push   QWORD PTR [rsp+0x18]
   19775:	call   rbp
   19777:	mov    edi,DWORD PTR [rsp+0x58]
   1977b:	mov    esi,DWORD PTR [rsp+0x5c]
   1977f:	mov    r10d,DWORD PTR [rsp+0x60]
   19784:	mov    ecx,DWORD PTR [rsp+0x64]
   19788:	add    rsp,0x20
   1978c:	lea    eax,[rdi+rsi*1]
   1978f:	mov    r11d,esi
   19792:	add    eax,r10d
   19795:	shr    r11d,0x1f
   19799:	add    eax,ecx
   1979b:	mov    r9d,eax
   1979e:	shr    r9d,0x1f
   197a2:	lea    edx,[rax+r9*1]
   197a6:	and    edx,0x1
   197a9:	sub    edx,r9d
   197ac:	mov    r9d,edi
   197af:	shr    r9d,0x1f
   197b3:	or     r9d,r11d
   197b6:	mov    r11d,r10d
   197b9:	shr    r11d,0x1f
   197bd:	or     r9b,r11b
   197c0:	jne    19a53 <make_gather+0x493>
   197c6:	test   ecx,ecx
   197c8:	js     19a53 <make_gather+0x493>
   197ce:	cmp    edi,DWORD PTR [rip+0x8c04]        # 223d8 <nx>
   197d4:	jge    19a53 <make_gather+0x493>
   197da:	cmp    esi,DWORD PTR [rip+0x905c]        # 2283c <ny>
   197e0:	jge    19a53 <make_gather+0x493>
   197e6:	cmp    r10d,DWORD PTR [rip+0x8be7]        # 223d4 <nz>
   197ed:	jge    19a53 <make_gather+0x493>
   197f3:	cmp    ecx,DWORD PTR [rip+0x8bd7]        # 223d0 <nt>
   197f9:	jge    19a53 <make_gather+0x493>
   197ff:	test   r13d,r13d
   19802:	je     196b0 <make_gather+0xf0>
   19808:	cmp    r13d,0x1
   1980c:	jne    196c8 <make_gather+0x108>
   19812:	test   al,0x1
   19814:	jne    1981d <make_gather+0x25d>
   19816:	cmp    BYTE PTR [r14+0x8],0x2
   1981b:	je     19831 <make_gather+0x271>
   1981d:	cmp    edx,0x1
   19820:	jne    196c8 <make_gather+0x108>
   19826:	cmp    BYTE PTR [r14+0x8],0x1
   1982b:	jne    196c8 <make_gather+0x108>
   19831:	lea    rdi,[rip+0x3188]        # 1c9c0 <CSWTCH.106+0x198>
   19838:	jmp    19a5a <make_gather+0x49a>
   1983d:	nop    DWORD PTR [rax]
   19840:	cmp    BYTE PTR [r14+0x8],0x2
   19845:	jne    196c8 <make_gather+0x108>
   1984b:	jmp    19831 <make_gather+0x271>
   1984d:	nop    DWORD PTR [rax]
   19850:	mov    r13,QWORD PTR [rip+0x8f71]        # 227c8 <lattice>
   19857:	test   eax,eax
   19859:	jle    198ff <make_gather+0x33f>
   1985f:	movsxd rax,DWORD PTR [rsp+0x2c]
   19864:	xor    ebx,ebx
   19866:	shl    rax,0x3
   1986a:	mov    QWORD PTR [rsp+0x20],rax
   1986f:	mov    rax,r12
   19872:	mov    r12,r13
   19875:	mov    r13,rax
   19878:	nop    DWORD PTR [rax+rax*1+0x0]
   19880:	movsx  ecx,WORD PTR [r12+0x6]
   19886:	movsx  edx,WORD PTR [r12+0x4]
   1988c:	mov    r8,r13
   1988f:	mov    r9d,0x1
   19895:	movsx  esi,WORD PTR [r12+0x2]
   1989b:	movsx  edi,WORD PTR [r12]
   198a0:	push   r15
   198a2:	add    r12,0x800
   198a9:	push   QWORD PTR [rsp+0x18]
   198ad:	push   QWORD PTR [rsp+0x18]
   198b1:	push   QWORD PTR [rsp+0x18]
   198b5:	call   rbp
   198b7:	mov    rcx,QWORD PTR [rsp+0x40]
   198bc:	mov    rax,QWORD PTR [rip+0x11c0d]        # 2b4d0 <neighbor>
   198c3:	mov    edx,DWORD PTR [rsp+0x60]
   198c7:	mov    esi,DWORD PTR [rsp+0x5c]
   198cb:	mov    edi,DWORD PTR [rsp+0x58]
   198cf:	add    rsp,0x20
   198d3:	mov    rax,QWORD PTR [rax+rcx*1]
   198d7:	mov    ecx,DWORD PTR [rsp+0x44]
   198db:	lea    r14,[rax+rbx*4]
   198df:	add    rbx,0x1
   198e3:	call   3b10 <node_index>
   198e8:	mov    DWORD PTR [r14],eax
   198eb:	mov    eax,DWORD PTR [rip+0x8c0f]        # 22500 <sites_on_node>
   198f1:	cmp    eax,ebx
   198f3:	jg     19880 <make_gather+0x2c0>
   198f5:	cmp    DWORD PTR [rsp+0x18],0x1
   198fa:	mov    r12,r13
   198fd:	je     19926 <make_gather+0x366>
   198ff:	mov    rax,QWORD PTR [rsp+0x58]
   19904:	xor    rax,QWORD PTR fs:0x28
   1990d:	jne    19b48 <make_gather+0x588>
   19913:	mov    eax,DWORD PTR [rsp+0x2c]
   19917:	add    rsp,0x68
   1991b:	pop    rbx
   1991c:	pop    rbp
   1991d:	pop    r12
   1991f:	pop    r13
   19921:	pop    r14
   19923:	pop    r15
   19925:	ret    
   19926:	mov    r10,QWORD PTR [rip+0x8e9b]        # 227c8 <lattice>
   1992d:	test   eax,eax
   1992f:	jle    198ff <make_gather+0x33f>
   19931:	mov    r13,QWORD PTR [rsp+0x20]
   19936:	mov    QWORD PTR [rsp+0x18],rbp
   1993b:	mov    r14,r12
   1993e:	xor    ebx,ebx
   19940:	mov    r12,r10
   19943:	add    r13,0x8
   19947:	nop    WORD PTR [rax+rax*1+0x0]
   19950:	movsx  ecx,WORD PTR [r12+0x6]
   19956:	movsx  edx,WORD PTR [r12+0x4]
   1995c:	mov    r8,r14
   1995f:	mov    r9d,0xffffffff
   19965:	movsx  esi,WORD PTR [r12+0x2]
   1996b:	movsx  edi,WORD PTR [r12]
   19970:	push   r15
   19972:	add    r12,0x800
   19979:	push   QWORD PTR [rsp+0x18]
   1997d:	push   QWORD PTR [rsp+0x18]
   19981:	push   QWORD PTR [rsp+0x18]
   19985:	mov    rax,QWORD PTR [rsp+0x38]
   1998a:	call   rax
   1998c:	mov    rax,QWORD PTR [rip+0x11b3d]        # 2b4d0 <neighbor>
   19993:	mov    ecx,DWORD PTR [rsp+0x64]
   19997:	mov    edx,DWORD PTR [rsp+0x60]
   1999b:	mov    esi,DWORD PTR [rsp+0x5c]
   1999f:	add    rsp,0x20
   199a3:	mov    rax,QWORD PTR [rax+r13*1]
   199a7:	mov    edi,DWORD PTR [rsp+0x38]
   199ab:	lea    rbp,[rax+rbx*4]
   199af:	add    rbx,0x1
   199b3:	call   3b10 <node_index>
   199b8:	mov    DWORD PTR [rbp+0x0],eax
   199bb:	cmp    DWORD PTR [rip+0x8b3f],ebx        # 22500 <sites_on_node>
   199c1:	jg     19950 <make_gather+0x390>
   199c3:	jmp    198ff <make_gather+0x33f>
   199c8:	add    eax,0x2
   199cb:	mov    DWORD PTR [rip+0x11af7],eax        # 2b4c8 <n_gathers>
   199d1:	cmp    eax,0x20
   199d4:	jg     19ae3 <make_gather+0x523>
   199da:	mov    rdi,QWORD PTR [rip+0x11aef]        # 2b4d0 <neighbor>
   199e1:	cdqe   
   199e3:	lea    rsi,[rax*8+0x0]
   199eb:	call   2450 <realloc@plt>
   199f0:	movsxd rbx,DWORD PTR [rip+0x11ad1]        # 2b4c8 <n_gathers>
   199f7:	mov    esi,0x4
   199fc:	movsxd rdi,DWORD PTR [rip+0x8afd]        # 22500 <sites_on_node>
   19a03:	mov    r15,rax
   19a06:	mov    QWORD PTR [rip+0x11ac3],rax        # 2b4d0 <neighbor>
   19a0d:	call   23d0 <calloc@plt>
   19a12:	mov    r14,rbx
   19a15:	shl    rbx,0x3
   19a19:	mov    QWORD PTR [r15+rbx*1-0x10],rax
   19a1e:	test   rax,rax
   19a21:	je     19b25 <make_gather+0x565>
   19a27:	movsxd rdi,DWORD PTR [rip+0x8ad2]        # 22500 <sites_on_node>
   19a2e:	mov    esi,0x4
   19a33:	call   23d0 <calloc@plt>
   19a38:	mov    QWORD PTR [r15+rbx*1-0x8],rax
   19a3d:	test   rax,rax
   19a40:	je     19af6 <make_gather+0x536>
   19a46:	lea    eax,[r14-0x2]
   19a4a:	mov    DWORD PTR [rsp+0x2c],eax
   19a4e:	jmp    19661 <make_gather+0xa1>
   19a53:	lea    rdi,[rip+0x2f06]        # 1c960 <CSWTCH.106+0x138>
   19a5a:	call   22f0 <puts@plt>
   19a5f:	mov    eax,DWORD PTR [rsp+0x44]
   19a63:	movsx  r9d,WORD PTR [r14+0x6]
   19a68:	lea    rsi,[rip+0x2f29]        # 1c998 <CSWTCH.106+0x170>
   19a6f:	movsx  r8d,WORD PTR [r14+0x4]
   19a74:	movsx  ecx,WORD PTR [r14+0x2]
   19a79:	movsx  edx,WORD PTR [r14]
   19a7d:	push   rax
   19a7e:	mov    eax,DWORD PTR [rsp+0x48]
   19a82:	push   rax
   19a83:	mov    eax,DWORD PTR [rsp+0x4c]
   19a87:	push   rax
   19a88:	mov    eax,DWORD PTR [rsp+0x50]
   19a8c:	push   rax
   19a8d:	mov    edi,0x1
   19a92:	xor    eax,eax
   19a94:	call   2470 <__printf_chk@plt>
   19a99:	add    rsp,0x20
   19a9d:	mov    edi,0x1
   19aa2:	call   19570 <terminate>
   19aa7:	lea    rdi,[rip+0x2f4a]        # 1c9f8 <CSWTCH.106+0x1d0>
   19aae:	call   22f0 <puts@plt>
   19ab3:	mov    eax,DWORD PTR [rsp+0x54]
   19ab7:	movsx  r9d,WORD PTR [r14+0x6]
   19abc:	lea    rsi,[rip+0x2f6d]        # 1ca30 <CSWTCH.106+0x208>
   19ac3:	movsx  r8d,WORD PTR [r14+0x4]
   19ac8:	movsx  ecx,WORD PTR [r14+0x2]
   19acd:	movsx  edx,WORD PTR [r14]
   19ad1:	push   rax
   19ad2:	mov    eax,DWORD PTR [rsp+0x58]
   19ad6:	push   rax
   19ad7:	mov    eax,DWORD PTR [rsp+0x5c]
   19adb:	push   rax
   19adc:	mov    eax,DWORD PTR [rsp+0x60]
   19ae0:	push   rax
   19ae1:	jmp    19a8d <make_gather+0x4cd>
   19ae3:	cmp    DWORD PTR [rip+0x8dfa],0x0        # 228e4 <this_node>
   19aea:	je     19b17 <make_gather+0x557>
   19aec:	mov    edi,0x1
   19af1:	call   24b0 <exit@plt>
   19af6:	mov    edx,DWORD PTR [rip+0x8de8]        # 228e4 <this_node>
   19afc:	mov    edi,0x1
   19b01:	lea    rsi,[rip+0x2e30]        # 1c938 <CSWTCH.106+0x110>
   19b08:	call   2470 <__printf_chk@plt>
   19b0d:	mov    edi,0x1
   19b12:	call   19570 <terminate>
   19b17:	lea    rdi,[rip+0x2df2]        # 1c910 <CSWTCH.106+0xe8>
   19b1e:	call   22f0 <puts@plt>
   19b23:	jmp    19aec <make_gather+0x52c>
   19b25:	mov    edx,DWORD PTR [rip+0x8db9]        # 228e4 <this_node>
   19b2b:	mov    edi,0x1
   19b30:	lea    rsi,[rip+0x2e01]        # 1c938 <CSWTCH.106+0x110>
   19b37:	xor    eax,eax
   19b39:	call   2470 <__printf_chk@plt>
   19b3e:	mov    edi,0x1
   19b43:	call   19570 <terminate>
   19b48:	call   2350 <__stack_chk_fail@plt>
   19b4d:	nop    DWORD PTR [rax]

0000000000019b50 <make_nn_gathers>:
   19b50:	endbr64 
   19b54:	push   rbp
   19b55:	mov    esi,0x8
   19b5a:	mov    edi,0x8
   19b5f:	push   rbx
   19b60:	lea    rbx,[rip+0xfffffffffffff099]        # 18c00 <neighbor_coords_special>
   19b67:	sub    rsp,0x18
   19b6b:	mov    rax,QWORD PTR fs:0x28
   19b74:	mov    QWORD PTR [rsp+0x8],rax
   19b79:	xor    eax,eax
   19b7b:	lea    rbp,[rsp+0x4]
   19b80:	call   23d0 <calloc@plt>
   19b85:	mov    DWORD PTR [rsp+0x4],0x0
   19b8d:	mov    QWORD PTR [rip+0x1193c],rax        # 2b4d0 <neighbor>
   19b94:	mov    DWORD PTR [rip+0x1192a],0x0        # 2b4c8 <n_gathers>
   19b9e:	xchg   ax,ax
   19ba0:	mov    r8d,0x1
   19ba6:	xor    ecx,ecx
   19ba8:	mov    edx,0x1
   19bad:	mov    rsi,rbp
   19bb0:	mov    rdi,rbx
   19bb3:	call   195c0 <make_gather>
   19bb8:	mov    eax,DWORD PTR [rsp+0x4]
   19bbc:	add    eax,0x1
   19bbf:	mov    DWORD PTR [rsp+0x4],eax
   19bc3:	cmp    eax,0x3
   19bc6:	jle    19ba0 <make_nn_gathers+0x50>
   19bc8:	mov    rdi,QWORD PTR [rip+0x11901]        # 2b4d0 <neighbor>
   19bcf:	call   18d60 <sort_eight_special>
   19bd4:	mov    rax,QWORD PTR [rsp+0x8]
   19bd9:	xor    rax,QWORD PTR fs:0x28
   19be2:	jne    19beb <make_nn_gathers+0x9b>
   19be4:	add    rsp,0x18
   19be8:	pop    rbx
   19be9:	pop    rbp
   19bea:	ret    
   19beb:	call   2350 <__stack_chk_fail@plt>

0000000000019bf0 <normal_exit>:
   19bf0:	endbr64 
   19bf4:	push   rax
   19bf5:	pop    rax
   19bf6:	sub    rsp,0x8
   19bfa:	call   24b0 <exit@plt>
   19bff:	nop

0000000000019c00 <g_open>:
   19c00:	endbr64 
   19c04:	push   r12
   19c06:	push   rbx
   19c07:	sub    rsp,0x8
   19c0b:	movzx  eax,BYTE PTR [rsi]
   19c0e:	cmp    al,0x61
   19c10:	je     19cf0 <g_open+0xf0>
   19c16:	mov    r12,rdi
   19c19:	cmp    al,0x77
   19c1b:	je     19c80 <g_open+0x80>
   19c1d:	mov    rdi,rsi
   19c20:	cmp    al,0x72
   19c22:	jne    19c90 <g_open+0x90>
   19c24:	mov    esi,0x2b
   19c29:	call   2360 <strchr@plt>
   19c2e:	xor    esi,esi
   19c30:	test   rax,rax
   19c33:	setne  sil
   19c37:	add    esi,esi
   19c39:	mov    edx,0x1a4
   19c3e:	mov    rdi,r12
   19c41:	xor    eax,eax
   19c43:	call   2480 <open@plt>
   19c48:	mov    ebx,eax
   19c4a:	cmp    eax,0xffffffff
   19c4d:	je     19cc0 <g_open+0xc0>
   19c4f:	mov    esi,0x4
   19c54:	mov    edi,0x1
   19c59:	call   23d0 <calloc@plt>
   19c5e:	mov    r12,rax
   19c61:	test   rax,rax
   19c64:	je     19d11 <g_open+0x111>
   19c6a:	mov    DWORD PTR [r12],ebx
   19c6e:	add    rsp,0x8
   19c72:	mov    rax,r12
   19c75:	pop    rbx
   19c76:	pop    r12
   19c78:	ret    
   19c79:	nop    DWORD PTR [rax+0x0]
   19c80:	mov    esi,0x41
   19c85:	jmp    19c39 <g_open+0x39>
   19c87:	nop    WORD PTR [rax+rax*1+0x0]
   19c90:	mov    edx,DWORD PTR [rip+0x8c4e]        # 228e4 <this_node>
   19c96:	mov    rcx,rsi
   19c99:	mov    edi,0x1
   19c9e:	xor    eax,eax
   19ca0:	lea    rsi,[rip+0x2de9]        # 1ca90 <CSWTCH.106+0x268>
   19ca7:	xor    r12d,r12d
   19caa:	call   2470 <__printf_chk@plt>
   19caf:	add    rsp,0x8
   19cb3:	mov    rax,r12
   19cb6:	pop    rbx
   19cb7:	pop    r12
   19cb9:	ret    
   19cba:	nop    WORD PTR [rax+rax*1+0x0]
   19cc0:	call   22c0 <__errno_location@plt>
   19cc5:	mov    edx,DWORD PTR [rip+0x8c19]        # 228e4 <this_node>
   19ccb:	mov    r8,r12
   19cce:	lea    rsi,[rip+0x2deb]        # 1cac0 <CSWTCH.106+0x298>
   19cd5:	mov    ecx,DWORD PTR [rax]
   19cd7:	mov    edi,0x1
   19cdc:	xor    eax,eax
   19cde:	xor    r12d,r12d
   19ce1:	call   2470 <__printf_chk@plt>
   19ce6:	jmp    19c6e <g_open+0x6e>
   19ce8:	nop    DWORD PTR [rax+rax*1+0x0]
   19cf0:	mov    edx,DWORD PTR [rip+0x8bee]        # 228e4 <this_node>
   19cf6:	mov    edi,0x1
   19cfb:	xor    eax,eax
   19cfd:	xor    r12d,r12d
   19d00:	lea    rsi,[rip+0x2d59]        # 1ca60 <CSWTCH.106+0x238>
   19d07:	call   2470 <__printf_chk@plt>
   19d0c:	jmp    19c6e <g_open+0x6e>
   19d11:	mov    edx,DWORD PTR [rip+0x8bcd]        # 228e4 <this_node>
   19d17:	lea    rsi,[rip+0x2dca]        # 1cae8 <CSWTCH.106+0x2c0>
   19d1e:	mov    edi,0x1
   19d23:	xor    eax,eax
   19d25:	call   2470 <__printf_chk@plt>
   19d2a:	mov    rdi,QWORD PTR [rip+0x85af]        # 222e0 <stdout@@GLIBC_2.2.5>
   19d31:	call   2420 <fflush@plt>
   19d36:	mov    edi,0x1
   19d3b:	call   19570 <terminate>
   19d40:	jmp    19c6a <g_open+0x6a>
   19d45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019d50 <g_seek>:
   19d50:	endbr64 
   19d54:	sub    rsp,0x8
   19d58:	mov    edi,DWORD PTR [rdi]
   19d5a:	call   2370 <lseek@plt>
   19d5f:	add    rsp,0x8
   19d63:	ret    
   19d64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   19d6f:	nop

0000000000019d70 <g_write>:
   19d70:	endbr64 
   19d74:	imul   edx,esi
   19d77:	push   rbx
   19d78:	mov    rbx,rsi
   19d7b:	mov    rsi,rdi
   19d7e:	mov    edi,DWORD PTR [rcx]
   19d80:	movsxd rdx,edx
   19d83:	call   2310 <write@plt>
   19d88:	xor    edx,edx
   19d8a:	div    rbx
   19d8d:	pop    rbx
   19d8e:	ret    
   19d8f:	nop

0000000000019d90 <g_read>:
   19d90:	endbr64 
   19d94:	imul   edx,esi
   19d97:	push   rbx
   19d98:	mov    rbx,rsi
   19d9b:	mov    rsi,rdi
   19d9e:	mov    edi,DWORD PTR [rcx]
   19da0:	movsxd rdx,edx
   19da3:	call   23b0 <read@plt>
   19da8:	xor    edx,edx
   19daa:	div    rbx
   19dad:	pop    rbx
   19dae:	ret    
   19daf:	nop

0000000000019db0 <g_close>:
   19db0:	endbr64 
   19db4:	push   r12
   19db6:	push   rbp
   19db7:	mov    rbp,rdi
   19dba:	sub    rsp,0x8
   19dbe:	mov    edi,DWORD PTR [rdi]
   19dc0:	call   2380 <close@plt>
   19dc5:	mov    rdi,rbp
   19dc8:	mov    r12d,eax
   19dcb:	call   22a0 <free@plt>
   19dd0:	add    rsp,0x8
   19dd4:	mov    eax,r12d
   19dd7:	pop    rbp
   19dd8:	pop    r12
   19dda:	ret    
   19ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019de0 <__libc_csu_init>:
   19de0:	endbr64 
   19de4:	push   r15
   19de6:	lea    r15,[rip+0x7e93]        # 21c80 <__frame_dummy_init_array_entry>
   19ded:	push   r14
   19def:	mov    r14,rdx
   19df2:	push   r13
   19df4:	mov    r13,rsi
   19df7:	push   r12
   19df9:	mov    r12d,edi
   19dfc:	push   rbp
   19dfd:	lea    rbp,[rip+0x7e84]        # 21c88 <__do_global_dtors_aux_fini_array_entry>
   19e04:	push   rbx
   19e05:	sub    rbp,r15
   19e08:	sub    rsp,0x8
   19e0c:	call   2000 <_init>
   19e11:	sar    rbp,0x3
   19e15:	je     19e36 <__libc_csu_init+0x56>
   19e17:	xor    ebx,ebx
   19e19:	nop    DWORD PTR [rax+0x0]
   19e20:	mov    rdx,r14
   19e23:	mov    rsi,r13
   19e26:	mov    edi,r12d
   19e29:	call   QWORD PTR [r15+rbx*8]
   19e2d:	add    rbx,0x1
   19e31:	cmp    rbp,rbx
   19e34:	jne    19e20 <__libc_csu_init+0x40>
   19e36:	add    rsp,0x8
   19e3a:	pop    rbx
   19e3b:	pop    rbp
   19e3c:	pop    r12
   19e3e:	pop    r13
   19e40:	pop    r14
   19e42:	pop    r15
   19e44:	ret    
   19e45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000019e50 <__libc_csu_fini>:
   19e50:	endbr64 
   19e54:	ret    

Disassembly of section .fini:

0000000000019e58 <_fini>:
   19e58:	endbr64 
   19e5c:	sub    rsp,0x8
   19e60:	add    rsp,0x8
   19e64:	ret    
