
/usr/bin/gzip:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <.init>:
    3000:	endbr64 
    3004:	sub    rsp,0x8
    3008:	mov    rax,QWORD PTR [rip+0x14fd9]        # 17fe8 <__ctype_b_loc@plt+0x14678>
    300f:	test   rax,rax
    3012:	je     3016 <__cxa_finalize@plt-0x4ba>
    3014:	call   rax
    3016:	add    rsp,0x8
    301a:	ret    

Disassembly of section .plt:

0000000000003020 <.plt>:
    3020:	push   QWORD PTR [rip+0x14d52]        # 17d78 <__ctype_b_loc@plt+0x14408>
    3026:	bnd jmp QWORD PTR [rip+0x14d53]        # 17d80 <__ctype_b_loc@plt+0x14410>
    302d:	nop    DWORD PTR [rax]
    3030:	endbr64 
    3034:	push   0x0
    3039:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    303f:	nop
    3040:	endbr64 
    3044:	push   0x1
    3049:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    304f:	nop
    3050:	endbr64 
    3054:	push   0x2
    3059:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    305f:	nop
    3060:	endbr64 
    3064:	push   0x3
    3069:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    306f:	nop
    3070:	endbr64 
    3074:	push   0x4
    3079:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    307f:	nop
    3080:	endbr64 
    3084:	push   0x5
    3089:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    308f:	nop
    3090:	endbr64 
    3094:	push   0x6
    3099:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    309f:	nop
    30a0:	endbr64 
    30a4:	push   0x7
    30a9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    30af:	nop
    30b0:	endbr64 
    30b4:	push   0x8
    30b9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    30bf:	nop
    30c0:	endbr64 
    30c4:	push   0x9
    30c9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    30cf:	nop
    30d0:	endbr64 
    30d4:	push   0xa
    30d9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    30df:	nop
    30e0:	endbr64 
    30e4:	push   0xb
    30e9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    30ef:	nop
    30f0:	endbr64 
    30f4:	push   0xc
    30f9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    30ff:	nop
    3100:	endbr64 
    3104:	push   0xd
    3109:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    310f:	nop
    3110:	endbr64 
    3114:	push   0xe
    3119:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    311f:	nop
    3120:	endbr64 
    3124:	push   0xf
    3129:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    312f:	nop
    3130:	endbr64 
    3134:	push   0x10
    3139:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    313f:	nop
    3140:	endbr64 
    3144:	push   0x11
    3149:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    314f:	nop
    3150:	endbr64 
    3154:	push   0x12
    3159:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    315f:	nop
    3160:	endbr64 
    3164:	push   0x13
    3169:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    316f:	nop
    3170:	endbr64 
    3174:	push   0x14
    3179:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    317f:	nop
    3180:	endbr64 
    3184:	push   0x15
    3189:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    318f:	nop
    3190:	endbr64 
    3194:	push   0x16
    3199:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    319f:	nop
    31a0:	endbr64 
    31a4:	push   0x17
    31a9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    31af:	nop
    31b0:	endbr64 
    31b4:	push   0x18
    31b9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    31bf:	nop
    31c0:	endbr64 
    31c4:	push   0x19
    31c9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    31cf:	nop
    31d0:	endbr64 
    31d4:	push   0x1a
    31d9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    31df:	nop
    31e0:	endbr64 
    31e4:	push   0x1b
    31e9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    31ef:	nop
    31f0:	endbr64 
    31f4:	push   0x1c
    31f9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    31ff:	nop
    3200:	endbr64 
    3204:	push   0x1d
    3209:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    320f:	nop
    3210:	endbr64 
    3214:	push   0x1e
    3219:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    321f:	nop
    3220:	endbr64 
    3224:	push   0x1f
    3229:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    322f:	nop
    3230:	endbr64 
    3234:	push   0x20
    3239:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    323f:	nop
    3240:	endbr64 
    3244:	push   0x21
    3249:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    324f:	nop
    3250:	endbr64 
    3254:	push   0x22
    3259:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    325f:	nop
    3260:	endbr64 
    3264:	push   0x23
    3269:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    326f:	nop
    3270:	endbr64 
    3274:	push   0x24
    3279:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    327f:	nop
    3280:	endbr64 
    3284:	push   0x25
    3289:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    328f:	nop
    3290:	endbr64 
    3294:	push   0x26
    3299:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    329f:	nop
    32a0:	endbr64 
    32a4:	push   0x27
    32a9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    32af:	nop
    32b0:	endbr64 
    32b4:	push   0x28
    32b9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    32bf:	nop
    32c0:	endbr64 
    32c4:	push   0x29
    32c9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    32cf:	nop
    32d0:	endbr64 
    32d4:	push   0x2a
    32d9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    32df:	nop
    32e0:	endbr64 
    32e4:	push   0x2b
    32e9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    32ef:	nop
    32f0:	endbr64 
    32f4:	push   0x2c
    32f9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    32ff:	nop
    3300:	endbr64 
    3304:	push   0x2d
    3309:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    330f:	nop
    3310:	endbr64 
    3314:	push   0x2e
    3319:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    331f:	nop
    3320:	endbr64 
    3324:	push   0x2f
    3329:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    332f:	nop
    3330:	endbr64 
    3334:	push   0x30
    3339:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    333f:	nop
    3340:	endbr64 
    3344:	push   0x31
    3349:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    334f:	nop
    3350:	endbr64 
    3354:	push   0x32
    3359:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    335f:	nop
    3360:	endbr64 
    3364:	push   0x33
    3369:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    336f:	nop
    3370:	endbr64 
    3374:	push   0x34
    3379:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    337f:	nop
    3380:	endbr64 
    3384:	push   0x35
    3389:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    338f:	nop
    3390:	endbr64 
    3394:	push   0x36
    3399:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    339f:	nop
    33a0:	endbr64 
    33a4:	push   0x37
    33a9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    33af:	nop
    33b0:	endbr64 
    33b4:	push   0x38
    33b9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    33bf:	nop
    33c0:	endbr64 
    33c4:	push   0x39
    33c9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    33cf:	nop
    33d0:	endbr64 
    33d4:	push   0x3a
    33d9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    33df:	nop
    33e0:	endbr64 
    33e4:	push   0x3b
    33e9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    33ef:	nop
    33f0:	endbr64 
    33f4:	push   0x3c
    33f9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    33ff:	nop
    3400:	endbr64 
    3404:	push   0x3d
    3409:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    340f:	nop
    3410:	endbr64 
    3414:	push   0x3e
    3419:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    341f:	nop
    3420:	endbr64 
    3424:	push   0x3f
    3429:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    342f:	nop
    3430:	endbr64 
    3434:	push   0x40
    3439:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    343f:	nop
    3440:	endbr64 
    3444:	push   0x41
    3449:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    344f:	nop
    3450:	endbr64 
    3454:	push   0x42
    3459:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    345f:	nop
    3460:	endbr64 
    3464:	push   0x43
    3469:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    346f:	nop
    3470:	endbr64 
    3474:	push   0x44
    3479:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    347f:	nop
    3480:	endbr64 
    3484:	push   0x45
    3489:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    348f:	nop
    3490:	endbr64 
    3494:	push   0x46
    3499:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    349f:	nop
    34a0:	endbr64 
    34a4:	push   0x47
    34a9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    34af:	nop
    34b0:	endbr64 
    34b4:	push   0x48
    34b9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    34bf:	nop
    34c0:	endbr64 
    34c4:	push   0x49
    34c9:	bnd jmp 3020 <__cxa_finalize@plt-0x4b0>
    34cf:	nop

Disassembly of section .plt.got:

00000000000034d0 <__cxa_finalize@plt>:
    34d0:	endbr64 
    34d4:	bnd jmp QWORD PTR [rip+0x14b1d]        # 17ff8 <__ctype_b_loc@plt+0x14688>
    34db:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000034e0 <getenv@plt>:
    34e0:	endbr64 
    34e4:	bnd jmp QWORD PTR [rip+0x1489d]        # 17d88 <__ctype_b_loc@plt+0x14418>
    34eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000034f0 <sigprocmask@plt>:
    34f0:	endbr64 
    34f4:	bnd jmp QWORD PTR [rip+0x14895]        # 17d90 <__ctype_b_loc@plt+0x14420>
    34fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003500 <__snprintf_chk@plt>:
    3500:	endbr64 
    3504:	bnd jmp QWORD PTR [rip+0x1488d]        # 17d98 <__ctype_b_loc@plt+0x14428>
    350b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003510 <raise@plt>:
    3510:	endbr64 
    3514:	bnd jmp QWORD PTR [rip+0x14885]        # 17da0 <__ctype_b_loc@plt+0x14430>
    351b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003520 <free@plt>:
    3520:	endbr64 
    3524:	bnd jmp QWORD PTR [rip+0x1487d]        # 17da8 <__ctype_b_loc@plt+0x14438>
    352b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003530 <utimensat@plt>:
    3530:	endbr64 
    3534:	bnd jmp QWORD PTR [rip+0x14875]        # 17db0 <__ctype_b_loc@plt+0x14440>
    353b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003540 <localtime@plt>:
    3540:	endbr64 
    3544:	bnd jmp QWORD PTR [rip+0x1486d]        # 17db8 <__ctype_b_loc@plt+0x14448>
    354b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003550 <abort@plt>:
    3550:	endbr64 
    3554:	bnd jmp QWORD PTR [rip+0x14865]        # 17dc0 <__ctype_b_loc@plt+0x14450>
    355b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003560 <__errno_location@plt>:
    3560:	endbr64 
    3564:	bnd jmp QWORD PTR [rip+0x1485d]        # 17dc8 <__ctype_b_loc@plt+0x14458>
    356b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003570 <fdatasync@plt>:
    3570:	endbr64 
    3574:	bnd jmp QWORD PTR [rip+0x14855]        # 17dd0 <__ctype_b_loc@plt+0x14460>
    357b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003580 <unlink@plt>:
    3580:	endbr64 
    3584:	bnd jmp QWORD PTR [rip+0x1484d]        # 17dd8 <__ctype_b_loc@plt+0x14468>
    358b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003590 <_exit@plt>:
    3590:	endbr64 
    3594:	bnd jmp QWORD PTR [rip+0x14845]        # 17de0 <__ctype_b_loc@plt+0x14470>
    359b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035a0 <strcpy@plt>:
    35a0:	endbr64 
    35a4:	bnd jmp QWORD PTR [rip+0x1483d]        # 17de8 <__ctype_b_loc@plt+0x14478>
    35ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035b0 <unlinkat@plt>:
    35b0:	endbr64 
    35b4:	bnd jmp QWORD PTR [rip+0x14835]        # 17df0 <__ctype_b_loc@plt+0x14480>
    35bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035c0 <qsort@plt>:
    35c0:	endbr64 
    35c4:	bnd jmp QWORD PTR [rip+0x1482d]        # 17df8 <__ctype_b_loc@plt+0x14488>
    35cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035d0 <isatty@plt>:
    35d0:	endbr64 
    35d4:	bnd jmp QWORD PTR [rip+0x14825]        # 17e00 <__ctype_b_loc@plt+0x14490>
    35db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035e0 <sigaction@plt>:
    35e0:	endbr64 
    35e4:	bnd jmp QWORD PTR [rip+0x1481d]        # 17e08 <__ctype_b_loc@plt+0x14498>
    35eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000035f0 <fcntl@plt>:
    35f0:	endbr64 
    35f4:	bnd jmp QWORD PTR [rip+0x14815]        # 17e10 <__ctype_b_loc@plt+0x144a0>
    35fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003600 <clock_gettime@plt>:
    3600:	endbr64 
    3604:	bnd jmp QWORD PTR [rip+0x1480d]        # 17e18 <__ctype_b_loc@plt+0x144a8>
    360b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003610 <write@plt>:
    3610:	endbr64 
    3614:	bnd jmp QWORD PTR [rip+0x14805]        # 17e20 <__ctype_b_loc@plt+0x144b0>
    361b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003620 <fclose@plt>:
    3620:	endbr64 
    3624:	bnd jmp QWORD PTR [rip+0x147fd]        # 17e28 <__ctype_b_loc@plt+0x144b8>
    362b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003630 <opendir@plt>:
    3630:	endbr64 
    3634:	bnd jmp QWORD PTR [rip+0x147f5]        # 17e30 <__ctype_b_loc@plt+0x144c0>
    363b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003640 <stpcpy@plt>:
    3640:	endbr64 
    3644:	bnd jmp QWORD PTR [rip+0x147ed]        # 17e38 <__ctype_b_loc@plt+0x144c8>
    364b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003650 <strlen@plt>:
    3650:	endbr64 
    3654:	bnd jmp QWORD PTR [rip+0x147e5]        # 17e40 <__ctype_b_loc@plt+0x144d0>
    365b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003660 <__lxstat@plt>:
    3660:	endbr64 
    3664:	bnd jmp QWORD PTR [rip+0x147dd]        # 17e48 <__ctype_b_loc@plt+0x144d8>
    366b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003670 <openat@plt>:
    3670:	endbr64 
    3674:	bnd jmp QWORD PTR [rip+0x147d5]        # 17e50 <__ctype_b_loc@plt+0x144e0>
    367b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003680 <__stack_chk_fail@plt>:
    3680:	endbr64 
    3684:	bnd jmp QWORD PTR [rip+0x147cd]        # 17e58 <__ctype_b_loc@plt+0x144e8>
    368b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003690 <getopt_long@plt>:
    3690:	endbr64 
    3694:	bnd jmp QWORD PTR [rip+0x147c5]        # 17e60 <__ctype_b_loc@plt+0x144f0>
    369b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036a0 <strrchr@plt>:
    36a0:	endbr64 
    36a4:	bnd jmp QWORD PTR [rip+0x147bd]        # 17e68 <__ctype_b_loc@plt+0x144f8>
    36ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036b0 <lseek@plt>:
    36b0:	endbr64 
    36b4:	bnd jmp QWORD PTR [rip+0x147b5]        # 17e70 <__ctype_b_loc@plt+0x14500>
    36bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036c0 <memset@plt>:
    36c0:	endbr64 
    36c4:	bnd jmp QWORD PTR [rip+0x147ad]        # 17e78 <__ctype_b_loc@plt+0x14508>
    36cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036d0 <close@plt>:
    36d0:	endbr64 
    36d4:	bnd jmp QWORD PTR [rip+0x147a5]        # 17e80 <__ctype_b_loc@plt+0x14510>
    36db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036e0 <strspn@plt>:
    36e0:	endbr64 
    36e4:	bnd jmp QWORD PTR [rip+0x1479d]        # 17e88 <__ctype_b_loc@plt+0x14518>
    36eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036f0 <closedir@plt>:
    36f0:	endbr64 
    36f4:	bnd jmp QWORD PTR [rip+0x14795]        # 17e90 <__ctype_b_loc@plt+0x14520>
    36fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003700 <strcspn@plt>:
    3700:	endbr64 
    3704:	bnd jmp QWORD PTR [rip+0x1478d]        # 17e98 <__ctype_b_loc@plt+0x14528>
    370b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003710 <read@plt>:
    3710:	endbr64 
    3714:	bnd jmp QWORD PTR [rip+0x14785]        # 17ea0 <__ctype_b_loc@plt+0x14530>
    371b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003720 <memcmp@plt>:
    3720:	endbr64 
    3724:	bnd jmp QWORD PTR [rip+0x1477d]        # 17ea8 <__ctype_b_loc@plt+0x14538>
    372b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003730 <utimes@plt>:
    3730:	endbr64 
    3734:	bnd jmp QWORD PTR [rip+0x14775]        # 17eb0 <__ctype_b_loc@plt+0x14540>
    373b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003740 <calloc@plt>:
    3740:	endbr64 
    3744:	bnd jmp QWORD PTR [rip+0x1476d]        # 17eb8 <__ctype_b_loc@plt+0x14548>
    374b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003750 <strcmp@plt>:
    3750:	endbr64 
    3754:	bnd jmp QWORD PTR [rip+0x14765]        # 17ec0 <__ctype_b_loc@plt+0x14550>
    375b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003760 <putc@plt>:
    3760:	endbr64 
    3764:	bnd jmp QWORD PTR [rip+0x1475d]        # 17ec8 <__ctype_b_loc@plt+0x14558>
    376b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003770 <signal@plt>:
    3770:	endbr64 
    3774:	bnd jmp QWORD PTR [rip+0x14755]        # 17ed0 <__ctype_b_loc@plt+0x14560>
    377b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003780 <dirfd@plt>:
    3780:	endbr64 
    3784:	bnd jmp QWORD PTR [rip+0x1474d]        # 17ed8 <__ctype_b_loc@plt+0x14568>
    378b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003790 <__memcpy_chk@plt>:
    3790:	endbr64 
    3794:	bnd jmp QWORD PTR [rip+0x14745]        # 17ee0 <__ctype_b_loc@plt+0x14570>
    379b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037a0 <sigemptyset@plt>:
    37a0:	endbr64 
    37a4:	bnd jmp QWORD PTR [rip+0x1473d]        # 17ee8 <__ctype_b_loc@plt+0x14578>
    37ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037b0 <strtol@plt>:
    37b0:	endbr64 
    37b4:	bnd jmp QWORD PTR [rip+0x14735]        # 17ef0 <__ctype_b_loc@plt+0x14580>
    37bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037c0 <memcpy@plt>:
    37c0:	endbr64 
    37c4:	bnd jmp QWORD PTR [rip+0x1472d]        # 17ef8 <__ctype_b_loc@plt+0x14588>
    37cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037d0 <fileno@plt>:
    37d0:	endbr64 
    37d4:	bnd jmp QWORD PTR [rip+0x14725]        # 17f00 <__ctype_b_loc@plt+0x14590>
    37db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037e0 <__stpcpy_chk@plt>:
    37e0:	endbr64 
    37e4:	bnd jmp QWORD PTR [rip+0x1471d]        # 17f08 <__ctype_b_loc@plt+0x14598>
    37eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037f0 <__xstat@plt>:
    37f0:	endbr64 
    37f4:	bnd jmp QWORD PTR [rip+0x14715]        # 17f10 <__ctype_b_loc@plt+0x145a0>
    37fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003800 <readdir@plt>:
    3800:	endbr64 
    3804:	bnd jmp QWORD PTR [rip+0x1470d]        # 17f18 <__ctype_b_loc@plt+0x145a8>
    380b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003810 <malloc@plt>:
    3810:	endbr64 
    3814:	bnd jmp QWORD PTR [rip+0x14705]        # 17f20 <__ctype_b_loc@plt+0x145b0>
    381b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003820 <fflush@plt>:
    3820:	endbr64 
    3824:	bnd jmp QWORD PTR [rip+0x146fd]        # 17f28 <__ctype_b_loc@plt+0x145b8>
    382b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003830 <__fxstat@plt>:
    3830:	endbr64 
    3834:	bnd jmp QWORD PTR [rip+0x146f5]        # 17f30 <__ctype_b_loc@plt+0x145c0>
    383b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003840 <__freading@plt>:
    3840:	endbr64 
    3844:	bnd jmp QWORD PTR [rip+0x146ed]        # 17f38 <__ctype_b_loc@plt+0x145c8>
    384b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003850 <realloc@plt>:
    3850:	endbr64 
    3854:	bnd jmp QWORD PTR [rip+0x146e5]        # 17f40 <__ctype_b_loc@plt+0x145d0>
    385b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003860 <__strcpy_chk@plt>:
    3860:	endbr64 
    3864:	bnd jmp QWORD PTR [rip+0x146dd]        # 17f48 <__ctype_b_loc@plt+0x145d8>
    386b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003870 <fchmod@plt>:
    3870:	endbr64 
    3874:	bnd jmp QWORD PTR [rip+0x146d5]        # 17f50 <__ctype_b_loc@plt+0x145e0>
    387b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003880 <memmove@plt>:
    3880:	endbr64 
    3884:	bnd jmp QWORD PTR [rip+0x146cd]        # 17f58 <__ctype_b_loc@plt+0x145e8>
    388b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003890 <fsync@plt>:
    3890:	endbr64 
    3894:	bnd jmp QWORD PTR [rip+0x146c5]        # 17f60 <__ctype_b_loc@plt+0x145f0>
    389b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038a0 <open@plt>:
    38a0:	endbr64 
    38a4:	bnd jmp QWORD PTR [rip+0x146bd]        # 17f68 <__ctype_b_loc@plt+0x145f8>
    38ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038b0 <fseeko@plt>:
    38b0:	endbr64 
    38b4:	bnd jmp QWORD PTR [rip+0x146b5]        # 17f70 <__ctype_b_loc@plt+0x14600>
    38bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038c0 <fchown@plt>:
    38c0:	endbr64 
    38c4:	bnd jmp QWORD PTR [rip+0x146ad]        # 17f78 <__ctype_b_loc@plt+0x14608>
    38cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038d0 <perror@plt>:
    38d0:	endbr64 
    38d4:	bnd jmp QWORD PTR [rip+0x146a5]        # 17f80 <__ctype_b_loc@plt+0x14610>
    38db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038e0 <fdopendir@plt>:
    38e0:	endbr64 
    38e4:	bnd jmp QWORD PTR [rip+0x1469d]        # 17f88 <__ctype_b_loc@plt+0x14618>
    38eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038f0 <futimens@plt>:
    38f0:	endbr64 
    38f4:	bnd jmp QWORD PTR [rip+0x14695]        # 17f90 <__ctype_b_loc@plt+0x14620>
    38fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003900 <sigismember@plt>:
    3900:	endbr64 
    3904:	bnd jmp QWORD PTR [rip+0x1468d]        # 17f98 <__ctype_b_loc@plt+0x14628>
    390b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003910 <exit@plt>:
    3910:	endbr64 
    3914:	bnd jmp QWORD PTR [rip+0x14685]        # 17fa0 <__ctype_b_loc@plt+0x14630>
    391b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003920 <fwrite@plt>:
    3920:	endbr64 
    3924:	bnd jmp QWORD PTR [rip+0x1467d]        # 17fa8 <__ctype_b_loc@plt+0x14638>
    392b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003930 <getc@plt>:
    3930:	endbr64 
    3934:	bnd jmp QWORD PTR [rip+0x14675]        # 17fb0 <__ctype_b_loc@plt+0x14640>
    393b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003940 <sigaddset@plt>:
    3940:	endbr64 
    3944:	bnd jmp QWORD PTR [rip+0x1466d]        # 17fb8 <__ctype_b_loc@plt+0x14648>
    394b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003950 <futimesat@plt>:
    3950:	endbr64 
    3954:	bnd jmp QWORD PTR [rip+0x14665]        # 17fc0 <__ctype_b_loc@plt+0x14650>
    395b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003960 <__ctype_tolower_loc@plt>:
    3960:	endbr64 
    3964:	bnd jmp QWORD PTR [rip+0x1465d]        # 17fc8 <__ctype_b_loc@plt+0x14658>
    396b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003970 <__ctype_b_loc@plt>:
    3970:	endbr64 
    3974:	bnd jmp QWORD PTR [rip+0x14655]        # 17fd0 <__ctype_b_loc@plt+0x14660>
    397b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000003980 <.text>:
    3980:	call   3550 <abort@plt>
    3985:	call   3550 <abort@plt>
    398a:	nop    WORD PTR [rax+rax*1+0x0]
    3990:	endbr64 
    3994:	push   r15
    3996:	push   r14
    3998:	push   r13
    399a:	push   r12
    399c:	push   rbp
    399d:	mov    ebp,edi
    399f:	push   rbx
    39a0:	mov    rbx,rsi
    39a3:	sub    rsp,0xc8
    39aa:	mov    rdi,QWORD PTR [rsi]
    39ad:	mov    rax,QWORD PTR fs:0x28
    39b6:	mov    QWORD PTR [rsp+0xb8],rax
    39be:	xor    eax,eax
    39c0:	call   d160 <__ctype_b_loc@plt+0x97f0>
    39c5:	mov    rdi,rax
    39c8:	mov    QWORD PTR [rip+0x9e639],rax        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    39cf:	mov    r12,rax
    39d2:	call   3650 <strlen@plt>
    39d7:	cmp    rax,0x4
    39db:	jbe    39f9 <__ctype_b_loc@plt+0x89>
    39dd:	lea    r12,[r12+rax*1-0x4]
    39e2:	lea    rsi,[rip+0xf43e]        # 12e27 <__ctype_b_loc@plt+0xf4b7>
    39e9:	mov    rdi,r12
    39ec:	call   3750 <strcmp@plt>
    39f1:	test   eax,eax
    39f3:	je     3bf0 <__ctype_b_loc@plt+0x280>
    39f9:	lea    rsi,[rsp+0x18]
    39fe:	lea    rdi,[rsp+0x10]
    3a03:	mov    QWORD PTR [rsp+0x18],rbx
    3a08:	lea    rdx,[rip+0xf41d]        # 12e2c <__ctype_b_loc@plt+0xf4bc>
    3a0f:	lea    r13,[rip+0xf54a]        # 12f60 <__ctype_b_loc@plt+0xf5f0>
    3a16:	call   d1c0 <__ctype_b_loc@plt+0x9850>
    3a1b:	mov    QWORD PTR [rip+0x16fda],0x3        # 1aa00 <stderr@@GLIBC_2.2.5+0x9c0>
    3a26:	mov    r14,rax
    3a29:	test   rax,rax
    3a2c:	mov    QWORD PTR [rip+0x16fdd],rax        # 1aa10 <stderr@@GLIBC_2.2.5+0x9d0>
    3a33:	lea    rax,[rip+0xf30e]        # 12d48 <__ctype_b_loc@plt+0xf3d8>
    3a3a:	mov    QWORD PTR [rip+0x16fc7],rax        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    3a41:	cmovne r14,QWORD PTR [rsp+0x18]
    3a47:	mov    DWORD PTR [rsp+0x14],0xffffffff
    3a4f:	lea    r12,[rsp+0x14]
    3a54:	test   r14,r14
    3a57:	je     3b55 <__ctype_b_loc@plt+0x1e5>
    3a5d:	movsxd rax,DWORD PTR [rip+0x165b4]        # 1a018 <optind@@GLIBC_2.2.5>
    3a64:	mov    rax,QWORD PTR [r14+rax*8]
    3a68:	test   rax,rax
    3a6b:	je     3b98 <__ctype_b_loc@plt+0x228>
    3a71:	cmp    BYTE PTR [rax],0x2d
    3a74:	jne    3b98 <__ctype_b_loc@plt+0x228>
    3a7a:	cmp    BYTE PTR [rax+0x1],0x2d
    3a7e:	jne    3b98 <__ctype_b_loc@plt+0x228>
    3a84:	cmp    BYTE PTR [rax+0x2],0x0
    3a88:	jne    3b98 <__ctype_b_loc@plt+0x228>
    3a8e:	mov    r12d,0xb0
    3a94:	mov    rdx,QWORD PTR [rip+0x9e56d]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    3a9b:	mov    rdi,QWORD PTR [rip+0x1659e]        # 1a040 <stderr@@GLIBC_2.2.5>
    3aa2:	lea    rsi,[rip+0xfd33]        # 137dc <__ctype_b_loc@plt+0xfe6c>
    3aa9:	xor    eax,eax
    3aab:	call   f390 <__ctype_b_loc@plt+0xba20>
    3ab0:	movsxd rax,DWORD PTR [rsp+0x14]
    3ab5:	test   eax,eax
    3ab7:	js     40c4 <__ctype_b_loc@plt+0x754>
    3abd:	shl    rax,0x5
    3ac1:	lea    rdx,[rip+0x13d18]        # 177e0 <__ctype_b_loc@plt+0x13e70>
    3ac8:	mov    rdi,QWORD PTR [rip+0x16571]        # 1a040 <stderr@@GLIBC_2.2.5>
    3acf:	lea    rsi,[rip+0xf37f]        # 12e55 <__ctype_b_loc@plt+0xf4e5>
    3ad6:	mov    rdx,QWORD PTR [rdx+rax*1]
    3ada:	xor    eax,eax
    3adc:	call   f390 <__ctype_b_loc@plt+0xba20>
    3ae1:	mov    rdi,QWORD PTR [rip+0x16558]        # 1a040 <stderr@@GLIBC_2.2.5>
    3ae8:	lea    rsi,[rip+0xeb59]        # 12648 <__ctype_b_loc@plt+0xecd8>
    3aef:	xor    eax,eax
    3af1:	call   f390 <__ctype_b_loc@plt+0xba20>
    3af6:	jmp    3beb <__ctype_b_loc@plt+0x27b>
    3afb:	nop    DWORD PTR [rax+rax*1+0x0]
    3b00:	movsxd rax,DWORD PTR [rip+0x16511]        # 1a018 <optind@@GLIBC_2.2.5>
    3b07:	cmp    eax,DWORD PTR [rsp+0x10]
    3b0b:	jne    4161 <__ctype_b_loc@plt+0x7f1>
    3b11:	cmp    eax,0x1
    3b14:	je     3b3b <__ctype_b_loc@plt+0x1cb>
    3b16:	cmp    DWORD PTR [rip+0x1656f],0x0        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    3b1d:	jne    3b3b <__ctype_b_loc@plt+0x1cb>
    3b1f:	mov    rdx,QWORD PTR [rip+0x9e4e2]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    3b26:	mov    rdi,QWORD PTR [rip+0x16513]        # 1a040 <stderr@@GLIBC_2.2.5>
    3b2d:	lea    rsi,[rip+0xea4c]        # 12580 <__ctype_b_loc@plt+0xec10>
    3b34:	xor    eax,eax
    3b36:	call   f390 <__ctype_b_loc@plt+0xba20>
    3b3b:	mov    rdi,r14
    3b3e:	call   3520 <free@plt>
    3b43:	mov    DWORD PTR [rsp+0x14],0xffffffff
    3b4b:	mov    DWORD PTR [rip+0x164c3],0x1        # 1a018 <optind@@GLIBC_2.2.5>
    3b55:	mov    r8,r12
    3b58:	lea    rcx,[rip+0x13c81]        # 177e0 <__ctype_b_loc@plt+0x13e70>
    3b5f:	mov    rsi,rbx
    3b62:	mov    edi,ebp
    3b64:	lea    rdx,[rip+0xf795]        # 13300 <__ctype_b_loc@plt+0xf990>
    3b6b:	call   3690 <getopt_long@plt>
    3b70:	mov    r12d,eax
    3b73:	test   eax,eax
    3b75:	js     3e97 <__ctype_b_loc@plt+0x527>
    3b7b:	lea    eax,[r12-0x31]
    3b80:	xor    r14d,r14d
    3b83:	cmp    eax,0xd3
    3b88:	ja     3bd5 <__ctype_b_loc@plt+0x265>
    3b8a:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
    3b8f:	add    rax,r13
    3b92:	notrack jmp rax
    3b95:	nop    DWORD PTR [rax]
    3b98:	lea    r12,[rsp+0x14]
    3b9d:	mov    edi,DWORD PTR [rsp+0x10]
    3ba1:	mov    rsi,r14
    3ba4:	lea    rcx,[rip+0x13c35]        # 177e0 <__ctype_b_loc@plt+0x13e70>
    3bab:	mov    r8,r12
    3bae:	lea    rdx,[rip+0xf74b]        # 13300 <__ctype_b_loc@plt+0xf990>
    3bb5:	call   3690 <getopt_long@plt>
    3bba:	test   eax,eax
    3bbc:	js     3b00 <__ctype_b_loc@plt+0x190>
    3bc2:	lea    r12d,[rax+0x83]
    3bc9:	lea    eax,[r12-0x31]
    3bce:	cmp    eax,0xd3
    3bd3:	jbe    3b8a <__ctype_b_loc@plt+0x21a>
    3bd5:	cmp    r12d,0x82
    3bdc:	jle    3beb <__ctype_b_loc@plt+0x27b>
    3bde:	cmp    r12d,0xc2
    3be5:	jne    3a94 <__ctype_b_loc@plt+0x124>
    3beb:	call   6a40 <__ctype_b_loc@plt+0x30d0>
    3bf0:	mov    BYTE PTR [r12],0x0
    3bf5:	jmp    39f9 <__ctype_b_loc@plt+0x89>
    3bfa:	sub    r12d,0x83
    3c01:	sub    r12d,0x30
    3c05:	mov    DWORD PTR [rip+0x14410],r12d        # 1801c <__ctype_b_loc@plt+0x146ac>
    3c0c:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3c11:	add    DWORD PTR [rip+0x16478],0x1        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    3c18:	mov    DWORD PTR [rip+0x1646a],0x0        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    3c22:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3c27:	mov    DWORD PTR [rip+0x1644f],0x1        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    3c31:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3c36:	mov    DWORD PTR [rip+0x143e8],0x0        # 18028 <__ctype_b_loc@plt+0x146b8>
    3c40:	mov    DWORD PTR [rip+0x143e2],0x0        # 1802c <__ctype_b_loc@plt+0x146bc>
    3c4a:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3c4f:	mov    rsi,QWORD PTR [rip+0x9e3b2]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    3c56:	lea    rdi,[rip+0xe99b]        # 125f8 <__ctype_b_loc@plt+0xec88>
    3c5d:	xor    eax,eax
    3c5f:	lea    rbx,[rip+0x13a9a]        # 17700 <__ctype_b_loc@plt+0x13d90>
    3c66:	lea    rbp,[rip+0xfb6a]        # 137d7 <__ctype_b_loc@plt+0xfe67>
    3c6d:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    3c72:	lea    rsi,[rip+0xe887]        # 12500 <__ctype_b_loc@plt+0xeb90>
    3c79:	nop    DWORD PTR [rax+0x0]
    3c80:	add    rbx,0x8
    3c84:	mov    rdi,rbp
    3c87:	xor    eax,eax
    3c89:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    3c8e:	mov    rsi,QWORD PTR [rbx]
    3c91:	test   rsi,rsi
    3c94:	jne    3c80 <__ctype_b_loc@plt+0x310>
    3c96:	call   6a10 <__ctype_b_loc@plt+0x30a0>
    3c9b:	mov    DWORD PTR [rip+0x14383],0x1        # 18028 <__ctype_b_loc@plt+0x146b8>
    3ca5:	mov    DWORD PTR [rip+0x1437d],0x1        # 1802c <__ctype_b_loc@plt+0x146bc>
    3caf:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3cb4:	mov    DWORD PTR [rip+0x163ce],0x1        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    3cbe:	mov    DWORD PTR [rip+0x163c8],0x0        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    3cc8:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3ccd:	mov    BYTE PTR [rip+0x16d68],0x1        # 1aa3c <stderr@@GLIBC_2.2.5+0x9fc>
    3cd4:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3cd9:	mov    rdx,QWORD PTR [rip+0x16340]        # 1a020 <optarg@@GLIBC_2.2.5>
    3ce0:	xor    eax,eax
    3ce2:	or     rcx,0xffffffffffffffff
    3ce6:	mov    rdi,rdx
    3ce9:	repnz scas al,BYTE PTR es:[rdi]
    3ceb:	mov    QWORD PTR [rip+0x16d16],rdx        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    3cf2:	mov    rax,rcx
    3cf5:	not    rax
    3cf8:	sub    rax,0x1
    3cfc:	mov    QWORD PTR [rip+0x16cfd],rax        # 1aa00 <stderr@@GLIBC_2.2.5+0x9c0>
    3d03:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3d08:	mov    DWORD PTR [rip+0x16d26],0x1        # 1aa38 <stderr@@GLIBC_2.2.5+0x9f8>
    3d12:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3d17:	mov    rdi,QWORD PTR [rip+0x16302]        # 1a020 <optarg@@GLIBC_2.2.5>
    3d1e:	mov    edx,0xa
    3d23:	xor    esi,esi
    3d25:	call   37b0 <strtol@plt>
    3d2a:	mov    rdx,QWORD PTR [rip+0x162ef]        # 1a020 <optarg@@GLIBC_2.2.5>
    3d31:	mov    DWORD PTR [rip+0x142ed],eax        # 18024 <__ctype_b_loc@plt+0x146b4>
    3d37:	movzx  eax,BYTE PTR [rdx]
    3d3a:	test   al,al
    3d3c:	je     3a47 <__ctype_b_loc@plt+0xd7>
    3d42:	add    rdx,0x1
    3d46:	jmp    3d66 <__ctype_b_loc@plt+0x3f6>
    3d48:	nop    DWORD PTR [rax+rax*1+0x0]
    3d50:	mov    QWORD PTR [rip+0x162c9],rdx        # 1a020 <optarg@@GLIBC_2.2.5>
    3d57:	movzx  eax,BYTE PTR [rdx]
    3d5a:	add    rdx,0x1
    3d5e:	test   al,al
    3d60:	je     3a47 <__ctype_b_loc@plt+0xd7>
    3d66:	sub    eax,0x30
    3d69:	cmp    al,0x9
    3d6b:	jbe    3d50 <__ctype_b_loc@plt+0x3e0>
    3d6d:	mov    rdx,QWORD PTR [rip+0x9e294]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    3d74:	mov    rdi,QWORD PTR [rip+0x162c5]        # 1a040 <stderr@@GLIBC_2.2.5>
    3d7b:	lea    rsi,[rip+0xe84e]        # 125d0 <__ctype_b_loc@plt+0xec60>
    3d82:	xor    eax,eax
    3d84:	call   f390 <__ctype_b_loc@plt+0xba20>
    3d89:	call   6a40 <__ctype_b_loc@plt+0x30d0>
    3d8e:	mov    DWORD PTR [rip+0x162fc],0x1        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    3d98:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3d9d:	call   5380 <__ctype_b_loc@plt+0x1a10>
    3da2:	lea    rdi,[rip+0xf0ca]        # 12e73 <__ctype_b_loc@plt+0xf503>
    3da9:	xor    eax,eax
    3dab:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    3db0:	lea    rdi,[rip+0xf07a]        # 12e31 <__ctype_b_loc@plt+0xf4c1>
    3db7:	xor    eax,eax
    3db9:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    3dbe:	call   6a10 <__ctype_b_loc@plt+0x30a0>
    3dc3:	mov    rdx,QWORD PTR [rip+0x9e23e]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    3dca:	mov    rdi,QWORD PTR [rip+0x1626f]        # 1a040 <stderr@@GLIBC_2.2.5>
    3dd1:	lea    rsi,[rip+0xe848]        # 12620 <__ctype_b_loc@plt+0xecb0>
    3dd8:	xor    eax,eax
    3dda:	call   f390 <__ctype_b_loc@plt+0xba20>
    3ddf:	call   6a40 <__ctype_b_loc@plt+0x30d0>
    3de4:	mov    DWORD PTR [rip+0x16c3a],0x1        # 1aa28 <stderr@@GLIBC_2.2.5+0x9e8>
    3dee:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3df3:	mov    DWORD PTR [rip+0x16297],0x1        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    3dfd:	mov    DWORD PTR [rip+0x16c2d],0x1        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    3e07:	mov    DWORD PTR [rip+0x16277],0x1        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    3e11:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e16:	mov    DWORD PTR [rip+0x16c14],0x1        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    3e20:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e25:	add    DWORD PTR [rip+0x16c04],0x1        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    3e2c:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e31:	mov    DWORD PTR [rip+0x16bf1],0x1        # 1aa2c <stderr@@GLIBC_2.2.5+0x9ec>
    3e3b:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e40:	mov    DWORD PTR [rip+0x1624a],0x1        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    3e4a:	mov    DWORD PTR [rip+0x16be0],0x1        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    3e54:	mov    DWORD PTR [rip+0x16bc6],0x1        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    3e5e:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e63:	mov    DWORD PTR [rip+0x141bb],0x1        # 18028 <__ctype_b_loc@plt+0x146b8>
    3e6d:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e72:	call   5380 <__ctype_b_loc@plt+0x1a10>
    3e77:	jmp    3c96 <__ctype_b_loc@plt+0x326>
    3e7c:	mov    DWORD PTR [rip+0x141a2],0x0        # 18028 <__ctype_b_loc@plt+0x146b8>
    3e86:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e8b:	mov    BYTE PTR [rip+0x16bab],0x1        # 1aa3d <stderr@@GLIBC_2.2.5+0x9fd>
    3e92:	jmp    3a47 <__ctype_b_loc@plt+0xd7>
    3e97:	cmp    DWORD PTR [rip+0x1418a],0x0        # 18028 <__ctype_b_loc@plt+0x146b8>
    3e9e:	jns    3eac <__ctype_b_loc@plt+0x53c>
    3ea0:	mov    eax,DWORD PTR [rip+0x16b8e]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    3ea6:	mov    DWORD PTR [rip+0x1417c],eax        # 18028 <__ctype_b_loc@plt+0x146b8>
    3eac:	cmp    DWORD PTR [rip+0x14179],0x0        # 1802c <__ctype_b_loc@plt+0x146bc>
    3eb3:	jns    3ec1 <__ctype_b_loc@plt+0x551>
    3eb5:	mov    eax,DWORD PTR [rip+0x16b79]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    3ebb:	mov    DWORD PTR [rip+0x1416b],eax        # 1802c <__ctype_b_loc@plt+0x146bc>
    3ec1:	mov    eax,DWORD PTR [rip+0x16151]        # 1a018 <optind@@GLIBC_2.2.5>
    3ec7:	cmp    DWORD PTR [rip+0x16b6a],0x0        # 1aa38 <stderr@@GLIBC_2.2.5+0x9f8>
    3ece:	mov    DWORD PTR [rsp+0xc],eax
    3ed2:	je     40a0 <__ctype_b_loc@plt+0x730>
    3ed8:	cmp    DWORD PTR [rip+0x161ad],0x0        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    3edf:	je     4084 <__ctype_b_loc@plt+0x714>
    3ee5:	mov    rax,QWORD PTR [rip+0x16b14]        # 1aa00 <stderr@@GLIBC_2.2.5+0x9c0>
    3eec:	sub    rax,0x1
    3ef0:	cmp    rax,0x1d
    3ef4:	ja     40e6 <__ctype_b_loc@plt+0x776>
    3efa:	mov    eax,0xd
    3eff:	lea    rdi,[rip+0x16a7a]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    3f06:	mov    DWORD PTR [rip+0x16a54],eax        # 1a960 <stderr@@GLIBC_2.2.5+0x920>
    3f0c:	lea    r14,[rip+0xf41d]        # 13330 <__ctype_b_loc@plt+0xf9c0>
    3f13:	call   37a0 <sigemptyset@plt>
    3f18:	lea    r12,[rsp+0x20]
    3f1d:	lea    r15,[rip+0x16a5c]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    3f24:	mov    r13d,DWORD PTR [r14]
    3f27:	xor    esi,esi
    3f29:	mov    rdx,r12
    3f2c:	mov    edi,r13d
    3f2f:	call   35e0 <sigaction@plt>
    3f34:	cmp    QWORD PTR [rsp+0x20],0x1
    3f3a:	je     3f47 <__ctype_b_loc@plt+0x5d7>
    3f3c:	mov    esi,r13d
    3f3f:	mov    rdi,r15
    3f42:	call   3940 <sigaddset@plt>
    3f47:	add    r14,0x4
    3f4b:	lea    rax,[rip+0xf3f6]        # 13348 <__ctype_b_loc@plt+0xf9d8>
    3f52:	cmp    rax,r14
    3f55:	jne    3f24 <__ctype_b_loc@plt+0x5b4>
    3f57:	lea    rdi,[rsp+0x28]
    3f5c:	mov    ecx,0x20
    3f61:	xor    r15d,r15d
    3f64:	mov    DWORD PTR [rsp+0xa8],0x0
    3f6f:	lea    rsi,[rip+0x16a0a]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    3f76:	lea    rax,[rip+0x1533]        # 54b0 <__ctype_b_loc@plt+0x1b40>
    3f7d:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3f7f:	mov    QWORD PTR [rsp+0x20],rax
    3f84:	lea    r14,[rip+0x169f5]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    3f8b:	lea    rax,[rip+0xf39e]        # 13330 <__ctype_b_loc@plt+0xf9c0>
    3f92:	mov    rdi,r14
    3f95:	mov    r13d,DWORD PTR [rax+r15*4]
    3f99:	mov    esi,r13d
    3f9c:	call   3900 <sigismember@plt>
    3fa1:	test   eax,eax
    3fa3:	je     3fc1 <__ctype_b_loc@plt+0x651>
    3fa5:	test   r15,r15
    3fa8:	jne    3fb4 <__ctype_b_loc@plt+0x644>
    3faa:	mov    DWORD PTR [rip+0x16a6c],0x1        # 1aa20 <stderr@@GLIBC_2.2.5+0x9e0>
    3fb4:	xor    edx,edx
    3fb6:	mov    rsi,r12
    3fb9:	mov    edi,r13d
    3fbc:	call   35e0 <sigaction@plt>
    3fc1:	add    r15,0x1
    3fc5:	cmp    r15,0x6
    3fc9:	jne    3f8b <__ctype_b_loc@plt+0x61b>
    3fcb:	mov    r12d,ebp
    3fce:	sub    r12d,DWORD PTR [rsp+0xc]
    3fd3:	jne    3fec <__ctype_b_loc@plt+0x67c>
    3fd5:	jmp    4157 <__ctype_b_loc@plt+0x7e7>
    3fda:	mov    rdi,QWORD PTR [rbx+rax*8]
    3fde:	lea    edx,[rax+0x1]
    3fe1:	mov    DWORD PTR [rip+0x16031],edx        # 1a018 <optind@@GLIBC_2.2.5>
    3fe7:	call   82d0 <__ctype_b_loc@plt+0x4960>
    3fec:	movsxd rax,DWORD PTR [rip+0x16025]        # 1a018 <optind@@GLIBC_2.2.5>
    3ff3:	cmp    eax,ebp
    3ff5:	jl     3fda <__ctype_b_loc@plt+0x66a>
    3ff7:	cmp    BYTE PTR [rip+0x16552],0x0        # 1a550 <stderr@@GLIBC_2.2.5+0x510>
    3ffe:	jne    4130 <__ctype_b_loc@plt+0x7c0>
    4004:	cmp    DWORD PTR [rip+0x16a19],0x0        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    400b:	je     4037 <__ctype_b_loc@plt+0x6c7>
    400d:	cmp    DWORD PTR [rip+0x16078],0x0        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    4014:	jne    4027 <__ctype_b_loc@plt+0x6b7>
    4016:	sub    r12d,0x1
    401a:	jle    4027 <__ctype_b_loc@plt+0x6b7>
    401c:	or     esi,0xffffffff
    401f:	or     edi,0xffffffff
    4022:	call   6590 <__ctype_b_loc@plt+0x2c20>
    4027:	mov    rdi,QWORD PTR [rip+0x15fd2]        # 1a000 <stdout@@GLIBC_2.2.5>
    402e:	call   f340 <__ctype_b_loc@plt+0xb9d0>
    4033:	test   eax,eax
    4035:	jne    407f <__ctype_b_loc@plt+0x70f>
    4037:	cmp    DWORD PTR [rip+0x16056],0x0        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    403e:	je     4125 <__ctype_b_loc@plt+0x7b5>
    4044:	cmp    BYTE PTR [rip+0x169f1],0x0        # 1aa3c <stderr@@GLIBC_2.2.5+0x9fc>
    404b:	je     4113 <__ctype_b_loc@plt+0x7a3>
    4051:	mov    edi,0x1
    4056:	call   3570 <fdatasync@plt>
    405b:	test   eax,eax
    405d:	je     4113 <__ctype_b_loc@plt+0x7a3>
    4063:	call   3560 <__errno_location@plt>
    4068:	cmp    DWORD PTR [rax],0x16
    406b:	je     4113 <__ctype_b_loc@plt+0x7a3>
    4071:	call   3560 <__errno_location@plt>
    4076:	cmp    DWORD PTR [rax],0x9
    4079:	je     4125 <__ctype_b_loc@plt+0x7b5>
    407f:	call   d470 <__ctype_b_loc@plt+0x9b00>
    4084:	mov    rdx,QWORD PTR [rip+0x9df7d]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    408b:	mov    rdi,QWORD PTR [rip+0x15fae]        # 1a040 <stderr@@GLIBC_2.2.5>
    4092:	lea    rsi,[rip+0xe5df]        # 12678 <__ctype_b_loc@plt+0xed08>
    4099:	xor    eax,eax
    409b:	call   f390 <__ctype_b_loc@plt+0xba20>
    40a0:	mov    rax,QWORD PTR [rip+0x16959]        # 1aa00 <stderr@@GLIBC_2.2.5+0x9c0>
    40a7:	sub    rax,0x1
    40ab:	cmp    rax,0x1d
    40af:	ja     40e6 <__ctype_b_loc@plt+0x776>
    40b1:	mov    eax,DWORD PTR [rip+0x15fd5]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    40b7:	test   eax,eax
    40b9:	je     3eff <__ctype_b_loc@plt+0x58f>
    40bf:	jmp    3efa <__ctype_b_loc@plt+0x58a>
    40c4:	mov    rdi,QWORD PTR [rip+0x15f75]        # 1a040 <stderr@@GLIBC_2.2.5>
    40cb:	lea    edx,[r12-0x83]
    40d3:	lea    rsi,[rip+0xed75]        # 12e4f <__ctype_b_loc@plt+0xf4df>
    40da:	xor    eax,eax
    40dc:	call   f390 <__ctype_b_loc@plt+0xba20>
    40e1:	jmp    3ae1 <__ctype_b_loc@plt+0x171>
    40e6:	mov    rdi,QWORD PTR [rip+0x15f53]        # 1a040 <stderr@@GLIBC_2.2.5>
    40ed:	mov    rcx,QWORD PTR [rip+0x16914]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    40f4:	lea    rsi,[rip+0xed61]        # 12e5c <__ctype_b_loc@plt+0xf4ec>
    40fb:	xor    eax,eax
    40fd:	mov    rdx,QWORD PTR [rip+0x9df04]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    4104:	call   f390 <__ctype_b_loc@plt+0xba20>
    4109:	mov    edi,0x1
    410e:	call   69d0 <__ctype_b_loc@plt+0x3060>
    4113:	mov    edi,0x1
    4118:	call   36d0 <close@plt>
    411d:	test   eax,eax
    411f:	jne    4071 <__ctype_b_loc@plt+0x701>
    4125:	mov    edi,DWORD PTR [rip+0x15f59]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    412b:	call   69d0 <__ctype_b_loc@plt+0x3060>
    4130:	xor    edi,edi
    4132:	call   36d0 <close@plt>
    4137:	test   eax,eax
    4139:	je     4004 <__ctype_b_loc@plt+0x694>
    413f:	mov    DWORD PTR [rip+0x19eb7],0x69647473        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    4149:	mov    WORD PTR [rip+0x19eb2],0x6e        # 1e004 <stderr@@GLIBC_2.2.5+0x3fc4>
    4152:	call   d400 <__ctype_b_loc@plt+0x9a90>
    4157:	call   6b50 <__ctype_b_loc@plt+0x31e0>
    415c:	jmp    3ff7 <__ctype_b_loc@plt+0x687>
    4161:	mov    rcx,QWORD PTR [r14+rax*8]
    4165:	mov    rdx,QWORD PTR [rip+0x9de9c]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    416c:	lea    rsi,[rip+0xe3d5]        # 12548 <__ctype_b_loc@plt+0xebd8>
    4173:	xor    eax,eax
    4175:	mov    rdi,QWORD PTR [rip+0x15ec4]        # 1a040 <stderr@@GLIBC_2.2.5>
    417c:	call   f390 <__ctype_b_loc@plt+0xba20>
    4181:	call   6a40 <__ctype_b_loc@plt+0x30d0>
    4186:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4190:	endbr64 
    4194:	xor    ebp,ebp
    4196:	mov    r9,rdx
    4199:	pop    rsi
    419a:	mov    rdx,rsp
    419d:	and    rsp,0xfffffffffffffff0
    41a1:	push   rax
    41a2:	push   rsp
    41a3:	lea    r8,[rip+0xd856]        # 11a00 <__ctype_b_loc@plt+0xe090>
    41aa:	lea    rcx,[rip+0xd7df]        # 11990 <__ctype_b_loc@plt+0xe020>
    41b1:	lea    rdi,[rip+0xfffffffffffff7d8]        # 3990 <__ctype_b_loc@plt+0x20>
    41b8:	call   QWORD PTR [rip+0x13e22]        # 17fe0 <__ctype_b_loc@plt+0x14670>
    41be:	hlt    
    41bf:	nop
    41c0:	lea    rdi,[rip+0x14239]        # 18400 <__ctype_b_loc@plt+0x14a90>
    41c7:	lea    rax,[rip+0x14232]        # 18400 <__ctype_b_loc@plt+0x14a90>
    41ce:	cmp    rax,rdi
    41d1:	je     41e8 <__ctype_b_loc@plt+0x878>
    41d3:	mov    rax,QWORD PTR [rip+0x13dfe]        # 17fd8 <__ctype_b_loc@plt+0x14668>
    41da:	test   rax,rax
    41dd:	je     41e8 <__ctype_b_loc@plt+0x878>
    41df:	jmp    rax
    41e1:	nop    DWORD PTR [rax+0x0]
    41e8:	ret    
    41e9:	nop    DWORD PTR [rax+0x0]
    41f0:	lea    rdi,[rip+0x14209]        # 18400 <__ctype_b_loc@plt+0x14a90>
    41f7:	lea    rsi,[rip+0x14202]        # 18400 <__ctype_b_loc@plt+0x14a90>
    41fe:	sub    rsi,rdi
    4201:	mov    rax,rsi
    4204:	shr    rsi,0x3f
    4208:	sar    rax,0x3
    420c:	add    rsi,rax
    420f:	sar    rsi,1
    4212:	je     4228 <__ctype_b_loc@plt+0x8b8>
    4214:	mov    rax,QWORD PTR [rip+0x13dd5]        # 17ff0 <__ctype_b_loc@plt+0x14680>
    421b:	test   rax,rax
    421e:	je     4228 <__ctype_b_loc@plt+0x8b8>
    4220:	jmp    rax
    4222:	nop    WORD PTR [rax+rax*1+0x0]
    4228:	ret    
    4229:	nop    DWORD PTR [rax+0x0]
    4230:	endbr64 
    4234:	cmp    BYTE PTR [rip+0x15e0d],0x0        # 1a048 <stderr@@GLIBC_2.2.5+0x8>
    423b:	jne    4268 <__ctype_b_loc@plt+0x8f8>
    423d:	push   rbp
    423e:	cmp    QWORD PTR [rip+0x13db2],0x0        # 17ff8 <__ctype_b_loc@plt+0x14688>
    4246:	mov    rbp,rsp
    4249:	je     4257 <__ctype_b_loc@plt+0x8e7>
    424b:	mov    rdi,QWORD PTR [rip+0x13db6]        # 18008 <__ctype_b_loc@plt+0x14698>
    4252:	call   34d0 <__cxa_finalize@plt>
    4257:	call   41c0 <__ctype_b_loc@plt+0x850>
    425c:	mov    BYTE PTR [rip+0x15de5],0x1        # 1a048 <stderr@@GLIBC_2.2.5+0x8>
    4263:	pop    rbp
    4264:	ret    
    4265:	nop    DWORD PTR [rax]
    4268:	ret    
    4269:	nop    DWORD PTR [rax+0x0]
    4270:	endbr64 
    4274:	jmp    41f0 <__ctype_b_loc@plt+0x880>
    4279:	nop    DWORD PTR [rax+0x0]
    4280:	endbr64 
    4284:	mov    DWORD PTR [rip+0x19c66],0x0        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    428e:	xor    eax,eax
    4290:	mov    WORD PTR [rip+0x19c59],ax        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    4297:	cmp    edi,0xffffffff
    429a:	je     42aa <__ctype_b_loc@plt+0x93a>
    429c:	lea    rax,[rip+0x9c5d]        # df00 <__ctype_b_loc@plt+0xa590>
    42a3:	mov    QWORD PTR [rip+0x19c3e],rax        # 1dee8 <stderr@@GLIBC_2.2.5+0x3ea8>
    42aa:	ret    
    42ab:	nop    DWORD PTR [rax+rax*1+0x0]
    42b0:	endbr64 
    42b4:	mov    edx,DWORD PTR [rip+0x19c3a]        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    42ba:	mov    eax,edi
    42bc:	push   r12
    42be:	push   rbp
    42bf:	mov    ebp,esi
    42c1:	mov    ecx,edx
    42c3:	push   rbx
    42c4:	shl    eax,cl
    42c6:	mov    ecx,0x10
    42cb:	or     ax,WORD PTR [rip+0x19c1e]        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    42d2:	sub    ecx,esi
    42d4:	cmp    ecx,edx
    42d6:	jge    4380 <__ctype_b_loc@plt+0xa10>
    42dc:	mov    ecx,DWORD PTR [rip+0x9dd3e]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    42e2:	mov    WORD PTR [rip+0x19c07],ax        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    42e9:	mov    ebx,edi
    42eb:	lea    esi,[rcx+0x1]
    42ee:	cmp    ecx,0x3fffd
    42f4:	ja     4340 <__ctype_b_loc@plt+0x9d0>
    42f6:	lea    rdi,[rip+0x4bd03]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    42fd:	mov    r8d,ecx
    4300:	add    ecx,0x2
    4303:	mov    BYTE PTR [rdi+r8*1],al
    4307:	shr    ax,0x8
    430b:	mov    DWORD PTR [rip+0x9dd0f],ecx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4311:	mov    BYTE PTR [rdi+rsi*1],al
    4314:	mov    ecx,0x10
    4319:	movzx  ebx,bx
    431c:	lea    eax,[rdx+rbp*1-0x10]
    4320:	sub    ecx,edx
    4322:	mov    DWORD PTR [rip+0x19bcc],eax        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    4328:	sar    ebx,cl
    432a:	mov    WORD PTR [rip+0x19bbf],bx        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    4331:	pop    rbx
    4332:	pop    rbp
    4333:	pop    r12
    4335:	ret    
    4336:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4340:	lea    r12,[rip+0x4bcb9]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    4347:	mov    DWORD PTR [rip+0x9dcd3],esi        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    434d:	mov    edi,eax
    434f:	mov    BYTE PTR [r12+rcx*1],al
    4353:	cmp    esi,0x40000
    4359:	je     43a0 <__ctype_b_loc@plt+0xa30>
    435b:	lea    eax,[rsi+0x1]
    435e:	shr    di,0x8
    4362:	mov    DWORD PTR [rip+0x9dcb8],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4368:	mov    BYTE PTR [r12+rsi*1],dil
    436c:	cmp    eax,0x40000
    4371:	je     4398 <__ctype_b_loc@plt+0xa28>
    4373:	mov    edx,DWORD PTR [rip+0x19b7b]        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    4379:	jmp    4314 <__ctype_b_loc@plt+0x9a4>
    437b:	nop    DWORD PTR [rax+rax*1+0x0]
    4380:	add    edx,esi
    4382:	pop    rbx
    4383:	pop    rbp
    4384:	mov    WORD PTR [rip+0x19b65],ax        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    438b:	mov    DWORD PTR [rip+0x19b63],edx        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    4391:	pop    r12
    4393:	ret    
    4394:	nop    DWORD PTR [rax+0x0]
    4398:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    439d:	jmp    4373 <__ctype_b_loc@plt+0xa03>
    439f:	nop
    43a0:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    43a5:	movzx  edi,WORD PTR [rip+0x19b44]        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    43ac:	mov    esi,DWORD PTR [rip+0x9dc6e]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    43b2:	jmp    435b <__ctype_b_loc@plt+0x9eb>
    43b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    43bf:	nop
    43c0:	endbr64 
    43c4:	xor    edx,edx
    43c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    43d0:	mov    eax,edi
    43d2:	sub    esi,0x1
    43d5:	shr    edi,1
    43d7:	and    eax,0x1
    43da:	or     eax,edx
    43dc:	lea    edx,[rax+rax*1]
    43df:	test   esi,esi
    43e1:	jg     43d0 <__ctype_b_loc@plt+0xa60>
    43e3:	and    eax,0x7fffffff
    43e8:	ret    
    43e9:	nop    DWORD PTR [rax+0x0]
    43f0:	endbr64 
    43f4:	mov    eax,DWORD PTR [rip+0x19afa]        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    43fa:	push   rbx
    43fb:	cmp    eax,0x8
    43fe:	jle    4450 <__ctype_b_loc@plt+0xae0>
    4400:	mov    eax,DWORD PTR [rip+0x9dc1a]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4406:	movzx  ecx,WORD PTR [rip+0x19ae3]        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    440d:	lea    edx,[rax+0x1]
    4410:	cmp    eax,0x3fffd
    4415:	ja     4488 <__ctype_b_loc@plt+0xb18>
    4417:	lea    rsi,[rip+0x4bbe2]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    441e:	mov    edi,eax
    4420:	add    eax,0x2
    4423:	mov    BYTE PTR [rsi+rdi*1],cl
    4426:	shr    cx,0x8
    442a:	mov    DWORD PTR [rip+0x9dbf0],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4430:	mov    BYTE PTR [rsi+rdx*1],cl
    4433:	mov    DWORD PTR [rip+0x19ab7],0x0        # 1def4 <stderr@@GLIBC_2.2.5+0x3eb4>
    443d:	xor    eax,eax
    443f:	pop    rbx
    4440:	mov    WORD PTR [rip+0x19aa9],ax        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    4447:	ret    
    4448:	nop    DWORD PTR [rax+rax*1+0x0]
    4450:	test   eax,eax
    4452:	jle    4433 <__ctype_b_loc@plt+0xac3>
    4454:	mov    eax,DWORD PTR [rip+0x9dbc6]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    445a:	movzx  esi,WORD PTR [rip+0x19a8f]        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    4461:	lea    rcx,[rip+0x4bb98]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    4468:	lea    edx,[rax+0x1]
    446b:	mov    BYTE PTR [rcx+rax*1],sil
    446f:	mov    DWORD PTR [rip+0x9dbab],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4475:	cmp    edx,0x40000
    447b:	jne    4433 <__ctype_b_loc@plt+0xac3>
    447d:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    4482:	jmp    4433 <__ctype_b_loc@plt+0xac3>
    4484:	nop    DWORD PTR [rax+0x0]
    4488:	lea    rbx,[rip+0x4bb71]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    448f:	mov    DWORD PTR [rip+0x9db8b],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4495:	mov    BYTE PTR [rbx+rax*1],cl
    4498:	cmp    edx,0x40000
    449e:	je     44c0 <__ctype_b_loc@plt+0xb50>
    44a0:	lea    eax,[rdx+0x1]
    44a3:	shr    cx,0x8
    44a7:	mov    DWORD PTR [rip+0x9db73],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    44ad:	mov    BYTE PTR [rbx+rdx*1],cl
    44b0:	cmp    eax,0x40000
    44b5:	jne    4433 <__ctype_b_loc@plt+0xac3>
    44bb:	jmp    447d <__ctype_b_loc@plt+0xb0d>
    44bd:	nop    DWORD PTR [rax]
    44c0:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    44c5:	movzx  ecx,WORD PTR [rip+0x19a24]        # 1def0 <stderr@@GLIBC_2.2.5+0x3eb0>
    44cc:	mov    edx,DWORD PTR [rip+0x9db4e]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    44d2:	jmp    44a0 <__ctype_b_loc@plt+0xb30>
    44d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    44df:	nop
    44e0:	endbr64 
    44e4:	push   r13
    44e6:	mov    r13d,esi
    44e9:	push   r12
    44eb:	push   rbp
    44ec:	mov    ebp,edx
    44ee:	push   rbx
    44ef:	mov    rbx,rdi
    44f2:	sub    rsp,0x18
    44f6:	call   43f0 <__ctype_b_loc@plt+0xa80>
    44fb:	test   ebp,ebp
    44fd:	je     4561 <__ctype_b_loc@plt+0xbf1>
    44ff:	mov    eax,DWORD PTR [rip+0x9db1b]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4505:	mov    r12d,r13d
    4508:	shr    r12w,0x8
    450d:	lea    edx,[rax+0x1]
    4510:	cmp    eax,0x3fffd
    4515:	ja     45c0 <__ctype_b_loc@plt+0xc50>
    451b:	lea    rbp,[rip+0x4bade]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    4522:	mov    ecx,eax
    4524:	add    eax,0x2
    4527:	mov    BYTE PTR [rbp+rcx*1+0x0],r13b
    452c:	mov    BYTE PTR [rbp+rdx*1+0x0],r12b
    4531:	mov    ecx,r13d
    4534:	mov    esi,r13d
    4537:	lea    edx,[rax+0x1]
    453a:	not    ecx
    453c:	not    esi
    453e:	shr    cx,0x8
    4542:	cmp    eax,0x3fffd
    4547:	ja     4608 <__ctype_b_loc@plt+0xc98>
    454d:	mov    edi,eax
    454f:	add    eax,0x2
    4552:	mov    BYTE PTR [rbp+rdi*1+0x0],sil
    4557:	mov    DWORD PTR [rip+0x9dac3],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    455d:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    4561:	lea    eax,[r13-0x1]
    4565:	lea    rbp,[rip+0x4ba94]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    456c:	lea    r12,[rbx+rax*1+0x1]
    4571:	test   r13d,r13d
    4574:	jne    4585 <__ctype_b_loc@plt+0xc15>
    4576:	jmp    45b1 <__ctype_b_loc@plt+0xc41>
    4578:	nop    DWORD PTR [rax+rax*1+0x0]
    4580:	cmp    rbx,r12
    4583:	je     45b1 <__ctype_b_loc@plt+0xc41>
    4585:	mov    eax,DWORD PTR [rip+0x9da95]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    458b:	movzx  ecx,BYTE PTR [rbx]
    458e:	add    rbx,0x1
    4592:	lea    edx,[rax+0x1]
    4595:	mov    BYTE PTR [rbp+rax*1+0x0],cl
    4599:	mov    DWORD PTR [rip+0x9da81],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    459f:	cmp    edx,0x40000
    45a5:	jne    4580 <__ctype_b_loc@plt+0xc10>
    45a7:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    45ac:	cmp    rbx,r12
    45af:	jne    4585 <__ctype_b_loc@plt+0xc15>
    45b1:	add    rsp,0x18
    45b5:	pop    rbx
    45b6:	pop    rbp
    45b7:	pop    r12
    45b9:	pop    r13
    45bb:	ret    
    45bc:	nop    DWORD PTR [rax+0x0]
    45c0:	lea    rbp,[rip+0x4ba39]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    45c7:	mov    DWORD PTR [rip+0x9da53],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    45cd:	mov    BYTE PTR [rbp+rax*1+0x0],r13b
    45d2:	cmp    edx,0x40000
    45d8:	je     4652 <__ctype_b_loc@plt+0xce2>
    45da:	lea    eax,[rdx+0x1]
    45dd:	mov    BYTE PTR [rbp+rdx*1+0x0],r12b
    45e2:	mov    DWORD PTR [rip+0x9da38],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    45e8:	cmp    eax,0x40000
    45ed:	jne    4531 <__ctype_b_loc@plt+0xbc1>
    45f3:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    45f8:	mov    eax,DWORD PTR [rip+0x9da22]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    45fe:	jmp    4531 <__ctype_b_loc@plt+0xbc1>
    4603:	nop    DWORD PTR [rax+rax*1+0x0]
    4608:	mov    DWORD PTR [rip+0x9da12],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    460e:	mov    BYTE PTR [rbp+rax*1+0x0],sil
    4613:	cmp    edx,0x40000
    4619:	je     463d <__ctype_b_loc@plt+0xccd>
    461b:	lea    eax,[rdx+0x1]
    461e:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    4622:	mov    DWORD PTR [rip+0x9d9f8],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    4628:	cmp    eax,0x40000
    462d:	jne    4561 <__ctype_b_loc@plt+0xbf1>
    4633:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    4638:	jmp    4561 <__ctype_b_loc@plt+0xbf1>
    463d:	mov    DWORD PTR [rsp+0xc],ecx
    4641:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    4646:	mov    edx,DWORD PTR [rip+0x9d9d4]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    464c:	mov    ecx,DWORD PTR [rsp+0xc]
    4650:	jmp    461b <__ctype_b_loc@plt+0xcab>
    4652:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    4657:	mov    edx,DWORD PTR [rip+0x9d9c3]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    465d:	jmp    45da <__ctype_b_loc@plt+0xc6a>
    4662:	nop    WORD PTR cs:[rax+rax*1+0x0]
    466c:	nop    DWORD PTR [rax+0x0]
    4670:	mov    eax,DWORD PTR [rip+0x19882]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4676:	mov    edx,0x7efa
    467b:	mov    r9d,DWORD PTR [rip+0x1988e]        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    4682:	lea    r10,[rip+0x8d977]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4689:	push   r15
    468b:	mov    ecx,DWORD PTR [rip+0x1987b]        # 1df0c <stderr@@GLIBC_2.2.5+0x3ecc>
    4691:	cmp    eax,0x7efa
    4696:	mov    rsi,rax
    4699:	push   r14
    469b:	lea    r8,[r10+rax*1+0x101]
    46a3:	cmovb  esi,edx
    46a6:	push   r13
    46a8:	movsxd rdx,r9d
    46ab:	push   r12
    46ad:	lea    r12,[r10+rax*1]
    46b1:	sub    esi,0x7efa
    46b7:	cmp    r9d,DWORD PTR [rip+0x1984a]        # 1df08 <stderr@@GLIBC_2.2.5+0x3ec8>
    46be:	push   rbp
    46bf:	push   rbx
    46c0:	movzx  ebp,WORD PTR [r12]
    46c5:	movzx  r11d,WORD PTR [r12+rdx*1-0x1]
    46cb:	jb     46d0 <__ctype_b_loc@plt+0xd60>
    46cd:	shr    ecx,0x2
    46d0:	mov    eax,DWORD PTR [rip+0x1597a]        # 1a050 <stderr@@GLIBC_2.2.5+0x10>
    46d6:	mov    r15d,DWORD PTR [rip+0x19837]        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    46dd:	xor    r14d,r14d
    46e0:	lea    rbx,[rip+0x19d39]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    46e7:	mov    DWORD PTR [rsp-0x4],eax
    46eb:	jmp    470e <__ctype_b_loc@plt+0xd9e>
    46ed:	nop    DWORD PTR [rax]
    46f0:	and    edi,0x7fff
    46f6:	movzx  edi,WORD PTR [rbx+rdi*2]
    46fa:	cmp    esi,edi
    46fc:	jae    47d0 <__ctype_b_loc@plt+0xe60>
    4702:	sub    ecx,0x1
    4705:	je     47d0 <__ctype_b_loc@plt+0xe60>
    470b:	movsxd rdx,r9d
    470e:	mov    eax,edi
    4710:	add    rax,r10
    4713:	cmp    WORD PTR [rax+rdx*1-0x1],r11w
    4719:	jne    46f0 <__ctype_b_loc@plt+0xd80>
    471b:	cmp    WORD PTR [rax],bp
    471e:	jne    46f0 <__ctype_b_loc@plt+0xd80>
    4720:	lea    rdx,[r12+0x1]
    4725:	add    rax,0x1
    4729:	jmp    4767 <__ctype_b_loc@plt+0xdf7>
    472b:	nop    DWORD PTR [rax+rax*1+0x0]
    4730:	movzx  r13d,WORD PTR [rax+0x4]
    4735:	cmp    WORD PTR [rdx+0x4],r13w
    473a:	jne    47f0 <__ctype_b_loc@plt+0xe80>
    4740:	movzx  r13d,WORD PTR [rax+0x6]
    4745:	cmp    WORD PTR [rdx+0x6],r13w
    474a:	jne    4800 <__ctype_b_loc@plt+0xe90>
    4750:	add    rdx,0x8
    4754:	add    rax,0x8
    4758:	movzx  r13d,WORD PTR [rax]
    475c:	cmp    WORD PTR [rdx],r13w
    4760:	jne    477b <__ctype_b_loc@plt+0xe0b>
    4762:	cmp    r8,rdx
    4765:	jbe    477b <__ctype_b_loc@plt+0xe0b>
    4767:	movzx  r13d,WORD PTR [rax+0x2]
    476c:	cmp    WORD PTR [rdx+0x2],r13w
    4771:	je     4730 <__ctype_b_loc@plt+0xdc0>
    4773:	add    rdx,0x2
    4777:	add    rax,0x2
    477b:	movzx  eax,BYTE PTR [rax]
    477e:	cmp    BYTE PTR [rdx],al
    4780:	mov    r13d,0x101
    4786:	sete   al
    4789:	movzx  eax,al
    478c:	add    rdx,rax
    478f:	mov    rax,r8
    4792:	sub    rax,rdx
    4795:	sub    r13d,eax
    4798:	cmp    r9d,r13d
    479b:	jge    46f0 <__ctype_b_loc@plt+0xd80>
    47a1:	cmp    DWORD PTR [rsp-0x4],r13d
    47a6:	jle    480d <__ctype_b_loc@plt+0xe9d>
    47a8:	mov    r15d,edi
    47ab:	and    edi,0x7fff
    47b1:	movsxd rdx,r13d
    47b4:	mov    r9d,r13d
    47b7:	movzx  edi,WORD PTR [rbx+rdi*2]
    47bb:	movzx  r11d,WORD PTR [r12+rdx*1-0x1]
    47c1:	mov    r14d,0x1
    47c7:	cmp    esi,edi
    47c9:	jb     4702 <__ctype_b_loc@plt+0xd92>
    47cf:	nop
    47d0:	test   r14b,r14b
    47d3:	je     47dc <__ctype_b_loc@plt+0xe6c>
    47d5:	mov    DWORD PTR [rip+0x19738],r15d        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    47dc:	pop    rbx
    47dd:	mov    eax,r9d
    47e0:	pop    rbp
    47e1:	pop    r12
    47e3:	pop    r13
    47e5:	pop    r14
    47e7:	pop    r15
    47e9:	ret    
    47ea:	nop    WORD PTR [rax+rax*1+0x0]
    47f0:	add    rdx,0x4
    47f4:	add    rax,0x4
    47f8:	jmp    477b <__ctype_b_loc@plt+0xe0b>
    47fa:	nop    WORD PTR [rax+rax*1+0x0]
    4800:	add    rdx,0x6
    4804:	add    rax,0x6
    4808:	jmp    477b <__ctype_b_loc@plt+0xe0b>
    480d:	mov    DWORD PTR [rip+0x19701],edi        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    4813:	mov    r9d,r13d
    4816:	jmp    47dc <__ctype_b_loc@plt+0xe6c>
    4818:	nop    DWORD PTR [rax+rax*1+0x0]
    4820:	push   rbx
    4821:	lea    r8d,[rdi+rsi*1]
    4825:	cmp    edi,0xfff
    482b:	ja     4889 <__ctype_b_loc@plt+0xf19>
    482d:	mov    ecx,edi
    482f:	lea    rbx,[rip+0x8d7ca]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4836:	mov    esi,esi
    4838:	mov    r9,QWORD PTR [rip+0x15821]        # 1a060 <stderr@@GLIBC_2.2.5+0x20>
    483f:	lea    rax,[rbx+rcx*1]
    4843:	lea    rdx,[rax+rsi*1]
    4847:	lea    rsi,[rbx+0x1]
    484b:	add    rcx,rsi
    484e:	mov    esi,0xfff
    4853:	sub    esi,edi
    4855:	add    rsi,rcx
    4858:	xor    ecx,ecx
    485a:	nop    WORD PTR [rax+rax*1+0x0]
    4860:	cmp    rdx,rax
    4863:	je     4900 <__ctype_b_loc@plt+0xf90>
    4869:	movzx  ecx,BYTE PTR [rax]
    486c:	add    rax,0x1
    4870:	add    r9,rcx
    4873:	mov    ecx,0x1
    4878:	cmp    rsi,rax
    487b:	jne    4860 <__ctype_b_loc@plt+0xef0>
    487d:	mov    QWORD PTR [rip+0x157dc],r9        # 1a060 <stderr@@GLIBC_2.2.5+0x20>
    4884:	mov    edi,0x1000
    4889:	cmp    edi,r8d
    488c:	jae    48fe <__ctype_b_loc@plt+0xf8e>
    488e:	mov    rdx,QWORD PTR [rip+0x157cb]        # 1a060 <stderr@@GLIBC_2.2.5+0x20>
    4895:	mov    rsi,QWORD PTR [rip+0x157bc]        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    489c:	mov    edi,edi
    489e:	xor    r10d,r10d
    48a1:	lea    rbx,[rip+0x8d758]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    48a8:	mov    r9d,0xffffffff
    48ae:	mov    r11d,0x1
    48b4:	nop    DWORD PTR [rax+0x0]
    48b8:	lea    ecx,[rdi-0x1000]
    48be:	movzx  eax,BYTE PTR [rbx+rdi*1]
    48c2:	movzx  ecx,BYTE PTR [rbx+rcx*1]
    48c6:	sub    rax,rcx
    48c9:	add    rdx,rax
    48cc:	cmp    rsi,r9
    48cf:	jne    48e2 <__ctype_b_loc@plt+0xf72>
    48d1:	mov    rcx,rdx
    48d4:	and    ecx,0xfff
    48da:	cmove  rsi,rdi
    48de:	cmove  r10d,r11d
    48e2:	add    rdi,0x1
    48e6:	cmp    r8d,edi
    48e9:	ja     48b8 <__ctype_b_loc@plt+0xf48>
    48eb:	mov    QWORD PTR [rip+0x1576e],rdx        # 1a060 <stderr@@GLIBC_2.2.5+0x20>
    48f2:	test   r10b,r10b
    48f5:	je     48fe <__ctype_b_loc@plt+0xf8e>
    48f7:	mov    QWORD PTR [rip+0x1575a],rsi        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    48fe:	pop    rbx
    48ff:	ret    
    4900:	test   cl,cl
    4902:	je     48fe <__ctype_b_loc@plt+0xf8e>
    4904:	mov    QWORD PTR [rip+0x15755],r9        # 1a060 <stderr@@GLIBC_2.2.5+0x20>
    490b:	pop    rbx
    490c:	ret    
    490d:	nop    DWORD PTR [rax]
    4910:	push   r12
    4912:	mov    r12d,DWORD PTR [rip+0x195df]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4919:	mov    esi,0x10000
    491e:	push   rbp
    491f:	push   rbx
    4920:	mov    ebx,DWORD PTR [rip+0x15746]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4926:	lea    ebp,[rbx+r12*1]
    492a:	sub    esi,ebp
    492c:	cmp    esi,0xffffffff
    492f:	je     4a40 <__ctype_b_loc@plt+0x10d0>
    4935:	cmp    r12d,0xfef9
    493c:	ja     497b <__ctype_b_loc@plt+0x100b>
    493e:	mov    ecx,DWORD PTR [rip+0x1572c]        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    4944:	test   ecx,ecx
    4946:	jne    4976 <__ctype_b_loc@plt+0x1006>
    4948:	mov    edi,DWORD PTR [rip+0x195aa]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    494e:	mov    ebx,ebx
    4950:	lea    rbp,[rip+0x8d6a9]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4957:	add    rbx,rdi
    495a:	lea    rdi,[rbx+rbp*1]
    495e:	call   QWORD PTR [rip+0x19584]        # 1dee8 <stderr@@GLIBC_2.2.5+0x3ea8>
    4964:	lea    edx,[rax-0x1]
    4967:	cmp    edx,0xfffffffd
    496a:	ja     4a4a <__ctype_b_loc@plt+0x10da>
    4970:	add    DWORD PTR [rip+0x156f6],eax        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4976:	pop    rbx
    4977:	pop    rbp
    4978:	pop    r12
    497a:	ret    
    497b:	lea    rsi,[rip+0x9567e]        # 9a000 <stderr@@GLIBC_2.2.5+0x7ffc0>
    4982:	mov    edx,0x8000
    4987:	sub    r12d,0x8000
    498e:	lea    rdi,[rsi-0x8000]
    4995:	call   37c0 <memcpy@plt>
    499a:	mov    rax,QWORD PTR [rip+0x156b7]        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    49a1:	mov    edx,0xffffffff
    49a6:	sub    DWORD PTR [rip+0x19564],0x8000        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    49b0:	mov    DWORD PTR [rip+0x19541],r12d        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    49b7:	cmp    rax,rdx
    49ba:	je     49c9 <__ctype_b_loc@plt+0x1059>
    49bc:	sub    rax,0x8000
    49c2:	mov    QWORD PTR [rip+0x1568f],rax        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    49c9:	sub    QWORD PTR [rip+0x1952c],0x8000        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    49d4:	lea    rdi,[rip+0x29a45]        # 2e420 <stderr@@GLIBC_2.2.5+0x143e0>
    49db:	xor    r8d,r8d
    49de:	lea    rax,[rdi-0x10000]
    49e5:	mov    rdx,rdi
    49e8:	lea    r9,[rax+0x20000]
    49ef:	nop
    49f0:	movzx  esi,WORD PTR [rdx]
    49f3:	test   si,si
    49f6:	lea    ecx,[rsi-0x8000]
    49fc:	cmovns ecx,r8d
    4a00:	add    rdx,0x2
    4a04:	mov    WORD PTR [rdx-0x2],cx
    4a08:	cmp    r9,rdx
    4a0b:	jne    49f0 <__ctype_b_loc@plt+0x1080>
    4a0d:	xor    esi,esi
    4a0f:	nop
    4a10:	movzx  ecx,WORD PTR [rax]
    4a13:	test   cx,cx
    4a16:	lea    edx,[rcx-0x8000]
    4a1c:	cmovns edx,esi
    4a1f:	add    rax,0x2
    4a23:	mov    WORD PTR [rax-0x2],dx
    4a27:	cmp    rax,rdi
    4a2a:	jne    4a10 <__ctype_b_loc@plt+0x10a0>
    4a2c:	mov    esi,0x18000
    4a31:	sub    esi,ebp
    4a33:	jmp    493e <__ctype_b_loc@plt+0xfce>
    4a38:	nop    DWORD PTR [rax+rax*1+0x0]
    4a40:	mov    esi,0xfffffffe
    4a45:	jmp    493e <__ctype_b_loc@plt+0xfce>
    4a4a:	mov    edx,DWORD PTR [rip+0x1561c]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4a50:	mov    eax,DWORD PTR [rip+0x194a2]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4a56:	mov    DWORD PTR [rip+0x15610],0x1        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    4a60:	add    rax,rdx
    4a63:	xor    edx,edx
    4a65:	mov    WORD PTR [rbp+rax*1+0x0],dx
    4a6a:	pop    rbx
    4a6b:	pop    rbp
    4a6c:	pop    r12
    4a6e:	ret    
    4a6f:	nop
    4a70:	endbr64 
    4a74:	lea    eax,[rdi-0x1]
    4a77:	push   rbx
    4a78:	cmp    eax,0x8
    4a7b:	ja     4b86 <__ctype_b_loc@plt+0x1216>
    4a81:	mov    ebx,edi
    4a83:	mov    edx,0x10000
    4a88:	lea    rdi,[rip+0x29991]        # 2e420 <stderr@@GLIBC_2.2.5+0x143e0>
    4a8f:	xor    esi,esi
    4a91:	call   36c0 <memset@plt>
    4a96:	mov    eax,0xffffffff
    4a9b:	movsxd rdi,ebx
    4a9e:	mov    QWORD PTR [rip+0x155b7],0x0        # 1a060 <stderr@@GLIBC_2.2.5+0x20>
    4aa9:	mov    QWORD PTR [rip+0x155a8],rax        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4ab0:	lea    rax,[rip+0xd569]        # 12020 <__ctype_b_loc@plt+0xe6b0>
    4ab7:	mov    esi,0x10000
    4abc:	mov    DWORD PTR [rip+0x19432],0x0        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4ac6:	movzx  edx,WORD PTR [rax+rdi*8+0x2]
    4acb:	mov    QWORD PTR [rip+0x1942a],0x0        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4ad6:	mov    DWORD PTR [rip+0x1558c],edx        # 1a068 <stderr@@GLIBC_2.2.5+0x28>
    4adc:	movzx  edx,WORD PTR [rax+rdi*8]
    4ae0:	mov    DWORD PTR [rip+0x19422],edx        # 1df08 <stderr@@GLIBC_2.2.5+0x3ec8>
    4ae6:	movzx  edx,WORD PTR [rax+rdi*8+0x4]
    4aeb:	movzx  eax,WORD PTR [rax+rdi*8+0x6]
    4af0:	lea    rdi,[rip+0x8d509]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4af7:	mov    DWORD PTR [rip+0x15553],edx        # 1a050 <stderr@@GLIBC_2.2.5+0x10>
    4afd:	mov    DWORD PTR [rip+0x19409],eax        # 1df0c <stderr@@GLIBC_2.2.5+0x3ecc>
    4b03:	call   QWORD PTR [rip+0x193df]        # 1dee8 <stderr@@GLIBC_2.2.5+0x3ea8>
    4b09:	lea    edx,[rax-0x1]
    4b0c:	mov    DWORD PTR [rip+0x1555a],eax        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4b12:	cmp    edx,0xfffffffd
    4b15:	ja     4b70 <__ctype_b_loc@plt+0x1200>
    4b17:	mov    DWORD PTR [rip+0x1554f],0x0        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    4b21:	cmp    eax,0x105
    4b26:	ja     4b4b <__ctype_b_loc@plt+0x11db>
    4b28:	nop    DWORD PTR [rax+rax*1+0x0]
    4b30:	call   4910 <__ctype_b_loc@plt+0xfa0>
    4b35:	cmp    DWORD PTR [rip+0x1552d],0x105        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4b3f:	ja     4b4b <__ctype_b_loc@plt+0x11db>
    4b41:	mov    eax,DWORD PTR [rip+0x15529]        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    4b47:	test   eax,eax
    4b49:	je     4b30 <__ctype_b_loc@plt+0x11c0>
    4b4b:	movzx  eax,BYTE PTR [rip+0x8d4ae]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4b52:	movzx  edx,BYTE PTR [rip+0x8d4a8]        # 92001 <stderr@@GLIBC_2.2.5+0x77fc1>
    4b59:	pop    rbx
    4b5a:	shl    eax,0x5
    4b5d:	xor    eax,edx
    4b5f:	mov    DWORD PTR [rip+0x1550f],eax        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    4b65:	ret    
    4b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4b70:	mov    DWORD PTR [rip+0x154f6],0x1        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    4b7a:	pop    rbx
    4b7b:	mov    DWORD PTR [rip+0x154e7],0x0        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4b85:	ret    
    4b86:	lea    rdi,[rip+0xd477]        # 12004 <__ctype_b_loc@plt+0xe694>
    4b8d:	call   d310 <__ctype_b_loc@plt+0x99a0>
    4b92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    4b9d:	nop    DWORD PTR [rax]
    4ba0:	endbr64 
    4ba4:	push   r15
    4ba6:	push   r14
    4ba8:	push   r13
    4baa:	push   r12
    4bac:	push   rbp
    4bad:	push   rbx
    4bae:	mov    ebx,edi
    4bb0:	sub    rsp,0x18
    4bb4:	call   4a70 <__ctype_b_loc@plt+0x1100>
    4bb9:	cmp    ebx,0x3
    4bbc:	jle    503b <__ctype_b_loc@plt+0x16cb>
    4bc2:	mov    edx,DWORD PTR [rip+0x154a4]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4bc8:	mov    edi,DWORD PTR [rip+0x1932a]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4bce:	mov    r13d,0xffffffff
    4bd4:	test   edx,edx
    4bd6:	je     4e96 <__ctype_b_loc@plt+0x1526>
    4bdc:	mov    ecx,0x2
    4be1:	xor    r14d,r14d
    4be4:	xor    r13d,r13d
    4be7:	mov    r15d,0x2
    4bed:	lea    rbp,[rip+0x8d40c]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4bf4:	lea    rbx,[rip+0x19825]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    4bfb:	nop    DWORD PTR [rax+rax*1+0x0]
    4c00:	mov    eax,DWORD PTR [rip+0x1546e]        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    4c06:	lea    esi,[rdi+0x2]
    4c09:	mov    r9d,edi
    4c0c:	mov    DWORD PTR [rip+0x192fe],ecx        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    4c12:	movzx  esi,BYTE PTR [rbp+rsi*1+0x0]
    4c17:	and    r9d,0x7fff
    4c1e:	mov    r12d,0x2
    4c24:	shl    eax,0x5
    4c27:	xor    eax,esi
    4c29:	mov    esi,DWORD PTR [rip+0x192e5]        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    4c2f:	and    eax,0x7fff
    4c34:	mov    DWORD PTR [rip+0x1543a],eax        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    4c3a:	lea    rax,[rbx+rax*2+0x10000]
    4c42:	movzx  r8d,WORD PTR [rax]
    4c46:	mov    WORD PTR [rbx+r9*2],r8w
    4c4b:	mov    WORD PTR [rax],di
    4c4e:	test   r8d,r8d
    4c51:	je     4c79 <__ctype_b_loc@plt+0x1309>
    4c53:	cmp    DWORD PTR [rip+0x1540f],ecx        # 1a068 <stderr@@GLIBC_2.2.5+0x28>
    4c59:	jbe    4c79 <__ctype_b_loc@plt+0x1309>
    4c5b:	mov    eax,edi
    4c5d:	sub    eax,r8d
    4c60:	cmp    eax,0x7efa
    4c65:	ja     4c73 <__ctype_b_loc@plt+0x1303>
    4c67:	cmp    edi,0xfefa
    4c6d:	jbe    5001 <__ctype_b_loc@plt+0x1691>
    4c73:	mov    r12d,0x2
    4c79:	cmp    r12d,ecx
    4c7c:	ja     4c87 <__ctype_b_loc@plt+0x1317>
    4c7e:	cmp    ecx,0x2
    4c81:	ja     4ed0 <__ctype_b_loc@plt+0x1560>
    4c87:	test   r14d,r14d
    4c8a:	jne    4d80 <__ctype_b_loc@plt+0x1410>
    4c90:	mov    ecx,DWORD PTR [rip+0x153ea]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    4c96:	test   ecx,ecx
    4c98:	je     4d00 <__ctype_b_loc@plt+0x1390>
    4c9a:	mov    esi,edi
    4c9c:	cmp    rsi,QWORD PTR [rip+0x153b5]        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4ca3:	jbe    4e28 <__ctype_b_loc@plt+0x14b8>
    4ca9:	mov    eax,0xffffffff
    4cae:	mov    edx,0x1
    4cb3:	mov    r13d,0x2
    4cb9:	mov    QWORD PTR [rip+0x15398],rax        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4cc0:	mov    rax,QWORD PTR [rip+0x19239]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4cc7:	mov    edi,eax
    4cc9:	sub    rsi,rax
    4ccc:	add    rdi,rbp
    4ccf:	test   rax,rax
    4cd2:	mov    eax,0x0
    4cd7:	cmovs  rdi,rax
    4cdb:	xor    ecx,ecx
    4cdd:	call   ac90 <__ctype_b_loc@plt+0x7320>
    4ce2:	mov    eax,DWORD PTR [rip+0x19210]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4ce8:	mov    edx,DWORD PTR [rip+0x15392]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    4cee:	mov    QWORD PTR [rip+0x1920b],rax        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4cf5:	mov    rdi,rax
    4cf8:	test   edx,edx
    4cfa:	jne    4e28 <__ctype_b_loc@plt+0x14b8>
    4d00:	mov    eax,DWORD PTR [rip+0x15366]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4d06:	add    edi,0x1
    4d09:	mov    r14d,0x1
    4d0f:	mov    DWORD PTR [rip+0x191e3],edi        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4d15:	lea    edx,[rax-0x1]
    4d18:	mov    DWORD PTR [rip+0x1534e],edx        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4d1e:	cmp    edx,0x105
    4d24:	jbe    4d43 <__ctype_b_loc@plt+0x13d3>
    4d26:	jmp    4d70 <__ctype_b_loc@plt+0x1400>
    4d28:	nop    DWORD PTR [rax+rax*1+0x0]
    4d30:	call   4910 <__ctype_b_loc@plt+0xfa0>
    4d35:	mov    edx,DWORD PTR [rip+0x15331]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4d3b:	cmp    edx,0x105
    4d41:	ja     4d70 <__ctype_b_loc@plt+0x1400>
    4d43:	mov    eax,DWORD PTR [rip+0x15327]        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    4d49:	test   eax,eax
    4d4b:	je     4d30 <__ctype_b_loc@plt+0x13c0>
    4d4d:	mov    edx,DWORD PTR [rip+0x15319]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4d53:	mov    edi,DWORD PTR [rip+0x1919f]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4d59:	test   edx,edx
    4d5b:	je     4e78 <__ctype_b_loc@plt+0x1508>
    4d61:	mov    ecx,r12d
    4d64:	jmp    4c00 <__ctype_b_loc@plt+0x1290>
    4d69:	nop    DWORD PTR [rax+0x0]
    4d70:	mov    edi,DWORD PTR [rip+0x19182]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4d76:	jmp    4d61 <__ctype_b_loc@plt+0x13f1>
    4d78:	nop    DWORD PTR [rax+rax*1+0x0]
    4d80:	lea    eax,[rdi-0x1]
    4d83:	xor    edi,edi
    4d85:	movzx  esi,BYTE PTR [rbp+rax*1+0x0]
    4d8a:	call   b020 <__ctype_b_loc@plt+0x76b0>
    4d8f:	mov    edi,DWORD PTR [rip+0x152eb]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    4d95:	mov    r13d,eax
    4d98:	test   edi,edi
    4d9a:	je     4e40 <__ctype_b_loc@plt+0x14d0>
    4da0:	mov    esi,DWORD PTR [rip+0x19152]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4da6:	cmp    rsi,QWORD PTR [rip+0x152ab]        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4dad:	mov    rdi,rsi
    4db0:	jbe    4e55 <__ctype_b_loc@plt+0x14e5>
    4db6:	mov    eax,0xffffffff
    4dbb:	mov    edx,r14d
    4dbe:	mov    r13d,0x2
    4dc4:	mov    QWORD PTR [rip+0x1528d],rax        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4dcb:	mov    rax,QWORD PTR [rip+0x1912e]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4dd2:	mov    edi,eax
    4dd4:	sub    rsi,rax
    4dd7:	add    rdi,rbp
    4dda:	test   rax,rax
    4ddd:	mov    eax,0x0
    4de2:	cmovs  rdi,rax
    4de6:	xor    ecx,ecx
    4de8:	call   ac90 <__ctype_b_loc@plt+0x7320>
    4ded:	mov    eax,DWORD PTR [rip+0x19105]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4df3:	mov    esi,DWORD PTR [rip+0x15287]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    4df9:	mov    QWORD PTR [rip+0x19100],rax        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4e00:	mov    rdi,rax
    4e03:	test   esi,esi
    4e05:	jne    4e60 <__ctype_b_loc@plt+0x14f0>
    4e07:	mov    eax,DWORD PTR [rip+0x1525f]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4e0d:	add    edi,0x1
    4e10:	mov    DWORD PTR [rip+0x190e2],edi        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4e16:	lea    edx,[rax-0x1]
    4e19:	mov    DWORD PTR [rip+0x1524d],edx        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4e1f:	jmp    4d1e <__ctype_b_loc@plt+0x13ae>
    4e24:	nop    DWORD PTR [rax+0x0]
    4e28:	mov    esi,0x1
    4e2d:	call   4820 <__ctype_b_loc@plt+0xeb0>
    4e32:	mov    edi,DWORD PTR [rip+0x190c0]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4e38:	jmp    4d00 <__ctype_b_loc@plt+0x1390>
    4e3d:	nop    DWORD PTR [rax]
    4e40:	mov    edi,DWORD PTR [rip+0x190b2]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4e46:	lea    edx,[rax-0x1]
    4e49:	mov    esi,edi
    4e4b:	test   eax,eax
    4e4d:	jne    4dcb <__ctype_b_loc@plt+0x145b>
    4e53:	jmp    4e07 <__ctype_b_loc@plt+0x1497>
    4e55:	lea    edx,[rax-0x1]
    4e58:	test   eax,eax
    4e5a:	jne    4dcb <__ctype_b_loc@plt+0x145b>
    4e60:	mov    esi,0x1
    4e65:	call   4820 <__ctype_b_loc@plt+0xeb0>
    4e6a:	mov    edi,DWORD PTR [rip+0x19088]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4e70:	jmp    4e07 <__ctype_b_loc@plt+0x1497>
    4e72:	nop    WORD PTR [rax+rax*1+0x0]
    4e78:	sub    r13d,0x1
    4e7c:	test   r14d,r14d
    4e7f:	je     4e96 <__ctype_b_loc@plt+0x1526>
    4e81:	lea    eax,[rdi-0x1]
    4e84:	xor    edi,edi
    4e86:	movzx  esi,BYTE PTR [rbp+rax*1+0x0]
    4e8b:	call   b020 <__ctype_b_loc@plt+0x76b0>
    4e90:	mov    edi,DWORD PTR [rip+0x19062]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4e96:	mov    rax,QWORD PTR [rip+0x19063]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4e9d:	mov    esi,edi
    4e9f:	xor    edi,edi
    4ea1:	sub    rsi,rax
    4ea4:	test   rax,rax
    4ea7:	js     4eb5 <__ctype_b_loc@plt+0x1545>
    4ea9:	mov    eax,eax
    4eab:	lea    rdi,[rip+0x8d14e]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    4eb2:	add    rdi,rax
    4eb5:	mov    ecx,0x1
    4eba:	mov    edx,r13d
    4ebd:	add    rsp,0x18
    4ec1:	pop    rbx
    4ec2:	pop    rbp
    4ec3:	pop    r12
    4ec5:	pop    r13
    4ec7:	pop    r14
    4ec9:	pop    r15
    4ecb:	jmp    ac90 <__ctype_b_loc@plt+0x7320>
    4ed0:	lea    r8d,[rcx-0x3]
    4ed4:	not    esi
    4ed6:	add    edi,esi
    4ed8:	mov    esi,r8d
    4edb:	call   b020 <__ctype_b_loc@plt+0x76b0>
    4ee0:	mov    ecx,DWORD PTR [rip+0x15186]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4ee6:	mov    r11d,DWORD PTR [rip+0x15193]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    4eed:	mov    r13d,eax
    4ef0:	mov    eax,DWORD PTR [rip+0x1901a]        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    4ef6:	lea    edx,[rcx+0x1]
    4ef9:	sub    edx,eax
    4efb:	lea    r9d,[rax-0x2]
    4eff:	mov    DWORD PTR [rip+0x15167],edx        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4f05:	mov    DWORD PTR [rip+0x19004],r9d        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    4f0c:	test   r11d,r11d
    4f0f:	jne    533c <__ctype_b_loc@plt+0x19cc>
    4f15:	mov    r10d,DWORD PTR [rip+0x18fdc]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4f1c:	mov    ecx,DWORD PTR [rip+0x15152]        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    4f22:	lea    r8d,[r10+r9*1]
    4f26:	mov    eax,r10d
    4f29:	nop    DWORD PTR [rax+0x0]
    4f30:	mov    esi,eax
    4f32:	shl    ecx,0x5
    4f35:	add    eax,0x1
    4f38:	add    esi,0x3
    4f3b:	mov    edi,eax
    4f3d:	movzx  esi,BYTE PTR [rbp+rsi*1+0x0]
    4f42:	and    edi,0x7fff
    4f48:	xor    ecx,esi
    4f4a:	and    ecx,0x7fff
    4f50:	mov    esi,ecx
    4f52:	lea    rsi,[rbx+rsi*2+0x10000]
    4f5a:	movzx  r12d,WORD PTR [rsi]
    4f5e:	mov    WORD PTR [rbx+rdi*2],r12w
    4f63:	mov    WORD PTR [rsi],ax
    4f66:	cmp    eax,r8d
    4f69:	jne    4f30 <__ctype_b_loc@plt+0x15c0>
    4f6b:	lea    eax,[r10+r9*1+0x1]
    4f70:	mov    DWORD PTR [rip+0x150fe],ecx        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    4f76:	mov    DWORD PTR [rip+0x18f90],0x0        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    4f80:	mov    DWORD PTR [rip+0x18f72],eax        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4f86:	test   r11d,r11d
    4f89:	je     4faf <__ctype_b_loc@plt+0x163f>
    4f8b:	mov    esi,eax
    4f8d:	cmp    rsi,QWORD PTR [rip+0x150c4]        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4f94:	jbe    4faf <__ctype_b_loc@plt+0x163f>
    4f96:	mov    eax,0xffffffff
    4f9b:	mov    edx,0x1
    4fa0:	mov    r13d,0x2
    4fa6:	mov    QWORD PTR [rip+0x150ab],rax        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    4fad:	jmp    4fbe <__ctype_b_loc@plt+0x164e>
    4faf:	test   r13d,r13d
    4fb2:	je     51c9 <__ctype_b_loc@plt+0x1859>
    4fb8:	lea    edx,[r13-0x1]
    4fbc:	mov    esi,eax
    4fbe:	mov    rax,QWORD PTR [rip+0x18f3b]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4fc5:	mov    r12d,0x2
    4fcb:	mov    edi,eax
    4fcd:	sub    rsi,rax
    4fd0:	add    rdi,rbp
    4fd3:	test   rax,rax
    4fd6:	mov    eax,0x0
    4fdb:	cmovs  rdi,rax
    4fdf:	xor    ecx,ecx
    4fe1:	xor    r14d,r14d
    4fe4:	call   ac90 <__ctype_b_loc@plt+0x7320>
    4fe9:	mov    eax,DWORD PTR [rip+0x18f09]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    4fef:	mov    edx,DWORD PTR [rip+0x15077]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    4ff5:	mov    QWORD PTR [rip+0x18f04],rax        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    4ffc:	jmp    4d1e <__ctype_b_loc@plt+0x13ae>
    5001:	mov    edi,r8d
    5004:	mov    DWORD PTR [rsp+0xc],edx
    5008:	mov    DWORD PTR [rsp+0x8],esi
    500c:	call   4670 <__ctype_b_loc@plt+0xd00>
    5011:	mov    edx,DWORD PTR [rsp+0xc]
    5015:	mov    esi,DWORD PTR [rsp+0x8]
    5019:	cmp    eax,edx
    501b:	cmovbe edx,eax
    501e:	cmp    edx,0x3
    5021:	mov    r12d,edx
    5024:	je     51d7 <__ctype_b_loc@plt+0x1867>
    502a:	mov    ecx,DWORD PTR [rip+0x18ee0]        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    5030:	mov    edi,DWORD PTR [rip+0x18ec2]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5036:	jmp    4c79 <__ctype_b_loc@plt+0x1309>
    503b:	mov    r12d,DWORD PTR [rip+0x1502a]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    5042:	mov    DWORD PTR [rip+0x18ec4],0x2        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    504c:	test   r12d,r12d
    504f:	je     5365 <__ctype_b_loc@plt+0x19f5>
    5055:	lea    rbp,[rip+0x8cfa4]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    505c:	lea    rbx,[rip+0x193bd]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    5063:	xor    r13d,r13d
    5066:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5070:	mov    edx,DWORD PTR [rip+0x18e82]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5076:	mov    eax,DWORD PTR [rip+0x14ff8]        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    507c:	lea    ecx,[rdx+0x2]
    507f:	shl    eax,0x5
    5082:	mov    esi,edx
    5084:	movzx  ecx,BYTE PTR [rbp+rcx*1+0x0]
    5089:	and    esi,0x7fff
    508f:	xor    eax,ecx
    5091:	and    eax,0x7fff
    5096:	mov    DWORD PTR [rip+0x14fd8],eax        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    509c:	lea    rax,[rbx+rax*2+0x10000]
    50a4:	movzx  edi,WORD PTR [rax]
    50a7:	mov    WORD PTR [rbx+rsi*2],di
    50ab:	mov    WORD PTR [rax],dx
    50ae:	test   edi,edi
    50b0:	je     50c9 <__ctype_b_loc@plt+0x1759>
    50b2:	mov    eax,edx
    50b4:	sub    eax,edi
    50b6:	cmp    eax,0x7efa
    50bb:	ja     50c9 <__ctype_b_loc@plt+0x1759>
    50bd:	cmp    edx,0xfefa
    50c3:	jbe    5218 <__ctype_b_loc@plt+0x18a8>
    50c9:	movzx  esi,BYTE PTR [rbp+rdx*1+0x0]
    50ce:	xor    edi,edi
    50d0:	call   b020 <__ctype_b_loc@plt+0x76b0>
    50d5:	mov    r14d,eax
    50d8:	mov    eax,DWORD PTR [rip+0x14fa2]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    50de:	test   eax,eax
    50e0:	jne    529c <__ctype_b_loc@plt+0x192c>
    50e6:	sub    DWORD PTR [rip+0x14f7f],0x1        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    50ed:	add    DWORD PTR [rip+0x18e04],0x1        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    50f4:	test   eax,eax
    50f6:	je     5200 <__ctype_b_loc@plt+0x1890>
    50fc:	mov    esi,DWORD PTR [rip+0x18df6]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5102:	cmp    rsi,QWORD PTR [rip+0x14f4f]        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    5109:	jbe    5200 <__ctype_b_loc@plt+0x1890>
    510f:	mov    eax,0xffffffff
    5114:	mov    edx,0x1
    5119:	mov    r14d,0x2
    511f:	mov    QWORD PTR [rip+0x14f32],rax        # 1a058 <stderr@@GLIBC_2.2.5+0x18>
    5126:	mov    rax,QWORD PTR [rip+0x18dd3]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    512d:	mov    edi,eax
    512f:	sub    rsi,rax
    5132:	add    rdi,rbp
    5135:	test   rax,rax
    5138:	cmovs  rdi,r13
    513c:	xor    ecx,ecx
    513e:	call   ac90 <__ctype_b_loc@plt+0x7320>
    5143:	mov    eax,DWORD PTR [rip+0x18daf]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5149:	mov    QWORD PTR [rip+0x18db0],rax        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    5150:	mov    eax,DWORD PTR [rip+0x14f16]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    5156:	mov    r12d,eax
    5159:	cmp    eax,0x105
    515e:	jbe    5181 <__ctype_b_loc@plt+0x1811>
    5160:	jmp    5070 <__ctype_b_loc@plt+0x1700>
    5165:	nop    DWORD PTR [rax]
    5168:	call   4910 <__ctype_b_loc@plt+0xfa0>
    516d:	mov    eax,DWORD PTR [rip+0x14ef9]        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    5173:	mov    r12d,eax
    5176:	cmp    eax,0x105
    517b:	ja     5070 <__ctype_b_loc@plt+0x1700>
    5181:	mov    r8d,DWORD PTR [rip+0x14ee8]        # 1a070 <stderr@@GLIBC_2.2.5+0x30>
    5188:	test   r8d,r8d
    518b:	je     5168 <__ctype_b_loc@plt+0x17f8>
    518d:	mov    r12d,eax
    5190:	test   eax,eax
    5192:	jne    5070 <__ctype_b_loc@plt+0x1700>
    5198:	lea    edx,[r14-0x1]
    519c:	mov    rax,QWORD PTR [rip+0x18d5d]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    51a3:	mov    esi,DWORD PTR [rip+0x18d4f]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    51a9:	xor    edi,edi
    51ab:	sub    rsi,rax
    51ae:	test   rax,rax
    51b1:	js     51bf <__ctype_b_loc@plt+0x184f>
    51b3:	mov    eax,eax
    51b5:	lea    rdi,[rip+0x8ce44]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    51bc:	add    rdi,rax
    51bf:	mov    ecx,0x1
    51c4:	jmp    4ebd <__ctype_b_loc@plt+0x154d>
    51c9:	xor    r14d,r14d
    51cc:	mov    r12d,0x2
    51d2:	jmp    4d1e <__ctype_b_loc@plt+0x13ae>
    51d7:	mov    edi,DWORD PTR [rip+0x18d1b]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    51dd:	mov    ecx,DWORD PTR [rip+0x18d2d]        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    51e3:	mov    eax,edi
    51e5:	sub    eax,DWORD PTR [rip+0x18d29]        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    51eb:	cmp    eax,0x1001
    51f0:	cmovae r12d,r15d
    51f4:	jmp    4c79 <__ctype_b_loc@plt+0x1309>
    51f9:	nop    DWORD PTR [rax+0x0]
    5200:	test   r14d,r14d
    5203:	je     5150 <__ctype_b_loc@plt+0x17e0>
    5209:	mov    esi,DWORD PTR [rip+0x18ce9]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    520f:	lea    edx,[r14-0x1]
    5213:	jmp    5126 <__ctype_b_loc@plt+0x17b6>
    5218:	call   4670 <__ctype_b_loc@plt+0xd00>
    521d:	cmp    eax,r12d
    5220:	cmovbe r12d,eax
    5224:	cmp    r12d,0x2
    5228:	jbe    536f <__ctype_b_loc@plt+0x19ff>
    522e:	mov    edi,DWORD PTR [rip+0x18cc4]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5234:	lea    esi,[r12-0x3]
    5239:	sub    edi,DWORD PTR [rip+0x18cd5]        # 1df14 <stderr@@GLIBC_2.2.5+0x3ed4>
    523f:	call   b020 <__ctype_b_loc@plt+0x76b0>
    5244:	mov    r9d,DWORD PTR [rip+0x14e35]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    524b:	sub    DWORD PTR [rip+0x14e1a],r12d        # 1a06c <stderr@@GLIBC_2.2.5+0x2c>
    5252:	mov    r14d,eax
    5255:	test   r9d,r9d
    5258:	jne    52b7 <__ctype_b_loc@plt+0x1947>
    525a:	cmp    r12d,DWORD PTR [rip+0x14e07]        # 1a068 <stderr@@GLIBC_2.2.5+0x28>
    5261:	mov    r8d,DWORD PTR [rip+0x18c90]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5268:	jbe    52d5 <__ctype_b_loc@plt+0x1965>
    526a:	lea    eax,[r12+r8*1]
    526e:	mov    r12,rax
    5271:	mov    DWORD PTR [rip+0x18c81],eax        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5277:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    527c:	lea    edx,[r12+0x1]
    5281:	movzx  edx,BYTE PTR [rbp+rdx*1+0x0]
    5286:	shl    eax,0x5
    5289:	xor    eax,edx
    528b:	mov    DWORD PTR [rip+0x14de3],eax        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    5291:	mov    eax,DWORD PTR [rip+0x14de9]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    5297:	jmp    50f4 <__ctype_b_loc@plt+0x1784>
    529c:	mov    edi,DWORD PTR [rip+0x18c56]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    52a2:	mov    esi,0x1
    52a7:	call   4820 <__ctype_b_loc@plt+0xeb0>
    52ac:	mov    eax,DWORD PTR [rip+0x14dce]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    52b2:	jmp    50e6 <__ctype_b_loc@plt+0x1776>
    52b7:	mov    edi,DWORD PTR [rip+0x18c3b]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    52bd:	mov    esi,r12d
    52c0:	call   4820 <__ctype_b_loc@plt+0xeb0>
    52c5:	cmp    r12d,DWORD PTR [rip+0x14d9c]        # 1a068 <stderr@@GLIBC_2.2.5+0x28>
    52cc:	mov    r8d,DWORD PTR [rip+0x18c25]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    52d3:	ja     526a <__ctype_b_loc@plt+0x18fa>
    52d5:	mov    edx,DWORD PTR [rip+0x14d99]        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    52db:	lea    r9d,[r12+r8*1-0x1]
    52e0:	mov    eax,r8d
    52e3:	nop    DWORD PTR [rax+rax*1+0x0]
    52e8:	mov    ecx,eax
    52ea:	shl    edx,0x5
    52ed:	add    eax,0x1
    52f0:	add    ecx,0x3
    52f3:	mov    esi,eax
    52f5:	movzx  ecx,BYTE PTR [rbp+rcx*1+0x0]
    52fa:	and    esi,0x7fff
    5300:	xor    edx,ecx
    5302:	and    edx,0x7fff
    5308:	mov    ecx,edx
    530a:	lea    rcx,[rbx+rcx*2+0x10000]
    5312:	movzx  edi,WORD PTR [rcx]
    5315:	mov    WORD PTR [rbx+rsi*2],di
    5319:	mov    WORD PTR [rcx],ax
    531c:	cmp    eax,r9d
    531f:	jne    52e8 <__ctype_b_loc@plt+0x1978>
    5321:	add    r12d,r8d
    5324:	mov    DWORD PTR [rip+0x14d4a],edx        # 1a074 <stderr@@GLIBC_2.2.5+0x34>
    532a:	mov    eax,DWORD PTR [rip+0x14d50]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    5330:	mov    DWORD PTR [rip+0x18bc1],r12d        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5337:	jmp    50f4 <__ctype_b_loc@plt+0x1784>
    533c:	mov    edi,DWORD PTR [rip+0x18bb6]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5342:	lea    esi,[rax-0x1]
    5345:	mov    DWORD PTR [rsp+0x8],edx
    5349:	call   4820 <__ctype_b_loc@plt+0xeb0>
    534e:	mov    r11d,DWORD PTR [rip+0x14d2b]        # 1a080 <stderr@@GLIBC_2.2.5+0x40>
    5355:	mov    r9d,DWORD PTR [rip+0x18bb4]        # 1df10 <stderr@@GLIBC_2.2.5+0x3ed0>
    535c:	mov    edx,DWORD PTR [rsp+0x8]
    5360:	jmp    4f15 <__ctype_b_loc@plt+0x15a5>
    5365:	mov    edx,0xffffffff
    536a:	jmp    519c <__ctype_b_loc@plt+0x182c>
    536f:	mov    edx,DWORD PTR [rip+0x18b83]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    5375:	jmp    50c9 <__ctype_b_loc@plt+0x1759>
    537a:	nop    WORD PTR [rax+rax*1+0x0]
    5380:	push   rbp
    5381:	lea    rdi,[rip+0xd8de]        # 12c66 <__ctype_b_loc@plt+0xf2f6>
    5388:	xor    eax,eax
    538a:	lea    rbp,[rip+0xe446]        # 137d7 <__ctype_b_loc@plt+0xfe67>
    5391:	push   rbx
    5392:	lea    rbx,[rip+0x127a7]        # 17b40 <__ctype_b_loc@plt+0x141d0>
    5399:	sub    rsp,0x8
    539d:	mov    rsi,QWORD PTR [rip+0x9cc64]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    53a4:	mov    rdx,QWORD PTR [rip+0x1304d]        # 183f8 <__ctype_b_loc@plt+0x14a88>
    53ab:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    53b0:	lea    rsi,[rip+0xccb9]        # 12070 <__ctype_b_loc@plt+0xe700>
    53b7:	nop    WORD PTR [rax+rax*1+0x0]
    53c0:	add    rbx,0x8
    53c4:	mov    rdi,rbp
    53c7:	xor    eax,eax
    53c9:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    53ce:	mov    rsi,QWORD PTR [rbx]
    53d1:	test   rsi,rsi
    53d4:	jne    53c0 <__ctype_b_loc@plt+0x1a50>
    53d6:	add    rsp,0x8
    53da:	pop    rbx
    53db:	pop    rbp
    53dc:	ret    
    53dd:	nop    DWORD PTR [rax]
    53e0:	push   rbp
    53e1:	push   rbx
    53e2:	mov    ebx,edi
    53e4:	sub    rsp,0x498
    53eb:	mov    rax,QWORD PTR fs:0x28
    53f4:	mov    QWORD PTR [rsp+0x488],rax
    53fc:	xor    eax,eax
    53fe:	test   dil,dil
    5401:	je     5430 <__ctype_b_loc@plt+0x1ac0>
    5403:	mov    edi,DWORD PTR [rip+0x12c0f]        # 18018 <__ctype_b_loc@plt+0x146a8>
    5409:	test   edi,edi
    540b:	jns    544e <__ctype_b_loc@plt+0x1ade>
    540d:	mov    rax,QWORD PTR [rsp+0x488]
    5415:	xor    rax,QWORD PTR fs:0x28
    541e:	jne    54a8 <__ctype_b_loc@plt+0x1b38>
    5424:	add    rsp,0x498
    542b:	pop    rbx
    542c:	pop    rbp
    542d:	ret    
    542e:	xchg   ax,ax
    5430:	mov    rbp,rsp
    5433:	xor    edi,edi
    5435:	lea    rsi,[rip+0x15544]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    543c:	mov    rdx,rbp
    543f:	call   34f0 <sigprocmask@plt>
    5444:	mov    edi,DWORD PTR [rip+0x12bce]        # 18018 <__ctype_b_loc@plt+0x146a8>
    544a:	test   edi,edi
    544c:	js     548c <__ctype_b_loc@plt+0x1b1c>
    544e:	mov    DWORD PTR [rip+0x12bc0],0xffffffff        # 18018 <__ctype_b_loc@plt+0x146a8>
    5458:	call   36d0 <close@plt>
    545d:	lea    rdi,[rsp+0x80]
    5465:	lea    rax,[rip+0x150f4]        # 1a560 <stderr@@GLIBC_2.2.5+0x520>
    546c:	mov    rdx,rdi
    546f:	lea    rsi,[rax+0x1]
    5473:	movzx  eax,BYTE PTR [rax]
    5476:	lea    rcx,[rdx+0x1]
    547a:	mov    BYTE PTR [rdx],al
    547c:	test   al,al
    547e:	jne    54a0 <__ctype_b_loc@plt+0x1b30>
    5480:	call   d170 <__ctype_b_loc@plt+0x9800>
    5485:	mov    rbp,rsp
    5488:	test   bl,bl
    548a:	jne    540d <__ctype_b_loc@plt+0x1a9d>
    548c:	xor    edx,edx
    548e:	mov    rsi,rbp
    5491:	mov    edi,0x2
    5496:	call   34f0 <sigprocmask@plt>
    549b:	jmp    540d <__ctype_b_loc@plt+0x1a9d>
    54a0:	mov    rax,rsi
    54a3:	mov    rdx,rcx
    54a6:	jmp    546f <__ctype_b_loc@plt+0x1aff>
    54a8:	call   3680 <__stack_chk_fail@plt>
    54ad:	nop    DWORD PTR [rax]
    54b0:	endbr64 
    54b4:	push   rbp
    54b5:	mov    ebp,edi
    54b7:	mov    edi,0x1
    54bc:	call   53e0 <__ctype_b_loc@plt+0x1a70>
    54c1:	mov    eax,DWORD PTR [rip+0x15499]        # 1a960 <stderr@@GLIBC_2.2.5+0x920>
    54c7:	cmp    eax,ebp
    54c9:	je     54dc <__ctype_b_loc@plt+0x1b6c>
    54cb:	mov    edi,ebp
    54cd:	xor    esi,esi
    54cf:	call   3770 <signal@plt>
    54d4:	mov    edi,ebp
    54d6:	pop    rbp
    54d7:	jmp    3510 <raise@plt>
    54dc:	mov    edi,0x2
    54e1:	call   3590 <_exit@plt>
    54e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    54f0:	push   r12
    54f2:	push   rbp
    54f3:	mov    rbp,rdi
    54f6:	push   rbx
    54f7:	call   3560 <__errno_location@plt>
    54fc:	mov    rdx,QWORD PTR [rip+0x9cb05]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    5503:	mov    rdi,QWORD PTR [rip+0x14b36]        # 1a040 <stderr@@GLIBC_2.2.5>
    550a:	lea    rsi,[rip+0xe2cb]        # 137dc <__ctype_b_loc@plt+0xfe6c>
    5511:	mov    r12d,DWORD PTR [rax]
    5514:	mov    rbx,rax
    5517:	xor    eax,eax
    5519:	call   f390 <__ctype_b_loc@plt+0xba20>
    551e:	mov    rdi,rbp
    5521:	mov    DWORD PTR [rbx],r12d
    5524:	call   38d0 <perror@plt>
    5529:	pop    rbx
    552a:	pop    rbp
    552b:	mov    DWORD PTR [rip+0x14b4f],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5535:	pop    r12
    5537:	ret    
    5538:	nop    DWORD PTR [rax+rax*1+0x0]
    5540:	push   rbx
    5541:	test   rsi,rsi
    5544:	je     5580 <__ctype_b_loc@plt+0x1c10>
    5546:	mov    r8,rdi
    5549:	mov    rbx,rsi
    554c:	mov    rdx,rsi
    554f:	mov    rsi,r8
    5552:	lea    rdi,[rip+0x14be7]        # 1a140 <stderr@@GLIBC_2.2.5+0x100>
    5559:	call   3720 <memcmp@plt>
    555e:	mov    r8d,eax
    5561:	xor    eax,eax
    5563:	test   r8d,r8d
    5566:	jne    5576 <__ctype_b_loc@plt+0x1c06>
    5568:	lea    rax,[rip+0x14bd1]        # 1a140 <stderr@@GLIBC_2.2.5+0x100>
    556f:	cmp    BYTE PTR [rax+rbx*1],0x0
    5573:	sete   al
    5576:	pop    rbx
    5577:	ret    
    5578:	nop    DWORD PTR [rax+rax*1+0x0]
    5580:	mov    edx,0x1
    5585:	mov    ebx,0x1
    558a:	lea    r8,[rip+0xdd5f]        # 132f0 <__ctype_b_loc@plt+0xf980>
    5591:	jmp    554f <__ctype_b_loc@plt+0x1bdf>
    5593:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    559e:	xchg   ax,ax
    55a0:	push   rbp
    55a1:	mov    rbp,rdi
    55a4:	push   rbx
    55a5:	mov    rbx,rsi
    55a8:	sub    rsp,0x8
    55ac:	call   5540 <__ctype_b_loc@plt+0x1bd0>
    55b1:	mov    r8d,eax
    55b4:	mov    eax,DWORD PTR [rip+0x12a5a]        # 18014 <__ctype_b_loc@plt+0x146a4>
    55ba:	test   r8b,r8b
    55bd:	jne    55fc <__ctype_b_loc@plt+0x1c8c>
    55bf:	test   eax,eax
    55c1:	jns    5620 <__ctype_b_loc@plt+0x1cb0>
    55c3:	mov    rdx,rbx
    55c6:	test   rbx,rbx
    55c9:	je     5608 <__ctype_b_loc@plt+0x1c98>
    55cb:	mov    ecx,0x400
    55d0:	mov    rsi,rbp
    55d3:	lea    rdi,[rip+0x14b66]        # 1a140 <stderr@@GLIBC_2.2.5+0x100>
    55da:	call   3790 <__memcpy_chk@plt>
    55df:	lea    rdi,[rip+0x14b5a]        # 1a140 <stderr@@GLIBC_2.2.5+0x100>
    55e6:	mov    esi,0x10000
    55eb:	xor    eax,eax
    55ed:	mov    BYTE PTR [rdi+rbx*1],0x0
    55f1:	call   dfe0 <__ctype_b_loc@plt+0xa670>
    55f6:	mov    DWORD PTR [rip+0x12a18],eax        # 18014 <__ctype_b_loc@plt+0x146a4>
    55fc:	add    rsp,0x8
    5600:	pop    rbx
    5601:	pop    rbp
    5602:	ret    
    5603:	nop    DWORD PTR [rax+rax*1+0x0]
    5608:	mov    edx,0x1
    560d:	mov    ebx,0x1
    5612:	lea    rbp,[rip+0xdcd7]        # 132f0 <__ctype_b_loc@plt+0xf980>
    5619:	jmp    55cb <__ctype_b_loc@plt+0x1c5b>
    561b:	nop    DWORD PTR [rax+rax*1+0x0]
    5620:	mov    edi,eax
    5622:	call   36d0 <close@plt>
    5627:	mov    rdx,rbx
    562a:	test   rbx,rbx
    562d:	jne    55cb <__ctype_b_loc@plt+0x1c5b>
    562f:	jmp    5608 <__ctype_b_loc@plt+0x1c98>
    5631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    563c:	nop    DWORD PTR [rax+0x0]
    5640:	push   r12
    5642:	and    esi,0x2
    5645:	lea    r12,[rip+0x9e9b4]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    564c:	push   rbp
    564d:	mov    ebp,esi
    564f:	push   rbx
    5650:	mov    rbx,rdi
    5653:	sub    rsp,0x10
    5657:	mov    rax,QWORD PTR fs:0x28
    5660:	mov    QWORD PTR [rsp+0x8],rax
    5665:	xor    eax,eax
    5667:	test   rdi,rdi
    566a:	je     56a0 <__ctype_b_loc@plt+0x1d30>
    566c:	nop    DWORD PTR [rax+0x0]
    5670:	mov    eax,DWORD PTR [rip+0x48dae]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5676:	cmp    eax,DWORD PTR [rip+0x9c9a8]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    567c:	jae    56d5 <__ctype_b_loc@plt+0x1d65>
    567e:	lea    edx,[rax+0x1]
    5681:	movzx  eax,BYTE PTR [r12+rax*1]
    5686:	mov    DWORD PTR [rip+0x48d98],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    568c:	mov    BYTE PTR [rsp+0x7],al
    5690:	test   ebp,ebp
    5692:	jne    56e4 <__ctype_b_loc@plt+0x1d74>
    5694:	cmp    rbx,0xffffffffffffffff
    5698:	je     56c0 <__ctype_b_loc@plt+0x1d50>
    569a:	sub    rbx,0x1
    569e:	jne    5670 <__ctype_b_loc@plt+0x1d00>
    56a0:	mov    rax,QWORD PTR [rsp+0x8]
    56a5:	xor    rax,QWORD PTR fs:0x28
    56ae:	jne    56f5 <__ctype_b_loc@plt+0x1d85>
    56b0:	add    rsp,0x10
    56b4:	pop    rbx
    56b5:	pop    rbp
    56b6:	pop    r12
    56b8:	ret    
    56b9:	nop    DWORD PTR [rax+0x0]
    56c0:	cmp    BYTE PTR [rsp+0x7],0x0
    56c5:	je     56a0 <__ctype_b_loc@plt+0x1d30>
    56c7:	mov    eax,DWORD PTR [rip+0x48d57]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    56cd:	cmp    eax,DWORD PTR [rip+0x9c951]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    56d3:	jb     567e <__ctype_b_loc@plt+0x1d0e>
    56d5:	xor    edi,edi
    56d7:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    56dc:	mov    BYTE PTR [rsp+0x7],al
    56e0:	test   ebp,ebp
    56e2:	je     5694 <__ctype_b_loc@plt+0x1d24>
    56e4:	lea    rdi,[rsp+0x7]
    56e9:	mov    esi,0x1
    56ee:	call   cf80 <__ctype_b_loc@plt+0x9610>
    56f3:	jmp    5694 <__ctype_b_loc@plt+0x1d24>
    56f5:	call   3680 <__stack_chk_fail@plt>
    56fa:	nop    WORD PTR [rax+rax*1+0x0]
    5700:	push   r15
    5702:	push   r14
    5704:	push   r13
    5706:	push   r12
    5708:	push   rbp
    5709:	mov    ebp,edi
    570b:	push   rbx
    570c:	sub    rsp,0x38
    5710:	mov    esi,DWORD PTR [rip+0x1531a]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    5716:	mov    ecx,DWORD PTR [rip+0x9c908]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    571c:	mov    rax,QWORD PTR fs:0x28
    5725:	mov    QWORD PTR [rsp+0x28],rax
    572a:	xor    eax,eax
    572c:	mov    eax,DWORD PTR [rip+0x48cf2]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5732:	test   esi,esi
    5734:	je     5744 <__ctype_b_loc@plt+0x1dd4>
    5736:	mov    edx,DWORD PTR [rip+0x14958]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    573c:	test   edx,edx
    573e:	jne    5890 <__ctype_b_loc@plt+0x1f20>
    5744:	cmp    eax,ecx
    5746:	jae    5d50 <__ctype_b_loc@plt+0x23e0>
    574c:	lea    edx,[rax+0x1]
    574f:	lea    rsi,[rip+0x9e8aa]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5756:	mov    DWORD PTR [rip+0x48cc8],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    575c:	movzx  eax,BYTE PTR [rsi+rax*1]
    5760:	mov    BYTE PTR [rsp+0x1e],al
    5764:	test   al,al
    5766:	jne    5860 <__ctype_b_loc@plt+0x1ef0>
    576c:	cmp    ecx,edx
    576e:	jbe    5fb8 <__ctype_b_loc@plt+0x2648>
    5774:	lea    eax,[rdx+0x1]
    5777:	mov    DWORD PTR [rip+0x48ca7],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    577d:	lea    rax,[rip+0x9e87c]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5784:	movzx  r12d,BYTE PTR [rax+rdx*1]
    5789:	mov    eax,r12d
    578c:	mov    BYTE PTR [rsp+0x1f],al
    5790:	xor    ebx,ebx
    5792:	mov    DWORD PTR [rip+0x12884],0xffffffff        # 18020 <__ctype_b_loc@plt+0x146b0>
    579c:	mov    eax,DWORD PTR [rip+0x15276]        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    57a2:	mov    QWORD PTR [rip+0xde893],0x0        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    57ad:	mov    DWORD PTR [rip+0x15265],0x0        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    57b7:	add    eax,0x1
    57ba:	cmp    WORD PTR [rsp+0x1e],0x8b1f
    57c1:	mov    DWORD PTR [rip+0x15251],eax        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    57c7:	je     58e0 <__ctype_b_loc@plt+0x1f70>
    57cd:	cmp    WORD PTR [rsp+0x1e],0x9e1f
    57d4:	je     58e0 <__ctype_b_loc@plt+0x1f70>
    57da:	cmp    WORD PTR [rsp+0x1e],0x4b50
    57e1:	jne    57f0 <__ctype_b_loc@plt+0x1e80>
    57e3:	cmp    DWORD PTR [rip+0x48c3a],0x2        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    57ea:	je     6198 <__ctype_b_loc@plt+0x2828>
    57f0:	cmp    WORD PTR [rsp+0x1e],0x1e1f
    57f7:	je     5ed0 <__ctype_b_loc@plt+0x2560>
    57fd:	cmp    WORD PTR [rsp+0x1e],0x9d1f
    5804:	jne    6100 <__ctype_b_loc@plt+0x2790>
    580a:	lea    rax,[rip+0x658f]        # bda0 <__ctype_b_loc@plt+0x8430>
    5811:	mov    r8d,0x1
    5817:	mov    DWORD PTR [rip+0x127ff],0x1        # 18020 <__ctype_b_loc@plt+0x146b0>
    5821:	mov    DWORD PTR [rip+0x151f1],0x1        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    582b:	mov    QWORD PTR [rip+0x1289e],rax        # 180d0 <__ctype_b_loc@plt+0x14760>
    5832:	nop    WORD PTR [rax+rax*1+0x0]
    5838:	mov    rax,QWORD PTR [rsp+0x28]
    583d:	xor    rax,QWORD PTR fs:0x28
    5846:	jne    6336 <__ctype_b_loc@plt+0x29c6>
    584c:	add    rsp,0x38
    5850:	mov    eax,r8d
    5853:	pop    rbx
    5854:	pop    rbp
    5855:	pop    r12
    5857:	pop    r13
    5859:	pop    r14
    585b:	pop    r15
    585d:	ret    
    585e:	xchg   ax,ax
    5860:	cmp    ecx,edx
    5862:	jbe    5fa8 <__ctype_b_loc@plt+0x2638>
    5868:	lea    eax,[rdx+0x1]
    586b:	mov    DWORD PTR [rip+0x48bb3],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5871:	lea    rax,[rip+0x9e788]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5878:	movzx  eax,BYTE PTR [rax+rdx*1]
    587c:	mov    BYTE PTR [rsp+0x1f],al
    5880:	xor    r12d,r12d
    5883:	xor    ebx,ebx
    5885:	jmp    5792 <__ctype_b_loc@plt+0x1e22>
    588a:	nop    WORD PTR [rax+rax*1+0x0]
    5890:	cmp    eax,ecx
    5892:	jae    5ef8 <__ctype_b_loc@plt+0x2588>
    5898:	lea    edx,[rax+0x1]
    589b:	lea    rsi,[rip+0x9e75e]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    58a2:	movzx  ebx,BYTE PTR [rsi+rax*1]
    58a6:	mov    DWORD PTR [rip+0x48b78],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    58ac:	mov    eax,ebx
    58ae:	mov    BYTE PTR [rsp+0x1e],al
    58b2:	cmp    edx,ecx
    58b4:	jae    6088 <__ctype_b_loc@plt+0x2718>
    58ba:	lea    eax,[rdx+0x1]
    58bd:	mov    DWORD PTR [rip+0x48b61],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    58c3:	lea    rax,[rip+0x9e736]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    58ca:	movzx  r12d,BYTE PTR [rax+rdx*1]
    58cf:	mov    eax,r12d
    58d2:	mov    BYTE PTR [rsp+0x1f],al
    58d6:	jmp    5792 <__ctype_b_loc@plt+0x1e22>
    58db:	nop    DWORD PTR [rax+rax*1+0x0]
    58e0:	mov    eax,DWORD PTR [rip+0x48b3e]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    58e6:	cmp    eax,DWORD PTR [rip+0x9c738]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    58ec:	jae    5d40 <__ctype_b_loc@plt+0x23d0>
    58f2:	lea    edx,[rax+0x1]
    58f5:	mov    DWORD PTR [rip+0x48b29],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    58fb:	lea    rdx,[rip+0x9e6fe]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5902:	movzx  eax,BYTE PTR [rdx+rax*1]
    5906:	mov    DWORD PTR [rip+0x12714],eax        # 18020 <__ctype_b_loc@plt+0x146b0>
    590c:	cmp    eax,0x8
    590f:	jne    62d5 <__ctype_b_loc@plt+0x2965>
    5915:	lea    rax,[rip+0x71a4]        # cac0 <__ctype_b_loc@plt+0x9150>
    591c:	mov    QWORD PTR [rip+0x127ad],rax        # 180d0 <__ctype_b_loc@plt+0x14760>
    5923:	mov    eax,DWORD PTR [rip+0x48afb]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5929:	cmp    eax,DWORD PTR [rip+0x9c6f5]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    592f:	jae    5d70 <__ctype_b_loc@plt+0x2400>
    5935:	lea    edx,[rax+0x1]
    5938:	mov    DWORD PTR [rip+0x48ae6],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    593e:	lea    rdx,[rip+0x9e6bb]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5945:	movzx  ebx,BYTE PTR [rdx+rax*1]
    5949:	test   bl,0x20
    594c:	jne    6310 <__ctype_b_loc@plt+0x29a0>
    5952:	test   bl,0xc0
    5955:	jne    5d80 <__ctype_b_loc@plt+0x2410>
    595b:	mov    eax,DWORD PTR [rip+0x48ac3]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5961:	mov    edx,DWORD PTR [rip+0x9c6bd]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5967:	cmp    eax,edx
    5969:	jae    5dd2 <__ctype_b_loc@plt+0x2462>
    596f:	lea    ecx,[rax+0x1]
    5972:	lea    rsi,[rip+0x9e687]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5979:	mov    DWORD PTR [rip+0x48aa5],ecx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    597f:	movzx  ebp,BYTE PTR [rsi+rax*1]
    5983:	cmp    ecx,edx
    5985:	jae    5df0 <__ctype_b_loc@plt+0x2480>
    598b:	lea    rax,[rip+0x9e66e]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5992:	lea    esi,[rcx+0x1]
    5995:	movzx  r13d,BYTE PTR [rax+rcx*1]
    599a:	mov    DWORD PTR [rip+0x48a84],esi        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    59a0:	shl    r13,0x8
    59a4:	or     r13,rbp
    59a7:	cmp    esi,edx
    59a9:	jae    5e15 <__ctype_b_loc@plt+0x24a5>
    59af:	lea    rax,[rip+0x9e64a]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    59b6:	lea    ecx,[rsi+0x1]
    59b9:	movzx  ebp,BYTE PTR [rax+rsi*1]
    59bd:	mov    DWORD PTR [rip+0x48a61],ecx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    59c3:	shl    rbp,0x10
    59c7:	or     rbp,r13
    59ca:	cmp    edx,ecx
    59cc:	jbe    5e3a <__ctype_b_loc@plt+0x24ca>
    59d2:	lea    eax,[rcx+0x1]
    59d5:	mov    DWORD PTR [rip+0x48a49],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    59db:	lea    rax,[rip+0x9e61e]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    59e2:	movzx  r8d,BYTE PTR [rax+rcx*1]
    59e7:	shl    r8,0x18
    59eb:	or     rbp,r8
    59ee:	je     59fe <__ctype_b_loc@plt+0x208e>
    59f0:	mov    eax,DWORD PTR [rip+0x12632]        # 18028 <__ctype_b_loc@plt+0x146b8>
    59f6:	test   eax,eax
    59f8:	je     5eb0 <__ctype_b_loc@plt+0x2540>
    59fe:	mov    eax,DWORD PTR [rip+0x48a20]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5a04:	mov    ecx,DWORD PTR [rip+0x9c61a]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5a0a:	cmp    eax,ecx
    5a0c:	jae    5e90 <__ctype_b_loc@plt+0x2520>
    5a12:	lea    edx,[rax+0x1]
    5a15:	lea    rsi,[rip+0x9e5e4]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5a1c:	mov    DWORD PTR [rip+0x48a02],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5a22:	movzx  eax,BYTE PTR [rsi+rax*1]
    5a26:	mov    BYTE PTR [rsp+0x26],al
    5a2a:	cmp    edx,ecx
    5a2c:	jae    5e80 <__ctype_b_loc@plt+0x2510>
    5a32:	lea    eax,[rdx+0x1]
    5a35:	mov    DWORD PTR [rip+0x489e9],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5a3b:	lea    rax,[rip+0x9e5be]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5a42:	movzx  eax,BYTE PTR [rax+rdx*1]
    5a46:	mov    r13d,ebx
    5a49:	mov    BYTE PTR [rsp+0x27],al
    5a4d:	and    r13d,0x2
    5a51:	jne    5e50 <__ctype_b_loc@plt+0x24e0>
    5a57:	test   bl,0x4
    5a5a:	je     5ad8 <__ctype_b_loc@plt+0x2168>
    5a5c:	mov    eax,DWORD PTR [rip+0x489c2]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5a62:	mov    ecx,DWORD PTR [rip+0x9c5bc]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5a68:	cmp    eax,ecx
    5a6a:	jae    6058 <__ctype_b_loc@plt+0x26e8>
    5a70:	lea    edx,[rax+0x1]
    5a73:	lea    rsi,[rip+0x9e586]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5a7a:	mov    DWORD PTR [rip+0x489a4],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5a80:	movzx  eax,BYTE PTR [rsi+rax*1]
    5a84:	mov    BYTE PTR [rsp+0x1c],al
    5a88:	movzx  r14d,al
    5a8c:	cmp    ecx,edx
    5a8e:	jbe    6048 <__ctype_b_loc@plt+0x26d8>
    5a94:	lea    eax,[rdx+0x1]
    5a97:	mov    DWORD PTR [rip+0x48987],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5a9d:	lea    rax,[rip+0x9e55c]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5aa4:	movzx  eax,BYTE PTR [rax+rdx*1]
    5aa8:	movzx  ebp,al
    5aab:	mov    BYTE PTR [rsp+0x1d],al
    5aaf:	shl    ebp,0x8
    5ab2:	or     ebp,r14d
    5ab5:	mov    r14d,DWORD PTR [rip+0x145d4]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    5abc:	test   r14d,r14d
    5abf:	jne    6018 <__ctype_b_loc@plt+0x26a8>
    5ac5:	test   r13b,r13b
    5ac8:	jne    6000 <__ctype_b_loc@plt+0x2690>
    5ace:	movzx  esi,bl
    5ad1:	mov    edi,ebp
    5ad3:	call   5640 <__ctype_b_loc@plt+0x1cd0>
    5ad8:	test   bl,0x8
    5adb:	je     5ba0 <__ctype_b_loc@plt+0x2230>
    5ae1:	mov    ebp,DWORD PTR [rip+0x12545]        # 1802c <__ctype_b_loc@plt+0x146bc>
    5ae7:	test   ebp,ebp
    5ae9:	jne    5c30 <__ctype_b_loc@plt+0x22c0>
    5aef:	mov    r11d,DWORD PTR [rip+0x1459e]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    5af6:	test   r11d,r11d
    5af9:	jne    5c20 <__ctype_b_loc@plt+0x22b0>
    5aff:	cmp    DWORD PTR [rip+0x14f12],0x1        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    5b06:	jg     5c30 <__ctype_b_loc@plt+0x22c0>
    5b0c:	lea    rdi,[rip+0x8ad0d]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    5b13:	lea    rbp,[rip+0x9e4e6]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5b1a:	call   d160 <__ctype_b_loc@plt+0x97f0>
    5b1f:	lea    r15,[rip+0x8b0fa]        # 90c20 <stderr@@GLIBC_2.2.5+0x76be0>
    5b26:	mov    QWORD PTR [rsp+0x8],rax
    5b2b:	mov    r14,rax
    5b2e:	jmp    5b52 <__ctype_b_loc@plt+0x21e2>
    5b30:	lea    edx,[rax+0x1]
    5b33:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    5b38:	mov    DWORD PTR [rip+0x488e6],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5b3e:	mov    BYTE PTR [r14],al
    5b41:	add    r14,0x1
    5b45:	test   al,al
    5b47:	je     5b70 <__ctype_b_loc@plt+0x2200>
    5b49:	cmp    r14,r15
    5b4c:	jae    632a <__ctype_b_loc@plt+0x29ba>
    5b52:	mov    eax,DWORD PTR [rip+0x488cc]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5b58:	cmp    eax,DWORD PTR [rip+0x9c4c6]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5b5e:	jb     5b30 <__ctype_b_loc@plt+0x21c0>
    5b60:	xor    edi,edi
    5b62:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5b67:	jmp    5b3e <__ctype_b_loc@plt+0x21ce>
    5b69:	nop    DWORD PTR [rax+0x0]
    5b70:	test   r13b,r13b
    5b73:	jne    62c0 <__ctype_b_loc@plt+0x2950>
    5b79:	mov    r15,QWORD PTR [rsp+0x8]
    5b7e:	mov    rdi,r15
    5b81:	call   d160 <__ctype_b_loc@plt+0x97f0>
    5b86:	mov    rdi,rax
    5b89:	mov    r14,rax
    5b8c:	call   3650 <strlen@plt>
    5b91:	mov    rsi,r14
    5b94:	mov    rdi,r15
    5b97:	lea    rdx,[rax+0x1]
    5b9b:	call   3880 <memmove@plt>
    5ba0:	test   bl,0x10
    5ba3:	jne    5c48 <__ctype_b_loc@plt+0x22d8>
    5ba9:	test   r13b,r13b
    5bac:	jne    5c60 <__ctype_b_loc@plt+0x22f0>
    5bb2:	cmp    DWORD PTR [rip+0x14e5f],0x1        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    5bb9:	mov    r8d,DWORD PTR [rip+0x12460]        # 18020 <__ctype_b_loc@plt+0x146b0>
    5bc0:	je     5d18 <__ctype_b_loc@plt+0x23a8>
    5bc6:	test   r8d,r8d
    5bc9:	jns    5838 <__ctype_b_loc@plt+0x1ec8>
    5bcf:	cmp    BYTE PTR [rsp+0x1e],0x0
    5bd4:	jne    5be9 <__ctype_b_loc@plt+0x2279>
    5bd6:	test   r12d,r12d
    5bd9:	je     5f70 <__ctype_b_loc@plt+0x2600>
    5bdf:	cmp    r12d,0xffffffff
    5be3:	je     5f38 <__ctype_b_loc@plt+0x25c8>
    5be9:	mov    edx,DWORD PTR [rip+0x1449d]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    5bef:	test   edx,edx
    5bf1:	je     5fd0 <__ctype_b_loc@plt+0x2660>
    5bf7:	mov    eax,DWORD PTR [rip+0x14487]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5bfd:	mov    r8d,0xfffffffe
    5c03:	test   eax,eax
    5c05:	jne    5838 <__ctype_b_loc@plt+0x1ec8>
    5c0b:	mov    DWORD PTR [rip+0x1446f],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5c15:	jmp    5838 <__ctype_b_loc@plt+0x1ec8>
    5c1a:	nop    WORD PTR [rax+rax*1+0x0]
    5c20:	mov    r10d,DWORD PTR [rip+0x14dfd]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    5c27:	test   r10d,r10d
    5c2a:	jne    5aff <__ctype_b_loc@plt+0x218f>
    5c30:	movzx  esi,bl
    5c33:	mov    rdi,0xffffffffffffffff
    5c3a:	call   5640 <__ctype_b_loc@plt+0x1cd0>
    5c3f:	test   bl,0x10
    5c42:	je     5ba9 <__ctype_b_loc@plt+0x2239>
    5c48:	movzx  esi,bl
    5c4b:	mov    rdi,0xffffffffffffffff
    5c52:	call   5640 <__ctype_b_loc@plt+0x1cd0>
    5c57:	test   r13b,r13b
    5c5a:	je     5bb2 <__ctype_b_loc@plt+0x2242>
    5c60:	lea    rdi,[rsp+0x1e]
    5c65:	xor    esi,esi
    5c67:	call   cf80 <__ctype_b_loc@plt+0x9610>
    5c6c:	mov    ecx,DWORD PTR [rip+0x9c3b2]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5c72:	movzx  ebp,ax
    5c75:	mov    eax,DWORD PTR [rip+0x487a9]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5c7b:	cmp    eax,ecx
    5c7d:	jae    5f18 <__ctype_b_loc@plt+0x25a8>
    5c83:	lea    edx,[rax+0x1]
    5c86:	lea    rsi,[rip+0x9e373]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5c8d:	mov    DWORD PTR [rip+0x48791],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5c93:	movzx  ebx,BYTE PTR [rsi+rax*1]
    5c97:	cmp    edx,ecx
    5c99:	jae    60a0 <__ctype_b_loc@plt+0x2730>
    5c9f:	lea    eax,[rdx+0x1]
    5ca2:	mov    DWORD PTR [rip+0x4877c],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5ca8:	lea    rax,[rip+0x9e351]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5caf:	movzx  r8d,BYTE PTR [rax+rdx*1]
    5cb4:	shl    r8d,0x8
    5cb8:	or     r8d,ebx
    5cbb:	cmp    ebp,r8d
    5cbe:	je     5bb2 <__ctype_b_loc@plt+0x2242>
    5cc4:	mov    rdx,QWORD PTR [rip+0x9c33d]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    5ccb:	mov    rdi,QWORD PTR [rip+0x1436e]        # 1a040 <stderr@@GLIBC_2.2.5>
    5cd2:	xor    eax,eax
    5cd4:	mov    r9d,ebp
    5cd7:	lea    rcx,[rip+0x18322]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    5cde:	lea    rsi,[rip+0xc4d3]        # 121b8 <__ctype_b_loc@plt+0xe848>
    5ce5:	call   f390 <__ctype_b_loc@plt+0xba20>
    5cea:	cmp    DWORD PTR [rip+0x14d3f],0x1        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    5cf1:	mov    DWORD PTR [rip+0x14389],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5cfb:	jle    6221 <__ctype_b_loc@plt+0x28b1>
    5d01:	cmp    DWORD PTR [rip+0x14d10],0x1        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    5d08:	mov    r8d,DWORD PTR [rip+0x12311]        # 18020 <__ctype_b_loc@plt+0x146b0>
    5d0f:	jne    5bc6 <__ctype_b_loc@plt+0x2256>
    5d15:	nop    DWORD PTR [rax]
    5d18:	mov    eax,DWORD PTR [rip+0x48706]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5d1e:	add    eax,0x8
    5d21:	mov    QWORD PTR [rip+0xde318],rax        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    5d28:	test   r8d,r8d
    5d2b:	jns    5838 <__ctype_b_loc@plt+0x1ec8>
    5d31:	jmp    61f4 <__ctype_b_loc@plt+0x2884>
    5d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d40:	xor    edi,edi
    5d42:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5d47:	jmp    5906 <__ctype_b_loc@plt+0x1f96>
    5d4c:	nop    DWORD PTR [rax+0x0]
    5d50:	xor    edi,edi
    5d52:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5d57:	mov    edx,DWORD PTR [rip+0x486c7]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5d5d:	mov    ecx,DWORD PTR [rip+0x9c2c1]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5d63:	jmp    5760 <__ctype_b_loc@plt+0x1df0>
    5d68:	nop    DWORD PTR [rax+rax*1+0x0]
    5d70:	xor    edi,edi
    5d72:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5d77:	mov    ebx,eax
    5d79:	jmp    5949 <__ctype_b_loc@plt+0x1fd9>
    5d7e:	xchg   ax,ax
    5d80:	mov    rdx,QWORD PTR [rip+0x9c281]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    5d87:	mov    rdi,QWORD PTR [rip+0x142b2]        # 1a040 <stderr@@GLIBC_2.2.5>
    5d8e:	xor    eax,eax
    5d90:	movzx  r8d,bl
    5d94:	lea    rcx,[rip+0x18265]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    5d9b:	lea    rsi,[rip+0xc35e]        # 12100 <__ctype_b_loc@plt+0xe790>
    5da2:	call   f390 <__ctype_b_loc@plt+0xba20>
    5da7:	cmp    DWORD PTR [rip+0x14c82],0x1        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    5dae:	mov    DWORD PTR [rip+0x142cc],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5db8:	jle    6221 <__ctype_b_loc@plt+0x28b1>
    5dbe:	mov    eax,DWORD PTR [rip+0x48660]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5dc4:	mov    edx,DWORD PTR [rip+0x9c25a]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5dca:	cmp    eax,edx
    5dcc:	jb     596f <__ctype_b_loc@plt+0x1fff>
    5dd2:	xor    edi,edi
    5dd4:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5dd9:	mov    ecx,DWORD PTR [rip+0x48645]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5ddf:	mov    edx,DWORD PTR [rip+0x9c23f]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5de5:	movsxd rbp,eax
    5de8:	cmp    ecx,edx
    5dea:	jb     598b <__ctype_b_loc@plt+0x201b>
    5df0:	xor    edi,edi
    5df2:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5df7:	mov    esi,DWORD PTR [rip+0x48627]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5dfd:	mov    edx,DWORD PTR [rip+0x9c221]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5e03:	movsxd r13,eax
    5e06:	shl    r13,0x8
    5e0a:	or     r13,rbp
    5e0d:	cmp    esi,edx
    5e0f:	jb     59af <__ctype_b_loc@plt+0x203f>
    5e15:	xor    edi,edi
    5e17:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5e1c:	mov    ecx,DWORD PTR [rip+0x48602]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5e22:	mov    edx,DWORD PTR [rip+0x9c1fc]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5e28:	movsxd rbp,eax
    5e2b:	shl    rbp,0x10
    5e2f:	or     rbp,r13
    5e32:	cmp    edx,ecx
    5e34:	ja     59d2 <__ctype_b_loc@plt+0x2062>
    5e3a:	xor    edi,edi
    5e3c:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5e41:	movsxd r8,eax
    5e44:	shl    r8,0x18
    5e48:	jmp    59eb <__ctype_b_loc@plt+0x207b>
    5e4d:	nop    DWORD PTR [rax]
    5e50:	xor    esi,esi
    5e52:	xor    edi,edi
    5e54:	mov    BYTE PTR [rsp+0x20],0x8
    5e59:	mov    BYTE PTR [rsp+0x21],bl
    5e5d:	mov    DWORD PTR [rsp+0x22],ebp
    5e61:	call   cf80 <__ctype_b_loc@plt+0x9610>
    5e66:	lea    rdi,[rsp+0x1e]
    5e6b:	mov    esi,0xa
    5e70:	call   cf80 <__ctype_b_loc@plt+0x9610>
    5e75:	jmp    5a57 <__ctype_b_loc@plt+0x20e7>
    5e7a:	nop    WORD PTR [rax+rax*1+0x0]
    5e80:	xor    edi,edi
    5e82:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5e87:	jmp    5a46 <__ctype_b_loc@plt+0x20d6>
    5e8c:	nop    DWORD PTR [rax+0x0]
    5e90:	xor    edi,edi
    5e92:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5e97:	mov    edx,DWORD PTR [rip+0x48587]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5e9d:	mov    ecx,DWORD PTR [rip+0x9c181]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5ea3:	jmp    5a26 <__ctype_b_loc@plt+0x20b6>
    5ea8:	nop    DWORD PTR [rax+rax*1+0x0]
    5eb0:	test   rbp,rbp
    5eb3:	js     60b8 <__ctype_b_loc@plt+0x2748>
    5eb9:	mov    QWORD PTR [rip+0x9c150],rbp        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    5ec0:	mov    QWORD PTR [rip+0x9c14d],0x0        # a2018 <stderr@@GLIBC_2.2.5+0x87fd8>
    5ecb:	jmp    59fe <__ctype_b_loc@plt+0x208e>
    5ed0:	lea    rax,[rip+0x6699]        # c570 <__ctype_b_loc@plt+0x8c00>
    5ed7:	mov    r8d,0x2
    5edd:	mov    DWORD PTR [rip+0x12139],0x2        # 18020 <__ctype_b_loc@plt+0x146b0>
    5ee7:	mov    QWORD PTR [rip+0x121e2],rax        # 180d0 <__ctype_b_loc@plt+0x14760>
    5eee:	jmp    5838 <__ctype_b_loc@plt+0x1ec8>
    5ef3:	nop    DWORD PTR [rax+rax*1+0x0]
    5ef8:	mov    edi,0x1
    5efd:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5f02:	mov    edx,DWORD PTR [rip+0x4851c]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5f08:	mov    ecx,DWORD PTR [rip+0x9c116]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5f0e:	mov    ebx,eax
    5f10:	jmp    58ae <__ctype_b_loc@plt+0x1f3e>
    5f15:	nop    DWORD PTR [rax]
    5f18:	xor    edi,edi
    5f1a:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5f1f:	mov    edx,DWORD PTR [rip+0x484ff]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5f25:	mov    ecx,DWORD PTR [rip+0x9c0f9]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5f2b:	mov    ebx,eax
    5f2d:	jmp    5c97 <__ctype_b_loc@plt+0x2327>
    5f32:	nop    WORD PTR [rax+rax*1+0x0]
    5f38:	mov    edi,DWORD PTR [rip+0x14152]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    5f3e:	test   edi,edi
    5f40:	je     5f64 <__ctype_b_loc@plt+0x25f4>
    5f42:	mov    esi,DWORD PTR [rip+0x14144]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    5f48:	test   esi,esi
    5f4a:	je     6260 <__ctype_b_loc@plt+0x28f0>
    5f50:	mov    ecx,DWORD PTR [rip+0x1412e]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5f56:	test   ecx,ecx
    5f58:	jne    5f64 <__ctype_b_loc@plt+0x25f4>
    5f5a:	mov    DWORD PTR [rip+0x14120],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    5f64:	mov    r8d,0xfffffffd
    5f6a:	jmp    5838 <__ctype_b_loc@plt+0x1ec8>
    5f6f:	nop
    5f70:	lea    rbx,[rip+0x9e089]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    5f77:	mov    eax,DWORD PTR [rip+0x484a7]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5f7d:	cmp    eax,DWORD PTR [rip+0x9c0a1]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    5f83:	jae    6070 <__ctype_b_loc@plt+0x2700>
    5f89:	lea    edx,[rax+0x1]
    5f8c:	movzx  r12d,BYTE PTR [rbx+rax*1]
    5f91:	mov    DWORD PTR [rip+0x4848d],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    5f97:	test   r12d,r12d
    5f9a:	jne    5bdf <__ctype_b_loc@plt+0x226f>
    5fa0:	jmp    5f77 <__ctype_b_loc@plt+0x2607>
    5fa2:	nop    WORD PTR [rax+rax*1+0x0]
    5fa8:	xor    edi,edi
    5faa:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5faf:	jmp    587c <__ctype_b_loc@plt+0x1f0c>
    5fb4:	nop    DWORD PTR [rax+0x0]
    5fb8:	mov    edi,0x1
    5fbd:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    5fc2:	mov    r12d,eax
    5fc5:	jmp    578c <__ctype_b_loc@plt+0x1e1c>
    5fca:	nop    WORD PTR [rax+rax*1+0x0]
    5fd0:	mov    rdx,QWORD PTR [rip+0x9c031]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    5fd7:	mov    rdi,QWORD PTR [rip+0x14062]        # 1a040 <stderr@@GLIBC_2.2.5>
    5fde:	lea    rcx,[rip+0x1801b]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    5fe5:	xor    eax,eax
    5fe7:	lea    rsi,[rip+0xc242]        # 12230 <__ctype_b_loc@plt+0xe8c0>
    5fee:	call   f390 <__ctype_b_loc@plt+0xba20>
    5ff3:	jmp    5bf7 <__ctype_b_loc@plt+0x2287>
    5ff8:	nop    DWORD PTR [rax+rax*1+0x0]
    6000:	lea    rdi,[rsp+0x1c]
    6005:	mov    esi,0x2
    600a:	call   cf80 <__ctype_b_loc@plt+0x9610>
    600f:	jmp    5ace <__ctype_b_loc@plt+0x215e>
    6014:	nop    DWORD PTR [rax+0x0]
    6018:	mov    rdx,QWORD PTR [rip+0x9bfe9]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    601f:	mov    rdi,QWORD PTR [rip+0x1401a]        # 1a040 <stderr@@GLIBC_2.2.5>
    6026:	xor    eax,eax
    6028:	mov    r8d,ebp
    602b:	lea    rcx,[rip+0x17fce]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6032:	lea    rsi,[rip+0xc127]        # 12160 <__ctype_b_loc@plt+0xe7f0>
    6039:	call   f390 <__ctype_b_loc@plt+0xba20>
    603e:	jmp    5ac5 <__ctype_b_loc@plt+0x2155>
    6043:	nop    DWORD PTR [rax+rax*1+0x0]
    6048:	xor    edi,edi
    604a:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    604f:	jmp    5aa8 <__ctype_b_loc@plt+0x2138>
    6054:	nop    DWORD PTR [rax+0x0]
    6058:	xor    edi,edi
    605a:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    605f:	mov    edx,DWORD PTR [rip+0x483bf]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    6065:	mov    ecx,DWORD PTR [rip+0x9bfb9]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    606b:	jmp    5a84 <__ctype_b_loc@plt+0x2114>
    6070:	mov    edi,0x1
    6075:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    607a:	mov    r12d,eax
    607d:	jmp    5f97 <__ctype_b_loc@plt+0x2627>
    6082:	nop    WORD PTR [rax+rax*1+0x0]
    6088:	mov    edi,0x1
    608d:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    6092:	mov    r12d,eax
    6095:	jmp    58d2 <__ctype_b_loc@plt+0x1f62>
    609a:	nop    WORD PTR [rax+rax*1+0x0]
    60a0:	xor    edi,edi
    60a2:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    60a7:	shl    eax,0x8
    60aa:	mov    r8d,eax
    60ad:	jmp    5cb8 <__ctype_b_loc@plt+0x2348>
    60b2:	nop    WORD PTR [rax+rax*1+0x0]
    60b8:	mov    eax,DWORD PTR [rip+0x13fce]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    60be:	test   eax,eax
    60c0:	je     6290 <__ctype_b_loc@plt+0x2920>
    60c6:	mov    r15d,DWORD PTR [rip+0x13fb7]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    60cd:	test   r15d,r15d
    60d0:	jne    60dc <__ctype_b_loc@plt+0x276c>
    60d2:	mov    DWORD PTR [rip+0x13fa8],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    60dc:	movabs rax,0x7fffffffffffffff
    60e6:	mov    QWORD PTR [rip+0x9bf27],0x3b9ac9ff        # a2018 <stderr@@GLIBC_2.2.5+0x87fd8>
    60f1:	mov    QWORD PTR [rip+0x9bf18],rax        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    60f8:	jmp    59fe <__ctype_b_loc@plt+0x208e>
    60fd:	nop    DWORD PTR [rax]
    6100:	cmp    WORD PTR [rsp+0x1e],0xa01f
    6107:	je     6230 <__ctype_b_loc@plt+0x28c0>
    610d:	mov    r9d,DWORD PTR [rip+0x1491c]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    6114:	test   r9d,r9d
    6117:	je     61eb <__ctype_b_loc@plt+0x287b>
    611d:	mov    r8d,DWORD PTR [rip+0x13f70]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    6124:	test   r8d,r8d
    6127:	je     61eb <__ctype_b_loc@plt+0x287b>
    612d:	mov    r8d,DWORD PTR [rip+0x148f0]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    6134:	test   r8d,r8d
    6137:	jne    61eb <__ctype_b_loc@plt+0x287b>
    613d:	lea    rax,[rip+0x73dc]        # d520 <__ctype_b_loc@plt+0x9bb0>
    6144:	mov    DWORD PTR [rip+0x11ed2],0x0        # 18020 <__ctype_b_loc@plt+0x146b0>
    614e:	mov    QWORD PTR [rip+0x11f7b],rax        # 180d0 <__ctype_b_loc@plt+0x14760>
    6155:	cmp    r12d,0xffffffff
    6159:	je     6162 <__ctype_b_loc@plt+0x27f2>
    615b:	sub    DWORD PTR [rip+0x482c2],0x1        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    6162:	mov    DWORD PTR [rip+0x148b0],0x1        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    616c:	cmp    ebx,0xffffffff
    616f:	je     5838 <__ctype_b_loc@plt+0x1ec8>
    6175:	lea    rsi,[rsp+0x1e]
    617a:	mov    edx,0x1
    617f:	mov    edi,0x1
    6184:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    6189:	add    QWORD PTR [rip+0x9be6f],0x1        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    6191:	jmp    61d5 <__ctype_b_loc@plt+0x2865>
    6193:	nop    DWORD PTR [rax+rax*1+0x0]
    6198:	cmp    DWORD PTR [rip+0x9de5e],0x4034b50        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    61a2:	jne    57f0 <__ctype_b_loc@plt+0x1e80>
    61a8:	lea    rax,[rip+0x6911]        # cac0 <__ctype_b_loc@plt+0x9150>
    61af:	mov    edi,ebp
    61b1:	mov    DWORD PTR [rip+0x48269],0x0        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    61bb:	mov    QWORD PTR [rip+0x11f0e],rax        # 180d0 <__ctype_b_loc@plt+0x14760>
    61c2:	call   c9c0 <__ctype_b_loc@plt+0x9050>
    61c7:	test   eax,eax
    61c9:	jne    6221 <__ctype_b_loc@plt+0x28b1>
    61cb:	mov    DWORD PTR [rip+0x14847],0x1        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    61d5:	mov    r8d,DWORD PTR [rip+0x11e44]        # 18020 <__ctype_b_loc@plt+0x146b0>
    61dc:	test   r8d,r8d
    61df:	jns    5838 <__ctype_b_loc@plt+0x1ec8>
    61e5:	mov    eax,DWORD PTR [rip+0x1482d]        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    61eb:	cmp    eax,0x1
    61ee:	jne    5bcf <__ctype_b_loc@plt+0x225f>
    61f4:	mov    rdx,QWORD PTR [rip+0x9be0d]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    61fb:	lea    rcx,[rip+0x17dfe]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6202:	lea    rsi,[rip+0xca64]        # 12c6d <__ctype_b_loc@plt+0xf2fd>
    6209:	mov    rdi,QWORD PTR [rip+0x13e30]        # 1a040 <stderr@@GLIBC_2.2.5>
    6210:	xor    eax,eax
    6212:	call   f390 <__ctype_b_loc@plt+0xba20>
    6217:	mov    DWORD PTR [rip+0x13e63],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    6221:	mov    r8d,0xffffffff
    6227:	jmp    5838 <__ctype_b_loc@plt+0x1ec8>
    622c:	nop    DWORD PTR [rax+0x0]
    6230:	lea    rax,[rip+0x55a9]        # b7e0 <__ctype_b_loc@plt+0x7e70>
    6237:	mov    r8d,0x3
    623d:	mov    DWORD PTR [rip+0x11dd9],0x3        # 18020 <__ctype_b_loc@plt+0x146b0>
    6247:	mov    DWORD PTR [rip+0x147cb],0x1        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    6251:	mov    QWORD PTR [rip+0x11e78],rax        # 180d0 <__ctype_b_loc@plt+0x14760>
    6258:	jmp    5838 <__ctype_b_loc@plt+0x1ec8>
    625d:	nop    DWORD PTR [rax]
    6260:	mov    rdx,QWORD PTR [rip+0x9bda1]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    6267:	mov    rdi,QWORD PTR [rip+0x13dd2]        # 1a040 <stderr@@GLIBC_2.2.5>
    626e:	lea    rcx,[rip+0x17d8b]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6275:	xor    eax,eax
    6277:	lea    rsi,[rip+0xbf7a]        # 121f8 <__ctype_b_loc@plt+0xe888>
    627e:	call   f390 <__ctype_b_loc@plt+0xba20>
    6283:	jmp    5f50 <__ctype_b_loc@plt+0x25e0>
    6288:	nop    DWORD PTR [rax+rax*1+0x0]
    6290:	mov    rdx,QWORD PTR [rip+0x9bd71]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    6297:	mov    rdi,QWORD PTR [rip+0x13da2]        # 1a040 <stderr@@GLIBC_2.2.5>
    629e:	xor    eax,eax
    62a0:	mov    r8,rbp
    62a3:	lea    rcx,[rip+0x17d56]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    62aa:	lea    rsi,[rip+0xbe77]        # 12128 <__ctype_b_loc@plt+0xe7b8>
    62b1:	call   f390 <__ctype_b_loc@plt+0xba20>
    62b6:	jmp    60c6 <__ctype_b_loc@plt+0x2756>
    62bb:	nop    DWORD PTR [rax+rax*1+0x0]
    62c0:	mov    rdi,QWORD PTR [rsp+0x8]
    62c5:	mov    rsi,r14
    62c8:	sub    rsi,rdi
    62cb:	call   cf80 <__ctype_b_loc@plt+0x9610>
    62d0:	jmp    5b79 <__ctype_b_loc@plt+0x2209>
    62d5:	mov    rdx,QWORD PTR [rip+0x9bd2c]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    62dc:	mov    rdi,QWORD PTR [rip+0x13d5d]        # 1a040 <stderr@@GLIBC_2.2.5>
    62e3:	mov    r8d,eax
    62e6:	xor    eax,eax
    62e8:	lea    rcx,[rip+0x17d11]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    62ef:	lea    rsi,[rip+0xbdb2]        # 120a8 <__ctype_b_loc@plt+0xe738>
    62f6:	call   f390 <__ctype_b_loc@plt+0xba20>
    62fb:	mov    r8d,0xffffffff
    6301:	mov    DWORD PTR [rip+0x13d79],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    630b:	jmp    5838 <__ctype_b_loc@plt+0x1ec8>
    6310:	mov    rdx,QWORD PTR [rip+0x9bcf1]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    6317:	lea    rcx,[rip+0x17ce2]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    631e:	lea    rsi,[rip+0xbdb3]        # 120d8 <__ctype_b_loc@plt+0xe768>
    6325:	jmp    6209 <__ctype_b_loc@plt+0x2899>
    632a:	lea    rdi,[rip+0xbe5f]        # 12190 <__ctype_b_loc@plt+0xe820>
    6331:	call   d310 <__ctype_b_loc@plt+0x99a0>
    6336:	call   3680 <__stack_chk_fail@plt>
    633b:	nop    DWORD PTR [rax+rax*1+0x0]
    6340:	push   r15
    6342:	push   r14
    6344:	push   r13
    6346:	push   r12
    6348:	push   rbp
    6349:	push   rbx
    634a:	sub    rsp,0x58
    634e:	mov    r13,QWORD PTR [rip+0x11cf3]        # 18048 <__ctype_b_loc@plt+0x146d8>
    6355:	mov    r12,QWORD PTR [rip+0x146ac]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    635c:	mov    QWORD PTR [rsp+0x8],rdi
    6361:	mov    rax,QWORD PTR fs:0x28
    636a:	mov    QWORD PTR [rsp+0x48],rax
    636f:	xor    eax,eax
    6371:	test   r13,r13
    6374:	je     63ba <__ctype_b_loc@plt+0x2a4a>
    6376:	mov    rbp,QWORD PTR [rip+0x14683]        # 1aa00 <stderr@@GLIBC_2.2.5+0x9c0>
    637d:	lea    rbx,[rip+0x11cc4]        # 18048 <__ctype_b_loc@plt+0x146d8>
    6384:	nop    DWORD PTR [rax+0x0]
    6388:	mov    rdi,r13
    638b:	call   3650 <strlen@plt>
    6390:	cmp    rbp,rax
    6393:	jae    63ad <__ctype_b_loc@plt+0x2a3d>
    6395:	sub    rax,rbp
    6398:	mov    rdi,r12
    639b:	lea    rsi,[r13+rax*1+0x0]
    63a0:	call   3750 <strcmp@plt>
    63a5:	test   eax,eax
    63a7:	je     6538 <__ctype_b_loc@plt+0x2bc8>
    63ad:	mov    r13,QWORD PTR [rbx+0x8]
    63b1:	add    rbx,0x8
    63b5:	test   r13,r13
    63b8:	jne    6388 <__ctype_b_loc@plt+0x2a18>
    63ba:	mov    rdi,r12
    63bd:	call   eff0 <__ctype_b_loc@plt+0xb680>
    63c2:	mov    rdi,rax
    63c5:	mov    QWORD PTR [rsp+0x10],rax
    63ca:	call   d100 <__ctype_b_loc@plt+0x9790>
    63cf:	lea    rax,[rip+0x11c6a]        # 18040 <__ctype_b_loc@plt+0x146d0>
    63d6:	xor    edx,edx
    63d8:	mov    rbp,rax
    63db:	mov    rcx,QWORD PTR [rsp+0x10]
    63e0:	mov    QWORD PTR [rax+rdx*8],rcx
    63e4:	mov    rdx,QWORD PTR [rsp+0x8]
    63e9:	mov    ecx,DWORD PTR [rdx]
    63eb:	add    rdx,0x4
    63ef:	lea    eax,[rcx-0x1010101]
    63f5:	not    ecx
    63f7:	and    eax,ecx
    63f9:	and    eax,0x80808080
    63fe:	je     63e9 <__ctype_b_loc@plt+0x2a79>
    6400:	mov    ecx,eax
    6402:	mov    rsi,QWORD PTR [rsp+0x8]
    6407:	shr    ecx,0x10
    640a:	test   eax,0x8080
    640f:	cmove  eax,ecx
    6412:	lea    rcx,[rdx+0x2]
    6416:	cmove  rdx,rcx
    641a:	mov    ecx,eax
    641c:	add    cl,al
    641e:	sbb    rdx,0x3
    6422:	sub    rdx,rsi
    6425:	mov    DWORD PTR [rsp+0x1c],edx
    6429:	cmp    edx,0x20
    642c:	jg     6510 <__ctype_b_loc@plt+0x2ba0>
    6432:	lea    r14,[rsp+0x20]
    6437:	add    rdx,0x1
    643b:	mov    ecx,0x21
    6440:	mov    rdi,r14
    6443:	call   3790 <__memcpy_chk@plt>
    6448:	mov    rdi,r14
    644b:	mov    r12,r14
    644e:	call   d100 <__ctype_b_loc@plt+0x9790>
    6453:	mov    edx,DWORD PTR [r12]
    6457:	add    r12,0x4
    645b:	lea    eax,[rdx-0x1010101]
    6461:	not    edx
    6463:	and    eax,edx
    6465:	and    eax,0x80808080
    646a:	je     6453 <__ctype_b_loc@plt+0x2ae3>
    646c:	mov    edx,eax
    646e:	mov    r15,QWORD PTR [rbp+0x0]
    6472:	shr    edx,0x10
    6475:	test   eax,0x8080
    647a:	cmove  eax,edx
    647d:	lea    rdx,[r12+0x2]
    6482:	cmove  r12,rdx
    6486:	mov    ecx,eax
    6488:	add    cl,al
    648a:	sbb    r12,0x3
    648e:	sub    r12,r14
    6491:	mov    r13d,r12d
    6494:	nop    DWORD PTR [rax+0x0]
    6498:	mov    rdi,r15
    649b:	call   3650 <strlen@plt>
    64a0:	cmp    r13d,eax
    64a3:	jle    64d3 <__ctype_b_loc@plt+0x2b63>
    64a5:	mov    edx,r13d
    64a8:	sub    edx,eax
    64aa:	sub    edx,0x1
    64ad:	movsxd rdx,edx
    64b0:	cmp    BYTE PTR [rsp+rdx*1+0x20],0x2f
    64b5:	je     64d3 <__ctype_b_loc@plt+0x2b63>
    64b7:	movsxd rbx,eax
    64ba:	mov    rdi,r12
    64bd:	mov    rsi,r15
    64c0:	sub    rdi,rbx
    64c3:	add    rdi,r14
    64c6:	call   3750 <strcmp@plt>
    64cb:	test   eax,eax
    64cd:	je     6568 <__ctype_b_loc@plt+0x2bf8>
    64d3:	mov    r15,QWORD PTR [rbp+0x8]
    64d7:	add    rbp,0x8
    64db:	test   r15,r15
    64de:	jne    6498 <__ctype_b_loc@plt+0x2b28>
    64e0:	mov    rdi,QWORD PTR [rsp+0x10]
    64e5:	call   3520 <free@plt>
    64ea:	mov    rax,QWORD PTR [rsp+0x48]
    64ef:	xor    rax,QWORD PTR fs:0x28
    64f8:	jne    657d <__ctype_b_loc@plt+0x2c0d>
    64fe:	add    rsp,0x58
    6502:	mov    rax,r15
    6505:	pop    rbx
    6506:	pop    rbp
    6507:	pop    r12
    6509:	pop    r13
    650b:	pop    r14
    650d:	pop    r15
    650f:	ret    
    6510:	mov    rax,QWORD PTR [rsp+0x8]
    6515:	movsxd rdx,edx
    6518:	lea    r14,[rsp+0x20]
    651d:	mov    rdi,r14
    6520:	lea    rsi,[rax+rdx*1-0x20]
    6525:	mov    edx,0x21
    652a:	call   3860 <__strcpy_chk@plt>
    652f:	jmp    6448 <__ctype_b_loc@plt+0x2ad8>
    6534:	nop    DWORD PTR [rax+0x0]
    6538:	mov    rdi,r12
    653b:	lea    rbp,[rip+0x11b06]        # 18048 <__ctype_b_loc@plt+0x146d8>
    6542:	call   eff0 <__ctype_b_loc@plt+0xb680>
    6547:	mov    rdi,rax
    654a:	mov    QWORD PTR [rsp+0x10],rax
    654f:	call   d100 <__ctype_b_loc@plt+0x9790>
    6554:	mov    edx,0x8
    6559:	lea    rax,[rbp-0x8]
    655d:	jmp    63db <__ctype_b_loc@plt+0x2a6b>
    6562:	nop    WORD PTR [rax+rax*1+0x0]
    6568:	movsxd rsi,DWORD PTR [rsp+0x1c]
    656d:	mov    r15,QWORD PTR [rsp+0x8]
    6572:	sub    rsi,rbx
    6575:	add    r15,rsi
    6578:	jmp    64e0 <__ctype_b_loc@plt+0x2b70>
    657d:	call   3680 <__stack_chk_fail@plt>
    6582:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    658d:	nop    DWORD PTR [rax]
    6590:	push   r12
    6592:	push   rbp
    6593:	mov    ebp,edi
    6595:	push   rbx
    6596:	movsxd rbx,esi
    6599:	sub    rsp,0x10
    659d:	mov    edx,DWORD PTR [rip+0x11a6d]        # 18010 <__ctype_b_loc@plt+0x146a0>
    65a3:	mov    rax,QWORD PTR fs:0x28
    65ac:	mov    QWORD PTR [rsp+0x8],rax
    65b1:	xor    eax,eax
    65b3:	test   edx,edx
    65b5:	je     6720 <__ctype_b_loc@plt+0x2db0>
    65bb:	test   ebx,ebx
    65bd:	js     6728 <__ctype_b_loc@plt+0x2db8>
    65c3:	mov    r12d,DWORD PTR [rip+0x13ac6]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    65ca:	mov    DWORD PTR [rip+0x11a3c],0x0        # 18010 <__ctype_b_loc@plt+0x146a0>
    65d4:	test   r12d,r12d
    65d7:	jne    68e8 <__ctype_b_loc@plt+0x2f78>
    65dd:	mov    r11d,DWORD PTR [rip+0x13aa8]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    65e4:	test   r11d,r11d
    65e7:	je     6900 <__ctype_b_loc@plt+0x2f90>
    65ed:	mov    rax,QWORD PTR [rip+0x47e3c]        # 4e430 <stderr@@GLIBC_2.2.5+0x343f0>
    65f4:	mov    QWORD PTR [rip+0x9ba01],0xffffffffffffffff        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    65ff:	mov    QWORD PTR [rip+0x17dfa],rax        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    6606:	cmp    ebx,0x8
    6609:	je     6830 <__ctype_b_loc@plt+0x2ec0>
    660f:	mov    r12,0xffffffffffffffff
    6616:	mov    eax,DWORD PTR [rip+0x13a74]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    661c:	test   eax,eax
    661e:	jne    6870 <__ctype_b_loc@plt+0x2f00>
    6624:	mov    rsi,QWORD PTR [rip+0x17dd5]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    662b:	mov    rdi,QWORD PTR [rip+0x139ce]        # 1a000 <stdout@@GLIBC_2.2.5>
    6632:	mov    edx,0x13
    6637:	call   d7f0 <__ctype_b_loc@plt+0x9e80>
    663c:	lea    rdi,[rip+0xc68c]        # 12ccf <__ctype_b_loc@plt+0xf35f>
    6643:	xor    eax,eax
    6645:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    664a:	mov    rsi,QWORD PTR [rip+0x9b9af]        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    6651:	mov    edx,0x13
    6656:	mov    rdi,QWORD PTR [rip+0x139a3]        # 1a000 <stdout@@GLIBC_2.2.5>
    665d:	call   d7f0 <__ctype_b_loc@plt+0x9e80>
    6662:	lea    rdi,[rip+0xc666]        # 12ccf <__ctype_b_loc@plt+0xf35f>
    6669:	xor    eax,eax
    666b:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    6670:	mov    rax,QWORD PTR [rip+0x17d89]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    6677:	cmp    rax,0xffffffffffffffff
    667b:	je     67e0 <__ctype_b_loc@plt+0x2e70>
    6681:	mov    rdx,QWORD PTR [rip+0x13ec0]        # 1a548 <stderr@@GLIBC_2.2.5+0x508>
    6688:	test   rdx,rdx
    668b:	js     6697 <__ctype_b_loc@plt+0x2d27>
    668d:	add    rdx,rax
    6690:	mov    QWORD PTR [rip+0x13eb1],rdx        # 1a548 <stderr@@GLIBC_2.2.5+0x508>
    6697:	mov    rsi,QWORD PTR [rip+0x9b962]        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    669e:	cmp    rsi,0xffffffffffffffff
    66a2:	jne    68d0 <__ctype_b_loc@plt+0x2f60>
    66a8:	mov    QWORD PTR [rip+0x13e8d],0xffffffffffffffff        # 1a540 <stderr@@GLIBC_2.2.5+0x500>
    66b3:	xor    edi,edi
    66b5:	xor    esi,esi
    66b7:	mov    QWORD PTR [rip+0xdd97e],0x0        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    66c2:	mov    QWORD PTR [rip+0x9b933],0x0        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    66cd:	mov    QWORD PTR [rip+0x17d28],0x0        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    66d8:	mov    rdx,QWORD PTR [rip+0x13921]        # 1a000 <stdout@@GLIBC_2.2.5>
    66df:	call   d7a0 <__ctype_b_loc@plt+0x9e30>
    66e4:	lea    rsi,[rip+0x8a135]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    66eb:	lea    rdi,[rip+0xd0e4]        # 137d6 <__ctype_b_loc@plt+0xfe66>
    66f2:	xor    eax,eax
    66f4:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    66f9:	mov    rax,QWORD PTR [rsp+0x8]
    66fe:	xor    rax,QWORD PTR fs:0x28
    6707:	jne    69b8 <__ctype_b_loc@plt+0x3048>
    670d:	add    rsp,0x10
    6711:	pop    rbx
    6712:	pop    rbp
    6713:	pop    r12
    6715:	ret    
    6716:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6720:	test   ebx,ebx
    6722:	jns    65ed <__ctype_b_loc@plt+0x2c7d>
    6728:	mov    rsi,QWORD PTR [rip+0x13e19]        # 1a548 <stderr@@GLIBC_2.2.5+0x508>
    672f:	test   rsi,rsi
    6732:	jle    66f9 <__ctype_b_loc@plt+0x2d89>
    6734:	cmp    QWORD PTR [rip+0x13e04],0x0        # 1a540 <stderr@@GLIBC_2.2.5+0x500>
    673c:	jle    66f9 <__ctype_b_loc@plt+0x2d89>
    673e:	mov    r8d,DWORD PTR [rip+0x1394b]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    6745:	test   r8d,r8d
    6748:	jne    6990 <__ctype_b_loc@plt+0x3020>
    674e:	mov    ecx,DWORD PTR [rip+0x13938]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    6754:	test   ecx,ecx
    6756:	jne    67a4 <__ctype_b_loc@plt+0x2e34>
    6758:	mov    rdi,QWORD PTR [rip+0x138a1]        # 1a000 <stdout@@GLIBC_2.2.5>
    675f:	mov    edx,0x13
    6764:	call   d7f0 <__ctype_b_loc@plt+0x9e80>
    6769:	lea    rdi,[rip+0xc55f]        # 12ccf <__ctype_b_loc@plt+0xf35f>
    6770:	xor    eax,eax
    6772:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    6777:	mov    rsi,QWORD PTR [rip+0x13dc2]        # 1a540 <stderr@@GLIBC_2.2.5+0x500>
    677e:	mov    edx,0x13
    6783:	mov    rdi,QWORD PTR [rip+0x13876]        # 1a000 <stdout@@GLIBC_2.2.5>
    678a:	call   d7f0 <__ctype_b_loc@plt+0x9e80>
    678f:	lea    rdi,[rip+0xc539]        # 12ccf <__ctype_b_loc@plt+0xf35f>
    6796:	xor    eax,eax
    6798:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    679d:	mov    rsi,QWORD PTR [rip+0x13da4]        # 1a548 <stderr@@GLIBC_2.2.5+0x508>
    67a4:	mov    r8,QWORD PTR [rip+0x13d95]        # 1a540 <stderr@@GLIBC_2.2.5+0x500>
    67ab:	sub    rsi,QWORD PTR [rip+0xdd88e]        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    67b2:	mov    rdx,QWORD PTR [rip+0x13847]        # 1a000 <stdout@@GLIBC_2.2.5>
    67b9:	mov    rdi,r8
    67bc:	sub    rdi,rsi
    67bf:	mov    rsi,r8
    67c2:	call   d7a0 <__ctype_b_loc@plt+0x9e30>
    67c7:	lea    rdi,[rip+0xc503]        # 12cd1 <__ctype_b_loc@plt+0xf361>
    67ce:	xor    eax,eax
    67d0:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    67d5:	jmp    66f9 <__ctype_b_loc@plt+0x2d89>
    67da:	nop    WORD PTR [rax+rax*1+0x0]
    67e0:	mov    QWORD PTR [rip+0x13d5d],0xffffffffffffffff        # 1a548 <stderr@@GLIBC_2.2.5+0x508>
    67eb:	xor    edi,edi
    67ed:	xor    esi,esi
    67ef:	mov    QWORD PTR [rip+0xdd846],0x0        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    67fa:	mov    QWORD PTR [rip+0x9b7fb],0x0        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    6805:	mov    QWORD PTR [rip+0x17bf0],0x0        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    6810:	mov    rax,QWORD PTR [rip+0x13d29]        # 1a540 <stderr@@GLIBC_2.2.5+0x500>
    6817:	test   rax,rax
    681a:	js     66d8 <__ctype_b_loc@plt+0x2d68>
    6820:	add    rax,rsi
    6823:	mov    QWORD PTR [rip+0x13d16],rax        # 1a540 <stderr@@GLIBC_2.2.5+0x500>
    682a:	jmp    66d8 <__ctype_b_loc@plt+0x2d68>
    682f:	nop
    6830:	mov    edx,DWORD PTR [rip+0x141e6]        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    6836:	test   edx,edx
    6838:	jne    660f <__ctype_b_loc@plt+0x2c9f>
    683e:	mov    edx,0x2
    6843:	mov    rsi,0xfffffffffffffff8
    684a:	mov    edi,ebp
    684c:	call   36b0 <lseek@plt>
    6851:	cmp    rax,0xffffffffffffffff
    6855:	jne    6958 <__ctype_b_loc@plt+0x2fe8>
    685b:	mov    QWORD PTR [rip+0x17b9a],0xffffffffffffffff        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    6866:	jmp    660f <__ctype_b_loc@plt+0x2c9f>
    686b:	nop    DWORD PTR [rax+rax*1+0x0]
    6870:	lea    rdi,[rip+0x9b799]        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    6877:	call   3540 <localtime@plt>
    687c:	mov    rdx,r12
    687f:	lea    rdi,[rip+0xc456]        # 12cdc <__ctype_b_loc@plt+0xf36c>
    6886:	mov    rbp,rax
    6889:	lea    rax,[rip+0x10e10]        # 176a0 <__ctype_b_loc@plt+0x13d30>
    6890:	mov    rsi,QWORD PTR [rax+rbx*8]
    6894:	xor    eax,eax
    6896:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    689b:	test   rbp,rbp
    689e:	je     6940 <__ctype_b_loc@plt+0x2fd0>
    68a4:	movsxd rsi,DWORD PTR [rbp+0x10]
    68a8:	lea    rax,[rip+0xca11]        # 132c0 <__ctype_b_loc@plt+0xf950>
    68af:	mov    ecx,DWORD PTR [rbp+0x8]
    68b2:	lea    rdi,[rip+0xc42e]        # 12ce7 <__ctype_b_loc@plt+0xf377>
    68b9:	mov    edx,DWORD PTR [rbp+0xc]
    68bc:	mov    r8d,DWORD PTR [rbp+0x4]
    68c0:	lea    rsi,[rax+rsi*4]
    68c4:	xor    eax,eax
    68c6:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    68cb:	jmp    6624 <__ctype_b_loc@plt+0x2cb4>
    68d0:	sub    rax,QWORD PTR [rip+0xdd769]        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    68d7:	mov    rdi,rsi
    68da:	sub    rdi,rax
    68dd:	jmp    6810 <__ctype_b_loc@plt+0x2ea0>
    68e2:	nop    WORD PTR [rax+rax*1+0x0]
    68e8:	lea    rdi,[rip+0xc39b]        # 12c8a <__ctype_b_loc@plt+0xf31a>
    68ef:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    68f4:	jmp    65dd <__ctype_b_loc@plt+0x2c6d>
    68f9:	nop    DWORD PTR [rax+0x0]
    6900:	sub    rsp,0x8
    6904:	lea    rax,[rip+0xc39c]        # 12ca7 <__ctype_b_loc@plt+0xf337>
    690b:	mov    r9d,0x13
    6911:	mov    r8d,0x13
    6917:	push   rax
    6918:	lea    rcx,[rip+0xc38a]        # 12ca9 <__ctype_b_loc@plt+0xf339>
    691f:	xor    eax,eax
    6921:	mov    edx,0x13
    6926:	mov    esi,0x13
    692b:	lea    rdi,[rip+0xb936]        # 12268 <__ctype_b_loc@plt+0xe8f8>
    6932:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    6937:	pop    r9
    6939:	pop    r10
    693b:	jmp    65ed <__ctype_b_loc@plt+0x2c7d>
    6940:	lea    rdi,[rip+0xc3b1]        # 12cf8 <__ctype_b_loc@plt+0xf388>
    6947:	xor    eax,eax
    6949:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    694e:	jmp    6624 <__ctype_b_loc@plt+0x2cb4>
    6953:	nop    DWORD PTR [rax+rax*1+0x0]
    6958:	add    rax,0x8
    695c:	mov    rsi,rsp
    695f:	mov    edx,0x8
    6964:	mov    edi,ebp
    6966:	mov    QWORD PTR [rip+0x17a93],rax        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    696d:	call   3710 <read@plt>
    6972:	cmp    rax,0x8
    6976:	jne    69bd <__ctype_b_loc@plt+0x304d>
    6978:	mov    eax,DWORD PTR [rsp+0x4]
    697c:	mov    r12d,DWORD PTR [rsp]
    6980:	mov    QWORD PTR [rip+0x9b679],rax        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    6987:	jmp    6616 <__ctype_b_loc@plt+0x2ca6>
    698c:	nop    DWORD PTR [rax+0x0]
    6990:	lea    rdi,[rip+0xc31d]        # 12cb4 <__ctype_b_loc@plt+0xf344>
    6997:	xor    eax,eax
    6999:	call   f5b0 <__ctype_b_loc@plt+0xbc40>
    699e:	mov    edi,DWORD PTR [rip+0x136ec]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    69a4:	mov    rsi,QWORD PTR [rip+0x13b9d]        # 1a548 <stderr@@GLIBC_2.2.5+0x508>
    69ab:	test   edi,edi
    69ad:	jne    6758 <__ctype_b_loc@plt+0x2de8>
    69b3:	jmp    674e <__ctype_b_loc@plt+0x2dde>
    69b8:	call   3680 <__stack_chk_fail@plt>
    69bd:	call   d400 <__ctype_b_loc@plt+0x9a90>
    69c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    69cd:	nop    DWORD PTR [rax]
    69d0:	mov    eax,DWORD PTR [rip+0x136c2]        # 1a098 <stderr@@GLIBC_2.2.5+0x58>
    69d6:	push   rbp
    69d7:	mov    ebp,edi
    69d9:	test   eax,eax
    69db:	jne    69fe <__ctype_b_loc@plt+0x308e>
    69dd:	mov    rdi,QWORD PTR [rip+0x1402c]        # 1aa10 <stderr@@GLIBC_2.2.5+0x9d0>
    69e4:	mov    DWORD PTR [rip+0x136aa],0x1        # 1a098 <stderr@@GLIBC_2.2.5+0x58>
    69ee:	call   3520 <free@plt>
    69f3:	mov    QWORD PTR [rip+0x14012],0x0        # 1aa10 <stderr@@GLIBC_2.2.5+0x9d0>
    69fe:	mov    edi,ebp
    6a00:	call   3910 <exit@plt>
    6a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6a10:	push   rax
    6a11:	pop    rax
    6a12:	sub    rsp,0x8
    6a16:	mov    rdi,QWORD PTR [rip+0x135e3]        # 1a000 <stdout@@GLIBC_2.2.5>
    6a1d:	call   f060 <__ctype_b_loc@plt+0xb6f0>
    6a22:	test   eax,eax
    6a24:	je     6a2b <__ctype_b_loc@plt+0x30bb>
    6a26:	call   d470 <__ctype_b_loc@plt+0x9b00>
    6a2b:	xor    edi,edi
    6a2d:	call   69d0 <__ctype_b_loc@plt+0x3060>
    6a32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6a3d:	nop    DWORD PTR [rax]
    6a40:	push   rax
    6a41:	pop    rax
    6a42:	lea    rsi,[rip+0xb847]        # 12290 <__ctype_b_loc@plt+0xe920>
    6a49:	xor    eax,eax
    6a4b:	sub    rsp,0x8
    6a4f:	mov    rdi,QWORD PTR [rip+0x135ea]        # 1a040 <stderr@@GLIBC_2.2.5>
    6a56:	mov    rdx,QWORD PTR [rip+0x9b5ab]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    6a5d:	call   f390 <__ctype_b_loc@plt+0xba20>
    6a62:	mov    edi,0x1
    6a67:	call   69d0 <__ctype_b_loc@plt+0x3060>
    6a6c:	nop    DWORD PTR [rax+0x0]
    6a70:	mov    eax,DWORD PTR [rip+0x13642]        # 1a0b8 <stderr@@GLIBC_2.2.5+0x78>
    6a76:	mov    QWORD PTR [rip+0x479af],0xffffffffffffffff        # 4e430 <stderr@@GLIBC_2.2.5+0x343f0>
    6a81:	mov    QWORD PTR [rip+0x9b58c],0xffffffffffffffff        # a2018 <stderr@@GLIBC_2.2.5+0x87fd8>
    6a8c:	and    eax,0xf000
    6a91:	cmp    eax,0x8000
    6a96:	je     6aa0 <__ctype_b_loc@plt+0x3130>
    6a98:	ret    
    6a99:	nop    DWORD PTR [rax+0x0]
    6aa0:	mov    rax,QWORD PTR [rip+0x13629]        # 1a0d0 <stderr@@GLIBC_2.2.5+0x90>
    6aa7:	mov    edx,DWORD PTR [rip+0x1157b]        # 18028 <__ctype_b_loc@plt+0x146b8>
    6aad:	mov    QWORD PTR [rip+0x4797c],rax        # 4e430 <stderr@@GLIBC_2.2.5+0x343f0>
    6ab4:	test   edx,edx
    6ab6:	jne    6ad8 <__ctype_b_loc@plt+0x3168>
    6ab8:	mov    rax,QWORD PTR [rip+0x13639]        # 1a0f8 <stderr@@GLIBC_2.2.5+0xb8>
    6abf:	mov    QWORD PTR [rip+0x9b54a],rax        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    6ac6:	mov    rax,QWORD PTR [rip+0x13633]        # 1a100 <stderr@@GLIBC_2.2.5+0xc0>
    6acd:	mov    QWORD PTR [rip+0x9b544],rax        # a2018 <stderr@@GLIBC_2.2.5+0x87fd8>
    6ad4:	ret    
    6ad5:	nop    DWORD PTR [rax]
    6ad8:	mov    eax,DWORD PTR [rip+0x13f46]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    6ade:	test   eax,eax
    6ae0:	je     6a98 <__ctype_b_loc@plt+0x3128>
    6ae2:	jmp    6ab8 <__ctype_b_loc@plt+0x3148>
    6ae4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6aef:	nop
    6af0:	push   r12
    6af2:	mov    eax,DWORD PTR [rip+0x9b52c]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    6af8:	xor    r12d,r12d
    6afb:	cmp    DWORD PTR [rip+0x47923],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    6b01:	je     6b10 <__ctype_b_loc@plt+0x31a0>
    6b03:	mov    eax,r12d
    6b06:	pop    r12
    6b08:	ret    
    6b09:	nop    DWORD PTR [rax+0x0]
    6b10:	cmp    eax,0x40000
    6b15:	je     6b28 <__ctype_b_loc@plt+0x31b8>
    6b17:	mov    r12d,0x1
    6b1d:	mov    eax,r12d
    6b20:	pop    r12
    6b22:	ret    
    6b23:	nop    DWORD PTR [rax+rax*1+0x0]
    6b28:	mov    edi,0x1
    6b2d:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    6b32:	cmp    eax,0xffffffff
    6b35:	je     6b17 <__ctype_b_loc@plt+0x31a7>
    6b37:	mov    DWORD PTR [rip+0x478e3],0x0        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    6b41:	jmp    6b03 <__ctype_b_loc@plt+0x3193>
    6b43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    6b4e:	xchg   ax,ax
    6b50:	sub    rsp,0x8
    6b54:	mov    eax,DWORD PTR [rip+0x13ed6]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    6b5a:	or     eax,DWORD PTR [rip+0x13ec4]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    6b60:	jne    6b8a <__ctype_b_loc@plt+0x321a>
    6b62:	cmp    BYTE PTR [rip+0x13ed4],0x0        # 1aa3d <stderr@@GLIBC_2.2.5+0x9fd>
    6b69:	jne    6d41 <__ctype_b_loc@plt+0x33d1>
    6b6f:	mov    eax,DWORD PTR [rip+0x13ebf]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    6b75:	xor    edi,edi
    6b77:	test   eax,eax
    6b79:	sete   dil
    6b7d:	call   35d0 <isatty@plt>
    6b82:	test   eax,eax
    6b84:	jne    6d41 <__ctype_b_loc@plt+0x33d1>
    6b8a:	mov    r10d,0x6e
    6b90:	mov    r11d,0x7475
    6b96:	xor    esi,esi
    6b98:	mov    edi,0x1
    6b9d:	lea    rdx,[rip+0x134fc]        # 1a0a0 <stderr@@GLIBC_2.2.5+0x60>
    6ba4:	mov    DWORD PTR [rip+0x17452],0x69647473        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6bae:	mov    WORD PTR [rip+0x1744e],r10w        # 1e004 <stderr@@GLIBC_2.2.5+0x3fc4>
    6bb6:	mov    DWORD PTR [rip+0x89c60],0x6f647473        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    6bc0:	mov    WORD PTR [rip+0x89c5c],r11w        # 90824 <stderr@@GLIBC_2.2.5+0x767e4>
    6bc8:	mov    BYTE PTR [rip+0x89c57],0x0        # 90826 <stderr@@GLIBC_2.2.5+0x767e6>
    6bcf:	call   3830 <__fxstat@plt>
    6bd4:	test   eax,eax
    6bd6:	jne    6d9e <__ctype_b_loc@plt+0x342e>
    6bdc:	call   6a70 <__ctype_b_loc@plt+0x3100>
    6be1:	call   d020 <__ctype_b_loc@plt+0x96b0>
    6be6:	mov    r9d,DWORD PTR [rip+0x13e47]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    6bed:	mov    DWORD PTR [rip+0x1349d],0x1        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    6bf7:	mov    DWORD PTR [rip+0x13e17],0x0        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    6c01:	mov    DWORD PTR [rip+0x89bf5],0x0        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    6c0b:	mov    BYTE PTR [rip+0x1393e],0x1        # 1a550 <stderr@@GLIBC_2.2.5+0x510>
    6c12:	test   r9d,r9d
    6c15:	jne    6cb0 <__ctype_b_loc@plt+0x3340>
    6c1b:	mov    r8d,DWORD PTR [rip+0x13e02]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    6c22:	test   r8d,r8d
    6c25:	jne    6cd0 <__ctype_b_loc@plt+0x3360>
    6c2b:	xor    edi,edi
    6c2d:	mov    esi,0x1
    6c32:	call   QWORD PTR [rip+0x11498]        # 180d0 <__ctype_b_loc@plt+0x14760>
    6c38:	test   eax,eax
    6c3a:	jne    6ca2 <__ctype_b_loc@plt+0x3332>
    6c3c:	mov    edi,DWORD PTR [rip+0x13df2]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    6c42:	test   edi,edi
    6c44:	je     6c80 <__ctype_b_loc@plt+0x3310>
    6c46:	mov    esi,DWORD PTR [rip+0x13dd0]        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    6c4c:	test   esi,esi
    6c4e:	jne    6c80 <__ctype_b_loc@plt+0x3310>
    6c50:	call   6af0 <__ctype_b_loc@plt+0x3180>
    6c55:	test   eax,eax
    6c57:	jne    6c80 <__ctype_b_loc@plt+0x3310>
    6c59:	mov    edi,DWORD PTR [rip+0x89ba1]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    6c5f:	call   5700 <__ctype_b_loc@plt+0x1d90>
    6c64:	mov    DWORD PTR [rip+0x113b6],eax        # 18020 <__ctype_b_loc@plt+0x146b0>
    6c6a:	test   eax,eax
    6c6c:	js     6ca2 <__ctype_b_loc@plt+0x3332>
    6c6e:	mov    QWORD PTR [rip+0x9b387],0x0        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    6c79:	jmp    6c2b <__ctype_b_loc@plt+0x32bb>
    6c7b:	nop    DWORD PTR [rax+rax*1+0x0]
    6c80:	mov    ecx,DWORD PTR [rip+0x1340a]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    6c86:	test   ecx,ecx
    6c88:	je     6ca2 <__ctype_b_loc@plt+0x3332>
    6c8a:	mov    edx,DWORD PTR [rip+0x133f8]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    6c90:	test   edx,edx
    6c92:	jne    6d28 <__ctype_b_loc@plt+0x33b8>
    6c98:	mov    eax,DWORD PTR [rip+0x13d96]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    6c9e:	test   eax,eax
    6ca0:	je     6ce8 <__ctype_b_loc@plt+0x3378>
    6ca2:	add    rsp,0x8
    6ca6:	ret    
    6ca7:	nop    WORD PTR [rax+rax*1+0x0]
    6cb0:	xor    edi,edi
    6cb2:	call   5700 <__ctype_b_loc@plt+0x1d90>
    6cb7:	mov    DWORD PTR [rip+0x11363],eax        # 18020 <__ctype_b_loc@plt+0x146b0>
    6cbd:	test   eax,eax
    6cbf:	jns    6c1b <__ctype_b_loc@plt+0x32ab>
    6cc5:	mov    edi,DWORD PTR [rip+0x133b9]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    6ccb:	call   69d0 <__ctype_b_loc@plt+0x3060>
    6cd0:	mov    esi,DWORD PTR [rip+0x1134a]        # 18020 <__ctype_b_loc@plt+0x146b0>
    6cd6:	mov    edi,DWORD PTR [rip+0x89b24]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    6cdc:	add    rsp,0x8
    6ce0:	jmp    6590 <__ctype_b_loc@plt+0x2c20>
    6ce5:	nop    DWORD PTR [rax]
    6ce8:	mov    rsi,QWORD PTR [rip+0x17711]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    6cef:	mov    rdx,QWORD PTR [rip+0x1334a]        # 1a040 <stderr@@GLIBC_2.2.5>
    6cf6:	mov    rdi,rsi
    6cf9:	sub    rdi,QWORD PTR [rip+0x9b300]        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    6d00:	add    rdi,QWORD PTR [rip+0xdd339]        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    6d07:	call   d7a0 <__ctype_b_loc@plt+0x9e30>
    6d0c:	mov    rdi,QWORD PTR [rip+0x1332d]        # 1a040 <stderr@@GLIBC_2.2.5>
    6d13:	lea    rsi,[rip+0xc159]        # 12e73 <__ctype_b_loc@plt+0xf503>
    6d1a:	xor    eax,eax
    6d1c:	add    rsp,0x8
    6d20:	jmp    f390 <__ctype_b_loc@plt+0xba20>
    6d25:	nop    DWORD PTR [rax]
    6d28:	mov    rdi,QWORD PTR [rip+0x13311]        # 1a040 <stderr@@GLIBC_2.2.5>
    6d2f:	lea    rsi,[rip+0xbff7]        # 12d2d <__ctype_b_loc@plt+0xf3bd>
    6d36:	xor    eax,eax
    6d38:	add    rsp,0x8
    6d3c:	jmp    f390 <__ctype_b_loc@plt+0xba20>
    6d41:	cmp    DWORD PTR [rip+0x13344],0x0        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    6d48:	jne    6d94 <__ctype_b_loc@plt+0x3424>
    6d4a:	cmp    DWORD PTR [rip+0x13ce3],0x0        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    6d51:	lea    rax,[rip+0xbfb9]        # 12d11 <__ctype_b_loc@plt+0xf3a1>
    6d58:	lea    r8,[rip+0xca42]        # 137a1 <__ctype_b_loc@plt+0xfe31>
    6d5f:	mov    rdx,QWORD PTR [rip+0x9b2a2]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    6d66:	cmovne r8,rax
    6d6a:	lea    rcx,[rip+0xbf95]        # 12d06 <__ctype_b_loc@plt+0xf396>
    6d71:	lea    rax,[rip+0xbf9c]        # 12d14 <__ctype_b_loc@plt+0xf3a4>
    6d78:	mov    rdi,QWORD PTR [rip+0x132c1]        # 1a040 <stderr@@GLIBC_2.2.5>
    6d7f:	cmovne rcx,rax
    6d83:	mov    r9,rdx
    6d86:	xor    eax,eax
    6d88:	lea    rsi,[rip+0xb529]        # 122b8 <__ctype_b_loc@plt+0xe948>
    6d8f:	call   f390 <__ctype_b_loc@plt+0xba20>
    6d94:	mov    edi,0x1
    6d99:	call   69d0 <__ctype_b_loc@plt+0x3060>
    6d9e:	lea    rdi,[rip+0xbf79]        # 12d1e <__ctype_b_loc@plt+0xf3ae>
    6da5:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    6daa:	jmp    6d94 <__ctype_b_loc@plt+0x3424>
    6dac:	nop    DWORD PTR [rax+0x0]
    6db0:	mov    eax,DWORD PTR [rip+0x132de]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    6db6:	or     eax,DWORD PTR [rip+0x13c74]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    6dbc:	push   r12
    6dbe:	cmp    eax,0x1
    6dc1:	mov    eax,DWORD PTR [rip+0x13c65]        # 1aa2c <stderr@@GLIBC_2.2.5+0x9ec>
    6dc7:	push   rbp
    6dc8:	sbb    r12d,r12d
    6dcb:	push   rbx
    6dcc:	and    r12d,0x20000
    6dd3:	add    r12d,0x900
    6dda:	test   eax,eax
    6ddc:	je     6e48 <__ctype_b_loc@plt+0x34d8>
    6dde:	lea    rbp,[rip+0x1721b]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6de5:	mov    edi,0xffffff9c
    6dea:	mov    edx,r12d
    6ded:	mov    rsi,rbp
    6df0:	xor    eax,eax
    6df2:	call   e060 <__ctype_b_loc@plt+0xa6f0>
    6df7:	mov    r12d,eax
    6dfa:	test   eax,eax
    6dfc:	jns    6e10 <__ctype_b_loc@plt+0x34a0>
    6dfe:	mov    eax,r12d
    6e01:	pop    rbx
    6e02:	pop    rbp
    6e03:	pop    r12
    6e05:	ret    
    6e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6e10:	lea    rdx,[rip+0x13289]        # 1a0a0 <stderr@@GLIBC_2.2.5+0x60>
    6e17:	mov    esi,eax
    6e19:	mov    edi,0x1
    6e1e:	call   3830 <__fxstat@plt>
    6e23:	test   eax,eax
    6e25:	je     6dfe <__ctype_b_loc@plt+0x348e>
    6e27:	call   3560 <__errno_location@plt>
    6e2c:	mov    edi,r12d
    6e2f:	mov    r12d,0xffffffff
    6e35:	mov    ebx,DWORD PTR [rax]
    6e37:	mov    rbp,rax
    6e3a:	call   36d0 <close@plt>
    6e3f:	mov    DWORD PTR [rbp+0x0],ebx
    6e42:	jmp    6dfe <__ctype_b_loc@plt+0x348e>
    6e44:	nop    DWORD PTR [rax+0x0]
    6e48:	lea    rdi,[rip+0x171b1]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6e4f:	call   df50 <__ctype_b_loc@plt+0xa5e0>
    6e54:	lea    rdi,[rip+0x171a5]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6e5b:	mov    rsi,rax
    6e5e:	mov    rbp,rax
    6e61:	sub    rsi,rdi
    6e64:	call   55a0 <__ctype_b_loc@plt+0x1c30>
    6e69:	mov    edi,eax
    6e6b:	test   eax,eax
    6e6d:	jns    6dea <__ctype_b_loc@plt+0x347a>
    6e73:	jmp    6dde <__ctype_b_loc@plt+0x346e>
    6e78:	nop    DWORD PTR [rax+rax*1+0x0]
    6e80:	push   r15
    6e82:	push   r14
    6e84:	push   r13
    6e86:	push   r12
    6e88:	mov    r12,rdi
    6e8b:	push   rbp
    6e8c:	push   rbx
    6e8d:	sub    rsp,0x4c8
    6e94:	mov    rax,QWORD PTR fs:0x28
    6e9d:	mov    QWORD PTR [rsp+0x4b8],rax
    6ea5:	xor    eax,eax
    6ea7:	mov    rax,QWORD PTR [rip+0x13b5a]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    6eae:	mov    QWORD PTR [rip+0x111eb],rax        # 180a0 <__ctype_b_loc@plt+0x14730>
    6eb5:	call   3650 <strlen@plt>
    6eba:	cmp    rax,0x3fe
    6ec0:	ja     703a <__ctype_b_loc@plt+0x36ca>
    6ec6:	lea    rdx,[rax+0x1]
    6eca:	mov    ecx,0x400
    6ecf:	mov    rsi,r12
    6ed2:	lea    rdi,[rip+0x17127]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6ed9:	call   3790 <__memcpy_chk@plt>
    6ede:	call   6db0 <__ctype_b_loc@plt+0x3440>
    6ee3:	mov    r8d,eax
    6ee6:	test   eax,eax
    6ee8:	jns    7078 <__ctype_b_loc@plt+0x3708>
    6eee:	mov    r10d,DWORD PTR [rip+0x13b3f]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    6ef5:	test   r10d,r10d
    6ef8:	je     7231 <__ctype_b_loc@plt+0x38c1>
    6efe:	call   3560 <__errno_location@plt>
    6f03:	cmp    DWORD PTR [rax],0x2
    6f06:	mov    QWORD PTR [rsp+0x10],rax
    6f0b:	jne    7231 <__ctype_b_loc@plt+0x38c1>
    6f11:	lea    rdi,[rip+0x170e8]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6f18:	call   6340 <__ctype_b_loc@plt+0x29d0>
    6f1d:	test   rax,rax
    6f20:	jne    7231 <__ctype_b_loc@plt+0x38c1>
    6f26:	lea    rcx,[rip+0x170d3]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    6f2d:	mov    rbx,rcx
    6f30:	mov    edx,DWORD PTR [rbx]
    6f32:	add    rbx,0x4
    6f36:	lea    eax,[rdx-0x1010101]
    6f3c:	not    edx
    6f3e:	and    eax,edx
    6f40:	and    eax,0x80808080
    6f45:	je     6f30 <__ctype_b_loc@plt+0x35c0>
    6f47:	mov    edx,eax
    6f49:	lea    rdi,[rip+0xbdf8]        # 12d48 <__ctype_b_loc@plt+0xf3d8>
    6f50:	lea    rbp,[rip+0x11149]        # 180a0 <__ctype_b_loc@plt+0x14730>
    6f57:	shr    edx,0x10
    6f5a:	test   eax,0x8080
    6f5f:	cmove  eax,edx
    6f62:	lea    rdx,[rbx+0x2]
    6f66:	cmove  rbx,rdx
    6f6a:	mov    esi,eax
    6f6c:	add    sil,al
    6f6f:	mov    rsi,QWORD PTR [rip+0x13a92]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    6f76:	sbb    rbx,0x3
    6f7a:	sub    rbx,rcx
    6f7d:	mov    ecx,0x4
    6f82:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6f84:	seta   al
    6f87:	sbb    al,0x0
    6f89:	test   al,al
    6f8b:	lea    rax,[rbp+0x8]
    6f8f:	cmove  rbp,rax
    6f93:	xor    r14d,r14d
    6f96:	mov    r13,QWORD PTR [rbp+0x0]
    6f9a:	jmp    700a <__ctype_b_loc@plt+0x369a>
    6f9c:	nop    DWORD PTR [rax+0x0]
    6fa0:	lea    rcx,[rip+0x17459]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    6fa7:	lea    rdx,[rax+0x1]
    6fab:	mov    rsi,r13
    6fae:	mov    rdi,r15
    6fb1:	sub    rcx,r15
    6fb4:	call   3790 <__memcpy_chk@plt>
    6fb9:	call   6db0 <__ctype_b_loc@plt+0x3440>
    6fbe:	mov    r8d,eax
    6fc1:	test   eax,eax
    6fc3:	jns    7078 <__ctype_b_loc@plt+0x3708>
    6fc9:	mov    rax,QWORD PTR [rsp+0x10]
    6fce:	mov    edx,DWORD PTR [rax]
    6fd0:	cmp    edx,0x2
    6fd3:	mov    DWORD PTR [rsp+0x8],edx
    6fd7:	jne    7231 <__ctype_b_loc@plt+0x38c1>
    6fdd:	mov    r15,QWORD PTR [rip+0x13a24]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    6fe4:	mov    rdi,r13
    6fe7:	mov    rsi,r15
    6fea:	call   3750 <strcmp@plt>
    6fef:	mov    edx,DWORD PTR [rsp+0x8]
    6ff3:	test   eax,eax
    6ff5:	cmove  r14d,edx
    6ff9:	mov    r13,QWORD PTR [rbp+0x8]
    6ffd:	add    rbp,0x8
    7001:	test   r13,r13
    7004:	je     7200 <__ctype_b_loc@plt+0x3890>
    700a:	mov    edx,0x400
    700f:	mov    rsi,r12
    7012:	lea    rdi,[rip+0x16fe7]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7019:	call   37e0 <__stpcpy_chk@plt>
    701e:	mov    rdi,r13
    7021:	mov    r15,rax
    7024:	call   3650 <strlen@plt>
    7029:	lea    rdx,[rbx+rax*1]
    702d:	cmp    rdx,0x3ff
    7034:	jbe    6fa0 <__ctype_b_loc@plt+0x3630>
    703a:	mov    rdx,QWORD PTR [rip+0x9afc7]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7041:	mov    rdi,QWORD PTR [rip+0x12ff8]        # 1a040 <stderr@@GLIBC_2.2.5>
    7048:	mov    rcx,r12
    704b:	xor    eax,eax
    704d:	lea    rsi,[rip+0xbcf8]        # 12d4c <__ctype_b_loc@plt+0xf3dc>
    7054:	call   f390 <__ctype_b_loc@plt+0xba20>
    7059:	mov    DWORD PTR [rip+0x13021],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7063:	mov    DWORD PTR [rip+0x89793],0xffffffff        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    706d:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7072:	nop    WORD PTR [rax+rax*1+0x0]
    7078:	mov    edx,DWORD PTR [rip+0x1303a]        # 1a0b8 <stderr@@GLIBC_2.2.5+0x78>
    707e:	mov    DWORD PTR [rip+0x8977b],r8d        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7085:	mov    eax,edx
    7087:	and    eax,0xf000
    708c:	cmp    eax,0x4000
    7091:	je     70e0 <__ctype_b_loc@plt+0x3770>
    7093:	mov    ecx,DWORD PTR [rip+0x12ffb]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    7099:	test   ecx,ecx
    709b:	jne    7298 <__ctype_b_loc@plt+0x3928>
    70a1:	cmp    eax,0x8000
    70a6:	je     7270 <__ctype_b_loc@plt+0x3900>
    70ac:	mov    r15d,DWORD PTR [rip+0x12fd9]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    70b3:	test   r15d,r15d
    70b6:	je     75a0 <__ctype_b_loc@plt+0x3c30>
    70bc:	mov    r11d,DWORD PTR [rip+0x12fc1]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    70c3:	test   r11d,r11d
    70c6:	jne    70d2 <__ctype_b_loc@plt+0x3762>
    70c8:	mov    DWORD PTR [rip+0x12fb2],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    70d2:	mov    edi,r8d
    70d5:	call   36d0 <close@plt>
    70da:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    70df:	nop
    70e0:	mov    r9d,DWORD PTR [rip+0x13941]        # 1aa28 <stderr@@GLIBC_2.2.5+0x9e8>
    70e7:	mov    edi,r8d
    70ea:	test   r9d,r9d
    70ed:	je     7428 <__ctype_b_loc@plt+0x3ab8>
    70f3:	mov    DWORD PTR [rsp+0x8],r8d
    70f8:	call   38e0 <fdopendir@plt>
    70fd:	mov    rbp,rax
    7100:	test   rax,rax
    7103:	je     7d80 <__ctype_b_loc@plt+0x4410>
    7109:	xor    esi,esi
    710b:	mov    rdi,rax
    710e:	call   e0f0 <__ctype_b_loc@plt+0xa780>
    7113:	mov    r15,rax
    7116:	test   rax,rax
    7119:	je     7da0 <__ctype_b_loc@plt+0x4430>
    711f:	mov    rdi,rbp
    7122:	call   36f0 <closedir@plt>
    7127:	test   eax,eax
    7129:	jne    7d48 <__ctype_b_loc@plt+0x43d8>
    712f:	cmp    BYTE PTR [r15],0x0
    7133:	mov    rbx,r15
    7136:	lea    r14,[rsp+0xb0]
    713e:	jne    715c <__ctype_b_loc@plt+0x37ec>
    7140:	jmp    7548 <__ctype_b_loc@plt+0x3bd8>
    7145:	nop    DWORD PTR [rax]
    7148:	cmp    BYTE PTR [rbx+0x1],0x0
    714c:	jne    716c <__ctype_b_loc@plt+0x37fc>
    714e:	lea    rbx,[rbx+rbp*1+0x1]
    7153:	cmp    BYTE PTR [rbx],0x0
    7156:	je     7548 <__ctype_b_loc@plt+0x3bd8>
    715c:	mov    rdi,rbx
    715f:	call   3650 <strlen@plt>
    7164:	cmp    BYTE PTR [rbx],0x2e
    7167:	mov    rbp,rax
    716a:	je     7148 <__ctype_b_loc@plt+0x37d8>
    716c:	cmp    BYTE PTR [rbx],0x2e
    716f:	jne    7180 <__ctype_b_loc@plt+0x3810>
    7171:	cmp    BYTE PTR [rbx+0x1],0x2e
    7175:	jne    7180 <__ctype_b_loc@plt+0x3810>
    7177:	cmp    BYTE PTR [rbx+0x2],0x0
    717b:	je     714e <__ctype_b_loc@plt+0x37de>
    717d:	nop    DWORD PTR [rax]
    7180:	mov    rdi,r12
    7183:	call   3650 <strlen@plt>
    7188:	mov    r13,rax
    718b:	lea    rax,[rax+rbp*1]
    718f:	cmp    rax,0x3fd
    7195:	ja     7460 <__ctype_b_loc@plt+0x3af0>
    719b:	lea    rdx,[r13+0x1]
    719f:	mov    ecx,0x400
    71a4:	mov    rsi,r12
    71a7:	mov    rdi,r14
    71aa:	mov    QWORD PTR [rsp+0x8],rdx
    71af:	call   3790 <__memcpy_chk@plt>
    71b4:	mov    rdi,r14
    71b7:	call   df50 <__ctype_b_loc@plt+0xa5e0>
    71bc:	cmp    BYTE PTR [rax],0x0
    71bf:	je     71dd <__ctype_b_loc@plt+0x386d>
    71c1:	cmp    BYTE PTR [rsp+r13*1+0xaf],0x2f
    71ca:	je     71dd <__ctype_b_loc@plt+0x386d>
    71cc:	mov    BYTE PTR [rsp+r13*1+0xb0],0x2f
    71d5:	mov    rdx,QWORD PTR [rsp+0x8]
    71da:	mov    r13,rdx
    71dd:	lea    rdi,[r14+r13*1]
    71e1:	mov    rsi,rbx
    71e4:	call   35a0 <strcpy@plt>
    71e9:	mov    rdi,r14
    71ec:	call   82d0 <__ctype_b_loc@plt+0x4960>
    71f1:	jmp    714e <__ctype_b_loc@plt+0x37de>
    71f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7200:	mov    edx,0x400
    7205:	mov    rsi,r12
    7208:	lea    rdi,[rip+0x16df1]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    720f:	call   37e0 <__stpcpy_chk@plt>
    7214:	lea    rdx,[rip+0x171e5]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    721b:	mov    rsi,r15
    721e:	mov    rdi,rax
    7221:	sub    rdx,rax
    7224:	call   3860 <__strcpy_chk@plt>
    7229:	mov    rax,QWORD PTR [rsp+0x10]
    722e:	mov    DWORD PTR [rax],r14d
    7231:	lea    rdi,[rip+0x16dc8]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7238:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    723d:	mov    DWORD PTR [rip+0x895b9],0xffffffff        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7247:	mov    rax,QWORD PTR [rsp+0x4b8]
    724f:	xor    rax,QWORD PTR fs:0x28
    7258:	jne    8251 <__ctype_b_loc@plt+0x48e1>
    725e:	add    rsp,0x4c8
    7265:	pop    rbx
    7266:	pop    rbp
    7267:	pop    r12
    7269:	pop    r13
    726b:	pop    r14
    726d:	pop    r15
    726f:	ret    
    7270:	test   dh,0x8
    7273:	jne    7558 <__ctype_b_loc@plt+0x3be8>
    7279:	test   dh,0x4
    727c:	jne    7880 <__ctype_b_loc@plt+0x3f10>
    7282:	mov    r12d,DWORD PTR [rip+0x137a7]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    7289:	test   r12d,r12d
    728c:	je     7638 <__ctype_b_loc@plt+0x3cc8>
    7292:	nop    WORD PTR [rax+rax*1+0x0]
    7298:	call   6a70 <__ctype_b_loc@plt+0x3100>
    729d:	mov    r10d,DWORD PTR [rip+0x12df0]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    72a4:	test   r10d,r10d
    72a7:	je     72bb <__ctype_b_loc@plt+0x394b>
    72a9:	mov    eax,DWORD PTR [rip+0x13775]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    72af:	or     eax,DWORD PTR [rip+0x12dd3]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    72b5:	je     7d58 <__ctype_b_loc@plt+0x43e8>
    72bb:	mov    edx,0x400
    72c0:	lea    rsi,[rip+0x16d39]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    72c7:	lea    rdi,[rip+0x89552]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    72ce:	call   3860 <__strcpy_chk@plt>
    72d3:	lea    rdi,[rip+0x89546]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    72da:	call   6340 <__ctype_b_loc@plt+0x29d0>
    72df:	mov    r8d,DWORD PTR [rip+0x1374e]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    72e6:	mov    rbp,rax
    72e9:	test   r8d,r8d
    72ec:	je     7498 <__ctype_b_loc@plt+0x3b28>
    72f2:	test   rax,rax
    72f5:	je     75d0 <__ctype_b_loc@plt+0x3c60>
    72fb:	mov    rdi,rax
    72fe:	call   d100 <__ctype_b_loc@plt+0x9790>
    7303:	mov    ecx,0x5
    7308:	lea    rdi,[rip+0xba77]        # 12d86 <__ctype_b_loc@plt+0xf416>
    730f:	mov    rsi,rbp
    7312:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7314:	seta   al
    7317:	sbb    al,0x0
    7319:	test   al,al
    731b:	je     7ad0 <__ctype_b_loc@plt+0x4160>
    7321:	mov    ecx,0x5
    7326:	lea    rdi,[rip+0xba5e]        # 12d8b <__ctype_b_loc@plt+0xf41b>
    732d:	mov    rsi,rbp
    7330:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7332:	seta   al
    7335:	sbb    al,0x0
    7337:	test   al,al
    7339:	je     7ad0 <__ctype_b_loc@plt+0x4160>
    733f:	mov    BYTE PTR [rbp+0x0],0x0
    7343:	nop    DWORD PTR [rax+rax*1+0x0]
    7348:	call   d020 <__ctype_b_loc@plt+0x96b0>
    734d:	mov    eax,DWORD PTR [rip+0x136e1]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    7353:	mov    DWORD PTR [rip+0x136bb],0x0        # 1aa18 <stderr@@GLIBC_2.2.5+0x9d8>
    735d:	test   eax,eax
    735f:	jne    77d8 <__ctype_b_loc@plt+0x3e68>
    7365:	mov    eax,DWORD PTR [rip+0x136b9]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    736b:	test   eax,eax
    736d:	jne    7800 <__ctype_b_loc@plt+0x3e90>
    7373:	mov    ebx,DWORD PTR [rip+0x12d1b]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    7379:	test   ebx,ebx
    737b:	je     78c0 <__ctype_b_loc@plt+0x3f50>
    7381:	mov    DWORD PTR [rip+0x47095],0x1        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    738b:	mov    r10d,DWORD PTR [rip+0x47096]        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    7392:	mov    eax,DWORD PTR [rip+0x12cf8]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    7398:	test   r10d,r10d
    739b:	jne    73b2 <__ctype_b_loc@plt+0x3a42>
    739d:	mov    r9d,DWORD PTR [rip+0x10c88]        # 1802c <__ctype_b_loc@plt+0x146bc>
    73a4:	xor    edx,edx
    73a6:	test   r9d,r9d
    73a9:	sete   dl
    73ac:	mov    DWORD PTR [rip+0x47076],edx        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    73b2:	test   eax,eax
    73b4:	jne    7d20 <__ctype_b_loc@plt+0x43b0>
    73ba:	mov    esi,DWORD PTR [rip+0x47060]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    73c0:	mov    edi,DWORD PTR [rip+0x8943a]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    73c6:	call   QWORD PTR [rip+0x10d04]        # 180d0 <__ctype_b_loc@plt+0x14760>
    73cc:	test   eax,eax
    73ce:	jne    76d8 <__ctype_b_loc@plt+0x3d68>
    73d4:	mov    r8d,DWORD PTR [rip+0x13659]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    73db:	test   r8d,r8d
    73de:	je     76e8 <__ctype_b_loc@plt+0x3d78>
    73e4:	mov    edi,DWORD PTR [rip+0x13632]        # 1aa1c <stderr@@GLIBC_2.2.5+0x9dc>
    73ea:	test   edi,edi
    73ec:	jne    76e8 <__ctype_b_loc@plt+0x3d78>
    73f2:	call   6af0 <__ctype_b_loc@plt+0x3180>
    73f7:	test   eax,eax
    73f9:	jne    76e8 <__ctype_b_loc@plt+0x3d78>
    73ff:	mov    edi,DWORD PTR [rip+0x893fb]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7405:	call   5700 <__ctype_b_loc@plt+0x1d90>
    740a:	mov    DWORD PTR [rip+0x10c10],eax        # 18020 <__ctype_b_loc@plt+0x146b0>
    7410:	test   eax,eax
    7412:	js     76e8 <__ctype_b_loc@plt+0x3d78>
    7418:	mov    QWORD PTR [rip+0x9abdd],0x0        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    7423:	jmp    73ba <__ctype_b_loc@plt+0x3a4a>
    7425:	nop    DWORD PTR [rax]
    7428:	call   36d0 <close@plt>
    742d:	mov    edi,DWORD PTR [rip+0x12c59]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7433:	test   edi,edi
    7435:	je     7830 <__ctype_b_loc@plt+0x3ec0>
    743b:	mov    esi,DWORD PTR [rip+0x12c43]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7441:	test   esi,esi
    7443:	jne    7247 <__ctype_b_loc@plt+0x38d7>
    7449:	mov    DWORD PTR [rip+0x12c31],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7453:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7458:	nop    DWORD PTR [rax+rax*1+0x0]
    7460:	mov    rdx,QWORD PTR [rip+0x9aba1]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7467:	mov    r8,rbx
    746a:	mov    rcx,r12
    746d:	xor    eax,eax
    746f:	mov    rdi,QWORD PTR [rip+0x12bca]        # 1a040 <stderr@@GLIBC_2.2.5>
    7476:	lea    rsi,[rip+0xb8eb]        # 12d68 <__ctype_b_loc@plt+0xf3f8>
    747d:	call   f390 <__ctype_b_loc@plt+0xba20>
    7482:	mov    DWORD PTR [rip+0x12bf8],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    748c:	jmp    714e <__ctype_b_loc@plt+0x37de>
    7491:	nop    DWORD PTR [rax+0x0]
    7498:	test   rax,rax
    749b:	je     74ab <__ctype_b_loc@plt+0x3b3b>
    749d:	mov    esi,DWORD PTR [rip+0x1358d]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    74a3:	test   esi,esi
    74a5:	je     7e38 <__ctype_b_loc@plt+0x44c8>
    74ab:	mov    DWORD PTR [rip+0x46f73],0x0        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    74b5:	lea    rcx,[rip+0x89364]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    74bc:	mov    r8,rcx
    74bf:	mov    rdi,rcx
    74c2:	mov    edx,DWORD PTR [rdi]
    74c4:	add    rdi,0x4
    74c8:	lea    eax,[rdx-0x1010101]
    74ce:	not    edx
    74d0:	and    eax,edx
    74d2:	and    eax,0x80808080
    74d7:	je     74c2 <__ctype_b_loc@plt+0x3b52>
    74d9:	mov    edx,eax
    74db:	shr    edx,0x10
    74de:	test   eax,0x8080
    74e3:	cmove  eax,edx
    74e6:	lea    rdx,[rdi+0x2]
    74ea:	cmove  rdi,rdx
    74ee:	mov    esi,eax
    74f0:	add    sil,al
    74f3:	mov    rax,QWORD PTR [rip+0x13506]        # 1aa00 <stderr@@GLIBC_2.2.5+0x9c0>
    74fa:	sbb    rdi,0x3
    74fe:	sub    rdi,rcx
    7501:	add    rax,rdi
    7504:	cmp    rax,0x3ff
    750a:	jbe    7860 <__ctype_b_loc@plt+0x3ef0>
    7510:	mov    edx,DWORD PTR [rip+0x12b76]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7516:	test   edx,edx
    7518:	je     76b0 <__ctype_b_loc@plt+0x3d40>
    751e:	mov    ebx,DWORD PTR [rip+0x12b60]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7524:	test   ebx,ebx
    7526:	jne    7532 <__ctype_b_loc@plt+0x3bc2>
    7528:	mov    DWORD PTR [rip+0x12b52],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7532:	mov    edi,DWORD PTR [rip+0x892c8]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7538:	call   36d0 <close@plt>
    753d:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7542:	nop    WORD PTR [rax+rax*1+0x0]
    7548:	mov    rdi,r15
    754b:	call   3520 <free@plt>
    7550:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7555:	nop    DWORD PTR [rax]
    7558:	mov    r14d,DWORD PTR [rip+0x12b2d]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    755f:	test   r14d,r14d
    7562:	jne    70bc <__ctype_b_loc@plt+0x374c>
    7568:	mov    rdx,QWORD PTR [rip+0x9aa99]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    756f:	mov    rdi,QWORD PTR [rip+0x12aca]        # 1a040 <stderr@@GLIBC_2.2.5>
    7576:	lea    rcx,[rip+0x16a83]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    757d:	xor    eax,eax
    757f:	lea    rsi,[rip+0xadf2]        # 12378 <__ctype_b_loc@plt+0xea08>
    7586:	call   f390 <__ctype_b_loc@plt+0xba20>
    758b:	mov    r8d,DWORD PTR [rip+0x8926e]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7592:	jmp    70bc <__ctype_b_loc@plt+0x374c>
    7597:	nop    WORD PTR [rax+rax*1+0x0]
    75a0:	mov    rdx,QWORD PTR [rip+0x9aa61]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    75a7:	mov    rdi,QWORD PTR [rip+0x12a92]        # 1a040 <stderr@@GLIBC_2.2.5>
    75ae:	lea    rcx,[rip+0x16a4b]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    75b5:	xor    eax,eax
    75b7:	lea    rsi,[rip+0xad82]        # 12340 <__ctype_b_loc@plt+0xe9d0>
    75be:	call   f390 <__ctype_b_loc@plt+0xba20>
    75c3:	mov    r8d,DWORD PTR [rip+0x89236]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    75ca:	jmp    70bc <__ctype_b_loc@plt+0x374c>
    75cf:	nop
    75d0:	mov    edi,DWORD PTR [rip+0x13452]        # 1aa28 <stderr@@GLIBC_2.2.5+0x9e8>
    75d6:	test   edi,edi
    75d8:	jne    8030 <__ctype_b_loc@plt+0x46c0>
    75de:	mov    eax,DWORD PTR [rip+0x13440]        # 1aa24 <stderr@@GLIBC_2.2.5+0x9e4>
    75e4:	or     eax,DWORD PTR [rip+0x12a9e]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    75ea:	jne    7348 <__ctype_b_loc@plt+0x39d8>
    75f0:	mov    edi,DWORD PTR [rip+0x12a9a]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    75f6:	mov    eax,DWORD PTR [rip+0x12a90]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    75fc:	test   edi,edi
    75fe:	jne    8046 <__ctype_b_loc@plt+0x46d6>
    7604:	test   eax,eax
    7606:	jne    7532 <__ctype_b_loc@plt+0x3bc2>
    760c:	mov    rdx,QWORD PTR [rip+0x9a9f5]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7613:	mov    rdi,QWORD PTR [rip+0x12a26]        # 1a040 <stderr@@GLIBC_2.2.5>
    761a:	lea    rcx,[rip+0x169df]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7621:	xor    eax,eax
    7623:	lea    rsi,[rip+0xae0e]        # 12438 <__ctype_b_loc@plt+0xeac8>
    762a:	call   f390 <__ctype_b_loc@plt+0xba20>
    762f:	jmp    751e <__ctype_b_loc@plt+0x3bae>
    7634:	nop    DWORD PTR [rax+0x0]
    7638:	and    dh,0x2
    763b:	jne    7eb0 <__ctype_b_loc@plt+0x4540>
    7641:	mov    rax,QWORD PTR [rip+0x12a68]        # 1a0b0 <stderr@@GLIBC_2.2.5+0x70>
    7648:	cmp    rax,0x1
    764c:	jbe    7298 <__ctype_b_loc@plt+0x3928>
    7652:	mov    ebx,DWORD PTR [rip+0x12a34]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7658:	test   ebx,ebx
    765a:	jne    70bc <__ctype_b_loc@plt+0x374c>
    7660:	cmp    rax,0x2
    7664:	mov    edx,0x73
    7669:	lea    r8,[rax-0x1]
    766d:	mov    r9d,0x20
    7673:	cmovne r9d,edx
    7677:	mov    rdi,QWORD PTR [rip+0x129c2]        # 1a040 <stderr@@GLIBC_2.2.5>
    767e:	xor    eax,eax
    7680:	mov    rdx,QWORD PTR [rip+0x9a981]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7687:	lea    rcx,[rip+0x16972]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    768e:	lea    rsi,[rip+0xad73]        # 12408 <__ctype_b_loc@plt+0xea98>
    7695:	call   f390 <__ctype_b_loc@plt+0xba20>
    769a:	mov    r8d,DWORD PTR [rip+0x8915f]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    76a1:	jmp    70bc <__ctype_b_loc@plt+0x374c>
    76a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    76b0:	mov    rdx,QWORD PTR [rip+0x9a951]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    76b7:	mov    rdi,QWORD PTR [rip+0x12982]        # 1a040 <stderr@@GLIBC_2.2.5>
    76be:	lea    rcx,[rip+0x1693b]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    76c5:	xor    eax,eax
    76c7:	lea    rsi,[rip+0xb67e]        # 12d4c <__ctype_b_loc@plt+0xf3dc>
    76ce:	call   f390 <__ctype_b_loc@plt+0xba20>
    76d3:	jmp    751e <__ctype_b_loc@plt+0x3bae>
    76d8:	mov    DWORD PTR [rip+0x1093e],0xffffffff        # 18020 <__ctype_b_loc@plt+0x146b0>
    76e2:	nop    WORD PTR [rax+rax*1+0x0]
    76e8:	mov    edi,DWORD PTR [rip+0x89112]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    76ee:	call   36d0 <close@plt>
    76f3:	test   eax,eax
    76f5:	jne    7824 <__ctype_b_loc@plt+0x3eb4>
    76fb:	mov    esi,DWORD PTR [rip+0x12993]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    7701:	test   esi,esi
    7703:	je     7ae0 <__ctype_b_loc@plt+0x4170>
    7709:	cmp    DWORD PTR [rip+0x10910],0xffffffff        # 18020 <__ctype_b_loc@plt+0x146b0>
    7710:	je     7247 <__ctype_b_loc@plt+0x38d7>
    7716:	mov    ebx,DWORD PTR [rip+0x12974]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    771c:	test   ebx,ebx
    771e:	je     7247 <__ctype_b_loc@plt+0x38d7>
    7724:	mov    r11d,DWORD PTR [rip+0x1295d]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    772b:	mov    rdx,QWORD PTR [rip+0x1290e]        # 1a040 <stderr@@GLIBC_2.2.5>
    7732:	test   r11d,r11d
    7735:	jne    7e98 <__ctype_b_loc@plt+0x4528>
    773b:	mov    r10d,DWORD PTR [rip+0x132f2]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    7742:	mov    rsi,QWORD PTR [rip+0x16cb7]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    7749:	mov    r8,QWORD PTR [rip+0x9a8b0]        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    7750:	mov    rax,QWORD PTR [rip+0xdc8e9]        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    7757:	test   r10d,r10d
    775a:	je     7e80 <__ctype_b_loc@plt+0x4510>
    7760:	sub    rsi,rax
    7763:	mov    rdi,r8
    7766:	sub    rdi,rsi
    7769:	mov    rsi,r8
    776c:	call   d7a0 <__ctype_b_loc@plt+0x9e30>
    7771:	mov    eax,DWORD PTR [rip+0x12911]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    7777:	or     eax,DWORD PTR [rip+0x12917]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    777d:	jne    77b7 <__ctype_b_loc@plt+0x3e47>
    777f:	mov    r9d,DWORD PTR [rip+0x132a6]        # 1aa2c <stderr@@GLIBC_2.2.5+0x9ec>
    7786:	lea    rax,[rip+0xb5ad]        # 12d3a <__ctype_b_loc@plt+0xf3ca>
    778d:	lea    rdx,[rip+0xb59e]        # 12d32 <__ctype_b_loc@plt+0xf3c2>
    7794:	mov    rdi,QWORD PTR [rip+0x128a5]        # 1a040 <stderr@@GLIBC_2.2.5>
    779b:	lea    rcx,[rip+0x8907e]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    77a2:	lea    rsi,[rip+0xb674]        # 12e1d <__ctype_b_loc@plt+0xf4ad>
    77a9:	test   r9d,r9d
    77ac:	cmove  rdx,rax
    77b0:	xor    eax,eax
    77b2:	call   f390 <__ctype_b_loc@plt+0xba20>
    77b7:	mov    rdi,QWORD PTR [rip+0x12882]        # 1a040 <stderr@@GLIBC_2.2.5>
    77be:	lea    rsi,[rip+0xb6ae]        # 12e73 <__ctype_b_loc@plt+0xf503>
    77c5:	xor    eax,eax
    77c7:	call   f390 <__ctype_b_loc@plt+0xba20>
    77cc:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    77d1:	nop    DWORD PTR [rax+0x0]
    77d8:	mov    edi,DWORD PTR [rip+0x89022]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    77de:	call   5700 <__ctype_b_loc@plt+0x1d90>
    77e3:	mov    DWORD PTR [rip+0x10837],eax        # 18020 <__ctype_b_loc@plt+0x146b0>
    77e9:	test   eax,eax
    77eb:	jns    7365 <__ctype_b_loc@plt+0x39f5>
    77f1:	jmp    7532 <__ctype_b_loc@plt+0x3bc2>
    77f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7800:	mov    edi,DWORD PTR [rip+0x88ffa]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7806:	mov    esi,DWORD PTR [rip+0x10814]        # 18020 <__ctype_b_loc@plt+0x146b0>
    780c:	call   6590 <__ctype_b_loc@plt+0x2c20>
    7811:	mov    edi,DWORD PTR [rip+0x88fe9]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7817:	call   36d0 <close@plt>
    781c:	test   eax,eax
    781e:	je     7247 <__ctype_b_loc@plt+0x38d7>
    7824:	call   d400 <__ctype_b_loc@plt+0x9a90>
    7829:	nop    DWORD PTR [rax+0x0]
    7830:	mov    rdx,QWORD PTR [rip+0x9a7d1]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7837:	mov    rdi,QWORD PTR [rip+0x12802]        # 1a040 <stderr@@GLIBC_2.2.5>
    783e:	lea    rcx,[rip+0x167bb]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7845:	xor    eax,eax
    7847:	lea    rsi,[rip+0xaaca]        # 12318 <__ctype_b_loc@plt+0xe9a8>
    784e:	call   f390 <__ctype_b_loc@plt+0xba20>
    7853:	jmp    743b <__ctype_b_loc@plt+0x3acb>
    7858:	nop    DWORD PTR [rax+rax*1+0x0]
    7860:	mov    rsi,QWORD PTR [rip+0x131a1]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    7867:	mov    edx,0x400
    786c:	sub    rdx,rdi
    786f:	add    rdi,r8
    7872:	call   3860 <__strcpy_chk@plt>
    7877:	jmp    7348 <__ctype_b_loc@plt+0x39d8>
    787c:	nop    DWORD PTR [rax+0x0]
    7880:	mov    r13d,DWORD PTR [rip+0x12805]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7887:	test   r13d,r13d
    788a:	jne    70bc <__ctype_b_loc@plt+0x374c>
    7890:	mov    rdx,QWORD PTR [rip+0x9a771]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7897:	mov    rdi,QWORD PTR [rip+0x127a2]        # 1a040 <stderr@@GLIBC_2.2.5>
    789e:	lea    rcx,[rip+0x1675b]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    78a5:	xor    eax,eax
    78a7:	lea    rsi,[rip+0xaafa]        # 123a8 <__ctype_b_loc@plt+0xea38>
    78ae:	call   f390 <__ctype_b_loc@plt+0xba20>
    78b3:	mov    r8d,DWORD PTR [rip+0x88f46]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    78ba:	jmp    70bc <__ctype_b_loc@plt+0x374c>
    78bf:	nop
    78c0:	mov    eax,DWORD PTR [rip+0x13166]        # 1aa2c <stderr@@GLIBC_2.2.5+0x9ec>
    78c6:	test   eax,eax
    78c8:	je     7ef0 <__ctype_b_loc@plt+0x4580>
    78ce:	lea    rax,[rip+0x88f4b]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    78d5:	mov    DWORD PTR [rsp+0x1c],0xffffff9c
    78dd:	mov    QWORD PTR [rsp+0x10],rax
    78e2:	call   3560 <__errno_location@plt>
    78e7:	lea    rbp,[rsp+0x30]
    78ec:	lea    r13,[rip+0x88f2d]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    78f3:	mov    QWORD PTR [rsp+0x20],rax
    78f8:	lea    r12,[rip+0xbb4c]        # 1344b <__ctype_b_loc@plt+0xfadb>
    78ff:	mov    rdx,r13
    7902:	lea    rax,[rip+0x12c57]        # 1a560 <stderr@@GLIBC_2.2.5+0x520>
    7909:	lea    rsi,[rdx+0x1]
    790d:	movzx  edx,BYTE PTR [rdx]
    7910:	lea    rcx,[rax+0x1]
    7914:	mov    BYTE PTR [rax],dl
    7916:	test   dl,dl
    7918:	jne    7a10 <__ctype_b_loc@plt+0x40a0>
    791e:	mov    rdx,rbp
    7921:	lea    rsi,[rip+0x13058]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    7928:	xor    edi,edi
    792a:	call   34f0 <sigprocmask@plt>
    792f:	mov    rsi,QWORD PTR [rsp+0x10]
    7934:	mov    edi,DWORD PTR [rsp+0x1c]
    7938:	xor    eax,eax
    793a:	mov    ecx,0x180
    793f:	mov    edx,0xc1
    7944:	call   e060 <__ctype_b_loc@plt+0xa6f0>
    7949:	xor    edx,edx
    794b:	mov    rsi,rbp
    794e:	mov    edi,0x2
    7953:	mov    DWORD PTR [rip+0x46ac7],eax        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7959:	mov    DWORD PTR [rip+0x106b9],eax        # 18018 <__ctype_b_loc@plt+0x146a8>
    795f:	mov    rax,QWORD PTR [rsp+0x20]
    7964:	mov    ecx,DWORD PTR [rax]
    7966:	mov    DWORD PTR [rsp+0x8],ecx
    796a:	call   34f0 <sigprocmask@plt>
    796f:	mov    eax,DWORD PTR [rip+0x46aab]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7975:	test   eax,eax
    7977:	jns    8177 <__ctype_b_loc@plt+0x4807>
    797d:	mov    ecx,DWORD PTR [rsp+0x8]
    7981:	cmp    ecx,0x11
    7984:	je     7a20 <__ctype_b_loc@plt+0x40b0>
    798a:	cmp    ecx,0x24
    798d:	jne    7ab8 <__ctype_b_loc@plt+0x4148>
    7993:	lea    rbx,[rip+0x88e86]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    799a:	mov    edx,DWORD PTR [rbx]
    799c:	add    rbx,0x4
    79a0:	lea    eax,[rdx-0x1010101]
    79a6:	not    edx
    79a8:	and    eax,edx
    79aa:	and    eax,0x80808080
    79af:	je     799a <__ctype_b_loc@plt+0x402a>
    79b1:	mov    edx,eax
    79b3:	shr    edx,0x10
    79b6:	test   eax,0x8080
    79bb:	cmove  eax,edx
    79be:	lea    rdx,[rbx+0x2]
    79c2:	cmove  rbx,rdx
    79c6:	mov    esi,eax
    79c8:	add    sil,al
    79cb:	mov    eax,DWORD PTR [rip+0x13063]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    79d1:	sbb    rbx,0x3
    79d5:	sub    rbx,r13
    79d8:	test   eax,eax
    79da:	je     7f30 <__ctype_b_loc@plt+0x45c0>
    79e0:	cmp    rbx,0x1
    79e4:	jbe    8298 <__ctype_b_loc@plt+0x4928>
    79ea:	lea    rax,[rip+0x88e2e]        # 9081f <stderr@@GLIBC_2.2.5+0x767df>
    79f1:	mov    rdx,r13
    79f4:	mov    BYTE PTR [rbx+rax*1],0x0
    79f8:	mov    ebx,0x1
    79fd:	lea    rax,[rip+0x12b5c]        # 1a560 <stderr@@GLIBC_2.2.5+0x520>
    7a04:	jmp    7909 <__ctype_b_loc@plt+0x3f99>
    7a09:	nop    DWORD PTR [rax+0x0]
    7a10:	mov    rdx,rsi
    7a13:	mov    rax,rcx
    7a16:	jmp    7909 <__ctype_b_loc@plt+0x3f99>
    7a1b:	nop    DWORD PTR [rax+rax*1+0x0]
    7a20:	mov    r15d,DWORD PTR [rip+0x13009]        # 1aa30 <stderr@@GLIBC_2.2.5+0x9f0>
    7a27:	test   r15d,r15d
    7a2a:	jne    7aa1 <__ctype_b_loc@plt+0x4131>
    7a2c:	mov    rdx,QWORD PTR [rip+0x9a5d5]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7a33:	mov    rdi,QWORD PTR [rip+0x12606]        # 1a040 <stderr@@GLIBC_2.2.5>
    7a3a:	mov    rcx,r13
    7a3d:	xor    eax,eax
    7a3f:	lea    rsi,[rip+0xb374]        # 12dba <__ctype_b_loc@plt+0xf44a>
    7a46:	call   f390 <__ctype_b_loc@plt+0xba20>
    7a4b:	mov    r14d,DWORD PTR [rip+0x12fce]        # 1aa20 <stderr@@GLIBC_2.2.5+0x9e0>
    7a52:	test   r14d,r14d
    7a55:	je     8053 <__ctype_b_loc@plt+0x46e3>
    7a5b:	cmp    BYTE PTR [rip+0x12fdb],0x0        # 1aa3d <stderr@@GLIBC_2.2.5+0x9fd>
    7a62:	jne    7a73 <__ctype_b_loc@plt+0x4103>
    7a64:	xor    edi,edi
    7a66:	call   35d0 <isatty@plt>
    7a6b:	test   eax,eax
    7a6d:	je     8053 <__ctype_b_loc@plt+0x46e3>
    7a73:	mov    rdi,QWORD PTR [rip+0x125c6]        # 1a040 <stderr@@GLIBC_2.2.5>
    7a7a:	lea    rsi,[rip+0xaa2f]        # 124b0 <__ctype_b_loc@plt+0xeb40>
    7a81:	xor    eax,eax
    7a83:	call   f390 <__ctype_b_loc@plt+0xba20>
    7a88:	mov    rdi,QWORD PTR [rip+0x125b1]        # 1a040 <stderr@@GLIBC_2.2.5>
    7a8f:	call   f340 <__ctype_b_loc@plt+0xb9d0>
    7a94:	call   f010 <__ctype_b_loc@plt+0xb6a0>
    7a99:	test   al,al
    7a9b:	je     8053 <__ctype_b_loc@plt+0x46e3>
    7aa1:	mov    rdi,r13
    7aa4:	call   d170 <__ctype_b_loc@plt+0x9800>
    7aa9:	test   eax,eax
    7aab:	je     78ff <__ctype_b_loc@plt+0x3f8f>
    7ab1:	nop    DWORD PTR [rax+0x0]
    7ab8:	lea    rdi,[rip+0x88d61]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7abf:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    7ac4:	jmp    7532 <__ctype_b_loc@plt+0x3bc2>
    7ac9:	nop    DWORD PTR [rax+0x0]
    7ad0:	mov    DWORD PTR [rbp+0x0],0x7261742e
    7ad7:	mov    BYTE PTR [rbp+0x4],0x0
    7adb:	jmp    7348 <__ctype_b_loc@plt+0x39d8>
    7ae0:	mov    rax,QWORD PTR [rip+0x12601]        # 1a0e8 <stderr@@GLIBC_2.2.5+0xa8>
    7ae7:	mov    r12d,DWORD PTR [rip+0x125ca]        # 1a0b8 <stderr@@GLIBC_2.2.5+0x78>
    7aee:	mov    rdx,QWORD PTR [rip+0x1260b]        # 1a100 <stderr@@GLIBC_2.2.5+0xc0>
    7af5:	mov    ecx,DWORD PTR [rip+0x12f39]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    7afb:	mov    QWORD PTR [rsp+0x30],rax
    7b00:	mov    rax,QWORD PTR [rip+0x125e9]        # 1a0f0 <stderr@@GLIBC_2.2.5+0xb0>
    7b07:	and    r12d,0x1ff
    7b0e:	mov    QWORD PTR [rsp+0x48],rdx
    7b13:	mov    edi,DWORD PTR [rip+0x46907]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7b19:	mov    QWORD PTR [rsp+0x38],rax
    7b1e:	mov    rax,QWORD PTR [rip+0x125d3]        # 1a0f8 <stderr@@GLIBC_2.2.5+0xb8>
    7b25:	mov    QWORD PTR [rsp+0x40],rax
    7b2a:	test   ecx,ecx
    7b2c:	je     7dc8 <__ctype_b_loc@plt+0x4458>
    7b32:	mov    rcx,QWORD PTR [rip+0x9a4df]        # a2018 <stderr@@GLIBC_2.2.5+0x87fd8>
    7b39:	test   rcx,rcx
    7b3c:	js     7dc8 <__ctype_b_loc@plt+0x4458>
    7b42:	cmp    QWORD PTR [rip+0x9a4c7],rax        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    7b49:	jne    7b54 <__ctype_b_loc@plt+0x41e4>
    7b4b:	cmp    rdx,rcx
    7b4e:	je     7dc8 <__ctype_b_loc@plt+0x4458>
    7b54:	movdqu xmm0,XMMWORD PTR [rip+0x9a4b4]        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    7b5c:	lea    rbp,[rsp+0x30]
    7b61:	lea    rsi,[rip+0x88cb8]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7b68:	mov    rdx,rbp
    7b6b:	movaps XMMWORD PTR [rsp+0x40],xmm0
    7b70:	call   e6a0 <__ctype_b_loc@plt+0xad30>
    7b75:	test   eax,eax
    7b77:	jne    7de4 <__ctype_b_loc@plt+0x4474>
    7b7d:	cmp    DWORD PTR [rip+0x1250c],0x1        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    7b84:	jle    7ba8 <__ctype_b_loc@plt+0x4238>
    7b86:	mov    rdi,QWORD PTR [rip+0x124b3]        # 1a040 <stderr@@GLIBC_2.2.5>
    7b8d:	lea    rdx,[rip+0x88c8c]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7b94:	lea    rsi,[rip+0xb266]        # 12e01 <__ctype_b_loc@plt+0xf491>
    7b9b:	xor    eax,eax
    7b9d:	call   f390 <__ctype_b_loc@plt+0xba20>
    7ba2:	nop    WORD PTR [rax+rax*1+0x0]
    7ba8:	mov    edi,DWORD PTR [rip+0x46872]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7bae:	mov    edx,DWORD PTR [rip+0x1250c]        # 1a0c0 <stderr@@GLIBC_2.2.5+0x80>
    7bb4:	mov    esi,0xffffffff
    7bb9:	call   38c0 <fchown@plt>
    7bbe:	mov    edi,DWORD PTR [rip+0x4685c]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7bc4:	mov    esi,r12d
    7bc7:	call   3870 <fchmod@plt>
    7bcc:	test   eax,eax
    7bce:	je     7c10 <__ctype_b_loc@plt+0x42a0>
    7bd0:	call   3560 <__errno_location@plt>
    7bd5:	mov    r12d,DWORD PTR [rax]
    7bd8:	mov    rbx,rax
    7bdb:	mov    eax,DWORD PTR [rip+0x124ab]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7be1:	test   eax,eax
    7be3:	je     810f <__ctype_b_loc@plt+0x479f>
    7be9:	mov    ecx,DWORD PTR [rip+0x12495]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7bef:	test   ecx,ecx
    7bf1:	jne    7c10 <__ctype_b_loc@plt+0x42a0>
    7bf3:	mov    DWORD PTR [rip+0x12487],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7bfd:	test   eax,eax
    7bff:	jne    7c10 <__ctype_b_loc@plt+0x42a0>
    7c01:	mov    DWORD PTR [rbx],r12d
    7c04:	lea    rdi,[rip+0x88c15]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7c0b:	call   38d0 <perror@plt>
    7c10:	mov    esi,DWORD PTR [rip+0x124a6]        # 1a0bc <stderr@@GLIBC_2.2.5+0x7c>
    7c16:	mov    edi,DWORD PTR [rip+0x46804]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7c1c:	mov    edx,0xffffffff
    7c21:	call   38c0 <fchown@plt>
    7c26:	cmp    BYTE PTR [rip+0x12e0f],0x0        # 1aa3c <stderr@@GLIBC_2.2.5+0x9fc>
    7c2d:	je     7c6d <__ctype_b_loc@plt+0x42fd>
    7c2f:	mov    edi,DWORD PTR [rip+0x103df]        # 18014 <__ctype_b_loc@plt+0x146a4>
    7c35:	test   edi,edi
    7c37:	js     7c50 <__ctype_b_loc@plt+0x42e0>
    7c39:	call   3570 <fdatasync@plt>
    7c3e:	test   eax,eax
    7c40:	je     7c50 <__ctype_b_loc@plt+0x42e0>
    7c42:	call   3560 <__errno_location@plt>
    7c47:	cmp    DWORD PTR [rax],0x16
    7c4a:	jne    82b0 <__ctype_b_loc@plt+0x4940>
    7c50:	mov    edi,DWORD PTR [rip+0x467ca]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7c56:	call   3890 <fsync@plt>
    7c5b:	test   eax,eax
    7c5d:	je     7c6d <__ctype_b_loc@plt+0x42fd>
    7c5f:	call   3560 <__errno_location@plt>
    7c64:	cmp    DWORD PTR [rax],0x16
    7c67:	jne    82b0 <__ctype_b_loc@plt+0x4940>
    7c6d:	mov    edi,DWORD PTR [rip+0x467ad]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    7c73:	call   36d0 <close@plt>
    7c78:	test   eax,eax
    7c7a:	jne    82b0 <__ctype_b_loc@plt+0x4940>
    7c80:	mov    r14d,DWORD PTR [rip+0x12da5]        # 1aa2c <stderr@@GLIBC_2.2.5+0x9ec>
    7c87:	test   r14d,r14d
    7c8a:	jne    7cf3 <__ctype_b_loc@plt+0x4383>
    7c8c:	lea    rdi,[rip+0x1636d]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7c93:	call   df50 <__ctype_b_loc@plt+0xa5e0>
    7c98:	lea    rdi,[rip+0x16361]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7c9f:	mov    rsi,rax
    7ca2:	mov    r12,rax
    7ca5:	sub    rsi,rdi
    7ca8:	call   5540 <__ctype_b_loc@plt+0x1bd0>
    7cad:	test   al,al
    7caf:	jne    80d2 <__ctype_b_loc@plt+0x4762>
    7cb5:	mov    rdx,rbp
    7cb8:	lea    rsi,[rip+0x12cc1]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    7cbf:	xor    edi,edi
    7cc1:	call   34f0 <sigprocmask@plt>
    7cc6:	mov    DWORD PTR [rip+0x10348],0xffffffff        # 18018 <__ctype_b_loc@plt+0x146a8>
    7cd0:	lea    rdi,[rip+0x16329]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7cd7:	call   d170 <__ctype_b_loc@plt+0x9800>
    7cdc:	test   eax,eax
    7cde:	jne    806d <__ctype_b_loc@plt+0x46fd>
    7ce4:	xor    edx,edx
    7ce6:	mov    rsi,rbp
    7ce9:	mov    edi,0x2
    7cee:	call   34f0 <sigprocmask@plt>
    7cf3:	cmp    DWORD PTR [rip+0x10326],0xffffffff        # 18020 <__ctype_b_loc@plt+0x146b0>
    7cfa:	jne    7716 <__ctype_b_loc@plt+0x3da6>
    7d00:	mov    ebp,DWORD PTR [rip+0x1238e]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    7d06:	test   ebp,ebp
    7d08:	jne    7247 <__ctype_b_loc@plt+0x38d7>
    7d0e:	xor    edi,edi
    7d10:	call   53e0 <__ctype_b_loc@plt+0x1a70>
    7d15:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7d1a:	nop    WORD PTR [rax+rax*1+0x0]
    7d20:	mov    rdi,QWORD PTR [rip+0x12319]        # 1a040 <stderr@@GLIBC_2.2.5>
    7d27:	lea    rdx,[rip+0x162d2]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7d2e:	lea    rsi,[rip+0xb0c7]        # 12dfc <__ctype_b_loc@plt+0xf48c>
    7d35:	xor    eax,eax
    7d37:	call   f390 <__ctype_b_loc@plt+0xba20>
    7d3c:	jmp    73ba <__ctype_b_loc@plt+0x3a4a>
    7d41:	nop    DWORD PTR [rax+0x0]
    7d48:	mov    rdi,r12
    7d4b:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    7d50:	jmp    712f <__ctype_b_loc@plt+0x37bf>
    7d55:	nop    DWORD PTR [rax]
    7d58:	mov    r9d,0x7475
    7d5e:	mov    BYTE PTR [rip+0x88ac1],0x0        # 90826 <stderr@@GLIBC_2.2.5+0x767e6>
    7d65:	mov    DWORD PTR [rip+0x88ab1],0x6f647473        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7d6f:	mov    WORD PTR [rip+0x88aad],r9w        # 90824 <stderr@@GLIBC_2.2.5+0x767e4>
    7d77:	jmp    7348 <__ctype_b_loc@plt+0x39d8>
    7d7c:	nop    DWORD PTR [rax+0x0]
    7d80:	mov    rdi,r12
    7d83:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    7d88:	mov    r8d,DWORD PTR [rsp+0x8]
    7d8d:	mov    edi,r8d
    7d90:	call   36d0 <close@plt>
    7d95:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7d9a:	nop    WORD PTR [rax+rax*1+0x0]
    7da0:	mov    rdi,r12
    7da3:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    7da8:	mov    rdi,rbp
    7dab:	call   36f0 <closedir@plt>
    7db0:	test   eax,eax
    7db2:	je     7247 <__ctype_b_loc@plt+0x38d7>
    7db8:	mov    rdi,r12
    7dbb:	call   54f0 <__ctype_b_loc@plt+0x1b80>
    7dc0:	jmp    7247 <__ctype_b_loc@plt+0x38d7>
    7dc5:	nop    DWORD PTR [rax]
    7dc8:	lea    rbp,[rsp+0x30]
    7dcd:	lea    rsi,[rip+0x88a4c]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7dd4:	mov    rdx,rbp
    7dd7:	call   e6a0 <__ctype_b_loc@plt+0xad30>
    7ddc:	test   eax,eax
    7dde:	je     7ba8 <__ctype_b_loc@plt+0x4238>
    7de4:	call   3560 <__errno_location@plt>
    7de9:	mov    r13d,DWORD PTR [rax]
    7dec:	mov    rbx,rax
    7def:	mov    eax,DWORD PTR [rip+0x12297]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7df5:	test   eax,eax
    7df7:	je     8144 <__ctype_b_loc@plt+0x47d4>
    7dfd:	mov    edx,DWORD PTR [rip+0x12281]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7e03:	test   edx,edx
    7e05:	jne    7ba8 <__ctype_b_loc@plt+0x4238>
    7e0b:	mov    DWORD PTR [rip+0x1226f],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    7e15:	test   eax,eax
    7e17:	jne    7ba8 <__ctype_b_loc@plt+0x4238>
    7e1d:	mov    DWORD PTR [rbx],r13d
    7e20:	lea    rdi,[rip+0x889f9]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7e27:	call   38d0 <perror@plt>
    7e2c:	jmp    7ba8 <__ctype_b_loc@plt+0x4238>
    7e31:	nop    DWORD PTR [rax+0x0]
    7e38:	mov    ecx,DWORD PTR [rip+0x12252]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    7e3e:	test   ecx,ecx
    7e40:	jne    7e54 <__ctype_b_loc@plt+0x44e4>
    7e42:	mov    eax,DWORD PTR [rip+0x12be0]        # 1aa28 <stderr@@GLIBC_2.2.5+0x9e8>
    7e48:	or     eax,DWORD PTR [rip+0x1223e]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7e4e:	jne    7532 <__ctype_b_loc@plt+0x3bc2>
    7e54:	mov    rdx,QWORD PTR [rip+0x9a1ad]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7e5b:	mov    rdi,QWORD PTR [rip+0x121de]        # 1a040 <stderr@@GLIBC_2.2.5>
    7e62:	xor    eax,eax
    7e64:	mov    r8,rbp
    7e67:	lea    rcx,[rip+0x16192]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7e6e:	lea    rsi,[rip+0xa5eb]        # 12460 <__ctype_b_loc@plt+0xeaf0>
    7e75:	call   f390 <__ctype_b_loc@plt+0xba20>
    7e7a:	jmp    7532 <__ctype_b_loc@plt+0x3bc2>
    7e7f:	nop
    7e80:	sub    r8,rax
    7e83:	mov    rdi,rsi
    7e86:	sub    rdi,r8
    7e89:	call   d7a0 <__ctype_b_loc@plt+0x9e30>
    7e8e:	jmp    7771 <__ctype_b_loc@plt+0x3e01>
    7e93:	nop    DWORD PTR [rax+rax*1+0x0]
    7e98:	lea    rsi,[rip+0xaf7a]        # 12e19 <__ctype_b_loc@plt+0xf4a9>
    7e9f:	mov    rdi,rdx
    7ea2:	xor    eax,eax
    7ea4:	call   f390 <__ctype_b_loc@plt+0xba20>
    7ea9:	jmp    7771 <__ctype_b_loc@plt+0x3e01>
    7eae:	xchg   ax,ax
    7eb0:	mov    ebp,DWORD PTR [rip+0x121d6]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    7eb6:	test   ebp,ebp
    7eb8:	jne    70bc <__ctype_b_loc@plt+0x374c>
    7ebe:	mov    rdx,QWORD PTR [rip+0x9a143]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    7ec5:	mov    rdi,QWORD PTR [rip+0x12174]        # 1a040 <stderr@@GLIBC_2.2.5>
    7ecc:	lea    rcx,[rip+0x1612d]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    7ed3:	xor    eax,eax
    7ed5:	lea    rsi,[rip+0xa4fc]        # 123d8 <__ctype_b_loc@plt+0xea68>
    7edc:	call   f390 <__ctype_b_loc@plt+0xba20>
    7ee1:	mov    r8d,DWORD PTR [rip+0x88918]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    7ee8:	jmp    70bc <__ctype_b_loc@plt+0x374c>
    7eed:	nop    DWORD PTR [rax]
    7ef0:	lea    rdi,[rip+0x88929]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7ef7:	call   df50 <__ctype_b_loc@plt+0xa5e0>
    7efc:	lea    r8,[rip+0x8891d]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    7f03:	mov    rsi,rax
    7f06:	mov    rdi,r8
    7f09:	mov    QWORD PTR [rsp+0x10],rax
    7f0e:	sub    rsi,r8
    7f11:	call   55a0 <__ctype_b_loc@plt+0x1c30>
    7f16:	mov    DWORD PTR [rsp+0x1c],eax
    7f1a:	test   eax,eax
    7f1c:	jns    78e2 <__ctype_b_loc@plt+0x3f72>
    7f22:	jmp    78ce <__ctype_b_loc@plt+0x3f5e>
    7f27:	nop    WORD PTR [rax+rax*1+0x0]
    7f30:	mov    rdi,r13
    7f33:	call   6340 <__ctype_b_loc@plt+0x29d0>
    7f38:	test   rax,rax
    7f3b:	je     82b5 <__ctype_b_loc@plt+0x4945>
    7f41:	mov    BYTE PTR [rax],0x0
    7f44:	mov    DWORD PTR [rip+0x464da],0x1        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    7f4e:	cmp    rbx,0x4
    7f52:	jbe    7f77 <__ctype_b_loc@plt+0x4607>
    7f54:	lea    r8,[rax-0x4]
    7f58:	mov    ecx,0x5
    7f5d:	lea    rdi,[rip+0xae51]        # 12db5 <__ctype_b_loc@plt+0xf445>
    7f64:	mov    rsi,r8
    7f67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7f69:	seta   dl
    7f6c:	sbb    dl,0x0
    7f6f:	test   dl,dl
    7f71:	je     823d <__ctype_b_loc@plt+0x48cd>
    7f77:	mov    rdi,r13
    7f7a:	mov    ebx,0x3
    7f7f:	call   df50 <__ctype_b_loc@plt+0xa5e0>
    7f84:	mov    QWORD PTR [rsp+0x28],rax
    7f89:	movzx  eax,BYTE PTR [rax]
    7f8c:	mov    BYTE PTR [rsp+0x8],al
    7f90:	cmp    BYTE PTR [rsp+0x8],0x0
    7f95:	je     7fc5 <__ctype_b_loc@plt+0x4655>
    7f97:	mov    r15,QWORD PTR [rsp+0x28]
    7f9c:	xor    r14d,r14d
    7f9f:	nop
    7fa0:	mov    rsi,r12
    7fa3:	mov    rdi,r15
    7fa6:	call   3700 <strcspn@plt>
    7fab:	movsxd rdx,eax
    7fae:	add    rdx,r15
    7fb1:	cmp    ebx,eax
    7fb3:	lea    rsi,[rdx-0x1]
    7fb7:	cmovl  r14,rsi
    7fbb:	cmp    BYTE PTR [rdx],0x0
    7fbe:	jne    8020 <__ctype_b_loc@plt+0x46b0>
    7fc0:	test   r14,r14
    7fc3:	jne    8008 <__ctype_b_loc@plt+0x4698>
    7fc5:	sub    ebx,0x1
    7fc8:	jne    7f90 <__ctype_b_loc@plt+0x4620>
    7fca:	mov    rdi,r13
    7fcd:	mov    esi,0x2e
    7fd2:	call   36a0 <strrchr@plt>
    7fd7:	mov    rdi,rax
    7fda:	test   rax,rax
    7fdd:	je     82a4 <__ctype_b_loc@plt+0x4934>
    7fe3:	cmp    BYTE PTR [rdi+0x1],0x1
    7fe7:	sbb    rdi,0x0
    7feb:	mov    rsi,QWORD PTR [rip+0x12a16]        # 1aa08 <stderr@@GLIBC_2.2.5+0x9c8>
    7ff2:	mov    ebx,0x1
    7ff7:	call   35a0 <strcpy@plt>
    7ffc:	jmp    78ff <__ctype_b_loc@plt+0x3f8f>
    8001:	nop    DWORD PTR [rax+0x0]
    8008:	movzx  eax,BYTE PTR [r14+0x1]
    800d:	mov    rdi,r14
    8010:	add    r14,0x1
    8014:	mov    BYTE PTR [r14-0x1],al
    8018:	test   al,al
    801a:	jne    8008 <__ctype_b_loc@plt+0x4698>
    801c:	jmp    7feb <__ctype_b_loc@plt+0x467b>
    801e:	xchg   ax,ax
    8020:	cmp    BYTE PTR [rdx+0x1],0x0
    8024:	lea    r15,[rdx+0x1]
    8028:	jne    7fa0 <__ctype_b_loc@plt+0x4630>
    802e:	jmp    7fc0 <__ctype_b_loc@plt+0x4650>
    8030:	mov    r8d,DWORD PTR [rip+0x12059]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    8037:	mov    eax,DWORD PTR [rip+0x1204f]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    803d:	test   r8d,r8d
    8040:	je     7532 <__ctype_b_loc@plt+0x3bc2>
    8046:	test   eax,eax
    8048:	jne    751e <__ctype_b_loc@plt+0x3bae>
    804e:	jmp    760c <__ctype_b_loc@plt+0x3c9c>
    8053:	mov    rdi,QWORD PTR [rip+0x11fe6]        # 1a040 <stderr@@GLIBC_2.2.5>
    805a:	lea    rsi,[rip+0xad70]        # 12dd1 <__ctype_b_loc@plt+0xf461>
    8061:	xor    eax,eax
    8063:	call   f390 <__ctype_b_loc@plt+0xba20>
    8068:	jmp    751e <__ctype_b_loc@plt+0x3bae>
    806d:	call   3560 <__errno_location@plt>
    8072:	xor    edx,edx
    8074:	mov    rsi,rbp
    8077:	mov    edi,0x2
    807c:	mov    r12d,DWORD PTR [rax]
    807f:	mov    rbx,rax
    8082:	call   34f0 <sigprocmask@plt>
    8087:	test   r12d,r12d
    808a:	je     7cf3 <__ctype_b_loc@plt+0x4383>
    8090:	mov    eax,DWORD PTR [rip+0x11ff6]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    8096:	test   eax,eax
    8098:	je     8208 <__ctype_b_loc@plt+0x4898>
    809e:	mov    esi,DWORD PTR [rip+0x11fe0]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    80a4:	test   esi,esi
    80a6:	jne    7cf3 <__ctype_b_loc@plt+0x4383>
    80ac:	mov    DWORD PTR [rip+0x11fce],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    80b6:	test   eax,eax
    80b8:	jne    7cf3 <__ctype_b_loc@plt+0x4383>
    80be:	mov    DWORD PTR [rbx],r12d
    80c1:	lea    rdi,[rip+0x15f38]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    80c8:	call   38d0 <perror@plt>
    80cd:	jmp    7cf3 <__ctype_b_loc@plt+0x4383>
    80d2:	mov    r13d,DWORD PTR [rip+0xff3b]        # 18014 <__ctype_b_loc@plt+0x146a4>
    80d9:	mov    rdx,rbp
    80dc:	lea    rsi,[rip+0x1289d]        # 1a980 <stderr@@GLIBC_2.2.5+0x940>
    80e3:	xor    edi,edi
    80e5:	call   34f0 <sigprocmask@plt>
    80ea:	mov    DWORD PTR [rip+0xff24],0xffffffff        # 18018 <__ctype_b_loc@plt+0x146a8>
    80f4:	test   r13d,r13d
    80f7:	js     7cd0 <__ctype_b_loc@plt+0x4360>
    80fd:	xor    edx,edx
    80ff:	mov    rsi,r12
    8102:	mov    edi,r13d
    8105:	call   35b0 <unlinkat@plt>
    810a:	jmp    7cdc <__ctype_b_loc@plt+0x436c>
    810f:	mov    rdx,QWORD PTR [rip+0x99ef2]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    8116:	mov    rdi,QWORD PTR [rip+0x11f23]        # 1a040 <stderr@@GLIBC_2.2.5>
    811d:	lea    rsi,[rip+0xb6b8]        # 137dc <__ctype_b_loc@plt+0xfe6c>
    8124:	call   f390 <__ctype_b_loc@plt+0xba20>
    8129:	mov    r15d,DWORD PTR [rip+0x11f54]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    8130:	mov    eax,DWORD PTR [rip+0x11f56]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    8136:	test   r15d,r15d
    8139:	jne    7bfd <__ctype_b_loc@plt+0x428d>
    813f:	jmp    7bf3 <__ctype_b_loc@plt+0x4283>
    8144:	mov    rdx,QWORD PTR [rip+0x99ebd]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    814b:	mov    rdi,QWORD PTR [rip+0x11eee]        # 1a040 <stderr@@GLIBC_2.2.5>
    8152:	lea    rsi,[rip+0xb683]        # 137dc <__ctype_b_loc@plt+0xfe6c>
    8159:	call   f390 <__ctype_b_loc@plt+0xba20>
    815e:	mov    edx,DWORD PTR [rip+0x11f20]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    8164:	mov    eax,DWORD PTR [rip+0x11f22]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    816a:	test   edx,edx
    816c:	jne    7e15 <__ctype_b_loc@plt+0x44a5>
    8172:	jmp    7e0b <__ctype_b_loc@plt+0x449b>
    8177:	mov    eax,DWORD PTR [rip+0x128b7]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    817d:	mov    edx,eax
    817f:	test   ebx,ebx
    8181:	je     81ad <__ctype_b_loc@plt+0x483d>
    8183:	test   eax,eax
    8185:	je     81b5 <__ctype_b_loc@plt+0x4845>
    8187:	cmp    DWORD PTR [rip+0x11efe],0x0        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    818e:	je     8256 <__ctype_b_loc@plt+0x48e6>
    8194:	cmp    DWORD PTR [rip+0x11ee9],0x0        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    819b:	jne    738b <__ctype_b_loc@plt+0x3a1b>
    81a1:	mov    DWORD PTR [rip+0x11ed9],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    81ab:	mov    eax,edx
    81ad:	test   eax,eax
    81af:	jne    738b <__ctype_b_loc@plt+0x3a1b>
    81b5:	mov    r11d,DWORD PTR [rip+0x4626c]        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    81bc:	mov    eax,DWORD PTR [rip+0x11ece]        # 1a090 <stderr@@GLIBC_2.2.5+0x50>
    81c2:	test   r11d,r11d
    81c5:	je     739d <__ctype_b_loc@plt+0x3a2d>
    81cb:	mov    esi,eax
    81cd:	or     esi,DWORD PTR [rip+0x11eb9]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    81d3:	jne    73b2 <__ctype_b_loc@plt+0x3a42>
    81d9:	mov    rdx,QWORD PTR [rip+0x99e28]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    81e0:	mov    rdi,QWORD PTR [rip+0x11e59]        # 1a040 <stderr@@GLIBC_2.2.5>
    81e7:	xor    eax,eax
    81e9:	lea    r8,[rip+0x88630]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    81f0:	lea    rcx,[rip+0x15e09]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    81f7:	lea    rsi,[rip+0xabe5]        # 12de3 <__ctype_b_loc@plt+0xf473>
    81fe:	call   f390 <__ctype_b_loc@plt+0xba20>
    8203:	jmp    738b <__ctype_b_loc@plt+0x3a1b>
    8208:	mov    rdx,QWORD PTR [rip+0x99df9]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    820f:	mov    rdi,QWORD PTR [rip+0x11e2a]        # 1a040 <stderr@@GLIBC_2.2.5>
    8216:	lea    rsi,[rip+0xb5bf]        # 137dc <__ctype_b_loc@plt+0xfe6c>
    821d:	call   f390 <__ctype_b_loc@plt+0xba20>
    8222:	mov    r13d,DWORD PTR [rip+0x11e5b]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    8229:	mov    eax,DWORD PTR [rip+0x11e5d]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    822f:	test   r13d,r13d
    8232:	jne    80b6 <__ctype_b_loc@plt+0x4746>
    8238:	jmp    80ac <__ctype_b_loc@plt+0x473c>
    823d:	mov    DWORD PTR [rax-0x4],0x7a67742e
    8244:	mov    ebx,0x1
    8249:	mov    BYTE PTR [rax],0x0
    824c:	jmp    78ff <__ctype_b_loc@plt+0x3f8f>
    8251:	call   3680 <__stack_chk_fail@plt>
    8256:	mov    rdx,QWORD PTR [rip+0x99dab]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    825d:	mov    rdi,QWORD PTR [rip+0x11ddc]        # 1a040 <stderr@@GLIBC_2.2.5>
    8264:	xor    eax,eax
    8266:	lea    rcx,[rip+0x885b3]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    826d:	lea    rsi,[rip+0xa264]        # 124d8 <__ctype_b_loc@plt+0xeb68>
    8274:	call   f390 <__ctype_b_loc@plt+0xba20>
    8279:	cmp    DWORD PTR [rip+0x11e04],0x0        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    8280:	jne    828d <__ctype_b_loc@plt+0x491d>
    8282:	mov    edx,DWORD PTR [rip+0x127ac]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    8288:	jmp    81a1 <__ctype_b_loc@plt+0x4831>
    828d:	mov    eax,DWORD PTR [rip+0x127a1]        # 1aa34 <stderr@@GLIBC_2.2.5+0x9f4>
    8293:	jmp    81ad <__ctype_b_loc@plt+0x483d>
    8298:	lea    rdi,[rip+0xaaf1]        # 12d90 <__ctype_b_loc@plt+0xf420>
    829f:	call   d310 <__ctype_b_loc@plt+0x99a0>
    82a4:	lea    rdi,[rip+0xa1e5]        # 12490 <__ctype_b_loc@plt+0xeb20>
    82ab:	call   d310 <__ctype_b_loc@plt+0x99a0>
    82b0:	call   d470 <__ctype_b_loc@plt+0x9b00>
    82b5:	lea    rdi,[rip+0xaae3]        # 12d9f <__ctype_b_loc@plt+0xf42f>
    82bc:	call   d310 <__ctype_b_loc@plt+0x99a0>
    82c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    82cc:	nop    DWORD PTR [rax+0x0]
    82d0:	cmp    BYTE PTR [rdi],0x2d
    82d3:	jne    82f0 <__ctype_b_loc@plt+0x4980>
    82d5:	cmp    BYTE PTR [rdi+0x1],0x0
    82d9:	jne    82f0 <__ctype_b_loc@plt+0x4980>
    82db:	push   rbx
    82dc:	mov    ebx,DWORD PTR [rip+0x11db2]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    82e2:	call   6b50 <__ctype_b_loc@plt+0x31e0>
    82e7:	mov    DWORD PTR [rip+0x11da7],ebx        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    82ed:	pop    rbx
    82ee:	ret    
    82ef:	nop
    82f0:	jmp    6e80 <__ctype_b_loc@plt+0x3510>
    82f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    8300:	endbr64 
    8304:	push   rax
    8305:	pop    rax
    8306:	xor    edi,edi
    8308:	sub    rsp,0x8
    830c:	call   53e0 <__ctype_b_loc@plt+0x1a70>
    8311:	mov    edi,0x1
    8316:	call   69d0 <__ctype_b_loc@plt+0x3060>
    831b:	nop    DWORD PTR [rax+rax*1+0x0]
    8320:	push   r15
    8322:	movsxd rax,edx
    8325:	push   r14
    8327:	push   r13
    8329:	push   r12
    832b:	push   rbp
    832c:	lea    rbp,[rip+0x9bccd]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    8333:	push   rbx
    8334:	sub    rsp,0x48
    8338:	mov    r14,QWORD PTR [rip+0x12709]        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    833f:	mov    r13d,DWORD PTR [rip+0x126fe]        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    8346:	mov    QWORD PTR [rsp+0x28],rsi
    834b:	lea    rsi,[rip+0xb00e]        # 13360 <__ctype_b_loc@plt+0xf9f0>
    8352:	mov    r12d,DWORD PTR [rip+0x99cc7]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    8359:	movzx  eax,WORD PTR [rsi+rax*2]
    835d:	mov    QWORD PTR [rsp+0x10],rdi
    8362:	mov    DWORD PTR [rsp+0xc],edx
    8366:	mov    DWORD PTR [rsp+0x18],eax
    836a:	movsxd rax,ecx
    836d:	movzx  eax,WORD PTR [rsi+rax*2]
    8371:	mov    DWORD PTR [rsp+0x34],ecx
    8375:	mov    DWORD PTR [rsp+0x30],eax
    8379:	nop    DWORD PTR [rax+0x0]
    8380:	cmp    r13d,DWORD PTR [rsp+0xc]
    8385:	jb     8400 <__ctype_b_loc@plt+0x4a90>
    8387:	mov    edx,DWORD PTR [rsp+0x18]
    838b:	mov    rax,QWORD PTR [rsp+0x10]
    8390:	and    edx,r14d
    8393:	shl    rdx,0x4
    8397:	lea    rbx,[rax+rdx*1]
    839b:	movzx  r15d,BYTE PTR [rbx]
    839f:	cmp    r15d,0x10
    83a3:	ja     8463 <__ctype_b_loc@plt+0x4af3>
    83a9:	movzx  eax,BYTE PTR [rbx+0x1]
    83ad:	mov    ecx,eax
    83af:	sub    r13d,eax
    83b2:	shr    r14,cl
    83b5:	cmp    r15d,0x10
    83b9:	jne    84d0 <__ctype_b_loc@plt+0x4b60>
    83bf:	movzx  edx,WORD PTR [rbx+0x8]
    83c3:	mov    eax,r12d
    83c6:	lea    rsi,[rip+0x89c33]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    83cd:	add    r12d,0x1
    83d1:	mov    BYTE PTR [rsi+rax*1],dl
    83d4:	cmp    r12d,0x8000
    83db:	jne    8380 <__ctype_b_loc@plt+0x4a10>
    83dd:	mov    DWORD PTR [rip+0x99c39],0x8000        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    83e7:	xor    r12d,r12d
    83ea:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    83ef:	cmp    r13d,DWORD PTR [rsp+0xc]
    83f4:	jae    8387 <__ctype_b_loc@plt+0x4a17>
    83f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8400:	mov    eax,DWORD PTR [rip+0x4601e]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8406:	cmp    eax,DWORD PTR [rip+0x99c18]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    840c:	jae    8818 <__ctype_b_loc@plt+0x4ea8>
    8412:	lea    edx,[rax+0x1]
    8415:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    841a:	mov    DWORD PTR [rip+0x46004],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8420:	mov    ecx,r13d
    8423:	add    r13d,0x8
    8427:	shl    rax,cl
    842a:	or     r14,rax
    842d:	jmp    8380 <__ctype_b_loc@plt+0x4a10>
    8432:	nop    WORD PTR [rax+rax*1+0x0]
    8438:	lea    rsi,[rip+0xaf21]        # 13360 <__ctype_b_loc@plt+0xf9f0>
    843f:	movzx  eax,WORD PTR [rsi+r15*2]
    8444:	and    eax,r14d
    8447:	movzx  eax,ax
    844a:	shl    rax,0x4
    844e:	add    rax,QWORD PTR [rbx+0x8]
    8452:	movzx  r15d,BYTE PTR [rax]
    8456:	mov    rbx,rax
    8459:	cmp    r15d,0x10
    845d:	jbe    83a9 <__ctype_b_loc@plt+0x4a39>
    8463:	cmp    r15d,0x63
    8467:	je     8830 <__ctype_b_loc@plt+0x4ec0>
    846d:	movzx  eax,BYTE PTR [rbx+0x1]
    8471:	sub    r15d,0x10
    8475:	mov    ecx,eax
    8477:	sub    r13d,eax
    847a:	shr    r14,cl
    847d:	cmp    r13d,r15d
    8480:	jb     84a8 <__ctype_b_loc@plt+0x4b38>
    8482:	jmp    8438 <__ctype_b_loc@plt+0x4ac8>
    8484:	nop    DWORD PTR [rax+0x0]
    8488:	lea    edx,[rax+0x1]
    848b:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    8490:	mov    DWORD PTR [rip+0x45f8e],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8496:	mov    ecx,r13d
    8499:	add    r13d,0x8
    849d:	shl    rax,cl
    84a0:	or     r14,rax
    84a3:	cmp    r15d,r13d
    84a6:	jbe    8438 <__ctype_b_loc@plt+0x4ac8>
    84a8:	mov    eax,DWORD PTR [rip+0x45f76]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    84ae:	cmp    eax,DWORD PTR [rip+0x99b70]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    84b4:	jb     8488 <__ctype_b_loc@plt+0x4b18>
    84b6:	xor    edi,edi
    84b8:	mov    DWORD PTR [rip+0x99b61],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    84bf:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    84c4:	movzx  eax,al
    84c7:	jmp    8496 <__ctype_b_loc@plt+0x4b26>
    84c9:	nop    DWORD PTR [rax+0x0]
    84d0:	cmp    r15d,0xf
    84d4:	jne    84fb <__ctype_b_loc@plt+0x4b8b>
    84d6:	jmp    8844 <__ctype_b_loc@plt+0x4ed4>
    84db:	nop    DWORD PTR [rax+rax*1+0x0]
    84e0:	lea    edx,[rax+0x1]
    84e3:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    84e8:	mov    DWORD PTR [rip+0x45f36],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    84ee:	mov    ecx,r13d
    84f1:	add    r13d,0x8
    84f5:	shl    rax,cl
    84f8:	or     r14,rax
    84fb:	cmp    r15d,r13d
    84fe:	jbe    8528 <__ctype_b_loc@plt+0x4bb8>
    8500:	mov    eax,DWORD PTR [rip+0x45f1e]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8506:	cmp    eax,DWORD PTR [rip+0x99b18]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    850c:	jb     84e0 <__ctype_b_loc@plt+0x4b70>
    850e:	xor    edi,edi
    8510:	mov    DWORD PTR [rip+0x99b09],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    8517:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    851c:	movzx  eax,al
    851f:	jmp    84ee <__ctype_b_loc@plt+0x4b7e>
    8521:	nop    DWORD PTR [rax+0x0]
    8528:	movzx  eax,WORD PTR [rbx+0x8]
    852c:	sub    r13d,r15d
    852f:	lea    rsi,[rip+0xae2a]        # 13360 <__ctype_b_loc@plt+0xf9f0>
    8536:	mov    ecx,r15d
    8539:	mov    rbx,r14
    853c:	mov    WORD PTR [rsp+0x1c],ax
    8541:	mov    eax,r15d
    8544:	mov    r15d,r13d
    8547:	mov    r13d,DWORD PTR [rsp+0x34]
    854c:	movzx  eax,WORD PTR [rsi+rax*2]
    8550:	shr    rbx,cl
    8553:	mov    WORD PTR [rsp+0x20],ax
    8558:	cmp    r13d,r15d
    855b:	ja     8580 <__ctype_b_loc@plt+0x4c10>
    855d:	jmp    85a8 <__ctype_b_loc@plt+0x4c38>
    855f:	nop
    8560:	lea    edx,[rax+0x1]
    8563:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    8568:	mov    DWORD PTR [rip+0x45eb6],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    856e:	mov    ecx,r15d
    8571:	add    r15d,0x8
    8575:	shl    rax,cl
    8578:	or     rbx,rax
    857b:	cmp    r13d,r15d
    857e:	jbe    85a8 <__ctype_b_loc@plt+0x4c38>
    8580:	mov    eax,DWORD PTR [rip+0x45e9e]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8586:	cmp    eax,DWORD PTR [rip+0x99a98]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    858c:	jb     8560 <__ctype_b_loc@plt+0x4bf0>
    858e:	xor    edi,edi
    8590:	mov    DWORD PTR [rip+0x99a89],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    8597:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    859c:	movzx  eax,al
    859f:	jmp    856e <__ctype_b_loc@plt+0x4bfe>
    85a1:	nop    DWORD PTR [rax+0x0]
    85a8:	mov    r13d,DWORD PTR [rsp+0x30]
    85ad:	and    r13d,ebx
    85b0:	shl    r13,0x4
    85b4:	add    r13,QWORD PTR [rsp+0x28]
    85b9:	movzx  r8d,BYTE PTR [r13+0x0]
    85be:	cmp    r8d,0x10
    85c2:	jbe    8671 <__ctype_b_loc@plt+0x4d01>
    85c8:	mov    QWORD PTR [rsp+0x38],r14
    85cd:	nop    DWORD PTR [rax]
    85d0:	cmp    r8d,0x63
    85d4:	je     8830 <__ctype_b_loc@plt+0x4ec0>
    85da:	movzx  eax,BYTE PTR [r13+0x1]
    85df:	lea    r14d,[r8-0x10]
    85e3:	mov    ecx,eax
    85e5:	sub    r15d,eax
    85e8:	shr    rbx,cl
    85eb:	cmp    r15d,r14d
    85ee:	jb     8618 <__ctype_b_loc@plt+0x4ca8>
    85f0:	jmp    8640 <__ctype_b_loc@plt+0x4cd0>
    85f2:	nop    WORD PTR [rax+rax*1+0x0]
    85f8:	lea    edx,[rax+0x1]
    85fb:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    8600:	mov    DWORD PTR [rip+0x45e1e],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8606:	mov    ecx,r15d
    8609:	add    r15d,0x8
    860d:	shl    rax,cl
    8610:	or     rbx,rax
    8613:	cmp    r14d,r15d
    8616:	jbe    8640 <__ctype_b_loc@plt+0x4cd0>
    8618:	mov    eax,DWORD PTR [rip+0x45e06]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    861e:	cmp    eax,DWORD PTR [rip+0x99a00]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    8624:	jb     85f8 <__ctype_b_loc@plt+0x4c88>
    8626:	xor    edi,edi
    8628:	mov    DWORD PTR [rip+0x999f1],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    862f:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    8634:	movzx  eax,al
    8637:	jmp    8606 <__ctype_b_loc@plt+0x4c96>
    8639:	nop    DWORD PTR [rax+0x0]
    8640:	mov    edx,r14d
    8643:	lea    rsi,[rip+0xad16]        # 13360 <__ctype_b_loc@plt+0xf9f0>
    864a:	movzx  eax,WORD PTR [rsi+rdx*2]
    864e:	and    eax,ebx
    8650:	movzx  eax,ax
    8653:	shl    rax,0x4
    8657:	add    rax,QWORD PTR [r13+0x8]
    865b:	movzx  r8d,BYTE PTR [rax]
    865f:	mov    r13,rax
    8662:	cmp    r8d,0x10
    8666:	ja     85d0 <__ctype_b_loc@plt+0x4c60>
    866c:	mov    r14,QWORD PTR [rsp+0x38]
    8671:	movzx  eax,BYTE PTR [r13+0x1]
    8676:	mov    edx,r15d
    8679:	mov    rsi,rbx
    867c:	mov    ecx,eax
    867e:	sub    edx,eax
    8680:	shr    rsi,cl
    8683:	cmp    r8d,edx
    8686:	jbe    86fa <__ctype_b_loc@plt+0x4d8a>
    8688:	mov    QWORD PTR [rsp+0x38],r13
    868d:	mov    r15,rsi
    8690:	mov    r13d,r8d
    8693:	mov    ebx,edx
    8695:	jmp    86be <__ctype_b_loc@plt+0x4d4e>
    8697:	nop    WORD PTR [rax+rax*1+0x0]
    86a0:	lea    edx,[rax+0x1]
    86a3:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    86a8:	mov    ecx,ebx
    86aa:	add    ebx,0x8
    86ad:	mov    DWORD PTR [rip+0x45d71],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    86b3:	shl    rax,cl
    86b6:	or     r15,rax
    86b9:	cmp    r13d,ebx
    86bc:	jbe    86ed <__ctype_b_loc@plt+0x4d7d>
    86be:	mov    eax,DWORD PTR [rip+0x45d60]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    86c4:	cmp    eax,DWORD PTR [rip+0x9995a]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    86ca:	jb     86a0 <__ctype_b_loc@plt+0x4d30>
    86cc:	xor    edi,edi
    86ce:	mov    DWORD PTR [rip+0x9994b],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    86d5:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    86da:	mov    ecx,ebx
    86dc:	add    ebx,0x8
    86df:	movzx  eax,al
    86e2:	shl    rax,cl
    86e5:	or     r15,rax
    86e8:	cmp    r13d,ebx
    86eb:	ja     86be <__ctype_b_loc@plt+0x4d4e>
    86ed:	mov    r8d,r13d
    86f0:	mov    r13,QWORD PTR [rsp+0x38]
    86f5:	mov    rsi,r15
    86f8:	mov    edx,ebx
    86fa:	movzx  eax,WORD PTR [r13+0x8]
    86ff:	mov    edi,r12d
    8702:	mov    ecx,r8d
    8705:	sub    edx,r8d
    8708:	movzx  r15d,WORD PTR [rsp+0x20]
    870e:	lea    rbx,[rip+0xac4b]        # 13360 <__ctype_b_loc@plt+0xf9f0>
    8715:	sub    edi,eax
    8717:	mov    eax,r8d
    871a:	movzx  eax,WORD PTR [rbx+rax*2]
    871e:	and    r14d,r15d
    8721:	movzx  r15d,WORD PTR [rsp+0x1c]
    8727:	mov    DWORD PTR [rsp+0x1c],edx
    872b:	and    eax,esi
    872d:	add    r15d,r14d
    8730:	shr    rsi,cl
    8733:	sub    edi,eax
    8735:	mov    QWORD PTR [rsp+0x20],rsi
    873a:	mov    r13d,r15d
    873d:	mov    r14d,edi
    8740:	jmp    877b <__ctype_b_loc@plt+0x4e0b>
    8742:	nop    WORD PTR [rax+rax*1+0x0]
    8748:	lea    rax,[rip+0x898b1]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    874f:	mov    edi,r12d
    8752:	mov    esi,ebx
    8754:	mov    edx,r15d
    8757:	add    rdi,rax
    875a:	add    rsi,rax
    875d:	lea    r14d,[rbx+r15*1]
    8761:	add    r12d,r15d
    8764:	call   37c0 <memcpy@plt>
    8769:	cmp    r12d,0x8000
    8770:	je     87e7 <__ctype_b_loc@plt+0x4e77>
    8772:	test   r13d,r13d
    8775:	je     8802 <__ctype_b_loc@plt+0x4e92>
    877b:	mov    ebx,r14d
    877e:	mov    eax,0x8000
    8783:	mov    r15d,0x8000
    8789:	mov    esi,r12d
    878c:	and    ebx,0x7fff
    8792:	sub    r15d,r12d
    8795:	sub    eax,ebx
    8797:	cmp    r12d,ebx
    879a:	cmovb  r15d,eax
    879e:	mov    eax,ebx
    87a0:	cmp    r13d,r15d
    87a3:	cmovbe r15d,r13d
    87a7:	sub    esi,ebx
    87a9:	sub    eax,r12d
    87ac:	sub    r13d,r15d
    87af:	cmp    r12d,ebx
    87b2:	cmova  eax,esi
    87b5:	cmp    eax,r15d
    87b8:	jae    8748 <__ctype_b_loc@plt+0x4dd8>
    87ba:	lea    r14d,[rbx+r15*1]
    87be:	mov    eax,ebx
    87c0:	mov    ecx,eax
    87c2:	lea    rdi,[rip+0x89837]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    87c9:	lea    edx,[rax+rsi*1]
    87cc:	add    eax,0x1
    87cf:	movzx  ecx,BYTE PTR [rdi+rcx*1]
    87d3:	mov    BYTE PTR [rdi+rdx*1],cl
    87d6:	cmp    eax,r14d
    87d9:	jne    87c0 <__ctype_b_loc@plt+0x4e50>
    87db:	add    r12d,r15d
    87de:	cmp    r12d,0x8000
    87e5:	jne    8772 <__ctype_b_loc@plt+0x4e02>
    87e7:	mov    DWORD PTR [rip+0x9982f],0x8000        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    87f1:	xor    r12d,r12d
    87f4:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    87f9:	test   r13d,r13d
    87fc:	jne    877b <__ctype_b_loc@plt+0x4e0b>
    8802:	mov    r13d,DWORD PTR [rsp+0x1c]
    8807:	mov    r14,QWORD PTR [rsp+0x20]
    880c:	jmp    8380 <__ctype_b_loc@plt+0x4a10>
    8811:	nop    DWORD PTR [rax+0x0]
    8818:	xor    edi,edi
    881a:	mov    DWORD PTR [rip+0x997ff],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    8821:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    8826:	movzx  eax,al
    8829:	jmp    8420 <__ctype_b_loc@plt+0x4ab0>
    882e:	xchg   ax,ax
    8830:	mov    eax,0x1
    8835:	add    rsp,0x48
    8839:	pop    rbx
    883a:	pop    rbp
    883b:	pop    r12
    883d:	pop    r13
    883f:	pop    r14
    8841:	pop    r15
    8843:	ret    
    8844:	mov    DWORD PTR [rip+0x997d5],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    884b:	xor    eax,eax
    884d:	mov    QWORD PTR [rip+0x121f4],r14        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    8854:	mov    DWORD PTR [rip+0x121e9],r13d        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    885b:	jmp    8835 <__ctype_b_loc@plt+0x4ec5>
    885d:	nop    DWORD PTR [rax]
    8860:	push   r15
    8862:	pxor   xmm0,xmm0
    8866:	mov    r11,rdi
    8869:	push   r14
    886b:	mov    r14,r9
    886e:	push   r13
    8870:	push   r12
    8872:	push   rbp
    8873:	mov    ebp,esi
    8875:	push   rbx
    8876:	mov    rax,rbp
    8879:	lea    rsi,[rdi+rbp*4]
    887d:	sub    rsp,0x638
    8884:	mov    DWORD PTR [rsp+0x64],edx
    8888:	mov    rbx,QWORD PTR [rsp+0x670]
    8890:	mov    QWORD PTR [rsp+0x68],rcx
    8895:	mov    QWORD PTR [rsp+0x70],r8
    889a:	mov    rdx,QWORD PTR fs:0x28
    88a3:	mov    QWORD PTR [rsp+0x628],rdx
    88ab:	xor    edx,edx
    88ad:	movaps XMMWORD PTR [rsp+0x80],xmm0
    88b5:	mov    rdx,rdi
    88b8:	mov    DWORD PTR [rsp+0xc0],0x0
    88c3:	movaps XMMWORD PTR [rsp+0x90],xmm0
    88cb:	movaps XMMWORD PTR [rsp+0xa0],xmm0
    88d3:	movaps XMMWORD PTR [rsp+0xb0],xmm0
    88db:	nop    DWORD PTR [rax+rax*1+0x0]
    88e0:	mov    ecx,DWORD PTR [rdx]
    88e2:	add    rdx,0x4
    88e6:	add    DWORD PTR [rsp+rcx*4+0x80],0x1
    88ee:	cmp    rsi,rdx
    88f1:	jne    88e0 <__ctype_b_loc@plt+0x4f70>
    88f3:	mov    edi,DWORD PTR [rsp+0x80]
    88fa:	cmp    edi,eax
    88fc:	je     8e92 <__ctype_b_loc@plt+0x5522>
    8902:	mov    r15d,DWORD PTR [rbx]
    8905:	mov    eax,0x1
    890a:	lea    rsi,[rsp+0x80]
    8912:	mov    r9d,DWORD PTR [rsi+rax*4]
    8916:	mov    ecx,eax
    8918:	test   r9d,r9d
    891b:	jne    89d6 <__ctype_b_loc@plt+0x5066>
    8921:	add    rax,0x1
    8925:	cmp    rax,0x11
    8929:	jne    8912 <__ctype_b_loc@plt+0x4fa2>
    892b:	mov    DWORD PTR [rsp+0x28],0x11
    8933:	mov    eax,0x20000
    8938:	mov    ecx,0x11
    893d:	cmp    r15d,ecx
    8940:	cmovb  r15d,DWORD PTR [rsp+0x28]
    8946:	lea    r9,[rsp+0xc0]
    894e:	mov    edx,0x10
    8953:	mov    r8d,DWORD PTR [r9]
    8956:	test   r8d,r8d
    8959:	jne    89e6 <__ctype_b_loc@plt+0x5076>
    895f:	sub    r9,0x4
    8963:	sub    edx,0x1
    8966:	jne    8953 <__ctype_b_loc@plt+0x4fe3>
    8968:	test   r15d,r15d
    896b:	jne    8ed9 <__ctype_b_loc@plt+0x5569>
    8971:	mov    edi,eax
    8973:	sub    edi,DWORD PTR [rsp+0x80]
    897a:	mov    DWORD PTR [rbx],0x0
    8980:	mov    DWORD PTR [rsp+0x78],edi
    8984:	js     89a8 <__ctype_b_loc@plt+0x5038>
    8986:	mov    DWORD PTR [rsp+0x80],eax
    898d:	mov    DWORD PTR [rsp+0xd4],0x0
    8998:	mov    DWORD PTR [rsp+0x60],0x0
    89a0:	jmp    8a58 <__ctype_b_loc@plt+0x50e8>
    89a5:	nop    DWORD PTR [rax]
    89a8:	mov    eax,0x2
    89ad:	mov    rdx,QWORD PTR [rsp+0x628]
    89b5:	xor    rdx,QWORD PTR fs:0x28
    89be:	jne    8eef <__ctype_b_loc@plt+0x557f>
    89c4:	add    rsp,0x638
    89cb:	pop    rbx
    89cc:	pop    rbp
    89cd:	pop    r12
    89cf:	pop    r13
    89d1:	pop    r14
    89d3:	pop    r15
    89d5:	ret    
    89d6:	mov    DWORD PTR [rsp+0x28],eax
    89da:	mov    eax,0x1
    89df:	shl    eax,cl
    89e1:	jmp    893d <__ctype_b_loc@plt+0x4fcd>
    89e6:	cmp    r15d,edx
    89e9:	mov    DWORD PTR [rsp+0x60],edx
    89ed:	cmova  r15d,edx
    89f1:	mov    DWORD PTR [rbx],r15d
    89f4:	cmp    ecx,edx
    89f6:	jae    8ef4 <__ctype_b_loc@plt+0x5584>
    89fc:	mov    edi,ecx
    89fe:	sub    eax,DWORD PTR [rsp+rdi*4+0x80]
    8a05:	js     89a8 <__ctype_b_loc@plt+0x5038>
    8a07:	lea    r9d,[rcx+0x1]
    8a0b:	not    ecx
    8a0d:	add    ecx,edx
    8a0f:	lea    rdi,[rsi+r9*4]
    8a13:	add    rcx,r9
    8a16:	lea    rcx,[rsi+rcx*4]
    8a1a:	jmp    8a26 <__ctype_b_loc@plt+0x50b6>
    8a1c:	sub    eax,DWORD PTR [rdi]
    8a1e:	add    rdi,0x4
    8a22:	test   eax,eax
    8a24:	js     89a8 <__ctype_b_loc@plt+0x5038>
    8a26:	add    eax,eax
    8a28:	cmp    rcx,rdi
    8a2b:	jne    8a1c <__ctype_b_loc@plt+0x50ac>
    8a2d:	mov    ecx,edx
    8a2f:	mov    edi,DWORD PTR [rsp+rcx*4+0x80]
    8a36:	mov    ebx,eax
    8a38:	sub    ebx,edi
    8a3a:	mov    DWORD PTR [rsp+0x78],ebx
    8a3e:	js     89a8 <__ctype_b_loc@plt+0x5038>
    8a44:	mov    DWORD PTR [rsp+0xd4],0x0
    8a4f:	mov    ecx,edx
    8a51:	mov    DWORD PTR [rsp+rcx*4+0x80],eax
    8a58:	lea    eax,[rdx-0x2]
    8a5b:	lea    rcx,[rsp+0xd8]
    8a63:	xor    edx,edx
    8a65:	lea    rdi,[rsi+rax*4+0x8]
    8a6a:	lea    rax,[rsp+0x84]
    8a72:	add    rax,0x4
    8a76:	add    rcx,0x4
    8a7a:	add    edx,DWORD PTR [rax-0x4]
    8a7d:	mov    DWORD PTR [rcx-0x4],edx
    8a80:	cmp    rdi,rax
    8a83:	jne    8a72 <__ctype_b_loc@plt+0x5102>
    8a85:	xor    eax,eax
    8a87:	mov    edx,DWORD PTR [r11+rax*4]
    8a8b:	test   edx,edx
    8a8d:	je     8aa7 <__ctype_b_loc@plt+0x5137>
    8a8f:	mov    ecx,DWORD PTR [rsp+rdx*4+0xd0]
    8a96:	lea    edi,[rcx+0x1]
    8a99:	mov    DWORD PTR [rsp+rcx*4+0x1a0],eax
    8aa0:	mov    DWORD PTR [rsp+rdx*4+0xd0],edi
    8aa7:	add    rax,0x1
    8aab:	cmp    rbp,rax
    8aae:	jne    8a87 <__ctype_b_loc@plt+0x5117>
    8ab0:	movsxd rax,DWORD PTR [rsp+0x60]
    8ab5:	mov    r8d,r15d
    8ab8:	mov    QWORD PTR [rsp+0x120],0x0
    8ac4:	neg    r8d
    8ac7:	mov    rdx,rax
    8aca:	mov    eax,DWORD PTR [rsp+rax*4+0xd0]
    8ad1:	mov    DWORD PTR [rsp+0xd0],0x0
    8adc:	cmp    edx,DWORD PTR [rsp+0x28]
    8ae0:	jl     8e15 <__ctype_b_loc@plt+0x54a5>
    8ae6:	lea    rdx,[rsp+0x1a0]
    8aee:	xor    r12d,r12d
    8af1:	xor    ebx,ebx
    8af3:	mov    r9,r14
    8af6:	lea    rax,[rdx+rax*4]
    8afa:	mov    DWORD PTR [rsp+0x2c],0xffffffff
    8b02:	mov    QWORD PTR [rsp+0x58],rax
    8b07:	movsxd rax,DWORD PTR [rsp+0x28]
    8b0c:	mov    QWORD PTR [rsp+0x48],rdx
    8b11:	mov    rdx,r13
    8b14:	mov    r13d,r12d
    8b17:	lea    rax,[rsi+rax*4]
    8b1b:	mov    QWORD PTR [rsp+0x40],rax
    8b20:	mov    eax,DWORD PTR [rsp+0x60]
    8b24:	add    eax,0x1
    8b27:	mov    DWORD PTR [rsp+0x7c],eax
    8b2b:	xor    eax,eax
    8b2d:	mov    rsi,QWORD PTR [rsp+0x40]
    8b32:	mov    esi,DWORD PTR [rsi]
    8b34:	mov    DWORD PTR [rsp+0x24],esi
    8b38:	test   esi,esi
    8b3a:	je     8dfc <__ctype_b_loc@plt+0x548c>
    8b40:	mov    esi,DWORD PTR [rsp+0x28]
    8b44:	lea    ecx,[rsi-0x1]
    8b47:	mov    esi,0x1
    8b4c:	shl    esi,cl
    8b4e:	mov    DWORD PTR [rsp+0x54],esi
    8b52:	nop    WORD PTR [rax+rax*1+0x0]
    8b58:	lea    esi,[r8+r15*1]
    8b5c:	cmp    esi,DWORD PTR [rsp+0x28]
    8b60:	jge    8e51 <__ctype_b_loc@plt+0x54e1>
    8b66:	mov    r14d,DWORD PTR [rsp+0x2c]
    8b6b:	mov    r11d,DWORD PTR [rsp+0x60]
    8b70:	mov    DWORD PTR [rsp+0x50],r13d
    8b75:	mov    r12d,DWORD PTR [rsp+0x28]
    8b7a:	add    r14d,0x1
    8b7e:	sub    r11d,esi
    8b81:	movsxd r14,r14d
    8b84:	sub    r12d,esi
    8b87:	mov    r13d,r11d
    8b8a:	mov    r8,r14
    8b8d:	mov    r14d,esi
    8b90:	jmp    8c4b <__ctype_b_loc@plt+0x52db>
    8b95:	nop    DWORD PTR [rax]
    8b98:	lea    edi,[rbx+0x1]
    8b9b:	mov    QWORD PTR [rsp+0x18],rdx
    8ba0:	shl    rdi,0x4
    8ba4:	mov    QWORD PTR [rsp+0x10],r9
    8ba9:	mov    QWORD PTR [rsp+0x8],r8
    8bae:	call   3810 <malloc@plt>
    8bb3:	mov    r8,QWORD PTR [rsp+0x8]
    8bb8:	mov    r9,QWORD PTR [rsp+0x10]
    8bbd:	test   rax,rax
    8bc0:	mov    rdx,QWORD PTR [rsp+0x18]
    8bc5:	je     8e61 <__ctype_b_loc@plt+0x54f1>
    8bcb:	mov    ecx,DWORD PTR [rip+0x11e6f]        # 1aa40 <stderr@@GLIBC_2.2.5+0xa00>
    8bd1:	lea    rdi,[rax+0x10]
    8bd5:	mov    QWORD PTR [r9],rdi
    8bd8:	lea    r9,[rax+0x8]
    8bdc:	lea    ecx,[rbx+rcx*1+0x1]
    8be0:	mov    QWORD PTR [rax+0x8],0x0
    8be8:	mov    DWORD PTR [rip+0x11e52],ecx        # 1aa40 <stderr@@GLIBC_2.2.5+0xa00>
    8bee:	mov    QWORD PTR [rsp+r8*8+0x120],rdi
    8bf6:	test   r8d,r8d
    8bf9:	je     8c33 <__ctype_b_loc@plt+0x52c3>
    8bfb:	mov    esi,DWORD PTR [rsp+0x50]
    8bff:	movzx  ecx,BYTE PTR [rsp+0x20]
    8c04:	add    ebp,0x10
    8c07:	mov    QWORD PTR [rsp+0x38],rdi
    8c0c:	mov    dl,bpl
    8c0f:	mov    eax,esi
    8c11:	mov    DWORD PTR [rsp+r8*4+0xd0],esi
    8c19:	shr    eax,cl
    8c1b:	mov    rcx,r15
    8c1e:	shl    rax,0x4
    8c22:	mov    dh,cl
    8c24:	add    rax,QWORD PTR [rsp+r8*8+0x118]
    8c2c:	mov    QWORD PTR [rax],rdx
    8c2f:	mov    QWORD PTR [rax+0x8],rdi
    8c33:	add    r8,0x1
    8c37:	add    r14d,r15d
    8c3a:	sub    r12d,r15d
    8c3d:	sub    r13d,r15d
    8c40:	cmp    r14d,DWORD PTR [rsp+0x28]
    8c45:	jge    8cd0 <__ctype_b_loc@plt+0x5360>
    8c4b:	mov    eax,r14d
    8c4e:	mov    ebx,0x1
    8c53:	mov    ecx,r12d
    8c56:	mov    DWORD PTR [rsp+0x34],r14d
    8c5b:	sub    eax,r15d
    8c5e:	mov    DWORD PTR [rsp+0x2c],r8d
    8c63:	shl    ebx,cl
    8c65:	mov    ebp,r12d
    8c68:	mov    DWORD PTR [rsp+0x20],eax
    8c6c:	mov    DWORD PTR [rsp+0x30],r12d
    8c71:	cmp    ebx,DWORD PTR [rsp+0x24]
    8c75:	jbe    8b98 <__ctype_b_loc@plt+0x5228>
    8c7b:	cmp    r13d,r15d
    8c7e:	mov    ecx,r15d
    8c81:	cmovbe ecx,r13d
    8c85:	cmp    ecx,r12d
    8c88:	jbe    8b98 <__ctype_b_loc@plt+0x5228>
    8c8e:	lea    ebp,[r12+0x1]
    8c93:	mov    rax,QWORD PTR [rsp+0x40]
    8c98:	sub    ebx,DWORD PTR [rsp+0x24]
    8c9c:	cmp    ecx,ebp
    8c9e:	ja     8cb1 <__ctype_b_loc@plt+0x5341>
    8ca0:	jmp    8cbe <__ctype_b_loc@plt+0x534e>
    8ca2:	nop    WORD PTR [rax+rax*1+0x0]
    8ca8:	add    ebp,0x1
    8cab:	sub    ebx,esi
    8cad:	cmp    ebp,ecx
    8caf:	jae    8cbe <__ctype_b_loc@plt+0x534e>
    8cb1:	mov    esi,DWORD PTR [rax+0x4]
    8cb4:	add    ebx,ebx
    8cb6:	add    rax,0x4
    8cba:	cmp    esi,ebx
    8cbc:	jb     8ca8 <__ctype_b_loc@plt+0x5338>
    8cbe:	mov    ebx,0x1
    8cc3:	mov    ecx,ebp
    8cc5:	shl    ebx,cl
    8cc7:	jmp    8b98 <__ctype_b_loc@plt+0x5228>
    8ccc:	nop    DWORD PTR [rax+0x0]
    8cd0:	mov    r13d,DWORD PTR [rsp+0x50]
    8cd5:	mov    r8d,DWORD PTR [rsp+0x34]
    8cda:	mov    rax,rdi
    8cdd:	movzx  edi,BYTE PTR [rsp+0x28]
    8ce2:	mov    rcx,QWORD PTR [rsp+0x48]
    8ce7:	mov    esi,0x63
    8cec:	sub    edi,r8d
    8cef:	cmp    QWORD PTR [rsp+0x58],rcx
    8cf4:	jbe    8d20 <__ctype_b_loc@plt+0x53b0>
    8cf6:	mov    rsi,rcx
    8cf9:	mov    ecx,DWORD PTR [rcx]
    8cfb:	add    rsi,0x4
    8cff:	mov    QWORD PTR [rsp+0x48],rsi
    8d04:	cmp    ecx,DWORD PTR [rsp+0x64]
    8d08:	jae    8e30 <__ctype_b_loc@plt+0x54c0>
    8d0e:	cmp    ecx,0x100
    8d14:	mov    WORD PTR [rsp+0x38],cx
    8d19:	setne  sil
    8d1d:	add    esi,0xf
    8d20:	movzx  ecx,BYTE PTR [rsp+0x30]
    8d25:	mov    r11d,0x1
    8d2b:	mov    ebp,r13d
    8d2e:	shl    r11d,cl
    8d31:	mov    ecx,r8d
    8d34:	shr    ebp,cl
    8d36:	cmp    ebp,ebx
    8d38:	jae    8d6f <__ctype_b_loc@plt+0x53ff>
    8d3a:	mov    rcx,rax
    8d3d:	mov    r10,QWORD PTR [rsp+0x38]
    8d42:	mov    eax,edi
    8d44:	mov    rdi,rcx
    8d47:	nop    WORD PTR [rax+rax*1+0x0]
    8d50:	mov    ecx,ebp
    8d52:	mov    dl,sil
    8d55:	add    ebp,r11d
    8d58:	shl    rcx,0x4
    8d5c:	mov    dh,al
    8d5e:	add    rcx,rdi
    8d61:	mov    QWORD PTR [rcx],rdx
    8d64:	mov    QWORD PTR [rcx+0x8],r10
    8d68:	cmp    ebp,ebx
    8d6a:	jb     8d50 <__ctype_b_loc@plt+0x53e0>
    8d6c:	mov    rax,rdi
    8d6f:	mov    esi,DWORD PTR [rsp+0x54]
    8d73:	mov    ecx,esi
    8d75:	test   esi,r13d
    8d78:	je     8d8a <__ctype_b_loc@plt+0x541a>
    8d7a:	nop    WORD PTR [rax+rax*1+0x0]
    8d80:	xor    r13d,ecx
    8d83:	shr    ecx,1
    8d85:	test   r13d,ecx
    8d88:	jne    8d80 <__ctype_b_loc@plt+0x5410>
    8d8a:	xor    r13d,ecx
    8d8d:	mov    r11d,0x1
    8d93:	mov    ecx,r8d
    8d96:	movsxd rsi,DWORD PTR [rsp+0x2c]
    8d9b:	shl    r11d,cl
    8d9e:	mov    ecx,r11d
    8da1:	sub    ecx,0x1
    8da4:	and    ecx,r13d
    8da7:	cmp    DWORD PTR [rsp+rsi*4+0xd0],ecx
    8dae:	je     8df1 <__ctype_b_loc@plt+0x5481>
    8db0:	sub    esi,0x1
    8db3:	lea    rdi,[rsp+0xd0]
    8dbb:	mov    ecx,r8d
    8dbe:	movsxd rsi,esi
    8dc1:	nop    DWORD PTR [rax+0x0]
    8dc8:	sub    ecx,r15d
    8dcb:	mov    r10d,0x1
    8dd1:	mov    r8d,esi
    8dd4:	sub    rsi,0x1
    8dd8:	shl    r10d,cl
    8ddb:	sub    r10d,0x1
    8ddf:	and    r10d,r13d
    8de2:	cmp    r10d,DWORD PTR [rdi+rsi*4+0x4]
    8de7:	jne    8dc8 <__ctype_b_loc@plt+0x5458>
    8de9:	mov    DWORD PTR [rsp+0x2c],r8d
    8dee:	mov    r8d,ecx
    8df1:	sub    DWORD PTR [rsp+0x24],0x1
    8df6:	jne    8b58 <__ctype_b_loc@plt+0x51e8>
    8dfc:	add    DWORD PTR [rsp+0x28],0x1
    8e01:	mov    esi,DWORD PTR [rsp+0x28]
    8e05:	add    QWORD PTR [rsp+0x40],0x4
    8e0b:	cmp    DWORD PTR [rsp+0x7c],esi
    8e0f:	jne    8b2d <__ctype_b_loc@plt+0x51bd>
    8e15:	mov    edx,DWORD PTR [rsp+0x78]
    8e19:	test   edx,edx
    8e1b:	setne  dl
    8e1e:	xor    eax,eax
    8e20:	cmp    DWORD PTR [rsp+0x60],0x1
    8e25:	setne  al
    8e28:	and    eax,edx
    8e2a:	jmp    89ad <__ctype_b_loc@plt+0x503d>
    8e2f:	nop
    8e30:	mov    rsi,QWORD PTR [rsp+0x70]
    8e35:	mov    r11,QWORD PTR [rsp+0x68]
    8e3a:	sub    ecx,DWORD PTR [rsp+0x64]
    8e3e:	movzx  esi,BYTE PTR [rsi+rcx*2]
    8e42:	movzx  ecx,WORD PTR [r11+rcx*2]
    8e47:	mov    WORD PTR [rsp+0x38],cx
    8e4c:	jmp    8d20 <__ctype_b_loc@plt+0x53b0>
    8e51:	mov    esi,DWORD PTR [rsp+0x28]
    8e55:	sub    esi,r8d
    8e58:	mov    DWORD PTR [rsp+0x30],esi
    8e5c:	jmp    8cdd <__ctype_b_loc@plt+0x536d>
    8e61:	mov    eax,DWORD PTR [rsp+0x2c]
    8e65:	test   eax,eax
    8e67:	je     8e88 <__ctype_b_loc@plt+0x5518>
    8e69:	mov    rbx,QWORD PTR [rsp+0x120]
    8e71:	test   rbx,rbx
    8e74:	je     8e88 <__ctype_b_loc@plt+0x5518>
    8e76:	lea    rdi,[rbx-0x10]
    8e7a:	mov    rbx,QWORD PTR [rbx-0x8]
    8e7e:	call   3520 <free@plt>
    8e83:	test   rbx,rbx
    8e86:	jne    8e76 <__ctype_b_loc@plt+0x5506>
    8e88:	mov    eax,0x3
    8e8d:	jmp    89ad <__ctype_b_loc@plt+0x503d>
    8e92:	mov    edi,0x30
    8e97:	call   3810 <malloc@plt>
    8e9c:	test   rax,rax
    8e9f:	je     8e88 <__ctype_b_loc@plt+0x5518>
    8ea1:	mov    r10d,0x163
    8ea7:	mov    r11d,0x163
    8ead:	add    rax,0x10
    8eb1:	mov    QWORD PTR [rax-0x8],0x0
    8eb9:	mov    WORD PTR [rax],r10w
    8ebd:	mov    WORD PTR [rax+0x10],r11w
    8ec2:	add    DWORD PTR [rip+0x11b77],0x3        # 1aa40 <stderr@@GLIBC_2.2.5+0xa00>
    8ec9:	mov    QWORD PTR [r14],rax
    8ecc:	xor    eax,eax
    8ece:	mov    DWORD PTR [rbx],0x1
    8ed4:	jmp    89ad <__ctype_b_loc@plt+0x503d>
    8ed9:	mov    DWORD PTR [rbx],0x0
    8edf:	xor    r15d,r15d
    8ee2:	mov    DWORD PTR [rsp+0x60],0x0
    8eea:	jmp    8a36 <__ctype_b_loc@plt+0x50c6>
    8eef:	call   3680 <__stack_chk_fail@plt>
    8ef4:	mov    ecx,edx
    8ef6:	mov    edi,eax
    8ef8:	sub    edi,DWORD PTR [rsp+rcx*4+0x80]
    8eff:	mov    DWORD PTR [rsp+0x78],edi
    8f03:	js     89a8 <__ctype_b_loc@plt+0x5038>
    8f09:	mov    DWORD PTR [rsp+rcx*4+0x80],eax
    8f10:	mov    DWORD PTR [rsp+0xd4],0x0
    8f1b:	cmp    edx,0x1
    8f1e:	je     8a85 <__ctype_b_loc@plt+0x5115>
    8f24:	jmp    8a58 <__ctype_b_loc@plt+0x50e8>
    8f29:	nop    DWORD PTR [rax+0x0]
    8f30:	push   r15
    8f32:	push   r14
    8f34:	push   r13
    8f36:	push   r12
    8f38:	push   rbp
    8f39:	push   rbx
    8f3a:	sub    rsp,0x558
    8f41:	mov    r13d,DWORD PTR [rip+0x11afc]        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    8f48:	mov    rbp,QWORD PTR [rip+0x11af9]        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    8f4f:	mov    rax,QWORD PTR fs:0x28
    8f58:	mov    QWORD PTR [rsp+0x548],rax
    8f60:	xor    eax,eax
    8f62:	mov    ebx,DWORD PTR [rip+0x990b8]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    8f68:	cmp    r13d,0x4
    8f6c:	ja     8fa1 <__ctype_b_loc@plt+0x5631>
    8f6e:	mov    eax,DWORD PTR [rip+0x454b0]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8f74:	cmp    eax,DWORD PTR [rip+0x990aa]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    8f7a:	jae    9108 <__ctype_b_loc@plt+0x5798>
    8f80:	lea    edx,[rax+0x1]
    8f83:	mov    DWORD PTR [rip+0x4549b],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8f89:	lea    rdx,[rip+0x9b070]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    8f90:	movzx  eax,BYTE PTR [rdx+rax*1]
    8f94:	mov    ecx,r13d
    8f97:	add    r13d,0x8
    8f9b:	shl    rax,cl
    8f9e:	or     rbp,rax
    8fa1:	mov    eax,ebp
    8fa3:	lea    r12d,[r13-0x5]
    8fa7:	shr    rbp,0x5
    8fab:	and    eax,0x1f
    8fae:	add    eax,0x101
    8fb3:	mov    DWORD PTR [rsp+0x18],eax
    8fb7:	cmp    r12d,0x4
    8fbb:	ja     8ff0 <__ctype_b_loc@plt+0x5680>
    8fbd:	mov    eax,DWORD PTR [rip+0x45461]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8fc3:	cmp    eax,DWORD PTR [rip+0x9905b]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    8fc9:	jae    9120 <__ctype_b_loc@plt+0x57b0>
    8fcf:	lea    edx,[rax+0x1]
    8fd2:	mov    DWORD PTR [rip+0x4544c],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    8fd8:	lea    rdx,[rip+0x9b021]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    8fdf:	movzx  eax,BYTE PTR [rdx+rax*1]
    8fe3:	mov    ecx,r12d
    8fe6:	lea    r12d,[r13+0x3]
    8fea:	shl    rax,cl
    8fed:	or     rbp,rax
    8ff0:	mov    eax,ebp
    8ff2:	lea    r14d,[r12-0x5]
    8ff7:	shr    rbp,0x5
    8ffb:	and    eax,0x1f
    8ffe:	mov    r13,rbp
    9001:	add    eax,0x1
    9004:	mov    DWORD PTR [rsp+0x1c],eax
    9008:	cmp    r14d,0x3
    900c:	ja     9042 <__ctype_b_loc@plt+0x56d2>
    900e:	mov    eax,DWORD PTR [rip+0x45410]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9014:	cmp    eax,DWORD PTR [rip+0x9900a]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    901a:	jae    9138 <__ctype_b_loc@plt+0x57c8>
    9020:	lea    edx,[rax+0x1]
    9023:	mov    DWORD PTR [rip+0x453fb],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9029:	lea    rdx,[rip+0x9afd0]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    9030:	movzx  eax,BYTE PTR [rdx+rax*1]
    9034:	mov    ecx,r14d
    9037:	lea    r14d,[r12+0x3]
    903c:	shl    rax,cl
    903f:	or     r13,rax
    9042:	cmp    DWORD PTR [rsp+0x18],0x11e
    904a:	ja     928b <__ctype_b_loc@plt+0x591b>
    9050:	cmp    DWORD PTR [rsp+0x1c],0x1e
    9055:	ja     928b <__ctype_b_loc@plt+0x591b>
    905b:	mov    eax,r13d
    905e:	sub    r14d,0x4
    9062:	shr    r13,0x4
    9066:	lea    rdi,[rip+0xa337]        # 133a4 <__ctype_b_loc@plt+0xfa34>
    906d:	and    eax,0xf
    9070:	mov    r12d,0x10
    9076:	lea    r15,[rip+0x9af83]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    907d:	lea    ebp,[rax+0x4]
    9080:	add    eax,0x3
    9083:	lea    rax,[rdi+rax*4]
    9087:	mov    DWORD PTR [rsp+0x8],ebp
    908b:	mov    ebp,ebx
    908d:	mov    rbx,rdi
    9090:	mov    QWORD PTR [rsp],rax
    9094:	mov    eax,r14d
    9097:	mov    r14,r13
    909a:	mov    r13d,eax
    909d:	jmp    90db <__ctype_b_loc@plt+0x576b>
    909f:	nop
    90a0:	lea    esi,[rax+0x1]
    90a3:	movzx  eax,BYTE PTR [r15+rax*1]
    90a8:	mov    DWORD PTR [rip+0x45376],esi        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    90ae:	mov    ecx,r13d
    90b1:	add    r13d,0x8
    90b5:	shl    rax,cl
    90b8:	or     r14,rax
    90bb:	mov    eax,r14d
    90be:	sub    r13d,0x3
    90c2:	shr    r14,0x3
    90c6:	and    eax,0x7
    90c9:	mov    DWORD PTR [rsp+r12*4+0x50],eax
    90ce:	cmp    QWORD PTR [rsp],rbx
    90d2:	je     9150 <__ctype_b_loc@plt+0x57e0>
    90d4:	mov    r12d,DWORD PTR [rbx]
    90d7:	add    rbx,0x4
    90db:	cmp    r13d,0x2
    90df:	ja     90bb <__ctype_b_loc@plt+0x574b>
    90e1:	mov    eax,DWORD PTR [rip+0x4533d]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    90e7:	cmp    eax,DWORD PTR [rip+0x98f37]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    90ed:	jb     90a0 <__ctype_b_loc@plt+0x5730>
    90ef:	xor    edi,edi
    90f1:	mov    DWORD PTR [rip+0x98f29],ebp        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    90f7:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    90fc:	movzx  eax,al
    90ff:	jmp    90ae <__ctype_b_loc@plt+0x573e>
    9101:	nop    DWORD PTR [rax+0x0]
    9108:	xor    edi,edi
    910a:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    910f:	movzx  eax,al
    9112:	jmp    8f94 <__ctype_b_loc@plt+0x5624>
    9117:	nop    WORD PTR [rax+rax*1+0x0]
    9120:	xor    edi,edi
    9122:	mov    DWORD PTR [rip+0x98ef8],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9128:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    912d:	movzx  eax,al
    9130:	jmp    8fe3 <__ctype_b_loc@plt+0x5673>
    9135:	nop    DWORD PTR [rax]
    9138:	xor    edi,edi
    913a:	mov    DWORD PTR [rip+0x98ee0],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9140:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9145:	movzx  eax,al
    9148:	jmp    9034 <__ctype_b_loc@plt+0x56c4>
    914d:	nop    DWORD PTR [rax]
    9150:	mov    ebx,ebp
    9152:	mov    ebp,DWORD PTR [rsp+0x8]
    9156:	mov    eax,r13d
    9159:	lea    rdx,[rip+0xa240]        # 133a0 <__ctype_b_loc@plt+0xfa30>
    9160:	mov    r13,r14
    9163:	mov    r14d,eax
    9166:	cmp    ebp,0x13
    9169:	je     9185 <__ctype_b_loc@plt+0x5815>
    916b:	nop    DWORD PTR [rax+rax*1+0x0]
    9170:	mov    eax,ebp
    9172:	add    ebp,0x1
    9175:	mov    eax,DWORD PTR [rdx+rax*4]
    9178:	mov    DWORD PTR [rsp+rax*4+0x50],0x0
    9180:	cmp    ebp,0x13
    9183:	jne    9170 <__ctype_b_loc@plt+0x5800>
    9185:	lea    rdi,[rsp+0x50]
    918a:	lea    r9,[rsp+0x40]
    918f:	sub    rsp,0x8
    9193:	xor    ecx,ecx
    9195:	mov    DWORD PTR [rsp+0x40],0x7
    919d:	xor    r8d,r8d
    91a0:	mov    edx,0x13
    91a5:	mov    esi,0x13
    91aa:	mov    QWORD PTR [rsp+0x30],r9
    91af:	mov    QWORD PTR [rsp+0x18],rdi
    91b4:	lea    rax,[rsp+0x40]
    91b9:	mov    QWORD PTR [rsp+0x28],rax
    91be:	push   rax
    91bf:	call   8860 <__ctype_b_loc@plt+0x4ef0>
    91c4:	pop    rdi
    91c5:	pop    r8
    91c7:	mov    r12d,eax
    91ca:	test   eax,eax
    91cc:	jne    926a <__ctype_b_loc@plt+0x58fa>
    91d2:	cmp    QWORD PTR [rsp+0x40],0x0
    91d8:	je     95da <__ctype_b_loc@plt+0x5c6a>
    91de:	movsxd rcx,DWORD PTR [rsp+0x38]
    91e3:	lea    rdx,[rip+0xa176]        # 13360 <__ctype_b_loc@plt+0xf9f0>
    91ea:	mov    DWORD PTR [rsp+0xc],0x0
    91f2:	xor    ebp,ebp
    91f4:	mov    eax,DWORD PTR [rsp+0x18]
    91f8:	add    eax,DWORD PTR [rsp+0x1c]
    91fc:	lea    r15,[rip+0x9adfd]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    9203:	movzx  edi,WORD PTR [rdx+rcx*2]
    9207:	mov    DWORD PTR [rsp],eax
    920a:	mov    rax,rcx
    920d:	mov    DWORD PTR [rsp+0x8],edi
    9211:	nop    DWORD PTR [rax+0x0]
    9218:	cmp    eax,r14d
    921b:	ja     924a <__ctype_b_loc@plt+0x58da>
    921d:	jmp    92c0 <__ctype_b_loc@plt+0x5950>
    9222:	nop    WORD PTR [rax+rax*1+0x0]
    9228:	lea    edx,[rax+0x1]
    922b:	movzx  eax,BYTE PTR [r15+rax*1]
    9230:	mov    DWORD PTR [rip+0x451ee],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9236:	mov    ecx,r14d
    9239:	add    r14d,0x8
    923d:	shl    rax,cl
    9240:	or     r13,rax
    9243:	cmp    DWORD PTR [rsp+0x38],r14d
    9248:	jbe    92c0 <__ctype_b_loc@plt+0x5950>
    924a:	mov    eax,DWORD PTR [rip+0x451d4]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9250:	cmp    eax,DWORD PTR [rip+0x98dce]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    9256:	jb     9228 <__ctype_b_loc@plt+0x58b8>
    9258:	xor    edi,edi
    925a:	mov    DWORD PTR [rip+0x98dc0],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9260:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9265:	movzx  eax,al
    9268:	jmp    9236 <__ctype_b_loc@plt+0x58c6>
    926a:	cmp    eax,0x1
    926d:	jne    9291 <__ctype_b_loc@plt+0x5921>
    926f:	mov    rbx,QWORD PTR [rsp+0x40]
    9274:	test   rbx,rbx
    9277:	je     928b <__ctype_b_loc@plt+0x591b>
    9279:	lea    rdi,[rbx-0x10]
    927d:	mov    rbx,QWORD PTR [rbx-0x8]
    9281:	call   3520 <free@plt>
    9286:	test   rbx,rbx
    9289:	jne    9279 <__ctype_b_loc@plt+0x5909>
    928b:	mov    r12d,0x1
    9291:	mov    rax,QWORD PTR [rsp+0x548]
    9299:	xor    rax,QWORD PTR fs:0x28
    92a2:	jne    96e1 <__ctype_b_loc@plt+0x5d71>
    92a8:	add    rsp,0x558
    92af:	mov    eax,r12d
    92b2:	pop    rbx
    92b3:	pop    rbp
    92b4:	pop    r12
    92b6:	pop    r13
    92b8:	pop    r14
    92ba:	pop    r15
    92bc:	ret    
    92bd:	nop    DWORD PTR [rax]
    92c0:	mov    eax,DWORD PTR [rsp+0x8]
    92c4:	mov    rsi,QWORD PTR [rsp+0x40]
    92c9:	and    eax,r13d
    92cc:	shl    rax,0x4
    92d0:	add    rax,rsi
    92d3:	mov    QWORD PTR [rsp+0x48],rax
    92d8:	movzx  ecx,BYTE PTR [rax+0x1]
    92dc:	shr    r13,cl
    92df:	sub    r14d,ecx
    92e2:	cmp    BYTE PTR [rax],0x63
    92e5:	je     95ba <__ctype_b_loc@plt+0x5c4a>
    92eb:	movzx  eax,WORD PTR [rax+0x8]
    92ef:	cmp    eax,0xf
    92f2:	ja     9320 <__ctype_b_loc@plt+0x59b0>
    92f4:	movsxd rcx,r12d
    92f7:	mov    DWORD PTR [rsp+0xc],eax
    92fb:	add    r12d,0x1
    92ff:	mov    DWORD PTR [rsp+rcx*4+0x50],eax
    9303:	mov    ebp,r12d
    9306:	cmp    r12d,DWORD PTR [rsp]
    930a:	jae    93c9 <__ctype_b_loc@plt+0x5a59>
    9310:	mov    eax,DWORD PTR [rsp+0x38]
    9314:	jmp    9218 <__ctype_b_loc@plt+0x58a8>
    9319:	nop    DWORD PTR [rax+0x0]
    9320:	cmp    eax,0x10
    9323:	je     952a <__ctype_b_loc@plt+0x5bba>
    9329:	cmp    eax,0x11
    932c:	je     9488 <__ctype_b_loc@plt+0x5b18>
    9332:	cmp    r14d,0x6
    9336:	ja     9365 <__ctype_b_loc@plt+0x59f5>
    9338:	mov    eax,DWORD PTR [rip+0x450e6]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    933e:	cmp    eax,DWORD PTR [rip+0x98ce0]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    9344:	jae    9470 <__ctype_b_loc@plt+0x5b00>
    934a:	lea    ecx,[rax+0x1]
    934d:	movzx  eax,BYTE PTR [r15+rax*1]
    9352:	mov    DWORD PTR [rip+0x450cc],ecx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9358:	mov    ecx,r14d
    935b:	add    r14d,0x8
    935f:	shl    rax,cl
    9362:	or     r13,rax
    9365:	mov    esi,r13d
    9368:	sub    r14d,0x7
    936c:	shr    r13,0x7
    9370:	and    esi,0x7f
    9373:	lea    eax,[rsi+rbp*1+0xb]
    9377:	cmp    eax,DWORD PTR [rsp]
    937a:	ja     928b <__ctype_b_loc@plt+0x591b>
    9380:	movsxd rdi,r12d
    9383:	mov    rax,QWORD PTR [rsp+0x10]
    9388:	lea    ecx,[rsi+0xa]
    938b:	add    rcx,rdi
    938e:	lea    rax,[rax+rdi*4]
    9392:	lea    rcx,[rsp+rcx*4+0x54]
    9397:	nop    WORD PTR [rax+rax*1+0x0]
    93a0:	mov    DWORD PTR [rax],0x0
    93a6:	add    rax,0x4
    93aa:	cmp    rcx,rax
    93ad:	jne    93a0 <__ctype_b_loc@plt+0x5a30>
    93af:	lea    r12d,[rsi+r12*1+0xb]
    93b4:	mov    DWORD PTR [rsp+0xc],0x0
    93bc:	mov    ebp,r12d
    93bf:	cmp    r12d,DWORD PTR [rsp]
    93c3:	jb     9310 <__ctype_b_loc@plt+0x59a0>
    93c9:	mov    rbx,QWORD PTR [rsp+0x40]
    93ce:	test   rbx,rbx
    93d1:	je     93ea <__ctype_b_loc@plt+0x5a7a>
    93d3:	nop    DWORD PTR [rax+rax*1+0x0]
    93d8:	lea    rdi,[rbx-0x10]
    93dc:	mov    rbx,QWORD PTR [rbx-0x8]
    93e0:	call   3520 <free@plt>
    93e5:	test   rbx,rbx
    93e8:	jne    93d8 <__ctype_b_loc@plt+0x5a68>
    93ea:	sub    rsp,0x8
    93ee:	mov    DWORD PTR [rsp+0x40],0x9
    93f6:	lea    rcx,[rip+0xeda3]        # 181a0 <__ctype_b_loc@plt+0x14830>
    93fd:	lea    r8,[rip+0xed5c]        # 18160 <__ctype_b_loc@plt+0x147f0>
    9404:	push   QWORD PTR [rsp+0x28]
    9408:	mov    esi,DWORD PTR [rsp+0x28]
    940c:	mov    edx,0x101
    9411:	mov    r9,QWORD PTR [rsp+0x38]
    9416:	mov    QWORD PTR [rip+0x1162b],r13        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    941d:	mov    rdi,QWORD PTR [rsp+0x20]
    9422:	mov    DWORD PTR [rip+0x1161b],r14d        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    9429:	call   8860 <__ctype_b_loc@plt+0x4ef0>
    942e:	pop    rcx
    942f:	pop    rsi
    9430:	mov    r12d,eax
    9433:	test   eax,eax
    9435:	je     95e5 <__ctype_b_loc@plt+0x5c75>
    943b:	cmp    eax,0x1
    943e:	jne    9291 <__ctype_b_loc@plt+0x5921>
    9444:	mov    rbx,QWORD PTR [rsp+0x40]
    9449:	test   rbx,rbx
    944c:	je     928b <__ctype_b_loc@plt+0x591b>
    9452:	lea    rdi,[rbx-0x10]
    9456:	mov    rbx,QWORD PTR [rbx-0x8]
    945a:	call   3520 <free@plt>
    945f:	test   rbx,rbx
    9462:	jne    9452 <__ctype_b_loc@plt+0x5ae2>
    9464:	jmp    928b <__ctype_b_loc@plt+0x591b>
    9469:	nop    DWORD PTR [rax+0x0]
    9470:	xor    edi,edi
    9472:	mov    DWORD PTR [rip+0x98ba8],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9478:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    947d:	movzx  eax,al
    9480:	jmp    9358 <__ctype_b_loc@plt+0x59e8>
    9485:	nop    DWORD PTR [rax]
    9488:	cmp    r14d,0x2
    948c:	ja     94b7 <__ctype_b_loc@plt+0x5b47>
    948e:	mov    eax,DWORD PTR [rip+0x44f90]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9494:	cmp    eax,DWORD PTR [rip+0x98b8a]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    949a:	jae    9518 <__ctype_b_loc@plt+0x5ba8>
    949c:	lea    ecx,[rax+0x1]
    949f:	movzx  eax,BYTE PTR [r15+rax*1]
    94a4:	mov    DWORD PTR [rip+0x44f7a],ecx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    94aa:	mov    ecx,r14d
    94ad:	add    r14d,0x8
    94b1:	shl    rax,cl
    94b4:	or     r13,rax
    94b7:	mov    esi,r13d
    94ba:	sub    r14d,0x3
    94be:	shr    r13,0x3
    94c2:	and    esi,0x7
    94c5:	lea    eax,[rsi+rbp*1+0x3]
    94c9:	cmp    eax,DWORD PTR [rsp]
    94cc:	ja     928b <__ctype_b_loc@plt+0x591b>
    94d2:	movsxd rdi,r12d
    94d5:	mov    rax,QWORD PTR [rsp+0x10]
    94da:	lea    ecx,[rsi+0x2]
    94dd:	add    rcx,rdi
    94e0:	lea    rax,[rax+rdi*4]
    94e4:	lea    rcx,[rsp+rcx*4+0x54]
    94e9:	nop    DWORD PTR [rax+0x0]
    94f0:	mov    DWORD PTR [rax],0x0
    94f6:	add    rax,0x4
    94fa:	cmp    rcx,rax
    94fd:	jne    94f0 <__ctype_b_loc@plt+0x5b80>
    94ff:	mov    DWORD PTR [rsp+0xc],0x0
    9507:	lea    r12d,[rsi+r12*1+0x3]
    950c:	jmp    9303 <__ctype_b_loc@plt+0x5993>
    9511:	nop    DWORD PTR [rax+0x0]
    9518:	xor    edi,edi
    951a:	mov    DWORD PTR [rip+0x98b00],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9520:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9525:	movzx  eax,al
    9528:	jmp    94aa <__ctype_b_loc@plt+0x5b3a>
    952a:	cmp    r14d,0x1
    952e:	ja     9559 <__ctype_b_loc@plt+0x5be9>
    9530:	mov    eax,DWORD PTR [rip+0x44eee]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9536:	cmp    eax,DWORD PTR [rip+0x98ae8]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    953c:	jae    95a8 <__ctype_b_loc@plt+0x5c38>
    953e:	lea    ecx,[rax+0x1]
    9541:	movzx  eax,BYTE PTR [r15+rax*1]
    9546:	mov    DWORD PTR [rip+0x44ed8],ecx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    954c:	mov    ecx,r14d
    954f:	add    r14d,0x8
    9553:	shl    rax,cl
    9556:	or     r13,rax
    9559:	mov    esi,r13d
    955c:	sub    r14d,0x2
    9560:	shr    r13,0x2
    9564:	and    esi,0x3
    9567:	lea    eax,[rsi+rbp*1+0x3]
    956b:	cmp    eax,DWORD PTR [rsp]
    956e:	ja     928b <__ctype_b_loc@plt+0x591b>
    9574:	movsxd rdi,r12d
    9577:	mov    rax,QWORD PTR [rsp+0x10]
    957c:	lea    ecx,[rsi+0x2]
    957f:	mov    edx,DWORD PTR [rsp+0xc]
    9583:	add    rcx,rdi
    9586:	lea    rax,[rax+rdi*4]
    958a:	lea    rcx,[rsp+rcx*4+0x54]
    958f:	nop
    9590:	mov    DWORD PTR [rax],edx
    9592:	add    rax,0x4
    9596:	cmp    rcx,rax
    9599:	jne    9590 <__ctype_b_loc@plt+0x5c20>
    959b:	lea    r12d,[rsi+r12*1+0x3]
    95a0:	jmp    9303 <__ctype_b_loc@plt+0x5993>
    95a5:	nop    DWORD PTR [rax]
    95a8:	xor    edi,edi
    95aa:	mov    DWORD PTR [rip+0x98a70],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    95b0:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    95b5:	movzx  eax,al
    95b8:	jmp    954c <__ctype_b_loc@plt+0x5bdc>
    95ba:	test   rsi,rsi
    95bd:	je     95da <__ctype_b_loc@plt+0x5c6a>
    95bf:	mov    rbx,rsi
    95c2:	nop    WORD PTR [rax+rax*1+0x0]
    95c8:	lea    rdi,[rbx-0x10]
    95cc:	mov    rbx,QWORD PTR [rbx-0x8]
    95d0:	call   3520 <free@plt>
    95d5:	test   rbx,rbx
    95d8:	jne    95c8 <__ctype_b_loc@plt+0x5c58>
    95da:	mov    r12d,0x2
    95e0:	jmp    9291 <__ctype_b_loc@plt+0x5921>
    95e5:	mov    eax,DWORD PTR [rsp+0x18]
    95e9:	mov    rdi,QWORD PTR [rsp+0x10]
    95ee:	sub    rsp,0x8
    95f2:	xor    edx,edx
    95f4:	mov    DWORD PTR [rsp+0x44],0x6
    95fc:	lea    r8,[rip+0xeadd]        # 180e0 <__ctype_b_loc@plt+0x14770>
    9603:	lea    rcx,[rip+0xeb16]        # 18120 <__ctype_b_loc@plt+0x147b0>
    960a:	lea    rdi,[rdi+rax*4]
    960e:	lea    rax,[rsp+0x44]
    9613:	push   rax
    9614:	mov    esi,DWORD PTR [rsp+0x2c]
    9618:	lea    r9,[rsp+0x58]
    961d:	call   8860 <__ctype_b_loc@plt+0x4ef0>
    9622:	mov    r12d,eax
    9625:	pop    rax
    9626:	pop    rdx
    9627:	test   r12d,r12d
    962a:	je     965b <__ctype_b_loc@plt+0x5ceb>
    962c:	cmp    r12d,0x1
    9630:	je     96bc <__ctype_b_loc@plt+0x5d4c>
    9636:	mov    rbx,QWORD PTR [rsp+0x40]
    963b:	test   rbx,rbx
    963e:	je     9291 <__ctype_b_loc@plt+0x5921>
    9644:	lea    rdi,[rbx-0x10]
    9648:	mov    rbx,QWORD PTR [rbx-0x8]
    964c:	call   3520 <free@plt>
    9651:	test   rbx,rbx
    9654:	jne    9644 <__ctype_b_loc@plt+0x5cd4>
    9656:	jmp    9291 <__ctype_b_loc@plt+0x5921>
    965b:	mov    ecx,DWORD PTR [rsp+0x3c]
    965f:	mov    edx,DWORD PTR [rsp+0x38]
    9663:	xor    r12d,r12d
    9666:	mov    rsi,QWORD PTR [rsp+0x48]
    966b:	mov    rdi,QWORD PTR [rsp+0x40]
    9670:	call   8320 <__ctype_b_loc@plt+0x49b0>
    9675:	mov    rbx,QWORD PTR [rsp+0x40]
    967a:	test   eax,eax
    967c:	setne  r12b
    9680:	test   rbx,rbx
    9683:	je     9697 <__ctype_b_loc@plt+0x5d27>
    9685:	lea    rdi,[rbx-0x10]
    9689:	mov    rbx,QWORD PTR [rbx-0x8]
    968d:	call   3520 <free@plt>
    9692:	test   rbx,rbx
    9695:	jne    9685 <__ctype_b_loc@plt+0x5d15>
    9697:	mov    rbx,QWORD PTR [rsp+0x48]
    969c:	test   rbx,rbx
    969f:	je     9291 <__ctype_b_loc@plt+0x5921>
    96a5:	lea    rdi,[rbx-0x10]
    96a9:	mov    rbx,QWORD PTR [rbx-0x8]
    96ad:	call   3520 <free@plt>
    96b2:	test   rbx,rbx
    96b5:	jne    96a5 <__ctype_b_loc@plt+0x5d35>
    96b7:	jmp    9291 <__ctype_b_loc@plt+0x5921>
    96bc:	mov    rbx,QWORD PTR [rsp+0x48]
    96c1:	test   rbx,rbx
    96c4:	je     9636 <__ctype_b_loc@plt+0x5cc6>
    96ca:	lea    rdi,[rbx-0x10]
    96ce:	mov    rbx,QWORD PTR [rbx-0x8]
    96d2:	call   3520 <free@plt>
    96d7:	test   rbx,rbx
    96da:	jne    96ca <__ctype_b_loc@plt+0x5d5a>
    96dc:	jmp    9636 <__ctype_b_loc@plt+0x5cc6>
    96e1:	call   3680 <__stack_chk_fail@plt>
    96e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    96f0:	push   r12
    96f2:	push   rbp
    96f3:	push   rbx
    96f4:	sub    rsp,0x4b0
    96fb:	mov    rax,QWORD PTR fs:0x28
    9704:	mov    QWORD PTR [rsp+0x4a8],rax
    970c:	xor    eax,eax
    970e:	lea    rbp,[rsp+0x20]
    9713:	lea    rdx,[rsp+0x260]
    971b:	mov    rbx,rbp
    971e:	mov    rax,rbp
    9721:	nop    DWORD PTR [rax+0x0]
    9728:	mov    DWORD PTR [rax],0x8
    972e:	add    rax,0x4
    9732:	cmp    rax,rdx
    9735:	jne    9728 <__ctype_b_loc@plt+0x5db8>
    9737:	lea    rdx,[rbp+0x400]
    973e:	xchg   ax,ax
    9740:	mov    DWORD PTR [rax],0x9
    9746:	add    rax,0x4
    974a:	cmp    rax,rdx
    974d:	jne    9740 <__ctype_b_loc@plt+0x5dd0>
    974f:	lea    rax,[rsp+0x420]
    9757:	lea    rdx,[rbp+0x460]
    975e:	xchg   ax,ax
    9760:	mov    DWORD PTR [rax],0x7
    9766:	add    rax,0x4
    976a:	cmp    rdx,rax
    976d:	jne    9760 <__ctype_b_loc@plt+0x5df0>
    976f:	mov    DWORD PTR [rsp+0x8],0x7
    9777:	sub    rsp,0x8
    977b:	movabs rax,0x800000008
    9785:	lea    rcx,[rip+0xea14]        # 181a0 <__ctype_b_loc@plt+0x14830>
    978c:	mov    QWORD PTR [rsp+0x488],rax
    9794:	mov    esi,0x120
    9799:	mov    edx,0x101
    979e:	lea    r8,[rip+0xe9bb]        # 18160 <__ctype_b_loc@plt+0x147f0>
    97a5:	mov    QWORD PTR [rsp+0x490],rax
    97ad:	mov    rdi,rbp
    97b0:	mov    QWORD PTR [rsp+0x498],rax
    97b8:	mov    QWORD PTR [rsp+0x4a0],rax
    97c0:	lea    rax,[rsp+0x10]
    97c5:	push   rax
    97c6:	lea    r9,[rsp+0x20]
    97cb:	call   8860 <__ctype_b_loc@plt+0x4ef0>
    97d0:	pop    rcx
    97d1:	pop    rsi
    97d2:	mov    r12d,eax
    97d5:	test   eax,eax
    97d7:	jne    9852 <__ctype_b_loc@plt+0x5ee2>
    97d9:	lea    rax,[rbp+0x78]
    97dd:	nop    DWORD PTR [rax]
    97e0:	mov    DWORD PTR [rbx],0x5
    97e6:	add    rbx,0x4
    97ea:	cmp    rbx,rax
    97ed:	jne    97e0 <__ctype_b_loc@plt+0x5e70>
    97ef:	sub    rsp,0x8
    97f3:	xor    edx,edx
    97f5:	lea    r8,[rip+0xe8e4]        # 180e0 <__ctype_b_loc@plt+0x14770>
    97fc:	mov    rdi,rbp
    97ff:	mov    DWORD PTR [rsp+0x14],0x5
    9807:	lea    rax,[rsp+0x14]
    980c:	mov    esi,0x1e
    9811:	lea    rcx,[rip+0xe908]        # 18120 <__ctype_b_loc@plt+0x147b0>
    9818:	push   rax
    9819:	lea    r9,[rsp+0x28]
    981e:	call   8860 <__ctype_b_loc@plt+0x4ef0>
    9823:	mov    r12d,eax
    9826:	pop    rax
    9827:	pop    rdx
    9828:	cmp    r12d,0x1
    982c:	jle    9874 <__ctype_b_loc@plt+0x5f04>
    982e:	mov    rbx,QWORD PTR [rsp+0x10]
    9833:	test   rbx,rbx
    9836:	je     9852 <__ctype_b_loc@plt+0x5ee2>
    9838:	nop    DWORD PTR [rax+rax*1+0x0]
    9840:	lea    rdi,[rbx-0x10]
    9844:	mov    rbx,QWORD PTR [rbx-0x8]
    9848:	call   3520 <free@plt>
    984d:	test   rbx,rbx
    9850:	jne    9840 <__ctype_b_loc@plt+0x5ed0>
    9852:	mov    rax,QWORD PTR [rsp+0x4a8]
    985a:	xor    rax,QWORD PTR fs:0x28
    9863:	jne    98e2 <__ctype_b_loc@plt+0x5f72>
    9865:	add    rsp,0x4b0
    986c:	mov    eax,r12d
    986f:	pop    rbx
    9870:	pop    rbp
    9871:	pop    r12
    9873:	ret    
    9874:	mov    ecx,DWORD PTR [rsp+0xc]
    9878:	mov    edx,DWORD PTR [rsp+0x8]
    987c:	mov    rsi,QWORD PTR [rsp+0x18]
    9881:	mov    rdi,QWORD PTR [rsp+0x10]
    9886:	call   8320 <__ctype_b_loc@plt+0x49b0>
    988b:	mov    r12d,eax
    988e:	test   eax,eax
    9890:	jne    98d7 <__ctype_b_loc@plt+0x5f67>
    9892:	mov    rbx,QWORD PTR [rsp+0x10]
    9897:	test   rbx,rbx
    989a:	je     98b2 <__ctype_b_loc@plt+0x5f42>
    989c:	nop    DWORD PTR [rax+0x0]
    98a0:	lea    rdi,[rbx-0x10]
    98a4:	mov    rbx,QWORD PTR [rbx-0x8]
    98a8:	call   3520 <free@plt>
    98ad:	test   rbx,rbx
    98b0:	jne    98a0 <__ctype_b_loc@plt+0x5f30>
    98b2:	mov    rbx,QWORD PTR [rsp+0x18]
    98b7:	test   rbx,rbx
    98ba:	je     9852 <__ctype_b_loc@plt+0x5ee2>
    98bc:	nop    DWORD PTR [rax+0x0]
    98c0:	lea    rdi,[rbx-0x10]
    98c4:	mov    rbx,QWORD PTR [rbx-0x8]
    98c8:	call   3520 <free@plt>
    98cd:	test   rbx,rbx
    98d0:	jne    98c0 <__ctype_b_loc@plt+0x5f50>
    98d2:	jmp    9852 <__ctype_b_loc@plt+0x5ee2>
    98d7:	mov    r12d,0x1
    98dd:	jmp    9852 <__ctype_b_loc@plt+0x5ee2>
    98e2:	call   3680 <__stack_chk_fail@plt>
    98e7:	nop    WORD PTR [rax+rax*1+0x0]
    98f0:	endbr64 
    98f4:	push   r15
    98f6:	push   r14
    98f8:	xor    r14d,r14d
    98fb:	push   r13
    98fd:	push   r12
    98ff:	push   rbp
    9900:	lea    rbp,[rip+0x9a6f9]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    9907:	push   rbx
    9908:	xor    ebx,ebx
    990a:	sub    rsp,0x18
    990e:	mov    DWORD PTR [rip+0x98708],0x0        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9918:	mov    DWORD PTR [rip+0x11122],0x0        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    9922:	mov    QWORD PTR [rip+0x1111b],0x0        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    992d:	nop    DWORD PTR [rax]
    9930:	mov    DWORD PTR [rip+0x11106],0x0        # 1aa40 <stderr@@GLIBC_2.2.5+0xa00>
    993a:	test   r14d,r14d
    993d:	jne    99d0 <__ctype_b_loc@plt+0x6060>
    9943:	mov    eax,DWORD PTR [rip+0x44adb]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9949:	cmp    eax,DWORD PTR [rip+0x986d5]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    994f:	jae    99c0 <__ctype_b_loc@plt+0x6050>
    9951:	lea    edx,[rax+0x1]
    9954:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9959:	mov    DWORD PTR [rip+0x44ac5],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    995f:	or     rbx,rax
    9962:	mov    r15d,0x5
    9968:	mov    r12d,ebx
    996b:	shr    rbx,1
    996e:	and    r12d,0x1
    9972:	mov    eax,ebx
    9974:	shr    rbx,0x2
    9978:	mov    DWORD PTR [rip+0x110c5],r15d        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    997f:	and    eax,0x3
    9982:	mov    QWORD PTR [rip+0x110bf],rbx        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    9989:	cmp    eax,0x2
    998c:	je     9c80 <__ctype_b_loc@plt+0x6310>
    9992:	test   eax,eax
    9994:	je     9a30 <__ctype_b_loc@plt+0x60c0>
    999a:	cmp    eax,0x1
    999d:	je     9c58 <__ctype_b_loc@plt+0x62e8>
    99a3:	mov    eax,0x2
    99a8:	add    rsp,0x18
    99ac:	pop    rbx
    99ad:	pop    rbp
    99ae:	pop    r12
    99b0:	pop    r13
    99b2:	pop    r14
    99b4:	pop    r15
    99b6:	ret    
    99b7:	nop    WORD PTR [rax+rax*1+0x0]
    99c0:	xor    edi,edi
    99c2:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    99c7:	movzx  eax,al
    99ca:	jmp    995f <__ctype_b_loc@plt+0x5fef>
    99cc:	nop    DWORD PTR [rax+0x0]
    99d0:	mov    r12d,ebx
    99d3:	lea    r15d,[r14-0x1]
    99d7:	shr    rbx,1
    99da:	and    r12d,0x1
    99de:	cmp    r15d,0x1
    99e2:	ja     9cb1 <__ctype_b_loc@plt+0x6341>
    99e8:	mov    eax,DWORD PTR [rip+0x44a36]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    99ee:	cmp    eax,DWORD PTR [rip+0x98630]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    99f4:	jae    9a20 <__ctype_b_loc@plt+0x60b0>
    99f6:	lea    edx,[rax+0x1]
    99f9:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    99fe:	mov    DWORD PTR [rip+0x44a20],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9a04:	mov    ecx,r15d
    9a07:	lea    r15d,[r14+0x5]
    9a0b:	shl    rax,cl
    9a0e:	or     rbx,rax
    9a11:	jmp    9972 <__ctype_b_loc@plt+0x6002>
    9a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9a20:	xor    edi,edi
    9a22:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9a27:	movzx  eax,al
    9a2a:	jmp    9a04 <__ctype_b_loc@plt+0x6094>
    9a2c:	nop    DWORD PTR [rax+0x0]
    9a30:	mov    eax,r15d
    9a33:	mov    r13d,DWORD PTR [rip+0x985e6]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9a3a:	and    eax,0x7
    9a3d:	mov    ecx,eax
    9a3f:	mov    DWORD PTR [rsp+0xc],eax
    9a43:	shr    rbx,cl
    9a46:	mov    r14,rbx
    9a49:	mov    ebx,r15d
    9a4c:	sub    ebx,eax
    9a4e:	cmp    ebx,0xf
    9a51:	ja     9ac8 <__ctype_b_loc@plt+0x6158>
    9a53:	mov    ecx,ebx
    9a55:	jmp    9a7c <__ctype_b_loc@plt+0x610c>
    9a57:	nop    WORD PTR [rax+rax*1+0x0]
    9a60:	lea    edi,[rax+0x1]
    9a63:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9a68:	mov    DWORD PTR [rip+0x449b6],edi        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9a6e:	shl    rax,cl
    9a71:	add    ecx,0x8
    9a74:	or     r14,rax
    9a77:	cmp    ecx,0xf
    9a7a:	ja     9ab1 <__ctype_b_loc@plt+0x6141>
    9a7c:	mov    eax,DWORD PTR [rip+0x449a2]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9a82:	cmp    eax,DWORD PTR [rip+0x9859c]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    9a88:	jb     9a60 <__ctype_b_loc@plt+0x60f0>
    9a8a:	xor    edi,edi
    9a8c:	mov    DWORD PTR [rsp+0x8],ecx
    9a90:	mov    DWORD PTR [rip+0x98589],r13d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9a97:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9a9c:	mov    ecx,DWORD PTR [rsp+0x8]
    9aa0:	movzx  eax,al
    9aa3:	shl    rax,cl
    9aa6:	add    ecx,0x8
    9aa9:	or     r14,rax
    9aac:	cmp    ecx,0xf
    9aaf:	jbe    9a7c <__ctype_b_loc@plt+0x610c>
    9ab1:	mov    eax,DWORD PTR [rsp+0xc]
    9ab5:	sub    eax,r15d
    9ab8:	mov    r15d,eax
    9abb:	add    r15d,0xf
    9abf:	and    r15d,0xfffffff8
    9ac3:	lea    ebx,[rbx+r15*1+0x8]
    9ac8:	movzx  eax,r14w
    9acc:	shr    r14,0x10
    9ad0:	mov    r15,r14
    9ad3:	lea    r14d,[rbx-0x10]
    9ad7:	mov    DWORD PTR [rsp+0x8],eax
    9adb:	cmp    r14d,0xf
    9adf:	jbe    9b09 <__ctype_b_loc@plt+0x6199>
    9ae1:	jmp    9b3f <__ctype_b_loc@plt+0x61cf>
    9ae3:	nop    DWORD PTR [rax+rax*1+0x0]
    9ae8:	lea    esi,[rax+0x1]
    9aeb:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9af0:	mov    DWORD PTR [rip+0x4492e],esi        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9af6:	mov    ecx,r14d
    9af9:	add    r14d,0x8
    9afd:	shl    rax,cl
    9b00:	or     r15,rax
    9b03:	cmp    r14d,0xf
    9b07:	ja     9b30 <__ctype_b_loc@plt+0x61c0>
    9b09:	mov    eax,DWORD PTR [rip+0x44915]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9b0f:	cmp    eax,DWORD PTR [rip+0x9850f]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    9b15:	jb     9ae8 <__ctype_b_loc@plt+0x6178>
    9b17:	xor    edi,edi
    9b19:	mov    DWORD PTR [rip+0x98500],r13d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9b20:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9b25:	movzx  eax,al
    9b28:	jmp    9af6 <__ctype_b_loc@plt+0x6186>
    9b2a:	nop    WORD PTR [rax+rax*1+0x0]
    9b30:	mov    eax,0x1f
    9b35:	sub    eax,ebx
    9b37:	and    eax,0xfffffff8
    9b3a:	lea    r14d,[rbx+rax*1-0x8]
    9b3f:	mov    eax,r15d
    9b42:	mov    esi,DWORD PTR [rsp+0x8]
    9b46:	not    eax
    9b48:	movzx  eax,ax
    9b4b:	cmp    esi,eax
    9b4d:	jne    9c90 <__ctype_b_loc@plt+0x6320>
    9b53:	shr    r15,0x10
    9b57:	sub    r14d,0x10
    9b5b:	lea    ebx,[rsi-0x1]
    9b5e:	test   esi,esi
    9b60:	jne    9bae <__ctype_b_loc@plt+0x623e>
    9b62:	jmp    9c00 <__ctype_b_loc@plt+0x6290>
    9b67:	nop    WORD PTR [rax+rax*1+0x0]
    9b70:	lea    ecx,[rax+0x1]
    9b73:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9b78:	mov    DWORD PTR [rip+0x448a6],ecx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9b7e:	mov    ecx,r14d
    9b81:	shl    rax,cl
    9b84:	or     r15,rax
    9b87:	mov    eax,r13d
    9b8a:	lea    rsi,[rip+0x8846f]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    9b91:	add    r13d,0x1
    9b95:	mov    BYTE PTR [rsi+rax*1],r15b
    9b99:	cmp    r13d,0x8000
    9ba0:	je     9be0 <__ctype_b_loc@plt+0x6270>
    9ba2:	sub    ebx,0x1
    9ba5:	shr    r15,0x8
    9ba9:	cmp    ebx,0xffffffff
    9bac:	je     9c00 <__ctype_b_loc@plt+0x6290>
    9bae:	cmp    r14d,0x7
    9bb2:	ja     9ca8 <__ctype_b_loc@plt+0x6338>
    9bb8:	mov    eax,DWORD PTR [rip+0x44866]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9bbe:	cmp    eax,DWORD PTR [rip+0x98460]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    9bc4:	jb     9b70 <__ctype_b_loc@plt+0x6200>
    9bc6:	xor    edi,edi
    9bc8:	mov    DWORD PTR [rip+0x98451],r13d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9bcf:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    9bd4:	movzx  eax,al
    9bd7:	jmp    9b7e <__ctype_b_loc@plt+0x620e>
    9bd9:	nop    DWORD PTR [rax+0x0]
    9be0:	sub    ebx,0x1
    9be3:	xor    r13d,r13d
    9be6:	shr    r15,0x8
    9bea:	mov    DWORD PTR [rip+0x9842c],0x8000        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9bf4:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    9bf9:	cmp    ebx,0xffffffff
    9bfc:	jne    9bae <__ctype_b_loc@plt+0x623e>
    9bfe:	xchg   ax,ax
    9c00:	mov    DWORD PTR [rip+0x98419],r13d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    9c07:	mov    QWORD PTR [rip+0x10e3a],r15        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    9c0e:	mov    DWORD PTR [rip+0x10e2f],r14d        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    9c15:	test   r12d,r12d
    9c18:	je     9c71 <__ctype_b_loc@plt+0x6301>
    9c1a:	cmp    r14d,0x7
    9c1e:	jbe    9c3b <__ctype_b_loc@plt+0x62cb>
    9c20:	lea    eax,[r14-0x8]
    9c24:	mov    esi,r14d
    9c27:	shr    eax,0x3
    9c2a:	and    esi,0x7
    9c2d:	not    eax
    9c2f:	add    DWORD PTR [rip+0x447ef],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    9c35:	mov    DWORD PTR [rip+0x10e09],esi        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    9c3b:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    9c40:	add    rsp,0x18
    9c44:	xor    eax,eax
    9c46:	pop    rbx
    9c47:	pop    rbp
    9c48:	pop    r12
    9c4a:	pop    r13
    9c4c:	pop    r14
    9c4e:	pop    r15
    9c50:	ret    
    9c51:	nop    DWORD PTR [rax+0x0]
    9c58:	call   96f0 <__ctype_b_loc@plt+0x5d80>
    9c5d:	test   eax,eax
    9c5f:	jne    99a8 <__ctype_b_loc@plt+0x6038>
    9c65:	mov    r14d,DWORD PTR [rip+0x10dd8]        # 1aa44 <stderr@@GLIBC_2.2.5+0xa04>
    9c6c:	test   r12d,r12d
    9c6f:	jne    9c1a <__ctype_b_loc@plt+0x62aa>
    9c71:	mov    rbx,QWORD PTR [rip+0x10dd0]        # 1aa48 <stderr@@GLIBC_2.2.5+0xa08>
    9c78:	jmp    9930 <__ctype_b_loc@plt+0x5fc0>
    9c7d:	nop    DWORD PTR [rax]
    9c80:	call   8f30 <__ctype_b_loc@plt+0x55c0>
    9c85:	jmp    9c5d <__ctype_b_loc@plt+0x62ed>
    9c87:	nop    WORD PTR [rax+rax*1+0x0]
    9c90:	add    rsp,0x18
    9c94:	mov    eax,0x1
    9c99:	pop    rbx
    9c9a:	pop    rbp
    9c9b:	pop    r12
    9c9d:	pop    r13
    9c9f:	pop    r14
    9ca1:	pop    r15
    9ca3:	ret    
    9ca4:	nop    DWORD PTR [rax+0x0]
    9ca8:	sub    r14d,0x8
    9cac:	jmp    9b87 <__ctype_b_loc@plt+0x6217>
    9cb1:	lea    r15d,[r14-0x3]
    9cb5:	jmp    9972 <__ctype_b_loc@plt+0x6002>
    9cba:	nop    WORD PTR [rax+rax*1+0x0]
    9cc0:	endbr64 
    9cc4:	mov    eax,DWORD PTR [rip+0x10d86]        # 1aa50 <stderr@@GLIBC_2.2.5+0xa10>
    9cca:	test   eax,eax
    9ccc:	je     9cd8 <__ctype_b_loc@plt+0x6368>
    9cce:	mov    eax,0x1
    9cd3:	ret    
    9cd4:	nop    DWORD PTR [rax+0x0]
    9cd8:	push   rbp
    9cd9:	mov    ebp,edi
    9cdb:	xor    eax,eax
    9cdd:	push   rbx
    9cde:	mov    ebx,esi
    9ce0:	lea    rsi,[rip+0x9709]        # 133f0 <__ctype_b_loc@plt+0xfa80>
    9ce7:	sub    rsp,0x8
    9ceb:	mov    rdi,QWORD PTR [rip+0x1034e]        # 1a040 <stderr@@GLIBC_2.2.5>
    9cf2:	mov    DWORD PTR [rip+0x10d54],0x1        # 1aa50 <stderr@@GLIBC_2.2.5+0xa10>
    9cfc:	call   f390 <__ctype_b_loc@plt+0xba20>
    9d01:	cmp    ebp,ebx
    9d03:	je     9d0f <__ctype_b_loc@plt+0x639f>
    9d05:	mov    DWORD PTR [rip+0x10375],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    9d0f:	add    rsp,0x8
    9d13:	mov    eax,0x1
    9d18:	pop    rbx
    9d19:	pop    rbp
    9d1a:	ret    
    9d1b:	nop    DWORD PTR [rax+rax*1+0x0]
    9d20:	lea    rax,[rip+0x13399]        # 1d0c0 <stderr@@GLIBC_2.2.5+0x3080>
    9d27:	lea    rdx,[rax+0x478]
    9d2e:	xchg   ax,ax
    9d30:	xor    edi,edi
    9d32:	add    rax,0x4
    9d36:	mov    WORD PTR [rax-0x4],di
    9d3a:	cmp    rax,rdx
    9d3d:	jne    9d30 <__ctype_b_loc@plt+0x63c0>
    9d3f:	lea    rax,[rip+0x1327a]        # 1cfc0 <stderr@@GLIBC_2.2.5+0x2f80>
    9d46:	lea    rdx,[rax+0x78]
    9d4a:	nop    WORD PTR [rax+rax*1+0x0]
    9d50:	xor    esi,esi
    9d52:	add    rax,0x4
    9d56:	mov    WORD PTR [rax-0x4],si
    9d5a:	cmp    rax,rdx
    9d5d:	jne    9d50 <__ctype_b_loc@plt+0x63e0>
    9d5f:	lea    rax,[rip+0x12cba]        # 1ca20 <stderr@@GLIBC_2.2.5+0x29e0>
    9d66:	lea    rdx,[rax+0x4c]
    9d6a:	nop    WORD PTR [rax+rax*1+0x0]
    9d70:	xor    ecx,ecx
    9d72:	add    rax,0x4
    9d76:	mov    WORD PTR [rax-0x4],cx
    9d7a:	cmp    rax,rdx
    9d7d:	jne    9d70 <__ctype_b_loc@plt+0x6400>
    9d7f:	mov    eax,0x1
    9d84:	mov    QWORD PTR [rip+0x10ce9],0x0        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    9d8f:	mov    WORD PTR [rip+0x1372a],ax        # 1d4c0 <stderr@@GLIBC_2.2.5+0x3480>
    9d96:	mov    QWORD PTR [rip+0x10cdf],0x0        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    9da1:	mov    DWORD PTR [rip+0x10ce1],0x0        # 1aa8c <stderr@@GLIBC_2.2.5+0xa4c>
    9dab:	mov    DWORD PTR [rip+0x10cdb],0x0        # 1aa90 <stderr@@GLIBC_2.2.5+0xa50>
    9db5:	mov    DWORD PTR [rip+0x10cd5],0x0        # 1aa94 <stderr@@GLIBC_2.2.5+0xa54>
    9dbf:	mov    BYTE PTR [rip+0x10cc3],0x0        # 1aa89 <stderr@@GLIBC_2.2.5+0xa49>
    9dc6:	mov    BYTE PTR [rip+0x10cbb],0x1        # 1aa88 <stderr@@GLIBC_2.2.5+0xa48>
    9dcd:	ret    
    9dce:	xchg   ax,ax
    9dd0:	push   r15
    9dd2:	movsxd r10,esi
    9dd5:	add    esi,esi
    9dd7:	lea    r8,[rip+0x12322]        # 1c100 <stderr@@GLIBC_2.2.5+0x20c0>
    9dde:	push   r14
    9de0:	mov    r11d,DWORD PTR [rip+0x122fd]        # 1c0e4 <stderr@@GLIBC_2.2.5+0x20a4>
    9de7:	push   r13
    9de9:	push   r12
    9deb:	push   rbp
    9dec:	push   rbx
    9ded:	mov    eax,DWORD PTR [r8+r10*4]
    9df1:	mov    DWORD PTR [rsp-0x4],eax
    9df5:	cmp    esi,r11d
    9df8:	jg     9e66 <__ctype_b_loc@plt+0x64f6>
    9dfa:	movsxd r15,eax
    9dfd:	lea    r14,[rip+0x1209c]        # 1bea0 <stderr@@GLIBC_2.2.5+0x1e60>
    9e04:	movzx  r12d,WORD PTR [rdi+r15*4]
    9e09:	jmp    9e1f <__ctype_b_loc@plt+0x64af>
    9e0b:	nop    DWORD PTR [rax+rax*1+0x0]
    9e10:	lea    esi,[rax+rax*1]
    9e13:	mov    DWORD PTR [r8+r10*4],edx
    9e17:	movsxd r10,eax
    9e1a:	cmp    esi,r11d
    9e1d:	jg     9e66 <__ctype_b_loc@plt+0x64f6>
    9e1f:	movsxd rax,esi
    9e22:	movsxd r9,DWORD PTR [r8+rax*4]
    9e26:	mov    eax,esi
    9e28:	movzx  ecx,WORD PTR [rdi+r9*4]
    9e2d:	mov    rdx,r9
    9e30:	cmp    r11d,esi
    9e33:	jle    9e50 <__ctype_b_loc@plt+0x64e0>
    9e35:	add    eax,0x1
    9e38:	movsxd rbx,eax
    9e3b:	movsxd r13,DWORD PTR [r8+rbx*4]
    9e3f:	movzx  ebp,WORD PTR [rdi+r13*4]
    9e44:	cmp    bp,cx
    9e47:	jb     9e80 <__ctype_b_loc@plt+0x6510>
    9e49:	je     9e90 <__ctype_b_loc@plt+0x6520>
    9e4b:	mov    eax,esi
    9e4d:	nop    DWORD PTR [rax]
    9e50:	cmp    r12w,cx
    9e54:	jb     9e66 <__ctype_b_loc@plt+0x64f6>
    9e56:	jne    9e10 <__ctype_b_loc@plt+0x64a0>
    9e58:	movsxd rcx,edx
    9e5b:	movzx  ebx,BYTE PTR [r14+rcx*1]
    9e60:	cmp    BYTE PTR [r14+r15*1],bl
    9e64:	ja     9e10 <__ctype_b_loc@plt+0x64a0>
    9e66:	mov    eax,DWORD PTR [rsp-0x4]
    9e6a:	mov    DWORD PTR [r8+r10*4],eax
    9e6e:	pop    rbx
    9e6f:	pop    rbp
    9e70:	pop    r12
    9e72:	pop    r13
    9e74:	pop    r14
    9e76:	pop    r15
    9e78:	ret    
    9e79:	nop    DWORD PTR [rax+0x0]
    9e80:	mov    ecx,ebp
    9e82:	mov    edx,r13d
    9e85:	jmp    9e50 <__ctype_b_loc@plt+0x64e0>
    9e87:	nop    WORD PTR [rax+rax*1+0x0]
    9e90:	movzx  ebp,BYTE PTR [r14+r13*1]
    9e95:	cmp    bpl,BYTE PTR [r14+r9*1]
    9e99:	cmovbe edx,r13d
    9e9d:	cmova  eax,esi
    9ea0:	jmp    9e50 <__ctype_b_loc@plt+0x64e0>
    9ea2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    9ead:	nop    DWORD PTR [rax]
    9eb0:	movzx  edx,WORD PTR [rdi+0x2]
    9eb4:	movsxd rax,esi
    9eb7:	mov    ecx,0xffffffff
    9ebc:	mov    WORD PTR [rdi+rax*4+0x6],cx
    9ec1:	cmp    edx,0x1
    9ec4:	sbb    r9d,r9d
    9ec7:	add    r9d,0x4
    9ecb:	cmp    edx,0x1
    9ece:	sbb    r8d,r8d
    9ed1:	and    r8d,0x83
    9ed8:	add    r8d,0x7
    9edc:	test   esi,esi
    9ede:	js     9f79 <__ctype_b_loc@plt+0x6609>
    9ee4:	lea    r11,[rdi+rax*4+0xa]
    9ee9:	lea    rcx,[rdi+0x6]
    9eed:	xor    eax,eax
    9eef:	mov    edi,0xffffffff
    9ef4:	lea    r10,[rip+0x12b25]        # 1ca20 <stderr@@GLIBC_2.2.5+0x29e0>
    9efb:	jmp    9f3e <__ctype_b_loc@plt+0x65ce>
    9efd:	nop    DWORD PTR [rax]
    9f00:	test   esi,esi
    9f02:	je     9f98 <__ctype_b_loc@plt+0x6628>
    9f08:	cmp    esi,edi
    9f0a:	je     9f15 <__ctype_b_loc@plt+0x65a5>
    9f0c:	movsxd rax,esi
    9f0f:	add    WORD PTR [r10+rax*4],0x1
    9f15:	add    WORD PTR [rip+0x12b43],0x1        # 1ca60 <stderr@@GLIBC_2.2.5+0x2a20>
    9f1d:	test   edx,edx
    9f1f:	je     9f80 <__ctype_b_loc@plt+0x6610>
    9f21:	cmp    edx,esi
    9f23:	jne    9f60 <__ctype_b_loc@plt+0x65f0>
    9f25:	mov    edi,edx
    9f27:	mov    r9d,0x3
    9f2d:	mov    r8d,0x6
    9f33:	xor    eax,eax
    9f35:	add    rcx,0x4
    9f39:	cmp    r11,rcx
    9f3c:	je     9f79 <__ctype_b_loc@plt+0x6609>
    9f3e:	add    eax,0x1
    9f41:	mov    esi,edx
    9f43:	movzx  edx,WORD PTR [rcx]
    9f46:	cmp    eax,r8d
    9f49:	jge    9f00 <__ctype_b_loc@plt+0x6590>
    9f4b:	cmp    edx,esi
    9f4d:	je     9f35 <__ctype_b_loc@plt+0x65c5>
    9f4f:	cmp    eax,r9d
    9f52:	jge    9f00 <__ctype_b_loc@plt+0x6590>
    9f54:	movsxd rdi,esi
    9f57:	add    WORD PTR [r10+rdi*4],ax
    9f5c:	test   edx,edx
    9f5e:	je     9f80 <__ctype_b_loc@plt+0x6610>
    9f60:	add    rcx,0x4
    9f64:	mov    edi,esi
    9f66:	mov    r9d,0x4
    9f6c:	xor    eax,eax
    9f6e:	mov    r8d,0x7
    9f74:	cmp    r11,rcx
    9f77:	jne    9f3e <__ctype_b_loc@plt+0x65ce>
    9f79:	ret    
    9f7a:	nop    WORD PTR [rax+rax*1+0x0]
    9f80:	mov    edi,esi
    9f82:	mov    r9d,0x3
    9f88:	mov    r8d,0x8a
    9f8e:	xor    eax,eax
    9f90:	jmp    9f35 <__ctype_b_loc@plt+0x65c5>
    9f92:	nop    WORD PTR [rax+rax*1+0x0]
    9f98:	cmp    eax,0xa
    9f9b:	jg     9fb0 <__ctype_b_loc@plt+0x6640>
    9f9d:	add    WORD PTR [rip+0x12abf],0x1        # 1ca64 <stderr@@GLIBC_2.2.5+0x2a24>
    9fa5:	jmp    9f1d <__ctype_b_loc@plt+0x65ad>
    9faa:	nop    WORD PTR [rax+rax*1+0x0]
    9fb0:	add    WORD PTR [rip+0x12ab0],0x1        # 1ca68 <stderr@@GLIBC_2.2.5+0x2a28>
    9fb8:	jmp    9f1d <__ctype_b_loc@plt+0x65ad>
    9fbd:	nop    DWORD PTR [rax]
    9fc0:	push   rbp
    9fc1:	xor    edx,edx
    9fc3:	lea    r8,[rip+0x12a36]        # 1ca00 <stderr@@GLIBC_2.2.5+0x29c0>
    9fca:	push   rbx
    9fcb:	sub    rsp,0x38
    9fcf:	mov    rax,QWORD PTR fs:0x28
    9fd8:	mov    QWORD PTR [rsp+0x28],rax
    9fdd:	xor    eax,eax
    9fdf:	lea    rcx,[rsp+0x2]
    9fe4:	nop    DWORD PTR [rax+0x0]
    9fe8:	add    ax,WORD PTR [r8+rdx*1]
    9fed:	add    eax,eax
    9fef:	mov    WORD PTR [rcx+rdx*1],ax
    9ff3:	add    rdx,0x2
    9ff7:	cmp    rdx,0x1e
    9ffb:	jne    9fe8 <__ctype_b_loc@plt+0x6678>
    9ffd:	test   esi,esi
    9fff:	js     a037 <__ctype_b_loc@plt+0x66c7>
    a001:	movsxd rsi,esi
    a004:	mov    rbx,rdi
    a007:	lea    rbp,[rdi+rsi*4+0x4]
    a00c:	nop    DWORD PTR [rax+0x0]
    a010:	movzx  esi,WORD PTR [rbx+0x2]
    a014:	test   esi,esi
    a016:	je     a02e <__ctype_b_loc@plt+0x66be>
    a018:	movsxd rax,esi
    a01b:	movzx  edi,WORD PTR [rsp+rax*2]
    a01f:	lea    edx,[rdi+0x1]
    a022:	mov    WORD PTR [rsp+rax*2],dx
    a026:	call   43c0 <__ctype_b_loc@plt+0xa50>
    a02b:	mov    WORD PTR [rbx],ax
    a02e:	add    rbx,0x4
    a032:	cmp    rbx,rbp
    a035:	jne    a010 <__ctype_b_loc@plt+0x66a0>
    a037:	mov    rax,QWORD PTR [rsp+0x28]
    a03c:	xor    rax,QWORD PTR fs:0x28
    a045:	jne    a04e <__ctype_b_loc@plt+0x66de>
    a047:	add    rsp,0x38
    a04b:	pop    rbx
    a04c:	pop    rbp
    a04d:	ret    
    a04e:	call   3680 <__stack_chk_fail@plt>
    a053:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    a05e:	xchg   ax,ax
    a060:	push   r15
    a062:	mov    rax,rdi
    a065:	push   r14
    a067:	push   r13
    a069:	push   r12
    a06b:	push   rbp
    a06c:	push   rbx
    a06d:	sub    rsp,0x48
    a071:	mov    r12d,DWORD PTR [rax+0x1c]
    a075:	mov    r14,QWORD PTR [rax+0x8]
    a079:	mov    DWORD PTR [rip+0x12061],0x0        # 1c0e4 <stderr@@GLIBC_2.2.5+0x20a4>
    a083:	mov    QWORD PTR [rsp+0x28],rdi
    a088:	mov    rdi,QWORD PTR [rdi]
    a08b:	mov    DWORD PTR [rip+0x1204b],0x23d        # 1c0e0 <stderr@@GLIBC_2.2.5+0x20a0>
    a095:	test   r12d,r12d
    a098:	jle    a620 <__ctype_b_loc@plt+0x6cb0>
    a09e:	lea    r10,[rip+0x1205b]        # 1c100 <stderr@@GLIBC_2.2.5+0x20c0>
    a0a5:	lea    ecx,[r12-0x1]
    a0aa:	xor    eax,eax
    a0ac:	xor    esi,esi
    a0ae:	mov    QWORD PTR [rsp+0x20],r10
    a0b3:	xor    r8d,r8d
    a0b6:	mov    r9d,0xffffffff
    a0bc:	lea    rbx,[rip+0x11ddd]        # 1bea0 <stderr@@GLIBC_2.2.5+0x1e60>
    a0c3:	jmp    a0eb <__ctype_b_loc@plt+0x677b>
    a0c5:	nop    DWORD PTR [rax]
    a0c8:	add    esi,0x1
    a0cb:	mov    BYTE PTR [rbx+rax*1],0x0
    a0cf:	mov    r9d,eax
    a0d2:	mov    r8d,0x1
    a0d8:	movsxd rdx,esi
    a0db:	mov    DWORD PTR [r10+rdx*4],eax
    a0df:	lea    rdx,[rax+0x1]
    a0e3:	cmp    rax,rcx
    a0e6:	je     a102 <__ctype_b_loc@plt+0x6792>
    a0e8:	mov    rax,rdx
    a0eb:	cmp    WORD PTR [rdi+rax*4],0x0
    a0f0:	jne    a0c8 <__ctype_b_loc@plt+0x6758>
    a0f2:	xor    edx,edx
    a0f4:	mov    WORD PTR [rdi+rax*4+0x2],dx
    a0f9:	lea    rdx,[rax+0x1]
    a0fd:	cmp    rax,rcx
    a100:	jne    a0e8 <__ctype_b_loc@plt+0x6778>
    a102:	mov    DWORD PTR [rsp+0x30],r9d
    a107:	test   r8b,r8b
    a10a:	je     a600 <__ctype_b_loc@plt+0x6c90>
    a110:	mov    DWORD PTR [rip+0x11fce],esi        # 1c0e4 <stderr@@GLIBC_2.2.5+0x20a4>
    a116:	cmp    esi,0x1
    a119:	jg     a610 <__ctype_b_loc@plt+0x6ca0>
    a11f:	mov    r11,QWORD PTR [rip+0x1095a]        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    a126:	mov    r9,QWORD PTR [rip+0x1094b]        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    a12d:	movsxd rdx,esi
    a130:	xor    r10d,r10d
    a133:	mov    r8d,DWORD PTR [rsp+0x30]
    a138:	lea    rbp,[rip+0x11fc5]        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a13f:	jmp    a17f <__ctype_b_loc@plt+0x680f>
    a141:	nop    DWORD PTR [rax+0x0]
    a148:	mov    r13,rdi
    a14b:	xor    ecx,ecx
    a14d:	xor    eax,eax
    a14f:	mov    r15d,0x1
    a155:	mov    DWORD PTR [rbp+rdx*4+0x0],eax
    a159:	mov    WORD PTR [r13+0x0],r15w
    a15e:	mov    BYTE PTR [rbx+rax*1],0x0
    a162:	test   r14,r14
    a165:	je     a176 <__ctype_b_loc@plt+0x6806>
    a167:	movzx  eax,WORD PTR [r14+rcx*1+0x2]
    a16d:	mov    r10d,0x1
    a173:	sub    r9,rax
    a176:	add    rdx,0x1
    a17a:	cmp    edx,0x1
    a17d:	jg     a1a0 <__ctype_b_loc@plt+0x6830>
    a17f:	cmp    r8d,0x1
    a183:	jg     a148 <__ctype_b_loc@plt+0x67d8>
    a185:	add    r8d,0x1
    a189:	movsxd rcx,r8d
    a18c:	movsxd rax,r8d
    a18f:	shl    rcx,0x2
    a193:	lea    r13,[rdi+rcx*1]
    a197:	jmp    a14f <__ctype_b_loc@plt+0x67df>
    a199:	nop    DWORD PTR [rax+0x0]
    a1a0:	mov    eax,0x1
    a1a5:	mov    edx,0x0
    a1aa:	mov    DWORD PTR [rsp+0x30],r8d
    a1af:	sub    eax,esi
    a1b1:	cmp    esi,0x1
    a1b4:	cmovle edx,eax
    a1b7:	neg    rax
    a1ba:	cmp    esi,0x1
    a1bd:	lea    ecx,[rsi+rdx*1+0x1]
    a1c1:	mov    edx,0x0
    a1c6:	cmovg  rax,rdx
    a1ca:	mov    DWORD PTR [rsp+0x18],ecx
    a1ce:	mov    DWORD PTR [rip+0x11f10],ecx        # 1c0e4 <stderr@@GLIBC_2.2.5+0x20a4>
    a1d4:	lea    rax,[r11+rax*1-0x1]
    a1d9:	mov    QWORD PTR [rip+0x108a0],rax        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    a1e0:	test   r10b,r10b
    a1e3:	je     a1ec <__ctype_b_loc@plt+0x687c>
    a1e5:	mov    QWORD PTR [rip+0x1088c],r9        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    a1ec:	mov    rax,QWORD PTR [rsp+0x28]
    a1f1:	mov    esi,DWORD PTR [rsp+0x30]
    a1f5:	mov    r15d,DWORD PTR [rsp+0x18]
    a1fa:	mov    DWORD PTR [rax+0x24],esi
    a1fd:	sar    r15d,1
    a200:	mov    esi,r15d
    a203:	call   9dd0 <__ctype_b_loc@plt+0x6460>
    a208:	sub    r15d,0x1
    a20c:	jne    a200 <__ctype_b_loc@plt+0x6890>
    a20e:	movsxd r15,DWORD PTR [rsp+0x18]
    a213:	mov    esi,r12d
    a216:	movsxd r13,r12d
    a219:	mov    r12,QWORD PTR [rsp+0x20]
    a21e:	mov    r14d,0x23b
    a224:	mov    QWORD PTR [rsp+0x8],rbp
    a229:	add    esi,r15d
    a22c:	mov    rbp,r14
    a22f:	mov    WORD PTR [rsp+0x10],si
    a234:	nop    DWORD PTR [rax+0x0]
    a238:	lea    eax,[r15-0x1]
    a23c:	mov    esi,0x1
    a241:	movsxd r14,DWORD PTR [rip+0x11ebc]        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a248:	mov    DWORD PTR [rip+0x11e96],eax        # 1c0e4 <stderr@@GLIBC_2.2.5+0x20a4>
    a24e:	mov    eax,DWORD PTR [r12+r15*4]
    a252:	mov    DWORD PTR [rip+0x11eac],eax        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a258:	call   9dd0 <__ctype_b_loc@plt+0x6460>
    a25d:	mov    rsi,QWORD PTR [rsp+0x8]
    a262:	movsxd rax,DWORD PTR [rip+0x11e9b]        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a269:	mov    DWORD PTR [rip+0x11e71],ebp        # 1c0e0 <stderr@@GLIBC_2.2.5+0x20a0>
    a26f:	lea    r8,[rdi+r14*4]
    a273:	lea    r9,[rdi+rax*4]
    a277:	mov    DWORD PTR [rsi+rbp*4],r14d
    a27b:	movzx  esi,WORD PTR [r9]
    a27f:	add    si,WORD PTR [r8]
    a283:	mov    DWORD PTR [r12+rbp*4],eax
    a287:	mov    WORD PTR [rdi+r13*4],si
    a28c:	movzx  esi,BYTE PTR [rbx+rax*1]
    a290:	movzx  r10d,BYTE PTR [rbx+r14*1]
    a295:	lea    eax,[rsi+0x1]
    a298:	cmp    r10b,sil
    a29b:	lea    r11d,[r10+0x1]
    a29f:	mov    esi,0x1
    a2a4:	cmovae eax,r11d
    a2a8:	sub    rbp,0x2
    a2ac:	mov    BYTE PTR [rbx+r13*1],al
    a2b0:	movzx  eax,WORD PTR [rsp+0x10]
    a2b5:	sub    eax,r15d
    a2b8:	sub    r15,0x1
    a2bc:	mov    WORD PTR [r9+0x2],ax
    a2c1:	mov    WORD PTR [r8+0x2],ax
    a2c6:	mov    DWORD PTR [rip+0x11e37],r13d        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a2cd:	add    r13,0x1
    a2d1:	call   9dd0 <__ctype_b_loc@plt+0x6460>
    a2d6:	cmp    r15d,0x1
    a2da:	jg     a238 <__ctype_b_loc@plt+0x68c8>
    a2e0:	mov    ebx,DWORD PTR [rsp+0x18]
    a2e4:	mov    edx,0x23b
    a2e9:	mov    rbp,QWORD PTR [rsp+0x8]
    a2ee:	movsxd r8,DWORD PTR [rip+0x11e0f]        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a2f5:	mov    eax,ebx
    a2f7:	neg    eax
    a2f9:	add    eax,eax
    a2fb:	cmp    ebx,0x1
    a2fe:	lea    ecx,[rax+0x23f]
    a304:	cmovg  edx,ecx
    a307:	add    eax,0x241
    a30c:	mov    ecx,0x23d
    a311:	cmp    ebx,0x1
    a314:	cmovle eax,ecx
    a317:	mov    rbx,QWORD PTR [rsp+0x20]
    a31c:	sub    eax,0x3
    a31f:	mov    DWORD PTR [rip+0x11dbb],eax        # 1c0e0 <stderr@@GLIBC_2.2.5+0x20a0>
    a325:	cdqe   
    a327:	mov    DWORD PTR [rbx+rax*4],r8d
    a32b:	mov    rax,QWORD PTR [rsp+0x28]
    a330:	mov    rbx,QWORD PTR [rax+0x10]
    a334:	mov    r11,QWORD PTR [rax]
    a337:	mov    esi,DWORD PTR [rax+0x20]
    a33a:	mov    r13,QWORD PTR [rax+0x8]
    a33e:	mov    QWORD PTR [rsp+0x28],rbx
    a343:	mov    ebx,DWORD PTR [rax+0x18]
    a346:	mov    DWORD PTR [rsp+0x34],ebx
    a34a:	mov    ebx,DWORD PTR [rax+0x24]
    a34d:	lea    rax,[rip+0x126ac]        # 1ca00 <stderr@@GLIBC_2.2.5+0x29c0>
    a354:	mov    rcx,rax
    a357:	lea    r9,[rax+0x20]
    a35b:	mov    DWORD PTR [rsp+0x8],ebx
    a35f:	nop
    a360:	xor    r10d,r10d
    a363:	add    rcx,0x2
    a367:	mov    WORD PTR [rcx-0x2],r10w
    a36c:	cmp    r9,rcx
    a36f:	jne    a360 <__ctype_b_loc@plt+0x69f0>
    a371:	xor    ecx,ecx
    a373:	mov    WORD PTR [r11+r8*4+0x2],cx
    a379:	cmp    edx,0x23c
    a37f:	jg     a531 <__ctype_b_loc@plt+0x6bc1>
    a385:	mov    rbx,QWORD PTR [rip+0x106ec]        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    a38c:	movsxd r8,edx
    a38f:	xor    r9d,r9d
    a392:	xor    r14d,r14d
    a395:	mov    ecx,0x23c
    a39a:	mov    QWORD PTR [rsp+0x38],rdi
    a39f:	mov    r15,QWORD PTR [rip+0x106da]        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    a3a6:	xor    r12d,r12d
    a3a9:	mov    QWORD PTR [rsp+0x18],rbx
    a3ae:	sub    ecx,edx
    a3b0:	mov    rbx,QWORD PTR [rsp+0x20]
    a3b5:	add    rcx,r8
    a3b8:	lea    r10,[rbx+r8*4]
    a3bc:	lea    rbx,[rbp+rcx*4+0x0]
    a3c1:	mov    r8d,r9d
    a3c4:	mov    r9d,DWORD PTR [rsp+0x34]
    a3c9:	mov    QWORD PTR [rsp+0x10],rbx
    a3ce:	xchg   ax,ax
    a3d0:	movsxd rdi,DWORD PTR [r10]
    a3d3:	mov    rcx,rdi
    a3d6:	shl    rdi,0x2
    a3da:	lea    rbx,[r11+rdi*1]
    a3de:	movzx  edx,WORD PTR [rbx+0x2]
    a3e2:	movzx  edx,WORD PTR [r11+rdx*4+0x2]
    a3e8:	add    edx,0x1
    a3eb:	cmp    esi,edx
    a3ed:	jge    a3f5 <__ctype_b_loc@plt+0x6a85>
    a3ef:	add    r14d,0x1
    a3f3:	mov    edx,esi
    a3f5:	mov    WORD PTR [rbx+0x2],dx
    a3f9:	cmp    DWORD PTR [rsp+0x8],ecx
    a3fd:	jl     a452 <__ctype_b_loc@plt+0x6ae2>
    a3ff:	movsxd r8,edx
    a402:	xor    ebp,ebp
    a404:	add    WORD PTR [rax+r8*2],0x1
    a40a:	cmp    r9d,ecx
    a40d:	jg     a423 <__ctype_b_loc@plt+0x6ab3>
    a40f:	mov    r8,QWORD PTR [rsp+0x28]
    a414:	sub    ecx,r9d
    a417:	movsxd rcx,ecx
    a41a:	mov    ebp,DWORD PTR [r8+rcx*4]
    a41e:	add    edx,ebp
    a420:	movsxd r8,edx
    a423:	movzx  edx,WORD PTR [rbx]
    a426:	imul   r8,rdx
    a42a:	add    r15,r8
    a42d:	mov    r8d,0x1
    a433:	test   r13,r13
    a436:	je     a452 <__ctype_b_loc@plt+0x6ae2>
    a438:	movzx  ecx,WORD PTR [r13+rdi*1+0x2]
    a43e:	mov    r12d,0x1
    a444:	add    ebp,ecx
    a446:	movsxd rbp,ebp
    a449:	imul   rdx,rbp
    a44d:	add    QWORD PTR [rsp+0x18],rdx
    a452:	add    r10,0x4
    a456:	cmp    QWORD PTR [rsp+0x10],r10
    a45b:	jne    a3d0 <__ctype_b_loc@plt+0x6a60>
    a461:	mov    rdi,QWORD PTR [rsp+0x38]
    a466:	test   r8b,r8b
    a469:	je     a472 <__ctype_b_loc@plt+0x6b02>
    a46b:	mov    QWORD PTR [rip+0x1060e],r15        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    a472:	test   r12b,r12b
    a475:	je     a483 <__ctype_b_loc@plt+0x6b13>
    a477:	mov    rbx,QWORD PTR [rsp+0x18]
    a47c:	mov    QWORD PTR [rip+0x105f5],rbx        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    a483:	test   r14d,r14d
    a486:	je     a531 <__ctype_b_loc@plt+0x6bc1>
    a48c:	lea    r10d,[rsi-0x1]
    a490:	lea    ebp,[r14-0x2]
    a494:	sub    r14d,0x1
    a498:	movsxd r12,esi
    a49b:	movsxd r13,r10d
    a49e:	and    r14d,0xfffffffe
    a4a2:	lea    r15,[rax+r12*2]
    a4a6:	mov    ebx,ebp
    a4a8:	movzx  ecx,WORD PTR [rax+r13*2]
    a4ad:	sub    ebx,r14d
    a4b0:	mov    r14d,ebx
    a4b3:	mov    rbx,r12
    a4b6:	test   cx,cx
    a4b9:	jne    a514 <__ctype_b_loc@plt+0x6ba4>
    a4bb:	nop    DWORD PTR [rax+rax*1+0x0]
    a4c0:	mov    r9,r15
    a4c3:	mov    edx,r10d
    a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a4d0:	movzx  ecx,WORD PTR [r9-0x4]
    a4d5:	movsxd r8,edx
    a4d8:	sub    r9,0x2
    a4dc:	sub    edx,0x1
    a4df:	test   cx,cx
    a4e2:	je     a4d0 <__ctype_b_loc@plt+0x6b60>
    a4e4:	sub    ecx,0x1
    a4e7:	movsxd rdx,edx
    a4ea:	mov    WORD PTR [rax+rdx*2],cx
    a4ee:	add    WORD PTR [rax+r8*2],0x2
    a4f4:	movzx  ecx,WORD PTR [rax+r12*2]
    a4f9:	lea    r9d,[rcx-0x1]
    a4fd:	mov    WORD PTR [rax+r12*2],r9w
    a502:	cmp    ebp,r14d
    a505:	je     a550 <__ctype_b_loc@plt+0x6be0>
    a507:	movzx  ecx,WORD PTR [rax+r13*2]
    a50c:	sub    ebp,0x2
    a50f:	test   cx,cx
    a512:	je     a4c0 <__ctype_b_loc@plt+0x6b50>
    a514:	movsxd r8,esi
    a517:	mov    edx,r10d
    a51a:	jmp    a4e4 <__ctype_b_loc@plt+0x6b74>
    a51c:	nop    DWORD PTR [rax+0x0]
    a520:	mov    rdi,QWORD PTR [rsp+0x10]
    a525:	test   r13b,r13b
    a528:	je     a531 <__ctype_b_loc@plt+0x6bc1>
    a52a:	mov    QWORD PTR [rip+0x1054f],r12        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    a531:	mov    esi,DWORD PTR [rsp+0x30]
    a535:	add    rsp,0x48
    a539:	pop    rbx
    a53a:	pop    rbp
    a53b:	pop    r12
    a53d:	pop    r13
    a53f:	pop    r14
    a541:	pop    r15
    a543:	jmp    9fc0 <__ctype_b_loc@plt+0x6650>
    a548:	nop    DWORD PTR [rax+rax*1+0x0]
    a550:	test   esi,esi
    a552:	je     a531 <__ctype_b_loc@plt+0x6bc1>
    a554:	mov    QWORD PTR [rsp+0x10],rdi
    a559:	mov    r12,QWORD PTR [rip+0x10520]        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    a560:	xor    r13d,r13d
    a563:	mov    ecx,0x23d
    a568:	mov    r14d,DWORD PTR [rsp+0x8]
    a56d:	mov    r15,QWORD PTR [rsp+0x20]
    a572:	nop    WORD PTR [rax+rax*1+0x0]
    a578:	movzx  r9d,r9w
    a57c:	test   r9d,r9d
    a57f:	je     a5d4 <__ctype_b_loc@plt+0x6c64>
    a581:	lea    edx,[rcx-0x1]
    a584:	movsxd rdx,edx
    a587:	nop    WORD PTR [rax+rax*1+0x0]
    a590:	movsxd rdi,DWORD PTR [r15+rdx*4]
    a594:	mov    ecx,edx
    a596:	cmp    r14d,edi
    a599:	jl     a5f0 <__ctype_b_loc@plt+0x6c80>
    a59b:	lea    r8,[r11+rdi*4]
    a59f:	movzx  ebp,WORD PTR [r8+0x2]
    a5a4:	mov    rdi,rbp
    a5a7:	cmp    ebp,esi
    a5a9:	je     a5ca <__ctype_b_loc@plt+0x6c5a>
    a5ab:	mov    rbp,rbx
    a5ae:	mov    WORD PTR [r8+0x2],si
    a5b3:	mov    r13d,0x1
    a5b9:	sub    rbp,rdi
    a5bc:	mov    rdi,rbp
    a5bf:	movzx  ebp,WORD PTR [r8]
    a5c3:	imul   rdi,rbp
    a5c7:	add    r12,rdi
    a5ca:	sub    rdx,0x1
    a5ce:	sub    r9d,0x1
    a5d2:	jne    a590 <__ctype_b_loc@plt+0x6c20>
    a5d4:	mov    esi,r10d
    a5d7:	sub    rbx,0x1
    a5db:	test   r10d,r10d
    a5de:	je     a520 <__ctype_b_loc@plt+0x6bb0>
    a5e4:	movzx  r9d,WORD PTR [rax+rbx*2]
    a5e9:	sub    r10d,0x1
    a5ed:	jmp    a578 <__ctype_b_loc@plt+0x6c08>
    a5ef:	nop
    a5f0:	sub    rdx,0x1
    a5f4:	jmp    a590 <__ctype_b_loc@plt+0x6c20>
    a5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a600:	xor    esi,esi
    a602:	jmp    a11f <__ctype_b_loc@plt+0x67af>
    a607:	nop    WORD PTR [rax+rax*1+0x0]
    a610:	mov    DWORD PTR [rsp+0x18],esi
    a614:	lea    rbp,[rip+0x11ae9]        # 1c104 <stderr@@GLIBC_2.2.5+0x20c4>
    a61b:	jmp    a1ec <__ctype_b_loc@plt+0x687c>
    a620:	lea    rax,[rip+0x11ad9]        # 1c100 <stderr@@GLIBC_2.2.5+0x20c0>
    a627:	xor    esi,esi
    a629:	mov    DWORD PTR [rsp+0x30],0xffffffff
    a631:	lea    rbx,[rip+0x11868]        # 1bea0 <stderr@@GLIBC_2.2.5+0x1e60>
    a638:	mov    QWORD PTR [rsp+0x20],rax
    a63d:	jmp    a11f <__ctype_b_loc@plt+0x67af>
    a642:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    a64d:	nop    DWORD PTR [rax]
    a650:	push   r15
    a652:	push   r14
    a654:	push   r13
    a656:	push   r12
    a658:	push   rbp
    a659:	push   rbx
    a65a:	sub    rsp,0x18
    a65e:	movzx  r12d,WORD PTR [rdi+0x2]
    a663:	cmp    r12d,0x1
    a667:	sbb    ecx,ecx
    a669:	add    ecx,0x4
    a66c:	cmp    r12d,0x1
    a670:	sbb    edx,edx
    a672:	and    edx,0x83
    a678:	add    edx,0x7
    a67b:	test   esi,esi
    a67d:	js     a6fa <__ctype_b_loc@plt+0x6d8a>
    a67f:	movsxd rsi,esi
    a682:	lea    r13,[rdi+0x6]
    a686:	xor    r15d,r15d
    a689:	lea    rax,[rdi+rsi*4+0xa]
    a68e:	lea    rbp,[rip+0x1238b]        # 1ca20 <stderr@@GLIBC_2.2.5+0x29e0>
    a695:	mov    esi,0xffffffff
    a69a:	mov    QWORD PTR [rsp+0x8],rax
    a69f:	nop
    a6a0:	lea    ebx,[r15+0x1]
    a6a4:	mov    r14d,r12d
    a6a7:	movzx  r12d,WORD PTR [r13+0x0]
    a6ac:	cmp    ebx,edx
    a6ae:	jge    a710 <__ctype_b_loc@plt+0x6da0>
    a6b0:	cmp    r12d,r14d
    a6b3:	je     a7e0 <__ctype_b_loc@plt+0x6e70>
    a6b9:	cmp    ebx,ecx
    a6bb:	jge    a710 <__ctype_b_loc@plt+0x6da0>
    a6bd:	movsxd r15,r14d
    a6c0:	movzx  esi,WORD PTR [rbp+r15*4+0x2]
    a6c6:	movzx  edi,WORD PTR [rbp+r15*4+0x0]
    a6cc:	call   42b0 <__ctype_b_loc@plt+0x940>
    a6d1:	sub    ebx,0x1
    a6d4:	jne    a6c0 <__ctype_b_loc@plt+0x6d50>
    a6d6:	test   r12d,r12d
    a6d9:	je     a770 <__ctype_b_loc@plt+0x6e00>
    a6df:	mov    esi,r14d
    a6e2:	mov    ecx,0x4
    a6e7:	mov    edx,0x7
    a6ec:	xor    r15d,r15d
    a6ef:	add    r13,0x4
    a6f3:	cmp    QWORD PTR [rsp+0x8],r13
    a6f8:	jne    a6a0 <__ctype_b_loc@plt+0x6d30>
    a6fa:	add    rsp,0x18
    a6fe:	pop    rbx
    a6ff:	pop    rbp
    a700:	pop    r12
    a702:	pop    r13
    a704:	pop    r14
    a706:	pop    r15
    a708:	ret    
    a709:	nop    DWORD PTR [rax+0x0]
    a710:	test   r14d,r14d
    a713:	je     a788 <__ctype_b_loc@plt+0x6e18>
    a715:	cmp    r14d,esi
    a718:	je     a72f <__ctype_b_loc@plt+0x6dbf>
    a71a:	movsxd rdx,r14d
    a71d:	mov    ebx,r15d
    a720:	movzx  esi,WORD PTR [rbp+rdx*4+0x2]
    a725:	movzx  edi,WORD PTR [rbp+rdx*4+0x0]
    a72a:	call   42b0 <__ctype_b_loc@plt+0x940>
    a72f:	movzx  esi,WORD PTR [rip+0x1232c]        # 1ca62 <stderr@@GLIBC_2.2.5+0x2a22>
    a736:	movzx  edi,WORD PTR [rip+0x12323]        # 1ca60 <stderr@@GLIBC_2.2.5+0x2a20>
    a73d:	call   42b0 <__ctype_b_loc@plt+0x940>
    a742:	lea    edi,[rbx-0x3]
    a745:	mov    esi,0x2
    a74a:	call   42b0 <__ctype_b_loc@plt+0x940>
    a74f:	test   r12d,r12d
    a752:	je     a770 <__ctype_b_loc@plt+0x6e00>
    a754:	cmp    r12d,r14d
    a757:	jne    a6df <__ctype_b_loc@plt+0x6d6f>
    a759:	mov    esi,r12d
    a75c:	mov    ecx,0x3
    a761:	mov    edx,0x6
    a766:	xor    r15d,r15d
    a769:	jmp    a6ef <__ctype_b_loc@plt+0x6d7f>
    a76b:	nop    DWORD PTR [rax+rax*1+0x0]
    a770:	mov    esi,r14d
    a773:	mov    ecx,0x3
    a778:	mov    edx,0x8a
    a77d:	xor    r15d,r15d
    a780:	jmp    a6ef <__ctype_b_loc@plt+0x6d7f>
    a785:	nop    DWORD PTR [rax]
    a788:	cmp    ebx,0xa
    a78b:	jg     a7b0 <__ctype_b_loc@plt+0x6e40>
    a78d:	movzx  esi,WORD PTR [rip+0x122d2]        # 1ca66 <stderr@@GLIBC_2.2.5+0x2a26>
    a794:	movzx  edi,WORD PTR [rip+0x122c9]        # 1ca64 <stderr@@GLIBC_2.2.5+0x2a24>
    a79b:	call   42b0 <__ctype_b_loc@plt+0x940>
    a7a0:	lea    edi,[r15-0x2]
    a7a4:	mov    esi,0x3
    a7a9:	call   42b0 <__ctype_b_loc@plt+0x940>
    a7ae:	jmp    a74f <__ctype_b_loc@plt+0x6ddf>
    a7b0:	movzx  esi,WORD PTR [rip+0x122b3]        # 1ca6a <stderr@@GLIBC_2.2.5+0x2a2a>
    a7b7:	movzx  edi,WORD PTR [rip+0x122aa]        # 1ca68 <stderr@@GLIBC_2.2.5+0x2a28>
    a7be:	call   42b0 <__ctype_b_loc@plt+0x940>
    a7c3:	lea    edi,[r15-0xa]
    a7c7:	mov    esi,0x7
    a7cc:	call   42b0 <__ctype_b_loc@plt+0x940>
    a7d1:	jmp    a74f <__ctype_b_loc@plt+0x6ddf>
    a7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a7e0:	mov    r15d,ebx
    a7e3:	jmp    a6ef <__ctype_b_loc@plt+0x6d7f>
    a7e8:	nop    DWORD PTR [rax+rax*1+0x0]
    a7f0:	push   r15
    a7f2:	push   r14
    a7f4:	push   r13
    a7f6:	mov    r13,rdi
    a7f9:	push   r12
    a7fb:	push   rbp
    a7fc:	push   rbx
    a7fd:	sub    rsp,0x28
    a801:	mov    eax,DWORD PTR [rip+0x1028d]        # 1aa94 <stderr@@GLIBC_2.2.5+0xa54>
    a807:	mov    QWORD PTR [rsp+0x18],rsi
    a80c:	test   eax,eax
    a80e:	je     a942 <__ctype_b_loc@plt+0x6fd2>
    a814:	xor    ebx,ebx
    a816:	xor    r14d,r14d
    a819:	xor    r12d,r12d
    a81c:	xor    eax,eax
    a81e:	lea    r15,[rip+0x997db]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    a825:	jmp    a851 <__ctype_b_loc@plt+0x6ee1>
    a827:	nop    WORD PTR [rax+rax*1+0x0]
    a830:	lea    rax,[r13+rax*4+0x0]
    a835:	movzx  esi,WORD PTR [rax+0x2]
    a839:	movzx  edi,WORD PTR [rax]
    a83c:	call   42b0 <__ctype_b_loc@plt+0x940>
    a841:	shr    bl,1
    a843:	cmp    DWORD PTR [rip+0x1024b],ebp        # 1aa94 <stderr@@GLIBC_2.2.5+0xa54>
    a849:	jbe    a942 <__ctype_b_loc@plt+0x6fd2>
    a84f:	mov    eax,ebp
    a851:	test   al,0x7
    a853:	jne    a867 <__ctype_b_loc@plt+0x6ef7>
    a855:	mov    edx,r14d
    a858:	lea    rbx,[rip+0x10241]        # 1aaa0 <stderr@@GLIBC_2.2.5+0xa60>
    a85f:	add    r14d,0x1
    a863:	movzx  ebx,BYTE PTR [rbx+rdx*1]
    a867:	lea    ebp,[rax+0x1]
    a86a:	movzx  eax,BYTE PTR [r15+rax*1]
    a86f:	test   bl,0x1
    a872:	je     a830 <__ctype_b_loc@plt+0x6ec0>
    a874:	movzx  ecx,al
    a877:	mov    DWORD PTR [rsp+0x8],ecx
    a87b:	lea    rcx,[rip+0x1151e]        # 1bda0 <stderr@@GLIBC_2.2.5+0x1d60>
    a882:	movzx  eax,BYTE PTR [rcx+rax*1]
    a886:	lea    edx,[rax+0x101]
    a88c:	mov    DWORD PTR [rsp+0x10],eax
    a890:	lea    rdx,[r13+rdx*4+0x0]
    a895:	movzx  esi,WORD PTR [rdx+0x2]
    a899:	movzx  edi,WORD PTR [rdx]
    a89c:	call   42b0 <__ctype_b_loc@plt+0x940>
    a8a1:	mov    eax,DWORD PTR [rsp+0x10]
    a8a5:	lea    rcx,[rip+0xda14]        # 182c0 <__ctype_b_loc@plt+0x14950>
    a8ac:	mov    esi,DWORD PTR [rcx+rax*4]
    a8af:	test   esi,esi
    a8b1:	jne    a988 <__ctype_b_loc@plt+0x7018>
    a8b7:	lea    eax,[r12+0x1]
    a8bc:	mov    DWORD PTR [rsp+0x10],eax
    a8c0:	lea    rax,[rip+0x33b59]        # 3e420 <stderr@@GLIBC_2.2.5+0x243e0>
    a8c7:	movzx  edx,WORD PTR [rax+r12*2]
    a8cc:	cmp    edx,0xff
    a8d2:	ja     a968 <__ctype_b_loc@plt+0x6ff8>
    a8d8:	mov    eax,edx
    a8da:	lea    rcx,[rip+0x112bf]        # 1bba0 <stderr@@GLIBC_2.2.5+0x1b60>
    a8e1:	movzx  eax,BYTE PTR [rcx+rax*1]
    a8e5:	mov    rdi,QWORD PTR [rsp+0x18]
    a8ea:	mov    DWORD PTR [rsp+0x14],edx
    a8ee:	mov    QWORD PTR [rsp+0x8],rax
    a8f3:	lea    rcx,[rdi+rax*4]
    a8f7:	movzx  esi,WORD PTR [rcx+0x2]
    a8fb:	movzx  edi,WORD PTR [rcx]
    a8fe:	call   42b0 <__ctype_b_loc@plt+0x940>
    a903:	mov    rax,QWORD PTR [rsp+0x8]
    a908:	lea    rcx,[rip+0xd931]        # 18240 <__ctype_b_loc@plt+0x148d0>
    a90f:	mov    r12d,DWORD PTR [rsp+0x10]
    a914:	mov    edx,DWORD PTR [rsp+0x14]
    a918:	mov    esi,DWORD PTR [rcx+rax*4]
    a91b:	test   esi,esi
    a91d:	je     a841 <__ctype_b_loc@plt+0x6ed1>
    a923:	lea    rcx,[rip+0x11176]        # 1baa0 <stderr@@GLIBC_2.2.5+0x1a60>
    a92a:	shr    bl,1
    a92c:	sub    edx,DWORD PTR [rcx+rax*4]
    a92f:	mov    edi,edx
    a931:	call   42b0 <__ctype_b_loc@plt+0x940>
    a936:	cmp    DWORD PTR [rip+0x10158],ebp        # 1aa94 <stderr@@GLIBC_2.2.5+0xa54>
    a93c:	ja     a84f <__ctype_b_loc@plt+0x6edf>
    a942:	movzx  esi,WORD PTR [r13+0x402]
    a94a:	movzx  edi,WORD PTR [r13+0x400]
    a952:	add    rsp,0x28
    a956:	pop    rbx
    a957:	pop    rbp
    a958:	pop    r12
    a95a:	pop    r13
    a95c:	pop    r14
    a95e:	pop    r15
    a960:	jmp    42b0 <__ctype_b_loc@plt+0x940>
    a965:	nop    DWORD PTR [rax]
    a968:	mov    eax,edx
    a96a:	lea    rcx,[rip+0x1122f]        # 1bba0 <stderr@@GLIBC_2.2.5+0x1b60>
    a971:	shr    eax,0x7
    a974:	add    eax,0x100
    a979:	movzx  eax,BYTE PTR [rcx+rax*1]
    a97d:	jmp    a8e5 <__ctype_b_loc@plt+0x6f75>
    a982:	nop    WORD PTR [rax+rax*1+0x0]
    a988:	lea    rdx,[rip+0x11191]        # 1bb20 <stderr@@GLIBC_2.2.5+0x1ae0>
    a98f:	mov    edi,DWORD PTR [rsp+0x8]
    a993:	sub    edi,DWORD PTR [rdx+rax*4]
    a996:	call   42b0 <__ctype_b_loc@plt+0x940>
    a99b:	jmp    a8b7 <__ctype_b_loc@plt+0x6f47>
    a9a0:	endbr64 
    a9a4:	cmp    WORD PTR [rip+0x12116],0x0        # 1cac2 <stderr@@GLIBC_2.2.5+0x2a82>
    a9ac:	mov    QWORD PTR [rip+0x100ad],rdi        # 1aa60 <stderr@@GLIBC_2.2.5+0xa20>
    a9b3:	mov    QWORD PTR [rip+0x100aa],0x0        # 1aa68 <stderr@@GLIBC_2.2.5+0xa28>
    a9be:	mov    QWORD PTR [rip+0x100a7],0x0        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    a9c9:	jne    ac8e <__ctype_b_loc@plt+0x731e>
    a9cf:	push   r12
    a9d1:	xor    esi,esi
    a9d3:	xor    edi,edi
    a9d5:	lea    r11,[rip+0xd8e4]        # 182c0 <__ctype_b_loc@plt+0x14950>
    a9dc:	push   rbp
    a9dd:	mov    r10d,0x1
    a9e3:	lea    rbp,[rip+0x11136]        # 1bb20 <stderr@@GLIBC_2.2.5+0x1ae0>
    a9ea:	push   rbx
    a9eb:	lea    rbx,[rip+0x113ae]        # 1bda0 <stderr@@GLIBC_2.2.5+0x1d60>
    a9f2:	lea    r12,[rbx+0x1]
    a9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    aa00:	mov    ecx,DWORD PTR [r11+rsi*4]
    aa04:	mov    r8d,r10d
    aa07:	mov    DWORD PTR [rbp+rsi*4+0x0],edi
    aa0b:	shl    r8d,cl
    aa0e:	test   r8d,r8d
    aa11:	jle    aa3e <__ctype_b_loc@plt+0x70ce>
    aa13:	movsxd rdx,edi
    aa16:	lea    r9d,[r8-0x1]
    aa1a:	mov    ecx,esi
    aa1c:	lea    rax,[rbx+rdx*1]
    aa20:	add    rdx,r12
    aa23:	add    rdx,r9
    aa26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    aa30:	mov    BYTE PTR [rax],cl
    aa32:	add    rax,0x1
    aa36:	cmp    rax,rdx
    aa39:	jne    aa30 <__ctype_b_loc@plt+0x70c0>
    aa3b:	add    edi,r8d
    aa3e:	add    rsi,0x1
    aa42:	cmp    rsi,0x1c
    aa46:	jne    aa00 <__ctype_b_loc@plt+0x7090>
    aa48:	lea    eax,[rdi-0x1]
    aa4b:	lea    r12,[rip+0x1114e]        # 1bba0 <stderr@@GLIBC_2.2.5+0x1b60>
    aa52:	xor    esi,esi
    aa54:	xor    edi,edi
    aa56:	cdqe   
    aa58:	lea    r9,[rip+0x11041]        # 1baa0 <stderr@@GLIBC_2.2.5+0x1a60>
    aa5f:	lea    rbp,[r12+0x1]
    aa64:	mov    BYTE PTR [rbx+rax*1],0x1c
    aa68:	lea    r8,[rip+0xd7d1]        # 18240 <__ctype_b_loc@plt+0x148d0>
    aa6f:	mov    ebx,0x1
    aa74:	nop    DWORD PTR [rax+0x0]
    aa78:	mov    ecx,DWORD PTR [r8+rsi*4]
    aa7c:	mov    r10d,ebx
    aa7f:	mov    DWORD PTR [r9+rsi*4],edi
    aa83:	shl    r10d,cl
    aa86:	test   r10d,r10d
    aa89:	jle    aaae <__ctype_b_loc@plt+0x713e>
    aa8b:	movsxd rdx,edi
    aa8e:	lea    r11d,[r10-0x1]
    aa92:	mov    ecx,esi
    aa94:	lea    rax,[rdx+r12*1]
    aa98:	add    rdx,rbp
    aa9b:	add    rdx,r11
    aa9e:	xchg   ax,ax
    aaa0:	mov    BYTE PTR [rax],cl
    aaa2:	add    rax,0x1
    aaa6:	cmp    rax,rdx
    aaa9:	jne    aaa0 <__ctype_b_loc@plt+0x7130>
    aaab:	add    edi,r10d
    aaae:	add    rsi,0x1
    aab2:	cmp    rsi,0x10
    aab6:	jne    aa78 <__ctype_b_loc@plt+0x7108>
    aab8:	lea    rbp,[rip+0x110e1]        # 1bba0 <stderr@@GLIBC_2.2.5+0x1b60>
    aabf:	sar    edi,0x7
    aac2:	mov    r11d,0x1
    aac8:	lea    rbx,[rbp+0x1]
    aacc:	nop    DWORD PTR [rax+0x0]
    aad0:	mov    eax,edi
    aad2:	mov    r10d,r11d
    aad5:	shl    eax,0x7
    aad8:	mov    DWORD PTR [r9+rsi*4],eax
    aadc:	mov    eax,DWORD PTR [r8+rsi*4]
    aae0:	lea    ecx,[rax-0x7]
    aae3:	shl    r10d,cl
    aae6:	test   r10d,r10d
    aae9:	jle    ab12 <__ctype_b_loc@plt+0x71a2>
    aaeb:	movsxd rdx,edi
    aaee:	lea    r12d,[r10-0x1]
    aaf2:	mov    ecx,esi
    aaf4:	lea    rax,[rdx+rbp*1]
    aaf8:	add    rdx,rbx
    aafb:	add    rdx,r12
    aafe:	xchg   ax,ax
    ab00:	mov    BYTE PTR [rax+0x100],cl
    ab06:	add    rax,0x1
    ab0a:	cmp    rax,rdx
    ab0d:	jne    ab00 <__ctype_b_loc@plt+0x7190>
    ab0f:	add    edi,r10d
    ab12:	add    rsi,0x1
    ab16:	cmp    rsi,0x1e
    ab1a:	jne    aad0 <__ctype_b_loc@plt+0x7160>
    ab1c:	lea    rax,[rip+0x11edd]        # 1ca00 <stderr@@GLIBC_2.2.5+0x29c0>
    ab23:	lea    rdx,[rax+0x20]
    ab27:	nop    WORD PTR [rax+rax*1+0x0]
    ab30:	xor    edi,edi
    ab32:	add    rax,0x2
    ab36:	mov    WORD PTR [rax-0x2],di
    ab3a:	cmp    rax,rdx
    ab3d:	jne    ab30 <__ctype_b_loc@plt+0x71c0>
    ab3f:	lea    rax,[rip+0x11ffc]        # 1cb42 <stderr@@GLIBC_2.2.5+0x2b02>
    ab46:	movzx  ecx,WORD PTR [rip+0x11ec3]        # 1ca10 <stderr@@GLIBC_2.2.5+0x29d0>
    ab4d:	lea    rdx,[rax+0x240]
    ab54:	nop    DWORD PTR [rax+0x0]
    ab58:	mov    esi,0x8
    ab5d:	add    rax,0x4
    ab61:	mov    WORD PTR [rax-0x4],si
    ab65:	cmp    rax,rdx
    ab68:	jne    ab58 <__ctype_b_loc@plt+0x71e8>
    ab6a:	lea    rax,[rip+0x12211]        # 1cd82 <stderr@@GLIBC_2.2.5+0x2d42>
    ab71:	movzx  esi,WORD PTR [rip+0x11e9a]        # 1ca12 <stderr@@GLIBC_2.2.5+0x29d2>
    ab78:	lea    rdx,[rax+0x1c0]
    ab7f:	nop
    ab80:	mov    r12d,0x9
    ab86:	add    rax,0x4
    ab8a:	mov    WORD PTR [rax-0x4],r12w
    ab8f:	cmp    rdx,rax
    ab92:	jne    ab80 <__ctype_b_loc@plt+0x7210>
    ab94:	lea    eax,[rsi+0x70]
    ab97:	movzx  esi,WORD PTR [rip+0x11e70]        # 1ca0e <stderr@@GLIBC_2.2.5+0x29ce>
    ab9e:	mov    WORD PTR [rip+0x11e6d],ax        # 1ca12 <stderr@@GLIBC_2.2.5+0x29d2>
    aba5:	lea    rax,[rip+0x12396]        # 1cf42 <stderr@@GLIBC_2.2.5+0x2f02>
    abac:	lea    rdx,[rax+0x60]
    abb0:	mov    ebp,0x7
    abb5:	add    rax,0x4
    abb9:	mov    WORD PTR [rax-0x4],bp
    abbd:	cmp    rdx,rax
    abc0:	jne    abb0 <__ctype_b_loc@plt+0x7240>
    abc2:	lea    eax,[rsi+0x18]
    abc5:	mov    edi,0x8
    abca:	mov    esi,0x8
    abcf:	mov    edx,0x8
    abd4:	mov    WORD PTR [rip+0x11e33],ax        # 1ca0e <stderr@@GLIBC_2.2.5+0x29ce>
    abdb:	mov    r8d,0x8
    abe1:	mov    r9d,0x8
    abe7:	mov    r10d,0x8
    abed:	mov    WORD PTR [rip+0x123b2],si        # 1cfa6 <stderr@@GLIBC_2.2.5+0x2f66>
    abf4:	mov    r11d,0x8
    abfa:	mov    ebx,0x8
    abff:	lea    eax,[rcx+0x98]
    ac05:	mov    WORD PTR [rip+0x1239e],di        # 1cfaa <stderr@@GLIBC_2.2.5+0x2f6a>
    ac0c:	mov    esi,0x11f
    ac11:	lea    rdi,[rip+0x11f28]        # 1cb40 <stderr@@GLIBC_2.2.5+0x2b00>
    ac18:	lea    r12,[rip+0x11ea3]        # 1cac2 <stderr@@GLIBC_2.2.5+0x2a82>
    ac1f:	mov    WORD PTR [rip+0x12398],bx        # 1cfbe <stderr@@GLIBC_2.2.5+0x2f7e>
    ac26:	lea    rbp,[r12-0x2]
    ac2b:	xor    ebx,ebx
    ac2d:	mov    WORD PTR [rip+0x1236e],dx        # 1cfa2 <stderr@@GLIBC_2.2.5+0x2f62>
    ac34:	mov    WORD PTR [rip+0x12372],r8w        # 1cfae <stderr@@GLIBC_2.2.5+0x2f6e>
    ac3c:	mov    WORD PTR [rip+0x1236e],r9w        # 1cfb2 <stderr@@GLIBC_2.2.5+0x2f72>
    ac44:	mov    WORD PTR [rip+0x1236a],r10w        # 1cfb6 <stderr@@GLIBC_2.2.5+0x2f76>
    ac4c:	mov    WORD PTR [rip+0x12366],r11w        # 1cfba <stderr@@GLIBC_2.2.5+0x2f7a>
    ac54:	mov    WORD PTR [rip+0x11db5],ax        # 1ca10 <stderr@@GLIBC_2.2.5+0x29d0>
    ac5b:	call   9fc0 <__ctype_b_loc@plt+0x6650>
    ac60:	mov    eax,0x5
    ac65:	mov    edi,ebx
    ac67:	mov    esi,0x5
    ac6c:	mov    WORD PTR [r12+rbx*4],ax
    ac71:	call   43c0 <__ctype_b_loc@plt+0xa50>
    ac76:	mov    WORD PTR [rbp+rbx*4+0x0],ax
    ac7b:	add    rbx,0x1
    ac7f:	cmp    rbx,0x1e
    ac83:	jne    ac60 <__ctype_b_loc@plt+0x72f0>
    ac85:	pop    rbx
    ac86:	pop    rbp
    ac87:	pop    r12
    ac89:	jmp    9d20 <__ctype_b_loc@plt+0x63b0>
    ac8e:	ret    
    ac8f:	nop
    ac90:	endbr64 
    ac94:	push   r15
    ac96:	push   r14
    ac98:	mov    r14,rsi
    ac9b:	push   r13
    ac9d:	push   r12
    ac9f:	push   rbp
    aca0:	push   rbx
    aca1:	mov    ebx,ecx
    aca3:	sub    rsp,0x18
    aca7:	mov    rsi,QWORD PTR [rip+0xfdb2]        # 1aa60 <stderr@@GLIBC_2.2.5+0xa20>
    acae:	mov    eax,DWORD PTR [rip+0xfdd8]        # 1aa8c <stderr@@GLIBC_2.2.5+0xa4c>
    acb4:	movzx  ecx,BYTE PTR [rip+0xfdce]        # 1aa89 <stderr@@GLIBC_2.2.5+0xa49>
    acbb:	mov    DWORD PTR [rsp+0xc],edx
    acbf:	lea    rdx,[rip+0xfdda]        # 1aaa0 <stderr@@GLIBC_2.2.5+0xa60>
    acc6:	cmp    WORD PTR [rsi],0xffff
    acca:	mov    QWORD PTR [rsp],rdi
    acce:	mov    BYTE PTR [rdx+rax*1],cl
    acd1:	je     af60 <__ctype_b_loc@plt+0x75f0>
    acd7:	lea    rdi,[rip+0xd6e2]        # 183c0 <__ctype_b_loc@plt+0x14a50>
    acde:	lea    rbp,[rip+0x11d3b]        # 1ca20 <stderr@@GLIBC_2.2.5+0x29e0>
    ace5:	call   a060 <__ctype_b_loc@plt+0x66f0>
    acea:	lea    rdi,[rip+0xd68f]        # 18380 <__ctype_b_loc@plt+0x14a10>
    acf1:	call   a060 <__ctype_b_loc@plt+0x66f0>
    acf6:	mov    esi,DWORD PTR [rip+0xd6e8]        # 183e4 <__ctype_b_loc@plt+0x14a74>
    acfc:	lea    rdi,[rip+0x123bd]        # 1d0c0 <stderr@@GLIBC_2.2.5+0x3080>
    ad03:	call   9eb0 <__ctype_b_loc@plt+0x6540>
    ad08:	mov    esi,DWORD PTR [rip+0xd696]        # 183a4 <__ctype_b_loc@plt+0x14a34>
    ad0e:	lea    rdi,[rip+0x122ab]        # 1cfc0 <stderr@@GLIBC_2.2.5+0x2f80>
    ad15:	call   9eb0 <__ctype_b_loc@plt+0x6540>
    ad1a:	lea    rdi,[rip+0xd61f]        # 18340 <__ctype_b_loc@plt+0x149d0>
    ad21:	call   a060 <__ctype_b_loc@plt+0x66f0>
    ad26:	mov    eax,0x12
    ad2b:	mov    ecx,0xf
    ad30:	lea    rsi,[rip+0x86e9]        # 13420 <__ctype_b_loc@plt+0xfab0>
    ad37:	jmp    ad44 <__ctype_b_loc@plt+0x73d4>
    ad39:	nop    DWORD PTR [rax+0x0]
    ad40:	movzx  ecx,BYTE PTR [rsi+rax*1]
    ad44:	cmp    WORD PTR [rbp+rcx*4+0x2],0x0
    ad4a:	movsxd r13,eax
    ad4d:	jne    af50 <__ctype_b_loc@plt+0x75e0>
    ad53:	sub    rax,0x1
    ad57:	cmp    rax,0x2
    ad5b:	jne    ad40 <__ctype_b_loc@plt+0x73d0>
    ad5d:	mov    eax,0x17
    ad62:	mov    r13d,0x2
    ad68:	mov    rdx,QWORD PTR [rip+0xfd09]        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    ad6f:	add    rax,QWORD PTR [rip+0xfd0a]        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    ad76:	lea    r15,[r14+0x4]
    ad7a:	mov    QWORD PTR [rip+0xfcff],rax        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    ad81:	add    rax,0xa
    ad85:	lea    rcx,[rdx+0xa]
    ad89:	shr    rax,0x3
    ad8d:	add    QWORD PTR [rip+0xfcd4],r14        # 1aa68 <stderr@@GLIBC_2.2.5+0xa28>
    ad94:	shr    rcx,0x3
    ad98:	cmp    rax,rcx
    ad9b:	mov    rsi,rcx
    ad9e:	cmovbe rsi,rax
    ada2:	cmp    r15,rsi
    ada5:	ja     adb4 <__ctype_b_loc@plt+0x7444>
    ada7:	mov    r12,QWORD PTR [rsp]
    adab:	test   r12,r12
    adae:	jne    aeb0 <__ctype_b_loc@plt+0x7540>
    adb4:	cmp    rax,rcx
    adb7:	jae    af10 <__ctype_b_loc@plt+0x75a0>
    adbd:	lea    edi,[rbx+0x4]
    adc0:	mov    esi,0x3
    adc5:	lea    r12,[rip+0x8654]        # 13420 <__ctype_b_loc@plt+0xfab0>
    adcc:	call   42b0 <__ctype_b_loc@plt+0x940>
    add1:	mov    r15d,DWORD PTR [rip+0xd60c]        # 183e4 <__ctype_b_loc@plt+0x14a74>
    add8:	mov    esi,0x5
    addd:	mov    r14d,DWORD PTR [rip+0xd5c0]        # 183a4 <__ctype_b_loc@plt+0x14a34>
    ade4:	lea    edi,[r15-0x100]
    adeb:	call   42b0 <__ctype_b_loc@plt+0x940>
    adf0:	mov    esi,0x5
    adf5:	mov    edi,r14d
    adf8:	call   42b0 <__ctype_b_loc@plt+0x940>
    adfd:	lea    edi,[r13-0x3]
    ae01:	mov    esi,0x4
    ae06:	add    r13,r12
    ae09:	call   42b0 <__ctype_b_loc@plt+0x940>
    ae0e:	mov    ecx,0x10
    ae13:	jmp    ae22 <__ctype_b_loc@plt+0x74b2>
    ae15:	nop    DWORD PTR [rax]
    ae18:	movzx  ecx,BYTE PTR [r12+0x1]
    ae1e:	add    r12,0x1
    ae22:	movzx  edi,WORD PTR [rbp+rcx*4+0x2]
    ae27:	mov    esi,0x3
    ae2c:	call   42b0 <__ctype_b_loc@plt+0x940>
    ae31:	cmp    r13,r12
    ae34:	jne    ae18 <__ctype_b_loc@plt+0x74a8>
    ae36:	mov    esi,r15d
    ae39:	lea    rdi,[rip+0x12280]        # 1d0c0 <stderr@@GLIBC_2.2.5+0x3080>
    ae40:	call   a650 <__ctype_b_loc@plt+0x6ce0>
    ae45:	mov    esi,r14d
    ae48:	lea    rdi,[rip+0x12171]        # 1cfc0 <stderr@@GLIBC_2.2.5+0x2f80>
    ae4f:	call   a650 <__ctype_b_loc@plt+0x6ce0>
    ae54:	lea    rsi,[rip+0x12165]        # 1cfc0 <stderr@@GLIBC_2.2.5+0x2f80>
    ae5b:	lea    rdi,[rip+0x1225e]        # 1d0c0 <stderr@@GLIBC_2.2.5+0x3080>
    ae62:	call   a7f0 <__ctype_b_loc@plt+0x6e80>
    ae67:	mov    rax,QWORD PTR [rip+0xfc12]        # 1aa80 <stderr@@GLIBC_2.2.5+0xa40>
    ae6e:	add    rax,0x3
    ae72:	add    QWORD PTR [rip+0xfbf7],rax        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    ae79:	call   9d20 <__ctype_b_loc@plt+0x63b0>
    ae7e:	test   ebx,ebx
    ae80:	jne    aeef <__ctype_b_loc@plt+0x757f>
    ae82:	mov    edx,DWORD PTR [rsp+0xc]
    ae86:	mov    rax,QWORD PTR [rip+0xfbe3]        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    ae8d:	test   edx,edx
    ae8f:	je     ae99 <__ctype_b_loc@plt+0x7529>
    ae91:	test   al,0x7
    ae93:	jne    afd8 <__ctype_b_loc@plt+0x7668>
    ae99:	add    rsp,0x18
    ae9d:	sar    rax,0x3
    aea1:	pop    rbx
    aea2:	pop    rbp
    aea3:	pop    r12
    aea5:	pop    r13
    aea7:	pop    r14
    aea9:	pop    r15
    aeab:	ret    
    aeac:	nop    DWORD PTR [rax+0x0]
    aeb0:	mov    esi,0x3
    aeb5:	mov    edi,ebx
    aeb7:	call   42b0 <__ctype_b_loc@plt+0x940>
    aebc:	mov    edx,0x1
    aec1:	mov    esi,r14d
    aec4:	mov    rdi,r12
    aec7:	mov    rax,QWORD PTR [rip+0xfba2]        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    aece:	add    rax,0xa
    aed2:	and    rax,0xfffffffffffffff8
    aed6:	lea    rax,[rax+r15*8]
    aeda:	mov    QWORD PTR [rip+0xfb8f],rax        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    aee1:	call   44e0 <__ctype_b_loc@plt+0xb70>
    aee6:	call   9d20 <__ctype_b_loc@plt+0x63b0>
    aeeb:	test   ebx,ebx
    aeed:	je     ae82 <__ctype_b_loc@plt+0x7512>
    aeef:	call   43f0 <__ctype_b_loc@plt+0xa80>
    aef4:	mov    rax,QWORD PTR [rip+0xfb75]        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    aefb:	add    rax,0x7
    aeff:	mov    QWORD PTR [rip+0xfb6a],rax        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    af06:	jmp    ae99 <__ctype_b_loc@plt+0x7529>
    af08:	nop    DWORD PTR [rax+rax*1+0x0]
    af10:	lea    edi,[rbx+0x2]
    af13:	mov    esi,0x3
    af18:	call   42b0 <__ctype_b_loc@plt+0x940>
    af1d:	lea    rsi,[rip+0x11b9c]        # 1cac0 <stderr@@GLIBC_2.2.5+0x2a80>
    af24:	lea    rdi,[rip+0x11c15]        # 1cb40 <stderr@@GLIBC_2.2.5+0x2b00>
    af2b:	call   a7f0 <__ctype_b_loc@plt+0x6e80>
    af30:	mov    rax,QWORD PTR [rip+0xfb41]        # 1aa78 <stderr@@GLIBC_2.2.5+0xa38>
    af37:	add    rax,0x3
    af3b:	add    QWORD PTR [rip+0xfb2e],rax        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    af42:	jmp    ae79 <__ctype_b_loc@plt+0x7509>
    af47:	nop    WORD PTR [rax+rax*1+0x0]
    af50:	lea    eax,[r13+r13*2+0x11]
    af55:	cdqe   
    af57:	jmp    ad68 <__ctype_b_loc@plt+0x73f8>
    af5c:	nop    DWORD PTR [rax+0x0]
    af60:	lea    rdi,[rip+0x12175]        # 1d0dc <stderr@@GLIBC_2.2.5+0x309c>
    af67:	xor    eax,eax
    af69:	lea    rdx,[rdi-0x1c]
    af6d:	nop    DWORD PTR [rax]
    af70:	movzx  ecx,WORD PTR [rdx]
    af73:	add    rdx,0x4
    af77:	add    eax,ecx
    af79:	cmp    rdi,rdx
    af7c:	jne    af70 <__ctype_b_loc@plt+0x7600>
    af7e:	lea    rdx,[rip+0x12157]        # 1d0dc <stderr@@GLIBC_2.2.5+0x309c>
    af85:	xor    ecx,ecx
    af87:	lea    r8,[rdx+0x1e4]
    af8e:	xchg   ax,ax
    af90:	movzx  edi,WORD PTR [rdx]
    af93:	add    rdx,0x4
    af97:	add    ecx,edi
    af99:	cmp    r8,rdx
    af9c:	jne    af90 <__ctype_b_loc@plt+0x7620>
    af9e:	lea    rdx,[rip+0x1231b]        # 1d2c0 <stderr@@GLIBC_2.2.5+0x3280>
    afa5:	lea    r8,[rdx+0x200]
    afac:	nop    DWORD PTR [rax+0x0]
    afb0:	movzx  edi,WORD PTR [rdx]
    afb3:	add    rdx,0x4
    afb7:	add    eax,edi
    afb9:	cmp    r8,rdx
    afbc:	jne    afb0 <__ctype_b_loc@plt+0x7640>
    afbe:	shr    ecx,0x2
    afc1:	cmp    eax,ecx
    afc3:	setbe  al
    afc6:	movzx  eax,al
    afc9:	mov    WORD PTR [rsi],ax
    afcc:	jmp    acd7 <__ctype_b_loc@plt+0x7367>
    afd1:	nop    DWORD PTR [rax+0x0]
    afd8:	mov    esi,0x3
    afdd:	xor    edi,edi
    afdf:	call   42b0 <__ctype_b_loc@plt+0x940>
    afe4:	mov    rdi,QWORD PTR [rsp]
    afe8:	mov    edx,0x1
    afed:	xor    esi,esi
    afef:	mov    rax,QWORD PTR [rip+0xfa7a]        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    aff6:	add    rax,0xa
    affa:	and    rax,0xfffffffffffffff8
    affe:	mov    QWORD PTR [rip+0xfa6b],rax        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    b005:	call   44e0 <__ctype_b_loc@plt+0xb70>
    b00a:	mov    rax,QWORD PTR [rip+0xfa5f]        # 1aa70 <stderr@@GLIBC_2.2.5+0xa30>
    b011:	jmp    ae99 <__ctype_b_loc@plt+0x7529>
    b016:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b020:	endbr64 
    b024:	mov    eax,DWORD PTR [rip+0xfa6a]        # 1aa94 <stderr@@GLIBC_2.2.5+0xa54>
    b02a:	lea    rdx,[rip+0x98fcf]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    b031:	lea    r9d,[rax+0x1]
    b035:	mov    BYTE PTR [rdx+rax*1],sil
    b039:	movzx  eax,BYTE PTR [rip+0xfa48]        # 1aa88 <stderr@@GLIBC_2.2.5+0xa48>
    b040:	mov    DWORD PTR [rip+0xfa4d],r9d        # 1aa94 <stderr@@GLIBC_2.2.5+0xa54>
    b047:	test   edi,edi
    b049:	jne    b130 <__ctype_b_loc@plt+0x77c0>
    b04f:	lea    rdx,[rip+0x1206a]        # 1d0c0 <stderr@@GLIBC_2.2.5+0x3080>
    b056:	movsxd rsi,esi
    b059:	add    WORD PTR [rdx+rsi*4],0x1
    b05e:	add    eax,eax
    b060:	mov    BYTE PTR [rip+0xfa22],al        # 1aa88 <stderr@@GLIBC_2.2.5+0xa48>
    b066:	test   r9b,0x7
    b06a:	jne    b09a <__ctype_b_loc@plt+0x772a>
    b06c:	mov    eax,DWORD PTR [rip+0xfa1a]        # 1aa8c <stderr@@GLIBC_2.2.5+0xa4c>
    b072:	movzx  ecx,BYTE PTR [rip+0xfa10]        # 1aa89 <stderr@@GLIBC_2.2.5+0xa49>
    b079:	mov    BYTE PTR [rip+0xfa08],0x1        # 1aa88 <stderr@@GLIBC_2.2.5+0xa48>
    b080:	mov    BYTE PTR [rip+0xfa02],0x0        # 1aa89 <stderr@@GLIBC_2.2.5+0xa49>
    b087:	lea    edx,[rax+0x1]
    b08a:	mov    DWORD PTR [rip+0xf9fc],edx        # 1aa8c <stderr@@GLIBC_2.2.5+0xa4c>
    b090:	lea    rdx,[rip+0xfa09]        # 1aaa0 <stderr@@GLIBC_2.2.5+0xa60>
    b097:	mov    BYTE PTR [rdx+rax*1],cl
    b09a:	cmp    DWORD PTR [rip+0xcf7b],0x2        # 1801c <__ctype_b_loc@plt+0x146ac>
    b0a1:	jle    b110 <__ctype_b_loc@plt+0x77a0>
    b0a3:	test   r9d,0xfff
    b0aa:	jne    b110 <__ctype_b_loc@plt+0x77a0>
    b0ac:	mov    ecx,r9d
    b0af:	mov    r10d,DWORD PTR [rip+0x12e42]        # 1def8 <stderr@@GLIBC_2.2.5+0x3eb8>
    b0b6:	mov    r11,QWORD PTR [rip+0x12e43]        # 1df00 <stderr@@GLIBC_2.2.5+0x3ec0>
    b0bd:	xor    edx,edx
    b0bf:	shl    rcx,0x3
    b0c3:	lea    rdi,[rip+0x11ef6]        # 1cfc0 <stderr@@GLIBC_2.2.5+0x2f80>
    b0ca:	lea    r8,[rip+0xd16f]        # 18240 <__ctype_b_loc@plt+0x148d0>
    b0d1:	nop    DWORD PTR [rax+0x0]
    b0d8:	movsxd rax,DWORD PTR [r8+rdx*1]
    b0dc:	movzx  esi,WORD PTR [rdi+rdx*1]
    b0e0:	add    rdx,0x4
    b0e4:	add    rax,0x5
    b0e8:	imul   rax,rsi
    b0ec:	add    rcx,rax
    b0ef:	cmp    rdx,0x78
    b0f3:	jne    b0d8 <__ctype_b_loc@plt+0x7768>
    b0f5:	mov    eax,r9d
    b0f8:	shr    eax,1
    b0fa:	cmp    eax,DWORD PTR [rip+0xf990]        # 1aa90 <stderr@@GLIBC_2.2.5+0xa50>
    b100:	ja     b1c0 <__ctype_b_loc@plt+0x7850>
    b106:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b110:	mov    eax,0x1
    b115:	cmp    r9d,0x7fff
    b11c:	je     b12d <__ctype_b_loc@plt+0x77bd>
    b11e:	xor    eax,eax
    b120:	cmp    DWORD PTR [rip+0xf966],0x8000        # 1aa90 <stderr@@GLIBC_2.2.5+0xa50>
    b12a:	sete   al
    b12d:	ret    
    b12e:	xchg   ax,ax
    b130:	lea    rcx,[rip+0x10c69]        # 1bda0 <stderr@@GLIBC_2.2.5+0x1d60>
    b137:	movsxd rsi,esi
    b13a:	lea    edx,[rdi-0x1]
    b13d:	movzx  esi,BYTE PTR [rcx+rsi*1]
    b141:	lea    rcx,[rip+0x11f78]        # 1d0c0 <stderr@@GLIBC_2.2.5+0x3080>
    b148:	add    WORD PTR [rcx+rsi*4+0x404],0x1
    b151:	cmp    edx,0xff
    b157:	jle    b1a8 <__ctype_b_loc@plt+0x7838>
    b159:	mov    ecx,edx
    b15b:	lea    rsi,[rip+0x10a3e]        # 1bba0 <stderr@@GLIBC_2.2.5+0x1b60>
    b162:	sar    ecx,0x7
    b165:	add    ecx,0x100
    b16b:	movsxd rcx,ecx
    b16e:	movzx  ecx,BYTE PTR [rsi+rcx*1]
    b172:	lea    rdi,[rip+0x11e47]        # 1cfc0 <stderr@@GLIBC_2.2.5+0x2f80>
    b179:	or     BYTE PTR [rip+0xf90a],al        # 1aa89 <stderr@@GLIBC_2.2.5+0xa49>
    b17f:	add    WORD PTR [rdi+rcx*4],0x1
    b184:	mov    ecx,DWORD PTR [rip+0xf906]        # 1aa90 <stderr@@GLIBC_2.2.5+0xa50>
    b18a:	lea    esi,[rcx+0x1]
    b18d:	mov    DWORD PTR [rip+0xf8fd],esi        # 1aa90 <stderr@@GLIBC_2.2.5+0xa50>
    b193:	lea    rsi,[rip+0x33286]        # 3e420 <stderr@@GLIBC_2.2.5+0x243e0>
    b19a:	mov    WORD PTR [rsi+rcx*2],dx
    b19e:	jmp    b05e <__ctype_b_loc@plt+0x76ee>
    b1a3:	nop    DWORD PTR [rax+rax*1+0x0]
    b1a8:	movsxd rcx,edx
    b1ab:	lea    rsi,[rip+0x109ee]        # 1bba0 <stderr@@GLIBC_2.2.5+0x1b60>
    b1b2:	movzx  ecx,BYTE PTR [rsi+rcx*1]
    b1b6:	jmp    b172 <__ctype_b_loc@plt+0x7802>
    b1b8:	nop    DWORD PTR [rax+rax*1+0x0]
    b1c0:	mov    r10d,r10d
    b1c3:	shr    rcx,0x3
    b1c7:	mov    eax,0x1
    b1cc:	sub    r10,r11
    b1cf:	shr    r10,1
    b1d2:	cmp    r10,rcx
    b1d5:	jbe    b110 <__ctype_b_loc@plt+0x77a0>
    b1db:	ret    
    b1dc:	nop    DWORD PTR [rax+0x0]
    b1e0:	push   rbp
    b1e1:	mov    ecx,edi
    b1e3:	push   rbx
    b1e4:	mov    ebx,edi
    b1e6:	sub    rsp,0x8
    b1ea:	movzx  esi,WORD PTR [rip+0x127e3]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b1f1:	mov    eax,DWORD PTR [rip+0x127d9]        # 1d9d0 <stderr@@GLIBC_2.2.5+0x3990>
    b1f7:	shl    esi,cl
    b1f9:	mov    ecx,DWORD PTR [rip+0x127cd]        # 1d9cc <stderr@@GLIBC_2.2.5+0x398c>
    b1ff:	cmp    ecx,edi
    b201:	jge    b280 <__ctype_b_loc@plt+0x7910>
    b203:	lea    rbp,[rip+0x98df6]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    b20a:	jmp    b238 <__ctype_b_loc@plt+0x78c8>
    b20c:	nop    DWORD PTR [rax+0x0]
    b210:	lea    eax,[rdx+0x1]
    b213:	mov    DWORD PTR [rip+0x4320b],eax        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    b219:	movzx  eax,BYTE PTR [rbp+rdx*1+0x0]
    b21e:	mov    DWORD PTR [rip+0x127ac],eax        # 1d9d0 <stderr@@GLIBC_2.2.5+0x3990>
    b224:	mov    DWORD PTR [rip+0x1279e],0x8        # 1d9cc <stderr@@GLIBC_2.2.5+0x398c>
    b22e:	mov    ecx,0x8
    b233:	cmp    ebx,0x8
    b236:	jle    b280 <__ctype_b_loc@plt+0x7910>
    b238:	sub    ebx,ecx
    b23a:	mov    edx,DWORD PTR [rip+0x431e4]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    b240:	mov    ecx,ebx
    b242:	shl    eax,cl
    b244:	or     esi,eax
    b246:	cmp    edx,DWORD PTR [rip+0x96dd8]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    b24c:	mov    WORD PTR [rip+0x12781],si        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b253:	jb     b210 <__ctype_b_loc@plt+0x78a0>
    b255:	mov    edi,0x1
    b25a:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    b25f:	mov    DWORD PTR [rip+0x1276b],eax        # 1d9d0 <stderr@@GLIBC_2.2.5+0x3990>
    b265:	cmp    eax,0xffffffff
    b268:	jne    b29a <__ctype_b_loc@plt+0x792a>
    b26a:	mov    DWORD PTR [rip+0x1275c],0x0        # 1d9d0 <stderr@@GLIBC_2.2.5+0x3990>
    b274:	movzx  esi,WORD PTR [rip+0x12759]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b27b:	xor    eax,eax
    b27d:	jmp    b224 <__ctype_b_loc@plt+0x78b4>
    b27f:	nop
    b280:	sub    ecx,ebx
    b282:	shr    eax,cl
    b284:	mov    DWORD PTR [rip+0x12742],ecx        # 1d9cc <stderr@@GLIBC_2.2.5+0x398c>
    b28a:	or     eax,esi
    b28c:	mov    WORD PTR [rip+0x12741],ax        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b293:	add    rsp,0x8
    b297:	pop    rbx
    b298:	pop    rbp
    b299:	ret    
    b29a:	movzx  esi,WORD PTR [rip+0x12733]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b2a1:	jmp    b224 <__ctype_b_loc@plt+0x78b4>
    b2a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    b2ae:	xchg   ax,ax
    b2b0:	push   r15
    b2b2:	push   r14
    b2b4:	mov    r14,rcx
    b2b7:	push   r13
    b2b9:	mov    r13,rsi
    b2bc:	push   r12
    b2be:	push   rbp
    b2bf:	push   rbx
    b2c0:	sub    rsp,0xb8
    b2c7:	mov    rax,QWORD PTR fs:0x28
    b2d0:	mov    QWORD PTR [rsp+0xa8],rax
    b2d8:	xor    eax,eax
    b2da:	lea    rcx,[rsp+0x42]
    b2df:	lea    rax,[rsp+0x22]
    b2e4:	nop    DWORD PTR [rax+0x0]
    b2e8:	xor    r9d,r9d
    b2eb:	add    rax,0x2
    b2ef:	mov    WORD PTR [rax-0x2],r9w
    b2f4:	cmp    rcx,rax
    b2f7:	jne    b2e8 <__ctype_b_loc@plt+0x7978>
    b2f9:	lea    esi,[rdi-0x1]
    b2fc:	mov    rax,r13
    b2ff:	mov    r15,rsi
    b302:	lea    rsi,[r13+rsi*1+0x1]
    b307:	nop    WORD PTR [rax+rax*1+0x0]
    b310:	movzx  ecx,BYTE PTR [rax]
    b313:	add    rax,0x1
    b317:	add    WORD PTR [rsp+rcx*2+0x20],0x1
    b31d:	cmp    rsi,rax
    b320:	jne    b310 <__ctype_b_loc@plt+0x79a0>
    b322:	xor    r8d,r8d
    b325:	mov    eax,0x1
    b32a:	lea    r11,[rsp+0x20]
    b32f:	xor    r9d,r9d
    b332:	mov    WORD PTR [rsp+0x82],r8w
    b33b:	mov    r10d,0x10
    b341:	lea    r8,[rsp+0x80]
    b349:	nop    DWORD PTR [rax+0x0]
    b350:	movzx  esi,WORD PTR [r11+rax*2]
    b355:	mov    ecx,r10d
    b358:	sub    ecx,eax
    b35a:	shl    esi,cl
    b35c:	add    r9d,esi
    b35f:	mov    WORD PTR [r8+rax*2+0x2],r9w
    b365:	add    rax,0x1
    b369:	cmp    rax,0x11
    b36d:	jne    b350 <__ctype_b_loc@plt+0x79e0>
    b36f:	movzx  ecx,WORD PTR [rsp+0xa2]
    b377:	test   cx,cx
    b37a:	jne    b5ae <__ctype_b_loc@plt+0x7c3e>
    b380:	mov    r11d,r10d
    b383:	mov    eax,0x1
    b388:	lea    r10,[rsp+0x50]
    b38d:	mov    r9d,0x1
    b393:	sub    r11d,edx
    b396:	mov    DWORD PTR [rsp+0x10],r11d
    b39b:	jmp    b3a5 <__ctype_b_loc@plt+0x7a35>
    b39d:	nop    DWORD PTR [rax]
    b3a0:	movzx  ecx,WORD PTR [r8+rax*2]
    b3a5:	movzx  esi,cx
    b3a8:	mov    ecx,r11d
    b3ab:	mov    ebx,r9d
    b3ae:	sar    esi,cl
    b3b0:	mov    ecx,edx
    b3b2:	sub    ecx,eax
    b3b4:	mov    WORD PTR [r8+rax*2],si
    b3b9:	shl    ebx,cl
    b3bb:	mov    WORD PTR [r10+rax*2],bx
    b3c0:	add    rax,0x1
    b3c4:	cmp    edx,eax
    b3c6:	jae    b3a0 <__ctype_b_loc@plt+0x7a30>
    b3c8:	lea    r10d,[rdx+0x1]
    b3cc:	mov    r9d,0x10
    b3d2:	mov    r8d,0x1
    b3d8:	mov    eax,r10d
    b3db:	nop    DWORD PTR [rax+rax*1+0x0]
    b3e0:	mov    ecx,r9d
    b3e3:	mov    ebx,r8d
    b3e6:	mov    esi,eax
    b3e8:	sub    ecx,eax
    b3ea:	add    eax,0x1
    b3ed:	shl    ebx,cl
    b3ef:	mov    WORD PTR [rsp+rsi*2+0x50],bx
    b3f4:	cmp    eax,0x11
    b3f7:	jne    b3e0 <__ctype_b_loc@plt+0x7a70>
    b3f9:	movsxd r10,r10d
    b3fc:	movzx  ecx,BYTE PTR [rsp+0x10]
    b401:	movzx  eax,WORD PTR [rsp+r10*2+0x80]
    b40a:	sar    eax,cl
    b40c:	test   eax,eax
    b40e:	jne    b585 <__ctype_b_loc@plt+0x7c15>
    b414:	mov    eax,0x1
    b419:	mov    ecx,0xf
    b41e:	mov    QWORD PTR [rsp+0x8],r14
    b423:	xor    r9d,r9d
    b426:	sub    ecx,edx
    b428:	mov    r11d,eax
    b42b:	lea    r8,[rip+0x12fee]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    b432:	shl    r11d,cl
    b435:	mov    ecx,edx
    b437:	shl    eax,cl
    b439:	mov    DWORD PTR [rsp+0x14],eax
    b43d:	lea    rax,[r14+0x2]
    b441:	mov    r14,r15
    b444:	mov    QWORD PTR [rsp+0x18],rax
    b449:	nop    DWORD PTR [rax+0x0]
    b450:	movzx  eax,BYTE PTR [r13+r9*1+0x0]
    b456:	test   eax,eax
    b458:	je     b4c8 <__ctype_b_loc@plt+0x7b58>
    b45a:	mov    r10d,eax
    b45d:	movzx  esi,WORD PTR [rsp+r10*2+0x80]
    b466:	movzx  r12d,WORD PTR [rsp+r10*2+0x50]
    b46c:	cmp    edx,eax
    b46e:	jb     b4e0 <__ctype_b_loc@plt+0x7b70>
    b470:	movzx  ebp,si
    b473:	movzx  ebx,r12w
    b477:	add    ebx,ebp
    b479:	cmp    DWORD PTR [rsp+0x14],ebx
    b47d:	jb     b5ae <__ctype_b_loc@plt+0x7c3e>
    b483:	cmp    ebx,ebp
    b485:	jbe    b4bc <__ctype_b_loc@plt+0x7b4c>
    b487:	mov    rax,QWORD PTR [rsp+0x8]
    b48c:	not    ebp
    b48e:	movzx  r15d,si
    b492:	mov    ecx,r9d
    b495:	add    ebx,ebp
    b497:	lea    rax,[rax+r15*2]
    b49b:	add    r15,rbx
    b49e:	mov    rbx,QWORD PTR [rsp+0x18]
    b4a3:	lea    rbx,[rbx+r15*2]
    b4a7:	nop    WORD PTR [rax+rax*1+0x0]
    b4b0:	mov    WORD PTR [rax],cx
    b4b3:	add    rax,0x2
    b4b7:	cmp    rbx,rax
    b4ba:	jne    b4b0 <__ctype_b_loc@plt+0x7b40>
    b4bc:	add    esi,r12d
    b4bf:	mov    WORD PTR [rsp+r10*2+0x80],si
    b4c8:	lea    rax,[r9+0x1]
    b4cc:	cmp    r9,r14
    b4cf:	je     b560 <__ctype_b_loc@plt+0x7bf0>
    b4d5:	mov    r9,rax
    b4d8:	jmp    b450 <__ctype_b_loc@plt+0x7ae0>
    b4dd:	nop    DWORD PTR [rax]
    b4e0:	movzx  ecx,BYTE PTR [rsp+0x10]
    b4e5:	movzx  ebx,si
    b4e8:	mov    r15d,ebx
    b4eb:	shr    r15d,cl
    b4ee:	sub    eax,edx
    b4f0:	mov    rcx,r15
    b4f3:	mov    r15,QWORD PTR [rsp+0x8]
    b4f8:	lea    rbp,[r15+rcx*2]
    b4fc:	mov    ecx,eax
    b4fe:	jne    b517 <__ctype_b_loc@plt+0x7ba7>
    b500:	jmp    b550 <__ctype_b_loc@plt+0x7be0>
    b502:	nop    WORD PTR [rax+rax*1+0x0]
    b508:	lea    rbp,[r8+rax*2+0x10000]
    b510:	add    ebx,ebx
    b512:	sub    ecx,0x1
    b515:	je     b550 <__ctype_b_loc@plt+0x7be0>
    b517:	movzx  eax,WORD PTR [rbp+0x0]
    b51b:	test   ax,ax
    b51e:	jne    b540 <__ctype_b_loc@plt+0x7bd0>
    b520:	mov    eax,edi
    b522:	xor    r15d,r15d
    b525:	mov    WORD PTR [r8+rax*2],r15w
    b52a:	xor    r15d,r15d
    b52d:	mov    WORD PTR [r8+rax*2+0x10000],r15w
    b536:	movzx  eax,di
    b539:	mov    WORD PTR [rbp+0x0],di
    b53d:	add    edi,0x1
    b540:	test   r11d,ebx
    b543:	jne    b508 <__ctype_b_loc@plt+0x7b98>
    b545:	lea    rbp,[r8+rax*2]
    b549:	add    ebx,ebx
    b54b:	sub    ecx,0x1
    b54e:	jne    b517 <__ctype_b_loc@plt+0x7ba7>
    b550:	mov    WORD PTR [rbp+0x0],r9w
    b555:	jmp    b4bc <__ctype_b_loc@plt+0x7b4c>
    b55a:	nop    WORD PTR [rax+rax*1+0x0]
    b560:	mov    rax,QWORD PTR [rsp+0xa8]
    b568:	xor    rax,QWORD PTR fs:0x28
    b571:	jne    b5ba <__ctype_b_loc@plt+0x7c4a>
    b573:	add    rsp,0xb8
    b57a:	pop    rbx
    b57b:	pop    rbp
    b57c:	pop    r12
    b57e:	pop    r13
    b580:	pop    r14
    b582:	pop    r15
    b584:	ret    
    b585:	mov    ecx,edx
    b587:	shl    r8d,cl
    b58a:	cmp    eax,r8d
    b58d:	je     b414 <__ctype_b_loc@plt+0x7aa4>
    b593:	nop    DWORD PTR [rax+rax*1+0x0]
    b598:	mov    ecx,eax
    b59a:	xor    esi,esi
    b59c:	add    eax,0x1
    b59f:	mov    WORD PTR [r14+rcx*2],si
    b5a4:	cmp    r8d,eax
    b5a7:	jne    b598 <__ctype_b_loc@plt+0x7c28>
    b5a9:	jmp    b414 <__ctype_b_loc@plt+0x7aa4>
    b5ae:	lea    rdi,[rip+0x7e7e]        # 13433 <__ctype_b_loc@plt+0xfac3>
    b5b5:	call   d310 <__ctype_b_loc@plt+0x99a0>
    b5ba:	call   3680 <__stack_chk_fail@plt>
    b5bf:	nop
    b5c0:	push   r15
    b5c2:	push   r14
    b5c4:	push   r13
    b5c6:	mov    r13d,esi
    b5c9:	push   r12
    b5cb:	mov    r12d,edx
    b5ce:	push   rbp
    b5cf:	push   rbx
    b5d0:	mov    ebx,0x10
    b5d5:	sub    ebx,esi
    b5d7:	mov    ecx,ebx
    b5d9:	sub    rsp,0x18
    b5dd:	movzx  ebp,WORD PTR [rip+0x123f0]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b5e4:	mov    DWORD PTR [rsp+0x4],edi
    b5e8:	mov    edi,esi
    b5ea:	sar    ebp,cl
    b5ec:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b5f1:	lea    eax,[r12-0x1]
    b5f6:	xor    r8d,r8d
    b5f9:	lea    r12,[rip+0x12600]        # 1dc00 <stderr@@GLIBC_2.2.5+0x3bc0>
    b600:	mov    DWORD PTR [rsp+0x8],eax
    b604:	test   ebp,ebp
    b606:	je     b760 <__ctype_b_loc@plt+0x7df0>
    b60c:	mov    eax,DWORD PTR [rsp+0x8]
    b610:	movsxd r15,r8d
    b613:	sub    eax,r8d
    b616:	lea    r13,[r15+rax*1+0x1]
    b61b:	jmp    b639 <__ctype_b_loc@plt+0x7cc9>
    b61d:	nop    DWORD PTR [rax]
    b620:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b625:	mov    BYTE PTR [r12+r15*1],r14b
    b629:	add    r15,0x1
    b62d:	add    ebx,0x1
    b630:	cmp    r15,r13
    b633:	je     b700 <__ctype_b_loc@plt+0x7d90>
    b639:	movsxd rbx,r15d
    b63c:	cmp    ebp,r15d
    b63f:	jle    b698 <__ctype_b_loc@plt+0x7d28>
    b641:	movzx  esi,WORD PTR [rip+0x1238c]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b648:	mov    edi,0x3
    b64d:	mov    edx,esi
    b64f:	shr    dx,0xd
    b653:	mov    r14d,edx
    b656:	cmp    dx,0x7
    b65a:	jne    b620 <__ctype_b_loc@plt+0x7cb0>
    b65c:	movzx  r8d,si
    b660:	test   si,0x1000
    b665:	je     b750 <__ctype_b_loc@plt+0x7de0>
    b66b:	mov    edx,0x1000
    b670:	mov    eax,0x7
    b675:	nop    DWORD PTR [rax]
    b678:	shr    edx,1
    b67a:	mov    edi,eax
    b67c:	add    eax,0x1
    b67f:	test   r8d,edx
    b682:	jne    b678 <__ctype_b_loc@plt+0x7d08>
    b684:	cmp    eax,0x10
    b687:	jg     b7cb <__ctype_b_loc@plt+0x7e5b>
    b68d:	sub    edi,0x2
    b690:	mov    r14d,eax
    b693:	jmp    b620 <__ctype_b_loc@plt+0x7cb0>
    b695:	nop    DWORD PTR [rax]
    b698:	cmp    ebx,DWORD PTR [rsp+0x4]
    b69c:	jge    b6cc <__ctype_b_loc@plt+0x7d5c>
    b69e:	mov    ecx,DWORD PTR [rsp+0x4]
    b6a2:	lea    rdx,[rip+0x12558]        # 1dc01 <stderr@@GLIBC_2.2.5+0x3bc1>
    b6a9:	lea    rax,[rip+0x12550]        # 1dc00 <stderr@@GLIBC_2.2.5+0x3bc0>
    b6b0:	add    rax,rbx
    b6b3:	add    rbx,rdx
    b6b6:	lea    edx,[rcx-0x1]
    b6b9:	sub    edx,r15d
    b6bc:	add    rdx,rbx
    b6bf:	nop
    b6c0:	mov    BYTE PTR [rax],0x0
    b6c3:	add    rax,0x1
    b6c7:	cmp    rax,rdx
    b6ca:	jne    b6c0 <__ctype_b_loc@plt+0x7d50>
    b6cc:	mov    edi,DWORD PTR [rsp+0x4]
    b6d0:	add    rsp,0x18
    b6d4:	lea    rcx,[rip+0x12305]        # 1d9e0 <stderr@@GLIBC_2.2.5+0x39a0>
    b6db:	mov    edx,0x8
    b6e0:	pop    rbx
    b6e1:	lea    rsi,[rip+0x12518]        # 1dc00 <stderr@@GLIBC_2.2.5+0x3bc0>
    b6e8:	pop    rbp
    b6e9:	pop    r12
    b6eb:	pop    r13
    b6ed:	pop    r14
    b6ef:	pop    r15
    b6f1:	jmp    b2b0 <__ctype_b_loc@plt+0x7940>
    b6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b700:	movzx  r13d,WORD PTR [rip+0x122cc]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b708:	mov    edi,0x2
    b70d:	mov    DWORD PTR [rsp+0xc],ebx
    b711:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b716:	mov    r8d,DWORD PTR [rsp+0xc]
    b71b:	sar    r13d,0xe
    b71f:	test   r13d,r13d
    b722:	je     b60c <__ctype_b_loc@plt+0x7c9c>
    b728:	movsxd rax,ebx
    b72b:	lea    edx,[r13-0x1]
    b72f:	lea    rdx,[rax+rdx*1+0x1]
    b734:	mov    BYTE PTR [r12+rax*1],0x0
    b739:	add    rax,0x1
    b73d:	cmp    rax,rdx
    b740:	jne    b734 <__ctype_b_loc@plt+0x7dc4>
    b742:	lea    r8d,[r13+rbx*1+0x0]
    b747:	jmp    b60c <__ctype_b_loc@plt+0x7c9c>
    b74c:	nop    DWORD PTR [rax+0x0]
    b750:	mov    r14d,0x7
    b756:	mov    edi,0x4
    b75b:	jmp    b620 <__ctype_b_loc@plt+0x7cb0>
    b760:	movzx  edx,WORD PTR [rip+0x1226d]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b767:	mov    ecx,ebx
    b769:	mov    edi,r13d
    b76c:	sar    edx,cl
    b76e:	mov    ebx,edx
    b770:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b775:	mov    ecx,DWORD PTR [rsp+0x4]
    b779:	mov    rax,r12
    b77c:	lea    edx,[rcx-0x1]
    b77f:	lea    rcx,[r12+0x1]
    b784:	add    rdx,rcx
    b787:	nop    WORD PTR [rax+rax*1+0x0]
    b790:	mov    BYTE PTR [rax],0x0
    b793:	add    rax,0x1
    b797:	cmp    rax,rdx
    b79a:	jne    b790 <__ctype_b_loc@plt+0x7e20>
    b79c:	lea    rax,[rip+0x1223d]        # 1d9e0 <stderr@@GLIBC_2.2.5+0x39a0>
    b7a3:	mov    edx,ebx
    b7a5:	lea    rcx,[rax+0x200]
    b7ac:	nop    DWORD PTR [rax+0x0]
    b7b0:	mov    WORD PTR [rax],dx
    b7b3:	add    rax,0x2
    b7b7:	cmp    rcx,rax
    b7ba:	jne    b7b0 <__ctype_b_loc@plt+0x7e40>
    b7bc:	add    rsp,0x18
    b7c0:	pop    rbx
    b7c1:	pop    rbp
    b7c2:	pop    r12
    b7c4:	pop    r13
    b7c6:	pop    r14
    b7c8:	pop    r15
    b7ca:	ret    
    b7cb:	lea    rdi,[rip+0x7c61]        # 13433 <__ctype_b_loc@plt+0xfac3>
    b7d2:	call   d310 <__ctype_b_loc@plt+0x99a0>
    b7d7:	nop    WORD PTR [rax+rax*1+0x0]
    b7e0:	endbr64 
    b7e4:	push   r15
    b7e6:	push   r14
    b7e8:	push   r13
    b7ea:	push   r12
    b7ec:	push   rbp
    b7ed:	push   rbx
    b7ee:	lea    rbx,[rip+0x8680b]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    b7f5:	sub    rsp,0x28
    b7f9:	mov    DWORD PTR [rip+0x85001],edi        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    b7ff:	mov    edi,0x10
    b804:	mov    DWORD PTR [rsp+0x1c],esi
    b808:	mov    DWORD PTR [rip+0x42c12],esi        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    b80e:	xor    esi,esi
    b810:	mov    WORD PTR [rip+0x121bd],si        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b817:	mov    DWORD PTR [rip+0x121af],0x0        # 1d9d0 <stderr@@GLIBC_2.2.5+0x3990>
    b821:	mov    DWORD PTR [rip+0x121a1],0x0        # 1d9cc <stderr@@GLIBC_2.2.5+0x398c>
    b82b:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b830:	xor    ecx,ecx
    b832:	mov    DWORD PTR [rip+0x123a4],0x0        # 1dbe0 <stderr@@GLIBC_2.2.5+0x3ba0>
    b83c:	mov    DWORD PTR [rip+0x1217e],0x0        # 1d9c4 <stderr@@GLIBC_2.2.5+0x3984>
    b846:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b850:	mov    eax,DWORD PTR [rip+0x1216a]        # 1d9c0 <stderr@@GLIBC_2.2.5+0x3980>
    b856:	xor    edx,edx
    b858:	xor    esi,esi
    b85a:	jmp    b888 <__ctype_b_loc@plt+0x7f18>
    b85c:	nop    DWORD PTR [rax+0x0]
    b860:	mov    esi,eax
    b862:	add    eax,0x1
    b865:	movzx  esi,BYTE PTR [rbx+rsi*1]
    b869:	and    eax,0x1fff
    b86e:	mov    BYTE PTR [rbx+rdx*1],sil
    b872:	add    rdx,0x1
    b876:	mov    esi,0x1
    b87b:	cmp    rdx,0x2000
    b882:	je     bc50 <__ctype_b_loc@plt+0x82e0>
    b888:	mov    r12d,edx
    b88b:	sub    ecx,0x1
    b88e:	jns    b860 <__ctype_b_loc@plt+0x7ef0>
    b890:	mov    DWORD PTR [rip+0x12132],ecx        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    b896:	test   sil,sil
    b899:	je     b8a1 <__ctype_b_loc@plt+0x7f31>
    b89b:	mov    DWORD PTR [rip+0x1211f],eax        # 1d9c0 <stderr@@GLIBC_2.2.5+0x3980>
    b8a1:	lea    rbp,[rip+0x44758]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    b8a8:	nop    DWORD PTR [rax+rax*1+0x0]
    b8b0:	mov    edx,DWORD PTR [rip+0x1232a]        # 1dbe0 <stderr@@GLIBC_2.2.5+0x3ba0>
    b8b6:	movzx  eax,WORD PTR [rip+0x12117]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b8bd:	test   edx,edx
    b8bf:	je     b988 <__ctype_b_loc@plt+0x8018>
    b8c5:	sub    edx,0x1
    b8c8:	lea    rdi,[rip+0x32b51]        # 3e420 <stderr@@GLIBC_2.2.5+0x243e0>
    b8cf:	mov    DWORD PTR [rip+0x1230b],edx        # 1dbe0 <stderr@@GLIBC_2.2.5+0x3ba0>
    b8d5:	mov    edx,eax
    b8d7:	shr    dx,0x4
    b8db:	and    edx,0xfff
    b8e1:	movzx  r13d,WORD PTR [rdi+rdx*2]
    b8e6:	cmp    r13d,0x1fd
    b8ed:	jbe    b928 <__ctype_b_loc@plt+0x7fb8>
    b8ef:	mov    ecx,0x8
    b8f4:	lea    rdx,[rip+0x12b25]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    b8fb:	jmp    b914 <__ctype_b_loc@plt+0x7fa4>
    b8fd:	nop    DWORD PTR [rax]
    b900:	movzx  r13d,WORD PTR [rdx+r13*2+0x10000]
    b909:	shr    ecx,1
    b90b:	cmp    r13d,0x1fd
    b912:	jbe    b928 <__ctype_b_loc@plt+0x7fb8>
    b914:	test   ecx,eax
    b916:	jne    b900 <__ctype_b_loc@plt+0x7f90>
    b918:	movzx  r13d,WORD PTR [rdx+r13*2]
    b91d:	shr    ecx,1
    b91f:	cmp    r13d,0x1fd
    b926:	ja     b914 <__ctype_b_loc@plt+0x7fa4>
    b928:	mov    eax,r13d
    b92b:	movzx  edi,BYTE PTR [rbp+rax*1+0x0]
    b930:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b935:	cmp    r13d,0xff
    b93c:	ja     bb58 <__ctype_b_loc@plt+0x81e8>
    b942:	mov    eax,r12d
    b945:	add    r12d,0x1
    b949:	mov    BYTE PTR [rbx+rax*1],r13b
    b94d:	cmp    r12d,0x2000
    b954:	jne    b8b0 <__ctype_b_loc@plt+0x7f40>
    b95a:	mov    eax,DWORD PTR [rip+0xe728]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    b960:	test   eax,eax
    b962:	je     bc6a <__ctype_b_loc@plt+0x82fa>
    b968:	mov    edx,DWORD PTR [rip+0x12056]        # 1d9c4 <stderr@@GLIBC_2.2.5+0x3984>
    b96e:	test   edx,edx
    b970:	jne    bca0 <__ctype_b_loc@plt+0x8330>
    b976:	mov    ecx,DWORD PTR [rip+0x1204c]        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    b97c:	jmp    b850 <__ctype_b_loc@plt+0x7ee0>
    b981:	nop    DWORD PTR [rax+0x0]
    b988:	movzx  r13d,ax
    b98c:	mov    edi,0x10
    b991:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b996:	mov    DWORD PTR [rip+0x12243],r13d        # 1dbe0 <stderr@@GLIBC_2.2.5+0x3ba0>
    b99d:	test   r13d,r13d
    b9a0:	je     bc88 <__ctype_b_loc@plt+0x8318>
    b9a6:	mov    edx,0x3
    b9ab:	mov    esi,0x5
    b9b0:	mov    edi,0x13
    b9b5:	xor    r14d,r14d
    b9b8:	call   b5c0 <__ctype_b_loc@plt+0x7c50>
    b9bd:	movzx  eax,WORD PTR [rip+0x12010]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    b9c4:	mov    edi,0x9
    b9c9:	lea    r13,[rip+0x12a50]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    b9d0:	sar    eax,0x7
    b9d3:	mov    DWORD PTR [rsp+0x18],eax
    b9d7:	mov    r15d,eax
    b9da:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    b9df:	lea    rax,[rip+0x11ffa]        # 1d9e0 <stderr@@GLIBC_2.2.5+0x39a0>
    b9e6:	mov    QWORD PTR [rsp+0x8],rax
    b9eb:	lea    rax,[rip+0x1220e]        # 1dc00 <stderr@@GLIBC_2.2.5+0x3bc0>
    b9f2:	mov    QWORD PTR [rsp+0x10],rax
    b9f7:	test   r15d,r15d
    b9fa:	jne    ba40 <__ctype_b_loc@plt+0x80d0>
    b9fc:	jmp    bcd0 <__ctype_b_loc@plt+0x8360>
    ba01:	nop    DWORD PTR [rax+0x0]
    ba08:	mov    DWORD PTR [rsp+0x4],eax
    ba0c:	movsxd r15,eax
    ba0f:	mov    rax,QWORD PTR [rsp+0x10]
    ba14:	movzx  edi,BYTE PTR [rax+r15*1]
    ba19:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    ba1e:	mov    eax,DWORD PTR [rsp+0x4]
    ba22:	cmp    eax,0x2
    ba25:	jle    ba80 <__ctype_b_loc@plt+0x8110>
    ba27:	movsxd rcx,r14d
    ba2a:	sub    eax,0x2
    ba2d:	add    r14d,0x1
    ba31:	mov    BYTE PTR [rbp+rcx*1+0x0],al
    ba35:	cmp    DWORD PTR [rsp+0x18],r14d
    ba3a:	jle    badc <__ctype_b_loc@plt+0x816c>
    ba40:	movzx  ecx,WORD PTR [rip+0x11f8d]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    ba47:	mov    rdi,QWORD PTR [rsp+0x8]
    ba4c:	movzx  eax,ch
    ba4f:	movzx  eax,WORD PTR [rdi+rax*2]
    ba53:	cmp    eax,0x12
    ba56:	jle    ba08 <__ctype_b_loc@plt+0x8098>
    ba58:	mov    esi,0x80
    ba5d:	jmp    ba70 <__ctype_b_loc@plt+0x8100>
    ba5f:	nop
    ba60:	movzx  eax,WORD PTR [r13+rax*2+0x10000]
    ba69:	shr    esi,1
    ba6b:	cmp    eax,0x12
    ba6e:	jle    ba08 <__ctype_b_loc@plt+0x8098>
    ba70:	test   esi,ecx
    ba72:	jne    ba60 <__ctype_b_loc@plt+0x80f0>
    ba74:	movzx  eax,WORD PTR [r13+rax*2+0x0]
    ba7a:	jmp    ba69 <__ctype_b_loc@plt+0x80f9>
    ba7c:	nop    DWORD PTR [rax+0x0]
    ba80:	test   eax,eax
    ba82:	je     baaa <__ctype_b_loc@plt+0x813a>
    ba84:	movzx  r15d,WORD PTR [rip+0x11f48]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    ba8c:	cmp    eax,0x1
    ba8f:	je     bd40 <__ctype_b_loc@plt+0x83d0>
    ba95:	sar    r15d,0x7
    ba99:	mov    edi,0x9
    ba9e:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    baa3:	lea    eax,[r15+0x13]
    baa7:	movsxd r15,eax
    baaa:	movsxd rcx,r14d
    baad:	lea    rdi,[rip+0x4454d]        # 50001 <stderr@@GLIBC_2.2.5+0x35fc1>
    bab4:	lea    rsi,[rbp+rcx*1+0x0]
    bab9:	add    rcx,rdi
    babc:	add    rcx,r15
    babf:	nop
    bac0:	mov    BYTE PTR [rsi],0x0
    bac3:	add    rsi,0x1
    bac7:	cmp    rcx,rsi
    baca:	jne    bac0 <__ctype_b_loc@plt+0x8150>
    bacc:	lea    r14d,[rax+r14*1+0x1]
    bad1:	cmp    DWORD PTR [rsp+0x18],r14d
    bad6:	jg     ba40 <__ctype_b_loc@plt+0x80d0>
    badc:	cmp    r14d,0x1fd
    bae3:	jg     bb14 <__ctype_b_loc@plt+0x81a4>
    bae5:	movsxd rcx,r14d
    bae8:	lea    rsi,[rip+0x44512]        # 50001 <stderr@@GLIBC_2.2.5+0x35fc1>
    baef:	lea    rax,[rbp+rcx*1+0x0]
    baf4:	add    rcx,rsi
    baf7:	mov    esi,0x1fd
    bafc:	mov    edx,esi
    bafe:	sub    edx,r14d
    bb01:	add    rdx,rcx
    bb04:	nop    DWORD PTR [rax+0x0]
    bb08:	mov    BYTE PTR [rax],0x0
    bb0b:	add    rax,0x1
    bb0f:	cmp    rax,rdx
    bb12:	jne    bb08 <__ctype_b_loc@plt+0x8198>
    bb14:	lea    rcx,[rip+0x32905]        # 3e420 <stderr@@GLIBC_2.2.5+0x243e0>
    bb1b:	mov    edx,0xc
    bb20:	mov    rsi,rbp
    bb23:	mov    edi,0x1fe
    bb28:	call   b2b0 <__ctype_b_loc@plt+0x7940>
    bb2d:	mov    edx,0xffffffff
    bb32:	mov    esi,0x4
    bb37:	mov    edi,0xe
    bb3c:	call   b5c0 <__ctype_b_loc@plt+0x7c50>
    bb41:	mov    edx,DWORD PTR [rip+0x12099]        # 1dbe0 <stderr@@GLIBC_2.2.5+0x3ba0>
    bb47:	movzx  eax,WORD PTR [rip+0x11e86]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    bb4e:	jmp    b8c5 <__ctype_b_loc@plt+0x7f55>
    bb53:	nop    DWORD PTR [rax+rax*1+0x0]
    bb58:	movzx  ecx,WORD PTR [rip+0x11e75]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    bb5f:	lea    rax,[rip+0x11e7a]        # 1d9e0 <stderr@@GLIBC_2.2.5+0x39a0>
    bb66:	sub    r13d,0xfd
    bb6d:	mov    rsi,rax
    bb70:	mov    DWORD PTR [rip+0x11e51],r13d        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    bb77:	movzx  eax,ch
    bb7a:	movzx  r13d,WORD PTR [rsi+rax*2]
    bb7f:	cmp    r13d,0xd
    bb83:	jbe    bbba <__ctype_b_loc@plt+0x824a>
    bb85:	mov    eax,0x80
    bb8a:	lea    rdx,[rip+0x1288f]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    bb91:	jmp    bba9 <__ctype_b_loc@plt+0x8239>
    bb93:	nop    DWORD PTR [rax+rax*1+0x0]
    bb98:	movzx  r13d,WORD PTR [rdx+r13*2+0x10000]
    bba1:	shr    eax,1
    bba3:	cmp    r13d,0xd
    bba7:	jbe    bbba <__ctype_b_loc@plt+0x824a>
    bba9:	test   eax,ecx
    bbab:	jne    bb98 <__ctype_b_loc@plt+0x8228>
    bbad:	movzx  r13d,WORD PTR [rdx+r13*2]
    bbb2:	shr    eax,1
    bbb4:	cmp    r13d,0xd
    bbb8:	ja     bba9 <__ctype_b_loc@plt+0x8239>
    bbba:	lea    rax,[rip+0x1203f]        # 1dc00 <stderr@@GLIBC_2.2.5+0x3bc0>
    bbc1:	mov    rdi,rax
    bbc4:	mov    eax,r13d
    bbc7:	movzx  edi,BYTE PTR [rdi+rax*1]
    bbcb:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    bbd0:	test   r13d,r13d
    bbd3:	jne    bd60 <__ctype_b_loc@plt+0x83f0>
    bbd9:	lea    eax,[r12-0x1]
    bbde:	mov    esi,DWORD PTR [rip+0x11de4]        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    bbe4:	xor    ecx,ecx
    bbe6:	sub    eax,r13d
    bbe9:	and    eax,0x1fff
    bbee:	lea    edx,[rsi-0x1]
    bbf1:	mov    DWORD PTR [rip+0x11dc9],eax        # 1d9c0 <stderr@@GLIBC_2.2.5+0x3980>
    bbf7:	jmp    bc2e <__ctype_b_loc@plt+0x82be>
    bbf9:	nop    DWORD PTR [rax+0x0]
    bc00:	mov    ecx,eax
    bc02:	add    eax,0x1
    bc05:	sub    edx,0x1
    bc08:	movzx  esi,BYTE PTR [rbx+rcx*1]
    bc0c:	mov    ecx,r12d
    bc0f:	add    r12d,0x1
    bc13:	and    eax,0x1fff
    bc18:	mov    BYTE PTR [rbx+rcx*1],sil
    bc1c:	mov    ecx,0x1
    bc21:	cmp    r12d,0x2000
    bc28:	je     bcb8 <__ctype_b_loc@plt+0x8348>
    bc2e:	mov    edi,edx
    bc30:	test   edx,edx
    bc32:	jns    bc00 <__ctype_b_loc@plt+0x8290>
    bc34:	mov    DWORD PTR [rip+0x11d8e],edx        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    bc3a:	test   cl,cl
    bc3c:	je     b8b0 <__ctype_b_loc@plt+0x7f40>
    bc42:	mov    DWORD PTR [rip+0x11d78],eax        # 1d9c0 <stderr@@GLIBC_2.2.5+0x3980>
    bc48:	jmp    b8b0 <__ctype_b_loc@plt+0x7f40>
    bc4d:	nop    DWORD PTR [rax]
    bc50:	mov    DWORD PTR [rip+0x11d6a],eax        # 1d9c0 <stderr@@GLIBC_2.2.5+0x3980>
    bc56:	mov    eax,DWORD PTR [rip+0xe42c]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    bc5c:	mov    DWORD PTR [rip+0x11d66],ecx        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    bc62:	test   eax,eax
    bc64:	jne    b968 <__ctype_b_loc@plt+0x7ff8>
    bc6a:	mov    r12d,0x2000
    bc70:	mov    edi,DWORD PTR [rsp+0x1c]
    bc74:	mov    edx,r12d
    bc77:	mov    rsi,rbx
    bc7a:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    bc7f:	jmp    b968 <__ctype_b_loc@plt+0x7ff8>
    bc84:	nop    DWORD PTR [rax+0x0]
    bc88:	mov    DWORD PTR [rip+0x11d32],0x1        # 1d9c4 <stderr@@GLIBC_2.2.5+0x3984>
    bc92:	mov    ecx,DWORD PTR [rip+0xe3f0]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    bc98:	test   ecx,ecx
    bc9a:	je     bd30 <__ctype_b_loc@plt+0x83c0>
    bca0:	add    rsp,0x28
    bca4:	xor    eax,eax
    bca6:	pop    rbx
    bca7:	pop    rbp
    bca8:	pop    r12
    bcaa:	pop    r13
    bcac:	pop    r14
    bcae:	pop    r15
    bcb0:	ret    
    bcb1:	nop    DWORD PTR [rax+0x0]
    bcb8:	mov    DWORD PTR [rip+0x11d0a],edi        # 1d9c8 <stderr@@GLIBC_2.2.5+0x3988>
    bcbe:	mov    DWORD PTR [rip+0x11cfc],eax        # 1d9c0 <stderr@@GLIBC_2.2.5+0x3980>
    bcc4:	jmp    b95a <__ctype_b_loc@plt+0x7fea>
    bcc9:	nop    DWORD PTR [rax+0x0]
    bcd0:	movzx  r13d,WORD PTR [rip+0x11cfc]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    bcd8:	mov    edi,0x9
    bcdd:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    bce2:	lea    rax,[rip+0x44317]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    bce9:	sar    r13d,0x7
    bced:	lea    rdx,[rax+0x1fe]
    bcf4:	nop    DWORD PTR [rax+0x0]
    bcf8:	mov    BYTE PTR [rax],0x0
    bcfb:	add    rax,0x1
    bcff:	cmp    rdx,rax
    bd02:	jne    bcf8 <__ctype_b_loc@plt+0x8388>
    bd04:	lea    rax,[rip+0x32715]        # 3e420 <stderr@@GLIBC_2.2.5+0x243e0>
    bd0b:	lea    rdx,[rax+0x2000]
    bd12:	nop    WORD PTR [rax+rax*1+0x0]
    bd18:	mov    WORD PTR [rax],r13w
    bd1c:	add    rax,0x2
    bd20:	cmp    rdx,rax
    bd23:	jne    bd18 <__ctype_b_loc@plt+0x83a8>
    bd25:	jmp    bb2d <__ctype_b_loc@plt+0x81bd>
    bd2a:	nop    WORD PTR [rax+rax*1+0x0]
    bd30:	test   r12d,r12d
    bd33:	je     bca0 <__ctype_b_loc@plt+0x8330>
    bd39:	jmp    bc70 <__ctype_b_loc@plt+0x8300>
    bd3e:	xchg   ax,ax
    bd40:	sar    r15d,0xc
    bd44:	mov    edi,0x4
    bd49:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    bd4e:	lea    eax,[r15+0x2]
    bd52:	movsxd r15,eax
    bd55:	jmp    baaa <__ctype_b_loc@plt+0x813a>
    bd5a:	nop    WORD PTR [rax+rax*1+0x0]
    bd60:	lea    r14d,[r13-0x1]
    bd64:	mov    ecx,0x10
    bd69:	movzx  r13d,WORD PTR [rip+0x11c63]        # 1d9d4 <stderr@@GLIBC_2.2.5+0x3994>
    bd71:	sub    ecx,r14d
    bd74:	mov    edi,r14d
    bd77:	sar    r13d,cl
    bd7a:	call   b1e0 <__ctype_b_loc@plt+0x7870>
    bd7f:	mov    eax,0x1
    bd84:	mov    ecx,r14d
    bd87:	shl    eax,cl
    bd89:	add    r13d,eax
    bd8c:	jmp    bbd9 <__ctype_b_loc@plt+0x8269>
    bd91:	nop    WORD PTR cs:[rax+rax*1+0x0]
    bd9b:	nop    DWORD PTR [rax+rax*1+0x0]
    bda0:	endbr64 
    bda4:	push   r15
    bda6:	push   r14
    bda8:	push   r13
    bdaa:	push   r12
    bdac:	push   rbp
    bdad:	push   rbx
    bdae:	sub    rsp,0x78
    bdb2:	mov    eax,DWORD PTR [rip+0x4266c]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    bdb8:	cmp    eax,DWORD PTR [rip+0x96266]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    bdbe:	mov    DWORD PTR [rsp+0x6c],edi
    bdc2:	mov    DWORD PTR [rsp+0x5c],esi
    bdc6:	jae    c3e2 <__ctype_b_loc@plt+0x8a72>
    bdcc:	lea    edx,[rax+0x1]
    bdcf:	mov    DWORD PTR [rip+0x4264f],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    bdd5:	lea    rdx,[rip+0x98224]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    bddc:	movzx  eax,BYTE PTR [rdx+rax*1]
    bde0:	mov    edx,eax
    bde2:	mov    r8d,eax
    bde5:	mov    DWORD PTR [rip+0xc239],eax        # 18024 <__ctype_b_loc@plt+0x146b4>
    bdeb:	and    edx,0x80
    bdf1:	mov    DWORD PTR [rip+0xc5f1],edx        # 183e8 <__ctype_b_loc@plt+0x14a78>
    bdf7:	and    r8d,0x60
    bdfb:	je     be19 <__ctype_b_loc@plt+0x84a9>
    bdfd:	mov    ebp,DWORD PTR [rip+0xe289]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    be03:	test   ebp,ebp
    be05:	je     c4af <__ctype_b_loc@plt+0x8b3f>
    be0b:	mov    ebx,DWORD PTR [rip+0xe273]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    be11:	test   ebx,ebx
    be13:	je     c3ee <__ctype_b_loc@plt+0x8a7e>
    be19:	and    eax,0x1f
    be1c:	mov    r8d,eax
    be1f:	mov    DWORD PTR [rip+0xc1ff],eax        # 18024 <__ctype_b_loc@plt+0x146b4>
    be25:	mov    eax,0x1
    be2a:	mov    ecx,r8d
    be2d:	shl    rax,cl
    be30:	mov    QWORD PTR [rsp+0x38],rax
    be35:	cmp    r8d,0x10
    be39:	jg     c3fd <__ctype_b_loc@plt+0x8a8d>
    be3f:	mov    r11d,DWORD PTR [rip+0xc5a2]        # 183e8 <__ctype_b_loc@plt+0x14a78>
    be46:	lea    rbx,[rip+0x125d3]        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    be4d:	xor    r13d,r13d
    be50:	mov    eax,DWORD PTR [rip+0x425ce]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    be56:	lea    rdi,[rbx+0x8]
    be5a:	mov    rcx,rbx
    be5d:	mov    esi,DWORD PTR [rip+0x961c1]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    be63:	mov    QWORD PTR [rip+0x125b2],0x0        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    be6e:	test   r11d,r11d
    be71:	lea    r14d,[rax*8+0x0]
    be79:	mov    QWORD PTR [rip+0x12694],0x0        # 1e518 <stderr@@GLIBC_2.2.5+0x44d8>
    be84:	lea    rbp,[rip+0x86175]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    be8b:	setne  r13b
    be8f:	and    rdi,0xfffffffffffffff8
    be93:	xor    eax,eax
    be95:	mov    DWORD PTR [rsp+0x64],esi
    be99:	sub    rcx,rdi
    be9c:	add    r13,0x100
    bea3:	add    ecx,0x100
    bea9:	shr    ecx,0x3
    beac:	rep stos QWORD PTR es:[rdi],rax
    beaf:	mov    eax,0xff
    beb4:	nop    DWORD PTR [rax+0x0]
    beb8:	mov    BYTE PTR [rbp+rax*1+0x0],al
    bebc:	sub    rax,0x1
    bec0:	cmp    rax,0xffffffffffffffff
    bec4:	jne    beb8 <__ctype_b_loc@plt+0x8548>
    bec6:	mov    DWORD PTR [rsp+0x60],0x9
    bece:	mov    r12,0xffffffffffffffff
    bed5:	xor    r15d,r15d
    bed8:	mov    QWORD PTR [rsp+0x18],0x1ff
    bee1:	mov    r8d,r15d
    bee4:	mov    r15,r12
    bee7:	mov    r12,r13
    beea:	mov    DWORD PTR [rsp+0x68],0x1ff
    bef2:	mov    DWORD PTR [rsp+0x14],0x0
    befa:	mov    r11,r14
    befd:	sar    r11,0x3
    bf01:	cmp    r11d,esi
    bf04:	jbe    c167 <__ctype_b_loc@plt+0x87f7>
    bf0a:	mov    DWORD PTR [rip+0x96110],0x0        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    bf14:	lea    rsi,[rip+0x980e5]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    bf1b:	mov    edi,DWORD PTR [rsp+0x6c]
    bf1f:	mov    edx,0x40000
    bf24:	mov    DWORD PTR [rsp+0x8],r8d
    bf29:	call   d060 <__ctype_b_loc@plt+0x96f0>
    bf2e:	mov    r8d,DWORD PTR [rsp+0x8]
    bf33:	cmp    eax,0xffffffff
    bf36:	mov    DWORD PTR [rsp+0x64],eax
    bf3a:	je     c4eb <__ctype_b_loc@plt+0x8b7b>
    bf40:	movsxd rax,DWORD PTR [rsp+0x64]
    bf45:	mov    esi,DWORD PTR [rip+0x960d9]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    bf4b:	add    QWORD PTR [rip+0x124ae],rax        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    bf52:	add    esi,eax
    bf54:	mov    DWORD PTR [rip+0x960ca],esi        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    bf5a:	mov    r10d,DWORD PTR [rsp+0x64]
    bf5f:	mov    ecx,esi
    bf61:	test   r10d,r10d
    bf64:	je     c30f <__ctype_b_loc@plt+0x899f>
    bf6a:	mov    eax,esi
    bf6c:	xor    edx,edx
    bf6e:	xor    r14d,r14d
    bf71:	div    DWORD PTR [rsp+0x60]
    bf75:	sub    rcx,rdx
    bf78:	lea    rax,[rcx*8+0x0]
    bf80:	mov    QWORD PTR [rsp+0x30],rax
    bf85:	test   rax,rax
    bf88:	jle    befa <__ctype_b_loc@plt+0x858a>
    bf8e:	cmp    r12,QWORD PTR [rsp+0x18]
    bf93:	jg     c3d6 <__ctype_b_loc@plt+0x8a66>
    bf99:	mov    eax,DWORD PTR [rsp+0x68]
    bf9d:	xor    r14d,r14d
    bfa0:	mov    QWORD PTR [rsp+0x20],rax
    bfa5:	movsxd rax,DWORD PTR [rsp+0x60]
    bfaa:	mov    QWORD PTR [rsp+0x28],rax
    bfaf:	mov    rax,r14
    bfb2:	mov    r14,r15
    bfb5:	mov    r15,rax
    bfb8:	nop    DWORD PTR [rax+rax*1+0x0]
    bfc0:	mov    rdx,r15
    bfc3:	lea    rdi,[rip+0x98036]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    bfca:	mov    r10,r14
    bfcd:	mov    QWORD PTR [rsp+0x8],r14
    bfd2:	sar    rdx,0x3
    bfd6:	lea    rsi,[rdi+rdx*1]
    bfda:	movzx  eax,BYTE PTR [rsi+0x1]
    bfde:	movzx  ecx,BYTE PTR [rsi+0x2]
    bfe2:	shl    rax,0x8
    bfe6:	shl    rcx,0x10
    bfea:	or     rax,rcx
    bfed:	movzx  ecx,BYTE PTR [rdi+rdx*1]
    bff1:	or     rax,rcx
    bff4:	mov    ecx,r15d
    bff7:	add    r15,QWORD PTR [rsp+0x28]
    bffc:	and    ecx,0x7
    bfff:	sar    rax,cl
    c002:	mov    rcx,QWORD PTR [rsp+0x20]
    c007:	and    rcx,rax
    c00a:	mov    r14,rcx
    c00d:	cmp    r10,0xffffffffffffffff
    c011:	je     c1c0 <__ctype_b_loc@plt+0x8850>
    c017:	cmp    rcx,0x100
    c01e:	je     c2d0 <__ctype_b_loc@plt+0x8960>
    c024:	cmp    rcx,r12
    c027:	jl     c300 <__ctype_b_loc@plt+0x8990>
    c02d:	jg     c472 <__ctype_b_loc@plt+0x8b02>
    c033:	movzx  eax,BYTE PTR [rsp+0x14]
    c038:	lea    rdx,[rip+0x423de]        # 4e41d <stderr@@GLIBC_2.2.5+0x343dd>
    c03f:	mov    BYTE PTR [rip+0x423d8],al        # 4e41d <stderr@@GLIBC_2.2.5+0x343dd>
    c045:	mov    rax,QWORD PTR [rsp+0x8]
    c04a:	jmp    c05f <__ctype_b_loc@plt+0x86ef>
    c04c:	nop    DWORD PTR [rax+0x0]
    c050:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
    c055:	movzx  eax,WORD PTR [rbx+rax*2]
    c059:	sub    rdx,0x1
    c05d:	mov    BYTE PTR [rdx],cl
    c05f:	cmp    rax,0xff
    c065:	jg     c050 <__ctype_b_loc@plt+0x86e0>
    c067:	movzx  esi,BYTE PTR [rbp+rax*1+0x0]
    c06c:	lea    r9,[rdx-0x1]
    c070:	mov    BYTE PTR [rdx-0x1],sil
    c074:	lea    rdx,[rip+0x423a3]        # 4e41e <stderr@@GLIBC_2.2.5+0x343de>
    c07b:	sub    rdx,r9
    c07e:	mov    BYTE PTR [rsp+0x5b],sil
    c083:	lea    r13d,[r8+rdx*1]
    c087:	mov    DWORD PTR [rsp+0x14],esi
    c08b:	mov    eax,edx
    c08d:	cmp    r13d,0x3ffff
    c094:	jg     c210 <__ctype_b_loc@plt+0x88a0>
    c09a:	movsxd rdi,r8d
    c09d:	lea    rax,[rip+0x43f5c]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c0a4:	movsxd rdx,edx
    c0a7:	mov    rsi,r9
    c0aa:	add    rdi,rax
    c0ad:	call   37c0 <memcpy@plt>
    c0b2:	mov    r8d,r13d
    c0b5:	cmp    QWORD PTR [rsp+0x38],r12
    c0ba:	jle    c0d4 <__ctype_b_loc@plt+0x8764>
    c0bc:	movzx  eax,WORD PTR [rsp+0x8]
    c0c1:	mov    WORD PTR [rbx+r12*2],ax
    c0c6:	movzx  eax,BYTE PTR [rsp+0x5b]
    c0cb:	mov    BYTE PTR [rbp+r12*1+0x0],al
    c0d0:	add    r12,0x1
    c0d4:	cmp    QWORD PTR [rsp+0x30],r15
    c0d9:	jle    c1ed <__ctype_b_loc@plt+0x887d>
    c0df:	cmp    r12,QWORD PTR [rsp+0x18]
    c0e4:	jle    bfc0 <__ctype_b_loc@plt+0x8650>
    c0ea:	mov    rax,r15
    c0ed:	mov    esi,DWORD PTR [rip+0x95f31]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    c0f3:	mov    r15,r14
    c0f6:	lea    r11,[rax-0x1]
    c0fa:	mov    edi,DWORD PTR [rsp+0x60]
    c0fe:	lea    ecx,[rdi*8+0x0]
    c105:	add    edi,0x1
    c108:	movsxd rcx,ecx
    c10b:	mov    DWORD PTR [rsp+0x60],edi
    c10f:	lea    rax,[rcx+r11*1]
    c113:	cqo    
    c115:	idiv   rcx
    c118:	mov    rax,QWORD PTR [rsp+0x38]
    c11d:	mov    QWORD PTR [rsp+0x18],rax
    c122:	sub    rcx,rdx
    c125:	cmp    DWORD PTR [rip+0xbef9],edi        # 18024 <__ctype_b_loc@plt+0x146b4>
    c12b:	lea    r14,[rcx+r11*1]
    c12f:	je     c144 <__ctype_b_loc@plt+0x87d4>
    c131:	mov    eax,0x1
    c136:	mov    ecx,edi
    c138:	shl    rax,cl
    c13b:	sub    rax,0x1
    c13f:	mov    QWORD PTR [rsp+0x18],rax
    c144:	movzx  ecx,BYTE PTR [rsp+0x60]
    c149:	mov    eax,0x1
    c14e:	mov    r11,r14
    c151:	sar    r11,0x3
    c155:	shl    eax,cl
    c157:	sub    eax,0x1
    c15a:	mov    DWORD PTR [rsp+0x68],eax
    c15e:	cmp    r11d,esi
    c161:	ja     bf0a <__ctype_b_loc@plt+0x859a>
    c167:	sub    esi,r11d
    c16a:	test   esi,esi
    c16c:	jle    c198 <__ctype_b_loc@plt+0x8828>
    c16e:	lea    rax,[rip+0x97e8b]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    c175:	lea    edi,[rsi-0x1]
    c178:	lea    rcx,[rax+0x1]
    c17c:	add    rdi,rcx
    c17f:	movsxd rcx,r11d
    c182:	nop    WORD PTR [rax+rax*1+0x0]
    c188:	movzx  edx,BYTE PTR [rax+rcx*1]
    c18c:	add    rax,0x1
    c190:	mov    BYTE PTR [rax-0x1],dl
    c193:	cmp    rdi,rax
    c196:	jne    c188 <__ctype_b_loc@plt+0x8818>
    c198:	mov    DWORD PTR [rip+0x95e86],esi        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    c19e:	cmp    esi,0x3f
    c1a1:	ja     bf5a <__ctype_b_loc@plt+0x85ea>
    c1a7:	mov    esi,esi
    c1a9:	lea    rax,[rip+0x97e50]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    c1b0:	add    rsi,rax
    c1b3:	jmp    bf1b <__ctype_b_loc@plt+0x85ab>
    c1b8:	nop    DWORD PTR [rax+rax*1+0x0]
    c1c0:	cmp    rcx,0xff
    c1c7:	jg     c4a3 <__ctype_b_loc@plt+0x8b33>
    c1cd:	movsxd rax,r8d
    c1d0:	lea    rsi,[rip+0x43e29]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c1d7:	mov    DWORD PTR [rsp+0x14],ecx
    c1db:	add    r8d,0x1
    c1df:	mov    BYTE PTR [rsi+rax*1],cl
    c1e2:	cmp    QWORD PTR [rsp+0x30],r15
    c1e7:	jg     c0df <__ctype_b_loc@plt+0x876f>
    c1ed:	mov    edx,DWORD PTR [rsp+0x64]
    c1f1:	mov    rax,r15
    c1f4:	mov    r15,r14
    c1f7:	mov    r14,rax
    c1fa:	test   edx,edx
    c1fc:	je     c32d <__ctype_b_loc@plt+0x89bd>
    c202:	mov    esi,DWORD PTR [rip+0x95e1c]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    c208:	jmp    befa <__ctype_b_loc@plt+0x858a>
    c20d:	nop    DWORD PTR [rax]
    c210:	mov    QWORD PTR [rsp+0x40],r12
    c215:	mov    r13,r9
    c218:	mov    r12d,r8d
    c21b:	mov    QWORD PTR [rsp+0x48],r14
    c220:	mov    QWORD PTR [rsp+0x50],r15
    c225:	jmp    c246 <__ctype_b_loc@plt+0x88d6>
    c227:	nop    WORD PTR [rax+rax*1+0x0]
    c230:	xor    r12d,r12d
    c233:	add    r13,r14
    c236:	lea    rdx,[rip+0x421e1]        # 4e41e <stderr@@GLIBC_2.2.5+0x343de>
    c23d:	sub    rdx,r13
    c240:	mov    eax,edx
    c242:	test   edx,edx
    c244:	jle    c2b0 <__ctype_b_loc@plt+0x8940>
    c246:	mov    ecx,0x40000
    c24b:	sub    ecx,r12d
    c24e:	cmp    ecx,eax
    c250:	cmovle eax,ecx
    c253:	movsxd r14,eax
    c256:	test   r14d,r14d
    c259:	jle    c276 <__ctype_b_loc@plt+0x8906>
    c25b:	movsxd rdi,r12d
    c25e:	lea    rax,[rip+0x43d9b]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c265:	mov    rdx,r14
    c268:	mov    rsi,r13
    c26b:	add    rdi,rax
    c26e:	add    r12d,r14d
    c271:	call   37c0 <memcpy@plt>
    c276:	cmp    r12d,0x3ffff
    c27d:	jle    c233 <__ctype_b_loc@plt+0x88c3>
    c27f:	mov    ecx,DWORD PTR [rip+0xde03]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    c285:	test   ecx,ecx
    c287:	jne    c230 <__ctype_b_loc@plt+0x88c0>
    c289:	mov    edi,DWORD PTR [rsp+0x5c]
    c28d:	mov    edx,r12d
    c290:	lea    rsi,[rip+0x43d69]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c297:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    c29c:	movsxd r8,r12d
    c29f:	xor    r12d,r12d
    c2a2:	add    QWORD PTR [rip+0x95d57],r8        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    c2a9:	jmp    c233 <__ctype_b_loc@plt+0x88c3>
    c2ab:	nop    DWORD PTR [rax+rax*1+0x0]
    c2b0:	mov    r8d,r12d
    c2b3:	mov    r14,QWORD PTR [rsp+0x48]
    c2b8:	mov    r15,QWORD PTR [rsp+0x50]
    c2bd:	mov    r12,QWORD PTR [rsp+0x40]
    c2c2:	jmp    c0b5 <__ctype_b_loc@plt+0x8745>
    c2c7:	nop    WORD PTR [rax+rax*1+0x0]
    c2d0:	mov    r9d,DWORD PTR [rip+0xc111]        # 183e8 <__ctype_b_loc@plt+0x14a78>
    c2d7:	test   r9d,r9d
    c2da:	jne    c354 <__ctype_b_loc@plt+0x89e4>
    c2dc:	mov    eax,0x100
    c2e1:	lea    rdx,[rip+0x42136]        # 4e41e <stderr@@GLIBC_2.2.5+0x343de>
    c2e8:	cmp    r12,0x100
    c2ef:	jne    c050 <__ctype_b_loc@plt+0x86e0>
    c2f5:	jmp    c033 <__ctype_b_loc@plt+0x86c3>
    c2fa:	nop    WORD PTR [rax+rax*1+0x0]
    c300:	mov    rax,rcx
    c303:	lea    rdx,[rip+0x42114]        # 4e41e <stderr@@GLIBC_2.2.5+0x343de>
    c30a:	jmp    c05f <__ctype_b_loc@plt+0x86ef>
    c30f:	mov    eax,DWORD PTR [rsp+0x60]
    c313:	shl    rcx,0x3
    c317:	sub    eax,0x1
    c31a:	cdqe   
    c31c:	sub    rcx,rax
    c31f:	mov    QWORD PTR [rsp+0x30],rcx
    c324:	test   rcx,rcx
    c327:	jg     bf8e <__ctype_b_loc@plt+0x861e>
    c32d:	mov    eax,DWORD PTR [rip+0xdd55]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    c333:	mov    r15d,r8d
    c336:	test   eax,eax
    c338:	jne    c343 <__ctype_b_loc@plt+0x89d3>
    c33a:	test   r8d,r8d
    c33d:	jg     c444 <__ctype_b_loc@plt+0x8ad4>
    c343:	add    rsp,0x78
    c347:	xor    eax,eax
    c349:	pop    rbx
    c34a:	pop    rbp
    c34b:	pop    r12
    c34d:	pop    r13
    c34f:	pop    r14
    c351:	pop    r15
    c353:	ret    
    c354:	lea    rdi,[rip+0x120cd]        # 1e428 <stderr@@GLIBC_2.2.5+0x43e8>
    c35b:	mov    rcx,rbx
    c35e:	lea    r11,[r15-0x1]
    c362:	xor    eax,eax
    c364:	and    rdi,0xfffffffffffffff8
    c368:	mov    r12d,0x100
    c36e:	mov    QWORD PTR [rip+0x120a7],0x0        # 1e420 <stderr@@GLIBC_2.2.5+0x43e0>
    c379:	mov    QWORD PTR [rip+0x12194],0x0        # 1e518 <stderr@@GLIBC_2.2.5+0x44d8>
    c384:	sub    rcx,rdi
    c387:	add    ecx,0x100
    c38d:	shr    ecx,0x3
    c390:	rep stos QWORD PTR es:[rdi],rax
    c393:	mov    DWORD PTR [rsp+0x68],0x1ff
    c39b:	mov    QWORD PTR [rsp+0x18],0x1ff
    c3a4:	mov    ecx,DWORD PTR [rsp+0x60]
    c3a8:	mov    esi,DWORD PTR [rip+0x95c76]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    c3ae:	mov    DWORD PTR [rsp+0x60],0x9
    c3b6:	mov    r15,QWORD PTR [rsp+0x8]
    c3bb:	shl    ecx,0x3
    c3be:	movsxd rcx,ecx
    c3c1:	lea    rax,[r11+rcx*1]
    c3c5:	cqo    
    c3c7:	idiv   rcx
    c3ca:	sub    rcx,rdx
    c3cd:	lea    r14,[rcx+r11*1]
    c3d1:	jmp    befa <__ctype_b_loc@plt+0x858a>
    c3d6:	mov    r11,0xffffffffffffffff
    c3dd:	jmp    c0fa <__ctype_b_loc@plt+0x878a>
    c3e2:	xor    edi,edi
    c3e4:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    c3e9:	jmp    bde0 <__ctype_b_loc@plt+0x8470>
    c3ee:	mov    DWORD PTR [rip+0xdc8c],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    c3f8:	jmp    be19 <__ctype_b_loc@plt+0x84a9>
    c3fd:	mov    rdx,QWORD PTR [rip+0x95c04]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    c404:	mov    rdi,QWORD PTR [rip+0xdc35]        # 1a040 <stderr@@GLIBC_2.2.5>
    c40b:	xor    eax,eax
    c40d:	mov    r9d,0x10
    c413:	lea    rcx,[rip+0x11be6]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    c41a:	lea    rsi,[rip+0x7087]        # 134a8 <__ctype_b_loc@plt+0xfb38>
    c421:	call   f390 <__ctype_b_loc@plt+0xba20>
    c426:	mov    eax,0x1
    c42b:	mov    DWORD PTR [rip+0xdc4f],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    c435:	add    rsp,0x78
    c439:	pop    rbx
    c43a:	pop    rbp
    c43b:	pop    r12
    c43d:	pop    r13
    c43f:	pop    r14
    c441:	pop    r15
    c443:	ret    
    c444:	mov    edi,DWORD PTR [rsp+0x5c]
    c448:	mov    edx,r8d
    c44b:	lea    rsi,[rip+0x43bae]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c452:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    c457:	movsxd r8,r15d
    c45a:	add    QWORD PTR [rip+0x95b9f],r8        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    c461:	add    rsp,0x78
    c465:	pop    rbx
    c466:	xor    eax,eax
    c468:	pop    rbp
    c469:	pop    r12
    c46b:	pop    r13
    c46d:	pop    r14
    c46f:	pop    r15
    c471:	ret    
    c472:	mov    edi,DWORD PTR [rip+0xdc10]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    c478:	mov    r15d,r8d
    c47b:	test   edi,edi
    c47d:	jne    c484 <__ctype_b_loc@plt+0x8b14>
    c47f:	test   r8d,r8d
    c482:	jg     c4f0 <__ctype_b_loc@plt+0x8b80>
    c484:	mov    esi,DWORD PTR [rip+0xdc0a]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    c48a:	lea    rdi,[rip+0x6fad]        # 1343e <__ctype_b_loc@plt+0xface>
    c491:	lea    rax,[rip+0x6fb8]        # 13450 <__ctype_b_loc@plt+0xfae0>
    c498:	test   esi,esi
    c49a:	cmove  rdi,rax
    c49e:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c4a3:	lea    rdi,[rip+0x6f94]        # 1343e <__ctype_b_loc@plt+0xface>
    c4aa:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c4af:	mov    rdx,QWORD PTR [rip+0x95b52]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    c4b6:	mov    rdi,QWORD PTR [rip+0xdb83]        # 1a040 <stderr@@GLIBC_2.2.5>
    c4bd:	lea    rcx,[rip+0x11b3c]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    c4c4:	xor    eax,eax
    c4c6:	lea    rsi,[rip+0x6fb3]        # 13480 <__ctype_b_loc@plt+0xfb10>
    c4cd:	call   f390 <__ctype_b_loc@plt+0xba20>
    c4d2:	mov    ebx,DWORD PTR [rip+0xdbac]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    c4d8:	mov    eax,DWORD PTR [rip+0xbb46]        # 18024 <__ctype_b_loc@plt+0x146b4>
    c4de:	test   ebx,ebx
    c4e0:	jne    be19 <__ctype_b_loc@plt+0x84a9>
    c4e6:	jmp    c3ee <__ctype_b_loc@plt+0x8a7e>
    c4eb:	call   d400 <__ctype_b_loc@plt+0x9a90>
    c4f0:	mov    edi,DWORD PTR [rsp+0x5c]
    c4f4:	mov    edx,r8d
    c4f7:	lea    rsi,[rip+0x43b02]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c4fe:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    c503:	movsxd r8,r15d
    c506:	add    QWORD PTR [rip+0x95af3],r8        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    c50d:	jmp    c484 <__ctype_b_loc@plt+0x8b14>
    c512:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c51c:	nop    DWORD PTR [rax+0x0]
    c520:	mov    eax,DWORD PTR [rip+0x41efe]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    c526:	cmp    eax,DWORD PTR [rip+0x95af8]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    c52c:	jae    c548 <__ctype_b_loc@plt+0x8bd8>
    c52e:	lea    edx,[rax+0x1]
    c531:	mov    DWORD PTR [rip+0x41eed],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    c537:	lea    rdx,[rip+0x97ac2]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    c53e:	movzx  eax,BYTE PTR [rdx+rax*1]
    c542:	ret    
    c543:	nop    DWORD PTR [rax+rax*1+0x0]
    c548:	sub    rsp,0x8
    c54c:	xor    edi,edi
    c54e:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    c553:	test   eax,eax
    c555:	js     c55c <__ctype_b_loc@plt+0x8bec>
    c557:	add    rsp,0x8
    c55b:	ret    
    c55c:	lea    rdi,[rip+0x6f85]        # 134e8 <__ctype_b_loc@plt+0xfb78>
    c563:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c568:	nop    DWORD PTR [rax+rax*1+0x0]
    c570:	endbr64 
    c574:	push   r15
    c576:	push   r14
    c578:	push   r13
    c57a:	push   r12
    c57c:	push   rbp
    c57d:	mov    ebp,0x4
    c582:	push   rbx
    c583:	xor    ebx,ebx
    c585:	sub    rsp,0x18
    c589:	mov    DWORD PTR [rip+0x84271],edi        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    c58f:	mov    DWORD PTR [rip+0x41e8b],esi        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    c595:	mov    QWORD PTR [rip+0x11928],0x0        # 1dec8 <stderr@@GLIBC_2.2.5+0x3e88>
    c5a0:	call   c520 <__ctype_b_loc@plt+0x8bb0>
    c5a5:	shl    rbx,0x8
    c5a9:	movzx  eax,al
    c5ac:	or     rbx,rax
    c5af:	mov    QWORD PTR [rip+0x11912],rbx        # 1dec8 <stderr@@GLIBC_2.2.5+0x3e88>
    c5b6:	sub    ebp,0x1
    c5b9:	jne    c5a0 <__ctype_b_loc@plt+0x8c30>
    c5bb:	call   c520 <__ctype_b_loc@plt+0x8bb0>
    c5c0:	movzx  eax,al
    c5c3:	lea    edx,[rax-0x1]
    c5c6:	mov    DWORD PTR [rip+0x118f4],eax        # 1dec0 <stderr@@GLIBC_2.2.5+0x3e80>
    c5cc:	cmp    edx,0x18
    c5cf:	ja     c9a4 <__ctype_b_loc@plt+0x9034>
    c5d5:	test   eax,eax
    c5d7:	je     c967 <__ctype_b_loc@plt+0x8ff7>
    c5dd:	mov    r13d,0x1
    c5e3:	xor    r12d,r12d
    c5e6:	mov    ebx,0x1
    c5eb:	lea    rbp,[rip+0x116ce]        # 1dcc0 <stderr@@GLIBC_2.2.5+0x3c80>
    c5f2:	nop    WORD PTR [rax+rax*1+0x0]
    c5f8:	call   c520 <__ctype_b_loc@plt+0x8bb0>
    c5fd:	mov    edi,DWORD PTR [rip+0x118bd]        # 1dec0 <stderr@@GLIBC_2.2.5+0x3e80>
    c603:	xor    edx,edx
    c605:	mov    esi,ebx
    c607:	movzx  eax,al
    c60a:	cmp    edi,r13d
    c60d:	mov    DWORD PTR [rbp+r13*4+0x0],eax
    c612:	sete   dl
    c615:	sub    esi,edx
    c617:	cmp    eax,esi
    c619:	jg     c998 <__ctype_b_loc@plt+0x9028>
    c61f:	sub    ebx,eax
    c621:	add    r13,0x1
    c625:	add    r12d,eax
    c628:	lea    ebx,[rbx+rbx*1+0x1]
    c62c:	cmp    edi,r13d
    c62f:	jge    c5f8 <__ctype_b_loc@plt+0x8c88>
    c631:	cmp    r12d,0xff
    c638:	jg     c998 <__ctype_b_loc@plt+0x9028>
    c63e:	movsxd rdx,edi
    c641:	mov    eax,DWORD PTR [rbp+rdx*4+0x0]
    c645:	add    eax,0x1
    c648:	mov    DWORD PTR [rbp+rdx*4+0x0],eax
    c64c:	test   edi,edi
    c64e:	jle    c97f <__ctype_b_loc@plt+0x900f>
    c654:	mov    r13d,0x1
    c65a:	xor    r14d,r14d
    c65d:	nop    DWORD PTR [rax]
    c660:	mov    r12d,DWORD PTR [rbp+r13*4+0x0]
    c665:	lea    rax,[rip+0x116d4]        # 1dd40 <stderr@@GLIBC_2.2.5+0x3d00>
    c66c:	mov    DWORD PTR [rax+r13*4],r14d
    c670:	test   r12d,r12d
    c673:	jle    c6b5 <__ctype_b_loc@plt+0x8d45>
    c675:	movsxd rax,r14d
    c678:	lea    rsi,[rip+0x11741]        # 1ddc0 <stderr@@GLIBC_2.2.5+0x3d80>
    c67f:	lea    ebx,[r12-0x1]
    c684:	lea    r15,[rax+rsi*1]
    c688:	add    rsi,0x1
    c68c:	mov    r12,rbx
    c68f:	add    rax,rsi
    c692:	add    rbx,rax
    c695:	nop    DWORD PTR [rax]
    c698:	call   c520 <__ctype_b_loc@plt+0x8bb0>
    c69d:	add    r15,0x1
    c6a1:	mov    BYTE PTR [r15-0x1],al
    c6a5:	cmp    rbx,r15
    c6a8:	jne    c698 <__ctype_b_loc@plt+0x8d28>
    c6aa:	mov    edi,DWORD PTR [rip+0x11810]        # 1dec0 <stderr@@GLIBC_2.2.5+0x3e80>
    c6b0:	lea    r14d,[r14+r12*1+0x1]
    c6b5:	add    r13,0x1
    c6b9:	cmp    edi,r13d
    c6bc:	jge    c660 <__ctype_b_loc@plt+0x8cf0>
    c6be:	movsxd rax,edi
    c6c1:	mov    esi,DWORD PTR [rbp+rax*4+0x0]
    c6c5:	lea    ecx,[rsi+0x1]
    c6c8:	mov    DWORD PTR [rsp+0x4],esi
    c6cc:	mov    DWORD PTR [rbp+rax*4+0x0],ecx
    c6d0:	test   edi,edi
    c6d2:	jle    c986 <__ctype_b_loc@plt+0x9016>
    c6d8:	xor    edx,edx
    c6da:	lea    r14,[rip+0x1155f]        # 1dc40 <stderr@@GLIBC_2.2.5+0x3c00>
    c6e1:	jmp    c6ec <__ctype_b_loc@plt+0x8d7c>
    c6e3:	nop    DWORD PTR [rax+rax*1+0x0]
    c6e8:	mov    ecx,DWORD PTR [rbp+rax*4+0x0]
    c6ec:	sar    edx,1
    c6ee:	lea    rsi,[rip+0x1164b]        # 1dd40 <stderr@@GLIBC_2.2.5+0x3d00>
    c6f5:	sub    DWORD PTR [rsi+rax*4],edx
    c6f8:	mov    DWORD PTR [r14+rax*4],edx
    c6fc:	sub    rax,0x1
    c700:	add    edx,ecx
    c702:	test   eax,eax
    c704:	jg     c6e8 <__ctype_b_loc@plt+0x8d78>
    c706:	sar    edx,1
    c708:	cmp    edx,0x1
    c70b:	jne    c986 <__ctype_b_loc@plt+0x9016>
    c711:	cmp    edi,0xc
    c714:	mov    eax,0xc
    c719:	mov    r10d,0x1
    c71f:	cmovg  edi,eax
    c722:	lea    rax,[rip+0x438d7]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c729:	mov    ecx,edi
    c72b:	mov    DWORD PTR [rip+0x114ff],edi        # 1dc30 <stderr@@GLIBC_2.2.5+0x3bf0>
    c731:	shl    edx,cl
    c733:	movsxd rsi,edx
    c736:	mov    r8,rsi
    c739:	add    rsi,rax
    c73c:	nop    DWORD PTR [rax+0x0]
    c740:	mov    eax,DWORD PTR [rbp+r10*4+0x0]
    c745:	mov    ecx,edi
    c747:	sub    ecx,r10d
    c74a:	shl    eax,cl
    c74c:	lea    r9d,[rax-0x1]
    c750:	test   eax,eax
    c752:	je     c779 <__ctype_b_loc@plt+0x8e09>
    c754:	mov    rdx,r9
    c757:	mov    ecx,r10d
    c75a:	mov    rax,rsi
    c75d:	not    rdx
    c760:	add    rdx,rsi
    c763:	nop    DWORD PTR [rax+rax*1+0x0]
    c768:	sub    rax,0x1
    c76c:	mov    BYTE PTR [rax],cl
    c76e:	cmp    rax,rdx
    c771:	jne    c768 <__ctype_b_loc@plt+0x8df8>
    c773:	not    r9
    c776:	add    rsi,r9
    c779:	add    r10,0x1
    c77d:	cmp    edi,r10d
    c780:	jge    c740 <__ctype_b_loc@plt+0x8dd0>
    c782:	lea    rax,[rip+0x43877]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c789:	cmp    rsi,rax
    c78c:	jbe    c7a3 <__ctype_b_loc@plt+0x8e33>
    c78e:	xchg   ax,ax
    c790:	sub    rsi,0x1
    c794:	lea    rax,[rip+0x43865]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c79b:	mov    BYTE PTR [rsi],0x0
    c79e:	cmp    rsi,rax
    c7a1:	jne    c790 <__ctype_b_loc@plt+0x8e20>
    c7a3:	lea    eax,[r8-0x1]
    c7a7:	xor    r15d,r15d
    c7aa:	xor    edx,edx
    c7ac:	mov    DWORD PTR [rip+0x1146a],0x0        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c7b6:	mov    DWORD PTR [rsp],eax
    c7b9:	cdqe   
    c7bb:	mov    QWORD PTR [rip+0x11462],0x0        # 1dc28 <stderr@@GLIBC_2.2.5+0x3be8>
    c7c6:	mov    QWORD PTR [rsp+0x8],rax
    c7cb:	jmp    c85e <__ctype_b_loc@plt+0x8eee>
    c7d0:	mov    ecx,edx
    c7d2:	mov    rax,r15
    c7d5:	lea    rsi,[rip+0x43824]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    c7dc:	sub    ecx,edi
    c7de:	shr    rax,cl
    c7e1:	and    eax,DWORD PTR [rsp]
    c7e4:	mov    ecx,eax
    c7e6:	movzx  r12d,BYTE PTR [rsi+rcx*1]
    c7eb:	test   r12d,r12d
    c7ee:	je     c8d0 <__ctype_b_loc@plt+0x8f60>
    c7f4:	sub    edi,r12d
    c7f7:	mov    ecx,edi
    c7f9:	shr    eax,cl
    c7fb:	cmp    eax,DWORD PTR [rsp+0x4]
    c7ff:	je     c898 <__ctype_b_loc@plt+0x8f28>
    c805:	lea    rdi,[rip+0x11534]        # 1dd40 <stderr@@GLIBC_2.2.5+0x3d00>
    c80c:	movsxd rcx,r12d
    c80f:	mov    edx,DWORD PTR [rip+0x9580b]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    c815:	add    eax,DWORD PTR [rdi+rcx*4]
    c818:	lea    rdi,[rip+0x115a1]        # 1ddc0 <stderr@@GLIBC_2.2.5+0x3d80>
    c81f:	movzx  eax,BYTE PTR [rdi+rax*1]
    c823:	lea    esi,[rdx+0x1]
    c826:	lea    rdi,[rip+0x857d3]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    c82d:	mov    DWORD PTR [rip+0x957ed],esi        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    c833:	mov    BYTE PTR [rdi+rdx*1],al
    c836:	cmp    esi,0x8000
    c83c:	je     c955 <__ctype_b_loc@plt+0x8fe5>
    c842:	mov    edx,DWORD PTR [rip+0x113d8]        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c848:	mov    r15,QWORD PTR [rip+0x113d9]        # 1dc28 <stderr@@GLIBC_2.2.5+0x3be8>
    c84f:	sub    edx,r12d
    c852:	mov    DWORD PTR [rip+0x113c8],edx        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c858:	mov    edi,DWORD PTR [rip+0x113d2]        # 1dc30 <stderr@@GLIBC_2.2.5+0x3bf0>
    c85e:	cmp    edx,edi
    c860:	jge    c7d0 <__ctype_b_loc@plt+0x8e60>
    c866:	call   c520 <__ctype_b_loc@plt+0x8bb0>
    c86b:	movzx  ecx,al
    c86e:	mov    rax,r15
    c871:	shl    rax,0x8
    c875:	or     rax,rcx
    c878:	mov    QWORD PTR [rip+0x113a9],rax        # 1dc28 <stderr@@GLIBC_2.2.5+0x3be8>
    c87f:	mov    r15,rax
    c882:	mov    eax,DWORD PTR [rip+0x11398]        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c888:	lea    edx,[rax+0x8]
    c88b:	mov    DWORD PTR [rip+0x1138f],edx        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c891:	jmp    c858 <__ctype_b_loc@plt+0x8ee8>
    c893:	nop    DWORD PTR [rax+rax*1+0x0]
    c898:	cmp    DWORD PTR [rip+0x11621],r12d        # 1dec0 <stderr@@GLIBC_2.2.5+0x3e80>
    c89f:	jne    c805 <__ctype_b_loc@plt+0x8e95>
    c8a5:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    c8aa:	mov    eax,DWORD PTR [rip+0x95750]        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    c8b0:	cmp    rax,QWORD PTR [rip+0x11611]        # 1dec8 <stderr@@GLIBC_2.2.5+0x3e88>
    c8b7:	jne    c9b0 <__ctype_b_loc@plt+0x9040>
    c8bd:	add    rsp,0x18
    c8c1:	xor    eax,eax
    c8c3:	pop    rbx
    c8c4:	pop    rbp
    c8c5:	pop    r12
    c8c7:	pop    r13
    c8c9:	pop    r14
    c8cb:	pop    r15
    c8cd:	ret    
    c8ce:	xchg   ax,ax
    c8d0:	movsxd rcx,edi
    c8d3:	mov    r13,QWORD PTR [rsp+0x8]
    c8d8:	cmp    eax,DWORD PTR [r14+rcx*4]
    c8dc:	jae    c95f <__ctype_b_loc@plt+0x8fef>
    c8e2:	add    edi,0x1
    c8e5:	movsxd rbx,edi
    c8e8:	nop    DWORD PTR [rax+rax*1+0x0]
    c8f0:	mov    r12d,ebx
    c8f3:	lea    r13,[r13+r13*1+0x1]
    c8f8:	mov    ebp,ebx
    c8fa:	cmp    ebx,edx
    c8fc:	jle    c92f <__ctype_b_loc@plt+0x8fbf>
    c8fe:	xchg   ax,ax
    c900:	call   c520 <__ctype_b_loc@plt+0x8bb0>
    c905:	mov    rdx,r15
    c908:	movzx  eax,al
    c90b:	shl    rdx,0x8
    c90f:	or     rdx,rax
    c912:	mov    eax,DWORD PTR [rip+0x11308]        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c918:	mov    QWORD PTR [rip+0x11309],rdx        # 1dc28 <stderr@@GLIBC_2.2.5+0x3be8>
    c91f:	mov    r15,rdx
    c922:	lea    edx,[rax+0x8]
    c925:	mov    DWORD PTR [rip+0x112f5],edx        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c92b:	cmp    edx,ebp
    c92d:	jl     c900 <__ctype_b_loc@plt+0x8f90>
    c92f:	mov    ecx,edx
    c931:	mov    rax,r15
    c934:	sub    ecx,r12d
    c937:	shr    rax,cl
    c93a:	mov    ecx,DWORD PTR [r14+rbx*4]
    c93e:	add    rbx,0x1
    c942:	and    eax,r13d
    c945:	cmp    ecx,eax
    c947:	jbe    c7fb <__ctype_b_loc@plt+0x8e8b>
    c94d:	mov    edx,DWORD PTR [rip+0x112cd]        # 1dc20 <stderr@@GLIBC_2.2.5+0x3be0>
    c953:	jmp    c8f0 <__ctype_b_loc@plt+0x8f80>
    c955:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    c95a:	jmp    c842 <__ctype_b_loc@plt+0x8ed2>
    c95f:	mov    r12d,edi
    c962:	jmp    c7fb <__ctype_b_loc@plt+0x8e8b>
    c967:	mov    eax,DWORD PTR [rip+0x11353]        # 1dcc0 <stderr@@GLIBC_2.2.5+0x3c80>
    c96d:	lea    rbp,[rip+0x1134c]        # 1dcc0 <stderr@@GLIBC_2.2.5+0x3c80>
    c974:	xor    edx,edx
    c976:	add    eax,0x1
    c979:	mov    DWORD PTR [rip+0x11341],eax        # 1dcc0 <stderr@@GLIBC_2.2.5+0x3c80>
    c97f:	add    eax,0x1
    c982:	mov    DWORD PTR [rbp+rdx*4+0x0],eax
    c986:	lea    rdi,[rip+0x6c1b]        # 135a8 <__ctype_b_loc@plt+0xfc38>
    c98d:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c992:	nop    WORD PTR [rax+rax*1+0x0]
    c998:	lea    rdi,[rip+0x6bc1]        # 13560 <__ctype_b_loc@plt+0xfbf0>
    c99f:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c9a4:	lea    rdi,[rip+0x6b75]        # 13520 <__ctype_b_loc@plt+0xfbb0>
    c9ab:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c9b0:	lea    rdi,[rip+0x6bc9]        # 13580 <__ctype_b_loc@plt+0xfc10>
    c9b7:	call   d310 <__ctype_b_loc@plt+0x99a0>
    c9bc:	nop    DWORD PTR [rax+0x0]
    c9c0:	endbr64 
    c9c4:	sub    rsp,0x8
    c9c8:	mov    eax,DWORD PTR [rip+0x41a56]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    c9ce:	mov    DWORD PTR [rip+0x83e2c],edi        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    c9d4:	lea    rdx,[rip+0x97625]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    c9db:	mov    rcx,rax
    c9de:	add    rax,rdx
    c9e1:	movzx  esi,WORD PTR [rax+0x1a]
    c9e5:	movzx  edx,WORD PTR [rax+0x1c]
    c9e9:	lea    edx,[rsi+rdx*1+0x1e]
    c9ed:	add    edx,ecx
    c9ef:	cmp    edx,DWORD PTR [rip+0x9562f]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    c9f5:	mov    DWORD PTR [rip+0x41a29],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    c9fb:	ja     ca05 <__ctype_b_loc@plt+0x9095>
    c9fd:	cmp    DWORD PTR [rax],0x4034b50
    ca03:	je     ca40 <__ctype_b_loc@plt+0x90d0>
    ca05:	mov    rdx,QWORD PTR [rip+0x955fc]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    ca0c:	lea    rcx,[rip+0x115ed]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    ca13:	lea    rsi,[rip+0x6bae]        # 135c8 <__ctype_b_loc@plt+0xfc58>
    ca1a:	mov    rdi,QWORD PTR [rip+0xd61f]        # 1a040 <stderr@@GLIBC_2.2.5>
    ca21:	xor    eax,eax
    ca23:	call   f390 <__ctype_b_loc@plt+0xba20>
    ca28:	mov    eax,0x1
    ca2d:	mov    DWORD PTR [rip+0xd64d],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    ca37:	add    rsp,0x8
    ca3b:	ret    
    ca3c:	nop    DWORD PTR [rax+0x0]
    ca40:	movzx  ecx,BYTE PTR [rax+0x8]
    ca44:	lea    rsi,[rip+0x6b9d]        # 135e8 <__ctype_b_loc@plt+0xfc78>
    ca4b:	mov    edx,ecx
    ca4d:	mov    DWORD PTR [rip+0xb5cd],ecx        # 18020 <__ctype_b_loc@plt+0x146b0>
    ca53:	lea    rcx,[rip+0x115a6]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    ca5a:	and    edx,0xf7
    ca60:	mov    rdx,QWORD PTR [rip+0x955a1]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    ca67:	jne    ca1a <__ctype_b_loc@plt+0x90aa>
    ca69:	movzx  eax,BYTE PTR [rax+0x6]
    ca6d:	mov    edx,eax
    ca6f:	and    edx,0x1
    ca72:	mov    DWORD PTR [rip+0x11460],edx        # 1ded8 <stderr@@GLIBC_2.2.5+0x3e98>
    ca78:	test   al,0x1
    ca7a:	jne    caa0 <__ctype_b_loc@plt+0x9130>
    ca7c:	mov    DWORD PTR [rip+0x1144e],0x1        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    ca86:	shr    al,0x3
    ca89:	and    eax,0x1
    ca8c:	mov    DWORD PTR [rip+0x1143e],eax        # 1ded0 <stderr@@GLIBC_2.2.5+0x3e90>
    ca92:	xor    eax,eax
    ca94:	add    rsp,0x8
    ca98:	ret    
    ca99:	nop    DWORD PTR [rax+0x0]
    caa0:	mov    rdx,QWORD PTR [rip+0x95561]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    caa7:	lea    rcx,[rip+0x11552]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    caae:	lea    rsi,[rip+0x6b73]        # 13628 <__ctype_b_loc@plt+0xfcb8>
    cab5:	jmp    ca1a <__ctype_b_loc@plt+0x90aa>
    caba:	nop    WORD PTR [rax+rax*1+0x0]
    cac0:	endbr64 
    cac4:	push   r14
    cac6:	push   r13
    cac8:	push   r12
    caca:	push   rbp
    cacb:	push   rbx
    cacc:	sub    rsp,0x20
    cad0:	mov    rax,QWORD PTR fs:0x28
    cad9:	mov    QWORD PTR [rsp+0x18],rax
    cade:	xor    eax,eax
    cae0:	mov    DWORD PTR [rip+0x83d1a],edi        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    cae6:	xor    edi,edi
    cae8:	mov    DWORD PTR [rip+0x41932],esi        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    caee:	xor    esi,esi
    caf0:	call   cf80 <__ctype_b_loc@plt+0x9610>
    caf5:	mov    ebp,DWORD PTR [rip+0x113d9]        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    cafb:	test   ebp,ebp
    cafd:	je     cbd8 <__ctype_b_loc@plt+0x9268>
    cb03:	mov    ebx,DWORD PTR [rip+0x113c7]        # 1ded0 <stderr@@GLIBC_2.2.5+0x3e90>
    cb09:	test   ebx,ebx
    cb0b:	jne    cda0 <__ctype_b_loc@plt+0x9430>
    cb11:	mov    ebp,DWORD PTR [rip+0x974f7]        # a400e <stderr@@GLIBC_2.2.5+0x89fce>
    cb17:	mov    r12d,DWORD PTR [rip+0x974f8]        # a4016 <stderr@@GLIBC_2.2.5+0x89fd6>
    cb1e:	mov    eax,DWORD PTR [rip+0xb4fc]        # 18020 <__ctype_b_loc@plt+0x146b0>
    cb24:	cmp    eax,0x8
    cb27:	je     cbea <__ctype_b_loc@plt+0x927a>
    cb2d:	test   eax,eax
    cb2f:	jne    cf36 <__ctype_b_loc@plt+0x95c6>
    cb35:	mov    ecx,DWORD PTR [rip+0x974d7]        # a4012 <stderr@@GLIBC_2.2.5+0x89fd2>
    cb3b:	mov    r11d,DWORD PTR [rip+0x11396]        # 1ded8 <stderr@@GLIBC_2.2.5+0x3e98>
    cb42:	mov    edx,DWORD PTR [rip+0x974ce]        # a4016 <stderr@@GLIBC_2.2.5+0x89fd6>
    cb48:	mov    rax,rcx
    cb4b:	test   r11d,r11d
    cb4e:	je     cb54 <__ctype_b_loc@plt+0x91e4>
    cb50:	lea    rax,[rcx-0xc]
    cb54:	cmp    rdx,rax
    cb57:	jne    cf5d <__ctype_b_loc@plt+0x95ed>
    cb5d:	lea    r13,[rdx-0x1]
    cb61:	lea    r14,[rip+0x85498]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    cb68:	lea    rbx,[rip+0x97491]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    cb6f:	test   rdx,rdx
    cb72:	jne    cbba <__ctype_b_loc@plt+0x924a>
    cb74:	jmp    cdc8 <__ctype_b_loc@plt+0x9458>
    cb79:	nop    DWORD PTR [rax+0x0]
    cb80:	lea    edx,[rax+0x1]
    cb83:	movzx  eax,BYTE PTR [rbx+rax*1]
    cb87:	mov    DWORD PTR [rip+0x41897],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    cb8d:	mov    edx,DWORD PTR [rip+0x9548d]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    cb93:	lea    ecx,[rdx+0x1]
    cb96:	mov    BYTE PTR [r14+rdx*1],al
    cb9a:	mov    DWORD PTR [rip+0x95480],ecx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    cba0:	cmp    ecx,0x8000
    cba6:	je     cdb0 <__ctype_b_loc@plt+0x9440>
    cbac:	sub    r13,0x1
    cbb0:	cmp    r13,0xffffffffffffffff
    cbb4:	je     cdc8 <__ctype_b_loc@plt+0x9458>
    cbba:	mov    eax,DWORD PTR [rip+0x41864]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    cbc0:	cmp    eax,DWORD PTR [rip+0x9545e]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    cbc6:	jb     cb80 <__ctype_b_loc@plt+0x9210>
    cbc8:	xor    edi,edi
    cbca:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    cbcf:	jmp    cb8d <__ctype_b_loc@plt+0x921d>
    cbd1:	nop    DWORD PTR [rax+0x0]
    cbd8:	cmp    DWORD PTR [rip+0xb441],0x8        # 18020 <__ctype_b_loc@plt+0x146b0>
    cbdf:	jne    cf36 <__ctype_b_loc@plt+0x95c6>
    cbe5:	xor    r12d,r12d
    cbe8:	xor    ebp,ebp
    cbea:	call   98f0 <__ctype_b_loc@plt+0x5f80>
    cbef:	cmp    eax,0x3
    cbf2:	je     cf47 <__ctype_b_loc@plt+0x95d7>
    cbf8:	test   eax,eax
    cbfa:	jne    cf4c <__ctype_b_loc@plt+0x95dc>
    cc00:	mov    r10d,DWORD PTR [rip+0x112cd]        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    cc07:	test   r10d,r10d
    cc0a:	jne    cddd <__ctype_b_loc@plt+0x946d>
    cc10:	mov    rbx,rsp
    cc13:	lea    rbp,[rsp+0x8]
    cc18:	lea    r12,[rip+0x973e1]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    cc1f:	jmp    cc42 <__ctype_b_loc@plt+0x92d2>
    cc21:	nop    DWORD PTR [rax+0x0]
    cc28:	lea    edx,[rax+0x1]
    cc2b:	movzx  eax,BYTE PTR [r12+rax*1]
    cc30:	add    rbx,0x1
    cc34:	mov    DWORD PTR [rip+0x417ea],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    cc3a:	mov    BYTE PTR [rbx-0x1],al
    cc3d:	cmp    rbx,rbp
    cc40:	je     cc63 <__ctype_b_loc@plt+0x92f3>
    cc42:	mov    eax,DWORD PTR [rip+0x417dc]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    cc48:	cmp    eax,DWORD PTR [rip+0x953d6]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    cc4e:	jb     cc28 <__ctype_b_loc@plt+0x92b8>
    cc50:	xor    edi,edi
    cc52:	add    rbx,0x1
    cc56:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    cc5b:	mov    BYTE PTR [rbx-0x1],al
    cc5e:	cmp    rbx,rbp
    cc61:	jne    cc42 <__ctype_b_loc@plt+0x92d2>
    cc63:	mov    ebp,DWORD PTR [rsp]
    cc66:	mov    r12d,DWORD PTR [rsp+0x4]
    cc6b:	xor    esi,esi
    cc6d:	lea    rdi,[rip+0x4338c]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    cc74:	xor    r13d,r13d
    cc77:	call   cf80 <__ctype_b_loc@plt+0x9610>
    cc7c:	cmp    rax,rbp
    cc7f:	je     ccaa <__ctype_b_loc@plt+0x933a>
    cc81:	mov    rdx,QWORD PTR [rip+0x95380]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    cc88:	mov    rdi,QWORD PTR [rip+0xd3b1]        # 1a040 <stderr@@GLIBC_2.2.5>
    cc8f:	lea    rcx,[rip+0x1136a]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    cc96:	lea    rsi,[rip+0x6a33]        # 136d0 <__ctype_b_loc@plt+0xfd60>
    cc9d:	xor    eax,eax
    cc9f:	mov    r13d,0x1
    cca5:	call   f390 <__ctype_b_loc@plt+0xba20>
    ccaa:	mov    eax,DWORD PTR [rip+0x95350]        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    ccb0:	cmp    rax,r12
    ccb3:	je     ce50 <__ctype_b_loc@plt+0x94e0>
    ccb9:	mov    rdx,QWORD PTR [rip+0x95348]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    ccc0:	mov    rdi,QWORD PTR [rip+0xd379]        # 1a040 <stderr@@GLIBC_2.2.5>
    ccc7:	lea    rcx,[rip+0x11332]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    ccce:	xor    eax,eax
    ccd0:	lea    rsi,[rip+0x6a29]        # 13700 <__ctype_b_loc@plt+0xfd90>
    ccd7:	call   f390 <__ctype_b_loc@plt+0xba20>
    ccdc:	mov    r8d,DWORD PTR [rip+0x111f1]        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    cce3:	test   r8d,r8d
    cce6:	je     ceaa <__ctype_b_loc@plt+0x953a>
    ccec:	mov    edx,DWORD PTR [rip+0x41732]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    ccf2:	lea    eax,[rdx+0x4]
    ccf5:	cmp    eax,DWORD PTR [rip+0x95329]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    ccfb:	jae    cea0 <__ctype_b_loc@plt+0x9530>
    cd01:	mov    r13d,0x1
    cd07:	lea    rax,[rip+0x972f5]        # a4003 <stderr@@GLIBC_2.2.5+0x89fc3>
    cd0e:	lea    rcx,[rip+0x972ed]        # a4002 <stderr@@GLIBC_2.2.5+0x89fc2>
    cd15:	movzx  eax,BYTE PTR [rdx+rax*1]
    cd19:	movzx  ecx,BYTE PTR [rcx+rdx*1]
    cd1d:	lea    rsi,[rip+0x972dc]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    cd24:	shl    eax,0x8
    cd27:	or     eax,ecx
    cd29:	lea    rcx,[rip+0x972d1]        # a4001 <stderr@@GLIBC_2.2.5+0x89fc1>
    cd30:	movzx  ecx,BYTE PTR [rdx+rcx*1]
    cd34:	movzx  edx,BYTE PTR [rsi+rdx*1]
    cd38:	cdqe   
    cd3a:	shl    rax,0x10
    cd3e:	shl    ecx,0x8
    cd41:	or     edx,ecx
    cd43:	movsxd rdx,edx
    cd46:	or     rax,rdx
    cd49:	cmp    rax,0x4034b50
    cd4f:	je     cee0 <__ctype_b_loc@plt+0x9570>
    cd55:	mov    DWORD PTR [rip+0x11175],0x0        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    cd5f:	mov    DWORD PTR [rip+0x11167],0x0        # 1ded0 <stderr@@GLIBC_2.2.5+0x3e90>
    cd69:	test   r13d,r13d
    cd6c:	jne    ceb4 <__ctype_b_loc@plt+0x9544>
    cd72:	mov    rax,QWORD PTR [rsp+0x18]
    cd77:	xor    rax,QWORD PTR fs:0x28
    cd80:	jne    cf42 <__ctype_b_loc@plt+0x95d2>
    cd86:	add    rsp,0x20
    cd8a:	mov    eax,r13d
    cd8d:	pop    rbx
    cd8e:	pop    rbp
    cd8f:	pop    r12
    cd91:	pop    r13
    cd93:	pop    r14
    cd95:	ret    
    cd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cda0:	xor    r12d,r12d
    cda3:	xor    ebp,ebp
    cda5:	jmp    cb1e <__ctype_b_loc@plt+0x91ae>
    cdaa:	nop    WORD PTR [rax+rax*1+0x0]
    cdb0:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    cdb5:	sub    r13,0x1
    cdb9:	cmp    r13,0xffffffffffffffff
    cdbd:	jne    cbba <__ctype_b_loc@plt+0x924a>
    cdc3:	nop    DWORD PTR [rax+rax*1+0x0]
    cdc8:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    cdcd:	mov    r10d,DWORD PTR [rip+0x11100]        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    cdd4:	test   r10d,r10d
    cdd7:	je     cc10 <__ctype_b_loc@plt+0x92a0>
    cddd:	mov    r9d,DWORD PTR [rip+0x110ec]        # 1ded0 <stderr@@GLIBC_2.2.5+0x3e90>
    cde4:	test   r9d,r9d
    cde7:	je     cc6b <__ctype_b_loc@plt+0x92fb>
    cded:	mov    rbx,rsp
    cdf0:	lea    rbp,[rsp+0x10]
    cdf5:	lea    r12,[rip+0x97204]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    cdfc:	jmp    ce1a <__ctype_b_loc@plt+0x94aa>
    cdfe:	xchg   ax,ax
    ce00:	lea    edx,[rax+0x1]
    ce03:	movzx  eax,BYTE PTR [r12+rax*1]
    ce08:	add    rbx,0x1
    ce0c:	mov    DWORD PTR [rip+0x41612],edx        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    ce12:	mov    BYTE PTR [rbx-0x1],al
    ce15:	cmp    rbx,rbp
    ce18:	je     ce3b <__ctype_b_loc@plt+0x94cb>
    ce1a:	mov    eax,DWORD PTR [rip+0x41604]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    ce20:	cmp    eax,DWORD PTR [rip+0x951fe]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    ce26:	jb     ce00 <__ctype_b_loc@plt+0x9490>
    ce28:	xor    edi,edi
    ce2a:	add    rbx,0x1
    ce2e:	call   d6f0 <__ctype_b_loc@plt+0x9d80>
    ce33:	mov    BYTE PTR [rbx-0x1],al
    ce36:	cmp    rbx,rbp
    ce39:	jne    ce1a <__ctype_b_loc@plt+0x94aa>
    ce3b:	mov    ebp,DWORD PTR [rsp+0x4]
    ce3f:	mov    r12d,DWORD PTR [rsp+0xc]
    ce44:	jmp    cc6b <__ctype_b_loc@plt+0x92fb>
    ce49:	nop    DWORD PTR [rax+0x0]
    ce50:	mov    edi,DWORD PTR [rip+0x1107e]        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    ce56:	test   edi,edi
    ce58:	je     cd55 <__ctype_b_loc@plt+0x93e5>
    ce5e:	mov    edx,DWORD PTR [rip+0x415c0]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    ce64:	lea    eax,[rdx+0x4]
    ce67:	cmp    eax,DWORD PTR [rip+0x951b7]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    ce6d:	jae    cd55 <__ctype_b_loc@plt+0x93e5>
    ce73:	jmp    cd07 <__ctype_b_loc@plt+0x9397>
    ce78:	mov    rdx,QWORD PTR [rip+0x95189]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    ce7f:	mov    rdi,QWORD PTR [rip+0xd1ba]        # 1a040 <stderr@@GLIBC_2.2.5>
    ce86:	lea    rcx,[rip+0x11173]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    ce8d:	xor    eax,eax
    ce8f:	lea    rsi,[rip+0x68ca]        # 13760 <__ctype_b_loc@plt+0xfdf0>
    ce96:	call   f390 <__ctype_b_loc@plt+0xba20>
    ce9b:	nop    DWORD PTR [rax+rax*1+0x0]
    cea0:	mov    DWORD PTR [rip+0x1102a],0x0        # 1ded4 <stderr@@GLIBC_2.2.5+0x3e94>
    ceaa:	mov    DWORD PTR [rip+0x1101c],0x0        # 1ded0 <stderr@@GLIBC_2.2.5+0x3e90>
    ceb4:	mov    DWORD PTR [rip+0xd1c6],0x1        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    cebe:	mov    eax,DWORD PTR [rip+0xd1c4]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    cec4:	test   eax,eax
    cec6:	je     cf58 <__ctype_b_loc@plt+0x95e8>
    cecc:	mov    r13d,0x1
    ced2:	jmp    cd72 <__ctype_b_loc@plt+0x9402>
    ced7:	nop    WORD PTR [rax+rax*1+0x0]
    cee0:	mov    esi,DWORD PTR [rip+0xd1ae]        # 1a094 <stderr@@GLIBC_2.2.5+0x54>
    cee6:	test   esi,esi
    cee8:	je     ce78 <__ctype_b_loc@plt+0x9508>
    ceea:	mov    ecx,DWORD PTR [rip+0xd19c]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    cef0:	test   ecx,ecx
    cef2:	je     cf11 <__ctype_b_loc@plt+0x95a1>
    cef4:	mov    edx,DWORD PTR [rip+0xd18a]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    cefa:	test   edx,edx
    cefc:	jne    cd55 <__ctype_b_loc@plt+0x93e5>
    cf02:	mov    DWORD PTR [rip+0xd178],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    cf0c:	jmp    cd55 <__ctype_b_loc@plt+0x93e5>
    cf11:	mov    rdx,QWORD PTR [rip+0x950f0]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    cf18:	mov    rdi,QWORD PTR [rip+0xd121]        # 1a040 <stderr@@GLIBC_2.2.5>
    cf1f:	lea    rcx,[rip+0x110da]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    cf26:	xor    eax,eax
    cf28:	lea    rsi,[rip+0x6801]        # 13730 <__ctype_b_loc@plt+0xfdc0>
    cf2f:	call   f390 <__ctype_b_loc@plt+0xba20>
    cf34:	jmp    cef4 <__ctype_b_loc@plt+0x9584>
    cf36:	lea    rdi,[rip+0x6773]        # 136b0 <__ctype_b_loc@plt+0xfd40>
    cf3d:	call   d310 <__ctype_b_loc@plt+0x99a0>
    cf42:	call   3680 <__stack_chk_fail@plt>
    cf47:	call   d350 <__ctype_b_loc@plt+0x99e0>
    cf4c:	lea    rdi,[rip+0x66fd]        # 13650 <__ctype_b_loc@plt+0xfce0>
    cf53:	call   d310 <__ctype_b_loc@plt+0x99a0>
    cf58:	call   8300 <__ctype_b_loc@plt+0x4990>
    cf5d:	mov    rdi,QWORD PTR [rip+0xd0dc]        # 1a040 <stderr@@GLIBC_2.2.5>
    cf64:	lea    rsi,[rip+0x6822]        # 1378d <__ctype_b_loc@plt+0xfe1d>
    cf6b:	xor    eax,eax
    cf6d:	call   f390 <__ctype_b_loc@plt+0xba20>
    cf72:	lea    rdi,[rip+0x6707]        # 13680 <__ctype_b_loc@plt+0xfd10>
    cf79:	call   d310 <__ctype_b_loc@plt+0x99a0>
    cf7e:	xchg   ax,ax
    cf80:	endbr64 
    cf84:	xor    eax,eax
    cf86:	mov    edx,0xffffffff
    cf8b:	test   rdi,rdi
    cf8e:	je     cfd1 <__ctype_b_loc@plt+0x9661>
    cf90:	mov    rdx,QWORD PTR [rip+0xb459]        # 183f0 <__ctype_b_loc@plt+0x14a80>
    cf97:	test   esi,esi
    cf99:	je     cfc9 <__ctype_b_loc@plt+0x9659>
    cf9b:	lea    eax,[rsi-0x1]
    cf9e:	lea    rcx,[rip+0x687b]        # 13820 <__ctype_b_loc@plt+0xfeb0>
    cfa5:	lea    rsi,[rdi+rax*1+0x1]
    cfaa:	nop    WORD PTR [rax+rax*1+0x0]
    cfb0:	movzx  eax,BYTE PTR [rdi]
    cfb3:	add    rdi,0x1
    cfb7:	xor    eax,edx
    cfb9:	shr    rdx,0x8
    cfbd:	movzx  eax,al
    cfc0:	xor    rdx,QWORD PTR [rcx+rax*8]
    cfc4:	cmp    rdi,rsi
    cfc7:	jne    cfb0 <__ctype_b_loc@plt+0x9640>
    cfc9:	mov    eax,0xffffffff
    cfce:	xor    rax,rdx
    cfd1:	mov    QWORD PTR [rip+0xb418],rdx        # 183f0 <__ctype_b_loc@plt+0x14a80>
    cfd8:	ret    
    cfd9:	nop    DWORD PTR [rax+0x0]
    cfe0:	endbr64 
    cfe4:	mov    eax,0xffffffff
    cfe9:	xor    rax,QWORD PTR [rip+0xb400]        # 183f0 <__ctype_b_loc@plt+0x14a80>
    cff0:	ret    
    cff1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    cffc:	nop    DWORD PTR [rax+0x0]
    d000:	endbr64 
    d004:	mov    eax,0xffffffff
    d009:	xor    rdi,rax
    d00c:	mov    QWORD PTR [rip+0xb3dd],rdi        # 183f0 <__ctype_b_loc@plt+0x14a80>
    d013:	ret    
    d014:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d01f:	nop
    d020:	endbr64 
    d024:	mov    DWORD PTR [rip+0x94ff2],0x0        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d02e:	mov    DWORD PTR [rip+0x413ec],0x0        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    d038:	mov    DWORD PTR [rip+0x94fe2],0x0        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d042:	mov    QWORD PTR [rip+0x94fb3],0x0        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    d04d:	mov    QWORD PTR [rip+0x113a8],0x0        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    d058:	ret    
    d059:	nop    DWORD PTR [rax+0x0]
    d060:	endbr64 
    d064:	test   edx,edx
    d066:	mov    eax,0x7fffffff
    d06b:	push   r14
    d06d:	cmovs  edx,eax
    d070:	push   r13
    d072:	mov    r13,rsi
    d075:	push   r12
    d077:	push   rbp
    d078:	mov    r12d,edx
    d07b:	mov    ebp,edi
    d07d:	push   rbx
    d07e:	mov    rdx,r12
    d081:	call   3710 <read@plt>
    d086:	mov    r14d,eax
    d089:	test   eax,eax
    d08b:	js     d0a0 <__ctype_b_loc@plt+0x9730>
    d08d:	pop    rbx
    d08e:	mov    eax,r14d
    d091:	pop    rbp
    d092:	pop    r12
    d094:	pop    r13
    d096:	pop    r14
    d098:	ret    
    d099:	nop    DWORD PTR [rax+0x0]
    d0a0:	call   3560 <__errno_location@plt>
    d0a5:	cmp    DWORD PTR [rax],0xb
    d0a8:	mov    rbx,rax
    d0ab:	jne    d08d <__ctype_b_loc@plt+0x971d>
    d0ad:	xor    eax,eax
    d0af:	mov    esi,0x3
    d0b4:	mov    edi,ebp
    d0b6:	call   f0f0 <__ctype_b_loc@plt+0xb780>
    d0bb:	test   eax,eax
    d0bd:	js     d08d <__ctype_b_loc@plt+0x971d>
    d0bf:	test   ah,0x8
    d0c2:	jne    d0d0 <__ctype_b_loc@plt+0x9760>
    d0c4:	mov    DWORD PTR [rbx],0xb
    d0ca:	jmp    d08d <__ctype_b_loc@plt+0x971d>
    d0cc:	nop    DWORD PTR [rax+0x0]
    d0d0:	and    ah,0xf7
    d0d3:	mov    esi,0x4
    d0d8:	mov    edi,ebp
    d0da:	mov    edx,eax
    d0dc:	xor    eax,eax
    d0de:	call   f0f0 <__ctype_b_loc@plt+0xb780>
    d0e3:	cmp    eax,0xffffffff
    d0e6:	je     d08d <__ctype_b_loc@plt+0x971d>
    d0e8:	mov    rdx,r12
    d0eb:	mov    rsi,r13
    d0ee:	mov    edi,ebp
    d0f0:	call   3710 <read@plt>
    d0f5:	mov    r14d,eax
    d0f8:	jmp    d08d <__ctype_b_loc@plt+0x971d>
    d0fa:	nop    WORD PTR [rax+rax*1+0x0]
    d100:	endbr64 
    d104:	push   r14
    d106:	mov    r14,rdi
    d109:	push   r13
    d10b:	push   r12
    d10d:	push   rbp
    d10e:	push   rbx
    d10f:	movzx  ebx,BYTE PTR [rdi]
    d112:	test   bl,bl
    d114:	je     d154 <__ctype_b_loc@plt+0x97e4>
    d116:	call   3970 <__ctype_b_loc@plt>
    d11b:	mov    rbp,r14
    d11e:	mov    r13,rax
    d121:	nop    DWORD PTR [rax+0x0]
    d128:	mov    rax,QWORD PTR [r13+0x0]
    d12c:	movzx  r12d,bl
    d130:	test   BYTE PTR [rax+r12*2+0x1],0x1
    d136:	je     d145 <__ctype_b_loc@plt+0x97d5>
    d138:	call   3960 <__ctype_tolower_loc@plt>
    d13d:	mov    rax,QWORD PTR [rax]
    d140:	movzx  ebx,BYTE PTR [rax+r12*4]
    d145:	mov    BYTE PTR [rbp+0x0],bl
    d148:	movzx  ebx,BYTE PTR [rbp+0x1]
    d14c:	add    rbp,0x1
    d150:	test   bl,bl
    d152:	jne    d128 <__ctype_b_loc@plt+0x97b8>
    d154:	pop    rbx
    d155:	mov    rax,r14
    d158:	pop    rbp
    d159:	pop    r12
    d15b:	pop    r13
    d15d:	pop    r14
    d15f:	ret    
    d160:	endbr64 
    d164:	jmp    df50 <__ctype_b_loc@plt+0xa5e0>
    d169:	nop    DWORD PTR [rax+0x0]
    d170:	endbr64 
    d174:	jmp    3580 <unlink@plt>
    d179:	nop    DWORD PTR [rax+0x0]
    d180:	endbr64 
    d184:	push   rbx
    d185:	mov    esi,0x2e
    d18a:	mov    rbx,rdi
    d18d:	call   36a0 <strrchr@plt>
    d192:	test   rax,rax
    d195:	je     d1b9 <__ctype_b_loc@plt+0x9849>
    d197:	lea    rdx,[rbx+0x1]
    d19b:	cmp    rbx,rax
    d19e:	cmove  rax,rdx
    d1a2:	nop    WORD PTR [rax+rax*1+0x0]
    d1a8:	sub    rax,0x1
    d1ac:	cmp    BYTE PTR [rax],0x2e
    d1af:	jne    d1b4 <__ctype_b_loc@plt+0x9844>
    d1b1:	mov    BYTE PTR [rax],0x5f
    d1b4:	cmp    rbx,rax
    d1b7:	jne    d1a8 <__ctype_b_loc@plt+0x9838>
    d1b9:	pop    rbx
    d1ba:	ret    
    d1bb:	nop    DWORD PTR [rax+rax*1+0x0]
    d1c0:	endbr64 
    d1c4:	push   r15
    d1c6:	mov    r15,rdi
    d1c9:	mov    rdi,rdx
    d1cc:	push   r14
    d1ce:	mov    r14,rsi
    d1d1:	push   r13
    d1d3:	push   r12
    d1d5:	push   rbp
    d1d6:	push   rbx
    d1d7:	sub    rsp,0x18
    d1db:	call   34e0 <getenv@plt>
    d1e0:	mov    r13,rax
    d1e3:	test   rax,rax
    d1e6:	je     d2bd <__ctype_b_loc@plt+0x994d>
    d1ec:	mov    rdi,rax
    d1ef:	xor    ebp,ebp
    d1f1:	lea    r12,[rip+0x65a7]        # 1379f <__ctype_b_loc@plt+0xfe2f>
    d1f8:	call   eff0 <__ctype_b_loc@plt+0xb680>
    d1fd:	cmp    BYTE PTR [rax],0x0
    d200:	mov    r13,rax
    d203:	mov    rbx,rax
    d206:	je     d2f8 <__ctype_b_loc@plt+0x9988>
    d20c:	nop    DWORD PTR [rax+0x0]
    d210:	mov    rdi,rbx
    d213:	mov    rsi,r12
    d216:	call   36e0 <strspn@plt>
    d21b:	add    rbx,rax
    d21e:	cmp    BYTE PTR [rbx],0x0
    d221:	je     d2f0 <__ctype_b_loc@plt+0x9980>
    d227:	mov    rsi,r12
    d22a:	mov    rdi,rbx
    d22d:	add    ebp,0x1
    d230:	call   3700 <strcspn@plt>
    d235:	add    rax,rbx
    d238:	cmp    BYTE PTR [rax],0x0
    d23b:	jne    d2d0 <__ctype_b_loc@plt+0x9960>
    d241:	lea    eax,[rbp+0x1]
    d244:	lea    edi,[rbp+0x2]
    d247:	mov    esi,0x8
    d24c:	mov    rbx,r13
    d24f:	mov    DWORD PTR [r15],eax
    d252:	movsxd rdi,edi
    d255:	lea    r12,[rip+0x6543]        # 1379f <__ctype_b_loc@plt+0xfe2f>
    d25c:	call   ef80 <__ctype_b_loc@plt+0xb610>
    d261:	mov    rdx,QWORD PTR [r14]
    d264:	lea    r15,[rax+0x8]
    d268:	mov    QWORD PTR [r14],rax
    d26b:	mov    rdx,QWORD PTR [rdx]
    d26e:	mov    QWORD PTR [rax],rdx
    d271:	lea    edx,[rbp-0x1]
    d274:	mov    rbp,r15
    d277:	mov    DWORD PTR [rsp+0xc],edx
    d27b:	lea    r14,[rax+rdx*8+0x10]
    d280:	mov    rdi,rbx
    d283:	mov    rsi,r12
    d286:	add    rbp,0x8
    d28a:	call   36e0 <strspn@plt>
    d28f:	add    rbx,rax
    d292:	mov    QWORD PTR [rbp-0x8],rbx
    d296:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d2a0:	add    rbx,0x1
    d2a4:	cmp    BYTE PTR [rbx-0x1],0x0
    d2a8:	jne    d2a0 <__ctype_b_loc@plt+0x9930>
    d2aa:	cmp    r14,rbp
    d2ad:	jne    d280 <__ctype_b_loc@plt+0x9910>
    d2af:	movsxd rbp,DWORD PTR [rsp+0xc]
    d2b4:	mov    QWORD PTR [r15+rbp*8+0x8],0x0
    d2bd:	add    rsp,0x18
    d2c1:	mov    rax,r13
    d2c4:	pop    rbx
    d2c5:	pop    rbp
    d2c6:	pop    r12
    d2c8:	pop    r13
    d2ca:	pop    r14
    d2cc:	pop    r15
    d2ce:	ret    
    d2cf:	nop
    d2d0:	cmp    BYTE PTR [rax+0x1],0x0
    d2d4:	mov    BYTE PTR [rax],0x0
    d2d7:	lea    rbx,[rax+0x1]
    d2db:	jne    d210 <__ctype_b_loc@plt+0x98a0>
    d2e1:	jmp    d241 <__ctype_b_loc@plt+0x98d1>
    d2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d2f0:	test   ebp,ebp
    d2f2:	jne    d241 <__ctype_b_loc@plt+0x98d1>
    d2f8:	mov    rdi,r13
    d2fb:	xor    r13d,r13d
    d2fe:	call   3520 <free@plt>
    d303:	jmp    d2bd <__ctype_b_loc@plt+0x994d>
    d305:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d310:	endbr64 
    d314:	push   rax
    d315:	pop    rax
    d316:	lea    rcx,[rip+0x10ce3]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    d31d:	lea    rsi,[rip+0x647e]        # 137a2 <__ctype_b_loc@plt+0xfe32>
    d324:	xor    eax,eax
    d326:	sub    rsp,0x8
    d32a:	mov    r8,rdi
    d32d:	mov    rdx,QWORD PTR [rip+0x94cd4]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    d334:	mov    rdi,QWORD PTR [rip+0xcd05]        # 1a040 <stderr@@GLIBC_2.2.5>
    d33b:	call   f390 <__ctype_b_loc@plt+0xba20>
    d340:	call   8300 <__ctype_b_loc@plt+0x4990>
    d345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d350:	endbr64 
    d354:	push   rax
    d355:	pop    rax
    d356:	lea    rsi,[rip+0x6452]        # 137af <__ctype_b_loc@plt+0xfe3f>
    d35d:	xor    eax,eax
    d35f:	sub    rsp,0x8
    d363:	mov    rdx,QWORD PTR [rip+0x94c9e]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    d36a:	mov    rdi,QWORD PTR [rip+0xcccf]        # 1a040 <stderr@@GLIBC_2.2.5>
    d371:	call   f390 <__ctype_b_loc@plt+0xba20>
    d376:	call   8300 <__ctype_b_loc@plt+0x4990>
    d37b:	nop    DWORD PTR [rax+rax*1+0x0]
    d380:	endbr64 
    d384:	mov    ecx,DWORD PTR [rip+0xcd02]        # 1a08c <stderr@@GLIBC_2.2.5+0x4c>
    d38a:	test   ecx,ecx
    d38c:	je     d3b0 <__ctype_b_loc@plt+0x9a40>
    d38e:	mov    eax,DWORD PTR [rip+0xccf0]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    d394:	test   eax,eax
    d396:	jne    d3a8 <__ctype_b_loc@plt+0x9a38>
    d398:	mov    DWORD PTR [rip+0xcce2],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    d3a2:	ret    
    d3a3:	nop    DWORD PTR [rax+rax*1+0x0]
    d3a8:	ret    
    d3a9:	nop    DWORD PTR [rax+0x0]
    d3b0:	sub    rsp,0x8
    d3b4:	mov    r8,rdi
    d3b7:	mov    rdx,QWORD PTR [rip+0x94c4a]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    d3be:	xor    eax,eax
    d3c0:	mov    rdi,QWORD PTR [rip+0xcc79]        # 1a040 <stderr@@GLIBC_2.2.5>
    d3c7:	lea    rcx,[rip+0x10c32]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    d3ce:	lea    rsi,[rip+0x63f1]        # 137c6 <__ctype_b_loc@plt+0xfe56>
    d3d5:	call   f390 <__ctype_b_loc@plt+0xba20>
    d3da:	mov    edx,DWORD PTR [rip+0xcca4]        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    d3e0:	test   edx,edx
    d3e2:	jne    d3ee <__ctype_b_loc@plt+0x9a7e>
    d3e4:	mov    DWORD PTR [rip+0xcc96],0x2        # 1a084 <stderr@@GLIBC_2.2.5+0x44>
    d3ee:	add    rsp,0x8
    d3f2:	ret    
    d3f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d3fe:	xchg   ax,ax
    d400:	endbr64 
    d404:	push   rbp
    d405:	push   rbx
    d406:	sub    rsp,0x8
    d40a:	call   3560 <__errno_location@plt>
    d40f:	mov    rdx,QWORD PTR [rip+0x94bf2]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    d416:	mov    rdi,QWORD PTR [rip+0xcc23]        # 1a040 <stderr@@GLIBC_2.2.5>
    d41d:	lea    rsi,[rip+0x63b7]        # 137db <__ctype_b_loc@plt+0xfe6b>
    d424:	mov    ebp,DWORD PTR [rax]
    d426:	mov    rbx,rax
    d429:	xor    eax,eax
    d42b:	call   f390 <__ctype_b_loc@plt+0xba20>
    d430:	test   ebp,ebp
    d432:	je     d447 <__ctype_b_loc@plt+0x9ad7>
    d434:	mov    DWORD PTR [rbx],ebp
    d436:	lea    rdi,[rip+0x10bc3]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    d43d:	call   38d0 <perror@plt>
    d442:	call   8300 <__ctype_b_loc@plt+0x4990>
    d447:	mov    rdi,QWORD PTR [rip+0xcbf2]        # 1a040 <stderr@@GLIBC_2.2.5>
    d44e:	lea    rdx,[rip+0x10bab]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    d455:	lea    rsi,[rip+0x6385]        # 137e1 <__ctype_b_loc@plt+0xfe71>
    d45c:	xor    eax,eax
    d45e:	call   f390 <__ctype_b_loc@plt+0xba20>
    d463:	jmp    d442 <__ctype_b_loc@plt+0x9ad2>
    d465:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d470:	endbr64 
    d474:	push   rbp
    d475:	push   rbx
    d476:	sub    rsp,0x8
    d47a:	call   3560 <__errno_location@plt>
    d47f:	mov    rdx,QWORD PTR [rip+0x94b82]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    d486:	mov    rdi,QWORD PTR [rip+0xcbb3]        # 1a040 <stderr@@GLIBC_2.2.5>
    d48d:	lea    rsi,[rip+0x6347]        # 137db <__ctype_b_loc@plt+0xfe6b>
    d494:	mov    ebp,DWORD PTR [rax]
    d496:	mov    rbx,rax
    d499:	xor    eax,eax
    d49b:	call   f390 <__ctype_b_loc@plt+0xba20>
    d4a0:	lea    rdi,[rip+0x83379]        # 90820 <stderr@@GLIBC_2.2.5+0x767e0>
    d4a7:	mov    DWORD PTR [rbx],ebp
    d4a9:	call   38d0 <perror@plt>
    d4ae:	call   8300 <__ctype_b_loc@plt+0x4990>
    d4b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d4be:	xchg   ax,ax
    d4c0:	endbr64 
    d4c4:	push   r13
    d4c6:	mov    r13,rsi
    d4c9:	push   r12
    d4cb:	mov    r12d,0x7fffffff
    d4d1:	push   rbp
    d4d2:	mov    ebp,edi
    d4d4:	push   rbx
    d4d5:	mov    ebx,edx
    d4d7:	sub    rsp,0x8
    d4db:	jmp    d4ec <__ctype_b_loc@plt+0x9b7c>
    d4dd:	nop    DWORD PTR [rax]
    d4e0:	cmp    eax,0xffffffff
    d4e3:	je     d50e <__ctype_b_loc@plt+0x9b9e>
    d4e5:	sub    ebx,eax
    d4e7:	mov    eax,eax
    d4e9:	add    r13,rax
    d4ec:	test   ebx,ebx
    d4ee:	mov    edx,r12d
    d4f1:	mov    rsi,r13
    d4f4:	mov    edi,ebp
    d4f6:	cmovns rdx,rbx
    d4fa:	call   3610 <write@plt>
    d4ff:	cmp    ebx,eax
    d501:	jne    d4e0 <__ctype_b_loc@plt+0x9b70>
    d503:	add    rsp,0x8
    d507:	pop    rbx
    d508:	pop    rbp
    d509:	pop    r12
    d50b:	pop    r13
    d50d:	ret    
    d50e:	call   d470 <__ctype_b_loc@plt+0x9b00>
    d513:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d51e:	xchg   ax,ax
    d520:	endbr64 
    d524:	push   r13
    d526:	push   r12
    d528:	push   rbp
    d529:	mov    ebp,esi
    d52b:	push   rbx
    d52c:	mov    ebx,edi
    d52e:	sub    rsp,0x8
    d532:	call   3560 <__errno_location@plt>
    d537:	mov    DWORD PTR [rax],0x0
    d53d:	mov    edx,DWORD PTR [rip+0x94ae1]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d543:	mov    esi,DWORD PTR [rip+0x40edb]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    d549:	cmp    esi,edx
    d54b:	jae    d5b4 <__ctype_b_loc@plt+0x9c44>
    d54d:	lea    r12,[rip+0x96aac]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    d554:	mov    r13,r12
    d557:	nop    WORD PTR [rax+rax*1+0x0]
    d560:	sub    edx,esi
    d562:	mov    edi,ebp
    d564:	add    rsi,r12
    d567:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    d56c:	mov    edx,0x40000
    d571:	mov    rsi,r13
    d574:	mov    edi,ebx
    d576:	mov    eax,DWORD PTR [rip+0x94aa8]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d57c:	sub    eax,DWORD PTR [rip+0x40ea2]        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    d582:	add    QWORD PTR [rip+0x94a77],rax        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    d589:	call   d060 <__ctype_b_loc@plt+0x96f0>
    d58e:	mov    edx,eax
    d590:	cmp    eax,0xffffffff
    d593:	je     d5c1 <__ctype_b_loc@plt+0x9c51>
    d595:	cdqe   
    d597:	mov    DWORD PTR [rip+0x94a87],edx        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d59d:	xor    esi,esi
    d59f:	add    QWORD PTR [rip+0x10e5a],rax        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    d5a6:	mov    DWORD PTR [rip+0x40e74],0x0        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    d5b0:	test   edx,edx
    d5b2:	jne    d560 <__ctype_b_loc@plt+0x9bf0>
    d5b4:	add    rsp,0x8
    d5b8:	xor    eax,eax
    d5ba:	pop    rbx
    d5bb:	pop    rbp
    d5bc:	pop    r12
    d5be:	pop    r13
    d5c0:	ret    
    d5c1:	call   d400 <__ctype_b_loc@plt+0x9a90>
    d5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d5d0:	endbr64 
    d5d4:	mov    edx,DWORD PTR [rip+0x94a46]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d5da:	test   edx,edx
    d5dc:	je     d628 <__ctype_b_loc@plt+0x9cb8>
    d5de:	sub    rsp,0x8
    d5e2:	mov    eax,DWORD PTR [rip+0xcaa0]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    d5e8:	test   eax,eax
    d5ea:	je     d608 <__ctype_b_loc@plt+0x9c98>
    d5ec:	add    QWORD PTR [rip+0x94a0d],rdx        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    d5f3:	mov    DWORD PTR [rip+0x94a23],0x0        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d5fd:	add    rsp,0x8
    d601:	ret    
    d602:	nop    WORD PTR [rax+rax*1+0x0]
    d608:	mov    edi,DWORD PTR [rip+0x40e12]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    d60e:	lea    rsi,[rip+0x429eb]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    d615:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    d61a:	mov    edx,DWORD PTR [rip+0x94a00]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d620:	jmp    d5ec <__ctype_b_loc@plt+0x9c7c>
    d622:	nop    WORD PTR [rax+rax*1+0x0]
    d628:	ret    
    d629:	nop    DWORD PTR [rax+0x0]
    d630:	endbr64 
    d634:	mov    r8d,DWORD PTR [rip+0x949e5]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d63b:	test   r8d,r8d
    d63e:	je     d6e0 <__ctype_b_loc@plt+0x9d70>
    d644:	sub    rsp,0x8
    d648:	lea    ecx,[r8-0x1]
    d64c:	lea    rdx,[rip+0x849ad]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    d653:	mov    rax,QWORD PTR [rip+0xad96]        # 183f0 <__ctype_b_loc@plt+0x14a80>
    d65a:	lea    rdi,[rdx+rcx*1+0x1]
    d65f:	lea    rsi,[rip+0x61ba]        # 13820 <__ctype_b_loc@plt+0xfeb0>
    d666:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d670:	movzx  ecx,BYTE PTR [rdx]
    d673:	add    rdx,0x1
    d677:	xor    ecx,eax
    d679:	shr    rax,0x8
    d67d:	movzx  ecx,cl
    d680:	xor    rax,QWORD PTR [rsi+rcx*8]
    d684:	cmp    rdx,rdi
    d687:	jne    d670 <__ctype_b_loc@plt+0x9d00>
    d689:	mov    QWORD PTR [rip+0xad60],rax        # 183f0 <__ctype_b_loc@plt+0x14a80>
    d690:	mov    eax,DWORD PTR [rip+0xc9f2]        # 1a088 <stderr@@GLIBC_2.2.5+0x48>
    d696:	test   eax,eax
    d698:	je     d6b8 <__ctype_b_loc@plt+0x9d48>
    d69a:	mov    DWORD PTR [rip+0x9497c],0x0        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d6a4:	mov    r8d,r8d
    d6a7:	add    QWORD PTR [rip+0x94952],r8        # a2000 <stderr@@GLIBC_2.2.5+0x87fc0>
    d6ae:	add    rsp,0x8
    d6b2:	ret    
    d6b3:	nop    DWORD PTR [rax+rax*1+0x0]
    d6b8:	mov    edi,DWORD PTR [rip+0x40d62]        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    d6be:	mov    edx,r8d
    d6c1:	lea    rsi,[rip+0x84938]        # 92000 <stderr@@GLIBC_2.2.5+0x77fc0>
    d6c8:	call   d4c0 <__ctype_b_loc@plt+0x9b50>
    d6cd:	mov    r8d,DWORD PTR [rip+0x9494c]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d6d4:	jmp    d69a <__ctype_b_loc@plt+0x9d2a>
    d6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d6e0:	ret    
    d6e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d6ec:	nop    DWORD PTR [rax+0x0]
    d6f0:	endbr64 
    d6f4:	push   r12
    d6f6:	xor    eax,eax
    d6f8:	mov    r12d,edi
    d6fb:	push   rbp
    d6fc:	lea    rbp,[rip+0x968fd]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    d703:	push   rbx
    d704:	mov    ebx,0x40000
    d709:	mov    DWORD PTR [rip+0x94911],0x0        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d713:	jmp    d730 <__ctype_b_loc@plt+0x9dc0>
    d715:	nop    DWORD PTR [rax]
    d718:	cmp    eax,0xffffffff
    d71b:	je     d795 <__ctype_b_loc@plt+0x9e25>
    d71d:	add    eax,DWORD PTR [rip+0x94901]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d723:	mov    DWORD PTR [rip+0x948fb],eax        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d729:	cmp    eax,0x3ffff
    d72e:	ja     d768 <__ctype_b_loc@plt+0x9df8>
    d730:	mov    edx,ebx
    d732:	mov    edi,DWORD PTR [rip+0x830c8]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    d738:	lea    rsi,[rbp+rax*1+0x0]
    d73d:	sub    edx,eax
    d73f:	call   d060 <__ctype_b_loc@plt+0x96f0>
    d744:	test   eax,eax
    d746:	jne    d718 <__ctype_b_loc@plt+0x9da8>
    d748:	mov    eax,DWORD PTR [rip+0x948d6]        # a2024 <stderr@@GLIBC_2.2.5+0x87fe4>
    d74e:	test   eax,eax
    d750:	jne    d768 <__ctype_b_loc@plt+0x9df8>
    d752:	test   r12d,r12d
    d755:	je     d785 <__ctype_b_loc@plt+0x9e15>
    d757:	pop    rbx
    d758:	mov    eax,0xffffffff
    d75d:	pop    rbp
    d75e:	pop    r12
    d760:	ret    
    d761:	nop    DWORD PTR [rax+0x0]
    d768:	pop    rbx
    d769:	pop    rbp
    d76a:	mov    DWORD PTR [rip+0x40cb0],0x1        # 4e424 <stderr@@GLIBC_2.2.5+0x343e4>
    d774:	add    QWORD PTR [rip+0x10c85],rax        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    d77b:	pop    r12
    d77d:	movzx  eax,BYTE PTR [rip+0x9687c]        # a4000 <stderr@@GLIBC_2.2.5+0x89fc0>
    d784:	ret    
    d785:	call   d630 <__ctype_b_loc@plt+0x9cc0>
    d78a:	call   3560 <__errno_location@plt>
    d78f:	mov    DWORD PTR [rax],0x0
    d795:	call   d400 <__ctype_b_loc@plt+0x9a90>
    d79a:	nop    WORD PTR [rax+rax*1+0x0]
    d7a0:	endbr64 
    d7a4:	mov    rax,rdi
    d7a7:	pxor   xmm0,xmm0
    d7ab:	mov    rdi,rdx
    d7ae:	test   rsi,rsi
    d7b1:	je     d7d1 <__ctype_b_loc@plt+0x9e61>
    d7b3:	pxor   xmm0,xmm0
    d7b7:	pxor   xmm1,xmm1
    d7bb:	cvtsi2sd xmm0,rax
    d7c0:	mulsd  xmm0,QWORD PTR [rip+0x6858]        # 14020 <__ctype_b_loc@plt+0x106b0>
    d7c8:	cvtsi2sd xmm1,rsi
    d7cd:	divsd  xmm0,xmm1
    d7d1:	lea    rsi,[rip+0x6025]        # 137fd <__ctype_b_loc@plt+0xfe8d>
    d7d8:	mov    eax,0x1
    d7dd:	jmp    f390 <__ctype_b_loc@plt+0xba20>
    d7e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d7ed:	nop    DWORD PTR [rax]
    d7f0:	endbr64 
    d7f4:	push   r13
    d7f6:	mov    ecx,edx
    d7f8:	push   r12
    d7fa:	push   rbp
    d7fb:	mov    rbp,rdi
    d7fe:	movabs rdi,0xcccccccccccccccd
    d808:	push   rbx
    d809:	sub    rsp,0x58
    d80d:	mov    rax,QWORD PTR fs:0x28
    d816:	mov    QWORD PTR [rsp+0x48],rax
    d81b:	xor    eax,eax
    d81d:	lea    r12,[rsp+0x40]
    d822:	mov    rbx,r12
    d825:	test   rsi,rsi
    d828:	js     d8c0 <__ctype_b_loc@plt+0x9f50>
    d82e:	xchg   ax,ax
    d830:	mov    rax,rsi
    d833:	sub    rbx,0x1
    d837:	mul    rdi
    d83a:	shr    rdx,0x3
    d83e:	lea    rax,[rdx+rdx*4]
    d842:	add    rax,rax
    d845:	sub    rsi,rax
    d848:	add    esi,0x30
    d84b:	mov    BYTE PTR [rbx],sil
    d84e:	mov    rsi,rdx
    d851:	test   rdx,rdx
    d854:	jne    d830 <__ctype_b_loc@plt+0x9ec0>
    d856:	mov    rax,r12
    d859:	sub    rax,rbx
    d85c:	sub    ecx,eax
    d85e:	lea    r13d,[rcx-0x1]
    d862:	test   ecx,ecx
    d864:	jle    d887 <__ctype_b_loc@plt+0x9f17>
    d866:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d870:	mov    rsi,rbp
    d873:	mov    edi,0x20
    d878:	sub    r13d,0x1
    d87c:	call   3760 <putc@plt>
    d881:	cmp    r13d,0xffffffff
    d885:	jne    d870 <__ctype_b_loc@plt+0x9f00>
    d887:	cmp    rbx,r12
    d88a:	jae    d8a4 <__ctype_b_loc@plt+0x9f34>
    d88c:	nop    DWORD PTR [rax+0x0]
    d890:	movsx  edi,BYTE PTR [rbx]
    d893:	mov    rsi,rbp
    d896:	add    rbx,0x1
    d89a:	call   3760 <putc@plt>
    d89f:	cmp    rbx,r12
    d8a2:	jne    d890 <__ctype_b_loc@plt+0x9f20>
    d8a4:	mov    rax,QWORD PTR [rsp+0x48]
    d8a9:	xor    rax,QWORD PTR fs:0x28
    d8b2:	jne    d914 <__ctype_b_loc@plt+0x9fa4>
    d8b4:	add    rsp,0x58
    d8b8:	pop    rbx
    d8b9:	pop    rbp
    d8ba:	pop    r12
    d8bc:	pop    r13
    d8be:	ret    
    d8bf:	nop
    d8c0:	mov    rdi,r12
    d8c3:	mov    r8d,0x30
    d8c9:	movabs r9,0x6666666666666667
    d8d3:	nop    DWORD PTR [rax+rax*1+0x0]
    d8d8:	mov    rax,rsi
    d8db:	mov    rbx,rdi
    d8de:	sub    rdi,0x1
    d8e2:	imul   r9
    d8e5:	mov    rax,rsi
    d8e8:	sar    rax,0x3f
    d8ec:	sar    rdx,0x2
    d8f0:	sub    rdx,rax
    d8f3:	lea    rax,[rdx+rdx*4]
    d8f7:	lea    eax,[r8+rax*2]
    d8fb:	sub    eax,esi
    d8fd:	mov    rsi,rdx
    d900:	mov    BYTE PTR [rdi],al
    d902:	test   rdx,rdx
    d905:	jne    d8d8 <__ctype_b_loc@plt+0x9f68>
    d907:	mov    BYTE PTR [rdi-0x1],0x2d
    d90b:	sub    rbx,0x2
    d90f:	jmp    d856 <__ctype_b_loc@plt+0x9ee6>
    d914:	call   3680 <__stack_chk_fail@plt>
    d919:	nop    DWORD PTR [rax+0x0]
    d920:	endbr64 
    d924:	push   r13
    d926:	xor    edx,edx
    d928:	mov    ecx,0xffff8b1f
    d92d:	push   r12
    d92f:	mov    r12d,esi
    d932:	push   rbp
    d933:	lea    rbp,[rip+0x426c6]        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    d93a:	push   rbx
    d93b:	sub    rsp,0x18
    d93f:	mov    rax,QWORD PTR fs:0x28
    d948:	mov    QWORD PTR [rsp+0x8],rax
    d94d:	xor    eax,eax
    d94f:	mov    DWORD PTR [rip+0x40acb],esi        # 4e420 <stderr@@GLIBC_2.2.5+0x343e0>
    d955:	mov    esi,DWORD PTR [rip+0x40acd]        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    d95b:	mov    WORD PTR [rsp+0x6],dx
    d960:	test   esi,esi
    d962:	mov    DWORD PTR [rip+0x82e98],edi        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    d968:	setne  al
    d96b:	mov    WORD PTR [rip+0x4268e],cx        # 50000 <stderr@@GLIBC_2.2.5+0x35fc0>
    d972:	shl    eax,0x3
    d975:	cmp    QWORD PTR [rip+0x9469b],0x0        # a2018 <stderr@@GLIBC_2.2.5+0x87fd8>
    d97d:	mov    DWORD PTR [rip+0xa699],0x8        # 18020 <__ctype_b_loc@plt+0x146b0>
    d987:	mov    BYTE PTR [rip+0x42674],0x8        # 50002 <stderr@@GLIBC_2.2.5+0x35fc2>
    d98e:	mov    DWORD PTR [rip+0x94688],0x4        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    d998:	mov    BYTE PTR [rip+0x42665],al        # 50003 <stderr@@GLIBC_2.2.5+0x35fc3>
    d99e:	js     de20 <__ctype_b_loc@plt+0xa4b0>
    d9a4:	mov    rax,QWORD PTR [rip+0x94665]        # a2010 <stderr@@GLIBC_2.2.5+0x87fd0>
    d9ab:	mov    edx,0xfffffffe
    d9b0:	lea    rcx,[rax-0x1]
    d9b4:	cmp    rcx,rdx
    d9b7:	ja     dc10 <__ctype_b_loc@plt+0xa2a0>
    d9bd:	mov    ecx,eax
    d9bf:	movzx  esi,ah
    d9c2:	shr    rax,0x10
    d9c6:	mov    r13d,eax
    d9c9:	movzx  ebx,ah
    d9cc:	mov    edx,0x4
    d9d1:	mov    eax,edx
    d9d3:	mov    BYTE PTR [rbp+rax*1+0x0],cl
    d9d7:	lea    eax,[rdx+0x2]
    d9da:	add    edx,0x1
    d9dd:	mov    BYTE PTR [rbp+rdx*1+0x0],sil
    d9e2:	lea    edx,[rax+0x1]
    d9e5:	cmp    eax,0x3fffd
    d9ea:	ja     dc80 <__ctype_b_loc@plt+0xa310>
    d9f0:	mov    ecx,eax
    d9f2:	add    eax,0x2
    d9f5:	mov    BYTE PTR [rbp+rcx*1+0x0],r13b
    d9fa:	mov    DWORD PTR [rip+0x94620],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    da00:	mov    BYTE PTR [rbp+rdx*1+0x0],bl
    da04:	xor    esi,esi
    da06:	xor    edi,edi
    da08:	call   cf80 <__ctype_b_loc@plt+0x9610>
    da0d:	mov    edi,r12d
    da10:	call   4280 <__ctype_b_loc@plt+0x910>
    da15:	lea    rdi,[rsp+0x6]
    da1a:	lea    rsi,[rip+0xa5ff]        # 18020 <__ctype_b_loc@plt+0x146b0>
    da21:	call   a9a0 <__ctype_b_loc@plt+0x7030>
    da26:	mov    eax,DWORD PTR [rip+0xa5f0]        # 1801c <__ctype_b_loc@plt+0x146ac>
    da2c:	mov    ecx,0x4
    da31:	cmp    eax,0x1
    da34:	je     da3e <__ctype_b_loc@plt+0xa0ce>
    da36:	cmp    eax,0x9
    da39:	sete   cl
    da3c:	add    ecx,ecx
    da3e:	mov    edx,DWORD PTR [rip+0x945dc]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    da44:	lea    eax,[rdx+0x1]
    da47:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    da4b:	mov    DWORD PTR [rip+0x945cf],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    da51:	cmp    eax,0x40000
    da56:	je     de40 <__ctype_b_loc@plt+0xa4d0>
    da5c:	lea    ebx,[rax+0x1]
    da5f:	mov    BYTE PTR [rbp+rax*1+0x0],0x3
    da64:	mov    DWORD PTR [rip+0x945b6],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    da6a:	cmp    ebx,0x40000
    da70:	je     de30 <__ctype_b_loc@plt+0xa4c0>
    da76:	mov    eax,DWORD PTR [rip+0x409ac]        # 4e428 <stderr@@GLIBC_2.2.5+0x343e8>
    da7c:	test   eax,eax
    da7e:	je     dae0 <__ctype_b_loc@plt+0xa170>
    da80:	lea    rdi,[rip+0x10579]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    da87:	call   d160 <__ctype_b_loc@plt+0x97f0>
    da8c:	mov    r12,rax
    da8f:	jmp    daa4 <__ctype_b_loc@plt+0xa134>
    da91:	nop    DWORD PTR [rax+0x0]
    da98:	add    r12,0x1
    da9c:	cmp    BYTE PTR [r12-0x1],0x0
    daa2:	je     dae0 <__ctype_b_loc@plt+0xa170>
    daa4:	movzx  edx,BYTE PTR [r12]
    daa9:	lea    eax,[rbx+0x1]
    daac:	mov    DWORD PTR [rip+0x9456e],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dab2:	mov    BYTE PTR [rbp+rbx*1+0x0],dl
    dab6:	mov    ebx,eax
    dab8:	cmp    ebx,0x40000
    dabe:	jne    da98 <__ctype_b_loc@plt+0xa128>
    dac0:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dac5:	add    r12,0x1
    dac9:	mov    ebx,DWORD PTR [rip+0x94551]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dacf:	cmp    BYTE PTR [r12-0x1],0x0
    dad5:	jne    daa4 <__ctype_b_loc@plt+0xa134>
    dad7:	nop    WORD PTR [rax+rax*1+0x0]
    dae0:	mov    edi,DWORD PTR [rip+0xa536]        # 1801c <__ctype_b_loc@plt+0x146ac>
    dae6:	mov    eax,ebx
    dae8:	mov    QWORD PTR [rip+0xd6551],rax        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    daef:	call   4ba0 <__ctype_b_loc@plt+0x1230>
    daf4:	mov    rax,QWORD PTR [rip+0x40935]        # 4e430 <stderr@@GLIBC_2.2.5+0x343f0>
    dafb:	cmp    rax,0xffffffffffffffff
    daff:	je     db0e <__ctype_b_loc@plt+0xa19e>
    db01:	cmp    rax,QWORD PTR [rip+0x108f8]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    db08:	jne    ddf0 <__ctype_b_loc@plt+0xa480>
    db0e:	call   cfe0 <__ctype_b_loc@plt+0x9670>
    db13:	mov    ebx,DWORD PTR [rip+0x94507]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    db19:	lea    r12d,[rbx+0x1]
    db1d:	mov    DWORD PTR [rip+0x944fc],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    db24:	cmp    ebx,0x3fffd
    db2a:	ja     dda0 <__ctype_b_loc@plt+0xa430>
    db30:	mov    edx,ebx
    db32:	add    ebx,0x2
    db35:	mov    BYTE PTR [rbp+rdx*1+0x0],al
    db39:	call   cfe0 <__ctype_b_loc@plt+0x9670>
    db3e:	mov    DWORD PTR [rip+0x944dc],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    db44:	shr    ax,0x8
    db48:	mov    BYTE PTR [rbp+r12*1+0x0],al
    db4d:	call   cfe0 <__ctype_b_loc@plt+0x9670>
    db52:	lea    r12d,[rbx+0x1]
    db56:	mov    DWORD PTR [rip+0x944c3],r12d        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    db5d:	shr    rax,0x10
    db61:	cmp    ebx,0x3fffd
    db67:	ja     dd50 <__ctype_b_loc@plt+0xa3e0>
    db6d:	mov    edx,ebx
    db6f:	add    ebx,0x2
    db72:	mov    BYTE PTR [rbp+rdx*1+0x0],al
    db76:	call   cfe0 <__ctype_b_loc@plt+0x9670>
    db7b:	shr    rax,0x10
    db7f:	shr    ax,0x8
    db83:	mov    BYTE PTR [rbp+r12*1+0x0],al
    db88:	mov    rax,QWORD PTR [rip+0x10871]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    db8f:	lea    edx,[rbx+0x1]
    db92:	cmp    ebx,0x3fffd
    db98:	ja     dd00 <__ctype_b_loc@plt+0xa390>
    db9e:	mov    ecx,ebx
    dba0:	add    ebx,0x2
    dba3:	mov    BYTE PTR [rbp+rcx*1+0x0],al
    dba7:	mov    ecx,eax
    dba9:	shr    cx,0x8
    dbad:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    dbb1:	shr    rax,0x10
    dbb5:	lea    edx,[rbx+0x1]
    dbb8:	cmp    ebx,0x3fffd
    dbbe:	ja     dcc0 <__ctype_b_loc@plt+0xa350>
    dbc4:	mov    ecx,ebx
    dbc6:	add    ebx,0x2
    dbc9:	mov    BYTE PTR [rbp+rcx*1+0x0],al
    dbcd:	shr    ax,0x8
    dbd1:	mov    DWORD PTR [rip+0x94449],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dbd7:	mov    BYTE PTR [rbp+rdx*1+0x0],al
    dbdb:	add    QWORD PTR [rip+0xd645d],0x8        # e4040 <stderr@@GLIBC_2.2.5+0xca000>
    dbe3:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dbe8:	mov    rax,QWORD PTR [rsp+0x8]
    dbed:	xor    rax,QWORD PTR fs:0x28
    dbf6:	jne    dee0 <__ctype_b_loc@plt+0xa570>
    dbfc:	add    rsp,0x18
    dc00:	xor    eax,eax
    dc02:	pop    rbx
    dc03:	pop    rbp
    dc04:	pop    r12
    dc06:	pop    r13
    dc08:	ret    
    dc09:	nop    DWORD PTR [rax+0x0]
    dc10:	lea    rdi,[rip+0x6411]        # 14028 <__ctype_b_loc@plt+0x106b8>
    dc17:	call   d380 <__ctype_b_loc@plt+0x9a10>
    dc1c:	mov    edx,DWORD PTR [rip+0x943fe]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dc22:	cmp    edx,0x3fffd
    dc28:	jbe    dee5 <__ctype_b_loc@plt+0xa575>
    dc2e:	lea    ecx,[rdx+0x1]
    dc31:	mov    BYTE PTR [rbp+rdx*1+0x0],0x0
    dc36:	mov    DWORD PTR [rip+0x943e4],ecx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dc3c:	cmp    ecx,0x40000
    dc42:	je     dec0 <__ctype_b_loc@plt+0xa550>
    dc48:	lea    eax,[rcx+0x1]
    dc4b:	mov    BYTE PTR [rbp+rcx*1+0x0],0x0
    dc50:	xor    ebx,ebx
    dc52:	xor    r13d,r13d
    dc55:	mov    DWORD PTR [rip+0x943c5],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dc5b:	cmp    eax,0x40000
    dc60:	jne    d9e2 <__ctype_b_loc@plt+0xa072>
    dc66:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dc6b:	mov    eax,DWORD PTR [rip+0x943af]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dc71:	lea    edx,[rax+0x1]
    dc74:	cmp    eax,0x3fffd
    dc79:	jbe    d9f0 <__ctype_b_loc@plt+0xa080>
    dc7f:	nop
    dc80:	mov    DWORD PTR [rip+0x9439a],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dc86:	mov    BYTE PTR [rbp+rax*1+0x0],r13b
    dc8b:	cmp    edx,0x40000
    dc91:	je     ded0 <__ctype_b_loc@plt+0xa560>
    dc97:	lea    eax,[rdx+0x1]
    dc9a:	mov    BYTE PTR [rbp+rdx*1+0x0],bl
    dc9e:	mov    DWORD PTR [rip+0x9437c],eax        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dca4:	cmp    eax,0x40000
    dca9:	jne    da04 <__ctype_b_loc@plt+0xa094>
    dcaf:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dcb4:	jmp    da04 <__ctype_b_loc@plt+0xa094>
    dcb9:	nop    DWORD PTR [rax+0x0]
    dcc0:	mov    DWORD PTR [rip+0x9435a],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dcc6:	mov    BYTE PTR [rbp+rbx*1+0x0],al
    dcca:	cmp    edx,0x40000
    dcd0:	je     de50 <__ctype_b_loc@plt+0xa4e0>
    dcd6:	lea    ecx,[rdx+0x1]
    dcd9:	shr    ax,0x8
    dcdd:	mov    DWORD PTR [rip+0x9433d],ecx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dce3:	mov    BYTE PTR [rbp+rdx*1+0x0],al
    dce7:	cmp    ecx,0x40000
    dced:	jne    dbdb <__ctype_b_loc@plt+0xa26b>
    dcf3:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dcf8:	jmp    dbdb <__ctype_b_loc@plt+0xa26b>
    dcfd:	nop    DWORD PTR [rax]
    dd00:	mov    DWORD PTR [rip+0x9431a],edx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dd06:	mov    BYTE PTR [rbp+rbx*1+0x0],al
    dd0a:	cmp    edx,0x40000
    dd10:	je     de70 <__ctype_b_loc@plt+0xa500>
    dd16:	mov    ecx,eax
    dd18:	lea    ebx,[rdx+0x1]
    dd1b:	shr    cx,0x8
    dd1f:	mov    DWORD PTR [rip+0x942fb],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dd25:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    dd29:	cmp    ebx,0x40000
    dd2f:	jne    dbb1 <__ctype_b_loc@plt+0xa241>
    dd35:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dd3a:	mov    ebx,DWORD PTR [rip+0x942e0]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dd40:	mov    rax,QWORD PTR [rip+0x106b9]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    dd47:	jmp    dbb1 <__ctype_b_loc@plt+0xa241>
    dd4c:	nop    DWORD PTR [rax+0x0]
    dd50:	mov    BYTE PTR [rbp+rbx*1+0x0],al
    dd54:	cmp    r12d,0x40000
    dd5b:	je     de90 <__ctype_b_loc@plt+0xa520>
    dd61:	call   cfe0 <__ctype_b_loc@plt+0x9670>
    dd66:	lea    ebx,[r12+0x1]
    dd6b:	shr    rax,0x10
    dd6f:	mov    DWORD PTR [rip+0x942ab],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dd75:	shr    ax,0x8
    dd79:	mov    BYTE PTR [rbp+r12*1+0x0],al
    dd7e:	cmp    ebx,0x40000
    dd84:	jne    db88 <__ctype_b_loc@plt+0xa218>
    dd8a:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dd8f:	mov    ebx,DWORD PTR [rip+0x9428b]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dd95:	jmp    db88 <__ctype_b_loc@plt+0xa218>
    dd9a:	nop    WORD PTR [rax+rax*1+0x0]
    dda0:	mov    BYTE PTR [rbp+rbx*1+0x0],al
    dda4:	cmp    r12d,0x40000
    ddab:	je     dea8 <__ctype_b_loc@plt+0xa538>
    ddb1:	call   cfe0 <__ctype_b_loc@plt+0x9670>
    ddb6:	lea    ebx,[r12+0x1]
    ddbb:	shr    ax,0x8
    ddbf:	mov    DWORD PTR [rip+0x9425b],ebx        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    ddc5:	mov    BYTE PTR [rbp+r12*1+0x0],al
    ddca:	cmp    ebx,0x40000
    ddd0:	jne    db4d <__ctype_b_loc@plt+0xa1dd>
    ddd6:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dddb:	mov    ebx,DWORD PTR [rip+0x9423f]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dde1:	jmp    db4d <__ctype_b_loc@plt+0xa1dd>
    dde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ddf0:	mov    rdx,QWORD PTR [rip+0x94211]        # a2008 <stderr@@GLIBC_2.2.5+0x87fc8>
    ddf7:	mov    rdi,QWORD PTR [rip+0xc242]        # 1a040 <stderr@@GLIBC_2.2.5>
    ddfe:	lea    rcx,[rip+0x101fb]        # 1e000 <stderr@@GLIBC_2.2.5+0x3fc0>
    de05:	xor    eax,eax
    de07:	lea    rsi,[rip+0x624a]        # 14058 <__ctype_b_loc@plt+0x106e8>
    de0e:	call   f390 <__ctype_b_loc@plt+0xba20>
    de13:	jmp    db0e <__ctype_b_loc@plt+0xa19e>
    de18:	nop    DWORD PTR [rax+rax*1+0x0]
    de20:	xor    ebx,ebx
    de22:	xor    r13d,r13d
    de25:	xor    esi,esi
    de27:	xor    ecx,ecx
    de29:	jmp    d9cc <__ctype_b_loc@plt+0xa05c>
    de2e:	xchg   ax,ax
    de30:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    de35:	mov    ebx,DWORD PTR [rip+0x941e5]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    de3b:	jmp    da76 <__ctype_b_loc@plt+0xa106>
    de40:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    de45:	mov    eax,DWORD PTR [rip+0x941d5]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    de4b:	jmp    da5c <__ctype_b_loc@plt+0xa0ec>
    de50:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    de55:	mov    rax,QWORD PTR [rip+0x105a4]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    de5c:	mov    edx,DWORD PTR [rip+0x941be]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    de62:	shr    rax,0x10
    de66:	jmp    dcd6 <__ctype_b_loc@plt+0xa366>
    de6b:	nop    DWORD PTR [rax+rax*1+0x0]
    de70:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    de75:	mov    rax,QWORD PTR [rip+0x10584]        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    de7c:	mov    edx,DWORD PTR [rip+0x9419e]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    de82:	jmp    dd16 <__ctype_b_loc@plt+0xa3a6>
    de87:	nop    WORD PTR [rax+rax*1+0x0]
    de90:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    de95:	mov    r12d,DWORD PTR [rip+0x94184]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    de9c:	jmp    dd61 <__ctype_b_loc@plt+0xa3f1>
    dea1:	nop    DWORD PTR [rax+0x0]
    dea8:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dead:	mov    r12d,DWORD PTR [rip+0x9416c]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    deb4:	jmp    ddb1 <__ctype_b_loc@plt+0xa441>
    deb9:	nop    DWORD PTR [rax+0x0]
    dec0:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    dec5:	mov    ecx,DWORD PTR [rip+0x94155]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    decb:	jmp    dc48 <__ctype_b_loc@plt+0xa2d8>
    ded0:	call   d5d0 <__ctype_b_loc@plt+0x9c60>
    ded5:	mov    edx,DWORD PTR [rip+0x94145]        # a2020 <stderr@@GLIBC_2.2.5+0x87fe0>
    dedb:	jmp    dc97 <__ctype_b_loc@plt+0xa327>
    dee0:	call   3680 <__stack_chk_fail@plt>
    dee5:	xor    ebx,ebx
    dee7:	xor    r13d,r13d
    deea:	xor    esi,esi
    deec:	xor    ecx,ecx
    deee:	jmp    d9d1 <__ctype_b_loc@plt+0xa061>
    def3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    defe:	xchg   ax,ax
    df00:	endbr64 
    df04:	push   r12
    df06:	mov    edx,esi
    df08:	mov    rsi,rdi
    df0b:	push   rbp
    df0c:	mov    rbp,rdi
    df0f:	sub    rsp,0x8
    df13:	mov    edi,DWORD PTR [rip+0x828e7]        # 90800 <stderr@@GLIBC_2.2.5+0x767c0>
    df19:	call   d060 <__ctype_b_loc@plt+0x96f0>
    df1e:	mov    r12d,eax
    df21:	test   eax,eax
    df23:	je     df3e <__ctype_b_loc@plt+0xa5ce>
    df25:	cmp    eax,0xffffffff
    df28:	je     df49 <__ctype_b_loc@plt+0xa5d9>
    df2a:	mov    esi,eax
    df2c:	mov    rdi,rbp
    df2f:	call   cf80 <__ctype_b_loc@plt+0x9610>
    df34:	mov    eax,r12d
    df37:	add    QWORD PTR [rip+0x104c2],rax        # 1e400 <stderr@@GLIBC_2.2.5+0x43c0>
    df3e:	add    rsp,0x8
    df42:	mov    eax,r12d
    df45:	pop    rbp
    df46:	pop    r12
    df48:	ret    
    df49:	call   d400 <__ctype_b_loc@plt+0x9a90>
    df4e:	xchg   ax,ax
    df50:	endbr64 
    df54:	movzx  edx,BYTE PTR [rdi]
    df57:	mov    rax,rdi
    df5a:	cmp    dl,0x2f
    df5d:	jne    df6d <__ctype_b_loc@plt+0xa5fd>
    df5f:	nop
    df60:	movzx  edx,BYTE PTR [rax+0x1]
    df64:	add    rax,0x1
    df68:	cmp    dl,0x2f
    df6b:	je     df60 <__ctype_b_loc@plt+0xa5f0>
    df6d:	test   dl,dl
    df6f:	je     dfac <__ctype_b_loc@plt+0xa63c>
    df71:	mov    rcx,rax
    df74:	xor    esi,esi
    df76:	jmp    df96 <__ctype_b_loc@plt+0xa626>
    df78:	nop    DWORD PTR [rax+rax*1+0x0]
    df80:	test   sil,sil
    df83:	je     df8a <__ctype_b_loc@plt+0xa61a>
    df85:	mov    rax,rcx
    df88:	xor    esi,esi
    df8a:	movzx  edx,BYTE PTR [rcx+0x1]
    df8e:	add    rcx,0x1
    df92:	test   dl,dl
    df94:	je     dfac <__ctype_b_loc@plt+0xa63c>
    df96:	cmp    dl,0x2f
    df99:	jne    df80 <__ctype_b_loc@plt+0xa610>
    df9b:	movzx  edx,BYTE PTR [rcx+0x1]
    df9f:	add    rcx,0x1
    dfa3:	mov    esi,0x1
    dfa8:	test   dl,dl
    dfaa:	jne    df96 <__ctype_b_loc@plt+0xa626>
    dfac:	ret    
    dfad:	nop    DWORD PTR [rax]
    dfb0:	endbr64 
    dfb4:	push   rbx
    dfb5:	mov    rbx,rdi
    dfb8:	call   3650 <strlen@plt>
    dfbd:	cmp    rax,0x1
    dfc1:	jbe    dfce <__ctype_b_loc@plt+0xa65e>
    dfc3:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
    dfc8:	lea    rdx,[rax-0x1]
    dfcc:	je     dfd0 <__ctype_b_loc@plt+0xa660>
    dfce:	pop    rbx
    dfcf:	ret    
    dfd0:	mov    rax,rdx
    dfd3:	jmp    dfbd <__ctype_b_loc@plt+0xa64d>
    dfd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dfdf:	nop
    dfe0:	endbr64 
    dfe4:	sub    rsp,0x58
    dfe8:	mov    QWORD PTR [rsp+0x30],rdx
    dfed:	xor    edx,edx
    dfef:	mov    rax,QWORD PTR fs:0x28
    dff8:	mov    QWORD PTR [rsp+0x18],rax
    dffd:	xor    eax,eax
    dfff:	test   sil,0x40
    e003:	jne    e030 <__ctype_b_loc@plt+0xa6c0>
    e005:	xor    eax,eax
    e007:	call   38a0 <open@plt>
    e00c:	mov    edi,eax
    e00e:	call   e4d0 <__ctype_b_loc@plt+0xab60>
    e013:	mov    rcx,QWORD PTR [rsp+0x18]
    e018:	xor    rcx,QWORD PTR fs:0x28
    e021:	jne    e051 <__ctype_b_loc@plt+0xa6e1>
    e023:	add    rsp,0x58
    e027:	ret    
    e028:	nop    DWORD PTR [rax+rax*1+0x0]
    e030:	lea    rax,[rsp+0x60]
    e035:	mov    DWORD PTR [rsp],0x10
    e03c:	mov    edx,DWORD PTR [rsp+0x30]
    e040:	mov    QWORD PTR [rsp+0x8],rax
    e045:	lea    rax,[rsp+0x20]
    e04a:	mov    QWORD PTR [rsp+0x10],rax
    e04f:	jmp    e005 <__ctype_b_loc@plt+0xa695>
    e051:	call   3680 <__stack_chk_fail@plt>
    e056:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e060:	endbr64 
    e064:	sub    rsp,0x58
    e068:	mov    QWORD PTR [rsp+0x38],rcx
    e06d:	xor    ecx,ecx
    e06f:	mov    rax,QWORD PTR fs:0x28
    e078:	mov    QWORD PTR [rsp+0x18],rax
    e07d:	xor    eax,eax
    e07f:	test   dl,0x40
    e082:	jne    e0b0 <__ctype_b_loc@plt+0xa740>
    e084:	xor    eax,eax
    e086:	call   3670 <openat@plt>
    e08b:	mov    edi,eax
    e08d:	call   e4d0 <__ctype_b_loc@plt+0xab60>
    e092:	mov    rcx,QWORD PTR [rsp+0x18]
    e097:	xor    rcx,QWORD PTR fs:0x28
    e0a0:	jne    e0d1 <__ctype_b_loc@plt+0xa761>
    e0a2:	add    rsp,0x58
    e0a6:	ret    
    e0a7:	nop    WORD PTR [rax+rax*1+0x0]
    e0b0:	lea    rax,[rsp+0x60]
    e0b5:	mov    DWORD PTR [rsp],0x18
    e0bc:	mov    ecx,DWORD PTR [rsp+0x38]
    e0c0:	mov    QWORD PTR [rsp+0x8],rax
    e0c5:	lea    rax,[rsp+0x20]
    e0ca:	mov    QWORD PTR [rsp+0x10],rax
    e0cf:	jmp    e084 <__ctype_b_loc@plt+0xa714>
    e0d1:	call   3680 <__stack_chk_fail@plt>
    e0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e0e0:	endbr64 
    e0e4:	mov    rsi,QWORD PTR [rsi]
    e0e7:	mov    rdi,QWORD PTR [rdi]
    e0ea:	jmp    3750 <strcmp@plt>
    e0ef:	nop
    e0f0:	endbr64 
    e0f4:	push   r15
    e0f6:	mov    esi,esi
    e0f8:	lea    rax,[rip+0x9a71]        # 17b70 <__ctype_b_loc@plt+0x14200>
    e0ff:	push   r14
    e101:	push   r13
    e103:	push   r12
    e105:	push   rbp
    e106:	push   rbx
    e107:	sub    rsp,0x38
    e10b:	mov    rax,QWORD PTR [rax+rsi*8]
    e10f:	mov    QWORD PTR [rsp],rax
    e113:	test   rdi,rdi
    e116:	je     e3e8 <__ctype_b_loc@plt+0xaa78>
    e11c:	mov    rbx,rdi
    e11f:	xor    r15d,r15d
    e122:	xor    r13d,r13d
    e125:	xor    r14d,r14d
    e128:	call   3560 <__errno_location@plt>
    e12d:	xor    r12d,r12d
    e130:	mov    QWORD PTR [rsp+0x18],0x0
    e139:	mov    QWORD PTR [rsp+0x8],0x0
    e142:	mov    rbp,rax
    e145:	jmp    e154 <__ctype_b_loc@plt+0xa7e4>
    e147:	nop    WORD PTR [rax+rax*1+0x0]
    e150:	test   dl,dl
    e152:	jne    e187 <__ctype_b_loc@plt+0xa817>
    e154:	mov    DWORD PTR [rbp+0x0],0x0
    e15b:	mov    rdi,rbx
    e15e:	call   3800 <readdir@plt>
    e163:	test   rax,rax
    e166:	je     e1f8 <__ctype_b_loc@plt+0xa888>
    e16c:	movzx  edx,BYTE PTR [rax+0x13]
    e170:	lea    r8,[rax+0x13]
    e174:	cmp    dl,0x2e
    e177:	jne    e150 <__ctype_b_loc@plt+0xa7e0>
    e179:	cmp    BYTE PTR [rax+0x14],0x2e
    e17d:	je     e1e8 <__ctype_b_loc@plt+0xa878>
    e17f:	movzx  edx,BYTE PTR [rax+0x14]
    e183:	test   dl,dl
    e185:	je     e154 <__ctype_b_loc@plt+0xa7e4>
    e187:	mov    rdi,r8
    e18a:	mov    QWORD PTR [rsp+0x10],r8
    e18f:	call   3650 <strlen@plt>
    e194:	cmp    QWORD PTR [rsp],0x0
    e199:	mov    r8,QWORD PTR [rsp+0x10]
    e19e:	lea    rdx,[rax+0x1]
    e1a2:	je     e2b0 <__ctype_b_loc@plt+0xa940>
    e1a8:	lea    rax,[r13+0x1]
    e1ac:	mov    QWORD PTR [rsp+0x10],rax
    e1b1:	cmp    r13,QWORD PTR [rsp+0x18]
    e1b6:	je     e358 <__ctype_b_loc@plt+0xa9e8>
    e1bc:	mov    rdi,r8
    e1bf:	mov    QWORD PTR [rsp+0x20],rdx
    e1c4:	lea    r13,[r14+r13*8]
    e1c8:	call   eff0 <__ctype_b_loc@plt+0xb680>
    e1cd:	mov    rdx,QWORD PTR [rsp+0x20]
    e1d2:	mov    QWORD PTR [r13+0x0],rax
    e1d6:	mov    r13,QWORD PTR [rsp+0x10]
    e1db:	add    r15,rdx
    e1de:	jmp    e154 <__ctype_b_loc@plt+0xa7e4>
    e1e3:	nop    DWORD PTR [rax+rax*1+0x0]
    e1e8:	movzx  edx,BYTE PTR [rax+0x15]
    e1ec:	jmp    e150 <__ctype_b_loc@plt+0xa7e0>
    e1f1:	nop    DWORD PTR [rax+0x0]
    e1f8:	mov    ebx,DWORD PTR [rbp+0x0]
    e1fb:	test   ebx,ebx
    e1fd:	jne    e3cd <__ctype_b_loc@plt+0xaa5d>
    e203:	cmp    QWORD PTR [rsp],0x0
    e208:	je     e348 <__ctype_b_loc@plt+0xa9d8>
    e20e:	lea    rbp,[r15+0x1]
    e212:	test   r13,r13
    e215:	jne    e230 <__ctype_b_loc@plt+0xa8c0>
    e217:	mov    rdi,rbp
    e21a:	call   eda0 <__ctype_b_loc@plt+0xb430>
    e21f:	mov    r12,rax
    e222:	mov    rbp,rax
    e225:	jmp    e28c <__ctype_b_loc@plt+0xa91c>
    e227:	nop    WORD PTR [rax+rax*1+0x0]
    e230:	mov    rcx,QWORD PTR [rsp]
    e234:	mov    rsi,r13
    e237:	mov    edx,0x8
    e23c:	mov    rdi,r14
    e23f:	mov    rbx,r14
    e242:	lea    r13,[r14+r13*8]
    e246:	call   35c0 <qsort@plt>
    e24b:	mov    rdi,rbp
    e24e:	xor    ebp,ebp
    e250:	call   eda0 <__ctype_b_loc@plt+0xb430>
    e255:	mov    r12,rax
    e258:	nop    DWORD PTR [rax+rax*1+0x0]
    e260:	mov    rsi,QWORD PTR [rbx]
    e263:	lea    r15,[r12+rbp*1]
    e267:	add    rbx,0x8
    e26b:	mov    rdi,r15
    e26e:	call   3640 <stpcpy@plt>
    e273:	mov    rdi,QWORD PTR [rbx-0x8]
    e277:	sub    rax,r15
    e27a:	lea    rbp,[rbp+rax*1+0x1]
    e27f:	call   3520 <free@plt>
    e284:	cmp    r13,rbx
    e287:	jne    e260 <__ctype_b_loc@plt+0xa8f0>
    e289:	add    rbp,r12
    e28c:	mov    rdi,r14
    e28f:	call   3520 <free@plt>
    e294:	mov    BYTE PTR [rbp+0x0],0x0
    e298:	add    rsp,0x38
    e29c:	mov    rax,r12
    e29f:	pop    rbx
    e2a0:	pop    rbp
    e2a1:	pop    r12
    e2a3:	pop    r13
    e2a5:	pop    r14
    e2a7:	pop    r15
    e2a9:	ret    
    e2aa:	nop    WORD PTR [rax+rax*1+0x0]
    e2b0:	mov    rax,QWORD PTR [rsp+0x8]
    e2b5:	mov    rcx,r15
    e2b8:	sub    rax,r15
    e2bb:	add    rcx,rdx
    e2be:	mov    QWORD PTR [rsp+0x10],rcx
    e2c3:	setb   cl
    e2c6:	movzx  ecx,cl
    e2c9:	cmp    rax,rdx
    e2cc:	ja     e32c <__ctype_b_loc@plt+0xa9bc>
    e2ce:	test   rcx,rcx
    e2d1:	jne    e400 <__ctype_b_loc@plt+0xaa90>
    e2d7:	test   r12,r12
    e2da:	je     e3f0 <__ctype_b_loc@plt+0xaa80>
    e2e0:	movabs rax,0x5555555555555553
    e2ea:	mov    rcx,QWORD PTR [rsp+0x10]
    e2ef:	cmp    rcx,rax
    e2f2:	ja     e400 <__ctype_b_loc@plt+0xaa90>
    e2f8:	mov    rax,rcx
    e2fb:	shr    rax,1
    e2fe:	lea    rax,[rcx+rax*1+0x1]
    e303:	mov    QWORD PTR [rsp+0x8],rax
    e308:	mov    rsi,QWORD PTR [rsp+0x8]
    e30d:	mov    rdi,r12
    e310:	mov    QWORD PTR [rsp+0x28],rdx
    e315:	mov    QWORD PTR [rsp+0x20],r8
    e31a:	call   ee00 <__ctype_b_loc@plt+0xb490>
    e31f:	mov    rdx,QWORD PTR [rsp+0x28]
    e324:	mov    r8,QWORD PTR [rsp+0x20]
    e329:	mov    r12,rax
    e32c:	lea    rdi,[r12+r15*1]
    e330:	mov    rsi,r8
    e333:	call   37c0 <memcpy@plt>
    e338:	mov    r15,QWORD PTR [rsp+0x10]
    e33d:	jmp    e154 <__ctype_b_loc@plt+0xa7e4>
    e342:	nop    WORD PTR [rax+rax*1+0x0]
    e348:	cmp    QWORD PTR [rsp+0x8],r15
    e34d:	je     e3b0 <__ctype_b_loc@plt+0xaa40>
    e34f:	lea    rbp,[r12+r15*1]
    e353:	jmp    e294 <__ctype_b_loc@plt+0xa924>
    e358:	test   r14,r14
    e35b:	je     e416 <__ctype_b_loc@plt+0xaaa6>
    e361:	movabs rax,0xaaaaaaaaaaaaaa9
    e36b:	cmp    r13,rax
    e36e:	ja     e400 <__ctype_b_loc@plt+0xaa90>
    e374:	mov    rax,r13
    e377:	shr    rax,1
    e37a:	add    rax,QWORD PTR [rsp+0x10]
    e37f:	mov    QWORD PTR [rsp+0x18],rax
    e384:	lea    rsi,[rax*8+0x0]
    e38c:	mov    rdi,r14
    e38f:	mov    QWORD PTR [rsp+0x28],rdx
    e394:	mov    QWORD PTR [rsp+0x20],r8
    e399:	call   ee00 <__ctype_b_loc@plt+0xb490>
    e39e:	mov    rdx,QWORD PTR [rsp+0x28]
    e3a3:	mov    r8,QWORD PTR [rsp+0x20]
    e3a8:	mov    r14,rax
    e3ab:	jmp    e1bc <__ctype_b_loc@plt+0xa84c>
    e3b0:	mov    rbx,QWORD PTR [rsp+0x8]
    e3b5:	mov    rdi,r12
    e3b8:	lea    rsi,[rbx+0x1]
    e3bc:	call   ee00 <__ctype_b_loc@plt+0xb490>
    e3c1:	mov    r12,rax
    e3c4:	lea    rbp,[rax+rbx*1]
    e3c8:	jmp    e294 <__ctype_b_loc@plt+0xa924>
    e3cd:	mov    rdi,r14
    e3d0:	call   3520 <free@plt>
    e3d5:	mov    rdi,r12
    e3d8:	xor    r12d,r12d
    e3db:	call   3520 <free@plt>
    e3e0:	mov    DWORD PTR [rbp+0x0],ebx
    e3e3:	jmp    e298 <__ctype_b_loc@plt+0xa928>
    e3e8:	xor    r12d,r12d
    e3eb:	jmp    e298 <__ctype_b_loc@plt+0xa928>
    e3f0:	mov    rax,QWORD PTR [rsp+0x10]
    e3f5:	test   rax,rax
    e3f8:	je     e408 <__ctype_b_loc@plt+0xaa98>
    e3fa:	jns    e303 <__ctype_b_loc@plt+0xa993>
    e400:	call   d350 <__ctype_b_loc@plt+0x99e0>
    e405:	nop    DWORD PTR [rax]
    e408:	mov    QWORD PTR [rsp+0x8],0x80
    e411:	jmp    e308 <__ctype_b_loc@plt+0xa998>
    e416:	test   r13,r13
    e419:	je     e440 <__ctype_b_loc@plt+0xaad0>
    e41b:	mov    rax,r13
    e41e:	mov    rsi,r13
    e421:	shr    rax,0x3d
    e425:	setne  al
    e428:	shl    rsi,0x3
    e42c:	movzx  eax,al
    e42f:	js     e400 <__ctype_b_loc@plt+0xaa90>
    e431:	test   rax,rax
    e434:	je     e38c <__ctype_b_loc@plt+0xaa1c>
    e43a:	jmp    e400 <__ctype_b_loc@plt+0xaa90>
    e43c:	nop    DWORD PTR [rax+0x0]
    e440:	mov    QWORD PTR [rsp+0x18],0x10
    e449:	mov    esi,0x80
    e44e:	mov    QWORD PTR [rsp+0x10],0x1
    e457:	jmp    e38c <__ctype_b_loc@plt+0xaa1c>
    e45c:	nop    DWORD PTR [rax+0x0]
    e460:	endbr64 
    e464:	push   r12
    e466:	mov    r12d,esi
    e469:	push   rbp
    e46a:	push   rbx
    e46b:	call   108b0 <__ctype_b_loc@plt+0xcf40>
    e470:	test   rax,rax
    e473:	je     e4a0 <__ctype_b_loc@plt+0xab30>
    e475:	mov    rbp,rax
    e478:	mov    esi,r12d
    e47b:	mov    rdi,rax
    e47e:	call   e0f0 <__ctype_b_loc@plt+0xa780>
    e483:	mov    rdi,rbp
    e486:	mov    r12,rax
    e489:	call   36f0 <closedir@plt>
    e48e:	test   eax,eax
    e490:	jne    e4b0 <__ctype_b_loc@plt+0xab40>
    e492:	mov    rax,r12
    e495:	pop    rbx
    e496:	pop    rbp
    e497:	pop    r12
    e499:	ret    
    e49a:	nop    WORD PTR [rax+rax*1+0x0]
    e4a0:	xor    r12d,r12d
    e4a3:	pop    rbx
    e4a4:	pop    rbp
    e4a5:	mov    rax,r12
    e4a8:	pop    r12
    e4aa:	ret    
    e4ab:	nop    DWORD PTR [rax+rax*1+0x0]
    e4b0:	call   3560 <__errno_location@plt>
    e4b5:	mov    rdi,r12
    e4b8:	xor    r12d,r12d
    e4bb:	mov    ebx,DWORD PTR [rax]
    e4bd:	mov    rbp,rax
    e4c0:	call   3520 <free@plt>
    e4c5:	mov    rax,r12
    e4c8:	mov    DWORD PTR [rbp+0x0],ebx
    e4cb:	pop    rbx
    e4cc:	pop    rbp
    e4cd:	pop    r12
    e4cf:	ret    
    e4d0:	endbr64 
    e4d4:	push   r13
    e4d6:	push   r12
    e4d8:	mov    r12d,edi
    e4db:	push   rbp
    e4dc:	push   rbx
    e4dd:	sub    rsp,0x8
    e4e1:	cmp    edi,0x2
    e4e4:	jbe    e4f8 <__ctype_b_loc@plt+0xab88>
    e4e6:	add    rsp,0x8
    e4ea:	mov    eax,r12d
    e4ed:	pop    rbx
    e4ee:	pop    rbp
    e4ef:	pop    r12
    e4f1:	pop    r13
    e4f3:	ret    
    e4f4:	nop    DWORD PTR [rax+0x0]
    e4f8:	call   109b0 <__ctype_b_loc@plt+0xd040>
    e4fd:	mov    ebp,eax
    e4ff:	call   3560 <__errno_location@plt>
    e504:	mov    edi,r12d
    e507:	mov    r12d,ebp
    e50a:	mov    r13d,DWORD PTR [rax]
    e50d:	mov    rbx,rax
    e510:	call   36d0 <close@plt>
    e515:	mov    eax,r12d
    e518:	mov    DWORD PTR [rbx],r13d
    e51b:	add    rsp,0x8
    e51f:	pop    rbx
    e520:	pop    rbp
    e521:	pop    r12
    e523:	pop    r13
    e525:	ret    
    e526:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e530:	push   r12
    e532:	push   rbp
    e533:	mov    rbp,rdi
    e536:	push   rbx
    e537:	mov    rbx,QWORD PTR [rsi]
    e53a:	mov    rdx,QWORD PTR [rbx+0x8]
    e53e:	mov    rax,QWORD PTR [rbx+0x18]
    e542:	cmp    rdx,0x3ffffffe
    e549:	je     e580 <__ctype_b_loc@plt+0xac10>
    e54b:	cmp    rdx,0x3fffffff
    e552:	je     e5c0 <__ctype_b_loc@plt+0xac50>
    e554:	cmp    rax,0x3ffffffe
    e55a:	jne    e59d <__ctype_b_loc@plt+0xac2d>
    e55c:	mov    rdx,QWORD PTR [rbp+0x58]
    e560:	mov    rax,QWORD PTR [rbp+0x60]
    e564:	xor    r12d,r12d
    e567:	mov    QWORD PTR [rbx+0x10],rdx
    e56b:	mov    QWORD PTR [rbx+0x18],rax
    e56f:	mov    eax,r12d
    e572:	pop    rbx
    e573:	pop    rbp
    e574:	pop    r12
    e576:	ret    
    e577:	nop    WORD PTR [rax+rax*1+0x0]
    e580:	mov    r12d,0x1
    e586:	cmp    rax,0x3ffffffe
    e58c:	je     e56f <__ctype_b_loc@plt+0xabff>
    e58e:	mov    rcx,QWORD PTR [rdi+0x48]
    e592:	mov    rdx,QWORD PTR [rdi+0x50]
    e596:	mov    QWORD PTR [rbx],rcx
    e599:	mov    QWORD PTR [rbx+0x8],rdx
    e59d:	xor    r12d,r12d
    e5a0:	cmp    rax,0x3fffffff
    e5a6:	jne    e56f <__ctype_b_loc@plt+0xabff>
    e5a8:	lea    rdi,[rbx+0x10]
    e5ac:	call   10950 <__ctype_b_loc@plt+0xcfe0>
    e5b1:	mov    eax,r12d
    e5b4:	pop    rbx
    e5b5:	pop    rbp
    e5b6:	pop    r12
    e5b8:	ret    
    e5b9:	nop    DWORD PTR [rax+0x0]
    e5c0:	cmp    rax,0x3fffffff
    e5c6:	je     e5e0 <__ctype_b_loc@plt+0xac70>
    e5c8:	mov    rdi,rbx
    e5cb:	call   10950 <__ctype_b_loc@plt+0xcfe0>
    e5d0:	mov    rax,QWORD PTR [rbx+0x18]
    e5d4:	cmp    rax,0x3ffffffe
    e5da:	je     e55c <__ctype_b_loc@plt+0xabec>
    e5dc:	jmp    e59d <__ctype_b_loc@plt+0xac2d>
    e5de:	xchg   ax,ax
    e5e0:	mov    QWORD PTR [rsi],0x0
    e5e7:	xor    r12d,r12d
    e5ea:	jmp    e56f <__ctype_b_loc@plt+0xabff>
    e5ec:	nop    DWORD PTR [rax+0x0]
    e5f0:	mov    r9,QWORD PTR [rdi+0x8]
    e5f4:	lea    rsi,[r9-0x3ffffffe]
    e5fb:	cmp    rsi,0x1
    e5ff:	jbe    e60a <__ctype_b_loc@plt+0xac9a>
    e601:	cmp    r9,0x3b9ac9ff
    e608:	ja     e680 <__ctype_b_loc@plt+0xad10>
    e60a:	mov    rdx,QWORD PTR [rdi+0x18]
    e60e:	lea    r8,[rdx-0x3ffffffe]
    e615:	cmp    r8,0x1
    e619:	jbe    e624 <__ctype_b_loc@plt+0xacb4>
    e61b:	cmp    rdx,0x3b9ac9ff
    e622:	ja     e680 <__ctype_b_loc@plt+0xad10>
    e624:	xor    ecx,ecx
    e626:	xor    r10d,r10d
    e629:	cmp    rsi,0x1
    e62d:	ja     e648 <__ctype_b_loc@plt+0xacd8>
    e62f:	mov    QWORD PTR [rdi],0x0
    e636:	xor    ecx,ecx
    e638:	cmp    r9,0x3ffffffe
    e63f:	mov    r10d,0x1
    e645:	sete   cl
    e648:	cmp    r8,0x1
    e64c:	ja     e66a <__ctype_b_loc@plt+0xacfa>
    e64e:	xor    eax,eax
    e650:	mov    QWORD PTR [rdi+0x10],0x0
    e658:	cmp    rdx,0x3ffffffe
    e65f:	mov    r10d,0x1
    e665:	sete   al
    e668:	add    ecx,eax
    e66a:	xor    eax,eax
    e66c:	cmp    ecx,0x1
    e66f:	sete   al
    e672:	add    eax,r10d
    e675:	ret    
    e676:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e680:	sub    rsp,0x8
    e684:	call   3560 <__errno_location@plt>
    e689:	mov    DWORD PTR [rax],0x16
    e68f:	mov    eax,0xffffffff
    e694:	add    rsp,0x8
    e698:	ret    
    e699:	nop    DWORD PTR [rax+0x0]
    e6a0:	endbr64 
    e6a4:	push   r14
    e6a6:	push   r13
    e6a8:	mov    r13,rsi
    e6ab:	push   r12
    e6ad:	push   rbp
    e6ae:	mov    ebp,edi
    e6b0:	push   rbx
    e6b1:	sub    rsp,0x110
    e6b8:	mov    rax,QWORD PTR fs:0x28
    e6c1:	mov    QWORD PTR [rsp+0x108],rax
    e6c9:	xor    eax,eax
    e6cb:	test   rdx,rdx
    e6ce:	je     e8a0 <__ctype_b_loc@plt+0xaf30>
    e6d4:	movdqu xmm0,XMMWORD PTR [rdx]
    e6d8:	movdqu xmm1,XMMWORD PTR [rdx+0x10]
    e6dd:	lea    rdi,[rsp+0x10]
    e6e2:	mov    QWORD PTR [rsp+0x8],rdi
    e6e7:	movaps XMMWORD PTR [rsp+0x10],xmm0
    e6ec:	movaps XMMWORD PTR [rsp+0x20],xmm1
    e6f1:	call   e5f0 <__ctype_b_loc@plt+0xac80>
    e6f6:	mov    ebx,eax
    e6f8:	test   eax,eax
    e6fa:	js     eaa3 <__ctype_b_loc@plt+0xb133>
    e700:	test   ebp,ebp
    e702:	jns    e70d <__ctype_b_loc@plt+0xad9d>
    e704:	test   r13,r13
    e707:	je     ea98 <__ctype_b_loc@plt+0xb128>
    e70d:	mov    eax,DWORD PTR [rip+0xf7cd]        # 1dee0 <stderr@@GLIBC_2.2.5+0x3ea0>
    e713:	test   eax,eax
    e715:	js     e74a <__ctype_b_loc@plt+0xadda>
    e717:	cmp    ebx,0x2
    e71a:	je     e8b0 <__ctype_b_loc@plt+0xaf40>
    e720:	mov    rsi,QWORD PTR [rsp+0x8]
    e725:	test   ebp,ebp
    e727:	js     e940 <__ctype_b_loc@plt+0xafd0>
    e72d:	mov    edi,ebp
    e72f:	call   38f0 <futimens@plt>
    e734:	mov    r12d,eax
    e737:	test   eax,eax
    e739:	jle    e95d <__ctype_b_loc@plt+0xafed>
    e73f:	call   3560 <__errno_location@plt>
    e744:	mov    DWORD PTR [rax],0x26
    e74a:	mov    DWORD PTR [rip+0xf78c],0xffffffff        # 1dee0 <stderr@@GLIBC_2.2.5+0x3ea0>
    e754:	mov    DWORD PTR [rip+0xf77e],0xffffffff        # 1dedc <stderr@@GLIBC_2.2.5+0x3e9c>
    e75e:	test   ebx,ebx
    e760:	je     e7b3 <__ctype_b_loc@plt+0xae43>
    e762:	cmp    ebx,0x3
    e765:	je     e78d <__ctype_b_loc@plt+0xae1d>
    e767:	lea    rdx,[rsp+0x70]
    e76c:	test   ebp,ebp
    e76e:	js     e920 <__ctype_b_loc@plt+0xafb0>
    e774:	mov    esi,ebp
    e776:	mov    edi,0x1
    e77b:	call   3830 <__fxstat@plt>
    e780:	test   eax,eax
    e782:	setne  al
    e785:	test   al,al
    e787:	jne    eaa3 <__ctype_b_loc@plt+0xb133>
    e78d:	cmp    QWORD PTR [rsp+0x8],0x0
    e793:	je     e880 <__ctype_b_loc@plt+0xaf10>
    e799:	lea    rsi,[rsp+0x8]
    e79e:	lea    rdi,[rsp+0x70]
    e7a3:	xor    r12d,r12d
    e7a6:	call   e530 <__ctype_b_loc@plt+0xabc0>
    e7ab:	test   al,al
    e7ad:	jne    e84c <__ctype_b_loc@plt+0xaedc>
    e7b3:	mov    rsi,QWORD PTR [rsp+0x8]
    e7b8:	test   rsi,rsi
    e7bb:	je     e880 <__ctype_b_loc@plt+0xaf10>
    e7c1:	mov    rax,QWORD PTR [rsi]
    e7c4:	mov    rdi,QWORD PTR [rsi+0x8]
    e7c8:	lea    r14,[rsp+0x30]
    e7cd:	movabs rcx,0x20c49ba5e353f7cf
    e7d7:	mov    QWORD PTR [rsp+0x30],rax
    e7dc:	mov    rax,rdi
    e7df:	sar    rdi,0x3f
    e7e3:	imul   rcx
    e7e6:	mov    rax,QWORD PTR [rsi+0x10]
    e7ea:	mov    rsi,QWORD PTR [rsi+0x18]
    e7ee:	mov    QWORD PTR [rsp+0x40],rax
    e7f3:	mov    rax,rsi
    e7f6:	sar    rsi,0x3f
    e7fa:	sar    rdx,0x7
    e7fe:	sub    rdx,rdi
    e801:	mov    QWORD PTR [rsp+0x38],rdx
    e806:	imul   rcx
    e809:	mov    rcx,rdx
    e80c:	mov    rdx,r14
    e80f:	sar    rcx,0x7
    e813:	sub    rcx,rsi
    e816:	mov    QWORD PTR [rsp+0x48],rcx
    e81b:	test   ebp,ebp
    e81d:	js     e88a <__ctype_b_loc@plt+0xaf1a>
    e81f:	xor    esi,esi
    e821:	mov    edi,ebp
    e823:	call   3950 <futimesat@plt>
    e828:	mov    r12d,eax
    e82b:	test   eax,eax
    e82d:	je     e978 <__ctype_b_loc@plt+0xb008>
    e833:	mov    r12d,0xffffffff
    e839:	test   r13,r13
    e83c:	je     e84c <__ctype_b_loc@plt+0xaedc>
    e83e:	mov    rsi,r14
    e841:	mov    rdi,r13
    e844:	call   3730 <utimes@plt>
    e849:	mov    r12d,eax
    e84c:	mov    rax,QWORD PTR [rsp+0x108]
    e854:	xor    rax,QWORD PTR fs:0x28
    e85d:	jne    eaee <__ctype_b_loc@plt+0xb17e>
    e863:	add    rsp,0x110
    e86a:	mov    eax,r12d
    e86d:	pop    rbx
    e86e:	pop    rbp
    e86f:	pop    r12
    e871:	pop    r13
    e873:	pop    r14
    e875:	ret    
    e876:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e880:	xor    r14d,r14d
    e883:	mov    rdx,r14
    e886:	test   ebp,ebp
    e888:	jns    e81f <__ctype_b_loc@plt+0xaeaf>
    e88a:	mov    rsi,r13
    e88d:	mov    edi,0xffffff9c
    e892:	call   3950 <futimesat@plt>
    e897:	mov    r12d,eax
    e89a:	jmp    e84c <__ctype_b_loc@plt+0xaedc>
    e89c:	nop    DWORD PTR [rax+0x0]
    e8a0:	mov    QWORD PTR [rsp+0x8],0x0
    e8a9:	xor    ebx,ebx
    e8ab:	jmp    e700 <__ctype_b_loc@plt+0xad90>
    e8b0:	lea    rdx,[rsp+0x70]
    e8b5:	test   ebp,ebp
    e8b7:	js     ea50 <__ctype_b_loc@plt+0xb0e0>
    e8bd:	mov    esi,ebp
    e8bf:	mov    edi,0x1
    e8c4:	call   3830 <__fxstat@plt>
    e8c9:	test   eax,eax
    e8cb:	setne  al
    e8ce:	test   al,al
    e8d0:	jne    eaa3 <__ctype_b_loc@plt+0xb133>
    e8d6:	mov    rsi,QWORD PTR [rsp+0x8]
    e8db:	cmp    QWORD PTR [rsi+0x8],0x3ffffffe
    e8e3:	je     ea70 <__ctype_b_loc@plt+0xb100>
    e8e9:	cmp    QWORD PTR [rsi+0x18],0x3ffffffe
    e8f1:	mov    ebx,0x3
    e8f6:	jne    e725 <__ctype_b_loc@plt+0xadb5>
    e8fc:	mov    rax,QWORD PTR [rsp+0xd0]
    e904:	mov    rdx,QWORD PTR [rsp+0xc8]
    e90c:	mov    QWORD PTR [rsi+0x18],rax
    e910:	mov    QWORD PTR [rsi+0x10],rdx
    e914:	jmp    e725 <__ctype_b_loc@plt+0xadb5>
    e919:	nop    DWORD PTR [rax+0x0]
    e920:	mov    rsi,r13
    e923:	mov    edi,0x1
    e928:	call   37f0 <__xstat@plt>
    e92d:	test   eax,eax
    e92f:	setne  al
    e932:	jmp    e785 <__ctype_b_loc@plt+0xae15>
    e937:	nop    WORD PTR [rax+rax*1+0x0]
    e940:	mov    rdx,rsi
    e943:	xor    ecx,ecx
    e945:	mov    rsi,r13
    e948:	mov    edi,0xffffff9c
    e94d:	call   3530 <utimensat@plt>
    e952:	mov    r12d,eax
    e955:	test   eax,eax
    e957:	jg     e73f <__ctype_b_loc@plt+0xadcf>
    e95d:	jne    eab0 <__ctype_b_loc@plt+0xb140>
    e963:	mov    DWORD PTR [rip+0xf573],0x1        # 1dee0 <stderr@@GLIBC_2.2.5+0x3ea0>
    e96d:	jmp    e84c <__ctype_b_loc@plt+0xaedc>
    e972:	nop    WORD PTR [rax+rax*1+0x0]
    e978:	test   r14,r14
    e97b:	je     e84c <__ctype_b_loc@plt+0xaedc>
    e981:	cmp    QWORD PTR [r14+0x8],0x7a11f
    e989:	setg   bl
    e98c:	cmp    QWORD PTR [r14+0x18],0x7a11f
    e994:	setg   r13b
    e998:	test   bl,bl
    e99a:	jne    e9a5 <__ctype_b_loc@plt+0xb035>
    e99c:	test   r13b,r13b
    e99f:	je     e84c <__ctype_b_loc@plt+0xaedc>
    e9a5:	lea    rdx,[rsp+0x70]
    e9aa:	mov    esi,ebp
    e9ac:	mov    edi,0x1
    e9b1:	call   3830 <__fxstat@plt>
    e9b6:	test   eax,eax
    e9b8:	jne    e84c <__ctype_b_loc@plt+0xaedc>
    e9be:	mov    rdx,QWORD PTR [rsp+0xc8]
    e9c6:	sub    rdx,QWORD PTR [r14+0x10]
    e9ca:	mov    rax,QWORD PTR [rsp+0xb8]
    e9d2:	movdqa xmm2,XMMWORD PTR [r14]
    e9d7:	movdqa xmm3,XMMWORD PTR [r14+0x10]
    e9dd:	sub    rax,QWORD PTR [r14]
    e9e0:	cmp    rdx,0x1
    e9e4:	sete   dl
    e9e7:	movaps XMMWORD PTR [rsp+0x50],xmm2
    e9ec:	movaps XMMWORD PTR [rsp+0x60],xmm3
    e9f1:	and    r13d,edx
    e9f4:	cmp    rax,0x1
    e9f8:	jne    eac8 <__ctype_b_loc@plt+0xb158>
    e9fe:	test   bl,bl
    ea00:	je     eac8 <__ctype_b_loc@plt+0xb158>
    ea06:	cmp    QWORD PTR [rsp+0xc0],0x0
    ea0f:	jne    eac8 <__ctype_b_loc@plt+0xb158>
    ea15:	mov    QWORD PTR [rsp+0x58],0x0
    ea1e:	test   r13b,r13b
    ea21:	je     ea32 <__ctype_b_loc@plt+0xb0c2>
    ea23:	cmp    QWORD PTR [rsp+0xd0],0x0
    ea2c:	je     eae0 <__ctype_b_loc@plt+0xb170>
    ea32:	lea    rdx,[rsp+0x50]
    ea37:	xor    esi,esi
    ea39:	mov    edi,ebp
    ea3b:	call   3950 <futimesat@plt>
    ea40:	xor    r12d,r12d
    ea43:	jmp    e84c <__ctype_b_loc@plt+0xaedc>
    ea48:	nop    DWORD PTR [rax+rax*1+0x0]
    ea50:	mov    rsi,r13
    ea53:	mov    edi,0x1
    ea58:	call   37f0 <__xstat@plt>
    ea5d:	test   eax,eax
    ea5f:	setne  al
    ea62:	jmp    e8ce <__ctype_b_loc@plt+0xaf5e>
    ea67:	nop    WORD PTR [rax+rax*1+0x0]
    ea70:	mov    rax,QWORD PTR [rsp+0xc0]
    ea78:	mov    rdx,QWORD PTR [rsp+0xb8]
    ea80:	mov    ebx,0x3
    ea85:	mov    QWORD PTR [rsi],rdx
    ea88:	mov    QWORD PTR [rsi+0x8],rax
    ea8c:	jmp    e725 <__ctype_b_loc@plt+0xadb5>
    ea91:	nop    DWORD PTR [rax+0x0]
    ea98:	call   3560 <__errno_location@plt>
    ea9d:	mov    DWORD PTR [rax],0x9
    eaa3:	mov    r12d,0xffffffff
    eaa9:	jmp    e84c <__ctype_b_loc@plt+0xaedc>
    eaae:	xchg   ax,ax
    eab0:	call   3560 <__errno_location@plt>
    eab5:	cmp    DWORD PTR [rax],0x26
    eab8:	jne    e963 <__ctype_b_loc@plt+0xaff3>
    eabe:	jmp    e74a <__ctype_b_loc@plt+0xadda>
    eac3:	nop    DWORD PTR [rax+rax*1+0x0]
    eac8:	test   r13b,r13b
    eacb:	je     ea40 <__ctype_b_loc@plt+0xb0d0>
    ead1:	cmp    QWORD PTR [rsp+0xd0],0x0
    eada:	jne    ea40 <__ctype_b_loc@plt+0xb0d0>
    eae0:	mov    QWORD PTR [rsp+0x68],0x0
    eae9:	jmp    ea32 <__ctype_b_loc@plt+0xb0c2>
    eaee:	call   3680 <__stack_chk_fail@plt>
    eaf3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    eafe:	xchg   ax,ax
    eb00:	endbr64 
    eb04:	mov    rdx,rsi
    eb07:	mov    rsi,rdi
    eb0a:	mov    edi,0xffffffff
    eb0f:	jmp    e6a0 <__ctype_b_loc@plt+0xad30>
    eb14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    eb1f:	nop
    eb20:	endbr64 
    eb24:	push   r12
    eb26:	mov    rdx,rsi
    eb29:	push   rbp
    eb2a:	mov    rbp,rdi
    eb2d:	push   rbx
    eb2e:	sub    rsp,0xd0
    eb35:	mov    rax,QWORD PTR fs:0x28
    eb3e:	mov    QWORD PTR [rsp+0xc8],rax
    eb46:	xor    eax,eax
    eb48:	test   rsi,rsi
    eb4b:	je     ec80 <__ctype_b_loc@plt+0xb310>
    eb51:	movdqu xmm0,XMMWORD PTR [rsi]
    eb55:	movdqu xmm1,XMMWORD PTR [rsi+0x10]
    eb5a:	lea    rdi,[rsp+0x10]
    eb5f:	mov    QWORD PTR [rsp+0x8],rdi
    eb64:	movaps XMMWORD PTR [rsp+0x10],xmm0
    eb69:	movaps XMMWORD PTR [rsp+0x20],xmm1
    eb6e:	call   e5f0 <__ctype_b_loc@plt+0xac80>
    eb73:	mov    ebx,eax
    eb75:	test   eax,eax
    eb77:	js     ecc0 <__ctype_b_loc@plt+0xb350>
    eb7d:	mov    eax,DWORD PTR [rip+0xf359]        # 1dedc <stderr@@GLIBC_2.2.5+0x3e9c>
    eb83:	test   eax,eax
    eb85:	js     ebf8 <__ctype_b_loc@plt+0xb288>
    eb87:	cmp    ebx,0x2
    eb8a:	jne    ed20 <__ctype_b_loc@plt+0xb3b0>
    eb90:	lea    rdx,[rsp+0x30]
    eb95:	mov    rsi,rbp
    eb98:	mov    edi,0x1
    eb9d:	call   3660 <__lxstat@plt>
    eba2:	test   eax,eax
    eba4:	jne    ecc0 <__ctype_b_loc@plt+0xb350>
    ebaa:	mov    rdx,QWORD PTR [rsp+0x8]
    ebaf:	cmp    QWORD PTR [rdx+0x8],0x3ffffffe
    ebb7:	je     ed30 <__ctype_b_loc@plt+0xb3c0>
    ebbd:	cmp    QWORD PTR [rdx+0x18],0x3ffffffe
    ebc5:	mov    ebx,0x3
    ebca:	je     ed50 <__ctype_b_loc@plt+0xb3e0>
    ebd0:	mov    ecx,0x100
    ebd5:	mov    rsi,rbp
    ebd8:	mov    edi,0xffffff9c
    ebdd:	call   3530 <utimensat@plt>
    ebe2:	mov    r12d,eax
    ebe5:	test   eax,eax
    ebe7:	jle    ecd0 <__ctype_b_loc@plt+0xb360>
    ebed:	call   3560 <__errno_location@plt>
    ebf2:	mov    DWORD PTR [rax],0x26
    ebf8:	mov    DWORD PTR [rip+0xf2da],0xffffffff        # 1dedc <stderr@@GLIBC_2.2.5+0x3e9c>
    ec02:	test   ebx,ebx
    ec04:	je     eca3 <__ctype_b_loc@plt+0xb333>
    ec0a:	cmp    ebx,0x3
    ec0d:	jne    ecf0 <__ctype_b_loc@plt+0xb380>
    ec13:	cmp    QWORD PTR [rsp+0x8],0x0
    ec19:	je     ec31 <__ctype_b_loc@plt+0xb2c1>
    ec1b:	lea    rsi,[rsp+0x8]
    ec20:	lea    rdi,[rsp+0x30]
    ec25:	xor    r12d,r12d
    ec28:	call   e530 <__ctype_b_loc@plt+0xabc0>
    ec2d:	test   al,al
    ec2f:	jne    ec5a <__ctype_b_loc@plt+0xb2ea>
    ec31:	mov    eax,DWORD PTR [rsp+0x48]
    ec35:	and    eax,0xf000
    ec3a:	cmp    eax,0xa000
    ec3f:	je     ed88 <__ctype_b_loc@plt+0xb418>
    ec45:	mov    rdx,QWORD PTR [rsp+0x8]
    ec4a:	mov    rsi,rbp
    ec4d:	mov    edi,0xffffffff
    ec52:	call   e6a0 <__ctype_b_loc@plt+0xad30>
    ec57:	mov    r12d,eax
    ec5a:	mov    rax,QWORD PTR [rsp+0xc8]
    ec62:	xor    rax,QWORD PTR fs:0x28
    ec6b:	jne    ed98 <__ctype_b_loc@plt+0xb428>
    ec71:	add    rsp,0xd0
    ec78:	mov    eax,r12d
    ec7b:	pop    rbx
    ec7c:	pop    rbp
    ec7d:	pop    r12
    ec7f:	ret    
    ec80:	mov    ecx,DWORD PTR [rip+0xf256]        # 1dedc <stderr@@GLIBC_2.2.5+0x3e9c>
    ec86:	xor    ebx,ebx
    ec88:	mov    QWORD PTR [rsp+0x8],0x0
    ec91:	test   ecx,ecx
    ec93:	jns    ebd0 <__ctype_b_loc@plt+0xb260>
    ec99:	mov    DWORD PTR [rip+0xf239],0xffffffff        # 1dedc <stderr@@GLIBC_2.2.5+0x3e9c>
    eca3:	lea    rdx,[rsp+0x30]
    eca8:	mov    rsi,rbp
    ecab:	mov    edi,0x1
    ecb0:	call   3660 <__lxstat@plt>
    ecb5:	test   eax,eax
    ecb7:	je     ec31 <__ctype_b_loc@plt+0xb2c1>
    ecbd:	nop    DWORD PTR [rax]
    ecc0:	mov    r12d,0xffffffff
    ecc6:	jmp    ec5a <__ctype_b_loc@plt+0xb2ea>
    ecc8:	nop    DWORD PTR [rax+rax*1+0x0]
    ecd0:	jne    ed70 <__ctype_b_loc@plt+0xb400>
    ecd6:	mov    DWORD PTR [rip+0xf200],0x1        # 1dee0 <stderr@@GLIBC_2.2.5+0x3ea0>
    ece0:	mov    DWORD PTR [rip+0xf1f2],0x1        # 1dedc <stderr@@GLIBC_2.2.5+0x3e9c>
    ecea:	jmp    ec5a <__ctype_b_loc@plt+0xb2ea>
    ecef:	nop
    ecf0:	lea    rdx,[rsp+0x30]
    ecf5:	mov    rsi,rbp
    ecf8:	mov    edi,0x1
    ecfd:	call   3660 <__lxstat@plt>
    ed02:	test   eax,eax
    ed04:	jne    ecc0 <__ctype_b_loc@plt+0xb350>
    ed06:	cmp    QWORD PTR [rsp+0x8],0x0
    ed0c:	jne    ec1b <__ctype_b_loc@plt+0xb2ab>
    ed12:	jmp    ec31 <__ctype_b_loc@plt+0xb2c1>
    ed17:	nop    WORD PTR [rax+rax*1+0x0]
    ed20:	mov    rdx,QWORD PTR [rsp+0x8]
    ed25:	jmp    ebd0 <__ctype_b_loc@plt+0xb260>
    ed2a:	nop    WORD PTR [rax+rax*1+0x0]
    ed30:	mov    rax,QWORD PTR [rsp+0x80]
    ed38:	mov    rcx,QWORD PTR [rsp+0x78]
    ed3d:	mov    ebx,0x3
    ed42:	mov    QWORD PTR [rdx],rcx
    ed45:	mov    QWORD PTR [rdx+0x8],rax
    ed49:	jmp    ebd0 <__ctype_b_loc@plt+0xb260>
    ed4e:	xchg   ax,ax
    ed50:	mov    rax,QWORD PTR [rsp+0x90]
    ed58:	mov    rcx,QWORD PTR [rsp+0x88]
    ed60:	mov    QWORD PTR [rdx+0x18],rax
    ed64:	mov    QWORD PTR [rdx+0x10],rcx
    ed68:	jmp    ebd0 <__ctype_b_loc@plt+0xb260>
    ed6d:	nop    DWORD PTR [rax]
    ed70:	call   3560 <__errno_location@plt>
    ed75:	cmp    DWORD PTR [rax],0x26
    ed78:	jne    ecd6 <__ctype_b_loc@plt+0xb366>
    ed7e:	jmp    ebf8 <__ctype_b_loc@plt+0xb288>
    ed83:	nop    DWORD PTR [rax+rax*1+0x0]
    ed88:	call   3560 <__errno_location@plt>
    ed8d:	mov    DWORD PTR [rax],0x26
    ed93:	jmp    ecc0 <__ctype_b_loc@plt+0xb350>
    ed98:	call   3680 <__stack_chk_fail@plt>
    ed9d:	nop    DWORD PTR [rax]
    eda0:	endbr64 
    eda4:	push   rbx
    eda5:	mov    rbx,rdi
    eda8:	call   3810 <malloc@plt>
    edad:	test   rax,rax
    edb0:	jne    edb7 <__ctype_b_loc@plt+0xb447>
    edb2:	test   rbx,rbx
    edb5:	jne    edb9 <__ctype_b_loc@plt+0xb449>
    edb7:	pop    rbx
    edb8:	ret    
    edb9:	call   d350 <__ctype_b_loc@plt+0x99e0>
    edbe:	xchg   ax,ax
    edc0:	endbr64 
    edc4:	mov    rax,rdi
    edc7:	mul    rsi
    edca:	mov    rdi,rax
    edcd:	seto   al
    edd0:	test   rdi,rdi
    edd3:	js     eddf <__ctype_b_loc@plt+0xb46f>
    edd5:	movzx  eax,al
    edd8:	test   rax,rax
    eddb:	jne    eddf <__ctype_b_loc@plt+0xb46f>
    eddd:	jmp    eda0 <__ctype_b_loc@plt+0xb430>
    eddf:	push   rax
    ede0:	call   d350 <__ctype_b_loc@plt+0x99e0>
    ede5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    edf0:	endbr64 
    edf4:	jmp    eda0 <__ctype_b_loc@plt+0xb430>
    edf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ee00:	endbr64 
    ee04:	push   rbx
    ee05:	mov    rbx,rsi
    ee08:	test   rsi,rsi
    ee0b:	jne    ee12 <__ctype_b_loc@plt+0xb4a2>
    ee0d:	test   rdi,rdi
    ee10:	jne    ee30 <__ctype_b_loc@plt+0xb4c0>
    ee12:	mov    rsi,rbx
    ee15:	call   3850 <realloc@plt>
    ee1a:	test   rax,rax
    ee1d:	jne    ee24 <__ctype_b_loc@plt+0xb4b4>
    ee1f:	test   rbx,rbx
    ee22:	jne    ee39 <__ctype_b_loc@plt+0xb4c9>
    ee24:	pop    rbx
    ee25:	ret    
    ee26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ee30:	call   3520 <free@plt>
    ee35:	xor    eax,eax
    ee37:	pop    rbx
    ee38:	ret    
    ee39:	call   d350 <__ctype_b_loc@plt+0x99e0>
    ee3e:	xchg   ax,ax
    ee40:	endbr64 
    ee44:	mov    rax,rsi
    ee47:	mul    rdx
    ee4a:	mov    rsi,rax
    ee4d:	seto   al
    ee50:	test   rsi,rsi
    ee53:	js     ee5f <__ctype_b_loc@plt+0xb4ef>
    ee55:	movzx  eax,al
    ee58:	test   rax,rax
    ee5b:	jne    ee5f <__ctype_b_loc@plt+0xb4ef>
    ee5d:	jmp    ee00 <__ctype_b_loc@plt+0xb490>
    ee5f:	push   rax
    ee60:	call   d350 <__ctype_b_loc@plt+0x99e0>
    ee65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    ee70:	endbr64 
    ee74:	mov    r9,rsi
    ee77:	mov    r8,rdx
    ee7a:	mov    rsi,QWORD PTR [rsi]
    ee7d:	test   rdi,rdi
    ee80:	je     eeb0 <__ctype_b_loc@plt+0xb540>
    ee82:	movabs rax,0x5555555555555554
    ee8c:	xor    edx,edx
    ee8e:	div    r8
    ee91:	cmp    rax,rsi
    ee94:	jbe    eecb <__ctype_b_loc@plt+0xb55b>
    ee96:	mov    rax,rsi
    ee99:	shr    rax,1
    ee9c:	lea    rsi,[rax+rsi*1+0x1]
    eea1:	mov    QWORD PTR [r9],rsi
    eea4:	imul   rsi,r8
    eea8:	jmp    ee00 <__ctype_b_loc@plt+0xb490>
    eead:	nop    DWORD PTR [rax]
    eeb0:	test   rsi,rsi
    eeb3:	je     eed8 <__ctype_b_loc@plt+0xb568>
    eeb5:	mov    rax,rsi
    eeb8:	mul    r8
    eebb:	seto   dl
    eebe:	movzx  edx,dl
    eec1:	test   rax,rax
    eec4:	js     eecb <__ctype_b_loc@plt+0xb55b>
    eec6:	test   rdx,rdx
    eec9:	je     eea1 <__ctype_b_loc@plt+0xb531>
    eecb:	push   rax
    eecc:	call   d350 <__ctype_b_loc@plt+0x99e0>
    eed1:	nop    DWORD PTR [rax+0x0]
    eed8:	xor    edx,edx
    eeda:	mov    eax,0x80
    eedf:	xor    ecx,ecx
    eee1:	div    r8
    eee4:	cmp    r8,0x80
    eeeb:	seta   cl
    eeee:	lea    rsi,[rcx+rax*1]
    eef2:	jmp    eeb5 <__ctype_b_loc@plt+0xb545>
    eef4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    eeff:	nop
    ef00:	endbr64 
    ef04:	mov    rax,rsi
    ef07:	mov    rsi,QWORD PTR [rsi]
    ef0a:	test   rdi,rdi
    ef0d:	je     ef38 <__ctype_b_loc@plt+0xb5c8>
    ef0f:	movabs rdx,0x5555555555555553
    ef19:	cmp    rsi,rdx
    ef1c:	ja     ef52 <__ctype_b_loc@plt+0xb5e2>
    ef1e:	mov    rdx,rsi
    ef21:	shr    rdx,1
    ef24:	lea    rsi,[rdx+rsi*1+0x1]
    ef29:	mov    QWORD PTR [rax],rsi
    ef2c:	jmp    ee00 <__ctype_b_loc@plt+0xb490>
    ef31:	nop    DWORD PTR [rax+0x0]
    ef38:	test   rsi,rsi
    ef3b:	jne    ef50 <__ctype_b_loc@plt+0xb5e0>
    ef3d:	mov    esi,0x80
    ef42:	mov    QWORD PTR [rax],rsi
    ef45:	jmp    ee00 <__ctype_b_loc@plt+0xb490>
    ef4a:	nop    WORD PTR [rax+rax*1+0x0]
    ef50:	jns    ef29 <__ctype_b_loc@plt+0xb5b9>
    ef52:	push   rax
    ef53:	call   d350 <__ctype_b_loc@plt+0x99e0>
    ef58:	nop    DWORD PTR [rax+rax*1+0x0]
    ef60:	endbr64 
    ef64:	push   r12
    ef66:	mov    r12,rdi
    ef69:	call   eda0 <__ctype_b_loc@plt+0xb430>
    ef6e:	mov    rdx,r12
    ef71:	xor    esi,esi
    ef73:	pop    r12
    ef75:	mov    rdi,rax
    ef78:	jmp    36c0 <memset@plt>
    ef7d:	nop    DWORD PTR [rax]
    ef80:	endbr64 
    ef84:	mov    rax,rdi
    ef87:	sub    rsp,0x8
    ef8b:	mul    rsi
    ef8e:	seto   dl
    ef91:	test   rax,rax
    ef94:	js     efad <__ctype_b_loc@plt+0xb63d>
    ef96:	movzx  edx,dl
    ef99:	test   rdx,rdx
    ef9c:	jne    efad <__ctype_b_loc@plt+0xb63d>
    ef9e:	call   3740 <calloc@plt>
    efa3:	test   rax,rax
    efa6:	je     efad <__ctype_b_loc@plt+0xb63d>
    efa8:	add    rsp,0x8
    efac:	ret    
    efad:	call   d350 <__ctype_b_loc@plt+0x99e0>
    efb2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    efbd:	nop    DWORD PTR [rax]
    efc0:	endbr64 
    efc4:	push   r12
    efc6:	mov    r12,rsi
    efc9:	push   rbp
    efca:	mov    rbp,rdi
    efcd:	mov    rdi,rsi
    efd0:	sub    rsp,0x8
    efd4:	call   eda0 <__ctype_b_loc@plt+0xb430>
    efd9:	add    rsp,0x8
    efdd:	mov    rdx,r12
    efe0:	mov    rsi,rbp
    efe3:	mov    rdi,rax
    efe6:	pop    rbp
    efe7:	pop    r12
    efe9:	jmp    37c0 <memcpy@plt>
    efee:	xchg   ax,ax
    eff0:	endbr64 
    eff4:	push   rbp
    eff5:	mov    rbp,rdi
    eff8:	call   3650 <strlen@plt>
    effd:	mov    rdi,rbp
    f000:	pop    rbp
    f001:	lea    rsi,[rax+0x1]
    f005:	jmp    efc0 <__ctype_b_loc@plt+0xb650>
    f007:	nop    WORD PTR [rax+rax*1+0x0]
    f010:	endbr64 
    f014:	push   r12
    f016:	mov    rdi,QWORD PTR [rip+0xaff3]        # 1a010 <stdin@@GLIBC_2.2.5>
    f01d:	call   3930 <getc@plt>
    f022:	mov    edx,eax
    f024:	and    edx,0xffffffdf
    f027:	cmp    edx,0x59
    f02a:	sete   r12b
    f02e:	cmp    eax,0xa
    f031:	jne    f049 <__ctype_b_loc@plt+0xb6d9>
    f033:	jmp    f04e <__ctype_b_loc@plt+0xb6de>
    f035:	nop    DWORD PTR [rax]
    f038:	mov    rdi,QWORD PTR [rip+0xafd1]        # 1a010 <stdin@@GLIBC_2.2.5>
    f03f:	call   3930 <getc@plt>
    f044:	cmp    eax,0xa
    f047:	je     f04e <__ctype_b_loc@plt+0xb6de>
    f049:	cmp    eax,0xffffffff
    f04c:	jne    f038 <__ctype_b_loc@plt+0xb6c8>
    f04e:	mov    eax,r12d
    f051:	pop    r12
    f053:	ret    
    f054:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f05e:	xchg   ax,ax
    f060:	endbr64 
    f064:	push   r12
    f066:	push   rbp
    f067:	mov    rbp,rdi
    f06a:	push   rbx
    f06b:	call   37d0 <fileno@plt>
    f070:	mov    rdi,rbp
    f073:	test   eax,eax
    f075:	js     f0cf <__ctype_b_loc@plt+0xb75f>
    f077:	call   3840 <__freading@plt>
    f07c:	test   eax,eax
    f07e:	jne    f0b0 <__ctype_b_loc@plt+0xb740>
    f080:	mov    rdi,rbp
    f083:	call   f340 <__ctype_b_loc@plt+0xb9d0>
    f088:	test   eax,eax
    f08a:	je     f0cc <__ctype_b_loc@plt+0xb75c>
    f08c:	call   3560 <__errno_location@plt>
    f091:	mov    rdi,rbp
    f094:	mov    r12d,DWORD PTR [rax]
    f097:	mov    rbx,rax
    f09a:	call   3620 <fclose@plt>
    f09f:	test   r12d,r12d
    f0a2:	jne    f0e0 <__ctype_b_loc@plt+0xb770>
    f0a4:	pop    rbx
    f0a5:	pop    rbp
    f0a6:	pop    r12
    f0a8:	ret    
    f0a9:	nop    DWORD PTR [rax+0x0]
    f0b0:	mov    rdi,rbp
    f0b3:	call   37d0 <fileno@plt>
    f0b8:	xor    esi,esi
    f0ba:	mov    edx,0x1
    f0bf:	mov    edi,eax
    f0c1:	call   36b0 <lseek@plt>
    f0c6:	cmp    rax,0xffffffffffffffff
    f0ca:	jne    f080 <__ctype_b_loc@plt+0xb710>
    f0cc:	mov    rdi,rbp
    f0cf:	pop    rbx
    f0d0:	pop    rbp
    f0d1:	pop    r12
    f0d3:	jmp    3620 <fclose@plt>
    f0d8:	nop    DWORD PTR [rax+rax*1+0x0]
    f0e0:	mov    DWORD PTR [rbx],r12d
    f0e3:	mov    eax,0xffffffff
    f0e8:	jmp    f0a4 <__ctype_b_loc@plt+0xb734>
    f0ea:	nop    WORD PTR [rax+rax*1+0x0]
    f0f0:	endbr64 
    f0f4:	push   r13
    f0f6:	push   r12
    f0f8:	push   rbp
    f0f9:	sub    rsp,0x60
    f0fd:	mov    QWORD PTR [rsp+0x40],rdx
    f102:	mov    QWORD PTR [rsp+0x48],rcx
    f107:	mov    QWORD PTR [rsp+0x50],r8
    f10c:	mov    QWORD PTR [rsp+0x58],r9
    f111:	mov    rax,QWORD PTR fs:0x28
    f11a:	mov    QWORD PTR [rsp+0x28],rax
    f11f:	xor    eax,eax
    f121:	lea    rax,[rsp+0x80]
    f129:	mov    DWORD PTR [rsp+0x10],0x10
    f131:	mov    QWORD PTR [rsp+0x18],rax
    f136:	lea    rax,[rsp+0x30]
    f13b:	mov    QWORD PTR [rsp+0x20],rax
    f140:	test   esi,esi
    f142:	je     f1c0 <__ctype_b_loc@plt+0xb850>
    f144:	cmp    esi,0x406
    f14a:	je     f1f8 <__ctype_b_loc@plt+0xb888>
    f150:	cmp    esi,0xb
    f153:	jg     f180 <__ctype_b_loc@plt+0xb810>
    f155:	test   esi,esi
    f157:	jg     f1a0 <__ctype_b_loc@plt+0xb830>
    f159:	mov    eax,DWORD PTR [rsp+0x10]
    f15d:	cmp    eax,0x2f
    f160:	ja     f330 <__ctype_b_loc@plt+0xb9c0>
    f166:	add    rax,QWORD PTR [rsp+0x20]
    f16b:	mov    rdx,QWORD PTR [rax]
    f16e:	xor    eax,eax
    f170:	call   35f0 <fcntl@plt>
    f175:	mov    r12d,eax
    f178:	jmp    f1d4 <__ctype_b_loc@plt+0xb864>
    f17a:	nop    WORD PTR [rax+rax*1+0x0]
    f180:	lea    edx,[rsi-0x400]
    f186:	cmp    edx,0xa
    f189:	ja     f159 <__ctype_b_loc@plt+0xb7e9>
    f18b:	lea    rcx,[rip+0x4ef6]        # 14088 <__ctype_b_loc@plt+0x10718>
    f192:	movsxd rax,DWORD PTR [rcx+rdx*4]
    f196:	add    rax,rcx
    f199:	notrack jmp rax
    f19c:	nop    DWORD PTR [rax+0x0]
    f1a0:	cmp    esi,0xb
    f1a3:	ja     f159 <__ctype_b_loc@plt+0xb7e9>
    f1a5:	lea    rcx,[rip+0x4f08]        # 140b4 <__ctype_b_loc@plt+0x10744>
    f1ac:	mov    edx,esi
    f1ae:	movsxd rax,DWORD PTR [rcx+rdx*4]
    f1b2:	add    rax,rcx
    f1b5:	notrack jmp rax
    f1b8:	nop    DWORD PTR [rax+rax*1+0x0]
    f1c0:	mov    rax,QWORD PTR [rsp+0x20]
    f1c5:	xor    esi,esi
    f1c7:	mov    edx,DWORD PTR [rax+0x10]
    f1ca:	xor    eax,eax
    f1cc:	call   35f0 <fcntl@plt>
    f1d1:	mov    r12d,eax
    f1d4:	mov    rax,QWORD PTR [rsp+0x28]
    f1d9:	xor    rax,QWORD PTR fs:0x28
    f1e2:	jne    f33a <__ctype_b_loc@plt+0xb9ca>
    f1e8:	add    rsp,0x60
    f1ec:	mov    eax,r12d
    f1ef:	pop    rbp
    f1f0:	pop    r12
    f1f2:	pop    r13
    f1f4:	ret    
    f1f5:	nop    DWORD PTR [rax]
    f1f8:	mov    rax,QWORD PTR [rsp+0x20]
    f1fd:	mov    DWORD PTR [rsp+0x10],0x18
    f205:	mov    r13d,DWORD PTR [rax+0x10]
    f209:	mov    eax,DWORD PTR [rip+0xecd5]        # 1dee4 <stderr@@GLIBC_2.2.5+0x3ea4>
    f20f:	mov    edx,r13d
    f212:	test   eax,eax
    f214:	js     f270 <__ctype_b_loc@plt+0xb900>
    f216:	mov    esi,0x406
    f21b:	xor    eax,eax
    f21d:	mov    DWORD PTR [rsp+0xc],edi
    f221:	call   35f0 <fcntl@plt>
    f226:	mov    r12d,eax
    f229:	test   eax,eax
    f22b:	js     f2e8 <__ctype_b_loc@plt+0xb978>
    f231:	mov    DWORD PTR [rip+0xeca9],0x1        # 1dee4 <stderr@@GLIBC_2.2.5+0x3ea4>
    f23b:	jmp    f1d4 <__ctype_b_loc@plt+0xb864>
    f23d:	xor    eax,eax
    f23f:	call   35f0 <fcntl@plt>
    f244:	mov    r12d,eax
    f247:	jmp    f1d4 <__ctype_b_loc@plt+0xb864>
    f249:	mov    eax,DWORD PTR [rsp+0x10]
    f24d:	cmp    eax,0x2f
    f250:	ja     f320 <__ctype_b_loc@plt+0xb9b0>
    f256:	add    rax,QWORD PTR [rsp+0x20]
    f25b:	mov    edx,DWORD PTR [rax]
    f25d:	xor    eax,eax
    f25f:	call   35f0 <fcntl@plt>
    f264:	mov    r12d,eax
    f267:	jmp    f1d4 <__ctype_b_loc@plt+0xb864>
    f26c:	nop    DWORD PTR [rax+0x0]
    f270:	xor    esi,esi
    f272:	xor    eax,eax
    f274:	call   35f0 <fcntl@plt>
    f279:	mov    r12d,eax
    f27c:	test   eax,eax
    f27e:	js     f1d4 <__ctype_b_loc@plt+0xb864>
    f284:	cmp    DWORD PTR [rip+0xec59],0xffffffff        # 1dee4 <stderr@@GLIBC_2.2.5+0x3ea4>
    f28b:	jne    f1d4 <__ctype_b_loc@plt+0xb864>
    f291:	xor    eax,eax
    f293:	mov    esi,0x1
    f298:	mov    edi,r12d
    f29b:	call   35f0 <fcntl@plt>
    f2a0:	test   eax,eax
    f2a2:	js     f2c1 <__ctype_b_loc@plt+0xb951>
    f2a4:	or     eax,0x1
    f2a7:	mov    esi,0x2
    f2ac:	mov    edi,r12d
    f2af:	mov    edx,eax
    f2b1:	xor    eax,eax
    f2b3:	call   35f0 <fcntl@plt>
    f2b8:	cmp    eax,0xffffffff
    f2bb:	jne    f1d4 <__ctype_b_loc@plt+0xb864>
    f2c1:	call   3560 <__errno_location@plt>
    f2c6:	mov    edi,r12d
    f2c9:	or     r12d,0xffffffff
    f2cd:	mov    r13d,DWORD PTR [rax]
    f2d0:	mov    rbp,rax
    f2d3:	call   36d0 <close@plt>
    f2d8:	mov    DWORD PTR [rbp+0x0],r13d
    f2dc:	jmp    f1d4 <__ctype_b_loc@plt+0xb864>
    f2e1:	nop    DWORD PTR [rax+0x0]
    f2e8:	call   3560 <__errno_location@plt>
    f2ed:	mov    edi,DWORD PTR [rsp+0xc]
    f2f1:	cmp    DWORD PTR [rax],0x16
    f2f4:	jne    f231 <__ctype_b_loc@plt+0xb8c1>
    f2fa:	mov    edx,r13d
    f2fd:	xor    esi,esi
    f2ff:	xor    eax,eax
    f301:	call   35f0 <fcntl@plt>
    f306:	mov    r12d,eax
    f309:	test   eax,eax
    f30b:	js     f1d4 <__ctype_b_loc@plt+0xb864>
    f311:	mov    DWORD PTR [rip+0xebc9],0xffffffff        # 1dee4 <stderr@@GLIBC_2.2.5+0x3ea4>
    f31b:	jmp    f291 <__ctype_b_loc@plt+0xb921>
    f320:	mov    rax,QWORD PTR [rsp+0x18]
    f325:	jmp    f25b <__ctype_b_loc@plt+0xb8eb>
    f32a:	nop    WORD PTR [rax+rax*1+0x0]
    f330:	mov    rax,QWORD PTR [rsp+0x18]
    f335:	jmp    f16b <__ctype_b_loc@plt+0xb7fb>
    f33a:	call   3680 <__stack_chk_fail@plt>
    f33f:	nop
    f340:	endbr64 
    f344:	push   rbp
    f345:	mov    rbp,rdi
    f348:	test   rdi,rdi
    f34b:	je     f35f <__ctype_b_loc@plt+0xb9ef>
    f34d:	call   3840 <__freading@plt>
    f352:	test   eax,eax
    f354:	je     f35f <__ctype_b_loc@plt+0xb9ef>
    f356:	test   DWORD PTR [rbp+0x0],0x100
    f35d:	jne    f370 <__ctype_b_loc@plt+0xba00>
    f35f:	mov    rdi,rbp
    f362:	pop    rbp
    f363:	jmp    3820 <fflush@plt>
    f368:	nop    DWORD PTR [rax+rax*1+0x0]
    f370:	mov    rdi,rbp
    f373:	mov    edx,0x1
    f378:	xor    esi,esi
    f37a:	call   f520 <__ctype_b_loc@plt+0xbbb0>
    f37f:	mov    rdi,rbp
    f382:	pop    rbp
    f383:	jmp    3820 <fflush@plt>
    f388:	nop    DWORD PTR [rax+rax*1+0x0]
    f390:	endbr64 
    f394:	push   r13
    f396:	mov    r10,rsi
    f399:	push   r12
    f39b:	mov    r12,rdi
    f39e:	push   rbp
    f39f:	push   rbx
    f3a0:	sub    rsp,0x8b8
    f3a7:	mov    QWORD PTR [rsp+0x810],rdx
    f3af:	mov    QWORD PTR [rsp+0x818],rcx
    f3b7:	mov    QWORD PTR [rsp+0x820],r8
    f3bf:	mov    QWORD PTR [rsp+0x828],r9
    f3c7:	test   al,al
    f3c9:	je     f40b <__ctype_b_loc@plt+0xba9b>
    f3cb:	movaps XMMWORD PTR [rsp+0x830],xmm0
    f3d3:	movaps XMMWORD PTR [rsp+0x840],xmm1
    f3db:	movaps XMMWORD PTR [rsp+0x850],xmm2
    f3e3:	movaps XMMWORD PTR [rsp+0x860],xmm3
    f3eb:	movaps XMMWORD PTR [rsp+0x870],xmm4
    f3f3:	movaps XMMWORD PTR [rsp+0x880],xmm5
    f3fb:	movaps XMMWORD PTR [rsp+0x890],xmm6
    f403:	movaps XMMWORD PTR [rsp+0x8a0],xmm7
    f40b:	mov    rax,QWORD PTR fs:0x28
    f414:	mov    QWORD PTR [rsp+0x7f8],rax
    f41c:	xor    eax,eax
    f41e:	lea    r13,[rsp+0x20]
    f423:	lea    rcx,[rsp+0x8]
    f428:	mov    rsi,rsp
    f42b:	lea    rax,[rsp+0x8e0]
    f433:	mov    rdx,r10
    f436:	mov    rdi,r13
    f439:	mov    QWORD PTR [rsp],0x7d0
    f441:	mov    QWORD PTR [rsp+0x10],rax
    f446:	lea    rax,[rsp+0x800]
    f44e:	mov    DWORD PTR [rsp+0x8],0x10
    f456:	mov    DWORD PTR [rsp+0xc],0x30
    f45e:	mov    QWORD PTR [rsp+0x18],rax
    f463:	call   f680 <__ctype_b_loc@plt+0xbd10>
    f468:	mov    rbx,QWORD PTR [rsp]
    f46c:	mov    rbp,rax
    f46f:	test   rax,rax
    f472:	je     f4fe <__ctype_b_loc@plt+0xbb8e>
    f478:	mov    rcx,r12
    f47b:	mov    rdx,rbx
    f47e:	mov    esi,0x1
    f483:	mov    rdi,rax
    f486:	call   3920 <fwrite@plt>
    f48b:	cmp    rax,rbx
    f48e:	jb     f4d0 <__ctype_b_loc@plt+0xbb60>
    f490:	cmp    rbp,r13
    f493:	je     f49d <__ctype_b_loc@plt+0xbb2d>
    f495:	mov    rdi,rbp
    f498:	call   3520 <free@plt>
    f49d:	cmp    rbx,0x7fffffff
    f4a4:	ja     f4f3 <__ctype_b_loc@plt+0xbb83>
    f4a6:	mov    r12d,ebx
    f4a9:	mov    rax,QWORD PTR [rsp+0x7f8]
    f4b1:	xor    rax,QWORD PTR fs:0x28
    f4ba:	jne    f50e <__ctype_b_loc@plt+0xbb9e>
    f4bc:	add    rsp,0x8b8
    f4c3:	mov    eax,r12d
    f4c6:	pop    rbx
    f4c7:	pop    rbp
    f4c8:	pop    r12
    f4ca:	pop    r13
    f4cc:	ret    
    f4cd:	nop    DWORD PTR [rax]
    f4d0:	mov    r12d,0xffffffff
    f4d6:	cmp    rbp,r13
    f4d9:	je     f4a9 <__ctype_b_loc@plt+0xbb39>
    f4db:	call   3560 <__errno_location@plt>
    f4e0:	mov    rdi,rbp
    f4e3:	mov    r13d,DWORD PTR [rax]
    f4e6:	mov    rbx,rax
    f4e9:	call   3520 <free@plt>
    f4ee:	mov    DWORD PTR [rbx],r13d
    f4f1:	jmp    f4a9 <__ctype_b_loc@plt+0xbb39>
    f4f3:	call   3560 <__errno_location@plt>
    f4f8:	mov    DWORD PTR [rax],0x4b
    f4fe:	mov    rdi,r12
    f501:	mov    r12d,0xffffffff
    f507:	call   f5a0 <__ctype_b_loc@plt+0xbc30>
    f50c:	jmp    f4a9 <__ctype_b_loc@plt+0xbb39>
    f50e:	call   3680 <__stack_chk_fail@plt>
    f513:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f51d:	nop    DWORD PTR [rax]
    f520:	endbr64 
    f524:	push   rbp
    f525:	mov    rbp,rdi
    f528:	sub    rsp,0x10
    f52c:	mov    rax,QWORD PTR [rdi+0x8]
    f530:	cmp    QWORD PTR [rdi+0x10],rax
    f534:	je     f548 <__ctype_b_loc@plt+0xbbd8>
    f536:	add    rsp,0x10
    f53a:	mov    rdi,rbp
    f53d:	pop    rbp
    f53e:	jmp    38b0 <fseeko@plt>
    f543:	nop    DWORD PTR [rax+rax*1+0x0]
    f548:	mov    rax,QWORD PTR [rdi+0x20]
    f54c:	cmp    QWORD PTR [rdi+0x28],rax
    f550:	jne    f536 <__ctype_b_loc@plt+0xbbc6>
    f552:	cmp    QWORD PTR [rdi+0x48],0x0
    f557:	jne    f536 <__ctype_b_loc@plt+0xbbc6>
    f559:	mov    DWORD PTR [rsp+0xc],edx
    f55d:	mov    QWORD PTR [rsp],rsi
    f561:	call   37d0 <fileno@plt>
    f566:	mov    edx,DWORD PTR [rsp+0xc]
    f56a:	mov    rsi,QWORD PTR [rsp]
    f56e:	mov    edi,eax
    f570:	call   36b0 <lseek@plt>
    f575:	cmp    rax,0xffffffffffffffff
    f579:	je     f58e <__ctype_b_loc@plt+0xbc1e>
    f57b:	and    DWORD PTR [rbp+0x0],0xffffffef
    f57f:	mov    QWORD PTR [rbp+0x90],rax
    f586:	xor    eax,eax
    f588:	add    rsp,0x10
    f58c:	pop    rbp
    f58d:	ret    
    f58e:	or     eax,0xffffffff
    f591:	jmp    f588 <__ctype_b_loc@plt+0xbc18>
    f593:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f59d:	nop    DWORD PTR [rax]
    f5a0:	endbr64 
    f5a4:	or     DWORD PTR [rdi],0x20
    f5a7:	ret    
    f5a8:	nop    DWORD PTR [rax+rax*1+0x0]
    f5b0:	endbr64 
    f5b4:	sub    rsp,0xd8
    f5bb:	mov    r10,rdi
    f5be:	mov    QWORD PTR [rsp+0x28],rsi
    f5c3:	mov    QWORD PTR [rsp+0x30],rdx
    f5c8:	mov    QWORD PTR [rsp+0x38],rcx
    f5cd:	mov    QWORD PTR [rsp+0x40],r8
    f5d2:	mov    QWORD PTR [rsp+0x48],r9
    f5d7:	test   al,al
    f5d9:	je     f612 <__ctype_b_loc@plt+0xbca2>
    f5db:	movaps XMMWORD PTR [rsp+0x50],xmm0
    f5e0:	movaps XMMWORD PTR [rsp+0x60],xmm1
    f5e5:	movaps XMMWORD PTR [rsp+0x70],xmm2
    f5ea:	movaps XMMWORD PTR [rsp+0x80],xmm3
    f5f2:	movaps XMMWORD PTR [rsp+0x90],xmm4
    f5fa:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    f602:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    f60a:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    f612:	mov    rax,QWORD PTR fs:0x28
    f61b:	mov    QWORD PTR [rsp+0x18],rax
    f620:	xor    eax,eax
    f622:	mov    rdi,QWORD PTR [rip+0xa9d7]        # 1a000 <stdout@@GLIBC_2.2.5>
    f629:	mov    rdx,rsp
    f62c:	mov    rsi,r10
    f62f:	lea    rax,[rsp+0xe0]
    f637:	mov    DWORD PTR [rsp],0x8
    f63e:	mov    QWORD PTR [rsp+0x8],rax
    f643:	lea    rax,[rsp+0x20]
    f648:	mov    DWORD PTR [rsp+0x4],0x30
    f650:	mov    QWORD PTR [rsp+0x10],rax
    f655:	call   107b0 <__ctype_b_loc@plt+0xce40>
    f65a:	mov    rcx,QWORD PTR [rsp+0x18]
    f65f:	xor    rcx,QWORD PTR fs:0x28
    f668:	jne    f672 <__ctype_b_loc@plt+0xbd02>
    f66a:	add    rsp,0xd8
    f671:	ret    
    f672:	call   3680 <__stack_chk_fail@plt>
    f677:	nop    WORD PTR [rax+rax*1+0x0]
    f680:	endbr64 
    f684:	push   rbp
    f685:	mov    rbp,rsp
    f688:	push   r15
    f68a:	mov    r15,rdx
    f68d:	push   r14
    f68f:	lea    r14,[rbp-0x3b0]
    f696:	push   r13
    f698:	mov    rdx,r14
    f69b:	mov    r13,rcx
    f69e:	push   r12
    f6a0:	push   rbx
    f6a1:	sub    rsp,0x3f8
    f6a8:	mov    QWORD PTR [rbp-0x3f8],rdi
    f6af:	mov    rdi,r15
    f6b2:	mov    QWORD PTR [rbp-0x408],rsi
    f6b9:	lea    rsi,[rbp-0x2c0]
    f6c0:	mov    rax,QWORD PTR fs:0x28
    f6c9:	mov    QWORD PTR [rbp-0x38],rax
    f6cd:	xor    eax,eax
    f6cf:	call   10bf0 <__ctype_b_loc@plt+0xd280>
    f6d4:	test   eax,eax
    f6d6:	js     fe00 <__ctype_b_loc@plt+0xc490>
    f6dc:	mov    rsi,r14
    f6df:	mov    rdi,r13
    f6e2:	call   109d0 <__ctype_b_loc@plt+0xd060>
    f6e7:	test   eax,eax
    f6e9:	js     105a0 <__ctype_b_loc@plt+0xcc30>
    f6ef:	mov    rdx,QWORD PTR [rbp-0x2b0]
    f6f6:	lea    rax,[rdx+0x7]
    f6fa:	cmp    rdx,0xfffffffffffffff9
    f6fe:	mov    rdx,0xffffffffffffffff
    f705:	cmovae rax,rdx
    f709:	add    rax,QWORD PTR [rbp-0x2a8]
    f710:	jb     fdd3 <__ctype_b_loc@plt+0xc463>
    f716:	mov    rdi,rax
    f719:	xor    ebx,ebx
    f71b:	add    rdi,0x6
    f71f:	setb   bl
    f722:	jb     fdd3 <__ctype_b_loc@plt+0xc463>
    f728:	cmp    rdi,0xf9f
    f72f:	jbe    fb70 <__ctype_b_loc@plt+0xc200>
    f735:	cmp    rdi,0xffffffffffffffff
    f739:	je     fdd3 <__ctype_b_loc@plt+0xc463>
    f73f:	call   3810 <malloc@plt>
    f744:	mov    QWORD PTR [rbp-0x3e0],rax
    f74b:	test   rax,rax
    f74e:	je     fdd3 <__ctype_b_loc@plt+0xc463>
    f754:	mov    QWORD PTR [rbp-0x410],rax
    f75b:	xor    r12d,r12d
    f75e:	cmp    QWORD PTR [rbp-0x3f8],0x0
    f766:	je     f772 <__ctype_b_loc@plt+0xbe02>
    f768:	mov    rax,QWORD PTR [rbp-0x408]
    f76f:	mov    r12,QWORD PTR [rax]
    f772:	mov    r14,QWORD PTR [rbp-0x2b8]
    f779:	mov    r8,r15
    f77c:	mov    QWORD PTR [rbp-0x400],0x0
    f787:	mov    r9,QWORD PTR [rbp-0x3f8]
    f78e:	mov    r15,QWORD PTR [r14]
    f791:	cmp    r15,r8
    f794:	je     fc66 <__ctype_b_loc@plt+0xc2f6>
    f79a:	sub    r15,r8
    f79d:	mov    r13,rbx
    f7a0:	mov    rax,0xffffffffffffffff
    f7a7:	add    r13,r15
    f7aa:	cmovb  r13,rax
    f7ae:	cmp    r12,r13
    f7b1:	jae    f824 <__ctype_b_loc@plt+0xbeb4>
    f7b3:	test   r12,r12
    f7b6:	je     fd30 <__ctype_b_loc@plt+0xc3c0>
    f7bc:	js     fc80 <__ctype_b_loc@plt+0xc310>
    f7c2:	add    r12,r12
    f7c5:	cmp    r12,r13
    f7c8:	cmovb  r12,r13
    f7cc:	cmp    r12,0xffffffffffffffff
    f7d0:	je     fc80 <__ctype_b_loc@plt+0xc310>
    f7d6:	cmp    r9,QWORD PTR [rbp-0x3f8]
    f7dd:	sete   dl
    f7e0:	test   r9,r9
    f7e3:	je     fd40 <__ctype_b_loc@plt+0xc3d0>
    f7e9:	test   dl,dl
    f7eb:	jne    fd40 <__ctype_b_loc@plt+0xc3d0>
    f7f1:	mov    rdi,r9
    f7f4:	mov    rsi,r12
    f7f7:	mov    QWORD PTR [rbp-0x3c8],r9
    f7fe:	mov    QWORD PTR [rbp-0x3d0],r8
    f805:	call   3850 <realloc@plt>
    f80a:	mov    r9,QWORD PTR [rbp-0x3c8]
    f811:	test   rax,rax
    f814:	je     1078f <__ctype_b_loc@plt+0xce1f>
    f81a:	mov    r8,QWORD PTR [rbp-0x3d0]
    f821:	mov    r9,rax
    f824:	lea    rdi,[r9+rbx*1]
    f828:	mov    rdx,r15
    f82b:	mov    rsi,r8
    f82e:	mov    QWORD PTR [rbp-0x3c8],r9
    f835:	call   37c0 <memcpy@plt>
    f83a:	mov    r9,QWORD PTR [rbp-0x3c8]
    f841:	mov    rax,QWORD PTR [rbp-0x400]
    f848:	cmp    QWORD PTR [rbp-0x2c0],rax
    f84f:	je     105f6 <__ctype_b_loc@plt+0xcc86>
    f855:	movzx  eax,BYTE PTR [r14+0x48]
    f85a:	mov    rdx,QWORD PTR [r14+0x50]
    f85e:	cmp    al,0x25
    f860:	je     fbc8 <__ctype_b_loc@plt+0xc258>
    f866:	cmp    rdx,0xffffffffffffffff
    f86a:	je     3980 <__ctype_b_loc@plt+0x10>
    f870:	mov    r15,QWORD PTR [rbp-0x3a8]
    f877:	shl    rdx,0x5
    f87b:	lea    rcx,[r15+rdx*1]
    f87f:	mov    ebx,DWORD PTR [rcx]
    f881:	cmp    al,0x6e
    f883:	je     fba8 <__ctype_b_loc@plt+0xc238>
    f889:	mov    eax,DWORD PTR [r14+0x10]
    f88d:	mov    rcx,QWORD PTR [rbp-0x3e0]
    f894:	mov    BYTE PTR [rcx],0x25
    f897:	test   al,0x1
    f899:	jne    fdb8 <__ctype_b_loc@plt+0xc448>
    f89f:	add    rcx,0x1
    f8a3:	mov    QWORD PTR [rbp-0x3c8],rcx
    f8aa:	test   al,0x2
    f8ac:	je     f8c3 <__ctype_b_loc@plt+0xbf53>
    f8ae:	mov    rcx,QWORD PTR [rbp-0x3c8]
    f8b5:	mov    BYTE PTR [rcx],0x2d
    f8b8:	add    rcx,0x1
    f8bc:	mov    QWORD PTR [rbp-0x3c8],rcx
    f8c3:	test   al,0x4
    f8c5:	je     f8dc <__ctype_b_loc@plt+0xbf6c>
    f8c7:	mov    rcx,QWORD PTR [rbp-0x3c8]
    f8ce:	mov    BYTE PTR [rcx],0x2b
    f8d1:	add    rcx,0x1
    f8d5:	mov    QWORD PTR [rbp-0x3c8],rcx
    f8dc:	test   al,0x8
    f8de:	je     f8f5 <__ctype_b_loc@plt+0xbf85>
    f8e0:	mov    rcx,QWORD PTR [rbp-0x3c8]
    f8e7:	lea    rsi,[rcx+0x1]
    f8eb:	mov    BYTE PTR [rcx],0x20
    f8ee:	mov    QWORD PTR [rbp-0x3c8],rsi
    f8f5:	test   al,0x10
    f8f7:	je     f90e <__ctype_b_loc@plt+0xbf9e>
    f8f9:	mov    rcx,QWORD PTR [rbp-0x3c8]
    f900:	mov    BYTE PTR [rcx],0x23
    f903:	add    rcx,0x1
    f907:	mov    QWORD PTR [rbp-0x3c8],rcx
    f90e:	test   al,0x40
    f910:	je     f927 <__ctype_b_loc@plt+0xbfb7>
    f912:	mov    rsi,QWORD PTR [rbp-0x3c8]
    f919:	mov    BYTE PTR [rsi],0x49
    f91c:	add    rsi,0x1
    f920:	mov    QWORD PTR [rbp-0x3c8],rsi
    f927:	test   al,0x20
    f929:	je     f940 <__ctype_b_loc@plt+0xbfd0>
    f92b:	mov    rax,QWORD PTR [rbp-0x3c8]
    f932:	mov    BYTE PTR [rax],0x30
    f935:	add    rax,0x1
    f939:	mov    QWORD PTR [rbp-0x3c8],rax
    f940:	mov    rsi,QWORD PTR [r14+0x18]
    f944:	mov    rax,QWORD PTR [r14+0x20]
    f948:	cmp    rsi,rax
    f94b:	je     f982 <__ctype_b_loc@plt+0xc012>
    f94d:	sub    rax,rsi
    f950:	mov    rdi,QWORD PTR [rbp-0x3c8]
    f957:	mov    QWORD PTR [rbp-0x3d8],r9
    f95e:	mov    rdx,rax
    f961:	mov    QWORD PTR [rbp-0x3d0],rax
    f968:	call   37c0 <memcpy@plt>
    f96d:	mov    rdx,QWORD PTR [rbp-0x3d0]
    f974:	add    QWORD PTR [rbp-0x3c8],rdx
    f97b:	mov    r9,QWORD PTR [rbp-0x3d8]
    f982:	mov    rsi,QWORD PTR [r14+0x30]
    f986:	mov    rax,QWORD PTR [r14+0x38]
    f98a:	cmp    rsi,rax
    f98d:	je     f9c4 <__ctype_b_loc@plt+0xc054>
    f98f:	sub    rax,rsi
    f992:	mov    rdi,QWORD PTR [rbp-0x3c8]
    f999:	mov    QWORD PTR [rbp-0x3d8],r9
    f9a0:	mov    rdx,rax
    f9a3:	mov    QWORD PTR [rbp-0x3d0],rax
    f9aa:	call   37c0 <memcpy@plt>
    f9af:	mov    rdx,QWORD PTR [rbp-0x3d0]
    f9b6:	add    QWORD PTR [rbp-0x3c8],rdx
    f9bd:	mov    r9,QWORD PTR [rbp-0x3d8]
    f9c4:	lea    eax,[rbx-0x7]
    f9c7:	cmp    eax,0x9
    f9ca:	ja     fa0a <__ctype_b_loc@plt+0xc09a>
    f9cc:	lea    rcx,[rip+0x4711]        # 140e4 <__ctype_b_loc@plt+0x10774>
    f9d3:	movsxd rax,DWORD PTR [rcx+rax*4]
    f9d7:	add    rax,rcx
    f9da:	notrack jmp rax
    f9dd:	nop    DWORD PTR [rax]
    f9e0:	mov    rax,QWORD PTR [rbp-0x3c8]
    f9e7:	mov    BYTE PTR [rax],0x6c
    f9ea:	add    rax,0x1
    f9ee:	mov    QWORD PTR [rbp-0x3c8],rax
    f9f5:	mov    rax,QWORD PTR [rbp-0x3c8]
    f9fc:	mov    BYTE PTR [rax],0x6c
    f9ff:	add    rax,0x1
    fa03:	mov    QWORD PTR [rbp-0x3c8],rax
    fa0a:	movzx  eax,BYTE PTR [r14+0x48]
    fa0f:	mov    rcx,QWORD PTR [rbp-0x3c8]
    fa16:	mov    BYTE PTR [rcx],al
    fa18:	mov    BYTE PTR [rcx+0x1],0x0
    fa1c:	mov    rax,QWORD PTR [r14+0x28]
    fa20:	cmp    rax,0xffffffffffffffff
    fa24:	je     fde8 <__ctype_b_loc@plt+0xc478>
    fa2a:	shl    rax,0x5
    fa2e:	add    rax,r15
    fa31:	cmp    DWORD PTR [rax],0x5
    fa34:	jne    3980 <__ctype_b_loc@plt+0x10>
    fa3a:	mov    DWORD PTR [rbp-0x3d8],0x1
    fa44:	mov    eax,DWORD PTR [rax+0x10]
    fa47:	mov    DWORD PTR [rbp-0x3b8],eax
    fa4d:	mov    rax,QWORD PTR [r14+0x40]
    fa51:	cmp    rax,0xffffffffffffffff
    fa55:	je     fa83 <__ctype_b_loc@plt+0xc113>
    fa57:	shl    rax,0x5
    fa5b:	lea    r8,[r15+rax*1]
    fa5f:	cmp    DWORD PTR [r8],0x5
    fa63:	jne    3980 <__ctype_b_loc@plt+0x10>
    fa69:	mov    eax,DWORD PTR [rbp-0x3d8]
    fa6f:	mov    edx,DWORD PTR [r8+0x10]
    fa73:	mov    DWORD PTR [rbp+rax*4-0x3b8],edx
    fa7a:	lea    eax,[rax+0x1]
    fa7d:	mov    DWORD PTR [rbp-0x3d8],eax
    fa83:	mov    rax,r13
    fa86:	add    rax,0x2
    fa8a:	jb     fc6e <__ctype_b_loc@plt+0xc2fe>
    fa90:	cmp    r12,rax
    fa93:	jae    103e0 <__ctype_b_loc@plt+0xca70>
    fa99:	test   r12,r12
    fa9c:	jne    10260 <__ctype_b_loc@plt+0xc8f0>
    faa2:	cmp    rax,0xc
    faa6:	ja     10272 <__ctype_b_loc@plt+0xc902>
    faac:	mov    r12d,0xc
    fab2:	cmp    r9,QWORD PTR [rbp-0x3f8]
    fab9:	sete   dl
    fabc:	test   r9,r9
    fabf:	je     10298 <__ctype_b_loc@plt+0xc928>
    fac5:	test   dl,dl
    fac7:	jne    10298 <__ctype_b_loc@plt+0xc928>
    facd:	mov    rdi,r9
    fad0:	mov    rsi,r12
    fad3:	mov    QWORD PTR [rbp-0x3d0],r9
    fada:	call   3850 <realloc@plt>
    fadf:	mov    r9,QWORD PTR [rbp-0x3d0]
    fae6:	test   rax,rax
    fae9:	mov    r15,rax
    faec:	je     fc80 <__ctype_b_loc@plt+0xc310>
    faf2:	mov    BYTE PTR [r15+r13*1],0x0
    faf7:	call   3560 <__errno_location@plt>
    fafc:	mov    DWORD PTR [rbp-0x3e8],ebx
    fb02:	mov    QWORD PTR [rbp-0x3d0],rax
    fb09:	mov    eax,DWORD PTR [rax]
    fb0b:	mov    DWORD PTR [rbp-0x414],eax
    fb11:	lea    rax,[rbp-0x3bc]
    fb18:	mov    QWORD PTR [rbp-0x3f0],rax
    fb1f:	nop
    fb20:	mov    rbx,r12
    fb23:	mov    eax,0x80000000
    fb28:	mov    esi,0x7fffffff
    fb2d:	mov    DWORD PTR [rbp-0x3bc],0xffffffff
    fb37:	sub    rbx,r13
    fb3a:	cmp    rbx,rax
    fb3d:	mov    rax,QWORD PTR [rbp-0x3d0]
    fb44:	cmovb  rsi,rbx
    fb48:	mov    DWORD PTR [rax],0x0
    fb4e:	mov    eax,DWORD PTR [rbp-0x3e8]
    fb54:	cmp    eax,0x11
    fb57:	ja     3985 <__ctype_b_loc@plt+0x15>
    fb5d:	lea    rdi,[rip+0x45a8]        # 1410c <__ctype_b_loc@plt+0x1079c>
    fb64:	movsxd rax,DWORD PTR [rdi+rax*4]
    fb68:	add    rax,rdi
    fb6b:	notrack jmp rax
    fb6e:	xchg   ax,ax
    fb70:	add    rax,0x1d
    fb74:	mov    rcx,rsp
    fb77:	mov    rdx,rax
    fb7a:	and    rax,0xfffffffffffff000
    fb80:	sub    rcx,rax
    fb83:	and    rdx,0xfffffffffffffff0
    fb87:	mov    rax,rcx
    fb8a:	cmp    rsp,rax
    fb8d:	je     10315 <__ctype_b_loc@plt+0xc9a5>
    fb93:	sub    rsp,0x1000
    fb9a:	or     QWORD PTR [rsp+0xff8],0x0
    fba3:	jmp    fb8a <__ctype_b_loc@plt+0xc21a>
    fba5:	nop    DWORD PTR [rax]
    fba8:	sub    ebx,0x12
    fbab:	cmp    ebx,0x4
    fbae:	ja     3985 <__ctype_b_loc@plt+0x15>
    fbb4:	lea    rdx,[rip+0x4599]        # 14154 <__ctype_b_loc@plt+0x107e4>
    fbbb:	movsxd rax,DWORD PTR [rdx+rbx*4]
    fbbf:	add    rax,rdx
    fbc2:	notrack jmp rax
    fbc5:	nop    DWORD PTR [rax]
    fbc8:	cmp    rdx,0xffffffffffffffff
    fbcc:	jne    3980 <__ctype_b_loc@plt+0x10>
    fbd2:	lea    rbx,[r13+0x1]
    fbd6:	cmp    r13,0xffffffffffffffff
    fbda:	cmovae rbx,rdx
    fbde:	cmp    r12,rbx
    fbe1:	jae    fc44 <__ctype_b_loc@plt+0xc2d4>
    fbe3:	test   r12,r12
    fbe6:	je     102f0 <__ctype_b_loc@plt+0xc980>
    fbec:	js     fc80 <__ctype_b_loc@plt+0xc310>
    fbf2:	add    r12,r12
    fbf5:	cmp    r12,rbx
    fbf8:	cmovb  r12,rbx
    fbfc:	cmp    r12,0xffffffffffffffff
    fc00:	je     fc80 <__ctype_b_loc@plt+0xc310>
    fc02:	cmp    r9,QWORD PTR [rbp-0x3f8]
    fc09:	sete   r15b
    fc0d:	test   r9,r9
    fc10:	je     10550 <__ctype_b_loc@plt+0xcbe0>
    fc16:	test   r15b,r15b
    fc19:	jne    10550 <__ctype_b_loc@plt+0xcbe0>
    fc1f:	mov    rdi,r9
    fc22:	mov    rsi,r12
    fc25:	mov    QWORD PTR [rbp-0x3c8],r9
    fc2c:	call   3850 <realloc@plt>
    fc31:	mov    r9,QWORD PTR [rbp-0x3c8]
    fc38:	test   rax,rax
    fc3b:	je     1078f <__ctype_b_loc@plt+0xce1f>
    fc41:	mov    r9,rax
    fc44:	mov    BYTE PTR [r9+r13*1],0x25
    fc49:	mov    r8,QWORD PTR [r14+0x8]
    fc4d:	mov    r15,QWORD PTR [r14+0x58]
    fc51:	add    r14,0x58
    fc55:	add    QWORD PTR [rbp-0x400],0x1
    fc5d:	cmp    r15,r8
    fc60:	jne    f79a <__ctype_b_loc@plt+0xbe2a>
    fc66:	mov    r13,rbx
    fc69:	jmp    f841 <__ctype_b_loc@plt+0xbed1>
    fc6e:	cmp    r12,0xffffffffffffffff
    fc72:	je     103e0 <__ctype_b_loc@plt+0xca70>
    fc78:	nop    DWORD PTR [rax+rax*1+0x0]
    fc80:	mov    QWORD PTR [rbp-0x3c8],r9
    fc87:	call   3560 <__errno_location@plt>
    fc8c:	mov    r9,QWORD PTR [rbp-0x3c8]
    fc93:	mov    QWORD PTR [rbp-0x3d0],rax
    fc9a:	cmp    r9,QWORD PTR [rbp-0x3f8]
    fca1:	je     fcb0 <__ctype_b_loc@plt+0xc340>
    fca3:	test   r9,r9
    fca6:	je     fcb0 <__ctype_b_loc@plt+0xc340>
    fca8:	mov    rdi,r9
    fcab:	call   3520 <free@plt>
    fcb0:	mov    rax,QWORD PTR [rbp-0x410]
    fcb7:	test   rax,rax
    fcba:	je     fcc4 <__ctype_b_loc@plt+0xc354>
    fcbc:	mov    rdi,rax
    fcbf:	call   3520 <free@plt>
    fcc4:	mov    rdi,QWORD PTR [rbp-0x2b8]
    fccb:	lea    rax,[rbp-0x2a0]
    fcd2:	cmp    rdi,rax
    fcd5:	je     fcdc <__ctype_b_loc@plt+0xc36c>
    fcd7:	call   3520 <free@plt>
    fcdc:	mov    rdi,QWORD PTR [rbp-0x3a8]
    fce3:	lea    rax,[rbp-0x3a0]
    fcea:	cmp    rdi,rax
    fced:	je     fcf4 <__ctype_b_loc@plt+0xc384>
    fcef:	call   3520 <free@plt>
    fcf4:	mov    rax,QWORD PTR [rbp-0x3d0]
    fcfb:	xor    r9d,r9d
    fcfe:	mov    DWORD PTR [rax],0xc
    fd04:	mov    rax,QWORD PTR [rbp-0x38]
    fd08:	xor    rax,QWORD PTR fs:0x28
    fd11:	jne    1078a <__ctype_b_loc@plt+0xce1a>
    fd17:	lea    rsp,[rbp-0x28]
    fd1b:	mov    rax,r9
    fd1e:	pop    rbx
    fd1f:	pop    r12
    fd21:	pop    r13
    fd23:	pop    r14
    fd25:	pop    r15
    fd27:	pop    rbp
    fd28:	ret    
    fd29:	nop    DWORD PTR [rax+0x0]
    fd30:	mov    r12d,0xc
    fd36:	jmp    f7c5 <__ctype_b_loc@plt+0xbe55>
    fd3b:	nop    DWORD PTR [rax+rax*1+0x0]
    fd40:	mov    rdi,r12
    fd43:	mov    QWORD PTR [rbp-0x3d8],r8
    fd4a:	mov    QWORD PTR [rbp-0x3d0],r9
    fd51:	mov    BYTE PTR [rbp-0x3c8],dl
    fd57:	call   3810 <malloc@plt>
    fd5c:	movzx  edx,BYTE PTR [rbp-0x3c8]
    fd63:	mov    r9,QWORD PTR [rbp-0x3d0]
    fd6a:	test   rax,rax
    fd6d:	mov    r8,QWORD PTR [rbp-0x3d8]
    fd74:	mov    rcx,rax
    fd77:	je     fc80 <__ctype_b_loc@plt+0xc310>
    fd7d:	test   rbx,rbx
    fd80:	je     10598 <__ctype_b_loc@plt+0xcc28>
    fd86:	test   dl,dl
    fd88:	je     10598 <__ctype_b_loc@plt+0xcc28>
    fd8e:	mov    rsi,r9
    fd91:	mov    rdx,rbx
    fd94:	mov    rdi,rax
    fd97:	mov    QWORD PTR [rbp-0x3c8],r8
    fd9e:	call   37c0 <memcpy@plt>
    fda3:	mov    r8,QWORD PTR [rbp-0x3c8]
    fdaa:	mov    r9,rax
    fdad:	jmp    f824 <__ctype_b_loc@plt+0xbeb4>
    fdb2:	nop    WORD PTR [rax+rax*1+0x0]
    fdb8:	mov    rcx,QWORD PTR [rbp-0x3e0]
    fdbf:	lea    rsi,[rcx+0x2]
    fdc3:	mov    BYTE PTR [rcx+0x1],0x27
    fdc7:	mov    QWORD PTR [rbp-0x3c8],rsi
    fdce:	jmp    f8aa <__ctype_b_loc@plt+0xbf3a>
    fdd3:	call   3560 <__errno_location@plt>
    fdd8:	mov    QWORD PTR [rbp-0x3d0],rax
    fddf:	jmp    fcc4 <__ctype_b_loc@plt+0xc354>
    fde4:	nop    DWORD PTR [rax+0x0]
    fde8:	mov    DWORD PTR [rbp-0x3d8],0x0
    fdf2:	jmp    fa4d <__ctype_b_loc@plt+0xc0dd>
    fdf7:	nop    WORD PTR [rax+rax*1+0x0]
    fe00:	xor    r9d,r9d
    fe03:	jmp    fd04 <__ctype_b_loc@plt+0xc394>
    fe08:	mov    rax,QWORD PTR [rcx+0x10]
    fe0c:	mov    rbx,r13
    fe0f:	mov    QWORD PTR [rax],r13
    fe12:	jmp    fc49 <__ctype_b_loc@plt+0xc2d9>
    fe17:	mov    rax,QWORD PTR [rcx+0x10]
    fe1b:	mov    rbx,r13
    fe1e:	mov    DWORD PTR [rax],r13d
    fe21:	jmp    fc49 <__ctype_b_loc@plt+0xc2d9>
    fe26:	mov    rax,QWORD PTR [rcx+0x10]
    fe2a:	mov    rbx,r13
    fe2d:	mov    WORD PTR [rax],r13w
    fe31:	jmp    fc49 <__ctype_b_loc@plt+0xc2d9>
    fe36:	mov    rax,QWORD PTR [rcx+0x10]
    fe3a:	mov    rbx,r13
    fe3d:	mov    BYTE PTR [rax],r13b
    fe40:	jmp    fc49 <__ctype_b_loc@plt+0xc2d9>
    fe45:	nop    DWORD PTR [rax]
    fe48:	mov    rax,QWORD PTR [r14+0x50]
    fe4c:	lea    rdi,[r15+r13*1]
    fe50:	shl    rax,0x5
    fe54:	add    rax,QWORD PTR [rbp-0x3a8]
    fe5b:	mov    r9,QWORD PTR [rax+0x10]
    fe5f:	mov    eax,DWORD PTR [rbp-0x3d8]
    fe65:	cmp    eax,0x1
    fe68:	je     103b8 <__ctype_b_loc@plt+0xca48>
    fe6e:	cmp    eax,0x2
    fe71:	je     103a0 <__ctype_b_loc@plt+0xca30>
    fe77:	sub    rsp,0x8
    fe7b:	push   QWORD PTR [rbp-0x3f0]
    fe81:	mov    r8,QWORD PTR [rbp-0x3e0]
    fe88:	mov    rcx,0xffffffffffffffff
    fe8f:	mov    edx,0x1
    fe94:	xor    eax,eax
    fe96:	mov    QWORD PTR [rbp-0x420],rsi
    fe9d:	call   3500 <__snprintf_chk@plt>
    fea2:	pop    rsi
    fea3:	mov    rsi,QWORD PTR [rbp-0x420]
    feaa:	pop    rdi
    feab:	mov    edx,DWORD PTR [rbp-0x3bc]
    feb1:	test   edx,edx
    feb3:	js     ffe1 <__ctype_b_loc@plt+0xc671>
    feb9:	movsxd rcx,edx
    febc:	cmp    rcx,rsi
    febf:	jae    fecf <__ctype_b_loc@plt+0xc55f>
    fec1:	add    rcx,r15
    fec4:	cmp    BYTE PTR [rcx+r13*1],0x0
    fec9:	jne    3980 <__ctype_b_loc@plt+0x10>
    fecf:	cmp    edx,eax
    fed1:	jge    fedb <__ctype_b_loc@plt+0xc56b>
    fed3:	mov    DWORD PTR [rbp-0x3bc],eax
    fed9:	mov    edx,eax
    fedb:	lea    eax,[rdx+0x1]
    fede:	cmp    rax,rsi
    fee1:	jb     104c0 <__ctype_b_loc@plt+0xcb50>
    fee7:	cmp    rbx,0x7ffffffe
    feee:	ja     104e0 <__ctype_b_loc@plt+0xcb70>
    fef4:	test   r12,r12
    fef7:	js     10350 <__ctype_b_loc@plt+0xc9e0>
    fefd:	lea    eax,[rdx+0x2]
    ff00:	lea    rcx,[r12+r12*1]
    ff04:	add    rax,r13
    ff07:	jb     1035a <__ctype_b_loc@plt+0xc9ea>
    ff0d:	cmp    rcx,rax
    ff10:	cmovae rax,rcx
    ff14:	cmp    r12,rax
    ff17:	jae    fb20 <__ctype_b_loc@plt+0xc1b0>
    ff1d:	cmp    rcx,rax
    ff20:	cmovae rax,rcx
    ff24:	mov    r12,rax
    ff27:	cmp    rax,0xffffffffffffffff
    ff2b:	je     1035a <__ctype_b_loc@plt+0xc9ea>
    ff31:	cmp    r15,QWORD PTR [rbp-0x3f8]
    ff38:	sete   bl
    ff3b:	test   r15,r15
    ff3e:	je     10368 <__ctype_b_loc@plt+0xc9f8>
    ff44:	test   bl,bl
    ff46:	jne    10368 <__ctype_b_loc@plt+0xc9f8>
    ff4c:	mov    rsi,rax
    ff4f:	mov    rdi,r15
    ff52:	call   3850 <realloc@plt>
    ff57:	test   rax,rax
    ff5a:	je     1035a <__ctype_b_loc@plt+0xc9ea>
    ff60:	mov    r15,rax
    ff63:	jmp    fb20 <__ctype_b_loc@plt+0xc1b0>
    ff68:	nop    DWORD PTR [rax+rax*1+0x0]
    ff70:	mov    rax,QWORD PTR [r14+0x50]
    ff74:	lea    rdi,[r15+r13*1]
    ff78:	shl    rax,0x5
    ff7c:	add    rax,QWORD PTR [rbp-0x3a8]
    ff83:	mov    r9d,DWORD PTR [rax+0x10]
    ff87:	mov    eax,DWORD PTR [rbp-0x3d8]
    ff8d:	cmp    eax,0x1
    ff90:	je     10100 <__ctype_b_loc@plt+0xc790>
    ff96:	cmp    eax,0x2
    ff99:	je     10148 <__ctype_b_loc@plt+0xc7d8>
    ff9f:	sub    rsp,0x8
    ffa3:	push   QWORD PTR [rbp-0x3f0]
    ffa9:	mov    r8,QWORD PTR [rbp-0x3e0]
    ffb0:	mov    rcx,0xffffffffffffffff
    ffb7:	mov    edx,0x1
    ffbc:	xor    eax,eax
    ffbe:	mov    QWORD PTR [rbp-0x420],rsi
    ffc5:	call   3500 <__snprintf_chk@plt>
    ffca:	pop    rdx
    ffcb:	mov    edx,DWORD PTR [rbp-0x3bc]
    ffd1:	mov    rsi,QWORD PTR [rbp-0x420]
    ffd8:	pop    rcx
    ffd9:	test   edx,edx
    ffdb:	jns    feb9 <__ctype_b_loc@plt+0xc549>
    ffe1:	mov    rcx,QWORD PTR [rbp-0x3c8]
    ffe8:	cmp    BYTE PTR [rcx+0x1],0x0
    ffec:	jne    103c8 <__ctype_b_loc@plt+0xca58>
    fff2:	test   eax,eax
    fff4:	jns    fed3 <__ctype_b_loc@plt+0xc563>
    fffa:	mov    rax,QWORD PTR [rbp-0x3d0]
   10001:	mov    ebx,DWORD PTR [rax]
   10003:	test   ebx,ebx
   10005:	jne    1001e <__ctype_b_loc@plt+0xc6ae>
   10007:	movzx  eax,BYTE PTR [r14+0x48]
   1000c:	mov    ebx,0x54
   10011:	and    eax,0xffffffef
   10014:	cmp    al,0x63
   10016:	mov    eax,0x16
   1001b:	cmovne ebx,eax
   1001e:	cmp    r15,QWORD PTR [rbp-0x3f8]
   10025:	je     10034 <__ctype_b_loc@plt+0xc6c4>
   10027:	test   r15,r15
   1002a:	je     10034 <__ctype_b_loc@plt+0xc6c4>
   1002c:	mov    rdi,r15
   1002f:	call   3520 <free@plt>
   10034:	mov    rax,QWORD PTR [rbp-0x410]
   1003b:	test   rax,rax
   1003e:	je     10048 <__ctype_b_loc@plt+0xc6d8>
   10040:	mov    rdi,rax
   10043:	call   3520 <free@plt>
   10048:	mov    rdi,QWORD PTR [rbp-0x2b8]
   1004f:	lea    rax,[rbp-0x2a0]
   10056:	cmp    rdi,rax
   10059:	je     10060 <__ctype_b_loc@plt+0xc6f0>
   1005b:	call   3520 <free@plt>
   10060:	mov    rdi,QWORD PTR [rbp-0x3a8]
   10067:	lea    rax,[rbp-0x3a0]
   1006e:	cmp    rdi,rax
   10071:	je     10078 <__ctype_b_loc@plt+0xc708>
   10073:	call   3520 <free@plt>
   10078:	mov    rax,QWORD PTR [rbp-0x3d0]
   1007f:	xor    r9d,r9d
   10082:	mov    DWORD PTR [rax],ebx
   10084:	jmp    fd04 <__ctype_b_loc@plt+0xc394>
   10089:	nop    DWORD PTR [rax+0x0]
   10090:	mov    rax,QWORD PTR [r14+0x50]
   10094:	lea    rdi,[r15+r13*1]
   10098:	shl    rax,0x5
   1009c:	add    rax,QWORD PTR [rbp-0x3a8]
   100a3:	fld    TBYTE PTR [rax+0x10]
   100a6:	mov    eax,DWORD PTR [rbp-0x3d8]
   100ac:	cmp    eax,0x1
   100af:	je     104a8 <__ctype_b_loc@plt+0xcb38>
   100b5:	cmp    eax,0x2
   100b8:	je     10450 <__ctype_b_loc@plt+0xcae0>
   100be:	sub    rsp,0x10
   100c2:	mov    r9,QWORD PTR [rbp-0x3f0]
   100c9:	fstp   TBYTE PTR [rsp]
   100cc:	jmp    fe81 <__ctype_b_loc@plt+0xc511>
   100d1:	nop    DWORD PTR [rax+0x0]
   100d8:	mov    rax,QWORD PTR [r14+0x50]
   100dc:	lea    rdi,[r15+r13*1]
   100e0:	shl    rax,0x5
   100e4:	add    rax,QWORD PTR [rbp-0x3a8]
   100eb:	movsx  r9d,WORD PTR [rax+0x10]
   100f0:	mov    eax,DWORD PTR [rbp-0x3d8]
   100f6:	cmp    eax,0x1
   100f9:	jne    ff96 <__ctype_b_loc@plt+0xc626>
   100ff:	nop
   10100:	push   QWORD PTR [rbp-0x3f0]
   10106:	push   r9
   10108:	mov    r9d,DWORD PTR [rbp-0x3b8]
   1010f:	jmp    ffa9 <__ctype_b_loc@plt+0xc639>
   10114:	nop    DWORD PTR [rax+0x0]
   10118:	mov    rax,QWORD PTR [r14+0x50]
   1011c:	lea    rdi,[r15+r13*1]
   10120:	shl    rax,0x5
   10124:	add    rax,QWORD PTR [rbp-0x3a8]
   1012b:	movzx  r9d,BYTE PTR [rax+0x10]
   10130:	mov    eax,DWORD PTR [rbp-0x3d8]
   10136:	cmp    eax,0x1
   10139:	je     10100 <__ctype_b_loc@plt+0xc790>
   1013b:	cmp    eax,0x2
   1013e:	jne    ff9f <__ctype_b_loc@plt+0xc62f>
   10144:	nop    DWORD PTR [rax+0x0]
   10148:	sub    rsp,0x8
   1014c:	push   QWORD PTR [rbp-0x3f0]
   10152:	push   r9
   10154:	mov    eax,DWORD PTR [rbp-0x3b4]
   1015a:	push   rax
   1015b:	mov    r9d,DWORD PTR [rbp-0x3b8]
   10162:	mov    r8,QWORD PTR [rbp-0x3e0]
   10169:	mov    rcx,0xffffffffffffffff
   10170:	xor    eax,eax
   10172:	mov    edx,0x1
   10177:	mov    QWORD PTR [rbp-0x420],rsi
   1017e:	call   3500 <__snprintf_chk@plt>
   10183:	mov    rsi,QWORD PTR [rbp-0x420]
   1018a:	add    rsp,0x20
   1018e:	jmp    feab <__ctype_b_loc@plt+0xc53b>
   10193:	nop    DWORD PTR [rax+rax*1+0x0]
   10198:	mov    rax,QWORD PTR [r14+0x50]
   1019c:	lea    rdi,[r15+r13*1]
   101a0:	shl    rax,0x5
   101a4:	add    rax,QWORD PTR [rbp-0x3a8]
   101ab:	movsd  xmm0,QWORD PTR [rax+0x10]
   101b0:	mov    eax,DWORD PTR [rbp-0x3d8]
   101b6:	cmp    eax,0x1
   101b9:	je     10440 <__ctype_b_loc@plt+0xcad0>
   101bf:	cmp    eax,0x2
   101c2:	je     103f0 <__ctype_b_loc@plt+0xca80>
   101c8:	mov    r9,QWORD PTR [rbp-0x3f0]
   101cf:	mov    edx,0x1
   101d4:	mov    eax,0x1
   101d9:	mov    r8,QWORD PTR [rbp-0x3e0]
   101e0:	mov    rcx,0xffffffffffffffff
   101e7:	mov    QWORD PTR [rbp-0x420],rsi
   101ee:	call   3500 <__snprintf_chk@plt>
   101f3:	mov    rsi,QWORD PTR [rbp-0x420]
   101fa:	jmp    feab <__ctype_b_loc@plt+0xc53b>
   101ff:	nop
   10200:	mov    rax,QWORD PTR [r14+0x50]
   10204:	lea    rdi,[r15+r13*1]
   10208:	shl    rax,0x5
   1020c:	add    rax,QWORD PTR [rbp-0x3a8]
   10213:	movzx  r9d,WORD PTR [rax+0x10]
   10218:	mov    eax,DWORD PTR [rbp-0x3d8]
   1021e:	cmp    eax,0x1
   10221:	jne    ff96 <__ctype_b_loc@plt+0xc626>
   10227:	jmp    10100 <__ctype_b_loc@plt+0xc790>
   1022c:	nop    DWORD PTR [rax+0x0]
   10230:	mov    rax,QWORD PTR [r14+0x50]
   10234:	lea    rdi,[r15+r13*1]
   10238:	shl    rax,0x5
   1023c:	add    rax,QWORD PTR [rbp-0x3a8]
   10243:	movsx  r9d,BYTE PTR [rax+0x10]
   10248:	mov    eax,DWORD PTR [rbp-0x3d8]
   1024e:	cmp    eax,0x1
   10251:	jne    ff96 <__ctype_b_loc@plt+0xc626>
   10257:	jmp    10100 <__ctype_b_loc@plt+0xc790>
   1025c:	nop    DWORD PTR [rax+0x0]
   10260:	js     fc80 <__ctype_b_loc@plt+0xc310>
   10266:	add    r12,r12
   10269:	cmp    r12,rax
   1026c:	jae    fab2 <__ctype_b_loc@plt+0xc142>
   10272:	cmp    rax,0xffffffffffffffff
   10276:	je     fc80 <__ctype_b_loc@plt+0xc310>
   1027c:	cmp    r9,QWORD PTR [rbp-0x3f8]
   10283:	mov    r12,rax
   10286:	sete   dl
   10289:	test   r9,r9
   1028c:	jne    fac5 <__ctype_b_loc@plt+0xc155>
   10292:	nop    WORD PTR [rax+rax*1+0x0]
   10298:	mov    rdi,r12
   1029b:	mov    QWORD PTR [rbp-0x3e8],r9
   102a2:	mov    BYTE PTR [rbp-0x3d0],dl
   102a8:	call   3810 <malloc@plt>
   102ad:	movzx  edx,BYTE PTR [rbp-0x3d0]
   102b4:	mov    r9,QWORD PTR [rbp-0x3e8]
   102bb:	test   rax,rax
   102be:	mov    r15,rax
   102c1:	je     fc80 <__ctype_b_loc@plt+0xc310>
   102c7:	test   r13,r13
   102ca:	je     faf2 <__ctype_b_loc@plt+0xc182>
   102d0:	test   dl,dl
   102d2:	je     faf2 <__ctype_b_loc@plt+0xc182>
   102d8:	mov    rdx,r13
   102db:	mov    rsi,r9
   102de:	mov    rdi,rax
   102e1:	call   37c0 <memcpy@plt>
   102e6:	jmp    faf2 <__ctype_b_loc@plt+0xc182>
   102eb:	nop    DWORD PTR [rax+rax*1+0x0]
   102f0:	mov    r12d,0xc
   102f6:	jmp    fbf5 <__ctype_b_loc@plt+0xc285>
   102fb:	mov    rax,QWORD PTR [rbp-0x3c8]
   10302:	mov    BYTE PTR [rax],0x4c
   10305:	add    rax,0x1
   10309:	mov    QWORD PTR [rbp-0x3c8],rax
   10310:	jmp    fa0a <__ctype_b_loc@plt+0xc09a>
   10315:	and    edx,0xfff
   1031b:	sub    rsp,rdx
   1031e:	test   rdx,rdx
   10321:	jne    105e3 <__ctype_b_loc@plt+0xcc73>
   10327:	mov    QWORD PTR [rbp-0x410],0x0
   10332:	lea    rax,[rsp+0xf]
   10337:	and    rax,0xfffffffffffffff0
   1033b:	mov    QWORD PTR [rbp-0x3e0],rax
   10342:	jmp    f75b <__ctype_b_loc@plt+0xbdeb>
   10347:	nop    WORD PTR [rax+rax*1+0x0]
   10350:	cmp    r12,0xffffffffffffffff
   10354:	je     fb20 <__ctype_b_loc@plt+0xc1b0>
   1035a:	mov    r9,r15
   1035d:	jmp    fc9a <__ctype_b_loc@plt+0xc32a>
   10362:	nop    WORD PTR [rax+rax*1+0x0]
   10368:	mov    rdi,r12
   1036b:	call   3810 <malloc@plt>
   10370:	mov    rcx,rax
   10373:	test   rax,rax
   10376:	je     1035a <__ctype_b_loc@plt+0xc9ea>
   10378:	test   r13,r13
   1037b:	je     103d8 <__ctype_b_loc@plt+0xca68>
   1037d:	test   bl,bl
   1037f:	je     103d8 <__ctype_b_loc@plt+0xca68>
   10381:	mov    rsi,r15
   10384:	mov    rdx,r13
   10387:	mov    rdi,rax
   1038a:	call   37c0 <memcpy@plt>
   1038f:	mov    r15,rax
   10392:	jmp    fb20 <__ctype_b_loc@plt+0xc1b0>
   10397:	nop    WORD PTR [rax+rax*1+0x0]
   103a0:	sub    rsp,0x8
   103a4:	push   QWORD PTR [rbp-0x3f0]
   103aa:	push   r9
   103ac:	jmp    10154 <__ctype_b_loc@plt+0xc7e4>
   103b1:	nop    DWORD PTR [rax+0x0]
   103b8:	push   QWORD PTR [rbp-0x3f0]
   103be:	push   r9
   103c0:	jmp    10108 <__ctype_b_loc@plt+0xc798>
   103c5:	nop    DWORD PTR [rax]
   103c8:	mov    BYTE PTR [rcx+0x1],0x0
   103cc:	jmp    fb20 <__ctype_b_loc@plt+0xc1b0>
   103d1:	nop    DWORD PTR [rax+0x0]
   103d8:	mov    r15,rcx
   103db:	jmp    fb20 <__ctype_b_loc@plt+0xc1b0>
   103e0:	mov    r15,r9
   103e3:	jmp    faf2 <__ctype_b_loc@plt+0xc182>
   103e8:	nop    DWORD PTR [rax+rax*1+0x0]
   103f0:	mov    eax,DWORD PTR [rbp-0x3b4]
   103f6:	push   QWORD PTR [rbp-0x3f0]
   103fc:	push   rax
   103fd:	mov    r9d,DWORD PTR [rbp-0x3b8]
   10404:	mov    edx,0x1
   10409:	mov    eax,0x1
   1040e:	mov    r8,QWORD PTR [rbp-0x3e0]
   10415:	mov    rcx,0xffffffffffffffff
   1041c:	mov    QWORD PTR [rbp-0x420],rsi
   10423:	call   3500 <__snprintf_chk@plt>
   10428:	pop    r8
   1042a:	mov    rsi,QWORD PTR [rbp-0x420]
   10431:	pop    r9
   10433:	jmp    feab <__ctype_b_loc@plt+0xc53b>
   10438:	nop    DWORD PTR [rax+rax*1+0x0]
   10440:	sub    rsp,0x8
   10444:	push   QWORD PTR [rbp-0x3f0]
   1044a:	jmp    103fd <__ctype_b_loc@plt+0xca8d>
   1044c:	nop    DWORD PTR [rax+0x0]
   10450:	sub    rsp,0x8
   10454:	push   QWORD PTR [rbp-0x3f0]
   1045a:	mov    eax,DWORD PTR [rbp-0x3b4]
   10460:	mov    rcx,0xffffffffffffffff
   10467:	mov    r9d,DWORD PTR [rbp-0x3b8]
   1046e:	mov    edx,0x1
   10473:	mov    QWORD PTR [rbp-0x420],rsi
   1047a:	mov    r8,QWORD PTR [rbp-0x3e0]
   10481:	sub    rsp,0x18
   10485:	fstp   TBYTE PTR [rsp+0x8]
   10489:	push   rax
   1048a:	xor    eax,eax
   1048c:	call   3500 <__snprintf_chk@plt>
   10491:	mov    rsi,QWORD PTR [rbp-0x420]
   10498:	add    rsp,0x30
   1049c:	jmp    feab <__ctype_b_loc@plt+0xc53b>
   104a1:	nop    DWORD PTR [rax+0x0]
   104a8:	sub    rsp,0x8
   104ac:	push   QWORD PTR [rbp-0x3f0]
   104b2:	sub    rsp,0x10
   104b6:	fstp   TBYTE PTR [rsp]
   104b9:	jmp    1015b <__ctype_b_loc@plt+0xc7eb>
   104be:	xchg   ax,ax
   104c0:	movsxd rax,edx
   104c3:	mov    esi,DWORD PTR [rbp-0x414]
   104c9:	mov    r9,r15
   104cc:	lea    rbx,[rax+r13*1]
   104d0:	mov    rax,QWORD PTR [rbp-0x3d0]
   104d7:	mov    DWORD PTR [rax],esi
   104d9:	jmp    fc49 <__ctype_b_loc@plt+0xc2d9>
   104de:	xchg   ax,ax
   104e0:	cmp    r15,QWORD PTR [rbp-0x3f8]
   104e7:	je     104f6 <__ctype_b_loc@plt+0xcb86>
   104e9:	test   r15,r15
   104ec:	je     104f6 <__ctype_b_loc@plt+0xcb86>
   104ee:	mov    rdi,r15
   104f1:	call   3520 <free@plt>
   104f6:	mov    rax,QWORD PTR [rbp-0x410]
   104fd:	test   rax,rax
   10500:	je     1050a <__ctype_b_loc@plt+0xcb9a>
   10502:	mov    rdi,rax
   10505:	call   3520 <free@plt>
   1050a:	mov    rdi,QWORD PTR [rbp-0x2b8]
   10511:	lea    rax,[rbp-0x2a0]
   10518:	cmp    rdi,rax
   1051b:	je     10522 <__ctype_b_loc@plt+0xcbb2>
   1051d:	call   3520 <free@plt>
   10522:	mov    rdi,QWORD PTR [rbp-0x3a8]
   10529:	lea    rax,[rbp-0x3a0]
   10530:	cmp    rdi,rax
   10533:	je     1053a <__ctype_b_loc@plt+0xcbca>
   10535:	call   3520 <free@plt>
   1053a:	mov    rax,QWORD PTR [rbp-0x3d0]
   10541:	xor    r9d,r9d
   10544:	mov    DWORD PTR [rax],0x4b
   1054a:	jmp    fd04 <__ctype_b_loc@plt+0xc394>
   1054f:	nop
   10550:	mov    rdi,r12
   10553:	mov    QWORD PTR [rbp-0x3c8],r9
   1055a:	call   3810 <malloc@plt>
   1055f:	mov    r9,QWORD PTR [rbp-0x3c8]
   10566:	test   rax,rax
   10569:	mov    rcx,rax
   1056c:	je     fc87 <__ctype_b_loc@plt+0xc317>
   10572:	test   r13,r13
   10575:	je     105ee <__ctype_b_loc@plt+0xcc7e>
   10577:	test   r15b,r15b
   1057a:	je     105ee <__ctype_b_loc@plt+0xcc7e>
   1057c:	mov    rsi,r9
   1057f:	mov    rdx,r13
   10582:	mov    rdi,rax
   10585:	call   37c0 <memcpy@plt>
   1058a:	mov    r9,rax
   1058d:	jmp    fc44 <__ctype_b_loc@plt+0xc2d4>
   10592:	nop    WORD PTR [rax+rax*1+0x0]
   10598:	mov    r9,rcx
   1059b:	jmp    f824 <__ctype_b_loc@plt+0xbeb4>
   105a0:	mov    rdi,QWORD PTR [rbp-0x2b8]
   105a7:	lea    rax,[rbp-0x2a0]
   105ae:	cmp    rdi,rax
   105b1:	je     105b8 <__ctype_b_loc@plt+0xcc48>
   105b3:	call   3520 <free@plt>
   105b8:	mov    rdi,QWORD PTR [rbp-0x3a8]
   105bf:	lea    rax,[rbp-0x3a0]
   105c6:	cmp    rdi,rax
   105c9:	je     105d0 <__ctype_b_loc@plt+0xcc60>
   105cb:	call   3520 <free@plt>
   105d0:	call   3560 <__errno_location@plt>
   105d5:	xor    r9d,r9d
   105d8:	mov    DWORD PTR [rax],0x16
   105de:	jmp    fd04 <__ctype_b_loc@plt+0xc394>
   105e3:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   105e9:	jmp    10327 <__ctype_b_loc@plt+0xc9b7>
   105ee:	mov    r9,rcx
   105f1:	jmp    fc44 <__ctype_b_loc@plt+0xc2d4>
   105f6:	mov    r14,r13
   105f9:	add    r14,0x1
   105fd:	jb     1077b <__ctype_b_loc@plt+0xce0b>
   10603:	cmp    r12,r14
   10606:	jae    10661 <__ctype_b_loc@plt+0xccf1>
   10608:	test   r12,r12
   1060b:	jne    1074f <__ctype_b_loc@plt+0xcddf>
   10611:	cmp    r14,0xc
   10615:	ja     10761 <__ctype_b_loc@plt+0xcdf1>
   1061b:	mov    r12d,0xc
   10621:	cmp    r9,QWORD PTR [rbp-0x3f8]
   10628:	sete   bl
   1062b:	test   r9,r9
   1062e:	je     1070e <__ctype_b_loc@plt+0xcd9e>
   10634:	test   bl,bl
   10636:	jne    1070e <__ctype_b_loc@plt+0xcd9e>
   1063c:	mov    rdi,r9
   1063f:	mov    rsi,r12
   10642:	mov    QWORD PTR [rbp-0x3c8],r9
   10649:	call   3850 <realloc@plt>
   1064e:	mov    r9,QWORD PTR [rbp-0x3c8]
   10655:	test   rax,rax
   10658:	je     1078f <__ctype_b_loc@plt+0xce1f>
   1065e:	mov    r9,rax
   10661:	mov    BYTE PTR [r9+r13*1],0x0
   10666:	cmp    r9,QWORD PTR [rbp-0x3f8]
   1066d:	je     10694 <__ctype_b_loc@plt+0xcd24>
   1066f:	cmp    r12,r14
   10672:	jbe    10694 <__ctype_b_loc@plt+0xcd24>
   10674:	mov    rdi,r9
   10677:	mov    rsi,r14
   1067a:	mov    QWORD PTR [rbp-0x3c8],r9
   10681:	call   3850 <realloc@plt>
   10686:	mov    r9,QWORD PTR [rbp-0x3c8]
   1068d:	test   rax,rax
   10690:	cmovne r9,rax
   10694:	mov    rdi,QWORD PTR [rbp-0x410]
   1069b:	test   rdi,rdi
   1069e:	je     106b3 <__ctype_b_loc@plt+0xcd43>
   106a0:	mov    QWORD PTR [rbp-0x3c8],r9
   106a7:	call   3520 <free@plt>
   106ac:	mov    r9,QWORD PTR [rbp-0x3c8]
   106b3:	mov    rdi,QWORD PTR [rbp-0x2b8]
   106ba:	lea    rax,[rbp-0x2a0]
   106c1:	cmp    rdi,rax
   106c4:	je     106d9 <__ctype_b_loc@plt+0xcd69>
   106c6:	mov    QWORD PTR [rbp-0x3c8],r9
   106cd:	call   3520 <free@plt>
   106d2:	mov    r9,QWORD PTR [rbp-0x3c8]
   106d9:	mov    rdi,QWORD PTR [rbp-0x3a8]
   106e0:	lea    rax,[rbp-0x3a0]
   106e7:	cmp    rdi,rax
   106ea:	je     106ff <__ctype_b_loc@plt+0xcd8f>
   106ec:	mov    QWORD PTR [rbp-0x3c8],r9
   106f3:	call   3520 <free@plt>
   106f8:	mov    r9,QWORD PTR [rbp-0x3c8]
   106ff:	mov    rax,QWORD PTR [rbp-0x408]
   10706:	mov    QWORD PTR [rax],r13
   10709:	jmp    fd04 <__ctype_b_loc@plt+0xc394>
   1070e:	mov    rdi,r12
   10711:	mov    QWORD PTR [rbp-0x3c8],r9
   10718:	call   3810 <malloc@plt>
   1071d:	mov    r9,QWORD PTR [rbp-0x3c8]
   10724:	test   rax,rax
   10727:	mov    rcx,rax
   1072a:	je     fc87 <__ctype_b_loc@plt+0xc317>
   10730:	test   r13,r13
   10733:	je     10773 <__ctype_b_loc@plt+0xce03>
   10735:	test   bl,bl
   10737:	je     10773 <__ctype_b_loc@plt+0xce03>
   10739:	mov    rsi,r9
   1073c:	mov    rdx,r13
   1073f:	mov    rdi,rax
   10742:	call   37c0 <memcpy@plt>
   10747:	mov    r9,rax
   1074a:	jmp    10661 <__ctype_b_loc@plt+0xccf1>
   1074f:	js     fc80 <__ctype_b_loc@plt+0xc310>
   10755:	add    r12,r12
   10758:	cmp    r12,r14
   1075b:	jae    10621 <__ctype_b_loc@plt+0xccb1>
   10761:	cmp    r14,0xffffffffffffffff
   10765:	je     fc80 <__ctype_b_loc@plt+0xc310>
   1076b:	mov    r12,r14
   1076e:	jmp    10621 <__ctype_b_loc@plt+0xccb1>
   10773:	mov    r9,rcx
   10776:	jmp    10661 <__ctype_b_loc@plt+0xccf1>
   1077b:	cmp    r12,0xffffffffffffffff
   1077f:	je     10661 <__ctype_b_loc@plt+0xccf1>
   10785:	jmp    fc80 <__ctype_b_loc@plt+0xc310>
   1078a:	call   3680 <__stack_chk_fail@plt>
   1078f:	mov    QWORD PTR [rbp-0x3c8],r9
   10796:	call   3560 <__errno_location@plt>
   1079b:	mov    r9,QWORD PTR [rbp-0x3c8]
   107a2:	mov    QWORD PTR [rbp-0x3d0],rax
   107a9:	jmp    fca8 <__ctype_b_loc@plt+0xc338>
   107ae:	xchg   ax,ax
   107b0:	endbr64 
   107b4:	push   r13
   107b6:	mov    r8,rsi
   107b9:	mov    rcx,rdx
   107bc:	push   r12
   107be:	mov    rdx,r8
   107c1:	mov    r12,rdi
   107c4:	push   rbp
   107c5:	push   rbx
   107c6:	sub    rsp,0x7f8
   107cd:	mov    rax,QWORD PTR fs:0x28
   107d6:	mov    QWORD PTR [rsp+0x7e8],rax
   107de:	xor    eax,eax
   107e0:	lea    r13,[rsp+0x10]
   107e5:	lea    rsi,[rsp+0x8]
   107ea:	mov    QWORD PTR [rsp+0x8],0x7d0
   107f3:	mov    rdi,r13
   107f6:	call   f680 <__ctype_b_loc@plt+0xbd10>
   107fb:	mov    rbx,QWORD PTR [rsp+0x8]
   10800:	test   rax,rax
   10803:	je     10896 <__ctype_b_loc@plt+0xcf26>
   10809:	mov    rcx,r12
   1080c:	mov    rdx,rbx
   1080f:	mov    esi,0x1
   10814:	mov    rdi,rax
   10817:	mov    rbp,rax
   1081a:	call   3920 <fwrite@plt>
   1081f:	cmp    rax,rbx
   10822:	jb     10868 <__ctype_b_loc@plt+0xcef8>
   10824:	cmp    rbp,r13
   10827:	je     10831 <__ctype_b_loc@plt+0xcec1>
   10829:	mov    rdi,rbp
   1082c:	call   3520 <free@plt>
   10831:	cmp    rbx,0x7fffffff
   10838:	ja     1088b <__ctype_b_loc@plt+0xcf1b>
   1083a:	mov    r12d,ebx
   1083d:	mov    rax,QWORD PTR [rsp+0x7e8]
   10845:	xor    rax,QWORD PTR fs:0x28
   1084e:	jne    108a6 <__ctype_b_loc@plt+0xcf36>
   10850:	add    rsp,0x7f8
   10857:	mov    eax,r12d
   1085a:	pop    rbx
   1085b:	pop    rbp
   1085c:	pop    r12
   1085e:	pop    r13
   10860:	ret    
   10861:	nop    DWORD PTR [rax+0x0]
   10868:	mov    r12d,0xffffffff
   1086e:	cmp    rbp,r13
   10871:	je     1083d <__ctype_b_loc@plt+0xcecd>
   10873:	call   3560 <__errno_location@plt>
   10878:	mov    rdi,rbp
   1087b:	mov    r13d,DWORD PTR [rax]
   1087e:	mov    rbx,rax
   10881:	call   3520 <free@plt>
   10886:	mov    DWORD PTR [rbx],r13d
   10889:	jmp    1083d <__ctype_b_loc@plt+0xcecd>
   1088b:	call   3560 <__errno_location@plt>
   10890:	mov    DWORD PTR [rax],0x4b
   10896:	mov    rdi,r12
   10899:	mov    r12d,0xffffffff
   1089f:	call   f5a0 <__ctype_b_loc@plt+0xbc30>
   108a4:	jmp    1083d <__ctype_b_loc@plt+0xcecd>
   108a6:	call   3680 <__stack_chk_fail@plt>
   108ab:	nop    DWORD PTR [rax+rax*1+0x0]
   108b0:	endbr64 
   108b4:	push   r14
   108b6:	push   r13
   108b8:	push   r12
   108ba:	push   rbp
   108bb:	push   rbx
   108bc:	call   3630 <opendir@plt>
   108c1:	mov    r12,rax
   108c4:	test   rax,rax
   108c7:	je     108d6 <__ctype_b_loc@plt+0xcf66>
   108c9:	mov    rdi,rax
   108cc:	call   3780 <dirfd@plt>
   108d1:	cmp    eax,0x2
   108d4:	jbe    108e8 <__ctype_b_loc@plt+0xcf78>
   108d6:	pop    rbx
   108d7:	mov    rax,r12
   108da:	pop    rbp
   108db:	pop    r12
   108dd:	pop    r13
   108df:	pop    r14
   108e1:	ret    
   108e2:	nop    WORD PTR [rax+rax*1+0x0]
   108e8:	mov    edi,eax
   108ea:	mov    edx,0x3
   108ef:	mov    esi,0x406
   108f4:	xor    eax,eax
   108f6:	call   f0f0 <__ctype_b_loc@plt+0xb780>
   108fb:	mov    ebp,eax
   108fd:	call   3560 <__errno_location@plt>
   10902:	mov    rbx,rax
   10905:	test   ebp,ebp
   10907:	jns    10930 <__ctype_b_loc@plt+0xcfc0>
   10909:	mov    r14d,DWORD PTR [rax]
   1090c:	xor    r13d,r13d
   1090f:	mov    rdi,r12
   10912:	mov    r12,r13
   10915:	call   36f0 <closedir@plt>
   1091a:	mov    DWORD PTR [rbx],r14d
   1091d:	mov    rax,r12
   10920:	pop    rbx
   10921:	pop    rbp
   10922:	pop    r12
   10924:	pop    r13
   10926:	pop    r14
   10928:	ret    
   10929:	nop    DWORD PTR [rax+0x0]
   10930:	mov    edi,ebp
   10932:	call   38e0 <fdopendir@plt>
   10937:	mov    r14d,DWORD PTR [rbx]
   1093a:	mov    r13,rax
   1093d:	test   rax,rax
   10940:	jne    1090f <__ctype_b_loc@plt+0xcf9f>
   10942:	mov    edi,ebp
   10944:	call   36d0 <close@plt>
   10949:	jmp    1090f <__ctype_b_loc@plt+0xcf9f>
   1094b:	nop    DWORD PTR [rax+rax*1+0x0]
   10950:	endbr64 
   10954:	mov    rsi,rdi
   10957:	xor    edi,edi
   10959:	jmp    3600 <clock_gettime@plt>
   1095e:	xchg   ax,ax
   10960:	endbr64 
   10964:	sub    rsp,0x28
   10968:	xor    edi,edi
   1096a:	mov    rax,QWORD PTR fs:0x28
   10973:	mov    QWORD PTR [rsp+0x18],rax
   10978:	xor    eax,eax
   1097a:	mov    rsi,rsp
   1097d:	call   3600 <clock_gettime@plt>
   10982:	mov    rax,QWORD PTR [rsp]
   10986:	mov    rdx,QWORD PTR [rsp+0x8]
   1098b:	mov    rcx,QWORD PTR [rsp+0x18]
   10990:	xor    rcx,QWORD PTR fs:0x28
   10999:	jne    109a0 <__ctype_b_loc@plt+0xd030>
   1099b:	add    rsp,0x28
   1099f:	ret    
   109a0:	call   3680 <__stack_chk_fail@plt>
   109a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
   109af:	nop
   109b0:	endbr64 
   109b4:	mov    edx,0x3
   109b9:	xor    esi,esi
   109bb:	xor    eax,eax
   109bd:	jmp    f0f0 <__ctype_b_loc@plt+0xb780>
   109c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
   109cc:	nop    DWORD PTR [rax+0x0]
   109d0:	endbr64 
   109d4:	cmp    QWORD PTR [rsi],0x0
   109d8:	mov    rax,QWORD PTR [rsi+0x8]
   109dc:	je     10a3b <__ctype_b_loc@plt+0xd0cb>
   109de:	xor    ecx,ecx
   109e0:	lea    r8,[rip+0x3789]        # 14170 <__ctype_b_loc@plt+0x10800>
   109e7:	lea    r10,[rip+0x37e2]        # 141d0 <__ctype_b_loc@plt+0x10860>
   109ee:	lea    r9,[rip+0x3773]        # 14168 <__ctype_b_loc@plt+0x107f8>
   109f5:	nop    DWORD PTR [rax]
   109f8:	cmp    DWORD PTR [rax],0x16
   109fb:	ja     10be9 <__ctype_b_loc@plt+0xd279>
   10a01:	mov    edx,DWORD PTR [rax]
   10a03:	movsxd rdx,DWORD PTR [r8+rdx*4]
   10a07:	add    rdx,r8
   10a0a:	notrack jmp rdx
   10a0d:	nop    DWORD PTR [rax]
   10a10:	mov    edx,DWORD PTR [rdi]
   10a12:	cmp    edx,0x2f
   10a15:	ja     10aa0 <__ctype_b_loc@plt+0xd130>
   10a1b:	mov    r11d,edx
   10a1e:	add    edx,0x8
   10a21:	add    r11,QWORD PTR [rdi+0x10]
   10a25:	mov    DWORD PTR [rdi],edx
   10a27:	mov    rdx,QWORD PTR [r11]
   10a2a:	mov    QWORD PTR [rax+0x10],rdx
   10a2e:	add    rcx,0x1
   10a32:	add    rax,0x20
   10a36:	cmp    QWORD PTR [rsi],rcx
   10a39:	ja     109f8 <__ctype_b_loc@plt+0xd088>
   10a3b:	xor    eax,eax
   10a3d:	ret    
   10a3e:	xchg   ax,ax
   10a40:	mov    edx,DWORD PTR [rdi]
   10a42:	cmp    edx,0x2f
   10a45:	ja     10ab8 <__ctype_b_loc@plt+0xd148>
   10a47:	mov    r11d,edx
   10a4a:	add    edx,0x8
   10a4d:	add    r11,QWORD PTR [rdi+0x10]
   10a51:	mov    DWORD PTR [rdi],edx
   10a53:	mov    edx,DWORD PTR [r11]
   10a56:	mov    DWORD PTR [rax+0x10],edx
   10a59:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10a5b:	nop    DWORD PTR [rax+rax*1+0x0]
   10a60:	mov    edx,DWORD PTR [rdi]
   10a62:	cmp    edx,0x2f
   10a65:	ja     10b80 <__ctype_b_loc@plt+0xd210>
   10a6b:	mov    r11d,edx
   10a6e:	add    edx,0x8
   10a71:	add    r11,QWORD PTR [rdi+0x10]
   10a75:	mov    DWORD PTR [rdi],edx
   10a77:	mov    edx,DWORD PTR [r11]
   10a7a:	mov    WORD PTR [rax+0x10],dx
   10a7e:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10a80:	mov    edx,DWORD PTR [rdi]
   10a82:	cmp    edx,0x2f
   10a85:	ja     10b98 <__ctype_b_loc@plt+0xd228>
   10a8b:	mov    r11d,edx
   10a8e:	add    edx,0x8
   10a91:	add    r11,QWORD PTR [rdi+0x10]
   10a95:	mov    DWORD PTR [rdi],edx
   10a97:	mov    edx,DWORD PTR [r11]
   10a9a:	mov    BYTE PTR [rax+0x10],dl
   10a9d:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10a9f:	nop
   10aa0:	mov    r11,QWORD PTR [rdi+0x8]
   10aa4:	lea    rdx,[r11+0x8]
   10aa8:	mov    QWORD PTR [rdi+0x8],rdx
   10aac:	jmp    10a27 <__ctype_b_loc@plt+0xd0b7>
   10ab1:	nop    DWORD PTR [rax+0x0]
   10ab8:	mov    r11,QWORD PTR [rdi+0x8]
   10abc:	lea    rdx,[r11+0x8]
   10ac0:	mov    QWORD PTR [rdi+0x8],rdx
   10ac4:	jmp    10a53 <__ctype_b_loc@plt+0xd0e3>
   10ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10ad0:	mov    edx,DWORD PTR [rdi+0x4]
   10ad3:	cmp    edx,0xaf
   10ad9:	ja     10bc0 <__ctype_b_loc@plt+0xd250>
   10adf:	mov    r11d,edx
   10ae2:	add    edx,0x10
   10ae5:	add    r11,QWORD PTR [rdi+0x10]
   10ae9:	mov    DWORD PTR [rdi+0x4],edx
   10aec:	movsd  xmm0,QWORD PTR [r11]
   10af1:	movsd  QWORD PTR [rax+0x10],xmm0
   10af6:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10afb:	nop    DWORD PTR [rax+rax*1+0x0]
   10b00:	mov    rdx,QWORD PTR [rdi+0x8]
   10b04:	add    rdx,0xf
   10b08:	and    rdx,0xfffffffffffffff0
   10b0c:	lea    r11,[rdx+0x10]
   10b10:	mov    QWORD PTR [rdi+0x8],r11
   10b14:	fld    TBYTE PTR [rdx]
   10b16:	fstp   TBYTE PTR [rax+0x10]
   10b19:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10b1e:	xchg   ax,ax
   10b20:	mov    edx,DWORD PTR [rdi]
   10b22:	cmp    edx,0x2f
   10b25:	ja     10bd8 <__ctype_b_loc@plt+0xd268>
   10b2b:	mov    r11d,edx
   10b2e:	add    edx,0x8
   10b31:	add    r11,QWORD PTR [rdi+0x10]
   10b35:	mov    DWORD PTR [rdi],edx
   10b37:	mov    rdx,QWORD PTR [r11]
   10b3a:	test   rdx,rdx
   10b3d:	cmove  rdx,r10
   10b41:	mov    QWORD PTR [rax+0x10],rdx
   10b45:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10b4a:	nop    WORD PTR [rax+rax*1+0x0]
   10b50:	mov    edx,DWORD PTR [rdi]
   10b52:	cmp    edx,0x2f
   10b55:	ja     10bb0 <__ctype_b_loc@plt+0xd240>
   10b57:	mov    r11d,edx
   10b5a:	add    edx,0x8
   10b5d:	add    r11,QWORD PTR [rdi+0x10]
   10b61:	mov    DWORD PTR [rdi],edx
   10b63:	mov    rdx,QWORD PTR [r11]
   10b66:	test   rdx,rdx
   10b69:	cmove  rdx,r9
   10b6d:	mov    QWORD PTR [rax+0x10],rdx
   10b71:	jmp    10a2e <__ctype_b_loc@plt+0xd0be>
   10b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10b80:	mov    r11,QWORD PTR [rdi+0x8]
   10b84:	lea    rdx,[r11+0x8]
   10b88:	mov    QWORD PTR [rdi+0x8],rdx
   10b8c:	jmp    10a77 <__ctype_b_loc@plt+0xd107>
   10b91:	nop    DWORD PTR [rax+0x0]
   10b98:	mov    r11,QWORD PTR [rdi+0x8]
   10b9c:	lea    rdx,[r11+0x8]
   10ba0:	mov    QWORD PTR [rdi+0x8],rdx
   10ba4:	jmp    10a97 <__ctype_b_loc@plt+0xd127>
   10ba9:	nop    DWORD PTR [rax+0x0]
   10bb0:	mov    r11,QWORD PTR [rdi+0x8]
   10bb4:	lea    rdx,[r11+0x8]
   10bb8:	mov    QWORD PTR [rdi+0x8],rdx
   10bbc:	jmp    10b63 <__ctype_b_loc@plt+0xd1f3>
   10bbe:	xchg   ax,ax
   10bc0:	mov    r11,QWORD PTR [rdi+0x8]
   10bc4:	lea    rdx,[r11+0x8]
   10bc8:	mov    QWORD PTR [rdi+0x8],rdx
   10bcc:	jmp    10aec <__ctype_b_loc@plt+0xd17c>
   10bd1:	nop    DWORD PTR [rax+0x0]
   10bd8:	mov    r11,QWORD PTR [rdi+0x8]
   10bdc:	lea    rdx,[r11+0x8]
   10be0:	mov    QWORD PTR [rdi+0x8],rdx
   10be4:	jmp    10b37 <__ctype_b_loc@plt+0xd1c7>
   10be9:	or     eax,0xffffffff
   10bec:	ret    
   10bed:	nop    DWORD PTR [rax]
   10bf0:	endbr64 
   10bf4:	push   r15
   10bf6:	lea    rcx,[rsi+0x20]
   10bfa:	lea    r11,[rdx+0x10]
   10bfe:	mov    r8,rsi
   10c01:	push   r14
   10c03:	mov    r9d,0x7
   10c09:	mov    r14,rdx
   10c0c:	mov    r10d,0x7
   10c12:	push   r13
   10c14:	xor    r13d,r13d
   10c17:	push   r12
   10c19:	push   rbp
   10c1a:	push   rbx
   10c1b:	sub    rsp,0x58
   10c1f:	mov    QWORD PTR [rsi],0x0
   10c26:	mov    QWORD PTR [rsi+0x8],rcx
   10c2a:	mov    QWORD PTR [rsp+0x20],rcx
   10c2f:	mov    QWORD PTR [rdx],0x0
   10c36:	mov    QWORD PTR [rdx+0x8],r11
   10c3a:	mov    QWORD PTR [rsp+0x10],0x0
   10c43:	mov    QWORD PTR [rsp+0x8],0x0
   10c4c:	mov    QWORD PTR [rsp+0x18],0x0
   10c55:	jmp    10c6b <__ctype_b_loc@plt+0xd2fb>
   10c57:	nop    WORD PTR [rax+rax*1+0x0]
   10c60:	lea    rbp,[rdi+0x1]
   10c64:	cmp    al,0x25
   10c66:	je     10ca3 <__ctype_b_loc@plt+0xd333>
   10c68:	mov    rdi,rbp
   10c6b:	movzx  eax,BYTE PTR [rdi]
   10c6e:	test   al,al
   10c70:	jne    10c60 <__ctype_b_loc@plt+0xd2f0>
   10c72:	lea    rax,[r13+r13*4+0x0]
   10c77:	lea    rax,[r13+rax*2+0x0]
   10c7c:	mov    QWORD PTR [rcx+rax*8],rdi
   10c80:	mov    rax,QWORD PTR [rsp+0x8]
   10c85:	mov    QWORD PTR [r8+0x10],rax
   10c89:	mov    rax,QWORD PTR [rsp+0x10]
   10c8e:	mov    QWORD PTR [r8+0x18],rax
   10c92:	xor    eax,eax
   10c94:	add    rsp,0x58
   10c98:	pop    rbx
   10c99:	pop    rbp
   10c9a:	pop    r12
   10c9c:	pop    r13
   10c9e:	pop    r14
   10ca0:	pop    r15
   10ca2:	ret    
   10ca3:	lea    rax,[r13+r13*4+0x0]
   10ca8:	lea    rax,[r13+rax*2+0x0]
   10cad:	mov    r13,0xffffffffffffffff
   10cb4:	lea    r12,[rcx+rax*8]
   10cb8:	mov    QWORD PTR [r12],rdi
   10cbc:	mov    DWORD PTR [r12+0x10],0x0
   10cc5:	mov    QWORD PTR [r12+0x18],0x0
   10cce:	mov    QWORD PTR [r12+0x20],0x0
   10cd7:	mov    QWORD PTR [r12+0x28],0xffffffffffffffff
   10ce0:	mov    QWORD PTR [r12+0x30],0x0
   10ce9:	mov    QWORD PTR [r12+0x38],0x0
   10cf2:	mov    QWORD PTR [r12+0x40],0xffffffffffffffff
   10cfb:	mov    QWORD PTR [r12+0x50],0xffffffffffffffff
   10d04:	movzx  ebx,BYTE PTR [rdi+0x1]
   10d08:	lea    eax,[rbx-0x30]
   10d0b:	cmp    al,0x9
   10d0d:	ja     10d46 <__ctype_b_loc@plt+0xd3d6>
   10d0f:	jmp    1115d <__ctype_b_loc@plt+0xd7ed>
   10d14:	nop    DWORD PTR [rax+0x0]
   10d18:	cmp    bl,0x2d
   10d1b:	je     10d60 <__ctype_b_loc@plt+0xd3f0>
   10d1d:	cmp    bl,0x2b
   10d20:	je     10d70 <__ctype_b_loc@plt+0xd400>
   10d22:	cmp    bl,0x20
   10d25:	je     10d80 <__ctype_b_loc@plt+0xd410>
   10d27:	cmp    bl,0x23
   10d2a:	je     10d90 <__ctype_b_loc@plt+0xd420>
   10d2c:	cmp    bl,0x30
   10d2f:	je     10da0 <__ctype_b_loc@plt+0xd430>
   10d31:	cmp    bl,0x49
   10d34:	jne    10da8 <__ctype_b_loc@plt+0xd438>
   10d36:	or     DWORD PTR [r12+0x10],0x40
   10d3c:	nop    DWORD PTR [rax+0x0]
   10d40:	movzx  ebx,BYTE PTR [rax]
   10d43:	mov    rbp,rax
   10d46:	lea    rax,[rbp+0x1]
   10d4a:	cmp    bl,0x27
   10d4d:	jne    10d18 <__ctype_b_loc@plt+0xd3a8>
   10d4f:	or     DWORD PTR [r12+0x10],0x1
   10d55:	jmp    10d40 <__ctype_b_loc@plt+0xd3d0>
   10d57:	nop    WORD PTR [rax+rax*1+0x0]
   10d60:	or     DWORD PTR [r12+0x10],0x2
   10d66:	jmp    10d40 <__ctype_b_loc@plt+0xd3d0>
   10d68:	nop    DWORD PTR [rax+rax*1+0x0]
   10d70:	or     DWORD PTR [r12+0x10],0x4
   10d76:	jmp    10d40 <__ctype_b_loc@plt+0xd3d0>
   10d78:	nop    DWORD PTR [rax+rax*1+0x0]
   10d80:	or     DWORD PTR [r12+0x10],0x8
   10d86:	jmp    10d40 <__ctype_b_loc@plt+0xd3d0>
   10d88:	nop    DWORD PTR [rax+rax*1+0x0]
   10d90:	or     DWORD PTR [r12+0x10],0x10
   10d96:	jmp    10d40 <__ctype_b_loc@plt+0xd3d0>
   10d98:	nop    DWORD PTR [rax+rax*1+0x0]
   10da0:	or     DWORD PTR [r12+0x10],0x20
   10da6:	jmp    10d40 <__ctype_b_loc@plt+0xd3d0>
   10da8:	cmp    bl,0x2a
   10dab:	je     10e1d <__ctype_b_loc@plt+0xd4ad>
   10dad:	lea    edx,[rbx-0x30]
   10db0:	cmp    dl,0x9
   10db3:	jbe    1150f <__ctype_b_loc@plt+0xdb9f>
   10db9:	cmp    bl,0x2e
   10dbc:	je     10f4c <__ctype_b_loc@plt+0xd5dc>
   10dc2:	xor    eax,eax
   10dc4:	mov    esi,0x1
   10dc9:	jmp    10e07 <__ctype_b_loc@plt+0xd497>
   10dcb:	nop    DWORD PTR [rax+rax*1+0x0]
   10dd0:	cmp    bl,0x4c
   10dd3:	je     11000 <__ctype_b_loc@plt+0xd690>
   10dd9:	cmp    bl,0x6c
   10ddc:	je     10e00 <__ctype_b_loc@plt+0xd490>
   10dde:	cmp    bl,0x6a
   10de1:	je     10e00 <__ctype_b_loc@plt+0xd490>
   10de3:	mov    edx,ebx
   10de5:	and    edx,0xffffffdf
   10de8:	cmp    dl,0x5a
   10deb:	je     10e00 <__ctype_b_loc@plt+0xd490>
   10ded:	cmp    bl,0x74
   10df0:	jne    11008 <__ctype_b_loc@plt+0xd698>
   10df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10e00:	add    eax,0x8
   10e03:	movzx  ebx,BYTE PTR [rbp+0x0]
   10e07:	add    rbp,0x1
   10e0b:	cmp    bl,0x68
   10e0e:	jne    10dd0 <__ctype_b_loc@plt+0xd460>
   10e10:	mov    ecx,eax
   10e12:	mov    edx,esi
   10e14:	and    ecx,0x1
   10e17:	shl    edx,cl
   10e19:	or     eax,edx
   10e1b:	jmp    10e03 <__ctype_b_loc@plt+0xd493>
   10e1d:	mov    rsi,QWORD PTR [rsp+0x8]
   10e22:	mov    edx,0x1
   10e27:	mov    QWORD PTR [r12+0x18],rbp
   10e2c:	mov    QWORD PTR [r12+0x20],rax
   10e31:	test   rsi,rsi
   10e34:	cmovne rdx,rsi
   10e38:	mov    QWORD PTR [rsp+0x8],rdx
   10e3d:	movsx  edx,BYTE PTR [rbp+0x1]
   10e41:	lea    ecx,[rdx-0x30]
   10e44:	cmp    cl,0x9
   10e47:	jbe    112fd <__ctype_b_loc@plt+0xd98d>
   10e4d:	mov    rsi,QWORD PTR [rsp+0x18]
   10e52:	mov    QWORD PTR [r12+0x28],rsi
   10e57:	lea    rdx,[rsi+0x1]
   10e5b:	cmp    rsi,0xffffffffffffffff
   10e5f:	je     111e7 <__ctype_b_loc@plt+0xd877>
   10e65:	mov    rbx,QWORD PTR [rsp+0x18]
   10e6a:	mov    QWORD PTR [rsp+0x18],rdx
   10e6f:	mov    rbp,rax
   10e72:	mov    rcx,QWORD PTR [r14+0x8]
   10e76:	cmp    r9,rbx
   10e79:	ja     1165c <__ctype_b_loc@plt+0xdcec>
   10e7f:	add    r9,r9
   10e82:	lea    rax,[rbx+0x1]
   10e86:	cmp    r9,rbx
   10e89:	cmovbe r9,rax
   10e8d:	movabs rax,0x7ffffffffffffff
   10e97:	cmp    r9,rax
   10e9a:	ja     1183d <__ctype_b_loc@plt+0xdecd>
   10ea0:	mov    rsi,r9
   10ea3:	shl    rsi,0x5
   10ea7:	cmp    r11,rcx
   10eaa:	je     116e4 <__ctype_b_loc@plt+0xdd74>
   10eb0:	mov    rdi,rcx
   10eb3:	mov    QWORD PTR [rsp+0x40],r8
   10eb8:	mov    QWORD PTR [rsp+0x38],r9
   10ebd:	mov    QWORD PTR [rsp+0x30],r10
   10ec2:	mov    QWORD PTR [rsp+0x28],r11
   10ec7:	call   3850 <realloc@plt>
   10ecc:	mov    rdx,QWORD PTR [r14+0x8]
   10ed0:	mov    r11,QWORD PTR [rsp+0x28]
   10ed5:	test   rax,rax
   10ed8:	mov    r10,QWORD PTR [rsp+0x30]
   10edd:	mov    r9,QWORD PTR [rsp+0x38]
   10ee2:	mov    rcx,rax
   10ee5:	mov    r8,QWORD PTR [rsp+0x40]
   10eea:	je     11972 <__ctype_b_loc@plt+0xe002>
   10ef0:	mov    rax,QWORD PTR [r14]
   10ef3:	cmp    r11,rdx
   10ef6:	je     1195c <__ctype_b_loc@plt+0xdfec>
   10efc:	mov    QWORD PTR [r14+0x8],rcx
   10f00:	cmp    rax,rbx
   10f03:	ja     10f23 <__ctype_b_loc@plt+0xd5b3>
   10f05:	nop    DWORD PTR [rax]
   10f08:	add    rax,0x1
   10f0c:	mov    rdx,rax
   10f0f:	shl    rdx,0x5
   10f13:	mov    DWORD PTR [rcx+rdx*1-0x20],0x0
   10f1b:	cmp    rax,rbx
   10f1e:	jbe    10f08 <__ctype_b_loc@plt+0xd598>
   10f20:	mov    QWORD PTR [r14],rax
   10f23:	shl    rbx,0x5
   10f27:	lea    rax,[rcx+rbx*1]
   10f2b:	mov    edx,DWORD PTR [rax]
   10f2d:	test   edx,edx
   10f2f:	jne    11566 <__ctype_b_loc@plt+0xdbf6>
   10f35:	mov    DWORD PTR [rax],0x5
   10f3b:	movzx  ebx,BYTE PTR [rbp+0x0]
   10f3f:	lea    rax,[rbp+0x1]
   10f43:	cmp    bl,0x2e
   10f46:	jne    10dc2 <__ctype_b_loc@plt+0xd452>
   10f4c:	cmp    BYTE PTR [rbp+0x1],0x2a
   10f50:	mov    QWORD PTR [r12+0x30],rbp
   10f55:	jne    11227 <__ctype_b_loc@plt+0xd8b7>
   10f5b:	mov    rsi,QWORD PTR [rsp+0x10]
   10f60:	mov    eax,0x2
   10f65:	lea    rdx,[rbp+0x2]
   10f69:	mov    QWORD PTR [r12+0x38],rdx
   10f6e:	mov    r15,rdx
   10f71:	cmp    rsi,0x2
   10f75:	cmovae rax,rsi
   10f79:	mov    QWORD PTR [rsp+0x10],rax
   10f7e:	movsx  eax,BYTE PTR [rbp+0x2]
   10f82:	lea    ecx,[rax-0x30]
   10f85:	cmp    cl,0x9
   10f88:	jbe    117b4 <__ctype_b_loc@plt+0xde44>
   10f8e:	mov    rbx,QWORD PTR [r12+0x40]
   10f93:	cmp    rbx,0xffffffffffffffff
   10f97:	je     1178d <__ctype_b_loc@plt+0xde1d>
   10f9d:	mov    rcx,QWORD PTR [r14+0x8]
   10fa1:	cmp    r9,rbx
   10fa4:	jbe    11664 <__ctype_b_loc@plt+0xdcf4>
   10faa:	mov    rax,QWORD PTR [r14]
   10fad:	cmp    rax,rbx
   10fb0:	ja     10fd3 <__ctype_b_loc@plt+0xd663>
   10fb2:	nop    WORD PTR [rax+rax*1+0x0]
   10fb8:	add    rax,0x1
   10fbc:	mov    rdx,rax
   10fbf:	shl    rdx,0x5
   10fc3:	mov    DWORD PTR [rcx+rdx*1-0x20],0x0
   10fcb:	cmp    rax,rbx
   10fce:	jbe    10fb8 <__ctype_b_loc@plt+0xd648>
   10fd0:	mov    QWORD PTR [r14],rax
   10fd3:	mov    rax,rbx
   10fd6:	shl    rax,0x5
   10fda:	add    rax,rcx
   10fdd:	mov    edx,DWORD PTR [rax]
   10fdf:	test   edx,edx
   10fe1:	jne    11647 <__ctype_b_loc@plt+0xdcd7>
   10fe7:	mov    DWORD PTR [rax],0x5
   10fed:	mov    rbp,r15
   10ff0:	movzx  ebx,BYTE PTR [r15]
   10ff4:	jmp    10dc2 <__ctype_b_loc@plt+0xd452>
   10ff9:	nop    DWORD PTR [rax+0x0]
   11000:	or     eax,0x4
   11003:	jmp    10e03 <__ctype_b_loc@plt+0xd493>
   11008:	lea    edx,[rbx-0x25]
   1100b:	cmp    dl,0x53
   1100e:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   11014:	lea    rcx,[rip+0x31d1]        # 141ec <__ctype_b_loc@plt+0x1087c>
   1101b:	movzx  edx,dl
   1101e:	movsxd rdx,DWORD PTR [rcx+rdx*4]
   11022:	add    rdx,rcx
   11025:	notrack jmp rdx
   11028:	mov    r15d,0x16
   1102e:	cmp    eax,0xf
   11031:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   11033:	test   al,0x4
   11035:	jne    11058 <__ctype_b_loc@plt+0xd6e8>
   11037:	mov    r15d,0x15
   1103d:	cmp    eax,0x7
   11040:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   11042:	mov    r15d,0x12
   11048:	test   al,0x2
   1104a:	jne    11058 <__ctype_b_loc@plt+0xd6e8>
   1104c:	and    eax,0x1
   1104f:	mov    r15d,0x14
   11055:	sub    r15d,eax
   11058:	cmp    r13,0xffffffffffffffff
   1105c:	je     114e8 <__ctype_b_loc@plt+0xdb78>
   11062:	mov    QWORD PTR [r12+0x50],r13
   11067:	mov    rcx,QWORD PTR [r14+0x8]
   1106b:	cmp    r9,r13
   1106e:	jbe    11468 <__ctype_b_loc@plt+0xdaf8>
   11074:	mov    rax,QWORD PTR [r14]
   11077:	cmp    rax,r13
   1107a:	ja     1109b <__ctype_b_loc@plt+0xd72b>
   1107c:	nop    DWORD PTR [rax+0x0]
   11080:	add    rax,0x1
   11084:	mov    rdx,rax
   11087:	shl    rdx,0x5
   1108b:	mov    DWORD PTR [rcx+rdx*1-0x20],0x0
   11093:	cmp    rax,r13
   11096:	jbe    11080 <__ctype_b_loc@plt+0xd710>
   11098:	mov    QWORD PTR [r14],rax
   1109b:	shl    r13,0x5
   1109f:	lea    rax,[rcx+r13*1]
   110a3:	mov    edx,DWORD PTR [rax]
   110a5:	test   edx,edx
   110a7:	jne    11456 <__ctype_b_loc@plt+0xdae6>
   110ad:	mov    DWORD PTR [rax],r15d
   110b0:	mov    BYTE PTR [r12+0x48],bl
   110b5:	mov    rax,QWORD PTR [r8]
   110b8:	mov    QWORD PTR [r12+0x8],rbp
   110bd:	lea    r13,[rax+0x1]
   110c1:	mov    QWORD PTR [r8],r13
   110c4:	cmp    r10,r13
   110c7:	jbe    110d2 <__ctype_b_loc@plt+0xd762>
   110c9:	mov    rcx,QWORD PTR [r8+0x8]
   110cd:	jmp    10c68 <__ctype_b_loc@plt+0xd2f8>
   110d2:	test   r10,r10
   110d5:	js     11839 <__ctype_b_loc@plt+0xdec9>
   110db:	movabs rax,0x2e8ba2e8ba2e8ba
   110e5:	lea    rbx,[r10+r10*1]
   110e9:	cmp    rbx,rax
   110ec:	ja     11839 <__ctype_b_loc@plt+0xdec9>
   110f2:	lea    rax,[r10+r10*4]
   110f6:	mov    r12,QWORD PTR [r8+0x8]
   110fa:	mov    QWORD PTR [rsp+0x38],r8
   110ff:	lea    rsi,[r10+rax*2]
   11103:	mov    QWORD PTR [rsp+0x30],r9
   11108:	shl    rsi,0x4
   1110c:	cmp    QWORD PTR [rsp+0x20],r12
   11111:	mov    QWORD PTR [rsp+0x28],r11
   11116:	je     11277 <__ctype_b_loc@plt+0xd907>
   1111c:	mov    rdi,r12
   1111f:	call   3850 <realloc@plt>
   11124:	mov    r11,QWORD PTR [rsp+0x28]
   11129:	mov    r9,QWORD PTR [rsp+0x30]
   1112e:	test   rax,rax
   11131:	mov    r8,QWORD PTR [rsp+0x38]
   11136:	mov    rcx,rax
   11139:	je     11839 <__ctype_b_loc@plt+0xdec9>
   1113f:	mov    r12,QWORD PTR [r8+0x8]
   11143:	mov    r13,QWORD PTR [r8]
   11146:	cmp    QWORD PTR [rsp+0x20],r12
   1114b:	je     1129a <__ctype_b_loc@plt+0xd92a>
   11151:	mov    QWORD PTR [r8+0x8],rcx
   11155:	mov    r10,rbx
   11158:	jmp    10c68 <__ctype_b_loc@plt+0xd2f8>
   1115d:	mov    rax,rbp
   11160:	movzx  edx,BYTE PTR [rax+0x1]
   11164:	add    rax,0x1
   11168:	lea    ecx,[rdx-0x30]
   1116b:	cmp    cl,0x9
   1116e:	jbe    11160 <__ctype_b_loc@plt+0xd7f0>
   11170:	mov    r13,0xffffffffffffffff
   11177:	cmp    dl,0x24
   1117a:	jne    10d46 <__ctype_b_loc@plt+0xd3d6>
   11180:	xor    edx,edx
   11182:	jmp    11195 <__ctype_b_loc@plt+0xd825>
   11184:	lea    esi,[rbx-0x30]
   11187:	add    rbp,0x1
   1118b:	cmp    sil,0x9
   1118f:	ja     1185c <__ctype_b_loc@plt+0xdeec>
   11195:	movabs rsi,0x1999999999999999
   1119f:	movsx  ecx,bl
   111a2:	mov    rax,rbp
   111a5:	sub    ecx,0x30
   111a8:	movsxd rcx,ecx
   111ab:	cmp    rdx,rsi
   111ae:	ja     11850 <__ctype_b_loc@plt+0xdee0>
   111b4:	lea    rdx,[rdx+rdx*4]
   111b8:	add    rdx,rdx
   111bb:	add    rcx,rdx
   111be:	movzx  ebx,BYTE PTR [rbp+0x1]
   111c2:	mov    rdx,rcx
   111c5:	jae    11184 <__ctype_b_loc@plt+0xd814>
   111c7:	lea    eax,[rbx-0x30]
   111ca:	cmp    al,0x9
   111cc:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   111ce:	movsx  ecx,bl
   111d1:	add    rbp,0x1
   111d5:	mov    rdx,0xffffffffffffffff
   111dc:	sub    ecx,0x30
   111df:	mov    rax,rbp
   111e2:	movsxd rcx,ecx
   111e5:	jmp    111bb <__ctype_b_loc@plt+0xd84b>
   111e7:	mov    rcx,QWORD PTR [r14+0x8]
   111eb:	cmp    r11,rcx
   111ee:	je     11202 <__ctype_b_loc@plt+0xd892>
   111f0:	mov    rdi,rcx
   111f3:	mov    QWORD PTR [rsp+0x8],r8
   111f8:	call   3520 <free@plt>
   111fd:	mov    r8,QWORD PTR [rsp+0x8]
   11202:	mov    rdi,QWORD PTR [r8+0x8]
   11206:	cmp    QWORD PTR [rsp+0x20],rdi
   1120b:	je     11212 <__ctype_b_loc@plt+0xd8a2>
   1120d:	call   3520 <free@plt>
   11212:	call   3560 <__errno_location@plt>
   11217:	mov    DWORD PTR [rax],0x16
   1121d:	mov    eax,0xffffffff
   11222:	jmp    10c94 <__ctype_b_loc@plt+0xd324>
   11227:	movzx  esi,BYTE PTR [rbp+0x1]
   1122b:	lea    edx,[rsi-0x30]
   1122e:	cmp    dl,0x9
   11231:	ja     11927 <__ctype_b_loc@plt+0xdfb7>
   11237:	nop    WORD PTR [rax+rax*1+0x0]
   11240:	movzx  esi,BYTE PTR [rax+0x1]
   11244:	add    rax,0x1
   11248:	lea    edx,[rsi-0x30]
   1124b:	cmp    dl,0x9
   1124e:	jbe    11240 <__ctype_b_loc@plt+0xd8d0>
   11250:	mov    rdx,rax
   11253:	sub    rdx,rbp
   11256:	mov    rbp,rax
   11259:	mov    rsi,QWORD PTR [rsp+0x10]
   1125e:	mov    QWORD PTR [r12+0x38],rax
   11263:	movzx  ebx,BYTE PTR [rax]
   11266:	cmp    rsi,rdx
   11269:	cmovae rdx,rsi
   1126d:	mov    QWORD PTR [rsp+0x10],rdx
   11272:	jmp    10dc2 <__ctype_b_loc@plt+0xd452>
   11277:	mov    rdi,rsi
   1127a:	call   3810 <malloc@plt>
   1127f:	mov    r11,QWORD PTR [rsp+0x28]
   11284:	mov    r9,QWORD PTR [rsp+0x30]
   11289:	test   rax,rax
   1128c:	mov    r8,QWORD PTR [rsp+0x38]
   11291:	mov    rcx,rax
   11294:	je     115fd <__ctype_b_loc@plt+0xdc8d>
   1129a:	lea    rax,[r13+r13*4+0x0]
   1129f:	mov    rdi,rcx
   112a2:	mov    rsi,r12
   112a5:	mov    QWORD PTR [rsp+0x38],r8
   112aa:	lea    rdx,[r13+rax*2+0x0]
   112af:	mov    QWORD PTR [rsp+0x30],r9
   112b4:	shl    rdx,0x3
   112b8:	mov    QWORD PTR [rsp+0x28],r11
   112bd:	call   37c0 <memcpy@plt>
   112c2:	mov    r8,QWORD PTR [rsp+0x38]
   112c7:	mov    r9,QWORD PTR [rsp+0x30]
   112cc:	mov    r11,QWORD PTR [rsp+0x28]
   112d1:	mov    rcx,rax
   112d4:	mov    r13,QWORD PTR [r8]
   112d7:	jmp    11151 <__ctype_b_loc@plt+0xd7e1>
   112dc:	mov    r15d,0xc
   112e2:	cmp    eax,0xf
   112e5:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   112eb:	xor    r15d,r15d
   112ee:	test   al,0x4
   112f0:	setne  r15b
   112f4:	add    r15d,0xb
   112f8:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   112fd:	mov    rcx,rax
   11300:	movzx  esi,BYTE PTR [rcx+0x1]
   11304:	add    rcx,0x1
   11308:	lea    edi,[rsi-0x30]
   1130b:	cmp    dil,0x9
   1130f:	jbe    11300 <__ctype_b_loc@plt+0xd990>
   11311:	cmp    sil,0x24
   11315:	jne    10e4d <__ctype_b_loc@plt+0xd4dd>
   1131b:	xor    ecx,ecx
   1131d:	jmp    11330 <__ctype_b_loc@plt+0xd9c0>
   1131f:	lea    esi,[rdx-0x30]
   11322:	add    rax,0x1
   11326:	cmp    sil,0x9
   1132a:	ja     11940 <__ctype_b_loc@plt+0xdfd0>
   11330:	movabs rsi,0x1999999999999999
   1133a:	sub    edx,0x30
   1133d:	mov    rbp,rax
   11340:	movsxd rdx,edx
   11343:	cmp    rcx,rsi
   11346:	ja     11934 <__ctype_b_loc@plt+0xdfc4>
   1134c:	lea    rcx,[rcx+rcx*4]
   11350:	add    rcx,rcx
   11353:	add    rdx,rcx
   11356:	mov    rbx,rdx
   11359:	mov    rcx,rdx
   1135c:	movsx  edx,BYTE PTR [rax+0x1]
   11360:	jae    1131f <__ctype_b_loc@plt+0xd9af>
   11362:	lea    ecx,[rdx-0x30]
   11365:	cmp    cl,0x9
   11368:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   1136e:	add    rax,0x1
   11372:	sub    edx,0x30
   11375:	mov    rcx,0xffffffffffffffff
   1137c:	mov    rbp,rax
   1137f:	movsxd rdx,edx
   11382:	jmp    11353 <__ctype_b_loc@plt+0xd9e3>
   11384:	mov    r15d,0xa
   1138a:	cmp    eax,0xf
   1138d:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   11393:	test   al,0x4
   11395:	jne    11058 <__ctype_b_loc@plt+0xd6e8>
   1139b:	mov    r15d,0x8
   113a1:	cmp    eax,0x7
   113a4:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   113aa:	mov    r15d,0x2
   113b0:	test   al,0x2
   113b2:	jne    11058 <__ctype_b_loc@plt+0xd6e8>
   113b8:	and    eax,0x1
   113bb:	cmp    eax,0x1
   113be:	sbb    r15d,r15d
   113c1:	and    r15d,0x2
   113c5:	add    r15d,0x4
   113c9:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   113ce:	xchg   ax,ax
   113d0:	mov    r15d,0x9
   113d6:	cmp    eax,0xf
   113d9:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   113df:	test   al,0x4
   113e1:	jne    11058 <__ctype_b_loc@plt+0xd6e8>
   113e7:	mov    r15d,0x7
   113ed:	cmp    eax,0x7
   113f0:	jg     11058 <__ctype_b_loc@plt+0xd6e8>
   113f6:	mov    r15d,0x1
   113fc:	test   al,0x2
   113fe:	jne    11058 <__ctype_b_loc@plt+0xd6e8>
   11404:	and    eax,0x1
   11407:	cmp    eax,0x1
   1140a:	sbb    r15d,r15d
   1140d:	and    r15d,0x2
   11411:	add    r15d,0x3
   11415:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   1141a:	nop    WORD PTR [rax+rax*1+0x0]
   11420:	xor    r15d,r15d
   11423:	cmp    eax,0x7
   11426:	setg   r15b
   1142a:	add    r15d,0xd
   1142e:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   11433:	xor    r15d,r15d
   11436:	cmp    eax,0x7
   11439:	setg   r15b
   1143d:	add    r15d,0xf
   11441:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   11446:	mov    r15d,0xe
   1144c:	mov    ebx,0x63
   11451:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   11456:	cmp    edx,r15d
   11459:	je     110b0 <__ctype_b_loc@plt+0xd740>
   1145f:	jmp    111eb <__ctype_b_loc@plt+0xd87b>
   11464:	nop    DWORD PTR [rax+0x0]
   11468:	add    r9,r9
   1146b:	lea    rax,[r13+0x1]
   1146f:	cmp    r9,r13
   11472:	cmovbe r9,rax
   11476:	movabs rax,0x7ffffffffffffff
   11480:	cmp    r9,rax
   11483:	ja     1183d <__ctype_b_loc@plt+0xdecd>
   11489:	mov    rsi,r9
   1148c:	shl    rsi,0x5
   11490:	cmp    r11,rcx
   11493:	je     1157c <__ctype_b_loc@plt+0xdc0c>
   11499:	mov    rdi,rcx
   1149c:	mov    QWORD PTR [rsp+0x40],r8
   114a1:	mov    QWORD PTR [rsp+0x38],r9
   114a6:	mov    QWORD PTR [rsp+0x30],r10
   114ab:	mov    QWORD PTR [rsp+0x28],r11
   114b0:	call   3850 <realloc@plt>
   114b5:	mov    r11,QWORD PTR [rsp+0x28]
   114ba:	mov    r10,QWORD PTR [rsp+0x30]
   114bf:	test   rax,rax
   114c2:	mov    r9,QWORD PTR [rsp+0x38]
   114c7:	mov    r8,QWORD PTR [rsp+0x40]
   114cc:	mov    rcx,rax
   114cf:	je     11839 <__ctype_b_loc@plt+0xdec9>
   114d5:	cmp    r11,QWORD PTR [r14+0x8]
   114d9:	je     1197a <__ctype_b_loc@plt+0xe00a>
   114df:	mov    QWORD PTR [r14+0x8],rcx
   114e3:	jmp    11074 <__ctype_b_loc@plt+0xd704>
   114e8:	mov    rsi,QWORD PTR [rsp+0x18]
   114ed:	mov    QWORD PTR [r12+0x50],rsi
   114f2:	lea    rax,[rsi+0x1]
   114f6:	cmp    rsi,0xffffffffffffffff
   114fa:	je     111e7 <__ctype_b_loc@plt+0xd877>
   11500:	mov    r13,QWORD PTR [rsp+0x18]
   11505:	mov    QWORD PTR [rsp+0x18],rax
   1150a:	jmp    11067 <__ctype_b_loc@plt+0xd6f7>
   1150f:	mov    QWORD PTR [r12+0x18],rbp
   11514:	movzx  esi,BYTE PTR [rbp+0x0]
   11518:	lea    edx,[rsi-0x30]
   1151b:	cmp    dl,0x9
   1151e:	mov    rdx,rbp
   11521:	ja     1153f <__ctype_b_loc@plt+0xdbcf>
   11523:	nop    DWORD PTR [rax+rax*1+0x0]
   11528:	mov    rax,rdx
   1152b:	movzx  esi,BYTE PTR [rdx+0x1]
   1152f:	add    rdx,0x1
   11533:	lea    ecx,[rsi-0x30]
   11536:	cmp    cl,0x9
   11539:	jbe    11528 <__ctype_b_loc@plt+0xdbb8>
   1153b:	add    rax,0x2
   1153f:	mov    rsi,QWORD PTR [rsp+0x8]
   11544:	mov    rcx,rdx
   11547:	mov    QWORD PTR [r12+0x20],rdx
   1154c:	sub    rcx,rbp
   1154f:	movzx  ebx,BYTE PTR [rdx]
   11552:	mov    rbp,rdx
   11555:	cmp    rsi,rcx
   11558:	cmovae rcx,rsi
   1155c:	mov    QWORD PTR [rsp+0x8],rcx
   11561:	jmp    10db9 <__ctype_b_loc@plt+0xd449>
   11566:	cmp    edx,0x5
   11569:	jne    111eb <__ctype_b_loc@plt+0xd87b>
   1156f:	movzx  ebx,BYTE PTR [rbp+0x0]
   11573:	lea    rax,[rbp+0x1]
   11577:	jmp    10db9 <__ctype_b_loc@plt+0xd449>
   1157c:	mov    rdi,rsi
   1157f:	mov    QWORD PTR [rsp+0x48],rcx
   11584:	mov    QWORD PTR [rsp+0x40],r8
   11589:	mov    QWORD PTR [rsp+0x38],r9
   1158e:	mov    QWORD PTR [rsp+0x30],r10
   11593:	mov    QWORD PTR [rsp+0x28],r11
   11598:	call   3810 <malloc@plt>
   1159d:	mov    r11,QWORD PTR [rsp+0x28]
   115a2:	mov    r10,QWORD PTR [rsp+0x30]
   115a7:	test   rax,rax
   115aa:	mov    r9,QWORD PTR [rsp+0x38]
   115af:	mov    r8,QWORD PTR [rsp+0x40]
   115b4:	mov    rdi,rax
   115b7:	mov    rcx,QWORD PTR [rsp+0x48]
   115bc:	je     11618 <__ctype_b_loc@plt+0xdca8>
   115be:	mov    rdx,QWORD PTR [r14]
   115c1:	mov    rsi,rcx
   115c4:	mov    QWORD PTR [rsp+0x40],r8
   115c9:	mov    QWORD PTR [rsp+0x38],r9
   115ce:	shl    rdx,0x5
   115d2:	mov    QWORD PTR [rsp+0x30],r10
   115d7:	mov    QWORD PTR [rsp+0x28],r11
   115dc:	call   37c0 <memcpy@plt>
   115e1:	mov    r8,QWORD PTR [rsp+0x40]
   115e6:	mov    r9,QWORD PTR [rsp+0x38]
   115eb:	mov    r10,QWORD PTR [rsp+0x30]
   115f0:	mov    r11,QWORD PTR [rsp+0x28]
   115f5:	mov    rcx,rax
   115f8:	jmp    114df <__ctype_b_loc@plt+0xdb6f>
   115fd:	mov    rcx,QWORD PTR [r14+0x8]
   11601:	cmp    r11,rcx
   11604:	je     11628 <__ctype_b_loc@plt+0xdcb8>
   11606:	mov    rdi,rcx
   11609:	mov    QWORD PTR [rsp+0x8],r8
   1160e:	call   3520 <free@plt>
   11613:	mov    r8,QWORD PTR [rsp+0x8]
   11618:	mov    rdi,QWORD PTR [r8+0x8]
   1161c:	cmp    QWORD PTR [rsp+0x20],rdi
   11621:	je     11628 <__ctype_b_loc@plt+0xdcb8>
   11623:	call   3520 <free@plt>
   11628:	call   3560 <__errno_location@plt>
   1162d:	mov    DWORD PTR [rax],0xc
   11633:	add    rsp,0x58
   11637:	mov    eax,0xffffffff
   1163c:	pop    rbx
   1163d:	pop    rbp
   1163e:	pop    r12
   11640:	pop    r13
   11642:	pop    r14
   11644:	pop    r15
   11646:	ret    
   11647:	cmp    edx,0x5
   1164a:	jne    111eb <__ctype_b_loc@plt+0xd87b>
   11650:	movzx  ebx,BYTE PTR [r15]
   11654:	mov    rbp,r15
   11657:	jmp    10dc2 <__ctype_b_loc@plt+0xd452>
   1165c:	mov    rax,QWORD PTR [r14]
   1165f:	jmp    10f00 <__ctype_b_loc@plt+0xd590>
   11664:	add    r9,r9
   11667:	lea    rax,[rbx+0x1]
   1166b:	cmp    r9,rbx
   1166e:	cmovbe r9,rax
   11672:	movabs rax,0x7ffffffffffffff
   1167c:	cmp    r9,rax
   1167f:	ja     1183d <__ctype_b_loc@plt+0xdecd>
   11685:	mov    rsi,r9
   11688:	shl    rsi,0x5
   1168c:	cmp    r11,rcx
   1168f:	je     1187a <__ctype_b_loc@plt+0xdf0a>
   11695:	mov    rdi,rcx
   11698:	mov    QWORD PTR [rsp+0x40],r8
   1169d:	mov    QWORD PTR [rsp+0x38],r9
   116a2:	mov    QWORD PTR [rsp+0x30],r10
   116a7:	mov    QWORD PTR [rsp+0x28],r11
   116ac:	call   3850 <realloc@plt>
   116b1:	mov    r11,QWORD PTR [rsp+0x28]
   116b6:	mov    r10,QWORD PTR [rsp+0x30]
   116bb:	test   rax,rax
   116be:	mov    r9,QWORD PTR [rsp+0x38]
   116c3:	mov    r8,QWORD PTR [rsp+0x40]
   116c8:	mov    rcx,rax
   116cb:	je     11839 <__ctype_b_loc@plt+0xdec9>
   116d1:	cmp    r11,QWORD PTR [r14+0x8]
   116d5:	je     11967 <__ctype_b_loc@plt+0xdff7>
   116db:	mov    QWORD PTR [r14+0x8],rcx
   116df:	jmp    10faa <__ctype_b_loc@plt+0xd63a>
   116e4:	mov    rdi,rsi
   116e7:	mov    QWORD PTR [rsp+0x48],rcx
   116ec:	mov    QWORD PTR [rsp+0x40],r8
   116f1:	mov    QWORD PTR [rsp+0x38],r9
   116f6:	mov    QWORD PTR [rsp+0x30],r10
   116fb:	mov    QWORD PTR [rsp+0x28],r11
   11700:	call   3810 <malloc@plt>
   11705:	mov    r11,QWORD PTR [rsp+0x28]
   1170a:	mov    r10,QWORD PTR [rsp+0x30]
   1170f:	test   rax,rax
   11712:	mov    r9,QWORD PTR [rsp+0x38]
   11717:	mov    r8,QWORD PTR [rsp+0x40]
   1171c:	mov    rdi,rax
   1171f:	mov    rcx,QWORD PTR [rsp+0x48]
   11724:	je     11618 <__ctype_b_loc@plt+0xdca8>
   1172a:	mov    rax,QWORD PTR [r14]
   1172d:	shl    rax,0x5
   11731:	mov    rsi,rcx
   11734:	mov    QWORD PTR [rsp+0x40],r8
   11739:	mov    rdx,rax
   1173c:	mov    QWORD PTR [rsp+0x38],r9
   11741:	mov    QWORD PTR [rsp+0x30],r10
   11746:	mov    QWORD PTR [rsp+0x28],r11
   1174b:	call   37c0 <memcpy@plt>
   11750:	mov    r8,QWORD PTR [rsp+0x40]
   11755:	mov    r9,QWORD PTR [rsp+0x38]
   1175a:	mov    rdi,rax
   1175d:	mov    r10,QWORD PTR [rsp+0x30]
   11762:	mov    rax,QWORD PTR [r14]
   11765:	mov    r11,QWORD PTR [rsp+0x28]
   1176a:	mov    rcx,rdi
   1176d:	jmp    10efc <__ctype_b_loc@plt+0xd58c>
   11772:	mov    r15d,0x11
   11778:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   1177d:	mov    r15d,0x10
   11783:	mov    ebx,0x73
   11788:	jmp    11058 <__ctype_b_loc@plt+0xd6e8>
   1178d:	mov    rsi,QWORD PTR [rsp+0x18]
   11792:	mov    QWORD PTR [r12+0x40],rsi
   11797:	lea    rax,[rsi+0x1]
   1179b:	cmp    rsi,0xffffffffffffffff
   1179f:	je     111e7 <__ctype_b_loc@plt+0xd877>
   117a5:	mov    rbx,QWORD PTR [rsp+0x18]
   117aa:	mov    QWORD PTR [rsp+0x18],rax
   117af:	jmp    10f9d <__ctype_b_loc@plt+0xd62d>
   117b4:	mov    rcx,rdx
   117b7:	movzx  esi,BYTE PTR [rcx+0x1]
   117bb:	add    rcx,0x1
   117bf:	lea    edi,[rsi-0x30]
   117c2:	cmp    dil,0x9
   117c6:	jbe    117b7 <__ctype_b_loc@plt+0xde47>
   117c8:	cmp    sil,0x24
   117cc:	jne    10f8e <__ctype_b_loc@plt+0xd61e>
   117d2:	xor    ecx,ecx
   117d4:	jmp    117e7 <__ctype_b_loc@plt+0xde77>
   117d6:	lea    esi,[rax-0x30]
   117d9:	add    rdx,0x1
   117dd:	cmp    sil,0x9
   117e1:	ja     1190b <__ctype_b_loc@plt+0xdf9b>
   117e7:	movabs rsi,0x1999999999999999
   117f1:	sub    eax,0x30
   117f4:	mov    r15,rdx
   117f7:	cdqe   
   117f9:	cmp    rcx,rsi
   117fc:	ja     118ff <__ctype_b_loc@plt+0xdf8f>
   11802:	lea    rcx,[rcx+rcx*4]
   11806:	add    rcx,rcx
   11809:	add    rax,rcx
   1180c:	mov    rbx,rax
   1180f:	mov    rcx,rax
   11812:	movsx  eax,BYTE PTR [rdx+0x1]
   11816:	jae    117d6 <__ctype_b_loc@plt+0xde66>
   11818:	lea    ecx,[rax-0x30]
   1181b:	cmp    cl,0x9
   1181e:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   11824:	add    rdx,0x1
   11828:	sub    eax,0x30
   1182b:	mov    rcx,0xffffffffffffffff
   11832:	mov    r15,rdx
   11835:	cdqe   
   11837:	jmp    11809 <__ctype_b_loc@plt+0xde99>
   11839:	mov    rcx,QWORD PTR [r14+0x8]
   1183d:	cmp    r11,rcx
   11840:	jne    11606 <__ctype_b_loc@plt+0xdc96>
   11846:	jmp    11618 <__ctype_b_loc@plt+0xdca8>
   1184b:	nop    DWORD PTR [rax+rax*1+0x0]
   11850:	mov    rdx,0xffffffffffffffff
   11857:	jmp    111bb <__ctype_b_loc@plt+0xd84b>
   1185c:	mov    r13,rcx
   1185f:	sub    r13,0x1
   11863:	cmp    r13,0xfffffffffffffffd
   11867:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   1186d:	movzx  ebx,BYTE PTR [rax+0x2]
   11871:	lea    rbp,[rax+0x2]
   11875:	jmp    10d46 <__ctype_b_loc@plt+0xd3d6>
   1187a:	mov    rdi,rsi
   1187d:	mov    QWORD PTR [rsp+0x48],rcx
   11882:	mov    QWORD PTR [rsp+0x40],r8
   11887:	mov    QWORD PTR [rsp+0x38],r9
   1188c:	mov    QWORD PTR [rsp+0x30],r10
   11891:	mov    QWORD PTR [rsp+0x28],r11
   11896:	call   3810 <malloc@plt>
   1189b:	mov    r11,QWORD PTR [rsp+0x28]
   118a0:	mov    r10,QWORD PTR [rsp+0x30]
   118a5:	test   rax,rax
   118a8:	mov    r9,QWORD PTR [rsp+0x38]
   118ad:	mov    r8,QWORD PTR [rsp+0x40]
   118b2:	mov    rdi,rax
   118b5:	mov    rcx,QWORD PTR [rsp+0x48]
   118ba:	je     11618 <__ctype_b_loc@plt+0xdca8>
   118c0:	mov    rdx,QWORD PTR [r14]
   118c3:	mov    rsi,rcx
   118c6:	mov    QWORD PTR [rsp+0x40],r8
   118cb:	mov    QWORD PTR [rsp+0x38],r9
   118d0:	shl    rdx,0x5
   118d4:	mov    QWORD PTR [rsp+0x30],r10
   118d9:	mov    QWORD PTR [rsp+0x28],r11
   118de:	call   37c0 <memcpy@plt>
   118e3:	mov    r8,QWORD PTR [rsp+0x40]
   118e8:	mov    r9,QWORD PTR [rsp+0x38]
   118ed:	mov    r10,QWORD PTR [rsp+0x30]
   118f2:	mov    r11,QWORD PTR [rsp+0x28]
   118f7:	mov    rcx,rax
   118fa:	jmp    116db <__ctype_b_loc@plt+0xdd6b>
   118ff:	mov    rcx,0xffffffffffffffff
   11906:	jmp    11809 <__ctype_b_loc@plt+0xde99>
   1190b:	sub    rbx,0x1
   1190f:	cmp    rbx,0xfffffffffffffffd
   11913:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   11919:	mov    QWORD PTR [r12+0x40],rbx
   1191e:	add    r15,0x2
   11922:	jmp    10f9d <__ctype_b_loc@plt+0xd62d>
   11927:	mov    rbp,rax
   1192a:	mov    edx,0x1
   1192f:	jmp    11259 <__ctype_b_loc@plt+0xd8e9>
   11934:	mov    rcx,0xffffffffffffffff
   1193b:	jmp    11353 <__ctype_b_loc@plt+0xd9e3>
   11940:	sub    rbx,0x1
   11944:	cmp    rbx,0xfffffffffffffffd
   11948:	ja     111e7 <__ctype_b_loc@plt+0xd877>
   1194e:	mov    QWORD PTR [r12+0x28],rbx
   11953:	add    rbp,0x2
   11957:	jmp    10e72 <__ctype_b_loc@plt+0xd502>
   1195c:	mov    rdi,rcx
   1195f:	mov    rcx,r11
   11962:	jmp    1172d <__ctype_b_loc@plt+0xddbd>
   11967:	mov    rdi,rax
   1196a:	mov    rcx,r11
   1196d:	jmp    118c0 <__ctype_b_loc@plt+0xdf50>
   11972:	mov    rcx,rdx
   11975:	jmp    1183d <__ctype_b_loc@plt+0xdecd>
   1197a:	mov    rdi,rax
   1197d:	mov    rcx,r11
   11980:	jmp    115be <__ctype_b_loc@plt+0xdc4e>
   11985:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1198f:	nop
   11990:	endbr64 
   11994:	push   r15
   11996:	lea    r15,[rip+0x5cf3]        # 17690 <__ctype_b_loc@plt+0x13d20>
   1199d:	push   r14
   1199f:	mov    r14,rdx
   119a2:	push   r13
   119a4:	mov    r13,rsi
   119a7:	push   r12
   119a9:	mov    r12d,edi
   119ac:	push   rbp
   119ad:	lea    rbp,[rip+0x5ce4]        # 17698 <__ctype_b_loc@plt+0x13d28>
   119b4:	push   rbx
   119b5:	sub    rbp,r15
   119b8:	sub    rsp,0x8
   119bc:	call   3000 <__cxa_finalize@plt-0x4d0>
   119c1:	sar    rbp,0x3
   119c5:	je     119e6 <__ctype_b_loc@plt+0xe076>
   119c7:	xor    ebx,ebx
   119c9:	nop    DWORD PTR [rax+0x0]
   119d0:	mov    rdx,r14
   119d3:	mov    rsi,r13
   119d6:	mov    edi,r12d
   119d9:	call   QWORD PTR [r15+rbx*8]
   119dd:	add    rbx,0x1
   119e1:	cmp    rbp,rbx
   119e4:	jne    119d0 <__ctype_b_loc@plt+0xe060>
   119e6:	add    rsp,0x8
   119ea:	pop    rbx
   119eb:	pop    rbp
   119ec:	pop    r12
   119ee:	pop    r13
   119f0:	pop    r14
   119f2:	pop    r15
   119f4:	ret    
   119f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   11a00:	endbr64 
   11a04:	ret    

Disassembly of section .fini:

0000000000011a08 <.fini>:
   11a08:	endbr64 
   11a0c:	sub    rsp,0x8
   11a10:	add    rsp,0x8
   11a14:	ret    
